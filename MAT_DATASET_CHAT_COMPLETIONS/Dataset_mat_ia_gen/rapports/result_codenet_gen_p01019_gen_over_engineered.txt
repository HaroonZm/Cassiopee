================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Dict, Set
from collections import deque
import sys

# Abstract Point class to encapsulate coordinate operations
class Point:
    def __init__(self, x: int, y: int):
        self.x = x
        self.y = y

    def __eq__(self, other):
        return isinstance(other, Point) and self.x == other.x and self.y == other.y

    def __hash__(self):
        return hash((self.x, self.y))

    def neighbors_4(self) -> List['Point']:
        return [
            Point(self.x+1, self.y),
            Point(self.x-1, self.y),
            Point(self.x, self.y+1),
            Point(self.x, self.y-1)
        ]


# Grid class for representation of the paper and operations on it
class Grid:
    def __init__(self, width: int, height: int):
        self.width = width
        self.height = height
        self.cells = [[False]*width for _ in range(height)]

    def mark_line(self, p1: Point, p2: Point):
        # line is always horizontal or vertical or a point
        if p1.x == p2.x:
            x = p1.x
            y_start = min(p1.y, p2.y)
            y_end = max(p1.y, p2.y)
            for y in range(y_start, y_end+1):
                self.cells[y][x] = True
        elif p1.y == p2.y:
            y = p1.y
            x_start = min(p1.x, p2.x)
            x_end = max(p1.x, p2.x)
            for x in range(x_start, x_end+1):
                self.cells[y][x] = True
        else:
            # According to the spec, this should never happen.
            pass

    def is_marked(self, p: Point) -> bool:
        if 0 <= p.y < self.height and 0 <= p.x < self.width:
            return self.cells[p.y][p.x]
        return False


# Abstract Character class to implement character traits and recognition interface
class Character:
    # character grid patterns to be overridden by subclasses
    pattern: List[str]
    char_repr: str

    # dimensions of pattern
    height: int
    width: int

    def __init__(self, occupied_points: Set[Point]):
        # occupied_points: all points painted for this character on the grid
        self.occupied_points = occupied_points
        self.bounding_box = self.calc_bounding_box()

    def calc_bounding_box(self) -> Tuple[int, int, int, int]:
        # returns (min_x, min_y, max_x, max_y)
        xs = [p.x for p in self.occupied_points]
        ys = [p.y for p in self.occupied_points]
        return min(xs), min(ys), max(xs), max(ys)

    def width(self) -> int:
        min_x, _, max_x, _ = self.bounding_box
        return max_x - min_x + 1

    def height(self) -> int:
        _, min_y, _, max_y = self.bounding_box
        return max_y - min_y + 1

    @staticmethod
    def match_pattern(points: Set[Point], min_x: int, min_y: int, max_x: int, max_y: int,
                      pattern: List[str]) -> bool:
        # pattern is list of strings of '1' or '0'
        # check if points match pattern exactly in bounding box
        ph = len(pattern)
        pw = len(pattern[0])
        if (max_x - min_x + 1) != pw or (max_y - min_y + 1) != ph:
            return False
        for dy in range(ph):
            for dx in range(pw):
                p = Point(min_x + dx, min_y + dy)
                should_be_black = (pattern[dy][dx] == '1')
                actual_black = (p in points)
                if should_be_black != actual_black:
                    return False
        return True


# Concrete character classes for each symbol. Patterns are carefully designed to match described characters.
# Because problem states characters are always drawn as given, no variations.
class Digit0(Character):
    pattern = [
        "111",
        "101",
        "101",
        "101",
        "111"
    ]
    char_repr = '0'

    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)


class Digit1(Character):
    pattern = [
        "010",
        "110",
        "010",
        "010",
        "111"
    ]
    char_repr = '1'

    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)


class Digit2(Character):
    pattern = [
        "111",
        "001",
        "111",
        "100",
        "111"
    ]
    char_repr = '2'

    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)

class Digit3(Character):
    pattern = [
        "111",
        "001",
        "111",
        "001",
        "111"
    ]
    char_repr = '3'

    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)

class Digit4(Character):
    pattern = [
        "101",
        "101",
        "111",
        "001",
        "001"
    ]
    char_repr = '4'

    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)


class Digit5(Character):
    pattern = [
        "111",
        "100",
        "111",
        "001",
        "111"
    ]
    char_repr = '5'

    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)

class Digit6(Character):
    pattern = [
        "111",
        "100",
        "111",
        "101",
        "111"
    ]
    char_repr = '6'
    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)


class Digit7(Character):
    pattern = [
        "111",
        "001",
        "010",
        "100",
        "100"
    ]
    char_repr = '7'
    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)

class Digit8(Character):
    pattern = [
        "111",
        "101",
        "111",
        "101",
        "111"
    ]
    char_repr = '8'
    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)

class Digit9(Character):
    pattern = [
        "111",
        "101",
        "111",
        "001",
        "111"
    ]
    char_repr = '9'
    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)


# Plus sign: Horizontal line middle + vertical line middle
class Plus(Character):
    pattern = [
        "010",
        "010",
        "111",
        "010",
        "010"
    ]
    char_repr = '+'

    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        # The plus sign is a 5x3 pattern, with 3 in middle row, and middle column vertical line
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)


# Minus sign: a horizontal line at center row
class Minus(Character):
    pattern = [
        "000",
        "000",
        "111",
        "000",
        "000"
    ]
    char_repr = '-'

    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)


# Dot (multiplication symbol '・'): a single dot (or small square) in the middle
class Dot(Character):
    pattern = [
        "000",
        "010",
        "000"
    ]
    char_repr = '・'

    @classmethod
    def try_match(cls, points: Set[Point]) -> bool:
        # a small 3x3 with only center is black method
        if not points:
            return False
        min_x = min(p.x for p in points)
        min_y = min(p.y for p in points)
        max_x = max(p.x for p in points)
        max_y = max(p.y for p in points)
        # dot must be 3x3 bounding box size
        if (max_x - min_x +1) != 3 or (max_y - min_y +1)!=3:
            return False
        return cls.match_pattern(points, min_x, min_y, max_x, max_y, cls.pattern)


# Factory that tries to identify character from points by trying all known characters
class CharacterFactory:
    char_classes = [
        Digit0, Digit1, Digit2, Digit3, Digit4, Digit5, Digit6, Digit7, Digit8, Digit9,
        Plus, Minus, Dot
    ]

    @classmethod
    def identify(cls, points: Set[Point]) -> str:
        for char_cls in cls.char_classes:
            if char_cls.try_match(points):
                return char_cls.char_repr
        # If fail to identify, raise error (should not happen)
        raise ValueError(f"Unknown character pattern with points: {points}")


# Expression class for storing tokenized expression and evaluation
class Expression:
    def __init__(self, tokens: List[str]):
        self.tokens = tokens

    def __str__(self):
        return ''.join(self.tokens)

    def evaluate(self) -> int:
        # parse and calculate expression with given + - and ・ operators
        # operator precedence:  ・(mul) > + > -
        # We implement a proper parser with precedence

        def precedence(op: str) -> int:
            if op == '・':
                return 2
            elif op == '+' or op == '-':
                return 1
            else:
                return 0

        def apply_op(a: int, b: int, op: str) -> int:
            if op == '+':
                return a + b
            elif op == '-':
                return a - b
            elif op == '・':
                return a * b
            else:
                raise ValueError(f'Invalid operator {op}')

        # Shunting yard algorithm to convert to Reverse Polish Notation (RPN)
        output_queue = []
        operator_stack = []

        # token iterator and buffer for multi-digit numbers
        i = 0
        n = len(self.tokens)

        while i < n:
            tok = self.tokens[i]
            if tok.isdigit():
                # accumulate consecutive digits to make number
                num_str = tok
                i += 1
                while i < n and self.tokens[i].isdigit():
                    num_str += self.tokens[i]
                    i += 1
                output_queue.append(int(num_str))
                continue
            elif tok in ('+', '-', '・'):
                while operator_stack and precedence(operator_stack[-1]) >= precedence(tok):
                    op = operator_stack.pop()
                    b = output_queue.pop()
                    a = output_queue.pop()
                    output_queue.append(apply_op(a, b, op))
                operator_stack.append(tok)
            else:
                raise ValueError(f"Unknown token {tok}")
            i += 1

        while operator_stack:
            op = operator_stack.pop()
            b = output_queue.pop()
            a = output_queue.pop()
            output_queue.append(apply_op(a, b, op))

        return output_queue[0]


# Main processing class handling input, detection, parsing and evaluation
class CheatCaseSolver:
    def __init__(self, line_segments: List[Tuple[int, int, int, int]]):
        self.line_segments = line_segments
        self.grid = Grid(201, 201)  # specs max 0..200
        self.visited = [[False]*201 for _ in range(201)]

    def build_grid(self):
        for (x1, y1, x2, y2) in self.line_segments:
            self.grid.mark_line(Point(x1, y1), Point(x2, y2))

    def find_char_regions(self) -> List[Set[Point]]:
        # BFS to find connected components of marked cells
        regions = []
        for y in range(self.grid.height):
            for x in range(self.grid.width):
                if self.grid.cells[y][x] and not self.visited[y][x]:
                    region = self.bfs(Point(x,y))
                    regions.append(region)
        return regions

    def bfs(self, start: Point) -> Set[Point]:
        q = deque([start])
        region = set()
        self.visited[start.y][start.x] = True

        while q:
            p = q.popleft()
            region.add(p)

            for n in p.neighbors_4():
                if (0 <= n.x < self.grid.width and 0 <= n.y < self.grid.height
                    and self.grid.cells[n.y][n.x]
                    and not self.visited[n.y][n.x]):
                    self.visited[n.y][n.x] = True
                    q.append(n)
        return region

    def identify_characters(self, regions: List[Set[Point]]) -> List[Tuple[int, str]]:
        # Each region corresponds to a character.
        # The position to sort on is the minimal x of region (smallest X in region)
        identified = []
        for region in regions:
            min_x = min(p.x for p in region)
            char = CharacterFactory.identify(region)
            identified.append((min_x, char))
        # sort by position x ascending
        identified.sort(key=lambda x: x[0])
        return identified

    def parse_expression(self, char_list: List[str]) -> List[str]:
        # Simply return the list of characters as tokens.
        # The problem states the characters are properly formed expressions.
        return char_list

    def solve(self) -> int:
        self.build_grid()
        regions = self.find_char_regions()
        identified = self.identify_characters(regions)
        tokens = [c for (_, c) in identified]
        expr = Expression(tokens)
        return expr.evaluate()


def main():
    input = sys.stdin.readline
    N = int(input())
    segs = []
    for _ in range(N):
        x1,y1,x2,y2 = map(int, input().split())
        segs.append((x1,y1,x2,y2))
    solver = CheatCaseSolver(segs)
    print(solver.solve())


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.01398320309817791
    2. ' Any' → logprob: -5.013983249664307
    3. 'List' → logprob: -5.388983249664307
    4. ' Optional' → logprob: -6.513983249664307
    5. ' Union' → logprob: -7.638983249664307
    6. 'Any' → logprob: -7.763983249664307
    7. ' Generator' → logprob: -8.763982772827148
    8. 'Optional' → logprob: -10.388982772827148
    9. ' Iterable' → logprob: -10.513982772827148
    10. ' ' → logprob: -10.888982772827148

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6117462515830994
    2. 'def' → logprob: -1.3617463111877441
    3. '<|end|>' → logprob: -2.986746311187744
    4. '
' → logprob: -3.611746311187744
    5. '[' → logprob: -3.736746311187744
    6. ',' → logprob: -3.861746311187744
    7. '\' → logprob: -3.986746311187744
    8. '\n' → logprob: -3.986746311187744
    9. 'import' → logprob: -4.611746311187744
    10. 'a' → logprob: -5.361746311187744

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.40772536396980286
    2. 'Optional' → logprob: -1.1577253341674805
    3. ' Dict' → logprob: -4.7827253341674805
    4. 'Dict' → logprob: -4.9077253341674805
    5. 'Tuple' → logprob: -5.7827253341674805
    6. ' Tuple' → logprob: -7.0327253341674805
    7. ' Union' → logprob: -7.4077253341674805
    8. 'Union' → logprob: -9.28272533416748
    9. 'Iterable' → logprob: -10.03272533416748
    10. 'Any' → logprob: -10.53272533416748

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23429885506629944
    2. '```' → logprob: -1.984298825263977
    3. ',' → logprob: -4.1092987060546875
    4. '\n' → logprob: -4.6092987060546875
    5. 'import' → logprob: -4.8592987060546875
    6. '
' → logprob: -5.1092987060546875
    7. '\' → logprob: -5.2342987060546875
    8. '`' → logprob: -5.3592987060546875
    9. '[' → logprob: -5.7342987060546875
    10. 'a' → logprob: -5.9842987060546875

Token 7: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.3595903813838959
    2. 'Dict' → logprob: -1.3595904111862183
    3. ' Union' → logprob: -4.359590530395508
    4. ' Optional' → logprob: -4.734590530395508
    5. 'Optional' → logprob: -4.984590530395508
    6. 'Set' → logprob: -5.609590530395508
    7. 'Union' → logprob: -5.734590530395508
    8. ' Callable' → logprob: -5.734590530395508
    9. 'Iterable' → logprob: -6.609590530395508
    10. 'Any' → logprob: -6.859590530395508

Token 8: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5953937768936157
    2. ',' → logprob: -1.4703937768936157
    3. '```' → logprob: -2.970393657684326
    4. ':' → logprob: -3.470393657684326
    5. 'import' → logprob: -3.595393657684326
    6. '\' → logprob: -3.845393657684326
    7. '(' → logprob: -3.970393657684326
    8. 'a' → logprob: -4.095393657684326
    9. '<|end|>' → logprob: -4.220393657684326
    10. '\n' → logprob: -4.345393657684326

Token 9: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.8402365446090698
    2. ' Union' → logprob: -1.7152365446090698
    3. 'Any' → logprob: -1.8402365446090698
    4. 'Union' → logprob: -2.0902366638183594
    5. ' Set' → logprob: -3.3402366638183594
    6. 'Optional' → logprob: -3.9652366638183594
    7. ' Any' → logprob: -3.9652366638183594
    8. ' Optional' → logprob: -4.590236663818359
    9. 'Iterable' → logprob: -4.590236663818359
    10. ' ' → logprob: -5.840236663818359

Token 10: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9704340696334839
    2. '[' → logprob: -1.5954340696334839
    3. ',' → logprob: -2.2204341888427734
    4. ':' → logprob: -2.5954341888427734
    5. 'a' → logprob: -2.7204341888427734
    6. '```' → logprob: -3.0954341888427734
    7. 'def' → logprob: -3.3454341888427734
    8. ' ' → logprob: -3.4704341888427734
    9. '\[' → logprob: -4.595434188842773
    10. '\' → logprob: -4.845434188842773

Token 11: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4919381141662598
    2. '\n' → logprob: -1.7419381141662598
    3. '<|end|>' → logprob: -1.7419381141662598
    4. '```' → logprob: -2.2419381141662598
    5. 'import' → logprob: -2.4919381141662598
    6. 'a' → logprob: -2.6169381141662598
    7. 'def' → logprob: -2.8669381141662598
    8. '\' → logprob: -3.9919381141662598
    9. ':' → logprob: -4.49193811416626
    10. '[' → logprob: -4.61693811416626

Token 12: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.061299119144678116
    2. 'collections' → logprob: -3.1862990856170654
    3. ' typing' → logprob: -4.0612993240356445
    4. ' dat' → logprob: -7.8112993240356445
    5. ' math' → logprob: -8.936299324035645
    6. ' sys' → logprob: -9.186299324035645
    7. 'typing' → logprob: -9.436299324035645
    8. ' itertools' → logprob: -9.811299324035645
    9. ' datetime' → logprob: -10.061299324035645
    10. ' pandas' → logprob: -11.311299324035645

Token 13: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.00864080898463726
    2. ' import' → logprob: -4.758640766143799
    3. '.' → logprob: -11.758641242980957
    4. '	import' → logprob: -11.883641242980957
    5. '.import' → logprob: -13.008641242980957
    6. 'from' → logprob: -13.008641242980957
    7. '_import' → logprob: -13.508641242980957
    8. '```' → logprob: -13.883641242980957
    9. 'abc' → logprob: -14.258641242980957
    10. 'Import' → logprob: -14.508641242980957

Token 14: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.013049047440290451
    2. ' abc' → logprob: -4.638049125671387
    3. 'default' → logprob: -6.638049125671387
    4. ' import' → logprob: -6.888049125671387
    5. 'abc' → logprob: -7.888049125671387
    6. ' Counter' → logprob: -8.263049125671387
    7. 'deque' → logprob: -9.513049125671387
    8. ' named' → logprob: -9.763049125671387
    9. 'import' → logprob: -9.763049125671387
    10. ' default' → logprob: -10.013049125671387

Token 15: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1404401063919067
    2. '
' → logprob: -1.3904401063919067
    3. '\n' → logprob: -1.3904401063919067
    4. '

' → logprob: -2.515439987182617
    5. 'import' → logprob: -3.765439987182617
    6. '```' → logprob: -3.890439987182617
    7. 'def' → logprob: -4.140439987182617
    8. '' → logprob: -4.640439987182617
    9. 'd' → logprob: -5.265439987182617
    10. 'newline' → logprob: -5.640439987182617

Token 16: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7929369211196899
    2. '```' → logprob: -1.66793692111969
    3. 'import' → logprob: -2.4179368019104004
    4. '

' → logprob: -2.6679368019104004
    5. 'class' → logprob: -2.7929368019104004
    6. '\n' → logprob: -3.0429368019104004
    7. 'def' → logprob: -3.4179368019104004
    8. '' → logprob: -4.4179368019104
    9. '\' → logprob: -4.4179368019104
    10. 'd' → logprob: -4.5429368019104

Token 17: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7604855895042419
    2. ' ' → logprob: -1.3854856491088867
    3. ' collections' → logprob: -1.5104856491088867
    4. ' os' → logprob: -3.7604856491088867
    5. ' itertools' → logprob: -3.7604856491088867
    6. ' math' → logprob: -5.510485649108887
    7. ' typing' → logprob: -5.760485649108887
    8. ' re' → logprob: -6.135485649108887
    9. ' heap' → logprob: -6.635485649108887
    10. ' functools' → logprob: -6.760485649108887

Token 18: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6212324500083923
    2. '\n' → logprob: -1.371232509613037
    3. '

' → logprob: -2.371232509613037
    4. '```' → logprob: -2.621232509613037
    5. '<|end|>' → logprob: -4.496232509613037
    6. '\' → logprob: -4.496232509613037
    7. 'import' → logprob: -4.746232509613037
    8. '<|end|>' → logprob: -5.871232509613037
    9. 'newline' → logprob: -6.621232509613037
    10. 'def' → logprob: -6.871232509613037

Token 19: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4823963940143585
    2. 'def' → logprob: -0.9823963642120361
    3. 'class' → logprob: -5.982396602630615
    4. 'de' → logprob: -6.232396602630615
    5. '\' → logprob: -6.482396602630615
    6. '```' → logprob: -7.982396602630615
    7. '' → logprob: -8.107396125793457
    8. '#' → logprob: -8.107396125793457
    9. 'n' → logprob: -8.232396125793457
    10. '
' → logprob: -8.482396125793457

Token 20: ' Abstract' (ID: 17413)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029950762167572975
    2. 'def' → logprob: -4.6549506187438965
    3. '#' → logprob: -5.0299506187438965
    4. 'class' → logprob: -5.4049506187438965
    5. ' class' → logprob: -6.0299506187438965
    6. ' 
' → logprob: -6.2799506187438965
    7. 'd' → logprob: -6.6549506187438965
    8. ' def' → logprob: -7.2799506187438965
    9. ' #' → logprob: -7.7799506187438965
    10. 'de' → logprob: -8.154951095581055

Token 21: ' Point' (ID: 9971)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7165117859840393
    2. ' class' → logprob: -1.5915117263793945
    3. ' ' → logprob: -2.0915117263793945
    4. 'Class' → logprob: -2.7165117263793945
    5. 'Base' → logprob: -2.7165117263793945
    6. 'C' → logprob: -3.7165117263793945
    7. '
' → logprob: -4.8415117263793945
    8. 'B' → logprob: -5.0915117263793945
    9. 'A' → logprob: -5.7165117263793945
    10. '  
' → logprob: -6.2165117263793945

Token 22: ' class' (ID: 744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26949000358581543
    2. ':' → logprob: -1.5194900035858154
    3. 'class' → logprob: -4.8944902420043945
    4. '(
' → logprob: -6.1444902420043945
    5. 'C' → logprob: -6.2694902420043945
    6. ':
' → logprob: -6.3944902420043945
    7. 's' → logprob: -7.1444902420043945
    8. '
' → logprob: -7.3944902420043945
    9. ',' → logprob: -7.6444902420043945
    10. '.' → logprob: -7.8944902420043945

Token 23: ' to' (ID: 316)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003834279254078865
    2. ' class' → logprob: -6.128834247589111
    3. '```' → logprob: -6.753834247589111
    4. '
' → logprob: -8.62883472442627
    5. '<|end|>' → logprob: -9.12883472442627
    6. '<class' → logprob: -9.87883472442627
    7. ':' → logprob: -10.00383472442627
    8. '(class' → logprob: -11.12883472442627
    9. '\n' → logprob: -11.37883472442627
    10. '"class' → logprob: -11.62883472442627

Token 24: ' encaps' (ID: 79272)
  Prédit: ' represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' represent' → logprob: -0.01337680034339428
    2. 'represent' → logprob: -4.888376712799072
    3. ' provide' → logprob: -5.763376712799072
    4. ' define' → logprob: -7.013376712799072
    5. 'class' → logprob: -7.638376712799072
    6. ' describe' → logprob: -7.763376712799072
    7. ' represents' → logprob: -8.13837718963623
    8. 'provide' → logprob: -9.38837718963623
    9. 'define' → logprob: -9.51337718963623
    10. ':' → logprob: -10.01337718963623

Token 25: 'ulate' (ID: 10111)
  Prédit: 'ulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -7.93448489275761e-05
    2. 'ulates' → logprob: -9.625079154968262
    3. 'ulating' → logprob: -12.250079154968262
    4. 'ul' → logprob: -12.375079154968262
    5. 'ula' → logprob: -12.875079154968262
    6. 'ule' → logprob: -14.625079154968262
    7. 'ulation' → logprob: -14.750079154968262
    8. 'u' → logprob: -15.750079154968262
    9. ' class' → logprob: -15.750079154968262
    10. 'class' → logprob: -16.000080108642578

Token 26: ' coordinate' (ID: 30380)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.49093037843704224
    2. ' a' → logprob: -1.7409303188323975
    3. ' coordinates' → logprob: -2.1159303188323975
    4. 'coordinates' → logprob: -3.6159303188323975
    5. ' geometry' → logprob: -4.240930557250977
    6. ' point' → logprob: -4.615930557250977
    7. 'the' → logprob: -4.865930557250977
    8. ' ' → logprob: -4.990930557250977
    9. ' an' → logprob: -5.240930557250977
    10. 'geometry' → logprob: -5.615930557250977

Token 27: ' operations' (ID: 12084)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00024144348572008312
    2. 'class' → logprob: -8.87524127960205
    3. '<|end|>' → logprob: -10.25024127960205
    4. ' s' → logprob: -10.75024127960205
    5. '(s' → logprob: -11.00024127960205
    6. ' class' → logprob: -12.00024127960205
    7. '<|end|>' → logprob: -12.12524127960205
    8. ':' → logprob: -12.62524127960205
    9. '
' → logprob: -13.25024127960205
    10. ',' → logprob: -13.62524127960205

Token 28: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0016292404616251588
    2. ' class' → logprob: -7.25162935256958
    3. '```' → logprob: -7.37662935256958
    4. '
' → logprob: -8.501628875732422
    5. '<class' → logprob: -10.626628875732422
    6. '\n' → logprob: -11.001628875732422
    7. '<|end|>' → logprob: -11.376628875732422
    8. ':' → logprob: -11.376628875732422
    9. '\' → logprob: -12.001628875732422
    10. '"class' → logprob: -12.876628875732422

Token 29: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0002833848411682993
    2. ' class' → logprob: -9.125283241271973
    3. '```' → logprob: -9.125283241271973
    4. '
' → logprob: -10.000283241271973
    5. '\n' → logprob: -11.125283241271973
    6. '<class' → logprob: -12.875283241271973
    7. '"class' → logprob: -14.625283241271973
    8. '<|end|>' → logprob: -14.625283241271973
    9. '\' → logprob: -15.125283241271973
    10. '@dat' → logprob: -15.250283241271973

Token 30: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -1.5451681974809617e-05
    2. 'Point' → logprob: -11.250015258789062
    3. '_Point' → logprob: -13.625015258789062
    4. '<Point' → logprob: -15.125015258789062
    5. ' ' → logprob: -15.250015258789062
    6. ' Points' → logprob: -15.500015258789062
    7. '	Point' → logprob: -15.750015258789062
    8. ' Poi' → logprob: -16.750015258789062
    9. '_point' → logprob: -16.875015258789062
    10. ' ' → logprob: -17.000015258789062

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008760755881667137
    2. '(' → logprob: -4.758760929107666
    3. ' :' → logprob: -9.008760452270508
    4. '():' → logprob: -11.633760452270508
    5. ':
' → logprob: -12.883760452270508
    6. '(:' → logprob: -13.008760452270508
    7. '):' → logprob: -13.133760452270508
    8. '(object' → logprob: -13.633760452270508
    9. '<|end|>' → logprob: -13.633760452270508
    10. '.' → logprob: -13.758760452270508

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06491351127624512
    2. '   ' → logprob: -3.439913511276245
    3. '<|end|>' → logprob: -4.439913749694824
    4. '(' → logprob: -4.814913749694824
    5. ' :' → logprob: -5.939913749694824
    6. '(object' → logprob: -6.064913749694824
    7. ' ' → logprob: -6.439913749694824
    8. ':
' → logprob: -6.814913749694824
    9. ' (' → logprob: -6.939913749694824
    10. '```' → logprob: -7.439913749694824

Token 33: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5673092603683472
    2. ' def' → logprob: -1.0673092603683472
    3. 'def' (adapté à ' def') → logprob: -2.4423093795776367
    4. '    ' → logprob: -6.567309379577637
    5. ' ' → logprob: -8.942309379577637
    6. ' pass' → logprob: -9.067309379577637
    7. '    
' → logprob: -9.692309379577637
    8. '```' → logprob: -9.942309379577637
    9. ' __' → logprob: -10.192309379577637
    10. '  ' → logprob: -10.442309379577637

Token 34: ' __' (ID: 2516)
  Prédit: 'nit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nit' → logprob: -0.3680347204208374
    2. 'init' → logprob: -1.3680347204208374
    3. ' __' → logprob: -4.493034839630127
    4. '__' → logprob: -4.618034839630127
    5. '_init' → logprob: -4.743034839630127
    6. 'n' → logprob: -5.118034839630127
    7. 'def' → logprob: -5.493034839630127
    8. '_' → logprob: -5.743034839630127
    9. 'it' → logprob: -5.743034839630127
    10. 'in' → logprob: -6.743034839630127

Token 35: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'ini' → logprob: -15.0
    3. 'in' → logprob: -16.625
    4. 'int' → logprob: -17.75
    5. ' init' → logprob: -17.875
    6. 'inite' → logprob: -19.5
    7. 'eq' → logprob: -19.75
    8. 'inti' → logprob: -20.5
    9. '	init' → logprob: -20.625
    10. '_init' → logprob: -21.0

Token 36: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012359540909528732
    2. '__' → logprob: -4.762359619140625
    3. '(' → logprob: -6.262359619140625
    4. '__(
' → logprob: -7.262359619140625
    5. '__((' → logprob: -7.262359619140625
    6. '(self' → logprob: -8.512359619140625
    7. '__(*' → logprob: -9.262359619140625
    8. '__('' → logprob: -10.262359619140625
    9. '<|end|>' → logprob: -10.387359619140625
    10. ' (' → logprob: -11.012359619140625

Token 37: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005236598663032055
    2. ' self' → logprob: -5.255236625671387
    3. '(self' → logprob: -13.505236625671387
    4. ' ' → logprob: -14.505236625671387
    5. '	self' → logprob: -15.130236625671387
    6. ')' → logprob: -15.505236625671387
    7. '0' → logprob: -16.13023567199707
    8. ',' → logprob: -16.25523567199707
    9. ',self' → logprob: -16.38023567199707
    10. '_self' → logprob: -16.63023567199707

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03395041823387146
    2. ' ,' → logprob: -3.6589503288269043
    3. '(' → logprob: -5.408950328826904
    4. ' (' → logprob: -6.408950328826904
    5. ')' → logprob: -7.158950328826904
    6. '<|end|>' → logprob: -8.408950805664062
    7. 'self' → logprob: -9.033950805664062
    8. ' )' → logprob: -9.408950805664062
    9. '(self' → logprob: -10.033950805664062
    10. ',(' → logprob: -10.408950805664062

Token 39: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3902609348297119
    2. ' x' → logprob: -1.140260934829712
    3. 'self' → logprob: -6.265260696411133
    4. ' self' → logprob: -6.515260696411133
    5. ')x' → logprob: -14.140260696411133
    6. '	x' → logprob: -14.390260696411133
    7. ' ' → logprob: -15.015260696411133
    8. ')' → logprob: -15.390260696411133
    9. '_x' → logprob: -15.390260696411133
    10. '   ' → logprob: -16.890260696411133

Token 40: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026408182457089424
    2. ':' → logprob: -6.002640724182129
    3. ':int' → logprob: -9.127640724182129
    4. ' ,' → logprob: -10.002640724182129
    5. ')' → logprob: -12.877640724182129
    6. '=' → logprob: -13.002640724182129
    7. '):' → logprob: -13.002640724182129
    8. ',int' → logprob: -13.127640724182129
    9. ',y' → logprob: -14.252640724182129
    10. '<|end|>' → logprob: -15.127640724182129

Token 41: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31327390670776367
    2. ' int' → logprob: -1.3132739067077637
    3. 'float' → logprob: -12.063274383544922
    4. ' float' → logprob: -12.438274383544922
    5. ':int' → logprob: -14.188274383544922
    6. '[int' → logprob: -14.188274383544922
    7. '	int' → logprob: -15.063274383544922
    8. '=int' → logprob: -15.313274383544922
    9. ' ' → logprob: -15.813274383544922
    10. '<int' → logprob: -16.063274383544922

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004293580132070929
    2. ')' → logprob: -8.125429153442383
    3. ' ,' → logprob: -9.750429153442383
    4. '):' → logprob: -10.125429153442383
    5. '<|end|>' → logprob: -10.875429153442383
    6. ',int' → logprob: -11.625429153442383
    7. '<|end|>' → logprob: -13.000429153442383
    8. ',x' → logprob: -14.000429153442383
    9. ':' → logprob: -14.500429153442383
    10. '),' → logprob: -14.625429153442383

Token 43: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868757486343384
    2. ' y' → logprob: -1.1368757486343384
    3. ' ' → logprob: -13.761876106262207
    4. '<|end|>' → logprob: -13.886876106262207
    5. '	y' → logprob: -14.636876106262207
    6. ')' → logprob: -14.636876106262207
    7. ',' → logprob: -14.886876106262207
    8. 'space' → logprob: -14.886876106262207
    9. ' ' → logprob: -15.136876106262207
    10. ')y' → logprob: -15.636876106262207

Token 44: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03879953548312187
    2. ')' → logprob: -3.413799524307251
    3. ':' → logprob: -5.28879976272583
    4. ' ):' → logprob: -9.913799285888672
    5. ':int' → logprob: -11.038799285888672
    6. '):
' → logprob: -11.288799285888672
    7. ',' → logprob: -12.288799285888672
    8. ' )' → logprob: -12.913799285888672
    9. '=' → logprob: -13.038799285888672
    10. ' ' → logprob: -13.663799285888672

Token 45: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3869122266769409
    2. ' int' → logprob: -1.136912226676941
    3. ')' → logprob: -10.63691234588623
    4. '=int' → logprob: -11.51191234588623
    5. ':int' → logprob: -13.13691234588623
    6. ' ' → logprob: -13.26191234588623
    7. '<int' → logprob: -14.01191234588623
    8. '[int' → logprob: -14.26191234588623
    9. ' )' → logprob: -14.38691234588623
    10. ']int' → logprob: -14.51191234588623

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009762583300471306
    2. ')' → logprob: -4.634762763977051
    3. ':' → logprob: -12.50976276397705
    4. '):
' → logprob: -13.63476276397705
    5. ' ):' → logprob: -13.75976276397705
    6. ',' → logprob: -15.63476276397705
    7. '),' → logprob: -16.384761810302734
    8. ')**' → logprob: -16.759761810302734
    9. ' ' → logprob: -16.884761810302734
    10. ')：' → logprob: -16.884761810302734

Token 47: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8535381555557251
    2. 'x' → logprob: -1.103538155555725
    3. ' )' → logprob: -2.4785380363464355
    4. '):' → logprob: -2.4785380363464355
    5. ' ):' → logprob: -3.7285380363464355
    6. ' x' → logprob: -3.8535380363464355
    7. '    ' → logprob: -4.6035380363464355
    8. ' ' → logprob: -4.7285380363464355
    9. '       ' → logprob: -5.4785380363464355
    10. '   ' → logprob: -5.6035380363464355

Token 48: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2152089923620224
    2. ' self' → logprob: -1.8402090072631836
    3. '       ' → logprob: -3.4652090072631836
    4. 'x' → logprob: -5.840209007263184
    5. ' x' → logprob: -7.465209007263184
    6. '        ' → logprob: -10.215209007263184
    7. ' ' → logprob: -10.590209007263184
    8. ')' → logprob: -11.465209007263184
    9. ' ' → logprob: -12.340209007263184
    10. ',' → logprob: -12.465209007263184

Token 49: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04334741085767746
    2. '.x' → logprob: -3.1683473587036133
    3. ' .' → logprob: -8.668347358703613
    4. ' ' → logprob: -9.543347358703613
    5. ',' → logprob: -10.668347358703613
    6. ')' → logprob: -11.293347358703613
    7. 'x' → logprob: -11.418347358703613
    8. '<|end|>' → logprob: -11.543347358703613
    9. ' x' → logprob: -11.668347358703613
    10. '.)' → logprob: -12.293347358703613

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46488699316978455
    2. '=' → logprob: -1.089887022972107
    3. ',' → logprob: -3.4648869037628174
    4. ' ,' → logprob: -6.3398871421813965
    5. '<|end|>' → logprob: -6.7148871421813965
    6. ' ' → logprob: -7.7148871421813965
    7. ')' → logprob: -8.089886665344238
    8. '.' → logprob: -9.214886665344238
    9. '    ' → logprob: -9.464886665344238
    10. '        ' → logprob: -9.714886665344238

Token 51: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1602255403995514
    2. ' x' → logprob: -1.910225510597229
    3. ')x' → logprob: -14.410225868225098
    4. '	x' → logprob: -14.785225868225098
    5. ' ' → logprob: -15.535225868225098
    6. '<|end|>' → logprob: -16.78522491455078
    7. '(x' → logprob: -17.28522491455078
    8. '<|end|>' → logprob: -17.41022491455078
    9. '        ' → logprob: -17.66022491455078
    10. ' ' → logprob: -17.78522491455078

Token 52: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' self' (ID: 1051)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3877531588077545
    2. 'y' → logprob: -1.2627531290054321
    3. 'self' (adapté à ' self') → logprob: -3.5127532482147217
    4. ' self' → logprob: -5.137753009796143
    5. ' ' → logprob: -6.637753009796143
    6. '        ' → logprob: -6.887753009796143
    7. '       ' → logprob: -8.0127534866333
    8. ',y' → logprob: -10.2627534866333
    9. ' 
' → logprob: -10.5127534866333
    10. ',' → logprob: -10.7627534866333

Token 55: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0021295640617609024
    2. '<|end|>' → logprob: -7.002129554748535
    3. '.y' → logprob: -7.752129554748535
    4. '.x' → logprob: -8.502129554748535
    5. ',' → logprob: -8.627129554748535
    6. ')' → logprob: -8.752129554748535
    7. '<|end|>' → logprob: -9.127129554748535
    8. ' ' → logprob: -9.877129554748535
    9. ' .' → logprob: -10.252129554748535
    10. 'y' → logprob: -10.877129554748535

Token 56: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132658004760742
    2. 'y' → logprob: -1.3132658004760742
    3. '0' → logprob: -12.813265800476074
    4. ' ' → logprob: -14.063265800476074
    5. '	y' → logprob: -15.063265800476074
    6. ')' → logprob: -17.06326675415039
    7. 'x' → logprob: -17.18826675415039
    8. ')y' → logprob: -17.18826675415039
    9. ' ' → logprob: -17.31326675415039
    10. '   ' → logprob: -17.56326675415039

Token 58: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7075363993644714
    2. '<|end|>' → logprob: -0.7075363993644714
    3. '   ' → logprob: -5.332536220550537
    4. '    
' → logprob: -5.957536220550537
    5. '<|end|>' → logprob: -6.207536220550537
    6. '\n' → logprob: -6.332536220550537
    7. '       ' → logprob: -7.082536220550537
    8. ' ' → logprob: -7.707536220550537
    9. '  
' → logprob: -7.957536220550537
    10. ' 
' → logprob: -8.082536697387695

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08469928056001663
    2. '<|end|>' → logprob: -3.2096993923187256
    3. '   ' → logprob: -3.5846993923187256
    4. '    
' → logprob: -4.7096991539001465
    5. '<|end|>' → logprob: -6.8346991539001465
    6. ' 
' → logprob: -7.2096991539001465
    7. '\n' → logprob: -7.3346991539001465
    8. '  
' → logprob: -7.8346991539001465
    9. '

' → logprob: -8.209699630737305
    10. ' ' → logprob: -8.584699630737305

Token 60: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08623849600553513
    2. ' def' → logprob: -2.711238384246826
    3. '   ' → logprob: -4.211238384246826
    4. ' ' → logprob: -7.711238384246826
    5. '    
' → logprob: -7.836238384246826
    6. '	def' → logprob: -9.211238861083984
    7. '
' → logprob: -9.461238861083984
    8. '<|end|>' → logprob: -9.586238861083984
    9. ')' → logprob: -9.711238861083984
    10. ' 
' → logprob: -10.211238861083984

Token 61: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08770141005516052
    2. '_' → logprob: -3.4627013206481934
    3. '.' → logprob: -4.462701320648193
    4. ' .' → logprob: -4.837701320648193
    5. ' def' → logprob: -4.962701320648193
    6. ')' → logprob: -5.712701320648193
    7. ' add' → logprob: -5.712701320648193
    8. ' _' → logprob: -5.837701320648193
    9. ' __' → logprob: -6.087701320648193
    10. ' )' → logprob: -6.462701320648193

Token 62: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00019591135787777603
    2. 'repr' → logprob: -8.750195503234863
    3. 'hash' → logprob: -11.250195503234863
    4. 'str' → logprob: -11.500195503234863
    5. 'init' → logprob: -11.625195503234863
    6. 'add' → logprob: -12.875195503234863
    7. 'lt' → logprob: -13.125195503234863
    8. ' eq' → logprob: -14.750195503234863
    9. '_eq' → logprob: -15.875195503234863
    10. 'iter' → logprob: -16.37519645690918

Token 63: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011832132935523987
    2. '__(' → logprob: -4.886832237243652
    3. '_' → logprob: -5.511832237243652
    4. '(' → logprob: -9.386832237243652
    5. '___' → logprob: -10.386832237243652
    6. '__((' → logprob: -10.511832237243652
    7. '__(
' → logprob: -11.511832237243652
    8. '<|end|>' → logprob: -12.011832237243652
    9. '__('' → logprob: -12.261832237243652
    10. '__.__' → logprob: -13.011832237243652

Token 64: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04407826438546181
    2. 'other' → logprob: -3.1690783500671387
    3. ' self' → logprob: -7.294078350067139
    4. ' other' → logprob: -8.66907787322998
    5. ')' → logprob: -8.91907787322998
    6. ',' → logprob: -10.41907787322998
    7. ' ' → logprob: -10.66907787322998
    8. '(self' → logprob: -11.16907787322998
    9. '<|end|>' → logprob: -11.16907787322998
    10. '   ' → logprob: -12.66907787322998

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04886803403496742
    2. ' ,' → logprob: -3.04886794090271
    3. '<|end|>' → logprob: -9.423868179321289
    4. ')' → logprob: -9.798868179321289
    5. ',self' → logprob: -9.798868179321289
    6. ' ' → logprob: -10.423868179321289
    7. '(self' → logprob: -10.923868179321289
    8. 'self' → logprob: -11.048868179321289
    9. '(' → logprob: -12.173868179321289
    10. ')(' → logprob: -12.298868179321289

Token 66: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.6931495070457458
    2. 'other' → logprob: -0.6931495070457458
    3. 'Other' → logprob: -13.94314956665039
    4. ' ' → logprob: -14.69314956665039
    5. '_other' → logprob: -14.81814956665039
    6. '(other' → logprob: -15.19314956665039
    7. ' )' → logprob: -16.31814956665039
    8. ' oth' → logprob: -16.69314956665039
    9. '.other' → logprob: -16.81814956665039
    10. ' Other' → logprob: -17.06814956665039

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6150650978088379
    2. ' ):' → logprob: -1.615065097808838
    3. ')' → logprob: -1.990065097808838
    4. ' )' → logprob: -2.240065097808838
    5. ',' → logprob: -4.365065097808838
    6. ':' → logprob: -6.490065097808838
    7. ' ,' → logprob: -6.615065097808838
    8. ' and' → logprob: -6.865065097808838
    9. '):
' → logprob: -8.61506462097168
    10. '<|end|>' → logprob: -8.99006462097168

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12599487602710724
    2. ' if' → logprob: -3.375994920730591
    3. '    ' → logprob: -3.875994920730591
    4. '   ' → logprob: -4.000994682312012
    5. ':' → logprob: -4.750994682312012
    6. ',' → logprob: -5.750994682312012
    7. ' and' → logprob: -5.750994682312012
    8. '<|end|>' → logprob: -5.875994682312012
    9. ' isinstance' → logprob: -5.875994682312012
    10. ' other' → logprob: -6.000994682312012

Token 69: ' return' (ID: 622)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.1059635579586029
    2. '       ' → logprob: -2.9809634685516357
    3. ' other' → logprob: -3.9809634685516357
    4. ' if' → logprob: -4.230963706970215
    5. 'other' → logprob: -5.105963706970215
    6. ' return' → logprob: -5.730963706970215
    7. ' self' → logprob: -6.355963706970215
    8. 'return' (adapté à ' return') → logprob: -7.105963706970215
    9. 'self' → logprob: -7.230963706970215
    10. '    ' → logprob: -7.355963706970215

Token 70: ' isinstance' (ID: 25889)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07552852481603622
    2. 'self' → logprob: -2.825528621673584
    3. ' isinstance' → logprob: -4.325528621673584
    4. ' (' → logprob: -8.575528144836426
    5. '(self' → logprob: -9.950528144836426
    6. ' ' → logprob: -12.450528144836426
    7. 'is' → logprob: -14.075528144836426
    8. '(' → logprob: -15.075528144836426
    9. ' hasattr' → logprob: -15.325528144836426
    10. '    ' → logprob: -15.325528144836426

Token 71: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -6.52788148727268e-05
    2. 'other' → logprob: -10.000064849853516
    3. '(' → logprob: -10.875064849853516
    4. ' other' → logprob: -14.125064849853516
    5. 'Other' → logprob: -16.250064849853516
    6. '(self' → logprob: -18.750064849853516
    7. '_other' → logprob: -18.875064849853516
    8. 'OTHER' → logprob: -19.750064849853516
    9. '.other' → logprob: -19.875064849853516
    10. '(object' → logprob: -20.750064849853516

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.031157969729975e-05
    2. '(other' → logprob: -9.625090599060059
    3. 'other' → logprob: -11.250090599060059
    4. ' ,' → logprob: -11.500090599060059
    5. ',
' → logprob: -15.000090599060059
    6. ')' → logprob: -15.000090599060059
    7. ' other' → logprob: -16.000089645385742
    8. '

' → logprob: -16.250089645385742
    9. '(' → logprob: -16.625089645385742
    10. ' ' → logprob: -17.375089645385742

Token 73: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.06197172403335571
    2. 'Point' → logprob: -2.811971664428711
    3. '	Point' → logprob: -12.811971664428711
    4. '(Point' → logprob: -14.311971664428711
    5. '_Point' → logprob: -14.811971664428711
    6. '<Point' → logprob: -15.561971664428711
    7. '.Point' → logprob: -16.56197166442871
    8. ' ' → logprob: -16.56197166442871
    9. ' Points' → logprob: -18.18697166442871
    10. 'self' → logprob: -18.43697166442871

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.084206375409849e-05
    2. ' )' → logprob: -10.125041007995605
    3. ' and' → logprob: -15.125041007995605
    4. 'and' → logprob: -15.250041007995605
    5. '       ' → logprob: -16.25004005432129
    6. '        ' → logprob: -17.50004005432129
    7. ')
' → logprob: -17.62504005432129
    8. ')&&' → logprob: -17.75004005432129
    9. '),' → logprob: -19.12504005432129
    10. '   ' → logprob: -19.25004005432129

Token 75: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01821444369852543
    2. 'and' → logprob: -4.018214225769043
    3. '        ' → logprob: -10.143214225769043
    4. '    ' → logprob: -11.268214225769043
    5. ' ' → logprob: -12.143214225769043
    6. '       ' → logprob: -12.643214225769043
    7. ')' → logprob: -13.268214225769043
    8. '   ' → logprob: -14.393214225769043
    9. '           ' → logprob: -15.143214225769043
    10. '      ' → logprob: -15.143214225769043

Token 76: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.201423779129982
    2. 'self' → logprob: -1.7014237642288208
    3. '(self' → logprob: -11.701423645019531
    4. ' ' → logprob: -14.076423645019531
    5. ' (' → logprob: -14.076423645019531
    6. '	self' → logprob: -14.701423645019531
    7. ' ' → logprob: -16.20142364501953
    8. '   ' → logprob: -16.70142364501953
    9. '_self' → logprob: -17.70142364501953
    10. 'Self' → logprob: -18.07642364501953

Token 77: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -4.024604277219623e-05
    2. '.' → logprob: -10.125040054321289
    3. ' .' → logprob: -17.00004005432129
    4. 'x' → logprob: -18.37504005432129
    5. ').' → logprob: -18.62504005432129
    6. '.y' → logprob: -19.50004005432129
    7. '.xlabel' → logprob: -19.50004005432129
    8. '<|end|>' → logprob: -19.62504005432129
    9. '.xtext' → logprob: -19.75004005432129
    10. '.user' → logprob: -19.75004005432129

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029751067981123924
    2. '==' → logprob: -3.5297510623931885
    3. '=' → logprob: -15.40475082397461
    4. '==
' → logprob: -16.15475082397461
    5. ' ' → logprob: -16.90475082397461
    6. '   ' → logprob: -16.90475082397461
    7. ' ==
' → logprob: -17.02975082397461
    8. ')==' → logprob: -17.15475082397461
    9. ' =' → logprob: -17.90475082397461
    10. '===' → logprob: -18.15475082397461

Token 79: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.12692831456661224
    2. 'other' → logprob: -2.1269283294677734
    3. '(other' → logprob: -16.001928329467773
    4. '_other' → logprob: -17.001928329467773
    5. '.other' → logprob: -17.626928329467773
    6. 'Other' → logprob: -18.001928329467773
    7. ' oth' → logprob: -19.251928329467773
    8. ' ' → logprob: -19.751928329467773
    9. 'self' → logprob: -19.876928329467773
    10. ' self' → logprob: -21.001928329467773

Token 80: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05492629110813141
    2. '.x' → logprob: -2.9299263954162598
    3. ' .' → logprob: -10.804925918579102
    4. '.y' → logprob: -10.929925918579102
    5. ' ' → logprob: -12.679925918579102
    6. ').' → logprob: -14.054925918579102
    7. '   ' → logprob: -15.429925918579102
    8. '.other' → logprob: -15.804925918579102
    9. '.
' → logprob: -16.1799259185791
    10. ')' → logprob: -16.3049259185791

Token 81: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007619995623826981
    2. 'and' → logprob: -4.882619857788086
    3. ' ' → logprob: -12.007619857788086
    4. '        ' → logprob: -12.507619857788086
    5. '       ' → logprob: -12.882619857788086
    6. '	and' → logprob: -14.632619857788086
    7. '    ' → logprob: -14.757619857788086
    8. '   ' → logprob: -16.007619857788086
    9. '           ' → logprob: -16.132619857788086
    10. '      ' → logprob: -16.132619857788086

Token 82: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.023412715643644333
    2. 'other' → logprob: -3.7734127044677734
    3. ' self' → logprob: -8.773412704467773
    4. 'self' → logprob: -11.398412704467773
    5. 'Other' → logprob: -14.523412704467773
    6. '.other' → logprob: -15.398412704467773
    7. ' ' → logprob: -15.523412704467773
    8. '_other' → logprob: -15.898412704467773
    9. '(other' → logprob: -16.523412704467773
    10. ' ' → logprob: -16.648412704467773

Token 83: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.01105159055441618
    2. '.' → logprob: -4.511051654815674
    3. ' .' → logprob: -13.386051177978516
    4. 'y' → logprob: -14.261051177978516
    5. '	y' → logprob: -14.511051177978516
    6. ' ' → logprob: -15.261051177978516
    7. '   ' → logprob: -15.886051177978516
    8. '.x' → logprob: -16.136051177978516
    9. '.
' → logprob: -16.386051177978516
    10. ' y' → logprob: -16.636051177978516

Token 84: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1619584709405899
    2. '==' → logprob: -1.9119584560394287
    3. '<|end|>' → logprob: -6.411958694458008
    4. '<|end|>' → logprob: -9.536958694458008
    5. '==
' → logprob: -12.161958694458008
    6. ' ' → logprob: -12.661958694458008
    7. '=' → logprob: -13.036958694458008
    8. ' ==
' → logprob: -13.161958694458008
    9. ')==' → logprob: -13.411958694458008
    10. ' ' → logprob: -13.661958694458008

Token 85: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.4740775227546692
    2. 'other' → logprob: -0.9740775227546692
    3. '(other' → logprob: -15.224077224731445
    4. '.other' → logprob: -15.599077224731445
    5. 'Other' → logprob: -16.599077224731445
    6. '_other' → logprob: -16.849077224731445
    7. ' ' → logprob: -17.224077224731445
    8. 'othe' → logprob: -18.724077224731445
    9. ' oth' → logprob: -19.099077224731445
    10. 'oth' → logprob: -19.724077224731445

Token 86: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.07892262190580368
    2. '.' → logprob: -2.5789225101470947
    3. ' .' → logprob: -11.328922271728516
    4. '.x' → logprob: -12.078922271728516
    5. '.other' → logprob: -12.453922271728516
    6. '<|end|>' → logprob: -12.578922271728516
    7. 'y' → logprob: -13.078922271728516
    8. '.
' → logprob: -13.453922271728516
    9. ')' → logprob: -13.578922271728516
    10. '	y' → logprob: -14.328922271728516

Token 87: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11074290424585342
    2. '
' → logprob: -2.4857428073883057
    3. '<|end|>' → logprob: -4.360743045806885
    4. '    
' → logprob: -5.610743045806885
    5. ' ' → logprob: -6.610743045806885
    6. '\n' → logprob: -7.235743045806885
    7. '  ' → logprob: -7.485743045806885
    8. ' 
' → logprob: -7.735743045806885
    9. '  
' → logprob: -8.110742568969727
    10. ',' → logprob: -8.360742568969727

Token 89: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018003134056925774
    2. ' ' → logprob: -4.393002986907959
    3. '    
' → logprob: -6.268002986907959
    4. '    ' → logprob: -7.143002986907959
    5. ' 
' → logprob: -7.143002986907959
    6. '_' → logprob: -7.268002986907959
    7. '  ' → logprob: -8.393003463745117
    8. '   
' → logprob: -8.643003463745117
    9. 'def' (adapté à ' def') → logprob: -8.893003463745117
    10. '  
' → logprob: -8.893003463745117

Token 90: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002829484874382615
    2. '__' → logprob: -6.377829551696777
    3. ' ' → logprob: -7.127829551696777
    4. ' ' → logprob: -9.002829551696777
    5. 'hash' → logprob: -9.752829551696777
    6. 'def' → logprob: -10.127829551696777
    7. ' <' → logprob: -10.877829551696777
    8. ' def' → logprob: -11.377829551696777
    9. ' hash' → logprob: -11.377829551696777
    10. '```' → logprob: -11.377829551696777

Token 91: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.005224152002483606
    2. 'lt' → logprob: -5.630224227905273
    3. 'ne' → logprob: -6.630224227905273
    4. 'add' → logprob: -9.755224227905273
    5. 'repr' → logprob: -10.130224227905273
    6. 'sub' → logprob: -10.255224227905273
    7. 'ash' → logprob: -10.505224227905273
    8. 'q' → logprob: -10.505224227905273
    9. '_hash' → logprob: -10.880224227905273
    10. 'm' → logprob: -11.130224227905273

Token 92: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10887462645769119
    2. '(self' → logprob: -2.608874559402466
    3. '<|end|>' → logprob: -3.608874559402466
    4. '__(' → logprob: -7.358874797821045
    5. '(
' → logprob: -7.858874797821045
    6. ')(' → logprob: -8.108874320983887
    7. '<|end|>' → logprob: -8.483874320983887
    8. '__(
' → logprob: -8.483874320983887
    9. ' (' → logprob: -8.733874320983887
    10. '__((' → logprob: -9.233874320983887

Token 93: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ')' → logprob: -11.50001335144043
    3. ' self' → logprob: -12.87501335144043
    4. '(self' → logprob: -16.00001335144043
    5. '   ' → logprob: -16.50001335144043
    6. '
' → logprob: -16.50001335144043
    7. ' ' → logprob: -18.12501335144043
    8. '<|end|>' → logprob: -18.25001335144043
    9. '  ' → logprob: -19.12501335144043
    10. ')
' → logprob: -19.37501335144043

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032130222767591476
    2. ')' → logprob: -3.532130241394043
    3. '):
' → logprob: -6.657130241394043
    4. ' ):' → logprob: -7.407130241394043
    5. '<|end|>' → logprob: -8.157130241394043
    6. ',' → logprob: -9.907130241394043
    7. '()' → logprob: -10.782130241394043
    8. '():' → logprob: -10.782130241394043
    9. ' ' → logprob: -10.907130241394043
    10. '):

' → logprob: -10.907130241394043

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3651183843612671
    2. ' return' → logprob: -1.240118384361267
    3. '   ' → logprob: -4.740118503570557
    4. ' self' → logprob: -5.365118503570557
    5. 'return' → logprob: -6.365118503570557
    6. ' hash' → logprob: -7.365118503570557
    7. '    ' → logprob: -7.615118503570557
    8. '        ' → logprob: -8.865118026733398
    9. '      ' → logprob: -10.115118026733398
    10. ' ' → logprob: -10.490118026733398

Token 96: ' return' (ID: 622)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.4463683068752289
    2. ' hash' → logprob: -1.1963683366775513
    3. ' return' → logprob: -3.3213682174682617
    4. 'return' (adapté à ' return') → logprob: -3.9463682174682617
    5. ' self' → logprob: -7.196368217468262
    6. 'self' → logprob: -7.321368217468262
    7. '(hash' → logprob: -7.446368217468262
    8. ' (' → logprob: -8.821368217468262
    9. '   ' → logprob: -8.946368217468262
    10. '(' → logprob: -10.321368217468262

Token 97: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.062185026705265045
    2. 'hash' → logprob: -2.812185049057007
    3. '(hash' → logprob: -8.687185287475586
    4. ' self' → logprob: -10.437185287475586
    5. ' (' → logprob: -11.687185287475586
    6. ' ' → logprob: -12.312185287475586
    7. '   ' → logprob: -12.687185287475586
    8. 'self' → logprob: -13.437185287475586
    9. '	hash' → logprob: -14.312185287475586
    10. '(' → logprob: -14.812185287475586

Token 98: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0011703446507453918
    2. '(' → logprob: -6.7511701583862305
    3. ' ((' → logprob: -16.876171112060547
    4. '(
' → logprob: -18.376171112060547
    5. '(('' → logprob: -18.876171112060547
    6. '(((' → logprob: -19.376171112060547
    7. '(("' → logprob: -20.751171112060547
    8. ' (' → logprob: -20.876171112060547
    9. '((-' → logprob: -21.126171112060547
    10. '(self' → logprob: -21.126171112060547

Token 99: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. ' self' → logprob: -13.000001907348633
    3. '(self' → logprob: -17.625001907348633
    4. '
' → logprob: -18.125001907348633
    5. '	self' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '[self' → logprob: -20.875001907348633
    8. '       ' → logprob: -21.375001907348633
    9. '    ' → logprob: -21.875001907348633
    10. ' ' → logprob: -22.125001907348633

Token 100: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0008330935961566865
    2. '.' → logprob: -7.125833034515381
    3. ' .' → logprob: -10.500833511352539
    4. '.y' → logprob: -15.000833511352539
    5. 'x' → logprob: -15.500833511352539
    6. ').' → logprob: -15.625833511352539
    7. ' ' → logprob: -15.750833511352539
    8. 'self' → logprob: -16.12583351135254
    9. ',' → logprob: -16.75083351135254
    10. '.
' → logprob: -17.50083351135254

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012535012501757592
    2. ' ,' → logprob: -9.00012493133545
    3. ',
' → logprob: -14.00012493133545
    4. ',y' → logprob: -14.87512493133545
    5. '<|end|>' → logprob: -14.87512493133545
    6. ',self' → logprob: -16.125125885009766
    7. '‌,' → logprob: -16.375125885009766
    8. ' ' → logprob: -16.625125885009766
    9. ')' → logprob: -16.625125885009766
    10. '
' → logprob: -17.000125885009766

Token 102: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22545364499092102
    2. 'self' → logprob: -1.6004536151885986
    3. ' ' → logprob: -10.72545337677002
    4. '    ' → logprob: -12.10045337677002
    5. '	self' → logprob: -12.22545337677002
    6. '   ' → logprob: -12.97545337677002
    7. '       ' → logprob: -13.47545337677002
    8. '        ' → logprob: -13.97545337677002
    9. '(self' → logprob: -14.35045337677002
    10. '
' → logprob: -14.35045337677002

Token 103: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.40348830819129944
    2. '.' → logprob: -1.278488278388977
    3. '.x' → logprob: -3.1534883975982666
    4. ',' → logprob: -4.9034881591796875
    5. ')' → logprob: -5.9034881591796875
    6. ' ,' → logprob: -8.528488159179688
    7. ' .' → logprob: -8.778488159179688
    8. '.
' → logprob: -9.153488159179688
    9. '),' → logprob: -9.528488159179688
    10. ').' → logprob: -10.278488159179688

Token 104: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06198651343584061
    2. ')' → logprob: -2.8119864463806152
    3. '))
' → logprob: -11.311986923217773
    4. ' ))' → logprob: -12.811986923217773
    5. ')
' → logprob: -13.061986923217773
    6. ')))' → logprob: -14.186986923217773
    7. ' )' → logprob: -14.686986923217773
    8. '   ' → logprob: -15.436986923217773
    9. '),' → logprob: -15.811986923217773
    10. '       ' → logprob: -16.061986923217773

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09650523960590363
    2. '
' → logprob: -2.5965051651000977
    3. '<|end|>' → logprob: -4.471505165100098
    4. '    
' → logprob: -5.596505165100098
    5. ' 
' → logprob: -6.721505165100098
    6. '  
' → logprob: -7.846505165100098
    7. ' ' → logprob: -8.346505165100098
    8. '<|end|>' → logprob: -9.096505165100098
    9. '  ' → logprob: -9.346505165100098
    10. '   
' → logprob: -9.346505165100098

Token 106: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06564868241548538
    2. '
' → logprob: -3.6906487941741943
    3. '    
' → logprob: -3.8156487941741943
    4. ' 
' → logprob: -4.315648555755615
    5. 'def' (adapté à ' def') → logprob: -6.690648555755615
    6. ' def' → logprob: -7.190648555755615
    7. '   
' → logprob: -7.940648555755615
    8. '  
' → logprob: -8.315649032592773
    9. '    ' → logprob: -8.690649032592773
    10. '        
' → logprob: -9.315649032592773

Token 107: ' neighbors' (ID: 31655)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2403939813375473
    2. ' __' → logprob: -2.365393877029419
    3. ' distance' → logprob: -3.115393877029419
    4. ' neighbors' → logprob: -3.615393877029419
    5. 'distance' → logprob: -4.115394115447998
    6. 'neighbors' → logprob: -4.740394115447998
    7. ' move' → logprob: -5.490394115447998
    8. ' add' → logprob: -5.615394115447998
    9. 'def' → logprob: -5.615394115447998
    10. ' ' → logprob: -5.865394115447998

Token 108: '_' (ID: 62)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018217138946056366
    2. '(' → logprob: -4.018217086791992
    3. ' (' → logprob: -9.893217086791992
    4. '(
' → logprob: -11.143217086791992
    5. '(s' → logprob: -14.643217086791992
    6. 'self' → logprob: -14.768217086791992
    7. ' ' → logprob: -15.018217086791992
    8. '   ' → logprob: -15.268217086791992
    9. '(

' → logprob: -15.393217086791992
    10. '	self' → logprob: -15.518217086791992

Token 109: '4' (ID: 19)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4948473870754242
    2. '(' → logprob: -0.9948474168777466
    3. '()' → logprob: -4.494847297668457
    4. '4' → logprob: -5.744847297668457
    5. '```' → logprob: -6.494847297668457
    6. '8' → logprob: -6.619847297668457
    7. 'self' → logprob: -7.244847297668457
    8. '(
' → logprob: -7.494847297668457
    9. 's' → logprob: -7.619847297668457
    10. ' ' → logprob: -7.619847297668457

Token 110: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023630116134881973
    2. '(' → logprob: -3.898630142211914
    3. '()' → logprob: -6.148630142211914
    4. ' (' → logprob: -7.648630142211914
    5. '```' → logprob: -9.273630142211914
    6. '(
' → logprob: -9.523630142211914
    7. '()(' → logprob: -9.648630142211914
    8. 'self' → logprob: -9.773630142211914
    9. '_neighbors' → logprob: -10.148630142211914
    10. 's' → logprob: -10.273630142211914

Token 111: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13081605732440948
    2. 'self' → logprob: -2.6308159828186035
    3. '(self' → logprob: -3.3808159828186035
    4. '):
' → logprob: -4.6308159828186035
    5. ')' → logprob: -6.0058159828186035
    6. ',' → logprob: -6.2558159828186035
    7. ' self' → logprob: -6.6308159828186035
    8. ' ):' → logprob: -7.8808159828186035
    9. '	self' → logprob: -8.130816459655762
    10. '   ' → logprob: -8.630816459655762

Token 112: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0182998925447464
    2. '(' → logprob: -4.0183000564575195
    3. ':' → logprob: -9.76830005645752
    4. 'self' → logprob: -10.14330005645752
    5. ' (' → logprob: -10.51830005645752
    6. '(
' → logprob: -11.89330005645752
    7. '():' → logprob: -12.39330005645752
    8. ' self' → logprob: -12.39330005645752
    9. '   ' → logprob: -12.76830005645752
    10. '       ' → logprob: -12.76830005645752

Token 113: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.1532178521156311
    2. ' List' → logprob: -2.1532177925109863
    3. '[List' → logprob: -3.6532177925109863
    4. '[' → logprob: -10.528218269348145
    5. 'Set' → logprob: -11.903218269348145
    6. '['' → logprob: -12.403218269348145
    7. '	List' → logprob: -14.403218269348145
    8. 'list' → logprob: -14.778218269348145
    9. ' Set' → logprob: -15.153218269348145
    10. ' [' → logprob: -15.403218269348145

Token 114: '['' (ID: 1181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012063038302585483
    2. '['' → logprob: -7.126206398010254
    3. '<Point' → logprob: -8.251206398010254
    4. '[
' → logprob: -9.626206398010254
    5. '(Point' → logprob: -9.876206398010254
    6. '["' → logprob: -11.626206398010254
    7. '[(' → logprob: -12.626206398010254
    8. '```' → logprob: -13.001206398010254
    9. '[List' → logprob: -13.251206398010254
    10. '<|end|>' → logprob: -13.376206398010254

Token 115: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -6.704273118884885e-07
    2. ' Point' → logprob: -14.375000953674316
    3. '	Point' → logprob: -18.0
    4. '<Point' → logprob: -18.625
    5. '_Point' → logprob: -18.75
    6. '_point' → logprob: -19.75
    7. '.Point' → logprob: -20.125
    8. 'P' → logprob: -21.25
    9. '(Point' → logprob: -21.5
    10. '-point' → logprob: -22.125

Token 116: '']:
' (ID: 44766)
  Prédit: '']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:' → logprob: -0.024319592863321304
    2. ']:' → logprob: -4.149319648742676
    3. '']' → logprob: -4.899319648742676
    4. '']:
' → logprob: -7.774319648742676
    5. '"]:' → logprob: -8.399319648742676
    6. ']' → logprob: -8.899319648742676
    7. ':' → logprob: -12.024319648742676
    8. ''):' → logprob: -12.774319648742676
    9. ''' → logprob: -13.399319648742676
    10. '):' → logprob: -13.649319648742676

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01132154930382967
    2. '[' → logprob: -5.261321544647217
    3. '   ' → logprob: -5.386321544647217
    4. '[
' → logprob: -6.761321544647217
    5. '[]' → logprob: -8.636322021484375
    6. '    ' → logprob: -10.636322021484375
    7. ':' → logprob: -10.886322021484375
    8. '      ' → logprob: -11.511322021484375
    9. ',' → logprob: -11.636322021484375
    10. '        
' → logprob: -11.761322021484375

Token 118: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15864843130111694
    2. '       ' → logprob: -2.4086484909057617
    3. '[
' → logprob: -3.6586484909057617
    4. '
' → logprob: -3.7836484909057617
    5. ' return' → logprob: -5.283648490905762
    6. '[' → logprob: -5.783648490905762
    7. '        
' → logprob: -10.283648490905762
    8. '[]
' → logprob: -10.783648490905762
    9. '```' → logprob: -11.033648490905762
    10. ' [
' → logprob: -11.283648490905762

Token 119: ' [
' (ID: 4240)
  Prédit: ' [
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [
' → logprob: -0.4836297631263733
    2. ' [' → logprob: -0.9836297631263733
    3. '[' → logprob: -5.2336297035217285
    4. '[
' → logprob: -5.4836297035217285
    5. ' [

' → logprob: -10.983630180358887
    6. '[self' → logprob: -14.358630180358887
    7. ' [
' → logprob: -14.483630180358887
    8. '[new' → logprob: -15.233630180358887
    9. '[int' → logprob: -16.10862922668457
    10. '[p' → logprob: -16.23362922668457

Token 120: '           ' (ID: 352)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.07512366026639938
    2. '       ' → logprob: -3.3251235485076904
    3. '           ' → logprob: -3.3251235485076904
    4. ' Point' → logprob: -7.8251237869262695
    5. '	Point' → logprob: -10.70012378692627
    6. '(Point' → logprob: -11.95012378692627
    7. '               ' → logprob: -12.95012378692627
    8. '   ' → logprob: -14.20012378692627
    9. '	       ' → logprob: -14.32512378692627
    10. '          ' → logprob: -14.57512378692627

Token 121: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' (adapté à ' Point') → logprob: -3.531315314830863e-06
    2. ' Point' → logprob: -12.750003814697266
    3. '	Point' → logprob: -15.000003814697266
    4. '       ' → logprob: -15.625003814697266
    5. '           ' → logprob: -16.875003814697266
    6. 'self' → logprob: -17.750003814697266
    7. '(Point' → logprob: -18.875003814697266
    8. '   ' → logprob: -18.875003814697266
    9. '               ' → logprob: -20.125003814697266
    10. '_Point' → logprob: -20.750003814697266

Token 122: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033593899570405483
    2. '(' → logprob: -8.000335693359375
    3. '(s' → logprob: -15.500335693359375
    4. ' (' → logprob: -16.125335693359375
    5. '(
' → logprob: -16.125335693359375
    6. 'self' → logprob: -16.875335693359375
    7. '(x' → logprob: -17.875335693359375
    8. '(this' → logprob: -18.125335693359375
    9. ' self' → logprob: -18.625335693359375
    10. '(sel' → logprob: -19.000335693359375

Token 123: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0004342453321442008
    2. '.' → logprob: -7.750434398651123
    3. 'x' → logprob: -12.750433921813965
    4. ' .' → logprob: -14.375433921813965
    5. ',' → logprob: -17.37543487548828
    6. ').' → logprob: -18.37543487548828
    7. ' ' → logprob: -18.50043487548828
    8. '   ' → logprob: -19.25043487548828
    9. '.X' → logprob: -19.87543487548828
    10. ')' → logprob: -19.87543487548828

Token 124: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28133365511894226
    2. '+' → logprob: -2.2813336849212646
    3. ' +' → logprob: -2.4063336849212646
    4. ' -' → logprob: -3.4063336849212646
    5. '-' → logprob: -4.4063334465026855
    6. ' ,' → logprob: -5.4063334465026855
    7. '   ' → logprob: -5.9063334465026855
    8. ' ' → logprob: -8.156333923339844
    9. '+,' → logprob: -10.406333923339844
    10. '  ' → logprob: -11.406333923339844

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3140628933906555
    2. '0' → logprob: -1.3140628337860107
    3. ' ' → logprob: -7.56406307220459
    4. '-' → logprob: -8.18906307220459
    5. '   ' → logprob: -12.93906307220459
    6. '```' → logprob: -13.93906307220459
    7. ' -' → logprob: -14.56406307220459
    8. '  ' → logprob: -15.81406307220459
    9. '
' → logprob: -16.439062118530273
    10. ')' → logprob: -16.626562118530273

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.194110756041482e-05
    2. '<|end|>' → logprob: -10.000061988830566
    3. ' ,' → logprob: -12.250061988830566
    4. ',
' → logprob: -12.375061988830566
    5. ')' → logprob: -13.000061988830566
    6. ',

' → logprob: -13.625061988830566
    7. '),' → logprob: -13.875061988830566
    8. ',None' → logprob: -14.125061988830566
    9. '```' → logprob: -14.625061988830566
    10. ',y' → logprob: -15.125061988830566

Token 127: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10234447568655014
    2. ' self' → logprob: -2.352344512939453
    3. '<|end|>' → logprob: -6.227344512939453
    4. ' ' → logprob: -9.102344512939453
    5. '(self' → logprob: -11.102344512939453
    6. '0' → logprob: -11.477344512939453
    7. '	self' → logprob: -11.477344512939453
    8. '
' → logprob: -12.602344512939453
    9. '[self' → logprob: -12.852344512939453
    10. ' 
' → logprob: -13.102344512939453

Token 128: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0027915649116039276
    2. '.' → logprob: -6.127791404724121
    3. 'y' → logprob: -7.627791404724121
    4. ')' → logprob: -9.752791404724121
    5. '.x' → logprob: -10.002791404724121
    6. '   ' → logprob: -12.627791404724121
    7. ',' → logprob: -12.752791404724121
    8. ' .' → logprob: -13.377791404724121
    9. '.user' → logprob: -13.377791404724121
    10. ' ' → logprob: -13.502791404724121

Token 129: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.47576892375946045
    2. '),
' → logprob: -0.9757689237594604
    3. ')' → logprob: -6.72576904296875
    4. '),

' → logprob: -7.72576904296875
    5. ' ),
' → logprob: -11.10076904296875
    6. ' ),' → logprob: -11.22576904296875
    7. '       ' → logprob: -11.85076904296875
    8. '),
' → logprob: -11.97576904296875
    9. '   ' → logprob: -12.10076904296875
    10. ' ' → logprob: -14.35076904296875

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013871431583538651
    2. ' Point' → logprob: -7.501387119293213
    3. '            ' → logprob: -7.876387119293213
    4. '       ' → logprob: -8.001387596130371
    5. '        ' → logprob: -10.126387596130371
    6. '               ' → logprob: -11.001387596130371
    7. 'Point' → logprob: -11.126387596130371
    8. '<|end|>' → logprob: -11.501387596130371
    9. '   ' → logprob: -11.751387596130371
    10. '          ' → logprob: -11.876387596130371

Token 131: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.10022865980863571
    2. 'Point' (adapté à ' Point') → logprob: -2.3502285480499268
    3. '           ' → logprob: -11.100228309631348
    4. '            ' → logprob: -12.600228309631348
    5. '	Point' → logprob: -13.100228309631348
    6. '(Point' → logprob: -14.350228309631348
    7. '_Point' → logprob: -15.600228309631348
    8. ' ' → logprob: -15.725228309631348
    9. '.Point' → logprob: -15.850228309631348
    10. '        ' → logprob: -15.975228309631348

Token 132: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004332083277404308
    2. '(' → logprob: -5.504332065582275
    3. ' (' → logprob: -8.504332542419434
    4. '(s' → logprob: -10.004332542419434
    5. '(
' → logprob: -12.254332542419434
    6. '<|end|>' → logprob: -15.004332542419434
    7. '(this' → logprob: -15.504332542419434
    8. ' ' → logprob: -15.879332542419434
    9. 'self' → logprob: -16.004331588745117
    10. ' self' → logprob: -16.129331588745117

Token 133: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0004223323194310069
    2. 'x' → logprob: -7.875422477722168
    3. '-' → logprob: -10.500422477722168
    4. '.' → logprob: -11.250422477722168
    5. ' .' → logprob: -14.750422477722168
    6. ' x' → logprob: -15.375422477722168
    7. ' -' → logprob: -15.375422477722168
    8. '```' → logprob: -15.625422477722168
    9. ' ' → logprob: -15.750422477722168
    10. '	x' → logprob: -16.62542152404785

Token 134: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0026607930194586515
    2. ',' → logprob: -6.127660751342773
    3. ' -' → logprob: -7.877660751342773
    4. ' ,' → logprob: -9.752660751342773
    5. ' ' → logprob: -10.252660751342773
    6. '0' → logprob: -13.877660751342773
    7. '   ' → logprob: -14.127660751342773
    8. ',self' → logprob: -14.752660751342773
    9. '  ' → logprob: -15.502660751342773
    10. '```' → logprob: -15.752660751342773

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -15.125024795532227
    4. '<|end|>' → logprob: -15.500024795532227
    5. ',' → logprob: -16.375024795532227
    6. '

' → logprob: -16.562524795532227
    7. '   ' → logprob: -17.000024795532227
    8. '```' → logprob: -17.187524795532227
    9. '-' → logprob: -17.625024795532227
    10. '  ' → logprob: -17.750024795532227

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012130453251302242
    2. ' ,' → logprob: -9.250121116638184
    3. '<|end|>' → logprob: -10.625121116638184
    4. ',
' → logprob: -14.875121116638184
    5. '),' → logprob: -15.625121116638184
    6. ')' → logprob: -16.0001220703125
    7. ' ' → logprob: -16.3751220703125
    8. '‌,' → logprob: -17.5001220703125
    9. '',' → logprob: -17.8751220703125
    10. '<|end|>' → logprob: -18.2501220703125

Token 137: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28633713722229004
    2. ' self' → logprob: -1.41133713722229
    3. '<|end|>' → logprob: -5.286336898803711
    4. ' ' → logprob: -9.536336898803711
    5. '(self' → logprob: -11.661336898803711
    6. '_self' → logprob: -12.536336898803711
    7. ')' → logprob: -12.536336898803711
    8. '0' → logprob: -12.786336898803711
    9. '[self' → logprob: -12.786336898803711
    10. ',' → logprob: -12.911336898803711

Token 138: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0054160114377737045
    2. ',' → logprob: -5.630415916442871
    3. '.' → logprob: -6.755415916442871
    4. '.x' → logprob: -7.755415916442871
    5. ',y' → logprob: -9.380415916442871
    6. ')' → logprob: -9.755415916442871
    7. 'y' → logprob: -10.505415916442871
    8. ' ,' → logprob: -10.755415916442871
    9. '+' → logprob: -11.505415916442871
    10. '),' → logprob: -11.880415916442871

Token 139: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2704334557056427
    2. '),
' → logprob: -1.5204334259033203
    3. ',' → logprob: -4.39543342590332
    4. ')' → logprob: -5.27043342590332
    5. '       ' → logprob: -7.89543342590332
    6. ',
' → logprob: -8.27043342590332
    7. '           ' → logprob: -9.02043342590332
    8. '),

' → logprob: -10.64543342590332
    9. ' ),
' → logprob: -10.64543342590332
    10. ' ),' → logprob: -10.77043342590332

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003583456273190677
    2. ' Point' → logprob: -8.000358581542969
    3. 'Point' → logprob: -11.000358581542969
    4. '            ' → logprob: -12.750358581542969
    5. '          ' → logprob: -13.000358581542969
    6. '   ' → logprob: -14.625358581542969
    7. '       ' → logprob: -15.250358581542969
    8. '		' → logprob: -16.50035858154297
    9. ' ' → logprob: -16.75035858154297
    10. ' ' → logprob: -16.87535858154297

Token 141: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.10095081478357315
    2. 'Point' (adapté à ' Point') → logprob: -2.3509507179260254
    3. '           ' → logprob: -7.225950717926025
    4. '            ' → logprob: -11.600951194763184
    5. '	Point' → logprob: -12.600951194763184
    6. '(Point' → logprob: -13.100951194763184
    7. '               ' → logprob: -14.725951194763184
    8. ' ' → logprob: -15.475951194763184
    9. '_Point' → logprob: -15.475951194763184
    10. '          ' → logprob: -15.600951194763184

Token 142: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.470346599817276
    2. '(Point' → logprob: -1.0953465700149536
    3. '(' → logprob: -3.220346689224243
    4. ' (' → logprob: -7.845346450805664
    5. '(
' → logprob: -7.970346450805664
    6. 'self' → logprob: -9.720346450805664
    7. '('' → logprob: -11.470346450805664
    8. '(None' → logprob: -12.345346450805664
    9. '(

' → logprob: -12.470346450805664
    10. ')' → logprob: -12.845346450805664

Token 143: '.x' (ID: 3700)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.020141465589404106
    2. '.' → logprob: -4.3951416015625
    3. '.x' → logprob: -4.8951416015625
    4. '+' → logprob: -10.2701416015625
    5. ' .' → logprob: -10.3951416015625
    6. 'y' → logprob: -10.7701416015625
    7. ' ' → logprob: -10.7701416015625
    8. ',' → logprob: -12.6451416015625
    9. ')' → logprob: -12.7701416015625
    10. '+.' → logprob: -13.0201416015625

Token 144: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12737907469272614
    2. ',' → logprob: -2.1273791790008545
    3. ' ,' → logprob: -8.752379417419434
    4. ',self' → logprob: -9.252379417419434
    5. '+self' → logprob: -10.002379417419434
    6. ' +' → logprob: -10.127379417419434
    7. ' ' → logprob: -10.502379417419434
    8. ',y' → logprob: -10.627379417419434
    9. '+,' → logprob: -11.002379417419434
    10. ',+' → logprob: -11.377379417419434

Token 145: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693892419338226
    2. ' self' → logprob: -2.126938819885254
    3. '<|end|>' → logprob: -11.876938819885254
    4. ' ' → logprob: -13.126938819885254
    5. '(self' → logprob: -14.626938819885254
    6. '[self' → logprob: -14.876938819885254
    7. '	self' → logprob: -14.876938819885254
    8. '=self' → logprob: -15.501938819885254
    9. '
' → logprob: -15.876938819885254
    10. '1' → logprob: -16.75193977355957

Token 146: '.y' (ID: 4486)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012727351859211922
    2. '.y' → logprob: -7.251272678375244
    3. '-' → logprob: -7.876272678375244
    4. 'y' → logprob: -8.751273155212402
    5. '+y' → logprob: -11.126273155212402
    6. ' +' → logprob: -11.876273155212402
    7. '1' → logprob: -13.626273155212402
    8. '+
' → logprob: -14.001273155212402
    9. '<|end|>' → logprob: -15.251273155212402
    10. ' y' → logprob: -15.501273155212402

Token 147: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.380904672667384e-05
    2. '-' → logprob: -10.500033378601074
    3. ' +' → logprob: -12.000033378601074
    4. '+)' → logprob: -17.62503433227539
    5. '+
' → logprob: -17.75003433227539
    6. ')' → logprob: -19.00003433227539
    7. '1' → logprob: -19.12503433227539
    8. ')+' → logprob: -19.62503433227539
    9. ' -' → logprob: -20.25003433227539
    10. '+')' → logprob: -20.50003433227539

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '-' → logprob: -16.500001907348633
    4. ')' → logprob: -17.750001907348633
    5. '```' → logprob: -18.000001907348633
    6. '<|end|>' → logprob: -18.875001907348633
    7. '0' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '
' → logprob: -19.500001907348633
    10. '  ' → logprob: -20.625001907348633

Token 149: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02663198672235012
    2. '),
' → logprob: -3.651632070541382
    3. ')' → logprob: -8.526632308959961
    4. ' ),' → logprob: -9.776632308959961
    5. '       ' → logprob: -9.901632308959961
    6. '),

' → logprob: -11.276632308959961
    7. ' ),
' → logprob: -12.276632308959961
    8. '           ' → logprob: -12.401632308959961
    9. '   ' → logprob: -12.901632308959961
    10. '),
' → logprob: -13.276632308959961

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.03521392197581e-05
    2. 'Point' → logprob: -11.250030517578125
    3. ' Point' → logprob: -11.250030517578125
    4. '          ' → logprob: -13.250030517578125
    5. '            ' → logprob: -13.875030517578125
    6. '       ' → logprob: -14.125030517578125
    7. '   ' → logprob: -14.625030517578125
    8. '		' → logprob: -15.750030517578125
    9. '               ' → logprob: -16.125030517578125
    10. '        ' → logprob: -17.250030517578125

Token 151: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' (adapté à ' Point') → logprob: -0.5760605931282043
    2. ' Point' → logprob: -0.8260605931282043
    3. 'self' → logprob: -9.45106029510498
    4. '(Point' → logprob: -11.07606029510498
    5. ' self' → logprob: -11.32606029510498
    6. '           ' → logprob: -12.20106029510498
    7. '       ' → logprob: -12.82606029510498
    8. '   ' → logprob: -12.82606029510498
    9. '    ' → logprob: -13.45106029510498
    10. '	Point' → logprob: -13.82606029510498

Token 152: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010702044237405062
    2. '(' → logprob: -7.001070022583008
    3. ' (' → logprob: -8.876070022583008
    4. '(Point' → logprob: -11.251070022583008
    5. 'self' → logprob: -13.126070022583008
    6. '(s' → logprob: -13.501070022583008
    7. ')' → logprob: -14.001070022583008
    8. '(
' → logprob: -14.376070022583008
    9. ' self' → logprob: -15.126070022583008
    10. '(Self' → logprob: -15.376070022583008

Token 153: '.x' (ID: 3700)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007037051022052765
    2. '.y' → logprob: -5.007037162780762
    3. ' -' → logprob: -8.132037162780762
    4. ')' → logprob: -11.382037162780762
    5. '.' → logprob: -12.257037162780762
    6. '.x' → logprob: -12.382037162780762
    7. 'y' → logprob: -13.132037162780762
    8. '+' → logprob: -13.132037162780762
    9. ' ' → logprob: -13.632037162780762
    10. '),' → logprob: -14.632037162780762

Token 154: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0683535037969705e-05
    2. ' -' → logprob: -11.50001049041748
    3. ')' → logprob: -15.00001049041748
    4. '1' → logprob: -15.87501049041748
    5. ',' → logprob: -17.500011444091797
    6. '+' → logprob: -17.750011444091797
    7. ' ' → logprob: -17.875011444091797
    8. '   ' → logprob: -17.875011444091797
    9. '```' → logprob: -18.000011444091797
    10. '),' → logprob: -18.250011444091797

Token 155: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759434103965759
    2. ' self' → logprob: -0.8259434103965759
    3. ' ' → logprob: -13.075942993164062
    4. '(self' → logprob: -14.075942993164062
    5. '	self' → logprob: -15.200942993164062
    6. '[self' → logprob: -15.575942993164062
    7. ')' → logprob: -15.700942993164062
    8. 'y' → logprob: -16.075942993164062
    9. '   ' → logprob: -16.325942993164062
    10. '       ' → logprob: -16.700942993164062

Token 156: '.y' (ID: 4486)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1517960956552997e-05
    2. ' -' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -17.250011444091797
    4. '1' → logprob: -17.375011444091797
    5. '+' → logprob: -17.875011444091797
    6. ')' → logprob: -18.000011444091797
    7. ' ' → logprob: -19.625011444091797
    8. ')-' → logprob: -19.750011444091797
    9. '-)' → logprob: -20.125011444091797
    10. '[' → logprob: -20.250011444091797

Token 157: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5048530030981055e-06
    2. ' -' → logprob: -13.500001907348633
    3. '1' → logprob: -17.625001907348633
    4. ')' → logprob: -19.750001907348633
    5. '+' → logprob: -20.250001907348633
    6. '–' → logprob: -21.000001907348633
    7. '−' → logprob: -21.500001907348633
    8. ')-' → logprob: -22.125001907348633
    9. '-)' → logprob: -22.125001907348633
    10. '<|end|>' → logprob: -22.125001907348633

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.250000953674316
    3. '-' → logprob: -16.375
    4. '<|end|>' → logprob: -16.75
    5. '```' → logprob: -17.375
    6. ')' → logprob: -18.0
    7. '۱' → logprob: -18.125
    8. '<|end|>' → logprob: -19.1875
    9. '+' → logprob: -19.8125
    10. '   ' → logprob: -19.9375

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2279687374830246
    2. ']' → logprob: -1.977968692779541
    3. '       ' → logprob: -2.977968692779541
    4. ')]' → logprob: -4.352968692779541
    5. '   ' → logprob: -6.727968692779541
    6. ' ]' → logprob: -8.1029691696167
    7. ' )' → logprob: -9.2279691696167
    8. '])' → logprob: -9.9779691696167
    9. ']
' → logprob: -10.1029691696167
    10. ')
' → logprob: -10.6029691696167

Token 160: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5290807485580444
    2. '       ' → logprob: -0.9040807485580444
    3. '   ' → logprob: -5.404080867767334
    4. ' ]' → logprob: -6.654080867767334
    5. ')' → logprob: -9.154080390930176
    6. ']
' → logprob: -11.029080390930176
    7. '<|end|>' → logprob: -11.279080390930176
    8. '}' → logprob: -12.279080390930176
    9. ']

' → logprob: -12.904080390930176
    10. '	' → logprob: -13.404080390930176

Token 161: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' (adapté à ' ]') → logprob: -0.00040517066372558475
    2. '   ' → logprob: -8.500405311584473
    3. ' ]' → logprob: -8.625405311584473
    4. '       ' → logprob: -11.375405311584473
    5. ')' → logprob: -12.000405311584473
    6. ']
' → logprob: -14.125405311584473
    7. ' ' → logprob: -14.125405311584473
    8. '}' → logprob: -14.250405311584473
    9. '<|end|>' → logprob: -14.625405311584473
    10. ']

' → logprob: -15.125405311584473

Token 162: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.18804718554019928
    2. 'def' → logprob: -1.813047170639038
    3. '   ' → logprob: -5.438047409057617
    4. '#' → logprob: -5.563047409057617
    5. ' class' → logprob: -10.063047409057617
    6. '
' → logprob: -11.438047409057617
    7. ' ' → logprob: -11.813047409057617
    8. ' def' → logprob: -11.938047409057617
    9. 'from' → logprob: -12.688047409057617
    10. '```' → logprob: -12.938047409057617

Token 164: ' Grid' (ID: 18087)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.022839253768324852
    2. 'def' → logprob: -4.022839069366455
    3. ' class' → logprob: -5.397839069366455
    4. '#' → logprob: -9.647839546203613
    5. 'from' → logprob: -10.022839546203613
    6. 'Class' → logprob: -11.772839546203613
    7. ' def' → logprob: -11.772839546203613
    8. '```' → logprob: -12.397839546203613
    9. 'The' → logprob: -12.522839546203613
    10. 'import' → logprob: -12.897839546203613

Token 165: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.14419016242027283
    2. ':' → logprob: -2.6441900730133057
    3. ' class' → logprob: -2.7691900730133057
    4. '(class' → logprob: -9.394189834594727
    5. '<|end|>' → logprob: -9.394189834594727
    6. '<class' → logprob: -9.519189834594727
    7. '(' → logprob: -9.519189834594727
    8. ':
' → logprob: -9.894189834594727
    9. '<|end|>' → logprob: -10.519189834594727
    10. ' ' → logprob: -10.769189834594727

Token 166: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0703371912240982
    2. ':' → logprob: -2.8203372955322266
    3. ' class' → logprob: -4.820337295532227
    4. ':
' → logprob: -8.570337295532227
    5. '<class' → logprob: -10.320337295532227
    6. '(class' → logprob: -10.820337295532227
    7. '<|end|>' → logprob: -11.320337295532227
    8. '(' → logprob: -12.445337295532227
    9. ',' → logprob: -12.820337295532227
    10. '-class' → logprob: -13.570337295532227

Token 167: ' representation' (ID: 22311)
  Prédit: ' handling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' handling' → logprob: -1.0425450801849365
    2. ' managing' → logprob: -1.2925450801849365
    3. ' path' → logprob: -1.9175450801849365
    4. 'path' → logprob: -2.5425450801849365
    5. ' grid' → logprob: -2.9175450801849365
    6. 'handling' → logprob: -3.5425450801849365
    7. ' BFS' → logprob: -3.9175450801849365
    8. ' representing' → logprob: -4.042545318603516
    9. 'man' → logprob: -4.667545318603516
    10. 'grid' → logprob: -5.542545318603516

Token 168: ' of' (ID: 328)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0075705344788730145
    2. ' class' → logprob: -5.132570743560791
    3. ':' → logprob: -6.632570743560791
    4. ':
' → logprob: -8.382570266723633
    5. '<|end|>' → logprob: -10.507570266723633
    6. '<class' → logprob: -10.882570266723633
    7. '
' → logprob: -11.007570266723633
    8. '(class' → logprob: -11.757570266723633
    9. ' and' → logprob: -12.007570266723633
    10. ',' → logprob: -12.257570266723633

Token 169: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5763654708862305
    2. ' the' → logprob: -1.3263654708862305
    3. 'a' → logprob: -2.3263654708862305
    4. ' a' → logprob: -2.8263654708862305
    5. ' grid' → logprob: -5.3263654708862305
    6. '2' → logprob: -5.3263654708862305
    7. ' ' → logprob: -6.3263654708862305
    8. 'grid' → logprob: -6.5763654708862305
    9. ' points' → logprob: -6.8263654708862305
    10. 'points' → logprob: -7.3263654708862305

Token 170: ' paper' (ID: 6651)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.6684730648994446
    2. ' grid' → logprob: -0.9184730648994446
    3. 'maze' → logprob: -3.5434730052948
    4. ' maze' → logprob: -4.043473243713379
    5. 'environment' → logprob: -4.668473243713379
    6. 'map' → logprob: -4.918473243713379
    7. ' environment' → logprob: -4.918473243713379
    8. ' map' → logprob: -6.168473243713379
    9. 'game' → logprob: -6.418473243713379
    10. '2' → logprob: -6.418473243713379

Token 171: ' and' (ID: 326)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02893148548901081
    2. ' class' → logprob: -4.153931617736816
    3. ':' → logprob: -4.528931617736816
    4. '<|end|>' → logprob: -6.403931617736816
    5. ':
' → logprob: -8.653931617736816
    6. ',' → logprob: -10.028931617736816
    7. '<|end|>' → logprob: -10.278931617736816
    8. '<class' → logprob: -10.278931617736816
    9. '
' → logprob: -11.278931617736816
    10. '[class' → logprob: -11.403931617736816

Token 172: ' operations' (ID: 12084)
  Prédit: 'fold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fold' → logprob: -0.8267126083374023
    2. ' folding' → logprob: -1.2017126083374023
    3. ' obstacles' → logprob: -3.0767126083374023
    4. ' operations' → logprob: -3.3267126083374023
    5. ' fold' → logprob: -3.9517126083374023
    6. ' points' → logprob: -4.201712608337402
    7. ' folds' → logprob: -4.201712608337402
    8. ' its' → logprob: -4.451712608337402
    9. ' marking' → logprob: -4.451712608337402
    10. ' the' → logprob: -4.826712608337402

Token 173: ' on' (ID: 402)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0018552233232185245
    2. ' class' → logprob: -6.376855373382568
    3. '<|end|>' → logprob: -9.62685489654541
    4. ':' → logprob: -9.87685489654541
    5. '
' → logprob: -11.12685489654541
    6. ':
' → logprob: -11.87685489654541
    7. '<class' → logprob: -12.37685489654541
    8. '<|end|>' → logprob: -12.50185489654541
    9. ' ' → logprob: -14.00185489654541
    10. ',' → logprob: -14.25185489654541

Token 174: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.28865760564804077
    2. 'it' → logprob: -1.6636576652526855
    3. ' points' → logprob: -3.4136576652526855
    4. 'the' → logprob: -4.5386576652526855
    5. 'points' → logprob: -4.6636576652526855
    6. ' the' → logprob: -4.9136576652526855
    7. ' grid' → logprob: -8.663657188415527
    8. ' cells' → logprob: -8.663657188415527
    9. 'It' → logprob: -9.288657188415527
    10. 'cells' → logprob: -9.288657188415527

Token 175: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00018458699923940003
    2. ' class' → logprob: -9.125185012817383
    3. '
' → logprob: -9.500185012817383
    4. ':
' → logprob: -15.125185012817383
    5. '<class' → logprob: -15.625185012817383
    6. ':' → logprob: -16.250185012817383
    7. ',class' → logprob: -17.000185012817383
    8. '<|end|>' → logprob: -17.000185012817383
    9. '"class' → logprob: -17.875185012817383
    10. ''class' → logprob: -18.875185012817383

Token 176: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.4121114822482923e-06
    2. ' class' → logprob: -12.625003814697266
    3. '
' → logprob: -18.000003814697266
    4. '<class' → logprob: -18.500003814697266
    5. '<|end|>' → logprob: -20.875003814697266
    6. '"class' → logprob: -21.250003814697266
    7. ',class' → logprob: -21.625003814697266
    8. 'clas' → logprob: -21.750003814697266
    9. '-class' → logprob: -22.375003814697266
    10. '```' → logprob: -22.375003814697266

Token 177: ' Grid' (ID: 18087)
  Prédit: ' Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Grid' → logprob: -0.010707031935453415
    2. 'Grid' → logprob: -4.760706901550293
    3. ' Paper' → logprob: -6.260706901550293
    4. ' ' → logprob: -9.760706901550293
    5. 'Paper' → logprob: -10.010706901550293
    6. '	Grid' → logprob: -10.260706901550293
    7. '_grid' → logprob: -11.635706901550293
    8. ' Point' → logprob: -12.135706901550293
    9. ' Gr' → logprob: -12.135706901550293
    10. ' Graph' → logprob: -12.260706901550293

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005970507860183716
    2. ':
' → logprob: -5.130970478057861
    3. ' :' → logprob: -10.63097095489502
    4. '(object' → logprob: -12.25597095489502
    5. ':

' → logprob: -12.50597095489502
    6. '   ' → logprob: -13.13097095489502
    7. '(' → logprob: -13.38097095489502
    8. ':
' → logprob: -13.50597095489502
    9. ':def' → logprob: -13.63097095489502
    10. ' :
' → logprob: -13.88097095489502

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006091519608162344
    2. ' def' → logprob: -7.500608921051025
    3. 'def' → logprob: -9.875609397888184
    4. ':' → logprob: -12.875609397888184
    5. '    
' → logprob: -14.000609397888184
    6. '   ' → logprob: -14.875609397888184
    7. '	def' → logprob: -15.000609397888184
    8. ':def' → logprob: -15.500609397888184
    9. '  ' → logprob: -16.250608444213867
    10. '    ' → logprob: -16.250608444213867

Token 180: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16055382788181305
    2. ' def' → logprob: -1.9105538129806519
    3. '   ' → logprob: -8.035553932189941
    4. 'de' → logprob: -12.285553932189941
    5. ' ' → logprob: -14.785553932189941
    6. '	def' → logprob: -15.035553932189941
    7. '__' → logprob: -15.410553932189941
    8. ' __' → logprob: -16.535552978515625
    9. ' de' → logprob: -16.535552978515625
    10. '  ' → logprob: -16.660552978515625

Token 181: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0007326744962483644
    2. ' ' → logprob: -8.125732421875
    3. 'init' → logprob: -9.125732421875
    4. '__' → logprob: -9.125732421875
    5. '_init' → logprob: -9.500732421875
    6. ' init' → logprob: -10.000732421875
    7. ' _' → logprob: -10.000732421875
    8. ' def' → logprob: -10.250732421875
    9. ' ' → logprob: -11.750732421875
    10. 'def' → logprob: -12.375732421875

Token 182: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.098748053773306e-05
    2. 'in' → logprob: -11.00006103515625
    3. '   ' → logprob: -11.37506103515625
    4. 'i' → logprob: -11.37506103515625
    5. 'ini' → logprob: -11.50006103515625
    6. ' init' → logprob: -12.75006103515625
    7. '  ' → logprob: -13.37506103515625
    8. '
' → logprob: -13.37506103515625
    9. ' ' → logprob: -13.62506103515625
    10. 'inite' → logprob: -13.75006103515625

Token 183: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.31386232376098633
    2. '(self' → logprob: -1.3138623237609863
    3. ' (' → logprob: -7.938862323760986
    4. '(' → logprob: -8.938861846923828
    5. '__(
' → logprob: -9.813861846923828
    6. 'self' → logprob: -10.438861846923828
    7. '__' → logprob: -11.313861846923828
    8. '_(' → logprob: -11.688861846923828
    9. ' self' → logprob: -13.313861846923828
    10. ' ' → logprob: -13.563861846923828

Token 184: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018152983859181404
    2. ' self' → logprob: -4.018153190612793
    3. '   ' → logprob: -14.143153190612793
    4. ',' → logprob: -14.643153190612793
    5. ' ' → logprob: -14.643153190612793
    6. ')' → logprob: -14.893153190612793
    7. '       ' → logprob: -15.018153190612793
    8. '	self' → logprob: -15.268153190612793
    9. '
' → logprob: -15.768153190612793
    10. '(self' → logprob: -16.018152236938477

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009339710813947022
    2. ' ,' → logprob: -7.12593412399292
    3. 'self' → logprob: -9.000933647155762
    4. ',self' → logprob: -12.500933647155762
    5. '__,' → logprob: -14.375933647155762
    6. ',width' → logprob: -14.500933647155762
    7. ' self' → logprob: -14.875933647155762
    8. '(self' → logprob: -15.250933647155762
    9. ',size' → logprob: -15.250933647155762
    10. '_,' → logprob: -15.625933647155762

Token 186: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.32469993829727173
    2. ' width' → logprob: -1.449699878692627
    3. 'self' → logprob: -4.574699878692627
    4. 'rows' → logprob: -4.699699878692627
    5. 'points' → logprob: -4.699699878692627
    6. ' points' → logprob: -5.324699878692627
    7. 'grid' → logprob: -5.824699878692627
    8. 'lines' → logprob: -6.449699878692627
    9. ' self' → logprob: -6.699699878692627
    10. ' grid' → logprob: -6.824699878692627

Token 187: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3178141713142395
    2. ',' → logprob: -1.3178141117095947
    3. ':int' → logprob: -5.442814350128174
    4. ' ,' → logprob: -8.692813873291016
    5. '=' → logprob: -10.692813873291016
    6. ' :' → logprob: -10.817813873291016
    7. '=int' → logprob: -13.692813873291016
    8. ',int' → logprob: -13.942813873291016
    9. ':,' → logprob: -14.442813873291016
    10. '   ' → logprob: -14.817813873291016

Token 188: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3135398328304291
    2. ' int' → logprob: -1.3135398626327515
    3. ' ' → logprob: -8.938539505004883
    4. ')' → logprob: -10.688539505004883
    5. ':int' → logprob: -10.688539505004883
    6. '   ' → logprob: -10.938539505004883
    7. '10' → logprob: -11.313539505004883
    8. ',' → logprob: -11.313539505004883
    9. ',int' → logprob: -11.438539505004883
    10. '100' → logprob: -11.813539505004883

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ' ,' → logprob: -10.250035285949707
    3. ',int' → logprob: -16.250036239624023
    4. '‌,' → logprob: -16.625036239624023
    5. ' ' → logprob: -17.375036239624023
    6. '   ' → logprob: -17.500036239624023
    7. ',
' → logprob: -17.625036239624023
    8. ')' → logprob: -18.000036239624023
    9. ',width' → logprob: -18.125036239624023
    10. '=' → logprob: -18.875036239624023

Token 190: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.42889174818992615
    2. ' height' → logprob: -1.0538917779922485
    3. '   ' → logprob: -8.678892135620117
    4. '	height' → logprob: -12.053892135620117
    5. ' ' → logprob: -12.303892135620117
    6. '    ' → logprob: -12.928892135620117
    7. ',height' → logprob: -13.553892135620117
    8. ')' → logprob: -13.803892135620117
    9. '_height' → logprob: -14.053892135620117
    10. ';height' → logprob: -14.428892135620117

Token 191: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07658257335424423
    2. ':' → logprob: -3.201582670211792
    3. ',' → logprob: -3.451582670211792
    4. ')' → logprob: -7.451582431793213
    5. ' ):' → logprob: -7.826582431793213
    6. '):
' → logprob: -8.826582908630371
    7. ':int' → logprob: -9.701582908630371
    8. '   ' → logprob: -9.826582908630371
    9. ' ,' → logprob: -10.576582908630371
    10. ' ' → logprob: -11.201582908630371

Token 192: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12696558237075806
    2. ' int' → logprob: -2.1269655227661133
    3. 'height' → logprob: -11.251965522766113
    4. ')' → logprob: -11.376965522766113
    5. ':int' → logprob: -11.626965522766113
    6. ' height' → logprob: -13.376965522766113
    7. '=int' → logprob: -14.251965522766113
    8. '   ' → logprob: -14.626965522766113
    9. '<int' → logprob: -14.751965522766113
    10. '):
' → logprob: -15.251965522766113

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006359508261084557
    2. ',' → logprob: -8.125636100769043
    3. '):
' → logprob: -8.375636100769043
    4. ')' → logprob: -9.750636100769043
    5. ' ):' → logprob: -10.250636100769043
    6. ':' → logprob: -11.375636100769043
    7. '   ' → logprob: -13.500636100769043
    8. '):
' → logprob: -14.000636100769043
    9. ' ' → logprob: -14.375636100769043
    10. ']:' → logprob: -15.000636100769043

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027099132421426475
    2. 'self' → logprob: -8.50027084350586
    3. ' self' → logprob: -9.87527084350586
    4. ')' → logprob: -12.37527084350586
    5. ',' → logprob: -12.62527084350586
    6. '   ' → logprob: -12.75027084350586
    7. '	' → logprob: -14.00027084350586
    8. ' ' → logprob: -14.50027084350586
    9. '	   ' → logprob: -14.62527084350586
    10. '<|end|>' → logprob: -14.62527084350586

Token 195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012658914551138878
    2. ' self' → logprob: -4.762659072875977
    3. '       ' → logprob: -5.512659072875977
    4. '   ' → logprob: -15.262659072875977
    5. '	self' → logprob: -15.262659072875977
    6. ' ' → logprob: -16.387659072875977
    7. 'super' → logprob: -16.512659072875977
    8. '(self' → logprob: -16.762659072875977
    9. '
' → logprob: -17.512659072875977
    10. 'def' → logprob: -17.512659072875977

Token 196: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.03441042825579643
    2. '.' → logprob: -4.03441047668457
    3. '.grid' → logprob: -4.53441047668457
    4. '.data' → logprob: -6.28441047668457
    5. '.cells' → logprob: -6.65941047668457
    6. '.points' → logprob: -6.90941047668457
    7. 'width' → logprob: -8.15941047668457
    8. '._' → logprob: -8.28441047668457
    9. '.height' → logprob: -9.40941047668457
    10. '   ' → logprob: -9.53441047668457

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6763864159584045
    2. ' =' → logprob: -0.8013864159584045
    3. ',' → logprob: -3.3013863563537598
    4. ' ' → logprob: -5.80138635635376
    5. ' ,' → logprob: -6.17638635635376
    6. ':' → logprob: -8.051386833190918
    7. ')' → logprob: -8.176386833190918
    8. '<|end|>' → logprob: -8.926386833190918
    9. '   ' → logprob: -9.301386833190918
    10. '=int' → logprob: -10.426386833190918

Token 198: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.3132675588130951
    2. ' width' → logprob: -1.3132675886154175
    3. 'height' → logprob: -12.313267707824707
    4. '(width' → logprob: -14.438267707824707
    5. '	width' → logprob: -14.688267707824707
    6. ' height' → logprob: -15.688267707824707
    7. ',width' → logprob: -17.18826675415039
    8. '
' → logprob: -17.18826675415039
    9. ';width' → logprob: -17.43826675415039
    10. '_width' → logprob: -17.68826675415039

Token 199: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03567105531692505
    2. '<|end|>' → logprob: -3.7856709957122803
    3. '
' → logprob: -4.410671234130859
    4. ',' → logprob: -9.28567123413086
    5. 'self' → logprob: -10.41067123413086
    6. ' and' → logprob: -10.78567123413086
    7. '<|end|>' → logprob: -10.91067123413086
    8. ' ' → logprob: -12.03567123413086
    9. '        
' → logprob: -12.03567123413086
    10. '   ' → logprob: -12.03567123413086

Token 201: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.23547117412090302
    2. ' self' → logprob: -1.6104711294174194
    3. '       ' → logprob: -4.610471248626709
    4. 'height' → logprob: -11.11047077178955
    5. '   ' → logprob: -11.23547077178955
    6. ' ' → logprob: -11.48547077178955
    7. '
' → logprob: -12.11047077178955
    8. ' height' → logprob: -12.23547077178955
    9. '      ' → logprob: -12.73547077178955
    10. '	self' → logprob: -13.11047077178955

Token 202: '.height' (ID: 11682)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23149892687797546
    2. ' =' → logprob: -1.8564989566802979
    3. '.height' → logprob: -3.356498956680298
    4. 'height' → logprob: -4.606498718261719
    5. ' ' → logprob: -6.231498718261719
    6. ' height' → logprob: -6.606498718261719
    7. ',' → logprob: -6.606498718261719
    8. '   ' → logprob: -8.231498718261719
    9. '.' → logprob: -8.356498718261719
    10. '_height' → logprob: -8.606498718261719

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8707146048545837
    2. '<|end|>' → logprob: -1.1207146644592285
    3. ' =' → logprob: -1.3707146644592285
    4. '<|end|>' → logprob: -7.3707146644592285
    5. ',' → logprob: -7.8707146644592285
    6. ')' → logprob: -8.87071418762207
    7. ':' → logprob: -9.49571418762207
    8. ' ' → logprob: -9.62071418762207
    9. '
' → logprob: -10.74571418762207
    10. '=int' → logprob: -10.99571418762207

Token 204: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.12692904472351074
    2. ' height' → logprob: -2.1269290447235107
    3. '(height' → logprob: -14.37692928314209
    4. '	height' → logprob: -16.251928329467773
    5. '.height' → logprob: -16.251928329467773
    6. ' ' → logprob: -16.626928329467773
    7. ';height' → logprob: -16.876928329467773
    8. '_height' → logprob: -17.501928329467773
    9. ',height' → logprob: -17.876928329467773
    10. 'width' → logprob: -18.501928329467773

Token 205: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005387356504797935
    2. '
' → logprob: -7.7505388259887695
    3. '<|end|>' → logprob: -9.50053882598877
    4. ',' → logprob: -11.00053882598877
    5. 'self' → logprob: -11.62553882598877
    6. '<|end|>' → logprob: -13.25053882598877
    7. ' self' → logprob: -13.37553882598877
    8. '   ' → logprob: -13.62553882598877
    9. ',
' → logprob: -14.00053882598877
    10. '        
' → logprob: -14.87553882598877

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0206720617134124e-05
    2. '<|end|>' → logprob: -12.12501049041748
    3. 'self' → logprob: -13.37501049041748
    4. ' self' → logprob: -13.75001049041748
    5. '
' → logprob: -14.00001049041748
    6. '   ' → logprob: -14.75001049041748
    7. ',' → logprob: -15.00001049041748
    8. ' ' → logprob: -15.87501049041748
    9. '        
' → logprob: -16.000009536743164
    10. '	' → logprob: -16.000009536743164

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021272238343954086
    2. '       ' → logprob: -4.0212721824646
    3. ' self' → logprob: -5.7712721824646
    4. '   ' → logprob: -14.146272659301758
    5. '	self' → logprob: -15.146272659301758
    6. '#' → logprob: -15.646272659301758
    7. '[self' → logprob: -15.771272659301758
    8. '
' → logprob: -15.896272659301758
    9. '        
' → logprob: -16.146272659301758
    10. '(self' → logprob: -16.771272659301758

Token 208: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.40485793352127075
    2. '.grid' → logprob: -1.779857873916626
    3. '.data' → logprob: -2.154857873916626
    4. '.points' → logprob: -3.404857873916626
    5. '._' → logprob: -4.904858112335205
    6. '.' → logprob: -5.404858112335205
    7. '.contents' → logprob: -6.779858112335205
    8. '.values' → logprob: -7.529858112335205
    9. 'data' → logprob: -8.404857635498047
    10. '.content' → logprob: -8.904857635498047

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5792782306671143
    2. '=' → logprob: -0.8292782306671143
    3. ':' → logprob: -5.704277992248535
    4. ' ' → logprob: -14.579277992248535
    5. '=[]' → logprob: -15.329277992248535
    6. '={}' → logprob: -15.329277992248535
    7. '=set' → logprob: -15.829277992248535
    8. '[' → logprob: -16.07927894592285
    9. ' :' → logprob: -16.20427894592285
    10. '{' → logprob: -17.07927894592285

Token 210: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.26354652643203735
    2. '[[' → logprob: -1.5135464668273926
    3. ' [['' → logprob: -4.763546466827393
    4. '[['' → logprob: -6.138546466827393
    5. ' [' → logprob: -7.638546466827393
    6. '[' → logprob: -8.01354694366455
    7. 'set' → logprob: -10.76354694366455
    8. '{}' → logprob: -11.88854694366455
    9. ' set' → logprob: -12.38854694366455
    10. ' [["' → logprob: -12.63854694366455

Token 211: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07304728776216507
    2. '0' → logprob: -2.823047399520874
    3. ''' → logprob: -5.448047161102295
    4. 'None' → logprob: -5.573047161102295
    5. ''.' → logprob: -6.323047161102295
    6. ' False' → logprob: -6.948047161102295
    7. ' ' → logprob: -10.573047637939453
    8. '"' → logprob: -10.948047637939453
    9. ''#' → logprob: -11.198047637939453
    10. '''' → logprob: -11.323047637939453

Token 212: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007704818621277809
    2. 'for' → logprob: -4.882704734802246
    3. ']' → logprob: -9.882704734802246
    4. ' ' → logprob: -10.132704734802246
    5. ')' → logprob: -12.382704734802246
    6. '	for' → logprob: -13.007704734802246
    7. ' ]' → logprob: -14.257704734802246
    8. '   ' → logprob: -15.007704734802246
    9. ']*' → logprob: -15.382704734802246
    10. '  ' → logprob: -16.382705688476562

Token 213: 'width' (ID: 6015)
  Prédit: 'width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.0025085974484682083
    2. ' width' → logprob: -6.252508640289307
    3. 'height' → logprob: -7.502508640289307
    4. 'self' → logprob: -10.752508163452148
    5. '(width' → logprob: -12.002508163452148
    6. ' height' → logprob: -15.002508163452148
    7. '   ' → logprob: -16.25250816345215
    8. ' self' → logprob: -16.50250816345215
    9. '	width' → logprob: -17.25250816345215
    10. ',width' → logprob: -19.50250816345215

Token 214: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014291026629507542
    2. 'for' → logprob: -4.264290809631348
    3. ']' → logprob: -9.389290809631348
    4. ')' → logprob: -10.389290809631348
    5. ' ' → logprob: -12.389290809631348
    6. ' ]' → logprob: -12.389290809631348
    7. '	for' → logprob: -12.889290809631348
    8. '<|end|>' → logprob: -13.514290809631348
    9. ' )' → logprob: -15.139290809631348
    10. ')]' → logprob: -15.514290809631348

Token 215: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014192421920597553
    2. 'range' → logprob: -4.264192581176758
    3. '_range' → logprob: -11.639192581176758
    4. '_' → logprob: -12.139192581176758
    5. '(range' → logprob: -12.389192581176758
    6. '	range' → logprob: -12.764192581176758
    7. '<|end|>' → logprob: -13.014192581176758
    8. ' _' → logprob: -13.014192581176758
    9. ' xrange' → logprob: -13.139192581176758
    10. ' ' → logprob: -14.389192581176758

Token 216: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002649119414854795
    2. ' range' → logprob: -8.250265121459961
    3. '(range' → logprob: -12.750265121459961
    4. ')' → logprob: -15.375265121459961
    5. '   ' → logprob: -15.750265121459961
    6. '	range' → logprob: -16.25026512145996
    7. 'ange' → logprob: -16.87526512145996
    8. 'height' → logprob: -17.25026512145996
    9. '       ' → logprob: -17.25026512145996
    10. '.range' → logprob: -17.25026512145996

Token 217: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031794982496649027
    2. ' range' → logprob: -5.753179550170898
    3. '   ' → logprob: -14.128179550170898
    4. ' ' → logprob: -14.628179550170898
    5. '	range' → logprob: -15.628179550170898
    6. '(range' → logprob: -16.0031795501709
    7. 'rang' → logprob: -16.0031795501709
    8. ')' → logprob: -16.6281795501709
    9. '  ' → logprob: -16.8781795501709
    10. '    ' → logprob: -17.3781795501709

Token 218: '(height' (ID: 44692)
  Prédit: '(height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(height' → logprob: -0.0004742831224575639
    2. 'height' → logprob: -7.875474452972412
    3. '(' → logprob: -9.375473976135254
    4. ' height' → logprob: -12.375473976135254
    5. ',height' → logprob: -13.125473976135254
    6. ';height' → logprob: -13.750473976135254
    7. ' (' → logprob: -14.250473976135254
    8. '	height' → logprob: -14.375473976135254
    9. '.height' → logprob: -15.500473976135254
    10. '   ' → logprob: -15.875473976135254

Token 219: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.65707261255011e-06
    2. ')' → logprob: -12.000008583068848
    3. ']' → logprob: -13.500008583068848
    4. ' )' → logprob: -14.500008583068848
    5. ')]
' → logprob: -16.000009536743164
    6. ')],' → logprob: -16.125009536743164
    7. '))' → logprob: -16.750009536743164
    8. '   ' → logprob: -17.000009536743164
    9. ')}' → logprob: -17.125009536743164
    10. '       ' → logprob: -17.875009536743164

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0078222751617432
    2. '<|end|>' → logprob: -1.0078222751617432
    3. '
' → logprob: -1.5078222751617432
    4. '    
' → logprob: -3.257822275161743
    5. 'def' → logprob: -5.882822036743164
    6. ' 
' → logprob: -6.132822036743164
    7. '  
' → logprob: -6.257822036743164
    8. '<|end|>' → logprob: -6.757822036743164
    9. ' ' → logprob: -7.757822036743164
    10. '

' → logprob: -7.882822036743164

Token 221: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06425674259662628
    2. ' def' → logprob: -2.8142566680908203
    3. '   ' → logprob: -6.18925666809082
    4. ' ' → logprob: -9.56425666809082
    5. '<|end|>' → logprob: -9.93925666809082
    6. '
' → logprob: -10.06425666809082
    7. '    
' → logprob: -10.06425666809082
    8. '        
' → logprob: -12.06425666809082
    9. '

' → logprob: -12.06425666809082
    10. ')' → logprob: -12.43925666809082

Token 222: ' mark' (ID: 1983)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5345969796180725
    2. ' is' → logprob: -1.6595969200134277
    3. ' set' → logprob: -2.2845969200134277
    4. ' def' → logprob: -2.5345969200134277
    5. ' get' → logprob: -3.5345969200134277
    6. ' __' → logprob: -5.784596920013428
    7. 'is' → logprob: -5.909596920013428
    8. ' ' → logprob: -6.409596920013428
    9. ' inside' → logprob: -6.409596920013428
    10. 'in' → logprob: -6.784596920013428

Token 223: '_line' (ID: 14418)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14819294214248657
    2. '(' → logprob: -2.023192882537842
    3. '_point' → logprob: -5.398192882537842
    4. '(Point' → logprob: -7.773192882537842
    5. '_cell' → logprob: -8.648193359375
    6. '_safe' → logprob: -8.773193359375
    7. 'ed' → logprob: -9.898193359375
    8. '_points' → logprob: -10.273193359375
    9. ' (' → logprob: -10.398193359375
    10. '(point' → logprob: -11.148193359375

Token 224: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029970545321702957
    2. '(' → logprob: -3.529970645904541
    3. ' (' → logprob: -8.529970169067383
    4. '(
' → logprob: -12.154970169067383
    5. 'self' → logprob: -12.529970169067383
    6. '(Point' → logprob: -13.154970169067383
    7. '_between' → logprob: -13.279970169067383
    8. '_points' → logprob: -13.529970169067383
    9. '(start' → logprob: -13.529970169067383
    10. '_start' → logprob: -13.654970169067383

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5873419046401978
    2. '(self' → logprob: -0.8373419046401978
    3. 'self' → logprob: -5.212341785430908
    4. ' (' → logprob: -5.837341785430908
    5. ' ,' → logprob: -6.587341785430908
    6. '(' → logprob: -7.837341785430908
    7. ',self' → logprob: -8.087342262268066
    8. ')' → logprob: -8.212342262268066
    9. ')(' → logprob: -8.712342262268066
    10. ' self' → logprob: -8.837342262268066

Token 226: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6739522814750671
    2. 'start' → logprob: -1.673952341079712
    3. ' start' → logprob: -2.048952341079712
    4. ' self' → logprob: -2.423952341079712
    5. ' p' → logprob: -3.173952341079712
    6. 'p' → logprob: -3.173952341079712
    7. 'from' → logprob: -7.173952102661133
    8. 'point' → logprob: -7.923952102661133
    9. ' point' → logprob: -9.173952102661133
    10. ' from' → logprob: -9.298952102661133

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015840200940147042
    2. '_start' → logprob: -7.001584053039551
    3. ':' → logprob: -8.62658405303955
    4. 'start' → logprob: -9.25158405303955
    5. 'oints' → logprob: -9.25158405303955
    6. 'a' → logprob: -9.50158405303955
    7. '_from' → logprob: -10.00158405303955
    8. '0' → logprob: -10.12658405303955
    9. 'A' → logprob: -10.25158405303955
    10. 's' → logprob: -10.37658405303955

Token 228: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032782447524368763
    2. ':' → logprob: -6.0032782554626465
    3. ' ,' → logprob: -7.3782782554626465
    4. ',p' → logprob: -8.878277778625488
    5. '<|end|>' → logprob: -10.503277778625488
    6. ' p' → logprob: -13.003277778625488
    7. '<|end|>' → logprob: -13.128277778625488
    8. 'p' → logprob: -13.253277778625488
    9. ' :' → logprob: -13.628277778625488
    10. '‌,' → logprob: -14.128277778625488

Token 229: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.018237387761473656
    2. ' Point' → logprob: -4.018237590789795
    3. '	Point' → logprob: -10.893237113952637
    4. '.Point' → logprob: -11.143237113952637
    5. '_Point' → logprob: -11.268237113952637
    6. ')' → logprob: -11.518237113952637
    7. ' ' → logprob: -11.643237113952637
    8. '(Point' → logprob: -11.768237113952637
    9. '<|end|>' → logprob: -11.893237113952637
    10. '_point' → logprob: -12.768237113952637

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1689596148207784e-05
    2. ' ,' → logprob: -10.000051498413086
    3. ',p' → logprob: -12.000051498413086
    4. ',
' → logprob: -17.500051498413086
    5. 'p' → logprob: -17.500051498413086
    6. ' p' → logprob: -17.625051498413086
    7. '‌,' → logprob: -17.875051498413086
    8. ':' → logprob: -18.375051498413086
    9. ')' → logprob: -18.875051498413086
    10. ' ' → logprob: -19.250051498413086

Token 231: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.008615399710834026
    2. 'p' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.883615493774414
    4. ' ' → logprob: -15.258615493774414
    5. '	p' → logprob: -15.883615493774414
    6. '    ' → logprob: -16.133615493774414
    7. '   ' → logprob: -16.758615493774414
    8. ',p' → logprob: -17.133615493774414
    9. ',' → logprob: -17.883615493774414
    10. ' п' → logprob: -18.508615493774414

Token 232: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014823723176959902
    2. 'oint' → logprob: -8.875147819519043
    3. 'oints' → logprob: -12.000147819519043
    4. '```' → logprob: -14.750147819519043
    5. ')' → logprob: -14.875147819519043
    6. ',' → logprob: -15.000147819519043
    7. 'oin' → logprob: -16.00014877319336
    8. 't' → logprob: -16.12514877319336
    9. 'o' → logprob: -16.12514877319336
    10. 'p' → logprob: -16.25014877319336

Token 233: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012902775779366493
    2. ',' → logprob: -4.887902736663818
    3. ' ):' → logprob: -6.262902736663818
    4. '):
' → logprob: -6.512902736663818
    5. ')' → logprob: -6.512902736663818
    6. ':' → logprob: -7.887902736663818
    7. ' )' → logprob: -11.637903213500977
    8. '   ' → logprob: -12.012903213500977
    9. ' ,' → logprob: -12.262903213500977
    10. ' ' → logprob: -12.512903213500977

Token 234: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.47436776757240295
    2. ' Point' → logprob: -0.9743677377700806
    3. ' p' → logprob: -8.47436809539795
    4. 'p' → logprob: -10.47436809539795
    5. ')' → logprob: -10.59936809539795
    6. ' point' → logprob: -11.97436809539795
    7. '_point' → logprob: -12.09936809539795
    8. '_Point' → logprob: -12.59936809539795
    9. '	Point' → logprob: -12.72436809539795
    10. '.Point' → logprob: -12.84936809539795

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012308320961892605
    2. ')' → logprob: -4.887308120727539
    3. ' ):' → logprob: -5.637308120727539
    4. '):
' → logprob: -6.887308120727539
    5. ',' → logprob: -10.012308120727539
    6. ' )' → logprob: -10.137308120727539
    7. '):
' → logprob: -11.262308120727539
    8. ' ):
' → logprob: -12.762308120727539
    9. '   ' → logprob: -12.887308120727539
    10. ':' → logprob: -13.012308120727539

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008542861323803663
    2. '    ' → logprob: -8.6258544921875
    3. '        
' → logprob: -8.6258544921875
    4. '        ' → logprob: -8.8758544921875
    5. '      ' → logprob: -9.2508544921875
    6. '   ' → logprob: -9.2508544921875
    7. ',' → logprob: -10.0008544921875
    8. ':' → logprob: -10.5008544921875
    9. ' if' → logprob: -11.1258544921875
    10. '    
' → logprob: -11.1258544921875

Token 237: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7206393480300903
    2. ' if' → logprob: -0.9706393480300903
    3. 'x' → logprob: -2.345639228820801
    4. '       ' → logprob: -3.720639228820801
    5. ' x' → logprob: -4.845639228820801
    6. 'dx' → logprob: -5.220639228820801
    7. ' dx' → logprob: -7.220639228820801
    8. '#' (adapté à ' #') → logprob: -7.470639228820801
    9. '   ' → logprob: -9.3456392288208
    10. ' #' → logprob: -10.7206392288208

Token 238: ' line' (ID: 2543)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.670667827129364
    2. ' if' → logprob: -0.795667827129364
    3. 'x' → logprob: -4.04566764831543
    4. 'dx' → logprob: -4.17066764831543
    5. ' dx' → logprob: -6.42066764831543
    6. ' x' → logprob: -6.67066764831543
    7. '       ' → logprob: -7.42066764831543
    8. '#' → logprob: -7.67066764831543
    9. '   ' → logprob: -8.67066764831543
    10. 'If' → logprob: -9.79566764831543

Token 239: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3351837694644928
    2. '=' → logprob: -2.08518385887146
    3. ' if' → logprob: -2.58518385887146
    4. ':' → logprob: -3.83518385887146
    5. '<|end|>' → logprob: -3.83518385887146
    6. 's' → logprob: -4.960183620452881
    7. ' ' → logprob: -5.335183620452881
    8. 'if' → logprob: -5.335183620452881
    9. '_points' → logprob: -5.460183620452881
    10. ')' → logprob: -5.585183620452881

Token 240: ' always' (ID: 3324)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.22485506534576416
    2. ' None' → logprob: -2.7248549461364746
    3. 'p' → logprob: -3.0998549461364746
    4. '   ' → logprob: -3.5998549461364746
    5. '       ' → logprob: -4.474854946136475
    6. ' self' → logprob: -4.599854946136475
    7. 'self' → logprob: -4.974854946136475
    8. '    ' → logprob: -4.974854946136475
    9. 'None' → logprob: -5.349854946136475
    10. ' ' → logprob: -5.599854946136475

Token 241: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.5163084864616394
    2. ' horizontal' → logprob: -1.1413085460662842
    3. ' either' → logprob: -2.891308546066284
    4. 'vertical' → logprob: -4.266308307647705
    5. 'either' → logprob: -4.766308307647705
    6. ' vertical' → logprob: -5.391308307647705
    7. ' axis' → logprob: -7.266308307647705
    8. 'straight' → logprob: -8.766308784484863
    9. '_horizontal' → logprob: -9.141308784484863
    10. 'axis' → logprob: -9.391308784484863

Token 242: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09390617907047272
    2. ' if' → logprob: -2.5939061641693115
    3. ',' → logprob: -5.468906402587891
    4. 'or' → logprob: -5.593906402587891
    5. '<|end|>' → logprob: -5.718906402587891
    6. 'if' → logprob: -5.968906402587891
    7. '       ' → logprob: -7.093906402587891
    8. ' ' → logprob: -9.46890640258789
    9. '<|end|>' → logprob: -9.59390640258789
    10. ')' → logprob: -9.59390640258789

Token 243: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.25193408131599426
    2. ' vertical' → logprob: -1.5019340515136719
    3. ' вертик' → logprob: -13.626934051513672
    4. '_vertical' → logprob: -13.751934051513672
    5. 'vert' → logprob: -14.376934051513672
    6. '(vertical' → logprob: -14.501934051513672
    7. ' verticale' → logprob: -14.626934051513672
    8. '.vertical' → logprob: -14.751934051513672
    9. '   ' → logprob: -14.751934051513672
    10. ' ' → logprob: -15.501934051513672

Token 244: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35616883635520935
    2. '
' → logprob: -2.231168746948242
    3. ' if' → logprob: -2.231168746948242
    4. '        
' → logprob: -3.231168746948242
    5. '<|end|>' → logprob: -4.106168746948242
    6. ',' → logprob: -4.606168746948242
    7. ':' → logprob: -5.731168746948242
    8. '        ' → logprob: -5.981168746948242
    9. '    
' → logprob: -6.106168746948242
    10. ' 
' → logprob: -6.106168746948242

Token 245: ' a' (ID: 261)
  Prédit: ' diagonal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diagonal' → logprob: -0.0266279224306345
    2. 'di' → logprob: -3.651628017425537
    3. ' ' → logprob: -9.401627540588379
    4. ' p' → logprob: -9.401627540588379
    5. 'vertical' → logprob: -10.776627540588379
    6. 'straight' → logprob: -10.901627540588379
    7. ' straight' → logprob: -11.151627540588379
    8. ' vertical' → logprob: -11.151627540588379
    9. 'diag' → logprob: -11.151627540588379
    10. '   ' → logprob: -11.401627540588379

Token 246: ' point' (ID: 2438)
  Prédit: ' diagonal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diagonal' → logprob: -0.04200970008969307
    2. 'di' → logprob: -3.5420095920562744
    3. 'nd' → logprob: -6.0420098304748535
    4. 's' → logprob: -6.5420098304748535
    5. 'n' → logprob: -6.6670098304748535
    6. ' ' → logprob: -6.9170098304748535
    7. ' vertical' → logprob: -6.9170098304748535
    8. 'l' → logprob: -7.1670098304748535
    9. '   ' → logprob: -7.4170098304748535
    10. 'b' → logprob: -7.6670098304748535

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2539983093738556
    2. ' if' → logprob: -1.6289982795715332
    3. '
' → logprob: -4.378998279571533
    4. '        
' → logprob: -5.378998279571533
    5. ',' → logprob: -5.753998279571533
    6. 'if' → logprob: -6.128998279571533
    7. '<|end|>' → logprob: -6.128998279571533
    8. ':' → logprob: -6.503998279571533
    9. '   ' → logprob: -7.503998279571533
    10. ':
' → logprob: -8.378998756408691

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004913751035928726
    2. '
' → logprob: -6.129913806915283
    3. '        
' → logprob: -6.504913806915283
    4. ' if' → logprob: -7.629913806915283
    5. ',' → logprob: -8.254913330078125
    6. ':' → logprob: -8.254913330078125
    7. '    
' → logprob: -10.504913330078125
    8. ':
' → logprob: -10.504913330078125
    9. '   ' → logprob: -10.879913330078125
    10. '        ' → logprob: -10.879913330078125

Token 249: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7560659050941467
    2. ' if' → logprob: -0.7560659050941467
    3. '       ' → logprob: -3.631065845489502
    4. 'x' → logprob: -3.881065845489502
    5. 'dx' → logprob: -4.381065845489502
    6. ' x' → logprob: -7.006065845489502
    7. ' dx' → logprob: -7.881065845489502
    8. '   ' → logprob: -10.00606632232666
    9. '        ' → logprob: -12.63106632232666
    10. '	if' → logprob: -12.88106632232666

Token 250: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6326125860214233
    2. 'p' → logprob: -0.7576125860214233
    3. '	p' → logprob: -11.632612228393555
    4. '   ' → logprob: -12.632612228393555
    5. '(p' → logprob: -14.757612228393555
    6. ' ' → logprob: -15.007612228393555
    7. '$p' → logprob: -15.632612228393555
    8. '<p' → logprob: -16.007612228393555
    9. ' ' → logprob: -16.382612228393555
    10. ')p' → logprob: -16.945112228393555

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. '2' → logprob: -11.750011444091797
    3. '.' → logprob: -14.500011444091797
    4. '   ' → logprob: -14.500011444091797
    5. ' ' → logprob: -14.625011444091797
    6. '._' → logprob: -15.062511444091797
    7. '
' → logprob: -15.125011444091797
    8. '_' → logprob: -15.437511444091797
    9. '

' → logprob: -15.500011444091797
    10. ' .' → logprob: -15.500011444091797

Token 252: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.020618850365281105
    2. '.' → logprob: -3.8956189155578613
    3. ' .' → logprob: -10.520618438720703
    4. ' ==' → logprob: -10.645618438720703
    5. '.y' → logprob: -10.895618438720703
    6. '==' → logprob: -12.395618438720703
    7. 'x' → logprob: -13.520618438720703
    8. ' ' → logprob: -14.645618438720703
    9. '[' → logprob: -15.145618438720703
    10. '.p' → logprob: -16.145618438720703

Token 253: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03909226134419441
    2. '==' → logprob: -3.6640923023223877
    3. ' >' → logprob: -4.414092063903809
    4. ' <=' → logprob: -8.039092063903809
    5. '>' → logprob: -8.289092063903809
    6. ' <' → logprob: -11.289092063903809
    7. ' ' → logprob: -11.789092063903809
    8. '<=' → logprob: -12.164092063903809
    9. '=' → logprob: -13.039092063903809
    10. '<' → logprob: -14.414092063903809

Token 254: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.020543988794088364
    2. ' p' → logprob: -3.8955440521240234
    3. ' ' → logprob: -14.020544052124023
    4. '   ' → logprob: -14.270544052124023
    5. '	p' → logprob: -15.270544052124023
    6. '  ' → logprob: -16.645544052124023
    7. '```' → logprob: -16.645544052124023
    8. ' п' → logprob: -16.770544052124023
    9. '<p' → logprob: -16.895544052124023
    10. ')p' → logprob: -17.083044052124023

Token 255: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03810839354991913
    2. '1' → logprob: -3.2881083488464355
    3. 'oint' → logprob: -9.788108825683594
    4. 'oints' → logprob: -12.038108825683594
    5. ' ' → logprob: -12.913108825683594
    6. 'p' → logprob: -14.163108825683594
    7. '   ' → logprob: -14.663108825683594
    8. 'o' → logprob: -15.413108825683594
    9. '```' → logprob: -15.413108825683594
    10. '.' → logprob: -15.538108825683594

Token 256: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0006145051447674632
    2. '.' → logprob: -7.750614643096924
    3. ':' → logprob: -8.750614166259766
    4. '<|end|>' → logprob: -11.375614166259766
    5. 'x' → logprob: -12.250614166259766
    6. '<|end|>' → logprob: -13.000614166259766
    7. ':
' → logprob: -13.250614166259766
    8. ' or' → logprob: -13.875614166259766
    9. ').' → logprob: -14.000614166259766
    10. ' .' → logprob: -14.125614166259766

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029805339872837067
    2. ':
' → logprob: -3.5298054218292236
    3. ' :' → logprob: -10.279805183410645
    4. ':
' → logprob: -11.529805183410645
    5. ' :
' → logprob: -12.529805183410645
    6. ' and' → logprob: -13.029805183410645
    7. '       ' → logprob: -13.279805183410645
    8. ':

' → logprob: -13.404805183410645
    9. '):' → logprob: -14.529805183410645
    10. '):
' → logprob: -14.654805183410645

Token 258: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30156779289245605
    2. ':
' → logprob: -1.676567792892456
    3. '           ' → logprob: -2.926567792892456
    4. '       ' → logprob: -4.426568031311035
    5. ' for' → logprob: -5.676568031311035
    6. '
' → logprob: -6.301568031311035
    7. ',' → logprob: -6.676568031311035
    8. '        ' → logprob: -7.301568031311035
    9. ' and' → logprob: -9.301568031311035
    10. '):
' → logprob: -9.426568031311035

Token 259: ' x' (ID: 1215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8488448858261108
    2. 'for' → logprob: -1.0988448858261108
    3. 'y' → logprob: -2.4738450050354004
    4. ' for' → logprob: -2.5988450050354004
    5. 'start' → logprob: -2.7238450050354004
    6. 'yst' → logprob: -5.2238450050354
    7. ' start' → logprob: -5.7238450050354
    8. ' y' → logprob: -6.3488450050354
    9. 'step' → logprob: -6.5988450050354
    10. 'range' → logprob: -7.0988450050354

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13612762093544006
    2. '=' → logprob: -2.1361277103424072
    3. ',' → logprob: -5.511127471923828
    4. 'for' → logprob: -6.261127471923828
    5. ' for' → logprob: -6.761127471923828
    6. '_range' → logprob: -7.636127471923828
    7. ' ' → logprob: -8.261127471923828
    8. ')' → logprob: -8.261127471923828
    9. 's' → logprob: -8.761127471923828
    10. '   ' → logprob: -9.011127471923828

Token 261: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005530327325686812
    2. ' p' → logprob: -7.500553131103516
    3. '	p' → logprob: -17.500553131103516
    4. '   ' → logprob: -18.750553131103516
    5. ' ' → logprob: -18.750553131103516
    6. '<p' → logprob: -21.000553131103516
    7. '  ' → logprob: -21.625553131103516
    8. '_p' → logprob: -21.875553131103516
    9. '[' → logprob: -22.125553131103516
    10. '[p' → logprob: -22.375553131103516

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. 'oint' → logprob: -11.62501049041748
    3. 'oints' → logprob: -13.37501049041748
    4. '.x' → logprob: -16.250011444091797
    5. '.' → logprob: -16.625011444091797
    6. 'oin' → logprob: -17.250011444091797
    7. '```' → logprob: -17.375011444091797
    8. '2' → logprob: -18.125011444091797
    9. '.point' → logprob: -18.625011444091797
    10. '１' → logprob: -19.000011444091797

Token 263: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00027432903880253434
    2. '.' → logprob: -8.250274658203125
    3. '.y' → logprob: -11.875274658203125
    4. 'x' → logprob: -12.375274658203125
    5. ' .' → logprob: -13.625274658203125
    6. '1' → logprob: -15.750274658203125
    7. ').' → logprob: -15.875274658203125
    8. '   ' → logprob: -16.625274658203125
    9. '
' → logprob: -16.750274658203125
    10. ' ' → logprob: -17.125274658203125

Token 264: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.046996109187603
    2. ' for' → logprob: -4.046996116638184
    3. '
' → logprob: -4.171996116638184
    4. 'for' → logprob: -4.671996116638184
    5. ',' → logprob: -5.921996116638184
    6. '       ' → logprob: -7.796996116638184
    7. ';' → logprob: -9.171996116638184
    8. ',
' → logprob: -9.546996116638184
    9. '               ' → logprob: -9.796996116638184
    10. '
' → logprob: -10.171996116638184

Token 265: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08965103328227997
    2. ' for' → logprob: -3.464651107788086
    3. '           ' → logprob: -3.589651107788086
    4. '       ' → logprob: -4.089651107788086
    5. 'for' → logprob: -4.964651107788086
    6. ',' → logprob: -6.589651107788086
    7. '
' → logprob: -8.464651107788086
    8. '  
' → logprob: -8.839651107788086
    9. ' y' → logprob: -8.964651107788086
    10. ':' → logprob: -8.964651107788086

Token 266: ' y' (ID: 342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2214915156364441
    2. 'start' → logprob: -1.9714915752410889
    3. 'y' (adapté à ' y') → logprob: -2.971491575241089
    4. '           ' → logprob: -5.22149133682251
    5. 'yst' → logprob: -6.72149133682251
    6. ' for' → logprob: -7.22149133682251
    7. 'ys' → logprob: -8.221491813659668
    8. 'range' → logprob: -8.346491813659668
    9. 'min' → logprob: -9.096491813659668
    10. 'sy' → logprob: -9.471491813659668

Token 267: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.08064694702625275
    2. '1' → logprob: -2.8306469917297363
    3. '_range' → logprob: -5.080646991729736
    4. '_min' → logprob: -5.330646991729736
    5. 'start' → logprob: -5.955646991729736
    6. 'range' → logprob: -6.830646991729736
    7. ' =' → logprob: -6.830646991729736
    8. '0' → logprob: -7.080646991729736
    9. 'min' → logprob: -7.205646991729736
    10. 's' → logprob: -7.330646991729736

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40279248356819153
    2. '=' → logprob: -1.1527924537658691
    3. ',' → logprob: -4.152792453765869
    4. ' ,' → logprob: -10.152792930603027
    5. '=min' → logprob: -10.652792930603027
    6. ' ' → logprob: -12.152792930603027
    7. '<|end|>' → logprob: -13.402792930603027
    8. 'min' → logprob: -14.527792930603027
    9. 'range' → logprob: -14.652792930603027
    10. '=int' → logprob: -14.652792930603027

Token 269: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00861456897109747
    2. ' min' → logprob: -4.758614540100098
    3. '	min' → logprob: -16.758615493774414
    4. '   ' → logprob: -20.258615493774414
    5. '(min' → logprob: -20.258615493774414
    6. '[min' → logprob: -21.008615493774414
    7. 'max' → logprob: -21.133615493774414
    8. '=min' → logprob: -21.508615493774414
    9. '.min' → logprob: -22.258615493774414
    10. ',min' → logprob: -23.133615493774414

Token 270: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. '(
' → logprob: -16.875003814697266
    4. ' (' → logprob: -18.250003814697266
    5. '((' → logprob: -19.000003814697266
    6. 'p' → logprob: -19.000003814697266
    7. '([' → logprob: -19.125003814697266
    8. '(self' → logprob: -20.250003814697266
    9. ' p' → logprob: -20.625003814697266
    10. '(y' → logprob: -20.750003814697266

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. '2' → logprob: -12.37501049041748
    3. 'oints' → logprob: -12.75001049041748
    4. 'oint' → logprob: -13.37501049041748
    5. ' ' → logprob: -14.75001049041748
    6. '```' → logprob: -15.25001049041748
    7. '
' → logprob: -16.062511444091797
    8. '   ' → logprob: -16.125011444091797
    9. '{' → logprob: -16.312511444091797
    10. '.' → logprob: -16.375011444091797

Token 272: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -9.372294698550832e-06
    2. 'y' → logprob: -12.375009536743164
    3. '.' → logprob: -13.125009536743164
    4. ',y' → logprob: -13.750009536743164
    5. ' .' → logprob: -13.875009536743164
    6. '.x' → logprob: -14.875009536743164
    7. ').' → logprob: -16.000009536743164
    8. '<|end|>' → logprob: -16.000009536743164
    9. '.py' → logprob: -16.500009536743164
    10. ',' → logprob: -16.625009536743164

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04991145431995392
    2. ',p' → logprob: -3.5499114990234375
    3. '(p' → logprob: -4.0499114990234375
    4. ' ,' → logprob: -6.0499114990234375
    5. 'p' → logprob: -9.174911499023438
    6. ',y' → logprob: -10.174911499023438
    7. ' p' → logprob: -11.049911499023438
    8. '(' → logprob: -11.424911499023438
    9. ',
' → logprob: -12.674911499023438
    10. ')' → logprob: -13.674911499023438

Token 274: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011048408225178719
    2. ' p' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.511048316955566
    4. ' ' → logprob: -16.761049270629883
    5. '	p' → logprob: -17.261049270629883
    6. '       ' → logprob: -18.511049270629883
    7. '  ' → logprob: -18.636049270629883
    8. '           ' → logprob: -18.636049270629883
    9. '    ' → logprob: -19.011049270629883
    10. '<p' → logprob: -19.011049270629883

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23945429921150208
    2. '.y' → logprob: -1.9894542694091797
    3. '1' → logprob: -3.1144542694091797
    4. 'y' → logprob: -3.4894542694091797
    5. ' y' → logprob: -7.61445426940918
    6. '.' → logprob: -8.11445426940918
    7. '   ' → logprob: -8.86445426940918
    8. ' ' → logprob: -9.36445426940918
    9. ')' → logprob: -10.23945426940918
    10. '```' → logprob: -10.48945426940918

Token 276: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -3.666993507067673e-05
    2. '.' → logprob: -10.375036239624023
    3. ').' → logprob: -12.500036239624023
    4. ' .' → logprob: -14.250036239624023
    5. 'y' → logprob: -15.000036239624023
    6. '.x' → logprob: -15.125036239624023
    7. ')' → logprob: -16.250036239624023
    8. ' y' → logprob: -16.625036239624023
    9. '.py' → logprob: -16.750036239624023
    10. ',y' → logprob: -17.000036239624023

Token 277: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0890621542930603
    2. ')' → logprob: -2.464062213897705
    3. ')+' → logprob: -10.089061737060547
    4. ' )
' → logprob: -10.214061737060547
    5. ',' → logprob: -11.089061737060547
    6. ')
' → logprob: -11.464061737060547
    7. ')

' → logprob: -11.839061737060547
    8. '),' → logprob: -12.464061737060547
    9. ')y' → logprob: -13.589061737060547
    10. '       ' → logprob: -13.964061737060547

Token 278: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4315989315509796
    2. '           ' → logprob: -1.9315989017486572
    3. 'y' → logprob: -2.0565989017486572
    4. '       ' → logprob: -3.0565989017486572
    5. '
' → logprob: -4.931599140167236
    6. '   ' → logprob: -5.056599140167236
    7. '<|end|>' → logprob: -5.556599140167236
    8. '	y' → logprob: -5.806599140167236
    9. ' 
' → logprob: -6.181599140167236
    10. '<|end|>' → logprob: -6.431599140167236

Token 279: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2257280796766281
    2. 'y' (adapté à ' y') → logprob: -1.6007280349731445
    3. '           ' → logprob: -8.100728034973145
    4. '   ' → logprob: -13.225728034973145
    5. ' ' → logprob: -13.350728034973145
    6. '       ' → logprob: -13.350728034973145
    7. '
' → logprob: -13.475728034973145
    8. '	y' → logprob: -13.850728034973145
    9. '            ' → logprob: -13.975728034973145
    10. '    ' → logprob: -14.225728034973145

Token 280: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -4.7994282795116305e-05
    2. '_' → logprob: -10.62504768371582
    3. '_stop' → logprob: -11.50004768371582
    4. 'end' → logprob: -12.75004768371582
    5. '=end' → logprob: -13.00004768371582
    6. '_END' → logprob: -13.12504768371582
    7. '_finish' → logprob: -13.37504768371582
    8. '=' → logprob: -13.62504768371582
    9. '_start' → logprob: -14.12504768371582
    10. ' =' → logprob: -14.62504768371582

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.326414108276367
    4. ' =
' → logprob: -16.076414108276367
    5. '=min' → logprob: -16.576414108276367
    6. ',' → logprob: -17.076414108276367
    7. '   ' → logprob: -17.326414108276367
    8. '=end' → logprob: -17.576414108276367
    9. '=
' → logprob: -17.701414108276367
    10. '=max' → logprob: -17.826414108276367

Token 282: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.07889077812433243
    2. 'max' → logprob: -2.578890800476074
    3. '(max' → logprob: -14.578890800476074
    4. ' min' → logprob: -14.578890800476074
    5. '	max' → logprob: -16.953889846801758
    6. 'min' → logprob: -17.078889846801758
    7. '_max' → logprob: -17.953889846801758
    8. '   ' → logprob: -17.953889846801758
    9. '=max' → logprob: -18.328889846801758
    10. ',max' → logprob: -18.953889846801758

Token 283: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.5928495486150496e-05
    2. '(' → logprob: -11.125016212463379
    3. ' (' → logprob: -13.875016212463379
    4. 'p' → logprob: -16.375015258789062
    5. '(
' → logprob: -16.750015258789062
    6. '(y' → logprob: -17.000015258789062
    7. ' ' → logprob: -17.500015258789062
    8. '   ' → logprob: -17.500015258789062
    9. '<p' → logprob: -18.500015258789062
    10. ' p' → logprob: -18.875015258789062

Token 284: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.079134002327919
    2. '1' → logprob: -2.579133987426758
    3. '.y' → logprob: -8.579133987426758
    4. '```' → logprob: -10.829133987426758
    5. 'y' → logprob: -11.704133987426758
    6. 'oints' → logprob: -12.579133987426758
    7. '
' → logprob: -13.079133987426758
    8. 'p' → logprob: -13.204133987426758
    9. 'oint' → logprob: -13.204133987426758
    10. ' y' → logprob: -13.204133987426758

Token 285: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00038658222183585167
    2. '.' → logprob: -7.875386714935303
    3. 'y' → logprob: -12.875386238098145
    4. ' .' → logprob: -14.000386238098145
    5. '.py' → logprob: -14.500386238098145
    6. ').' → logprob: -14.875386238098145
    7. '```' → logprob: -15.250386238098145
    8. '<|end|>' → logprob: -15.625386238098145
    9. '.x' → logprob: -15.750386238098145
    10. '.z' → logprob: -15.875386238098145

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026413965970277786
    2. '.y' → logprob: -4.151413917541504
    3. ',y' → logprob: -4.651413917541504
    4. ' ,' → logprob: -8.026413917541504
    5. 'y' → logprob: -8.151413917541504
    6. ',p' → logprob: -9.276413917541504
    7. ')' → logprob: -10.276413917541504
    8. '       ' → logprob: -12.526413917541504
    9. '   ' → logprob: -12.526413917541504
    10. ' y' → logprob: -12.651413917541504

Token 287: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1426907479763031
    2. ' p' → logprob: -2.017690658569336
    3. '   ' → logprob: -11.642690658569336
    4. '       ' → logprob: -13.267690658569336
    5. '(p' → logprob: -13.767690658569336
    6. 'y' → logprob: -14.642690658569336
    7. ')' → logprob: -14.767690658569336
    8. ')p' → logprob: -14.767690658569336
    9. '	p' → logprob: -15.017690658569336
    10. ' ' → logprob: -15.017690658569336

Token 288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17786432802677155
    2. 'y' → logprob: -2.0528643131256104
    3. '.y' → logprob: -3.9278643131256104
    4. '1' → logprob: -5.1778645515441895
    5. 'x' → logprob: -6.1778645515441895
    6. ')' → logprob: -6.1778645515441895
    7. '```' → logprob: -6.3028645515441895
    8. '   ' → logprob: -6.4278645515441895
    9. '       ' → logprob: -8.802864074707031
    10. '.' → logprob: -8.927864074707031

Token 289: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00015264409012161195
    2. ')' → logprob: -9.875152587890625
    3. '+' → logprob: -10.125152587890625
    4. ').' → logprob: -10.875152587890625
    5. 'y' → logprob: -11.000152587890625
    6. '.x' → logprob: -11.375152587890625
    7. ')+' → logprob: -12.000152587890625
    8. '.' → logprob: -13.250152587890625
    9. '+.' → logprob: -13.250152587890625
    10. ' .' → logprob: -13.875152587890625

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12210468202829361
    2. ')+' → logprob: -2.4971046447753906
    3. ')
' → logprob: -3.8721046447753906
    4. '+' → logprob: -4.997104644775391
    5. ' +' → logprob: -5.747104644775391
    6. ' )' → logprob: -6.872104644775391
    7. '           ' → logprob: -7.622104644775391
    8. '       ' → logprob: -9.12210464477539
    9. '
' → logprob: -9.24710464477539
    10. ' )
' → logprob: -9.37210464477539

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001462619286030531
    2. ' for' → logprob: -7.001462459564209
    3. '       ' → logprob: -8.126462936401367
    4. '
' → logprob: -8.501462936401367
    5. 'for' → logprob: -10.876462936401367
    6. '            
' → logprob: -11.751462936401367
    7. '   ' → logprob: -11.876462936401367
    8. '<|end|>' → logprob: -12.626462936401367
    9. '  
' → logprob: -12.751462936401367
    10. ',' → logprob: -13.251462936401367

Token 292: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49279770255088806
    2. 'for' (adapté à ' for') → logprob: -0.9927977323532104
    3. '           ' → logprob: -3.992797613143921
    4. '
' → logprob: -9.6177978515625
    5. '       ' → logprob: -11.2427978515625
    6. '   ' → logprob: -11.8677978515625
    7. ' ' → logprob: -12.3677978515625
    8. '	for' → logprob: -12.9927978515625
    9. '            
' → logprob: -12.9927978515625
    10. ' ' → logprob: -14.6177978515625

Token 293: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2811841070652008
    2. 'y' → logprob: -1.4061840772628784
    3. ' ' → logprob: -11.656184196472168
    4. 'i' → logprob: -11.781184196472168
    5. '   ' → logprob: -11.781184196472168
    6. ' i' → logprob: -12.156184196472168
    7. '	y' → logprob: -12.906184196472168
    8. '_y' → logprob: -14.906184196472168
    9. ' ' → logprob: -15.406184196472168
    10. 'j' → logprob: -15.531184196472168

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005244783591479063
    2. 'in' → logprob: -5.255244731903076
    3. '=' → logprob: -13.005245208740234
    4. 'range' → logprob: -13.130245208740234
    5. ' ' → logprob: -13.255245208740234
    6. ' =' → logprob: -14.130245208740234
    7. 'y' → logprob: -14.255245208740234
    8. '<|end|>' → logprob: -14.380245208740234
    9. ' y' → logprob: -14.505245208740234
    10. '_' → logprob: -14.630245208740234

Token 295: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602245420217514
    2. 'range' → logprob: -1.9102245569229126
    3. '(range' → logprob: -15.410224914550781
    4. '	range' → logprob: -15.910224914550781
    5. 'Range' → logprob: -17.28522491455078
    6. '_range' → logprob: -17.91022491455078
    7. '   ' → logprob: -18.41022491455078
    8. ' ' → logprob: -19.03522491455078
    9. 'rang' → logprob: -19.91022491455078
    10. ' rang' → logprob: -20.28522491455078

Token 296: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -3.1186566047836095e-05
    2. '(' → logprob: -10.500031471252441
    3. 'y' → logprob: -13.000031471252441
    4. ' (' → logprob: -13.750031471252441
    5. ' y' → logprob: -15.500031471252441
    6. '   ' → logprob: -18.000030517578125
    7. '(
' → logprob: -18.125030517578125
    8. '	y' → logprob: -18.750030517578125
    9. ')' → logprob: -20.125030517578125
    10. '[y' → logprob: -20.250030517578125

Token 297: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00021951000962872058
    2. 'start' → logprob: -8.500219345092773
    3. 'Start' → logprob: -11.625219345092773
    4. '_end' → logprob: -12.750219345092773
    5. '-start' → logprob: -14.000219345092773
    6. ')' → logprob: -14.375219345092773
    7. '_START' → logprob: -14.375219345092773
    8. '[start' → logprob: -14.875219345092773
    9. 'y' → logprob: -15.125219345092773
    10. '_' → logprob: -15.375219345092773

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015636618481948972
    2. ' ,' → logprob: -6.501563549041748
    3. ',y' → logprob: -9.751564025878906
    4. 'y' → logprob: -12.876564025878906
    5. ' y' → logprob: -15.376564025878906
    6. ',
' → logprob: -15.626564025878906
    7. '_,' → logprob: -17.001564025878906
    8. ' ' → logprob: -17.501564025878906
    9. ',

' → logprob: -17.876564025878906
    10. '(y' → logprob: -18.376564025878906

Token 299: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01815216802060604
    2. ' y' → logprob: -4.018152236938477
    3. '   ' → logprob: -13.518152236938477
    4. '	y' → logprob: -14.393152236938477
    5. '(y' → logprob: -15.143152236938477
    6. ' ' → logprob: -17.268152236938477
    7. ''y' → logprob: -17.893152236938477
    8. '       ' → logprob: -18.018152236938477
    9. '    ' → logprob: -18.393152236938477
    10. '           ' → logprob: -18.518152236938477

Token 300: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -4.723352049040841e-06
    2. 'end' → logprob: -12.375004768371582
    3. 'End' → logprob: -15.500004768371582
    4. '_start' → logprob: -16.750003814697266
    5. '_' → logprob: -17.125003814697266
    6. '_END' → logprob: -17.500003814697266
    7. '+' → logprob: -17.625003814697266
    8. '   ' → logprob: -18.125003814697266
    9. '_en' → logprob: -19.250003814697266
    10. ' end' → logprob: -19.500003814697266

Token 301: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326204538345337
    2. ' +' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.938261985778809
    4. '+y' → logprob: -16.938262939453125
    5. '   ' → logprob: -17.063262939453125
    6. ' ' → logprob: -17.688262939453125
    7. '()+' → logprob: -17.813262939453125
    8. ')+' → logprob: -18.188262939453125
    9. ',' → logprob: -18.438262939453125
    10. '
' → logprob: -18.688262939453125

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.750036239624023
    4. ')' → logprob: -15.750036239624023
    5. '```' → logprob: -16.000036239624023
    6. '):
' → logprob: -17.250036239624023
    7. ',' → logprob: -17.500036239624023
    8. '  ' → logprob: -17.750036239624023
    9. '2' → logprob: -18.000036239624023
    10. '
' → logprob: -18.250036239624023

Token 303: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1451711356639862
    2. '):
' → logprob: -2.0201711654663086
    3. ':' → logprob: -6.270171165466309
    4. ' ):' → logprob: -8.145171165466309
    5. ',' → logprob: -8.645171165466309
    6. '):
' → logprob: -10.270171165466309
    7. ' ):
' → logprob: -10.520171165466309
    8. ')' → logprob: -10.520171165466309
    9. ':
' → logprob: -11.270171165466309
    10. '           ' → logprob: -11.270171165466309

Token 304: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00782617274671793
    2. '           ' → logprob: -5.757826328277588
    3. ' self' → logprob: -5.757826328277588
    4. 'self' → logprob: -7.132826328277588
    5. '<|end|>' → logprob: -7.757826328277588
    6. '                
' → logprob: -9.88282585144043
    7. '[self' → logprob: -10.75782585144043
    8. '(self' → logprob: -10.88282585144043
    9. '            
' → logprob: -11.00782585144043
    10. '
' → logprob: -11.00782585144043

Token 305: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2899881601333618
    2. 'self' (adapté à ' self') → logprob: -1.5399881601333618
    3. '               ' → logprob: -3.2899880409240723
    4. '	self' → logprob: -10.28998851776123
    5. '   ' → logprob: -11.16498851776123
    6. '[self' → logprob: -11.28998851776123
    7. '           ' → logprob: -11.78998851776123
    8. '                   ' → logprob: -11.91498851776123
    9. ',self' → logprob: -12.53998851776123
    10. '(self' → logprob: -13.16498851776123

Token 306: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.00015633940347470343
    2. '.' → logprob: -9.25015640258789
    3. ' .' → logprob: -9.75015640258789
    4. ').' → logprob: -14.50015640258789
    5. '.rows' → logprob: -15.62515640258789
    6. 'cells' → logprob: -15.75015640258789
    7. '.Cells' → logprob: -16.00015640258789
    8. '.controls' → logprob: -16.12515640258789
    9. '.mark' → logprob: -16.25015640258789
    10. '].' → logprob: -16.25015640258789

Token 307: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. ' [' → logprob: -15.750000953674316
    4. 'y' → logprob: -16.5
    5. '][' → logprob: -18.75
    6. '```' → logprob: -19.25
    7. '[self' → logprob: -19.75
    8. '[x' → logprob: -20.0
    9. ')[' → logprob: -20.5
    10. '[user' → logprob: -20.75

Token 308: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0016714917728677392
    2. '[x' → logprob: -6.501671314239502
    3. ' ][' → logprob: -8.87667179107666
    4. ']' → logprob: -10.75167179107666
    5. ')[' → logprob: -12.75167179107666
    6. '[' → logprob: -13.62667179107666
    7. '```' → logprob: -13.75167179107666
    8. '"][' → logprob: -14.12667179107666
    9. 'x' → logprob: -14.75167179107666
    10. ')][' → logprob: -14.75167179107666

Token 309: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.2729995988775045e-06
    2. ' x' → logprob: -12.000006675720215
    3. '	x' → logprob: -20.8750057220459
    4. ')x' → logprob: -21.2500057220459
    5. '
' → logprob: -21.6250057220459
    6. '(x' → logprob: -22.0000057220459
    7. '[x' → logprob: -22.3750057220459
    8. '"x' → logprob: -22.5000057220459
    9. '```' → logprob: -23.8750057220459
    10. '{x' → logprob: -24.5000057220459

Token 310: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030733743915334344
    2. ']=' → logprob: -8.625307083129883
    3. ' ]' → logprob: -9.000307083129883
    4. '=' → logprob: -12.750307083129883
    5. ' =' → logprob: -14.000307083129883
    6. ')' → logprob: -14.625307083129883
    7. '=True' → logprob: -16.750307083129883
    8. ']
' → logprob: -17.125307083129883
    9. '[' → logprob: -18.000307083129883
    10. ' ' → logprob: -18.250307083129883

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408589720726013
    2. ' =' → logprob: -0.9740859270095825
    3. '=True' → logprob: -11.724085807800293
    4. ']' → logprob: -14.849085807800293
    5. ' ' → logprob: -15.349085807800293
    6. ']=' → logprob: -15.849085807800293
    7. '[' → logprob: -16.72408676147461
    8. ')' → logprob: -17.34908676147461
    9. '=true' → logprob: -17.72408676147461
    10. '<|end|>' → logprob: -17.97408676147461

Token 312: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '(True' → logprob: -19.00020408630371
    4. '=True' → logprob: -19.87520408630371
    5. '   ' → logprob: -22.12520408630371
    6. '.True' → logprob: -22.50020408630371
    7. 'true' → logprob: -23.62520408630371
    8. '
' → logprob: -24.00020408630371
    9. '_true' → logprob: -24.62520408630371
    10. '               ' → logprob: -25.25020408630371

Token 313: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04543323442339897
    2. '<|end|>' → logprob: -3.170433282852173
    3. '
' → logprob: -6.670433044433594
    4. '<|end|>' → logprob: -7.795433044433594
    5. 'elif' → logprob: -8.045433044433594
    6. '\n' → logprob: -9.295433044433594
    7. '   ' → logprob: -9.795433044433594
    8. ' elif' → logprob: -9.795433044433594
    9. '	elif' → logprob: -10.920433044433594
    10. '        
' → logprob: -10.920433044433594

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027532842941582203
    2. '<|end|>' → logprob: -6.627753257751465
    3. '
' → logprob: -6.752753257751465
    4. 'elif' → logprob: -8.877753257751465
    5. '   ' → logprob: -10.877753257751465
    6. ' elif' → logprob: -11.127753257751465
    7. '<|end|>' → logprob: -11.377753257751465
    8. 'else' → logprob: -11.377753257751465
    9. '\n' → logprob: -11.752753257751465
    10. '```' → logprob: -11.877753257751465

Token 315: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.275094598531723
    2. 'elif' (adapté à ' elif') → logprob: -1.7750946283340454
    3. ' elif' → logprob: -2.900094509124756
    4. 'else' → logprob: -4.775094509124756
    5. ' else' → logprob: -4.900094509124756
    6. '   ' → logprob: -9.525094985961914
    7. '	elif' → logprob: -10.275094985961914
    8. '    ' → logprob: -12.400094985961914
    9. 'el' → logprob: -12.525094985961914
    10. '        ' → logprob: -12.900094985961914

Token 316: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.03364858031272888
    2. 'p' → logprob: -3.4086484909057617
    3. ' ' → logprob: -13.908648490905762
    4. ' ' → logprob: -13.908648490905762
    5. '(p' → logprob: -14.783648490905762
    6. '	p' → logprob: -14.908648490905762
    7. '   ' → logprob: -16.158649444580078
    8. '```' → logprob: -16.783649444580078
    9. '<p' → logprob: -17.033649444580078
    10. '  ' → logprob: -17.096149444580078

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015921075828373432
    2. '2' → logprob: -6.50159215927124
    3. 'oint' → logprob: -9.751591682434082
    4. 'oints' → logprob: -10.626591682434082
    5. '.x' → logprob: -13.001591682434082
    6. 'p' → logprob: -13.501591682434082
    7. '.p' → logprob: -13.876591682434082
    8. '```' → logprob: -13.876591682434082
    9. 'x' → logprob: -15.376591682434082
    10. '.' → logprob: -15.376591682434082

Token 318: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.008040593937039375
    2. '.y' → logprob: -5.008040428161621
    3. '.' → logprob: -6.633040428161621
    4. ' .' → logprob: -12.383040428161621
    5. '<|end|>' → logprob: -13.883040428161621
    6. '[' → logprob: -14.133040428161621
    7. '.py' → logprob: -14.383040428161621
    8. ').' → logprob: -15.508040428161621
    9. '```' → logprob: -15.758040428161621
    10. '<|end|>' → logprob: -15.883040428161621

Token 319: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038045283406972885
    2. '==' → logprob: -3.2880451679229736
    3. ' ' → logprob: -13.413044929504395
    4. '=' → logprob: -14.038044929504395
    5. ' ==
' → logprob: -14.913044929504395
    6. ' =' → logprob: -15.163044929504395
    7. '==
' → logprob: -15.163044929504395
    8. ']==' → logprob: -15.788044929504395
    9. ')' → logprob: -15.913044929504395
    10. ')==' → logprob: -16.03804588317871

Token 320: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0013260759878903627
    2. ' p' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.001325607299805
    4. ' ' → logprob: -17.376325607299805
    5. '<p' → logprob: -18.126325607299805
    6. '(p' → logprob: -18.251325607299805
    7. '
' → logprob: -18.501325607299805
    8. '	p' → logprob: -18.501325607299805
    9. '  ' → logprob: -19.001325607299805
    10. '2' → logprob: -19.438825607299805

Token 321: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008999044075608253
    2. 'p' → logprob: -7.500899791717529
    3. 'y' → logprob: -8.125900268554688
    4. '.y' → logprob: -10.375900268554688
    5. '1' → logprob: -11.500900268554688
    6. '```' → logprob: -12.750900268554688
    7. 'x' → logprob: -13.000900268554688
    8. '.x' → logprob: -13.500900268554688
    9. '.p' → logprob: -14.000900268554688
    10. ' p' → logprob: -14.500900268554688

Token 322: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00018947436183225363
    2. '.' → logprob: -8.625189781188965
    3. '.x' → logprob: -11.750189781188965
    4. ' .' → logprob: -13.250189781188965
    5. 'y' → logprob: -16.12518882751465
    6. ' ' → logprob: -17.00018882751465
    7. ').' → logprob: -17.00018882751465
    8. '   ' → logprob: -17.12518882751465
    9. ''.' → logprob: -17.87518882751465
    10. '}.' → logprob: -18.25018882751465

Token 323: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014195124618709087
    2. ':
' → logprob: -4.264194965362549
    3. ' :' → logprob: -11.014195442199707
    4. '       ' → logprob: -11.764195442199707
    5. ':
' → logprob: -12.889195442199707
    6. ':

' → logprob: -13.139195442199707
    7. ' :
' → logprob: -13.889195442199707
    8. ',' → logprob: -14.264195442199707
    9. '):' → logprob: -14.889195442199707
    10. '<|end|>' → logprob: -15.514195442199707

Token 324: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7507089972496033
    2. '           ' → logprob: -0.7507089972496033
    3. ' y' → logprob: -3.125709056854248
    4. 'y' → logprob: -4.750709056854248
    5. ':' → logprob: -6.250709056854248
    6. ':
' → logprob: -7.375709056854248
    7. '   ' → logprob: -8.12570858001709
    8. ',' → logprob: -8.50070858001709
    9. '	y' → logprob: -9.75070858001709
    10. '```' → logprob: -10.12570858001709

Token 325: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.00889948382973671
    2. ' y' → logprob: -4.758899688720703
    3. '   ' → logprob: -8.383899688720703
    4. '       ' → logprob: -10.008899688720703
    5. 'x' → logprob: -12.133899688720703
    6. '           ' → logprob: -12.508899688720703
    7. '    ' → logprob: -14.258899688720703
    8. ' ' → logprob: -14.383899688720703
    9. '  ' → logprob: -14.758899688720703
    10. '     ' → logprob: -15.258899688720703

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002499086782336235
    2. '=' → logprob: -6.002499103546143
    3. ' ' → logprob: -10.877498626708984
    4. ' ==' → logprob: -12.752498626708984
    5. ')' → logprob: -15.127498626708984
    6. ',' → logprob: -15.502498626708984
    7. '<|end|>' → logprob: -15.502498626708984
    8. ' =
' → logprob: -15.627498626708984
    9. '=self' → logprob: -16.377498626708984
    10. '==' → logprob: -16.502498626708984

Token 327: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12692894041538239
    2. ' p' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.75192928314209
    4. ' ' → logprob: -15.37692928314209
    5. '	p' → logprob: -17.001928329467773
    6. '_p' → logprob: -17.251928329467773
    7. '       ' → logprob: -17.376928329467773
    8. '           ' → logprob: -17.376928329467773
    9. '<p' → logprob: -17.501928329467773
    10. ' ' → logprob: -17.876928329467773

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.3213025744771585e-05
    2. '.y' → logprob: -11.375033378601074
    3. '2' → logprob: -11.500033378601074
    4. 'oint' → logprob: -12.875033378601074
    5. '   ' → logprob: -13.125033378601074
    6. 'y' → logprob: -13.375033378601074
    7. 'r' → logprob: -13.625033378601074
    8. '```' → logprob: -13.750033378601074
    9. ' ' → logprob: -14.500033378601074
    10. '
' → logprob: -14.875033378601074

Token 329: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0011859419755637646
    2. '.' → logprob: -6.751185894012451
    3. 'y' → logprob: -12.12618637084961
    4. ' .' → logprob: -12.50118637084961
    5. '.x' → logprob: -13.12618637084961
    6. '<|end|>' → logprob: -13.12618637084961
    7. '<|end|>' → logprob: -14.37618637084961
    8. '.ylabel' → logprob: -14.75118637084961
    9. '.py' → logprob: -15.12618637084961
    10. '.gridy' → logprob: -15.25118637084961

Token 330: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037024507764726877
    2. '
' → logprob: -5.753702640533447
    3. 'for' → logprob: -8.378702163696289
    4. ' for' → logprob: -8.628702163696289
    5. '       ' → logprob: -10.628702163696289
    6. '
' → logprob: -11.003702163696289
    7. 'x' → logprob: -11.378702163696289
    8. '            
' → logprob: -11.378702163696289
    9. '		' → logprob: -11.628702163696289
    10. '         ' → logprob: -12.128702163696289

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02585815079510212
    2. 'x' → logprob: -3.775858163833618
    3. ' x' → logprob: -7.150857925415039
    4. 'for' → logprob: -7.150857925415039
    5. '       ' → logprob: -7.650857925415039
    6. '
' → logprob: -8.150857925415039
    7. ' for' → logprob: -8.400857925415039
    8. '   ' → logprob: -10.775857925415039
    9. '               ' → logprob: -11.525857925415039
    10. '
' → logprob: -12.275857925415039

Token 332: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.000629279064014554
    2. ' x' → logprob: -7.375629425048828
    3. '   ' → logprob: -13.000629425048828
    4. '	x' → logprob: -14.750629425048828
    5. '```' → logprob: -17.125629425048828
    6. '       ' → logprob: -17.750629425048828
    7. '_x' → logprob: -17.875629425048828
    8. '    ' → logprob: -18.125629425048828
    9. 'for' → logprob: -18.500629425048828
    10. '           ' → logprob: -18.500629425048828

Token 333: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -9.078839502763003e-05
    2. ' =' → logprob: -10.000090599060059
    3. '_' → logprob: -10.375090599060059
    4. '=' → logprob: -12.000090599060059
    5. 'start' → logprob: -12.625090599060059
    6. '_START' → logprob: -13.250090599060059
    7. ' _' → logprob: -13.875090599060059
    8. 'Start' → logprob: -14.375090599060059
    9. '_end' → logprob: -15.250090599060059
    10. '=start' → logprob: -15.375090599060059

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868711292743683
    2. ' =' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.136871337890625
    4. ')' → logprob: -17.511871337890625
    5. '<|end|>' → logprob: -18.511871337890625
    6. '   ' → logprob: -18.761871337890625
    7. '=
' → logprob: -18.761871337890625
    8. ',' → logprob: -19.011871337890625
    9. 'x' → logprob: -19.386871337890625
    10. '=start' → logprob: -20.261871337890625

Token 335: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0005530327325686812
    2. ' min' → logprob: -7.500553131103516
    3. '(min' → logprob: -20.750553131103516
    4. 'max' → logprob: -20.875553131103516
    5. '	min' → logprob: -21.375553131103516
    6. 'minimum' → logprob: -21.875553131103516
    7. '[min' → logprob: -22.250553131103516
    8. '   ' → logprob: -22.875553131103516
    9. '_min' → logprob: -23.000553131103516
    10. 'mini' → logprob: -23.125553131103516

Token 336: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -17.5
    4. 'p' → logprob: -17.625
    5. '(
' → logprob: -17.875
    6. '[p' → logprob: -19.875
    7. '<p' → logprob: -20.125
    8. '(P' → logprob: -20.25
    9. '   ' → logprob: -21.0
    10. 'def' → logprob: -21.375

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06841830909252167
    2. '(p' → logprob: -3.068418264389038
    3. 'p' → logprob: -3.943418264389038
    4. '[p' → logprob: -8.818418502807617
    5. ' p' → logprob: -10.068418502807617
    6. ')' → logprob: -11.193418502807617
    7. '2' → logprob: -11.318418502807617
    8. '(x' → logprob: -12.068418502807617
    9. 'x' → logprob: -12.193418502807617
    10. '.p' → logprob: -12.193418502807617

Token 338: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.531315314830863e-06
    2. 'x' → logprob: -12.875003814697266
    3. '.' → logprob: -14.750003814697266
    4. ' .' → logprob: -15.000003814697266
    5. '[' → logprob: -16.750003814697266
    6. ',x' → logprob: -17.500003814697266
    7. ').' → logprob: -17.750003814697266
    8. '.gridx' → logprob: -18.375003814697266
    9. ' ' → logprob: -18.625003814697266
    10. ')' → logprob: -18.750003814697266

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3451433409936726e-05
    2. ' ,' → logprob: -10.375033378601074
    3. ',x' → logprob: -13.375033378601074
    4. ',p' → logprob: -15.625033378601074
    5. 'x' → logprob: -15.750033378601074
    6. ',
' → logprob: -16.00003433227539
    7. '<|end|>' → logprob: -16.62503433227539
    8. '‌,' → logprob: -16.75003433227539
    9. '(),' → logprob: -17.87503433227539
    10. '<|end|>' → logprob: -17.87503433227539

Token 340: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005235887598246336
    2. ' p' → logprob: -5.25523567199707
    3. '   ' → logprob: -13.50523567199707
    4. '       ' → logprob: -16.00523567199707
    5. '           ' → logprob: -16.50523567199707
    6. ' ' → logprob: -16.75523567199707
    7. '<p' → logprob: -16.75523567199707
    8. '(p' → logprob: -17.00523567199707
    9. '	p' → logprob: -17.25523567199707
    10. '    ' → logprob: -17.56773567199707

Token 341: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0032616076059639454
    2. '1' → logprob: -6.503261566162109
    3. '.x' → logprob: -6.628261566162109
    4. 'x' → logprob: -7.878261566162109
    5. ')' → logprob: -10.87826156616211
    6. '   ' → logprob: -11.62826156616211
    7. '```' → logprob: -11.75326156616211
    8. '
' → logprob: -13.00326156616211
    9. '_end' → logprob: -13.50326156616211
    10. 's' → logprob: -13.50326156616211

Token 342: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.19635459780693054
    2. '_start' → logprob: -2.196354627609253
    3. 'x' → logprob: -2.946354627609253
    4. '.y' → logprob: -5.696354389190674
    5. 'Start' → logprob: -6.321354389190674
    6. ')' → logprob: -6.446354389190674
    7. '   ' → logprob: -6.571354389190674
    8. '.start' → logprob: -6.696354389190674
    9. '1' → logprob: -7.071354389190674
    10. '_x' → logprob: -7.196354389190674

Token 343: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14296235144138336
    2. ')
' → logprob: -2.0179624557495117
    3. '           ' → logprob: -8.767962455749512
    4. ')
' → logprob: -10.267962455749512
    5. ' )' → logprob: -10.517962455749512
    6. ' )
' → logprob: -10.892962455749512
    7. ')+' → logprob: -11.017962455749512
    8. ',' → logprob: -11.517962455749512
    9. '+' → logprob: -12.142962455749512
    10. '       ' → logprob: -12.392962455749512

Token 344: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007561430102214217
    2. ' x' → logprob: -7.62575626373291
    3. 'x' → logprob: -8.50075626373291
    4. '
' → logprob: -10.00075626373291
    5. '          ' → logprob: -12.37575626373291
    6. '            ' → logprob: -12.62575626373291
    7. '       ' → logprob: -13.25075626373291
    8. '   ' → logprob: -13.62575626373291
    9. '		' → logprob: -13.62575626373291
    10. '         ' → logprob: -13.87575626373291

Token 345: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25196513533592224
    2. 'x' (adapté à ' x') → logprob: -1.5019651651382446
    3. '           ' → logprob: -10.251965522766113
    4. '            ' → logprob: -16.126964569091797
    5. '	x' → logprob: -16.126964569091797
    6. ' ' → logprob: -16.251964569091797
    7. '       ' → logprob: -16.501964569091797
    8. '(x' → logprob: -16.876964569091797
    9. '   ' → logprob: -17.001964569091797
    10. '               ' → logprob: -17.001964569091797

Token 346: '_end' (ID: 13707)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.576039731502533
    2. '_end' → logprob: -0.826039731502533
    3. '_stop' → logprob: -9.95103931427002
    4. '_' → logprob: -11.32603931427002
    5. ' =' → logprob: -11.57603931427002
    6. 'start' → logprob: -11.70103931427002
    7. 'end' → logprob: -12.32603931427002
    8. '=' → logprob: -12.45103931427002
    9. '_finish' → logprob: -12.82603931427002
    10. '_range' → logprob: -13.20103931427002

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858941584825516
    2. '=' → logprob: -3.0485894680023193
    3. '=start' → logprob: -14.298589706420898
    4. ' ' → logprob: -15.548589706420898
    5. '(x' → logprob: -15.673589706420898
    6. 'x' → logprob: -15.673589706420898
    7. '   ' → logprob: -15.923589706420898
    8. '=x' → logprob: -15.923589706420898
    9. '           ' → logprob: -16.1735897064209
    10. ')' → logprob: -16.4235897064209

Token 348: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889099419116974
    2. ' max' → logprob: -2.5788910388946533
    3. 'x' → logprob: -14.578890800476074
    4. 'p' → logprob: -14.703890800476074
    5. ' p' → logprob: -15.703890800476074
    6. '(max' → logprob: -15.828890800476074
    7. 'min' → logprob: -16.95389175415039
    8. ' x' → logprob: -17.45389175415039
    9. '   ' → logprob: -17.70389175415039
    10. '_max' → logprob: -17.95389175415039

Token 349: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.2961512513575144e-05
    2. '(' → logprob: -10.750022888183594
    3. '(x' → logprob: -14.250022888183594
    4. ' (' → logprob: -14.625022888183594
    5. 'p' → logprob: -15.500022888183594
    6. '<p' → logprob: -16.750022888183594
    7. '(
' → logprob: -17.125022888183594
    8. 'x' → logprob: -17.375022888183594
    9. '(self' → logprob: -18.375022888183594
    10. '   ' → logprob: -18.750022888183594

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005251537077128887
    2. '_start' → logprob: -8.12552547454834
    3. 'p' → logprob: -8.75052547454834
    4. 'start' → logprob: -11.25052547454834
    5. ' p' → logprob: -11.62552547454834
    6. '(p' → logprob: -11.87552547454834
    7. '2' → logprob: -11.87552547454834
    8. '```' → logprob: -11.87552547454834
    9. 'x' → logprob: -12.00052547454834
    10. '<p' → logprob: -12.87552547454834

Token 351: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -5.200166469876422e-06
    2. 'x' → logprob: -12.500004768371582
    3. '.' → logprob: -15.000004768371582
    4. ',' → logprob: -15.125004768371582
    5. ' .' → logprob: -15.875004768371582
    6. '.py' → logprob: -16.0000057220459
    7. ' ' → logprob: -16.3750057220459
    8. ').' → logprob: -16.5000057220459
    9. ' x' → logprob: -17.0000057220459
    10. ',x' → logprob: -17.1250057220459

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004929834394715726
    2. ',x' → logprob: -9.125493049621582
    3. '.x' → logprob: -9.375493049621582
    4. 'x' → logprob: -9.375493049621582
    5. ',p' → logprob: -9.500493049621582
    6. ' ,' → logprob: -9.750493049621582
    7. '.p' → logprob: -10.125493049621582
    8. 'p' → logprob: -10.875493049621582
    9. ')' → logprob: -12.375493049621582
    10. '+' → logprob: -12.500493049621582

Token 353: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02975604310631752
    2. ' p' → logprob: -3.5297560691833496
    3. '   ' → logprob: -13.029755592346191
    4. '2' → logprob: -13.029755592346191
    5. '       ' → logprob: -15.279755592346191
    6. ' ' → logprob: -15.529755592346191
    7. '$p' → logprob: -15.779755592346191
    8. '[p' → logprob: -16.029756546020508
    9. '<p' → logprob: -16.154756546020508
    10. ')p' → logprob: -16.529756546020508

Token 354: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002879999577999115
    2. 'x' → logprob: -6.252880096435547
    3. '1' → logprob: -7.127880096435547
    4. '.x' → logprob: -9.752880096435547
    5. 's' → logprob: -11.127880096435547
    6. '   ' → logprob: -11.252880096435547
    7. '```' → logprob: -11.252880096435547
    8. '_start' → logprob: -11.502880096435547
    9. ' ' → logprob: -12.002880096435547
    10. 'Start' → logprob: -12.627880096435547

Token 355: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0002286886883666739
    2. 'x' → logprob: -8.500228881835938
    3. '_start' → logprob: -11.250228881835938
    4. '_x' → logprob: -12.250228881835938
    5. '+' → logprob: -13.500228881835938
    6. '.' → logprob: -13.875228881835938
    7. ',x' → logprob: -13.875228881835938
    8. '1' → logprob: -14.125228881835938
    9. ',' → logprob: -14.750228881835938
    10. '```' → logprob: -14.875228881835938

Token 356: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7312936782836914
    2. ')+' → logprob: -1.2312936782836914
    3. ')' → logprob: -1.6062936782836914
    4. ')
' → logprob: -3.7312936782836914
    5. ' +' → logprob: -6.481293678283691
    6. '           ' → logprob: -7.481293678283691
    7. '       ' → logprob: -10.606293678283691
    8. '+
' → logprob: -10.856293678283691
    9. '+)' → logprob: -11.356293678283691
    10. '):
' → logprob: -11.356293678283691

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012243907898664474
    2. ' for' → logprob: -4.637243747711182
    3. 'for' → logprob: -6.012243747711182
    4. '               ' → logprob: -11.51224422454834
    5. '	       ' → logprob: -12.01224422454834
    6. '       ' → logprob: -12.13724422454834
    7. '          ' → logprob: -12.38724422454834
    8. '   ' → logprob: -13.38724422454834
    9. '         ' → logprob: -13.38724422454834
    10. '		' → logprob: -13.76224422454834

Token 358: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47411537170410156
    2. ' for' → logprob: -0.9741153717041016
    3. '           ' → logprob: -10.224115371704102
    4. '               ' → logprob: -13.349115371704102
    5. 'range' → logprob: -15.349115371704102
    6. ' range' → logprob: -16.0991153717041
    7. '	for' → logprob: -16.3491153717041
    8. ' ' → logprob: -16.5991153717041
    9. '   ' → logprob: -18.2241153717041
    10. '       ' → logprob: -18.4741153717041

Token 359: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759394764900208
    2. ' x' → logprob: -0.8259394764900208
    3. ' ' → logprob: -17.575939178466797
    4. '	x' → logprob: -18.200939178466797
    5. ' range' → logprob: -18.450939178466797
    6. '(x' → logprob: -19.200939178466797
    7. 'range' → logprob: -19.200939178466797
    8. '_x' → logprob: -19.200939178466797
    9. '   ' → logprob: -19.450939178466797
    10. '[x' → logprob: -19.950939178466797

Token 360: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014169970527291298
    2. 'in' → logprob: -4.264170169830322
    3. '   ' → logprob: -13.389169692993164
    4. ' ' → logprob: -13.764169692993164
    5. 'n' → logprob: -14.389169692993164
    6. 'range' → logprob: -14.639169692993164
    7. '       ' → logprob: -14.764169692993164
    8. 'In' → logprob: -14.889169692993164
    9. 'x' → logprob: -15.264169692993164
    10. ',' → logprob: -15.389169692993164

Token 361: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.627176768844947e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -16.62509536743164
    4. '   ' → logprob: -19.62509536743164
    5. ' ' → logprob: -19.87509536743164
    6. 'x' → logprob: -20.12509536743164
    7. 'Range' → logprob: -20.75009536743164
    8. '_range' → logprob: -21.37509536743164
    9. '	range' → logprob: -22.50009536743164
    10. '    ' → logprob: -23.00009536743164

Token 362: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005538671393878758
    2. 'x' → logprob: -7.500554084777832
    3. '           ' → logprob: -15.125554084777832
    4. '   ' → logprob: -15.500554084777832
    5. '       ' → logprob: -15.625554084777832
    6. ' x' → logprob: -16.625553131103516
    7. '(' → logprob: -16.875553131103516
    8. ' (' → logprob: -17.250553131103516
    9. '[x' → logprob: -17.500553131103516
    10. '               ' → logprob: -17.875553131103516

Token 363: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.6087021473795176e-05
    2. 'start' → logprob: -10.000045776367188
    3. 'Start' → logprob: -14.875045776367188
    4. ',' → logprob: -16.875045776367188
    5. '(x' → logprob: -17.000045776367188
    6. 'x' → logprob: -17.500045776367188
    7. 's' → logprob: -18.250045776367188
    8. '_START' → logprob: -18.375045776367188
    9. '(start' → logprob: -18.500045776367188
    10. '   ' → logprob: -18.625045776367188

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003045994380954653
    2. ' ,' → logprob: -8.125304222106934
    3. ',x' → logprob: -11.875304222106934
    4. 'x' → logprob: -14.250304222106934
    5. '_,' → logprob: -15.000304222106934
    6. ' x' → logprob: -16.37530517578125
    7. '(x' → logprob: -16.37530517578125
    8. '   ' → logprob: -16.37530517578125
    9. '+' → logprob: -16.50030517578125
    10. '       ' → logprob: -17.00030517578125

Token 365: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000553151941858232
    2. ' x' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.625553131103516
    4. ',' → logprob: -17.375553131103516
    5. '(x' → logprob: -17.875553131103516
    6. ' ' → logprob: -18.375553131103516
    7. '```' → logprob: -19.250553131103516
    8. '           ' → logprob: -19.375553131103516
    9. '	x' → logprob: -19.375553131103516
    10. '       ' → logprob: -19.500553131103516

Token 366: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00035786881926469505
    2. 'end' → logprob: -8.000357627868652
    3. 'End' → logprob: -11.250357627868652
    4. '+' → logprob: -12.000357627868652
    5. ',' → logprob: -13.875357627868652
    6. '1' → logprob: -14.750357627868652
    7. 'x' → logprob: -15.125357627868652
    8. '_start' → logprob: -15.375357627868652
    9. '   ' → logprob: -15.500357627868652
    10. ',end' → logprob: -15.500357627868652

Token 367: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017994173686020076
    2. ' +' → logprob: -8.6251802444458
    3. '1' → logprob: -15.6251802444458
    4. ')+' → logprob: -16.500179290771484
    5. '+x' → logprob: -16.750179290771484
    6. '()+' → logprob: -17.375179290771484
    7. '_end' → logprob: -17.750179290771484
    8. '+self' → logprob: -18.875179290771484
    9. '```' → logprob: -18.875179290771484
    10. 'x' → logprob: -19.000179290771484

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '+' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.50001335144043
    4. 'x' → logprob: -17.50001335144043
    5. '   ' → logprob: -17.75001335144043
    6. '2' → logprob: -18.87501335144043
    7. ')' → logprob: -19.12501335144043
    8. ' +' → logprob: -19.25001335144043
    9. '```' → logprob: -19.87501335144043
    10. '=' → logprob: -20.00001335144043

Token 369: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5105799436569214
    2. '):' → logprob: -1.7605799436569214
    3. ':' → logprob: -1.8855799436569214
    4. ':
' → logprob: -2.635580062866211
    5. '               ' → logprob: -6.135580062866211
    6. ',' → logprob: -6.760580062866211
    7. '           ' → logprob: -7.385580062866211
    8. ']:
' → logprob: -8.760580062866211
    9. ']:' → logprob: -9.260580062866211
    10. ' :
' → logprob: -10.135580062866211

Token 370: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012407224625349045
    2. ' self' → logprob: -4.887407302856445
    3. 'self' → logprob: -5.512407302856445
    4. '           ' → logprob: -7.512407302856445
    5. '   ' → logprob: -9.262407302856445
    6. '                   ' → logprob: -10.762407302856445
    7. '              ' → logprob: -10.762407302856445
    8. '[self' → logprob: -11.512407302856445
    9. '                ' → logprob: -11.887407302856445
    10. ':' → logprob: -12.012407302856445

Token 371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014305942691862583
    2. ' self' → logprob: -4.26430606842041
    3. '               ' → logprob: -9.01430606842041
    4. '           ' → logprob: -11.38930606842041
    5. '   ' → logprob: -12.13930606842041
    6. '                   ' → logprob: -13.88930606842041
    7. '  ' → logprob: -14.26430606842041
    8. '       ' → logprob: -14.26430606842041
    9. ' ' → logprob: -14.38930606842041
    10. '	self' → logprob: -14.51430606842041

Token 372: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -8.73314929776825e-05
    2. ' .' → logprob: -10.12508773803711
    3. 'cells' → logprob: -10.37508773803711
    4. '.' → logprob: -11.25008773803711
    5. '   ' → logprob: -14.00008773803711
    6. ' cells' → logprob: -15.25008773803711
    7. ').' → logprob: -15.50008773803711
    8. '```' → logprob: -15.87508773803711
    9. ' ' → logprob: -16.12508773803711
    10. '.controls' → logprob: -16.25008773803711

Token 373: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -9.968312951968983e-06
    2. ' [' → logprob: -12.875009536743164
    3. '[p' → logprob: -13.000009536743164
    4. '[' → logprob: -13.125009536743164
    5. '   ' → logprob: -13.750009536743164
    6. '       ' → logprob: -14.000009536743164
    7. 'y' → logprob: -14.375009536743164
    8. '[self' → logprob: -15.000009536743164
    9. '           ' → logprob: -16.875009536743164
    10. '

' → logprob: -17.375009536743164

Token 374: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004911735188215971
    2. '[x' → logprob: -5.37991189956665
    3. '[y' → logprob: -8.879911422729492
    4. ']' → logprob: -9.504911422729492
    5. ' ][' → logprob: -10.379911422729492
    6. '[' → logprob: -10.504911422729492
    7. ')[' → logprob: -12.129911422729492
    8. '"][' → logprob: -13.629911422729492
    9. ' ' → logprob: -13.754911422729492
    10. ' [' → logprob: -13.754911422729492

Token 375: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4140441635390744e-05
    2. 'True' → logprob: -11.250014305114746
    3. ' x' → logprob: -13.875014305114746
    4. 'False' → logprob: -16.75001335144043
    5. ' True' → logprob: -16.87501335144043
    6. '[x' → logprob: -17.87501335144043
    7. '[' → logprob: -18.62501335144043
    8. ']' → logprob: -19.00001335144043
    9. '=True' → logprob: -19.75001335144043
    10. 'true' → logprob: -20.00001335144043

Token 376: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03171375393867493
    2. ' =' → logprob: -4.031713962554932
    3. '=' → logprob: -4.406713962554932
    4. ' ]' → logprob: -7.281713962554932
    5. ']=' → logprob: -7.531713962554932
    6. ')' → logprob: -10.031713485717773
    7. '[' → logprob: -13.031713485717773
    8. '           ' → logprob: -13.531713485717773
    9. '=True' → logprob: -13.531713485717773
    10. ' ' → logprob: -13.656713485717773

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014177292585373
    2. ' =' → logprob: -1.7014176845550537
    3. ']' → logprob: -12.951417922973633
    4. '=True' → logprob: -14.326417922973633
    5. ']=' → logprob: -14.451417922973633
    6. '           ' → logprob: -14.951417922973633
    7. '   ' → logprob: -15.326417922973633
    8. '[' → logprob: -15.451417922973633
    9. '               ' → logprob: -16.701417922973633
    10. '       ' → logprob: -16.701417922973633

Token 378: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. '(True' → logprob: -19.625431060791016
    4. '=True' → logprob: -20.125431060791016
    5. '.True' → logprob: -22.000431060791016
    6. '   ' → logprob: -23.375431060791016
    7. 'true' → logprob: -23.500431060791016
    8. 'False' → logprob: -23.875431060791016
    9. 'Tr' → logprob: -24.000431060791016
    10. '_true' → logprob: -24.500431060791016

Token 379: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13420723378658295
    2. ':
' → logprob: -2.134207248687744
    3. '       ' → logprob: -5.009207248687744
    4. '           ' → logprob: -7.759207248687744
    5. ' :' → logprob: -9.759206771850586
    6. '        ' → logprob: -10.509206771850586
    7. ' :
' → logprob: -10.759206771850586
    8. ',' → logprob: -11.134206771850586
    9. ' raise' → logprob: -11.759206771850586
    10. '   ' → logprob: -12.009206771850586

Token 383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053909994661808014
    2. '       ' → logprob: -3.05391001701355
    3. 'raise' → logprob: -5.303909778594971
    4. ' raise' → logprob: -8.053910255432129
    5. 'return' → logprob: -12.053910255432129
    6. 'pass' → logprob: -12.053910255432129
    7. '#' → logprob: -12.803910255432129
    8. '   ' → logprob: -13.428910255432129
    9. '	raise' → logprob: -13.803910255432129
    10. '               ' → logprob: -14.178910255432129

Token 384: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.3613511025905609
    2. 'pass' → logprob: -1.6113511323928833
    3. '       ' → logprob: -2.8613510131835938
    4. ' raise' → logprob: -3.6113510131835938
    5. '#' (adapté à ' #') → logprob: -4.111351013183594
    6. ' pass' → logprob: -5.861351013183594
    7. 'return' → logprob: -9.361351013183594
    8. '   ' → logprob: -9.486351013183594
    9. ' #' → logprob: -10.486351013183594
    10. '        
' → logprob: -12.736351013183594

Token 385: ' According' (ID: 16344)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.0029047278221696615
    2. '#' → logprob: -6.502904891967773
    3. ' raise' → logprob: -6.752904891967773
    4. 'pass' → logprob: -8.502904891967773
    5. 'assert' → logprob: -11.002904891967773
    6. '       ' → logprob: -11.502904891967773
    7. '   ' → logprob: -12.877904891967773
    8. '           ' → logprob: -14.002904891967773
    9. ' pass' → logprob: -14.627904891967773
    10. ' #' → logprob: -15.252904891967773

Token 386: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14311742782592773
    2. 'to' → logprob: -2.0181174278259277
    3. 'To' → logprob: -8.768117904663086
    4. '#' → logprob: -8.893117904663086
    5. '_to' → logprob: -9.143117904663086
    6. 'ly' → logprob: -11.018117904663086
    7. '<|end|>' → logprob: -11.143117904663086
    8. ' #' → logprob: -12.643117904663086
    9. 't' → logprob: -14.393117904663086
    10. '        ' → logprob: -14.393117904663086

Token 387: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7941983938217163
    2. 'the' → logprob: -1.4191983938217163
    3. '#' → logprob: -1.7941983938217163
    4. ' problem' → logprob: -2.419198513031006
    5. 'problem' → logprob: -3.419198513031006
    6. 'assert' → logprob: -4.544198513031006
    7. 'comment' → logprob: -6.294198513031006
    8. ' prompt' → logprob: -6.919198513031006
    9. ' comment' → logprob: -6.919198513031006
    10. ' assertion' → logprob: -7.294198513031006

Token 388: ' spec' (ID: 1755)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34228962659835815
    2. 'pass' → logprob: -1.842289686203003
    3. 'assert' → logprob: -2.342289686203003
    4. 'raise' → logprob: -4.342289447784424
    5. ' raise' → logprob: -4.592289447784424
    6. ' #' → logprob: -5.592289447784424
    7. ' pass' → logprob: -5.967289447784424
    8. '   ' → logprob: -7.092289447784424
    9. 'Assertion' → logprob: -7.092289447784424
    10. ' problem' → logprob: -7.342289447784424

Token 389: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42473605275154114
    2. '           ' → logprob: -1.5497360229492188
    3. ' raise' → logprob: -2.5497360229492188
    4. ',' → logprob: -3.5497360229492188
    5. 'raise' → logprob: -4.799736022949219
    6. ':' → logprob: -5.049736022949219
    7. '        ' → logprob: -5.174736022949219
    8. '#' → logprob: -6.049736022949219
    9. ' (' → logprob: -7.174736022949219
    10. '               ' → logprob: -7.674736022949219

Token 390: ' this' (ID: 495)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.6108414530754089
    2. ' pass' → logprob: -0.8608414530754089
    3. '#' → logprob: -4.485841274261475
    4. 'pass' → logprob: -4.485841274261475
    5. 'raise' → logprob: -5.110841274261475
    6. ' assert' → logprob: -6.235841274261475
    7. ' #' → logprob: -6.610841274261475
    8. '           ' → logprob: -6.610841274261475
    9. 'assert' → logprob: -6.985841274261475
    10. '       ' → logprob: -8.860841751098633

Token 391: ' should' (ID: 1757)
  Prédit: ' should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.6138007044792175
    2. ' shouldn't' → logprob: -1.7388007640838623
    3. ' code' → logprob: -1.8638007640838623
    4. ' case' → logprob: -2.3638007640838623
    5. ' is' → logprob: -4.488800525665283
    6. 'should' → logprob: -4.738800525665283
    7. '#' → logprob: -6.113800525665283
    8. ' situation' → logprob: -6.363800525665283
    9. ' method' → logprob: -6.488800525665283
    10. ' scenario' → logprob: -6.613800525665283

Token 392: ' never' (ID: 3779)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01587962731719017
    2. 'not' → logprob: -4.5158796310424805
    3. ' never' → logprob: -5.3908796310424805
    4. 'never' → logprob: -8.76587963104248
    5. 'n't' → logprob: -9.26587963104248
    6. ' raise' → logprob: -11.76587963104248
    7. 'n' → logprob: -13.89087963104248
    8. ' be' → logprob: -14.14087963104248
    9. ' rarely' → logprob: -14.51587963104248
    10. 'raise' → logprob: -14.64087963104248

Token 393: ' happen' (ID: 5659)
  Prédit: ' happen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' happen' → logprob: -0.18183287978172302
    2. 'h' → logprob: -2.681832790374756
    3. 'occur' → logprob: -2.806832790374756
    4. ' occur' → logprob: -3.306832790374756
    5. ' ' → logprob: -7.431832790374756
    6. '_h' → logprob: -9.806833267211914
    7. 'occ' → logprob: -10.056833267211914
    8. ' be' → logprob: -10.181833267211914
    9. ' h' → logprob: -10.931833267211914
    10. '  ' → logprob: -11.931833267211914

Token 394: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06396849453449249
    2. '           ' → logprob: -2.8139684200286865
    3. ' raise' → logprob: -6.563968658447266
    4. 'raise' → logprob: -8.438968658447266
    5. ',' → logprob: -9.688968658447266
    6. '.' → logprob: -9.813968658447266
    7. ' pass' → logprob: -10.063968658447266
    8. ':' → logprob: -10.188968658447266
    9. '        ' → logprob: -10.313968658447266
    10. '#' → logprob: -10.313968658447266

Token 395: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30223560333251953
    2. '           ' → logprob: -2.0522356033325195
    3. ' raise' → logprob: -2.5522356033325195
    4. 'raise' → logprob: -3.3022356033325195
    5. ' pass' → logprob: -4.4272356033325195
    6. 'pass' → logprob: -5.1772356033325195
    7. '   ' → logprob: -10.92723560333252
    8. 'return' → logprob: -10.92723560333252
    9. '        ' → logprob: -11.17723560333252
    10. '               ' → logprob: -11.55223560333252

Token 396: ' pass' (ID: 1853)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.09151969850063324
    2. 'pass' (adapté à ' pass') → logprob: -3.091519594192505
    3. ' raise' → logprob: -3.341519594192505
    4. ' pass' → logprob: -5.091519832611084
    5. '       ' → logprob: -8.341519355773926
    6. 'assert' → logprob: -8.591519355773926
    7. '   ' → logprob: -10.091519355773926
    8. '           ' → logprob: -10.591519355773926
    9. ' assert' → logprob: -14.716519355773926
    10. 'return' → logprob: -15.341519355773926

Token 397: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48102936148643494
    2. '   ' → logprob: -1.6060293912887573
    3. '<|end|>' → logprob: -1.7310293912887573
    4. '    
' → logprob: -6.731029510498047
    5. 'def' → logprob: -6.981029510498047
    6. '<|end|>' → logprob: -7.356029510498047
    7. '

' → logprob: -7.606029510498047
    8. '\n' → logprob: -8.606029510498047
    9. '```' → logprob: -9.106029510498047
    10. 'newline' → logprob: -9.106029510498047

Token 399: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6345458626747131
    2. 'def' (adapté à ' def') → logprob: -1.2595458030700684
    3. '
' → logprob: -1.7595458030700684
    4. '    
' → logprob: -5.384545803070068
    5. '<|end|>' → logprob: -5.384545803070068
    6. ' def' → logprob: -6.134545803070068
    7. '```' → logprob: -7.009545803070068
    8. '<|end|>' → logprob: -8.009546279907227
    9. ' 
' → logprob: -8.259546279907227
    10. ' ' → logprob: -8.634546279907227

Token 400: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.026174532249569893
    2. 'is' → logprob: -4.776174545288086
    3. ' count' → logprob: -5.526174545288086
    4. ' get' → logprob: -5.651174545288086
    5. ' in' → logprob: -6.276174545288086
    6. ' mark' → logprob: -6.401174545288086
    7. ' has' → logprob: -6.901174545288086
    8. ' def' → logprob: -6.901174545288086
    9. ' __' → logprob: -7.151174545288086
    10. 'count' → logprob: -7.651174545288086

Token 401: '_mark' (ID: 42901)
  Prédit: '_free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -0.8548141121864319
    2. '_open' → logprob: -1.729814052581787
    3. '_empty' → logprob: -2.479814052581787
    4. '_walk' → logprob: -2.604814052581787
    5. '_inside' → logprob: -2.729814052581787
    6. '_valid' → logprob: -2.854814052581787
    7. '_block' → logprob: -3.354814052581787
    8. '_in' → logprob: -3.729814052581787
    9. '_' → logprob: -4.229814052581787
    10. '_mark' → logprob: -4.354814052581787

Token 402: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: 0.0
    2. 'edin' → logprob: -20.875
    3. 'eded' → logprob: -21.375
    4. '_ed' → logprob: -21.5
    5. '_' → logprob: -22.125
    6. 'ED' → logprob: -22.5
    7. '_mark' → logprob: -22.625
    8. '(ed' → logprob: -22.75
    9. 'e' → logprob: -23.0
    10. '[' → logprob: -23.125

Token 403: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.625003814697266
    3. 'self' → logprob: -15.875003814697266
    4. ' (' → logprob: -15.875003814697266
    5. '   ' → logprob: -18.375003814697266
    6. ' self' → logprob: -19.000003814697266
    7. '(s' → logprob: -19.250003814697266
    8. '(sel' → logprob: -19.250003814697266
    9. '       ' → logprob: -19.500003814697266
    10. ' ' → logprob: -19.625003814697266

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002077932469546795
    2. 'self' → logprob: -6.752078056335449
    3. '(self' → logprob: -7.127078056335449
    4. ',self' → logprob: -9.62707805633545
    5. ' ,' → logprob: -10.37707805633545
    6. ' self' → logprob: -12.50207805633545
    7. '   ' → logprob: -13.62707805633545
    8. '       ' → logprob: -14.25207805633545
    9. ')' → logprob: -15.00207805633545
    10. ' ' → logprob: -15.00207805633545

Token 405: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031543076038360596
    2. ' self' → logprob: -6.253154277801514
    3. 'x' → logprob: -6.753154277801514
    4. 'point' → logprob: -10.003154754638672
    5. 'p' → logprob: -11.753154754638672
    6. '       ' → logprob: -13.628154754638672
    7. '   ' → logprob: -13.753154754638672
    8. ' x' → logprob: -13.753154754638672
    9. ' point' → logprob: -14.753154754638672
    10. ' ' → logprob: -15.378154754638672

Token 406: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.284845232963562
    2. ':' → logprob: -1.784845232963562
    3. '):' → logprob: -2.7848453521728516
    4. '1' → logprob: -5.159845352172852
    5. 'self' → logprob: -5.409845352172852
    6. '):
' → logprob: -5.784845352172852
    7. '(p' → logprob: -6.534845352172852
    8. '<|end|>' → logprob: -7.409845352172852
    9. 'p' → logprob: -7.659845352172852
    10. ',' → logprob: -8.159845352172852

Token 407: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.004079470410943031
    2. ' Point' → logprob: -5.504079341888428
    3. ')' → logprob: -14.129079818725586
    4. 'point' → logprob: -16.754079818725586
    5. '_point' → logprob: -16.754079818725586
    6. ' point' → logprob: -16.879079818725586
    7. 'p' → logprob: -17.129079818725586
    8. '.Point' → logprob: -17.504079818725586
    9. '	Point' → logprob: -17.629079818725586
    10. '_Point' → logprob: -18.129079818725586

Token 408: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014641272835433483
    2. '):' → logprob: -4.264641284942627
    3. '):
' → logprob: -7.889641284942627
    4. ' )' → logprob: -9.264640808105469
    5. ' ):' → logprob: -12.639640808105469
    6. '   ' → logprob: -13.514640808105469
    7. ')->' → logprob: -13.639640808105469
    8. '):
' → logprob: -13.639640808105469
    9. ')p' → logprob: -15.014640808105469
    10. ':' → logprob: -15.139640808105469

Token 409: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.32703855633735657
    2. ')' → logprob: -1.5770385265350342
    3. 'self' → logprob: -3.827038526535034
    4. ':' → logprob: -3.827038526535034
    5. ' ->' → logprob: -4.327038764953613
    6. '->' → logprob: -4.702038764953613
    7. '       ' → logprob: -6.452038764953613
    8. '):' → logprob: -6.702038764953613
    9. ')->' → logprob: -6.952038764953613
    10. '(' → logprob: -7.077038764953613

Token 410: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0009128939709626138
    2. ' bool' → logprob: -7.000912666320801
    3. 'return' → logprob: -14.0009126663208
    4. '   ' → logprob: -15.7509126663208
    5. '<bool' → logprob: -16.250913619995117
    6. 'Bool' → logprob: -16.375913619995117
    7. ' ' → logprob: -17.000913619995117
    8. '	bool' → logprob: -17.250913619995117
    9. 'int' → logprob: -17.375913619995117
    10. '  ' → logprob: -17.875913619995117

Token 411: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7559298872947693
    2. ':' → logprob: -0.8809298872947693
    3. '       ' → logprob: -2.630929946899414
    4. 'self' → logprob: -3.880929946899414
    5. '   ' → logprob: -4.380929946899414
    6. ' self' → logprob: -6.005929946899414
    7. ')' → logprob: -6.255929946899414
    8. '):' → logprob: -6.380929946899414
    9. '(' → logprob: -6.630929946899414
    10. ':
' → logprob: -7.255929946899414

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4787631630897522
    2. ' return' → logprob: -0.9787631630897522
    3. 'return' → logprob: -5.478763103485107
    4. '   ' → logprob: -8.603763580322266
    5. '<|end|>' → logprob: -8.978763580322266
    6. ' 
' → logprob: -9.353763580322266
    7. '        
' → logprob: -10.603763580322266
    8. '{return' → logprob: -11.228763580322266
    9. '	return' → logprob: -11.478763580322266
    10. '    
' → logprob: -11.728763580322266

Token 413: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2282724827528
    2. 'if' (adapté à ' if') → logprob: -1.7282724380493164
    3. '       ' → logprob: -4.228272438049316
    4. ' return' → logprob: -5.228272438049316
    5. ' if' → logprob: -5.228272438049316
    6. '0' → logprob: -6.728272438049316
    7. ' ' → logprob: -14.103272438049316
    8. '   ' → logprob: -14.353272438049316
    9. '1' → logprob: -14.603272438049316
    10. '	return' → logprob: -16.228273391723633

Token 414: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3871975243091583
    2. ' ' → logprob: -1.137197494506836
    3. ' p' → logprob: -8.637197494506836
    4. 'p' → logprob: -8.887197494506836
    5. ' not' → logprob: -12.137197494506836
    6. '   ' → logprob: -13.137197494506836
    7. '  ' → logprob: -13.387197494506836
    8. ' (' → logprob: -13.887197494506836
    9. '(' → logprob: -14.637197494506836
    10. 'not' → logprob: -15.012197494506836

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003322473494336009
    2. 'p' → logprob: -8.37533187866211
    3. ' ' → logprob: -9.25033187866211
    4. 'not' → logprob: -12.75033187866211
    5. '(' → logprob: -13.75033187866211
    6. ' p' → logprob: -14.25033187866211
    7. '   ' → logprob: -15.00033187866211
    8. ' not' → logprob: -15.12533187866211
    9. '(p' → logprob: -15.37533187866211
    10. ' (' → logprob: -17.37533187866211

Token 416: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014164566993713379
    2. '<=' → logprob: -4.264164447784424
    3. 'p' → logprob: -14.764164924621582
    4. ' <' → logprob: -15.514164924621582
    5. ' p' → logprob: -16.264163970947266
    6. '<' → logprob: -16.764163970947266
    7. ' ' → logprob: -16.889163970947266
    8. '<p' → logprob: -16.889163970947266
    9. ')<=' → logprob: -16.889163970947266
    10. '0' → logprob: -17.014163970947266

Token 417: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.676292231422849e-05
    2. ' p' → logprob: -11.000017166137695
    3. '	p' → logprob: -19.250017166137695
    4. '<p' → logprob: -20.625017166137695
    5. '   ' → logprob: -21.000017166137695
    6. ')p' → logprob: -21.500017166137695
    7. '_p' → logprob: -21.750017166137695
    8. '<|end|>' → logprob: -22.000017166137695
    9. '(p' → logprob: -22.375017166137695
    10. 'pox' → logprob: -22.500017166137695

Token 418: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.03804252669215202
    2. '.y' → logprob: -3.2880425453186035
    3. '.' → logprob: -14.288042068481445
    4. 'x' → logprob: -14.913042068481445
    5. 'y' → logprob: -16.163042068481445
    6. ' .' → logprob: -19.163042068481445
    7. '```' → logprob: -20.288042068481445
    8. '	x' → logprob: -21.288042068481445
    9. '[' → logprob: -21.538042068481445
    10. ' ' → logprob: -21.663042068481445

Token 419: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -9.198043699143454e-05
    2. ' <' → logprob: -9.375091552734375
    3. 'and' → logprob: -12.250091552734375
    4. ' and' → logprob: -13.125091552734375
    5. '[' → logprob: -15.750091552734375
    6. '<len' → logprob: -16.625091552734375
    7. '<size' → logprob: -17.500091552734375
    8. 'p' → logprob: -17.875091552734375
    9. '<int' → logprob: -18.000091552734375
    10. '<[' → logprob: -18.250091552734375

Token 420: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.3319124011322856e-05
    2. ' self' → logprob: -10.750022888183594
    3. 'len' → logprob: -13.250022888183594
    4. '[self' → logprob: -18.875022888183594
    5. '(self' → logprob: -20.000022888183594
    6. '
' → logprob: -20.125022888183594
    7. '       ' → logprob: -20.250022888183594
    8. '	self' → logprob: -20.250022888183594
    9. '           ' → logprob: -20.500022888183594
    10. '   ' → logprob: -20.500022888183594

Token 421: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0009156247251667082
    2. 'height' → logprob: -7.00091552734375
    3. 'self' → logprob: -12.50091552734375
    4. ' height' → logprob: -15.12591552734375
    5. '.width' → logprob: -16.50091552734375
    6. '.' → logprob: -17.00091552734375
    7. '   ' → logprob: -17.87591552734375
    8. '	height' → logprob: -18.12591552734375
    9. '.size' → logprob: -18.37591552734375
    10. '_height' → logprob: -18.50091552734375

Token 422: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20141451060771942
    2. 'and' → logprob: -1.7014144659042358
    3. ' ' → logprob: -14.451414108276367
    4. '	and' → logprob: -15.076414108276367
    5. '       ' → logprob: -15.326414108276367
    6. '   ' → logprob: -16.576414108276367
    7. '           ' → logprob: -17.201414108276367
    8. ' и' → logprob: -18.451414108276367
    9. '          ' → logprob: -18.451414108276367
    10. '        ' → logprob: -18.576414108276367

Token 423: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606270257383585
    2. ' ' → logprob: -4.882606506347656
    3. '   ' → logprob: -17.507606506347656
    4. ' p' → logprob: -17.632606506347656
    5. '  ' → logprob: -17.882606506347656
    6. 'p' → logprob: -18.257606506347656
    7. '    ' → logprob: -18.757606506347656
    8. '       ' → logprob: -18.757606506347656
    9. ' ' → logprob: -19.632606506347656
    10. '           ' → logprob: -19.757606506347656

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'p' → logprob: -15.125005722045898
    4. ' p' → logprob: -19.7500057220459
    5. '۰' → logprob: -20.6250057220459
    6. '   ' → logprob: -21.5000057220459
    7. '  ' → logprob: -21.8750057220459
    8. '
' → logprob: -22.5000057220459
    9. '<p' → logprob: -22.5000057220459
    10. '00' → logprob: -22.7500057220459

Token 425: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47951096296310425
    2. ' <' → logprob: -0.9795109629631042
    3. '<p' → logprob: -5.47951078414917
    4. ' <=' → logprob: -7.85451078414917
    5. '<=' → logprob: -7.97951078414917
    6. 'and' → logprob: -8.229511260986328
    7. ' ' → logprob: -9.604511260986328
    8. ' and' → logprob: -10.104511260986328
    9. 'p' → logprob: -10.229511260986328
    10. '       ' → logprob: -10.479511260986328

Token 426: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01814994215965271
    2. ' p' → logprob: -4.0181498527526855
    3. '<p' → logprob: -19.143150329589844
    4. '	p' → logprob: -19.268150329589844
    5. ' ' → logprob: -19.518150329589844
    6. '   ' → logprob: -19.768150329589844
    7. '_p' → logprob: -20.768150329589844
    8. ')p' → logprob: -21.018150329589844
    9. '[p' → logprob: -21.018150329589844
    10. '$p' → logprob: -21.018150329589844

Token 427: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.75
    3. 'x' → logprob: -16.625
    4. ' .' → logprob: -19.375
    5. '.p' → logprob: -19.625
    6. ' x' → logprob: -20.5
    7. '.y' → logprob: -21.125
    8. ' ' → logprob: -21.25
    9. '[x' → logprob: -21.5
    10. '.X' → logprob: -22.5

Token 428: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12692947685718536
    2. ' <' → logprob: -2.126929521560669
    3. '<p' → logprob: -13.75192928314209
    4. '<size' → logprob: -16.126930236816406
    5. '<len' → logprob: -16.376930236816406
    6. '[' → logprob: -17.501930236816406
    7. 'self' → logprob: -17.626930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '<Grid' → logprob: -17.751930236816406
    10. '<Self' → logprob: -17.876930236816406

Token 429: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00038038729690015316
    2. ' self' → logprob: -7.875380516052246
    3. '=self' → logprob: -16.37537956237793
    4. '[self' → logprob: -16.50037956237793
    5. '(self' → logprob: -17.50037956237793
    6. ' ' → logprob: -19.12537956237793
    7. '	self' → logprob: -19.75037956237793
    8. 's' → logprob: -19.87537956237793
    9. '0' → logprob: -20.25037956237793
    10. ':self' → logprob: -20.50037956237793

Token 430: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.21628783643245697
    2. 'width' → logprob: -1.7162878513336182
    3. 'self' → logprob: -4.216287612915039
    4. ' width' → logprob: -11.841287612915039
    5. '.' → logprob: -13.091287612915039
    6. ' self' → logprob: -14.091287612915039
    7. '   ' → logprob: -15.091287612915039
    8. '       ' → logprob: -15.841287612915039
    9. '.self' → logprob: -15.841287612915039
    10. '	width' → logprob: -16.09128761291504

Token 431: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21867665648460388
    2. ':
' → logprob: -1.8436766862869263
    3. ':' → logprob: -3.5936765670776367
    4. 'and' → logprob: -4.718676567077637
    5. ':return' → logprob: -7.093676567077637
    6. '       ' → logprob: -7.593676567077637
    7. '           ' → logprob: -8.468676567077637
    8. '):
' → logprob: -9.093676567077637
    9. '   ' → logprob: -9.843676567077637
    10. ' :
' → logprob: -11.593676567077637

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48956099152565
    2. '       ' → logprob: -0.9895609617233276
    3. 'return' → logprob: -4.614561080932617
    4. ' return' → logprob: -5.239561080932617
    5. '   ' → logprob: -8.989561080932617
    6. '	       ' → logprob: -11.364561080932617
    7. '	return' → logprob: -12.364561080932617
    8. ':return' → logprob: -12.489561080932617
    9. '
' → logprob: -13.239561080932617
    10. '	   ' → logprob: -13.364561080932617

Token 433: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006022649351507425
    2. ' return' → logprob: -5.2560224533081055
    3. '       ' → logprob: -7.2560224533081055
    4. '           ' → logprob: -9.506022453308105
    5. '   ' → logprob: -12.256022453308105
    6. '	return' → logprob: -12.631022453308105
    7. ':return' → logprob: -16.381023406982422
    8. '               ' → logprob: -16.506023406982422
    9. '{return' → logprob: -17.131023406982422
    10. ' ' → logprob: -17.256023406982422

Token 434: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033546582562848926
    2. ' self' → logprob: -8.000335693359375
    3. '           ' → logprob: -17.500335693359375
    4. '       ' → logprob: -18.875335693359375
    5. '	self' → logprob: -20.750335693359375
    6. '[self' → logprob: -21.250335693359375
    7. '   ' → logprob: -21.625335693359375
    8. '               ' → logprob: -22.000335693359375
    9. 'True' → logprob: -22.250335693359375
    10. '(self' → logprob: -22.375335693359375

Token 435: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.375000953674316
    3. ' .' → logprob: -14.500000953674316
    4. 'cells' → logprob: -16.250001907348633
    5. '.controls' → logprob: -17.750001907348633
    6. ').' → logprob: -18.125001907348633
    7. '.Cells' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '.states' → logprob: -18.750001907348633
    10. '.rows' → logprob: -18.750001907348633

Token 436: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.935296834039036e-06
    2. 'p' → logprob: -13.00000286102295
    3. '[' → logprob: -14.75000286102295
    4. '[y' → logprob: -15.37500286102295
    5. ' [' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '	p' → logprob: -19.000003814697266
    8. ' p' → logprob: -19.750003814697266
    9. '<p' → logprob: -19.875003814697266
    10. '][' → logprob: -20.125003814697266

Token 437: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -7.584239938296378e-06
    2. '.x' → logprob: -12.375007629394531
    3. '.' → logprob: -13.250007629394531
    4. 'y' → logprob: -13.500007629394531
    5. ' .' → logprob: -16.37500762939453
    6. '].' → logprob: -18.87500762939453
    7. ' y' → logprob: -19.12500762939453
    8. '	y' → logprob: -19.50000762939453
    9. '   ' → logprob: -20.12500762939453
    10. ' ' → logprob: -20.62500762939453

Token 438: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018214209005236626
    2. '[p' → logprob: -4.018214225769043
    3. ' ][' → logprob: -10.393214225769043
    4. ']' → logprob: -11.018214225769043
    5. '[' → logprob: -11.393214225769043
    6. 'p' → logprob: -12.393214225769043
    7. '"][' → logprob: -15.018214225769043
    8. '[x' → logprob: -15.268214225769043
    9. ']][' → logprob: -15.518214225769043
    10. '   ' → logprob: -15.893214225769043

Token 439: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.6240566083070007e-06
    2. ' p' → logprob: -13.500001907348633
    3. 'x' → logprob: -15.750001907348633
    4. '<p' → logprob: -18.875001907348633
    5. '.p' → logprob: -19.250001907348633
    6. 'px' → logprob: -19.750001907348633
    7. 'pox' → logprob: -19.875001907348633
    8. '   ' → logprob: -20.125001907348633
    9. '[p' → logprob: -20.250001907348633
    10. '[' → logprob: -20.250001907348633

Token 440: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -6.909333023941144e-05
    2. 'x' → logprob: -9.625068664550781
    3. '.' → logprob: -12.750068664550781
    4. ' .' → logprob: -17.25006866455078
    5. '].' → logprob: -18.25006866455078
    6. ' x' → logprob: -18.25006866455078
    7. '```' → logprob: -18.87506866455078
    8. ']' → logprob: -19.25006866455078
    9. '.y' → logprob: -19.37506866455078
    10. '[' → logprob: -19.62506866455078

Token 441: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004176221787929535
    2. ']
' → logprob: -5.629176139831543
    3. ' ]' → logprob: -7.504176139831543
    4. ']==' → logprob: -11.129176139831543
    5. '<|end|>' → logprob: -12.129176139831543
    6. ' ]
' → logprob: -12.754176139831543
    7. ']

' → logprob: -14.129176139831543
    8. ']<' → logprob: -15.004176139831543
    9. '       ' → logprob: -15.504176139831543
    10. '
' → logprob: -15.754176139831543

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024596223374828696
    2. 'return' → logprob: -8.875246047973633
    3. '<|end|>' → logprob: -9.375246047973633
    4. ' return' → logprob: -11.875246047973633
    5. '
' → logprob: -12.125246047973633
    6. '        
' → logprob: -13.250246047973633
    7. '        ' → logprob: -13.375246047973633
    8. '               ' → logprob: -14.000246047973633
    9. '	' → logprob: -14.125246047973633
    10. '<|end|>' → logprob: -14.500246047973633

Token 443: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020446251146495342
    2. 'return' (adapté à ' return') → logprob: -6.252044677734375
    3. ' return' → logprob: -9.252044677734375
    4. 'else' → logprob: -11.752044677734375
    5. ' else' → logprob: -11.877044677734375
    6. '
' → logprob: -12.502044677734375
    7. '   ' → logprob: -14.627044677734375
    8. '           ' → logprob: -15.252044677734375
    9. '	return' → logprob: -15.502044677734375
    10. '        
' → logprob: -15.502044677734375

Token 444: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001170225441455841
    2. ' False' → logprob: -6.7511701583862305
    3. '(False' → logprob: -21.501171112060547
    4. '   ' → logprob: -21.751171112060547
    5. 'True' → logprob: -22.501171112060547
    6. '=False' → logprob: -24.001171112060547
    7. 'false' → logprob: -24.251171112060547
    8. 'None' → logprob: -26.001171112060547
    9. 'F' → logprob: -26.626171112060547
    10. '.False' → logprob: -26.751171112060547

Token 445: '


' (ID: 2499)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7777178287506104
    2. '
' → logprob: -0.9027178287506104
    3. '<|end|>' → logprob: -2.0277178287506104
    4. '    
' → logprob: -5.902717590332031
    5. '

' → logprob: -8.027717590332031
    6. '<|end|>' → logprob: -8.402717590332031
    7. 'def' → logprob: -9.152717590332031
    8. '```' → logprob: -11.277717590332031
    9. '  
' → logprob: -11.277717590332031
    10. ')' → logprob: -12.152717590332031

Token 446: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01788417622447014
    2. '   ' → logprob: -4.392884254455566
    3. 'class' → logprob: -5.642884254455566
    4. '
' → logprob: -6.642884254455566
    5. '#' → logprob: -7.767884254455566
    6. 'from' → logprob: -10.017884254455566
    7. ' def' → logprob: -10.767884254455566
    8. '	def' → logprob: -12.142884254455566
    9. '<|end|>' → logprob: -12.517884254455566
    10. '<|end|>' → logprob: -12.642884254455566

Token 447: ' Abstract' (ID: 17413)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005247629713267088
    2. 'class' → logprob: -5.255247592926025
    3. '#' → logprob: -11.255248069763184
    4. 'from' → logprob: -14.130248069763184
    5. ' def' → logprob: -16.505247116088867
    6. 'import' → logprob: -16.630247116088867
    7. 'Input' → logprob: -16.880247116088867
    8. 'input' → logprob: -17.630247116088867
    9. 'Def' → logprob: -17.880247116088867
    10. 'The' → logprob: -18.380247116088867

Token 448: ' Character' (ID: 27668)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7967778444290161
    2. ' class' → logprob: -0.9217778444290161
    3. ' ' → logprob: -2.0467777252197266
    4. ' Point' → logprob: -4.671777725219727
    5. 'def' → logprob: -5.046777725219727
    6. ' def' → logprob: -6.546777725219727
    7. '#' → logprob: -6.796777725219727
    8. 'Point' → logprob: -7.171777725219727
    9. ' clas' → logprob: -8.171777725219727
    10. 'clas' → logprob: -8.296777725219727

Token 449: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.30842578411102295
    2. '<|end|>' → logprob: -1.933425784111023
    3. ' class' → logprob: -2.6834259033203125
    4. ':' → logprob: -3.4334259033203125
    5. '(class' → logprob: -5.0584259033203125
    6. '(' → logprob: -5.0584259033203125
    7. '<|end|>' → logprob: -6.3084259033203125
    8. '<class' → logprob: -6.3084259033203125
    9. '(QWidget' → logprob: -7.4334259033203125
    10. 's' → logprob: -7.8084259033203125

Token 450: ' to' (ID: 316)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005667583085596561
    2. ':' → logprob: -6.255667686462402
    3. ' class' → logprob: -6.255667686462402
    4. '
' → logprob: -7.130667686462402
    5. '<|end|>' → logprob: -7.380667686462402
    6. ':
' → logprob: -8.130667686462402
    7. '<class' → logprob: -9.880667686462402
    8. '(class' → logprob: -11.005667686462402
    9. '[class' → logprob: -12.255667686462402
    10. ',' → logprob: -12.255667686462402

Token 451: ' implement' (ID: 6365)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25201359391212463
    2. '<|end|>' → logprob: -1.6270135641098022
    3. '...' → logprob: -5.127013683319092
    4. '```' → logprob: -5.752013683319092
    5. 'represent' → logprob: -5.877013683319092
    6. ' represent' → logprob: -6.252013683319092
    7. '#' → logprob: -6.502013683319092
    8. '<|end|>' → logprob: -6.502013683319092
    9. 'import' → logprob: -7.002013683319092
    10. 's' → logprob: -7.502013683319092

Token 452: ' character' (ID: 5855)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: ' traits' (ID: 42908)
  Prédit: ' recognition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recognition' → logprob: -0.4628773629665375
    2. 's' → logprob: -2.7128772735595703
    3. '<|end|>' → logprob: -2.8378772735595703
    4. ' behavior' → logprob: -3.4628772735595703
    5. '<|end|>' → logprob: -3.8378772735595703
    6. ' parsing' → logprob: -3.9628772735595703
    7. 'recogn' → logprob: -4.08787727355957
    8. ' behaviors' → logprob: -4.08787727355957
    9. 'Recognizer' → logprob: -4.21287727355957
    10. ' logic' → logprob: -4.21287727355957

Token 454: ' and' (ID: 326)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03401920944452286
    2. ':' → logprob: -4.1590189933776855
    3. '
' → logprob: -5.2840189933776855
    4. ' class' → logprob: -5.2840189933776855
    5. '<|end|>' → logprob: -5.2840189933776855
    6. ':
' → logprob: -6.1590189933776855
    7. '<class' → logprob: -8.784019470214844
    8. 's' → logprob: -8.909019470214844
    9. '<|end|>' → logprob: -10.409019470214844
    10. '.' → logprob: -10.409019470214844

Token 455: ' recognition' (ID: 25995)
  Prédit: 'beh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beh' → logprob: -0.7161920666694641
    2. 'behavior' → logprob: -1.5911920070648193
    3. 'par' → logprob: -2.2161920070648193
    4. 'render' → logprob: -2.8411920070648193
    5. 'features' → logprob: -3.8411920070648193
    6. 'methods' → logprob: -3.8411920070648193
    7. 'movement' → logprob: -4.091192245483398
    8. 'drawing' → logprob: -4.216192245483398
    9. 'actions' → logprob: -5.091192245483398
    10. 'recogn' → logprob: -5.341192245483398

Token 456: ' interface' (ID: 6225)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.22478558123111725
    2. ':' → logprob: -2.099785566329956
    3. ':
' → logprob: -2.599785566329956
    4. ' class' → logprob: -5.599785804748535
    5. '<|end|>' → logprob: -8.474785804748535
    6. '
' → logprob: -8.724785804748535
    7. '(class' → logprob: -8.849785804748535
    8. '<class' → logprob: -9.474785804748535
    9. '.' → logprob: -9.599785804748535
    10. ',' → logprob: -10.349785804748535

Token 457: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05093760043382645
    2. '
' → logprob: -3.0509376525878906
    3. ':
' → logprob: -6.675937652587891
    4. ' class' → logprob: -7.300937652587891
    5. ':' → logprob: -8.30093765258789
    6. '<|end|>' → logprob: -9.80093765258789
    7. '<class' → logprob: -9.92593765258789
    8. '(class' → logprob: -11.17593765258789
    9. ' 
' → logprob: -11.92593765258789
    10. '  
' → logprob: -12.30093765258789

Token 458: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.034592388459714e-06
    2. ' class' → logprob: -12.125005722045898
    3. '
' → logprob: -14.625005722045898
    4. 'c' → logprob: -17.2500057220459
    5. '<class' → logprob: -17.6250057220459
    6. '"class' → logprob: -18.3750057220459
    7. 'from' → logprob: -18.6250057220459
    8. 'clas' → logprob: -18.8750057220459
    9. '<|end|>' → logprob: -19.7500057220459
    10. ''class' → logprob: -20.0000057220459

Token 459: ' Character' (ID: 27668)
  Prédit: ' Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Character' → logprob: -0.4310399889945984
    2. 'Character' → logprob: -1.0560400485992432
    3. 'Char' → logprob: -7.181039810180664
    4. ' Point' → logprob: -8.056039810180664
    5. ' Char' → logprob: -8.181039810180664
    6. 'Point' → logprob: -8.431039810180664
    7. 'Shape' → logprob: -9.306039810180664
    8. ' Base' → logprob: -9.681039810180664
    9. ' Shape' → logprob: -9.681039810180664
    10. 'Base' → logprob: -9.931039810180664

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016209151595830917
    2. ':
' → logprob: -4.141209125518799
    3. '<|end|>' → logprob: -9.016209602355957
    4. ' :' → logprob: -10.766209602355957
    5. '(' → logprob: -11.641209602355957
    6. '(object' → logprob: -12.141209602355957
    7. ':

' → logprob: -12.391209602355957
    8. '():' → logprob: -12.516209602355957
    9. '(Point' → logprob: -12.891209602355957
    10. '(Abstract' → logprob: -13.266209602355957

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008900215616449714
    2. ' def' → logprob: -7.875890254974365
    3. 'def' → logprob: -8.500889778137207
    4. '    
' → logprob: -8.750889778137207
    5. ':' → logprob: -9.125889778137207
    6. '	def' → logprob: -11.625889778137207
    7. ':
' → logprob: -11.875889778137207
    8. '(' → logprob: -12.250889778137207
    9. '):
' → logprob: -12.500889778137207
    10. ',' → logprob: -12.750889778137207

Token 462: ' #' (ID: 1069)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.38720351457595825
    2. 'def' → logprob: -1.1372034549713135
    3. '   ' → logprob: -8.137203216552734
    4. ' ' → logprob: -11.512203216552734
    5. '__' → logprob: -11.762203216552734
    6. ' __' → logprob: -12.637203216552734
    7. '  ' → logprob: -13.137203216552734
    8. ' pass' → logprob: -13.387203216552734
    9. 'class' → logprob: -13.387203216552734
    10. 'de' → logprob: -13.512203216552734

Token 463: ' character' (ID: 5855)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023546980693936348
    2. ' def' → logprob: -3.7735469341278076
    3. '__' → logprob: -9.773547172546387
    4. 'pass' → logprob: -9.898547172546387
    5. 'points' → logprob: -10.648547172546387
    6. 'from' → logprob: -10.773547172546387
    7. '@' → logprob: -10.773547172546387
    8. 'abstract' → logprob: -11.023547172546387
    9. 'width' → logprob: -11.148547172546387
    10. '   ' → logprob: -11.398547172546387

Token 464: ' grid' (ID: 10586)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8214221000671387
    2. '_name' → logprob: -1.4464221000671387
    3. '_id' → logprob: -2.8214221000671387
    4. '_points' → logprob: -2.9464221000671387
    5. '_width' → logprob: -3.0714221000671387
    6. 's' → logprob: -3.1964221000671387
    7. 'def' → logprob: -3.6964221000671387
    8. '_set' → logprob: -4.071422100067139
    9. '_map' → logprob: -4.571422100067139
    10. '_size' → logprob: -4.696422100067139

Token 465: ' patterns' (ID: 18587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8321545720100403
    2. '   ' → logprob: -1.3321545124053955
    3. ' :' → logprob: -1.8321545124053955
    4. ' =' → logprob: -2.5821545124053955
    5. '_width' → logprob: -3.9571545124053955
    6. '_size' → logprob: -4.207154750823975
    7. 'def' → logprob: -4.457154750823975
    8. ' ' → logprob: -5.332154750823975
    9. 'width' → logprob: -5.582154750823975
    10. ' def' → logprob: -5.832154750823975

Token 466: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8200405836105347
    2. ' =' → logprob: -0.8200405836105347
    3. '   ' → logprob: -2.195040702819824
    4. ' :' → logprob: -5.320040702819824
    5. '=' → logprob: -6.445040702819824
    6. ' ' → logprob: -7.445040702819824
    7. '    ' → logprob: -8.695040702819824
    8. '  ' → logprob: -8.695040702819824
    9. 'def' → logprob: -8.945040702819824
    10. 'patterns' → logprob: -9.445040702819824

Token 467: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.10142022371292114
    2. ' be' → logprob: -2.8514201641082764
    3. 'set' → logprob: -4.3514204025268555
    4. 'match' → logprob: -4.7264204025268555
    5. 'recogn' → logprob: -4.7264204025268555
    6. '_set' → logprob: -6.2264204025268555
    7. 'List' → logprob: -7.4764204025268555
    8. 'class' → logprob: -7.6014204025268555
    9. 'mark' → logprob: -7.6014204025268555
    10. 'fill' → logprob: -7.9764204025268555

Token 468: ' overridden' (ID: 119591)
  Prédit: 'recognized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'recognized' → logprob: -0.6241414546966553
    2. 'matched' → logprob: -1.6241414546966553
    3. 'implemented' → logprob: -2.1241414546966553
    4. 'defined' → logprob: -3.2491414546966553
    5. 'filled' → logprob: -3.8741414546966553
    6. 'set' → logprob: -3.8741414546966553
    7. 'over' → logprob: -4.374141693115234
    8. 'provided' → logprob: -4.499141693115234
    9. 'used' → logprob: -5.124141693115234
    10. 'stored' → logprob: -5.999141693115234

Token 469: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10740167647600174
    2. '   ' → logprob: -2.9824016094207764
    3. ' =' → logprob: -3.1074016094207764
    4. ' :' → logprob: -5.4824018478393555
    5. '=' → logprob: -6.3574018478393555
    6. '<|end|>' → logprob: -8.982401847839355
    7. ' ' → logprob: -9.357401847839355
    8. '    
' → logprob: -9.982401847839355
    9. '  ' → logprob: -9.982401847839355
    10. ':
' → logprob: -9.982401847839355

Token 470: ' subclasses' (ID: 162106)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.03436273708939552
    2. '[]' → logprob: -3.90936279296875
    3. 'set' → logprob: -4.78436279296875
    4. 'None' → logprob: -5.65936279296875
    5. 'dict' → logprob: -7.53436279296875
    6. 'classmethod' → logprob: -7.53436279296875
    7. '{' → logprob: -8.15936279296875
    8. '()' → logprob: -8.90936279296875
    9. 'staticmethod' → logprob: -9.90936279296875
    10. '{})' → logprob: -9.90936279296875

Token 471: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1178511530160904
    2. '   ' → logprob: -2.4928512573242188
    3. ' :' → logprob: -3.9928512573242188
    4. ' =' → logprob: -5.242851257324219
    5. ' ' → logprob: -6.742851257324219
    6. '    
' → logprob: -6.867851257324219
    7. '
' → logprob: -6.867851257324219
    8. '=' → logprob: -7.992851257324219
    9. ':
' → logprob: -7.992851257324219
    10. '    ' → logprob: -8.367851257324219

Token 472: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.149240642786026
    2. '   ' → logprob: -2.024240732192993
    3. ' :' → logprob: -5.149240493774414
    4. ':
' → logprob: -7.774240493774414
    5. '  ' → logprob: -10.024240493774414
    6. ':def' → logprob: -10.024240493774414
    7. '    
' → logprob: -10.149240493774414
    8. ' ' → logprob: -10.274240493774414
    9. 'def' → logprob: -10.524240493774414
    10. ',' → logprob: -10.649240493774414

Token 473: ' pattern' (ID: 8302)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.38369020819664
    2. 'PAT' → logprob: -2.383690118789673
    3. 'pattern' (adapté à ' pattern') → logprob: -2.508690118789673
    4. ' patterns' → logprob: -2.508690118789673
    5. 'char' → logprob: -4.008690357208252
    6. 'CHAR' → logprob: -4.508690357208252
    7. '_patterns' → logprob: -4.758690357208252
    8. ' PAT' → logprob: -5.508690357208252
    9. ' pattern' → logprob: -5.883690357208252
    10. 'grid' → logprob: -6.133690357208252

Token 474: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02348596602678299
    2. 's' → logprob: -3.8984858989715576
    3. ' =' → logprob: -5.898486137390137
    4. ' :' → logprob: -9.023486137390137
    5. '=' → logprob: -10.398486137390137
    6. '_set' → logprob: -11.648486137390137
    7. '   ' → logprob: -11.648486137390137
    8. '_sets' → logprob: -12.148486137390137
    9. 'es' → logprob: -12.273486137390137
    10. '_:' → logprob: -12.523486137390137

Token 475: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.03903459012508392
    2. 'Set' → logprob: -3.289034605026245
    3. ' List' → logprob: -7.289034366607666
    4. 'Dict' → logprob: -8.164034843444824
    5. '[List' → logprob: -11.414034843444824
    6. ' Set' → logprob: -11.664034843444824
    7. 'Grid' → logprob: -13.414034843444824
    8. '   ' → logprob: -13.789034843444824
    9. '	List' → logprob: -14.289034843444824
    10. ' ' → logprob: -14.414034843444824

Token 476: '[str' (ID: 33439)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.16055473685264587
    2. '[' → logprob: -1.9105547666549683
    3. '[str' → logprob: -8.410554885864258
    4. '[int' → logprob: -9.160554885864258
    5. '<Point' → logprob: -14.410554885864258
    6. '['' → logprob: -14.535554885864258
    7. '[
' → logprob: -14.660554885864258
    8. '[[' → logprob: -14.660554885864258
    9. '<List' → logprob: -15.035554885864258
    10. '   ' → logprob: -15.660554885864258

Token 477: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.88418151892256e-05
    2. ' ]' → logprob: -10.625059127807617
    3. '']' → logprob: -11.500059127807617
    4. ']

' → logprob: -11.625059127807617
    5. ']=' → logprob: -12.000059127807617
    6. '[' → logprob: -12.875059127807617
    7. '   ' → logprob: -13.000059127807617
    8. ']
' → logprob: -13.750059127807617
    9. '`]' → logprob: -14.125059127807617
    10. '"]' → logprob: -14.250059127807617

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5896198749542236
    2. '
' → logprob: -0.9646198749542236
    3. '    
' → logprob: -2.8396198749542236
    4. '<|end|>' → logprob: -5.9646196365356445
    5. '

' → logprob: -6.3396196365356445
    6. 'def' → logprob: -8.089619636535645
    7. ':' → logprob: -8.339619636535645
    8. '    ' → logprob: -8.464619636535645
    9. ',' → logprob: -8.839619636535645
    10. ' ' → logprob: -9.214619636535645

Token 479: ' char' (ID: 1826)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.8986639976501465
    2. ' width' → logprob: -1.7736639976501465
    3. 'pattern' → logprob: -2.5236639976501465
    4. 'def' → logprob: -2.6486639976501465
    5. ' def' → logprob: -2.8986639976501465
    6. 'char' (adapté à ' char') → logprob: -2.8986639976501465
    7. '   ' → logprob: -2.8986639976501465
    8. 'height' → logprob: -3.5236639976501465
    9. ' pattern' → logprob: -4.2736639976501465
    10. ' height' → logprob: -4.8986639976501465

Token 480: '_repr' (ID: 193246)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9731993079185486
    2. 'acter' → logprob: -0.9731993079185486
    3. '=' → logprob: -2.0981993675231934
    4. ' =' → logprob: -2.4731993675231934
    5. '=None' → logprob: -4.348199367523193
    6. 'ACTER' → logprob: -4.473199367523193
    7. 'cter' → logprob: -6.223199367523193
    8. ':str' → logprob: -6.348199367523193
    9. ' ' → logprob: -6.473199367523193
    10. 'acters' → logprob: -6.473199367523193

Token 481: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005719977896660566
    2. '=' → logprob: -5.255720138549805
    3. ' =' → logprob: -7.755720138549805
    4. '<|end|>' → logprob: -10.755720138549805
    5. ' :' → logprob: -11.255720138549805
    6. '=None' → logprob: -11.255720138549805
    7. ' ' → logprob: -12.880720138549805
    8. '   ' → logprob: -13.130720138549805
    9. ')' → logprob: -13.755720138549805
    10. '='' → logprob: -14.005720138549805

Token 482: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0006378580583259463
    2. ' str' → logprob: -7.375638008117676
    3. '[str' → logprob: -11.625638008117676
    4. 'None' → logprob: -13.875638008117676
    5. '   ' → logprob: -14.750638008117676
    6. '	str' → logprob: -15.250638008117676
    7. ' ' → logprob: -15.375638008117676
    8. ''' → logprob: -16.50063705444336
    9. '''' → logprob: -16.62563705444336
    10. '""' → logprob: -16.62563705444336

Token 483: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2575201690196991
    2. '

' → logprob: -1.8825201988220215
    3. '<|end|>' → logprob: -2.8825201988220215
    4. '   ' → logprob: -4.3825201988220215
    5. '<|end|>' → logprob: -5.3825201988220215
    6. '    
' → logprob: -7.2575201988220215
    7. ':' → logprob: -7.5075201988220215
    8. ' ' → logprob: -9.507519721984863
    9. '
    
' → logprob: -9.757519721984863
    10. '
' → logprob: -9.882519721984863

Token 484: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28815916180610657
    2. '   ' → logprob: -1.4131591320037842
    3. '    
' → logprob: -5.413159370422363
    4. '<|end|>' → logprob: -6.663159370422363
    5. '

' → logprob: -6.913159370422363
    6. '<|end|>' → logprob: -8.913159370422363
    7. ' 
' → logprob: -10.663159370422363
    8. 'def' → logprob: -10.788159370422363
    9. '  
' → logprob: -10.913159370422363
    10. ':' → logprob: -11.288159370422363

Token 485: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021729499101638794
    2. '@' → logprob: -3.8967294692993164
    3. ' def' → logprob: -7.271729469299316
    4. 'pattern' → logprob: -8.396729469299316
    5. 'width' → logprob: -8.896729469299316
    6. '   ' → logprob: -9.646729469299316
    7. 'char' → logprob: -11.396729469299316
    8. ' @' → logprob: -11.771729469299316
    9. 'height' → logprob: -11.771729469299316
    10. '@property' → logprob: -12.021729469299316

Token 486: ' dimensions' (ID: 23995)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3122144043445587
    2. '@' → logprob: -1.4372143745422363
    3. ' def' → logprob: -3.9372143745422363
    4. 'classmethod' → logprob: -5.187214374542236
    5. 'pattern' → logprob: -6.312214374542236
    6. 'width' → logprob: -6.687214374542236
    7. '@property' → logprob: -7.062214374542236
    8. ' @' → logprob: -7.687214374542236
    9. 'staticmethod' → logprob: -8.062214851379395
    10. 'char' → logprob: -8.187214851379395

Token 487: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006485265679657459
    2. '   ' → logprob: -5.381485462188721
    3. ' =' → logprob: -6.756485462188721
    4. ' :' → logprob: -7.381485462188721
    5. ':int' → logprob: -10.131484985351562
    6. '=' → logprob: -10.881484985351562
    7. ' ' → logprob: -11.756484985351562
    8. '  ' → logprob: -12.006484985351562
    9. 'def' → logprob: -13.756484985351562
    10. '_width' → logprob: -13.881484985351562

Token 488: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.3415946364402771
    2. ' pattern' → logprob: -1.5915946960449219
    3. ' the' → logprob: -2.591594696044922
    4. 'the' → logprob: -4.591594696044922
    5. '   ' → logprob: -7.466594696044922
    6. '(pattern' → logprob: -10.341594696044922
    7. 'character' → logprob: -10.591594696044922
    8. ' character' → logprob: -10.966594696044922
    9. 'char' → logprob: -11.216594696044922
    10. ' ' → logprob: -11.466594696044922

Token 489: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007991461316123605
    2. '   ' → logprob: -8.000799179077148
    3. ' =' → logprob: -8.125799179077148
    4. ' :' → logprob: -8.875799179077148
    5. ':int' → logprob: -10.875799179077148
    6. '=' → logprob: -11.875799179077148
    7. ' ' → logprob: -15.000799179077148
    8. 'int' → logprob: -15.125799179077148
    9. '  ' → logprob: -15.125799179077148
    10. ',' → logprob: -15.250799179077148

Token 490: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10628121346235275
    2. '   ' → logprob: -2.356281280517578
    3. ' =' → logprob: -5.231281280517578
    4. ' :' → logprob: -7.481281280517578
    5. '=' → logprob: -9.231281280517578
    6. ':int' → logprob: -11.231281280517578
    7. 'width' → logprob: -11.856281280517578
    8. '  ' → logprob: -11.981281280517578
    9. ' ' → logprob: -12.106281280517578
    10. '_width' → logprob: -12.231281280517578

Token 491: ' height' (ID: 4679)
  Prédit: ' width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.6939261555671692
    2. ' height' → logprob: -0.8189261555671692
    3. 'height' (adapté à ' height') → logprob: -3.5689260959625244
    4. 'width' → logprob: -3.6939260959625244
    5. '   ' → logprob: -5.0689263343811035
    6. ' pattern' → logprob: -10.443925857543945
    7. ' =' → logprob: -10.818925857543945
    8. ' @' → logprob: -10.943925857543945
    9. '_width' → logprob: -11.568925857543945
    10. '	width' → logprob: -11.568925857543945

Token 492: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001136881415732205
    2. ':int' → logprob: -7.126136779785156
    3. ' :' → logprob: -8.876136779785156
    4. ' =' → logprob: -9.126136779785156
    5. '=' → logprob: -9.626136779785156
    6. '   ' → logprob: -11.501136779785156
    7. '<|end|>' → logprob: -12.626136779785156
    8. ',' → logprob: -12.876136779785156
    9. ':number' → logprob: -14.501136779785156
    10. 'int' → logprob: -15.001136779785156

Token 493: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06235640496015549
    2. ' int' → logprob: -2.812356472015381
    3. 'len' → logprob: -8.187355995178223
    4. ' len' → logprob: -9.812355995178223
    5. '   ' → logprob: -10.187355995178223
    6. ' =' → logprob: -11.937355995178223
    7. ':int' → logprob: -12.812355995178223
    8. 'property' → logprob: -13.062355995178223
    9. '[int' → logprob: -13.437355995178223
    10. ' ' → logprob: -13.562355995178223

Token 494: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34320008754730225
    2. '=' → logprob: -1.7182000875473022
    3. ':' → logprob: -2.218200206756592
    4. '   ' → logprob: -6.968200206756592
    5. ':int' → logprob: -7.343200206756592
    6. ',' → logprob: -7.593200206756592
    7. ' ' → logprob: -9.593199729919434
    8. '=int' → logprob: -10.218199729919434
    9. '<|end|>' → logprob: -10.343199729919434
    10. ' =
' → logprob: -10.593199729919434

Token 495: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42233970761299133
    2. '=' → logprob: -1.422339677810669
    3. ' =' → logprob: -2.297339677810669
    4. '   ' → logprob: -6.422339916229248
    5. ':int' → logprob: -6.922339916229248
    6. ' :' → logprob: -9.04733943939209
    7. ',' → logprob: -10.04733943939209
    8. '=None' → logprob: -11.54733943939209
    9. ' ' → logprob: -11.79733943939209
    10. '=int' → logprob: -11.92233943939209

Token 496: ' width' (ID: 4345)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.662556529045105
    2. ' =' → logprob: -1.162556529045105
    3. 'width' (adapté à ' width') → logprob: -2.4125566482543945
    4. ':' → logprob: -2.6625566482543945
    5. ' width' → logprob: -4.5375566482543945
    6. '   ' → logprob: -6.7875566482543945
    7. 'int' → logprob: -8.787556648254395
    8. ' :' → logprob: -9.037556648254395
    9. ':int' → logprob: -9.162556648254395
    10. ' ' → logprob: -9.662556648254395

Token 497: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6970592737197876
    2. ' =' → logprob: -0.6970592737197876
    3. ':' → logprob: -6.197059154510498
    4. '   ' → logprob: -6.322059154510498
    5. ' ' → logprob: -10.697059631347656
    6. ' =
' → logprob: -11.072059631347656
    7. '<|end|>' → logprob: -11.197059631347656
    8. '  ' → logprob: -12.322059631347656
    9. '=
' → logprob: -12.697059631347656
    10. '    ' → logprob: -12.822059631347656

Token 498: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16044437885284424
    2. ' int' → logprob: -1.9104443788528442
    3. ' ' → logprob: -9.035444259643555
    4. 'None' → logprob: -10.410444259643555
    5. ':int' → logprob: -10.535444259643555
    6. ' None' → logprob: -11.285444259643555
    7. '...' → logprob: -11.910444259643555
    8. 'len' → logprob: -12.160444259643555
    9. '[int' → logprob: -12.285444259643555
    10. '   ' → logprob: -12.410444259643555

Token 499: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46332451701164246
    2. '
' → logprob: -1.3383245468139648
    3. '=' → logprob: -2.713324546813965
    4. ' =' → logprob: -3.463324546813965
    5. ':' → logprob: -5.463324546813965
    6. '

' → logprob: -5.713324546813965
    7. '    
' → logprob: -6.338324546813965
    8. 'def' → logprob: -7.088324546813965
    9. '<|end|>' → logprob: -8.463324546813965
    10. '=
' → logprob: -8.963324546813965

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18584567308425903
    2. '
' → logprob: -1.8108456134796143
    3. '    
' → logprob: -5.685845851898193
    4. 'def' → logprob: -6.185845851898193
    5. ':' → logprob: -8.935845375061035
    6. '=' → logprob: -9.060845375061035
    7. ' =' → logprob: -9.435845375061035
    8. '

' → logprob: -9.435845375061035
    9. ' def' → logprob: -9.435845375061035
    10. '  
' → logprob: -10.310845375061035

Token 501: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019460106268525124
    2. ' def' → logprob: -6.376945972442627
    3. '
' → logprob: -8.876946449279785
    4. '   ' → logprob: -9.251946449279785
    5. '@' → logprob: -12.126946449279785
    6. '    
' → logprob: -14.126946449279785
    7. '	def' → logprob: -14.876946449279785
    8. '\n' → logprob: -14.876946449279785
    9. '

' → logprob: -15.126946449279785
    10. ':' → logprob: -16.00194549560547

Token 502: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0227652695029974
    2. '__' → logprob: -4.022765159606934
    3. '_init' → logprob: -5.772765159606934
    4. ' def' → logprob: -7.647765159606934
    5. 'init' → logprob: -8.022765159606934
    6. ' init' → logprob: -8.272765159606934
    7. 'def' → logprob: -8.397765159606934
    8. ' _' → logprob: -9.772765159606934
    9. 'classmethod' → logprob: -10.022765159606934
    10. '   ' → logprob: -10.022765159606934

Token 503: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6240566083070007e-06
    2. 'post' → logprob: -13.750001907348633
    3. 'eq' → logprob: -14.750001907348633
    4. ' init' → logprob: -16.625001907348633
    5. 'class' → logprob: -17.125001907348633
    6. 'len' → logprob: -17.750001907348633
    7. 'lt' → logprob: -19.625001907348633
    8. 'repr' → logprob: -19.750001907348633
    9. '_init' → logprob: -20.000001907348633
    10. 'hash' → logprob: -20.125001907348633

Token 504: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00011117222311440855
    2. '__' → logprob: -9.12511157989502
    3. '(self' → logprob: -14.12511157989502
    4. '__(
' → logprob: -14.12511157989502
    5. '__((' → logprob: -14.87511157989502
    6. '_(' → logprob: -15.00011157989502
    7. '__('' → logprob: -16.875110626220703
    8. '___' → logprob: -17.625110626220703
    9. '(' → logprob: -18.125110626220703
    10. '__("' → logprob: -19.375110626220703

Token 505: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003849133790936321
    2. ' self' → logprob: -8.000385284423828
    3. ')' → logprob: -10.250385284423828
    4. '   ' → logprob: -11.500385284423828
    5. '):
' → logprob: -13.125385284423828
    6. '
' → logprob: -14.250385284423828
    7. '       ' → logprob: -14.875385284423828
    8. '(self' → logprob: -15.000385284423828
    9. ')(' → logprob: -15.750385284423828
    10. ')
' → logprob: -16.375385284423828

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14543400704860687
    2. 'self' → logprob: -3.0204339027404785
    3. '):
' → logprob: -3.0204339027404785
    4. '(self' → logprob: -3.7704339027404785
    5. '):' → logprob: -4.5204339027404785
    6. ' ,' → logprob: -5.8954339027404785
    7. ',self' → logprob: -8.270434379577637
    8. ' (' → logprob: -8.645434379577637
    9. ')(' → logprob: -9.020434379577637
    10. ')' → logprob: -9.020434379577637

Token 507: ' occupied' (ID: 46186)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5316072702407837
    2. 'grid' → logprob: -1.0316072702407837
    3. ' pattern' → logprob: -4.531607151031494
    4. ' grid' → logprob: -4.531607151031494
    5. ')' → logprob: -4.656607151031494
    6. 'x' → logprob: -5.281607151031494
    7. 'self' → logprob: -5.406607151031494
    8. 'points' → logprob: -5.906607151031494
    9. 'cells' → logprob: -6.406607151031494
    10. 'pixels' → logprob: -6.531607151031494

Token 508: '_points' (ID: 30070)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7874745726585388
    2. '_points' → logprob: -1.0374746322631836
    3. '_cells' → logprob: -2.0374746322631836
    4. '):' → logprob: -3.6624746322631836
    5. '_positions' → logprob: -3.6624746322631836
    6. ' ):' → logprob: -5.537474632263184
    7. '_coords' → logprob: -7.037474632263184
    8. ')' → logprob: -7.162474632263184
    9. ' :' → logprob: -7.287474632263184
    10. '_tokens' → logprob: -7.662474632263184

Token 509: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.08944896562025e-05
    2. '):' → logprob: -10.000081062316895
    3. '):
' → logprob: -10.625081062316895
    4. ',' → logprob: -12.625081062316895
    5. ' :' → logprob: -13.000081062316895
    6. '=None' → logprob: -13.500081062316895
    7. '=' → logprob: -13.750081062316895
    8. '   ' → logprob: -14.125081062316895
    9. ')' → logprob: -14.875081062316895
    10. ':Set' → logprob: -15.000081062316895

Token 510: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.29235348105430603
    2. 'List' → logprob: -1.5423535108566284
    3. ' Set' → logprob: -3.542353391647339
    4. ' List' → logprob: -4.542353630065918
    5. 'set' → logprob: -11.917353630065918
    6. '	Set' → logprob: -12.292353630065918
    7. '   ' → logprob: -12.542353630065918
    8. ' ' → logprob: -13.167353630065918
    9. ')' → logprob: -13.417353630065918
    10. '	List' → logprob: -13.542353630065918

Token 511: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.706686690449715e-05
    2. 'Point' → logprob: -10.250066757202148
    3. '):' → logprob: -10.875066757202148
    4. '(Point' → logprob: -12.625066757202148
    5. '<Point' → logprob: -12.750066757202148
    6. '['' → logprob: -13.375066757202148
    7. '	Point' → logprob: -13.875066757202148
    8. '):
' → logprob: -13.875066757202148
    9. '[int' → logprob: -14.500066757202148
    10. '   ' → logprob: -14.500066757202148

Token 512: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.117345684382599e-05
    2. '[' → logprob: -11.000020980834961
    3. ''' → logprob: -13.000020980834961
    4. ' Point' → logprob: -13.750020980834961
    5. '	Point' → logprob: -14.750020980834961
    6. '['' → logprob: -15.375020980834961
    7. '(Point' → logprob: -16.12502098083496
    8. ')' → logprob: -16.25002098083496
    9. ']' → logprob: -16.50002098083496
    10. '<Point' → logprob: -16.87502098083496

Token 513: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5327771306037903
    2. '):' → logprob: -0.9077771306037903
    3. ')' → logprob: -5.157777309417725
    4. ']):
' → logprob: -6.282777309417725
    5. ']):' → logprob: -7.157777309417725
    6. ',' → logprob: -7.282777309417725
    7. ' ):' → logprob: -8.532776832580566
    8. '):
' → logprob: -9.407776832580566
    9. ' ):
' → logprob: -9.407776832580566
    10. '>):' → logprob: -10.282776832580566

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020592445798683912
    2. 'self' → logprob: -9.000205993652344
    3. '	' → logprob: -9.750205993652344
    4. '   ' → logprob: -12.125205993652344
    5. ' self' → logprob: -12.125205993652344
    6. '	self' → logprob: -12.625205993652344
    7. ',' → logprob: -13.125205993652344
    8. '        
' → logprob: -13.250205993652344
    9. '	   ' → logprob: -13.250205993652344
    10. '      ' → logprob: -14.000205993652344

Token 515: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17092561721801758
    2. '       ' → logprob: -1.9209256172180176
    3. ' self' → logprob: -4.545925617218018
    4. 'super' → logprob: -11.54592514038086
    5. 'points' → logprob: -12.04592514038086
    6. '   ' → logprob: -12.04592514038086
    7. 'rows' → logprob: -13.17092514038086
    8. '	self' → logprob: -13.29592514038086
    9. '#' (adapté à ' #') → logprob: -13.29592514038086
    10. 'h' → logprob: -13.67092514038086

Token 516: ' occupied' (ID: 46186)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00610476266592741
    2. '       ' → logprob: -5.381104946136475
    3. ' self' → logprob: -7.131104946136475
    4. '#' → logprob: -8.006104469299316
    5. 'min' → logprob: -8.256104469299316
    6. 'points' → logprob: -10.631104469299316
    7. '   ' → logprob: -10.756104469299316
    8. 'super' → logprob: -11.006104469299316
    9. 'x' → logprob: -12.631104469299316
    10. 'max' → logprob: -12.756104469299316

Token 517: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.009936226531863213
    2. ' =' → logprob: -4.884936332702637
    3. '=' → logprob: -6.259936332702637
    4. '   ' → logprob: -8.884936332702637
    5. 'points' → logprob: -9.009936332702637
    6. ' points' → logprob: -10.259936332702637
    7. '_tokens' → logprob: -10.634936332702637
    8. '	points' → logprob: -10.759936332702637
    9. '=self' → logprob: -11.134936332702637
    10. '       ' → logprob: -11.134936332702637

Token 518: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24333597719669342
    2. '=' → logprob: -1.7433359622955322
    3. ':' → logprob: -3.9933359622955322
    4. '=self' → logprob: -4.993336200714111
    5. 'self' → logprob: -5.618336200714111
    6. '       ' → logprob: -5.743336200714111
    7. '<|end|>' → logprob: -6.368336200714111
    8. '):
' → logprob: -6.493336200714111
    9. '
' → logprob: -6.618336200714111
    10. ',' → logprob: -6.868336200714111

Token 519: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1553935706615448
    2. 'Set' → logprob: -2.780393600463867
    3. '       ' → logprob: -3.155393600463867
    4. ' self' → logprob: -3.405393600463867
    5. ' Set' → logprob: -5.280393600463867
    6. 'set' → logprob: -8.405393600463867
    7. '#' → logprob: -8.905393600463867
    8. '   ' → logprob: -8.905393600463867
    9. 'super' → logprob: -9.155393600463867
    10. 'points' → logprob: -9.280393600463867

Token 520: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.4603966772556305
    2. 'points' → logprob: -1.335396647453308
    3. '<|end|>' → logprob: -3.0853967666625977
    4. '_points' → logprob: -3.5853967666625977
    5. ' =' → logprob: -4.335396766662598
    6. 'self' → logprob: -5.960396766662598
    7. '=' → logprob: -5.960396766662598
    8. 'tokens' → logprob: -6.085396766662598
    9. '=self' → logprob: -6.585396766662598
    10. '       ' → logprob: -6.710396766662598

Token 521: ' painted' (ID: 33842)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6677694320678711
    2. ' that' → logprob: -0.9177694320678711
    3. '       ' → logprob: -3.042769432067871
    4. 'in' → logprob: -4.917769432067871
    5. '<|end|>' → logprob: -5.042769432067871
    6. 'that' → logprob: -5.292769432067871
    7. ' of' → logprob: -5.792769432067871
    8. ' =' → logprob: -5.792769432067871
    9. ' where' → logprob: -6.417769432067871
    10. ' self' → logprob: -6.542769432067871

Token 522: ' for' (ID: 395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6505221724510193
    2. '<|end|>' → logprob: -2.025522232055664
    3. ' that' → logprob: -2.150522232055664
    4. '       ' → logprob: -2.650522232055664
    5. ',' → logprob: -3.025522232055664
    6. ' by' → logprob: -3.150522232055664
    7. 'in' → logprob: -4.400522232055664
    8. 'self' → logprob: -4.900522232055664
    9. ' self' → logprob: -4.900522232055664
    10. ' =' → logprob: -5.025522232055664

Token 523: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.228324294090271
    2. ' this' → logprob: -1.978324294090271
    3. 'the' → logprob: -3.3533244132995605
    4. ' the' → logprob: -4.2283244132995605
    5. 'self' → logprob: -4.2283244132995605
    6. 'character' → logprob: -6.9783244132995605
    7. ' self' → logprob: -7.7283244132995605
    8. ' character' → logprob: -8.353323936462402
    9. '       ' → logprob: -10.728323936462402
    10. ' a' → logprob: -10.978323936462402

Token 524: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.030373170971870422
    2. 'character' → logprob: -3.5303730964660645
    3. '_character' → logprob: -8.030373573303223
    4. 'Character' → logprob: -9.155373573303223
    5. ' Character' → logprob: -9.405373573303223
    6. ' object' → logprob: -10.280373573303223
    7. ' ' → logprob: -10.405373573303223
    8. 'char' → logprob: -11.905373573303223
    9. ' char' → logprob: -11.905373573303223
    10. '.character' → logprob: -12.405373573303223

Token 525: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5819539427757263
    2. '
' → logprob: -2.206954002380371
    3. ' in' → logprob: -2.706954002380371
    4. ' self' → logprob: -2.831954002380371
    5. '<|end|>' → logprob: -2.831954002380371
    6. 'self' → logprob: -3.331954002380371
    7. ',' → logprob: -3.331954002380371
    8. ':' → logprob: -3.706954002380371
    9. ')' → logprob: -4.331954002380371
    10. '   ' → logprob: -4.956954002380371

Token 526: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07251492887735367
    2. 'the' → logprob: -3.3225150108337402
    3. ' the' → logprob: -3.8225150108337402
    4. ' self' → logprob: -4.57251501083374
    5. '       ' → logprob: -6.57251501083374
    6. '   ' → logprob: -9.322514533996582
    7. 'grid' → logprob: -10.072514533996582
    8. 'this' → logprob: -10.197514533996582
    9. ' grid' → logprob: -11.447514533996582
    10. '(self' → logprob: -11.447514533996582

Token 527: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.6433329582214355
    2. 'grid' → logprob: -0.7683329582214355
    3. 'paper' → logprob: -5.6433329582214355
    4. 'canvas' → logprob: -6.2683329582214355
    5. 'Grid' → logprob: -6.7683329582214355
    6. '   ' → logprob: -7.2683329582214355
    7. 'character' → logprob: -7.5183329582214355
    8. ' paper' → logprob: -7.8933329582214355
    9. '_grid' → logprob: -8.143333435058594
    10. 'board' → logprob: -8.268333435058594

Token 528: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15616030991077423
    2. '
' → logprob: -2.031160354614258
    3. 'self' → logprob: -4.781160354614258
    4. ',' → logprob: -5.656160354614258
    5. '        
' → logprob: -7.906160354614258
    6. ' self' → logprob: -8.281160354614258
    7. '<|end|>' → logprob: -8.781160354614258
    8. ',
' → logprob: -8.781160354614258
    9. ':' → logprob: -8.906160354614258
    10. '(self' → logprob: -9.156160354614258

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007724629249423742
    2. 'self' → logprob: -7.500772476196289
    3. ',' → logprob: -9.250772476196289
    4. ' self' → logprob: -9.875772476196289
    5. '
' → logprob: -10.375772476196289
    6. '	' → logprob: -10.750772476196289
    7. '   ' → logprob: -12.500772476196289
    8. '<|end|>' → logprob: -12.500772476196289
    9. '	self' → logprob: -12.500772476196289
    10. '        
' → logprob: -13.250772476196289

Token 530: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.156638965010643
    2. ' self' → logprob: -2.4066388607025146
    3. '       ' → logprob: -2.9066388607025146
    4. 'super' → logprob: -9.031639099121094
    5. ' super' → logprob: -10.531639099121094
    6. 'points' → logprob: -11.156639099121094
    7. 'width' → logprob: -11.781639099121094
    8. '#' → logprob: -11.906639099121094
    9. '   ' → logprob: -11.906639099121094
    10. 'min' → logprob: -12.656639099121094

Token 531: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0009513601544313133
    2. '.points' → logprob: -7.250951290130615
    3. 'occupied' → logprob: -8.750951766967773
    4. '.oc' → logprob: -11.250951766967773
    5. '._' → logprob: -11.500951766967773
    6. '.character' → logprob: -11.625951766967773
    7. '.pattern' → logprob: -11.750951766967773
    8. '.set' → logprob: -12.000951766967773
    9. '.characters' → logprob: -12.125951766967773
    10. 'points' → logprob: -12.750951766967773

Token 532: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.011318255215883255
    2. 'points' → logprob: -4.636318206787109
    3. '_' → logprob: -8.13631820678711
    4. 'pattern' → logprob: -8.38631820678711
    5. 'initialize' → logprob: -8.76131820678711
    6. 'parse' → logprob: -8.76131820678711
    7. 'char' → logprob: -9.26131820678711
    8. 'occup' → logprob: -9.63631820678711
    9. '_points' → logprob: -9.76131820678711
    10. 'init' → logprob: -10.01131820678711

Token 533: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0002668192028068006
    2. '_' → logprob: -8.375267028808594
    3. '=' → logprob: -11.500267028808594
    4. ' =' → logprob: -12.125267028808594
    5. '=_' → logprob: -12.500267028808594
    6. '_p' → logprob: -12.750267028808594
    7. ' _' → logprob: -12.875267028808594
    8. 's' → logprob: -13.375267028808594
    9. '_pts' → logprob: -13.375267028808594
    10. '_positions' → logprob: -13.500267028808594

Token 534: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141811668872833
    2. ' =' → logprob: -1.701418161392212
    3. ':' → logprob: -12.451417922973633
    4. '=set' → logprob: -14.701417922973633
    5. '   ' → logprob: -15.201417922973633
    6. ' ' → logprob: -16.076417922973633
    7. '.' → logprob: -16.576417922973633
    8. '=self' → logprob: -17.201417922973633
    9. ',' → logprob: -17.951417922973633
    10. ')' → logprob: -18.701417922973633

Token 535: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.014173625037074089
    2. ' occupied' → logprob: -4.26417350769043
    3. 'occup' → logprob: -12.01417350769043
    4. 'set' → logprob: -13.76417350769043
    5. '   ' → logprob: -14.01417350769043
    6. ' set' → logprob: -14.63917350769043
    7. 'Occupied' → logprob: -14.76417350769043
    8. ' ' → logprob: -15.13917350769043
    9. '       ' → logprob: -15.38917350769043
    10. ' ' → logprob: -15.38917350769043

Token 536: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00016790216614026576
    2. 'Points' → logprob: -9.000167846679688
    3. '_' → logprob: -11.125167846679688
    4. '_set' → logprob: -11.500167846679688
    5. 'points' → logprob: -11.750167846679688
    6. '   ' → logprob: -12.875167846679688
    7. '       ' → logprob: -13.000167846679688
    8. '_POINTS' → logprob: -13.500167846679688
    9. '```' → logprob: -14.250167846679688
    10. '{' → logprob: -14.250167846679688

Token 537: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5029511451721191
    2. '       ' → logprob: -1.6279511451721191
    3. '<|end|>' → logprob: -1.6279511451721191
    4. '   ' → logprob: -6.627951145172119
    5. '<|end|>' → logprob: -7.377951145172119
    6. ',' → logprob: -8.752950668334961
    7. '    
' → logprob: -8.877950668334961
    8. '        
' → logprob: -8.877950668334961
    9. ',
' → logprob: -10.377950668334961
    10. 'self' → logprob: -10.502950668334961

Token 538: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4872891306877136
    2. '<|end|>' → logprob: -1.1122891902923584
    3. '       ' → logprob: -3.1122891902923584
    4. '   ' → logprob: -4.737288951873779
    5. '    
' → logprob: -6.237288951873779
    6. ',' → logprob: -7.987288951873779
    7. '<|end|>' → logprob: -7.987288951873779
    8. ' ' → logprob: -8.237289428710938
    9. '        
' → logprob: -8.612289428710938
    10. '  
' → logprob: -8.862289428710938

Token 539: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07216274738311768
    2. '       ' → logprob: -2.697162628173828
    3. ' self' → logprob: -6.322162628173828
    4. 'def' → logprob: -8.697162628173828
    5. '   ' → logprob: -9.072162628173828
    6. 'super' → logprob: -10.072162628173828
    7. 'width' → logprob: -10.947162628173828
    8. '#' → logprob: -11.072162628173828
    9. 'x' → logprob: -11.197162628173828
    10. 'for' → logprob: -11.322162628173828

Token 540: '.bounding' (ID: 194144)
  Prédit: '.height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.7233395576477051
    2. '.width' → logprob: -0.8483395576477051
    3. '.size' → logprob: -2.723339557647705
    4. '.bounding' → logprob: -5.223339557647705
    5. '._' → logprob: -5.598339557647705
    6. '.bound' → logprob: -6.223339557647705
    7. '.bounds' → logprob: -6.348339557647705
    8. '.char' → logprob: -6.473339557647705
    9. '.points' → logprob: -6.723339557647705
    10. '.' → logprob: -7.223339557647705

Token 541: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -0.0017143317963927984
    2. '_rect' → logprob: -7.00171422958374
    3. 'box' → logprob: -7.50171422958374
    4. '_rectangle' → logprob: -8.751714706420898
    5. 'Box' → logprob: -10.126714706420898
    6. ' box' → logprob: -10.501714706420898
    7. 'rect' → logprob: -12.126714706420898
    8. '=' → logprob: -12.251714706420898
    9. '   ' → logprob: -13.251714706420898
    10. '_' → logprob: -13.376714706420898

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3137694001197815
    2. '=' → logprob: -1.3137693405151367
    3. ':' → logprob: -8.563769340515137
    4. '_min' → logprob: -8.688769340515137
    5. '   ' → logprob: -9.813769340515137
    6. '=None' → logprob: -10.688769340515137
    7. '_x' → logprob: -10.813769340515137
    8. ' ' → logprob: -11.438769340515137
    9. '_' → logprob: -12.188769340515137
    10. '_width' → logprob: -12.438769340515137

Token 543: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005518803838640451
    2. '(self' → logprob: -5.505518913269043
    3. ' self' → logprob: -7.380518913269043
    4. '(
' → logprob: -7.755518913269043
    5. '(' → logprob: -8.130518913269043
    6. '(Point' → logprob: -10.630518913269043
    7. 'None' → logprob: -10.755518913269043
    8. 'Point' → logprob: -11.005518913269043
    9. '   ' → logprob: -12.005518913269043
    10. '{
' → logprob: -12.130518913269043

Token 544: '.calc' (ID: 83158)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.8990799188613892
    2. '.compute' → logprob: -0.8990799188613892
    3. '.calculate' → logprob: -1.8990799188613892
    4. '.get' → logprob: -3.3990797996520996
    5. '.bounding' → logprob: -6.2740797996521
    6. '.calc' → logprob: -7.8990797996521
    7. '.find' → logprob: -8.399080276489258
    8. 'compute' → logprob: -8.524080276489258
    9. 'calculate' → logprob: -8.899080276489258
    10. 'get' → logprob: -10.024080276489258

Token 545: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00776622025296092
    2. '_bbox' → logprob: -5.132766246795654
    3. '_bounds' → logprob: -6.507766246795654
    4. '_bound' → logprob: -9.132765769958496
    5. 'Bounding' → logprob: -9.132765769958496
    6. '_' → logprob: -10.382765769958496
    7. '_box' → logprob: -10.507765769958496
    8. '_rectangle' → logprob: -11.132765769958496
    9. '_bb' → logprob: -11.382765769958496
    10. '_rect' → logprob: -11.757765769958496

Token 546: 'ounding' (ID: 28617)
  Prédit: 'ounding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounding' → logprob: -0.04220227897167206
    2. 'ox' → logprob: -3.2922022342681885
    3. 'box' → logprob: -5.792202472686768
    4. 'ound' → logprob: -7.042202472686768
    5. 'ounds' → logprob: -8.41720199584961
    6. 'b' → logprob: -13.16720199584961
    7. 'bounding' → logprob: -13.29220199584961
    8. '_box' → logprob: -13.41720199584961
    9. 'Box' → logprob: -15.91720199584961
    10. 'bbox' → logprob: -16.29220199584961

Token 547: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -0.00031162876985035837
    2. '_rect' → logprob: -8.500311851501465
    3. 'box' → logprob: -9.875311851501465
    4. '_rectangle' → logprob: -10.125311851501465
    5. 'Box' → logprob: -11.750311851501465
    6. '_bbox' → logprob: -12.875311851501465
    7. 'rect' → logprob: -13.500311851501465
    8. ' box' → logprob: -14.125311851501465
    9. '
' → logprob: -14.250311851501465
    10. '_' → logprob: -14.625311851501465

Token 548: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005109758349135518
    2. '()
' → logprob: -7.625511169433594
    3. '()

' → logprob: -11.750511169433594
    4. '(self' → logprob: -12.375511169433594
    5. '(' → logprob: -12.500511169433594
    6. '()`' → logprob: -13.125511169433594
    7. '<|end|>' → logprob: -13.375511169433594
    8. ' ()' → logprob: -14.125511169433594
    9. '()\' → logprob: -14.500511169433594
    10. '();' → logprob: -14.750511169433594

Token 549: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04289252683520317
    2. '   ' → logprob: -3.6678924560546875
    3. 'def' → logprob: -5.0428924560546875
    4. '

' → logprob: -5.5428924560546875
    5. '<|end|>' → logprob: -5.9178924560546875
    6. '    
' → logprob: -6.4178924560546875
    7. '  
' → logprob: -7.2928924560546875
    8. ' ' → logprob: -8.292892456054688
    9. '```' → logprob: -8.542892456054688
    10. ' def' → logprob: -8.667892456054688

Token 550: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21256980299949646
    2. 'def' (adapté à ' def') → logprob: -1.8375698328018188
    3. ' def' → logprob: -4.212569713592529
    4. '   ' → logprob: -4.337569713592529
    5. '

' → logprob: -6.087569713592529
    6. '<|end|>' → logprob: -7.212569713592529
    7. '    
' → logprob: -7.962569713592529
    8. '  
' → logprob: -8.337570190429688
    9. '	def' → logprob: -8.587570190429688
    10. ' ' → logprob: -8.587570190429688

Token 551: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.07128685712814331
    2. ' calc' → logprob: -2.821286916732788
    3. '_calc' → logprob: -4.821286678314209
    4. 'def' → logprob: -6.821286678314209
    5. 'calculate' → logprob: -10.696287155151367
    6. '.calc' → logprob: -10.696287155151367
    7. ' def' → logprob: -10.696287155151367
    8. '(calc' → logprob: -10.821287155151367
    9. 'cal' → logprob: -11.446287155151367
    10. '_' → logprob: -11.446287155151367

Token 552: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.68153518543113e-05
    2. '_' → logprob: -9.875057220458984
    3. '_bounds' → logprob: -13.000057220458984
    4. '_bbox' → logprob: -13.875057220458984
    5. '_bound' → logprob: -14.250057220458984
    6. 'bounding' → logprob: -14.375057220458984
    7. 'Bounding' → logprob: -14.875057220458984
    8. '_binding' → logprob: -15.375057220458984
    9. '_a' → logprob: -15.875057220458984
    10. ' _' → logprob: -16.750057220458984

Token 553: 'ounding' (ID: 28617)
  Prédit: 'ounding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounding' → logprob: -2.057743949990254e-05
    2. 'bounding' → logprob: -11.000020980834961
    3. 'ox' → logprob: -13.000020980834961
    4. 'ound' → logprob: -13.750020980834961
    5. 'ounds' → logprob: -14.875020980834961
    6. 'box' → logprob: -17.12502098083496
    7. 'b' → logprob: -17.25002098083496
    8. 'unding' → logprob: -17.75002098083496
    9. '_' → logprob: -17.87502098083496
    10. 'o' → logprob: -18.00002098083496

Token 554: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.625000953674316
    3. '_bbox' → logprob: -15.375000953674316
    4. '_BOX' → logprob: -16.25
    5. '_Box' → logprob: -17.0
    6. '_point' → logprob: -17.25
    7. 'box' → logprob: -18.125
    8. '_block' → logprob: -18.375
    9. '_boxes' → logprob: -18.75
    10. 'Box' → logprob: -19.625

Token 555: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.12500286102295
    3. ' (' → logprob: -14.87500286102295
    4. ' =' → logprob: -17.000001907348633
    5. '=self' → logprob: -17.250001907348633
    6. '(s' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. 'self' → logprob: -17.750001907348633
    9. ' self' → logprob: -18.375001907348633
    10. ' ' → logprob: -19.250001907348633

Token 556: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006082972511649132
    2. ')' → logprob: -5.881083011627197
    3. '):' → logprob: -6.131083011627197
    4. '):
' → logprob: -7.506083011627197
    5. 'self' → logprob: -7.756083011627197
    6. ')(' → logprob: -9.881082534790039
    7. ' (' → logprob: -11.131082534790039
    8. ' self' → logprob: -11.381082534790039
    9. ' ' → logprob: -11.381082534790039
    10. '   ' → logprob: -11.631082534790039

Token 557: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00483024213463068
    2. ':' → logprob: -6.129830360412598
    3. 'self' → logprob: -7.004830360412598
    4. '       ' → logprob: -7.004830360412598
    5. '   ' → logprob: -8.004830360412598
    6. ':
' → logprob: -8.629830360412598
    7. '(' → logprob: -9.004830360412598
    8. ' ->' → logprob: -9.754830360412598
    9. '->' → logprob: -10.129830360412598
    10. ' self' → logprob: -10.254830360412598

Token 558: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.014226970262825489
    2. ' Tuple' → logprob: -4.264226913452148
    3. 'Optional' → logprob: -9.889226913452148
    4. 'List' → logprob: -12.389226913452148
    5. 'tuple' → logprob: -13.014226913452148
    6. 'Dict' → logprob: -13.014226913452148
    7. '   ' → logprob: -13.389226913452148
    8. ' Optional' → logprob: -14.389226913452148
    9. ' ' → logprob: -14.889226913452148
    10. '[' → logprob: -15.139226913452148

Token 559: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.015305552864447e-05
    2. '[' → logprob: -9.750060081481934
    3. 'int' → logprob: -13.875060081481934
    4. '(int' → logprob: -14.250060081481934
    5. '[Int' → logprob: -16.25006103515625
    6. '[List' → logprob: -17.50006103515625
    7. '[
' → logprob: -18.12506103515625
    8. '   ' → logprob: -18.62506103515625
    9. '(Point' → logprob: -19.25006103515625
    10. ':int' → logprob: -20.50006103515625

Token 560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00593898631632328
    2. ',int' → logprob: -5.13093900680542
    3. ' ,' → logprob: -12.130938529968262
    4. '[int' → logprob: -13.005938529968262
    5. 'int' → logprob: -13.380938529968262
    6. ',
' → logprob: -14.255938529968262
    7. ',float' → logprob: -16.130939483642578
    8. ',Integer' → logprob: -16.380939483642578
    9. ']int' → logprob: -16.630939483642578
    10. ',bool' → logprob: -16.755939483642578

Token 561: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.723352049040841e-06
    2. ' int' → logprob: -12.375004768371582
    3. '[int' → logprob: -15.125004768371582
    4. '   ' → logprob: -15.875004768371582
    5. '...' → logprob: -17.500003814697266
    6. ']int' → logprob: -17.750003814697266
    7. ',int' → logprob: -18.250003814697266
    8. '(int' → logprob: -18.875003814697266
    9. '<int' → logprob: -18.875003814697266
    10. '	int' → logprob: -19.000003814697266

Token 562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008674138225615025
    2. ',int' → logprob: -4.758674144744873
    3. 'int' → logprob: -10.133673667907715
    4. ' ,' → logprob: -10.883673667907715
    5. '[int' → logprob: -14.383673667907715
    6. '   ' → logprob: -15.008673667907715
    7. ']int' → logprob: -16.38367462158203
    8. ',
' → logprob: -16.50867462158203
    9. ',List' → logprob: -17.25867462158203
    10. ' int' → logprob: -17.50867462158203

Token 563: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0013449963880702853
    2. ' int' → logprob: -6.626345157623291
    3. '   ' → logprob: -11.001344680786133
    4. '[int' → logprob: -13.376344680786133
    5. '	int' → logprob: -15.251344680786133
    6. ',int' → logprob: -15.751344680786133
    7. ']int' → logprob: -15.876344680786133
    8. ':int' → logprob: -16.251344680786133
    9. '(int' → logprob: -16.626344680786133
    10. '    ' → logprob: -16.626344680786133

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.263011578586884e-05
    2. ',int' → logprob: -10.250042915344238
    3. ' ,' → logprob: -12.000042915344238
    4. 'int' → logprob: -14.375042915344238
    5. '<|end|>' → logprob: -15.375042915344238
    6. ',
' → logprob: -15.625042915344238
    7. '‌,' → logprob: -16.250041961669922
    8. '<|end|>' → logprob: -17.125041961669922
    9. '[int' → logprob: -17.250041961669922
    10. '   ' → logprob: -18.000041961669922

Token 565: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.588793960167095e-05
    2. ' int' → logprob: -9.500076293945312
    3. '[int' → logprob: -14.500076293945312
    4. '   ' → logprob: -15.125076293945312
    5. ',int' → logprob: -15.875076293945312
    6. '<int' → logprob: -17.500076293945312
    7. '	int' → logprob: -17.500076293945312
    8. ']int' → logprob: -17.750076293945312
    9. '(int' → logprob: -18.250076293945312
    10. '=int' → logprob: -19.000076293945312

Token 566: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5940723419189453
    2. ',' → logprob: -1.4690723419189453
    3. '):
' → logprob: -2.0940723419189453
    4. ':' → logprob: -2.4690723419189453
    5. ']:' → logprob: -5.469072341918945
    6. '   ' → logprob: -5.969072341918945
    7. ']:
' → logprob: -7.344072341918945
    8. ':
' → logprob: -7.594072341918945
    9. '<|end|>' → logprob: -7.594072341918945
    10. '       ' → logprob: -7.844072341918945

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002600245934445411
    2. 'x' → logprob: -8.625260353088379
    3. ' x' → logprob: -10.375260353088379
    4. ',' → logprob: -11.250260353088379
    5. '(x' → logprob: -11.250260353088379
    6. 'xmin' → logprob: -11.500260353088379
    7. ':' → logprob: -12.500260353088379
    8. '(' → logprob: -12.750260353088379
    9. '   ' → logprob: -13.250260353088379
    10. '      ' → logprob: -14.375260353088379

Token 568: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10093023627996445
    2. 'min' → logprob: -2.7259302139282227
    3. 'x' → logprob: -4.600930213928223
    4. 'if' → logprob: -5.100930213928223
    5. ' min' → logprob: -5.350930213928223
    6. 'xs' → logprob: -5.725930213928223
    7. 'xmin' → logprob: -5.725930213928223
    8. ' if' → logprob: -6.350930213928223
    9. '   ' → logprob: -7.475930213928223
    10. ' x' → logprob: -8.100930213928223

Token 569: ' returns' (ID: 7377)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12695099413394928
    2. 'xs' → logprob: -2.501950979232788
    3. 'x' → logprob: -3.751950979232788
    4. '       ' → logprob: -5.501951217651367
    5. ' min' → logprob: -5.501951217651367
    6. 'xmin' → logprob: -5.501951217651367
    7. 'if' → logprob: -6.876951217651367
    8. ' xs' → logprob: -8.126951217651367
    9. '   ' → logprob: -8.626951217651367
    10. ' if' → logprob: -10.501951217651367

Token 570: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.16798880696296692
    2. 'min' → logprob: -1.9179887771606445
    3. ' min' → logprob: -5.1679887771606445
    4. ' (' → logprob: -6.4179887771606445
    5. '(
' → logprob: -8.542988777160645
    6. '(' → logprob: -9.292988777160645
    7. '   ' → logprob: -10.042988777160645
    8. '(x' → logprob: -10.167988777160645
    9. 'xmin' → logprob: -10.667988777160645
    10. '_min' → logprob: -12.292988777160645

Token 571: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0010418595047667623
    2. '(min' → logprob: -7.001041889190674
    3. 'xmin' → logprob: -9.501041412353516
    4. ' min' → logprob: -10.001041412353516
    5. '   ' → logprob: -12.126041412353516
    6. 'x' → logprob: -13.126041412353516
    7. 'self' → logprob: -14.126041412353516
    8. '	min' → logprob: -14.501041412353516
    9. '(x' → logprob: -15.126041412353516
    10. '_min' → logprob: -15.126041412353516

Token 572: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.005243479739874601
    2. 'x' → logprob: -5.255243301391602
    3. '(x' → logprob: -12.755243301391602
    4. 'X' → logprob: -12.880243301391602
    5. '(self' → logprob: -13.380243301391602
    6. '(' → logprob: -14.005243301391602
    7. ' x' → logprob: -14.380243301391602
    8. '_' → logprob: -15.130243301391602
    9. ',' → logprob: -15.255243301391602
    10. 'self' → logprob: -15.505243301391602

Token 573: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7491250875755213e-05
    2. ' ,' → logprob: -10.625027656555176
    3. ',
' → logprob: -13.125027656555176
    4. '<|end|>' → logprob: -14.000027656555176
    5. '<|end|>' → logprob: -16.50002670288086
    6. '‌,' → logprob: -16.75002670288086
    7. ',int' → logprob: -16.87502670288086
    8. ',min' → logprob: -17.00002670288086
    9. ',next' → logprob: -18.50002670288086
    10. ',None' → logprob: -18.62502670288086

Token 574: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08736108988523483
    2. ' min' → logprob: -2.5873610973358154
    3. 'max' → logprob: -4.837360858917236
    4. ' max' → logprob: -7.587360858917236
    5. '_min' → logprob: -14.212361335754395
    6. '	min' → logprob: -17.212360382080078
    7. ',min' → logprob: -17.587360382080078
    8. '(min' → logprob: -17.962360382080078
    9. '_max' → logprob: -18.337360382080078
    10. ',' → logprob: -19.087360382080078

Token 575: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.07889991998672485
    2. '_y' → logprob: -2.57889986038208
    3. 'x' → logprob: -11.828900337219238
    4. '_' → logprob: -12.953900337219238
    5. 'y' → logprob: -15.578900337219238
    6. ' _' → logprob: -15.578900337219238
    7. ')_' → logprob: -17.078899383544922
    8. '<|end|>' → logprob: -17.078899383544922
    9. '_,' → logprob: -17.328899383544922
    10. ')' → logprob: -17.578899383544922

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.129266067640856e-05
    2. ' ,' → logprob: -11.000020980834961
    3. ',
' → logprob: -12.375020980834961
    4. ',min' → logprob: -15.250020980834961
    5. '),' → logprob: -17.75002098083496
    6. ')' → logprob: -18.25002098083496
    7. ',

' → logprob: -18.37502098083496
    8. 'min' → logprob: -18.50002098083496
    9. '‌,' → logprob: -18.62502098083496
    10. ',max' → logprob: -19.00002098083496

Token 577: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06196768581867218
    2. ' max' → logprob: -2.811967611312866
    3. 'min' → logprob: -17.936967849731445
    4. '	max' → logprob: -19.311967849731445
    5. '_max' → logprob: -19.561967849731445
    6. '   ' → logprob: -20.061967849731445
    7. '(max' → logprob: -20.686967849731445
    8. ' min' → logprob: -20.936967849731445
    9. ',max' → logprob: -20.936967849731445
    10. ' ' → logprob: -21.436967849731445

Token 578: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.2664456789934775e-06
    2. 'x' → logprob: -14.000000953674316
    3. '_' → logprob: -15.875000953674316
    4. ' _' → logprob: -16.250001907348633
    5. '_,' → logprob: -16.625001907348633
    6. ')_' → logprob: -17.500001907348633
    7. ',' → logprob: -17.875001907348633
    8. '_
' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '
' → logprob: -18.875001907348633

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. ' ,' → logprob: -10.750031471252441
    3. ',min' → logprob: -11.875031471252441
    4. ',
' → logprob: -12.875031471252441
    5. 'min' → logprob: -14.375031471252441
    6. ',max' → logprob: -16.125032424926758
    7. '
' → logprob: -17.125032424926758
    8. '```' → logprob: -17.625032424926758
    9. ' min' → logprob: -17.750032424926758
    10. '_min' → logprob: -18.125032424926758

Token 580: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04892502352595329
    2. ' max' → logprob: -3.0489249229431152
    3. 'min' → logprob: -8.048925399780273
    4. ' min' → logprob: -10.923925399780273
    5. '_max' → logprob: -16.173925399780273
    6. ' ' → logprob: -17.923925399780273
    7. '	max' → logprob: -18.673925399780273
    8. ' maximum' → logprob: -19.548925399780273
    9. 'maximum' → logprob: -19.673925399780273
    10. ',max' → logprob: -19.798925399780273

Token 581: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00011224505578866228
    2. 'x' → logprob: -9.500112533569336
    3. '_y' → logprob: -10.250112533569336
    4. ')' → logprob: -14.125112533569336
    5. '<|end|>' → logprob: -15.000112533569336
    6. '   ' → logprob: -15.625112533569336
    7. ',' → logprob: -15.750112533569336
    8. '_xlim' → logprob: -16.250112533569336
    9. '	x' → logprob: -16.375112533569336
    10. '_' → logprob: -16.375112533569336

Token 582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07841386646032333
    2. ')
' → logprob: -2.703413963317871
    3. '):' → logprob: -5.578413963317871
    4. '):
' → logprob: -6.203413963317871
    5. '       ' → logprob: -6.578413963317871
    6. ',' → logprob: -7.203413963317871
    7. '   ' → logprob: -7.828413963317871
    8. ' )' → logprob: -10.078413963317871
    9. ')
' → logprob: -10.828413963317871
    10. ' )
' → logprob: -11.328413963317871

Token 583: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007055217283777893
    2. ':' → logprob: -7.625705718994141
    3. ',' → logprob: -8.75070571899414
    4. '
' → logprob: -10.62570571899414
    5. '   ' → logprob: -11.75070571899414
    6. ':
' → logprob: -11.87570571899414
    7. '```' → logprob: -12.87570571899414
    8. 'x' → logprob: -13.00070571899414
    9. ' =' → logprob: -13.12570571899414
    10. '=' → logprob: -13.25070571899414

Token 584: ' xs' (ID: 26642)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8835092782974243
    2. '       ' → logprob: -1.0085092782974243
    3. 'xs' (adapté à ' xs') → logprob: -1.7585092782974243
    4. 'x' → logprob: -3.5085091590881348
    5. 'if' → logprob: -5.258509159088135
    6. ' min' → logprob: -5.258509159088135
    7. 'xmin' → logprob: -5.258509159088135
    8. ' xs' → logprob: -5.758509159088135
    9. ' if' → logprob: -7.883509159088135
    10. '   ' → logprob: -8.633509635925293

Token 585: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931533813476562
    2. ' =' → logprob: -0.6931533813476562
    3. ',' → logprob: -12.318153381347656
    4. '=min' → logprob: -14.943153381347656
    5. 's' → logprob: -15.068153381347656
    6. '   ' → logprob: -15.693153381347656
    7. ' =[' → logprob: -15.818153381347656
    8. ' ' → logprob: -15.943153381347656
    9. ' =
' → logprob: -16.318153381347656
    10. ')' → logprob: -16.568153381347656

Token 586: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.20058709383010864
    2. '[x' → logprob: -2.200587034225464
    3. '[min' → logprob: -2.950587034225464
    4. '[' → logprob: -4.450587272644043
    5. '[y' → logprob: -5.700587272644043
    6. ' [' → logprob: -6.700587272644043
    7. '[self' → logprob: -7.325587272644043
    8. '[list' → logprob: -7.450587272644043
    9. '[item' → logprob: -7.700587272644043
    10. '[i' → logprob: -8.075587272644043

Token 587: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00014048899174667895
    2. 'pt' → logprob: -9.000140190124512
    3. 'point' → logprob: -11.000140190124512
    4. ' p' → logprob: -14.875140190124512
    5. '(p' → logprob: -19.500141143798828
    6. 'pos' → logprob: -20.500141143798828
    7. '   ' → logprob: -20.625141143798828
    8. ' pt' → logprob: -21.625141143798828
    9. 'px' → logprob: -22.000141143798828
    10. 'Point' → logprob: -22.250141143798828

Token 588: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -6.988221684878226e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -14.250006675720215
    4. 'x' → logprob: -17.00000762939453
    5. 'for' → logprob: -18.00000762939453
    6. ').' → logprob: -18.87500762939453
    7. ' for' → logprob: -19.50000762939453
    8. '.
' → logprob: -19.75000762939453
    9. '].' → logprob: -20.50000762939453
    10. ' ' → logprob: -20.50000762939453

Token 589: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05488499253988266
    2. 'for' → logprob: -2.929884910583496
    3. ' ' → logprob: -14.054884910583496
    4. '   ' → logprob: -14.929884910583496
    5. '	for' → logprob: -15.179884910583496
    6. '       ' → logprob: -15.179884910583496
    7. ')' → logprob: -15.554884910583496
    8. ' p' → logprob: -15.679884910583496
    9. 'p' → logprob: -15.679884910583496
    10. ',' → logprob: -15.804884910583496

Token 590: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.600389838218689
    2. 'p' → logprob: -0.850389838218689
    3. ' self' → logprob: -3.9753899574279785
    4. ' p' → logprob: -5.2253899574279785
    5. ' ' → logprob: -14.10038948059082
    6. '_p' → logprob: -14.10038948059082
    7. '	self' → logprob: -14.47538948059082
    8. '(self' → logprob: -14.85038948059082
    9. 'point' → logprob: -15.85038948059082
    10. '

' → logprob: -15.97538948059082

Token 591: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004127080552279949
    2. 'in' → logprob: -5.879127025604248
    3. 'self' → logprob: -7.004127025604248
    4. ' self' → logprob: -7.879127025604248
    5. ' ' → logprob: -10.754127502441406
    6. ' p' → logprob: -11.629127502441406
    7. 'p' → logprob: -13.379127502441406
    8. '<|end|>' → logprob: -13.504127502441406
    9. 's' → logprob: -14.879127502441406
    10. '
' → logprob: -15.379127502441406

Token 592: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010329303331673145
    2. ' self' → logprob: -6.876032829284668
    3. '(self' → logprob: -17.001033782958984
    4. '[self' → logprob: -17.876033782958984
    5. '
' → logprob: -18.126033782958984
    6. '	self' → logprob: -18.501033782958984
    7. '   ' → logprob: -18.876033782958984
    8. ' ' → logprob: -19.001033782958984
    9. 'list' → logprob: -19.001033782958984
    10. '=self' → logprob: -19.251033782958984

Token 593: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.565353512763977
    2. 'occupied' → logprob: -0.940353512763977
    3. 'self' → logprob: -3.1903533935546875
    4. ' occupied' → logprob: -9.815353393554688
    5. '_' → logprob: -10.190353393554688
    6. ' self' → logprob: -10.690353393554688
    7. 'occup' → logprob: -11.565353393554688
    8. '.user' → logprob: -11.815353393554688
    9. 'user' → logprob: -12.065353393554688
    10. ' ' → logprob: -12.440353393554688

Token 594: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -5.455048449221067e-05
    2. 'self' → logprob: -9.875054359436035
    3. ' occupied' → logprob: -12.875054359436035
    4. 'occup' → logprob: -15.500054359436035
    5. '.' → logprob: -16.00005531311035
    6. 'owned' → logprob: -16.37505531311035
    7. 'occ' → logprob: -17.37505531311035
    8. '
' → logprob: -17.75005531311035
    9. ' ' → logprob: -18.12505531311035
    10. '_' → logprob: -18.25005531311035

Token 595: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.0280383548888494e-06
    2. 's' → logprob: -15.125000953674316
    3. 'points' → logprob: -15.250000953674316
    4. '_' → logprob: -16.250001907348633
    5. '_POINTS' → logprob: -16.500001907348633
    6. '```' → logprob: -16.750001907348633
    7. 'Points' → logprob: -17.000001907348633
    8. '_p' → logprob: -17.000001907348633
    9. 'self' → logprob: -17.000001907348633
    10. '_positions' → logprob: -18.125001907348633

Token 596: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.12787872552871704
    2. ']' → logprob: -2.1278786659240723
    3. ']
' → logprob: -7.502878665924072
    4. ' ]
' → logprob: -8.12787914276123
    5. '       ' → logprob: -9.75287914276123
    6. ' ]' → logprob: -10.62787914276123
    7. '   ' → logprob: -11.75287914276123
    8. ' if' → logprob: -12.12787914276123
    9. ']

' → logprob: -12.62787914276123
    10. 'if' → logprob: -13.00287914276123

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000880377076100558
    2. '<|end|>' → logprob: -8.500880241394043
    3. ',' → logprob: -8.875880241394043
    4. '
' → logprob: -9.000880241394043
    5. ' ymin' → logprob: -9.000880241394043
    6. 'y' → logprob: -9.500880241394043
    7. 'min' → logprob: -9.625880241394043
    8. ' ys' → logprob: -10.500880241394043
    9. ')' → logprob: -10.750880241394043
    10. '   ' → logprob: -11.375880241394043

Token 598: ' ys' (ID: 67301)
  Prédit: ' ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ys' → logprob: -0.048625290393829346
    2. 'ys' (adapté à ' ys') → logprob: -3.0486252307891846
    3. '   ' → logprob: -10.798624992370605
    4. '       ' → logprob: -11.048624992370605
    5. ' ' → logprob: -13.923624992370605
    6. '    ' → logprob: -15.673624992370605
    7. '  ' → logprob: -15.798624992370605
    8. '     ' → logprob: -16.548625946044922
    9. ' ' → logprob: -16.548625946044922
    10. 'Ys' → logprob: -16.548625946044922

Token 599: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055195607244968414
    2. '=' → logprob: -2.9301955699920654
    3. '<|end|>' → logprob: -8.805195808410645
    4. '=[' → logprob: -9.555195808410645
    5. ' for' → logprob: -10.430195808410645
    6. ' =[' → logprob: -10.680195808410645
    7. '[' → logprob: -11.805195808410645
    8. ':' → logprob: -11.930195808410645
    9. '<|end|>' → logprob: -12.305195808410645
    10. ' ' → logprob: -12.555195808410645

Token 600: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.003178782993927598
    2. ' [' → logprob: -5.753178596496582
    3. '[' → logprob: -13.753178596496582
    4. '[q' → logprob: -18.1281795501709
    5. '   ' → logprob: -18.2531795501709
    6. ' p' → logprob: -18.8781795501709
    7. 'p' → logprob: -19.3781795501709
    8. ' ' → logprob: -19.5031795501709
    9. '[y' → logprob: -19.8781795501709
    10. '[
' → logprob: -20.1281795501709

Token 601: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00010986098641296849
    2. ' p' → logprob: -9.125109672546387
    3. '(p' → logprob: -14.500109672546387
    4. '   ' → logprob: -16.000110626220703
    5. '[p' → logprob: -16.000110626220703
    6. '	p' → logprob: -17.500110626220703
    7. '
' → logprob: -17.500110626220703
    8. '<p' → logprob: -17.625110626220703
    9. '```' → logprob: -17.625110626220703
    10. '[' → logprob: -17.687610626220703

Token 602: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -1.1875571544806007e-05
    2. '.x' → logprob: -12.375011444091797
    3. '.' → logprob: -12.625011444091797
    4. 'y' → logprob: -12.625011444091797
    5. ' .' → logprob: -13.875011444091797
    6. 'for' → logprob: -17.250011444091797
    7. '```' → logprob: -17.625011444091797
    8. '	y' → logprob: -18.250011444091797
    9. '.py' → logprob: -18.375011444091797
    10. '
' → logprob: -18.625011444091797

Token 603: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0031777136027812958
    2. 'for' → logprob: -5.753177642822266
    3. '	for' → logprob: -18.878177642822266
    4. ' in' → logprob: -19.003177642822266
    5. '       ' → logprob: -19.503177642822266
    6. ' ' → logprob: -19.503177642822266
    7. '
' → logprob: -20.503177642822266
    8. '   ' → logprob: -20.753177642822266
    9. '```' → logprob: -21.378177642822266
    10. '         ' → logprob: -21.378177642822266

Token 604: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007669831975363195
    2. ' p' → logprob: -7.875766754150391
    3. 'self' → logprob: -7.875766754150391
    4. ' self' → logprob: -12.00076675415039
    5. '
' → logprob: -14.87576675415039
    6. '[p' → logprob: -16.37576675415039
    7. '   ' → logprob: -16.50076675415039
    8. ' ' → logprob: -16.50076675415039
    9. '(p' → logprob: -17.25076675415039
    10. '	p' → logprob: -17.37576675415039

Token 605: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007826411165297031
    2. 'in' → logprob: -5.132826328277588
    3. '.y' → logprob: -6.882826328277588
    4. 'y' → logprob: -7.257826328277588
    5. 'p' → logprob: -9.632826805114746
    6. ' ' → logprob: -10.257826805114746
    7. ' for' → logprob: -10.882826805114746
    8. ' y' → logprob: -11.007826805114746
    9. 'for' → logprob: -11.007826805114746
    10. ' p' → logprob: -11.757826805114746

Token 606: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009161015041172504
    2. ' self' → logprob: -7.000916004180908
    3. '[self' → logprob: -13.250916481018066
    4. '(self' → logprob: -14.000916481018066
    5. '	self' → logprob: -14.375916481018066
    6. '   ' → logprob: -15.500916481018066
    7. 'p' → logprob: -15.625916481018066
    8. '[' → logprob: -15.750916481018066
    9. '```' → logprob: -16.00091552734375
    10. '
' → logprob: -16.12591552734375

Token 607: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14392170310020447
    2. '.y' → logprob: -2.0189216136932373
    3. 'occupied' → logprob: -6.893921852111816
    4. '.x' → logprob: -8.643921852111816
    5. 'y' → logprob: -10.393921852111816
    6. 'Occupied' → logprob: -12.143921852111816
    7. ' occupied' → logprob: -12.393921852111816
    8. 's' → logprob: -12.518921852111816
    9. ' .' → logprob: -13.518921852111816
    10. '.points' → logprob: -13.768921852111816

Token 608: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.47425368428230286
    2. 'self' → logprob: -0.9742536544799805
    3. ' self' → logprob: -9.59925365447998
    4. '_points' → logprob: -10.72425365447998
    5. ' occupied' → logprob: -10.84925365447998
    6. '_' → logprob: -11.47425365447998
    7. '(self' → logprob: -11.97425365447998
    8. 'points' → logprob: -12.22425365447998
    9. '[self' → logprob: -12.34925365447998
    10. 'occup' → logprob: -12.47425365447998

Token 609: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.856408536899835e-05
    2. 'Points' → logprob: -11.375028610229492
    3. 'points' → logprob: -12.375028610229492
    4. 's' → logprob: -12.875028610229492
    5. '_' → logprob: -13.625028610229492
    6. 'self' → logprob: -13.750028610229492
    7. ']' → logprob: -13.875028610229492
    8. ')' → logprob: -14.000028610229492
    9. '[' → logprob: -14.125028610229492
    10. '       ' → logprob: -14.250028610229492

Token 610: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.28257614374160767
    2. ']' → logprob: -1.407576084136963
    3. '       ' → logprob: -6.907576084136963
    4. ']
' → logprob: -7.907576084136963
    5. ' ]
' → logprob: -11.032576560974121
    6. ']

' → logprob: -11.282576560974121
    7. ' ]' → logprob: -11.657576560974121
    8. ')' → logprob: -12.282576560974121
    9. ')
' → logprob: -12.532576560974121
    10. '   ' → logprob: -12.782576560974121

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01318870484828949
    2. 'min' → logprob: -4.63818883895874
    3. ' min' → logprob: -6.88818883895874
    4. 'return' → logprob: -7.13818883895874
    5. '
' → logprob: -7.76318883895874
    6. '(min' → logprob: -8.263188362121582
    7. '<|end|>' → logprob: -8.513188362121582
    8. '[min' → logprob: -8.638188362121582
    9. ' return' → logprob: -8.763188362121582
    10. '_min' → logprob: -9.263188362121582

Token 612: ' return' (ID: 622)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.8666311502456665
    2. 'min' → logprob: -0.9916311502456665
    3. '       ' → logprob: -2.366631031036377
    4. ' return' → logprob: -2.741631031036377
    5. 'return' (adapté à ' return') → logprob: -2.991631031036377
    6. '	min' → logprob: -9.991631507873535
    7. '_min' → logprob: -9.991631507873535
    8. '
' → logprob: -10.616631507873535
    9. '   ' → logprob: -11.241631507873535
    10. ' if' → logprob: -11.616631507873535

Token 613: ' min' (ID: 1349)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.018003955483436584
    2. ' (' → logprob: -4.268003940582275
    3. ' min' → logprob: -5.768003940582275
    4. 'min' → logprob: -7.268003940582275
    5. '(
' → logprob: -12.393004417419434
    6. '(' → logprob: -12.393004417419434
    7. '[min' → logprob: -15.018004417419434
    8. '(max' → logprob: -15.268004417419434
    9. '   ' → logprob: -15.268004417419434
    10. ' (
' → logprob: -15.393004417419434

Token 614: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -6.034592388459714e-06
    2. 'xs' → logprob: -12.250005722045898
    3. '(' → logprob: -13.875005722045898
    4. '_x' → logprob: -15.750005722045898
    5. ' (' → logprob: -16.7500057220459
    6. ' xs' → logprob: -17.2500057220459
    7. '(x' → logprob: -18.7500057220459
    8. '(
' → logprob: -19.3750057220459
    9. '(min' → logprob: -19.5000057220459
    10. '(s' → logprob: -19.5000057220459

Token 615: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010730616049841046
    2. '),' → logprob: -6.876072883605957
    3. ' ,' → logprob: -10.501072883605957
    4. ',min' → logprob: -11.876072883605957
    5. '(),' → logprob: -12.751072883605957
    6. ',),' → logprob: -13.501072883605957
    7. ',
' → logprob: -14.751072883605957
    8. ')' → logprob: -15.001072883605957
    9. ' ),' → logprob: -15.251072883605957
    10. '},' → logprob: -16.251073837280273

Token 616: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06196768581867218
    2. ' min' → logprob: -2.811967611312866
    3. '(min' → logprob: -17.186967849731445
    4. '	min' → logprob: -17.686967849731445
    5. '[min' → logprob: -20.186967849731445
    6. '   ' → logprob: -20.686967849731445
    7. '.min' → logprob: -20.936967849731445
    8. ' ' → logprob: -21.061967849731445
    9. '_min' → logprob: -21.186967849731445
    10. 'max' → logprob: -21.186967849731445

Token 617: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3438327843905427e-05
    2. 'ys' → logprob: -10.75002384185791
    3. '(xs' → logprob: -14.12502384185791
    4. ' ys' → logprob: -14.25002384185791
    5. ' (' → logprob: -14.62502384185791
    6. '(
' → logprob: -17.875022888183594
    7. '[' → logprob: -18.000022888183594
    8. '```' → logprob: -18.500022888183594
    9. '(y' → logprob: -18.750022888183594
    10. '{' → logprob: -18.750022888183594

Token 618: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -3.9292415749514475e-05
    2. '(' → logprob: -10.875039100646973
    3. ' ys' → logprob: -10.875039100646973
    4. '[' → logprob: -15.250039100646973
    5. 'xs' → logprob: -15.375039100646973
    6. 'yses' → logprob: -15.500039100646973
    7. ')' → logprob: -15.875039100646973
    8. '
' → logprob: -16.12504005432129
    9. 'ysi' → logprob: -16.75004005432129
    10. '   ' → logprob: -16.75004005432129

Token 619: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. ' ,' → logprob: -10.375032424926758
    3. ',
' → logprob: -15.000032424926758
    4. '),' → logprob: -15.250032424926758
    5. ',min' → logprob: -16.250032424926758
    6. ')' → logprob: -17.125032424926758
    7. '‌,' → logprob: -17.750032424926758
    8. ',max' → logprob: -17.750032424926758
    9. '(),' → logprob: -19.375032424926758
    10. ',

' → logprob: -19.375032424926758

Token 620: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1269282102584839
    2. ' max' → logprob: -2.1269283294677734
    3. '(max' → logprob: -16.126928329467773
    4. '	max' → logprob: -18.751928329467773
    5. '       ' → logprob: -19.751928329467773
    6. ' ' → logprob: -20.251928329467773
    7. '   ' → logprob: -20.251928329467773
    8. '_max' → logprob: -20.751928329467773
    9. ',max' → logprob: -20.751928329467773
    10. '[max' → logprob: -20.876928329467773

Token 621: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.750001907348633
    3. 'xs' → logprob: -14.125001907348633
    4. '-xs' → logprob: -17.250001907348633
    5. '```' → logprob: -18.000001907348633
    6. '_x' → logprob: -18.625001907348633
    7. ' xs' → logprob: -19.125001907348633
    8. '(
' → logprob: -19.750001907348633
    9. '   ' → logprob: -19.875001907348633
    10. ' (' → logprob: -20.000001907348633

Token 622: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.474480003118515
    2. '),' → logprob: -0.9744800329208374
    3. ',),' → logprob: -8.224479675292969
    4. ' ,' → logprob: -9.599479675292969
    5. ' ),' → logprob: -10.724479675292969
    6. '(),' → logprob: -11.349479675292969
    7. '(xs' → logprob: -11.349479675292969
    8. ')' → logprob: -11.974479675292969
    9. '()),' → logprob: -12.849479675292969
    10. ' ys' → logprob: -12.849479675292969

Token 623: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20141343772411346
    2. ' max' → logprob: -1.7014133930206299
    3. '(max' → logprob: -15.57641315460205
    4. '	max' → logprob: -17.701414108276367
    5. '_max' → logprob: -19.576414108276367
    6. ',max' → logprob: -20.076414108276367
    7. '   ' → logprob: -20.201414108276367
    8. ' ' → logprob: -20.451414108276367
    9. '[max' → logprob: -20.451414108276367
    10. 'Max' → logprob: -20.701414108276367

Token 624: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '(xs' → logprob: -15.75
    3. 'ys' → logprob: -17.125
    4. ' (' → logprob: -17.5
    5. ' ys' → logprob: -18.75
    6. '
' → logprob: -19.0
    7. '{' → logprob: -19.75
    8. '(
' → logprob: -20.125
    9. 'Ys' → logprob: -20.25
    10. '```' → logprob: -20.625

Token 625: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -3.7697225252486533e-06
    2. ' ys' → logprob: -12.625003814697266
    3. 'yses' → logprob: -15.875003814697266
    4. ')' → logprob: -16.375003814697266
    5. 'xs' → logprob: -16.875003814697266
    6. 'ysi' → logprob: -16.875003814697266
    7. '(' → logprob: -16.875003814697266
    8. '   ' → logprob: -17.625003814697266
    9. '
' → logprob: -18.250003814697266
    10. '[' → logprob: -18.750003814697266

Token 626: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006762383040040731
    2. '<|end|>' → logprob: -5.006762504577637
    3. ' )' → logprob: -11.131762504577637
    4. ')
' → logprob: -11.381762504577637
    5. '   ' → logprob: -11.506762504577637
    6. '<|end|>' → logprob: -12.506762504577637
    7. '}' → logprob: -13.006762504577637
    8. '       ' → logprob: -13.756762504577637
    9. ')return' → logprob: -14.256762504577637
    10. '
' → logprob: -14.506762504577637

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04199128970503807
    2. '<|end|>' → logprob: -3.4169912338256836
    3. '
' → logprob: -5.041991233825684
    4. '<|end|>' → logprob: -7.291991233825684
    5. '    
' → logprob: -7.541991233825684
    6. 'def' → logprob: -7.666991233825684
    7. '#' → logprob: -10.166991233825684
    8. '

' → logprob: -10.666991233825684
    9. '```' → logprob: -10.791991233825684
    10. '  
' → logprob: -11.041991233825684

Token 628: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.48722755908966064
    2. '
' → logprob: -1.2372275590896606
    3. '   ' → logprob: -2.612227439880371
    4. ' def' → logprob: -3.862227439880371
    5. '    
' → logprob: -7.362227439880371
    6. ' ' → logprob: -8.862227439880371
    7. '

' → logprob: -9.112227439880371
    8. ' 
' → logprob: -9.737227439880371
    9. '  
' → logprob: -9.987227439880371
    10. '<|end|>' → logprob: -10.487227439880371

Token 629: ' width' (ID: 4345)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07613848894834518
    2. 'def' → logprob: -2.826138496398926
    3. ' width' → logprob: -5.201138496398926
    4. ' pattern' → logprob: -5.326138496398926
    5. ' ' → logprob: -7.201138496398926
    6. 'pattern' → logprob: -7.576138496398926
    7. ' height' → logprob: -7.826138496398926
    8. ' size' → logprob: -8.076138496398926
    9. ' matches' → logprob: -8.576138496398926
    10. ' get' → logprob: -8.701138496398926

Token 630: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0022745581809431314
    2. '(' → logprob: -7.002274513244629
    3. ' (' → logprob: -7.127274513244629
    4. '   ' → logprob: -8.002274513244629
    5. '@property' → logprob: -9.627274513244629
    6. '()' → logprob: -9.752274513244629
    7. ' ' → logprob: -10.627274513244629
    8. 'property' → logprob: -11.127274513244629
    9. 'self' → logprob: -11.252274513244629
    10. ' =' → logprob: -11.377274513244629

Token 631: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30855923891067505
    2. '<|end|>' → logprob: -1.9335591793060303
    3. ')' → logprob: -2.4335591793060303
    4. ' =' → logprob: -4.308559417724609
    5. '()' → logprob: -5.058559417724609
    6. '<|end|>' → logprob: -5.433559417724609
    7. '   ' → logprob: -6.183559417724609
    8. ' ,' → logprob: -6.308559417724609
    9. ' ' → logprob: -7.058559417724609
    10. ':' → logprob: -7.183559417724609

Token 632: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8502381443977356
    2. ' =' → logprob: -1.2252380847930908
    3. ',' → logprob: -2.100238084793091
    4. '=' → logprob: -2.100238084793091
    5. '   ' → logprob: -4.47523832321167
    6. '()' → logprob: -4.85023832321167
    7. '=self' → logprob: -5.47523832321167
    8. ' ' → logprob: -6.10023832321167
    9. ':' → logprob: -6.10023832321167
    10. 'self' → logprob: -6.35023832321167

Token 633: ' int' (ID: 677)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5399882197380066
    2. '   ' → logprob: -1.7899882793426514
    3. ' return' → logprob: -2.1649882793426514
    4. 'int' → logprob: -2.2899882793426514
    5. '
' → logprob: -4.289988040924072
    6. '->' → logprob: -4.914988040924072
    7. '@property' → logprob: -6.164988040924072
    8. ' ->' → logprob: -6.414988040924072
    9. 'self' → logprob: -6.539988040924072
    10. ' ' → logprob: -6.664988040924072

Token 634: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045775022357702255
    2. '   ' → logprob: -3.5457749366760254
    3. '<|end|>' → logprob: -5.420774936676025
    4. '       ' → logprob: -6.045774936676025
    5. ':return' → logprob: -6.045774936676025
    6. ':
' → logprob: -6.170774936676025
    7. '+' → logprob: -7.045774936676025
    8. ',' → logprob: -7.670774936676025
    9. '=' → logprob: -7.670774936676025
    10. '):' → logprob: -7.920774936676025

Token 635: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33137986063957214
    2. 'return' → logprob: -1.8313798904418945
    3. ' return' → logprob: -2.4563798904418945
    4. '   ' → logprob: -3.3313798904418945
    5. ',' → logprob: -8.581379890441895
    6. '	return' → logprob: -9.581379890441895
    7. '
' → logprob: -10.206379890441895
    8. ':return' → logprob: -11.206379890441895
    9. ' ' → logprob: -11.331379890441895
    10. '	' → logprob: -11.581379890441895

Token 636: ' min' (ID: 1349)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2086598128080368
    2. '       ' → logprob: -1.7086597681045532
    3. ' return' → logprob: -5.083659648895264
    4. '   ' → logprob: -6.958659648895264
    5. '_,' → logprob: -9.708660125732422
    6. ',' → logprob: -12.583660125732422
    7. '	return' → logprob: -12.708660125732422
    8. '        
' → logprob: -13.708660125732422
    9. ' ' → logprob: -13.958660125732422
    10. '
' → logprob: -13.958660125732422

Token 637: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.016101941466331482
    2. 'x' → logprob: -4.141101837158203
    3. '_,' → logprob: -10.516101837158203
    4. '_' → logprob: -10.641101837158203
    5. ',' → logprob: -11.516101837158203
    6. 'X' → logprob: -13.016101837158203
    7. '```' → logprob: -13.641101837158203
    8. '(x' → logprob: -14.766101837158203
    9. '   ' → logprob: -15.016101837158203
    10. 'self' → logprob: -15.391101837158203

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007637646631337702
    2. ' ,' → logprob: -7.500763893127441
    3. ' =' → logprob: -9.500763893127441
    4. '=' → logprob: -10.250763893127441
    5. '_,' → logprob: -10.500763893127441
    6. '<|end|>' → logprob: -10.500763893127441
    7. ',
' → logprob: -11.375763893127441
    8. 'return' → logprob: -11.500763893127441
    9. ' ' → logprob: -11.625763893127441
    10. '   ' → logprob: -12.000763893127441

Token 639: ' _,' (ID: 18042)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5161072015762329
    2. '_,' → logprob: -1.016107201576233
    3. '_' → logprob: -3.6411070823669434
    4. ' min' → logprob: -4.516107082366943
    5. ' _,' → logprob: -5.766107082366943
    6. '_min' → logprob: -8.141107559204102
    7. 'max' → logprob: -8.516107559204102
    8. ',' → logprob: -9.391107559204102
    9. '    ' → logprob: -9.391107559204102
    10. ' ' → logprob: -9.766107559204102

Token 640: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008837570436298847
    2. '_,' → logprob: -4.758837699890137
    3. ' max' → logprob: -8.758837699890137
    4. '__,' → logprob: -10.883837699890137
    5. '_max' → logprob: -11.133837699890137
    6. ' _,' → logprob: -11.758837699890137
    7. ',max' → logprob: -11.883837699890137
    8. '   ' → logprob: -12.008837699890137
    9. '_' → logprob: -12.383837699890137
    10. ' ' → logprob: -13.508837699890137

Token 641: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.318681188422488e-05
    2. 'x' → logprob: -11.25001335144043
    3. '_' → logprob: -16.12501335144043
    4. ' _' → logprob: -16.75001335144043
    5. '```' → logprob: -18.75001335144043
    6. '   ' → logprob: -19.12501335144043
    7. ',' → logprob: -20.50001335144043
    8. '_y' → logprob: -20.62501335144043
    9. ' ' → logprob: -20.75001335144043
    10. '_
' → logprob: -20.75001335144043

Token 642: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4747250974178314
    2. ' =' → logprob: -0.9747251272201538
    3. ',' → logprob: -7.349725246429443
    4. ' ' → logprob: -12.349724769592285
    5. '   ' → logprob: -15.099724769592285
    6. ' ,' → logprob: -15.849724769592285
    7. '=_' → logprob: -16.0997257232666
    8. '  ' → logprob: -16.2247257232666
    9. ',_' → logprob: -16.7247257232666
    10. '=None' → logprob: -16.9747257232666

Token 643: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003264338243752718
    2. '_,' → logprob: -5.753264427185059
    3. ' _' → logprob: -10.628264427185059
    4. '_=' → logprob: -10.628264427185059
    5. '_min' → logprob: -11.128264427185059
    6. '__' → logprob: -11.253264427185059
    7. '_m' → logprob: -12.753264427185059
    8. '_max' → logprob: -12.878264427185059
    9. '_y' → logprob: -13.003264427185059
    10. ' _,' → logprob: -14.378264427185059

Token 644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023254211992025375
    2. ' =' → logprob: -3.773254156112671
    3. '   ' → logprob: -12.39825439453125
    4. 'return' → logprob: -13.02325439453125
    5. ' ' → logprob: -13.14825439453125
    6. '  ' → logprob: -16.14825439453125
    7. '       ' → logprob: -16.27325439453125
    8. ' return' → logprob: -16.52325439453125
    9. '    ' → logprob: -16.77325439453125
    10. ')' → logprob: -17.27325439453125

Token 645: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009152670972980559
    2. ' self' → logprob: -7.000915050506592
    3. '   ' → logprob: -12.62591552734375
    4. '       ' → logprob: -15.25091552734375
    5. '(self' → logprob: -16.00091552734375
    6. ' ' → logprob: -16.50091552734375
    7. '     ' → logprob: -17.12591552734375
    8. '  ' → logprob: -17.50091552734375
    9. '    ' → logprob: -18.00091552734375
    10. '=self' → logprob: -18.37591552734375

Token 646: '.bounding' (ID: 194144)
  Prédit: '.bounding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bounding' → logprob: -0.07891324907541275
    2. 'bounding' → logprob: -2.5789132118225098
    3. ' bounding' → logprob: -11.453913688659668
    4. 'Bounding' → logprob: -12.203913688659668
    5. 'calc' → logprob: -12.578913688659668
    6. '.' → logprob: -12.828913688659668
    7. '.calc' → logprob: -13.703913688659668
    8. '.binding' → logprob: -15.453913688659668
    9. '.bounds' → logprob: -16.07891273498535
    10. '.bound' → logprob: -16.20391273498535

Token 647: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -4.8351892473874614e-05
    2. '_' → logprob: -11.250048637390137
    3. 'Box' → logprob: -11.250048637390137
    4. '_x' → logprob: -11.625048637390137
    5. '_bbox' → logprob: -12.625048637390137
    6. '_BOX' → logprob: -13.000048637390137
    7. 'x' → logprob: -13.375048637390137
    8. ')' → logprob: -13.375048637390137
    9. '_b' → logprob: -13.500048637390137
    10. 'box' → logprob: -14.000048637390137

Token 648: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31740814447402954
    2. 'return' → logprob: -1.9424080848693848
    3. ' return' → logprob: -2.9424080848693848
    4. '       ' → logprob: -3.3174080848693848
    5. '   ' → logprob: -3.5674080848693848
    6. '	return' → logprob: -4.942408084869385
    7. '    
' → logprob: -6.942408084869385
    8. '
' → logprob: -7.692408084869385
    9. '  
' → logprob: -7.817408084869385
    10. ' 
' → logprob: -7.817408084869385

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07284481823444366
    2. '   ' → logprob: -2.9478447437286377
    3. ' return' → logprob: -4.822844982147217
    4. 'return' → logprob: -4.822844982147217
    5. '	return' → logprob: -6.572844982147217
    6. '
' → logprob: -9.197844505310059
    7. '<|end|>' → logprob: -9.697844505310059
    8. '	' → logprob: -10.697844505310059
    9. '        
' → logprob: -10.947844505310059
    10. '	   ' → logprob: -10.947844505310059

Token 650: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5134379863739014
    2. 'return' (adapté à ' return') → logprob: -1.0134379863739014
    3. ' return' → logprob: -3.2634379863739014
    4. '   ' → logprob: -8.26343822479248
    5. '	return' → logprob: -9.63843822479248
    6. '
' → logprob: -11.51343822479248
    7. '	' → logprob: -13.26343822479248
    8. '     ' → logprob: -13.63843822479248
    9. '    ' → logprob: -14.26343822479248
    10. '      ' → logprob: -14.38843822479248

Token 651: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3135088384151459
    2. ' max' → logprob: -1.3135088682174683
    3. '(max' → logprob: -8.313508987426758
    4. ' (' → logprob: -13.813508987426758
    5. '	max' → logprob: -14.688508987426758
    6. '   ' → logprob: -15.313508987426758
    7. ' ' → logprob: -16.188508987426758
    8. '[max' → logprob: -17.438508987426758
    9. '_max' → logprob: -17.938508987426758
    10. '=max' → logprob: -17.938508987426758

Token 652: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.796184723294573e-06
    2. 'x' → logprob: -12.250005722045898
    3. '(max' → logprob: -14.625005722045898
    4. '(x' → logprob: -14.875005722045898
    5. '(' → logprob: -16.8750057220459
    6. '(_' → logprob: -18.1250057220459
    7. '```' → logprob: -18.3750057220459
    8. '_' → logprob: -18.6250057220459
    9. '(min' → logprob: -19.3750057220459
    10. '(self' → logprob: -20.0000057220459

Token 653: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0004311460361350328
    2. '-' → logprob: -7.750431060791016
    3. '-min' → logprob: -15.000431060791016
    4. '+' → logprob: -17.375431060791016
    5. ' ' → logprob: -18.250431060791016
    6. ' +' → logprob: -18.625431060791016
    7. ' ' → logprob: -19.000431060791016
    8. ',' → logprob: -20.875431060791016
    9. ' -
' → logprob: -21.000431060791016
    10. ' −' → logprob: -21.000431060791016

Token 654: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001170225441455841
    2. ' min' → logprob: -6.7511701583862305
    3. '(min' → logprob: -17.501171112060547
    4. '	min' → logprob: -18.126171112060547
    5. ' ' → logprob: -18.876171112060547
    6. '_min' → logprob: -19.001171112060547
    7. '   ' → logprob: -19.376171112060547
    8. '[min' → logprob: -19.501171112060547
    9. 'm' → logprob: -20.501171112060547
    10. 'max' → logprob: -20.626171112060547

Token 655: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00012403888104017824
    2. 'x' → logprob: -9.000123977661133
    3. 'self' → logprob: -16.250123977661133
    4. '<|end|>' → logprob: -16.250123977661133
    5. '(x' → logprob: -16.625123977661133
    6. '-x' → logprob: -17.500123977661133
    7. '(self' → logprob: -17.750123977661133
    8. '(min' → logprob: -17.750123977661133
    9. '_' → logprob: -18.125123977661133
    10. 'xmin' → logprob: -18.375123977661133

Token 656: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269284337759018
    2. '+' → logprob: -2.1269283294677734
    3. ' +
' → logprob: -16.001928329467773
    4. ' plus' → logprob: -16.626928329467773
    5. '()+' → logprob: -16.626928329467773
    6. '+
' → logprob: -17.376928329467773
    7. ' ' → logprob: -17.501928329467773
    8. '<|end|>' → logprob: -17.626928329467773
    9. '   ' → logprob: -19.126928329467773
    10. '1' → logprob: -19.251928329467773

Token 657: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -16.87509536743164
    4. '   ' → logprob: -17.12509536743164
    5. '`' → logprob: -20.12509536743164
    6. '       ' → logprob: -20.50009536743164
    7. '``' → logprob: -21.37509536743164
    8. '  ' → logprob: -21.43759536743164
    9. 'def' → logprob: -21.62509536743164
    10. '
' → logprob: -21.68759536743164

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.8750057220459
    4. '```' → logprob: -18.7500057220459
    5. '`' → logprob: -21.2500057220459
    6. '
' → logprob: -21.3750057220459
    7. '       ' → logprob: -21.5625057220459
    8. 'def' → logprob: -21.6250057220459
    9. '  ' → logprob: -21.9375057220459
    10. 'int' → logprob: -22.3750057220459

Token 659: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 660: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 661: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009536493569612503
    2. '   ' → logprob: -4.759536266326904
    3. ' def' → logprob: -7.009536266326904
    4. '
' → logprob: -11.384536743164062
    5. '    
' → logprob: -12.634536743164062
    6. ' ' → logprob: -13.259536743164062
    7. '	def' → logprob: -14.134536743164062
    8. ')' → logprob: -14.509536743164062
    9. '  ' → logprob: -14.759536743164062
    10. '    ' → logprob: -16.259536743164062

Token 662: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.05488848686218262
    2. ' height' → logprob: -2.9298884868621826
    3. 'def' → logprob: -13.054888725280762
    4. 'width' → logprob: -13.179888725280762
    5. '_height' → logprob: -13.929888725280762
    6. '   ' → logprob: -14.179888725280762
    7. ' ' → logprob: -15.804888725280762
    8. ' def' → logprob: -16.054887771606445
    9. '.height' → logprob: -16.804887771606445
    10. '	height' → logprob: -16.804887771606445

Token 663: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006677598576061428
    2. '(' → logprob: -7.375667572021484
    3. 'self' → logprob: -10.250667572021484
    4. ' (' → logprob: -12.750667572021484
    5. '(
' → logprob: -14.125667572021484
    6. ' self' → logprob: -14.500667572021484
    7. 'def' → logprob: -14.500667572021484
    8. '   ' → logprob: -15.000667572021484
    9. '()' → logprob: -15.125667572021484
    10. ' ' → logprob: -15.125667572021484

Token 664: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016515571624040604
    2. ')' → logprob: -4.266515731811523
    3. 'self' → logprob: -6.516515731811523
    4. '(' → logprob: -7.266515731811523
    5. '   ' → logprob: -9.766515731811523
    6. ')(' → logprob: -10.016515731811523
    7. '()' → logprob: -10.891515731811523
    8. 'def' → logprob: -10.891515731811523
    9. ' (' → logprob: -11.391515731811523
    10. ' ' → logprob: -12.141515731811523

Token 665: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004293580132070929
    2. '(' → logprob: -7.875429153442383
    3. 'self' → logprob: -10.250429153442383
    4. 'def' → logprob: -11.750429153442383
    5. '   ' → logprob: -12.750429153442383
    6. ' (' → logprob: -14.000429153442383
    7. '()' → logprob: -14.125429153442383
    8. ' self' → logprob: -14.250429153442383
    9. '(
' → logprob: -14.375429153442383
    10. '	self' → logprob: -15.875429153442383

Token 666: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889694720506668
    2. ' int' → logprob: -2.578896999359131
    3. ' ' → logprob: -12.703896522521973
    4. '   ' → logprob: -13.328896522521973
    5. 'self' → logprob: -13.328896522521973
    6. '(int' → logprob: -14.828896522521973
    7. ' self' → logprob: -16.20389747619629
    8. '	int' → logprob: -16.45389747619629
    9. '  ' → logprob: -16.70389747619629
    10. 'Int' → logprob: -16.70389747619629

Token 667: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00022201328829396516
    2. '(' → logprob: -9.375222206115723
    3. 'self' → logprob: -9.375222206115723
    4. '   ' → logprob: -10.125222206115723
    5. ' self' → logprob: -12.000222206115723
    6. 'def' → logprob: -12.500222206115723
    7. ' (' → logprob: -13.750222206115723
    8. '       ' → logprob: -14.500222206115723
    9. ' ' → logprob: -15.000222206115723
    10. '	self' → logprob: -15.375222206115723

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01561842579394579
    2. ' self' → logprob: -5.015618324279785
    3. '   ' → logprob: -5.390618324279785
    4. 'self' → logprob: -5.515618324279785
    5. ' min' → logprob: -8.890618324279785
    6. '(self' → logprob: -9.265618324279785
    7. 'min' → logprob: -10.515618324279785
    8. ' ' → logprob: -11.765618324279785
    9. '(' → logprob: -12.515618324279785
    10. '      ' → logprob: -13.390618324279785

Token 669: ' _,' (ID: 18042)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7265781760215759
    2. 'self' → logprob: -0.8515781760215759
    3. ' self' → logprob: -3.6015782356262207
    4. 'max' → logprob: -3.9765782356262207
    5. '   ' → logprob: -4.101578235626221
    6. ' min' → logprob: -4.101578235626221
    7. '       ' → logprob: -4.851578235626221
    8. '
' → logprob: -7.101578235626221
    9. '(self' → logprob: -7.226578235626221
    10. 'def' → logprob: -8.351577758789062

Token 670: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00024239711638074368
    2. ' min' → logprob: -8.375242233276367
    3. 'self' → logprob: -11.500242233276367
    4. '_min' → logprob: -14.375242233276367
    5. '   ' → logprob: -15.750242233276367
    6. ' self' → logprob: -15.750242233276367
    7. '_,' → logprob: -15.875242233276367
    8. '__' → logprob: -15.875242233276367
    9. ' ' → logprob: -16.250242233276367
    10. 'm' → logprob: -16.375242233276367

Token 671: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0003364158037584275
    2. 'y' → logprob: -8.000336647033691
    3. '_x' → logprob: -14.750336647033691
    4. '_' → logprob: -14.875336647033691
    5. '_,' → logprob: -16.250335693359375
    6. ',' → logprob: -17.125335693359375
    7. 'Y' → logprob: -17.375335693359375
    8. ' y' → logprob: -17.500335693359375
    9. ',y' → logprob: -19.000335693359375
    10. 'x' → logprob: -19.000335693359375

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001475220051361248
    2. ' ,' → logprob: -8.875147819519043
    3. '=' → logprob: -12.125147819519043
    4. ' =' → logprob: -13.625147819519043
    5. '<|end|>' → logprob: -14.375147819519043
    6. '_,' → logprob: -16.250146865844727
    7. '   ' → logprob: -16.500146865844727
    8. ',
' → logprob: -16.875146865844727
    9. '‌,' → logprob: -17.000146865844727
    10. ' ' → logprob: -17.000146865844727

Token 673: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0005761472275480628
    2. ' _,' → logprob: -8.12557601928711
    3. '__,' → logprob: -8.37557601928711
    4. ',' → logprob: -10.00057601928711
    5. '_' → logprob: -13.12557601928711
    6. '   ' → logprob: -13.37557601928711
    7. ' ' → logprob: -15.25057601928711
    8. '_,
' → logprob: -15.50057601928711
    9. '  ' → logprob: -16.62557601928711
    10. '       ' → logprob: -17.37557601928711

Token 674: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00015872348740231246
    2. ' max' → logprob: -8.750158309936523
    3. '_max' → logprob: -15.750158309936523
    4. '   ' → logprob: -17.250158309936523
    5. '_,' → logprob: -19.125158309936523
    6. 'min' → logprob: -19.500158309936523
    7. '	max' → logprob: -19.500158309936523
    8. ' ' → logprob: -19.500158309936523
    9. ',max' → logprob: -20.125158309936523
    10. '_' → logprob: -20.250158309936523

Token 675: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.5451681974809617e-05
    2. 'y' → logprob: -11.125015258789062
    3. 'Y' → logprob: -15.125015258789062
    4. '(y' → logprob: -15.375015258789062
    5. '_x' → logprob: -16.375015258789062
    6. '_' → logprob: -17.250015258789062
    7. ' y' → logprob: -17.375015258789062
    8. '   ' → logprob: -18.000015258789062
    9. ',y' → logprob: -18.125015258789062
    10. '	y' → logprob: -18.625015258789062

Token 676: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34190240502357483
    2. ' +' → logprob: -1.7169023752212524
    3. '=' → logprob: -2.591902494430542
    4. '+' → logprob: -4.216902256011963
    5. ' ' → logprob: -4.716902256011963
    6. '       ' → logprob: -5.466902256011963
    7. ',' → logprob: -5.966902256011963
    8. '        ' → logprob: -6.716902256011963
    9. '    ' → logprob: -6.841902256011963
    10. ' return' → logprob: -7.341902256011963

Token 677: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031781906727701426
    2. ' self' → logprob: -5.753178119659424
    3. '(self' → logprob: -15.003178596496582
    4. '   ' → logprob: -15.753178596496582
    5. ' ' → logprob: -17.003177642822266
    6. '[self' → logprob: -17.503177642822266
    7. '=self' → logprob: -18.503177642822266
    8. '       ' → logprob: -18.503177642822266
    9. '     ' → logprob: -19.003177642822266
    10. '	self' → logprob: -19.253177642822266

Token 678: '.bounding' (ID: 194144)
  Prédit: '.bounding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bounding' → logprob: -0.0009136092266999185
    2. 'bounding' → logprob: -7.000913619995117
    3. '.' → logprob: -14.125913619995117
    4. 'self' → logprob: -14.625913619995117
    5. ' bounding' → logprob: -14.875913619995117
    6. '.bound' → logprob: -15.250913619995117
    7. 'Bounding' → logprob: -15.750913619995117
    8. '.binding' → logprob: -16.250913619995117
    9. '   ' → logprob: -16.875913619995117
    10. '.bounds' → logprob: -17.125913619995117

Token 679: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -0.0032357019372284412
    2. '_y' → logprob: -5.878235816955566
    3. '_point' → logprob: -8.253235816955566
    4. 'Box' → logprob: -8.878235816955566
    5. '_bbox' → logprob: -11.753235816955566
    6. '_points' → logprob: -12.128235816955566
    7. '_boxes' → logprob: -12.378235816955566
    8. 'y' → logprob: -12.378235816955566
    9. '   ' → logprob: -12.628235816955566
    10. 'box' → logprob: -13.128235816955566

Token 680: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02384001389145851
    2. '   ' → logprob: -3.7738399505615234
    3. 'return' → logprob: -7.773839950561523
    4. ' return' → logprob: -8.773839950561523
    5. '     ' → logprob: -12.148839950561523
    6. '      ' → logprob: -12.773839950561523
    7. '	return' → logprob: -12.773839950561523
    8. '           ' → logprob: -13.023839950561523
    9. '    ' → logprob: -13.273839950561523
    10. '        ' → logprob: -13.773839950561523

Token 681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008804962271824479
    2. 'return' → logprob: -7.125880718231201
    3. '   ' → logprob: -10.125880241394043
    4. ' return' → logprob: -10.250880241394043
    5. '	return' → logprob: -15.250880241394043
    6. '     ' → logprob: -15.875880241394043
    7. '      ' → logprob: -16.00088119506836
    8. '           ' → logprob: -16.50088119506836
    9. '	' → logprob: -17.12588119506836
    10. '        ' → logprob: -17.87588119506836

Token 682: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4130123555660248
    2. 'return' (adapté à ' return') → logprob: -1.1630123853683472
    3. '       ' → logprob: -3.6630122661590576
    4. '   ' → logprob: -8.913012504577637
    5. '	return' → logprob: -11.913012504577637
    6. '     ' → logprob: -13.163012504577637
    7. ' ' → logprob: -13.413012504577637
    8. '    ' → logprob: -13.913012504577637
    9. '
' → logprob: -14.163012504577637
    10. '      ' → logprob: -14.413012504577637

Token 683: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1269284337759018
    2. ' max' → logprob: -2.1269283294677734
    3. '(max' → logprob: -15.251928329467773
    4. '	max' → logprob: -16.251928329467773
    5. ' ' → logprob: -17.626928329467773
    6. '   ' → logprob: -17.751928329467773
    7. '_max' → logprob: -18.251928329467773
    8. '.max' → logprob: -19.876928329467773
    9. '[max' → logprob: -19.876928329467773
    10. '=max' → logprob: -20.251928329467773

Token 684: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.1472419600977446e-06
    2. 'y' → logprob: -13.875000953674316
    3. 'Y' → logprob: -16.750001907348633
    4. '_x' → logprob: -17.000001907348633
    5. '(max' → logprob: -17.250001907348633
    6. '(y' → logprob: -19.250001907348633
    7. '```' → logprob: -19.875001907348633
    8. '[' → logprob: -20.125001907348633
    9. '_' → logprob: -20.750001907348633
    10. '(' → logprob: -21.000001907348633

Token 685: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -6.623244553338736e-05
    2. '-' → logprob: -9.625065803527832
    3. ' ' → logprob: -16.00006675720215
    4. ' -
' → logprob: -17.12506675720215
    5. ' ' → logprob: -18.75006675720215
    6. '-min' → logprob: -19.50006675720215
    7. '   ' → logprob: -20.25006675720215
    8. ' –' → logprob: -20.37506675720215
    9. '[' → logprob: -20.37506675720215
    10. '+' → logprob: -20.50006675720215

Token 686: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.008615161292254925
    2. ' min' → logprob: -4.758615016937256
    3. '_min' → logprob: -14.883615493774414
    4. 'max' → logprob: -15.633615493774414
    5. '(min' → logprob: -16.883615493774414
    6. '	min' → logprob: -17.883615493774414
    7. '   ' → logprob: -18.508615493774414
    8. ' ' → logprob: -19.008615493774414
    9. '[min' → logprob: -19.133615493774414
    10. '=min' → logprob: -20.008615493774414

Token 687: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.5954712075181305e-05
    2. 'y' → logprob: -10.250036239624023
    3. 'Y' → logprob: -15.375036239624023
    4. '_x' → logprob: -15.625036239624023
    5. '[' → logprob: -18.000036239624023
    6. '-y' → logprob: -18.250036239624023
    7. '_' → logprob: -18.375036239624023
    8. 'min' → logprob: -18.500036239624023
    9. '+' → logprob: -18.500036239624023
    10. '   ' → logprob: -19.125036239624023

Token 688: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.005233882926404476
    2. '+' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.880233764648438
    4. '()+' → logprob: -18.130233764648438
    5. ' ' → logprob: -19.380233764648438
    6. ' +
' → logprob: -19.380233764648438
    7. '   ' → logprob: -20.755233764648438
    8. '()' → logprob: -20.880233764648438
    9. '1' → logprob: -21.005233764648438
    10. '[' → logprob: -21.630233764648438

Token 689: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.00006675720215
    4. '```' → logprob: -18.50006675720215
    5. '+' → logprob: -19.25006675720215
    6. '  ' → logprob: -20.37506675720215
    7. '2' → logprob: -20.50006675720215
    8. '`' → logprob: -20.87506675720215
    9. '۱' → logprob: -21.25006675720215
    10. ' ' → logprob: -21.37506675720215

Token 690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.625001907348633
    4. '
' → logprob: -19.500001907348633
    5. '```' → logprob: -19.625001907348633
    6. '+' → logprob: -20.500001907348633
    7. '۱' → logprob: -21.812501907348633
    8. '  ' → logprob: -21.937501907348633
    9. '2' → logprob: -22.000001907348633
    10. '0' → logprob: -22.125001907348633

Token 691: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12899674475193024
    2. '
' → logprob: -2.8789968490600586
    3. '<|end|>' → logprob: -3.0039968490600586
    4. '    
' → logprob: -4.628996849060059
    5. '<|end|>' → logprob: -5.878996849060059
    6. ' ' → logprob: -7.628996849060059
    7. '```' → logprob: -7.753996849060059
    8. ' 
' → logprob: -7.878996849060059
    9. '  
' → logprob: -8.003996849060059
    10. 'def' → logprob: -8.628996849060059

Token 693: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01831534318625927
    2. '   ' → logprob: -4.143315315246582
    3. ' def' → logprob: -6.518315315246582
    4. '@' (adapté à ' @') → logprob: -8.518315315246582
    5. '@property' → logprob: -8.518315315246582
    6. ' ' → logprob: -9.018315315246582
    7. '    
' → logprob: -9.643315315246582
    8. '
' → logprob: -9.768315315246582
    9. '#' → logprob: -9.768315315246582
    10. '    ' → logprob: -10.268315315246582

Token 694: 'staticmethod' (ID: 53164)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.4075678586959839
    2. 'classmethod' → logprob: -1.1575678586959839
    3. 'staticmethod' → logprob: -3.9075679779052734
    4. 'abstract' → logprob: -7.907567977905273
    5. 'abc' → logprob: -10.532567977905273
    6. 'class' → logprob: -16.032567977905273
    7. ' property' → logprob: -16.782567977905273
    8. '@property' → logprob: -17.657567977905273
    9. 'Property' → logprob: -18.657567977905273
    10. '@' → logprob: -20.157567977905273

Token 695: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01410426665097475
    2. '
' → logprob: -4.76410436630249
    3. ' def' → logprob: -5.63910436630249
    4. '   ' → logprob: -6.26410436630249
    5. '    
' → logprob: -12.514103889465332
    6. 'from' → logprob: -12.514103889465332
    7. '(' → logprob: -12.639103889465332
    8. '	def' → logprob: -13.764103889465332
    9. '(def' → logprob: -13.889103889465332
    10. '
' → logprob: -14.514103889465332

Token 696: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14150309562683105
    2. '
' → logprob: -2.641503095626831
    3. '   ' → logprob: -2.891503095626831
    4. ' def' → logprob: -5.26650333404541
    5. '	def' → logprob: -10.76650333404541
    6. '    
' → logprob: -11.64150333404541
    7. '  ' → logprob: -13.39150333404541
    8. ' ' → logprob: -13.76650333404541
    9. '
' → logprob: -13.76650333404541
    10. 'from' → logprob: -13.89150333404541

Token 697: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0011287828674539924
    2. '
' → logprob: -6.876128673553467
    3. ' def' → logprob: -9.376129150390625
    4. 'abstract' → logprob: -12.501129150390625
    5. 'from' → logprob: -13.001129150390625
    6. 'classmethod' → logprob: -13.376129150390625
    7. '   ' → logprob: -14.126129150390625
    8. 'property' → logprob: -14.251129150390625
    9. 'staticmethod' → logprob: -14.376129150390625
    10. '@' → logprob: -14.751129150390625

Token 698: ' match' (ID: 3981)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.645934522151947
    2. 'normalize' → logprob: -1.7709345817565918
    3. 'from' → logprob: -2.020934581756592
    4. ' def' → logprob: -3.020934581756592
    5. 'match' → logprob: -3.770934581756592
    6. 'pattern' → logprob: -3.770934581756592
    7. ' from' → logprob: -4.270934581756592
    8. 'char' → logprob: -4.520934581756592
    9. ' normalize' → logprob: -4.895934581756592
    10. ' pattern' → logprob: -5.520934581756592

Token 699: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.3491857647895813
    2. '(pattern' → logprob: -1.3491857051849365
    3. '(' → logprob: -3.7241857051849365
    4. 'pattern' → logprob: -5.349185943603516
    5. '_char' → logprob: -6.849185943603516
    6. '(char' → logprob: -6.849185943603516
    7. '_character' → logprob: -6.974185943603516
    8. '(character' → logprob: -7.349185943603516
    9. '_token' → logprob: -7.599185943603516
    10. '(p' → logprob: -8.099185943603516

Token 700: '(points' (ID: 72131)
  Prédit: '(pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.4104032814502716
    2. '(' → logprob: -2.035403251647949
    3. '(char' → logprob: -2.410403251647949
    4. '(p' → logprob: -2.535403251647949
    5. '(point' → logprob: -4.910403251647949
    6. '(grid' → logprob: -4.910403251647949
    7. '(character' → logprob: -5.160403251647949
    8. '(self' → logprob: -5.535403251647949
    9. '(cell' → logprob: -5.910403251647949
    10. '(points' → logprob: -6.285403251647949

Token 701: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018438583239912987
    2. ',' → logprob: -4.018438816070557
    3. ')' → logprob: -9.393438339233398
    4. '_set' → logprob: -9.643438339233398
    5. '_points' → logprob: -10.018438339233398
    6. '):
' → logprob: -10.643438339233398
    7. '):' → logprob: -10.768438339233398
    8. '   ' → logprob: -11.143438339233398
    9. '_subset' → logprob: -11.518438339233398
    10. ':Set' → logprob: -12.143438339233398

Token 702: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.10646876692771912
    2. 'List' → logprob: -2.356468677520752
    3. ' Set' → logprob: -5.481468677520752
    4. 'Point' → logprob: -6.731468677520752
    5. ' List' → logprob: -7.481468677520752
    6. ')' → logprob: -8.98146915435791
    7. ''' → logprob: -9.60646915435791
    8. ' ' → logprob: -11.23146915435791
    9. '   ' → logprob: -11.23146915435791
    10. '	Set' → logprob: -11.35646915435791

Token 703: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022523177904076874
    2. '['' → logprob: -8.500225067138672
    3. '[int' → logprob: -11.500225067138672
    4. 'Point' → logprob: -12.875225067138672
    5. ']' → logprob: -13.250225067138672
    6. ')' → logprob: -13.250225067138672
    7. '<Point' → logprob: -13.625225067138672
    8. '):' → logprob: -13.750225067138672
    9. ',' → logprob: -13.750225067138672
    10. '])' → logprob: -14.375225067138672

Token 704: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.5577775128767826e-06
    2. 'Tuple' → logprob: -12.250005722045898
    3. ' Point' → logprob: -14.625005722045898
    4. '	Point' → logprob: -16.6250057220459
    5. '(Point' → logprob: -17.1250057220459
    6. '[' → logprob: -17.1250057220459
    7. ''' → logprob: -17.6250057220459
    8. 'int' → logprob: -18.3750057220459
    9. '<Point' → logprob: -18.5000057220459
    10. '_Point' → logprob: -19.1250057220459

Token 705: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.472211968386546e-05
    2. '],' → logprob: -10.000094413757324
    3. ' ,' → logprob: -10.250094413757324
    4. ')' → logprob: -12.000094413757324
    5. '   ' → logprob: -12.375094413757324
    6. '),' → logprob: -13.250094413757324
    7. '       ' → logprob: -14.000094413757324
    8. '])' → logprob: -14.375094413757324
    9. '‌,' → logprob: -16.12509536743164
    10. '  ' → logprob: -16.75009536743164

Token 706: ' min' (ID: 1349)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.6346797943115234
    2. 'pattern' → logprob: -0.7596797943115234
    3. 'offset' → logprob: -7.134679794311523
    4. ' offset' → logprob: -7.884679794311523
    5. ' origin' → logprob: -8.009679794311523
    6. 'origin' → logprob: -8.509679794311523
    7. '   ' → logprob: -9.509679794311523
    8. '       ' → logprob: -10.009679794311523
    9. ' grid' → logprob: -10.259679794311523
    10. 'template' → logprob: -10.259679794311523

Token 707: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.5120287066092715e-05
    2. 'x' → logprob: -11.375035285949707
    3. '_' → logprob: -11.625035285949707
    4. ')' → logprob: -12.125035285949707
    5. '<|end|>' → logprob: -12.875035285949707
    6. '   ' → logprob: -13.625035285949707
    7. ',' → logprob: -13.875035285949707
    8. ' _' → logprob: -14.375035285949707
    9. 'X' → logprob: -14.625035285949707
    10. ':' → logprob: -14.625035285949707

Token 708: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009264634922146797
    2. ':' → logprob: -4.8842644691467285
    3. ':int' → logprob: -6.5092644691467285
    4. ' ,' → logprob: -9.509264945983887
    5. ',int' → logprob: -10.759264945983887
    6. '):' → logprob: -11.009264945983887
    7. ')' → logprob: -11.009264945983887
    8. '   ' → logprob: -11.259264945983887
    9. '=None' → logprob: -11.634264945983887
    10. '=' → logprob: -12.509264945983887

Token 709: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002636006975080818
    2. ' int' → logprob: -8.250263214111328
    3. '0' → logprob: -14.000263214111328
    4. '[int' → logprob: -14.500263214111328
    5. ':int' → logprob: -14.875263214111328
    6. '	int' → logprob: -15.750263214111328
    7. '   ' → logprob: -16.125263214111328
    8. ',' → logprob: -16.125263214111328
    9. ',int' → logprob: -16.750263214111328
    10. '=int' → logprob: -16.875263214111328

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.88418151892256e-05
    2. ' ,' → logprob: -9.875059127807617
    3. ',int' → logprob: -12.500059127807617
    4. ',min' → logprob: -13.375059127807617
    5. '‌,' → logprob: -14.375059127807617
    6. '   ' → logprob: -14.500059127807617
    7. ')' → logprob: -14.750059127807617
    8. ',
' → logprob: -15.000059127807617
    9. ',p' → logprob: -16.750059127807617
    10. '<|end|>' → logprob: -17.125059127807617

Token 711: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.016606442630290985
    2. ' min' → logprob: -4.141606330871582
    3. 'int' → logprob: -7.516606330871582
    4. ' int' → logprob: -10.891606330871582
    5. '	min' → logprob: -12.266606330871582
    6. '   ' → logprob: -13.641606330871582
    7. '_min' → logprob: -13.766606330871582
    8. ',' → logprob: -14.391606330871582
    9. ',min' → logprob: -14.641606330871582
    10. 'max' → logprob: -14.891606330871582

Token 712: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0006314247148111463
    2. 'x' → logprob: -8.125631332397461
    3. '_' → logprob: -8.250631332397461
    4. '<|end|>' → logprob: -10.125631332397461
    5. '   ' → logprob: -11.625631332397461
    6. '<|end|>' → logprob: -12.125631332397461
    7. ' _' → logprob: -12.250631332397461
    8. '_y' → logprob: -12.375631332397461
    9. ',' → logprob: -12.500631332397461
    10. ')' → logprob: -13.375631332397461

Token 713: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4742872714996338
    2. ':' → logprob: -0.9742872714996338
    3. ' ,' → logprob: -9.599287033081055
    4. ')' → logprob: -9.974287033081055
    5. ':int' → logprob: -10.224287033081055
    6. '   ' → logprob: -10.849287033081055
    7. '<|end|>' → logprob: -10.974287033081055
    8. ' :' → logprob: -12.099287033081055
    9. '):' → logprob: -12.099287033081055
    10. '<|end|>' → logprob: -12.224287033081055

Token 714: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011703446507453918
    2. ' int' → logprob: -6.7511701583862305
    3. ':int' → logprob: -16.126171112060547
    4. '   ' → logprob: -16.876171112060547
    5. '[int' → logprob: -17.376171112060547
    6. '<int' → logprob: -18.251171112060547
    7. '	int' → logprob: -18.751171112060547
    8. '(int' → logprob: -18.876171112060547
    9. '=int' → logprob: -19.251171112060547
    10. ']int' → logprob: -20.251171112060547

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026422914117574692
    2. ')' → logprob: -3.6514229774475098
    3. ' ,' → logprob: -9.401422500610352
    4. '   ' → logprob: -10.526422500610352
    5. '):' → logprob: -11.776422500610352
    6. ' )' → logprob: -13.651422500610352
    7. ' ' → logprob: -13.651422500610352
    8. '):
' → logprob: -14.151422500610352
    9. ',)' → logprob: -14.401422500610352
    10. ',
' → logprob: -14.776422500610352

Token 716: ' max' (ID: 2999)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.01145885232836008
    2. ' pattern' → logprob: -4.511458873748779
    3. 'width' → logprob: -8.636458396911621
    4. 'max' → logprob: -9.011458396911621
    5. 'char' → logprob: -10.636458396911621
    6. 'expected' → logprob: -11.136458396911621
    7. 'height' → logprob: -11.136458396911621
    8. '   ' → logprob: -11.386458396911621
    9. 'candidate' → logprob: -11.386458396911621
    10. 'template' → logprob: -11.511458396911621

Token 717: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.935296834039036e-06
    2. 'x' → logprob: -13.25000286102295
    3. '_' → logprob: -14.25000286102295
    4. ',' → logprob: -15.87500286102295
    5. '```' → logprob: -16.125003814697266
    6. '<|end|>' → logprob: -16.750003814697266
    7. '   ' → logprob: -16.875003814697266
    8. ')' → logprob: -16.875003814697266
    9. '<|end|>' → logprob: -17.000003814697266
    10. '_,' → logprob: -17.875003814697266

Token 718: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024963948875665665
    2. ',' → logprob: -3.774963855743408
    3. ':int' → logprob: -6.399963855743408
    4. '   ' → logprob: -11.524964332580566
    5. '<|end|>' → logprob: -11.524964332580566
    6. 'int' → logprob: -11.774964332580566
    7. ' :' → logprob: -11.899964332580566
    8. '=None' → logprob: -12.024964332580566
    9. ',int' → logprob: -13.149964332580566
    10. ')' → logprob: -13.149964332580566

Token 719: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005235291086137295
    2. ' int' → logprob: -5.255235195159912
    3. '   ' → logprob: -15.00523567199707
    4. '[int' → logprob: -15.13023567199707
    5. ':int' → logprob: -15.25523567199707
    6. '=int' → logprob: -15.50523567199707
    7. '(int' → logprob: -15.75523567199707
    8. '	int' → logprob: -16.00523567199707
    9. '<int' → logprob: -16.00523567199707
    10. ']int' → logprob: -17.00523567199707

Token 720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025978617486543953
    2. ',int' → logprob: -8.750259399414062
    3. ')' → logprob: -9.750259399414062
    4. ' ,' → logprob: -10.875259399414062
    5. ':' → logprob: -11.750259399414062
    6. ':int' → logprob: -11.875259399414062
    7. 'int' → logprob: -12.500259399414062
    8. '   ' → logprob: -13.500259399414062
    9. ',
' → logprob: -13.625259399414062
    10. '<|end|>' → logprob: -13.750259399414062

Token 721: ' max' (ID: 2999)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1842358559370041
    2. ' int' → logprob: -1.8092358112335205
    3. 'min' → logprob: -5.5592360496521
    4. ' min' → logprob: -7.5592360496521
    5. 'max' → logprob: -9.684235572814941
    6. ' max' → logprob: -11.059235572814941
    7. ':int' → logprob: -11.434235572814941
    8. '   ' → logprob: -11.684235572814941
    9. '=int' → logprob: -12.934235572814941
    10. ' ' → logprob: -13.434235572814941

Token 722: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.1502821147441864
    2. '_x' → logprob: -2.025282144546509
    3. 'y' → logprob: -5.52528190612793
    4. 'x' → logprob: -6.02528190612793
    5. '_' → logprob: -7.90028190612793
    6. 'Y' → logprob: -8.27528190612793
    7. '<|end|>' → logprob: -8.52528190612793
    8. '<|end|>' → logprob: -9.15028190612793
    9. ')' → logprob: -9.77528190612793
    10. '>' → logprob: -9.90028190612793

Token 723: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09750933200120926
    2. '):' → logprob: -2.8475093841552734
    3. '):
' → logprob: -3.9725093841552734
    4. ',' → logprob: -4.222509384155273
    5. ' )' → logprob: -6.972509384155273
    6. '   ' → logprob: -8.347509384155273
    7. ':' → logprob: -9.347509384155273
    8. ' ):' → logprob: -9.347509384155273
    9. ' ):
' → logprob: -10.972509384155273
    10. '):

' → logprob: -11.097509384155273

Token 724: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12803366780281067
    2. ' int' → logprob: -2.1280336380004883
    3. ')' → logprob: -6.878033638000488
    4. '   ' → logprob: -10.128033638000488
    5. ':int' → logprob: -11.878033638000488
    6. ' ' → logprob: -12.253033638000488
    7. '[int' → logprob: -12.253033638000488
    8. '):' → logprob: -12.503033638000488
    9. '):
' → logprob: -12.628033638000488
    10. ' )' → logprob: -13.503033638000488

Token 725: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005879375617951155
    2. '):
' → logprob: -6.0058794021606445
    3. '):' → logprob: -6.3808794021606445
    4. ',' → logprob: -6.8808794021606445
    5. ' )' → logprob: -7.3808794021606445
    6. '   ' → logprob: -10.255879402160645
    7. ')->' → logprob: -12.130879402160645
    8. ' ):
' → logprob: -12.880879402160645
    9. ' ):' → logprob: -12.880879402160645
    10. '):

' → logprob: -13.505879402160645

Token 726: '                     ' (ID: 4451)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.10680373758077621
    2. 'pattern' → logprob: -2.3568036556243896
    3. '   ' → logprob: -6.856803894042969
    4. '                ' → logprob: -7.106803894042969
    5. '       ' → logprob: -7.231803894042969
    6. '                    ' → logprob: -7.731803894042969
    7. '                 ' → logprob: -7.731803894042969
    8. '                     ' → logprob: -7.981803894042969
    9. '               ' → logprob: -8.106803894042969
    10. '                   ' → logprob: -8.106803894042969

Token 727: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -0.0409686416387558
    2. ' pattern' → logprob: -3.290968656539917
    3. 'grid' → logprob: -6.790968418121338
    4. 'expected' → logprob: -7.915968418121338
    5. '   ' → logprob: -8.040968894958496
    6. '       ' → logprob: -8.165968894958496
    7. 'candidate' → logprob: -8.790968894958496
    8. ' grid' → logprob: -9.415968894958496
    9. '           ' → logprob: -9.790968894958496
    10. 'template' → logprob: -10.165968894958496

Token 728: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00028541131177917123
    2. ')' → logprob: -8.625285148620605
    3. '):' → logprob: -9.375285148620605
    4. ' :' → logprob: -11.500285148620605
    5. '   ' → logprob: -12.625285148620605
    6. ',' → logprob: -13.125285148620605
    7. '_:' → logprob: -14.125285148620605
    8. '[' → logprob: -14.250285148620605
    9. '):
' → logprob: -14.625285148620605
    10. ' )' → logprob: -14.750285148620605

Token 729: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -7.052377623040229e-05
    2. ' List' → logprob: -10.000070571899414
    3. '[List' → logprob: -10.625070571899414
    4. '   ' → logprob: -15.000070571899414
    5. ')' → logprob: -15.750070571899414
    6. '	List' → logprob: -15.875070571899414
    7. '       ' → logprob: -17.500070571899414
    8. '(List' → logprob: -17.625070571899414
    9. ',List' → logprob: -18.375070571899414
    10. 'str' → logprob: -18.500070571899414

Token 730: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.875001907348633
    3. 'str' → logprob: -15.375001907348633
    4. '[int' → logprob: -16.000001907348633
    5. ')' → logprob: -16.125001907348633
    6. '[
' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.875001907348633
    8. '```' → logprob: -18.500001907348633
    9. '       ' → logprob: -19.125001907348633
    10. ']' → logprob: -19.375001907348633

Token 731: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059938766062259674
    2. '])' → logprob: -2.934938669204712
    3. ',' → logprob: -5.434938907623291
    4. ' )' → logprob: -8.434938430786133
    5. '   ' → logprob: -9.184938430786133
    6. '):' → logprob: -9.434938430786133
    7. '):
' → logprob: -9.684938430786133
    8. ']' → logprob: -9.684938430786133
    9. '`)' → logprob: -10.934938430786133
    10. ' ' → logprob: -11.059938430786133

Token 732: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1554170399904251
    2. ' ->' → logprob: -2.280416965484619
    3. '->' → logprob: -3.655416965484619
    4. ':
' → logprob: -4.405416965484619
    5. '   ' → logprob: -6.155416965484619
    6. ')->' → logprob: -7.655416965484619
    7. '       ' → logprob: -7.655416965484619
    8. ')' → logprob: -7.905416965484619
    9. ' ->
' → logprob: -9.780417442321777
    10. ':return' → logprob: -10.405417442321777

Token 733: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00043126524542458355
    2. ' bool' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.625431060791016
    4. '	bool' → logprob: -16.000431060791016
    5. 'Bool' → logprob: -16.125431060791016
    6. 'None' → logprob: -17.250431060791016
    7. '<bool' → logprob: -17.375431060791016
    8. '(bool' → logprob: -17.625431060791016
    9. ' ' → logprob: -17.750431060791016
    10. '  ' → logprob: -17.875431060791016

Token 734: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005207905545830727
    2. ':
' → logprob: -5.8802080154418945
    3. '   ' → logprob: -7.1302080154418945
    4. '<|end|>' → logprob: -7.2552080154418945
    5. '):' → logprob: -7.7552080154418945
    6. '{' → logprob: -8.755208015441895
    7. '       ' → logprob: -9.255208015441895
    8. ',' → logprob: -9.880208015441895
    9. '[' → logprob: -10.380208015441895
    10. ')' → logprob: -10.505208015441895

Token 735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00941179133951664
    2. '   ' → logprob: -4.759411811828613
    3. '
' → logprob: -8.384411811828613
    4. '    
' → logprob: -9.134411811828613
    5. ' 
' → logprob: -9.384411811828613
    6. '\n' → logprob: -9.509411811828613
    7. '        
' → logprob: -9.759411811828613
    8. '    ' → logprob: -9.884411811828613
    9. '	' → logprob: -10.384411811828613
    10. '	   ' → logprob: -10.384411811828613

Token 736: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1403605192899704
    2. '       ' → logprob: -2.2653605937957764
    3. ' for' → logprob: -3.6403605937957764
    4. 'height' → logprob: -7.265360355377197
    5. '   ' → logprob: -9.390360832214355
    6. 'width' → logprob: -9.765360832214355
    7. 'h' → logprob: -10.640360832214355
    8. '	for' → logprob: -11.390360832214355
    9. 'if' → logprob: -11.390360832214355
    10. '           ' → logprob: -12.140360832214355

Token 737: ' pattern' (ID: 8302)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04333062842488289
    2. '       ' → logprob: -3.293330669403076
    3. 'height' → logprob: -5.793330669403076
    4. 'pattern' → logprob: -7.043330669403076
    5. 'h' → logprob: -7.168330669403076
    6. ' for' → logprob: -8.668330192565918
    7. 'expected' → logprob: -8.668330192565918
    8. 'width' → logprob: -9.043330192565918
    9. '   ' → logprob: -10.543330192565918
    10. 'dy' → logprob: -11.043330192565918

Token 738: ' is' (ID: 382)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.36382102966308594
    2. 'height' → logprob: -1.988821029663086
    3. '=' → logprob: -2.488821029663086
    4. 'for' → logprob: -4.238821029663086
    5. '_h' → logprob: -4.613821029663086
    6. '       ' → logprob: -4.613821029663086
    7. ' =' → logprob: -4.738821029663086
    8. '_size' → logprob: -4.738821029663086
    9. '_width' → logprob: -4.738821029663086
    10. 'width' → logprob: -5.238821029663086

Token 739: ' list' (ID: 1562)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.20248544216156006
    2. '[' → logprob: -2.4524855613708496
    3. '[]
' → logprob: -3.7024855613708496
    4. 'pattern' → logprob: -4.07748556137085
    5. 'len' → logprob: -4.32748556137085
    6. '[]' → logprob: -4.45248556137085
    7. '[max' → logprob: -4.95248556137085
    8. ' [' → logprob: -5.07748556137085
    9. '[len' → logprob: -5.32748556137085
    10. '[y' → logprob: -5.32748556137085

Token 740: ' of' (ID: 328)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.02166183851659298
    2. ' of' → logprob: -4.521661758422852
    3. '[' → logprob: -4.771661758422852
    4. '[
' → logprob: -6.896661758422852
    5. 'of' → logprob: -7.146661758422852
    6. '[List' → logprob: -9.396661758422852
    7. '       ' → logprob: -9.646661758422852
    8. '   ' → logprob: -9.771661758422852
    9. ':' → logprob: -10.271661758422852
    10. ')' → logprob: -11.646661758422852

Token 741: ' strings' (ID: 18279)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0001825642102630809
    2. 'strings' → logprob: -9.000182151794434
    3. '[str' → logprob: -10.125182151794434
    4. ' str' → logprob: -11.500182151794434
    5. 'pattern' → logprob: -11.875182151794434
    6. '   ' → logprob: -14.125182151794434
    7. 'string' → logprob: -14.375182151794434
    8. ' ' → logprob: -15.000182151794434
    9. ' strings' → logprob: -15.625182151794434
    10. '
' → logprob: -16.87518310546875

Token 742: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2710218131542206
    2. '<|end|>' → logprob: -2.396021842956543
    3. ':' → logprob: -2.521021842956543
    4. ',' → logprob: -3.896021842956543
    5. '   ' → logprob: -4.146021842956543
    6. '<|end|>' → logprob: -4.771021842956543
    7. ' for' → logprob: -5.146021842956543
    8. ' and' → logprob: -6.021021842956543
    9. '[' → logprob: -6.396021842956543
    10. ' ' → logprob: -6.521021842956543

Token 743: ' '' (ID: 461)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.0796663761138916
    2. ' equal' → logprob: -1.0796663761138916
    3. ' length' → logprob: -1.4546663761138916
    4. 'equal' → logprob: -3.2046663761138916
    5. 'str' → logprob: -3.7046663761138916
    6. 'len' → logprob: -4.7046661376953125
    7. 'pattern' → logprob: -5.8296661376953125
    8. ' str' → logprob: -6.2046661376953125
    9. ' pattern' → logprob: -6.8296661376953125
    10. 'max' → logprob: -7.5796661376953125

Token 744: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08972971886396408
    2. '.#' → logprob: -3.5897297859191895
    3. ''#' → logprob: -3.9647297859191895
    4. 'X' → logprob: -4.0897297859191895
    5. '.' → logprob: -4.9647297859191895
    6. ''' → logprob: -5.2147297859191895
    7. '.'' → logprob: -5.7147297859191895
    8. '#.' → logprob: -5.8397297859191895
    9. ''.' → logprob: -7.3397297859191895
    10. ' #' → logprob: -7.3397297859191895

Token 745: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000158842682139948
    2. ''s' → logprob: -9.12515926361084
    3. '',' → logprob: -10.75015926361084
    4. '','' → logprob: -11.87515926361084
    5. ''#' → logprob: -11.87515926361084
    6. ''or' → logprob: -12.25015926361084
    7. ' '' → logprob: -13.25015926361084
    8. '0' → logprob: -13.50015926361084
    9. '','#' → logprob: -13.50015926361084
    10. '''' → logprob: -13.50015926361084

Token 746: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9006648659706116
    2. ' or' → logprob: -1.2756648063659668
    3. 'and' → logprob: -1.4006648063659668
    4. ''' → logprob: -3.150664806365967
    5. 'or' → logprob: -3.900664806365967
    6. '       ' → logprob: -6.525664806365967
    7. ''or' → logprob: -6.775664806365967
    8. ''s' → logprob: -7.400664806365967
    9. '           ' → logprob: -7.775664806365967
    10. ',' → logprob: -7.775664806365967

Token 747: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3496783971786499
    2. ''' → logprob: -1.22467839717865
    3. ' '' → logprob: -7.0996785163879395
    4. '.' → logprob: -8.349678039550781
    5. ' ' → logprob: -9.224678039550781
    6. ''.' → logprob: -10.599678039550781
    7. '"' → logprob: -10.599678039550781
    8. ''s' → logprob: -11.974678039550781
    9. '<|end|>' → logprob: -12.599678039550781
    10. '_' → logprob: -12.849678039550781

Token 748: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010711929644457996
    2. '.' → logprob: -9.625106811523438
    3. '.'' → logprob: -11.000106811523438
    4. ' ' → logprob: -11.625106811523438
    5. ''' → logprob: -12.125106811523438
    6. ' ')' → logprob: -12.500106811523438
    7. '.')' → logprob: -13.125106811523438
    8. ' '' → logprob: -13.500106811523438
    9. '')' → logprob: -13.875106811523438
    10. '#' → logprob: -14.500106811523438

Token 749: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009989929385483265
    2. '',' → logprob: -4.7599897384643555
    3. '':
' → logprob: -7.2599897384643555
    4. ''
' → logprob: -8.634989738464355
    5. '':' → logprob: -8.634989738464355
    6. ' '' → logprob: -8.884989738464355
    7. '')' → logprob: -9.634989738464355
    8. ''.' → logprob: -10.509989738464355
    9. '';' → logprob: -10.884989738464355
    10. '       ' → logprob: -11.384989738464355

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17663122713565826
    2. ':' → logprob: -2.176631212234497
    3. '<|end|>' → logprob: -3.801631212234497
    4. '   ' → logprob: -4.176631450653076
    5. ',' → logprob: -5.426631450653076
    6. ' ' → logprob: -7.176631450653076
    7. '):' → logprob: -7.176631450653076
    8. '    ' → logprob: -7.426631450653076
    9. '<|end|>' → logprob: -7.426631450653076
    10. '{' → logprob: -7.676631450653076

Token 751: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43921640515327454
    2. '       ' → logprob: -1.4392163753509521
    3. ' for' → logprob: -2.314216375350952
    4. 'height' → logprob: -4.189216613769531
    5. 'h' → logprob: -5.939216613769531
    6. ' height' → logprob: -7.064216613769531
    7. ' h' → logprob: -7.939216613769531
    8. 'width' → logprob: -8.814216613769531
    9. 'expected' → logprob: -9.439216613769531
    10. '   ' → logprob: -9.939216613769531

Token 752: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03554496541619301
    2. 'if' → logprob: -4.4105448722839355
    3. 'pattern' → logprob: -4.7855448722839355
    4. 'height' → logprob: -5.1605448722839355
    5. '       ' → logprob: -5.5355448722839355
    6. 'h' → logprob: -5.7855448722839355
    7. ' for' → logprob: -7.6605448722839355
    8. 'width' → logprob: -8.285545349121094
    9. 'p' → logprob: -8.535545349121094
    10. '   ' → logprob: -8.535545349121094

Token 753: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28279411792755127
    2. 'for' → logprob: -1.5327941179275513
    3. '       ' → logprob: -4.032793998718262
    4. 'height' → logprob: -5.407793998718262
    5. ' height' → logprob: -5.907793998718262
    6. ' if' → logprob: -6.032793998718262
    7. '   ' → logprob: -6.657793998718262
    8. ' y' → logprob: -7.032793998718262
    9. 'if' → logprob: -7.907793998718262
    10. 'y' → logprob: -8.282793998718262

Token 754: ' points' (ID: 5571)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0091359615325928
    2. 'y' → logprob: -1.7591359615325928
    3. '(max' → logprob: -1.8841359615325928
    4. 'max' → logprob: -2.0091359615325928
    5. '(y' → logprob: -2.3841359615325928
    6. 'len' → logprob: -2.8841359615325928
    7. ' all' → logprob: -4.759136199951172
    8. '(len' → logprob: -4.759136199951172
    9. ' (' → logprob: -5.884136199951172
    10. 'for' → logprob: -6.134136199951172

Token 755: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.6609243750572205
    2. 'match' → logprob: -0.9109243750572205
    3. '==' → logprob: -3.6609244346618652
    4. ' ==' → logprob: -4.160924434661865
    5. '_match' → logprob: -4.910924434661865
    6. ' are' → logprob: -5.160924434661865
    7. 'matches' → logprob: -5.285924434661865
    8. '       ' → logprob: -5.535924434661865
    9. 'for' → logprob: -6.035924434661865
    10. ' matches' → logprob: -6.410924434661865

Token 756: ' pattern' (ID: 8302)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2110694795846939
    2. '       ' → logprob: -2.4610695838928223
    3. 'for' → logprob: -3.8360695838928223
    4. '
' → logprob: -4.336069583892822
    5. '   ' → logprob: -4.586069583892822
    6. ' if' → logprob: -4.836069583892822
    7. ' (' → logprob: -4.836069583892822
    8. '(points' → logprob: -4.836069583892822
    9. ' points' → logprob: -4.836069583892822
    10. ' in' → logprob: -4.961069583892822

Token 757: ' exactly' (ID: 9707)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08307770639657974
    2. ':' → logprob: -2.9580776691436768
    3. '   ' → logprob: -4.458077907562256
    4. ':
' → logprob: -5.208077907562256
    5. ' for' → logprob: -6.333077907562256
    6. '(' → logprob: -6.333077907562256
    7. '
' → logprob: -6.458077907562256
    8. ',' → logprob: -7.083077907562256
    9. '(p' → logprob: -7.083077907562256
    10. '        
' → logprob: -7.208077907562256

Token 758: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041082486510276794
    2. ':' → logprob: -3.4160823822021484
    3. '\n' → logprob: -6.166082382202148
    4. ':
' → logprob: -6.666082382202148
    5. '   ' → logprob: -6.791082382202148
    6. '
' → logprob: -7.541082382202148
    7. '<|end|>' → logprob: -7.666082382202148
    8. ',' → logprob: -7.916082382202148
    9. ' for' → logprob: -8.041082382202148
    10. '        
' → logprob: -8.416082382202148

Token 759: ' bounding' (ID: 70758)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -1.359043836593628
    2. ' the' → logprob: -1.734043836593628
    3. ' size' → logprob: -1.859043836593628
    4. 'size' → logprob: -2.109043836593628
    5. 'the' → logprob: -2.234043836593628
    6. 'height' → logprob: -2.484043836593628
    7. ' width' → logprob: -3.109043836593628
    8. ' height' → logprob: -4.734044075012207
    9. 'for' → logprob: -4.734044075012207
    10. ' all' → logprob: -5.609044075012207

Token 760: ' box' (ID: 5506)
  Prédit: '_box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -0.02680283971130848
    2. ' box' → logprob: -4.026803016662598
    3. '_' → logprob: -5.026803016662598
    4. 'box' → logprob: -6.651803016662598
    5. ' _' → logprob: -7.651803016662598
    6. ' ' → logprob: -9.151803016662598
    7. '_x' → logprob: -10.026803016662598
    8. ')' → logprob: -10.776803016662598
    9. 'Box' → logprob: -11.026803016662598
    10. '_BOX' → logprob: -11.026803016662598

Token 761: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026029132306575775
    2. ':' → logprob: -4.026029109954834
    3. ':
' → logprob: -5.651029109954834
    4. '   ' → logprob: -6.026029109954834
    5. '
' → logprob: -7.276029109954834
    6. ',' → logprob: -8.276029586791992
    7. '        
' → logprob: -8.776029586791992
    8. '):
' → logprob: -8.901029586791992
    9. '):' → logprob: -9.026029586791992
    10. '\n' → logprob: -9.151029586791992

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002151688328012824
    2. '   ' → logprob: -6.8771514892578125
    3. ':' → logprob: -7.0021514892578125
    4. '):' → logprob: -10.377151489257812
    5. ',' → logprob: -10.627151489257812
    6. '<|end|>' → logprob: -10.627151489257812
    7. ':
' → logprob: -11.127151489257812
    8. '{' → logprob: -11.127151489257812
    9. ')' → logprob: -11.127151489257812
    10. '           ' → logprob: -11.502151489257812

Token 763: ' ph' (ID: 1391)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0680929645895958
    2. '       ' → logprob: -2.9430930614471436
    3. 'height' → logprob: -4.6930928230285645
    4. ' for' → logprob: -5.9430928230285645
    5. 'h' → logprob: -6.9430928230285645
    6. 'width' → logprob: -8.693093299865723
    7. 'expected' → logprob: -9.068093299865723
    8. 'if' → logprob: -10.818093299865723
    9. ' height' → logprob: -11.068093299865723
    10. 'pattern' → logprob: -11.318093299865723

Token 764: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7770078778266907
    2. '       ' → logprob: -1.277007818222046
    3. 'for' → logprob: -2.277007818222046
    4. 'one' → logprob: -2.527007818222046
    5. '=' → logprob: -3.402007818222046
    6. 'rase' → logprob: -4.277008056640625
    7. 'len' → logprob: -5.402008056640625
    8. 'ase' → logprob: -5.527008056640625
    9. 'r' → logprob: -5.777008056640625
    10. 'en' → logprob: -6.027008056640625

Token 765: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2352385965641588e-05
    2. ' len' → logprob: -11.750012397766113
    3. 'max' → logprob: -12.375012397766113
    4. '(len' → logprob: -15.625012397766113
    5. '=len' → logprob: -18.875011444091797
    6. '[len' → logprob: -19.500011444091797
    7. '           ' → logprob: -20.750011444091797
    8. '   ' → logprob: -20.875011444091797
    9. 'y' → logprob: -21.250011444091797
    10. '	len' → logprob: -21.625011444091797

Token 766: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -1.0445127372804563e-05
    2. 'pattern' → logprob: -11.50001049041748
    3. '(' → logprob: -15.50001049041748
    4. ' pattern' → logprob: -17.750009536743164
    5. '(policy' → logprob: -19.875009536743164
    6. '(prefix' → logprob: -19.875009536743164
    7. '(p' → logprob: -20.750009536743164
    8. 'Pattern' → logprob: -21.000009536743164
    9. '.pattern' → logprob: -21.500009536743164
    10. '(
' → logprob: -21.500009536743164

Token 767: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043027278035879135
    2. ')
' → logprob: -3.16802716255188
    3. ' )' → logprob: -11.6680269241333
    4. '       ' → logprob: -12.0430269241333
    5. ')
' → logprob: -12.2930269241333
    6. '   ' → logprob: -12.6680269241333
    7. '<|end|>' → logprob: -13.2930269241333
    8. ' )
' → logprob: -13.7930269241333
    9. '[' → logprob: -13.7930269241333
    10. ')

' → logprob: -14.0430269241333

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18269221484661102
    2. '<|end|>' → logprob: -1.8076921701431274
    3. '<|end|>' → logprob: -7.307692050933838
    4. '	pl' → logprob: -7.807692050933838
    5. 'pl' → logprob: -7.932692050933838
    6. '   ' → logprob: -8.182692527770996
    7. '        ' → logprob: -8.182692527770996
    8. ' pl' → logprob: -9.057692527770996
    9. ' ' → logprob: -9.432692527770996
    10. '      ' → logprob: -9.432692527770996

Token 769: ' pw' (ID: 24359)
  Prédit: 'pw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pw' (adapté à ' pw') → logprob: -0.0015060516307130456
    2. ' pw' → logprob: -6.5015058517456055
    3. '   ' → logprob: -13.126505851745605
    4. '	pw' → logprob: -13.751505851745605
    5. '
' → logprob: -15.126505851745605
    6. '       ' → logprob: -15.876505851745605
    7. ' ' → logprob: -16.501506805419922
    8. 'p' → logprob: -16.751506805419922
    9. 'pattern' → logprob: -17.001506805419922
    10. 'px' → logprob: -17.251506805419922

Token 770: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '=len' → logprob: -16.413042068481445
    4. '   ' → logprob: -17.038042068481445
    5. ' ' → logprob: -17.163042068481445
    6. '    ' → logprob: -18.038042068481445
    7. '=
' → logprob: -18.163042068481445
    8. 'p' → logprob: -18.538042068481445
    9. '=p' → logprob: -18.663042068481445
    10. ')' → logprob: -18.663042068481445

Token 771: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0015023599844425917
    2. ' len' → logprob: -6.501502513885498
    3. '(len' → logprob: -17.626502990722656
    4. 'max' → logprob: -17.626502990722656
    5. '[len' → logprob: -19.626502990722656
    6. '   ' → logprob: -21.501502990722656
    7. '	len' → logprob: -21.501502990722656
    8. '=len' → logprob: -22.001502990722656
    9. ' ' → logprob: -22.126502990722656
    10. '0' → logprob: -22.501502990722656

Token 772: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -3.4121114822482923e-06
    2. 'pattern' → logprob: -12.625003814697266
    3. '(' → logprob: -16.750003814697266
    4. ' (' → logprob: -19.750003814697266
    5. ' pattern' → logprob: -20.125003814697266
    6. '(prompt' → logprob: -22.500003814697266
    7. '(
' → logprob: -22.500003814697266
    8. '.pattern' → logprob: -22.625003814697266
    9. '[' → logprob: -22.750003814697266
    10. '(p' → logprob: -23.250003814697266

Token 773: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00028410006780177355
    2. '(pattern' → logprob: -8.250284194946289
    3. 'pattern' → logprob: -10.750284194946289
    4. ')' → logprob: -13.750284194946289
    5. '(' → logprob: -16.00028419494629
    6. '   ' → logprob: -16.75028419494629
    7. '.pattern' → logprob: -16.75028419494629
    8. ' pattern' → logprob: -17.00028419494629
    9. '(ph' → logprob: -18.50028419494629
    10. '```' → logprob: -18.50028419494629

Token 774: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -12.000011444091797
    3. '[' → logprob: -12.375011444091797
    4. '   ' → logprob: -14.875011444091797
    5. 'ph' → logprob: -15.125011444091797
    6. ')' → logprob: -15.375011444091797
    7. '۰' → logprob: -16.937511444091797
    8. '(' → logprob: -17.062511444091797
    9. 'pattern' → logprob: -17.375011444091797
    10. '
' → logprob: -17.375011444091797

Token 775: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0002470350591465831
    2. '])
' → logprob: -8.62524700164795
    3. ' ])' → logprob: -9.87524700164795
    4. ')' → logprob: -11.50024700164795
    5. ''])' → logprob: -13.25024700164795
    6. ']' → logprob: -13.75024700164795
    7. '])]' → logprob: -14.12524700164795
    8. ')])' → logprob: -14.50024700164795
    9. ']);' → logprob: -15.00024700164795
    10. '])-' → logprob: -15.25024700164795

Token 776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003352140076458454
    2. ' for' → logprob: -6.628352165222168
    3. '<|end|>' → logprob: -7.378352165222168
    4. ' if' → logprob: -7.628352165222168
    5. '   ' → logprob: -7.878352165222168
    6. '
' → logprob: -8.753352165222168
    7. '        
' → logprob: -9.128352165222168
    8. ' ' → logprob: -10.003352165222168
    9. ' 
' → logprob: -10.503352165222168
    10. '        ' → logprob: -10.753352165222168

Token 777: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.29082173109054565
    2. 'for' → logprob: -1.5408217906951904
    3. ' if' → logprob: -4.040821552276611
    4. '       ' → logprob: -4.165821552276611
    5. ' for' → logprob: -5.290821552276611
    6. 'h' → logprob: -13.66582202911377
    7. 'height' → logprob: -13.66582202911377
    8. 'return' → logprob: -13.66582202911377
    9. '   ' → logprob: -13.79082202911377
    10. 'x' → logprob: -14.16582202911377

Token 778: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.5849562287330627
    2. '(ph' → logprob: -1.209956169128418
    3. 'max' → logprob: -2.459956169128418
    4. 'ph' → logprob: -3.709956169128418
    5. ' (' → logprob: -3.959956169128418
    6. '(p' → logprob: -4.584956169128418
    7. '(' → logprob: -5.584956169128418
    8. ' max' → logprob: -6.959956169128418
    9. ' ph' → logprob: -8.709956169128418
    10. '(h' → logprob: -9.084956169128418

Token 779: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3528549373149872
    2. '(max' → logprob: -1.2278549671173096
    3. '(' → logprob: -6.1028547286987305
    4. '(ph' → logprob: -6.9778547286987305
    5. '(p' → logprob: -7.2278547286987305
    6. 'ph' → logprob: -8.35285472869873
    7. ' (' → logprob: -8.97785472869873
    8. ' max' → logprob: -10.60285472869873
    9. '((' → logprob: -10.60285472869873
    10. '(w' → logprob: -10.85285472869873

Token 780: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.0219828002154827e-05
    2. 'x' → logprob: -11.125020027160645
    3. '_y' → logprob: -12.250020027160645
    4. '_' → logprob: -14.750020027160645
    5. 'X' → logprob: -16.00002098083496
    6. ')' → logprob: -17.50002098083496
    7. '```' → logprob: -17.75002098083496
    8. '   ' → logprob: -18.25002098083496
    9. '[' → logprob: -18.56252098083496
    10. ' -' → logprob: -18.81252098083496

Token 781: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20149607956409454
    2. '-' → logprob: -1.7014961242675781
    3. '-min' → logprob: -9.451496124267578
    4. ' ' → logprob: -13.451496124267578
    5. '<' → logprob: -14.451496124267578
    6. ' <' → logprob: -14.451496124267578
    7. '   ' → logprob: -14.951496124267578
    8. ',' → logprob: -14.951496124267578
    9. '<|end|>' → logprob: -16.076496124267578
    10. '+' → logprob: -16.201496124267578

Token 782: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0031777136027812958
    2. ' min' → logprob: -5.753177642822266
    3. 'max' → logprob: -19.503177642822266
    4. '(min' → logprob: -19.628177642822266
    5. '	min' → logprob: -19.878177642822266
    6. '_min' → logprob: -20.253177642822266
    7. '-min' → logprob: -20.753177642822266
    8. 'm' → logprob: -21.003177642822266
    9. ' ' → logprob: -21.003177642822266
    10. 'mi' → logprob: -21.128177642822266

Token 783: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0001093841710826382
    2. 'x' → logprob: -9.125109672546387
    3. '_' → logprob: -15.125109672546387
    4. '_y' → logprob: -16.37510871887207
    5. ')' → logprob: -16.62510871887207
    6. '<|end|>' → logprob: -19.12510871887207
    7. '[' → logprob: -19.37510871887207
    8. '_)' → logprob: -19.37510871887207
    9. ' x' → logprob: -19.75010871887207
    10. ')_' → logprob: -19.87510871887207

Token 784: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09166762977838516
    2. ' +' → logprob: -2.466667652130127
    3. ')' → logprob: -6.341667652130127
    4. '!=' → logprob: -7.466667652130127
    5. ')!=' → logprob: -8.716667175292969
    6. ' !=' → logprob: -8.841667175292969
    7. ')+' → logprob: -9.466667175292969
    8. '   ' → logprob: -12.841667175292969
    9. ' ' → logprob: -14.591667175292969
    10. '+)' → logprob: -14.841667175292969

Token 785: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001709209755063057
    2. ' ' → logprob: -6.376708984375
    3. ')' → logprob: -11.876708984375
    4. '```' → logprob: -16.501708984375
    5. ' )' → logprob: -17.376708984375
    6. '0' → logprob: -17.751708984375
    7. '   ' → logprob: -18.001708984375
    8. '=' → logprob: -18.501708984375
    9. '  ' → logprob: -18.626708984375
    10. '<|end|>' → logprob: -19.814208984375

Token 786: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022117885237094015
    2. ' ' → logprob: -8.500221252441406
    3. ')' → logprob: -11.000221252441406
    4. '   ' → logprob: -15.687721252441406
    5. '0' → logprob: -15.750221252441406
    6. ' )' → logprob: -15.937721252441406
    7. '```' → logprob: -16.187721252441406
    8. '=' → logprob: -16.437721252441406
    9. '  ' → logprob: -17.187721252441406
    10. '}' → logprob: -17.812721252441406

Token 787: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05535881593823433
    2. '!=' → logprob: -3.55535888671875
    3. ')!=' → logprob: -3.80535888671875
    4. ' !=' → logprob: -5.80535888671875
    5. ' )' → logprob: -11.30535888671875
    6. '==' → logprob: -12.68035888671875
    7. ')==' → logprob: -13.93035888671875
    8. ')<' → logprob: -13.93035888671875
    9. ')!' → logprob: -14.30535888671875
    10. ']!=' → logprob: -14.43035888671875

Token 788: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07890035957098007
    2. ' !=' → logprob: -2.5789003372192383
    3. '<' → logprob: -12.453900337219238
    4. '()!=' → logprob: -12.828900337219238
    5. '==' → logprob: -13.328900337219238
    6. ')!=' → logprob: -13.828900337219238
    7. '>' → logprob: -14.578900337219238
    8. '!=(' → logprob: -15.578900337219238
    9. '```' → logprob: -15.828900337219238
    10. ']!=' → logprob: -16.328901290893555

Token 789: ' pw' (ID: 24359)
  Prédit: 'pw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pw' → logprob: -0.018166683614253998
    2. ' pw' → logprob: -4.018166542053223
    3. '	pw' → logprob: -11.018166542053223
    4. '_pw' → logprob: -15.143166542053223
    5. '   ' → logprob: -17.01816749572754
    6. 'Pw' → logprob: -17.14316749572754
    7. ' ' → logprob: -17.51816749572754
    8. 'p' → logprob: -19.01816749572754
    9. 'PW' → logprob: -19.39316749572754
    10. '  ' → logprob: -20.01816749572754

Token 790: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008209572173655033
    2. 'or' → logprob: -4.883209705352783
    3. ' and' → logprob: -7.883209705352783
    4. 'and' → logprob: -9.008209228515625
    5. ':' → logprob: -9.383209228515625
    6. '       ' → logprob: -12.633209228515625
    7. '   ' → logprob: -12.758209228515625
    8. ' ' → logprob: -12.758209228515625
    9. ':return' → logprob: -12.758209228515625
    10. '<|end|>' → logprob: -13.008209228515625

Token 791: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0624222606420517
    2. ' (' → logprob: -2.812422275543213
    3. '   ' → logprob: -8.062421798706055
    4. '(len' → logprob: -9.437421798706055
    5. '       ' → logprob: -10.562421798706055
    6. ' ' → logprob: -11.437421798706055
    7. '(ph' → logprob: -11.687421798706055
    8. '(' → logprob: -11.812421798706055
    9. '  ' → logprob: -13.187421798706055
    10. '           ' → logprob: -14.062421798706055

Token 792: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00011772842844948173
    2. ' max' → logprob: -9.625117301940918
    3. '(max' → logprob: -9.875117301940918
    4. '	max' → logprob: -17.000118255615234
    5. '
' → logprob: -17.500118255615234
    6. ' (' → logprob: -17.625118255615234
    7. '[max' → logprob: -17.625118255615234
    8. '   ' → logprob: -18.000118255615234
    9. ' ' → logprob: -18.000118255615234
    10. '_max' → logprob: -18.625118255615234

Token 793: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00033593899570405483
    2. 'y' → logprob: -8.000335693359375
    3. 'Y' → logprob: -15.375335693359375
    4. '(y' → logprob: -16.250335693359375
    5. '_x' → logprob: -17.125335693359375
    6. '-y' → logprob: -17.500335693359375
    7. '_' → logprob: -18.000335693359375
    8. '   ' → logprob: -18.125335693359375
    9. 'max' → logprob: -18.250335693359375
    10. '
' → logprob: -18.250335693359375

Token 794: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06997622549533844
    2. '-' → logprob: -2.694976329803467
    3. '<|end|>' → logprob: -10.194975852966309
    4. '<|end|>' → logprob: -13.194975852966309
    5. ' ' → logprob: -15.319975852966309
    6. '```' → logprob: -16.319976806640625
    7. ')' → logprob: -16.319976806640625
    8. ',' → logprob: -17.069976806640625
    9. '[' → logprob: -17.319976806640625
    10. '...' → logprob: -17.444976806640625

Token 795: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015031944494694471
    2. ' min' → logprob: -6.501502990722656
    3. '(min' → logprob: -14.626502990722656
    4. '[min' → logprob: -15.376502990722656
    5. '_min' → logprob: -15.876502990722656
    6. '	min' → logprob: -18.376502990722656
    7. '=min' → logprob: -19.001502990722656
    8. '-min' → logprob: -19.251502990722656
    9. 'max' → logprob: -19.626502990722656
    10. 'Min' → logprob: -19.626502990722656

Token 796: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.02786894701421261
    2. 'y' → logprob: -3.6528689861297607
    3. 'min' → logprob: -6.652868747711182
    4. '(min' → logprob: -9.40286922454834
    5. 'x' → logprob: -9.90286922454834
    6. '_x' → logprob: -10.27786922454834
    7. '1' → logprob: -10.90286922454834
    8. '_min' → logprob: -11.65286922454834
    9. 'Y' → logprob: -11.65286922454834
    10. '+' → logprob: -11.77786922454834

Token 797: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141568779945374
    2. '+' → logprob: -1.7014156579971313
    3. ' -' → logprob: -13.326416015625
    4. '<|end|>' → logprob: -14.576416015625
    5. '-' → logprob: -15.701416015625
    6. ' +
' → logprob: -17.076416015625
    7. '<|end|>' → logprob: -17.201416015625
    8. '()+' → logprob: -17.201416015625
    9. '[' → logprob: -18.076416015625
    10. ')' → logprob: -18.201416015625

Token 798: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. ')' → logprob: -16.25009536743164
    4. '   ' → logprob: -17.62509536743164
    5. '+' → logprob: -17.87509536743164
    6. '```' → logprob: -18.37509536743164
    7. '<|end|>' → logprob: -18.75009536743164
    8. '۱' → logprob: -19.56259536743164
    9. '(' → logprob: -19.87509536743164
    10. '
' → logprob: -20.06259536743164

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -16.125015258789062
    4. '   ' → logprob: -16.562515258789062
    5. '
' → logprob: -17.437515258789062
    6. '+' → logprob: -17.500015258789062
    7. '```' → logprob: -17.500015258789062
    8. '{' → logprob: -17.562515258789062
    9. '[' → logprob: -17.625015258789062
    10. '2' → logprob: -18.000015258789062

Token 800: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07395683228969574
    2. ')!=' → logprob: -2.8239567279815674
    3. ' !=' → logprob: -5.1989569664001465
    4. '!=' → logprob: -5.1989569664001465
    5. '<|end|>' → logprob: -7.3239569664001465
    6. ']!=' → logprob: -9.698956489562988
    7. '<|end|>' → logprob: -10.073956489562988
    8. ' )' → logprob: -10.323956489562988
    9. '()!=' → logprob: -10.823956489562988
    10. '}' → logprob: -11.073956489562988

Token 801: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.47576040029525757
    2. ' !=' → logprob: -0.9757604002952576
    3. ')!=' → logprob: -6.600760459899902
    4. ')' → logprob: -9.100760459899902
    5. '()!=' → logprob: -9.475760459899902
    6. ']!=' → logprob: -9.850760459899902
    7. '!=(' → logprob: -10.350760459899902
    8. '<|end|>' → logprob: -10.725760459899902
    9. '!' → logprob: -11.975760459899902
    10. '   ' → logprob: -12.600760459899902

Token 802: ' ph' (ID: 1391)
  Prédit: 'ph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ph' → logprob: -0.0002615742268972099
    2. ' ph' → logprob: -8.250261306762695
    3. '(ph' → logprob: -15.375261306762695
    4. 'phas' → logprob: -19.000261306762695
    5. 'Ph' → logprob: -19.125261306762695
    6. 'php' → logprob: -19.500261306762695
    7. '_ph' → logprob: -20.000261306762695
    8. '.ph' → logprob: -20.125261306762695
    9. 'phil' → logprob: -20.250261306762695
    10. 'phal' → logprob: -20.625261306762695

Token 803: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.234763041138649
    2. ':
' → logprob: -1.6097630262374878
    3. ':return' → logprob: -5.109763145446777
    4. '       ' → logprob: -6.484763145446777
    5. ' or' → logprob: -7.109763145446777
    6. '):
' → logprob: -8.109763145446777
    7. '   ' → logprob: -8.484763145446777
    8. '):' → logprob: -8.984763145446777
    9. '           ' → logprob: -9.359763145446777
    10. ')' → logprob: -9.734763145446777

Token 804: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1801517903804779
    2. '           ' → logprob: -1.8051518201828003
    3. ':' → logprob: -8.43015193939209
    4. ' return' → logprob: -9.68015193939209
    5. '   ' → logprob: -10.05515193939209
    6. 'return' → logprob: -10.68015193939209
    7. ':return' → logprob: -10.80515193939209
    8. '               ' → logprob: -11.05515193939209
    9. '<|end|>' → logprob: -12.93015193939209
    10. '	   ' → logprob: -13.05515193939209

Token 805: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007910624146461487
    2. '           ' → logprob: -5.00791072845459
    3. ' return' → logprob: -6.75791072845459
    4. 'False' → logprob: -10.63291072845459
    5. '   ' → logprob: -12.25791072845459
    6. '       ' → logprob: -13.13291072845459
    7. '
' → logprob: -14.50791072845459
    8. '	return' → logprob: -14.63291072845459
    9. '               ' → logprob: -14.75791072845459
    10. '{return' → logprob: -15.25791072845459

Token 806: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.615255839889869e-05
    2. ' False' → logprob: -9.250096321105957
    3. '(False' → logprob: -20.62509536743164
    4. 'false' → logprob: -21.75009536743164
    5. '   ' → logprob: -23.00009536743164
    6. 'True' → logprob: -23.37509536743164
    7. '=False' → logprob: -24.62509536743164
    8. 'F' → logprob: -24.87509536743164
    9. 'FALSE' → logprob: -25.75009536743164
    10. '_false' → logprob: -25.87509536743164

Token 807: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 808: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07199715077877045
    2. '
' → logprob: -2.8219971656799316
    3. ' 
' → logprob: -5.821997165679932
    4. '        
' → logprob: -5.821997165679932
    5. '  
' → logprob: -6.821997165679932
    6. '<|end|>' → logprob: -7.071997165679932
    7. '    
' → logprob: -7.571997165679932
    8. '   ' → logprob: -7.821997165679932
    9. ' for' → logprob: -8.196996688842773
    10. '\n' → logprob: -8.696996688842773

Token 809: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07694987207651138
    2. ' for' → logprob: -2.9519498348236084
    3. '       ' → logprob: -3.8269498348236084
    4. '   ' → logprob: -10.701950073242188
    5. '	for' → logprob: -10.826950073242188
    6. '```' → logprob: -13.201950073242188
    7. 'y' → logprob: -13.701950073242188
    8. 'x' → logprob: -13.951950073242188
    9. '        
' → logprob: -14.326950073242188
    10. '#' → logprob: -14.951950073242188

Token 810: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.016868801787495613
    2. 'py' → logprob: -4.641868591308594
    3. 'y' → logprob: -5.516868591308594
    4. 'row' → logprob: -6.141868591308594
    5. 'i' → logprob: -7.641868591308594
    6. ' dy' → logprob: -8.266868591308594
    7. 'iy' → logprob: -9.766868591308594
    8. 'j' → logprob: -10.141868591308594
    9. 'r' → logprob: -10.516868591308594
    10. 'rel' → logprob: -11.266868591308594

Token 811: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890939712524414
    2. 'in' → logprob: -2.578909397125244
    3. ',' → logprob: -11.203908920288086
    4. ' ' → logprob: -12.953908920288086
    5. '	in' → logprob: -13.453908920288086
    6. '<|end|>' → logprob: -13.578908920288086
    7. ' ,' → logprob: -16.203908920288086
    8. '```' → logprob: -16.203908920288086
    9. '_in' → logprob: -16.203908920288086
    10. '   ' → logprob: -16.578908920288086

Token 812: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. ' ' → logprob: -19.376928329467773
    4. '   ' → logprob: -19.376928329467773
    5. '	range' → logprob: -19.626928329467773
    6. '(range' → logprob: -19.751928329467773
    7. '```' → logprob: -20.751928329467773
    8. 'r' → logprob: -22.251928329467773
    9. '
' → logprob: -22.251928329467773
    10. 'ph' → logprob: -22.376928329467773

Token 813: '(ph' (ID: 130798)
  Prédit: 'ph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ph' → logprob: -0.0009392123320139945
    2. '(ph' → logprob: -7.00093936920166
    3. ' ph' → logprob: -10.50093936920166
    4. 'len' → logprob: -16.875938415527344
    5. '   ' → logprob: -17.125938415527344
    6. '_ph' → logprob: -17.625938415527344
    7. 'phal' → logprob: -18.250938415527344
    8. '(' → logprob: -18.625938415527344
    9. '.ph' → logprob: -18.875938415527344
    10. 'py' → logprob: -18.875938415527344

Token 814: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0338381789624691
    2. '):' → logprob: -3.4088382720947266
    3. '       ' → logprob: -9.658838272094727
    4. '):
' → logprob: -9.658838272094727
    5. '   ' → logprob: -10.158838272094727
    6. ':' → logprob: -10.908838272094727
    7. ':
' → logprob: -12.908838272094727
    8. ')' → logprob: -13.408838272094727
    9. '):

' → logprob: -13.658838272094727
    10. '           ' → logprob: -14.283838272094727

Token 815: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12335678189992905
    2. '<|end|>' → logprob: -2.248356819152832
    3. '           ' → logprob: -5.498356819152832
    4. ' ' → logprob: -6.123356819152832
    5. '        ' → logprob: -6.748356819152832
    6. ' for' → logprob: -6.998356819152832
    7. '<|end|>' → logprob: -7.373356819152832
    8. '   ' → logprob: -7.748356819152832
    9. '	       ' → logprob: -7.873356819152832
    10. '               ' → logprob: -8.998356819152832

Token 816: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12797366082668304
    2. ' for' → logprob: -2.1279735565185547
    3. '           ' → logprob: -6.877973556518555
    4. '       ' → logprob: -11.877973556518555
    5. 'min' → logprob: -12.877973556518555
    6. '   ' → logprob: -13.127973556518555
    7. '               ' → logprob: -13.252973556518555
    8. '	for' → logprob: -14.377973556518555
    9. '_for' → logprob: -15.627973556518555
    10. ' ' → logprob: -15.627973556518555

Token 817: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -3.8889261304575484e-06
    2. ' dx' → logprob: -12.500003814697266
    3. '(dx' → logprob: -16.125003814697266
    4. 'px' → logprob: -16.875003814697266
    5. '_dx' → logprob: -18.875003814697266
    6. '.dx' → logprob: -19.625003814697266
    7. 'adx' → logprob: -20.625003814697266
    8. '```' → logprob: -21.500003814697266
    9. '   ' → logprob: -21.750003814697266
    10. '`' → logprob: -21.750003814697266

Token 818: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10020893067121506
    2. 'in' → logprob: -2.3502089977264404
    3. ' ' → logprob: -14.22520923614502
    4. '<|end|>' → logprob: -14.60020923614502
    5. '	in' → logprob: -15.22520923614502
    6. ',' → logprob: -15.60020923614502
    7. '1' → logprob: -15.85020923614502
    8. '   ' → logprob: -16.225208282470703
    9. '    ' → logprob: -16.975208282470703
    10. '0' → logprob: -16.975208282470703

Token 819: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004316418431699276
    2. ' range' → logprob: -5.504316329956055
    3. 'len' → logprob: -8.379316329956055
    4. 'pw' → logprob: -12.004316329956055
    5. ' len' → logprob: -14.004316329956055
    6. ' pw' → logprob: -14.504316329956055
    7. '(range' → logprob: -15.004316329956055
    8. ' ' → logprob: -15.004316329956055
    9. '   ' → logprob: -16.754316329956055
    10. '
' → logprob: -16.754316329956055

Token 820: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.5120287066092715e-05
    2. '(len' → logprob: -10.500035285949707
    3. 'pw' → logprob: -12.500035285949707
    4. '	pw' → logprob: -12.625035285949707
    5. 'len' → logprob: -15.250035285949707
    6. '(' → logprob: -15.875035285949707
    7. '   ' → logprob: -16.37503433227539
    8. '       ' → logprob: -17.37503433227539
    9. '<p' → logprob: -17.50003433227539
    10. ' (' → logprob: -17.75003433227539

Token 821: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0020709214732050896
    2. 'd' → logprob: -7.252070903778076
    3. 'dy' → logprob: -8.252071380615234
    4. 'y' → logprob: -8.752071380615234
    5. 'wd' → logprob: -8.752071380615234
    6. 'dx' → logprob: -9.002071380615234
    7. 'x' → logprob: -9.002071380615234
    8. ')' → logprob: -9.002071380615234
    9. 'ph' → logprob: -9.627071380615234
    10. 'dw' → logprob: -9.627071380615234

Token 822: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2534525990486145
    2. '):' → logprob: -1.5034525394439697
    3. '):
' → logprob: -7.753452777862549
    4. ':' → logprob: -8.12845230102539
    5. '<|end|>' → logprob: -8.62845230102539
    6. '           ' → logprob: -8.75345230102539
    7. ')' → logprob: -9.25345230102539
    8. '       ' → logprob: -9.25345230102539
    9. '               ' → logprob: -9.37845230102539
    10. ',' → logprob: -10.12845230102539

Token 823: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09900274872779846
    2. '           ' → logprob: -2.8490028381347656
    3. '<|end|>' → logprob: -3.3490028381347656
    4. '<|end|>' → logprob: -7.974002838134766
    5. '       ' → logprob: -8.724002838134766
    6. ' ' → logprob: -9.099002838134766
    7. '            ' → logprob: -9.349002838134766
    8. ' if' → logprob: -9.474002838134766
    9. '                       ' → logprob: -9.474002838134766
    10. '              ' → logprob: -9.599002838134766

Token 824: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1410364955663681
    2. ' if' → logprob: -2.6410365104675293
    3. 'expected' → logprob: -3.2660365104675293
    4. '               ' → logprob: -4.516036510467529
    5. 'p' (adapté à ' p') → logprob: -5.266036510467529
    6. '                   ' → logprob: -6.266036510467529
    7. '           ' → logprob: -6.641036510467529
    8. ' expected' → logprob: -7.016036510467529
    9. 'point' → logprob: -7.516036510467529
    10. 'pt' → logprob: -8.016036033630371

Token 825: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15278635919094086
    2. '=' → logprob: -2.0277862548828125
    3. 'oint' → logprob: -4.9027862548828125
    4. 'oints' → logprob: -6.7777862548828125
    5. 't' → logprob: -7.6527862548828125
    6. 'x' → logprob: -8.027786254882812
    7. ':' → logprob: -9.652786254882812
    8. '           ' → logprob: -9.652786254882812
    9. 'in' → logprob: -10.152786254882812
    10. 'osition' → logprob: -10.277786254882812

Token 826: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.620622712536715e-05
    2. ' Point' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.625045776367188
    4. '	Point' → logprob: -16.250045776367188
    5. '(Point' → logprob: -16.375045776367188
    6. '  ' → logprob: -17.875045776367188
    7. '    ' → logprob: -17.875045776367188
    8. '       ' → logprob: -18.000045776367188
    9. '           ' → logprob: -18.125045776367188
    10. ' ' → logprob: -18.750045776367188

Token 827: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0052392068319022655
    2. 'min' → logprob: -5.255239009857178
    3. '(' → logprob: -12.880239486694336
    4. '[min' → logprob: -13.255239486694336
    5. '(dx' → logprob: -15.505239486694336
    6. '	min' → logprob: -15.755239486694336
    7. '   ' → logprob: -15.755239486694336
    8. '```' → logprob: -15.755239486694336
    9. ' min' → logprob: -16.005239486694336
    10. ' (' → logprob: -16.255239486694336

Token 828: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0013276183744892478
    2. 'x' → logprob: -6.6263275146484375
    3. '(x' → logprob: -14.626327514648438
    4. '<|end|>' → logprob: -15.251327514648438
    5. '[' → logprob: -15.751327514648438
    6. '_' → logprob: -16.001327514648438
    7. '{x' → logprob: -16.251327514648438
    8. '<|end|>' → logprob: -16.376327514648438
    9. '```' → logprob: -16.626327514648438
    10. '	x' → logprob: -16.876327514648438

Token 829: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2811860740184784
    2. ' +' → logprob: -1.4061861038208008
    3. ',' → logprob: -10.4061861038208
    4. '+x' → logprob: -13.0311861038208
    5. '+,' → logprob: -13.7811861038208
    6. '```' → logprob: -14.2811861038208
    7. '+d' → logprob: -15.1561861038208
    8. ' ' → logprob: -15.5311861038208
    9. 'dx' → logprob: -15.6561861038208
    10. ' ,' → logprob: -15.9061861038208

Token 830: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00018244501552544534
    2. ' dx' → logprob: -8.625182151794434
    3. '(dx' → logprob: -13.875182151794434
    4. 'x' → logprob: -14.125182151794434
    5. '.dx' → logprob: -14.500182151794434
    6. '_dx' → logprob: -14.625182151794434
    7. '   ' → logprob: -15.875182151794434
    8. 'd' → logprob: -17.00018310546875
    9. '```' → logprob: -17.37518310546875
    10. '       ' → logprob: -17.50018310546875

Token 831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.941161776310764e-05
    2. ' ,' → logprob: -10.250039100646973
    3. ',min' → logprob: -13.375039100646973
    4. ',p' → logprob: -14.125039100646973
    5. ',y' → logprob: -14.625039100646973
    6. ',
' → logprob: -14.625039100646973
    7. ',max' → logprob: -15.375039100646973
    8. '   ' → logprob: -15.875039100646973
    9. ',m' → logprob: -16.37504005432129
    10. '```' → logprob: -16.87504005432129

Token 832: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.688212614681106e-05
    2. ' min' → logprob: -11.000017166137695
    3. 'max' → logprob: -16.000017166137695
    4. '(min' → logprob: -20.375017166137695
    5. '[min' → logprob: -20.375017166137695
    6. '	min' → logprob: -21.625017166137695
    7. '   ' → logprob: -21.875017166137695
    8. 'm' → logprob: -21.875017166137695
    9. '_min' → logprob: -23.125017166137695
    10. 'mini' → logprob: -23.875017166137695

Token 833: '_y' (ID: 9410)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931530237197876
    2. '_y' → logprob: -0.6931530237197876
    3. 'Y' → logprob: -13.443153381347656
    4. '	y' → logprob: -13.818153381347656
    5. '(y' → logprob: -14.193153381347656
    6. '```' → logprob: -15.068153381347656
    7. 'yj' → logprob: -15.318153381347656
    8. '\' → logprob: -15.318153381347656
    9. 'ay' → logprob: -15.568153381347656
    10. 'iy' → logprob: -15.943153381347656

Token 834: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693149983882904
    2. ' +' → logprob: -0.693149983882904
    3. ')' → logprob: -13.69314956665039
    4. '+y' → logprob: -14.94314956665039
    5. '()+' → logprob: -15.06814956665039
    6. '+
' → logprob: -15.56814956665039
    7. '+)' → logprob: -15.69314956665039
    8. '[' → logprob: -16.06814956665039
    9. ')+' → logprob: -16.56814956665039
    10. '```' → logprob: -16.69314956665039

Token 835: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00014048899174667895
    2. ' dy' → logprob: -8.875140190124512
    3. 'y' → logprob: -15.375140190124512
    4. '.dy' → logprob: -16.250141143798828
    5. '   ' → logprob: -16.875141143798828
    6. 'd' → logprob: -17.000141143798828
    7. ' ' → logprob: -17.250141143798828
    8. '
' → logprob: -18.125141143798828
    9. 'dym' → logprob: -18.250141143798828
    10. 'Dy' → logprob: -18.375141143798828

Token 836: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760791301727295
    2. ')
' → logprob: -0.8260791301727295
    3. ')
' → logprob: -9.826079368591309
    4. '               ' → logprob: -10.201079368591309
    5. '           ' → logprob: -10.701079368591309
    6. ')

' → logprob: -12.076079368591309
    7. ' )
' → logprob: -12.576079368591309
    8. '       ' → logprob: -12.701079368591309
    9. '):
' → logprob: -13.076079368591309
    10. '                   ' → logprob: -13.076079368591309

Token 837: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017307489179074764
    2. ' if' → logprob: -6.626730918884277
    3. '<|end|>' → logprob: -8.751730918884277
    4. 'if' → logprob: -10.001730918884277
    5. '                
' → logprob: -10.126730918884277
    6. '<|end|>' → logprob: -10.251730918884277
    7. '           ' → logprob: -10.501730918884277
    8. ' has' → logprob: -11.251730918884277
    9. ',' → logprob: -11.376730918884277
    10. '                ' → logprob: -11.626730918884277

Token 838: ' should' (ID: 1757)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07634603977203369
    2. 'if' → logprob: -3.076345920562744
    3. 'is' → logprob: -4.451345920562744
    4. 'in' → logprob: -4.951345920562744
    5. 'has' → logprob: -6.201345920562744
    6. 'marked' → logprob: -6.826345920562744
    7. 'point' → logprob: -7.076345920562744
    8. ' if' → logprob: -7.201345920562744
    9. 'expected' → logprob: -7.201345920562744
    10. '           ' → logprob: -7.326345920562744

Token 839: '_be' (ID: 40729)
  Prédit: '_be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_be' → logprob: -0.2992342412471771
    2. '_have' → logprob: -1.4242342710494995
    3. '_match' → logprob: -5.049234390258789
    4. 'be' → logprob: -5.174234390258789
    5. '_' → logprob: -6.174234390258789
    6. '_mark' → logprob: -6.549234390258789
    7. '_fill' → logprob: -7.424234390258789
    8. 'have' → logprob: -7.549234390258789
    9. '_cont' → logprob: -7.799234390258789
    10. '_exist' → logprob: -7.924234390258789

Token 840: '_black' (ID: 92024)
  Prédit: '_mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mark' → logprob: -0.021213890984654427
    2. 'marked' → logprob: -4.771214008331299
    3. ' =' → logprob: -5.396214008331299
    4. '_' → logprob: -5.521214008331299
    5. '=' → logprob: -6.271214008331299
    6. '_present' → logprob: -7.271214008331299
    7. '_f' → logprob: -7.771214008331299
    8. 'Marked' → logprob: -8.39621353149414
    9. '=True' → logprob: -8.77121353149414
    10. '_p' → logprob: -9.14621353149414

Token 841: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815216802060604
    2. ' =' → logprob: -4.018152236938477
    3. '=True' → logprob: -13.143152236938477
    4. '=False' → logprob: -16.143152236938477
    5. ':' → logprob: -17.018152236938477
    6. '=
' → logprob: -17.143152236938477
    7. ' ' → logprob: -17.268152236938477
    8. '   ' → logprob: -17.893152236938477
    9. '=

' → logprob: -17.893152236938477
    10. '=int' → logprob: -18.143152236938477

Token 842: ' (' (ID: 350)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.008003822527825832
    2. '(pattern' → logprob: -4.8830037117004395
    3. ' pattern' → logprob: -7.8830037117004395
    4. '               ' → logprob: -11.633004188537598
    5. '                   ' → logprob: -12.508004188537598
    6. ' (' → logprob: -12.883004188537598
    7. '           ' → logprob: -13.383004188537598
    8. '(p' → logprob: -13.758004188537598
    9. '   ' → logprob: -14.008004188537598
    10. '                       ' → logprob: -14.508004188537598

Token 843: 'pattern' (ID: 29563)
  Prédit: 'pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.00439035939052701
    2. 'p' → logprob: -5.504390239715576
    3. '(pattern' → logprob: -8.504390716552734
    4. ' pattern' → logprob: -10.004390716552734
    5. '(p' → logprob: -11.004390716552734
    6. '   ' → logprob: -11.004390716552734
    7. '(' → logprob: -12.379390716552734
    8. '1' → logprob: -12.504390716552734
    9. 'points' → logprob: -12.629390716552734
    10. 'point' → logprob: -12.754390716552734

Token 844: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.611323624383658e-05
    2. 'dy' → logprob: -10.750065803527832
    3. '[d' → logprob: -11.250065803527832
    4. '```' → logprob: -11.375065803527832
    5. ')[' → logprob: -12.625065803527832
    6. '[
' → logprob: -12.750065803527832
    7. '][' → logprob: -13.000065803527832
    8. ' dy' → logprob: -13.125065803527832
    9. '                           ' → logprob: -13.750065803527832
    10. '                       ' → logprob: -13.750065803527832

Token 845: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0161630529910326
    2. '[' → logprob: -4.141162872314453
    3. '][' → logprob: -10.141162872314453
    4. ' dy' → logprob: -10.641162872314453
    5. '   ' → logprob: -11.016162872314453
    6. ' ' → logprob: -11.891162872314453
    7. '```' → logprob: -11.891162872314453
    8. '0' → logprob: -12.141162872314453
    9. '[d' → logprob: -12.141162872314453
    10. 'd' → logprob: -12.641162872314453

Token 846: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4756166636943817
    2. '[' → logprob: -0.9756166934967041
    3. ')[' → logprob: -7.225616455078125
    4. ']' → logprob: -8.475616455078125
    5. 'dx' → logprob: -8.725616455078125
    6. '"][' → logprob: -8.975616455078125
    7. ')][' → logprob: -8.975616455078125
    8. ''][' → logprob: -9.850616455078125
    9. '[d' → logprob: -9.975616455078125
    10. ' ][' → logprob: -11.600616455078125

Token 847: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -6.2729995988775045e-06
    2. ' dx' → logprob: -12.250006675720215
    3. '(dx' → logprob: -14.375006675720215
    4. 'x' → logprob: -15.000006675720215
    5. '_dx' → logprob: -15.250006675720215
    6. '[' → logprob: -16.7500057220459
    7. '.dx' → logprob: -16.8750057220459
    8. '   ' → logprob: -17.1250057220459
    9. 'dp' → logprob: -17.7500057220459
    10. '
' → logprob: -17.8750057220459

Token 848: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3504607081413269
    2. '==' → logprob: -1.2254607677459717
    3. '=='' → logprob: -6.850460529327393
    4. ')' → logprob: -7.600460529327393
    5. '=' → logprob: -8.22546100616455
    6. ']' → logprob: -9.35046100616455
    7. ']==' → logprob: -9.97546100616455
    8. ')==' → logprob: -10.72546100616455
    9. ' =='' → logprob: -11.72546100616455
    10. ']=='' → logprob: -12.35046100616455

Token 849: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6365107893943787
    2. '==' → logprob: -0.7615107893943787
    3. '=='' → logprob: -5.636510848999023
    4. '=' → logprob: -8.261510848999023
    5. ')' → logprob: -10.386510848999023
    6. ' =='' → logprob: -11.261510848999023
    7. ')==' → logprob: -11.386510848999023
    8. '==
' → logprob: -12.011510848999023
    9. '=="' → logprob: -12.261510848999023
    10. '[' → logprob: -12.386510848999023

Token 850: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001559854601509869
    2. '"' → logprob: -6.626559734344482
    3. ' '' → logprob: -8.37656021118164
    4. '   ' → logprob: -13.87656021118164
    5. ''#' → logprob: -14.12656021118164
    6. '`' → logprob: -15.12656021118164
    7. '       ' → logprob: -15.75156021118164
    8. '‘' → logprob: -16.00156021118164
    9. '('' → logprob: -16.12656021118164
    10. ' "' → logprob: -16.12656021118164

Token 851: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ''' → logprob: -13.625000953674316
    3. ' ' → logprob: -17.750001907348633
    4. '#' → logprob: -19.000001907348633
    5. '')' → logprob: -19.250001907348633
    6. '"' → logprob: -20.250001907348633
    7. ''s' → logprob: -21.000001907348633
    8. ''#' → logprob: -21.000001907348633
    9. ''''' → logprob: -21.125001907348633
    10. '```' → logprob: -21.625001907348633

Token 852: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.8158559203147888
    2. ')' → logprob: -1.1908559799194336
    3. '')
' → logprob: -1.6908559799194336
    4. ')
' → logprob: -2.6908559799194336
    5. ')')
' → logprob: -7.815855979919434
    6. ''' → logprob: -8.065855979919434
    7. ' and' → logprob: -8.315855979919434
    8. ' ')
' → logprob: -8.690855979919434
    9. '')
' → logprob: -9.440855979919434
    10. '           ' → logprob: -9.940855979919434

Token 853: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003055493871215731
    2. '                
' → logprob: -8.62530517578125
    3. ',' → logprob: -10.50030517578125
    4. ' if' → logprob: -10.75030517578125
    5. ' and' → logprob: -11.00030517578125
    6. '<|end|>' → logprob: -11.00030517578125
    7. '       ' → logprob: -11.37530517578125
    8. '              ' → logprob: -11.75030517578125
    9. '           ' → logprob: -12.87530517578125
    10. '                ' → logprob: -12.87530517578125

Token 854: ' actual' (ID: 6290)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.12407022714614868
    2. 'if' → logprob: -2.249070167541504
    3. '       ' → logprob: -4.874070167541504
    4. 'actual' (adapté à ' actual') → logprob: -6.749070167541504
    5. 'has' → logprob: -6.749070167541504
    6. '                   ' → logprob: -8.124070167541504
    7. '               ' → logprob: -8.374070167541504
    8. 'actually' → logprob: -8.874070167541504
    9. '           ' → logprob: -8.999070167541504
    10. 'p' → logprob: -9.374070167541504

Token 855: '_black' (ID: 92024)
  Prédit: '_is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.8526881337165833
    2. '_mark' → logprob: -1.6026880741119385
    3. ' =' → logprob: -1.7276880741119385
    4. '_black' → logprob: -2.2276880741119385
    5. '=' → logprob: -3.7276880741119385
    6. '_has' → logprob: -3.8526880741119385
    7. '_in' → logprob: -4.602688312530518
    8. '_present' → logprob: -4.727688312530518
    9. '_' → logprob: -4.977688312530518
    10. '_be' → logprob: -5.727688312530518

Token 856: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020741820335388
    2. ' =' → logprob: -2.3502073287963867
    3. ':' → logprob: -15.475207328796387
    4. ' ' → logprob: -15.850207328796387
    5. '=True' → logprob: -15.850207328796387
    6. '   ' → logprob: -16.475208282470703
    7. '=(' → logprob: -16.600208282470703
    8. '=False' → logprob: -16.975208282470703
    9. '=is' → logprob: -17.350208282470703
    10. '=p' → logprob: -17.600208282470703

Token 857: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.47718560695648193
    2. '(p' → logprob: -0.9771856069564819
    3. '(Point' → logprob: -6.3521857261657715
    4. ' p' → logprob: -7.3521857261657715
    5. 'Point' → logprob: -8.477185249328613
    6. ' (' → logprob: -8.477185249328613
    7. '(' → logprob: -8.477185249328613
    8. '(points' → logprob: -10.477185249328613
    9. 'points' → logprob: -11.102185249328613
    10. 'point' → logprob: -11.977185249328613

Token 858: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00036168331280350685
    2. ' p' → logprob: -8.000361442565918
    3. 'Point' → logprob: -10.750361442565918
    4. '(p' → logprob: -13.375361442565918
    5. ')' → logprob: -14.750361442565918
    6. '
' → logprob: -15.000361442565918
    7. 'points' → logprob: -15.000361442565918
    8. '   ' → logprob: -15.250361442565918
    9. ' Point' → logprob: -15.250361442565918
    10. 'point' → logprob: -15.500361442565918

Token 859: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2811722159385681
    2. ' in' → logprob: -1.406172275543213
    3. ')' → logprob: -11.531171798706055
    4. '	in' → logprob: -12.781171798706055
    5. '
' → logprob: -12.906171798706055
    6. 'p' → logprob: -13.531171798706055
    7. 'n' → logprob: -13.906171798706055
    8. ' ' → logprob: -14.656171798706055
    9. ' p' → logprob: -14.781171798706055
    10. '   ' → logprob: -14.781171798706055

Token 860: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.001929228543303907
    2. ' points' → logprob: -6.25192928314209
    3. '(points' → logprob: -15.00192928314209
    4. '	points' → logprob: -15.50192928314209
    5. ')' → logprob: -16.751928329467773
    6. '.points' → logprob: -17.751928329467773
    7. '
' → logprob: -18.501928329467773
    8. 'point' → logprob: -19.001928329467773
    9. '   ' → logprob: -19.626928329467773
    10. '_points' → logprob: -19.626928329467773

Token 861: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026335015892982483
    2. ')
' → logprob: -4.0263352394104
    3. '               ' → logprob: -4.9013352394104
    4. ' )' → logprob: -7.6513352394104
    5. ' and' → logprob: -9.526334762573242
    6. ' )
' → logprob: -9.776334762573242
    7. '                   ' → logprob: -10.276334762573242
    8. '           ' → logprob: -11.151334762573242
    9. '                       ' → logprob: -11.526334762573242
    10. '                ' → logprob: -11.526334762573242

Token 862: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002546885749325156
    2. ' if' → logprob: -6.877546787261963
    3. '<|end|>' → logprob: -7.002546787261963
    4. ' and' → logprob: -7.752546787261963
    5. '                
' → logprob: -9.877547264099121
    6. '              ' → logprob: -10.627547264099121
    7. '                   ' → logprob: -10.752547264099121
    8. '                ' → logprob: -11.127547264099121
    9. '<|end|>' → logprob: -11.377547264099121
    10. '           ' → logprob: -12.127547264099121

Token 863: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15044665336608887
    2. '               ' → logprob: -2.150446653366089
    3. ' if' → logprob: -3.775446653366089
    4. '                   ' → logprob: -8.775446891784668
    5. '           ' → logprob: -8.900446891784668
    6. '              ' → logprob: -11.650446891784668
    7. '                       ' → logprob: -12.275446891784668
    8. '	if' → logprob: -13.025446891784668
    9. '	           ' → logprob: -13.275446891784668
    10. ';if' → logprob: -13.275446891784668

Token 864: ' should' (ID: 1757)
  Prédit: ' should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.3488052487373352
    2. 'should' → logprob: -1.2238051891326904
    3. ' actual' → logprob: -8.22380542755127
    4. 'actual' → logprob: -9.47380542755127
    5. '(' → logprob: -11.84880542755127
    6. '_should' → logprob: -12.34880542755127
    7. '.should' → logprob: -14.09880542755127
    8. ' ' → logprob: -14.09880542755127
    9. ' ' → logprob: -14.47380542755127
    10. '   ' → logprob: -14.91130542755127

Token 865: '_be' (ID: 40729)
  Prédit: '_be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_be' → logprob: -4.4849443838757e-06
    2. '_' → logprob: -13.000004768371582
    3. 'be' → logprob: -14.000004768371582
    4. '_not' → logprob: -14.750004768371582
    5. '_have' → logprob: -15.375004768371582
    6. '_should' → logprob: -15.625004768371582
    7. '_is' → logprob: -16.000003814697266
    8. 'Be' → logprob: -16.125003814697266
    9. ' be' → logprob: -17.125003814697266
    10. '_black' → logprob: -17.250003814697266

Token 866: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -0.2256995439529419
    2. 'black' → logprob: -1.600699543952942
    3. ' black' → logprob: -8.850699424743652
    4. 'not' → logprob: -10.475699424743652
    5. 'Black' → logprob: -10.600699424743652
    6. 'False' → logprob: -11.350699424743652
    7. '_false' → logprob: -11.725699424743652
    8. 'True' → logprob: -11.850699424743652
    9. 'actual' → logprob: -11.850699424743652
    10. '_white' → logprob: -12.100699424743652

Token 867: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.008692688308656216
    2. ' !=' → logprob: -4.758692741394043
    3. 'and' → logprob: -9.883692741394043
    4. ' and' → logprob: -11.133692741394043
    5. ')!=' → logprob: -12.633692741394043
    6. '!=(' → logprob: -12.633692741394043
    7. '!==' → logprob: -12.758692741394043
    8. '()!=' → logprob: -13.383692741394043
    9. 'is' → logprob: -14.133692741394043
    10. ']!=' → logprob: -15.008692741394043

Token 868: ' actual' (ID: 6290)
  Prédit: 'actual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actual' → logprob: -0.018153218552470207
    2. ' actual' → logprob: -4.018153190612793
    3. '	actual' → logprob: -13.018153190612793
    4. '(actual' → logprob: -14.893153190612793
    5. ' ' → logprob: -15.143153190612793
    6. '_actual' → logprob: -16.14315414428711
    7. 'Actual' → logprob: -16.26815414428711
    8. '   ' → logprob: -16.51815414428711
    9. '.actual' → logprob: -16.64315414428711
    10. '```' → logprob: -18.14315414428711

Token 869: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -0.11358385533094406
    2. 'black' → logprob: -2.23858380317688
    3. 'al' → logprob: -7.488584041595459
    4. 'actual' → logprob: -9.1135835647583
    5. 'Black' → logprob: -10.3635835647583
    6. 'als' → logprob: -11.8635835647583
    7. 'BLACK' → logprob: -11.9885835647583
    8. 'a' → logprob: -12.1135835647583
    9. '_actual' → logprob: -12.1135835647583
    10. 'ual' → logprob: -12.4885835647583

Token 870: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01860826648771763
    2. ':
' → logprob: -4.268608093261719
    3. ':return' → logprob: -5.893608093261719
    4. '               ' → logprob: -6.768608093261719
    5. '                   ' → logprob: -8.268608093261719
    6. '           ' → logprob: -8.768608093261719
    7. '                       ' → logprob: -9.518608093261719
    8. 'return' → logprob: -11.393608093261719
    9. '                           ' → logprob: -12.018608093261719
    10. '.' → logprob: -12.143608093261719

Token 871: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01693573035299778
    2. ' return' → logprob: -4.6419358253479
    3. '                       ' → logprob: -5.7669358253479
    4. 'return' → logprob: -5.7669358253479
    5. '               ' → logprob: -7.1419358253479
    6. '                           ' → logprob: -10.016935348510742
    7. '           ' → logprob: -10.641935348510742
    8. '                               ' → logprob: -11.891935348510742
    9. '                  ' → logprob: -12.141935348510742
    10. '   ' → logprob: -12.266935348510742

Token 872: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0017002914100885391
    2. ' return' → logprob: -6.751700401306152
    3. '                   ' → logprob: -7.751700401306152
    4. '                       ' → logprob: -9.251700401306152
    5. '                           ' → logprob: -13.251700401306152
    6. '               ' → logprob: -14.001700401306152
    7. '   ' → logprob: -14.501700401306152
    8. '	return' → logprob: -15.001700401306152
    9. ':return' → logprob: -15.126700401306152
    10. '           ' → logprob: -16.251699447631836

Token 873: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. ' False' → logprob: -13.000001907348633
    3. 'false' → logprob: -21.500001907348633
    4. 'F' → logprob: -22.000001907348633
    5. 'True' → logprob: -22.125001907348633
    6. '=False' → logprob: -22.875001907348633
    7. '(False' → logprob: -23.000001907348633
    8. '_false' → logprob: -23.375001907348633
    9. '
' → logprob: -24.375001907348633
    10. 'FALSE' → logprob: -24.500001907348633

Token 874: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007127600256353617
    2. '
' → logprob: -6.13212776184082
    3. ' return' → logprob: -6.38212776184082
    4. '        
' → logprob: -6.50712776184082
    5. '               ' → logprob: -7.38212776184082
    6. 'return' → logprob: -7.50712776184082
    7. '           ' → logprob: -8.25712776184082
    8. ' 
' → logprob: -8.88212776184082
    9. '                
' → logprob: -10.25712776184082
    10. '    
' → logprob: -10.50712776184082

Token 875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003991492558270693
    2. '        
' → logprob: -6.503991603851318
    3. '               ' → logprob: -7.128991603851318
    4. ' return' → logprob: -7.378991603851318
    5. 'return' → logprob: -7.878991603851318
    6. '
' → logprob: -8.12899112701416
    7. '           ' → logprob: -8.62899112701416
    8. '                
' → logprob: -10.12899112701416
    9. ' 
' → logprob: -10.25399112701416
    10. '        ' → logprob: -10.75399112701416

Token 876: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044965874403715134
    2. ' return' → logprob: -4.044965744018555
    3. '
' → logprob: -4.419965744018555
    4. 'return' (adapté à ' return') → logprob: -4.794965744018555
    5. '        
' → logprob: -6.044965744018555
    6. '   ' → logprob: -6.169965744018555
    7. '<|end|>' → logprob: -7.544965744018555
    8. '    ' → logprob: -8.669965744018555
    9. '    
' → logprob: -8.794965744018555
    10. ' ' → logprob: -8.919965744018555

Token 877: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.007622484117746353
    2. 'False' → logprob: -5.007622718811035
    3. ' True' → logprob: -7.007622718811035
    4. ' False' → logprob: -13.257622718811035
    5. 'true' → logprob: -18.75762176513672
    6. '(True' → logprob: -19.00762176513672
    7. '```' → logprob: -20.00762176513672
    8. '   ' → logprob: -20.00762176513672
    9. 'None' → logprob: -20.88262176513672
    10. '=True' → logprob: -21.00762176513672

Token 878: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48894003033638
    2. '<|end|>' → logprob: -1.4889400005340576
    3. '   ' → logprob: -1.8639400005340576
    4. '

' → logprob: -5.363940238952637
    5. '<|end|>' → logprob: -7.488940238952637
    6. '    
' → logprob: -7.738940238952637
    7. '  ' → logprob: -10.113940238952637
    8. ')' → logprob: -10.363940238952637
    9. '\n' → logprob: -10.363940238952637
    10. '```' → logprob: -10.363940238952637

Token 879: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09071961790323257
    2. '
' → logprob: -2.465719699859619
    3. '   ' → logprob: -6.715719699859619
    4. '

' → logprob: -8.090719223022461
    5. ' class' → logprob: -9.215719223022461
    6. '<|end|>' → logprob: -9.465719223022461
    7. '    
' → logprob: -11.340719223022461
    8. '<class' → logprob: -11.340719223022461
    9. '\n' → logprob: -11.465719223022461
    10. '@' → logprob: -11.840719223022461

Token 880: ' Concrete' (ID: 47600)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.2961512513575144e-05
    2. ' class' → logprob: -11.250022888183594
    3. '#' → logprob: -11.750022888183594
    4. '
' → logprob: -13.375022888183594
    5. 'from' → logprob: -15.625022888183594
    6. 'import' → logprob: -16.875022888183594
    7. '<class' → logprob: -17.000022888183594
    8. 'def' → logprob: -17.125022888183594
    9. '"class' → logprob: -17.375022888183594
    10. 'classmethod' → logprob: -17.500022888183594

Token 881: ' character' (ID: 5855)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.002186545403674245
    2. ' class' → logprob: -6.1271867752075195
    3. ' subclass' → logprob: -14.62718677520752
    4. '#' → logprob: -15.50218677520752
    5. ' subclasses' → logprob: -15.50218677520752
    6. '
' → logprob: -15.75218677520752
    7. '<class' → logprob: -16.252185821533203
    8. 'A' → logprob: -16.377185821533203
    9. ' classes' → logprob: -16.377185821533203
    10. 'classes' → logprob: -17.002185821533203

Token 882: ' classes' (ID: 9778)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.13758984208106995
    2. ' class' → logprob: -2.137589931488037
    3. 's' → logprob: -4.887589931488037
    4. ':' → logprob: -7.012589931488037
    5. '
' → logprob: -7.137589931488037
    6. ' classes' → logprob: -7.262589931488037
    7. ' subclasses' → logprob: -8.762589454650879
    8. '_classes' → logprob: -9.387589454650879
    9. '<|end|>' → logprob: -9.387589454650879
    10. ' ' → logprob: -9.512589454650879

Token 883: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.002206047298386693
    2. '
' → logprob: -6.127205848693848
    3. ' class' → logprob: -11.002205848693848
    4. '<class' → logprob: -13.752205848693848
    5. '#' → logprob: -14.127205848693848
    6. '<|end|>' → logprob: -14.252205848693848
    7. '

' → logprob: -14.502205848693848
    8. ':
' → logprob: -14.502205848693848
    9. '```' → logprob: -15.752205848693848
    10. ':' → logprob: -16.127206802368164

Token 884: ' each' (ID: 2454)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.7752907276153564
    2. 'each' → logprob: -2.0252907276153564
    3. 'specific' → logprob: -2.1502907276153564
    4. 'the' → logprob: -2.2752907276153564
    5. 'A' → logprob: -3.5252907276153564
    6. '#' → logprob: -3.5252907276153564
    7. ' digits' → logprob: -3.9002907276153564
    8. 'digit' → logprob: -4.025290489196777
    9. 'letters' → logprob: -4.025290489196777
    10. 'characters' → logprob: -5.025290489196777

Token 885: ' symbol' (ID: 10038)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5347812175750732
    2. 'digit' → logprob: -1.6597812175750732
    3. 'character' → logprob: -2.1597812175750732
    4. 'recognized' → logprob: -4.159781455993652
    5. 'letter' → logprob: -4.284781455993652
    6. 'specific' → logprob: -4.534781455993652
    7. ' digit' → logprob: -4.784781455993652
    8. 'known' → logprob: -4.784781455993652
    9. 'token' → logprob: -5.284781455993652
    10. 'A' → logprob: -5.284781455993652

Token 886: '.' (ID: 13)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2840674817562103
    2. '
' → logprob: -1.4090675115585327
    3. ' class' → logprob: -7.284067630767822
    4. ':' → logprob: -7.409067630767822
    5. ':
' → logprob: -7.784067630767822
    6. '<|end|>' → logprob: -7.784067630767822
    7. '

' → logprob: -7.909067630767822
    8. ' 
' → logprob: -9.409067153930664
    9. '<class' → logprob: -9.784067153930664
    10. '#' → logprob: -9.784067153930664

Token 887: ' Patterns' (ID: 114418)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005458105355501175
    2. '
' → logprob: -5.255457878112793
    3. ' class' → logprob: -8.505457878112793
    4. '<class' → logprob: -12.130457878112793
    5. '```' → logprob: -12.130457878112793
    6. '<|end|>' → logprob: -12.380457878112793
    7. '

' → logprob: -13.130457878112793
    8. ' 
' → logprob: -13.505457878112793
    9. '#' → logprob: -13.880457878112793
    10. '"class' → logprob: -14.630457878112793

Token 888: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031075604259967804
    2. ':' → logprob: -4.531075477600098
    3. '=' → logprob: -4.531075477600098
    4. ' are' → logprob: -5.406075477600098
    5. '<|end|>' → logprob: -6.156075477600098
    6. 'class' → logprob: -7.531075477600098
    7. '```' → logprob: -7.906075477600098
    8. ' =
' → logprob: -8.031075477600098
    9. '=[
' → logprob: -8.531075477600098
    10. ' ' → logprob: -9.031075477600098

Token 889: ' carefully' (ID: 18455)
  Prédit: 'defined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'defined' → logprob: -0.7993682622909546
    2. '[
' → logprob: -0.9243682622909546
    3. '[' → logprob: -2.924368381500244
    4. '...' → logprob: -3.299368381500244
    5. 'provided' → logprob: -3.924368381500244
    6. '   ' → logprob: -4.549368381500244
    7. '#' → logprob: -4.549368381500244
    8. 'class' → logprob: -4.924368381500244
    9. ' defined' → logprob: -6.299368381500244
    10. 'staticmethod' → logprob: -6.424368381500244

Token 890: ' designed' (ID: 6884)
  Prédit: 'defined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'defined' → logprob: -0.04048839583992958
    2. 'des' → logprob: -3.6654884815216064
    3. 'crafted' → logprob: -5.165488243103027
    4. 'chosen' → logprob: -5.665488243103027
    5. ' defined' → logprob: -6.165488243103027
    6. 'constructed' → logprob: -6.665488243103027
    7. 'specified' → logprob: -7.415488243103027
    8. ' designed' → logprob: -8.790488243103027
    9. '_defined' → logprob: -8.915488243103027
    10. 'selected' → logprob: -9.290488243103027

Token 891: ' to' (ID: 316)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06467976421117783
    2. '
' → logprob: -3.4396798610687256
    3. ' for' → logprob: -4.9396796226501465
    4. ' to' → logprob: -4.9396796226501465
    5. '<|end|>' → logprob: -5.6896796226501465
    6. 'for' → logprob: -5.9396796226501465
    7. ' class' → logprob: -6.0646796226501465
    8. ',' → logprob: -6.4396796226501465
    9. ' and' → logprob: -6.9396796226501465
    10. '#' → logprob: -7.0646796226501465

Token 892: ' match' (ID: 3981)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'represent' → logprob: -0.679894208908081
    2. ' represent' → logprob: -1.679894208908081
    3. '...' → logprob: -2.804894208908081
    4. 'match' → logprob: -2.929894208908081
    5. '#' → logprob: -3.804894208908081
    6. 'complete' → logprob: -4.05489444732666
    7. 'recogn' → logprob: -4.30489444732666
    8. 'implement' → logprob: -4.42989444732666
    9. ''' → logprob: -4.55489444732666
    10. 'support' → logprob: -4.55489444732666

Token 893: ' described' (ID: 13394)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.102590560913086
    2. '[
' → logprob: -1.602590560913086
    3. '#' → logprob: -2.102590560913086
    4. 'exact' → logprob: -2.352590560913086
    5. 'the' → logprob: -2.602590560913086
    6. ''' → logprob: -3.477590560913086
    7. '[' → logprob: -3.602590560913086
    8. '['' → logprob: -3.852590560913086
    9. '.' → logprob: -4.102590560913086
    10. ' the' → logprob: -4.727590560913086

Token 894: ' characters' (ID: 9862)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5295840501785278
    2. '#' → logprob: -2.0295839309692383
    3. 'patterns' → logprob: -2.2795839309692383
    4. 'characters' → logprob: -3.2795839309692383
    5. 'digits' → logprob: -3.5295839309692383
    6. '...' → logprob: -4.029583930969238
    7. '[
' → logprob: -4.154583930969238
    8. '.' → logprob: -4.529583930969238
    9. '<|end|>' → logprob: -5.154583930969238
    10. 'lines' → logprob: -5.279583930969238

Token 895: '.
' (ID: 558)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06272280216217041
    2. '
' → logprob: -2.812722682952881
    3. '

' → logprob: -8.312723159790039
    4. ' class' → logprob: -8.687723159790039
    5. '#' → logprob: -9.062723159790039
    6. '<|end|>' → logprob: -9.937723159790039
    7. ':' → logprob: -10.437723159790039
    8. '<class' → logprob: -10.687723159790039
    9. ':
' → logprob: -10.812723159790039
    10. 'import' → logprob: -10.812723159790039

Token 896: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005257595330476761
    2. '
' → logprob: -5.255257606506348
    3. ' class' → logprob: -11.630257606506348
    4. '

' → logprob: -11.630257606506348
    5. '```' → logprob: -13.255257606506348
    6. '<class' → logprob: -13.505257606506348
    7. 'pattern' → logprob: -14.505257606506348
    8. '
' → logprob: -14.630257606506348
    9. '\n' → logprob: -14.880257606506348
    10. '  
' → logprob: -15.005257606506348

Token 897: ' Because' (ID: 13602)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0009148012613877654
    2. '
' → logprob: -7.000914573669434
    3. '```' → logprob: -13.750914573669434
    4. ' class' → logprob: -14.000914573669434
    5. '

' → logprob: -14.500914573669434
    6. '<class' → logprob: -14.875914573669434
    7. '"class' → logprob: -16.37591552734375
    8. '#' → logprob: -16.37591552734375
    9. '  
' → logprob: -17.00091552734375
    10. 'import' → logprob: -17.25091552734375

Token 898: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5706353187561035
    2. 'class' → logprob: -1.9456353187561035
    3. ' #' → logprob: -2.4456353187561035
    4. ' the' → logprob: -3.0706353187561035
    5. ' ' → logprob: -3.3206353187561035
    6. ' of' → logprob: -3.8206353187561035
    7. ''' → logprob: -4.3206353187561035
    8. ' class' → logprob: -4.4456353187561035
    9. 'the' → logprob: -4.8206353187561035
    10. ':' → logprob: -5.3206353187561035

Token 899: ' states' (ID: 9407)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7838813066482544
    2. '#' → logprob: -0.9088813066482544
    3. ' continues' → logprob: -2.658881187438965
    4. '<|end|>' → logprob: -3.658881187438965
    5. ' is' → logprob: -4.408881187438965
    6. ' class' → logprob: -4.658881187438965
    7. '<|end|>' → logprob: -5.908881187438965
    8. '-specific' → logprob: -6.158881187438965
    9. ':' → logprob: -6.408881187438965
    10. '1' → logprob: -6.533881187438965

Token 900: ' characters' (ID: 9862)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1681185960769653
    2. ' that' → logprob: -1.2931185960769653
    3. ' the' → logprob: -1.6681185960769653
    4. 'that' → logprob: -2.918118476867676
    5. 'the' → logprob: -3.168118476867676
    6. '...' → logprob: -3.418118476867676
    7. ' #' → logprob: -4.168118476867676
    8. 'patterns' → logprob: -4.793118476867676
    9. ' patterns' → logprob: -4.793118476867676
    10. ' we' → logprob: -5.418118476867676

Token 901: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.36194583773612976
    2. '#' → logprob: -2.736945867538452
    3. ''' → logprob: -2.736945867538452
    4. ' may' → logprob: -2.986945867538452
    5. 'are' → logprob: -3.986945867538452
    6. '<|end|>' → logprob: -3.986945867538452
    7. ' can' → logprob: -4.236945629119873
    8. ',' → logprob: -4.986945629119873
    9. '...' → logprob: -5.361945629119873
    10. ' have' → logprob: -5.361945629119873

Token 902: ' always' (ID: 3324)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8220269680023193
    2. 'always' → logprob: -1.8220269680023193
    3. 'com' → logprob: -2.1970269680023193
    4. 'only' → logprob: -2.9470269680023193
    5. 'mon' → logprob: -3.1970269680023193
    6. 'draw' → logprob: -3.3220269680023193
    7. ' always' → logprob: -3.6970269680023193
    8. 'single' → logprob: -3.6970269680023193
    9. 'not' → logprob: -3.9470269680023193
    10. 'non' → logprob: -4.072027206420898

Token 903: ' drawn' (ID: 25279)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.4897745847702026
    2. 'se' → logprob: -2.614774703979492
    3. 'cont' → logprob: -2.614774703979492
    4. '1' → logprob: -2.739774703979492
    5. 'one' → logprob: -2.864774703979492
    6. 'single' → logprob: -3.114774703979492
    7. '4' → logprob: -3.364774703979492
    8. 'connected' → logprob: -3.364774703979492
    9. 'non' → logprob: -3.489774703979492
    10. '#' → logprob: -3.489774703979492

Token 904: ' as' (ID: 472)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.147641658782959
    2. 'with' → logprob: -1.772641658782959
    3. '#' → logprob: -1.897641658782959
    4. ' as' → logprob: -2.022641658782959
    5. ' using' → logprob: -2.897641658782959
    6. ' in' → logprob: -3.022641658782959
    7. 'in' → logprob: -3.897641658782959
    8. ',' → logprob: -3.897641658782959
    9. 'as' → logprob: -4.147641658782959
    10. '<|end|>' → logprob: -4.147641658782959

Token 905: ' given' (ID: 4335)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.3728138208389282
    2. '1' → logprob: -1.9978138208389282
    3. 'single' → logprob: -2.6228137016296387
    4. '#' → logprob: -2.8728137016296387
    5. 'solid' → logprob: -3.2478137016296387
    6. 'filled' → logprob: -3.2478137016296387
    7. '4' → logprob: -3.3728137016296387
    8. '7' → logprob: -3.3728137016296387
    9. '5' → logprob: -3.6228137016296387
    10. 'vertical' → logprob: -3.6228137016296387

Token 906: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25284600257873535
    2. '
' → logprob: -2.2528460025787354
    3. ',' → logprob: -2.5028460025787354
    4. '#' → logprob: -4.002845764160156
    5. ',
' → logprob: -4.502845764160156
    6. '.' → logprob: -5.877845764160156
    7. ' class' → logprob: -7.127845764160156
    8. '<|end|>' → logprob: -7.252845764160156
    9. '

' → logprob: -7.502845764160156
    10. 'import' → logprob: -8.002845764160156

Token 907: ' no' (ID: 860)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1150561198592186
    2. '#' → logprob: -2.490056037902832
    3. ' class' → logprob: -3.990056037902832
    4. ' we' → logprob: -5.865056037902832
    5. '
' → logprob: -6.115056037902832
    6. ' the' → logprob: -7.990056037902832
    7. ' #' → logprob: -8.115056037902832
    8. 'we' → logprob: -8.115056037902832
    9. 'the' → logprob: -8.865056037902832
    10. ' continue' → logprob: -8.865056037902832

Token 908: ' variations' (ID: 35357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.498087763786316
    2. 'rot' → logprob: -2.1230878829956055
    3. 'vari' → logprob: -2.4980878829956055
    4. 'need' → logprob: -2.4980878829956055
    5. 'rotation' → logprob: -2.7480878829956055
    6. ' need' → logprob: -2.8730878829956055
    7. 'changes' → logprob: -3.2480878829956055
    8. ' rotation' → logprob: -3.7480878829956055
    9. 'ambigu' → logprob: -3.8730878829956055
    10. ' variations' → logprob: -4.1230878829956055

Token 909: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0738773345947266
    2. 'class' → logprob: -1.3238773345947266
    3. 'are' → logprob: -1.3238773345947266
    4. ' are' → logprob: -2.6988773345947266
    5. ',' → logprob: -3.8238773345947266
    6. '.' → logprob: -4.198877334594727
    7. '
' → logprob: -4.948877334594727
    8. 'were' → logprob: -6.698877334594727
    9. '```' → logprob: -6.823877334594727
    10. '<|end|>' → logprob: -6.948877334594727

Token 910: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.018163753673434258
    2. '
' → logprob: -4.018163681030273
    3. '

' → logprob: -11.518163681030273
    4. '
' → logprob: -13.518163681030273
    5. '<class' → logprob: -14.143163681030273
    6. ' class' → logprob: -14.393163681030273
    7. '```' → logprob: -15.018163681030273
    8. '#' → logprob: -15.768163681030273
    9. '  
' → logprob: -15.768163681030273
    10. ' 
' → logprob: -15.768163681030273

Token 911: ' Digit' (ID: 91174)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.6919395923614502
    2. 'Plus' → logprob: -2.19193959236145
    3. 'H' → logprob: -2.31693959236145
    4. 'Hash' → logprob: -2.44193959236145
    5. 'I' → logprob: -2.69193959236145
    6. 'O' → logprob: -3.19193959236145
    7. 'Square' → logprob: -3.19193959236145
    8. 'Space' → logprob: -3.31693959236145
    9. 'Horizontal' → logprob: -3.31693959236145
    10. 'Dash' → logprob: -3.44193959236145

Token 912: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37683555483818054
    2. '(Character' → logprob: -1.376835584640503
    3. 'Zero' → logprob: -3.251835584640503
    4. 'Character' → logprob: -4.001835346221924
    5. '(' → logprob: -6.501835346221924
    6. 'One' → logprob: -6.626835346221924
    7. '9' → logprob: -8.126835823059082
    8. 'zero' → logprob: -8.251835823059082
    9. ':
' → logprob: -8.251835823059082
    10. '1' → logprob: -8.251835823059082

Token 913: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -0.0036963969469070435
    2. ':' → logprob: -6.003696441650391
    3. 'Character' → logprob: -7.253696441650391
    4. ':
' → logprob: -7.628696441650391
    5. '<Character' → logprob: -11.37869644165039
    6. '():' → logprob: -13.50369644165039
    7. ' ' → logprob: -13.62869644165039
    8. ' Character' → logprob: -13.75369644165039
    9. ' (' → logprob: -13.75369644165039
    10. '(' → logprob: -13.87869644165039

Token 914: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38810157775878906
    2. '):' → logprob: -1.138101577758789
    3. '):
' → logprob: -6.888101577758789
    4. '   ' → logprob: -9.013101577758789
    5. ':' → logprob: -10.763101577758789
    6. ')' → logprob: -10.888101577758789
    7. 'Character' → logprob: -11.013101577758789
    8. '(Character' → logprob: -11.388101577758789
    9. ':
' → logprob: -12.013101577758789
    10. '<Character' → logprob: -12.388101577758789

Token 915: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03812640905380249
    2. 'pattern' → logprob: -3.2881264686584473
    3. ' pattern' → logprob: -9.913125991821289
    4. ':' → logprob: -10.913125991821289
    5. '```' → logprob: -11.788125991821289
    6. '.pattern' → logprob: -12.663125991821289
    7. '(pattern' → logprob: -13.288125991821289
    8. '_pattern' → logprob: -14.038125991821289
    9. '{' → logprob: -14.413125991821289
    10. 'pat' → logprob: -14.413125991821289

Token 916: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -1.1398757123970427e-05
    2. 'char' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.750011444091797
    4. ' pattern' → logprob: -16.500011444091797
    5. '#' → logprob: -16.750011444091797
    6. 'character' → logprob: -17.500011444091797
    7. '
' → logprob: -17.625011444091797
    8. 'pat' → logprob: -18.750011444091797
    9. '    
' → logprob: -19.000011444091797
    10. '0' → logprob: -20.000011444091797

Token 917: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3153444826602936
    2. '=' → logprob: -1.3153444528579712
    3. ':' → logprob: -6.190344333648682
    4. '=[
' → logprob: -11.44034481048584
    5. '   ' → logprob: -11.69034481048584
    6. '=[' → logprob: -12.69034481048584
    7. '=['' → logprob: -12.81534481048584
    8. ' ' → logprob: -13.06534481048584
    9. '=
' → logprob: -13.69034481048584
    10. ' :' → logprob: -13.94034481048584

Token 918: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.003537351731210947
    2. '[' → logprob: -5.753537178039551
    3. '["' → logprob: -8.00353717803955
    4. '['' → logprob: -11.00353717803955
    5. ' [
' → logprob: -11.75353717803955
    6. '   ' → logprob: -14.37853717803955
    7. ' [' → logprob: -15.62853717803955
    8. '[`' → logprob: -17.628538131713867
    9. '[\' → logprob: -17.753538131713867
    10. ' ' → logprob: -19.003538131713867

Token 919: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0018723555840551853
    2. ''' → logprob: -6.501872539520264
    3. '       ' → logprob: -8.501872062683105
    4. '   ' → logprob: -9.251872062683105
    5. ' "' → logprob: -9.876872062683105
    6. ' ' → logprob: -11.001872062683105
    7. '     ' → logprob: -13.626872062683105
    8. '           ' → logprob: -14.001872062683105
    9. '	' → logprob: -14.751872062683105
    10. '  ' → logprob: -15.876872062683105

Token 920: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0013720262795686722
    2. ''' → logprob: -6.62637186050415
    3. ' "' → logprob: -10.001372337341309
    4. ' ' → logprob: -15.501372337341309
    5. '   ' → logprob: -15.626372337341309
    6. ' '' → logprob: -16.251371383666992
    7. '111' → logprob: -16.626371383666992
    8. '011' → logprob: -17.626371383666992
    9. '
' → logprob: -17.876371383666992
    10. '“' → logprob: -18.251371383666992

Token 921: '111' (ID: 8780)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8839911818504333
    2. '011' → logprob: -0.8839911818504333
    3. '111' → logprob: -1.7589912414550781
    4. ' ' → logprob: -7.383991241455078
    5. ''' → logprob: -7.383991241455078
    6. '.' → logprob: -9.633991241455078
    7. '000' → logprob: -9.758991241455078
    8. '001' → logprob: -10.133991241455078
    9. ' "' → logprob: -10.258991241455078
    10. '010' → logprob: -10.383991241455078

Token 922: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.10085426270961761
    2. '",' → logprob: -2.7258541584014893
    3. '111' → logprob: -3.9758541584014893
    4. '1' → logprob: -5.350854396820068
    5. '"' → logprob: -5.475854396820068
    6. '","' → logprob: -6.850854396820068
    7. '",
' → logprob: -7.225854396820068
    8. '11' → logprob: -7.725854396820068
    9. '"
' → logprob: -8.60085391998291
    10. '110' → logprob: -8.72585391998291

Token 923: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5769916772842407
    2. '       ' → logprob: -0.8269916772842407
    3. ''' → logprob: -7.201991558074951
    4. '   ' → logprob: -8.57699203491211
    5. '           ' → logprob: -10.32699203491211
    6. ' ' → logprob: -10.70199203491211
    7. ' "' → logprob: -10.70199203491211
    8. '111' → logprob: -11.07699203491211
    9. '      ' → logprob: -12.20199203491211
    10. '101' → logprob: -12.20199203491211

Token 924: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.007927183993160725
    2. '101' → logprob: -5.007927417755127
    3. '   ' → logprob: -6.882927417755127
    4. ''' → logprob: -9.382926940917969
    5. '       ' → logprob: -9.507926940917969
    6. ' "' → logprob: -11.882926940917969
    7. '100' → logprob: -12.007926940917969
    8. '1' → logprob: -12.382926940917969
    9. ' ' → logprob: -12.632926940917969
    10. '     ' → logprob: -13.132926940917969

Token 925: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.00013738969573751092
    2. '"' → logprob: -9.500137329101562
    3. '1' → logprob: -9.875137329101562
    4. '111' → logprob: -11.750137329101562
    5. '   ' → logprob: -13.750137329101562
    6. '100' → logprob: -14.250137329101562
    7. ''' → logprob: -14.500137329101562
    8. ' ' → logprob: -14.625137329101562
    9. '  ' → logprob: -15.625137329101562
    10. '#' → logprob: -16.750137329101562

Token 926: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.0845736563205719
    2. '",' → logprob: -2.584573745727539
    3. '"' → logprob: -6.084573745727539
    4. '"]' → logprob: -6.584573745727539
    5. '",
' → logprob: -7.084573745727539
    6. '111' → logprob: -7.209573745727539
    7. '1' → logprob: -8.584573745727539
    8. '","' → logprob: -8.959573745727539
    9. '101' → logprob: -9.334573745727539
    10. '"
' → logprob: -11.959573745727539

Token 927: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3133668005466461
    2. '       ' → logprob: -1.3133667707443237
    3. '   ' → logprob: -9.813366889953613
    4. ' "' → logprob: -10.438366889953613
    5. ''' → logprob: -11.313366889953613
    6. '           ' → logprob: -12.813366889953613
    7. ' ' → logprob: -13.063366889953613
    8. '	' → logprob: -13.313366889953613
    9. '      ' → logprob: -13.938366889953613
    10. '     ' → logprob: -14.688366889953613

Token 928: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00029828163678757846
    2. '       ' → logprob: -8.375298500061035
    3. ''' → logprob: -9.875298500061035
    4. '111' → logprob: -11.375298500061035
    5. '101' → logprob: -12.750298500061035
    6. '   ' → logprob: -14.125298500061035
    7. ' "' → logprob: -14.625298500061035
    8. ' ' → logprob: -15.625298500061035
    9. '110' → logprob: -15.750298500061035
    10. '           ' → logprob: -16.37529754638672

Token 929: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.004372678697109222
    2. '111' → logprob: -5.754372596740723
    3. '"' → logprob: -6.879372596740723
    4. '1' → logprob: -8.879372596740723
    5. ''' → logprob: -10.879372596740723
    6. ' ' → logprob: -13.004372596740723
    7. '   ' → logprob: -13.629372596740723
    8. '110' → logprob: -13.754372596740723
    9. '11' → logprob: -14.004372596740723
    10. '`' → logprob: -15.129372596740723

Token 930: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.04481053352355957
    2. '",' → logprob: -3.1698105335235596
    3. '       ' → logprob: -6.7948102951049805
    4. '",
' → logprob: -8.04481029510498
    5. '"' → logprob: -8.54481029510498
    6. '","' → logprob: -9.91981029510498
    7. '"]' → logprob: -10.29481029510498
    8. '111' → logprob: -10.54481029510498
    9. '',
' → logprob: -10.54481029510498
    10. ''",
' → logprob: -11.79481029510498

Token 931: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.17998692393302917
    2. '       ' → logprob: -1.8049869537353516
    3. ''' → logprob: -8.554986953735352
    4. '   ' → logprob: -10.554986953735352
    5. ' "' → logprob: -11.929986953735352
    6. '           ' → logprob: -12.304986953735352
    7. ' ' → logprob: -12.304986953735352
    8. '0' → logprob: -13.679986953735352
    9. '      ' → logprob: -13.679986953735352
    10. '	' → logprob: -14.054986953735352

Token 932: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0010991342132911086
    2. '       ' → logprob: -7.376099109649658
    3. '101' → logprob: -8.251099586486816
    4. ''' → logprob: -9.001099586486816
    5. '111' → logprob: -9.626099586486816
    6. ' "' → logprob: -11.376099586486816
    7. '   ' → logprob: -12.501099586486816
    8. ' ' → logprob: -13.001099586486816
    9. '           ' → logprob: -13.376099586486816
    10. '110' → logprob: -14.251099586486816

Token 933: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.00044914212776347995
    2. '111' → logprob: -7.750449180603027
    3. '1' → logprob: -11.500449180603027
    4. '"' → logprob: -12.250449180603027
    5. ' ' → logprob: -13.500449180603027
    6. '110' → logprob: -14.250449180603027
    7. '   ' → logprob: -14.375449180603027
    8. ''' → logprob: -15.000449180603027
    9. '100' → logprob: -16.37544822692871
    10. '```' → logprob: -16.50044822692871

Token 934: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.008854939602315426
    2. '",' → logprob: -4.758854866027832
    3. '",
' → logprob: -9.133854866027832
    4. '       ' → logprob: -9.383854866027832
    5. '","' → logprob: -10.758854866027832
    6. '"' → logprob: -11.258854866027832
    7. '',
' → logprob: -11.508854866027832
    8. '111' → logprob: -13.633854866027832
    9. '",'' → logprob: -14.383854866027832
    10. ''",
' → logprob: -14.508854866027832

Token 935: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3133578300476074
    2. '       ' → logprob: -1.3133578300476074
    3. ''' → logprob: -10.063358306884766
    4. '   ' → logprob: -10.938358306884766
    5. ' "' → logprob: -11.063358306884766
    6. '           ' → logprob: -11.563358306884766
    7. ' ' → logprob: -12.063358306884766
    8. '"class' → logprob: -13.563358306884766
    9. '      ' → logprob: -13.938358306884766
    10. '0' → logprob: -14.438358306884766

Token 936: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -6.504040356958285e-05
    2. ''' → logprob: -9.875064849853516
    3. '       ' → logprob: -11.875064849853516
    4. '111' → logprob: -12.000064849853516
    5. ' "' → logprob: -15.750064849853516
    6. '"class' → logprob: -16.625064849853516
    7. '   ' → logprob: -16.750064849853516
    8. '           ' → logprob: -17.125064849853516
    9. ' ' → logprob: -18.250064849853516
    10. '`' → logprob: -18.625064849853516

Token 937: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.00016265720478259027
    2. '"' → logprob: -8.750163078308105
    3. '101' → logprob: -12.875163078308105
    4. '1' → logprob: -14.250163078308105
    5. ''' → logprob: -14.625163078308105
    6. '110' → logprob: -15.000163078308105
    7. '11' → logprob: -17.12516212463379
    8. '"""' → logprob: -18.00016212463379
    9. '011' → logprob: -18.12516212463379
    10. '   ' → logprob: -18.87516212463379

Token 938: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7039567828178406
    2. '"]' → logprob: -0.7039567828178406
    3. '"
' → logprob: -5.078956604003906
    4. '   ' → logprob: -5.703956604003906
    5. '",' → logprob: -7.328956604003906
    6. '",
' → logprob: -8.578956604003906
    7. ']"' → logprob: -8.578956604003906
    8. ']' → logprob: -9.453956604003906
    9. '"]
' → logprob: -9.953956604003906
    10. '       ' → logprob: -11.078956604003906

Token 939: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20142708718776703
    2. ']' → logprob: -1.7014271020889282
    3. ' ]' → logprob: -11.951427459716797
    4. ',' → logprob: -13.076427459716797
    5. '"]' → logprob: -13.701427459716797
    6. ']
' → logprob: -13.826427459716797
    7. '       ' → logprob: -14.326427459716797
    8. '	' → logprob: -14.951427459716797
    9. '   ' → logprob: -14.951427459716797
    10. ' ' → logprob: -15.076427459716797

Token 940: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41346317529678345
    2. ']' → logprob: -1.2884631156921387
    3. '<|end|>' → logprob: -2.7884631156921387
    4. '<|end|>' → logprob: -7.913463115692139
    5. '
' → logprob: -8.163463592529297
    6. '}' → logprob: -8.288463592529297
    7. ')' → logprob: -8.538463592529297
    8. '"]' → logprob: -9.663463592529297
    9. ' ]' → logprob: -9.913463592529297
    10. '```' → logprob: -10.038463592529297

Token 941: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03036808967590332
    2. 'char' → logprob: -3.9053680896759033
    3. ' char' → logprob: -5.155367851257324
    4. '
' → logprob: -5.905367851257324
    5. ' ' → logprob: -8.155367851257324
    6. '<|end|>' → logprob: -8.405367851257324
    7. '    
' → logprob: -8.655367851257324
    8. 'def' → logprob: -9.155367851257324
    9. '  ' → logprob: -9.405367851257324
    10. '    ' → logprob: -9.530367851257324

Token 942: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -9.253090865968261e-06
    2. ' char' → logprob: -12.250009536743164
    3. '   ' → logprob: -13.000009536743164
    4. 'pattern' → logprob: -13.500009536743164
    5. '
' → logprob: -14.500009536743164
    6. ' ' → logprob: -16.875009536743164
    7. '_char' → logprob: -16.875009536743164
    8. 'class' → logprob: -17.750009536743164
    9. '	char' → logprob: -17.875009536743164
    10. '    
' → logprob: -18.125009536743164

Token 943: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -1.9361264946837764e-07
    2. 'repr' → logprob: -16.125
    3. '_' → logprob: -19.5
    4. ' _' → logprob: -20.25
    5. '\' → logprob: -20.25
    6. '_
' → logprob: -20.75
    7. '_rep' → logprob: -20.875
    8. '__' → logprob: -21.375
    9. '_relu' → logprob: -21.5
    10. 's' → logprob: -21.75

Token 944: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143868029117584
    2. ' =' → logprob: -1.7014386653900146
    3. '='' → logprob: -10.951438903808594
    4. ':' → logprob: -12.076438903808594
    5. ' ='' → logprob: -13.326438903808594
    6. ' ' → logprob: -14.951438903808594
    7. '<|end|>' → logprob: -16.701438903808594
    8. 's' → logprob: -16.951438903808594
    9. '="' → logprob: -17.076438903808594
    10. ' ="' → logprob: -17.701438903808594

Token 945: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008661724627017975
    2. '"' → logprob: -4.75866174697876
    3. ''O' → logprob: -10.133661270141602
    4. ' '' → logprob: -12.383661270141602
    5. '0' → logprob: -12.883661270141602
    6. ''A' → logprob: -15.383661270141602
    7. ''o' → logprob: -16.3836612701416
    8. ''D' → logprob: -16.6336612701416
    9. '"O' → logprob: -16.6336612701416
    10. ''U' → logprob: -16.7586612701416

Token 946: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. 'O' → logprob: -13.500001907348633
    3. ''' → logprob: -14.250001907348633
    4. '０' → logprob: -17.125001907348633
    5. ' ' → logprob: -17.375001907348633
    6. '۰' → logprob: -18.375001907348633
    7. '"' → logprob: -18.375001907348633
    8. ')' → logprob: -18.500001907348633
    9. 'o' → logprob: -18.875001907348633
    10. '('' → logprob: -18.875001907348633

Token 947: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -5.574251918005757e-05
    2. ''
' → logprob: -10.250055313110352
    3. '<|end|>' → logprob: -11.375055313110352
    4. '"' → logprob: -12.625055313110352
    5. ''''' → logprob: -13.250055313110352
    6. ''#' → logprob: -13.875055313110352
    7. ''class' → logprob: -14.375055313110352
    8. ''"' → logprob: -14.500055313110352
    9. ''

' → logprob: -14.500055313110352
    10. ' '' → logprob: -15.625055313110352

Token 948: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 949: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000477620807942003
    2. ' def' → logprob: -8.00047779083252
    3. 'height' → logprob: -9.00047779083252
    4. '   ' → logprob: -11.75047779083252
    5. 'pass' → logprob: -12.75047779083252
    6. '@' (adapté à ' @') → logprob: -12.87547779083252
    7. 'width' → logprob: -13.00047779083252
    8. 'class' → logprob: -14.00047779083252
    9. 'pattern' → logprob: -14.25047779083252
    10. '#' → logprob: -14.37547779083252

Token 950: 'classmethod' (ID: 64680)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.06306758522987366
    2. 'classmethod' → logprob: -2.813067674636841
    3. 'property' → logprob: -6.813067436218262
    4. 'static' → logprob: -17.063068389892578
    5. '__' → logprob: -18.688068389892578
    6. 'Property' → logprob: -19.438068389892578
    7. 'Static' → logprob: -20.563068389892578
    8. ' property' → logprob: -20.688068389892578
    9. 'class' → logprob: -20.938068389892578
    10. 'dat' → logprob: -21.188068389892578

Token 951: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00646086735650897
    2. '
' → logprob: -5.381460666656494
    3. '   ' → logprob: -6.756460666656494
    4. ' def' → logprob: -7.381460666656494
    5. '	def' → logprob: -10.631461143493652
    6. '```' → logprob: -11.006461143493652
    7. '
' → logprob: -12.881461143493652
    8. '<|end|>' → logprob: -13.131461143493652
    9. '\' → logprob: -13.256461143493652
    10. ' ' → logprob: -13.756461143493652

Token 952: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.452426608419046e-05
    2. ' def' → logprob: -10.37503433227539
    3. '   ' → logprob: -13.25003433227539
    4. '	def' → logprob: -14.50003433227539
    5. '
' → logprob: -14.62503433227539
    6. '```' → logprob: -15.50003433227539
    7. ':def' → logprob: -15.75003433227539
    8. '_def' → logprob: -16.37503433227539
    9. 'ndef' → logprob: -16.75003433227539
    10. '(def' → logprob: -17.00003433227539

Token 953: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.877503907773644e-05
    2. '
' → logprob: -9.375099182128906
    3. 'classmethod' → logprob: -11.875099182128906
    4. 'from' → logprob: -12.500099182128906
    5. 'staticmethod' → logprob: -13.375099182128906
    6. 'python' → logprob: -14.000099182128906
    7. 'property' → logprob: -15.250099182128906
    8. ' def' → logprob: -16.375099182128906
    9. 'override' → logprob: -16.375099182128906
    10. '```' → logprob: -17.000099182128906

Token 954: ' try' (ID: 2075)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4967088997364044
    2. 'match' → logprob: -0.996708869934082
    3. ' match' → logprob: -4.996708869934082
    4. 'matches' → logprob: -5.121708869934082
    5. ' def' → logprob: -5.496708869934082
    6. 'can' → logprob: -5.996708869934082
    7. 'check' → logprob: -6.871708869934082
    8. 'try' → logprob: -7.246708869934082
    9. ' matches' → logprob: -8.746708869934082
    10. 'is' → logprob: -8.746708869934082

Token 955: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.23033221065998077
    2. '_parse' → logprob: -1.6053322553634644
    3. '_to' → logprob: -7.105332374572754
    4. '(cls' → logprob: -7.355332374572754
    5. '_from' → logprob: -7.480332374572754
    6. '_find' → logprob: -7.730332374572754
    7. '_extract' → logprob: -7.730332374572754
    8. '_decode' → logprob: -7.855332374572754
    9. '_create' → logprob: -7.855332374572754
    10. '_detect' → logprob: -7.980332374572754

Token 956: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.6240566083070007e-06
    2. 'cls' → logprob: -13.625001907348633
    3. '(' → logprob: -15.500001907348633
    4. '(
' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '(clazz' → logprob: -17.500001907348633
    7. '(cl' → logprob: -19.125001907348633
    8. '(c' → logprob: -19.500001907348633
    9. ' cls' → logprob: -19.625001907348633
    10. 'classmethod' → logprob: -20.625001907348633

Token 957: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -7.896309739408025e-07
    2. 'cls' → logprob: -15.125000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '(' → logprob: -15.750000953674316
    5. '(clazz' → logprob: -16.5
    6. '(cl' → logprob: -17.375
    7. '   ' → logprob: -18.75
    8. '(class' → logprob: -19.25
    9. ' cls' → logprob: -19.625
    10. ',' → logprob: -19.625

Token 958: ' points' (ID: 5571)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.7055991291999817
    2. 'points' → logprob: -0.8305991291999817
    3. 'cls' → logprob: -2.705599069595337
    4. ' points' → logprob: -6.080599308013916
    5. ' occupied' → logprob: -6.955599308013916
    6. ' cls' → logprob: -8.455598831176758
    7. 'self' → logprob: -9.830598831176758
    8. 'occup' → logprob: -11.330598831176758
    9. 'pts' → logprob: -11.455598831176758
    10. 'occ' → logprob: -11.955598831176758

Token 959: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04514215886592865
    2. '(cls' → logprob: -3.29514217376709
    3. 'cls' → logprob: -5.54514217376709
    4. '   ' → logprob: -6.67014217376709
    5. '       ' → logprob: -7.04514217376709
    6. ':' → logprob: -7.17014217376709
    7. '):
' → logprob: -9.42014217376709
    8. '):' → logprob: -9.92014217376709
    9. ' ,' → logprob: -10.17014217376709
    10. ' cls' → logprob: -10.29514217376709

Token 960: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.00028624574770219624
    2. ' Set' → logprob: -8.250286102294922
    3. 'set' → logprob: -10.750286102294922
    4. '   ' → logprob: -14.000286102294922
    5. 'cls' → logprob: -14.375286102294922
    6. '_set' → logprob: -14.500286102294922
    7. ')' → logprob: -15.000286102294922
    8. '_Set' → logprob: -15.375286102294922
    9. 'class' → logprob: -15.375286102294922
    10. '	Set' → logprob: -15.750286102294922

Token 961: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.995397365652025e-05
    2. '):' → logprob: -9.625089645385742
    3. 'Point' → logprob: -11.500089645385742
    4. ')' → logprob: -12.000089645385742
    5. '['' → logprob: -13.250089645385742
    6. '):
' → logprob: -13.500089645385742
    7. '   ' → logprob: -13.625089645385742
    8. '<Point' → logprob: -13.875089645385742
    9. '       ' → logprob: -15.000089645385742
    10. '[
' → logprob: -15.250089645385742

Token 962: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.128163257315464e-07
    2. ' Point' → logprob: -15.125
    3. ')' → logprob: -17.25
    4. '(Point' → logprob: -18.375
    5. '	Point' → logprob: -18.625
    6. '[' → logprob: -18.75
    7. '.Point' → logprob: -18.875
    8. '_Point' → logprob: -19.0
    9. '   ' → logprob: -19.625
    10. '_point' → logprob: -19.875

Token 963: '])' (ID: 4636)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16802963614463806
    2. ')' → logprob: -2.168029546737671
    3. '):
' → logprob: -3.918029546737671
    4. '):' → logprob: -3.918029546737671
    5. '   ' → logprob: -8.16802978515625
    6. '       ' → logprob: -8.79302978515625
    7. '):
' → logprob: -10.66802978515625
    8. ' ,' → logprob: -10.91802978515625
    9. ' )' → logprob: -12.04302978515625
    10. ',p' → logprob: -12.54302978515625

Token 964: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030170787125825882
    2. ':
' → logprob: -4.030170917510986
    3. ' ->' → logprob: -5.030170917510986
    4. '->' → logprob: -5.655170917510986
    5. '       ' → logprob: -7.280170917510986
    6. ')' → logprob: -7.405170917510986
    7. ')->' → logprob: -8.280170440673828
    8. '):
' → logprob: -9.030170440673828
    9. '):' → logprob: -9.280170440673828
    10. '   ' → logprob: -9.530170440673828

Token 965: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.009253882803022861
    2. ''' → logprob: -5.134253978729248
    3. ' bool' → logprob: -6.509253978729248
    4. 'None' → logprob: -7.134253978729248
    5. 'List' → logprob: -7.509253978729248
    6. ' '' → logprob: -9.25925350189209
    7. 'Optional' → logprob: -9.38425350189209
    8. '"' → logprob: -9.50925350189209
    9. 'Set' → logprob: -10.38425350189209
    10. 'classmethod' → logprob: -10.50925350189209

Token 966: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03305675834417343
    2. '       ' → logprob: -3.6580567359924316
    3. ':
' → logprob: -5.283056735992432
    4. '):' → logprob: -6.658056735992432
    5. '):
' → logprob: -8.90805721282959
    6. ',' → logprob: -9.15805721282959
    7. '   ' → logprob: -9.90805721282959
    8. '():' → logprob: -10.03305721282959
    9. ')' → logprob: -11.78305721282959
    10. '(' → logprob: -11.90805721282959

Token 967: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001760148094035685
    2. 'min' → logprob: -6.876760005950928
    3. ' min' → logprob: -7.376760005950928
    4. ' if' → logprob: -10.251760482788086
    5. 'return' → logprob: -10.376760482788086
    6. 'if' → logprob: -11.126760482788086
    7. ' for' → logprob: -12.126760482788086
    8. ' return' → logprob: -12.626760482788086
    9. 'for' → logprob: -12.751760482788086
    10. '(min' → logprob: -13.001760482788086

Token 968: ' if' (ID: 538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05340586602687836
    2. 'if' (adapté à ' if') → logprob: -3.55340576171875
    3. '       ' → logprob: -3.80340576171875
    4. 'return' → logprob: -7.80340576171875
    5. ' min' → logprob: -8.67840576171875
    6. 'for' → logprob: -8.67840576171875
    7. 'bbox' → logprob: -9.05340576171875
    8. '(min' → logprob: -9.30340576171875
    9. ' if' → logprob: -10.05340576171875
    10. 'bounds' → logprob: -11.30340576171875

Token 969: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.39101269841194153
    2. 'not' → logprob: -1.6410126686096191
    3. 'cls' → logprob: -2.141012668609619
    4. ' not' → logprob: -5.016012668609619
    5. 'Character' → logprob: -6.016012668609619
    6. ' len' → logprob: -6.641012668609619
    7. 'super' → logprob: -7.266012668609619
    8. '   ' → logprob: -7.891012668609619
    9. 'points' → logprob: -8.266013145446777
    10. '(len' → logprob: -8.391013145446777

Token 970: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -5.455048449221067e-05
    2. ' points' → logprob: -10.000054359436035
    3. '(points' → logprob: -12.375054359436035
    4. 'cls' → logprob: -12.875054359436035
    5. 'point' → logprob: -14.125054359436035
    6. 'len' → logprob: -14.375054359436035
    7. 'Character' → logprob: -15.875054359436035
    8. 'p' → logprob: -16.25005531311035
    9. '	points' → logprob: -16.25005531311035
    10. '(' → logprob: -16.93755531311035

Token 971: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6680692434310913
    2. ':' → logprob: -0.7930692434310913
    3. ':return' → logprob: -3.543069362640381
    4. ' or' → logprob: -6.418069362640381
    5. '       ' → logprob: -6.543069362640381
    6. '   ' → logprob: -6.668069362640381
    7. 'or' → logprob: -7.043069362640381
    8. ':
' → logprob: -8.168068885803223
    9. '           ' → logprob: -8.543068885803223
    10. 'return' → logprob: -9.043068885803223

Token 972: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.880069375038147
    2. ':
' → logprob: -0.880069375038147
    3. ':' → logprob: -2.3800692558288574
    4. '       ' → logprob: -2.6300692558288574
    5. ' or' → logprob: -5.880069255828857
    6. ':return' → logprob: -6.880069255828857
    7. ' and' → logprob: -7.505069255828857
    8. ' return' → logprob: -7.755069255828857
    9. '):
' → logprob: -7.880069255828857
    10. 'return' → logprob: -8.255069732666016

Token 973: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004249469842761755
    2. ' return' → logprob: -6.004249572753906
    3. '           ' → logprob: -6.504249572753906
    4. '
' → logprob: -8.754249572753906
    5. '       ' → logprob: -9.629249572753906
    6. 'False' → logprob: -10.004249572753906
    7. '               ' → logprob: -13.504249572753906
    8. '0' → logprob: -13.754249572753906
    9. ':return' → logprob: -13.879249572753906
    10. 'eturn' → logprob: -14.379249572753906

Token 974: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.935296834039036e-06
    2. ' False' → logprob: -12.75000286102295
    3. 'false' → logprob: -19.750003814697266
    4. 'True' → logprob: -20.625003814697266
    5. '(False' → logprob: -21.750003814697266
    6. '   ' → logprob: -22.625003814697266
    7. '
' → logprob: -23.000003814697266
    8. 'None' → logprob: -24.000003814697266
    9. '_false' → logprob: -24.125003814697266
    10. '=False' → logprob: -24.750003814697266

Token 975: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008714203722774982
    2. '
' → logprob: -4.758714199066162
    3. '   ' → logprob: -10.38371467590332
    4. '        
' → logprob: -10.63371467590332
    5. ',' → logprob: -11.00871467590332
    6. '
' → logprob: -12.50871467590332
    7. '    
' → logprob: -12.50871467590332
    8. '           ' → logprob: -13.13371467590332
    9. 'p' → logprob: -13.13371467590332
    10. '      ' → logprob: -13.25871467590332

Token 976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006565583753399551
    2. '
' → logprob: -7.500656604766846
    3. ',' → logprob: -10.125656127929688
    4. '        
' → logprob: -10.750656127929688
    5. '	' → logprob: -11.625656127929688
    6. ' 
' → logprob: -11.875656127929688
    7. '   ' → logprob: -12.000656127929688
    8. '           ' → logprob: -13.250656127929688
    9. '    
' → logprob: -13.250656127929688
    10. '        ' → logprob: -13.375656127929688

Token 977: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13110311329364777
    2. ' min' → logprob: -2.381103038787842
    3. 'min' (adapté à ' min') → logprob: -3.506103038787842
    4. '(min' → logprob: -8.881103515625
    5. ' p' → logprob: -10.381103515625
    6. ' cls' → logprob: -10.381103515625
    7. ' for' → logprob: -10.631103515625
    8. 'p' → logprob: -10.756103515625
    9. 'return' → logprob: -10.881103515625
    10. '   ' → logprob: -11.256103515625

Token 978: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.001375591498799622
    2. '_' → logprob: -7.251375675201416
    3. 'x' → logprob: -7.376375675201416
    4. '_,' → logprob: -11.126375198364258
    5. '(x' → logprob: -12.751375198364258
    6. '_points' → logprob: -12.751375198364258
    7. '<|end|>' → logprob: -12.751375198364258
    8. '<|end|>' → logprob: -12.876375198364258
    9. '(points' → logprob: -13.251375198364258
    10. '_
' → logprob: -13.501375198364258

Token 979: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.35706390615087e-05
    2. ',min' → logprob: -11.250033378601074
    3. ' ,' → logprob: -12.125033378601074
    4. '_,' → logprob: -12.250033378601074
    5. '=' → logprob: -12.250033378601074
    6. ',p' → logprob: -13.875033378601074
    7. '<|end|>' → logprob: -14.125033378601074
    8. ' =' → logprob: -14.625033378601074
    9. ',
' → logprob: -14.625033378601074
    10. ',_' → logprob: -14.875033378601074

Token 980: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0002613358374219388
    2. ' min' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.750261306762695
    4. '(min' → logprob: -17.875261306762695
    5. '	min' → logprob: -18.875261306762695
    6. '=min' → logprob: -19.125261306762695
    7. 'max' → logprob: -19.750261306762695
    8. '[min' → logprob: -21.500261306762695
    9. 'minimum' → logprob: -22.125261306762695
    10. '  ' → logprob: -22.125261306762695

Token 981: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0006197464535944164
    2. '([' → logprob: -7.875619888305664
    3. 'p' → logprob: -8.375619888305664
    4. '[p' → logprob: -12.500619888305664
    5. '(pt' → logprob: -12.750619888305664
    6. '((' → logprob: -14.125619888305664
    7. '(point' → logprob: -14.250619888305664
    8. '({' → logprob: -14.500619888305664
    9. '(' → logprob: -15.000619888305664
    10. '(x' → logprob: -16.250619888305664

Token 982: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.006987207103520632
    2. '.' → logprob: -6.25698709487915
    3. '(p' → logprob: -6.50698709487915
    4. 'x' → logprob: -6.63198709487915
    5. '(x' → logprob: -7.50698709487915
    6. '.points' → logprob: -7.75698709487915
    7. '(points' → logprob: -8.131987571716309
    8. '.p' → logprob: -8.631987571716309
    9. ' .' → logprob: -9.131987571716309
    10. '.point' → logprob: -9.131987571716309

Token 983: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6933238506317139
    2. 'for' → logprob: -0.6933238506317139
    3. 'p' → logprob: -9.193324089050293
    4. '(p' → logprob: -9.818324089050293
    5. ' p' → logprob: -11.693324089050293
    6. '       ' → logprob: -12.943324089050293
    7. '           ' → logprob: -13.318324089050293
    8. '   ' → logprob: -13.443324089050293
    9. ')' → logprob: -13.443324089050293
    10. ',' → logprob: -13.818324089050293

Token 984: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02539987675845623
    2. ' p' → logprob: -4.275399684906006
    3. 'points' → logprob: -4.775399684906006
    4. ' points' → logprob: -5.900399684906006
    5. 'point' → logprob: -16.150400161743164
    6. '_points' → logprob: -16.275400161743164
    7. '	points' → logprob: -16.775400161743164
    8. 'Points' → logprob: -17.025400161743164
    9. ')p' → logprob: -17.400400161743164
    10. 'pts' → logprob: -17.400400161743164

Token 985: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24605441093444824
    2. 'p' → logprob: -2.7460544109344482
    3. 'in' → logprob: -2.7460544109344482
    4. 'points' → logprob: -2.9960544109344482
    5. ' points' → logprob: -3.3710544109344482
    6. ' p' → logprob: -5.371054649353027
    7. 'oints' → logprob: -7.371054649353027
    8. '(points' → logprob: -9.621054649353027
    9. '.points' → logprob: -10.996054649353027
    10. '_points' → logprob: -11.246054649353027

Token 986: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -9.627176768844947e-05
    2. ' points' → logprob: -9.250096321105957
    3. '	points' → logprob: -17.12509536743164
    4. 'oints' → logprob: -17.75009536743164
    5. 'point' → logprob: -18.00009536743164
    6. '(points' → logprob: -18.50009536743164
    7. 'p' → logprob: -19.00009536743164
    8. '
' → logprob: -19.50009536743164
    9. '.points' → logprob: -19.87509536743164
    10. '   ' → logprob: -20.50009536743164

Token 987: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00688290735706687
    2. ')' → logprob: -5.506883144378662
    3. '       ' → logprob: -5.881883144378662
    4. 'if' → logprob: -12.881882667541504
    5. ')
' → logprob: -13.131882667541504
    6. ' if' → logprob: -13.381882667541504
    7. ' )
' → logprob: -13.506882667541504
    8. ');' → logprob: -14.131882667541504
    9. '
' → logprob: -14.256882667541504
    10. '),' → logprob: -14.631882667541504

Token 988: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5781403183937073
    2. ',' → logprob: -0.8281403183937073
    3. ',min' → logprob: -7.3281402587890625
    4. ' min' → logprob: -7.7031402587890625
    5. '	' → logprob: -8.078140258789062
    6. '<|end|>' → logprob: -8.578140258789062
    7. 'min' → logprob: -9.203140258789062
    8. ' ,' → logprob: -9.328140258789062
    9. '   ' → logprob: -9.703140258789062
    10. '	min' → logprob: -9.828140258789062

Token 989: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.4764445424079895
    2. ' min' → logprob: -0.9764445424079895
    3. '       ' → logprob: -6.101444721221924
    4. 'max' → logprob: -9.226444244384766
    5. ' max' → logprob: -11.101444244384766
    6. '_min' → logprob: -12.476444244384766
    7. '	min' → logprob: -12.976444244384766
    8. ',min' → logprob: -13.476444244384766
    9. '(min' → logprob: -13.851444244384766
    10. '.min' → logprob: -13.976444244384766

Token 990: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.003273256588727236
    2. '(p' → logprob: -6.0032734870910645
    3. '_' → logprob: -7.5032734870910645
    4. 'y' → logprob: -8.628273010253906
    5. '_x' → logprob: -10.253273010253906
    6. '(' → logprob: -12.003273010253906
    7. '```' → logprob: -12.128273010253906
    8. '_p' → logprob: -12.503273010253906
    9. 'Y' → logprob: -13.003273010253906
    10. '(y' → logprob: -13.128273010253906

Token 991: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34898385405540466
    2. '=' → logprob: -1.223983883857727
    3. 'for' → logprob: -7.9739837646484375
    4. ' for' → logprob: -8.598983764648438
    5. ' in' → logprob: -12.723983764648438
    6. '<|end|>' → logprob: -12.723983764648438
    7. ' ' → logprob: -14.098983764648438
    8. 'in' → logprob: -14.098983764648438
    9. '   ' → logprob: -14.473983764648438
    10. ',' → logprob: -15.098983764648438

Token 992: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.7610454708337784e-05
    2. ' min' → logprob: -10.500027656555176
    3. '(min' → logprob: -17.25002670288086
    4. 'max' → logprob: -20.87502670288086
    5. '[min' → logprob: -21.00002670288086
    6. 'p' → logprob: -21.37502670288086
    7. '	min' → logprob: -22.25002670288086
    8. 'minimum' → logprob: -22.75002670288086
    9. 'mini' → logprob: -23.25002670288086
    10. 'minimal' → logprob: -23.37502670288086

Token 993: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.200166469876422e-06
    2. 'p' → logprob: -12.250004768371582
    3. '(' → logprob: -15.750004768371582
    4. ' (' → logprob: -16.7500057220459
    5. '[p' → logprob: -17.1250057220459
    6. '(
' → logprob: -17.5000057220459
    7. '{' → logprob: -17.7500057220459
    8. '([' → logprob: -17.8750057220459
    9. 'for' → logprob: -18.2500057220459
    10. '   ' → logprob: -18.3750057220459

Token 994: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.10378624498844147
    2. 'p' → logprob: -2.3537862300872803
    3. '.p' → logprob: -6.353786468505859
    4. 'y' → logprob: -6.853786468505859
    5. 'for' → logprob: -7.603786468505859
    6. ' p' → logprob: -9.10378646850586
    7. '(' → logprob: -10.10378646850586
    8. '=' → logprob: -11.22878646850586
    9. '   ' → logprob: -11.22878646850586
    10. '[' → logprob: -11.47878646850586

Token 995: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759420990943909
    2. 'for' → logprob: -0.8259420990943909
    3. '(p' → logprob: -13.700942039489746
    4. ' in' → logprob: -14.075942039489746
    5. ')' → logprob: -14.700942039489746
    6. '	for' → logprob: -16.325942993164062
    7. 'in' → logprob: -16.700942993164062
    8. '
' → logprob: -16.700942993164062
    9. ' ' → logprob: -16.950942993164062
    10. '   ' → logprob: -17.450942993164062

Token 996: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008501286501996219
    2. 'points' → logprob: -7.125850200653076
    3. ' p' → logprob: -10.125849723815918
    4. ' points' → logprob: -13.000849723815918
    5. '(p' → logprob: -13.125849723815918
    6. '(points' → logprob: -15.375849723815918
    7. '[p' → logprob: -15.500849723815918
    8. '
' → logprob: -15.500849723815918
    9. 'point' → logprob: -15.750849723815918
    10. '<p' → logprob: -15.875849723815918

Token 997: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.40007707476615906
    2. 'points' → logprob: -1.2750771045684814
    3. 'in' → logprob: -3.9000771045684814
    4. 'for' → logprob: -4.400076866149902
    5. ' in' → logprob: -4.650076866149902
    6. ' points' → logprob: -5.400076866149902
    7. ' p' → logprob: -6.775076866149902
    8. ' for' → logprob: -6.775076866149902
    9. '.points' → logprob: -7.775076866149902
    10. '<|end|>' → logprob: -8.400076866149902

Token 998: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0003035266126971692
    2. ' points' → logprob: -8.750303268432617
    3. 'p' → logprob: -8.875303268432617
    4. '(points' → logprob: -12.625303268432617
    5. '
' → logprob: -14.750303268432617
    6. 'point' → logprob: -14.875303268432617
    7. '.points' → logprob: -14.875303268432617
    8. 'oints' → logprob: -15.000303268432617
    9. 'Points' → logprob: -15.875303268432617
    10. '	points' → logprob: -15.875303268432617

Token 999: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.15323862433433533
    2. '       ' → logprob: -2.528238534927368
    3. ')' → logprob: -2.778238534927368
    4. '
' → logprob: -9.653238296508789
    5. ',' → logprob: -11.278238296508789
    6. '<|end|>' → logprob: -11.653238296508789
    7. ')
' → logprob: -11.778238296508789
    8. '   ' → logprob: -12.403238296508789
    9. ' )
' → logprob: -12.528238296508789
    10. '):
' → logprob: -12.653238296508789

Token 1000: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.034592388459714e-06
    2. 'max' → logprob: -12.375005722045898
    3. ' max' → logprob: -13.750005722045898
    4. '```' → logprob: -14.625005722045898
    5. ',' → logprob: -16.0000057220459
    6. '
' → logprob: -17.6250057220459
    7. '[max' → logprob: -17.6250057220459
    8. '           ' → logprob: -18.1250057220459
    9. ',max' → logprob: -18.5000057220459
    10. '[' → logprob: -18.6250057220459

Token 1001: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0019300628919154406
    2. '       ' → logprob: -6.251930236816406
    3. ' max' → logprob: -13.876930236816406
    4. '   ' → logprob: -14.751930236816406
    5. '	max' → logprob: -17.126930236816406
    6. '```' → logprob: -17.251930236816406
    7. '_max' → logprob: -17.751930236816406
    8. '           ' → logprob: -18.376930236816406
    9. '(max' → logprob: -18.501930236816406
    10. 'maxlength' → logprob: -19.001930236816406

Token 1002: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0023579292465001345
    2. '(p' → logprob: -6.1273579597473145
    3. ' =' → logprob: -9.627357482910156
    4. 'x' → logprob: -9.752357482910156
    5. '=' → logprob: -11.252357482910156
    6. '=p' → logprob: -11.752357482910156
    7. '   ' → logprob: -12.002357482910156
    8. 'X' → logprob: -12.127357482910156
    9. '(max' → logprob: -12.627357482910156
    10. '```' → logprob: -12.627357482910156

Token 1003: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519734501838684
    2. '=' → logprob: -1.5019733905792236
    3. '<|end|>' → logprob: -10.251973152160645
    4. ',' → logprob: -12.501973152160645
    5. ' ' → logprob: -13.376973152160645
    6. '<|end|>' → logprob: -14.376973152160645
    7. ')' → logprob: -14.626973152160645
    8. ' in' → logprob: -15.001973152160645
    9. '=
' → logprob: -15.126973152160645
    10. '=None' → logprob: -15.251973152160645

Token 1004: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -8.506661833962426e-05
    2. ' max' → logprob: -9.50008487701416
    3. 'min' → logprob: -11.50008487701416
    4. '   ' → logprob: -18.625085830688477
    5. '(max' → logprob: -19.125085830688477
    6. '=max' → logprob: -21.375085830688477
    7. '	max' → logprob: -21.625085830688477
    8. ' min' → logprob: -21.875085830688477
    9. '       ' → logprob: -22.000085830688477
    10. '  ' → logprob: -22.625085830688477

Token 1005: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.650518920039758e-06
    2. 'p' → logprob: -12.750003814697266
    3. '(' → logprob: -15.250003814697266
    4. ' (' → logprob: -15.375003814697266
    5. ' p' → logprob: -16.625003814697266
    6. '(point' → logprob: -16.750003814697266
    7. '[p' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.125003814697266
    9. '(
' → logprob: -18.375003814697266
    10. '(x' → logprob: -18.875003814697266

Token 1006: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.1534493863582611
    2. '(p' → logprob: -2.778449296951294
    3. 'x' → logprob: -2.903449296951294
    4. '.p' → logprob: -4.403449535369873
    5. '(points' → logprob: -4.903449535369873
    6. '.points' → logprob: -6.778449535369873
    7. '<|end|>' → logprob: -7.028449535369873
    8. ')' → logprob: -7.278449535369873
    9. 'p' → logprob: -7.528449535369873
    10. '(x' → logprob: -7.653449535369873

Token 1007: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12762495875358582
    2. 'for' → logprob: -2.127624988555908
    3. ')' → logprob: -7.502624988555908
    4. ')+' → logprob: -9.37762451171875
    5. ',' → logprob: -11.25262451171875
    6. '+' → logprob: -11.25262451171875
    7. ' +' → logprob: -11.50262451171875
    8. ' in' → logprob: -11.87762451171875
    9. '(p' → logprob: -12.87762451171875
    10. '
' → logprob: -12.87762451171875

Token 1008: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.4121114822482923e-06
    2. ' p' → logprob: -12.625003814697266
    3. '(p' → logprob: -16.500003814697266
    4. 'points' → logprob: -17.750003814697266
    5. '
' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.500003814697266
    7. '	p' → logprob: -18.750003814697266
    8. '<p' → logprob: -19.125003814697266
    9. 'point' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.125003814697266

Token 1009: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09573888778686523
    2. ' p' → logprob: -3.0957388877868652
    3. 'points' → logprob: -3.3457388877868652
    4. ' points' → logprob: -4.720738887786865
    5. ' in' → logprob: -6.345738887786865
    6. 'in' → logprob: -9.470739364624023
    7. '(points' → logprob: -10.095739364624023
    8. '	points' → logprob: -11.220739364624023
    9. '.points' → logprob: -11.845739364624023
    10. 'point' → logprob: -12.595739364624023

Token 1010: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0007143391412682831
    2. ' points' → logprob: -7.500714302062988
    3. 'p' → logprob: -8.875714302062988
    4. '(points' → logprob: -10.875714302062988
    5. 'point' → logprob: -14.000714302062988
    6. '
' → logprob: -14.625714302062988
    7. '[p' → logprob: -14.875714302062988
    8. '	points' → logprob: -15.375714302062988
    9. '[' → logprob: -15.500714302062988
    10. '.points' → logprob: -15.500714302062988

Token 1011: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.028462115675210953
    2. ')' → logprob: -3.7784621715545654
    3. '       ' → logprob: -5.403461933135986
    4. ')+' → logprob: -7.278461933135986
    5. ')
' → logprob: -12.653462409973145
    6. '   ' → logprob: -12.903462409973145
    7. '+' → logprob: -13.153462409973145
    8. ' )
' → logprob: -13.778462409973145
    9. ' +' → logprob: -14.153462409973145
    10. '):
' → logprob: -15.028462409973145

Token 1012: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023059594968799502
    2. ' =' → logprob: -9.00023078918457
    3. '=' → logprob: -9.37523078918457
    4. ',' → logprob: -12.00023078918457
    5. '
' → logprob: -12.50023078918457
    6. '<|end|>' → logprob: -12.62523078918457
    7. '        ' → logprob: -13.37523078918457
    8. ' and' → logprob: -13.62523078918457
    9. '==' → logprob: -14.00023078918457
    10. '=max' → logprob: -14.50023078918457

Token 1013: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.011477827094495296
    2. ' max' → logprob: -4.511477947235107
    3. '       ' → logprob: -7.761477947235107
    4. 'min' → logprob: -13.76147747039795
    5. '(max' → logprob: -13.88647747039795
    6. '=max' → logprob: -14.13647747039795
    7. '_max' → logprob: -14.26147747039795
    8. '=' → logprob: -15.13647747039795
    9. '	max' → logprob: -15.76147747039795
    10. ',max' → logprob: -16.011478424072266

Token 1014: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.2723104848410003e-05
    2. '(p' → logprob: -11.500022888183594
    3. 'x' → logprob: -11.875022888183594
    4. '```' → logprob: -13.125022888183594
    5. '_y' → logprob: -13.625022888183594
    6. 'X' → logprob: -14.750022888183594
    7. '   ' → logprob: -15.250022888183594
    8. '(_' → logprob: -15.250022888183594
    9. '_' → logprob: -15.375022888183594
    10. '=' → logprob: -15.875022888183594

Token 1015: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22542184591293335
    2. '=' → logprob: -1.6004219055175781
    3. '<|end|>' → logprob: -12.350421905517578
    4. '=
' → logprob: -13.100421905517578
    5. ' =
' → logprob: -14.350421905517578
    6. '==' → logprob: -15.475421905517578
    7. '=p' → logprob: -15.725421905517578
    8. ',' → logprob: -15.975421905517578
    9. ' ==' → logprob: -15.975421905517578
    10. '=None' → logprob: -16.100421905517578

Token 1016: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004642184358090162
    2. ' max' → logprob: -5.379642009735107
    3. 'min' → logprob: -10.754642486572266
    4. '(max' → logprob: -15.504642486572266
    5. '   ' → logprob: -15.754642486572266
    6. ' min' → logprob: -15.879642486572266
    7. '	max' → logprob: -17.254642486572266
    8. ' ' → logprob: -17.754642486572266
    9. '
' → logprob: -18.004642486572266
    10. '       ' → logprob: -18.504642486572266

Token 1017: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.60414821645827e-06
    2. 'p' → logprob: -12.500004768371582
    3. '[p' → logprob: -15.625004768371582
    4. '   ' → logprob: -15.750004768371582
    5. '(points' → logprob: -16.375003814697266
    6. 'for' → logprob: -16.375003814697266
    7. ' p' → logprob: -16.625003814697266
    8. '       ' → logprob: -17.250003814697266
    9. ' (' → logprob: -17.625003814697266
    10. '(
' → logprob: -17.750003814697266

Token 1018: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.4747849702835083
    2. 'y' → logprob: -1.3497849702835083
    3. '_y' → logprob: -2.3497848510742188
    4. '.x' → logprob: -4.474784851074219
    5. 'x' → logprob: -4.599784851074219
    6. '_x' → logprob: -7.099784851074219
    7. 'Y' → logprob: -7.224784851074219
    8. 'points' → logprob: -9.974784851074219
    9. 'p' → logprob: -10.099784851074219
    10. '(p' → logprob: -10.724784851074219

Token 1019: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.54676753282547
    2. ' for' → logprob: -1.1717674732208252
    3. '+' → logprob: -2.546767473220825
    4. ' +' → logprob: -3.421767473220825
    5. 'in' → logprob: -9.671767234802246
    6. ' in' → logprob: -10.171767234802246
    7. '   ' → logprob: -10.296767234802246
    8. ' ' → logprob: -10.421767234802246
    9. '
' → logprob: -10.671767234802246
    10. 'min' → logprob: -10.671767234802246

Token 1020: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0012874980457127094
    2. 'p' → logprob: -6.876287460327148
    3. ' points' → logprob: -8.501287460327148
    4. '(points' → logprob: -10.001287460327148
    5. '[p' → logprob: -13.376287460327148
    6. '
' → logprob: -14.001287460327148
    7. '	points' → logprob: -14.126287460327148
    8. ' p' → logprob: -14.126287460327148
    9. 'point' → logprob: -14.876287460327148
    10. '.points' → logprob: -15.001287460327148

Token 1021: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.13830548524856567
    2. '.points' → logprob: -2.513305425643921
    3. ' points' → logprob: -3.638305425643921
    4. '(points' → logprob: -4.0133056640625
    5. 'for' → logprob: -5.8883056640625
    6. '	points' → logprob: -8.0133056640625
    7. ' for' → logprob: -8.5133056640625
    8. ' in' → logprob: -8.5133056640625
    9. 'in' → logprob: -9.0133056640625
    10. 'oints' → logprob: -9.7633056640625

Token 1022: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0004934602184221148
    2. ' points' → logprob: -7.75049352645874
    3. '(points' → logprob: -10.375493049621582
    4. 'p' → logprob: -10.500493049621582
    5. '	points' → logprob: -13.750493049621582
    6. '
' → logprob: -14.000493049621582
    7. 'point' → logprob: -14.625493049621582
    8. '.points' → logprob: -14.875493049621582
    9. '[' → logprob: -15.250493049621582
    10. '[p' → logprob: -15.375493049621582

Token 1023: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1910722255706787
    2. '       ' → logprob: -1.1910722255706787
    3. '):
' → logprob: -1.4410722255706787
    4. ')
' → logprob: -2.4410722255706787
    5. '):' → logprob: -2.9410722255706787
    6. '+' → logprob: -4.566072463989258
    7. ' +' → logprob: -6.066072463989258
    8. '   ' → logprob: -6.566072463989258
    9. ':' → logprob: -7.691072463989258
    10. ':
' → logprob: -8.191072463989258

Token 1024: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028122442308813334
    2. ':' → logprob: -6.752812385559082
    3. '```' → logprob: -7.627812385559082
    4. '<|end|>' → logprob: -7.877812385559082
    5. '   ' → logprob: -8.502812385559082
    6. '           ' → logprob: -8.752812385559082
    7. '{' → logprob: -9.127812385559082
    8. '        
' → logprob: -9.877812385559082
    9. '<|end|>' → logprob: -10.002812385559082
    10. '        ' → logprob: -10.127812385559082

Token 1025: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4744233191013336
    2. 'return' (adapté à ' return') → logprob: -0.9744232892990112
    3. ' return' → logprob: -7.974423408508301
    4. '   ' → logprob: -13.3494234085083
    5. '	return' → logprob: -15.4744234085083
    6. '{return' → logprob: -15.9744234085083
    7. ':return' → logprob: -16.099422454833984
    8. '```' → logprob: -17.474422454833984
    9. '           ' → logprob: -17.724422454833984
    10. '      ' → logprob: -17.849422454833984

Token 1026: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0015286672860383987
    2. ' cls' → logprob: -6.876528739929199
    3. 'Character' → logprob: -7.626528739929199
    4. '(cls' → logprob: -12.1265287399292
    5. '   ' → logprob: -13.6265287399292
    6. 'super' → logprob: -14.3765287399292
    7. ' Character' → logprob: -14.3765287399292
    8. '       ' → logprob: -14.7515287399292
    9. 'cl' → logprob: -17.001527786254883
    10. 'Class' → logprob: -17.376527786254883

Token 1027: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -6.909333023941144e-05
    2. '.pattern' → logprob: -9.875068664550781
    3. '.' → logprob: -11.125068664550781
    4. 'match' → logprob: -13.000068664550781
    5. '.matches' → logprob: -16.12506866455078
    6. '.matcher' → logprob: -16.25006866455078
    7. '.m' → logprob: -16.50006866455078
    8. ' .' → logprob: -16.75006866455078
    9. '().' → logprob: -16.75006866455078
    10. '   ' → logprob: -16.75006866455078

Token 1028: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -4.36574100604048e-06
    2. 'pattern' → logprob: -12.500004768371582
    3. '_' → logprob: -15.000004768371582
    4. '_patterns' → logprob: -16.500003814697266
    5. '```' → logprob: -17.000003814697266
    6. '
' → logprob: -17.375003814697266
    7. '_token' → logprob: -17.875003814697266
    8. 'Pattern' → logprob: -18.000003814697266
    9. '   ' → logprob: -18.375003814697266
    10. '_PATTERN' → logprob: -18.500003814697266

Token 1029: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.7432603272027336e-06
    2. 'points' → logprob: -13.625001907348633
    3. '(
' → logprob: -14.625001907348633
    4. '(' → logprob: -17.000001907348633
    5. ' points' → logprob: -18.250001907348633
    6. '(point' → logprob: -18.500001907348633
    7. '	points' → logprob: -18.875001907348633
    8. '(pattern' → logprob: -19.625001907348633
    9. '(p' → logprob: -21.000001907348633
    10. ' (' → logprob: -21.250001907348633

Token 1030: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ',min' → logprob: -11.875019073486328
    3. ' ,' → logprob: -12.000019073486328
    4. '       ' → logprob: -13.000019073486328
    5. ',p' → logprob: -13.375019073486328
    6. '   ' → logprob: -14.250019073486328
    7. ',
' → logprob: -14.500019073486328
    8. '           ' → logprob: -15.125019073486328
    9. 'min' → logprob: -15.625019073486328
    10. '(min' → logprob: -16.250019073486328

Token 1031: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.7697225252486533e-06
    2. ' min' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.125003814697266
    4. '
' → logprob: -19.500003814697266
    5. '(min' → logprob: -20.625003814697266
    6. '[min' → logprob: -21.500003814697266
    7. ' ' → logprob: -21.625003814697266
    8. '	min' → logprob: -22.125003814697266
    9. '       ' → logprob: -22.625003814697266
    10. '0' → logprob: -22.750003814697266

Token 1032: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00025108797126449645
    2. 'x' → logprob: -8.875250816345215
    3. '(min' → logprob: -9.125250816345215
    4. 'min' → logprob: -13.750250816345215
    5. '[min' → logprob: -15.500250816345215
    6. '<|end|>' → logprob: -15.500250816345215
    7. '=min' → logprob: -15.500250816345215
    8. '(x' → logprob: -15.875250816345215
    9. '_min' → logprob: -16.75025177001953
    10. ')' → logprob: -17.12525177001953

Token 1033: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. ' ,' → logprob: -10.250042915344238
    3. ',min' → logprob: -12.625042915344238
    4. '   ' → logprob: -13.125042915344238
    5. ',
' → logprob: -13.375042915344238
    6. '=' → logprob: -14.875042915344238
    7. 'min' → logprob: -15.750042915344238
    8. ',p' → logprob: -16.875043869018555
    9. '+' → logprob: -17.125043869018555
    10. '_,' → logprob: -17.125043869018555

Token 1034: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0206720617134124e-05
    2. ' min' → logprob: -11.50001049041748
    3. '
' → logprob: -19.750009536743164
    4. '   ' → logprob: -19.750009536743164
    5. 'max' → logprob: -20.500009536743164
    6. '	min' → logprob: -21.375009536743164
    7. ' ' → logprob: -21.500009536743164
    8. '(min' → logprob: -22.000009536743164
    9. '[min' → logprob: -22.125009536743164
    10. '_min' → logprob: -22.250009536743164

Token 1035: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.16250751912593842
    2. '_x' → logprob: -1.9125075340270996
    3. 'y' → logprob: -6.2875075340271
    4. 'x' → logprob: -7.9125075340271
    5. 'Y' → logprob: -10.162507057189941
    6. 'min' → logprob: -12.287507057189941
    7. '```' → logprob: -12.787507057189941
    8. '   ' → logprob: -12.912507057189941
    9. 'X' → logprob: -14.350007057189941
    10. ')' → logprob: -14.412507057189941

Token 1036: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.341087570646778e-05
    2. ' ,' → logprob: -9.375093460083008
    3. ',min' → logprob: -12.500093460083008
    4. ',max' → logprob: -13.250093460083008
    5. ',
' → logprob: -13.500093460083008
    6. '   ' → logprob: -13.875093460083008
    7. '       ' → logprob: -15.750093460083008
    8. '```' → logprob: -16.125093460083008
    9. ' ' → logprob: -16.375093460083008
    10. 'min' → logprob: -16.375093460083008

Token 1037: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007110013975761831
    2. 'min' → logprob: -7.250710964202881
    3. ' max' → logprob: -13.750711441040039
    4. '
' → logprob: -20.00071144104004
    5. ' min' → logprob: -20.50071144104004
    6. '   ' → logprob: -20.87571144104004
    7. '(max' → logprob: -22.62571144104004
    8. '```' → logprob: -22.87571144104004
    9. '       ' → logprob: -23.25071144104004
    10. '     ' → logprob: -23.25071144104004

Token 1038: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.06213495135307312
    2. 'x' → logprob: -2.8121349811553955
    3. 'min' → logprob: -9.312134742736816
    4. 'max' → logprob: -10.562134742736816
    5. '0' → logprob: -11.937134742736816
    6. '   ' → logprob: -11.937134742736816
    7. '```' → logprob: -11.937134742736816
    8. '(min' → logprob: -12.187134742736816
    9. '[' → logprob: -12.687134742736816
    10. ')' → logprob: -12.874634742736816

Token 1039: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00344658805988729
    2. ' ,' → logprob: -6.003446578979492
    3. '+' → logprob: -7.503446578979492
    4. ' +' → logprob: -7.878446578979492
    5. ',
' → logprob: -11.003446578979492
    6. '+,' → logprob: -12.253446578979492
    7. ')' → logprob: -12.378446578979492
    8. '   ' → logprob: -12.628446578979492
    9. '       ' → logprob: -13.253446578979492
    10. ',p' → logprob: -13.378446578979492

Token 1040: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.048683203756809235
    2. 'min' → logprob: -3.0486831665039062
    3. ' max' → logprob: -9.298683166503906
    4. ' min' → logprob: -12.423683166503906
    5. '
' → logprob: -16.548683166503906
    6. '   ' → logprob: -17.298683166503906
    7. ' ' → logprob: -18.048683166503906
    8. '```' → logprob: -18.423683166503906
    9. '    ' → logprob: -18.548683166503906
    10. 'm' → logprob: -18.673683166503906

Token 1041: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.31335389614105225
    2. 'x' → logprob: -1.3133538961410522
    3. '_y' → logprob: -9.813353538513184
    4. 'max' → logprob: -11.188353538513184
    5. '5' → logprob: -12.313353538513184
    6. '4' → logprob: -13.188353538513184
    7. '6' → logprob: -13.313353538513184
    8. 'y' → logprob: -13.438353538513184
    9. '<|end|>' → logprob: -13.438353538513184
    10. '
' → logprob: -13.813353538513184

Token 1042: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.315936429426074e-05
    2. ' ,' → logprob: -9.500082969665527
    3. '   ' → logprob: -12.500082969665527
    4. '       ' → logprob: -13.000082969665527
    5. ',
' → logprob: -13.750082969665527
    6. '           ' → logprob: -15.250082969665527
    7. ',class' → logprob: -15.375082969665527
    8. 'cls' → logprob: -15.500082969665527
    9. '    ' → logprob: -16.125083923339844
    10. '        ' → logprob: -16.375083923339844

Token 1043: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.002487903693690896
    2. ' cls' → logprob: -6.002488136291504
    3. '           ' → logprob: -12.252488136291504
    4. '[
' → logprob: -12.502488136291504
    5. '       ' → logprob: -13.502488136291504
    6. '[' → logprob: -14.002488136291504
    7. '['' → logprob: -14.377488136291504
    8. '(cls' → logprob: -15.002488136291504
    9. '               ' → logprob: -15.752488136291504
    10. 'class' → logprob: -15.752488136291504

Token 1044: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.0001737431448418647
    2. 'pattern' → logprob: -8.750173568725586
    3. '.' → logprob: -11.125173568725586
    4. ' .' → logprob: -15.750173568725586
    5. '.p' → logprob: -16.250173568725586
    6. ').' → logprob: -17.000173568725586
    7. '   ' → logprob: -17.250173568725586
    8. ' pattern' → logprob: -18.000173568725586
    9. '.Pattern' → logprob: -18.000173568725586
    10. '\.' → logprob: -19.250173568725586

Token 1045: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003851517685689032
    2. '   ' → logprob: -8.125385284423828
    3. '       ' → logprob: -9.625385284423828
    4. ' )' → logprob: -11.625385284423828
    5. ')
' → logprob: -11.875385284423828
    6. '<|end|>' → logprob: -12.500385284423828
    7. ')return' → logprob: -13.875385284423828
    8. '<|end|>' → logprob: -15.125385284423828
    9. '[' → logprob: -15.250385284423828
    10. '  ' → logprob: -15.625385284423828

Token 1046: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01923244446516037
    2. '   ' → logprob: -4.144232273101807
    3. '
' → logprob: -5.894232273101807
    4. ' class' → logprob: -8.644232749938965
    5. '<|end|>' → logprob: -8.894232749938965
    6. '    
' → logprob: -10.394232749938965
    7. '<class' → logprob: -11.144232749938965
    8. '#' → logprob: -11.394232749938965
    9. ' ' → logprob: -11.519232749938965
    10. '```' → logprob: -11.769232749938965

Token 1047: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -2.8325677703833207e-05
    2. ' Digit' → logprob: -10.500028610229492
    3. 'Character' → logprob: -14.250028610229492
    4. '_digit' → logprob: -17.375028610229492
    5. 'digit' → logprob: -18.500028610229492
    6. 'Digital' → logprob: -18.500028610229492
    7. ' digit' → logprob: -19.125028610229492
    8. 'D' → logprob: -19.375028610229492
    9. 'Dot' → logprob: -19.875028610229492
    10. 'Letter' → logprob: -20.125028610229492

Token 1048: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '9' → logprob: -16.75
    3. '8' → logprob: -19.125
    4. ' ' → logprob: -20.625
    5. '
' → logprob: -20.75
    6. '0' → logprob: -21.25
    7. '```' → logprob: -21.375
    8. '7' → logprob: -21.5
    9. 'One' → logprob: -21.75
    10. '2' → logprob: -21.75

Token 1049: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -3.8889261304575484e-06
    2. ':' → logprob: -12.625003814697266
    3. 'Character' → logprob: -15.250003814697266
    4. '(' → logprob: -15.875003814697266
    5. '<Character' → logprob: -16.250003814697266
    6. '(Class' → logprob: -17.625003814697266
    7. '.Character' → logprob: -18.125003814697266
    8. ':
' → logprob: -18.250003814697266
    9. '(character' → logprob: -18.500003814697266
    10. '(
' → logprob: -19.875003814697266

Token 1050: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2523019015789032
    2. '):
' → logprob: -1.5023019313812256
    3. '(Character' → logprob: -8.377302169799805
    4. ')' → logprob: -9.752302169799805
    5. ':' → logprob: -10.502302169799805
    6. '   ' → logprob: -11.002302169799805
    7. 'Character' → logprob: -11.002302169799805
    8. '):

' → logprob: -11.752302169799805
    9. ':
' → logprob: -12.127302169799805
    10. '):
' → logprob: -12.377302169799805

Token 1051: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0910923108458519
    2. 'pattern' → logprob: -2.466092348098755
    3. 'class' → logprob: -7.216092109680176
    4. ' pattern' → logprob: -7.341092109680176
    5. '(pattern' → logprob: -8.216092109680176
    6. '.pattern' → logprob: -8.716092109680176
    7. '```' → logprob: -8.841092109680176
    8. ':
' → logprob: -9.466092109680176
    9. ':' → logprob: -10.091092109680176
    10. '):
' → logprob: -10.966092109680176

Token 1052: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: 0.0
    2. ' pattern' → logprob: -18.25
    3. '   ' → logprob: -18.375
    4. 'class' → logprob: -20.875
    5. '
' → logprob: -21.375
    6. 'char' → logprob: -21.75
    7. 'pat' → logprob: -22.375
    8. 'patterns' → logprob: -23.625
    9. '(pattern' → logprob: -23.75
    10. '       ' → logprob: -24.5

Token 1053: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0160506758838892
    2. '=' → logprob: -4.141050815582275
    3. '   ' → logprob: -11.516050338745117
    4. '=[
' → logprob: -12.266050338745117
    5. '=
' → logprob: -14.391050338745117
    6. ' =
' → logprob: -15.141050338745117
    7. '=[' → logprob: -15.266050338745117
    8. ' =[' → logprob: -15.766050338745117
    9. ' ' → logprob: -15.891050338745117
    10. ':' → logprob: -16.641050338745117

Token 1054: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.00016027313540689647
    2. '[' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.875160217285156
    4. '["' → logprob: -14.500160217285156
    5. ' [
' → logprob: -15.000160217285156
    6. '['' → logprob: -20.500160217285156
    7. ' ' → logprob: -20.500160217285156
    8. '[\' → logprob: -20.875160217285156
    9. '"' → logprob: -21.000160217285156
    10. '=[
' → logprob: -21.375160217285156

Token 1055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5806305408477783
    2. '"' → logprob: -0.8306305408477783
    3. '   ' → logprob: -5.580630302429199
    4. '[
' → logprob: -7.205630302429199
    5. '           ' → logprob: -9.2056303024292
    6. '["' → logprob: -10.5806303024292
    7. '[' → logprob: -11.3306303024292
    8. ''' → logprob: -11.3306303024292
    9. '     ' → logprob: -11.8306303024292
    10. ' ' → logprob: -12.3306303024292

Token 1056: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00014847563579678535
    2. '   ' → logprob: -9.62514877319336
    3. ' "' → logprob: -10.50014877319336
    4. ' ' → logprob: -10.87514877319336
    5. '       ' → logprob: -11.00014877319336
    6. ''' → logprob: -11.25014877319336
    7. '
' → logprob: -13.12514877319336
    8. '     ' → logprob: -13.50014877319336
    9. '  ' → logprob: -13.87514877319336
    10. '           ' → logprob: -15.00014877319336

Token 1057: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.05443272367119789
    2. '001' → logprob: -3.0544326305389404
    3. '"' → logprob: -5.4294328689575195
    4. '011' → logprob: -7.4294328689575195
    5. ' ' → logprob: -8.17943286895752
    6. ''' → logprob: -8.17943286895752
    7. '0' → logprob: -9.17943286895752
    8. '000' → logprob: -9.42943286895752
    9. '01' → logprob: -9.80443286895752
    10. ' "' → logprob: -10.92943286895752

Token 1058: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.07014150172472
    2. '",' → logprob: -2.695141553878784
    3. '"' → logprob: -9.070141792297363
    4. '","' → logprob: -9.945141792297363
    5. '',
' → logprob: -11.320141792297363
    6. '",
' → logprob: -11.570141792297363
    7. '   ' → logprob: -11.695141792297363
    8. '",'' → logprob: -12.570141792297363
    9. '       ' → logprob: -13.070141792297363
    10. '"
' → logprob: -13.320141792297363

Token 1059: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6939335465431213
    2. '       ' → logprob: -0.6939335465431213
    3. '   ' → logprob: -7.443933486938477
    4. '           ' → logprob: -8.818933486938477
    5. ' "' → logprob: -10.568933486938477
    6. '      ' → logprob: -11.693933486938477
    7. '     ' → logprob: -12.068933486938477
    8. ' ' → logprob: -12.318933486938477
    9. '	' → logprob: -12.818933486938477
    10. ''' → logprob: -13.318933486938477

Token 1060: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -6.074907287256792e-05
    2. '       ' → logprob: -10.25006103515625
    3. '   ' → logprob: -10.75006103515625
    4. ' ' → logprob: -12.87506103515625
    5. ' "' → logprob: -14.50006103515625
    6. '           ' → logprob: -15.25006103515625
    7. '     ' → logprob: -15.75006103515625
    8. '
' → logprob: -16.12506103515625
    9. ''' → logprob: -16.37506103515625
    10. '"
' → logprob: -16.50006103515625

Token 1061: '110' (ID: 7920)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.47952431440353394
    2. '010' → logprob: -0.9795243144035339
    3. '101' → logprob: -5.4795241355896
    4. '"' → logprob: -7.6045241355896
    5. '011' → logprob: -8.104524612426758
    6. '110' → logprob: -8.229524612426758
    7. '001' → logprob: -8.979524612426758
    8. '100' → logprob: -10.479524612426758
    9. ' ' → logprob: -11.479524612426758
    10. ''' → logprob: -11.479524612426758

Token 1062: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.11409268528223038
    2. '",' → logprob: -2.2390925884246826
    3. '"' → logprob: -7.114092826843262
    4. '","' → logprob: -8.114092826843262
    5. '",
' → logprob: -9.239092826843262
    6. '',
' → logprob: -11.239092826843262
    7. ' ",
' → logprob: -11.989092826843262
    8. '111' → logprob: -12.114092826843262
    9. '0' → logprob: -12.239092826843262
    10. '   ' → logprob: -12.739092826843262

Token 1063: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008639862760901451
    2. '       ' → logprob: -4.758639812469482
    3. '   ' → logprob: -10.88364028930664
    4. ''' → logprob: -12.75864028930664
    5. ' ' → logprob: -13.50864028930664
    6. ' "' → logprob: -13.88364028930664
    7. '	' → logprob: -14.38364028930664
    8. '           ' → logprob: -15.63364028930664
    9. '110' → logprob: -15.75864028930664
    10. '     ' → logprob: -16.00864028930664

Token 1064: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00040576665196567774
    2. '       ' → logprob: -7.875405788421631
    3. '   ' → logprob: -11.125405311584473
    4. ''' → logprob: -12.375405311584473
    5. ' "' → logprob: -12.625405311584473
    6. ' ' → logprob: -13.625405311584473
    7. '	' → logprob: -14.000405311584473
    8. '           ' → logprob: -14.750405311584473
    9. '010' → logprob: -14.875405311584473
    10. '111' → logprob: -16.00040626525879

Token 1065: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.07185548543930054
    2. '110' → logprob: -3.3218555450439453
    3. '011' → logprob: -4.071855545043945
    4. '111' → logprob: -4.196855545043945
    5. '100' → logprob: -7.571855545043945
    6. '"' → logprob: -8.071855545043945
    7. '101' → logprob: -9.071855545043945
    8. ' ' → logprob: -9.571855545043945
    9. '001' → logprob: -10.321855545043945
    10. ''' → logprob: -10.446855545043945

Token 1066: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.03389199450612068
    2. '",' → logprob: -3.4088919162750244
    3. '"' → logprob: -8.908891677856445
    4. '   ' → logprob: -10.283891677856445
    5. '","' → logprob: -10.783891677856445
    6. '',
' → logprob: -10.783891677856445
    7. '",
' → logprob: -11.283891677856445
    8. ',
' → logprob: -12.408891677856445
    9. ' ",
' → logprob: -12.533891677856445
    10. '<|end|>' → logprob: -12.658891677856445

Token 1067: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011410413309931755
    2. '       ' → logprob: -4.511410236358643
    3. '   ' → logprob: -8.0114107131958
    4. ' ' → logprob: -10.7614107131958
    5. '           ' → logprob: -12.5114107131958
    6. ' "' → logprob: -12.7614107131958
    7. '0' → logprob: -13.8864107131958
    8. ''' → logprob: -13.8864107131958
    9. '	' → logprob: -15.2614107131958
    10. '      ' → logprob: -15.2614107131958

Token 1068: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00019126241386402398
    2. '       ' → logprob: -8.750191688537598
    3. '   ' → logprob: -10.625191688537598
    4. ' "' → logprob: -12.125191688537598
    5. ' ' → logprob: -13.375191688537598
    6. '010' → logprob: -14.000191688537598
    7. ''' → logprob: -15.375191688537598
    8. '	' → logprob: -15.625191688537598
    9. '           ' → logprob: -16.50019073486328
    10. '     ' → logprob: -17.37519073486328

Token 1069: '010' (ID: 13522)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16570381820201874
    2. '010' → logprob: -2.165703773498535
    3. '110' → logprob: -3.290703773498535
    4. ' ' → logprob: -7.415703773498535
    5. '111' → logprob: -9.040703773498535
    6. ' "' → logprob: -10.040703773498535
    7. ''' → logprob: -10.790703773498535
    8. '   ' → logprob: -12.165703773498535
    9. '100' → logprob: -12.415703773498535
    10. '101' → logprob: -12.665703773498535

Token 1070: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.05011964961886406
    2. '",' → logprob: -3.050119638442993
    3. ',
' → logprob: -7.425119876861572
    4. '       ' → logprob: -8.300119400024414
    5. '"' → logprob: -8.550119400024414
    6. '   ' → logprob: -8.925119400024414
    7. '",
' → logprob: -9.300119400024414
    8. ',' → logprob: -9.425119400024414
    9. '","' → logprob: -9.675119400024414
    10. '',
' → logprob: -9.675119400024414

Token 1071: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01611061580479145
    2. '       ' → logprob: -4.266110420227051
    3. '   ' → logprob: -6.391110420227051
    4. ' ' → logprob: -9.14111042022705
    5. ' "' → logprob: -9.14111042022705
    6. '           ' → logprob: -10.39111042022705
    7. ''' → logprob: -11.14111042022705
    8. '0' → logprob: -12.89111042022705
    9. '     ' → logprob: -13.26611042022705
    10. '  ' → logprob: -13.51611042022705

Token 1072: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -5.796184723294573e-06
    2. '010' → logprob: -13.000005722045898
    3. '   ' → logprob: -13.500005722045898
    4. ''' → logprob: -14.000005722045898
    5. ' "' → logprob: -14.125005722045898
    6. ' ' → logprob: -15.250005722045898
    7. '       ' → logprob: -15.250005722045898
    8. '110' → logprob: -17.3750057220459
    9. '
' → logprob: -17.8750057220459
    10. '011' → logprob: -18.6250057220459

Token 1073: '111' (ID: 8780)
  Prédit: '010'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.5943556427955627
    2. '110' → logprob: -1.219355583190918
    3. '111' → logprob: -2.219355583190918
    4. '1' → logprob: -3.719355583190918
    5. '"' → logprob: -4.094355583190918
    6. '100' → logprob: -6.219355583190918
    7. '101' → logprob: -8.094355583190918
    8. '011' → logprob: -8.344355583190918
    9. ''' → logprob: -8.844355583190918
    10. '10' → logprob: -9.219355583190918

Token 1074: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.17255517840385437
    2. '"
' → logprob: -2.1725552082061768
    3. '"]' → logprob: -3.1725552082061768
    4. '   ' → logprob: -6.297554969787598
    5. ']"' → logprob: -7.672554969787598
    6. ']' → logprob: -8.297554969787598
    7. '"]
' → logprob: -9.672554969787598
    8. ']"
' → logprob: -10.297554969787598
    9. '']' → logprob: -10.797554969787598
    10. '       ' → logprob: -11.922554969787598

Token 1075: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0182020366191864
    2. ']' → logprob: -4.01820182800293
    3. ']
' → logprob: -10.14320182800293
    4. ' ]' → logprob: -12.01820182800293
    5. 'class' → logprob: -13.14320182800293
    6. '```' → logprob: -13.64320182800293
    7. '"]' → logprob: -13.89320182800293
    8. '  ' → logprob: -14.64320182800293
    9. '']' → logprob: -14.64320182800293
    10. '<|end|>' → logprob: -15.26820182800293

Token 1076: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018636647146195173
    2. ']' → logprob: -6.376863479614258
    3. '
' → logprob: -9.001863479614258
    4. 'class' → logprob: -11.501863479614258
    5. '```' → logprob: -11.876863479614258
    6. '  ' → logprob: -12.001863479614258
    7. ' ' → logprob: -12.251863479614258
    8. ']
' (adapté à ' ]
') → logprob: -12.501863479614258
    9. '    
' → logprob: -13.501863479614258
    10. ' ]' → logprob: -13.751863479614258

Token 1077: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022392189130187035
    2. ':' → logprob: -4.397392272949219
    3. 'char' → logprob: -5.147392272949219
    4. ':
' → logprob: -6.272392272949219
    5. '
' → logprob: -7.022392272949219
    6. ' char' → logprob: -7.272392272949219
    7. '```' → logprob: -9.022392272949219
    8. 'class' → logprob: -9.147392272949219
    9. ' ' → logprob: -9.772392272949219
    10. '[' → logprob: -10.397392272949219

Token 1078: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -1.1756367712223437e-05
    2. 'class' → logprob: -11.500011444091797
    3. 'pattern' → logprob: -14.125011444091797
    4. ' char' → logprob: -14.500011444091797
    5. '   ' → logprob: -15.625011444091797
    6. '
' → logprob: -15.750011444091797
    7. '@' → logprob: -17.750011444091797
    8. '_char' → logprob: -18.000011444091797
    9. 'classmethod' → logprob: -19.500011444091797
    10. '```' → logprob: -20.000011444091797

Token 1079: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -2.1008713702030946e-06
    2. 'repr' → logprob: -13.125001907348633
    3. '
' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '_rep' → logprob: -19.000001907348633
    6. '_' → logprob: -19.375001907348633
    7. '_rsp' → logprob: -19.625001907348633
    8. '_rhs' → logprob: -19.625001907348633
    9. '```' → logprob: -19.750001907348633
    10. '<|end|>' → logprob: -19.750001907348633

Token 1080: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759620666503906
    2. '=' → logprob: -0.8259620666503906
    3. '='' → logprob: -11.20096206665039
    4. ' ='' → logprob: -11.70096206665039
    5. ' ' → logprob: -15.70096206665039
    6. ' =
' → logprob: -15.82596206665039
    7. '=
' → logprob: -15.95096206665039
    8. ':' → logprob: -16.07596206665039
    9. ''' → logprob: -16.20096206665039
    10. ''=' → logprob: -17.32596206665039

Token 1081: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.4034345187828876e-05
    2. ' '' → logprob: -11.12502384185791
    3. '"' → logprob: -11.87502384185791
    4. '1' → logprob: -13.12502384185791
    5. '('' → logprob: -16.375024795532227
    6. '`' → logprob: -16.500024795532227
    7. ''''' → logprob: -18.625024795532227
    8. '['' → logprob: -18.750024795532227
    9. '‘' → logprob: -19.125024795532227
    10. '='' → logprob: -19.125024795532227

Token 1082: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067156096920371056
    2. ''' → logprob: -5.006715774536133
    3. ''''' → logprob: -15.881715774536133
    4. '"' → logprob: -16.131715774536133
    5. ' ' → logprob: -17.881715774536133
    6. '`' → logprob: -17.881715774536133
    7. '''' → logprob: -18.131715774536133
    8. ' '' → logprob: -18.756715774536133
    9. ''
' → logprob: -19.131715774536133
    10. '' → logprob: -19.756715774536133

Token 1083: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1084: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01846034824848175
    2. '   ' → logprob: -4.268460273742676
    3. '<|end|>' → logprob: -5.518460273742676
    4. '

' → logprob: -9.143460273742676
    5. '<|end|>' → logprob: -10.268460273742676
    6. '```' → logprob: -10.518460273742676
    7. ':' → logprob: -10.643460273742676
    8. '
' → logprob: -10.768460273742676
    9. ' ' → logprob: -11.143460273742676
    10. '    
' → logprob: -11.268460273742676

Token 1085: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -1.9743012671824545e-05
    2. ' @' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.750020027160645
    4. '
' → logprob: -15.375020027160645
    5. '@class' → logprob: -16.250019073486328
    6. 'classmethod' → logprob: -17.500019073486328
    7. 'class' → logprob: -18.125019073486328
    8. '@
' → logprob: -18.750019073486328
    9. '@property' → logprob: -19.250019073486328
    10. '@index' → logprob: -19.500019073486328

Token 1086: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -1.2664456789934775e-06
    2. 'class' → logprob: -13.750000953674316
    3. 'staticmethod' → logprob: -16.000001907348633
    4. '@' → logprob: -17.250001907348633
    5. 'property' → logprob: -21.250001907348633
    6. '@class' → logprob: -21.875001907348633
    7. '<class' → logprob: -22.375001907348633
    8. '"class' → logprob: -23.000001907348633
    9. ' class' → logprob: -23.375001907348633
    10. '
' → logprob: -23.625001907348633

Token 1087: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009546292014420033
    2. '   ' → logprob: -4.759546279907227
    3. ' def' → logprob: -7.009546279907227
    4. '
' → logprob: -10.759546279907227
    5. '	def' → logprob: -12.884546279907227
    6. '(' → logprob: -14.009546279907227
    7. ' ' → logprob: -14.134546279907227
    8. ':' → logprob: -14.134546279907227
    9. '  ' → logprob: -14.134546279907227
    10. ':def' → logprob: -14.259546279907227

Token 1088: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011480755638331175
    2. '   ' → logprob: -7.251148223876953
    3. ' def' → logprob: -8.376148223876953
    4. ':' → logprob: -8.626148223876953
    5. ':def' → logprob: -10.876148223876953
    6. '
' → logprob: -12.501148223876953
    7. '	def' → logprob: -13.876148223876953
    8. '_def' → logprob: -14.251148223876953
    9. '```' → logprob: -14.376148223876953
    10. '.' → logprob: -14.501148223876953

Token 1089: ' def' (ID: 1056)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.20141352713108063
    2. 'def' (adapté à ' def') → logprob: -1.7014135122299194
    3. ' try' → logprob: -16.076414108276367
    4. '
' → logprob: -17.451414108276367
    5. ' def' → logprob: -17.701414108276367
    6. '_try' → logprob: -18.951414108276367
    7. 'Try' → logprob: -20.076414108276367
    8. '.try' → logprob: -20.076414108276367
    9. 'attempt' → logprob: -20.951414108276367
    10. 'async' → logprob: -21.076414108276367

Token 1090: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -4.320199877838604e-07
    2. ' try' → logprob: -14.875
    3. '_try' → logprob: -18.75
    4. '.try' → logprob: -19.625
    5. 'def' → logprob: -20.25
    6. '
' → logprob: -21.0
    7. '	try' → logprob: -21.0
    8. 'attempt' → logprob: -22.25
    9. 'trying' → logprob: -22.5
    10. 'Try' → logprob: -22.625

Token 1091: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -6.694766489090398e-05
    2. 'match' → logprob: -9.625066757202148
    3. '_' → logprob: -14.750066757202148
    4. 'def' → logprob: -15.625066757202148
    5. '
' → logprob: -16.62506675720215
    6. ' match' → logprob: -17.12506675720215
    7. 'Match' → logprob: -17.37506675720215
    8. '_
' → logprob: -17.50006675720215
    9. '_try' → logprob: -17.87506675720215
    10. '_MATCH' → logprob: -18.12506675720215

Token 1092: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.9361264946837764e-07
    2. 'cls' → logprob: -16.0
    3. '(cl' → logprob: -19.25
    4. '(' → logprob: -19.75
    5. '(clazz' → logprob: -20.25
    6. '(
' → logprob: -20.625
    7. ' (' → logprob: -20.875
    8. ' cls' → logprob: -21.125
    9. '   ' → logprob: -21.875
    10. '(c' → logprob: -22.875

Token 1093: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.11562898010015488
    2. '(points' → logprob: -2.240628957748413
    3. ',' → logprob: -5.990629196166992
    4. '(' → logprob: -8.365629196166992
    5. '(parts' → logprob: -10.490629196166992
    6. ' points' → logprob: -11.740629196166992
    7. ' (' → logprob: -11.865629196166992
    8. '(self' → logprob: -12.615629196166992
    9. '(chars' → logprob: -12.740629196166992
    10. '(coords' → logprob: -12.990629196166992

Token 1094: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3869399130344391
    2. 'cls' → logprob: -1.1369398832321167
    3. ' points' → logprob: -9.636940002441406
    4. ' cls' → logprob: -12.636940002441406
    5. 'pts' → logprob: -15.386940002441406
    6. 'class' → logprob: -16.386940002441406
    7. '(cls' → logprob: -16.761940002441406
    8. 'cl' → logprob: -18.261940002441406
    9. 'classmethod' → logprob: -18.511940002441406
    10. 'Points' → logprob: -19.011940002441406

Token 1095: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2855687141418457
    2. ':' → logprob: -1.9105687141418457
    3. '   ' → logprob: -3.5355687141418457
    4. '(cls' → logprob: -3.5355687141418457
    5. ')' → logprob: -3.7855687141418457
    6. '       ' → logprob: -4.535568714141846
    7. '<|end|>' → logprob: -6.285568714141846
    8. '):' → logprob: -6.660568714141846
    9. ' ' → logprob: -6.785568714141846
    10. '(points' → logprob: -7.535568714141846

Token 1096: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0005781737272627652
    2. 'set' → logprob: -7.5005784034729
    3. ' Set' → logprob: -10.750577926635742
    4. '_set' → logprob: -13.250577926635742
    5. 'return' → logprob: -14.125577926635742
    6. ' set' → logprob: -14.625577926635742
    7. 'cls' → logprob: -15.375577926635742
    8. 'def' → logprob: -15.875577926635742
    9. 'Sets' → logprob: -16.000577926635742
    10. '_Set' → logprob: -16.125577926635742

Token 1097: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011212585377506912
    2. ')' → logprob: -9.250112533569336
    3. '(Point' → logprob: -11.875112533569336
    4. '<Point' → logprob: -12.125112533569336
    5. '(' → logprob: -14.375112533569336
    6. '[
' → logprob: -14.625112533569336
    7. '['' → logprob: -14.875112533569336
    8. '[p' → logprob: -15.375112533569336
    9. '```' → logprob: -15.375112533569336
    10. 'Point' → logprob: -15.500112533569336

Token 1098: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.128163257315464e-07
    2. ' Point' → logprob: -15.625
    3. '	Point' → logprob: -16.875
    4. '<Point' → logprob: -17.5
    5. '(Point' → logprob: -17.75
    6. ')' → logprob: -17.875
    7. '.Point' → logprob: -18.75
    8. 'p' → logprob: -19.625
    9. '_Point' → logprob: -19.625
    10. '   ' → logprob: -20.375

Token 1099: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8444881536415778e-05
    2. ' )' → logprob: -11.625028610229492
    3. '):
' → logprob: -11.750028610229492
    4. '   ' → logprob: -12.375028610229492
    5. '])' → logprob: -12.750028610229492
    6. '):' → logprob: -13.000028610229492
    7. '>)' → logprob: -14.000028610229492
    8. '       ' → logprob: -14.500028610229492
    9. '})' → logprob: -14.875028610229492
    10. '))' → logprob: -16.250028610229492

Token 1100: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06399869173765182
    2. '->' → logprob: -3.0639986991882324
    3. ':
' → logprob: -4.563998699188232
    4. ' ->' → logprob: -5.938998699188232
    5. ')' → logprob: -6.813998699188232
    6. '   ' → logprob: -7.813998699188232
    7. ':return' → logprob: -7.938998699188232
    8. '       ' → logprob: -8.563998222351074
    9. ')->' → logprob: -10.063998222351074
    10. '):' → logprob: -10.438998222351074

Token 1101: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.011057606898248196
    2. ' bool' → logprob: -4.511057376861572
    3. 'True' → logprob: -11.88605785369873
    4. 'return' → logprob: -13.76105785369873
    5. 'False' → logprob: -14.13605785369873
    6. 'Bool' → logprob: -15.01105785369873
    7. '<bool' → logprob: -15.26105785369873
    8. ' ' → logprob: -15.26105785369873
    9. '   ' → logprob: -16.261056900024414
    10. '	bool' → logprob: -16.636056900024414

Token 1102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8677439093589783
    2. '       ' → logprob: -1.367743968963623
    3. ':
' → logprob: -1.367743968963623
    4. '(cls' → logprob: -2.867743968963623
    5. '   ' → logprob: -4.742743968963623
    6. '(' → logprob: -6.492743968963623
    7. ')' → logprob: -6.867743968963623
    8. '(points' → logprob: -7.492743968963623
    9. '->' → logprob: -7.617743968963623
    10. ':return' → logprob: -7.617743968963623

Token 1103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.128163257315464e-07
    2. ' if' → logprob: -16.125
    3. '   ' → logprob: -16.375
    4. 'return' → logprob: -16.75
    5. '           ' → logprob: -17.625
    6. 'if' → logprob: -17.875
    7. '      ' → logprob: -18.75
    8. ' return' → logprob: -19.125
    9. '
' → logprob: -19.25
    10. '        ' → logprob: -20.0

Token 1104: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12926851212978363
    2. '       ' → logprob: -2.1292684078216553
    3. 'return' → logprob: -6.129268646240234
    4. ' if' → logprob: -8.754268646240234
    5. '   ' → logprob: -14.004268646240234
    6. ' return' → logprob: -15.504268646240234
    7. 'cls' → logprob: -15.754268646240234
    8. '#' → logprob: -15.879268646240234
    9. 'points' → logprob: -16.129268646240234
    10. 'for' → logprob: -16.129268646240234

Token 1105: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.038055144250392914
    2. ' not' → logprob: -3.288055181503296
    3. 'len' → logprob: -11.413055419921875
    4. 'points' → logprob: -13.413055419921875
    5. '
' → logprob: -14.663055419921875
    6. '   ' → logprob: -14.788055419921875
    7. ' len' → logprob: -16.038055419921875
    8. '       ' → logprob: -16.663055419921875
    9. '(not' → logprob: -17.288055419921875
    10. ' points' → logprob: -17.288055419921875

Token 1106: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.008624029345810413
    2. ' points' → logprob: -4.758624076843262
    3. '(points' → logprob: -11.633624076843262
    4. '	points' → logprob: -15.508624076843262
    5. 'point' → logprob: -15.758624076843262
    6. 'cls' → logprob: -16.508623123168945
    7. '
' → logprob: -16.633623123168945
    8. '.points' → logprob: -16.883623123168945
    9. 'p' → logprob: -17.258623123168945
    10. 'oints' → logprob: -17.883623123168945

Token 1107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5250371098518372
    2. ':
' → logprob: -0.9000371098518372
    3. '           ' → logprob: -6.7750372886657715
    4. ':return' → logprob: -7.9000372886657715
    5. '       ' → logprob: -8.400036811828613
    6. '):
' → logprob: -9.650036811828613
    7. ':
' → logprob: -10.775036811828613
    8. '   ' → logprob: -11.025036811828613
    9. ':

' → logprob: -11.525036811828613
    10. ',' → logprob: -11.525036811828613

Token 1108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10394564270973206
    2. 'return' → logprob: -2.478945732116699
    3. 'False' → logprob: -4.353945732116699
    4. ' return' → logprob: -6.853945732116699
    5. ':
' → logprob: -7.228945732116699
    6. ' False' → logprob: -9.2289457321167
    7. ':' → logprob: -9.7289457321167
    8. ':return' → logprob: -9.9789457321167
    9. '       ' → logprob: -11.3539457321167
    10. '          ' → logprob: -12.1039457321167

Token 1109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0032446200493723154
    2. ' return' → logprob: -6.003244400024414
    3. 'False' → logprob: -7.253244400024414
    4. '           ' → logprob: -10.128244400024414
    5. '       ' → logprob: -10.878244400024414
    6. ':return' → logprob: -14.003244400024414
    7. 'false' → logprob: -15.003244400024414
    8. '   ' → logprob: -15.628244400024414
    9. 'eturn' → logprob: -15.753244400024414
    10. 'Return' → logprob: -15.878244400024414

Token 1110: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.935296834039036e-06
    2. ' False' → logprob: -12.75000286102295
    3. '(False' → logprob: -20.750003814697266
    4. 'True' → logprob: -21.125003814697266
    5. 'false' → logprob: -22.375003814697266
    6. '=False' → logprob: -22.875003814697266
    7. '_false' → logprob: -23.000003814697266
    8. 'F' → logprob: -25.625003814697266
    9. '.False' → logprob: -26.125003814697266
    10. 'FALSE' → logprob: -26.250003814697266

Token 1111: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.5716304410016164e-05
    2. '
' → logprob: -10.625035285949707
    3. ',' → logprob: -11.750035285949707
    4. '	' → logprob: -14.625035285949707
    5. ':
' → logprob: -14.625035285949707
    6. '<|end|>' → logprob: -14.875035285949707
    7. '   ' → logprob: -15.000035285949707
    8. ':' → logprob: -15.000035285949707
    9. '      ' → logprob: -15.125035285949707
    10. '           ' → logprob: -15.625035285949707

Token 1112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.339278580620885e-06
    2. '
' → logprob: -13.500001907348633
    3. ',' → logprob: -15.000001907348633
    4. '      ' → logprob: -15.500001907348633
    5. '   ' → logprob: -15.625001907348633
    6. '           ' → logprob: -15.750001907348633
    7. '	' → logprob: -16.375001907348633
    8. '        
' → logprob: -16.875001907348633
    9. 'return' → logprob: -18.000001907348633
    10. '     ' → logprob: -18.125001907348633

Token 1113: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.02329835295677185
    2. '       ' → logprob: -3.7732982635498047
    3. ' min' → logprob: -9.898298263549805
    4. '
' → logprob: -13.523298263549805
    5. '	min' → logprob: -15.023298263549805
    6. '   ' → logprob: -15.273298263549805
    7. '(min' → logprob: -15.398298263549805
    8. 'return' → logprob: -15.648298263549805
    9. '           ' → logprob: -16.148298263549805
    10. '[min' → logprob: -16.648298263549805

Token 1114: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00017278951418120414
    2. '_' → logprob: -9.37517261505127
    3. '_y' → logprob: -10.62517261505127
    4. '(p' → logprob: -10.75017261505127
    5. '       ' → logprob: -11.12517261505127
    6. '_p' → logprob: -12.00017261505127
    7. 'x' → logprob: -12.12517261505127
    8. 'import' → logprob: -12.50017261505127
    9. '   ' → logprob: -12.50017261505127
    10. '=' → logprob: -12.87517261505127

Token 1115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021573305130005
    2. '=' → logprob: -2.3502156734466553
    3. '<|end|>' → logprob: -12.600215911865234
    4. '=
' → logprob: -13.350215911865234
    5. '=min' → logprob: -13.600215911865234
    6. '   ' → logprob: -14.475215911865234
    7. ' =
' → logprob: -14.475215911865234
    8. ' ' → logprob: -15.100215911865234
    9. ',' → logprob: -15.600215911865234
    10. ')' → logprob: -15.725215911865234

Token 1116: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.836499985889532e-05
    2. ' min' → logprob: -9.7500581741333
    3. '(min' → logprob: -17.875059127807617
    4. 'minimum' → logprob: -19.000059127807617
    5. '[min' → logprob: -19.125059127807617
    6. '=min' → logprob: -19.875059127807617
    7. 'max' → logprob: -20.125059127807617
    8. 'mini' → logprob: -20.125059127807617
    9. '	min' → logprob: -20.250059127807617
    10. '_min' → logprob: -20.375059127807617

Token 1117: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0445127372804563e-05
    2. 'p' → logprob: -11.62501049041748
    3. '(' → logprob: -13.75001049041748
    4. ' (' → logprob: -15.25001049041748
    5. '(
' → logprob: -17.000009536743164
    6. ' p' → logprob: -17.000009536743164
    7. 'token' → logprob: -17.875009536743164
    8. 'for' → logprob: -18.250009536743164
    9. '(points' → logprob: -18.250009536743164
    10. '(point' → logprob: -18.375009536743164

Token 1118: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0028634853661060333
    2. '.' → logprob: -5.87786340713501
    3. ' .' → logprob: -10.877863883972168
    4. ').' → logprob: -11.752863883972168
    5. '(x' → logprob: -12.252863883972168
    6. 'x' → logprob: -12.252863883972168
    7. '.token' → logprob: -12.377863883972168
    8. '<|end|>' → logprob: -12.502863883972168
    9. '{x' → logprob: -12.752863883972168
    10. ')' → logprob: -12.877863883972168

Token 1119: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4740796685218811
    2. ' for' → logprob: -0.9740796685218811
    3. '
' → logprob: -13.599080085754395
    4. ')' → logprob: -14.724080085754395
    5. '       ' → logprob: -14.849080085754395
    6. '   ' → logprob: -15.724080085754395
    7. ' in' → logprob: -15.724080085754395
    8. '	for' → logprob: -16.599079132080078
    9. '```' → logprob: -17.099079132080078
    10. '(p' → logprob: -17.099079132080078

Token 1120: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.836499985889532e-05
    2. ' p' → logprob: -9.7500581741333
    3. '(p' → logprob: -17.875059127807617
    4. '	p' → logprob: -18.250059127807617
    5. 'points' → logprob: -18.375059127807617
    6. '<p' → logprob: -18.500059127807617
    7. '
' → logprob: -18.625059127807617
    8. ')p' → logprob: -19.125059127807617
    9. '   ' → logprob: -20.000059127807617
    10. 'point' → logprob: -20.125059127807617

Token 1121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09574518352746964
    2. 'in' → logprob: -2.970745086669922
    3. 'p' → logprob: -3.345745086669922
    4. ' p' → logprob: -5.345745086669922
    5. 'points' → logprob: -11.845745086669922
    6. '.p' → logprob: -12.095745086669922
    7. ' points' → logprob: -12.595745086669922
    8. 'x' → logprob: -12.595745086669922
    9. 'for' → logprob: -12.720745086669922
    10. '
' → logprob: -12.845745086669922

Token 1122: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -6.630610641877865e-06
    2. ' points' → logprob: -12.125006675720215
    3. 'p' → logprob: -14.125006675720215
    4. '
' → logprob: -15.250006675720215
    5. '(points' → logprob: -15.875006675720215
    6. '.points' → logprob: -18.3750057220459
    7. '	points' → logprob: -18.3750057220459
    8. 'point' → logprob: -18.6250057220459
    9. 'oints' → logprob: -19.2500057220459
    10. ')' → logprob: -19.6250057220459

Token 1123: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004401871003210545
    2. ')' → logprob: -6.004401683807373
    3. '       ' → logprob: -6.254401683807373
    4. ')
' → logprob: -14.129402160644531
    5. '<|end|>' → logprob: -15.129402160644531
    6. '),' → logprob: -15.379402160644531
    7. 'if' → logprob: -15.629402160644531
    8. '        ' → logprob: -15.879402160644531
    9. '           ' → logprob: -16.00440216064453
    10. '   ' → logprob: -16.12940216064453

Token 1124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030042731668800116
    2. 'min' → logprob: -8.125300407409668
    3. ' min' → logprob: -13.750300407409668
    4. '
' → logprob: -13.750300407409668
    5. 'import' → logprob: -14.875300407409668
    6. '```' → logprob: -15.000300407409668
    7. '           ' → logprob: -15.500300407409668
    8. '   ' → logprob: -15.500300407409668
    9. 'from' → logprob: -15.750300407409668
    10. '(min' → logprob: -15.875300407409668

Token 1125: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -1.1041145626222715e-05
    2. ' min' → logprob: -11.500011444091797
    3. '       ' → logprob: -14.000011444091797
    4. '(min' → logprob: -17.875011444091797
    5. 'max' → logprob: -18.500011444091797
    6. '	min' → logprob: -18.750011444091797
    7. '[min' → logprob: -19.375011444091797
    8. '_min' → logprob: -20.500011444091797
    9. '.min' → logprob: -20.625011444091797
    10. 'm' → logprob: -21.250011444091797

Token 1126: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0005038236267864704
    2. 'y' → logprob: -8.500503540039062
    3. '_x' → logprob: -8.500503540039062
    4. '.y' → logprob: -9.750503540039062
    5. 'Y' → logprob: -10.875503540039062
    6. '   ' → logprob: -11.500503540039062
    7. '(p' → logprob: -13.000503540039062
    8. 'import' → logprob: -13.000503540039062
    9. '=' → logprob: -14.625503540039062
    10. 'p' → logprob: -14.750503540039062

Token 1127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049381598830223083
    2. '=' → logprob: -3.0493814945220947
    3. ' for' → logprob: -7.299381732940674
    4. 'for' → logprob: -9.799381256103516
    5. ' in' → logprob: -10.299381256103516
    6. '<|end|>' → logprob: -12.424381256103516
    7. '=min' → logprob: -12.799381256103516
    8. '(p' → logprob: -12.799381256103516
    9. 'in' → logprob: -13.049381256103516
    10. ')' → logprob: -13.049381256103516

Token 1128: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -8.895480277715251e-06
    2. ' min' → logprob: -11.875008583068848
    3. '(min' → logprob: -13.750008583068848
    4. 'max' → logprob: -14.125008583068848
    5. '[min' → logprob: -16.375009536743164
    6. 'm' → logprob: -18.375009536743164
    7. 'mini' → logprob: -18.500009536743164
    8. '	min' → logprob: -18.875009536743164
    9. 'minimum' → logprob: -19.000009536743164
    10. 'minimal' → logprob: -19.125009536743164

Token 1129: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0003020961594302207
    2. 'p' → logprob: -8.5003023147583
    3. '(' → logprob: -10.1253023147583
    4. '(points' → logprob: -10.1253023147583
    5. '(
' → logprob: -11.6253023147583
    6. ' p' → logprob: -12.7503023147583
    7. ' (' → logprob: -13.2503023147583
    8. '<|end|>' → logprob: -13.3753023147583
    9. 'points' → logprob: -14.3753023147583
    10. '   ' → logprob: -14.5003023147583

Token 1130: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2073846012353897
    2. 'for' → logprob: -1.7073845863342285
    3. ' for' → logprob: -5.4573845863342285
    4. '.p' → logprob: -6.5823845863342285
    5. 'p' → logprob: -8.332385063171387
    6. ' p' → logprob: -11.082385063171387
    7. '.y' → logprob: -11.832385063171387
    8. 'For' → logprob: -11.957385063171387
    9. 'x' → logprob: -12.082385063171387
    10. 'y' → logprob: -12.207385063171387

Token 1131: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2811659276485443
    2. 'for' → logprob: -1.4061659574508667
    3. ' in' → logprob: -12.156166076660156
    4. ')' → logprob: -12.531166076660156
    5. '       ' → logprob: -12.531166076660156
    6. 'in' → logprob: -14.031166076660156
    7. '   ' → logprob: -14.531166076660156
    8. '	for' → logprob: -14.781166076660156
    9. '```' → logprob: -15.406166076660156
    10. 'For' → logprob: -15.656166076660156

Token 1132: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0012178556062281132
    2. 'points' → logprob: -6.751217842102051
    3. ' p' → logprob: -10.25121784210205
    4. ' points' → logprob: -12.00121784210205
    5. '(p' → logprob: -12.50121784210205
    6. '
' → logprob: -14.00121784210205
    7. '(points' → logprob: -14.25121784210205
    8. 'point' → logprob: -15.12621784210205
    9. '<p' → logprob: -15.25121784210205
    10. '[p' → logprob: -15.75121784210205

Token 1133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4154699742794037
    2. 'for' → logprob: -1.415470004081726
    3. ' for' → logprob: -2.6654698848724365
    4. 'in' → logprob: -4.165470123291016
    5. '.x' → logprob: -4.665470123291016
    6. '.y' → logprob: -6.290470123291016
    7. 'x' → logprob: -7.790470123291016
    8. 'y' → logprob: -10.040470123291016
    9. 'In' → logprob: -10.040470123291016
    10. '...' → logprob: -10.415470123291016

Token 1134: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -2.0100624169572257e-05
    2. 'p' → logprob: -11.375020027160645
    3. ' points' → logprob: -11.875020027160645
    4. '(points' → logprob: -13.625020027160645
    5. '
' → logprob: -15.375020027160645
    6. '.points' → logprob: -16.87502098083496
    7. '	points' → logprob: -16.87502098083496
    8. '[' → logprob: -18.00002098083496
    9. 'point' → logprob: -18.12502098083496
    10. 'Points' → logprob: -18.50002098083496

Token 1135: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.016276467591524124
    2. '       ' → logprob: -4.2662763595581055
    3. ')' → logprob: -6.3912763595581055
    4. 'for' → logprob: -7.7662763595581055
    5. ' for' → logprob: -11.766276359558105
    6. ')
' → logprob: -13.141276359558105
    7. ' )
' → logprob: -15.516276359558105
    8. '
' → logprob: -15.766276359558105
    9. '   ' → logprob: -16.141277313232422
    10. '           ' → logprob: -16.141277313232422

Token 1136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0222526416182518
    2. 'max' → logprob: -3.8972525596618652
    3. 'min' → logprob: -6.397252559661865
    4. ' max' → logprob: -10.897253036499023
    5. '
' → logprob: -11.522253036499023
    6. '```' → logprob: -12.397253036499023
    7. ' min' → logprob: -13.147253036499023
    8. '(max' → logprob: -13.272253036499023
    9. '           ' → logprob: -13.772253036499023
    10. '        ' → logprob: -14.522253036499023

Token 1137: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -1.4974866644479334e-05
    2. '       ' → logprob: -11.250015258789062
    3. ' max' → logprob: -13.250015258789062
    4. 'min' → logprob: -16.375015258789062
    5. '	max' → logprob: -20.750015258789062
    6. '
' → logprob: -21.250015258789062
    7. '   ' → logprob: -21.250015258789062
    8. 'maximum' → logprob: -22.250015258789062
    9. '(max' → logprob: -22.750015258789062
    10. '_max' → logprob: -23.125015258789062

Token 1138: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.3438327843905427e-05
    2. '(p' → logprob: -11.25002384185791
    3. '_' → logprob: -12.75002384185791
    4. '_p' → logprob: -13.25002384185791
    5. '```' → logprob: -13.25002384185791
    6. '_y' → logprob: -14.25002384185791
    7. '(_' → logprob: -14.37502384185791
    8. ' _' → logprob: -14.50002384185791
    9. ')_' → logprob: -14.50002384185791
    10. 'x' → logprob: -14.87502384185791

Token 1139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01416398212313652
    2. '=' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.014163970947266
    4. '=max' → logprob: -16.764163970947266
    5. ' ' → logprob: -19.389163970947266
    6. '       ' → logprob: -19.389163970947266
    7. '    ' → logprob: -19.514163970947266
    8. '```' → logprob: -19.764163970947266
    9. '  ' → logprob: -20.389163970947266
    10. '=
' → logprob: -20.514163970947266

Token 1140: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009115827269852161
    2. ' max' → logprob: -7.000911712646484
    3. '(max' → logprob: -16.500911712646484
    4. '=max' → logprob: -19.875911712646484
    5. '[max' → logprob: -20.000911712646484
    6. '	max' → logprob: -21.000911712646484
    7. '   ' → logprob: -21.625911712646484
    8. '_max' → logprob: -22.000911712646484
    9. 'min' → logprob: -22.000911712646484
    10. 'm' → logprob: -22.375911712646484

Token 1141: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00016706773021724075
    2. 'p' → logprob: -8.750166893005371
    3. ' p' → logprob: -12.000166893005371
    4. '(max' → logprob: -14.125166893005371
    5. 'max' → logprob: -14.250166893005371
    6. '_x' → logprob: -15.875166893005371
    7. '[p' → logprob: -15.875166893005371
    8. ' (' → logprob: -16.125167846679688
    9. '_p' → logprob: -16.250167846679688
    10. '```' → logprob: -16.375167846679688

Token 1142: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5831958055496216
    2. '.x' → logprob: -0.8331958055496216
    3. '(x' → logprob: -5.333195686340332
    4. 'for' → logprob: -6.333195686340332
    5. '(p' → logprob: -7.708195686340332
    6. ' for' → logprob: -9.333195686340332
    7. '_x' → logprob: -9.708195686340332
    8. '{x' → logprob: -11.458195686340332
    9. '(' → logprob: -12.333195686340332
    10. '```' → logprob: -13.208195686340332

Token 1143: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47407984733581543
    2. 'for' → logprob: -0.9740798473358154
    3. ')' → logprob: -13.849080085754395
    4. '```' → logprob: -14.724080085754395
    5. ' in' → logprob: -15.099080085754395
    6. '(p' → logprob: -15.224080085754395
    7. '	for' → logprob: -15.474080085754395
    8. 'in' → logprob: -16.099079132080078
    9. '       ' → logprob: -16.099079132080078
    10. '
' → logprob: -16.599079132080078

Token 1144: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004471777938306332
    2. 'points' → logprob: -5.504471778869629
    3. ' p' → logprob: -8.379471778869629
    4. '(p' → logprob: -9.004471778869629
    5. 'max' → logprob: -10.754471778869629
    6. ' points' → logprob: -11.504471778869629
    7. 'for' → logprob: -12.504471778869629
    8. '(points' → logprob: -12.879471778869629
    9. '[p' → logprob: -13.629471778869629
    10. '
' → logprob: -14.254471778869629

Token 1145: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3436829149723053
    2. 'for' → logprob: -1.843682885169983
    3. '(p' → logprob: -2.2186830043792725
    4. '.p' → logprob: -4.343682765960693
    5. ' for' → logprob: -5.843682765960693
    6. 'in' → logprob: -5.968682765960693
    7. ' in' → logprob: -6.593682765960693
    8. 'x' → logprob: -6.593682765960693
    9. ' p' → logprob: -6.968682765960693
    10. 'points' → logprob: -7.093682765960693

Token 1146: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.000680265249684453
    2. '(points' → logprob: -7.375680446624756
    3. ' points' → logprob: -10.000679969787598
    4. 'p' → logprob: -12.000679969787598
    5. '.points' → logprob: -14.500679969787598
    6. 'point' → logprob: -14.750679969787598
    7. '	points' → logprob: -14.875679969787598
    8. 'max' → logprob: -15.250679969787598
    9. '
' → logprob: -15.500679969787598
    10. '(p' → logprob: -15.875679969787598

Token 1147: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7068915367126465
    2. '       ' → logprob: -1.0818915367126465
    3. ' for' → logprob: -2.5818915367126465
    4. ',' → logprob: -2.8318915367126465
    5. ')
' → logprob: -3.7068915367126465
    6. '),' → logprob: -5.3318915367126465
    7. ')' → logprob: -5.5818915367126465
    8. '   ' → logprob: -10.206892013549805
    9. ')+' → logprob: -10.331892013549805
    10. '
' → logprob: -10.456892013549805

Token 1148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17049840092658997
    2. 'max' → logprob: -1.9204983711242676
    3. 'for' → logprob: -4.920498371124268
    4. ' max' → logprob: -6.420498371124268
    5. ' for' → logprob: -7.295498371124268
    6. ',' → logprob: -9.045498847961426
    7. '(max' → logprob: -9.170498847961426
    8. ',max' → logprob: -9.295498847961426
    9. '=max' → logprob: -9.420498847961426
    10. '[max' → logprob: -10.295498847961426

Token 1149: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -2.15310683415737e-05
    2. ' max' → logprob: -10.750021934509277
    3. '       ' → logprob: -17.50002098083496
    4. 'min' → logprob: -18.37502098083496
    5. '_max' → logprob: -19.25002098083496
    6. '	max' → logprob: -19.50002098083496
    7. '(max' → logprob: -19.87502098083496
    8. '[max' → logprob: -20.00002098083496
    9. 'm' → logprob: -20.25002098083496
    10. '=max' → logprob: -20.25002098083496

Token 1150: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0004944138927385211
    2. '_y' → logprob: -7.625494480133057
    3. 'x' → logprob: -12.250494003295898
    4. '```' → logprob: -14.375494003295898
    5. '   ' → logprob: -15.125494003295898
    6. 'X' → logprob: -15.875494003295898
    7. 'import' → logprob: -16.1254940032959
    8. '(p' → logprob: -16.8754940032959
    9. ' _' → logprob: -16.8754940032959
    10. '[' → logprob: -16.8754940032959

Token 1151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602245420217514
    2. '=' → logprob: -1.9102245569229126
    3. ' for' → logprob: -15.910224914550781
    4. 'for' → logprob: -16.03522491455078
    5. '=
' → logprob: -16.66022491455078
    6. '=max' → logprob: -17.28522491455078
    7. '   ' → logprob: -17.78522491455078
    8. '<|end|>' → logprob: -18.03522491455078
    9. ' =
' → logprob: -18.91022491455078
    10. ')' → logprob: -18.91022491455078

Token 1152: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00020354038861114532
    2. ' max' → logprob: -8.500203132629395
    3. '(max' → logprob: -18.62520408630371
    4. '[max' → logprob: -20.75020408630371
    5. '=max' → logprob: -21.37520408630371
    6. '	max' → logprob: -22.00020408630371
    7. 'min' → logprob: -24.00020408630371
    8. '   ' → logprob: -24.37520408630371
    9. '_max' → logprob: -24.62520408630371
    10. ',max' → logprob: -24.75020408630371

Token 1153: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3425219549390022e-05
    2. 'p' → logprob: -11.25001335144043
    3. 'max' → logprob: -15.87501335144043
    4. '(max' → logprob: -16.50001335144043
    5. '[p' → logprob: -16.87501335144043
    6. ' p' → logprob: -17.25001335144043
    7. '(
' → logprob: -17.25001335144043
    8. '   ' → logprob: -18.62501335144043
    9. '(' → logprob: -19.12501335144043
    10. '```' → logprob: -19.25001335144043

Token 1154: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.038388002663850784
    2. '.x' → logprob: -3.2883880138397217
    3. '(p' → logprob: -8.1633882522583
    4. 'y' → logprob: -10.1633882522583
    5. '.p' → logprob: -11.5383882522583
    6. '_y' → logprob: -12.4133882522583
    7. 'x' → logprob: -12.9133882522583
    8. 'for' → logprob: -13.0383882522583
    9. '(y' → logprob: -13.6633882522583
    10. '```' → logprob: -14.4133882522583

Token 1155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04859577491879463
    2. ' for' → logprob: -3.048595666885376
    3. ')' → logprob: -12.798595428466797
    4. '(p' → logprob: -12.923595428466797
    5. 'For' → logprob: -14.298595428466797
    6. '	for' → logprob: -14.423595428466797
    7. '   ' → logprob: -14.923595428466797
    8. '
' → logprob: -15.048595428466797
    9. '(for' → logprob: -15.048595428466797
    10. '.for' → logprob: -15.673595428466797

Token 1156: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.635164754698053e-05
    2. '(p' → logprob: -10.125066757202148
    3. 'points' → logprob: -10.875066757202148
    4. ' p' → logprob: -11.875066757202148
    5. '
' → logprob: -15.750066757202148
    6. '[p' → logprob: -15.750066757202148
    7. 'point' → logprob: -16.87506675720215
    8. '(points' → logprob: -17.12506675720215
    9. '<p' → logprob: -17.37506675720215
    10. '   ' → logprob: -17.37506675720215

Token 1157: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014175849966704845
    2. 'points' → logprob: -4.764175891876221
    3. ' for' → logprob: -5.639175891876221
    4. '.x' → logprob: -7.264175891876221
    5. '(points' → logprob: -7.889175891876221
    6. '.points' → logprob: -8.014175415039062
    7. '.y' → logprob: -8.389175415039062
    8. '(p' → logprob: -8.889175415039062
    9. '.p' → logprob: -9.514175415039062
    10. 'in' → logprob: -10.514175415039062

Token 1158: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00044127836008556187
    2. 'p' → logprob: -7.750441074371338
    3. '(points' → logprob: -11.875441551208496
    4. ' points' → logprob: -13.125441551208496
    5. '
' → logprob: -14.500441551208496
    6. 'max' → logprob: -14.625441551208496
    7. '[p' → logprob: -15.875441551208496
    8. '.points' → logprob: -16.12544059753418
    9. 'point' → logprob: -16.12544059753418
    10. '[' → logprob: -16.25044059753418

Token 1159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14778713881969452
    2. '       ' → logprob: -2.647787094116211
    3. ' for' → logprob: -3.272787094116211
    4. 'for' → logprob: -3.647787094116211
    5. ')
' → logprob: -7.272787094116211
    6. '):
' → logprob: -7.272787094116211
    7. ')=' → logprob: -8.147787094116211
    8. '):' → logprob: -8.772787094116211
    9. '        ' → logprob: -9.522787094116211
    10. '<|end|>' → logprob: -9.772787094116211

Token 1160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07755401730537415
    2. ' =' → logprob: -2.8275539875030518
    3. '=' → logprob: -4.202554225921631
    4. '        ' → logprob: -8.327553749084473
    5. ':' → logprob: -9.202553749084473
    6. '           ' → logprob: -10.452553749084473
    7. ')' → logprob: -11.077553749084473
    8. '      ' → logprob: -11.327553749084473
    9. '==' → logprob: -11.577553749084473
    10. '   ' → logprob: -11.827553749084473

Token 1161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0024838652461767197
    2. '       ' → logprob: -6.00248384475708
    3. ' return' → logprob: -11.752484321594238
    4. '
' → logprob: -15.252484321594238
    5. '   ' → logprob: -17.252483367919922
    6. '	return' → logprob: -17.502483367919922
    7. '           ' → logprob: -18.627483367919922
    8. '{return' → logprob: -18.627483367919922
    9. '```' → logprob: -19.127483367919922
    10. 'eturn' → logprob: -19.127483367919922

Token 1162: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0007130279554985464
    2. ' cls' → logprob: -7.250712871551514
    3. '(cls' → logprob: -12.750713348388672
    4. 'class' → logprob: -17.375713348388672
    5. '.cls' → logprob: -17.625713348388672
    6. 'Cls' → logprob: -18.000713348388672
    7. 'classmethod' → logprob: -18.125713348388672
    8. 'cl' → logprob: -18.375713348388672
    9. '   ' → logprob: -18.750713348388672
    10. 'super' → logprob: -19.375713348388672

Token 1163: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.750001907348633
    3. '.pattern' → logprob: -14.750001907348633
    4. 'match' → logprob: -15.750001907348633
    5. '.m' → logprob: -16.250001907348633
    6. ' .' → logprob: -17.875001907348633
    7. '.matcher' → logprob: -18.125001907348633
    8. '.matches' → logprob: -18.250001907348633
    9. '.MATCH' → logprob: -18.250001907348633
    10. '.try' → logprob: -19.125001907348633

Token 1164: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -3.810037742368877e-05
    2. 'pattern' → logprob: -10.250038146972656
    3. '_token' → logprob: -13.875038146972656
    4. '```' → logprob: -14.500038146972656
    5. '_' → logprob: -15.000038146972656
    6. '_p' → logprob: -15.625038146972656
    7. '_point' → logprob: -15.625038146972656
    8. '_patterns' → logprob: -15.875038146972656
    9. '
' → logprob: -16.625038146972656
    10. '_points' → logprob: -16.750038146972656

Token 1165: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -7.896309739408025e-07
    2. 'points' → logprob: -14.125000953674316
    3. '(
' → logprob: -18.0
    4. '(' → logprob: -18.5
    5. '(parts' → logprob: -19.25
    6. '	points' → logprob: -19.375
    7. ' points' → logprob: -19.5
    8. '(point' → logprob: -20.375
    9. '(lines' → logprob: -21.25
    10. '```' → logprob: -21.375

Token 1166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.9728669738397e-05
    2. '(points' → logprob: -9.500100135803223
    3. 'points' → logprob: -11.250100135803223
    4. ' ,' → logprob: -12.125100135803223
    5. ' points' → logprob: -13.125100135803223
    6. ',
' → logprob: -13.375100135803223
    7. ',p' → logprob: -14.375100135803223
    8. ')' → logprob: -14.500100135803223
    9. '   ' → logprob: -15.000100135803223
    10. '       ' → logprob: -15.125100135803223

Token 1167: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0010410251561552286
    2. ' min' → logprob: -6.876040935516357
    3. 'max' → logprob: -12.626041412353516
    4. '(min' → logprob: -13.126041412353516
    5. '[min' → logprob: -14.251041412353516
    6. '   ' → logprob: -14.501041412353516
    7. '_min' → logprob: -14.751041412353516
    8. '0' → logprob: -14.876041412353516
    9. '       ' → logprob: -15.751041412353516
    10. '	min' → logprob: -16.001041412353516

Token 1168: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0003837213444057852
    2. 'x' → logprob: -7.8753838539123535
    3. '(p' → logprob: -13.625383377075195
    4. 'X' → logprob: -13.750383377075195
    5. '0' → logprob: -15.375383377075195
    6. 'max' → logprob: -15.625383377075195
    7. '[' → logprob: -15.750383377075195
    8. '<|end|>' → logprob: -15.875383377075195
    9. '(min' → logprob: -16.375383377075195
    10. '_y' → logprob: -16.500383377075195

Token 1169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.613945101387799e-05
    2. ',p' → logprob: -9.750085830688477
    3. ' ,' → logprob: -11.125085830688477
    4. ',
' → logprob: -12.250085830688477
    5. 'for' → logprob: -12.500085830688477
    6. ',min' → logprob: -13.125085830688477
    7. '(p' → logprob: -14.625085830688477
    8. ')' → logprob: -15.000085830688477
    9. '   ' → logprob: -15.250085830688477
    10. 'p' → logprob: -15.375085830688477

Token 1170: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.1008713702030946e-06
    2. ' min' → logprob: -13.125001907348633
    3. 'max' → logprob: -17.750001907348633
    4. '[min' → logprob: -18.125001907348633
    5. '(min' → logprob: -18.125001907348633
    6. '_min' → logprob: -18.875001907348633
    7. '=min' → logprob: -19.375001907348633
    8. '	min' → logprob: -20.625001907348633
    9. 'minimum' → logprob: -21.375001907348633
    10. '.min' → logprob: -21.500001907348633

Token 1171: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.4068935215473175
    2. '_x' → logprob: -1.1568934917449951
    3. 'x' → logprob: -4.406893730163574
    4. 'y' → logprob: -4.906893730163574
    5. '<|end|>' → logprob: -9.531893730163574
    6. 'Y' → logprob: -9.656893730163574
    7. '<|end|>' → logprob: -11.156893730163574
    8. 'max' → logprob: -11.281893730163574
    9. 'p' → logprob: -11.531893730163574
    10. 'X' → logprob: -11.531893730163574

Token 1172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ',max' → logprob: -12.250007629394531
    3. ' ,' → logprob: -12.875007629394531
    4. ',p' → logprob: -15.000007629394531
    5. 'max' → logprob: -15.375007629394531
    6. ',
' → logprob: -16.62500762939453
    7. '       ' → logprob: -18.00000762939453
    8. ')' → logprob: -18.37500762939453
    9. '[' → logprob: -18.62500762939453
    10. '   ' → logprob: -18.87500762939453

Token 1173: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5759435296058655
    2. 'max' → logprob: -0.8259435296058655
    3. ' min' → logprob: -12.700943946838379
    4. ' max' → logprob: -13.825943946838379
    5. '0' → logprob: -17.450942993164062
    6. '
' → logprob: -18.950942993164062
    7. '[min' → logprob: -19.700942993164062
    8. '(min' → logprob: -19.950942993164062
    9. '   ' → logprob: -19.950942993164062
    10. 'm' → logprob: -20.700942993164062

Token 1174: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.006175740156322718
    2. 'x' → logprob: -5.381175518035889
    3. 'max' → logprob: -6.506175518035889
    4. 'X' → logprob: -11.131175994873047
    5. '```' → logprob: -11.631175994873047
    6. '
' → logprob: -12.006175994873047
    7. '(max' → logprob: -12.256175994873047
    8. 'p' → logprob: -12.506175994873047
    9. '_max' → logprob: -12.506175994873047
    10. '0' → logprob: -12.631175994873047

Token 1175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4656579120783135e-05
    2. ',p' → logprob: -10.750044822692871
    3. ' ,' → logprob: -10.750044822692871
    4. ',min' → logprob: -13.875044822692871
    5. ',
' → logprob: -14.375044822692871
    6. ',m' → logprob: -16.750043869018555
    7. '   ' → logprob: -17.125043869018555
    8. 'min' → logprob: -17.500043869018555
    9. 'p' → logprob: -17.500043869018555
    10. ',max' → logprob: -17.625043869018555

Token 1176: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08759176731109619
    2. 'max' → logprob: -2.5875916481018066
    3. ' min' → logprob: -4.837591648101807
    4. ' max' → logprob: -7.212591648101807
    5. '_min' → logprob: -14.962592124938965
    6. '[min' → logprob: -15.462592124938965
    7. 'm' → logprob: -15.712592124938965
    8. '
' → logprob: -17.21259117126465
    9. '   ' → logprob: -17.21259117126465
    10. ' ' → logprob: -17.21259117126465

Token 1177: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.05548964813351631
    2. '_x' → logprob: -3.0554895401000977
    3. 'max' → logprob: -5.055489540100098
    4. 'y' → logprob: -9.055489540100098
    5. '```' → logprob: -9.305489540100098
    6. '_max' → logprob: -9.680489540100098
    7. 'Y' → logprob: -9.930489540100098
    8. ')' → logprob: -10.055489540100098
    9. '(max' → logprob: -10.305489540100098
    10. '[' → logprob: -10.555489540100098

Token 1178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.347765181795694e-05
    2. ')' → logprob: -10.750053405761719
    3. '       ' → logprob: -11.500053405761719
    4. ' ,' → logprob: -11.500053405761719
    5. ',
' → logprob: -12.250053405761719
    6. '   ' → logprob: -12.625053405761719
    7. '           ' → logprob: -14.125053405761719
    8. '<|end|>' → logprob: -14.375053405761719
    9. '
' → logprob: -14.750053405761719
    10. ',p' → logprob: -15.125053405761719

Token 1179: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0005543439765460789
    2. ' cls' → logprob: -7.50055456161499
    3. '(cls' → logprob: -14.750554084777832
    4. '       ' → logprob: -14.875554084777832
    5. '   ' → logprob: -15.375554084777832
    6. 'cl' → logprob: -15.625554084777832
    7. '           ' → logprob: -15.625554084777832
    8. 'class' → logprob: -17.37555503845215
    9. '
' → logprob: -17.50055503845215
    10. '_cls' → logprob: -18.12555503845215

Token 1180: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.0019370813388377428
    2. 'pattern' → logprob: -6.251936912536621
    3. '.' → logprob: -11.751936912536621
    4. '.p' → logprob: -15.376936912536621
    5. '[' → logprob: -16.126937866210938
    6. ' pattern' → logprob: -16.501937866210938
    7. '```' → logprob: -16.876937866210938
    8. '   ' → logprob: -17.001937866210938
    9. ' .' → logprob: -17.001937866210938
    10. 'pat' → logprob: -18.251937866210938

Token 1181: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1182: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.1928003813372925e-05
    2. '
' → logprob: -10.000051498413086
    3. '#' → logprob: -12.000051498413086
    4. ' class' → logprob: -16.000051498413086
    5. 'classes' → logprob: -16.125051498413086
    6. '<class' → logprob: -16.875051498413086
    7. '<|end|>' → logprob: -17.250051498413086
    8. 'classmethod' → logprob: -17.875051498413086
    9. '"class' → logprob: -17.875051498413086
    10. '  
' → logprob: -18.375051498413086

Token 1183: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -9.591415437171236e-05
    2. 'Plus' → logprob: -10.125096321105957
    3. ' Digit' → logprob: -10.250096321105957
    4. 'Minus' → logprob: -11.375096321105957
    5. 'Letter' → logprob: -12.500096321105957
    6. 'Dash' → logprob: -12.875096321105957
    7. 'Character' → logprob: -13.750096321105957
    8. 'Dot' → logprob: -14.875096321105957
    9. 'A' → logprob: -15.375096321105957
    10. 'Digital' → logprob: -15.875096321105957

Token 1184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. '
' → logprob: -17.875
    4. '9' → logprob: -17.875
    5. '7' → logprob: -19.25
    6. '8' → logprob: -19.5
    7. '\
' → logprob: -19.625
    8. '_' → logprob: -20.0
    9. ' ' → logprob: -20.125
    10. '₂' → logprob: -20.75

Token 1185: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: 0.0
    2. 'Character' → logprob: -18.125
    3. '<Character' → logprob: -18.5
    4. '(Class' → logprob: -19.5
    5. 'class' → logprob: -20.5
    6. '(
' → logprob: -20.75
    7. '(' → logprob: -21.25
    8. '(Char' → logprob: -21.5
    9. '.Character' → logprob: -21.625
    10. '(character' → logprob: -22.375

Token 1186: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.055303893983364105
    2. '):' → logprob: -3.6803038120269775
    3. '(Character' → logprob: -4.180304050445557
    4. '   ' → logprob: -5.055304050445557
    5. ':
' → logprob: -5.180304050445557
    6. 'Character' → logprob: -7.430304050445557
    7. ':' → logprob: -8.305303573608398
    8. '<Character' → logprob: -8.680303573608398
    9. '.Character' → logprob: -9.805303573608398
    10. ')' → logprob: -10.055303573608398

Token 1187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09938491135835648
    2. 'pattern' → logprob: -2.7243850231170654
    3. 'class' → logprob: -3.5993850231170654
    4. ' pattern' → logprob: -6.474384784698486
    5. '```' → logprob: -9.849385261535645
    6. '(pattern' → logprob: -10.974385261535645
    7. '.pattern' → logprob: -11.224385261535645
    8. ':
' → logprob: -11.474385261535645
    9. ' class' → logprob: -11.474385261535645
    10. '{
' → logprob: -11.724385261535645

Token 1188: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -1.700132997939363e-05
    2. ' pattern' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.500017166137695
    4. '```' → logprob: -19.500017166137695
    5. 'patterns' → logprob: -20.750017166137695
    6. 'pat' → logprob: -21.250017166137695
    7. '``' → logprob: -21.250017166137695
    8. 'class' → logprob: -21.250017166137695
    9. '(pattern' → logprob: -22.500017166137695
    10. '
' → logprob: -22.875017166137695

Token 1189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04864346235990524
    2. '=' → logprob: -3.0486433506011963
    3. '=[
' → logprob: -10.173643112182617
    4. '   ' → logprob: -11.048643112182617
    5. ':' → logprob: -14.048643112182617
    6. '```' → logprob: -14.798643112182617
    7. '=[' → logprob: -14.923643112182617
    8. '=
' → logprob: -15.798643112182617
    9. '  ' → logprob: -15.923643112182617
    10. ' ' → logprob: -16.048643112182617

Token 1190: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0019298245897516608
    2. '[' → logprob: -6.251929759979248
    3. ' [
' → logprob: -14.001930236816406
    4. '   ' → logprob: -14.876930236816406
    5. '["' → logprob: -17.751930236816406
    6. ' [' → logprob: -18.751930236816406
    7. ' ' → logprob: -20.376930236816406
    8. '=[
' → logprob: -20.501930236816406
    9. '[\' → logprob: -22.126930236816406
    10. '  ' → logprob: -22.251930236816406

Token 1191: '       ' (ID: 309)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.2185746282339096
    2. '       ' → logprob: -1.9685746431350708
    3. '   ' → logprob: -3.5935745239257812
    4. '[' → logprob: -3.7185745239257812
    5. '"' → logprob: -5.343574523925781
    6. '["' → logprob: -9.718574523925781
    7. ' [
' → logprob: -9.968574523925781
    8. '           ' → logprob: -11.468574523925781
    9. '     ' → logprob: -12.218574523925781
    10. ' ' → logprob: -12.843574523925781

Token 1192: ' "' (ID: 392)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.13540825247764587
    2. '"' (adapté à ' "') → logprob: -2.1354081630706787
    3. '[' → logprob: -5.010408401489258
    4. '   ' → logprob: -6.885408401489258
    5. '["' → logprob: -7.760408401489258
    6. '       ' → logprob: -8.135408401489258
    7. ' [
' → logprob: -11.635408401489258
    8. ' ' → logprob: -11.760408401489258
    9. '"class' → logprob: -12.510408401489258
    10. '     ' → logprob: -12.760408401489258

Token 1193: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.048591457307338715
    2. '"' → logprob: -3.048591375350952
    3. '110' → logprob: -12.923591613769531
    4. '011' → logprob: -14.423591613769531
    5. ''' → logprob: -14.548591613769531
    6. ' "' → logprob: -15.798591613769531
    7. '\
' → logprob: -16.54859161376953
    8. '```' → logprob: -16.54859161376953
    9. ' ' → logprob: -16.79859161376953
    10. '
' → logprob: -16.79859161376953

Token 1194: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.10057702660560608
    2. '",' → logprob: -2.3505771160125732
    3. '",
' → logprob: -8.475577354431152
    4. '","' → logprob: -9.350577354431152
    5. '"' → logprob: -9.975577354431152
    6. '',
' → logprob: -11.225577354431152
    7. '   ' → logprob: -11.725577354431152
    8. '",[' → logprob: -13.600577354431152
    9. '       ' → logprob: -13.850577354431152
    10. '[' → logprob: -13.850577354431152

Token 1195: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6932327747344971
    2. '       ' → logprob: -0.6932327747344971
    3. '   ' → logprob: -10.068232536315918
    4. '           ' → logprob: -10.568232536315918
    5. '"class' → logprob: -12.068232536315918
    6. ' "' → logprob: -12.318232536315918
    7. '	' → logprob: -13.193232536315918
    8. ' ' → logprob: -13.318232536315918
    9. '      ' → logprob: -14.318232536315918
    10. '     ' → logprob: -14.568232536315918

Token 1196: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.750000953674316
    3. '111' → logprob: -15.875000953674316
    4. ' "' → logprob: -16.125
    5. ' ' → logprob: -16.5
    6. ''' → logprob: -17.25
    7. '
' → logprob: -17.375
    8. '       ' → logprob: -18.875
    9. '"class' → logprob: -18.875
    10. '110' → logprob: -19.0

Token 1197: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.07802075147628784
    2. '111' → logprob: -2.9530208110809326
    3. '110' → logprob: -3.9530208110809326
    4. '101' → logprob: -6.2030205726623535
    5. '011' → logprob: -7.2030205726623535
    6. ' ' → logprob: -7.5780205726623535
    7. '100' → logprob: -8.453021049499512
    8. '010' → logprob: -9.828021049499512
    9. '000' → logprob: -9.953021049499512
    10. '"' → logprob: -10.328021049499512

Token 1198: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.07151317596435547
    2. '",' → logprob: -2.6965131759643555
    3. '"' → logprob: -6.6965131759643555
    4. '","' → logprob: -8.321513175964355
    5. '",
' → logprob: -10.821513175964355
    6. '',
' → logprob: -10.946513175964355
    7. '<|end|>' → logprob: -11.071513175964355
    8. '"
' → logprob: -11.446513175964355
    9. '",'' → logprob: -11.446513175964355
    10. '111' → logprob: -12.196513175964355

Token 1199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02772437036037445
    2. '"' → logprob: -3.652724266052246
    3. '           ' → logprob: -6.777724266052246
    4. '   ' → logprob: -8.652724266052246
    5. ' "' → logprob: -10.527724266052246
    6. ''' → logprob: -11.027724266052246
    7. '        ' → logprob: -11.152724266052246
    8. ' ' → logprob: -11.277724266052246
    9. '     ' → logprob: -11.527724266052246
    10. '      ' → logprob: -11.652724266052246

Token 1200: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -1.1637164789135568e-05
    2. '111' → logprob: -11.500011444091797
    3. ''' → logprob: -13.625011444091797
    4. ' "' → logprob: -16.125011444091797
    5. '   ' → logprob: -17.250011444091797
    6. ' ' → logprob: -17.375011444091797
    7. '
' → logprob: -17.750011444091797
    8. '       ' → logprob: -17.750011444091797
    9. '"class' → logprob: -17.750011444091797
    10. '110' → logprob: -18.500011444091797

Token 1201: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -1.6286106983898208e-05
    2. '110' → logprob: -11.250016212463379
    3. '"' → logprob: -13.625016212463379
    4. '101' → logprob: -13.625016212463379
    5. '011' → logprob: -14.875016212463379
    6. '100' → logprob: -15.375016212463379
    7. ''' → logprob: -15.875016212463379
    8. '```' → logprob: -17.250017166137695
    9. '001' → logprob: -17.500017166137695
    10. '
' → logprob: -17.750017166137695

Token 1202: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.14391139149665833
    2. '",' → logprob: -2.018911361694336
    3. '"' → logprob: -7.143911361694336
    4. '",
' → logprob: -8.643911361694336
    5. '","' → logprob: -8.768911361694336
    6. '',
' → logprob: -9.518911361694336
    7. '",'' → logprob: -11.518911361694336
    8. '",

' → logprob: -12.018911361694336
    9. '',' → logprob: -12.143911361694336
    10. '<|end|>' → logprob: -12.393911361694336

Token 1203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00614848081022501
    2. '"' → logprob: -5.131148338317871
    3. '           ' → logprob: -8.881148338317871
    4. '   ' → logprob: -10.006148338317871
    5. '[
' → logprob: -11.756148338317871
    6. ''' → logprob: -12.256148338317871
    7. '[' → logprob: -12.381148338317871
    8. '      ' → logprob: -12.381148338317871
    9. '        ' → logprob: -12.506148338317871
    10. ' ' → logprob: -12.756148338317871

Token 1204: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -4.251091377227567e-05
    2. '   ' → logprob: -10.250042915344238
    3. '
' → logprob: -12.500042915344238
    4. '["' → logprob: -14.000042915344238
    5. ' "' → logprob: -14.375042915344238
    6. ' ' → logprob: -14.625042915344238
    7. '[
' → logprob: -14.875042915344238
    8. ''' → logprob: -15.125042915344238
    9. '100' → logprob: -15.250042915344238
    10. '       ' → logprob: -15.250042915344238

Token 1205: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.1041145626222715e-05
    2. '"' → logprob: -11.625011444091797
    3. ''' → logprob: -13.750011444091797
    4. '110' → logprob: -15.125011444091797
    5. '101' → logprob: -15.250011444091797
    6. '""' → logprob: -16.000011444091797
    7. '
' → logprob: -16.125011444091797
    8. '``' → logprob: -16.500011444091797
    9. '111' → logprob: -16.500011444091797
    10. '```' → logprob: -17.000011444091797

Token 1206: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.049035243690013885
    2. '",' → logprob: -3.0490353107452393
    3. '"' → logprob: -8.42403507232666
    4. '","' → logprob: -9.04903507232666
    5. '",
' → logprob: -9.92403507232666
    6. '',
' → logprob: -10.17403507232666
    7. '[
' → logprob: -12.54903507232666
    8. '",

' → logprob: -12.67403507232666
    9. '",'' → logprob: -12.67403507232666
    10. '<|end|>' → logprob: -12.79903507232666

Token 1207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20163239538669586
    2. '"' → logprob: -1.7016323804855347
    3. '   ' → logprob: -8.826632499694824
    4. ' "' → logprob: -10.451632499694824
    5. ''' → logprob: -11.201632499694824
    6. '           ' → logprob: -11.451632499694824
    7. '"class' → logprob: -12.076632499694824
    8. '        ' → logprob: -12.451632499694824
    9. '      ' → logprob: -12.701632499694824
    10. ' ' → logprob: -13.076632499694824

Token 1208: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -3.619311974034645e-05
    2. '111' → logprob: -11.125036239624023
    3. '       ' → logprob: -11.250036239624023
    4. '   ' → logprob: -12.375036239624023
    5. ' "' → logprob: -13.500036239624023
    6. '	' → logprob: -13.875036239624023
    7. ''' → logprob: -13.875036239624023
    8. ' ' → logprob: -14.500036239624023
    9. '"class' → logprob: -15.875036239624023
    10. '
' → logprob: -16.125036239624023

Token 1209: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.00020890454470645636
    2. '"' → logprob: -8.500208854675293
    3. '100' → logprob: -12.250208854675293
    4. ''' → logprob: -14.750208854675293
    5. '110' → logprob: -16.62520980834961
    6. '101' → logprob: -17.37520980834961
    7. ' ' → logprob: -17.87520980834961
    8. '011' → logprob: -19.12520980834961
    9. '"""' → logprob: -19.25020980834961
    10. '""' → logprob: -19.37520980834961

Token 1210: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.15506592392921448
    2. '   ' → logprob: -2.4050660133361816
    3. '"
' → logprob: -3.6550660133361816
    4. '"]' → logprob: -3.6550660133361816
    5. ']' → logprob: -6.780066013336182
    6. ']"' → logprob: -7.655066013336182
    7. '"]
' → logprob: -11.155065536499023
    8. ']"
' → logprob: -11.280065536499023
    9. ']
' → logprob: -12.155065536499023
    10. '       ' → logprob: -12.280065536499023

Token 1211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035640452057123184
    2. ':' → logprob: -3.9106404781341553
    3. '<|end|>' → logprob: -5.160640239715576
    4. ''' → logprob: -5.535640239715576
    5. ']' → logprob: -6.410640239715576
    6. '']' → logprob: -6.910640239715576
    7. ':
' → logprob: -7.660640239715576
    8. '  ' → logprob: -8.035640716552734
    9. '[' → logprob: -8.285640716552734
    10. '<|end|>' → logprob: -8.410640716552734

Token 1212: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025966696557588875
    2. ']' → logprob: -8.875259399414062
    3. 'class' → logprob: -9.750259399414062
    4. '
' → logprob: -10.250259399414062
    5. ']
' (adapté à ' ]
') → logprob: -11.625259399414062
    6. '"' → logprob: -12.500259399414062
    7. 'char' → logprob: -12.500259399414062
    8. ',' → logprob: -13.625259399414062
    9. ' ' → logprob: -13.750259399414062
    10. ':
' → logprob: -13.750259399414062

Token 1213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35249659419059753
    2. ':
' → logprob: -1.47749662399292
    3. 'char' → logprob: -3.22749662399292
    4. ':' → logprob: -4.10249662399292
    5. 'class' → logprob: -4.60249662399292
    6. ' char' → logprob: -6.22749662399292
    7. '```' → logprob: -9.102496147155762
    8. ' class' → logprob: -9.227496147155762
    9. '{
' → logprob: -9.352496147155762
    10. '
' → logprob: -10.102496147155762

Token 1214: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.00020413640595506877
    2. ' char' → logprob: -8.500204086303711
    3. 'class' → logprob: -14.625204086303711
    4. 'pattern' → logprob: -16.25020408630371
    5. '   ' → logprob: -16.50020408630371
    6. '
' → logprob: -18.12520408630371
    7. '```' → logprob: -18.87520408630371
    8. '_char' → logprob: -19.25020408630371
    9. '.char' → logprob: -19.87520408630371
    10. '<char' → logprob: -20.50020408630371

Token 1215: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -1.843177233240567e-05
    2. 'repr' → logprob: -11.125018119812012
    3. '   ' → logprob: -12.625018119812012
    4. 'classmethod' → logprob: -16.375019073486328
    5. '```' → logprob: -16.375019073486328
    6. 'char' → logprob: -16.750019073486328
    7. '
' → logprob: -17.250019073486328
    8. '=' → logprob: -17.500019073486328
    9. 'class' → logprob: -17.875019073486328
    10. '_rep' → logprob: -18.125019073486328

Token 1216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132897615432739
    2. '=' → logprob: -1.313289761543274
    3. ' ='' → logprob: -11.063289642333984
    4. '='' → logprob: -11.563289642333984
    5. ''' → logprob: -13.188289642333984
    6. ' ' → logprob: -15.313289642333984
    7. ''=' → logprob: -15.438289642333984
    8. '<|end|>' → logprob: -15.688289642333984
    9. ':' → logprob: -15.813289642333984
    10. '   ' → logprob: -16.313289642333984

Token 1217: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.941850526549388e-06
    2. '2' → logprob: -11.875007629394531
    3. '"' → logprob: -14.625007629394531
    4. ' '' → logprob: -14.625007629394531
    5. '`' → logprob: -17.37500762939453
    6. ' ' → logprob: -18.62500762939453
    7. '('' → logprob: -19.87500762939453
    8. '
' → logprob: -20.37500762939453
    9. '‘' → logprob: -20.50000762939453
    10. '   ' → logprob: -21.00000762939453

Token 1218: '2' (ID: 17)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07889099419116974
    2. '2' → logprob: -2.5788910388946533
    3. '"' → logprob: -13.953890800476074
    4. '`' → logprob: -15.453890800476074
    5. ' '' → logprob: -17.07889175415039
    6. '
' → logprob: -17.45389175415039
    7. ''
' → logprob: -17.70389175415039
    8. ' ' → logprob: -18.20389175415039
    9. '’' → logprob: -18.45389175415039
    10. '‘' → logprob: -18.82889175415039

Token 1219: ''

' (ID: 7497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2911478281021118
    2. '<|end|>' → logprob: -2.0411477088928223
    3. ''' → logprob: -2.1661477088928223
    4. '
' → logprob: -5.791147708892822
    5. ''
' → logprob: -6.541147708892822
    6. '  ' → logprob: -7.416147708892822
    7. '"' → logprob: -7.416147708892822
    8. 'class' → logprob: -7.416147708892822
    9. '<|end|>' → logprob: -7.541147708892822
    10. ' ' → logprob: -7.916147708892822

Token 1220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47454288601875305
    2. '
' → logprob: -0.9745428562164307
    3. '@' → logprob: -7.97454309463501
    4. '```' → logprob: -10.349542617797852
    5. '    
' → logprob: -10.849542617797852
    6. '
' → logprob: -11.224542617797852
    7. 'class' → logprob: -11.224542617797852
    8. ' @' → logprob: -11.224542617797852
    9. '

' → logprob: -11.849542617797852
    10. '<|end|>' → logprob: -11.974542617797852

Token 1221: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -5.080963092041202e-06
    2. '
' → logprob: -13.000004768371582
    3. ' @' → logprob: -13.250004768371582
    4. '@class' → logprob: -14.250004768371582
    5. 'classmethod' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.2500057220459
    7. '@
' → logprob: -16.8750057220459
    8. '@property' → logprob: -17.0000057220459
    9. 'class' → logprob: -17.6250057220459
    10. '@param' → logprob: -17.7500057220459

Token 1222: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: 0.0
    2. 'staticmethod' → logprob: -17.5
    3. 'class' → logprob: -17.875
    4. '@' → logprob: -19.625
    5. 'property' → logprob: -21.625
    6. '<class' → logprob: -24.25
    7. '@class' → logprob: -24.375
    8. '@property' → logprob: -25.875
    9. '"class' → logprob: -26.25
    10. 'cls' → logprob: -26.5

Token 1223: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11492691189050674
    2. '   ' → logprob: -2.364926815032959
    3. ' def' → logprob: -4.239926815032959
    4. ':' → logprob: -8.989927291870117
    5. '  ' → logprob: -10.364927291870117
    6. '
' → logprob: -11.614927291870117
    7. ':def' → logprob: -11.739927291870117
    8. '[' → logprob: -11.864927291870117
    9. ' ' → logprob: -12.239927291870117
    10. '	def' → logprob: -12.489927291870117

Token 1224: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020396249368786812
    2. '   ' → logprob: -4.0203962326049805
    3. ' def' → logprob: -6.1453962326049805
    4. '
' → logprob: -9.52039623260498
    5. '	def' → logprob: -11.77039623260498
    6. ':' → logprob: -12.02039623260498
    7. '  ' → logprob: -12.64539623260498
    8. ':def' → logprob: -12.64539623260498
    9. ' ' → logprob: -13.14539623260498
    10. '```' → logprob: -13.27039623260498

Token 1225: ' def' (ID: 1056)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.38687241077423096
    2. 'def' (adapté à ' def') → logprob: -1.136872410774231
    3. ' try' → logprob: -14.011872291564941
    4. ' def' → logprob: -15.261872291564941
    5. '.try' → logprob: -15.761872291564941
    6. '
' → logprob: -16.761873245239258
    7. '_try' → logprob: -17.011873245239258
    8. 'Try' → logprob: -17.886873245239258
    9. 'async' → logprob: -18.011873245239258
    10. '```' → logprob: -18.886873245239258

Token 1226: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: 0.0
    2. ' try' → logprob: -19.875
    3. '.try' → logprob: -21.875
    4. '_try' → logprob: -21.875
    5. 'def' → logprob: -23.375
    6. '	try' → logprob: -24.5
    7. 'attempt' → logprob: -25.625
    8. '   ' → logprob: -25.625
    9. 'test' → logprob: -25.75
    10. 'trying' → logprob: -25.875

Token 1227: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.0004329341172706336
    2. 'match' → logprob: -7.750432968139648
    3. 'Match' → logprob: -14.250432968139648
    4. 'def' → logprob: -14.500432968139648
    5. '_' → logprob: -14.875432968139648
    6. ' match' → logprob: -16.12543296813965
    7. 'class' → logprob: -16.25043296813965
    8. '```' → logprob: -16.37543296813965
    9. '   ' → logprob: -16.62543296813965
    10. '
' → logprob: -16.62543296813965

Token 1228: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0010429323883727193
    2. 'cls' → logprob: -6.87604284286499
    3. ' cls' → logprob: -12.001043319702148
    4. 'classmethod' → logprob: -13.626043319702148
    5. '   ' → logprob: -13.751043319702148
    6. 'def' → logprob: -14.001043319702148
    7. '.cls' → logprob: -15.626043319702148
    8. 'class' → logprob: -15.626043319702148
    9. '```' → logprob: -15.626043319702148
    10. ' ' → logprob: -15.751043319702148

Token 1229: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.5099990367889404
    2. '(points' → logprob: -1.0099990367889404
    3. ',' → logprob: -3.3849990367889404
    4. 'points' → logprob: -7.5099992752075195
    5. 'cls' → logprob: -8.25999927520752
    6. ' points' → logprob: -8.38499927520752
    7. '   ' → logprob: -9.25999927520752
    8. '(parts' → logprob: -9.75999927520752
    9. ')' → logprob: -10.00999927520752
    10. '(' → logprob: -10.50999927520752

Token 1230: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.006759425159543753
    2. 'cls' → logprob: -5.0067596435546875
    3. ' points' → logprob: -10.131759643554688
    4. 'set' → logprob: -12.631759643554688
    5. 'class' → logprob: -14.381759643554688
    6. 'sets' → logprob: -15.881759643554688
    7. 'chars' → logprob: -16.256759643554688
    8. 'Set' → logprob: -16.631759643554688
    9. '(points' → logprob: -16.631759643554688
    10. 'pts' → logprob: -17.131759643554688

Token 1231: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015217668376863003
    2. ')' → logprob: -4.3902177810668945
    3. '   ' → logprob: -6.8902177810668945
    4. '       ' → logprob: -7.3902177810668945
    5. '):' → logprob: -7.5152177810668945
    6. ',' → logprob: -9.140217781066895
    7. ':Set' → logprob: -9.515217781066895
    8. 'Set' → logprob: -9.765217781066895
    9. '==' → logprob: -10.390217781066895
    10. '=' → logprob: -10.515217781066895

Token 1232: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0001596771035110578
    2. 'set' → logprob: -8.75015926361084
    3. ' Set' → logprob: -14.12515926361084
    4. '_set' → logprob: -15.50015926361084
    5. '@' → logprob: -16.375160217285156
    6. 'Sets' → logprob: -16.500160217285156
    7. 'True' → logprob: -17.375160217285156
    8. 'classmethod' → logprob: -17.875160217285156
    9. 'cls' → logprob: -18.125160217285156
    10. '-set' → logprob: -18.500160217285156

Token 1233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013477344764396548
    2. '(Point' → logprob: -6.751347541809082
    3. '<Point' → logprob: -8.876347541809082
    4. 'Point' → logprob: -11.876347541809082
    5. 'def' → logprob: -11.876347541809082
    6. '(p' → logprob: -12.001347541809082
    7. ')' → logprob: -12.126347541809082
    8. '{' → logprob: -12.501347541809082
    9. '.Point' → logprob: -12.626347541809082
    10. '...' → logprob: -14.001347541809082

Token 1234: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. ' Point' → logprob: -17.875
    3. '	Point' → logprob: -19.0
    4. 'int' → logprob: -19.25
    5. '<Point' → logprob: -19.25
    6. '(Point' → logprob: -19.25
    7. '.Point' → logprob: -20.625
    8. ')' → logprob: -21.0
    9. '_Point' → logprob: -21.0
    10. 'p' → logprob: -21.5

Token 1235: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. '):' → logprob: -12.750007629394531
    3. '):
' → logprob: -13.125007629394531
    4. ' )' → logprob: -13.625007629394531
    5. '   ' → logprob: -13.750007629394531
    6. '       ' → logprob: -15.750007629394531
    7. '())' → logprob: -16.87500762939453
    8. '])' → logprob: -17.00000762939453
    9. '()' → logprob: -17.62500762939453
    10. '))' → logprob: -17.87500762939453

Token 1236: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.5900618433952332
    2. '->' → logprob: -1.340061902999878
    3. '(cls' → logprob: -2.965061902999878
    4. '   ' → logprob: -3.090061902999878
    5. '       ' → logprob: -3.465061902999878
    6. ')' → logprob: -3.715061902999878
    7. ':' → logprob: -3.840061902999878
    8. '>' → logprob: -5.090061664581299
    9. '(points' → logprob: -7.340061664581299
    10. 'def' → logprob: -7.340061664581299

Token 1237: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -1.4021237802808173e-05
    2. ' bool' → logprob: -11.250014305114746
    3. 'True' → logprob: -14.750014305114746
    4. 'return' → logprob: -14.875014305114746
    5. '<bool' → logprob: -15.625014305114746
    6. 'False' → logprob: -17.12501335144043
    7. 'Bool' → logprob: -17.37501335144043
    8. '(bool' → logprob: -18.50001335144043
    9. '	bool' → logprob: -18.50001335144043
    10. '_bool' → logprob: -19.37501335144043

Token 1238: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1776343137025833
    2. ':
' → logprob: -2.4276342391967773
    3. ':' → logprob: -2.6776342391967773
    4. '   ' → logprob: -6.177634239196777
    5. '(points' → logprob: -6.177634239196777
    6. '(cls' → logprob: -7.802634239196777
    7. '(' → logprob: -8.427634239196777
    8. ':return' → logprob: -8.552634239196777
    9. ')' → logprob: -8.677634239196777
    10. '->' → logprob: -9.177634239196777

Token 1239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9361264946837764e-07
    2. ' if' → logprob: -16.625
    3. 'if' → logprob: -18.125
    4. '```' → logprob: -18.5
    5. '   ' → logprob: -18.625
    6. '
' → logprob: -19.0
    7. '           ' → logprob: -19.0
    8. '      ' → logprob: -19.0
    9. '     ' → logprob: -19.625
    10. '{
' → logprob: -19.75

Token 1240: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008817244321107864
    2. '       ' → logprob: -4.758817195892334
    3. ' if' → logprob: -8.508817672729492
    4. '
' → logprob: -14.383817672729492
    5. '   ' → logprob: -15.008817672729492
    6. '@' → logprob: -17.633817672729492
    7. '           ' → logprob: -18.008817672729492
    8. '     ' → logprob: -18.508817672729492
    9. '      ' → logprob: -18.883817672729492
    10. '	if' → logprob: -19.383817672729492

Token 1241: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10020720958709717
    2. ' not' → logprob: -2.3502073287963867
    3. '       ' → logprob: -15.475207328796387
    4. '   ' → logprob: -15.600207328796387
    5. '           ' → logprob: -16.85020637512207
    6. '
' → logprob: -16.97520637512207
    7. 'len' → logprob: -17.22520637512207
    8. 'n' → logprob: -17.35020637512207
    9. '(not' → logprob: -17.47520637512207
    10. '	not' → logprob: -18.22520637512207

Token 1242: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0040895589627325535
    2. ' points' → logprob: -5.50408935546875
    3. '(points' → logprob: -12.00408935546875
    4. 'cls' → logprob: -13.00408935546875
    5. 'bool' → logprob: -13.00408935546875
    6. 'point' → logprob: -16.00408935546875
    7. '	points' → logprob: -16.00408935546875
    8. 'False' → logprob: -16.12908935546875
    9. 'not' → logprob: -17.12908935546875
    10. 'None' → logprob: -17.62908935546875

Token 1243: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11578251421451569
    2. ':
' → logprob: -2.2407824993133545
    3. '           ' → logprob: -5.865782737731934
    4. '       ' → logprob: -10.365782737731934
    5. ':return' → logprob: -10.615782737731934
    6. '[' → logprob: -10.865782737731934
    7. ':
' → logprob: -11.615782737731934
    8. 'and' → logprob: -12.115782737731934
    9. '{
' → logprob: -12.365782737731934
    10. '=' → logprob: -12.365782737731934

Token 1244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037716879160143435
    2. ':
' → logprob: -8.75037670135498
    3. 'False' → logprob: -9.37537670135498
    4. 'return' → logprob: -9.75037670135498
    5. ':' → logprob: -9.87537670135498
    6. '=' → logprob: -12.00037670135498
    7. '       ' → logprob: -12.37537670135498
    8. '          ' → logprob: -12.37537670135498
    9. ' return' → logprob: -13.12537670135498
    10. '=False' → logprob: -13.25037670135498

Token 1245: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.006931931246072054
    2. 'return' (adapté à ' return') → logprob: -5.256931781768799
    3. ' False' → logprob: -6.506931781768799
    4. ' return' → logprob: -8.506932258605957
    5. '       ' → logprob: -13.756932258605957
    6. 'True' → logprob: -15.506932258605957
    7. 'Return' → logprob: -16.13193130493164
    8. '   ' → logprob: -17.13193130493164
    9. '=False' → logprob: -17.63193130493164
    10. '0' → logprob: -17.63193130493164

Token 1246: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002614550176076591
    2. ' False' → logprob: -8.250261306762695
    3. 'True' → logprob: -16.250261306762695
    4. '(False' → logprob: -19.250261306762695
    5. 'F' → logprob: -21.125261306762695
    6. '_false' → logprob: -22.500261306762695
    7. '=False' → logprob: -22.875261306762695
    8. 'false' → logprob: -23.500261306762695
    9. '
' → logprob: -23.625261306762695
    10. '.False' → logprob: -23.750261306762695

Token 1247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.41866585687967e-06
    2. '
' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.500008583068848
    4. '           ' → logprob: -15.750008583068848
    5. 'import' → logprob: -16.75000762939453
    6. '      ' → logprob: -17.62500762939453
    7. '
' → logprob: -18.25000762939453
    8. '	' → logprob: -18.62500762939453
    9. ',' → logprob: -18.62500762939453
    10. 'return' → logprob: -18.75000762939453

Token 1248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.375
    3. '           ' → logprob: -16.625
    4. '   ' → logprob: -17.25
    5. '      ' → logprob: -18.75
    6. 'import' → logprob: -19.375
    7. '     ' → logprob: -19.875
    8. '               ' → logprob: -19.875
    9. '
' → logprob: -20.875
    10. '	' → logprob: -21.0

Token 1249: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1659741848707199
    2. 'min' (adapté à ' min') → logprob: -1.9159741401672363
    3. ' min' → logprob: -5.165974140167236
    4. '
' → logprob: -11.290974617004395
    5. '   ' → logprob: -11.790974617004395
    6. '	min' → logprob: -12.415974617004395
    7. '(min' → logprob: -14.415974617004395
    8. '           ' → logprob: -14.415974617004395
    9. '[min' → logprob: -15.165974617004395
    10. ',min' → logprob: -16.040973663330078

Token 1250: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.06519322097301483
    2. '_' → logprob: -2.8151931762695312
    3. '(p' → logprob: -6.065193176269531
    4. 'x' → logprob: -8.065193176269531
    5. '<|end|>' → logprob: -8.440193176269531
    6. '(' → logprob: -9.065193176269531
    7. '(x' → logprob: -9.315193176269531
    8. '_p' → logprob: -9.565193176269531
    9. '_(' → logprob: -11.440193176269531
    10. '_=' → logprob: -11.690193176269531

Token 1251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740784466266632
    2. '=' → logprob: -0.9740784168243408
    3. '=
' → logprob: -13.849078178405762
    4. '=min' → logprob: -15.474078178405762
    5. '   ' → logprob: -16.724079132080078
    6. '=

' → logprob: -17.099079132080078
    7. '```' → logprob: -17.474079132080078
    8. '=}' → logprob: -17.724079132080078
    9. '＝' → logprob: -17.849079132080078
    10. ' =
' → logprob: -18.224079132080078

Token 1252: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001234428636962548
    2. ' min' → logprob: -9.000123023986816
    3. 'max' → logprob: -17.750123977661133
    4. '(min' → logprob: -18.375123977661133
    5. '=min' → logprob: -19.375123977661133
    6. 'mini' → logprob: -19.500123977661133
    7. '[min' → logprob: -19.750123977661133
    8. 'minimum' → logprob: -20.250123977661133
    9. '	min' → logprob: -20.250123977661133
    10. '_min' → logprob: -21.375123977661133

Token 1253: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.570319702499546e-05
    2. '(' → logprob: -10.875025749206543
    3. 'p' → logprob: -12.000025749206543
    4. ' (' → logprob: -15.500025749206543
    5. '<|end|>' → logprob: -15.500025749206543
    6. '(
' → logprob: -16.375024795532227
    7. ' p' → logprob: -18.000024795532227
    8. 'token' → logprob: -18.000024795532227
    9. '<|end|>' → logprob: -18.750024795532227
    10. '(x' → logprob: -19.125024795532227

Token 1254: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.1258089244365692
    2. 'for' → logprob: -2.5008089542388916
    3. ' for' → logprob: -3.8758089542388916
    4. '(p' → logprob: -4.5008087158203125
    5. '(x' → logprob: -6.5008087158203125
    6. '.p' → logprob: -6.5008087158203125
    7. '.' → logprob: -7.0008087158203125
    8. ')' → logprob: -9.500808715820312
    9. ' .' → logprob: -9.625808715820312
    10. '().' → logprob: -10.125808715820312

Token 1255: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759458541870117
    2. ' for' → logprob: -0.8259458541870117
    3. ')' → logprob: -13.950945854187012
    4. '(p' → logprob: -14.075945854187012
    5. '	for' → logprob: -14.075945854187012
    6. '   ' → logprob: -14.200945854187012
    7. ',' → logprob: -14.575945854187012
    8. '       ' → logprob: -14.700945854187012
    9. 'in' → logprob: -14.825945854187012
    10. ' in' → logprob: -14.950945854187012

Token 1256: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06287260353565216
    2. ' p' → logprob: -2.8128726482391357
    3. 'points' → logprob: -7.437872409820557
    4. ' points' → logprob: -8.062872886657715
    5. 'point' → logprob: -15.187872886657715
    6. ' in' → logprob: -15.937872886657715
    7. '	p' → logprob: -16.1878719329834
    8. '(p' → logprob: -16.1878719329834
    9. '   ' → logprob: -16.5628719329834
    10. '(points' → logprob: -16.5628719329834

Token 1257: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6226288080215454
    2. ' in' → logprob: -0.8726288080215454
    3. ' p' → logprob: -3.997628688812256
    4. 'in' → logprob: -4.122628688812256
    5. 'points' → logprob: -4.622628688812256
    6. ' points' → logprob: -6.747628688812256
    7. 'point' → logprob: -10.372629165649414
    8. '.points' → logprob: -12.497629165649414
    9. ' ' → logprob: -12.747629165649414
    10. '
' → logprob: -12.747629165649414

Token 1258: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.001331190811470151
    2. ' points' → logprob: -6.626331329345703
    3. 'p' → logprob: -12.376331329345703
    4. '(points' → logprob: -14.876331329345703
    5. 'point' → logprob: -15.626331329345703
    6. '	points' → logprob: -15.751331329345703
    7. '
' → logprob: -16.001331329345703
    8. '.points' → logprob: -16.126331329345703
    9. 'Points' → logprob: -17.501331329345703
    10. '[' → logprob: -18.001331329345703

Token 1259: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4204733073711395
    2. ')' → logprob: -1.545473337173462
    3. '       ' → logprob: -2.045473337173462
    4. '),' → logprob: -7.545473098754883
    5. ')
' → logprob: -9.170473098754883
    6. 'for' → logprob: -10.170473098754883
    7. ',' → logprob: -11.545473098754883
    8. ');' → logprob: -11.670473098754883
    9. '<|end|>' → logprob: -12.170473098754883
    10. '        ' → logprob: -12.420473098754883

Token 1260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.226628895296017e-06
    2. ',' → logprob: -13.000007629394531
    3. '<|end|>' → logprob: -13.500007629394531
    4. '
' → logprob: -13.750007629394531
    5. '               ' → logprob: -14.625007629394531
    6. '           ' → logprob: -14.750007629394531
    7. '```' → logprob: -15.375007629394531
    8. 'min' → logprob: -15.375007629394531
    9. '      ' → logprob: -15.500007629394531
    10. ')' → logprob: -15.625007629394531

Token 1261: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -1.0683535037969705e-05
    2. ' min' → logprob: -11.50001049041748
    3. '       ' → logprob: -14.62501049041748
    4. '[min' → logprob: -17.750011444091797
    5. '.min' → logprob: -18.375011444091797
    6. '	min' → logprob: -18.500011444091797
    7. 'max' → logprob: -18.625011444091797
    8. '(min' → logprob: -19.125011444091797
    9. '_min' → logprob: -19.375011444091797
    10. 'mini' → logprob: -20.875011444091797

Token 1262: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -8.709308167453855e-05
    2. 'y' → logprob: -9.750086784362793
    3. '_x' → logprob: -11.000086784362793
    4. '(p' → logprob: -11.500086784362793
    5. '   ' → logprob: -14.625086784362793
    6. 'import' → logprob: -14.625086784362793
    7. 'Y' → logprob: -14.750086784362793
    8. '```' → logprob: -15.625086784362793
    9. 'p' → logprob: -15.750086784362793
    10. 'def' → logprob: -16.75008773803711

Token 1263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12705504894256592
    2. '=' → logprob: -2.1270551681518555
    3. 'for' → logprob: -9.627055168151855
    4. ' for' → logprob: -9.752055168151855
    5. ' in' → logprob: -13.377055168151855
    6. '   ' → logprob: -15.252055168151855
    7. '=lambda' → logprob: -15.627055168151855
    8. '<|end|>' → logprob: -15.627055168151855
    9. '=
' → logprob: -16.00205421447754
    10. ')' → logprob: -16.25205421447754

Token 1264: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0004307884373702109
    2. ' min' → logprob: -7.750430583953857
    3. '(min' → logprob: -15.875431060791016
    4. '[min' → logprob: -17.250431060791016
    5. 'max' → logprob: -17.750431060791016
    6. '	min' → logprob: -19.125431060791016
    7. 'minimum' → logprob: -19.625431060791016
    8. '=min' → logprob: -20.125431060791016
    9. 'mini' → logprob: -20.625431060791016
    10. 'm' → logprob: -20.625431060791016

Token 1265: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.4121114822482923e-06
    2. 'p' → logprob: -12.750003814697266
    3. '(' → logprob: -14.625003814697266
    4. '```' → logprob: -17.750003814697266
    5. 'def' → logprob: -18.000003814697266
    6. ' (' → logprob: -18.000003814697266
    7. ' p' → logprob: -18.000003814697266
    8. 'for' → logprob: -18.250003814697266
    9. '[p' → logprob: -18.500003814697266
    10. '<|end|>' → logprob: -18.750003814697266

Token 1266: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0031357703264802694
    2. '.p' → logprob: -5.878135681152344
    3. '.y' → logprob: -8.878135681152344
    4. 'for' → logprob: -9.753135681152344
    5. '[p' → logprob: -9.878135681152344
    6. 'p' → logprob: -10.503135681152344
    7. 'y' → logprob: -10.503135681152344
    8. '(y' → logprob: -12.128135681152344
    9. '[' → logprob: -12.503135681152344
    10. '(x' → logprob: -12.628135681152344

Token 1267: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759453773498535
    2. ' for' → logprob: -0.8259453773498535
    3. '(p' → logprob: -12.950944900512695
    4. ' in' → logprob: -13.700944900512695
    5. ')' → logprob: -13.950944900512695
    6. '	for' → logprob: -15.075944900512695
    7. 'in' → logprob: -15.700944900512695
    8. '(for' → logprob: -15.700944900512695
    9. '   ' → logprob: -15.825944900512695
    10. '```' → logprob: -15.950944900512695

Token 1268: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0037327378522604704
    2. 'points' → logprob: -5.628732681274414
    3. '(p' → logprob: -9.253732681274414
    4. ' p' → logprob: -10.878732681274414
    5. '(points' → logprob: -11.753732681274414
    6. ' points' → logprob: -12.128732681274414
    7. '[p' → logprob: -13.378732681274414
    8. 'point' → logprob: -14.003732681274414
    9. 'for' → logprob: -14.628732681274414
    10. '
' → logprob: -15.003732681274414

Token 1269: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3140951991081238
    2. ' for' → logprob: -1.5640952587127686
    3. 'points' → logprob: -4.0640950202941895
    4. '.points' → logprob: -4.4390950202941895
    5. ' in' → logprob: -4.5640950202941895
    6. 'in' → logprob: -4.6890950202941895
    7. 'oints' → logprob: -5.0640950202941895
    8. '(points' → logprob: -5.5640950202941895
    9. ' points' → logprob: -6.8140950202941895
    10. '	points' → logprob: -9.064095497131348

Token 1270: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.1041145626222715e-05
    2. '(points' → logprob: -12.000011444091797
    3. ' points' → logprob: -13.000011444091797
    4. 'p' → logprob: -13.500011444091797
    5. '
' → logprob: -14.750011444091797
    6. '[' → logprob: -15.000011444091797
    7. 'point' → logprob: -16.125011444091797
    8. '	points' → logprob: -16.375011444091797
    9. '.points' → logprob: -16.500011444091797
    10. 'oints' → logprob: -16.875011444091797

Token 1271: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03735015541315079
    2. '       ' → logprob: -3.4123501777648926
    3. 'for' → logprob: -5.662350177764893
    4. ' for' → logprob: -8.787349700927734
    5. ')' → logprob: -10.037349700927734
    6. ')
' → logprob: -11.412349700927734
    7. 'if' → logprob: -12.037349700927734
    8. '   ' → logprob: -12.537349700927734
    9. '           ' → logprob: -13.412349700927734
    10. ']
' → logprob: -14.537349700927734

Token 1272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005595852271653712
    2. 'min' → logprob: -7.6255598068237305
    3. '```' → logprob: -10.62555980682373
    4. 'max' → logprob: -11.00055980682373
    5. '
' → logprob: -11.00055980682373
    6. ' min' → logprob: -12.12555980682373
    7. ' =' → logprob: -13.37555980682373
    8. '=' → logprob: -13.75055980682373
    9. '           ' → logprob: -14.00055980682373
    10. '``' → logprob: -14.12555980682373

Token 1273: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.002675656694918871
    2. '       ' → logprob: -6.502675533294678
    3. ' max' → logprob: -6.752675533294678
    4. 'min' → logprob: -12.502676010131836
    5. '(max' → logprob: -15.127676010131836
    6. '[max' → logprob: -15.252676010131836
    7. '_max' → logprob: -15.627676010131836
    8. '```' → logprob: -15.627676010131836
    9. '	max' → logprob: -15.752676010131836
    10. '.max' → logprob: -16.377676010131836

Token 1274: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.049754153937101364
    2. '(p' → logprob: -3.0497541427612305
    3. '_p' → logprob: -6.7997541427612305
    4. '(_' → logprob: -11.42475414276123
    5. '```' → logprob: -11.42475414276123
    6. '_' → logprob: -11.79975414276123
    7. 'x' → logprob: -12.54975414276123
    8. '(max' → logprob: -12.67475414276123
    9. '[p' → logprob: -12.67475414276123
    10. '(' → logprob: -12.67475414276123

Token 1275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804229199886322
    2. '=' → logprob: -3.2880423069000244
    3. '=max' → logprob: -14.038042068481445
    4. 'max' → logprob: -16.913042068481445
    5. ' for' → logprob: -17.038042068481445
    6. '       ' → logprob: -17.538042068481445
    7. 'for' → logprob: -17.663042068481445
    8. '   ' → logprob: -17.663042068481445
    9. '```' → logprob: -19.038042068481445
    10. '        ' → logprob: -19.163042068481445

Token 1276: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2519291639328003
    2. ' max' → logprob: -1.5019291639328003
    3. '(max' → logprob: -16.626928329467773
    4. '	max' → logprob: -18.376928329467773
    5. '=max' → logprob: -18.376928329467773
    6. '_max' → logprob: -19.001928329467773
    7. '[max' → logprob: -19.126928329467773
    8. 'Max' → logprob: -20.251928329467773
    9. ',max' → logprob: -20.626928329467773
    10. ' ' → logprob: -21.126928329467773

Token 1277: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.1928003813372925e-05
    2. 'p' → logprob: -9.875051498413086
    3. 'max' → logprob: -15.875051498413086
    4. ' p' → logprob: -16.125051498413086
    5. '(max' → logprob: -16.750051498413086
    6. '[p' → logprob: -17.375051498413086
    7. '   ' → logprob: -17.750051498413086
    8. '_p' → logprob: -18.125051498413086
    9. '```' → logprob: -18.625051498413086
    10. '<p' → logprob: -19.000051498413086

Token 1278: '.x' (ID: 3700)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0013624972198158503
    2. 'for' → logprob: -6.876362323760986
    3. '.x' → logprob: -9.001362800598145
    4. '.p' → logprob: -9.751362800598145
    5. 'x' → logprob: -10.251362800598145
    6. 'p' → logprob: -10.376362800598145
    7. '(x' → logprob: -10.626362800598145
    8. '(max' → logprob: -11.001362800598145
    9. 'max' → logprob: -11.626362800598145
    10. '[p' → logprob: -12.126362800598145

Token 1279: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31327179074287415
    2. ' for' → logprob: -1.3132717609405518
    3. ')' → logprob: -12.563271522521973
    4. '```' → logprob: -12.813271522521973
    5. 'max' → logprob: -13.688271522521973
    6. '=' → logprob: -14.563271522521973
    7. '
' → logprob: -14.813271522521973
    8. '	for' → logprob: -14.938271522521973
    9. 'For' → logprob: -15.188271522521973
    10. '       ' → logprob: -15.563271522521973

Token 1280: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4910750091075897
    2. 'points' → logprob: -0.9910750389099121
    3. ' points' → logprob: -4.366075038909912
    4. ' p' → logprob: -5.491075038909912
    5. '(points' → logprob: -10.616074562072754
    6. '(p' → logprob: -13.491074562072754
    7. '	points' → logprob: -13.491074562072754
    8. '.points' → logprob: -14.741074562072754
    9. '[p' → logprob: -14.991074562072754
    10. 'point' → logprob: -15.116074562072754

Token 1281: ' in' (ID: 306)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.6032009720802307
    2. 'points' → logprob: -1.478200912475586
    3. '(p' → logprob: -2.103200912475586
    4. 'p' → logprob: -2.728200912475586
    5. '.points' → logprob: -3.478200912475586
    6. 'for' → logprob: -6.603200912475586
    7. ' points' → logprob: -6.728200912475586
    8. ' in' → logprob: -7.103200912475586
    9. ' p' → logprob: -7.103200912475586
    10. 'in' → logprob: -7.603200912475586

Token 1282: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00015121731848921627
    2. '(points' → logprob: -9.250151634216309
    3. ' points' → logprob: -9.875151634216309
    4. '.points' → logprob: -13.750151634216309
    5. 'p' → logprob: -14.250151634216309
    6. '	points' → logprob: -14.375151634216309
    7. '[' → logprob: -14.500151634216309
    8. '
' → logprob: -15.250151634216309
    9. 'max' → logprob: -15.750151634216309
    10. 'point' → logprob: -16.000150680541992

Token 1283: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011364331468939781
    2. '       ' → logprob: -4.511364459991455
    3. ')' → logprob: -8.261363983154297
    4. 'for' → logprob: -9.886363983154297
    5. ')
' → logprob: -12.636363983154297
    6. ' for' → logprob: -13.136363983154297
    7. '),' → logprob: -14.386363983154297
    8. '   ' → logprob: -14.511363983154297
    9. ',' → logprob: -15.386363983154297
    10. '           ' → logprob: -15.761363983154297

Token 1284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06220698356628418
    2. 'max' → logprob: -2.812206983566284
    3. ' max' → logprob: -8.437207221984863
    4. '
' → logprob: -11.062207221984863
    5. '=max' → logprob: -13.062207221984863
    6. '   ' → logprob: -14.312207221984863
    7. '        ' → logprob: -14.562207221984863
    8. '(max' → logprob: -14.562207221984863
    9. '[max' → logprob: -14.687207221984863
    10. '	max' → logprob: -14.812207221984863

Token 1285: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.001523790997453034
    2. ' max' → logprob: -6.501523971557617
    3. '       ' → logprob: -10.751523971557617
    4. 'min' → logprob: -17.376523971557617
    5. '	max' → logprob: -17.751523971557617
    6. '_max' → logprob: -18.126523971557617
    7. '(max' → logprob: -18.376523971557617
    8. '=max' → logprob: -18.876523971557617
    9. '   ' → logprob: -19.126523971557617
    10. '[max' → logprob: -19.251523971557617

Token 1286: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.016116363927721977
    2. '_y' → logprob: -4.141116142272949
    3. '(p' → logprob: -9.51611614227295
    4. 'x' → logprob: -12.64111614227295
    5. '(max' → logprob: -13.64111614227295
    6. '(' → logprob: -14.39111614227295
    7. '._' → logprob: -15.01611614227295
    8. '[' → logprob: -15.14111614227295
    9. '+' → logprob: -15.14111614227295
    10. 'max' → logprob: -15.14111614227295

Token 1287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020849853754044
    2. '=' → logprob: -2.3502085208892822
    3. '=max' → logprob: -13.475208282470703
    4. '   ' → logprob: -15.975208282470703
    5. 'max' → logprob: -16.475208282470703
    6. '       ' → logprob: -16.725208282470703
    7. 'for' → logprob: -16.850208282470703
    8. ')' → logprob: -17.850208282470703
    9. ' for' → logprob: -18.350208282470703
    10. '```' → logprob: -18.600208282470703

Token 1288: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001234428636962548
    2. ' max' → logprob: -9.000123023986816
    3. '(max' → logprob: -17.375123977661133
    4. '=max' → logprob: -21.000123977661133
    5. '	max' → logprob: -21.375123977661133
    6. '[max' → logprob: -21.500123977661133
    7. 'min' → logprob: -23.250123977661133
    8. ' ' → logprob: -23.500123977661133
    9. '
' → logprob: -23.875123977661133
    10. '.max' → logprob: -23.875123977661133

Token 1289: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0005632805987261236
    2. 'p' → logprob: -7.500563144683838
    3. 'max' → logprob: -11.875563621520996
    4. '(max' → logprob: -13.125563621520996
    5. '(
' → logprob: -14.875563621520996
    6. '[p' → logprob: -15.125563621520996
    7. ' p' → logprob: -15.375563621520996
    8. '   ' → logprob: -15.500563621520996
    9. '```' → logprob: -16.50056266784668
    10. '	p' → logprob: -17.12556266784668

Token 1290: '.y' (ID: 4486)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.15416960418224335
    2. '(p' → logprob: -2.0291695594787598
    3. 'p' → logprob: -4.52916955947876
    4. '.y' → logprob: -7.52916955947876
    5. '[p' → logprob: -10.154170036315918
    6. 'y' → logprob: -10.279170036315918
    7. '<p' → logprob: -11.779170036315918
    8. 'for' → logprob: -12.404170036315918
    9. '(' → logprob: -12.404170036315918
    10. '[' → logprob: -12.904170036315918

Token 1291: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0034330463968217373
    2. ' for' → logprob: -5.8784332275390625
    3. '(p' → logprob: -7.3784332275390625
    4. ')' → logprob: -14.128433227539062
    5. 'p' → logprob: -14.253433227539062
    6. '[p' → logprob: -14.878433227539062
    7. '(points' → logprob: -15.253433227539062
    8. '...' → logprob: -15.503433227539062
    9. 'points' → logprob: -15.878433227539062
    10. '
' → logprob: -16.128433227539062

Token 1292: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001090566162019968
    2. ' p' → logprob: -7.8760905265808105
    3. '(p' → logprob: -8.001091003417969
    4. 'points' → logprob: -8.001091003417969
    5. 'for' → logprob: -10.501091003417969
    6. 'max' → logprob: -12.001091003417969
    7. ' points' → logprob: -13.376091003417969
    8. '[p' → logprob: -13.751091003417969
    9. ' for' → logprob: -14.001091003417969
    10. '(points' → logprob: -14.251091003417969

Token 1293: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11685653030872345
    2. ' for' → logprob: -2.241856575012207
    3. '.p' → logprob: -6.491856575012207
    4. '(p' → logprob: -6.866856575012207
    5. '.points' → logprob: -7.616856575012207
    6. 'max' → logprob: -8.241856575012207
    7. 'points' → logprob: -8.366856575012207
    8. 'in' → logprob: -8.616856575012207
    9. ' in' → logprob: -8.991856575012207
    10. '(points' → logprob: -10.491856575012207

Token 1294: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00242904806509614
    2. 'p' → logprob: -6.752429008483887
    3. ' points' → logprob: -7.127429008483887
    4. '(points' → logprob: -7.752429008483887
    5. '(p' → logprob: -11.377429008483887
    6. 'max' → logprob: -12.127429008483887
    7. ' p' → logprob: -13.252429008483887
    8. '[p' → logprob: -13.502429008483887
    9. '	points' → logprob: -13.752429008483887
    10. 'point' → logprob: -13.752429008483887

Token 1295: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02479034662246704
    2. ')' → logprob: -3.8997902870178223
    3. '+' → logprob: -6.774790287017822
    4. 'for' → logprob: -6.899790287017822
    5. ')
' → logprob: -7.649790287017822
    6. '
' → logprob: -7.774790287017822
    7. ' +' → logprob: -8.39979076385498
    8. ' for' → logprob: -8.89979076385498
    9. '):
' → logprob: -9.02479076385498
    10. 'return' → logprob: -9.39979076385498

Token 1296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011993973748758435
    2. 'return' → logprob: -6.751199245452881
    3. ' return' → logprob: -11.376199722290039
    4. '
' → logprob: -12.376199722290039
    5. '           ' → logprob: -12.626199722290039
    6. '   ' → logprob: -12.751199722290039
    7. '=' → logprob: -13.126199722290039
    8. '               ' → logprob: -13.626199722290039
    9. '      ' → logprob: -14.126199722290039
    10. '	' → logprob: -14.251199722290039

Token 1297: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6932740211486816
    2. 'return' (adapté à ' return') → logprob: -0.6932740211486816
    3. ' return' → logprob: -9.068273544311523
    4. '   ' → logprob: -11.568273544311523
    5. '           ' → logprob: -13.818273544311523
    6. '	return' → logprob: -15.193273544311523
    7. '
' → logprob: -15.443273544311523
    8. '      ' → logprob: -15.568273544311523
    9. '     ' → logprob: -15.943273544311523
    10. '```' → logprob: -16.318273544311523

Token 1298: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.00671584764495492
    2. ' cls' → logprob: -5.006715774536133
    3. '(cls' → logprob: -15.006715774536133
    4. 'Cls' → logprob: -16.381715774536133
    5. '.cls' → logprob: -17.006715774536133
    6. 'class' → logprob: -17.256715774536133
    7. '_cls' → logprob: -17.506715774536133
    8. 'classmethod' → logprob: -18.631715774536133
    9. 'cl' → logprob: -19.256715774536133
    10. 'Class' → logprob: -19.881715774536133

Token 1299: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -1.2471589798224159e-05
    2. 'match' → logprob: -11.375012397766113
    3. '.pattern' → logprob: -14.250012397766113
    4. '.' → logprob: -16.12501335144043
    5. '.matches' → logprob: -16.87501335144043
    6. '.try' → logprob: -17.00001335144043
    7. ' .' → logprob: -17.37501335144043
    8. '.matcher' → logprob: -17.62501335144043
    9. '	match' → logprob: -17.87501335144043
    10. '.MATCH' → logprob: -18.25001335144043

Token 1300: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.0003222342347726226
    2. 'pattern' → logprob: -8.375322341918945
    3. '_' → logprob: -9.500322341918945
    4. '_class' → logprob: -13.000322341918945
    5. '```' → logprob: -13.000322341918945
    6. '_p' → logprob: -13.250322341918945
    7. '_point' → logprob: -13.375322341918945
    8. 'Pattern' → logprob: -13.500322341918945
    9. '_points' → logprob: -13.625322341918945
    10. '
' → logprob: -14.000322341918945

Token 1301: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -4.961759259458631e-06
    2. 'points' → logprob: -12.250004768371582
    3. '(
' → logprob: -16.6250057220459
    4. ' points' → logprob: -17.5000057220459
    5. '(' → logprob: -17.7500057220459
    6. '	points' → logprob: -17.8750057220459
    7. '(parts' → logprob: -20.0000057220459
    8. '(point' → logprob: -20.1250057220459
    9. '```' → logprob: -20.6250057220459
    10. '.points' → logprob: -20.8750057220459

Token 1302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012964145571459085
    2. '(points' → logprob: -9.125129699707031
    3. 'points' → logprob: -11.000129699707031
    4. ' ,' → logprob: -13.250129699707031
    5. ' points' → logprob: -13.875129699707031
    6. '   ' → logprob: -14.625129699707031
    7. '       ' → logprob: -14.875129699707031
    8. ',p' → logprob: -15.625129699707031
    9. ',
' → logprob: -16.00012969970703
    10. '           ' → logprob: -16.62512969970703

Token 1303: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.8624639324116288e-06
    2. ' min' → logprob: -13.250001907348633
    3. 'max' → logprob: -17.250001907348633
    4. '(min' → logprob: -17.375001907348633
    5. '[min' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '
' → logprob: -19.250001907348633
    8. '	min' → logprob: -20.000001907348633
    9. '       ' → logprob: -20.375001907348633
    10. '           ' → logprob: -20.500001907348633

Token 1304: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0017307489179074764
    2. 'x' → logprob: -6.626730918884277
    3. '(p' → logprob: -7.876730918884277
    4. '[p' → logprob: -11.626730918884277
    5. '(min' → logprob: -12.001730918884277
    6. 'min' → logprob: -12.751730918884277
    7. 'p' → logprob: -13.376730918884277
    8. 'xmin' → logprob: -13.876730918884277
    9. 'X' → logprob: -14.376730918884277
    10. 'max' → logprob: -14.626730918884277

Token 1305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040767391328699887
    2. ' ,' → logprob: -8.500407218933105
    3. ',p' → logprob: -8.625407218933105
    4. ',min' → logprob: -10.875407218933105
    5. ',
' → logprob: -13.875407218933105
    6. 'for' → logprob: -14.125407218933105
    7. 'min' → logprob: -14.125407218933105
    8. '   ' → logprob: -14.250407218933105
    9. '(p' → logprob: -14.500407218933105
    10. '       ' → logprob: -15.750407218933105

Token 1306: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.1424973713001236e-05
    2. ' min' → logprob: -10.375031471252441
    3. '[min' → logprob: -16.625030517578125
    4. 'max' → logprob: -17.875030517578125
    5. '_min' → logprob: -18.375030517578125
    6. '(min' → logprob: -18.375030517578125
    7. '	min' → logprob: -19.125030517578125
    8. '=min' → logprob: -19.625030517578125
    9. '.min' → logprob: -20.625030517578125
    10. 'mini' → logprob: -20.750030517578125

Token 1307: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.2319052368402481
    2. '_y' → logprob: -1.606905221939087
    3. 'x' → logprob: -5.106905460357666
    4. 'y' → logprob: -7.856905460357666
    5. 'Y' → logprob: -11.731904983520508
    6. '[' → logprob: -12.356904983520508
    7. 'p' → logprob: -12.856904983520508
    8. 'X' → logprob: -13.231904983520508
    9. '(p' → logprob: -13.231904983520508
    10. '<|end|>' → logprob: -13.606904983520508

Token 1308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ',max' → logprob: -12.12501049041748
    3. ' ,' → logprob: -12.75001049041748
    4. ',p' → logprob: -13.25001049041748
    5. '+' → logprob: -15.12501049041748
    6. ',
' → logprob: -15.62501049041748
    7. '       ' → logprob: -16.125011444091797
    8. '   ' → logprob: -16.250011444091797
    9. 'max' → logprob: -16.875011444091797
    10. '[' → logprob: -17.500011444091797

Token 1309: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.2603901015827432e-05
    2. ' max' → logprob: -10.750022888183594
    3. 'min' → logprob: -13.750022888183594
    4. '(max' → logprob: -18.625022888183594
    5. '[max' → logprob: -19.875022888183594
    6. '	max' → logprob: -20.625022888183594
    7. '0' → logprob: -20.875022888183594
    8. '
' → logprob: -21.500022888183594
    9. ',max' → logprob: -21.500022888183594
    10. '   ' → logprob: -21.750022888183594

Token 1310: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0005413581384345889
    2. 'x' → logprob: -7.8755412101745605
    3. 'max' → logprob: -9.125541687011719
    4. 'X' → logprob: -11.000541687011719
    5. '```' → logprob: -11.125541687011719
    6. ',' → logprob: -11.500541687011719
    7. '_y' → logprob: -13.125541687011719
    8. '(max' → logprob: -13.500541687011719
    9. '   ' → logprob: -13.500541687011719
    10. '_,' → logprob: -13.625541687011719

Token 1311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010139751975657418
    2. ' ,' → logprob: -10.000101089477539
    3. ',p' → logprob: -10.125101089477539
    4. ' for' → logprob: -11.875101089477539
    5. 'for' → logprob: -12.500101089477539
    6. '       ' → logprob: -13.125101089477539
    7. ',
' → logprob: -13.250101089477539
    8. 'For' → logprob: -15.000101089477539
    9. '   ' → logprob: -15.750101089477539
    10. '[' → logprob: -16.00010108947754

Token 1312: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.31352293491363525
    2. 'max' → logprob: -1.3135229349136353
    3. ' min' → logprob: -8.563523292541504
    4. ' max' → logprob: -9.563523292541504
    5. '[min' → logprob: -17.563522338867188
    6. '_min' → logprob: -19.063522338867188
    7. 'm' → logprob: -19.438522338867188
    8. '   ' → logprob: -19.813522338867188
    9. '[max' → logprob: -19.813522338867188
    10. '(min' → logprob: -19.938522338867188

Token 1313: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.298068106174469
    2. '_x' → logprob: -1.7980680465698242
    3. 'max' → logprob: -2.423068046569824
    4. '_max' → logprob: -6.173068046569824
    5. 'y' → logprob: -7.048068046569824
    6. '(max' → logprob: -9.048068046569824
    7. 'x' → logprob: -9.423068046569824
    8. '```' → logprob: -10.048068046569824
    9. '_' → logprob: -10.423068046569824
    10. ',max' → logprob: -10.673068046569824

Token 1314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.93710636976175e-05
    2. '(points' → logprob: -9.500099182128906
    3. 'points' → logprob: -12.000099182128906
    4. '       ' → logprob: -12.250099182128906
    5. ' ,' → logprob: -12.375099182128906
    6. ')' → logprob: -12.625099182128906
    7. ' points' → logprob: -13.125099182128906
    8. ',p' → logprob: -13.750099182128906
    9. ',
' → logprob: -14.250099182128906
    10. '           ' → logprob: -14.875099182128906

Token 1315: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0009125363430939615
    2. ' cls' → logprob: -7.000912666320801
    3. '(cls' → logprob: -15.0009126663208
    4. '   ' → logprob: -15.5009126663208
    5. '       ' → logprob: -15.7509126663208
    6. 'class' → logprob: -16.000911712646484
    7. '_cls' → logprob: -16.250911712646484
    8. 'cl' → logprob: -16.375911712646484
    9. '.cls' → logprob: -16.625911712646484
    10. '           ' → logprob: -17.375911712646484

Token 1316: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -9.615255839889869e-05
    2. 'pattern' → logprob: -9.250096321105957
    3. '.class' → logprob: -17.50009536743164
    4. '.' → logprob: -18.12509536743164
    5. ' pattern' → logprob: -20.00009536743164
    6. '(pattern' → logprob: -20.25009536743164
    7. '   ' → logprob: -20.50009536743164
    8. '.p' → logprob: -20.62509536743164
    9. '```' → logprob: -21.12509536743164
    10. ' .' → logprob: -21.12509536743164

Token 1317: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1318: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001178916310891509
    2. '
' → logprob: -6.751178741455078
    3. ' class' → logprob: -12.376178741455078
    4. '

' → logprob: -14.001178741455078
    5. '#' → logprob: -14.126178741455078
    6. '"class' → logprob: -14.376178741455078
    7. '<|end|>' → logprob: -14.501178741455078
    8. '<class' → logprob: -14.626178741455078
    9. '```' → logprob: -14.626178741455078
    10. '<|end|>' → logprob: -15.751178741455078

Token 1319: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.0005118065746501088
    2. ' Digit' → logprob: -7.625511646270752
    3. 'Character' → logprob: -11.25051212310791
    4. '3' → logprob: -12.37551212310791
    5. 'Dot' → logprob: -13.62551212310791
    6. 'Digital' → logprob: -13.87551212310791
    7. 'Point' → logprob: -14.12551212310791
    8. '
' → logprob: -14.50051212310791
    9. '_digit' → logprob: -14.87551212310791
    10. 'Space' → logprob: -15.00051212310791

Token 1320: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '9' → logprob: -20.875
    4. '۳' → logprob: -21.25
    5. '３' → logprob: -21.25
    6. '_' → logprob: -22.0
    7. '4' → logprob: -22.125
    8. '
' → logprob: -22.375
    9. '```' → logprob: -22.5
    10. '7' → logprob: -22.625

Token 1321: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -1.9361264946837764e-07
    2. 'Character' → logprob: -16.125
    3. '<Character' → logprob: -17.625
    4. '(Class' → logprob: -19.125
    5. '(' → logprob: -19.875
    6. '.Character' → logprob: -20.25
    7. 'class' → logprob: -21.0
    8. '(Char' → logprob: -21.375
    9. '_character' → logprob: -21.625
    10. '(character' → logprob: -21.75

Token 1322: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9111711382865906
    2. '):
' → logprob: -1.1611711978912354
    3. '(Character' → logprob: -1.2861711978912354
    4. '   ' → logprob: -6.161170959472656
    5. '<Character' → logprob: -6.286170959472656
    6. ':
' → logprob: -6.786170959472656
    7. ')' → logprob: -7.036170959472656
    8. 'Character' → logprob: -7.161170959472656
    9. ':' → logprob: -7.161170959472656
    10. 'class' → logprob: -7.536170959472656

Token 1323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014437193050980568
    2. 'class' → logprob: -4.264437198638916
    3. '```' → logprob: -8.764436721801758
    4. 'pattern' → logprob: -9.389436721801758
    5. ' class' → logprob: -11.764436721801758
    6. 'Character' → logprob: -11.889436721801758
    7. '):
' → logprob: -12.514436721801758
    8. ':
' → logprob: -12.764436721801758
    9. ' pattern' → logprob: -12.889436721801758
    10. '``' → logprob: -12.889436721801758

Token 1324: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -4.9186317482963204e-05
    2. ' pattern' → logprob: -10.000049591064453
    3. '   ' → logprob: -12.500049591064453
    4. '.pattern' → logprob: -20.750049591064453
    5. '
' → logprob: -21.125049591064453
    6. '@' → logprob: -21.250049591064453
    7. 'pat' → logprob: -21.875049591064453
    8. 'char' → logprob: -21.875049591064453
    9. '```' → logprob: -21.875049591064453
    10. ' ' → logprob: -22.000049591064453

Token 1325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048622000962495804
    2. '=' → logprob: -3.048621892929077
    3. '   ' → logprob: -10.548622131347656
    4. '=[
' → logprob: -12.048622131347656
    5. '=[' → logprob: -13.423622131347656
    6. ':' → logprob: -14.423622131347656
    7. ' =[' → logprob: -15.798622131347656
    8. '```' → logprob: -16.048622131347656
    9. ' ' → logprob: -16.298622131347656
    10. '[' → logprob: -16.798622131347656

Token 1326: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0005631613312289119
    2. '[' → logprob: -7.500563144683838
    3. ' [
' → logprob: -11.750563621520996
    4. '   ' → logprob: -13.000563621520996
    5. ' [' → logprob: -17.62556266784668
    6. '["' → logprob: -18.62556266784668
    7. ' ' → logprob: -19.00056266784668
    8. '=[
' → logprob: -19.62556266784668
    9. '  ' → logprob: -20.87556266784668
    10. '       ' → logprob: -21.62556266784668

Token 1327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24204237759113312
    2. '   ' → logprob: -1.7420424222946167
    3. '[
' → logprob: -3.242042303085327
    4. '[' → logprob: -7.242042541503906
    5. '"' → logprob: -11.367042541503906
    6. ' [
' → logprob: -13.742042541503906
    7. '           ' → logprob: -14.367042541503906
    8. '     ' → logprob: -14.617042541503906
    9. '["' → logprob: -14.867042541503906
    10. ' ' → logprob: -15.492042541503906

Token 1328: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00016158436483237892
    2. '       ' → logprob: -9.750161170959473
    3. '[
' → logprob: -9.875161170959473
    4. '   ' → logprob: -10.125161170959473
    5. ' "' → logprob: -12.000161170959473
    6. ' ' → logprob: -13.125161170959473
    7. '"class' → logprob: -13.750161170959473
    8. '[' → logprob: -14.125161170959473
    9. '["' → logprob: -14.250161170959473
    10. '111' → logprob: -14.500161170959473

Token 1329: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.01815052703022957
    2. '"' → logprob: -4.018150329589844
    3. ''' → logprob: -15.143150329589844
    4. '"""' → logprob: -15.893150329589844
    5. '   ' → logprob: -16.143150329589844
    6. ' ' → logprob: -16.143150329589844
    7. '```' → logprob: -17.018150329589844
    8. '""' → logprob: -18.143150329589844
    9. '"""
' → logprob: -18.393150329589844
    10. '110' → logprob: -18.768150329589844

Token 1330: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.005379018373787403
    2. '",' → logprob: -5.2553791999816895
    3. '",
' → logprob: -10.005378723144531
    4. '","' → logprob: -10.255378723144531
    5. '       ' → logprob: -10.630378723144531
    6. '',
' → logprob: -10.755378723144531
    7. '   ' → logprob: -11.505378723144531
    8. '"' → logprob: -12.505378723144531
    9. ',
' → logprob: -12.630378723144531
    10. '111' → logprob: -14.130378723144531

Token 1331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5760233998298645
    2. '"' → logprob: -0.8260233998298645
    3. '           ' → logprob: -9.95102310180664
    4. '   ' → logprob: -10.45102310180664
    5. ''' → logprob: -13.57602310180664
    6. '"class' → logprob: -13.70102310180664
    7. ' ' → logprob: -13.82602310180664
    8. '     ' → logprob: -14.07602310180664
    9. '	' → logprob: -14.32602310180664
    10. ' "' → logprob: -14.57602310180664

Token 1332: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0007141007808968425
    2. '       ' → logprob: -7.250714302062988
    3. '   ' → logprob: -12.750714302062988
    4. '           ' → logprob: -15.000714302062988
    5. ' ' → logprob: -15.250714302062988
    6. '     ' → logprob: -15.375714302062988
    7. ''' → logprob: -15.500714302062988
    8. ' "' → logprob: -15.875714302062988
    9. '001' → logprob: -17.250713348388672
    10. '      ' → logprob: -17.500713348388672

Token 1333: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.029804298654198647
    2. '011' → logprob: -3.529804229736328
    3. '111' → logprob: -10.154804229736328
    4. '"' → logprob: -12.154804229736328
    5. ' ' → logprob: -12.904804229736328
    6. '010' → logprob: -13.029804229736328
    7. '110' → logprob: -13.529804229736328
    8. ''' → logprob: -13.779804229736328
    9. '101' → logprob: -13.904804229736328
    10. '``' → logprob: -14.404804229736328

Token 1334: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.016817348077893257
    2. '",' → logprob: -4.141817569732666
    3. '"' → logprob: -8.391817092895508
    4. '       ' → logprob: -8.641817092895508
    5. '   ' → logprob: -9.141817092895508
    6. '",
' → logprob: -9.266817092895508
    7. '","' → logprob: -9.766817092895508
    8. '',
' → logprob: -10.141817092895508
    9. ',
' → logprob: -10.641817092895508
    10. '[
' → logprob: -11.266817092895508

Token 1335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00594716751947999
    2. '"' → logprob: -5.130947113037109
    3. '   ' → logprob: -11.25594711303711
    4. '           ' → logprob: -12.88094711303711
    5. '     ' → logprob: -14.50594711303711
    6. ' "' → logprob: -14.50594711303711
    7. '	' → logprob: -14.63094711303711
    8. '"class' → logprob: -14.63094711303711
    9. '      ' → logprob: -14.75594711303711
    10. '               ' → logprob: -15.00594711303711

Token 1336: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.07895929366350174
    2. '       ' → logprob: -2.5789592266082764
    3. ' "' → logprob: -9.953959465026855
    4. '   ' → logprob: -11.328959465026855
    5. ' ' → logprob: -12.828959465026855
    6. '111' → logprob: -13.328959465026855
    7. '	' → logprob: -13.328959465026855
    8. '"class' → logprob: -13.453959465026855
    9. '[
' → logprob: -14.578959465026855
    10. '           ' → logprob: -14.578959465026855

Token 1337: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -5.836499985889532e-05
    2. '"' → logprob: -9.7500581741333
    3. '110' → logprob: -17.375059127807617
    4. ''' → logprob: -17.750059127807617
    5. '011' → logprob: -18.875059127807617
    6. ' ' → logprob: -19.625059127807617
    7. '```' → logprob: -19.625059127807617
    8. '``' → logprob: -20.375059127807617
    9. '"""' → logprob: -20.875059127807617
    10. '101' → logprob: -21.375059127807617

Token 1338: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.062342073768377304
    2. '",' → logprob: -2.8123421669006348
    3. '',
' → logprob: -8.937341690063477
    4. '",
' → logprob: -8.937341690063477
    5. '"' → logprob: -9.312341690063477
    6. '","' → logprob: -11.687341690063477
    7. '',' → logprob: -12.437341690063477
    8. '       ' → logprob: -12.812341690063477
    9. '   ' → logprob: -13.437341690063477
    10. '",

' → logprob: -14.187341690063477

Token 1339: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5760044455528259
    2. '       ' → logprob: -0.8260044455528259
    3. '   ' → logprob: -10.576004028320312
    4. ' "' → logprob: -11.451004028320312
    5. ''' → logprob: -11.701004028320312
    6. '           ' → logprob: -12.076004028320312
    7. '"class' → logprob: -12.451004028320312
    8. ' ' → logprob: -12.951004028320312
    9. '"user' → logprob: -13.451004028320312
    10. '[
' → logprob: -13.576004028320312

Token 1340: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.002481842413544655
    2. '       ' → logprob: -6.002481937408447
    3. '   ' → logprob: -12.502481460571289
    4. '           ' → logprob: -13.627481460571289
    5. ' "' → logprob: -14.752481460571289
    6. ''' → logprob: -15.252481460571289
    7. ' ' → logprob: -15.877481460571289
    8. '	' → logprob: -15.877481460571289
    9. '100' → logprob: -15.877481460571289
    10. '               ' → logprob: -16.00248146057129

Token 1341: '001' (ID: 7659)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.08393700420856476
    2. '001' → logprob: -2.583936929702759
    3. '"' → logprob: -5.333937168121338
    4. '111' → logprob: -9.58393669128418
    5. ''' → logprob: -10.08393669128418
    6. '110' → logprob: -10.33393669128418
    7. '011' → logprob: -10.83393669128418
    8. '101' → logprob: -11.08393669128418
    9. '010' → logprob: -11.08393669128418
    10. ' ' → logprob: -12.08393669128418

Token 1342: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.2308093160390854
    2. '",' → logprob: -1.6058093309402466
    3. '   ' → logprob: -6.355809211730957
    4. '"' → logprob: -6.855809211730957
    5. '',
' → logprob: -6.980809211730957
    6. '",
' → logprob: -8.105809211730957
    7. ',' → logprob: -8.105809211730957
    8. '       ' → logprob: -8.230809211730957
    9. '","' → logprob: -8.605809211730957
    10. ',
' → logprob: -8.605809211730957

Token 1343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14341461658477783
    2. '"' → logprob: -2.0184144973754883
    3. ' "' → logprob: -7.768414497375488
    4. '"class' → logprob: -8.768414497375488
    5. '   ' → logprob: -9.643414497375488
    6. ''' → logprob: -10.393414497375488
    7. '[' → logprob: -10.518414497375488
    8. '[
' → logprob: -11.018414497375488
    9. '           ' → logprob: -12.393414497375488
    10. '      ' → logprob: -12.643414497375488

Token 1344: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0022033092100173235
    2. '       ' → logprob: -6.127203464508057
    3. ' "' → logprob: -11.877202987670898
    4. '111' → logprob: -12.502202987670898
    5. ''' → logprob: -13.002202987670898
    6. '"class' → logprob: -13.002202987670898
    7. '   ' → logprob: -13.127202987670898
    8. '```' → logprob: -15.002202987670898
    9. ' ' → logprob: -15.252202987670898
    10. '           ' → logprob: -15.752202987670898

Token 1345: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.0003357006062287837
    2. '"' → logprob: -8.000335693359375
    3. ''' → logprob: -15.625335693359375
    4. '```' → logprob: -17.125335693359375
    5. '"""' → logprob: -17.625335693359375
    6. '110' → logprob: -17.625335693359375
    7. ' ' → logprob: -17.750335693359375
    8. '   ' → logprob: -19.125335693359375
    9. '011' → logprob: -19.625335693359375
    10. '``' → logprob: -19.750335693359375

Token 1346: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47745198011398315
    2. '"' → logprob: -0.9774519801139832
    3. '"
' → logprob: -5.852451801300049
    4. ']' → logprob: -7.977451801300049
    5. ']"' → logprob: -9.727452278137207
    6. '"]' → logprob: -9.977452278137207
    7. ''' → logprob: -10.852452278137207
    8. '       ' → logprob: -11.477452278137207
    9. '```' → logprob: -11.852452278137207
    10. '"class' → logprob: -13.227452278137207

Token 1347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005275737959891558
    2. ']' → logprob: -5.255275726318359
    3. '"' → logprob: -11.38027572631836
    4. '       ' → logprob: -11.75527572631836
    5. '<|end|>' → logprob: -12.50527572631836
    6. ',' → logprob: -12.75527572631836
    7. ' ]' → logprob: -12.75527572631836
    8. 'class' → logprob: -12.88027572631836
    9. '"]' → logprob: -13.50527572631836
    10. '  ' → logprob: -13.50527572631836

Token 1348: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003862245939671993
    2. 'class' → logprob: -8.500386238098145
    3. '
' → logprob: -8.750386238098145
    4. ' ' → logprob: -11.750386238098145
    5. '  ' → logprob: -12.500386238098145
    6. ']' → logprob: -12.875386238098145
    7. ' class' → logprob: -13.125386238098145
    8. '```' → logprob: -13.250386238098145
    9. ':' → logprob: -13.750386238098145
    10. '    
' → logprob: -13.875386238098145

Token 1349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00580994039773941
    2. 'class' → logprob: -5.255809783935547
    3. '
' → logprob: -8.130809783935547
    4. ':' → logprob: -9.005809783935547
    5. ' class' → logprob: -9.130809783935547
    6. ':
' → logprob: -10.880809783935547
    7. '```' → logprob: -11.505809783935547
    8. ' ' → logprob: -12.130809783935547
    9. '       ' → logprob: -12.630809783935547
    10. '  ' → logprob: -12.630809783935547

Token 1350: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.01457524485886097
    2. '   ' → logprob: -4.514575481414795
    3. 'class' → logprob: -5.764575481414795
    4. '
' → logprob: -8.764575004577637
    5. ' char' → logprob: -9.014575004577637
    6. 'pattern' → logprob: -9.639575004577637
    7. '_char' → logprob: -10.514575004577637
    8. '.char' → logprob: -12.889575004577637
    9. '{
' → logprob: -13.139575004577637
    10. '	char' → logprob: -13.264575004577637

Token 1351: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -2.339278580620885e-06
    2. 'repr' → logprob: -13.000001907348633
    3. 'class' → logprob: -17.250001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '
' → logprob: -19.375001907348633
    6. '_rep' → logprob: -19.750001907348633
    7. 'classmethod' → logprob: -19.750001907348633
    8. '@' → logprob: -20.500001907348633
    9. 'char' → logprob: -20.500001907348633
    10. '  ' → logprob: -21.750001907348633

Token 1352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132770359516144
    2. ' =' → logprob: -1.313277006149292
    3. '='' → logprob: -11.313277244567871
    4. ' ='' → logprob: -13.063277244567871
    5. '=
' → logprob: -15.313277244567871
    6. ' ' → logprob: -15.563277244567871
    7. '   ' → logprob: -15.813277244567871
    8. ':' → logprob: -16.063276290893555
    9. ' =
' → logprob: -16.438276290893555
    10. '<|end|>' → logprob: -16.438276290893555

Token 1353: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.822646693966817e-06
    2. ' '' → logprob: -12.125007629394531
    3. '"' → logprob: -13.125007629394531
    4. '3' → logprob: -15.375007629394531
    5. '`' → logprob: -18.50000762939453
    6. '‘' → logprob: -19.50000762939453
    7. '('' → logprob: -19.50000762939453
    8. ''.' → logprob: -20.37500762939453
    9. ''''' → logprob: -20.50000762939453
    10. '’' → logprob: -20.75000762939453

Token 1354: '3' (ID: 18)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.176947600673884e-05
    2. '3' → logprob: -10.750021934509277
    3. ' '' → logprob: -15.625021934509277
    4. '"' → logprob: -15.750021934509277
    5. '`' → logprob: -18.00002098083496
    6. '‘' → logprob: -19.00002098083496
    7. '’' → logprob: -20.25002098083496
    8. ''
' → logprob: -20.25002098083496
    9. ''.' → logprob: -20.25002098083496
    10. ''''' → logprob: -20.37502098083496

Token 1355: ''

' (ID: 7497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006963535211980343
    2. '
' → logprob: -5.506963729858398
    3. 'class' → logprob: -5.881963729858398
    4. ' class' → logprob: -10.131963729858398
    5. ':
' → logprob: -10.381963729858398
    6. ':' → logprob: -12.506963729858398
    7. ''
' → logprob: -12.881963729858398
    8. ''' → logprob: -13.131963729858398
    9. '
' → logprob: -13.506963729858398
    10. '  ' → logprob: -13.506963729858398

Token 1356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4084710478782654
    2. '
' → logprob: -1.1584711074829102
    3. '@' → logprob: -3.90847110748291
    4. 'class' → logprob: -6.90847110748291
    5. '```' → logprob: -8.28347110748291
    6. '    
' → logprob: -10.90847110748291
    7. '
' → logprob: -11.65847110748291
    8. ' @' → logprob: -11.90847110748291
    9. '

' → logprob: -12.53347110748291
    10. 'classmethod' → logprob: -12.90847110748291

Token 1357: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -4.1080467781284824e-05
    2. 'class' → logprob: -10.875041007995605
    3. '   ' → logprob: -11.000041007995605
    4. '@class' → logprob: -12.375041007995605
    5. 'classmethod' → logprob: -14.125041007995605
    6. '
' → logprob: -15.875041007995605
    7. ' @' → logprob: -16.125041961669922
    8. '@property' → logprob: -16.500041961669922
    9. '@dat' → logprob: -17.250041961669922
    10. '@click' → logprob: -17.875041961669922

Token 1358: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -5.512236498361744e-07
    2. '@' → logprob: -15.000000953674316
    3. 'staticmethod' → logprob: -16.5
    4. 'class' → logprob: -17.5
    5. '@class' → logprob: -22.125
    6. 'aclass' → logprob: -24.25
    7. 'property' → logprob: -24.375
    8. '@dat' → logprob: -24.875
    9. '<class' → logprob: -25.25
    10. '@property' → logprob: -25.25

Token 1359: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4327899217605591
    2. '   ' → logprob: -1.057789921760559
    3. ' def' → logprob: -5.5577898025512695
    4. '
' → logprob: -8.80778980255127
    5. '@' → logprob: -10.30778980255127
    6. '  ' → logprob: -10.80778980255127
    7. '	def' → logprob: -11.55778980255127
    8. ' ' → logprob: -12.18278980255127
    9. '       ' → logprob: -14.18278980255127
    10. '    ' → logprob: -14.30778980255127

Token 1360: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002992678200826049
    2. '   ' → logprob: -6.627992630004883
    3. '
' → logprob: -6.752992630004883
    4. ' def' → logprob: -7.627992630004883
    5. '```' → logprob: -12.252992630004883
    6. '	def' → logprob: -12.627992630004883
    7. ':def' → logprob: -14.002992630004883
    8. '    
' → logprob: -14.127992630004883
    9. '
' → logprob: -14.877992630004883
    10. '_def' → logprob: -15.002992630004883

Token 1361: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -15.125
    3. 'try' → logprob: -15.875
    4. 'async' → logprob: -17.25
    5. '
' → logprob: -18.875
    6. '   ' → logprob: -19.875
    7. '```' → logprob: -20.125
    8. '	def' → logprob: -21.375
    9. '@' → logprob: -22.5
    10. 'classmethod' → logprob: -22.625

Token 1362: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -4.320199877838604e-07
    2. ' try' → logprob: -14.75
    3. 'def' → logprob: -19.0
    4. '.try' → logprob: -22.25
    5. '_try' → logprob: -22.75
    6. '	try' → logprob: -25.0
    7. '   ' → logprob: -25.375
    8. ' ' → logprob: -25.5
    9. 'Try' → logprob: -25.5
    10. '  ' → logprob: -25.5

Token 1363: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -3.583550642360933e-05
    2. 'match' → logprob: -10.250036239624023
    3. 'Match' → logprob: -15.750036239624023
    4. 'def' → logprob: -16.500036239624023
    5. '_' → logprob: -17.000036239624023
    6. '_MATCH' → logprob: -17.000036239624023
    7. '_matching' → logprob: -17.625036239624023
    8. ' match' → logprob: -17.875036239624023
    9. '_continue' → logprob: -18.125036239624023
    10. '```' → logprob: -18.375036239624023

Token 1364: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -8.697387966094539e-05
    2. 'cls' → logprob: -9.375086784362793
    3. 'classmethod' → logprob: -14.000086784362793
    4. '   ' → logprob: -14.625086784362793
    5. ' cls' → logprob: -14.875086784362793
    6. '<class' → logprob: -16.12508773803711
    7. '.cls' → logprob: -16.25008773803711
    8. 'class' → logprob: -16.50008773803711
    9. ' (' → logprob: -17.25008773803711
    10. 'def' → logprob: -17.37508773803711

Token 1365: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0003131784324068576
    2. ',' → logprob: -8.875312805175781
    3. '(' → logprob: -9.000312805175781
    4. '   ' → logprob: -11.250312805175781
    5. 'cls' → logprob: -11.250312805175781
    6. 'classmethod' → logprob: -12.125312805175781
    7. '(points' → logprob: -12.625312805175781
    8. ')' → logprob: -12.625312805175781
    9. '       ' → logprob: -13.250312805175781
    10. '(
' → logprob: -13.625312805175781

Token 1366: ' points' (ID: 5571)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0005550591740757227
    2. 'points' → logprob: -7.500555038452148
    3. 'class' → logprob: -14.500555038452148
    4. 'cs' → logprob: -14.750555038452148
    5. '(cls' → logprob: -14.750555038452148
    6. ' cls' → logprob: -15.250555038452148
    7. 'classmethod' → logprob: -15.875555038452148
    8. 'cl' → logprob: -16.12555503845215
    9. 'pts' → logprob: -16.75055503845215
    10. '   ' → logprob: -17.12555503845215

Token 1367: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6258718371391296
    2. ':' → logprob: -1.2508718967437744
    3. '       ' → logprob: -2.7508718967437744
    4. '   ' → logprob: -3.5008718967437744
    5. '(cls' → logprob: -3.5008718967437744
    6. '):' → logprob: -4.125871658325195
    7. '(points' → logprob: -4.500871658325195
    8. 'Set' → logprob: -5.125871658325195
    9. ',' → logprob: -5.750871658325195
    10. '           ' → logprob: -5.875871658325195

Token 1368: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0005126410396769643
    2. 'bool' → logprob: -8.500513076782227
    3. 'set' → logprob: -9.375513076782227
    4. ' Set' → logprob: -9.500513076782227
    5. '[' → logprob: -9.875513076782227
    6. 'True' → logprob: -10.000513076782227
    7. 'cls' → logprob: -11.000513076782227
    8. '_set' → logprob: -11.250513076782227
    9. 'return' → logprob: -11.875513076782227
    10. 'False' → logprob: -12.375513076782227

Token 1369: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3108936548233032
    2. '(Point' → logprob: -1.4358936548233032
    3. '(cls' → logprob: -3.8108935356140137
    4. '(p' → logprob: -5.810893535614014
    5. '<Point' → logprob: -6.310893535614014
    6. '(points' → logprob: -6.810893535614014
    7. '(' → logprob: -7.185893535614014
    8. 'cls' → logprob: -8.935894012451172
    9. '[p' → logprob: -9.685894012451172
    10. 'def' → logprob: -9.810894012451172

Token 1370: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. ' Point' → logprob: -18.0
    3. '(Point' → logprob: -19.375
    4. '<Point' → logprob: -19.5
    5. '	Point' → logprob: -20.125
    6. '   ' → logprob: -21.0
    7. ''' → logprob: -21.375
    8. '.Point' → logprob: -21.75
    9. 'cls' → logprob: -21.75
    10. '_Point' → logprob: -22.25

Token 1371: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. '):' → logprob: -14.250001907348633
    3. '):
' → logprob: -14.500001907348633
    4. '   ' → logprob: -14.750001907348633
    5. '')' → logprob: -16.500001907348633
    6. '       ' → logprob: -16.625001907348633
    7. ' )' → logprob: -16.875001907348633
    8. ')
' → logprob: -18.375001907348633
    9. '))' → logprob: -18.500001907348633
    10. '])' → logprob: -19.000001907348633

Token 1372: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5651652216911316
    2. '->' → logprob: -1.8151652812957764
    3. ' ->' → logprob: -1.9401652812957764
    4. '(cls' → logprob: -2.6901652812957764
    5. '   ' → logprob: -3.5651652812957764
    6. ')' → logprob: -4.565165042877197
    7. '       ' → logprob: -4.940165042877197
    8. '(' → logprob: -5.065165042877197
    9. ':return' → logprob: -6.565165042877197
    10. '>' → logprob: -6.690165042877197

Token 1373: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -1.0280383548888494e-06
    2. ' bool' → logprob: -14.125000953674316
    3. 'return' → logprob: -15.625000953674316
    4. 'def' → logprob: -17.125001907348633
    5. '<bool' → logprob: -18.250001907348633
    6. 'True' → logprob: -18.875001907348633
    7. 'classmethod' → logprob: -18.875001907348633
    8. 'class' → logprob: -19.125001907348633
    9. '	bool' → logprob: -19.750001907348633
    10. '(bool' → logprob: -20.250001907348633

Token 1374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08943469822406769
    2. '       ' → logprob: -3.3394346237182617
    3. '   ' → logprob: -3.9644346237182617
    4. 'def' → logprob: -4.339434623718262
    5. ':
' → logprob: -4.589434623718262
    6. ':return' → logprob: -5.714434623718262
    7. '(cls' → logprob: -6.714434623718262
    8. ')' → logprob: -6.839434623718262
    9. '(' → logprob: -7.339434623718262
    10. ':def' → logprob: -7.964434623718262

Token 1375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.75
    3. ' if' → logprob: -17.375
    4. '           ' → logprob: -17.625
    5. '      ' → logprob: -18.25
    6. 'if' → logprob: -18.75
    7. '
' → logprob: -18.875
    8. '     ' → logprob: -19.0
    9. '@' → logprob: -19.5
    10. '               ' → logprob: -19.875

Token 1376: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038384903222322464
    2. 'if' (adapté à ' if') → logprob: -3.2883849143981934
    3. ' if' → logprob: -8.163384437561035
    4. '   ' → logprob: -10.413384437561035
    5. '
' → logprob: -11.163384437561035
    6. 'cls' → logprob: -12.038384437561035
    7. '     ' → logprob: -13.038384437561035
    8. '           ' → logprob: -13.788384437561035
    9. '      ' → logprob: -13.788384437561035
    10. '    ' → logprob: -13.788384437561035

Token 1377: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2519315779209137
    2. ' not' → logprob: -1.5019315481185913
    3. '   ' → logprob: -13.876931190490723
    4. '
' → logprob: -14.251931190490723
    5. '       ' → logprob: -14.376931190490723
    6. '(not' → logprob: -16.62693214416504
    7. 'points' → logprob: -16.87693214416504
    8. '    ' → logprob: -17.12693214416504
    9. ' ' → logprob: -17.37693214416504
    10. 'n' → logprob: -17.50193214416504

Token 1378: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00045033416245132685
    2. ' points' → logprob: -8.250450134277344
    3. '(points' → logprob: -8.625450134277344
    4. 'not' → logprob: -12.000450134277344
    5. 'cls' → logprob: -13.250450134277344
    6. 'bool' → logprob: -14.125450134277344
    7. 'point' → logprob: -15.375450134277344
    8. '
' → logprob: -16.000450134277344
    9. 'p' → logprob: -16.000450134277344
    10. '	points' → logprob: -16.125450134277344

Token 1379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11027666926383972
    2. ':
' → logprob: -2.360276699066162
    3. '           ' → logprob: -4.610276699066162
    4. ':return' → logprob: -10.735276222229004
    5. ':
' → logprob: -11.610276222229004
    6. '       ' → logprob: -11.860276222229004
    7. '         ' → logprob: -12.110276222229004
    8. '[' → logprob: -12.235276222229004
    9. '          ' → logprob: -12.360276222229004
    10. '[
' → logprob: -12.985276222229004

Token 1380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00950791034847498
    2. '       ' → logprob: -4.88450813293457
    3. 'return' → logprob: -6.38450813293457
    4. 'False' → logprob: -9.38450813293457
    5. ' return' → logprob: -9.63450813293457
    6. '          ' → logprob: -10.88450813293457
    7. '         ' → logprob: -11.00950813293457
    8. '        ' → logprob: -11.88450813293457
    9. '               ' → logprob: -12.00950813293457
    10. '   ' → logprob: -12.63450813293457

Token 1381: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3603183329105377
    2. 'False' → logprob: -1.3603183031082153
    3. ' return' → logprob: -3.110318422317505
    4. ' False' → logprob: -6.985318183898926
    5. '           ' → logprob: -8.735318183898926
    6. '       ' → logprob: -8.735318183898926
    7. 'True' → logprob: -8.985318183898926
    8. 'Return' → logprob: -12.860318183898926
    9. '0' → logprob: -13.235318183898926
    10. '               ' → logprob: -13.985318183898926

Token 1382: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005544631858356297
    2. ' False' → logprob: -7.50055456161499
    3. 'True' → logprob: -13.500554084777832
    4. '(False' → logprob: -18.37555503845215
    5. '_false' → logprob: -20.75055503845215
    6. '=False' → logprob: -21.25055503845215
    7. ' True' → logprob: -21.37555503845215
    8. 'false' → logprob: -23.00055503845215
    9. 'F' → logprob: -23.12555503845215
    10. '   ' → logprob: -23.25055503845215

Token 1383: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.612634362885728e-05
    2. ':
' → logprob: -10.625076293945312
    3. ',' → logprob: -11.375076293945312
    4. '
' → logprob: -11.500076293945312
    5. '   ' → logprob: -12.125076293945312
    6. '	' → logprob: -12.125076293945312
    7. '        
' → logprob: -12.625076293945312
    8. '           ' → logprob: -12.750076293945312
    9. ',
' → logprob: -12.875076293945312
    10. ':' → logprob: -13.375076293945312

Token 1384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9862216504407115e-05
    2. '
' → logprob: -10.875020027160645
    3. '           ' → logprob: -15.500020027160645
    4. '	' → logprob: -15.750020027160645
    5. '   ' → logprob: -16.125019073486328
    6. ',' → logprob: -16.500019073486328
    7. '        
' → logprob: -16.500019073486328
    8. '```' → logprob: -17.250019073486328
    9. '               ' → logprob: -17.375019073486328
    10. '	   ' → logprob: -17.500019073486328

Token 1385: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.47828102111816406
    2. '       ' → logprob: -0.9782810211181641
    3. ' min' → logprob: -5.478281021118164
    4. '
' → logprob: -11.728281021118164
    5. '   ' → logprob: -12.228281021118164
    6. '	min' → logprob: -12.728281021118164
    7. '           ' → logprob: -13.603281021118164
    8. '(min' → logprob: -14.603281021118164
    9. 'max' → logprob: -14.978281021118164
    10. '[min' → logprob: -15.728281021118164

Token 1386: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -9.610702363715973e-06
    2. '_' → logprob: -12.250009536743164
    3. 'x' → logprob: -12.375009536743164
    4. '_p' → logprob: -15.500009536743164
    5. '_tokens' → logprob: -15.500009536743164
    6. '<|end|>' → logprob: -17.250009536743164
    7. '_token' → logprob: -17.375009536743164
    8. '_=' → logprob: -18.000009536743164
    9. '   ' → logprob: -18.000009536743164
    10. '_xlim' → logprob: -18.125009536743164

Token 1387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889111340045929
    2. '=' → logprob: -2.5788910388946533
    3. '   ' → logprob: -14.078890800476074
    4. '=
' → logprob: -15.203890800476074
    5. ' =
' → logprob: -16.70389175415039
    6. '=min' → logprob: -16.82889175415039
    7. '=

' → logprob: -17.20389175415039
    8. ' ' → logprob: -17.32889175415039
    9. '=p' → logprob: -17.45389175415039
    10. '```' → logprob: -17.70389175415039

Token 1388: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.547789674485102e-05
    2. ' min' → logprob: -10.250035285949707
    3. '(min' → logprob: -19.000036239624023
    4. 'max' → logprob: -19.375036239624023
    5. 'mini' → logprob: -20.625036239624023
    6. '[min' → logprob: -20.625036239624023
    7. 'minimum' → logprob: -21.625036239624023
    8. '=min' → logprob: -22.500036239624023
    9. '	min' → logprob: -22.625036239624023
    10. '_min' → logprob: -23.625036239624023

Token 1389: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.625004768371582
    3. 'p' → logprob: -14.000004768371582
    4. ' (' → logprob: -15.250004768371582
    5. '<|end|>' → logprob: -16.750003814697266
    6. 'token' → logprob: -17.250003814697266
    7. '(
' → logprob: -17.875003814697266
    8. '(token' → logprob: -19.000003814697266
    9. ' p' → logprob: -19.125003814697266
    10. '```' → logprob: -19.250003814697266

Token 1390: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0626305416226387
    2. '.p' → logprob: -3.1876306533813477
    3. '.' → logprob: -4.062630653381348
    4. '(p' → logprob: -6.562630653381348
    5. '(x' → logprob: -7.687630653381348
    6. 'for' → logprob: -9.312630653381348
    7. ' .' → logprob: -9.437630653381348
    8. '(' → logprob: -10.312630653381348
    9. ')' → logprob: -10.437630653381348
    10. 'x' → logprob: -10.437630653381348

Token 1391: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3133828341960907
    2. ' for' → logprob: -1.313382863998413
    3. '(p' → logprob: -9.063383102416992
    4. ')' → logprob: -13.438383102416992
    5. '(for' → logprob: -13.938383102416992
    6. '```' → logprob: -14.563383102416992
    7. '   ' → logprob: -15.063383102416992
    8. '       ' → logprob: -15.188383102416992
    9. 'For' → logprob: -15.313383102416992
    10. '	for' → logprob: -15.313383102416992

Token 1392: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.64708495605737e-05
    2. ' p' → logprob: -9.625066757202148
    3. '(p' → logprob: -14.875066757202148
    4. '
' → logprob: -18.12506675720215
    5. '[p' → logprob: -18.25006675720215
    6. '	p' → logprob: -18.50006675720215
    7. '<p' → logprob: -19.12506675720215
    8. '   ' → logprob: -19.37506675720215
    9. '.p' → logprob: -19.87506675720215
    10. ')p' → logprob: -19.87506675720215

Token 1393: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08597633987665176
    2. ' p' → logprob: -2.5859763622283936
    3. ' in' → logprob: -4.9609761238098145
    4. 'in' → logprob: -9.835976600646973
    5. ' ' → logprob: -14.585976600646973
    6. 'x' → logprob: -14.585976600646973
    7. '.p' → logprob: -14.960976600646973
    8. '(p' → logprob: -14.960976600646973
    9. '<p' → logprob: -16.335975646972656
    10. '	p' → logprob: -16.585975646972656

Token 1394: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00029756641015410423
    2. ' points' → logprob: -8.625297546386719
    3. 'p' → logprob: -9.125297546386719
    4. '(points' → logprob: -11.750297546386719
    5. '.points' → logprob: -14.875297546386719
    6. 'point' → logprob: -15.125297546386719
    7. '	points' → logprob: -15.875297546386719
    8. '
' → logprob: -16.37529754638672
    9. ' p' → logprob: -16.50029754638672
    10. '[p' → logprob: -16.50029754638672

Token 1395: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4762815833091736
    2. ' for' → logprob: -0.9762815833091736
    3. '       ' → logprob: -6.226281642913818
    4. '           ' → logprob: -9.35128116607666
    5. ' in' → logprob: -9.60128116607666
    6. ')' → logprob: -10.35128116607666
    7. 'in' → logprob: -11.10128116607666
    8. '               ' → logprob: -12.10128116607666
    9. '        ' → logprob: -12.22628116607666
    10. ',' → logprob: -12.47628116607666

Token 1396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007758526597172022
    2. 'for' → logprob: -4.882758617401123
    3. ' for' → logprob: -9.007758140563965
    4. 'in' → logprob: -11.257758140563965
    5. '           ' → logprob: -11.882758140563965
    6. '               ' → logprob: -13.132758140563965
    7. ' in' → logprob: -13.132758140563965
    8. 'min' → logprob: -13.257758140563965
    9. '        ' → logprob: -13.507758140563965
    10. ',' → logprob: -14.632758140563965

Token 1397: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -3.054500666621607e-06
    2. ' min' → logprob: -12.75000286102295
    3. 'max' → logprob: -16.000003814697266
    4. '       ' → logprob: -17.875003814697266
    5. '(min' → logprob: -19.250003814697266
    6. '[min' → logprob: -19.250003814697266
    7. '_min' → logprob: -19.875003814697266
    8. '.min' → logprob: -19.875003814697266
    9. '	min' → logprob: -20.000003814697266
    10. 'm' → logprob: -21.750003814697266

Token 1398: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0006526283104903996
    2. '(p' → logprob: -7.37565279006958
    3. 'x' → logprob: -11.000652313232422
    4. '_y' → logprob: -12.375652313232422
    5. '```' → logprob: -13.875652313232422
    6. '   ' → logprob: -14.125652313232422
    7. '<p' → logprob: -14.250652313232422
    8. 'p' → logprob: -14.500652313232422
    9. '_p' → logprob: -14.625652313232422
    10. 'import' → logprob: -14.875652313232422

Token 1399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04880242049694061
    2. '=' → logprob: -3.048802375793457
    3. ' for' → logprob: -9.048802375793457
    4. ' in' → logprob: -9.548802375793457
    5. 'for' → logprob: -10.673802375793457
    6. '       ' → logprob: -14.423802375793457
    7. '=p' → logprob: -14.798802375793457
    8. 'in' → logprob: -14.923802375793457
    9. '(p' → logprob: -15.048802375793457
    10. '   ' → logprob: -15.423802375793457

Token 1400: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00023095356300473213
    2. ' min' → logprob: -8.37523078918457
    3. 'max' → logprob: -15.12523078918457
    4. '(min' → logprob: -16.12523078918457
    5. '[min' → logprob: -17.87523078918457
    6. 'p' → logprob: -18.50023078918457
    7. 'mini' → logprob: -18.75023078918457
    8. '	min' → logprob: -18.75023078918457
    9. 'minimum' → logprob: -19.00023078918457
    10. 'm' → logprob: -19.37523078918457

Token 1401: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.688212614681106e-05
    2. 'p' → logprob: -11.000017166137695
    3. 'for' → logprob: -17.375017166137695
    4. '(' → logprob: -17.625017166137695
    5. ' p' → logprob: -17.875017166137695
    6. '(
' → logprob: -18.125017166137695
    7. '[p' → logprob: -18.500017166137695
    8. '   ' → logprob: -18.500017166137695
    9. '```' → logprob: -18.625017166137695
    10. ' (' → logprob: -18.750017166137695

Token 1402: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.014177612029016018
    2. 'p' → logprob: -4.2641777992248535
    3. 'y' → logprob: -12.264177322387695
    4. 'for' → logprob: -12.639177322387695
    5. '.p' → logprob: -12.639177322387695
    6. ' p' → logprob: -14.139177322387695
    7. '[p' → logprob: -14.264177322387695
    8. 'x' → logprob: -15.889177322387695
    9. '```' → logprob: -15.889177322387695
    10. '<p' → logprob: -16.014177322387695

Token 1403: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04860043153166771
    2. ' for' → logprob: -3.048600435256958
    3. '(p' → logprob: -11.298600196838379
    4. '	for' → logprob: -15.423600196838379
    5. '(for' → logprob: -16.173601150512695
    6. ')' → logprob: -16.673601150512695
    7. 'in' → logprob: -16.923601150512695
    8. '   ' → logprob: -17.298601150512695
    9. '.for' → logprob: -17.298601150512695
    10. '
' → logprob: -17.298601150512695

Token 1404: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0003926615754608065
    2. '(p' → logprob: -7.875392436981201
    3. ' p' → logprob: -11.50039291381836
    4. '[p' → logprob: -14.25039291381836
    5. 'for' → logprob: -14.50039291381836
    6. 'points' → logprob: -14.62539291381836
    7. '
' → logprob: -14.75039291381836
    8. '<p' → logprob: -16.12539291381836
    9. 'point' → logprob: -16.12539291381836
    10. '	p' → logprob: -16.87539291381836

Token 1405: ' in' (ID: 306)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.6722848415374756
    2. ' in' → logprob: -1.7972848415374756
    3. 'for' → logprob: -1.7972848415374756
    4. 'in' → logprob: -2.9222848415374756
    5. ' for' → logprob: -2.9222848415374756
    6. '.x' → logprob: -4.172285079956055
    7. 'points' → logprob: -4.297285079956055
    8. '.points' → logprob: -4.422285079956055
    9. 'oints' → logprob: -5.922285079956055
    10. '.p' → logprob: -5.922285079956055

Token 1406: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.002849102020263672
    2. 'p' → logprob: -5.877849102020264
    3. '(points' → logprob: -10.502849578857422
    4. ' points' → logprob: -11.252849578857422
    5. 'for' → logprob: -13.877849578857422
    6. '
' → logprob: -14.002849578857422
    7. '(p' → logprob: -14.127849578857422
    8. '	points' → logprob: -15.252849578857422
    9. '[p' → logprob: -15.502849578857422
    10. '.points' → logprob: -15.627849578857422

Token 1407: ')
' (ID: 446)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06209607422351837
    2. 'for' → logprob: -2.812096118927002
    3. '       ' → logprob: -9.187095642089844
    4. ')' → logprob: -10.937095642089844
    5. ')
' → logprob: -12.312095642089844
    6. '
' → logprob: -13.187095642089844
    7. '	for' → logprob: -14.312095642089844
    8. '   ' → logprob: -14.562095642089844
    9. ' in' → logprob: -14.937095642089844
    10. '           ' → logprob: -15.562095642089844

Token 1408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.491498531133402e-06
    2. '```' → logprob: -12.125009536743164
    3. 'max' → logprob: -12.625009536743164
    4. 'min' → logprob: -15.875009536743164
    5. '               ' → logprob: -15.875009536743164
    6. '           ' → logprob: -16.125009536743164
    7. '
' → logprob: -16.375009536743164
    8. '``' → logprob: -16.625009536743164
    9. '                       ' → logprob: -17.125009536743164
    10. ' max' → logprob: -17.500009536743164

Token 1409: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -8.537868779967539e-06
    2. '       ' → logprob: -12.000008583068848
    3. ' max' → logprob: -13.000008583068848
    4. '	max' → logprob: -19.37500762939453
    5. '(max' → logprob: -19.75000762939453
    6. '
' → logprob: -19.87500762939453
    7. '```' → logprob: -20.50000762939453
    8. '[max' → logprob: -20.75000762939453
    9. '_max' → logprob: -21.12500762939453
    10. '.max' → logprob: -21.75000762939453

Token 1410: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.006793289911001921
    2. '(p' → logprob: -5.00679349899292
    3. '_p' → logprob: -10.506793022155762
    4. 'x' → logprob: -10.631793022155762
    5. '(x' → logprob: -11.256793022155762
    6. '_' → logprob: -12.006793022155762
    7. '(max' → logprob: -12.881793022155762
    8. '(' → logprob: -13.256793022155762
    9. '(_' → logprob: -14.631793022155762
    10. '```' → logprob: -15.006793022155762

Token 1411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. '=
' → logprob: -17.688261032104492
    4. '   ' → logprob: -17.938261032104492
    5. ')' → logprob: -18.438261032104492
    6. ' ' → logprob: -18.563261032104492
    7. ' =
' → logprob: -18.813261032104492
    8. '       ' → logprob: -19.188261032104492
    9. '=max' → logprob: -19.563261032104492
    10. '=

' → logprob: -19.688261032104492

Token 1412: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.615255839889869e-05
    2. ' max' → logprob: -9.250096321105957
    3. '(max' → logprob: -20.25009536743164
    4. '	max' → logprob: -22.37509536743164
    5. '[max' → logprob: -22.37509536743164
    6. '
' → logprob: -22.50009536743164
    7. 'min' → logprob: -22.50009536743164
    8. '   ' → logprob: -22.87509536743164
    9. '_max' → logprob: -23.50009536743164
    10. '=max' → logprob: -23.87509536743164

Token 1413: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.833878508885391e-05
    2. 'p' → logprob: -10.250038146972656
    3. '(max' → logprob: -13.500038146972656
    4. 'max' → logprob: -13.875038146972656
    5. '(
' → logprob: -15.750038146972656
    6. '```' → logprob: -16.000038146972656
    7. '[p' → logprob: -16.375038146972656
    8. ' p' → logprob: -16.625038146972656
    9. '(point' → logprob: -17.000038146972656
    10. '(points' → logprob: -17.125038146972656

Token 1414: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.025039415806531906
    2. '(p' → logprob: -3.7750394344329834
    3. '(x' → logprob: -7.025039196014404
    4. 'x' → logprob: -7.150039196014404
    5. 'for' → logprob: -9.525039672851562
    6. '.p' → logprob: -10.775039672851562
    7. '_x' → logprob: -11.900039672851562
    8. '```' → logprob: -12.275039672851562
    9. 'token' → logprob: -12.400039672851562
    10. '[p' → logprob: -13.525039672851562

Token 1415: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038042064756155014
    2. 'for' → logprob: -3.2880420684814453
    3. '	for' → logprob: -15.538042068481445
    4. ')' → logprob: -15.913042068481445
    5. '```' → logprob: -16.163042068481445
    6. ' in' → logprob: -16.663042068481445
    7. '(p' → logprob: -17.038042068481445
    8. 'For' → logprob: -18.038042068481445
    9. '       ' → logprob: -18.038042068481445
    10. '(for' → logprob: -18.163042068481445

Token 1416: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007373288739472628
    2. 'points' → logprob: -5.007373332977295
    3. 'max' → logprob: -7.382373332977295
    4. ' p' → logprob: -10.507372856140137
    5. '(p' → logprob: -12.382372856140137
    6. ' points' → logprob: -13.882372856140137
    7. '(points' → logprob: -13.882372856140137
    8. 'point' → logprob: -14.257372856140137
    9. 'for' → logprob: -14.757372856140137
    10. '
' → logprob: -14.882372856140137

Token 1417: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.10474992543458939
    2. 'in' → logprob: -3.104749917984009
    3. ' points' → logprob: -3.979749917984009
    4. ' in' → logprob: -4.104750156402588
    5. 'oints' → logprob: -4.354750156402588
    6. '.points' → logprob: -5.729750156402588
    7. '(points' → logprob: -5.854750156402588
    8. '	points' → logprob: -7.854750156402588
    9. 'for' → logprob: -9.85474967956543
    10. 'p' → logprob: -11.35474967956543

Token 1418: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00011629798245849088
    2. ' points' → logprob: -9.250116348266602
    3. '(points' → logprob: -11.125116348266602
    4. 'p' → logprob: -12.375116348266602
    5. '
' → logprob: -14.875116348266602
    6. '.points' → logprob: -15.125116348266602
    7. '	points' → logprob: -15.625116348266602
    8. 'point' → logprob: -16.6251163482666
    9. 'max' → logprob: -16.6251163482666
    10. '[' → logprob: -16.8751163482666

Token 1419: ')
' (ID: 446)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24473458528518677
    2. 'for' → logprob: -1.619734525680542
    3. '       ' → logprob: -4.119734764099121
    4. ')' → logprob: -5.869734764099121
    5. ',' → logprob: -10.494734764099121
    6. ' in' → logprob: -11.119734764099121
    7. '           ' → logprob: -12.244734764099121
    8. '),' → logprob: -12.369734764099121
    9. '```' → logprob: -13.369734764099121
    10. '        ' → logprob: -13.494734764099121

Token 1420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00411959970369935
    2. 'max' → logprob: -5.504119396209717
    3. '
' → logprob: -11.004119873046875
    4. ' max' → logprob: -11.379119873046875
    5. '(max' → logprob: -12.004119873046875
    6. '.max' → logprob: -14.004119873046875
    7. '```' → logprob: -14.004119873046875
    8. ',max' → logprob: -14.129119873046875
    9. '_max' → logprob: -14.254119873046875
    10. ')' → logprob: -14.629119873046875

Token 1421: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.02987140230834484
    2. ' max' → logprob: -3.5298714637756348
    3. '       ' → logprob: -9.029870986938477
    4. '(max' → logprob: -14.154870986938477
    5. '_max' → logprob: -16.154870986938477
    6. '	max' → logprob: -16.404870986938477
    7. '[max' → logprob: -17.029870986938477
    8. '
' → logprob: -17.154870986938477
    9. '=max' → logprob: -17.404870986938477
    10. 'Max' → logprob: -17.654870986938477

Token 1422: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0004353181866463274
    2. 'y' → logprob: -7.7504353523254395
    3. '_x' → logprob: -13.125434875488281
    4. 'max' → logprob: -13.875434875488281
    5. 'Y' → logprob: -15.000434875488281
    6. '.y' → logprob: -15.500434875488281
    7. 'def' → logprob: -15.625434875488281
    8. '```' → logprob: -15.875434875488281
    9. '=' → logprob: -16.12543487548828
    10. 'yield' → logprob: -16.37543487548828

Token 1423: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892393320798874
    2. '=' → logprob: -2.5789239406585693
    3. '=max' → logprob: -10.453924179077148
    4. 'max' → logprob: -13.578924179077148
    5. '(max' → logprob: -13.703924179077148
    6. '(p' → logprob: -13.828924179077148
    7. '   ' → logprob: -14.828924179077148
    8. ' for' → logprob: -14.953924179077148
    9. ')' → logprob: -15.078924179077148
    10. '=lambda' → logprob: -15.078924179077148

Token 1424: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0206720617134124e-05
    2. ' max' → logprob: -11.50001049041748
    3. '(max' → logprob: -18.500009536743164
    4. '	max' → logprob: -21.000009536743164
    5. '[max' → logprob: -21.125009536743164
    6. '=max' → logprob: -21.875009536743164
    7. 'min' → logprob: -22.750009536743164
    8. '_max' → logprob: -23.125009536743164
    9. '   ' → logprob: -23.375009536743164
    10. 'Max' → logprob: -23.875009536743164

Token 1425: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.253090865968261e-06
    2. 'p' → logprob: -11.750009536743164
    3. '(max' → logprob: -13.875009536743164
    4. 'max' → logprob: -15.125009536743164
    5. '[p' → logprob: -16.875009536743164
    6. ' p' → logprob: -17.625009536743164
    7. '(' → logprob: -18.250009536743164
    8. '(
' → logprob: -18.750009536743164
    9. '<p' → logprob: -18.875009536743164
    10. 'for' → logprob: -19.125009536743164

Token 1426: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.14270056784152985
    2. 'p' → logprob: -2.017700672149658
    3. '.p' → logprob: -11.2677001953125
    4. '[p' → logprob: -12.2677001953125
    5. 'for' → logprob: -13.0177001953125
    6. ' p' → logprob: -13.1427001953125
    7. 'y' → logprob: -14.2677001953125
    8. 'point' → logprob: -15.0177001953125
    9. 'x' → logprob: -15.0177001953125
    10. '	p' → logprob: -15.5177001953125

Token 1427: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20174221694469452
    2. ' for' → logprob: -1.701742172241211
    3. '(p' → logprob: -8.201742172241211
    4. 'max' → logprob: -10.201742172241211
    5. '(max' → logprob: -12.201742172241211
    6. '_for' → logprob: -13.201742172241211
    7. '	for' → logprob: -13.326742172241211
    8. '=' → logprob: -13.451742172241211
    9. '(for' → logprob: -13.576742172241211
    10. 'in' → logprob: -13.951742172241211

Token 1428: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0041271997615695
    2. 'max' → logprob: -6.254127025604248
    3. 'points' → logprob: -6.629127025604248
    4. 'for' → logprob: -7.754127025604248
    5. ' p' → logprob: -8.254127502441406
    6. '(p' → logprob: -8.754127502441406
    7. '
' → logprob: -11.504127502441406
    8. ' for' → logprob: -12.254127502441406
    9. 'point' → logprob: -12.629127502441406
    10. ' max' → logprob: -12.879127502441406

Token 1429: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01949855498969555
    2. ' for' → logprob: -4.019498348236084
    3. '.points' → logprob: -7.144498348236084
    4. 'points' → logprob: -7.769498348236084
    5. '(points' → logprob: -10.144498825073242
    6. ' in' → logprob: -10.269498825073242
    7. 'in' → logprob: -10.644498825073242
    8. '.p' → logprob: -11.269498825073242
    9. 'oints' → logprob: -11.769498825073242
    10. ' points' → logprob: -12.269498825073242

Token 1430: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.055024683475494385
    2. 'p' → logprob: -2.9300246238708496
    3. '(points' → logprob: -9.805025100708008
    4. ' points' → logprob: -10.430025100708008
    5. 'max' → logprob: -10.555025100708008
    6. '(p' → logprob: -11.055025100708008
    7. ' p' → logprob: -12.055025100708008
    8. 'for' → logprob: -12.180025100708008
    9. '[p' → logprob: -13.305025100708008
    10. 'Points' → logprob: -13.805025100708008

Token 1431: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02347560226917267
    2. ')' → logprob: -4.023475646972656
    3. '):
' → logprob: -5.648475646972656
    4. '):' → logprob: -7.523475646972656
    5. 'for' → logprob: -7.523475646972656
    6. ')
' → logprob: -8.273475646972656
    7. ' for' → logprob: -8.773475646972656
    8. '```' → logprob: -9.648475646972656
    9. ':
' → logprob: -10.023475646972656
    10. ':' → logprob: -10.398475646972656

Token 1432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8908587662735954e-05
    2. 'return' → logprob: -11.125019073486328
    3. '
' → logprob: -13.625019073486328
    4. '           ' → logprob: -14.000019073486328
    5. '   ' → logprob: -14.125019073486328
    6. '=' → logprob: -14.750019073486328
    7. ' return' → logprob: -15.000019073486328
    8. '```' → logprob: -15.500019073486328
    9. '               ' → logprob: -16.375019073486328
    10. '     ' → logprob: -16.750019073486328

Token 1433: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.386987566947937
    2. '       ' → logprob: -1.136987566947937
    3. ' return' → logprob: -9.136987686157227
    4. '   ' → logprob: -11.761987686157227
    5. '           ' → logprob: -14.136987686157227
    6. '	return' → logprob: -15.386987686157227
    7. '
' → logprob: -16.261987686157227
    8. '      ' → logprob: -16.761987686157227
    9. '     ' → logprob: -17.136987686157227
    10. ' ' → logprob: -17.386987686157227

Token 1434: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.004080062732100487
    2. ' cls' → logprob: -5.504080295562744
    3. '(cls' → logprob: -13.504079818725586
    4. '.cls' → logprob: -16.754079818725586
    5. '   ' → logprob: -17.629079818725586
    6. '_cls' → logprob: -18.004079818725586
    7. 'super' → logprob: -18.129079818725586
    8. 'Cls' → logprob: -18.129079818725586
    9. 'class' → logprob: -18.254079818725586
    10. 'classmethod' → logprob: -18.504079818725586

Token 1435: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -1.1398757123970427e-05
    2. '.pattern' → logprob: -11.750011444091797
    3. '.' → logprob: -13.250011444091797
    4. 'match' → logprob: -13.750011444091797
    5. '.try' → logprob: -15.000011444091797
    6. '.matcher' → logprob: -16.250011444091797
    7. '.matches' → logprob: -16.500011444091797
    8. '._' → logprob: -17.375011444091797
    9. ' .' → logprob: -17.375011444091797
    10. '.MATCH' → logprob: -17.375011444091797

Token 1436: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00014919086243025959
    2. 'pattern' → logprob: -8.87514877319336
    3. 'cls' → logprob: -12.37514877319336
    4. '(cls' → logprob: -13.25014877319336
    5. '       ' → logprob: -13.62514877319336
    6. '_class' → logprob: -14.12514877319336
    7. '   ' → logprob: -15.12514877319336
    8. '           ' → logprob: -15.62514877319336
    9. 'Pattern' → logprob: -15.87514877319336
    10. '_point' → logprob: -15.87514877319336

Token 1437: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -5.512236498361744e-07
    2. 'points' → logprob: -14.500000953674316
    3. ' points' → logprob: -19.375
    4. '	points' → logprob: -19.375
    5. '(
' → logprob: -19.625
    6. '.points' → logprob: -20.0
    7. '(parts' → logprob: -20.5
    8. '(' → logprob: -21.5
    9. 'Points' → logprob: -22.0
    10. '```' → logprob: -22.125

Token 1438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003611474297940731
    2. '(points' → logprob: -5.6286115646362305
    3. '       ' → logprob: -12.12861156463623
    4. 'points' → logprob: -12.62861156463623
    5. ',
' → logprob: -14.50361156463623
    6. ' ,' → logprob: -15.00361156463623
    7. '.points' → logprob: -15.12861156463623
    8. '           ' → logprob: -15.12861156463623
    9. '[' → logprob: -15.25361156463623
    10. ' points' → logprob: -15.25361156463623

Token 1439: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00010747690976131707
    2. 'points' → logprob: -9.750107765197754
    3. ' min' → logprob: -10.500107765197754
    4. 'max' → logprob: -10.875107765197754
    5. '(min' → logprob: -13.750107765197754
    6. '[min' → logprob: -14.625107765197754
    7. 'Points' → logprob: -14.750107765197754
    8. 'Point' → logprob: -15.375107765197754
    9. 'p' → logprob: -15.875107765197754
    10. ' points' → logprob: -16.375106811523438

Token 1440: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -9.984787902794778e-05
    2. 'x' → logprob: -9.250100135803223
    3. '(p' → logprob: -13.125100135803223
    4. 'X' → logprob: -14.125100135803223
    5. 'max' → logprob: -15.250100135803223
    6. 'p' → logprob: -15.875100135803223
    7. '[p' → logprob: -16.000099182128906
    8. '```' → logprob: -16.375099182128906
    9. '   ' → logprob: -16.750099182128906
    10. '[' → logprob: -16.750099182128906

Token 1441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022547018306795508
    2. ',p' → logprob: -8.500225067138672
    3. ' ,' → logprob: -11.375225067138672
    4. ',min' → logprob: -12.625225067138672
    5. ',
' → logprob: -13.375225067138672
    6. '       ' → logprob: -13.375225067138672
    7. '=' → logprob: -14.000225067138672
    8. 'for' → logprob: -15.000225067138672
    9. ',max' → logprob: -15.000225067138672
    10. ')' → logprob: -15.125225067138672

Token 1442: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00015860427811276168
    2. ' min' → logprob: -8.750158309936523
    3. '[min' → logprob: -16.625158309936523
    4. 'max' → logprob: -17.375158309936523
    5. '_min' → logprob: -17.625158309936523
    6. '	min' → logprob: -18.750158309936523
    7. '(min' → logprob: -19.000158309936523
    8. '=min' → logprob: -19.875158309936523
    9. '.min' → logprob: -20.250158309936523
    10. ',min' → logprob: -20.625158309936523

Token 1443: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.043427422642707825
    2. 'x' → logprob: -3.2934274673461914
    3. 'max' → logprob: -5.293427467346191
    4. '_y' → logprob: -8.543427467346191
    5. 'p' → logprob: -9.543427467346191
    6. '(p' → logprob: -10.543427467346191
    7. '_max' → logprob: -10.793427467346191
    8. '```' → logprob: -11.918427467346191
    9. '(max' → logprob: -12.293427467346191
    10. 'X' → logprob: -12.793427467346191

Token 1444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022451656695920974
    2. ',max' → logprob: -8.750224113464355
    3. 'max' → logprob: -10.000224113464355
    4. ' ,' → logprob: -11.250224113464355
    5. ',p' → logprob: -12.625224113464355
    6. 'points' → logprob: -13.125224113464355
    7. ' max' → logprob: -13.625224113464355
    8. '       ' → logprob: -14.250224113464355
    9. ' points' → logprob: -15.625224113464355
    10. '   ' → logprob: -16.125225067138672

Token 1445: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.5491004129871726e-05
    2. ' max' → logprob: -10.000045776367188
    3. '_max' → logprob: -17.875045776367188
    4. '(max' → logprob: -18.375045776367188
    5. '[max' → logprob: -18.500045776367188
    6. ',max' → logprob: -20.000045776367188
    7. '	max' → logprob: -20.625045776367188
    8. '=max' → logprob: -21.375045776367188
    9. 'maxlength' → logprob: -21.750045776367188
    10. '
' → logprob: -21.750045776367188

Token 1446: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.843177233240567e-05
    2. 'max' → logprob: -11.500018119812012
    3. 'x' → logprob: -11.750018119812012
    4. '_max' → logprob: -15.625018119812012
    5. '```' → logprob: -16.750019073486328
    6. '_y' → logprob: -17.375019073486328
    7. '(max' → logprob: -17.375019073486328
    8. '...' → logprob: -18.250019073486328
    9. 'p' → logprob: -18.375019073486328
    10. 'X' → logprob: -18.625019073486328

Token 1447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.364928700961173e-05
    2. ',max' → logprob: -10.000093460083008
    3. ',p' → logprob: -10.625093460083008
    4. ' ,' → logprob: -11.125093460083008
    5. 'for' → logprob: -12.375093460083008
    6. ',min' → logprob: -12.750093460083008
    7. ' for' → logprob: -14.375093460083008
    8. '       ' → logprob: -14.750093460083008
    9. ',
' → logprob: -16.125093460083008
    10. '[' → logprob: -16.250093460083008

Token 1448: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.627176768844947e-05
    2. ' max' → logprob: -9.250096321105957
    3. 'min' → logprob: -17.50009536743164
    4. '(max' → logprob: -18.75009536743164
    5. '_max' → logprob: -18.87509536743164
    6. ',max' → logprob: -19.12509536743164
    7. '[max' → logprob: -19.37509536743164
    8. '=max' → logprob: -19.87509536743164
    9. '	max' → logprob: -21.25009536743164
    10. '
' → logprob: -21.25009536743164

Token 1449: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0018758014775812626
    2. 'max' → logprob: -6.376875877380371
    3. 'x' → logprob: -10.126875877380371
    4. ',' → logprob: -10.251875877380371
    5. '_y' → logprob: -10.376875877380371
    6. '_max' → logprob: -11.001875877380371
    7. ',max' → logprob: -11.501875877380371
    8. '```' → logprob: -11.626875877380371
    9. 'X' → logprob: -11.751875877380371
    10. '(max' → logprob: -11.751875877380371

Token 1450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7491250875755213e-05
    2. '(points' → logprob: -11.750027656555176
    3. '       ' → logprob: -12.000027656555176
    4. ' ,' → logprob: -12.125027656555176
    5. 'points' → logprob: -12.375027656555176
    6. ',p' → logprob: -13.500027656555176
    7. ' points' → logprob: -14.125027656555176
    8. ',
' → logprob: -14.750027656555176
    9. '```' → logprob: -15.125027656555176
    10. '           ' → logprob: -15.375027656555176

Token 1451: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.07890862971544266
    2. 'max' → logprob: -2.578908681869507
    3. ' cls' → logprob: -11.328908920288086
    4. ' max' → logprob: -13.203908920288086
    5. 'pattern' → logprob: -13.328908920288086
    6. '
' → logprob: -13.828908920288086
    7. 'class' → logprob: -13.828908920288086
    8. '(cls' → logprob: -14.953908920288086
    9. 'points' → logprob: -15.078908920288086
    10. 'cl' → logprob: -16.078908920288086

Token 1452: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.3584977090358734
    2. 'pattern' → logprob: -1.4834977388381958
    3. ',' → logprob: -2.6084976196289062
    4. '(pattern' → logprob: -8.483497619628906
    5. ',p' → logprob: -8.733497619628906
    6. ')' → logprob: -9.108497619628906
    7. '[' → logprob: -9.358497619628906
    8. '_pattern' → logprob: -9.983497619628906
    9. ' pattern' → logprob: -10.108497619628906
    10. '.p' → logprob: -10.483497619628906

Token 1453: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1454: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0003362966235727072
    2. '
' → logprob: -8.000336647033691
    3. '#' → logprob: -15.250336647033691
    4. '

' → logprob: -15.250336647033691
    5. ' class' → logprob: -15.500336647033691
    6. '<class' → logprob: -17.000335693359375
    7. '
' → logprob: -17.125335693359375
    8. '  
' → logprob: -17.375335693359375
    9. '    
' → logprob: -17.875335693359375
    10. '"class' → logprob: -18.000335693359375

Token 1455: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.004081485792994499
    2. ' Digit' → logprob: -5.5040812492370605
    3. 'Character' → logprob: -13.379081726074219
    4. 'Space' → logprob: -14.629081726074219
    5. 'D' → logprob: -14.879081726074219
    6. '_digit' → logprob: -15.504081726074219
    7. ' ' → logprob: -16.37908172607422
    8. 'Digital' → logprob: -16.50408172607422
    9. ' digit' → logprob: -16.62908172607422
    10. 'class' → logprob: -16.87908172607422

Token 1456: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -20.25
    3. '۴' → logprob: -20.5
    4. '' → logprob: -21.0
    5. '
' → logprob: -21.125
    6. '٤' → logprob: -21.25
    7. '৪' → logprob: -21.375
    8. '5' → logprob: -21.5
    9. '```' → logprob: -21.625
    10. '४' → logprob: -21.75

Token 1457: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.375
    3. '<Character' → logprob: -17.375
    4. 'Character' → logprob: -17.625
    5. '(Class' → logprob: -18.625
    6. 'class' → logprob: -21.0
    7. '(class' → logprob: -21.125
    8. '(Char' → logprob: -21.25
    9. '.Character' → logprob: -21.25
    10. ' (' → logprob: -21.375

Token 1458: '):
' (ID: 1883)
  Prédit: '(Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -0.06273948401212692
    2. '):
' → logprob: -3.187739372253418
    3. '):' → logprob: -4.062739372253418
    4. '   ' → logprob: -6.437739372253418
    5. 'Character' → logprob: -8.187739372253418
    6. '<Character' → logprob: -8.562739372253418
    7. ')' → logprob: -9.562739372253418
    8. ':
' → logprob: -9.562739372253418
    9. 'class' → logprob: -9.812739372253418
    10. ':' → logprob: -10.437739372253418

Token 1459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004210890270769596
    2. 'class' → logprob: -6.129210948944092
    3. '```' → logprob: -6.254210948944092
    4. 'pattern' → logprob: -9.754210472106934
    5. ' pattern' → logprob: -11.504210472106934
    6. 'Character' → logprob: -11.629210472106934
    7. '(Character' → logprob: -12.129210472106934
    8. ' class' → logprob: -12.379210472106934
    9. '``' → logprob: -12.754210472106934
    10. '
' → logprob: -13.129210472106934

Token 1460: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -8.2994620242971e-06
    2. ' pattern' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.000008583068848
    4. 'class' → logprob: -19.00000762939453
    5. '```' → logprob: -19.12500762939453
    6. 'pat' → logprob: -21.50000762939453
    7. '
' → logprob: -21.62500762939453
    8. '.pattern' → logprob: -22.12500762939453
    9. '``' → logprob: -22.50000762939453
    10. '(pattern' → logprob: -22.62500762939453

Token 1461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03813157603144646
    2. '=' → logprob: -3.2881314754486084
    3. '   ' → logprob: -9.538131713867188
    4. '=[
' → logprob: -11.038131713867188
    5. '=
' → logprob: -14.663131713867188
    6. '[
' → logprob: -14.788131713867188
    7. '```' → logprob: -14.913131713867188
    8. '=[' → logprob: -15.663131713867188
    9. ' ' → logprob: -15.663131713867188
    10. '  ' → logprob: -15.788131713867188

Token 1462: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.00028815300902351737
    2. '[' → logprob: -8.250288009643555
    3. '   ' → logprob: -11.000288009643555
    4. ' [
' → logprob: -11.500288009643555
    5. '["' → logprob: -18.125288009643555
    6. ' [' → logprob: -18.250288009643555
    7. '=[
' → logprob: -18.625288009643555
    8. ' ' → logprob: -19.125288009643555
    9. '       ' → logprob: -20.000288009643555
    10. '  ' → logprob: -20.500288009643555

Token 1463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3236106336116791
    2. '[
' → logprob: -1.3236106634140015
    3. '[' → logprob: -5.323610782623291
    4. '   ' → logprob: -5.573610782623291
    5. '"' → logprob: -6.448610782623291
    6. '           ' → logprob: -10.698610305786133
    7. ' [
' → logprob: -11.948610305786133
    8. '["' → logprob: -12.073610305786133
    9. '     ' → logprob: -12.948610305786133
    10. '      ' → logprob: -13.573610305786133

Token 1464: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -9.507972572464496e-05
    2. '       ' → logprob: -9.75009536743164
    3. '   ' → logprob: -10.87509536743164
    4. '[
' → logprob: -11.00009536743164
    5. ' "' → logprob: -14.37509536743164
    6. ' ' → logprob: -15.12509536743164
    7. ''' → logprob: -15.87509536743164
    8. '
' → logprob: -16.50009536743164
    9. '[' → logprob: -16.75009536743164
    10. '["' → logprob: -17.00009536743164

Token 1465: '101' (ID: 7959)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008753311820328236
    2. '011' → logprob: -4.883753299713135
    3. '010' → logprob: -7.133753299713135
    4. '001' → logprob: -8.758753776550293
    5. '111' → logprob: -9.758753776550293
    6. '000' → logprob: -10.383753776550293
    7. ''' → logprob: -10.508753776550293
    8. ' ' → logprob: -10.883753776550293
    9. '   ' → logprob: -11.258753776550293
    10. '100' → logprob: -11.383753776550293

Token 1466: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.03015042468905449
    2. '",' → logprob: -3.5301504135131836
    3. '"' → logprob: -8.530150413513184
    4. '","' → logprob: -9.155150413513184
    5. '",
' → logprob: -9.530150413513184
    6. '',
' → logprob: -11.030150413513184
    7. '111' → logprob: -13.030150413513184
    8. '"
' → logprob: -13.530150413513184
    9. '   ' → logprob: -13.905150413513184
    10. '",'' → logprob: -13.905150413513184

Token 1467: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5761613249778748
    2. '       ' → logprob: -0.8261613249778748
    3. '           ' → logprob: -8.95116138458252
    4. '   ' → logprob: -10.20116138458252
    5. ''' → logprob: -11.20116138458252
    6. '"class' → logprob: -11.20116138458252
    7. '[' → logprob: -11.95116138458252
    8. '[
' → logprob: -12.20116138458252
    9. ' "' → logprob: -12.95116138458252
    10. '0' → logprob: -13.20116138458252

Token 1468: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.006725079845637083
    2. '111' → logprob: -5.006725311279297
    3. '101' → logprob: -12.506725311279297
    4. ''' → logprob: -12.506725311279297
    5. '   ' → logprob: -13.631725311279297
    6. ' "' → logprob: -14.631725311279297
    7. ' ' → logprob: -14.631725311279297
    8. '110' → logprob: -16.256725311279297
    9. '       ' → logprob: -16.631725311279297
    10. '"""' → logprob: -17.131725311279297

Token 1469: '101' (ID: 7959)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.004096685443073511
    2. '101' → logprob: -5.504096508026123
    3. '"' → logprob: -11.504096984863281
    4. '110' → logprob: -12.129096984863281
    5. '```' → logprob: -13.754096984863281
    6. ''' → logprob: -13.879096984863281
    7. '"""' → logprob: -15.254096984863281
    8. '``' → logprob: -16.25409698486328
    9. ''''' → logprob: -16.25409698486328
    10. '11' → logprob: -16.62909698486328

Token 1470: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.14777234196662903
    2. '",' → logprob: -2.0227723121643066
    3. '<|end|>' → logprob: -6.022772312164307
    4. '"' → logprob: -7.022772312164307
    5. '",
' → logprob: -7.522772312164307
    6. '       ' → logprob: -7.897772312164307
    7. '","' → logprob: -8.147772789001465
    8. '   ' → logprob: -9.022772789001465
    9. '',
' → logprob: -9.147772789001465
    10. '",'' → logprob: -9.647772789001465

Token 1471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4742792546749115
    2. '"' → logprob: -0.9742792844772339
    3. '           ' → logprob: -9.099279403686523
    4. '   ' → logprob: -10.224279403686523
    5. ''' → logprob: -10.599279403686523
    6. '[' → logprob: -12.099279403686523
    7. '"class' → logprob: -12.349279403686523
    8. '[
' → logprob: -12.724279403686523
    9. '      ' → logprob: -12.849279403686523
    10. ' "' → logprob: -13.099279403686523

Token 1472: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00038038729690015316
    2. '       ' → logprob: -8.000380516052246
    3. '111' → logprob: -10.500380516052246
    4. ''' → logprob: -11.875380516052246
    5. '[' → logprob: -12.875380516052246
    6. ' "' → logprob: -13.000380516052246
    7. '110' → logprob: -13.750380516052246
    8. '"class' → logprob: -13.750380516052246
    9. '   ' → logprob: -14.000380516052246
    10. '101' → logprob: -14.375380516052246

Token 1473: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.0001805377542041242
    2. '"' → logprob: -8.6251802444458
    3. ''' → logprob: -14.6251802444458
    4. '101' → logprob: -16.000181198120117
    5. '```' → logprob: -16.125181198120117
    6. '"""' → logprob: -16.250181198120117
    7. ' ' → logprob: -16.875181198120117
    8. '"""
' → logprob: -17.750181198120117
    9. '011' → logprob: -18.000181198120117
    10. ''''' → logprob: -18.000181198120117

Token 1474: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.05053408816456795
    2. '",' → logprob: -3.3005340099334717
    3. '"' → logprob: -4.425534248352051
    4. '",
' → logprob: -8.67553424835205
    5. '"
' → logprob: -9.17553424835205
    6. '',
' → logprob: -9.30053424835205
    7. '","' → logprob: -10.67553424835205
    8. '[
' → logprob: -11.17553424835205
    9. '",[' → logprob: -11.42553424835205
    10. '<|end|>' → logprob: -12.17553424835205

Token 1475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07973926514387131
    2. '"' → logprob: -2.5797393321990967
    3. '           ' → logprob: -7.329739093780518
    4. '   ' → logprob: -9.079739570617676
    5. ''' → logprob: -10.454739570617676
    6. '[
' → logprob: -10.954739570617676
    7. '               ' → logprob: -11.704739570617676
    8. '
' → logprob: -12.329739570617676
    9. '"class' → logprob: -12.579739570617676
    10. ' ' → logprob: -12.829739570617676

Token 1476: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0005062076961621642
    2. '       ' → logprob: -7.625506401062012
    3. ''' → logprob: -11.500506401062012
    4. '   ' → logprob: -12.125506401062012
    5. '           ' → logprob: -14.000506401062012
    6. '[
' → logprob: -14.875506401062012
    7. '111' → logprob: -15.000506401062012
    8. '["' → logprob: -15.375506401062012
    9. '100' → logprob: -15.750506401062012
    10. '110' → logprob: -16.000505447387695

Token 1477: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.0015581895131617785
    2. '010' → logprob: -6.626558303833008
    3. '011' → logprob: -8.876558303833008
    4. '"' → logprob: -10.001558303833008
    5. ''' → logprob: -10.751558303833008
    6. '000' → logprob: -11.501558303833008
    7. ' ' → logprob: -11.626558303833008
    8. '```' → logprob: -12.626558303833008
    9. '``' → logprob: -13.751558303833008
    10. '111' → logprob: -14.376558303833008

Token 1478: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.10360591113567352
    2. '",' → logprob: -2.3536059856414795
    3. '"' → logprob: -5.9786057472229
    4. '<|end|>' → logprob: -8.228606224060059
    5. '","' → logprob: -8.853606224060059
    6. '",
' → logprob: -8.853606224060059
    7. '',
' → logprob: -9.728606224060059
    8. '"
' → logprob: -9.853606224060059
    9. '   ' → logprob: -10.103606224060059
    10. '[
' → logprob: -10.353606224060059

Token 1479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16157130897045135
    2. '"' → logprob: -1.9115712642669678
    3. ' "' → logprob: -7.536571502685547
    4. '   ' → logprob: -7.786571502685547
    5. ''' → logprob: -8.286571502685547
    6. '           ' → logprob: -9.911571502685547
    7. ' ' → logprob: -10.036571502685547
    8. '      ' → logprob: -11.661571502685547
    9. '	' → logprob: -12.036571502685547
    10. '"class' → logprob: -12.036571502685547

Token 1480: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00036514020757749677
    2. '101' → logprob: -8.250365257263184
    3. ''' → logprob: -9.375365257263184
    4. '001' → logprob: -11.750365257263184
    5. '111' → logprob: -12.625365257263184
    6. '   ' → logprob: -12.750365257263184
    7. '```' → logprob: -13.375365257263184
    8. '100' → logprob: -14.125365257263184
    9. ' ' → logprob: -14.250365257263184
    10. '       ' → logprob: -14.500365257263184

Token 1481: '001' (ID: 7659)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.7030165195465088
    2. '111' → logprob: -1.2030165195465088
    3. '001' → logprob: -1.8280165195465088
    4. '100' → logprob: -3.578016519546509
    5. '"' → logprob: -4.57801628112793
    6. ''' → logprob: -5.32801628112793
    7. '011' → logprob: -7.70301628112793
    8. '```' → logprob: -8.95301628112793
    9. '1' → logprob: -9.32801628112793
    10. '110' → logprob: -9.82801628112793

Token 1482: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2006361484527588
    2. '"' → logprob: -2.450636148452759
    3. '"]' → logprob: -2.450636148452759
    4. '"
' → logprob: -5.20063591003418
    5. ']' → logprob: -5.70063591003418
    6. '"]
' → logprob: -8.82563591003418
    7. '']' → logprob: -8.82563591003418
    8. ']"' → logprob: -9.70063591003418
    9. '```' → logprob: -10.20063591003418
    10. ']
' → logprob: -10.95063591003418

Token 1483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007507824921049178
    2. ']' → logprob: -7.50075101852417
    3. '"' → logprob: -9.625750541687012
    4. '```' → logprob: -9.875750541687012
    5. 'class' → logprob: -10.875750541687012
    6. ']
' → logprob: -11.500750541687012
    7. '
' → logprob: -11.625750541687012
    8. '[
' → logprob: -11.750750541687012
    9. '<|end|>' → logprob: -11.875750541687012
    10. '"]' → logprob: -12.000750541687012

Token 1484: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002377319149672985
    2. '
' → logprob: -6.627377510070801
    3. 'class' → logprob: -7.627377510070801
    4. '```' → logprob: -8.5023775100708
    5. ']' → logprob: -9.0023775100708
    6. ']
' (adapté à ' ]
') → logprob: -9.5023775100708
    7. '  ' → logprob: -10.3773775100708
    8. '"' → logprob: -10.7523775100708
    9. ':
' → logprob: -10.8773775100708
    10. '[
' → logprob: -11.2523775100708

Token 1485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008971202187240124
    2. 'class' → logprob: -5.133971214294434
    3. 'char' → logprob: -6.383971214294434
    4. '```' → logprob: -6.883971214294434
    5. '
' → logprob: -8.383971214294434
    6. '[' → logprob: -11.008971214294434
    7. '       ' → logprob: -11.133971214294434
    8. '[
' → logprob: -11.258971214294434
    9. '    
' → logprob: -11.508971214294434
    10. ' class' → logprob: -11.883971214294434

Token 1486: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.0031917323358356953
    2. 'class' → logprob: -5.753191947937012
    3. '   ' → logprob: -12.003191947937012
    4. ' char' → logprob: -12.503191947937012
    5. 'pattern' → logprob: -13.753191947937012
    6. '```' → logprob: -14.128191947937012
    7. '
' → logprob: -14.253191947937012
    8. '_char' → logprob: -14.253191947937012
    9. '@' → logprob: -14.378191947937012
    10. ' ' → logprob: -16.003190994262695

Token 1487: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -0.0007829454843886197
    2. 'class' → logprob: -7.3757829666137695
    3. 'repr' → logprob: -9.12578296661377
    4. '   ' → logprob: -10.37578296661377
    5. 'char' → logprob: -11.62578296661377
    6. 'pattern' → logprob: -12.62578296661377
    7. '_rep' → logprob: -13.25078296661377
    8. '
' → logprob: -14.00078296661377
    9. '=' → logprob: -15.12578296661377
    10. '```' → logprob: -15.37578296661377

Token 1488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520189583301544
    2. ' =' → logprob: -1.502018928527832
    3. '='' → logprob: -9.377018928527832
    4. ' ='' → logprob: -13.252018928527832
    5. ''' → logprob: -13.627018928527832
    6. ':' → logprob: -13.752018928527832
    7. '<|end|>' → logprob: -14.377018928527832
    8. ' ' → logprob: -15.627018928527832
    9. ' '' → logprob: -16.37701988220215
    10. '=
' → logprob: -16.37701988220215

Token 1489: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.696889623621246e-06
    2. ' '' → logprob: -13.25000286102295
    3. '"' → logprob: -14.25000286102295
    4. '4' → logprob: -15.50000286102295
    5. '('' → logprob: -18.500001907348633
    6. '`' → logprob: -18.875001907348633
    7. '‘' → logprob: -20.000001907348633
    8. ''A' → logprob: -20.125001907348633
    9. '’' → logprob: -20.750001907348633
    10. '['' → logprob: -20.750001907348633

Token 1490: '4' (ID: 19)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00012368128227535635
    2. '4' → logprob: -9.000123977661133
    3. '"' → logprob: -15.750123977661133
    4. ' '' → logprob: -16.625123977661133
    5. '`' → logprob: -17.250123977661133
    6. '‘' → logprob: -18.750123977661133
    7. '('' → logprob: -19.375123977661133
    8. '
' → logprob: -19.500123977661133
    9. '’' → logprob: -19.875123977661133
    10. ''
' → logprob: -20.000123977661133

Token 1491: ''

' (ID: 7497)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3875081241130829
    2. '   ' → logprob: -1.1375081539154053
    3. 'class' → logprob: -7.637507915496826
    4. '
' → logprob: -9.887508392333984
    5. '

' → logprob: -10.137508392333984
    6. '    
' → logprob: -11.387508392333984
    7. '@' → logprob: -11.387508392333984
    8. '<|end|>' → logprob: -11.887508392333984
    9. '  ' → logprob: -12.012508392333984
    10. ' ' → logprob: -12.012508392333984

Token 1492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7613957524299622
    2. '
' → logprob: -1.0113956928253174
    3. 'class' → logprob: -2.2613956928253174
    4. '```' → logprob: -2.7613956928253174
    5. '@' → logprob: -6.3863959312438965
    6. '    
' → logprob: -9.761395454406738
    7. ' class' → logprob: -10.011395454406738
    8. '``' → logprob: -10.511395454406738
    9. '

' → logprob: -11.011395454406738
    10. 'classmethod' → logprob: -11.636395454406738

Token 1493: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -1.4259644558478612e-05
    2. '   ' → logprob: -11.500014305114746
    3. ' @' → logprob: -13.375014305114746
    4. 'class' → logprob: -13.750014305114746
    5. '@class' → logprob: -13.875014305114746
    6. '
' → logprob: -14.875014305114746
    7. 'classmethod' → logprob: -16.25001335144043
    8. '```' → logprob: -17.25001335144043
    9. '@
' → logprob: -17.87501335144043
    10. '@property' → logprob: -18.00001335144043

Token 1494: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -5.200166469876422e-06
    2. 'class' → logprob: -12.250004768371582
    3. '@' → logprob: -15.125004768371582
    4. 'staticmethod' → logprob: -16.5000057220459
    5. 'cls' → logprob: -18.3750057220459
    6. '@class' → logprob: -18.5000057220459
    7. '<class' → logprob: -20.8750057220459
    8. 'property' → logprob: -21.3750057220459
    9. 'aclass' → logprob: -21.3750057220459
    10. '"class' → logprob: -22.0000057220459

Token 1495: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.049779102206230164
    2. '   ' → logprob: -3.049779176712036
    3. ' def' → logprob: -6.924778938293457
    4. '
' → logprob: -8.924778938293457
    5. '@' → logprob: -9.924778938293457
    6. '	def' → logprob: -11.049778938293457
    7. ' ' → logprob: -13.049778938293457
    8. '  ' → logprob: -13.174778938293457
    9. ':' → logprob: -13.299778938293457
    10. '```' → logprob: -13.674778938293457

Token 1496: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018245233222842216
    2. '   ' → logprob: -4.018245220184326
    3. ' def' → logprob: -9.393245697021484
    4. '
' → logprob: -12.268245697021484
    5. '@' → logprob: -12.643245697021484
    6. '	def' → logprob: -13.018245697021484
    7. ' ' → logprob: -14.393245697021484
    8. '  ' → logprob: -14.518245697021484
    9. ':' → logprob: -15.018245697021484
    10. ':def' → logprob: -16.143245697021484

Token 1497: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001246348983841017
    2. 'try' → logprob: -9.00012493133545
    3. ' def' → logprob: -14.00012493133545
    4. 'async' → logprob: -14.87512493133545
    5. '
' → logprob: -17.000123977661133
    6. '   ' → logprob: -17.250123977661133
    7. '  ' → logprob: -19.500123977661133
    8. '@' → logprob: -20.625123977661133
    9. '```' → logprob: -21.500123977661133
    10. '    
' → logprob: -21.625123977661133

Token 1498: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -2.176947600673884e-05
    2. ' try' → logprob: -10.750021934509277
    3. 'def' → logprob: -15.500021934509277
    4. '.try' → logprob: -19.00002098083496
    5. '_try' → logprob: -19.75002098083496
    6. '```' → logprob: -22.25002098083496
    7. 'Try' → logprob: -22.37502098083496
    8. '	try' → logprob: -22.37502098083496
    9. '
' → logprob: -22.50002098083496
    10. '  ' → logprob: -22.87502098083496

Token 1499: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -1.688212614681106e-05
    2. 'match' → logprob: -11.500017166137695
    3. '_' → logprob: -12.000017166137695
    4. '_try' → logprob: -16.375017166137695
    5. 'def' → logprob: -16.500017166137695
    6. '```' → logprob: -16.625017166137695
    7. '_
' → logprob: -16.750017166137695
    8. '_continue' → logprob: -17.000017166137695
    9. '_MATCH' → logprob: -17.125017166137695
    10. 'Match' → logprob: -17.250017166137695

Token 1500: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.463036435074173e-05
    2. 'cls' → logprob: -10.625024795532227
    3. ' (' → logprob: -16.500024795532227
    4. '   ' → logprob: -16.750024795532227
    5. ' cls' → logprob: -17.000024795532227
    6. 'classmethod' → logprob: -18.000024795532227
    7. '(cl' → logprob: -18.125024795532227
    8. '(' → logprob: -18.250024795532227
    9. '(clazz' → logprob: -18.250024795532227
    10. '(
' → logprob: -18.875024795532227

Token 1501: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0003567959647625685
    2. ',' → logprob: -8.250356674194336
    3. '(' → logprob: -10.250356674194336
    4. '   ' → logprob: -10.625356674194336
    5. 'cls' → logprob: -10.875356674194336
    6. '(points' → logprob: -12.125356674194336
    7. '       ' → logprob: -13.000356674194336
    8. '[' → logprob: -13.625356674194336
    9. '(
' → logprob: -13.625356674194336
    10. ')' → logprob: -14.000356674194336

Token 1502: ' points' (ID: 5571)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0007235141238197684
    2. 'points' → logprob: -7.250723361968994
    3. ' cls' → logprob: -11.375723838806152
    4. '(cls' → logprob: -13.625723838806152
    5. ' points' → logprob: -14.250723838806152
    6. 'class' → logprob: -16.250722885131836
    7. 'classmethod' → logprob: -17.250722885131836
    8. 'cl' → logprob: -17.750722885131836
    9. 'pts' → logprob: -18.500722885131836
    10. '.cls' → logprob: -18.750722885131836

Token 1503: ':' (ID: 25)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0024116847198456526
    2. '       ' → logprob: -6.752411842346191
    3. '   ' → logprob: -7.877411842346191
    4. 'if' → logprob: -8.002411842346191
    5. 'cls' → logprob: -8.502411842346191
    6. '(points' → logprob: -9.377411842346191
    7. ')' → logprob: -9.877411842346191
    8. ' if' → logprob: -10.002411842346191
    9. ',' → logprob: -10.252411842346191
    10. '           ' → logprob: -10.377411842346191

Token 1504: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.045538146048784256
    2. 'cls' → logprob: -3.1705381870269775
    3. 'set' → logprob: -7.045537948608398
    4. 'return' → logprob: -7.420537948608398
    5. ' Set' → logprob: -7.795537948608398
    6. 'points' → logprob: -8.170537948608398
    7. ' cls' → logprob: -9.170537948608398
    8. '(cls' → logprob: -9.170537948608398
    9. '_set' → logprob: -10.045537948608398
    10. 'True' → logprob: -10.795537948608398

Token 1505: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008976521901786327
    2. '(Point' → logprob: -5.258976459503174
    3. '(p' → logprob: -6.258976459503174
    4. '(points' → logprob: -6.633976459503174
    5. '<Point' → logprob: -9.008976936340332
    6. ')' → logprob: -9.133976936340332
    7. '[p' → logprob: -9.258976936340332
    8. '[
' → logprob: -9.883976936340332
    9. '(' → logprob: -9.883976936340332
    10. '(cls' → logprob: -11.133976936340332

Token 1506: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. ' Point' → logprob: -17.0
    3. '(Point' → logprob: -18.5
    4. '	Point' → logprob: -18.5
    5. '<Point' → logprob: -18.75
    6. 'p' → logprob: -19.5
    7. '.Point' → logprob: -19.625
    8. '_point' → logprob: -21.0
    9. '_Point' → logprob: -21.375
    10. 'int' → logprob: -21.5

Token 1507: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.167648876318708e-05
    2. '):' → logprob: -10.375041961669922
    3. '   ' → logprob: -12.250041961669922
    4. '):
' → logprob: -12.625041961669922
    5. '       ' → logprob: -13.750041961669922
    6. ' )' → logprob: -14.125041961669922
    7. ')
' → logprob: -15.750041961669922
    8. '()' → logprob: -16.375041961669922
    9. ':' → logprob: -17.250041961669922
    10. '      ' → logprob: -17.500041961669922

Token 1508: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05659254640340805
    2. '->' → logprob: -3.6815924644470215
    3. ')' → logprob: -4.1815924644470215
    4. ' ->' → logprob: -5.1815924644470215
    5. '       ' → logprob: -5.6815924644470215
    6. '   ' → logprob: -5.9315924644470215
    7. ':
' → logprob: -6.3065924644470215
    8. ':return' → logprob: -7.1815924644470215
    9. ')->' → logprob: -8.93159294128418
    10. '(cls' → logprob: -9.80659294128418

Token 1509: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0003357006062287837
    2. ' bool' → logprob: -8.000335693359375
    3. '<bool' → logprob: -16.625335693359375
    4. 'return' → logprob: -16.875335693359375
    5. '	bool' → logprob: -17.625335693359375
    6. '(bool' → logprob: -17.625335693359375
    7. 'Bool' → logprob: -18.875335693359375
    8. 'False' → logprob: -20.000335693359375
    9. 'def' → logprob: -20.125335693359375
    10. ' ' → logprob: -20.125335693359375

Token 1510: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051036953926086426
    2. ':
' → logprob: -3.051036834716797
    3. '       ' → logprob: -6.051036834716797
    4. '   ' → logprob: -10.301036834716797
    5. ':return' → logprob: -10.676036834716797
    6. '[' → logprob: -11.926036834716797
    7. '        ' → logprob: -12.426036834716797
    8. '           ' → logprob: -12.801036834716797
    9. '(cls' → logprob: -12.926036834716797
    10. '      ' → logprob: -13.051036834716797

Token 1511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: 0.0
    2. '           ' → logprob: -17.375
    3. ' if' → logprob: -17.625
    4. '      ' → logprob: -17.875
    5. '        ' → logprob: -18.25
    6. '```' → logprob: -18.25
    7. 'if' → logprob: -18.75
    8. '               ' → logprob: -18.75
    9. '   ' → logprob: -18.875
    10. '     ' → logprob: -19.375

Token 1512: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19273865222930908
    2. '       ' → logprob: -1.942738652229309
    3. ' if' → logprob: -3.4427385330200195
    4. '
' → logprob: -11.19273853302002
    5. 'return' → logprob: -15.44273853302002
    6. 'not' → logprob: -15.94273853302002
    7. '   ' → logprob: -15.94273853302002
    8. '@' → logprob: -16.442739486694336
    9. '           ' → logprob: -16.942739486694336
    10. 'If' → logprob: -16.942739486694336

Token 1513: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3868749439716339
    2. ' not' → logprob: -1.1368749141693115
    3. 'points' → logprob: -13.13687515258789
    4. '
' → logprob: -13.76187515258789
    5. '(not' → logprob: -15.38687515258789
    6. ' points' → logprob: -15.88687515258789
    7. '	not' → logprob: -15.88687515258789
    8. '!' → logprob: -16.13687515258789
    9. '   ' → logprob: -16.51187515258789
    10. ' ' → logprob: -16.63687515258789

Token 1514: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0022000980097800493
    2. ' points' → logprob: -6.127200126647949
    3. '(points' → logprob: -11.25220012664795
    4. 'bool' → logprob: -14.50220012664795
    5. 'point' → logprob: -14.87720012664795
    6. 'not' → logprob: -14.87720012664795
    7. 'cls' → logprob: -15.12720012664795
    8. '	points' → logprob: -15.75220012664795
    9. '
' → logprob: -16.627199172973633
    10. '.points' → logprob: -16.627199172973633

Token 1515: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5865281820297241
    2. ':' → logprob: -0.8365281820297241
    3. '           ' → logprob: -4.586528301239014
    4. '       ' → logprob: -8.211527824401855
    5. '):
' → logprob: -10.711527824401855
    6. ':

' → logprob: -11.836527824401855
    7. '   ' → logprob: -12.211527824401855
    8. ':return' → logprob: -12.211527824401855
    9. ':
' → logprob: -12.336527824401855
    10. ',' → logprob: -12.461527824401855

Token 1516: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12756241858005524
    2. '       ' → logprob: -2.1275625228881836
    3. 'False' → logprob: -8.002562522888184
    4. 'return' → logprob: -8.252562522888184
    5. ' return' → logprob: -11.627562522888184
    6. '         ' → logprob: -11.752562522888184
    7. '               ' → logprob: -12.127562522888184
    8. '        ' → logprob: -12.127562522888184
    9. ' False' → logprob: -12.877562522888184
    10. '   ' → logprob: -13.377562522888184

Token 1517: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10112785547971725
    2. ' return' → logprob: -2.351127862930298
    3. '       ' → logprob: -7.351127624511719
    4. '           ' → logprob: -8.226127624511719
    5. 'False' → logprob: -11.726127624511719
    6. '   ' → logprob: -14.226127624511719
    7. '
' → logprob: -14.351127624511719
    8. ':return' → logprob: -14.851127624511719
    9. '0' → logprob: -14.976127624511719
    10. '               ' → logprob: -14.976127624511719

Token 1518: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005234002135694027
    2. ' False' → logprob: -5.2552337646484375
    3. 'True' → logprob: -15.255233764648438
    4. '(False' → logprob: -17.380233764648438
    5. 'F' → logprob: -19.005233764648438
    6. '=False' → logprob: -19.255233764648438
    7. ' True' → logprob: -20.255233764648438
    8. '
' → logprob: -20.505233764648438
    9. '   ' → logprob: -20.755233764648438
    10. '_false' → logprob: -20.880233764648438

Token 1519: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.47495681833243e-05
    2. '
' → logprob: -10.625024795532227
    3. '           ' → logprob: -16.625024795532227
    4. ',' → logprob: -16.875024795532227
    5. '   ' → logprob: -17.000024795532227
    6. '
' → logprob: -17.875024795532227
    7. '      ' → logprob: -18.000024795532227
    8. '	' → logprob: -18.625024795532227
    9. 'return' → logprob: -19.000024795532227
    10. '     ' → logprob: -19.125024795532227

Token 1520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.127333340875339e-06
    2. '
' → logprob: -12.500003814697266
    3. '           ' → logprob: -16.125003814697266
    4. '   ' → logprob: -16.125003814697266
    5. 'return' → logprob: -18.000003814697266
    6. '      ' → logprob: -18.500003814697266
    7. '     ' → logprob: -18.500003814697266
    8. '               ' → logprob: -19.250003814697266
    9. 'import' → logprob: -19.625003814697266
    10. '	' → logprob: -19.750003814697266

Token 1521: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041220002458430827
    2. 'min' (adapté à ' min') → logprob: -8.125411987304688
    3. '
' → logprob: -9.125411987304688
    4. ' min' → logprob: -12.000411987304688
    5. '   ' → logprob: -14.125411987304688
    6. '           ' → logprob: -15.625411987304688
    7. '      ' → logprob: -17.000411987304688
    8. '	min' → logprob: -17.000411987304688
    9. '
' → logprob: -17.125411987304688
    10. '(min' → logprob: -17.750411987304688

Token 1522: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.05541126802563667
    2. '_' → logprob: -2.9304113388061523
    3. 'x' → logprob: -8.305411338806152
    4. '<|end|>' → logprob: -8.930411338806152
    5. '.' → logprob: -10.680411338806152
    6. '   ' → logprob: -10.805411338806152
    7. '_
' → logprob: -11.180411338806152
    8. '_tokens' → logprob: -11.680411338806152
    9. '_p' → logprob: -11.680411338806152
    10. ' _' → logprob: -11.930411338806152

Token 1523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324605919420719
    2. '=' → logprob: -3.7732460498809814
    3. ' is' → logprob: -15.398245811462402
    4. ' ' → logprob: -15.773245811462402
    5. '=min' → logprob: -16.02324676513672
    6. '   ' → logprob: -16.64824676513672
    7. ' =
' → logprob: -16.77324676513672
    8. '=
' → logprob: -17.02324676513672
    9. 'is' → logprob: -17.64824676513672
    10. '       ' → logprob: -17.89824676513672

Token 1524: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02975071594119072
    2. ' min' → logprob: -3.5297508239746094
    3. '(min' → logprob: -15.52975082397461
    4. '[min' → logprob: -17.40475082397461
    5. '=min' → logprob: -17.90475082397461
    6. 'max' → logprob: -18.02975082397461
    7. '	min' → logprob: -19.15475082397461
    8. 'minimum' → logprob: -19.27975082397461
    9. 'mini' → logprob: -19.52975082397461
    10. '_min' → logprob: -19.77975082397461

Token 1525: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00011284107313258573
    2. '(' → logprob: -9.125112533569336
    3. ' (' → logprob: -13.125112533569336
    4. 'p' → logprob: -13.375112533569336
    5. '(
' → logprob: -15.000112533569336
    6. '(points' → logprob: -17.125112533569336
    7. ' p' → logprob: -17.250112533569336
    8. '```' → logprob: -17.375112533569336
    9. '<|end|>' → logprob: -17.500112533569336
    10. '(P' → logprob: -18.625112533569336

Token 1526: '.x' (ID: 3700)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2735363841056824
    2. '.p' → logprob: -1.7735364437103271
    3. '.x' → logprob: -2.898536443710327
    4. 'for' → logprob: -4.398536205291748
    5. 'x' → logprob: -7.398536205291748
    6. ' for' → logprob: -7.523536205291748
    7. '(x' → logprob: -7.648536205291748
    8. '.' → logprob: -8.773536682128906
    9. 'p' → logprob: -9.148536682128906
    10. '(' → logprob: -9.148536682128906

Token 1527: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20141518115997314
    2. 'for' → logprob: -1.7014151811599731
    3. '(p' → logprob: -13.826415061950684
    4. ' in' → logprob: -15.576415061950684
    5. '	for' → logprob: -15.951415061950684
    6. '       ' → logprob: -16.076416015625
    7. '(for' → logprob: -16.201416015625
    8. '```' → logprob: -16.326416015625
    9. ')' → logprob: -16.576416015625
    10. '<|end|>' → logprob: -16.951416015625

Token 1528: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00020389800192788243
    2. ' p' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.62520408630371
    4. '
' → logprob: -16.62520408630371
    5. '	p' → logprob: -17.00020408630371
    6. 'points' → logprob: -17.12520408630371
    7. ' ' → logprob: -17.25020408630371
    8. '<p' → logprob: -17.25020408630371
    9. '(p' → logprob: -17.87520408630371
    10. 'point' → logprob: -18.12520408630371

Token 1529: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8926993608474731
    2. 'p' → logprob: -1.0176993608474731
    3. ' p' → logprob: -1.7676993608474731
    4. 'points' → logprob: -3.6426992416381836
    5. ' points' → logprob: -3.6426992416381836
    6. 'in' → logprob: -5.142699241638184
    7. '(points' → logprob: -10.392699241638184
    8. '.points' → logprob: -11.142699241638184
    9. 'point' → logprob: -11.767699241638184
    10. ' ' → logprob: -11.892699241638184

Token 1530: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.759734732331708e-05
    2. ' points' → logprob: -11.500017166137695
    3. 'p' → logprob: -12.000017166137695
    4. '(points' → logprob: -14.500017166137695
    5. '
' → logprob: -15.375017166137695
    6. 'oints' → logprob: -15.750017166137695
    7. 'point' → logprob: -15.750017166137695
    8. '.points' → logprob: -16.000017166137695
    9. '	points' → logprob: -16.625017166137695
    10. '[' → logprob: -18.125017166137695

Token 1531: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04094015061855316
    2. '       ' → logprob: -3.540940046310425
    3. ')' → logprob: -4.540940284729004
    4. 'for' → logprob: -7.790940284729004
    5. ' for' → logprob: -10.665940284729004
    6. ')
' → logprob: -11.665940284729004
    7. '),' → logprob: -11.915940284729004
    8. '           ' → logprob: -12.540940284729004
    9. '   ' → logprob: -13.540940284729004
    10. '        ' → logprob: -13.665940284729004

Token 1532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7120533811976202e-05
    2. ',' → logprob: -12.625017166137695
    3. 'min' → logprob: -12.625017166137695
    4. '           ' → logprob: -12.875017166137695
    5. ' min' → logprob: -13.125017166137695
    6. '               ' → logprob: -13.250017166137695
    7. '```' → logprob: -14.125017166137695
    8. '        ' → logprob: -14.375017166137695
    9. '      ' → logprob: -14.375017166137695
    10. '   ' → logprob: -14.875017166137695

Token 1533: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0022133004385977983
    2. ' min' → logprob: -6.502213478088379
    3. '       ' → logprob: -7.252213478088379
    4. '	min' → logprob: -14.252213478088379
    5. '(min' → logprob: -14.502213478088379
    6. '_min' → logprob: -15.377213478088379
    7. '```' → logprob: -15.627213478088379
    8. '[min' → logprob: -15.752213478088379
    9. '.min' → logprob: -16.002212524414062
    10. 'import' → logprob: -16.127212524414062

Token 1534: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.003929029684513807
    2. 'x' → logprob: -6.503929138183594
    3. '(p' → logprob: -6.878929138183594
    4. '<|end|>' → logprob: -7.503929138183594
    5. '_' → logprob: -7.628929138183594
    6. '<|end|>' → logprob: -8.753929138183594
    7. '_y' → logprob: -10.003929138183594
    8. '(' → logprob: -10.253929138183594
    9. '(x' → logprob: -10.753929138183594
    10. '```' → logprob: -10.753929138183594

Token 1535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07896480709314346
    2. '=' → logprob: -2.5789647102355957
    3. ' for' → logprob: -10.078965187072754
    4. 'for' → logprob: -10.953965187072754
    5. ' in' → logprob: -11.953965187072754
    6. '<|end|>' → logprob: -11.953965187072754
    7. 'in' → logprob: -13.953965187072754
    8. '=
' → logprob: -14.328965187072754
    9. ' =
' → logprob: -15.078965187072754
    10. '<|end|>' → logprob: -15.328965187072754

Token 1536: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.005234002135694027
    2. ' min' → logprob: -5.2552337646484375
    3. '(min' → logprob: -15.380233764648438
    4. '[min' → logprob: -17.005233764648438
    5. 'max' → logprob: -17.630233764648438
    6. '	min' → logprob: -18.630233764648438
    7. 'm' → logprob: -19.380233764648438
    8. 'minimum' → logprob: -19.630233764648438
    9. 'p' → logprob: -20.005233764648438
    10. '.min' → logprob: -20.380233764648438

Token 1537: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.054500666621607e-06
    2. 'p' → logprob: -12.87500286102295
    3. 'for' → logprob: -14.87500286102295
    4. ' p' → logprob: -17.375003814697266
    5. 'def' → logprob: -19.000003814697266
    6. '[p' → logprob: -19.125003814697266
    7. ' (' → logprob: -19.250003814697266
    8. '(' → logprob: -19.250003814697266
    9. '   ' → logprob: -19.625003814697266
    10. '<p' → logprob: -20.500003814697266

Token 1538: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.06857794523239136
    2. 'y' → logprob: -2.818578004837036
    3. 'for' → logprob: -5.318577766418457
    4. '.x' → logprob: -7.068577766418457
    5. '(p' → logprob: -8.193577766418457
    6. 'x' → logprob: -8.193577766418457
    7. ' for' → logprob: -9.193577766418457
    8. '.p' → logprob: -9.443577766418457
    9. ' in' → logprob: -10.693577766418457
    10. 'p' → logprob: -11.068577766418457

Token 1539: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12693609297275543
    2. ' for' → logprob: -2.126936197280884
    3. '(p' → logprob: -12.751935958862305
    4. 'in' → logprob: -12.876935958862305
    5. ' in' → logprob: -13.376935958862305
    6. '	for' → logprob: -15.626935958862305
    7. ')' → logprob: -15.626935958862305
    8. '(for' → logprob: -16.001935958862305
    9. '(' → logprob: -16.126935958862305
    10. '   ' → logprob: -16.501935958862305

Token 1540: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14288194477558136
    2. 'points' → logprob: -2.0178818702697754
    3. ' points' → logprob: -9.392882347106934
    4. '(p' → logprob: -9.892882347106934
    5. '(points' → logprob: -10.142882347106934
    6. ' p' → logprob: -10.642882347106934
    7. '[p' → logprob: -12.392882347106934
    8. 'point' → logprob: -12.767882347106934
    9. '.points' → logprob: -14.517882347106934
    10. '
' → logprob: -14.517882347106934

Token 1541: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.054887134581804276
    2. ' for' → logprob: -2.929887056350708
    3. 'in' → logprob: -13.554886817932129
    4. ' in' → logprob: -13.679886817932129
    5. '   ' → logprob: -14.679886817932129
    6. '	for' → logprob: -14.804886817932129
    7. ' ' → logprob: -14.929886817932129
    8. 'points' → logprob: -15.054886817932129
    9. '  ' → logprob: -16.054887771606445
    10. ')' → logprob: -16.304887771606445

Token 1542: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0005296798190101981
    2. '(points' → logprob: -7.875529766082764
    3. 'p' → logprob: -8.875529289245605
    4. ' points' → logprob: -12.500529289245605
    5. '(p' → logprob: -12.625529289245605
    6. '[p' → logprob: -13.625529289245605
    7. '.points' → logprob: -14.625529289245605
    8. 'point' → logprob: -14.750529289245605
    9. '
' → logprob: -15.250529289245605
    10. '	points' → logprob: -15.625529289245605

Token 1543: ')
' (ID: 446)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.764533519744873
    2. 'for' → logprob: -1.014533519744873
    3. '       ' → logprob: -1.764533519744873
    4. ')
' → logprob: -7.639533519744873
    5. ')' → logprob: -9.264533996582031
    6. '           ' → logprob: -11.139533996582031
    7. '
' → logprob: -12.014533996582031
    8. '   ' → logprob: -12.764533996582031
    9. '        ' → logprob: -12.889533996582031
    10. '	for' → logprob: -12.889533996582031

Token 1544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12948574125766754
    2. 'min' → logprob: -2.129485845565796
    3. ' min' → logprob: -6.129485607147217
    4. '```' → logprob: -9.004486083984375
    5. '=min' → logprob: -9.504486083984375
    6. ' =' → logprob: -9.629486083984375
    7. 'max' → logprob: -10.379486083984375
    8. '(min' → logprob: -10.504486083984375
    9. '[min' → logprob: -10.879486083984375
    10. '=' → logprob: -11.129486083984375

Token 1545: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0007106438861228526
    2. ' max' → logprob: -7.250710487365723
    3. '       ' → logprob: -14.625710487365723
    4. 'min' → logprob: -15.125710487365723
    5. '	max' → logprob: -18.87571144104004
    6. '(max' → logprob: -19.62571144104004
    7. '```' → logprob: -20.00071144104004
    8. '[max' → logprob: -20.25071144104004
    9. '_max' → logprob: -20.37571144104004
    10. 'maxlength' → logprob: -21.12571144104004

Token 1546: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.190178904333152e-05
    2. '(p' → logprob: -10.500031471252441
    3. 'x' → logprob: -13.375031471252441
    4. '_p' → logprob: -13.500031471252441
    5. '```' → logprob: -14.250031471252441
    6. '   ' → logprob: -15.250031471252441
    7. '_' → logprob: -16.000032424926758
    8. '(x' → logprob: -17.125032424926758
    9. '
' → logprob: -17.250032424926758
    10. '(' → logprob: -17.375032424926758

Token 1547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054247073829174
    2. '=' → logprob: -3.8955423831939697
    3. ' for' → logprob: -15.77054214477539
    4. '=
' → logprob: -16.52054214477539
    5. '<|end|>' → logprob: -16.52054214477539
    6. '=max' → logprob: -16.89554214477539
    7. '   ' → logprob: -16.89554214477539
    8. ')' → logprob: -17.02054214477539
    9. ' =
' → logprob: -17.14554214477539
    10. 'for' → logprob: -17.39554214477539

Token 1548: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004079112783074379
    2. ' max' → logprob: -5.504079341888428
    3. '(max' → logprob: -14.25407886505127
    4. '[max' → logprob: -17.254079818725586
    5. '	max' → logprob: -17.504079818725586
    6. '=max' → logprob: -17.629079818725586
    7. 'min' → logprob: -17.754079818725586
    8. '_max' → logprob: -18.629079818725586
    9. ' ' → logprob: -19.504079818725586
    10. '.max' → logprob: -19.629079818725586

Token 1549: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.68022444692906e-05
    2. '(max' → logprob: -10.625046730041504
    3. 'max' → logprob: -11.250046730041504
    4. 'p' → logprob: -11.625046730041504
    5. '(
' → logprob: -15.625046730041504
    6. '[p' → logprob: -16.25004768371582
    7. '(' → logprob: -16.62504768371582
    8. '```' → logprob: -16.62504768371582
    9. ' p' → logprob: -17.50004768371582
    10. '   ' → logprob: -18.00004768371582

Token 1550: '.x' (ID: 3700)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.28287774324417114
    2. '.x' → logprob: -1.5328776836395264
    3. 'x' → logprob: -3.5328776836395264
    4. '(x' → logprob: -7.0328779220581055
    5. '_x' → logprob: -8.407877922058105
    6. 'for' → logprob: -10.407877922058105
    7. '[p' → logprob: -10.532877922058105
    8. '.p' → logprob: -10.657877922058105
    9. '(max' → logprob: -11.157877922058105
    10. '$x' → logprob: -11.407877922058105

Token 1551: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17975278198719025
    2. ' for' → logprob: -1.8047528266906738
    3. ')' → logprob: -12.554752349853516
    4. '```' → logprob: -13.304752349853516
    5. '
' → logprob: -13.429752349853516
    6. '	for' → logprob: -15.054752349853516
    7. '(p' → logprob: -15.429752349853516
    8. '<|end|>' → logprob: -15.929752349853516
    9. '   ' → logprob: -16.179752349853516
    10. '       ' → logprob: -16.304752349853516

Token 1552: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.002812363440170884
    2. 'p' → logprob: -6.502812385559082
    3. '(points' → logprob: -6.877812385559082
    4. ' points' → logprob: -8.252812385559082
    5. '(p' → logprob: -11.627812385559082
    6. '	points' → logprob: -12.877812385559082
    7. 'for' → logprob: -13.127812385559082
    8. '.points' → logprob: -13.502812385559082
    9. '
' → logprob: -14.127812385559082
    10. ' p' → logprob: -14.377812385559082

Token 1553: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.006675947457551956
    2. ' points' → logprob: -5.256675720214844
    3. '(points' → logprob: -6.881675720214844
    4. 'oints' → logprob: -8.381675720214844
    5. '.points' → logprob: -9.131675720214844
    6. '	points' → logprob: -10.006675720214844
    7. 'in' → logprob: -11.131675720214844
    8. 'p' → logprob: -11.256675720214844
    9. ' in' → logprob: -13.006675720214844
    10. 'for' → logprob: -13.381675720214844

Token 1554: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00010485442908247933
    2. ' points' → logprob: -9.250104904174805
    3. '(points' → logprob: -12.000104904174805
    4. 'p' → logprob: -13.375104904174805
    5. '.points' → logprob: -14.750104904174805
    6. '
' → logprob: -15.375104904174805
    7. 'point' → logprob: -15.625104904174805
    8. '	points' → logprob: -15.750104904174805
    9. '[' → logprob: -17.000104904174805
    10. 'oints' → logprob: -17.375104904174805

Token 1555: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5541002750396729
    2. ' for' → logprob: -1.0541002750396729
    3. '       ' → logprob: -2.679100275039673
    4. ')' → logprob: -5.054100036621094
    5. ')
' → logprob: -6.304100036621094
    6. '),' → logprob: -10.429100036621094
    7. '   ' → logprob: -11.679100036621094
    8. '
' → logprob: -12.054100036621094
    9. ',' → logprob: -12.179100036621094
    10. '           ' → logprob: -12.179100036621094

Token 1556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018053477630019188
    2. 'max' → logprob: -4.1430535316467285
    3. ' max' → logprob: -6.5180535316467285
    4. ' and' → logprob: -8.39305305480957
    5. 'and' → logprob: -8.76805305480957
    6. '
' → logprob: -9.76805305480957
    7. '```' → logprob: -10.26805305480957
    8. ',' → logprob: -11.14305305480957
    9. '(max' → logprob: -11.39305305480957
    10. '=max' → logprob: -11.76805305480957

Token 1557: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.2015145868062973
    2. ' max' → logprob: -1.7015146017074585
    3. '       ' → logprob: -9.20151424407959
    4. '(max' → logprob: -15.82651424407959
    5. '_max' → logprob: -16.201515197753906
    6. '	max' → logprob: -16.451515197753906
    7. '
' → logprob: -16.701515197753906
    8. '.max' → logprob: -17.701515197753906
    9. '=max' → logprob: -17.701515197753906
    10. '[max' → logprob: -18.451515197753906

Token 1558: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.07896193861961365
    2. '_y' → logprob: -2.5789618492126465
    3. 'x' → logprob: -10.078962326049805
    4. '(p' → logprob: -10.953962326049805
    5. 'y' → logprob: -11.953962326049805
    6. 'Y' → logprob: -13.703962326049805
    7. 'p' → logprob: -13.828962326049805
    8. 'max' → logprob: -14.328962326049805
    9. '   ' → logprob: -14.453962326049805
    10. 'X' → logprob: -14.703962326049805

Token 1559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759432911872864
    2. ' =' → logprob: -0.8259432911872864
    3. '=max' → logprob: -12.575942993164062
    4. 'for' → logprob: -16.450942993164062
    5. '=min' → logprob: -16.700942993164062
    6. '   ' → logprob: -16.825942993164062
    7. ' for' → logprob: -16.950942993164062
    8. '=
' → logprob: -17.200942993164062
    9. 'max' → logprob: -17.325942993164062
    10. '=lambda' → logprob: -17.450942993164062

Token 1560: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0004891689168289304
    2. ' max' → logprob: -7.625489234924316
    3. 'min' → logprob: -14.000489234924316
    4. '(max' → logprob: -15.250489234924316
    5. '[max' → logprob: -17.62548828125
    6. '	max' → logprob: -18.75048828125
    7. '   ' → logprob: -19.00048828125
    8. '=max' → logprob: -19.25048828125
    9. '
' → logprob: -20.00048828125
    10. 'Max' → logprob: -20.25048828125

Token 1561: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.1782583391759545e-05
    2. 'p' → logprob: -10.625031471252441
    3. 'for' → logprob: -12.250031471252441
    4. '   ' → logprob: -14.750031471252441
    5. 'For' → logprob: -14.750031471252441
    6. '[p' → logprob: -15.125031471252441
    7. '```' → logprob: -15.625031471252441
    8. ' p' → logprob: -15.750031471252441
    9. '1' → logprob: -16.250032424926758
    10. '(' → logprob: -16.312532424926758

Token 1562: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.002173816319555044
    2. '(p' → logprob: -6.627173900604248
    3. '.p' → logprob: -7.252173900604248
    4. 'y' → logprob: -9.50217342376709
    5. '.x' → logprob: -10.62717342376709
    6. 'for' → logprob: -11.50217342376709
    7. '(y' → logprob: -12.12717342376709
    8. ' for' → logprob: -12.12717342376709
    9. 'p' → logprob: -12.25217342376709
    10. ' in' → logprob: -12.75217342376709

Token 1563: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.054184772074222565
    2. ' for' → logprob: -3.179184675216675
    3. '(p' → logprob: -4.554184913635254
    4. '(points' → logprob: -7.679184913635254
    5. 'points' → logprob: -9.179184913635254
    6. 'max' → logprob: -11.679184913635254
    7. '(for' → logprob: -12.179184913635254
    8. 'in' → logprob: -12.804184913635254
    9. '(max' → logprob: -12.804184913635254
    10. '
' → logprob: -13.179184913635254

Token 1564: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.11321092396974564
    2. 'points' → logprob: -2.238210916519165
    3. '(p' → logprob: -8.738210678100586
    4. ' p' → logprob: -9.238210678100586
    5. ' points' → logprob: -9.738210678100586
    6. '(points' → logprob: -10.863210678100586
    7. 'for' → logprob: -10.988210678100586
    8. 'point' → logprob: -11.238210678100586
    9. '[p' → logprob: -11.863210678100586
    10. 'Points' → logprob: -12.488210678100586

Token 1565: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.13393951952457428
    2. '(points' → logprob: -2.508939504623413
    3. 'for' → logprob: -3.633939504623413
    4. '.points' → logprob: -4.258939743041992
    5. ' points' → logprob: -6.383939743041992
    6. ' for' → logprob: -7.258939743041992
    7. '(p' → logprob: -7.758939743041992
    8. '	points' → logprob: -8.383939743041992
    9. 'in' → logprob: -8.758939743041992
    10. 'p' → logprob: -8.883939743041992

Token 1566: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00013929695705883205
    2. ' points' → logprob: -9.625139236450195
    3. '(points' → logprob: -9.750139236450195
    4. 'p' → logprob: -11.375139236450195
    5. 'max' → logprob: -13.875139236450195
    6. '
' → logprob: -14.125139236450195
    7. '	points' → logprob: -14.875139236450195
    8. 'for' → logprob: -15.375139236450195
    9. '.points' → logprob: -15.625139236450195
    10. '(p' → logprob: -15.875139236450195

Token 1567: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35542574524879456
    2. ')' → logprob: -1.3554257154464722
    3. ')
' → logprob: -3.7304258346557617
    4. '):
' → logprob: -4.230425834655762
    5. '):' → logprob: -6.230425834655762
    6. ')return' → logprob: -8.855425834655762
    7. ')>' → logprob: -8.980425834655762
    8. ':
' → logprob: -9.480425834655762
    9. '   ' → logprob: -10.230425834655762
    10. ':' → logprob: -10.230425834655762

Token 1568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3663626305060461e-05
    2. '=' → logprob: -12.25001335144043
    3. 'return' → logprob: -13.25001335144043
    4. ' =' → logprob: -13.50001335144043
    5. '```' → logprob: -13.50001335144043
    6. '==' → logprob: -13.62501335144043
    7. '           ' → logprob: -13.75001335144043
    8. '   ' → logprob: -15.12501335144043
    9. ':' → logprob: -15.12501335144043
    10. '      ' → logprob: -15.37501335144043

Token 1569: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5782389044761658
    2. 'return' (adapté à ' return') → logprob: -0.8282389044761658
    3. ' return' → logprob: -6.0782389640808105
    4. '   ' → logprob: -12.828238487243652
    5. '           ' → logprob: -14.203238487243652
    6. '	return' → logprob: -14.703238487243652
    7. '
' → logprob: -14.828238487243652
    8. ':return' → logprob: -15.078238487243652
    9. '      ' → logprob: -16.20323944091797
    10. ' ' → logprob: -16.57823944091797

Token 1570: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.029752222821116447
    2. ' cls' → logprob: -3.529752254486084
    3. '(cls' → logprob: -13.404751777648926
    4. 'class' → logprob: -16.529752731323242
    5. '   ' → logprob: -16.779752731323242
    6. '       ' → logprob: -17.029752731323242
    7. '.cls' → logprob: -17.029752731323242
    8. 'classmethod' → logprob: -17.529752731323242
    9. '_cls' → logprob: -17.529752731323242
    10. 'super' → logprob: -17.529752731323242

Token 1571: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.000344640837283805
    2. '.pattern' → logprob: -8.000344276428223
    3. 'match' → logprob: -11.875344276428223
    4. '.' → logprob: -13.500344276428223
    5. 'pattern' → logprob: -14.750344276428223
    6. '.matcher' → logprob: -15.750344276428223
    7. '.return' → logprob: -16.00034523010254
    8. '.matches' → logprob: -16.12534523010254
    9. '.MATCH' → logprob: -17.00034523010254
    10. '._' → logprob: -17.12534523010254

Token 1572: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00021974841365590692
    2. 'pattern' → logprob: -8.500219345092773
    3. 'Pattern' → logprob: -11.375219345092773
    4. 'cls' → logprob: -13.125219345092773
    5. '_' → logprob: -13.625219345092773
    6. '(cls' → logprob: -14.875219345092773
    7. '_class' → logprob: -15.250219345092773
    8. '_point' → logprob: -15.875219345092773
    9. '   ' → logprob: -16.000219345092773
    10. ' pattern' → logprob: -16.625219345092773

Token 1573: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.5048530030981055e-06
    2. 'points' → logprob: -13.500001907348633
    3. '	points' → logprob: -19.000001907348633
    4. '(parts' → logprob: -19.125001907348633
    5. '(' → logprob: -19.500001907348633
    6. '(
' → logprob: -19.750001907348633
    7. '(point' → logprob: -19.750001907348633
    8. ' points' → logprob: -20.125001907348633
    9. '```' → logprob: -21.500001907348633
    10. '.points' → logprob: -21.625001907348633

Token 1574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000829759519547224
    2. '(points' → logprob: -7.125829696655273
    3. 'points' → logprob: -10.875829696655273
    4. ' ,' → logprob: -13.250829696655273
    5. ' points' → logprob: -13.250829696655273
    6. '       ' → logprob: -14.250829696655273
    7. '   ' → logprob: -14.375829696655273
    8. '           ' → logprob: -14.625829696655273
    9. ',
' → logprob: -15.125829696655273
    10. ',p' → logprob: -15.250829696655273

Token 1575: ' min' (ID: 1349)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0007115975022315979
    2. 'min' → logprob: -7.375711441040039
    3. ' points' → logprob: -9.375711441040039
    4. 'max' → logprob: -15.875711441040039
    5. ' min' → logprob: -16.25071144104004
    6. 'point' → logprob: -17.25071144104004
    7. '(points' → logprob: -18.00071144104004
    8. '	points' → logprob: -18.37571144104004
    9. '       ' → logprob: -18.50071144104004
    10. 'pts' → logprob: -18.62571144104004

Token 1576: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00027456742827780545
    2. 'x' → logprob: -8.500274658203125
    3. '(p' → logprob: -9.625274658203125
    4. 'p' → logprob: -13.250274658203125
    5. '[p' → logprob: -14.125274658203125
    6. '```' → logprob: -15.000274658203125
    7. 'X' → logprob: -15.250274658203125
    8. '(' → logprob: -15.250274658203125
    9. '_' → logprob: -15.375274658203125
    10. '[' → logprob: -15.750274658203125

Token 1577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011915886716451496
    2. ',p' → logprob: -9.12511920928955
    3. ' ,' → logprob: -12.37511920928955
    4. ',min' → logprob: -13.12511920928955
    5. ',
' → logprob: -13.50011920928955
    6. '   ' → logprob: -14.25011920928955
    7. '(p' → logprob: -14.87511920928955
    8. '=' → logprob: -15.25011920928955
    9. '       ' → logprob: -15.37511920928955
    10. '```' → logprob: -15.87511920928955

Token 1578: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.676292231422849e-05
    2. ' min' → logprob: -11.000017166137695
    3. '[min' → logprob: -17.750017166137695
    4. '(min' → logprob: -18.875017166137695
    5. '_min' → logprob: -19.250017166137695
    6. '	min' → logprob: -19.500017166137695
    7. 'max' → logprob: -19.875017166137695
    8. 'minimum' → logprob: -20.000017166137695
    9. '=min' → logprob: -20.625017166137695
    10. '
' → logprob: -20.875017166137695

Token 1579: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.006758709903806448
    2. 'y' → logprob: -5.006758689880371
    3. '_x' → logprob: -11.381758689880371
    4. '(p' → logprob: -11.381758689880371
    5. 'Y' → logprob: -11.506758689880371
    6. 'p' → logprob: -12.631758689880371
    7. ',' → logprob: -13.131758689880371
    8. 'x' → logprob: -14.006758689880371
    9. 'min' → logprob: -14.006758689880371
    10. ',y' → logprob: -14.381758689880371

Token 1580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4259644558478612e-05
    2. ',max' → logprob: -11.375014305114746
    3. 'max' → logprob: -13.375014305114746
    4. ' ,' → logprob: -13.750014305114746
    5. '       ' → logprob: -17.25001335144043
    6. ',
' → logprob: -17.62501335144043
    7. '   ' → logprob: -18.00001335144043
    8. '(max' → logprob: -18.37501335144043
    9. '[max' → logprob: -18.75001335144043
    10. '```' → logprob: -19.00001335144043

Token 1581: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00012356207298580557
    2. ' max' → logprob: -9.000123977661133
    3. '(max' → logprob: -17.625123977661133
    4. '_max' → logprob: -18.125123977661133
    5. '[max' → logprob: -18.500123977661133
    6. '	max' → logprob: -19.375123977661133
    7. 'min' → logprob: -20.250123977661133
    8. '   ' → logprob: -20.250123977661133
    9. ',max' → logprob: -20.500123977661133
    10. '       ' → logprob: -20.500123977661133

Token 1582: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.456358823925257e-05
    2. 'max' → logprob: -10.125064849853516
    3. 'x' → logprob: -11.000064849853516
    4. 'X' → logprob: -12.500064849853516
    5. '_max' → logprob: -13.250064849853516
    6. '(max' → logprob: -14.375064849853516
    7. '_' → logprob: -15.250064849853516
    8. '_y' → logprob: -15.250064849853516
    9. '```' → logprob: -15.375064849853516
    10. 'Max' → logprob: -15.750064849853516

Token 1583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018792471382766962
    2. ',p' → logprob: -9.000187873840332
    3. ' ,' → logprob: -9.875187873840332
    4. 'for' → logprob: -12.125187873840332
    5. ',
' → logprob: -12.875187873840332
    6. ',max' → logprob: -13.375187873840332
    7. ' for' → logprob: -13.750187873840332
    8. '       ' → logprob: -14.125187873840332
    9. ',min' → logprob: -14.750187873840332
    10. '   ' → logprob: -15.250187873840332

Token 1584: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.000913370808120817
    2. ' max' → logprob: -7.250913143157959
    3. 'min' → logprob: -8.500913619995117
    4. ' min' → logprob: -16.500913619995117
    5. '(max' → logprob: -17.500913619995117
    6. '
' → logprob: -17.875913619995117
    7. '   ' → logprob: -18.375913619995117
    8. '[max' → logprob: -18.500913619995117
    9. '	max' → logprob: -19.250913619995117
    10. '       ' → logprob: -19.500913619995117

Token 1585: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.19579824805259705
    2. ',' → logprob: -2.44579815864563
    3. 'max' → logprob: -2.57079815864563
    4. '_,' → logprob: -5.445798397064209
    5. ',max' → logprob: -5.695798397064209
    6. '_max' → logprob: -5.695798397064209
    7. 'min' → logprob: -6.695798397064209
    8. '_x' → logprob: -7.320798397064209
    9. '   ' → logprob: -8.32079792022705
    10. 'y' → logprob: -8.44579792022705

Token 1586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. '(points' → logprob: -11.87501335144043
    3. ' ,' → logprob: -13.12501335144043
    4. 'points' → logprob: -13.50001335144043
    5. '       ' → logprob: -13.75001335144043
    6. ',p' → logprob: -14.00001335144043
    7. ',
' → logprob: -15.25001335144043
    8. ' points' → logprob: -15.50001335144043
    9. '   ' → logprob: -17.00001335144043
    10. '           ' → logprob: -17.00001335144043

Token 1587: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0010186368599534035
    2. 'max' → logprob: -7.001018524169922
    3. ' cls' → logprob: -9.251018524169922
    4. 'pattern' → logprob: -12.501018524169922
    5. 'points' → logprob: -12.751018524169922
    6. 'class' → logprob: -12.876018524169922
    7. 'min' → logprob: -14.376018524169922
    8. ' max' → logprob: -14.626018524169922
    9. '(cls' → logprob: -14.626018524169922
    10. 'cl' → logprob: -15.001018524169922

Token 1588: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.40921589732170105
    2. ',' → logprob: -1.4092159271240234
    3. 'pattern' → logprob: -2.4092159271240234
    4. '(pattern' → logprob: -6.784215927124023
    5. '.points' → logprob: -8.534215927124023
    6. ',p' → logprob: -8.909215927124023
    7. 'points' → logprob: -10.659215927124023
    8. ' pattern' → logprob: -10.784215927124023
    9. ')' → logprob: -10.909215927124023
    10. '_pattern' → logprob: -11.034215927124023

Token 1589: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1590: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.2246291337069124e-05
    2. '
' → logprob: -10.750021934509277
    3. ' class' → logprob: -15.000021934509277
    4. '#' → logprob: -15.125021934509277
    5. '   ' → logprob: -16.375022888183594
    6. 'classmethod' → logprob: -17.250022888183594
    7. '<class' → logprob: -17.625022888183594
    8. '@' → logprob: -17.625022888183594
    9. 'clas' → logprob: -18.000022888183594
    10. '_class' → logprob: -18.625022888183594

Token 1591: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.00014180023572407663
    2. ' Digit' → logprob: -8.875142097473145
    3. 'Character' → logprob: -13.875142097473145
    4. 'class' → logprob: -14.625142097473145
    5. 'Digital' → logprob: -15.375142097473145
    6. '5' → logprob: -15.750142097473145
    7. 'digit' → logprob: -17.000141143798828
    8. 'Dot' → logprob: -17.625141143798828
    9. '_digit' → logprob: -17.625141143798828
    10. 'Point' → logprob: -17.625141143798828

Token 1592: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. '৫' → logprob: -19.0
    3. 'Five' → logprob: -19.375
    4. '۵' → logprob: -19.375
    5. 'five' → logprob: -19.5
    6. '٥' → logprob: -19.625
    7. ' ' → logprob: -19.75
    8. '५' → logprob: -19.875
    9. '
' → logprob: -20.125
    10. '５' → logprob: -20.125

Token 1593: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: 0.0
    2. 'Character' → logprob: -17.625
    3. '<Character' → logprob: -18.0
    4. '(Class' → logprob: -19.5
    5. '(' → logprob: -20.625
    6. '(Char' → logprob: -22.0
    7. '(character' → logprob: -22.0
    8. '(
' → logprob: -22.125
    9. '.Character' → logprob: -22.125
    10. '(class' → logprob: -23.375

Token 1594: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08102309703826904
    2. '   ' → logprob: -2.9560232162475586
    3. '):' → logprob: -3.8310232162475586
    4. ':
' → logprob: -6.081023216247559
    5. '(Character' → logprob: -6.456023216247559
    6. 'class' → logprob: -9.331023216247559
    7. ':' → logprob: -9.956023216247559
    8. ')' → logprob: -10.706023216247559
    9. '(pattern' → logprob: -10.956023216247559
    10. 'pattern' → logprob: -11.081023216247559

Token 1595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16962377727031708
    2. 'pattern' → logprob: -2.044623851776123
    3. 'class' → logprob: -4.169623851776123
    4. 'Character' → logprob: -5.794623851776123
    5. '):
' → logprob: -5.919623851776123
    6. ' pattern' → logprob: -6.419623851776123
    7. ':
' → logprob: -6.544623851776123
    8. '(pattern' → logprob: -7.169623851776123
    9. '```' → logprob: -7.794623851776123
    10. '(Character' → logprob: -8.919623374938965

Token 1596: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -1.9361264946837764e-07
    2. ' pattern' → logprob: -16.5
    3. '   ' → logprob: -17.0
    4. 'class' → logprob: -24.875
    5. '.pattern' → logprob: -25.125
    6. '
' → logprob: -25.375
    7. 'patterns' → logprob: -25.5
    8. 'pat' → logprob: -25.5
    9. ' ' → logprob: -25.5
    10. '```' → logprob: -25.875

Token 1597: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07895808666944504
    2. '=' → logprob: -2.578958034515381
    3. '   ' → logprob: -9.703958511352539
    4. '=[
' → logprob: -12.203958511352539
    5. '[
' → logprob: -14.828958511352539
    6. '  ' → logprob: -14.953958511352539
    7. '```' → logprob: -15.203958511352539
    8. '=[' → logprob: -15.203958511352539
    9. ' ' → logprob: -15.328958511352539
    10. ':' → logprob: -15.453958511352539

Token 1598: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.000321995816193521
    2. '[' → logprob: -8.750322341918945
    3. ' [
' → logprob: -8.750322341918945
    4. '   ' → logprob: -12.250322341918945
    5. ' [' → logprob: -15.625322341918945
    6. '=[
' → logprob: -16.500322341918945
    7. ' ' → logprob: -17.500322341918945
    8. '["' → logprob: -18.500322341918945
    9. '  ' → logprob: -18.625322341918945
    10. '([
' → logprob: -19.000322341918945

Token 1599: '       ' (ID: 309)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.22365985810756683
    2. '       ' → logprob: -1.723659873008728
    3. '[' → logprob: -4.348659992218018
    4. '   ' → logprob: -4.723659992218018
    5. '"' → logprob: -8.97365951538086
    6. ' [
' → logprob: -9.97365951538086
    7. '["' → logprob: -11.72365951538086
    8. '           ' → logprob: -12.97365951538086
    9. '     ' → logprob: -13.09865951538086
    10. ' ' → logprob: -13.09865951538086

Token 1600: ' "' (ID: 392)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.25254926085472107
    2. '"' (adapté à ' "') → logprob: -1.5025492906570435
    3. '[' → logprob: -7.752549171447754
    4. '   ' → logprob: -9.377549171447754
    5. '       ' → logprob: -9.627549171447754
    6. '["' → logprob: -10.502549171447754
    7. '111' → logprob: -11.502549171447754
    8. ' ' → logprob: -14.127549171447754
    9. '{
' → logprob: -15.002549171447754
    10. '"class' → logprob: -15.377549171447754

Token 1601: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.10025477409362793
    2. '"' → logprob: -2.350254774093628
    3. '[
' → logprob: -10.100255012512207
    4. '110' → logprob: -12.975255012512207
    5. ''' → logprob: -13.600255012512207
    6. '[' → logprob: -14.350255012512207
    7. '"""' → logprob: -14.350255012512207
    8. ' ' → logprob: -14.350255012512207
    9. '   ' → logprob: -14.600255012512207
    10. '["' → logprob: -15.225255012512207

Token 1602: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.026577545329928398
    2. '",' → logprob: -3.6515774726867676
    3. '       ' → logprob: -9.526577949523926
    4. '",
' → logprob: -9.526577949523926
    5. '   ' → logprob: -9.901577949523926
    6. '"' → logprob: -10.151577949523926
    7. '","' → logprob: -10.526577949523926
    8. '',
' → logprob: -12.026577949523926
    9. '[
' → logprob: -12.401577949523926
    10. '111' → logprob: -14.026577949523926

Token 1603: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013423142023384571
    2. '"' → logprob: -4.513422966003418
    3. '           ' → logprob: -6.138422966003418
    4. '[
' → logprob: -8.888422966003418
    5. '[' → logprob: -10.388422966003418
    6. '   ' → logprob: -10.513422966003418
    7. '               ' → logprob: -12.013422966003418
    8. '"class' → logprob: -12.138422966003418
    9. ' ' → logprob: -13.263422966003418
    10. '      ' → logprob: -13.763422966003418

Token 1604: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -2.069664333248511e-05
    2. '100' → logprob: -10.875020980834961
    3. ''' → logprob: -13.875020980834961
    4. '   ' → logprob: -15.125020980834961
    5. '101' → logprob: -16.12502098083496
    6. ' ' → logprob: -16.12502098083496
    7. ' "' → logprob: -17.12502098083496
    8. '110' → logprob: -17.25002098083496
    9. '       ' → logprob: -17.75002098083496
    10. '"
' → logprob: -17.87502098083496

Token 1605: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -2.6776029699249193e-05
    2. ''' → logprob: -11.12502670288086
    3. '"' → logprob: -11.50002670288086
    4. '`' → logprob: -14.75002670288086
    5. '101' → logprob: -14.75002670288086
    6. '""' → logprob: -15.00002670288086
    7. '```' → logprob: -15.12502670288086
    8. '"""' → logprob: -15.37502670288086
    9. '``' → logprob: -15.62502670288086
    10. '"""
' → logprob: -17.12502670288086

Token 1606: '",
' (ID: 1150)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008383385138586164
    2. '"' → logprob: -7.375838279724121
    3. '   ' → logprob: -8.875838279724121
    4. '           ' → logprob: -10.750838279724121
    5. '[
' → logprob: -10.875838279724121
    6. '[' → logprob: -11.750838279724121
    7. '      ' → logprob: -12.500838279724121
    8. ' ' → logprob: -12.625838279724121
    9. ''' → logprob: -12.625838279724121
    10. '     ' → logprob: -13.125838279724121

Token 1608: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0003488129877950996
    2. '       ' → logprob: -8.375349044799805
    3. '111' → logprob: -9.125349044799805
    4. '   ' → logprob: -12.875349044799805
    5. ' "' → logprob: -13.250349044799805
    6. ''' → logprob: -13.375349044799805
    7. ' ' → logprob: -13.500349044799805
    8. '"class' → logprob: -14.000349044799805
    9. '```' → logprob: -14.750349044799805
    10. '	' → logprob: -15.750349044799805

Token 1609: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.0380457378923893
    2. '"' → logprob: -3.288045644760132
    3. '100' → logprob: -13.538045883178711
    4. ''' → logprob: -13.538045883178711
    5. ' ' → logprob: -14.288045883178711
    6. '110' → logprob: -14.288045883178711
    7. '101' → logprob: -16.03804588317871
    8. '"class' → logprob: -16.53804588317871
    9. '   ' → logprob: -16.78804588317871
    10. '```' → logprob: -16.91304588317871

Token 1610: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.15946894884109497
    2. '",' → logprob: -2.15946888923645
    3. '"' → logprob: -3.65946888923645
    4. '       ' → logprob: -5.909469127655029
    5. '   ' → logprob: -6.909469127655029
    6. '[
' → logprob: -7.159469127655029
    7. '","' → logprob: -8.034468650817871
    8. '",
' → logprob: -8.159468650817871
    9. '',
' → logprob: -8.284468650817871
    10. '<|end|>' → logprob: -8.284468650817871

Token 1611: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0789705365896225
    2. '       ' → logprob: -2.578970432281494
    3. '   ' → logprob: -9.953970909118652
    4. '           ' → logprob: -11.328970909118652
    5. '100' → logprob: -11.703970909118652
    6. ''' → logprob: -12.703970909118652
    7. '"class' → logprob: -12.703970909118652
    8. ' ' → logprob: -13.203970909118652
    9. '               ' → logprob: -13.578970909118652
    10. '        ' → logprob: -14.203970909118652

Token 1612: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0010410251561552286
    2. '       ' → logprob: -7.001040935516357
    3. '[
' → logprob: -9.376041412353516
    4. '100' → logprob: -10.751041412353516
    5. '   ' → logprob: -11.501041412353516
    6. '["' → logprob: -12.126041412353516
    7. '[' → logprob: -12.376041412353516
    8. ' ' → logprob: -13.751041412353516
    9. ' "' → logprob: -14.126041412353516
    10. '           ' → logprob: -14.126041412353516

Token 1613: '001' (ID: 7659)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7394888401031494
    2. '"' → logprob: -1.2394888401031494
    3. '001' → logprob: -1.4894888401031494
    4. '101' → logprob: -4.98948860168457
    5. ''' → logprob: -7.61448860168457
    6. '010' → logprob: -8.23948860168457
    7. '011' → logprob: -10.61448860168457
    8. ' ' → logprob: -11.23948860168457
    9. ' "' → logprob: -12.73948860168457
    10. '
' → logprob: -12.86448860168457

Token 1614: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.32661616802215576
    2. '",' → logprob: -1.3266161680221558
    3. '   ' → logprob: -5.076616287231445
    4. '       ' → logprob: -5.576616287231445
    5. '",
' → logprob: -6.951616287231445
    6. '","' → logprob: -7.201616287231445
    7. '"' → logprob: -7.201616287231445
    8. '           ' → logprob: -8.576616287231445
    9. '',
' → logprob: -8.951616287231445
    10. '[
' → logprob: -9.451616287231445

Token 1615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006383875850588083
    2. '           ' → logprob: -5.131383895874023
    3. '"' → logprob: -8.631383895874023
    4. '   ' → logprob: -8.881383895874023
    5. '               ' → logprob: -9.506383895874023
    6. '[
' → logprob: -10.131383895874023
    7. '[' → logprob: -11.256383895874023
    8. ' ' → logprob: -12.881383895874023
    9. '      ' → logprob: -13.381383895874023
    10. '     ' → logprob: -13.631383895874023

Token 1616: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0015856742393225431
    2. ' "' → logprob: -6.751585483551025
    3. '       ' → logprob: -8.126585960388184
    4. '111' → logprob: -10.001585960388184
    5. '   ' → logprob: -10.751585960388184
    6. ' ' → logprob: -11.001585960388184
    7. '"class' → logprob: -11.001585960388184
    8. ''' → logprob: -11.251585960388184
    9. '```' → logprob: -13.376585960388184
    10. '	' → logprob: -13.501585960388184

Token 1617: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.009813226759433746
    2. '"' → logprob: -4.63481330871582
    3. ''' → logprob: -9.88481330871582
    4. ' ' → logprob: -13.38481330871582
    5. '```' → logprob: -13.75981330871582
    6. '"""' → logprob: -14.00981330871582
    7. '110' → logprob: -14.13481330871582
    8. '   ' → logprob: -14.63481330871582
    9. ''''' → logprob: -15.00981330871582
    10. '
' → logprob: -15.25981330871582

Token 1618: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05069286748766899
    2. '"' → logprob: -3.0506927967071533
    3. '"
' → logprob: -6.175693035125732
    4. ']' → logprob: -11.925692558288574
    5. '       ' → logprob: -12.300692558288574
    6. '"]' → logprob: -12.425692558288574
    7. '```' → logprob: -12.800692558288574
    8. 'class' → logprob: -13.175692558288574
    9. ''' → logprob: -13.300692558288574
    10. '"class' → logprob: -14.300692558288574

Token 1619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.575563020305708e-05
    2. ']' → logprob: -10.875065803527832
    3. '
' → logprob: -11.000065803527832
    4. 'class' → logprob: -11.625065803527832
    5. '[
' → logprob: -11.625065803527832
    6. ']
' → logprob: -12.000065803527832
    7. '"' → logprob: -13.500065803527832
    8. '  ' → logprob: -13.625065803527832
    9. ',' → logprob: -14.125065803527832
    10. ' ' → logprob: -14.250065803527832

Token 1620: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003832445072475821
    2. '
' → logprob: -8.125383377075195
    3. 'class' → logprob: -9.750383377075195
    4. ']' → logprob: -11.500383377075195
    5. ']
' (adapté à ' ]
') → logprob: -11.875383377075195
    6. ' ' → logprob: -12.875383377075195
    7. '  ' → logprob: -13.000383377075195
    8. '```' → logprob: -13.500383377075195
    9. '"' → logprob: -13.875383377075195
    10. '[
' → logprob: -14.125383377075195

Token 1621: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06345520913600922
    2. 'class' → logprob: -2.938455104827881
    3. 'char' → logprob: -5.313455104827881
    4. '
' → logprob: -6.063455104827881
    5. ' class' → logprob: -7.813455104827881
    6. ' char' → logprob: -7.938455104827881
    7. ':
' → logprob: -8.688455581665039
    8. ':' → logprob: -9.188455581665039
    9. '```' → logprob: -9.188455581665039
    10. ' ' → logprob: -10.438455581665039

Token 1622: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.010069712065160275
    2. ' char' → logprob: -4.760069847106934
    3. '   ' → logprob: -6.635069847106934
    4. '
' → logprob: -9.385069847106934
    5. 'class' → logprob: -10.760069847106934
    6. '_char' → logprob: -11.260069847106934
    7. 'pattern' → logprob: -12.135069847106934
    8. '.char' → logprob: -12.135069847106934
    9. '@' → logprob: -12.635069847106934
    10. '<char' → logprob: -13.010069847106934

Token 1623: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -6.659005157416686e-05
    2. 'repr' → logprob: -10.250066757202148
    3. 'char' → logprob: -10.500066757202148
    4. '   ' → logprob: -13.375066757202148
    5. '_rep' → logprob: -13.625066757202148
    6. '@' → logprob: -15.125066757202148
    7. 'class' → logprob: -15.250066757202148
    8. 'represent' → logprob: -16.25006675720215
    9. '_char' → logprob: -16.87506675720215
    10. '
' → logprob: -16.87506675720215

Token 1624: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859543219208717
    2. ' =' → logprob: -3.048595428466797
    3. '='' → logprob: -11.923595428466797
    4. ' ='' → logprob: -14.048595428466797
    5. '   ' → logprob: -15.673595428466797
    6. ':' → logprob: -15.798595428466797
    7. ' ' → logprob: -16.298595428466797
    8. ''' → logprob: -16.548595428466797
    9. '=
' → logprob: -16.798595428466797
    10. ''=' → logprob: -17.298595428466797

Token 1625: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5451681974809617e-05
    2. '5' → logprob: -11.375015258789062
    3. '"' → logprob: -13.125015258789062
    4. ' '' → logprob: -13.250015258789062
    5. '`' → logprob: -16.875015258789062
    6. ''S' → logprob: -16.875015258789062
    7. '('' → logprob: -18.500015258789062
    8. ''f' → logprob: -19.375015258789062
    9. ' ' → logprob: -19.500015258789062
    10. 'f' → logprob: -19.500015258789062

Token 1626: '5' (ID: 20)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006716436706483364
    2. '5' → logprob: -5.006716251373291
    3. '"' → logprob: -13.88171672821045
    4. ' '' → logprob: -16.631715774536133
    5. '`' → logprob: -17.381715774536133
    6. ' ' → logprob: -19.506715774536133
    7. '''' → logprob: -20.131715774536133
    8. '('' → logprob: -20.131715774536133
    9. '’' → logprob: -20.506715774536133
    10. '='' → logprob: -20.881715774536133

Token 1627: ''

' (ID: 7497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008894991129636765
    2. '
' → logprob: -4.758894920349121
    3. '@' → logprob: -9.133894920349121
    4. 'class' → logprob: -9.133894920349121
    5. '    
' → logprob: -11.383894920349121
    6. ':' → logprob: -11.508894920349121
    7. '  ' → logprob: -11.758894920349121
    8. ' ' → logprob: -12.008894920349121
    9. '```' → logprob: -12.383894920349121
    10. '    ' → logprob: -12.633894920349121

Token 1628: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007084041368216276
    2. '   ' → logprob: -5.007083892822266
    3. 'class' → logprob: -8.132083892822266
    4. '
' → logprob: -10.382083892822266
    5. '@' → logprob: -10.757083892822266
    6. '    
' → logprob: -12.007083892822266
    7. '

' → logprob: -12.132083892822266
    8. ' class' → logprob: -12.882083892822266
    9. '```' → logprob: -12.882083892822266
    10. 'classmethod' → logprob: -13.507083892822266

Token 1629: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -1.5570885807392187e-05
    2. '   ' → logprob: -11.875015258789062
    3. ' @' → logprob: -12.125015258789062
    4. '
' → logprob: -13.125015258789062
    5. '@class' → logprob: -14.375015258789062
    6. 'class' → logprob: -15.375015258789062
    7. 'classmethod' → logprob: -16.250015258789062
    8. '@click' → logprob: -16.875015258789062
    9. '```' → logprob: -17.375015258789062
    10. '@
' → logprob: -17.500015258789062

Token 1630: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -7.896309739408025e-07
    2. '@' → logprob: -14.750000953674316
    3. 'class' → logprob: -15.250000953674316
    4. 'staticmethod' → logprob: -16.25
    5. '@class' → logprob: -23.25
    6. 'property' → logprob: -23.625
    7. '<class' → logprob: -25.25
    8. 'aclass' → logprob: -25.625
    9. '@dat' → logprob: -25.75
    10. ' class' → logprob: -26.125

Token 1631: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14743375778198242
    2. 'def' → logprob: -2.0224337577819824
    3. ' def' → logprob: -5.397433757781982
    4. ':' → logprob: -9.52243423461914
    5. '@' → logprob: -9.89743423461914
    6. '  ' → logprob: -10.27243423461914
    7. '
' → logprob: -11.14743423461914
    8. ' ' → logprob: -11.27243423461914
    9. '	def' → logprob: -11.39743423461914
    10. '    ' → logprob: -11.52243423461914

Token 1632: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1675996482372284
    2. '   ' → logprob: -1.9175996780395508
    3. ' def' → logprob: -4.917599678039551
    4. '@' → logprob: -11.04259967803955
    5. '
' → logprob: -12.16759967803955
    6. '  ' → logprob: -12.54259967803955
    7. '	def' → logprob: -13.04259967803955
    8. ' ' → logprob: -13.29259967803955
    9. '    ' → logprob: -13.41759967803955
    10. ':' → logprob: -14.54259967803955

Token 1633: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.512236498361744e-07
    2. 'try' → logprob: -14.500000953674316
    3. ' def' → logprob: -16.75
    4. 'async' → logprob: -19.5
    5. '   ' → logprob: -20.375
    6. '
' → logprob: -21.875
    7. '	def' → logprob: -22.625
    8. '`' → logprob: -23.0
    9. '```' → logprob: -23.0
    10. '  ' → logprob: -23.5

Token 1634: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.9361264946837764e-07
    2. ' try' → logprob: -15.75
    3. 'def' → logprob: -17.25
    4. '.try' → logprob: -20.875
    5. '_try' → logprob: -23.0
    6. '	try' → logprob: -25.0
    7. 'Try' → logprob: -25.375
    8. '```' → logprob: -25.5
    9. '   ' → logprob: -25.75
    10. '  ' → logprob: -26.0

Token 1635: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -6.749814019713085e-06
    2. 'match' → logprob: -12.125006675720215
    3. '_' → logprob: -13.625006675720215
    4. '_m' → logprob: -17.62500762939453
    5. 'def' → logprob: -17.62500762939453
    6. '_mat' → logprob: -17.62500762939453
    7. '```' → logprob: -17.62500762939453
    8. '_MATCH' → logprob: -17.87500762939453
    9. 'Match' → logprob: -18.00000762939453
    10. ' match' → logprob: -18.25000762939453

Token 1636: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.7848862373502925e-05
    2. 'cls' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.000028610229492
    4. ' cls' → logprob: -17.500028610229492
    5. 'classmethod' → logprob: -17.875028610229492
    6. ' (' → logprob: -18.125028610229492
    7. '@' → logprob: -18.625028610229492
    8. 'class' → logprob: -18.625028610229492
    9. '.cls' → logprob: -18.875028610229492
    10. 'def' → logprob: -19.375028610229492

Token 1637: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0007435183506458998
    2. ',' → logprob: -7.375743389129639
    3. '   ' → logprob: -9.500743865966797
    4. '(' → logprob: -10.500743865966797
    5. 'cls' → logprob: -12.500743865966797
    6. ' (' → logprob: -12.625743865966797
    7. '(self' → logprob: -13.125743865966797
    8. '       ' → logprob: -13.625743865966797
    9. '@' → logprob: -14.000743865966797
    10. '(
' → logprob: -14.125743865966797

Token 1638: ' points' (ID: 5571)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0019472026033326983
    2. 'points' → logprob: -6.251947402954102
    3. ' cls' → logprob: -11.001947402954102
    4. ' points' → logprob: -13.876947402954102
    5. 'cl' → logprob: -14.501947402954102
    6. 'class' → logprob: -14.876947402954102
    7. '(cls' → logprob: -15.751947402954102
    8. 'cs' → logprob: -17.6269474029541
    9. 'classmethod' → logprob: -18.0019474029541
    10. 'pts' → logprob: -18.1269474029541

Token 1639: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3736635446548462
    2. ':' → logprob: -1.9986635446548462
    3. '   ' → logprob: -2.3736634254455566
    4. '           ' → logprob: -2.8736634254455566
    5. 'if' → logprob: -5.123663425445557
    6. '(cls' → logprob: -5.123663425445557
    7. '==' → logprob: -5.623663425445557
    8. '(points' → logprob: -6.373663425445557
    9. '=' → logprob: -6.748663425445557
    10. '        ' → logprob: -6.998663425445557

Token 1640: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.023719988763332367
    2. 'set' → logprob: -3.8987200260162354
    3. ' Set' → logprob: -6.648719787597656
    4. 'cls' → logprob: -6.773719787597656
    5. ' set' → logprob: -8.023719787597656
    6. '_set' → logprob: -8.273719787597656
    7. '[' → logprob: -9.273719787597656
    8. '(Set' → logprob: -11.648719787597656
    9. ')' → logprob: -12.023719787597656
    10. 'def' → logprob: -12.023719787597656

Token 1641: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008733942173421383
    2. '(p' → logprob: -5.133733749389648
    3. '(Point' → logprob: -6.133733749389648
    4. ')' → logprob: -8.508733749389648
    5. '(' → logprob: -9.008733749389648
    6. '(points' → logprob: -9.258733749389648
    7. '[p' → logprob: -9.633733749389648
    8. ':' → logprob: -9.758733749389648
    9. '<Point' → logprob: -10.258733749389648
    10. 'def' → logprob: -11.508733749389648

Token 1642: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. ' Point' → logprob: -17.25
    3. '(Point' → logprob: -19.25
    4. '...' → logprob: -19.375
    5. '	Point' → logprob: -19.375
    6. '<Point' → logprob: -19.875
    7. '.Point' → logprob: -19.875
    8. ')' → logprob: -20.375
    9. 'p' → logprob: -20.75
    10. '[' → logprob: -20.875

Token 1643: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. '):' → logprob: -13.000004768371582
    3. '):
' → logprob: -13.625004768371582
    4. '   ' → logprob: -14.250004768371582
    5. ' )' → logprob: -14.625004768371582
    6. '       ' → logprob: -15.500004768371582
    7. ')
' → logprob: -18.0000057220459
    8. '()' → logprob: -18.6250057220459
    9. '      ' → logprob: -19.0000057220459
    10. '))' → logprob: -19.5000057220459

Token 1644: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7394822239875793
    2. '->' → logprob: -0.7394822239875793
    3. ' ->' → logprob: -3.2394821643829346
    4. '   ' → logprob: -6.114482402801514
    5. '       ' → logprob: -6.114482402801514
    6. ':
' → logprob: -6.864482402801514
    7. ')' → logprob: -7.989482402801514
    8. ':return' → logprob: -8.614481925964355
    9. 'def' → logprob: -10.239481925964355
    10. ')->' → logprob: -11.739481925964355

Token 1645: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0005538671393878758
    2. ' bool' → logprob: -7.500554084777832
    3. 'True' → logprob: -14.375554084777832
    4. 'False' → logprob: -15.125554084777832
    5. '	bool' → logprob: -17.750553131103516
    6. '   ' → logprob: -18.000553131103516
    7. 'return' → logprob: -18.000553131103516
    8. '<bool' → logprob: -18.000553131103516
    9. '(bool' → logprob: -18.250553131103516
    10. ' ' → logprob: -18.500553131103516

Token 1646: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5512648224830627
    2. ':
' → logprob: -1.176264762878418
    3. '       ' → logprob: -2.176264762878418
    4. '   ' → logprob: -6.551264762878418
    5. ':return' → logprob: -8.551264762878418
    6. '      ' → logprob: -9.801264762878418
    7. '           ' → logprob: -9.926264762878418
    8. 'def' → logprob: -10.301264762878418
    9. '(cls' → logprob: -10.676264762878418
    10. '     ' → logprob: -10.801264762878418

Token 1647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.704273118884885e-07
    2. ' if' → logprob: -15.375000953674316
    3. '      ' → logprob: -16.25
    4. '   ' → logprob: -16.75
    5. '           ' → logprob: -16.875
    6. '        ' → logprob: -16.875
    7. '     ' → logprob: -17.25
    8. 'if' → logprob: -17.5
    9. '    ' → logprob: -17.875
    10. '```' → logprob: -18.625

Token 1648: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0591161735355854
    2. '       ' → logprob: -3.0591161251068115
    3. ' if' → logprob: -4.559116363525391
    4. '@' → logprob: -13.80911636352539
    5. '
' → logprob: -14.55911636352539
    6. 'not' → logprob: -15.30911636352539
    7. '@if' → logprob: -15.30911636352539
    8. '   ' → logprob: -16.05911636352539
    9. 'return' → logprob: -16.18411636352539
    10. 'cls' → logprob: -16.43411636352539

Token 1649: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16022585332393646
    2. 'not' → logprob: -1.9102258682250977
    3. '(not' → logprob: -14.410225868225098
    4. '
' → logprob: -14.910225868225098
    5. 'n' → logprob: -15.035225868225098
    6. '	not' → logprob: -15.410225868225098
    7. 'points' → logprob: -16.03522491455078
    8. 'Not' → logprob: -17.53522491455078
    9. '```' → logprob: -17.66022491455078
    10. 'len' → logprob: -17.91022491455078

Token 1650: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00019018957391381264
    2. ' points' → logprob: -8.625189781188965
    3. '(points' → logprob: -11.875189781188965
    4. 'bool' → logprob: -13.375189781188965
    5. 'not' → logprob: -14.250189781188965
    6. 'cls' → logprob: -14.500189781188965
    7. 'point' → logprob: -14.500189781188965
    8. 'p' → logprob: -16.00019073486328
    9. '	points' → logprob: -16.50019073486328
    10. '
' → logprob: -17.00019073486328

Token 1651: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2644820809364319
    2. ':
' → logprob: -1.514482021331787
    3. '           ' → logprob: -4.389482021331787
    4. '       ' → logprob: -10.889482498168945
    5. ':
' → logprob: -11.014482498168945
    6. '         ' → logprob: -12.389482498168945
    7. ',' → logprob: -12.389482498168945
    8. ':

' → logprob: -12.514482498168945
    9. ':return' → logprob: -12.514482498168945
    10. '):
' → logprob: -12.639482498168945

Token 1652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01217807736247778
    2. 'False' → logprob: -4.51217794418335
    3. ' False' → logprob: -7.38717794418335
    4. '       ' → logprob: -7.63717794418335
    5. '               ' → logprob: -11.637178421020508
    6. 'return' → logprob: -12.137178421020508
    7. '         ' → logprob: -12.137178421020508
    8. '          ' → logprob: -12.762178421020508
    9. 'True' → logprob: -13.512178421020508
    10. '        ' → logprob: -13.637178421020508

Token 1653: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5365896821022034
    2. 'False' → logprob: -1.0365896224975586
    3. ' return' → logprob: -3.0365896224975586
    4. '       ' → logprob: -4.786589622497559
    5. ' False' → logprob: -5.786589622497559
    6. '           ' → logprob: -6.786589622497559
    7. '   ' → logprob: -10.661589622497559
    8. '        ' → logprob: -11.161589622497559
    9. 'True' → logprob: -11.661589622497559
    10. 'Return' → logprob: -12.161589622497559

Token 1654: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7848862373502925e-05
    2. ' False' → logprob: -10.500027656555176
    3. 'True' → logprob: -15.500027656555176
    4. '(False' → logprob: -20.375028610229492
    5. 'F' → logprob: -21.750028610229492
    6. '   ' → logprob: -23.125028610229492
    7. '=False' → logprob: -23.250028610229492
    8. '```' → logprob: -23.625028610229492
    9. '
' → logprob: -23.750028610229492
    10. 'false' → logprob: -23.875028610229492

Token 1655: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003837213444057852
    2. '
' → logprob: -7.8753838539123535
    3. ',' → logprob: -13.125383377075195
    4. '	' → logprob: -14.875383377075195
    5. '           ' → logprob: -15.000383377075195
    6. '        
' → logprob: -15.500383377075195
    7. '
' → logprob: -15.625383377075195
    8. '   ' → logprob: -15.875383377075195
    9. '               ' → logprob: -16.500383377075195
    10. 'return' → logprob: -16.750383377075195

Token 1656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5451681974809617e-05
    2. '
' → logprob: -11.250015258789062
    3. '           ' → logprob: -13.875015258789062
    4. '	' → logprob: -14.875015258789062
    5. ' return' → logprob: -14.875015258789062
    6. 'return' → logprob: -15.125015258789062
    7. '               ' → logprob: -15.750015258789062
    8. '   ' → logprob: -16.125015258789062
    9. '
' → logprob: -16.750015258789062
    10. '	   ' → logprob: -17.250015258789062

Token 1657: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3873661756515503
    2. 'min' (adapté à ' min') → logprob: -1.1373661756515503
    3. ' min' → logprob: -7.63736629486084
    4. '   ' → logprob: -11.88736629486084
    5. '
' → logprob: -12.51236629486084
    6. '           ' → logprob: -13.76236629486084
    7. '	min' → logprob: -13.76236629486084
    8. '(min' → logprob: -16.137365341186523
    9. '[min' → logprob: -16.887365341186523
    10. 'return' → logprob: -17.012365341186523

Token 1658: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0028775110840797424
    2. '_' → logprob: -5.877877712249756
    3. 'x' → logprob: -10.502877235412598
    4. '_p' → logprob: -11.002877235412598
    5. '   ' → logprob: -11.377877235412598
    6. '```' → logprob: -12.377877235412598
    7. '       ' → logprob: -13.377877235412598
    8. '_
' → logprob: -13.377877235412598
    9. ')_' → logprob: -14.002877235412598
    10. ' _' → logprob: -14.002877235412598

Token 1659: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759409070014954
    2. '=' → logprob: -0.8259409070014954
    3. '   ' → logprob: -14.07594108581543
    4. '=
' → logprob: -14.70094108581543
    5. ' ' → logprob: -16.07594108581543
    6. ' =
' → logprob: -16.20094108581543
    7. '=min' → logprob: -17.32594108581543
    8. '=

' → logprob: -18.20094108581543
    9. ')' → logprob: -18.32594108581543
    10. '=}' → logprob: -18.45094108581543

Token 1660: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002475777640938759
    2. ' min' → logprob: -6.002475738525391
    3. 'max' → logprob: -16.50247573852539
    4. '(min' → logprob: -18.37747573852539
    5. 'mini' → logprob: -19.00247573852539
    6. '[min' → logprob: -19.37747573852539
    7. '	min' → logprob: -19.62747573852539
    8. 'minimum' → logprob: -19.62747573852539
    9. '=min' → logprob: -19.62747573852539
    10. '_min' → logprob: -21.25247573852539

Token 1661: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.512236498361744e-07
    2. 'p' → logprob: -15.125000953674316
    3. '(' → logprob: -15.250000953674316
    4. ' (' → logprob: -18.125
    5. '(
' → logprob: -18.75
    6. '(points' → logprob: -18.75
    7. ' p' → logprob: -18.875
    8. '(point' → logprob: -20.0
    9. '```' → logprob: -20.0
    10. '<|end|>' → logprob: -20.25

Token 1662: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0006052182870917022
    2. 'x' → logprob: -8.000605583190918
    3. '(x' → logprob: -8.750605583190918
    4. '.p' → logprob: -9.625605583190918
    5. '(p' → logprob: -10.250605583190918
    6. 'for' → logprob: -12.250605583190918
    7. '.' → logprob: -13.250605583190918
    8. ' .' → logprob: -13.625605583190918
    9. ' x' → logprob: -14.375605583190918
    10. ' for' → logprob: -14.625605583190918

Token 1663: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12692862749099731
    2. 'for' → logprob: -2.1269285678863525
    3. '	for' → logprob: -14.626928329467773
    4. ')' → logprob: -17.001928329467773
    5. '.for' → logprob: -17.001928329467773
    6. '
' → logprob: -17.126928329467773
    7. '```' → logprob: -17.376928329467773
    8. 'or' → logprob: -17.751928329467773
    9. ' ' → logprob: -17.876928329467773
    10. '   ' → logprob: -18.251928329467773

Token 1664: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.829823102336377e-05
    2. ' p' → logprob: -9.25009822845459
    3. '(p' → logprob: -13.62509822845459
    4. '
' → logprob: -15.62509822845459
    5. '[p' → logprob: -15.62509822845459
    6. 'points' → logprob: -15.87509822845459
    7. '   ' → logprob: -16.500099182128906
    8. 'point' → logprob: -16.500099182128906
    9. 'for' → logprob: -16.625099182128906
    10. '<p' → logprob: -16.625099182128906

Token 1665: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16092270612716675
    2. ' p' → logprob: -1.9109227657318115
    3. ' in' → logprob: -7.285922527313232
    4. '(p' → logprob: -12.53592300415039
    5. 'in' → logprob: -12.78592300415039
    6. 'x' → logprob: -13.03592300415039
    7. 'points' → logprob: -13.53592300415039
    8. '.p' → logprob: -13.91092300415039
    9. '	p' → logprob: -14.78592300415039
    10. ' points' → logprob: -15.03592300415039

Token 1666: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00013810492237098515
    2. 'p' → logprob: -9.000138282775879
    3. '(points' → logprob: -11.875138282775879
    4. ' points' → logprob: -12.000138282775879
    5. 'point' → logprob: -14.500138282775879
    6. '.points' → logprob: -14.875138282775879
    7. '	points' → logprob: -15.375138282775879
    8. '
' → logprob: -16.000137329101562
    9. 'oints' → logprob: -16.500137329101562
    10. '[p' → logprob: -17.375137329101562

Token 1667: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21099236607551575
    2. ' for' → logprob: -1.9609923362731934
    3. '       ' → logprob: -3.2109923362731934
    4. ')' → logprob: -4.960992336273193
    5. ')
' → logprob: -6.210992336273193
    6. '),' → logprob: -10.085992813110352
    7. '           ' → logprob: -10.085992813110352
    8. ',' → logprob: -10.460992813110352
    9. '
' → logprob: -11.085992813110352
    10. '               ' → logprob: -11.460992813110352

Token 1668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.842555426876061e-06
    2. '```' → logprob: -12.875004768371582
    3. '               ' → logprob: -14.250004768371582
    4. '           ' → logprob: -14.625004768371582
    5. ',' → logprob: -14.625004768371582
    6. '   ' → logprob: -15.750004768371582
    7. '        ' → logprob: -16.3750057220459
    8. '      ' → logprob: -16.3750057220459
    9. 'import' → logprob: -17.3750057220459
    10. ' ' → logprob: -17.3750057220459

Token 1669: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.06256157159805298
    2. '       ' → logprob: -2.812561511993408
    3. ' min' → logprob: -7.437561511993408
    4. 'max' → logprob: -13.187561988830566
    5. '	min' → logprob: -13.687561988830566
    6. '           ' → logprob: -14.187561988830566
    7. '```' → logprob: -14.312561988830566
    8. '(min' → logprob: -15.312561988830566
    9. '[min' → logprob: -15.312561988830566
    10. '   ' → logprob: -16.18756103515625

Token 1670: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -8.923874702304602e-05
    2. 'y' → logprob: -10.000089645385742
    3. '_x' → logprob: -10.125089645385742
    4. '(p' → logprob: -14.000089645385742
    5. '```' → logprob: -14.000089645385742
    6. 'Y' → logprob: -14.000089645385742
    7. 'import' → logprob: -14.625089645385742
    8. '   ' → logprob: -15.875089645385742
    9. 'from' → logprob: -16.500089645385742
    10. '.y' → logprob: -16.625089645385742

Token 1671: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014361321926117
    2. '=' → logprob: -1.701436161994934
    3. ' for' → logprob: -11.201436042785645
    4. 'for' → logprob: -11.826436042785645
    5. '=
' → logprob: -14.701436042785645
    6. '=p' → logprob: -15.076436042785645
    7. ' =
' → logprob: -15.326436042785645
    8. '   ' → logprob: -15.451436042785645
    9. ' ' → logprob: -15.701436042785645
    10. ')' → logprob: -15.701436042785645

Token 1672: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0019289902411401272
    2. ' min' → logprob: -6.251928806304932
    3. '(min' → logprob: -15.87692928314209
    4. 'max' → logprob: -16.001928329467773
    5. '[min' → logprob: -16.251928329467773
    6. '=min' → logprob: -19.126928329467773
    7. '	min' → logprob: -19.501928329467773
    8. '_min' → logprob: -19.626928329467773
    9. '.min' → logprob: -20.126928329467773
    10. 'minimum' → logprob: -20.251928329467773

Token 1673: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.001330360071733594
    2. 'p' → logprob: -6.626330375671387
    3. ' p' → logprob: -12.501330375671387
    4. '```' → logprob: -15.876330375671387
    5. 'min' → logprob: -16.12632942199707
    6. '   ' → logprob: -16.12632942199707
    7. ' (' → logprob: -16.50132942199707
    8. '[p' → logprob: -16.62632942199707
    9. 'for' → logprob: -16.75132942199707
    10. '(' → logprob: -17.50132942199707

Token 1674: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.05419053137302399
    2. 'p' → logprob: -3.0541906356811523
    3. 'y' → logprob: -6.054190635681152
    4. 'x' → logprob: -6.054190635681152
    5. '.p' → logprob: -7.179190635681152
    6. '[p' → logprob: -10.179190635681152
    7. '```' → logprob: -10.804190635681152
    8. ' p' → logprob: -10.929190635681152
    9. 'for' → logprob: -11.929190635681152
    10. '<p' → logprob: -11.929190635681152

Token 1675: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20141489803791046
    2. 'for' → logprob: -1.701414942741394
    3. ' in' → logprob: -14.701415061950684
    4. '=' → logprob: -15.201415061950684
    5. '	for' → logprob: -15.326415061950684
    6. '(p' → logprob: -15.451415061950684
    7. ')' → logprob: -16.076414108276367
    8. '```' → logprob: -16.076414108276367
    9. '.for' → logprob: -16.326414108276367
    10. 'in' → logprob: -16.951414108276367

Token 1676: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003498746082186699
    2. '(p' → logprob: -5.753498554229736
    3. ' p' → logprob: -8.128499031066895
    4. 'points' → logprob: -10.753499031066895
    5. '[p' → logprob: -13.628499031066895
    6. '
' → logprob: -14.128499031066895
    7. 'point' → logprob: -14.253499031066895
    8. 'for' → logprob: -14.753499031066895
    9. '<p' → logprob: -15.003499031066895
    10. '(points' → logprob: -15.253499031066895

Token 1677: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00899447314441204
    2. '.y' → logprob: -5.6339945793151855
    3. '.x' → logprob: -5.7589945793151855
    4. '(p' → logprob: -7.3839945793151855
    5. 'x' → logprob: -7.6339945793151855
    6. 'in' → logprob: -7.8839945793151855
    7. ' p' → logprob: -8.258994102478027
    8. '.p' → logprob: -8.258994102478027
    9. 'y' → logprob: -9.133994102478027
    10. 'p' → logprob: -10.633994102478027

Token 1678: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0018196473829448223
    2. 'p' → logprob: -6.501819610595703
    3. '(points' → logprob: -8.501819610595703
    4. ' points' → logprob: -9.251819610595703
    5. '(p' → logprob: -11.751819610595703
    6. '.points' → logprob: -12.001819610595703
    7. '[p' → logprob: -13.376819610595703
    8. ' p' → logprob: -13.751819610595703
    9. '	points' → logprob: -14.501819610595703
    10. 'oints' → logprob: -14.876819610595703

Token 1679: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3313380777835846
    2. 'for' → logprob: -1.3313380479812622
    3. ' for' → logprob: -4.081337928771973
    4. ')
' → logprob: -7.206337928771973
    5. ')' → logprob: -8.331337928771973
    6. '           ' → logprob: -11.456337928771973
    7. '
' → logprob: -11.456337928771973
    8. '```' → logprob: -12.081337928771973
    9. '   ' → logprob: -12.581337928771973
    10. ',' → logprob: -12.706337928771973

Token 1680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020818933262489736
    2. '```' → logprob: -9.000207901000977
    3. 'min' → logprob: -9.625207901000977
    4. 'max' → logprob: -11.875207901000977
    5. ' min' → logprob: -12.125207901000977
    6. '``' → logprob: -13.250207901000977
    7. '           ' → logprob: -13.750207901000977
    8. '               ' → logprob: -14.375207901000977
    9. 'import' → logprob: -14.750207901000977
    10. '
' → logprob: -15.000207901000977

Token 1681: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0002615742268972099
    2. ' max' → logprob: -8.250261306762695
    3. 'min' → logprob: -15.875261306762695
    4. '       ' → logprob: -16.000261306762695
    5. '	max' → logprob: -20.250261306762695
    6. '(max' → logprob: -21.000261306762695
    7. '_max' → logprob: -21.875261306762695
    8. 'maximum' → logprob: -22.625261306762695
    9. '[max' → logprob: -22.750261306762695
    10. '   ' → logprob: -22.875261306762695

Token 1682: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -8.65707261255011e-06
    2. '(p' → logprob: -12.000008583068848
    3. 'x' → logprob: -13.750008583068848
    4. '_p' → logprob: -13.875008583068848
    5. '```' → logprob: -15.625008583068848
    6. '   ' → logprob: -16.000009536743164
    7. '(x' → logprob: -17.000009536743164
    8. 'def' → logprob: -17.750009536743164
    9. '_code' → logprob: -17.875009536743164
    10. '_max' → logprob: -18.125009536743164

Token 1683: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815006136894226
    2. '=' → logprob: -4.0181498527526855
    3. '   ' → logprob: -15.893150329589844
    4. '=max' → logprob: -16.768150329589844
    5. '```' → logprob: -18.143150329589844
    6. ' ' → logprob: -18.643150329589844
    7. 'for' → logprob: -18.893150329589844
    8. '       ' → logprob: -19.018150329589844
    9. '=min' → logprob: -19.143150329589844
    10. '    ' → logprob: -19.643150329589844

Token 1684: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009115827269852161
    2. ' max' → logprob: -7.000911712646484
    3. '(max' → logprob: -17.000911712646484
    4. '[max' → logprob: -19.750911712646484
    5. '=max' → logprob: -19.750911712646484
    6. '_max' → logprob: -19.875911712646484
    7. 'min' → logprob: -20.375911712646484
    8. '	max' → logprob: -20.500911712646484
    9. '.max' → logprob: -22.000911712646484
    10. ',max' → logprob: -22.000911712646484

Token 1685: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00026205103495158255
    2. 'p' → logprob: -8.250262260437012
    3. ' p' → logprob: -15.375262260437012
    4. 'max' → logprob: -15.625262260437012
    5. '[p' → logprob: -16.125261306762695
    6. '(max' → logprob: -16.250261306762695
    7. '(
' → logprob: -17.750261306762695
    8. 'token' → logprob: -18.375261306762695
    9. 'x' → logprob: -18.375261306762695
    10. '(point' → logprob: -18.375261306762695

Token 1686: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.7184792757034302
    2. '(p' → logprob: -0.9684792757034302
    3. 'x' → logprob: -2.0934791564941406
    4. '(x' → logprob: -4.968479156494141
    5. '.p' → logprob: -6.968479156494141
    6. 'p' → logprob: -7.093479156494141
    7. 'for' → logprob: -7.718479156494141
    8. '```' → logprob: -8.34347915649414
    9. '[p' → logprob: -9.84347915649414
    10. '(' → logprob: -10.71847915649414

Token 1687: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024794621858745813
    2. ' for' → logprob: -6.002479553222656
    3. '(p' → logprob: -12.627479553222656
    4. ')' → logprob: -15.252479553222656
    5. '(for' → logprob: -16.377479553222656
    6. '	for' → logprob: -17.127479553222656
    7. '```' → logprob: -17.127479553222656
    8. '[p' → logprob: -17.377479553222656
    9. '
' → logprob: -17.502479553222656
    10. '   ' → logprob: -18.252479553222656

Token 1688: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015500946901738644
    2. ' p' → logprob: -6.501550197601318
    3. 'points' → logprob: -10.00154972076416
    4. '(p' → logprob: -13.25154972076416
    5. 'point' → logprob: -15.00154972076416
    6. ' points' → logprob: -15.12654972076416
    7. '[p' → logprob: -17.376550674438477
    8. '.p' → logprob: -17.876550674438477
    9. ' in' → logprob: -18.251550674438477
    10. '(points' → logprob: -18.376550674438477

Token 1689: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.009938823990523815
    2. '(points' → logprob: -5.259938716888428
    3. '.points' → logprob: -5.509938716888428
    4. 'for' → logprob: -7.634938716888428
    5. ' points' → logprob: -9.009939193725586
    6. '	points' → logprob: -10.259939193725586
    7. 'in' → logprob: -12.509939193725586
    8. 'p' → logprob: -13.384939193725586
    9. ' for' → logprob: -14.259939193725586
    10. ' in' → logprob: -14.884939193725586

Token 1690: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -2.2127087504486553e-05
    2. '(points' → logprob: -11.125021934509277
    3. ' points' → logprob: -12.375021934509277
    4. 'p' → logprob: -13.000021934509277
    5. '.points' → logprob: -15.375021934509277
    6. '
' → logprob: -15.625021934509277
    7. '	points' → logprob: -16.000022888183594
    8. 'point' → logprob: -16.375022888183594
    9. '[' → logprob: -17.250022888183594
    10. 'max' → logprob: -17.375022888183594

Token 1691: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38547244668006897
    2. ')
' → logprob: -1.6354724168777466
    3. 'for' → logprob: -2.135472536087036
    4. ')' → logprob: -5.385472297668457
    5. ' for' → logprob: -6.135472297668457
    6. '           ' → logprob: -10.510472297668457
    7. '   ' → logprob: -11.010472297668457
    8. '               ' → logprob: -11.760472297668457
    9. ')
' → logprob: -12.260472297668457
    10. 'max' → logprob: -12.260472297668457

Token 1692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008620307198725641
    2. 'max' → logprob: -7.125862121582031
    3. ' max' → logprob: -10.750862121582031
    4. '
' → logprob: -11.125862121582031
    5. 'and' → logprob: -11.875862121582031
    6. ' and' → logprob: -12.250862121582031
    7. '      ' → logprob: -13.500862121582031
    8. '=max' → logprob: -13.500862121582031
    9. '        ' → logprob: -13.625862121582031
    10. ',' → logprob: -14.000862121582031

Token 1693: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0010699660051614046
    2. ' max' → logprob: -7.001070022583008
    3. '       ' → logprob: -8.751070022583008
    4. '
' → logprob: -16.376070022583008
    5. '	max' → logprob: -17.376070022583008
    6. '(max' → logprob: -18.501070022583008
    7. '0' → logprob: -18.626070022583008
    8. '_max' → logprob: -18.626070022583008
    9. '   ' → logprob: -18.876070022583008
    10. 'min' → logprob: -19.376070022583008

Token 1694: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.082895273109898e-05
    2. 'y' → logprob: -10.750030517578125
    3. '_x' → logprob: -11.625030517578125
    4. 'Y' → logprob: -16.125030517578125
    5. '[' → logprob: -17.000030517578125
    6. '```' → logprob: -17.500030517578125
    7. '-y' → logprob: -18.125030517578125
    8. '
' → logprob: -18.500030517578125
    9. '_' → logprob: -18.500030517578125
    10. '#' → logprob: -18.500030517578125

Token 1695: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868730664253235
    2. '=' → logprob: -1.1368730068206787
    3. '=max' → logprob: -13.636873245239258
    4. 'max' → logprob: -15.136873245239258
    5. 'for' → logprob: -15.636873245239258
    6. ' for' → logprob: -16.136873245239258
    7. '   ' → logprob: -16.136873245239258
    8. ')' → logprob: -16.636873245239258
    9. '=
' → logprob: -16.886873245239258
    10. '=p' → logprob: -17.511873245239258

Token 1696: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00020354038861114532
    2. ' max' → logprob: -8.500203132629395
    3. 'min' → logprob: -17.00020408630371
    4. '(max' → logprob: -17.12520408630371
    5. '	max' → logprob: -20.50020408630371
    6. '[max' → logprob: -20.62520408630371
    7. '=max' → logprob: -21.12520408630371
    8. 'p' → logprob: -21.87520408630371
    9. '_max' → logprob: -22.25020408630371
    10. '   ' → logprob: -23.00020408630371

Token 1697: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.8074162653647363e-05
    2. 'p' → logprob: -11.500018119812012
    3. 'max' → logprob: -12.875018119812012
    4. '(max' → logprob: -13.125018119812012
    5. ' p' → logprob: -14.375018119812012
    6. '   ' → logprob: -14.500018119812012
    7. '[p' → logprob: -14.625018119812012
    8. 'for' → logprob: -15.000018119812012
    9. '```' → logprob: -15.375018119812012
    10. '(
' → logprob: -15.500018119812012

Token 1698: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.06422397494316101
    2. '(p' → logprob: -3.0642240047454834
    3. '.p' → logprob: -4.314223766326904
    4. 'y' → logprob: -6.939223766326904
    5. '.x' → logprob: -7.189223766326904
    6. 'p' → logprob: -8.439224243164062
    7. '[p' → logprob: -9.064224243164062
    8. '[' → logprob: -10.689224243164062
    9. '_y' → logprob: -11.064224243164062
    10. '(' → logprob: -11.689224243164062

Token 1699: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013088586740195751
    2. ' for' → logprob: -4.638088703155518
    3. '(p' → logprob: -5.763088703155518
    4. 'max' → logprob: -8.76308822631836
    5. 'p' → logprob: -11.88808822631836
    6. '(max' → logprob: -12.01308822631836
    7. '_for' → logprob: -12.38808822631836
    8. '[p' → logprob: -12.63808822631836
    9. '(for' → logprob: -13.51308822631836
    10. ')' → logprob: -13.63808822631836

Token 1700: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.010132258757948875
    2. 'p' → logprob: -4.635132312774658
    3. ' points' → logprob: -8.3851318359375
    4. '(points' → logprob: -9.1351318359375
    5. ' p' → logprob: -11.0101318359375
    6. '(p' → logprob: -11.2601318359375
    7. 'for' → logprob: -12.3851318359375
    8. '[p' → logprob: -13.3851318359375
    9. '	points' → logprob: -13.6351318359375
    10. '.points' → logprob: -13.8851318359375

Token 1701: ' in' (ID: 306)
  Prédit: '.points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.8353880047798157
    2. 'for' → logprob: -0.9603880047798157
    3. 'points' → logprob: -1.960387945175171
    4. ' for' → logprob: -3.210387945175171
    5. '(points' → logprob: -6.83538818359375
    6. ' points' → logprob: -7.46038818359375
    7. 'oints' → logprob: -7.71038818359375
    8. '_points' → logprob: -9.33538818359375
    9. '	points' → logprob: -9.71038818359375
    10. ' in' → logprob: -10.08538818359375

Token 1702: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00010163593105971813
    2. ' points' → logprob: -9.500102043151855
    3. '(points' → logprob: -11.000102043151855
    4. 'p' → logprob: -11.625102043151855
    5. 'Points' → logprob: -15.250102043151855
    6. '	points' → logprob: -15.375102043151855
    7. '.points' → logprob: -15.625102043151855
    8. '
' → logprob: -16.12510108947754
    9. 'point' → logprob: -17.00010108947754
    10. '_points' → logprob: -17.75010108947754

Token 1703: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.512737512588501
    2. 'for' → logprob: -1.012737512588501
    3. ')' → logprob: -4.012737274169922
    4. ' for' → logprob: -4.512737274169922
    5. ')
' → logprob: -5.012737274169922
    6. '
' → logprob: -7.262737274169922
    7. 'max' → logprob: -8.012737274169922
    8. '           ' → logprob: -8.262737274169922
    9. '):
' → logprob: -8.512737274169922
    10. '   ' → logprob: -8.887737274169922

Token 1704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.526570384972729e-05
    2. 'return' → logprob: -10.875055313110352
    3. '=' → logprob: -12.125055313110352
    4. '           ' → logprob: -12.250055313110352
    5. '
' → logprob: -12.500055313110352
    6. ' =' → logprob: -12.625055313110352
    7. ':' → logprob: -12.625055313110352
    8. '	' → logprob: -12.750055313110352
    9. '   ' → logprob: -12.875055313110352
    10. ' return' → logprob: -13.250055313110352

Token 1705: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38722747564315796
    2. '       ' → logprob: -1.1372275352478027
    3. ' return' → logprob: -8.012227058410645
    4. '   ' → logprob: -11.262227058410645
    5. '           ' → logprob: -11.637227058410645
    6. '	return' → logprob: -13.262227058410645
    7. '               ' → logprob: -14.137227058410645
    8. '
' → logprob: -15.387227058410645
    9. ' ' → logprob: -15.887227058410645
    10. '     ' → logprob: -16.01222801208496

Token 1706: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.003178544342517853
    2. ' cls' → logprob: -5.753178596496582
    3. '(cls' → logprob: -14.253178596496582
    4. 'super' → logprob: -16.253177642822266
    5. 'class' → logprob: -17.128177642822266
    6. '   ' → logprob: -17.878177642822266
    7. 'classmethod' → logprob: -18.128177642822266
    8. '.cls' → logprob: -18.253177642822266
    9. '       ' → logprob: -18.753177642822266
    10. '_cls' → logprob: -18.753177642822266

Token 1707: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -7.3458322731312364e-06
    2. '.pattern' → logprob: -12.125007629394531
    3. 'match' → logprob: -13.875007629394531
    4. '.try' → logprob: -14.250007629394531
    5. '.' → logprob: -16.12500762939453
    6. '.matches' → logprob: -16.25000762939453
    7. ' .' → logprob: -17.12500762939453
    8. '.matcher' → logprob: -17.25000762939453
    9. '.MATCH' → logprob: -17.87500762939453
    10. '._' → logprob: -18.12500762939453

Token 1708: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00014823723176959902
    2. 'pattern' → logprob: -8.875147819519043
    3. '_class' → logprob: -12.625147819519043
    4. '_' → logprob: -13.375147819519043
    5. '   ' → logprob: -14.625147819519043
    6. '       ' → logprob: -14.875147819519043
    7. '```' → logprob: -14.875147819519043
    8. ' pattern' → logprob: -15.250147819519043
    9. '_point' → logprob: -15.375147819519043
    10. '_property' → logprob: -15.500147819519043

Token 1709: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -5.512236498361744e-07
    2. 'points' → logprob: -14.500000953674316
    3. '(parts' → logprob: -19.25
    4. '	points' → logprob: -19.375
    5. ' points' → logprob: -20.375
    6. '(
' → logprob: -20.625
    7. '.points' → logprob: -21.375
    8. '```' → logprob: -22.125
    9. '(cls' → logprob: -22.25
    10. '(point' → logprob: -22.25

Token 1710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8828707804204896e-05
    2. '(points' → logprob: -10.125048637390137
    3. 'points' → logprob: -12.250048637390137
    4. ' ,' → logprob: -13.125048637390137
    5. ',
' → logprob: -14.375048637390137
    6. ' points' → logprob: -14.625048637390137
    7. '   ' → logprob: -14.750048637390137
    8. '       ' → logprob: -15.250048637390137
    9. ',p' → logprob: -16.000049591064453
    10. '           ' → logprob: -16.250049591064453

Token 1711: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4741114377975464
    2. 'points' → logprob: -0.9741114377975464
    3. ' points' → logprob: -11.224111557006836
    4. ' min' → logprob: -11.474111557006836
    5. 'max' → logprob: -12.224111557006836
    6. '(min' → logprob: -13.224111557006836
    7. 'p' → logprob: -13.474111557006836
    8. '(points' → logprob: -14.224111557006836
    9. '[min' → logprob: -14.724111557006836
    10. '_points' → logprob: -15.349111557006836

Token 1712: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0008977661491371691
    2. 'x' → logprob: -7.6258978843688965
    3. '(p' → logprob: -7.8758978843688965
    4. 'X' → logprob: -12.000897407531738
    5. '_y' → logprob: -12.375897407531738
    6. 'max' → logprob: -12.625897407531738
    7. '(points' → logprob: -12.750897407531738
    8. '_points' → logprob: -12.875897407531738
    9. '(max' → logprob: -13.500897407531738
    10. '```' → logprob: -13.750897407531738

Token 1713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027921271976083517
    2. ',p' → logprob: -9.000279426574707
    3. ' ,' → logprob: -9.250279426574707
    4. ',min' → logprob: -10.125279426574707
    5. 'min' → logprob: -12.000279426574707
    6. '       ' → logprob: -12.500279426574707
    7. '   ' → logprob: -12.625279426574707
    8. '           ' → logprob: -14.000279426574707
    9. '_,' → logprob: -14.250279426574707
    10. '```' → logprob: -14.500279426574707

Token 1714: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00020354038861114532
    2. ' min' → logprob: -8.500203132629395
    3. '[min' → logprob: -17.25020408630371
    4. '_min' → logprob: -17.50020408630371
    5. '(min' → logprob: -17.87520408630371
    6. 'max' → logprob: -18.87520408630371
    7. '=min' → logprob: -19.25020408630371
    8. '	min' → logprob: -19.50020408630371
    9. '.min' → logprob: -20.12520408630371
    10. ',min' → logprob: -20.12520408630371

Token 1715: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0014580932911485434
    2. '_x' → logprob: -7.501458168029785
    3. 'max' → logprob: -7.876458168029785
    4. '(p' → logprob: -8.001458168029785
    5. 'y' → logprob: -9.001458168029785
    6. 'p' → logprob: -10.501458168029785
    7. '_max' → logprob: -11.626458168029785
    8. 'Y' → logprob: -12.126458168029785
    9. 'min' → logprob: -12.126458168029785
    10. '_p' → logprob: -12.376458168029785

Token 1716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006992113194428384
    2. 'points' → logprob: -8.125699043273926
    3. ',p' → logprob: -8.250699043273926
    4. ',max' → logprob: -9.000699043273926
    5. ' ,' → logprob: -11.875699043273926
    6. ',min' → logprob: -12.375699043273926
    7. '(points' → logprob: -12.500699043273926
    8. ' points' → logprob: -13.375699043273926
    9. 'max' → logprob: -14.250699043273926
    10. '_points' → logprob: -14.875699043273926

Token 1717: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.688212614681106e-05
    2. ' max' → logprob: -11.000017166137695
    3. 'min' → logprob: -15.750017166137695
    4. '(max' → logprob: -18.500017166137695
    5. '_max' → logprob: -18.875017166137695
    6. '[max' → logprob: -20.125017166137695
    7. ',max' → logprob: -20.875017166137695
    8. '	max' → logprob: -21.250017166137695
    9. '           ' → logprob: -21.625017166137695
    10. '       ' → logprob: -21.625017166137695

Token 1718: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.0590548703912646e-05
    2. '(p' → logprob: -11.625030517578125
    3. '   ' → logprob: -12.000030517578125
    4. 'x' → logprob: -12.750030517578125
    5. '```' → logprob: -12.750030517578125
    6. '[' → logprob: -12.875030517578125
    7. '       ' → logprob: -12.875030517578125
    8. '_y' → logprob: -13.875030517578125
    9. '[p' → logprob: -14.375030517578125
    10. '_points' → logprob: -14.625030517578125

Token 1719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020008347928524017
    2. ',p' → logprob: -9.125200271606445
    3. ' ,' → logprob: -9.750200271606445
    4. ',
' → logprob: -11.250200271606445
    5. ',max' → logprob: -11.375200271606445
    6. ',min' → logprob: -11.875200271606445
    7. ',m' → logprob: -14.375200271606445
    8. '_,' → logprob: -16.000200271606445
    9. ',
' → logprob: -16.500200271606445
    10. 'for' → logprob: -16.625200271606445

Token 1720: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03846852853894234
    2. 'min' → logprob: -3.288468599319458
    3. ' max' → logprob: -7.788468360900879
    4. ' min' → logprob: -11.288468360900879
    5. ',max' → logprob: -19.038469314575195
    6. '_max' → logprob: -19.163469314575195
    7. '(max' → logprob: -19.288469314575195
    8. '[max' → logprob: -19.413469314575195
    9. '=max' → logprob: -19.913469314575195
    10. 'm' → logprob: -20.163469314575195

Token 1721: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.43533042073249817
    2. 'max' → logprob: -1.0603303909301758
    3. '_max' → logprob: -6.435330390930176
    4. ',' → logprob: -6.810330390930176
    5. '(max' → logprob: -6.935330390930176
    6. '_x' → logprob: -7.060330390930176
    7. '_,' → logprob: -7.310330390930176
    8. ',max' → logprob: -7.935330390930176
    9. 'min' → logprob: -8.560330390930176
    10. 'y' → logprob: -8.685330390930176

Token 1722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ',p' → logprob: -11.375018119812012
    3. ' ,' → logprob: -12.625018119812012
    4. 'points' → logprob: -14.125018119812012
    5. '(points' → logprob: -14.250018119812012
    6. '       ' → logprob: -14.250018119812012
    7. ',
' → logprob: -14.875018119812012
    8. '```' → logprob: -15.500018119812012
    9. ' points' → logprob: -15.750018119812012
    10. '[' → logprob: -16.125017166137695

Token 1723: ' cls' (ID: 26133)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.843177233240567e-05
    2. ' max' → logprob: -11.000018119812012
    3. 'cls' → logprob: -13.500018119812012
    4. 'min' → logprob: -15.500018119812012
    5. 'class' → logprob: -18.750019073486328
    6. '(max' → logprob: -19.125019073486328
    7. '[max' → logprob: -19.875019073486328
    8. '	max' → logprob: -20.375019073486328
    9. ' ' → logprob: -20.375019073486328
    10. '
' → logprob: -20.875019073486328

Token 1724: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.8969590663909912
    2. ',' → logprob: -1.0219590663909912
    3. 'pattern' → logprob: -1.5219590663909912
    4. '(pattern' → logprob: -5.52195930480957
    5. ',max' → logprob: -5.89695930480957
    6. '_pattern' → logprob: -6.27195930480957
    7. '       ' → logprob: -7.14695930480957
    8. '),' → logprob: -7.52195930480957
    9. '[' → logprob: -7.52195930480957
    10. ')' → logprob: -7.77195930480957

Token 1725: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1726: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.017435593530535698
    2. '
' → logprob: -4.142435550689697
    3. '   ' → logprob: -6.892435550689697
    4. '@' → logprob: -8.392436027526855
    5. ' class' → logprob: -9.392436027526855
    6. 'classmethod' → logprob: -10.517436027526855
    7. '

' → logprob: -10.892436027526855
    8. '    
' → logprob: -11.642436027526855
    9. '@
' → logprob: -12.142436027526855
    10. '@class' → logprob: -12.767436027526855

Token 1727: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -2.339278580620885e-06
    2. ' Digit' → logprob: -13.625001907348633
    3. '6' → logprob: -15.000001907348633
    4. 'class' → logprob: -15.250001907348633
    5. '_digit' → logprob: -15.375001907348633
    6. 'Digital' → logprob: -16.000001907348633
    7. 'Digits' → logprob: -16.625001907348633
    8. 'D' → logprob: -17.000001907348633
    9. 'Character' → logprob: -17.750001907348633
    10. '-digit' → logprob: -18.375001907348633

Token 1728: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '६' → logprob: -19.75
    4. '```' → logprob: -20.0
    5. '۶' → logprob: -20.25
    6. '' → logprob: -20.5
    7. '৬' → logprob: -20.5
    8. '٦' → logprob: -20.625
    9. '
' → logprob: -20.75
    10. '7' → logprob: -21.375

Token 1729: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -1.9361264946837764e-07
    2. 'Character' → logprob: -17.0
    3. '<Character' → logprob: -17.875
    4. '(Class' → logprob: -18.75
    5. 'class' → logprob: -20.125
    6. '(' → logprob: -20.375
    7. '.Character' → logprob: -20.875
    8. '_character' → logprob: -21.25
    9. '(character' → logprob: -21.5
    10. '(
' → logprob: -21.625

Token 1730: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8628950119018555
    2. '(Character' → logprob: -0.8628950119018555
    3. '   ' → logprob: -1.9878950119018555
    4. '):' → logprob: -4.6128950119018555
    5. 'Character' → logprob: -5.4878950119018555
    6. ':
' → logprob: -5.6128950119018555
    7. '<Character' → logprob: -7.2378950119018555
    8. 'class' → logprob: -8.362895011901855
    9. '.Character' → logprob: -9.112895011901855
    10. ':' → logprob: -9.237895011901855

Token 1731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003369611920788884
    2. 'class' → logprob: -6.5033698081970215
    3. 'pattern' → logprob: -6.8783698081970215
    4. ' pattern' → logprob: -7.1283698081970215
    5. ' class' → logprob: -10.878369331359863
    6. '```' → logprob: -12.253369331359863
    7. '.pattern' → logprob: -13.128369331359863
    8. '(pattern' → logprob: -13.253369331359863
    9. '{
' → logprob: -13.378369331359863
    10. ':
' → logprob: -14.253369331359863

Token 1732: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -0.00012821101699955761
    2. ' pattern' → logprob: -9.000127792358398
    3. '   ' → logprob: -12.250127792358398
    4. 'class' → logprob: -17.0001277923584
    5. '.pattern' → logprob: -19.8751277923584
    6. 'pat' → logprob: -21.2501277923584
    7. '(pattern' → logprob: -21.7501277923584
    8. '```' → logprob: -22.0001277923584
    9. 'patterns' → logprob: -22.2501277923584
    10. '_pattern' → logprob: -23.1251277923584

Token 1733: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07012627273797989
    2. '=' → logprob: -2.6951262950897217
    3. '   ' → logprob: -8.9451265335083
    4. '=[
' → logprob: -9.8201265335083
    5. '```' → logprob: -13.4451265335083
    6. '=[' → logprob: -13.9451265335083
    7. '[
' → logprob: -14.0701265335083
    8. '  ' → logprob: -14.4451265335083
    9. ':' → logprob: -14.9451265335083
    10. ' ' → logprob: -15.0701265335083

Token 1734: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0006003346061334014
    2. '[' → logprob: -7.500600337982178
    3. ' [
' → logprob: -10.00059986114502
    4. '   ' → logprob: -13.25059986114502
    5. ' [' → logprob: -15.75059986114502
    6. '["' → logprob: -18.250600814819336
    7. '=[
' → logprob: -18.250600814819336
    8. '  ' → logprob: -19.125600814819336
    9. ' ' → logprob: -19.125600814819336
    10. '([
' → logprob: -20.750600814819336

Token 1735: '       ' (ID: 309)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.05053205043077469
    2. '   ' → logprob: -3.300532102584839
    3. '       ' → logprob: -4.55053186416626
    4. '[' → logprob: -6.30053186416626
    5. ' [
' → logprob: -11.300532341003418
    6. '["' → logprob: -13.675532341003418
    7. '"' → logprob: -13.800532341003418
    8. '           ' → logprob: -14.800532341003418
    9. '     ' → logprob: -14.800532341003418
    10. 'class' → logprob: -15.675532341003418

Token 1736: ' "' (ID: 392)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.009602728299796581
    2. '"' (adapté à ' "') → logprob: -5.0096025466918945
    3. '[' → logprob: -6.2596025466918945
    4. '   ' → logprob: -7.2596025466918945
    5. '       ' → logprob: -8.259602546691895
    6. '["' → logprob: -12.634602546691895
    7. ' [
' → logprob: -12.884602546691895
    8. ' ' → logprob: -13.384602546691895
    9. '     ' → logprob: -14.509602546691895
    10. '111' → logprob: -15.134602546691895

Token 1737: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.03218632563948631
    2. '"' → logprob: -4.032186508178711
    3. '[
' → logprob: -4.282186508178711
    4. '[' → logprob: -9.407186508178711
    5. '011' → logprob: -10.782186508178711
    6. '110' → logprob: -11.657186508178711
    7. '["' → logprob: -12.657186508178711
    8. ' ' → logprob: -12.782186508178711
    9. ''' → logprob: -12.907186508178711
    10. '```' → logprob: -13.407186508178711

Token 1738: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.25362125039100647
    2. '",' → logprob: -1.503621220588684
    3. '   ' → logprob: -7.2536211013793945
    4. '",
' → logprob: -8.128621101379395
    5. '","' → logprob: -8.128621101379395
    6. '[
' → logprob: -8.753621101379395
    7. '"' → logprob: -9.628621101379395
    8. '       ' → logprob: -10.003621101379395
    9. '',
' → logprob: -10.253621101379395
    10. '",[' → logprob: -10.503621101379395

Token 1739: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.313492089509964
    2. '       ' → logprob: -1.3134920597076416
    3. '[
' → logprob: -8.688491821289062
    4. '   ' → logprob: -10.313491821289062
    5. '[' → logprob: -11.313491821289062
    6. '"class' → logprob: -12.188491821289062
    7. ' ' → logprob: -13.188491821289062
    8. ' "' → logprob: -13.313491821289062
    9. '	' → logprob: -13.563491821289062
    10. '           ' → logprob: -13.688491821289062

Token 1740: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -4.127333340875339e-06
    2. '100' → logprob: -13.125003814697266
    3. '   ' → logprob: -14.000003814697266
    4. ''' → logprob: -14.125003814697266
    5. ' ' → logprob: -15.750003814697266
    6. '       ' → logprob: -15.875003814697266
    7. '110' → logprob: -16.125003814697266
    8. '101' → logprob: -16.625003814697266
    9. ' "' → logprob: -16.875003814697266
    10. '	' → logprob: -17.250003814697266

Token 1741: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.20189838111400604
    2. '"' → logprob: -1.7018983364105225
    3. '110' → logprob: -8.326898574829102
    4. '101' → logprob: -8.576898574829102
    5. ''' → logprob: -10.451898574829102
    6. '011' → logprob: -11.701898574829102
    7. '010' → logprob: -11.701898574829102
    8. '001' → logprob: -12.451898574829102
    9. '
' → logprob: -13.826898574829102
    10. ' ' → logprob: -13.826898574829102

Token 1742: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.6788893342018127
    2. '",' → logprob: -1.553889274597168
    3. '<|end|>' → logprob: -2.303889274597168
    4. ',' → logprob: -2.678889274597168
    5. ',
' → logprob: -2.928889274597168
    6. '   ' → logprob: -4.178889274597168
    7. '[
' → logprob: -4.553889274597168
    8. '',
' → logprob: -4.678889274597168
    9. '"' → logprob: -5.053889274597168
    10. '","' → logprob: -5.553889274597168

Token 1743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001535216229967773
    2. '"' → logprob: -6.501535415649414
    3. '   ' → logprob: -10.751535415649414
    4. '[
' → logprob: -12.376535415649414
    5. '           ' → logprob: -12.751535415649414
    6. '[' → logprob: -13.876535415649414
    7. '      ' → logprob: -14.126535415649414
    8. '     ' → logprob: -14.501535415649414
    9. ' ' → logprob: -14.626535415649414
    10. '	' → logprob: -15.001535415649414

Token 1744: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.03445488214492798
    2. '       ' → logprob: -3.784454822540283
    3. ' "' → logprob: -4.659454822540283
    4. '[' → logprob: -7.534454822540283
    5. '   ' → logprob: -7.909454822540283
    6. '[
' → logprob: -8.159455299377441
    7. '111' → logprob: -9.034455299377441
    8. '"class' → logprob: -9.284455299377441
    9. ''' → logprob: -9.534455299377441
    10. ' ' → logprob: -9.659455299377441

Token 1745: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.011136840097606182
    2. '"' → logprob: -4.511137008666992
    3. ''' → logprob: -9.386137008666992
    4. '011' → logprob: -13.386137008666992
    5. '110' → logprob: -14.011137008666992
    6. ' ' → logprob: -14.261137008666992
    7. '```' → logprob: -14.261137008666992
    8. '"class' → logprob: -14.511137008666992
    9. '"""' → logprob: -15.761137008666992
    10. '[
' → logprob: -15.761137008666992

Token 1746: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.0026219089049845934
    2. '",' → logprob: -6.002622127532959
    3. '",
' → logprob: -9.5026216506958
    4. '',
' → logprob: -10.3776216506958
    5. '"' → logprob: -10.6276216506958
    6. '   ' → logprob: -12.3776216506958
    7. ',
' → logprob: -12.6276216506958
    8. '       ' → logprob: -12.6276216506958
    9. '","' → logprob: -13.0026216506958
    10. '[
' → logprob: -14.0026216506958

Token 1747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005573694594204426
    2. '"' → logprob: -5.255573749542236
    3. '   ' → logprob: -8.505573272705078
    4. '[
' → logprob: -9.255573272705078
    5. '           ' → logprob: -11.005573272705078
    6. ' ' → logprob: -12.255573272705078
    7. '
' → logprob: -12.255573272705078
    8. '[' → logprob: -12.755573272705078
    9. '      ' → logprob: -13.005573272705078
    10. '     ' → logprob: -13.130573272705078

Token 1748: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -2.0100624169572257e-05
    2. '001' → logprob: -11.750020027160645
    3. '   ' → logprob: -12.000020027160645
    4. '       ' → logprob: -12.875020027160645
    5. ''' → logprob: -13.375020027160645
    6. '101' → logprob: -14.000020027160645
    7. '100' → logprob: -15.000020027160645
    8. ' ' → logprob: -15.125020027160645
    9. '
' → logprob: -15.750020027160645
    10. ' "' → logprob: -16.12502098083496

Token 1749: '101' (ID: 7959)
  Prédit: '001'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.30011141300201416
    2. '"' → logprob: -2.0501112937927246
    3. '101' → logprob: -2.0501112937927246
    4. '011' → logprob: -7.175111293792725
    5. '100' → logprob: -7.425111293792725
    6. ''' → logprob: -8.175111770629883
    7. '111' → logprob: -9.675111770629883
    8. '010' → logprob: -10.300111770629883
    9. '110' → logprob: -10.675111770629883
    10. '
' → logprob: -10.800111770629883

Token 1750: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.008118883706629276
    2. '",' → logprob: -5.008119106292725
    3. '',
' → logprob: -7.008119106292725
    4. '",
' → logprob: -8.383118629455566
    5. '   ' → logprob: -9.258118629455566
    6. '"' → logprob: -9.258118629455566
    7. '       ' → logprob: -10.633118629455566
    8. '[
' → logprob: -11.633118629455566
    9. ''",
' → logprob: -11.633118629455566
    10. '","' → logprob: -11.883118629455566

Token 1751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10221490263938904
    2. '"' → logprob: -2.352214813232422
    3. '   ' → logprob: -6.602214813232422
    4. '           ' → logprob: -8.227214813232422
    5. ' "' → logprob: -9.227214813232422
    6. '[
' → logprob: -9.977214813232422
    7. '        ' → logprob: -10.227214813232422
    8. ''' → logprob: -10.227214813232422
    9. '      ' → logprob: -10.352214813232422
    10. ' ' → logprob: -10.352214813232422

Token 1752: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0005979505367577076
    2. ' "' → logprob: -7.500597953796387
    3. '111' → logprob: -10.500597953796387
    4. ''' → logprob: -11.500597953796387
    5. '       ' → logprob: -12.500597953796387
    6. '   ' → logprob: -13.250597953796387
    7. ' ' → logprob: -14.000597953796387
    8. '"class' → logprob: -14.750597953796387
    9. '	' → logprob: -15.250597953796387
    10. '
' → logprob: -16.50059700012207

Token 1753: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -1.7954958821064793e-05
    2. '"' → logprob: -11.000018119812012
    3. ''' → logprob: -13.750018119812012
    4. '```' → logprob: -17.125017166137695
    5. ' ' → logprob: -17.250017166137695
    6. '101' → logprob: -17.750017166137695
    7. '110' → logprob: -18.250017166137695
    8. '"""' → logprob: -18.625017166137695
    9. '1' → logprob: -19.125017166137695
    10. ''''' → logprob: -19.250017166137695

Token 1754: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.15037883818149567
    2. '   ' → logprob: -2.150378942489624
    3. '"
' → logprob: -3.775378942489624
    4. ''' → logprob: -9.775379180908203
    5. ']' → logprob: -9.900379180908203
    6. '"class' → logprob: -10.150379180908203
    7. '"]' → logprob: -10.525379180908203
    8. 'class' → logprob: -10.525379180908203
    9. ''"' → logprob: -11.400379180908203
    10. ']"' → logprob: -11.525379180908203

Token 1755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017147827020380646
    2. ':' → logprob: -9.625171661376953
    3. 'class' → logprob: -10.125171661376953
    4. ':
' → logprob: -11.250171661376953
    5. '[
' → logprob: -11.250171661376953
    6. '       ' → logprob: -11.500171661376953
    7. '
' → logprob: -11.500171661376953
    8. '"' → logprob: -11.875171661376953
    9. '[' → logprob: -12.250171661376953
    10. '"""' → logprob: -14.000171661376953

Token 1756: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008950763382017612
    2. '
' → logprob: -4.758950710296631
    3. 'class' → logprob: -8.508951187133789
    4. ']' → logprob: -10.133951187133789
    5. '  ' → logprob: -10.883951187133789
    6. '    
' → logprob: -11.008951187133789
    7. ']
' (adapté à ' ]
') → logprob: -11.383951187133789
    8. '<|end|>' → logprob: -11.508951187133789
    9. ' ' → logprob: -11.633951187133789
    10. '"' → logprob: -12.258951187133789

Token 1757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016885085497051477
    2. 'class' → logprob: -6.501688480377197
    3. ':
' → logprob: -9.126688957214355
    4. ':' → logprob: -10.376688957214355
    5. '
' → logprob: -10.626688957214355
    6. ' class' → logprob: -11.626688957214355
    7. '       ' → logprob: -12.626688957214355
    8. '{
' → logprob: -13.001688957214355
    9. ' ' → logprob: -13.376688957214355
    10. '  ' → logprob: -13.626688957214355

Token 1758: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.0008246336947195232
    2. '   ' → logprob: -7.625824451446533
    3. ' char' → logprob: -8.250824928283691
    4. 'class' → logprob: -9.875824928283691
    5. 'pattern' → logprob: -11.250824928283691
    6. '
' → logprob: -12.000824928283691
    7. '_char' → logprob: -13.250824928283691
    8. '.char' → logprob: -13.500824928283691
    9. '	char' → logprob: -13.875824928283691
    10. '  ' → logprob: -14.750824928283691

Token 1759: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -3.7697225252486533e-06
    2. '_rep' → logprob: -13.375003814697266
    3. '   ' → logprob: -13.750003814697266
    4. 'repr' → logprob: -14.250003814697266
    5. 'char' → logprob: -15.500003814697266
    6. '_re' → logprob: -15.625003814697266
    7. '_' → logprob: -18.000003814697266
    8. '_char' → logprob: -18.000003814697266
    9. 'class' → logprob: -18.000003814697266
    10. 'classmethod' → logprob: -18.250003814697266

Token 1760: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142687857151031
    2. ' =' → logprob: -1.7014268636703491
    3. '='' → logprob: -11.70142650604248
    4. '   ' → logprob: -12.70142650604248
    5. ' ='' → logprob: -13.57642650604248
    6. ':' → logprob: -14.57642650604248
    7. ' ' → logprob: -14.95142650604248
    8. ''' → logprob: -16.201427459716797
    9. '  ' → logprob: -16.326427459716797
    10. ''=' → logprob: -17.451427459716797

Token 1761: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005718595930375159
    2. ' '' → logprob: -7.5005717277526855
    3. ''s' → logprob: -11.375572204589844
    4. ''S' → logprob: -11.875572204589844
    5. '"' → logprob: -14.875572204589844
    6. '6' → logprob: -15.750572204589844
    7. ' ' → logprob: -17.750572204589844
    8. '   ' → logprob: -18.875572204589844
    9. ''i' → logprob: -18.875572204589844
    10. '`' → logprob: -19.250572204589844

Token 1762: '6' (ID: 21)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0067154900170862675
    2. '6' → logprob: -5.006715297698975
    3. '"' → logprob: -15.756715774536133
    4. ' '' → logprob: -17.506715774536133
    5. '`' → logprob: -18.756715774536133
    6. ''s' → logprob: -19.506715774536133
    7. '‘' → logprob: -20.131715774536133
    8. ''.' → logprob: -20.256715774536133
    9. '('' → logprob: -20.506715774536133
    10. '='' → logprob: -20.631715774536133

Token 1763: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023776570335030556
    2. '
' → logprob: -3.7737765312194824
    3. 'class' → logprob: -7.773776531219482
    4. '    
' → logprob: -10.77377700805664
    5. ''' → logprob: -11.39877700805664
    6. ''
' → logprob: -11.77377700805664
    7. '  ' → logprob: -11.89877700805664
    8. ':' → logprob: -12.02377700805664
    9. ' ' → logprob: -12.02377700805664
    10. '@' → logprob: -12.14877700805664

Token 1764: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18032880127429962
    2. '   ' → logprob: -1.8053288459777832
    3. '@' → logprob: -8.180328369140625
    4. '    
' → logprob: -8.930328369140625
    5. '

' → logprob: -9.680328369140625
    6. '
' → logprob: -10.430328369140625
    7. '```' → logprob: -10.430328369140625
    8. '  
' → logprob: -11.430328369140625
    9. 'class' → logprob: -11.680328369140625
    10. '   
' → logprob: -12.055328369140625

Token 1765: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12431398034095764
    2. '   ' → logprob: -2.249314069747925
    3. '@' (adapté à ' @') → logprob: -4.499313831329346
    4. '    
' → logprob: -8.749314308166504
    5. '
' → logprob: -9.999314308166504
    6. ' @' → logprob: -10.624314308166504
    7. '

' → logprob: -10.624314308166504
    8. '  
' → logprob: -11.624314308166504
    9. '@
' → logprob: -11.874314308166504
    10. 'classmethod' → logprob: -11.999314308166504

Token 1766: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -1.9361264946837764e-07
    2. 'class' → logprob: -16.5
    3. 'staticmethod' → logprob: -19.25
    4. '@' → logprob: -21.25
    5. '@class' → logprob: -25.5
    6. 'property' → logprob: -26.375
    7. '<class' → logprob: -26.75
    8. '"class' → logprob: -27.0
    9. 'aclass' → logprob: -27.125
    10. 'cls' → logprob: -27.375

Token 1767: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06933366507291794
    2. '   ' → logprob: -3.194333553314209
    3. ' def' → logprob: -3.694333553314209
    4. '
' → logprob: -6.819333553314209
    5. '  ' → logprob: -11.194334030151367
    6. '	def' → logprob: -11.819334030151367
    7. ' ' → logprob: -12.194334030151367
    8. '@' → logprob: -13.319334030151367
    9. '
' → logprob: -13.694334030151367
    10. ':def' → logprob: -13.944334030151367

Token 1768: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09495225548744202
    2. '   ' → logprob: -2.719952344894409
    3. ' def' → logprob: -3.719952344894409
    4. '
' → logprob: -7.71995210647583
    5. '	def' → logprob: -11.469952583312988
    6. '  ' → logprob: -11.969952583312988
    7. ' ' → logprob: -12.594952583312988
    8. '```' → logprob: -12.844952583312988
    9. ':def' → logprob: -14.594952583312988
    10. '
' → logprob: -14.594952583312988

Token 1769: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.896309739408025e-07
    2. '
' → logprob: -15.000000953674316
    3. ' def' → logprob: -15.250000953674316
    4. 'async' → logprob: -16.625
    5. '```' → logprob: -18.25
    6. '   ' → logprob: -20.125
    7. '	def' → logprob: -21.125
    8. '``' → logprob: -21.25
    9. '`' → logprob: -22.375
    10. 'try' → logprob: -22.875

Token 1770: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -2.4391956685576588e-05
    2. 'def' → logprob: -10.750024795532227
    3. ' try' → logprob: -12.750024795532227
    4. '.try' → logprob: -20.625024795532227
    5. '_try' → logprob: -22.125024795532227
    6. '```' → logprob: -22.125024795532227
    7. ' def' → logprob: -22.625024795532227
    8. '
' → logprob: -23.250024795532227
    9. 'Try' → logprob: -23.875024795532227
    10. '	try' → logprob: -24.375024795532227

Token 1771: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -12.375005722045898
    3. '_mat' → logprob: -13.875005722045898
    4. 'match' → logprob: -14.875005722045898
    5. '_m' → logprob: -14.875005722045898
    6. '_
' → logprob: -16.6250057220459
    7. '_try' → logprob: -16.8750057220459
    8. '_ma' → logprob: -17.0000057220459
    9. '_matching' → logprob: -17.0000057220459
    10. '_MATCH' → logprob: -17.5000057220459

Token 1772: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.0325924449716695e-05
    2. 'cls' → logprob: -11.62501049041748
    3. ' cls' → logprob: -14.37501049041748
    4. '(' → logprob: -14.75001049041748
    5. ' (' → logprob: -15.50001049041748
    6. '(
' → logprob: -16.625009536743164
    7. '   ' → logprob: -16.625009536743164
    8. '.cls' → logprob: -18.250009536743164
    9. '(cl' → logprob: -18.750009536743164
    10. '
' → logprob: -18.875009536743164

Token 1773: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.00037681119283661246
    2. ',' → logprob: -8.00037670135498
    3. '   ' → logprob: -11.12537670135498
    4. '(' → logprob: -11.62537670135498
    5. 'cls' → logprob: -11.62537670135498
    6. 'def' → logprob: -13.50037670135498
    7. '       ' → logprob: -13.62537670135498
    8. '(self' → logprob: -13.75037670135498
    9. '```' → logprob: -13.75037670135498
    10. ' (' → logprob: -13.75037670135498

Token 1774: ' points' (ID: 5571)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -3.173704271830502e-06
    2. ' cls' → logprob: -13.25000286102295
    3. 'points' → logprob: -13.50000286102295
    4. '(cls' → logprob: -18.000003814697266
    5. 'cl' → logprob: -20.375003814697266
    6. 'class' → logprob: -20.875003814697266
    7. 'classmethod' → logprob: -21.125003814697266
    8. ' points' → logprob: -22.000003814697266
    9. '.cls' → logprob: -22.125003814697266
    10. 'pts' → logprob: -22.250003814697266

Token 1775: ':' (ID: 25)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.19011102616786957
    2. '(points' → logprob: -1.9401110410690308
    3. ')' → logprob: -3.690110921859741
    4. '   ' → logprob: -6.56511116027832
    5. ':' → logprob: -7.56511116027832
    6. '       ' → logprob: -7.69011116027832
    7. '(set' → logprob: -7.69011116027832
    8. '==' → logprob: -7.81511116027832
    9. '>' → logprob: -8.19011116027832
    10. ' ' → logprob: -8.19011116027832

Token 1776: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.004719187971204519
    2. ' Set' → logprob: -5.504719257354736
    3. 'cls' → logprob: -7.629719257354736
    4. 'True' → logprob: -10.004718780517578
    5. 'bool' → logprob: -10.379718780517578
    6. 'set' → logprob: -10.629718780517578
    7. '_set' → logprob: -11.004718780517578
    8. ' cls' → logprob: -11.754718780517578
    9. 'return' → logprob: -11.754718780517578
    10. ')' → logprob: -12.504718780517578

Token 1777: '[' (ID: 58)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6160614490509033
    2. '[' → logprob: -0.8660614490509033
    3. '(points' → logprob: -3.7410614490509033
    4. '(Point' → logprob: -4.741061210632324
    5. '(' → logprob: -6.116061210632324
    6. '(cls' → logprob: -6.241061210632324
    7. '[p' → logprob: -7.116061210632324
    8. ')' → logprob: -7.616061210632324
    9. '<Point' → logprob: -7.991061210632324
    10. '.Point' → logprob: -8.366061210632324

Token 1778: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.9361264946837764e-07
    2. ' Point' → logprob: -16.875
    3. 'p' → logprob: -18.125
    4. '.Point' → logprob: -18.375
    5. 'Points' → logprob: -18.75
    6. ')' → logprob: -18.75
    7. '(Point' → logprob: -18.875
    8. 'cls' → logprob: -19.375
    9. '	Point' → logprob: -19.5
    10. 'point' → logprob: -20.0

Token 1779: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. '):' → logprob: -11.625011444091797
    3. '   ' → logprob: -13.625011444091797
    4. '):
' → logprob: -14.500011444091797
    5. ' )' → logprob: -14.625011444091797
    6. '       ' → logprob: -15.750011444091797
    7. ')
' → logprob: -16.750011444091797
    8. '()' → logprob: -18.000011444091797
    9. '))' → logprob: -18.125011444091797
    10. '')' → logprob: -18.250011444091797

Token 1780: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00782936904579401
    2. ':
' → logprob: -5.007829189300537
    3. ':return' → logprob: -8.007829666137695
    4. '       ' → logprob: -8.132829666137695
    5. '   ' → logprob: -8.382829666137695
    6. '->' → logprob: -9.007829666137695
    7. ' ->' → logprob: -9.632829666137695
    8. ')' → logprob: -11.132829666137695
    9. 'def' → logprob: -11.757829666137695
    10. ':def' → logprob: -11.757829666137695

Token 1781: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -5.32392441527918e-05
    2. ' bool' → logprob: -10.250053405761719
    3. 'True' → logprob: -11.000053405761719
    4. 'False' → logprob: -14.000053405761719
    5. 'Bool' → logprob: -15.500053405761719
    6. 'return' → logprob: -16.87505340576172
    7. '<bool' → logprob: -17.37505340576172
    8. 'def' → logprob: -17.87505340576172
    9. '	bool' → logprob: -18.00005340576172
    10. '   ' → logprob: -18.00005340576172

Token 1782: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018402300775051117
    2. ':
' → logprob: -4.018402099609375
    3. ':return' → logprob: -8.768402099609375
    4. '       ' → logprob: -10.018402099609375
    5. ':def' → logprob: -10.768402099609375
    6. '   ' → logprob: -11.268402099609375
    7. 'def' → logprob: -12.018402099609375
    8. '->' → logprob: -12.393402099609375
    9. ':
' → logprob: -13.018402099609375
    10. '[' → logprob: -13.393402099609375

Token 1783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.250000953674316
    3. '           ' → logprob: -15.625000953674316
    4. '      ' → logprob: -16.750001907348633
    5. '     ' → logprob: -16.875001907348633
    6. '
' → logprob: -17.625001907348633
    7. '    ' → logprob: -18.000001907348633
    8. '               ' → logprob: -18.125001907348633
    9. '        ' → logprob: -18.375001907348633
    10. '        
' → logprob: -18.500001907348633

Token 1784: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3902815878391266
    2. 'if' (adapté à ' if') → logprob: -1.1402815580368042
    3. ' if' → logprob: -5.890281677246094
    4. 'def' → logprob: -7.890281677246094
    5. '
' → logprob: -8.515281677246094
    6. '   ' → logprob: -9.765281677246094
    7. '@' → logprob: -13.390281677246094
    8. '           ' → logprob: -13.890281677246094
    9. 'not' → logprob: -14.015281677246094
    10. '      ' → logprob: -14.265281677246094

Token 1785: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1269284337759018
    2. 'not' → logprob: -2.1269283294677734
    3. '	not' → logprob: -15.751928329467773
    4. '
' → logprob: -16.501928329467773
    5. '(not' → logprob: -17.126928329467773
    6. 'n' → logprob: -17.376928329467773
    7. ' no' → logprob: -17.876928329467773
    8. '   ' → logprob: -18.251928329467773
    9. 'points' → logprob: -18.376928329467773
    10. 'len' → logprob: -18.501928329467773

Token 1786: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.026303784921765327
    2. ' points' → logprob: -3.651303768157959
    3. '(points' → logprob: -13.401304244995117
    4. 'cls' → logprob: -14.026304244995117
    5. '	points' → logprob: -14.901304244995117
    6. 'p' → logprob: -15.651304244995117
    7. '
' → logprob: -15.776304244995117
    8. 'point' → logprob: -16.026304244995117
    9. '.points' → logprob: -16.151304244995117
    10. 'bool' → logprob: -17.026304244995117

Token 1787: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4370267391204834
    2. ':' → logprob: -1.0620267391204834
    3. '           ' → logprob: -4.8120269775390625
    4. '       ' → logprob: -9.437026977539062
    5. ':
' → logprob: -10.937026977539062
    6. ':return' → logprob: -10.937026977539062
    7. '          ' → logprob: -11.312026977539062
    8. ':

' → logprob: -12.062026977539062
    9. '():
' → logprob: -12.437026977539062
    10. '[' → logprob: -12.687026977539062

Token 1788: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032731371466070414
    2. '           ' → logprob: -6.003273010253906
    3. 'return' → logprob: -7.253273010253906
    4. ' return' → logprob: -9.753273010253906
    5. '   ' → logprob: -11.003273010253906
    6. ':
' → logprob: -12.503273010253906
    7. '               ' → logprob: -13.128273010253906
    8. ':return' → logprob: -13.253273010253906
    9. ':' → logprob: -13.378273010253906
    10. '      ' → logprob: -13.753273010253906

Token 1789: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017726782709360123
    2. ' return' → logprob: -4.517726898193359
    3. 'False' → logprob: -5.017726898193359
    4. '       ' → logprob: -10.89272689819336
    5. ' False' → logprob: -11.64272689819336
    6. '           ' → logprob: -11.64272689819336
    7. 'Return' → logprob: -14.14272689819336
    8. '   ' → logprob: -15.76772689819336
    9. 'True' → logprob: -16.01772689819336
    10. '        ' → logprob: -17.64272689819336

Token 1790: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692810595035553
    2. ' False' → logprob: -2.1269280910491943
    3. '(False' → logprob: -17.376928329467773
    4. 'True' → logprob: -18.751928329467773
    5. ' True' → logprob: -19.626928329467773
    6. '_false' → logprob: -19.626928329467773
    7. 'F' → logprob: -20.126928329467773
    8. '=False' → logprob: -20.251928329467773
    9. '.False' → logprob: -21.751928329467773
    10. ' false' → logprob: -21.876928329467773

Token 1791: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008700847625732422
    2. '
' → logprob: -4.758700847625732
    3. '        
' → logprob: -9.63370132446289
    4. '	' → logprob: -11.88370132446289
    5. ' 
' → logprob: -12.38370132446289
    6. '
' → logprob: -13.13370132446289
    7. '\n' → logprob: -13.75870132446289
    8. ',' → logprob: -14.13370132446289
    9. '    
' → logprob: -14.38370132446289
    10. '```' → logprob: -14.38370132446289

Token 1792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039111197111196816
    2. '
' → logprob: -7.875391006469727
    3. '	' → logprob: -12.250391006469727
    4. '        
' → logprob: -12.750391006469727
    5. '           ' → logprob: -13.750391006469727
    6. '        ' → logprob: -14.875391006469727
    7. '
' → logprob: -15.250391006469727
    8. '   ' → logprob: -15.625391006469727
    9. '               ' → logprob: -15.625391006469727
    10. 'return' → logprob: -15.750391006469727

Token 1793: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20151196420192719
    2. 'min' (adapté à ' min') → logprob: -1.7015119791030884
    3. ' min' → logprob: -9.451512336730957
    4. '   ' → logprob: -11.576512336730957
    5. '
' → logprob: -11.826512336730957
    6. '	min' → logprob: -14.076512336730957
    7. '           ' → logprob: -14.201512336730957
    8. 'return' → logprob: -14.451512336730957
    9. '(min' → logprob: -14.576512336730957
    10. 'max' → logprob: -15.576512336730957

Token 1794: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.048909466713666916
    2. '_x' → logprob: -3.0489094257354736
    3. '_
' → logprob: -8.798909187316895
    4. ' _' → logprob: -9.423909187316895
    5. 'x' → logprob: -10.798909187316895
    6. '_p' → logprob: -10.923909187316895
    7. '._' → logprob: -11.173909187316895
    8. '.' → logprob: -11.798909187316895
    9. '<|end|>' → logprob: -11.798909187316895
    10. '_)' → logprob: -12.173909187316895

Token 1795: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931514739990234
    2. ' =' → logprob: -0.6931514739990234
    3. '=
' → logprob: -12.818151473999023
    4. ' =
' → logprob: -13.818151473999023
    5. ' ' → logprob: -14.943151473999023
    6. '   ' → logprob: -16.068151473999023
    7. '=

' → logprob: -16.693151473999023
    8. '=min' → logprob: -17.068151473999023
    9. ')' → logprob: -18.068151473999023
    10. ',' → logprob: -18.318151473999023

Token 1796: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0031777136027812958
    2. ' min' → logprob: -5.753177642822266
    3. 'max' → logprob: -17.003177642822266
    4. '(min' → logprob: -18.628177642822266
    5. '[min' → logprob: -19.503177642822266
    6. 'mini' → logprob: -19.503177642822266
    7. '	min' → logprob: -20.003177642822266
    8. 'minimum' → logprob: -20.253177642822266
    9. '=min' → logprob: -21.253177642822266
    10. 'm' → logprob: -22.128177642822266

Token 1797: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.001955394633114338
    2. '(' → logprob: -6.376955509185791
    3. ' (' → logprob: -8.501955032348633
    4. 'p' → logprob: -10.626955032348633
    5. '(
' → logprob: -11.001955032348633
    6. ' p' → logprob: -12.501955032348633
    7. '(points' → logprob: -12.751955032348633
    8. '   ' → logprob: -14.626955032348633
    9. ' ' → logprob: -15.126955032348633
    10. ')' → logprob: -15.376955032348633

Token 1798: '.x' (ID: 3700)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.07642776519060135
    2. '.p' → logprob: -2.701427698135376
    3. '.' → logprob: -5.451427936553955
    4. 'for' → logprob: -7.076427936553955
    5. '.x' → logprob: -7.701427936553955
    6. ')' → logprob: -8.201427459716797
    7. '.for' → logprob: -8.576427459716797
    8. ' for' → logprob: -8.826427459716797
    9. ' .' → logprob: -9.826427459716797
    10. '(' → logprob: -10.326427459716797

Token 1799: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38689687848091125
    2. 'for' → logprob: -1.1368968486785889
    3. '(p' → logprob: -11.386897087097168
    4. ')' → logprob: -12.136897087097168
    5. '           ' → logprob: -13.261897087097168
    6. '       ' → logprob: -13.511897087097168
    7. '
' → logprob: -14.011897087097168
    8. '   ' → logprob: -14.261897087097168
    9. '```' → logprob: -14.386897087097168
    10. ' in' → logprob: -14.511897087097168

Token 1800: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005929154809564352
    2. ' p' → logprob: -5.130928993225098
    3. 'points' → logprob: -15.255928993225098
    4. '(p' → logprob: -15.630928993225098
    5. '   ' → logprob: -16.630929946899414
    6. ' ' → logprob: -16.755929946899414
    7. '
' → logprob: -17.630929946899414
    8. ' points' → logprob: -17.630929946899414
    9. 'point' → logprob: -17.630929946899414
    10. '[p' → logprob: -17.755929946899414

Token 1801: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.026547595858573914
    2. 'points' → logprob: -3.65154767036438
    3. ' p' → logprob: -8.6515474319458
    4. 'point' → logprob: -10.0265474319458
    5. ' points' → logprob: -10.6515474319458
    6. '(p' → logprob: -13.4015474319458
    7. '(points' → logprob: -14.0265474319458
    8. 'for' → logprob: -14.6515474319458
    9. 'in' → logprob: -15.4015474319458
    10. 'x' → logprob: -15.5265474319458

Token 1802: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -5.347765181795694e-05
    2. 'p' → logprob: -10.125053405761719
    3. ' points' → logprob: -11.500053405761719
    4. '(points' → logprob: -13.375053405761719
    5. 'point' → logprob: -14.250053405761719
    6. '
' → logprob: -15.625053405761719
    7. '	points' → logprob: -15.875053405761719
    8. '.points' → logprob: -15.875053405761719
    9. 'oints' → logprob: -16.75005340576172
    10. 'Points' → logprob: -16.75005340576172

Token 1803: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5757535696029663
    2. '       ' → logprob: -1.4507535696029663
    3. ' for' → logprob: -1.8257535696029663
    4. ')' → logprob: -3.700753688812256
    5. ')
' → logprob: -4.075753688812256
    6. '
' → logprob: -8.575753211975098
    7. '),' → logprob: -8.825753211975098
    8. '           ' → logprob: -9.700753211975098
    9. ',' → logprob: -10.575753211975098
    10. '               ' → logprob: -10.825753211975098

Token 1804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.703443770878948e-06
    2. ',' → logprob: -12.750007629394531
    3. '               ' → logprob: -13.000007629394531
    4. '           ' → logprob: -13.750007629394531
    5. '
' → logprob: -14.625007629394531
    6. 'min' → logprob: -15.375007629394531
    7. '      ' → logprob: -15.625007629394531
    8. '```' → logprob: -16.12500762939453
    9. '        ' → logprob: -16.62500762939453
    10. ')' → logprob: -16.87500762939453

Token 1805: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5035210251808167
    2. 'min' (adapté à ' min') → logprob: -1.5035209655761719
    3. ' min' → logprob: -1.7535209655761719
    4. '        ' → logprob: -10.503520965576172
    5. '```' → logprob: -10.753520965576172
    6. '	min' → logprob: -11.378520965576172
    7. '           ' → logprob: -11.503520965576172
    8. ' ' → logprob: -12.253520965576172
    9. '(min' → logprob: -12.878520965576172
    10. ',min' → logprob: -13.128520965576172

Token 1806: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.014362464658915997
    2. '_y' → logprob: -4.264362335205078
    3. 'x' → logprob: -9.139362335205078
    4. '(p' → logprob: -9.389362335205078
    5. 'import' → logprob: -13.014362335205078
    6. '```' → logprob: -13.514362335205078
    7. '_' → logprob: -13.764362335205078
    8. '   ' → logprob: -14.514362335205078
    9. '=' → logprob: -14.639362335205078
    10. 'y' → logprob: -14.764362335205078

Token 1807: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2547071874141693
    2. '=' → logprob: -1.5047072172164917
    3. ' for' → logprob: -6.379707336425781
    4. 'for' → logprob: -6.879707336425781
    5. ' in' → logprob: -10.254707336425781
    6. '       ' → logprob: -12.004707336425781
    7. '        ' → logprob: -12.629707336425781
    8. ' ' → logprob: -13.129707336425781
    9. 'in' → logprob: -13.629707336425781
    10. ')' → logprob: -14.629707336425781

Token 1808: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0067156096920371056
    2. ' min' → logprob: -5.006715774536133
    3. 'max' → logprob: -15.131715774536133
    4. '(min' → logprob: -17.256715774536133
    5. '[min' → logprob: -17.256715774536133
    6. '	min' → logprob: -18.881715774536133
    7. 'minimum' → logprob: -19.631715774536133
    8. '_min' → logprob: -20.006715774536133
    9. '=min' → logprob: -20.131715774536133
    10. '.min' → logprob: -20.256715774536133

Token 1809: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0003360582049936056
    2. 'p' → logprob: -8.000335693359375
    3. ' p' → logprob: -14.750335693359375
    4. '   ' → logprob: -17.000335693359375
    5. '(
' → logprob: -17.250335693359375
    6. '(' → logprob: -17.250335693359375
    7. '[p' → logprob: -17.625335693359375
    8. '```' → logprob: -18.125335693359375
    9. ' (' → logprob: -18.375335693359375
    10. 'for' → logprob: -18.500335693359375

Token 1810: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.08463017642498016
    2. 'y' → logprob: -2.709630250930786
    3. '.y' → logprob: -4.834630012512207
    4. 'x' → logprob: -5.834630012512207
    5. '.p' → logprob: -6.084630012512207
    6. 'p' → logprob: -6.834630012512207
    7. '[p' → logprob: -9.334630012512207
    8. '```' → logprob: -9.959630012512207
    9. '.x' → logprob: -10.209630012512207
    10. '_y' → logprob: -10.334630012512207

Token 1811: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31326499581336975
    2. 'for' → logprob: -1.3132649660110474
    3. ' in' → logprob: -14.188264846801758
    4. 'in' → logprob: -14.438264846801758
    5. ')' → logprob: -14.813264846801758
    6. '(p' → logprob: -15.063264846801758
    7. '(for' → logprob: -15.188264846801758
    8. '=' → logprob: -15.438264846801758
    9. '	for' → logprob: -15.938264846801758
    10. '       ' → logprob: -16.063264846801758

Token 1812: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002854924649000168
    2. ' p' → logprob: -6.002854824066162
    3. '(p' → logprob: -8.25285530090332
    4. 'points' → logprob: -9.12785530090332
    5. ' points' → logprob: -12.25285530090332
    6. '[p' → logprob: -12.62785530090332
    7. 'for' → logprob: -14.37785530090332
    8. '(points' → logprob: -15.00285530090332
    9. '<p' → logprob: -15.25285530090332
    10. '.p' → logprob: -16.00285530090332

Token 1813: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7544498443603516
    2. '.points' → logprob: -1.1294498443603516
    3. 'oints' → logprob: -2.2544498443603516
    4. 'in' → logprob: -3.3794498443603516
    5. ' in' → logprob: -3.5044498443603516
    6. '.x' → logprob: -4.254449844360352
    7. 'points' → logprob: -4.504449844360352
    8. ' for' → logprob: -4.754449844360352
    9. '(points' → logprob: -6.629449844360352
    10. ' points' → logprob: -7.129449844360352

Token 1814: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -7.755678961984813e-05
    2. 'p' → logprob: -9.625077247619629
    3. '(points' → logprob: -12.000077247619629
    4. ' points' → logprob: -12.250077247619629
    5. '.points' → logprob: -15.375077247619629
    6. 'oints' → logprob: -16.000078201293945
    7. '	points' → logprob: -16.375078201293945
    8. '
' → logprob: -16.750078201293945
    9. '[p' → logprob: -17.375078201293945
    10. '_points' → logprob: -18.000078201293945

Token 1815: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9071675539016724
    2. 'for' → logprob: -1.0321675539016724
    3. ' for' → logprob: -1.5321675539016724
    4. ')' → logprob: -3.782167434692383
    5. ')
' → logprob: -6.782167434692383
    6. '```' → logprob: -10.407167434692383
    7. '
' → logprob: -10.907167434692383
    8. '           ' → logprob: -11.032167434692383
    9. '	for' → logprob: -11.407167434692383
    10. '   ' → logprob: -11.532167434692383

Token 1816: '       ' (ID: 309)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7590227723121643
    2. 'min' → logprob: -0.8840227723121643
    3. '       ' → logprob: -2.1340227127075195
    4. 'max' → logprob: -8.50902271270752
    5. ' max' → logprob: -9.25902271270752
    6. '[min' → logprob: -10.50902271270752
    7. ' minimum' → logprob: -11.00902271270752
    8. '	min' → logprob: -11.13402271270752
    9. '(min' → logprob: -11.38402271270752
    10. '=min' → logprob: -12.38402271270752

Token 1817: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.006721536163240671
    2. ' max' → logprob: -5.006721496582031
    3. '       ' → logprob: -12.006721496582031
    4. 'min' → logprob: -17.38172149658203
    5. '	max' → logprob: -17.88172149658203
    6. '(max' → logprob: -18.25672149658203
    7. '_max' → logprob: -18.50672149658203
    8. '.max' → logprob: -19.88172149658203
    9. '[max' → logprob: -20.38172149658203
    10. '
' → logprob: -20.75672149658203

Token 1818: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.824579784530215e-05
    2. '_p' → logprob: -10.1250581741333
    3. '(p' → logprob: -11.2500581741333
    4. '_' → logprob: -13.1250581741333
    5. 'x' → logprob: -14.0000581741333
    6. ' _' → logprob: -14.3750581741333
    7. '```' → logprob: -14.3750581741333
    8. '   ' → logprob: -15.5000581741333
    9. ')_' → logprob: -15.5000581741333
    10. '_a' → logprob: -16.250059127807617

Token 1819: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. '   ' → logprob: -15.953889846801758
    4. '=
' → logprob: -17.078889846801758
    5. ' =
' → logprob: -17.203889846801758
    6. ',' → logprob: -18.203889846801758
    7. ' ' → logprob: -18.328889846801758
    8. ')' → logprob: -18.578889846801758
    9. '=max' → logprob: -18.953889846801758
    10. '       ' → logprob: -19.328889846801758

Token 1820: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004078401252627373
    2. ' max' → logprob: -5.504078388214111
    3. '(max' → logprob: -18.254077911376953
    4. 'min' → logprob: -19.004077911376953
    5. '	max' → logprob: -20.504077911376953
    6. '   ' → logprob: -20.879077911376953
    7. '_max' → logprob: -21.004077911376953
    8. '=max' → logprob: -21.254077911376953
    9. '[max' → logprob: -21.629077911376953
    10. ',max' → logprob: -22.504077911376953

Token 1821: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.7120533811976202e-05
    2. 'p' → logprob: -11.125017166137695
    3. '(' → logprob: -13.625017166137695
    4. '(
' → logprob: -14.625017166137695
    5. '(max' → logprob: -15.500017166137695
    6. 'x' → logprob: -16.125017166137695
    7. ' (' → logprob: -16.500017166137695
    8. '<p' → logprob: -16.625017166137695
    9. ' p' → logprob: -16.875017166137695
    10. '<|end|>' → logprob: -17.000017166137695

Token 1822: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -5.908022285439074e-05
    2. '(p' → logprob: -10.250059127807617
    3. 'x' → logprob: -10.875059127807617
    4. '.p' → logprob: -13.500059127807617
    5. '(x' → logprob: -13.500059127807617
    6. '```' → logprob: -13.750059127807617
    7. '_x' → logprob: -15.250059127807617
    8. '(' → logprob: -15.750059127807617
    9. '.y' → logprob: -16.625059127807617
    10. 'for' → logprob: -16.625059127807617

Token 1823: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3132745921611786
    2. 'for' → logprob: -1.313274621963501
    3. '(p' → logprob: -11.813274383544922
    4. '```' → logprob: -13.188274383544922
    5. '	for' → logprob: -13.688274383544922
    6. ')' → logprob: -14.313274383544922
    7. '(for' → logprob: -14.688274383544922
    8. '
' → logprob: -14.938274383544922
    9. '   ' → logprob: -15.688274383544922
    10. '       ' → logprob: -15.813274383544922

Token 1824: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.029919879510998726
    2. 'p' → logprob: -3.5299198627471924
    3. ' points' → logprob: -8.779919624328613
    4. ' p' → logprob: -11.279919624328613
    5. '(points' → logprob: -13.029919624328613
    6. 'point' → logprob: -15.029919624328613
    7. '	points' → logprob: -15.779919624328613
    8. '(p' → logprob: -16.77992057800293
    9. '.points' → logprob: -16.77992057800293
    10. '[p' → logprob: -16.90492057800293

Token 1825: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.01906801573932171
    2. ' points' → logprob: -4.019068241119385
    3. '(points' → logprob: -7.519068241119385
    4. '.points' → logprob: -8.769067764282227
    5. 'p' → logprob: -8.894067764282227
    6. '	points' → logprob: -9.644067764282227
    7. ' in' → logprob: -12.019067764282227
    8. ' p' → logprob: -12.519067764282227
    9. 'oints' → logprob: -12.894067764282227
    10. 'in' → logprob: -13.269067764282227

Token 1826: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0001863750658230856
    2. ' points' → logprob: -8.6251859664917
    3. '(points' → logprob: -12.0001859664917
    4. '.points' → logprob: -15.3751859664917
    5. '	points' → logprob: -16.000186920166016
    6. '
' → logprob: -16.125186920166016
    7. 'p' → logprob: -16.250186920166016
    8. 'point' → logprob: -18.000186920166016
    9. '   ' → logprob: -18.125186920166016
    10. '[' → logprob: -18.250186920166016

Token 1827: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05068221688270569
    2. ')' → logprob: -3.175682306289673
    3. '       ' → logprob: -5.050682067871094
    4. '),' → logprob: -6.800682067871094
    5. ',' → logprob: -9.300682067871094
    6. ')
' → logprob: -10.425682067871094
    7. ')p' → logprob: -12.925682067871094
    8. '):
' → logprob: -13.050682067871094
    9. 'for' → logprob: -13.300682067871094
    10. '   ' → logprob: -13.800682067871094

Token 1828: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018091293051838875
    2. ',' → logprob: -4.143091201782227
    3. ',max' → logprob: -6.768091201782227
    4. 'max' → logprob: -7.768091201782227
    5. ' max' → logprob: -7.893091201782227
    6. '(max' → logprob: -10.018091201782227
    7. ' ,' → logprob: -10.018091201782227
    8. '[max' → logprob: -11.893091201782227
    9. '        ' → logprob: -12.768091201782227
    10. '      ' → logprob: -13.768091201782227

Token 1829: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.07907804846763611
    2. ' max' → logprob: -2.579077959060669
    3. '       ' → logprob: -8.57907772064209
    4. '_max' → logprob: -16.079078674316406
    5. '	max' → logprob: -16.204078674316406
    6. '(max' → logprob: -17.329078674316406
    7. '.max' → logprob: -18.079078674316406
    8. '
' → logprob: -18.329078674316406
    9. 'min' → logprob: -18.954078674316406
    10. '        ' → logprob: -19.079078674316406

Token 1830: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.023293538717553e-05
    2. 'y' → logprob: -10.500030517578125
    3. '_x' → logprob: -13.000030517578125
    4. 'Y' → logprob: -15.375030517578125
    5. '.y' → logprob: -16.750030517578125
    6. '   ' → logprob: -16.875030517578125
    7. '(p' → logprob: -17.750030517578125
    8. '[' → logprob: -18.250030517578125
    9. ' y' → logprob: -18.750030517578125
    10. '@y' → logprob: -18.750030517578125

Token 1831: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. '=
' → logprob: -16.724077224731445
    4. '   ' → logprob: -17.599077224731445
    5. '=max' → logprob: -17.599077224731445
    6. ')' → logprob: -17.974077224731445
    7. '=

' → logprob: -18.224077224731445
    8. ' for' → logprob: -18.349077224731445
    9. ' ' → logprob: -18.349077224731445
    10. '>' → logprob: -18.724077224731445

Token 1832: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009128939709626138
    2. ' max' → logprob: -7.000912666320801
    3. 'min' → logprob: -13.6259126663208
    4. '(max' → logprob: -15.7509126663208
    5. '[max' → logprob: -18.875913619995117
    6. '	max' → logprob: -19.500913619995117
    7. '=max' → logprob: -20.500913619995117
    8. ' min' → logprob: -21.250913619995117
    9. '
' → logprob: -21.500913619995117
    10. ' ' → logprob: -21.875913619995117

Token 1833: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.45848218582978e-06
    2. 'p' → logprob: -13.12500286102295
    3. '(
' → logprob: -16.625001907348633
    4. '(' → logprob: -16.625001907348633
    5. '[p' → logprob: -16.750001907348633
    6. '```' → logprob: -17.000001907348633
    7. 'for' → logprob: -17.875001907348633
    8. ' (' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '<p' → logprob: -18.000001907348633

Token 1834: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.005708831362426281
    2. '.p' → logprob: -5.255708694458008
    3. '(p' → logprob: -8.505708694458008
    4. 'y' → logprob: -8.505708694458008
    5. '.x' → logprob: -10.130708694458008
    6. 'p' → logprob: -10.630708694458008
    7. '[p' → logprob: -12.880708694458008
    8. 'max' → logprob: -13.755708694458008
    9. ',y' → logprob: -14.630708694458008
    10. '<p' → logprob: -14.880708694458008

Token 1835: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760043263435364
    2. 'for' → logprob: -0.8260043263435364
    3. '(p' → logprob: -9.826004028320312
    4. 'in' → logprob: -13.201004028320312
    5. '_for' → logprob: -13.576004028320312
    6. '	for' → logprob: -13.576004028320312
    7. '(points' → logprob: -13.576004028320312
    8. ')' → logprob: -13.826004028320312
    9. 'For' → logprob: -14.326004028320312
    10. 'points' → logprob: -14.451004028320312

Token 1836: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0025283375289291143
    2. 'points' → logprob: -6.002528190612793
    3. ' p' → logprob: -10.002528190612793
    4. '(p' → logprob: -12.752528190612793
    5. ' points' → logprob: -13.252528190612793
    6. '
' → logprob: -14.002528190612793
    7. 'point' → logprob: -14.127528190612793
    8. '   ' → logprob: -15.502528190612793
    9. 'Points' → logprob: -15.502528190612793
    10. '[p' → logprob: -15.627528190612793

Token 1837: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5686091780662537
    2. 'points' → logprob: -1.5686092376708984
    3. '.points' → logprob: -1.8186092376708984
    4. '(points' → logprob: -2.9436092376708984
    5. '(p' → logprob: -5.568609237670898
    6. 'in' → logprob: -5.818609237670898
    7. ' points' → logprob: -6.568609237670898
    8. '.p' → logprob: -7.818609237670898
    9. ' for' → logprob: -7.818609237670898
    10. 'for' → logprob: -7.943609237670898

Token 1838: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0008514398941770196
    2. 'p' → logprob: -7.750851631164551
    3. '(points' → logprob: -7.875851631164551
    4. ' points' → logprob: -10.37585163116455
    5. '(p' → logprob: -11.75085163116455
    6. '[p' → logprob: -14.87585163116455
    7. '	points' → logprob: -15.00085163116455
    8. '.points' → logprob: -15.12585163116455
    9. '
' → logprob: -15.25085163116455
    10. 'point' → logprob: -15.62585163116455

Token 1839: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004404005594551563
    2. ')' → logprob: -6.629404067993164
    3. ':' → logprob: -6.629404067993164
    4. '):
' → logprob: -7.379404067993164
    5. '):' → logprob: -7.504404067993164
    6. ':
' → logprob: -7.754404067993164
    7. ',' → logprob: -9.504404067993164
    8. '           ' → logprob: -11.004404067993164
    9. '               ' → logprob: -11.379404067993164
    10. '   ' → logprob: -11.379404067993164

Token 1840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011808603449026123
    2. ':' → logprob: -9.375118255615234
    3. '           ' → logprob: -11.750118255615234
    4. '	' → logprob: -12.500118255615234
    5. '   ' → logprob: -12.625118255615234
    6. '               ' → logprob: -13.000118255615234
    7. ')' → logprob: -13.125118255615234
    8. 'return' → logprob: -13.250118255615234
    9. '<|end|>' → logprob: -13.250118255615234
    10. '      ' → logprob: -13.375118255615234

Token 1841: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008639270439743996
    2. 'return' (adapté à ' return') → logprob: -4.758639335632324
    3. ' return' → logprob: -10.758639335632324
    4. '   ' → logprob: -13.008639335632324
    5. '	return' → logprob: -14.508639335632324
    6. '           ' → logprob: -15.258639335632324
    7. '	' → logprob: -15.383639335632324
    8. '     ' → logprob: -16.258638381958008
    9. '```' → logprob: -16.633638381958008
    10. '      ' → logprob: -16.758638381958008

Token 1842: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.06196891888976097
    2. ' cls' → logprob: -2.8119688034057617
    3. '(cls' → logprob: -13.811968803405762
    4. '.cls' → logprob: -16.311969757080078
    5. 'super' → logprob: -16.561969757080078
    6. 'class' → logprob: -16.686969757080078
    7. 'classmethod' → logprob: -17.061969757080078
    8. '   ' → logprob: -17.936969757080078
    9. 'cl' → logprob: -18.811969757080078
    10. '_cls' → logprob: -19.061969757080078

Token 1843: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.0019313741941004992
    2. '.pattern' → logprob: -6.251931190490723
    3. 'match' → logprob: -13.376931190490723
    4. 'pattern' → logprob: -14.626931190490723
    5. '.' → logprob: -15.001931190490723
    6. '.matcher' → logprob: -16.00193214416504
    7. ' .' → logprob: -16.12693214416504
    8. '.matches' → logprob: -16.12693214416504
    9. '.MATCH' → logprob: -17.75193214416504
    10. '	match' → logprob: -18.00193214416504

Token 1844: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.0001129602751461789
    2. 'pattern' → logprob: -9.125112533569336
    3. 'Pattern' → logprob: -12.750112533569336
    4. ' pattern' → logprob: -15.250112533569336
    5. '_class' → logprob: -15.625112533569336
    6. '_' → logprob: -15.625112533569336
    7. '_patterns' → logprob: -15.625112533569336
    8. '_p' → logprob: -16.875112533569336
    9. '_pat' → logprob: -17.000112533569336
    10. '_PATTERN' → logprob: -17.250112533569336

Token 1845: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -4.320199877838604e-07
    2. 'points' → logprob: -14.875
    3. '(
' → logprob: -18.625
    4. '(point' → logprob: -19.25
    5. ' points' → logprob: -19.375
    6. '(' → logprob: -19.625
    7. '(parts' → logprob: -20.0
    8. '	points' → logprob: -20.25
    9. '```' → logprob: -20.625
    10. '.points' → logprob: -21.0

Token 1846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029518234077841043
    2. '(points' → logprob: -8.250295639038086
    3. ' ,' → logprob: -11.625295639038086
    4. 'points' → logprob: -11.625295639038086
    5. '       ' → logprob: -11.750295639038086
    6. '   ' → logprob: -12.750295639038086
    7. ',
' → logprob: -13.125295639038086
    8. '           ' → logprob: -13.750295639038086
    9. ' points' → logprob: -14.500295639038086
    10. ',p' → logprob: -14.750295639038086

Token 1847: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.703443770878948e-06
    2. 'points' → logprob: -12.375007629394531
    3. ' min' → logprob: -12.625007629394531
    4. 'max' → logprob: -17.37500762939453
    5. '[min' → logprob: -18.00000762939453
    6. '(min' → logprob: -18.25000762939453
    7. 'Points' → logprob: -19.87500762939453
    8. ' points' → logprob: -20.00000762939453
    9. '_points' → logprob: -20.62500762939453
    10. '       ' → logprob: -20.62500762939453

Token 1848: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.3213025744771585e-05
    2. 'x' → logprob: -10.375033378601074
    3. '(p' → logprob: -13.375033378601074
    4. 'cls' → logprob: -16.250032424926758
    5. 'X' → logprob: -16.750032424926758
    6. '_y' → logprob: -17.250032424926758
    7. '(points' → logprob: -17.250032424926758
    8. ')' → logprob: -17.375032424926758
    9. '```' → logprob: -17.500032424926758
    10. '_points' → logprob: -17.625032424926758

Token 1849: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010139751975657418
    2. ' ,' → logprob: -9.625101089477539
    3. ',p' → logprob: -10.500101089477539
    4. ',
' → logprob: -12.875101089477539
    5. ',min' → logprob: -13.125101089477539
    6. '   ' → logprob: -14.875101089477539
    7. ',m' → logprob: -15.250101089477539
    8. ')' → logprob: -15.250101089477539
    9. ',n' → logprob: -15.375101089477539
    10. '<|end|>' → logprob: -15.500101089477539

Token 1850: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0007099286303855479
    2. ' min' → logprob: -7.2507100105285645
    3. '[min' → logprob: -18.000709533691406
    4. '_min' → logprob: -18.625709533691406
    5. '(min' → logprob: -18.750709533691406
    6. '	min' → logprob: -19.375709533691406
    7. '=min' → logprob: -19.875709533691406
    8. '.min' → logprob: -20.500709533691406
    9. ',min' → logprob: -20.750709533691406
    10. 'max' → logprob: -21.000709533691406

Token 1851: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0035360404290258884
    2. 'min' → logprob: -6.003536224365234
    3. 'y' → logprob: -8.003536224365234
    4. '_min' → logprob: -8.003536224365234
    5. ',' → logprob: -8.628536224365234
    6. '_x' → logprob: -9.003536224365234
    7. 'Y' → logprob: -10.753536224365234
    8. '(min' → logprob: -11.003536224365234
    9. '_,' → logprob: -11.503536224365234
    10. 'p' → logprob: -11.878536224365234

Token 1852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019591135787777603
    2. ',max' → logprob: -8.625195503234863
    3. ' ,' → logprob: -11.500195503234863
    4. ',p' → logprob: -12.750195503234863
    5. ',min' → logprob: -14.250195503234863
    6. 'max' → logprob: -14.375195503234863
    7. '`,' → logprob: -14.750195503234863
    8. '```' → logprob: -15.000195503234863
    9. '       ' → logprob: -15.250195503234863
    10. '   ' → logprob: -15.625195503234863

Token 1853: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.547789674485102e-05
    2. ' max' → logprob: -10.250035285949707
    3. '(max' → logprob: -19.375036239624023
    4. '       ' → logprob: -20.000036239624023
    5. '[max' → logprob: -20.375036239624023
    6. '   ' → logprob: -20.500036239624023
    7. '_max' → logprob: -20.875036239624023
    8. '	max' → logprob: -21.125036239624023
    9. '```' → logprob: -21.500036239624023
    10. '
' → logprob: -22.000036239624023

Token 1854: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.3451433409936726e-05
    2. 'x' → logprob: -10.875033378601074
    3. '       ' → logprob: -12.250033378601074
    4. ',' → logprob: -12.875033378601074
    5. '   ' → logprob: -13.125033378601074
    6. 'max' → logprob: -13.750033378601074
    7. '```' → logprob: -14.000033378601074
    8. '_y' → logprob: -14.500033378601074
    9. '_max' → logprob: -14.625033378601074
    10. 'X' → logprob: -14.625033378601074

Token 1855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.265633419388905e-05
    2. ' ,' → logprob: -10.125062942504883
    3. ',p' → logprob: -11.625062942504883
    4. ',
' → logprob: -11.750062942504883
    5. ',min' → logprob: -13.125062942504883
    6. '   ' → logprob: -13.750062942504883
    7. ',max' → logprob: -14.250062942504883
    8. ',m' → logprob: -14.750062942504883
    9. '```' → logprob: -15.625062942504883
    10. ',y' → logprob: -15.875062942504883

Token 1856: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0016209072200581431
    2. 'min' → logprob: -7.001620769500732
    3. ' max' → logprob: -7.251620769500732
    4. ' min' → logprob: -15.87662124633789
    5. '_max' → logprob: -19.12662124633789
    6. '(max' → logprob: -20.50162124633789
    7. ',max' → logprob: -20.62662124633789
    8. 'm' → logprob: -21.50162124633789
    9. '[max' → logprob: -21.50162124633789
    10. '	max' → logprob: -21.62662124633789

Token 1857: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.10867039859294891
    2. ',' → logprob: -2.483670473098755
    3. '_x' → logprob: -4.858670234680176
    4. 'max' → logprob: -5.233670234680176
    5. ',max' → logprob: -6.358670234680176
    6. '_max' → logprob: -6.608670234680176
    7. '_,' → logprob: -6.733670234680176
    8. ',p' → logprob: -7.733670234680176
    9. '```' → logprob: -7.983670234680176
    10. ',y' → logprob: -8.358670234680176

Token 1858: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. '       ' → logprob: -13.000004768371582
    3. ' ,' → logprob: -13.500004768371582
    4. '           ' → logprob: -14.625004768371582
    5. ',
' → logprob: -15.125004768371582
    6. '   ' → logprob: -15.375004768371582
    7. ',p' → logprob: -16.0000057220459
    8. ',class' → logprob: -16.3750057220459
    9. '
' → logprob: -17.2500057220459
    10. '         ' → logprob: -17.6250057220459

Token 1859: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.00861468818038702
    2. ' cls' → logprob: -4.758614540100098
    3. '(cls' → logprob: -16.008615493774414
    4. '.cls' → logprob: -17.883615493774414
    5. '_cls' → logprob: -19.633615493774414
    6. 'class' → logprob: -19.758615493774414
    7. 'cl' → logprob: -20.258615493774414
    8. '   ' → logprob: -21.883615493774414
    9. ' ' → logprob: -22.258615493774414
    10. 'classmethod' → logprob: -22.383615493774414

Token 1860: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.13374754786491394
    2. ',' → logprob: -2.1337475776672363
    3. 'pattern' → logprob: -5.008747577667236
    4. '(pattern' → logprob: -10.008747100830078
    5. '       ' → logprob: -11.258747100830078
    6. '```' → logprob: -11.258747100830078
    7. '   ' → logprob: -11.383747100830078
    8. ',p' → logprob: -11.633747100830078
    9. '.points' → logprob: -12.008747100830078
    10. '[' → logprob: -12.633747100830078

Token 1861: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1862: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.943783253314905e-05
    2. '
' → logprob: -9.750059127807617
    3. ' class' → logprob: -14.625059127807617
    4. '<class' → logprob: -15.000059127807617
    5. '"class' → logprob: -16.125059127807617
    6. '

' → logprob: -16.625059127807617
    7. '  
' → logprob: -17.000059127807617
    8. '    
' → logprob: -17.375059127807617
    9. 'classmethod' → logprob: -17.375059127807617
    10. '<|end|>' → logprob: -17.500059127807617

Token 1863: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -3.881560041918419e-05
    2. ' Digit' → logprob: -10.375039100646973
    3. 'Character' → logprob: -12.250039100646973
    4. 'class' → logprob: -12.875039100646973
    5. 'Digital' → logprob: -16.125038146972656
    6. 'Letter' → logprob: -17.250038146972656
    7. 'Point' → logprob: -18.125038146972656
    8. '
' → logprob: -18.375038146972656
    9. 'digit' → logprob: -18.375038146972656
    10. '_digit' → logprob: -18.500038146972656

Token 1864: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '٧' → logprob: -19.125
    3. '۷' → logprob: -19.375
    4. '৭' → logprob: -20.125
    5. '७' → logprob: -20.125
    6. '```' → logprob: -20.875
    7. '７' → logprob: -21.0
    8. ' ' → logprob: -21.125
    9. 'Seven' → logprob: -21.25
    10. '8' → logprob: -21.75

Token 1865: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: 0.0
    2. 'Character' → logprob: -17.875
    3. '<Character' → logprob: -18.875
    4. '(' → logprob: -19.0
    5. '(Class' → logprob: -20.125
    6. '(character' → logprob: -21.0
    7. '(
' → logprob: -21.125
    8. '.Character' → logprob: -22.125
    9. '(Char' → logprob: -22.125
    10. '```' → logprob: -23.25

Token 1866: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7409079074859619
    2. '(Character' → logprob: -0.7409079074859619
    3. '):' → logprob: -3.490907907485962
    4. '   ' → logprob: -4.490907669067383
    5. ':
' → logprob: -6.115907669067383
    6. 'Character' → logprob: -7.240907669067383
    7. '<Character' → logprob: -7.490907669067383
    8. ')' → logprob: -7.740907669067383
    9. 'class' → logprob: -8.240907669067383
    10. ':' → logprob: -8.490907669067383

Token 1867: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024988483637571335
    2. 'pattern' → logprob: -6.502498626708984
    3. 'class' → logprob: -7.002498626708984
    4. ' pattern' → logprob: -10.377498626708984
    5. '```' → logprob: -10.377498626708984
    6. ':
' → logprob: -11.502498626708984
    7. '(pattern' → logprob: -12.377498626708984
    8. '.pattern' → logprob: -12.627498626708984
    9. '):
' → logprob: -12.877498626708984
    10. '``' → logprob: -14.252498626708984

Token 1868: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: 0.0
    2. ' pattern' → logprob: -18.25
    3. '   ' → logprob: -19.125
    4. 'pat' → logprob: -20.5
    5. 'class' → logprob: -20.75
    6. '```' → logprob: -21.5
    7. '
' → logprob: -22.75
    8. 'patterns' → logprob: -23.125
    9. '``' → logprob: -24.375
    10. 'char' → logprob: -24.75

Token 1869: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04871442914009094
    2. '=' → logprob: -3.0487143993377686
    3. '=[
' → logprob: -9.423714637756348
    4. '   ' → logprob: -10.048714637756348
    5. '```' → logprob: -13.923714637756348
    6. '=[' → logprob: -14.298714637756348
    7. ':' → logprob: -14.798714637756348
    8. '[
' → logprob: -15.048714637756348
    9. '=
' → logprob: -15.673714637756348
    10. ' ' → logprob: -15.673714637756348

Token 1870: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0001266613689949736
    2. '[' → logprob: -9.000126838684082
    3. '   ' → logprob: -12.750126838684082
    4. '["' → logprob: -15.500126838684082
    5. ' [
' → logprob: -16.250125885009766
    6. ' ' → logprob: -20.875125885009766
    7. '       ' → logprob: -21.000125885009766
    8. '['' → logprob: -21.250125885009766
    9. '=[
' → logprob: -21.500125885009766
    10. '```' → logprob: -21.625125885009766

Token 1871: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21711598336696625
    2. '[
' → logprob: -2.217115879058838
    3. '   ' → logprob: -2.467115879058838
    4. '[' → logprob: -6.592115879058838
    5. '["' → logprob: -10.342116355895996
    6. ' [
' → logprob: -12.717116355895996
    7. '     ' → logprob: -13.467116355895996
    8. '           ' → logprob: -13.842116355895996
    9. '"' → logprob: -14.092116355895996
    10. '{
' → logprob: -14.467116355895996

Token 1872: ' "' (ID: 392)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.016975803300738335
    2. '"' (adapté à ' "') → logprob: -4.2669758796691895
    3. '[' → logprob: -6.7669758796691895
    4. '   ' → logprob: -7.2669758796691895
    5. '       ' → logprob: -7.2669758796691895
    6. '["' → logprob: -8.266975402832031
    7. '"class' → logprob: -13.641975402832031
    8. ' [
' → logprob: -13.891975402832031
    9. '           ' → logprob: -14.141975402832031
    10. ' ' → logprob: -14.891975402832031

Token 1873: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.09280990809202194
    2. '"' → logprob: -2.5928099155426025
    3. '[
' → logprob: -4.342809677124023
    4. '["' → logprob: -7.217809677124023
    5. '[' → logprob: -9.967809677124023
    6. '011' → logprob: -12.217809677124023
    7. '   ' → logprob: -12.217809677124023
    8. '110' → logprob: -12.217809677124023
    9. '```' → logprob: -12.342809677124023
    10. ' ' → logprob: -12.342809677124023

Token 1874: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.12883295118808746
    2. '",' → logprob: -2.128833055496216
    3. '"' → logprob: -6.878832817077637
    4. '   ' → logprob: -7.878832817077637
    5. '",
' → logprob: -8.753832817077637
    6. '",[' → logprob: -9.128832817077637
    7. '',
' → logprob: -9.628832817077637
    8. '","' → logprob: -10.128832817077637
    9. ',
' → logprob: -10.378832817077637
    10. ',"' → logprob: -10.503832817077637

Token 1875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002616801531985402
    2. '"' → logprob: -6.002616882324219
    3. '[
' → logprob: -9.752616882324219
    4. '           ' → logprob: -10.127616882324219
    5. '   ' → logprob: -10.752616882324219
    6. '[' → logprob: -11.377616882324219
    7. '	' → logprob: -13.252616882324219
    8. '               ' → logprob: -13.252616882324219
    9. '      ' → logprob: -13.377616882324219
    10. '["' → logprob: -13.877616882324219

Token 1876: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -3.249780638725497e-05
    2. '100' → logprob: -10.625032424926758
    3. ' ' → logprob: -13.250032424926758
    4. '000' → logprob: -13.500032424926758
    5. '   ' → logprob: -13.625032424926758
    6. '001' → logprob: -13.625032424926758
    7. '       ' → logprob: -13.875032424926758
    8. ''' → logprob: -14.250032424926758
    9. '010' → logprob: -14.500032424926758
    10. ' "' → logprob: -16.000032424926758

Token 1877: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.0514066219329834
    2. '000' → logprob: -3.0514066219329834
    3. '100' → logprob: -6.5514068603515625
    4. '010' → logprob: -7.0514068603515625
    5. '"' → logprob: -7.8014068603515625
    6. '011' → logprob: -9.551406860351562
    7. ''' → logprob: -11.051406860351562
    8. '111' → logprob: -11.676406860351562
    9. '``' → logprob: -12.426406860351562
    10. '
' → logprob: -13.051406860351562

Token 1878: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.07011715322732925
    2. '",' → logprob: -2.820117235183716
    3. '"' → logprob: -5.070116996765137
    4. ',
' → logprob: -7.945116996765137
    5. '',
' → logprob: -8.320116996765137
    6. '","' → logprob: -8.320116996765137
    7. '       ' → logprob: -8.320116996765137
    8. '<|end|>' → logprob: -8.820116996765137
    9. '",
' → logprob: -9.320116996765137
    10. '   ' → logprob: -9.320116996765137

Token 1879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023323511704802513
    2. '"' → logprob: -3.7733235359191895
    3. '           ' → logprob: -10.023323059082031
    4. '   ' → logprob: -11.023323059082031
    5. '               ' → logprob: -11.398323059082031
    6. '      ' → logprob: -13.148323059082031
    7. '	' → logprob: -14.023323059082031
    8. ' "' → logprob: -14.273323059082031
    9. '"class' → logprob: -14.273323059082031
    10. '        ' → logprob: -14.523323059082031

Token 1880: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.009777694940567017
    2. '       ' → logprob: -4.634777545928955
    3. '   ' → logprob: -11.634778022766113
    4. '"class' → logprob: -12.384778022766113
    5. '111' → logprob: -12.884778022766113
    6. ''' → logprob: -13.134778022766113
    7. '```' → logprob: -14.134778022766113
    8. '           ' → logprob: -14.259778022766113
    9. '``' → logprob: -14.509778022766113
    10. ' ' → logprob: -14.634778022766113

Token 1881: '010' (ID: 13522)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000654654751997441
    2. '000' → logprob: -8.125654220581055
    3. '111' → logprob: -8.750654220581055
    4. '100' → logprob: -9.375654220581055
    5. '010' → logprob: -9.625654220581055
    6. ''' → logprob: -10.750654220581055
    7. '110' → logprob: -11.250654220581055
    8. '001' → logprob: -12.625654220581055
    9. ' ' → logprob: -13.000654220581055
    10. '011' → logprob: -13.125654220581055

Token 1882: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.14746646583080292
    2. '",' → logprob: -2.1474664211273193
    3. '"' → logprob: -4.147466659545898
    4. '<|end|>' → logprob: -6.147466659545898
    5. '',
' → logprob: -7.397466659545898
    6. ',
' → logprob: -7.647466659545898
    7. '","' → logprob: -8.022466659545898
    8. '   ' → logprob: -8.272466659545898
    9. ' ",
' → logprob: -9.022466659545898
    10. '       ' → logprob: -9.272466659545898

Token 1883: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5270053148269653
    2. '       ' → logprob: -0.9020053148269653
    3. ' "' → logprob: -6.152005195617676
    4. '   ' → logprob: -6.777005195617676
    5. '           ' → logprob: -8.777005195617676
    6. '"class' → logprob: -8.777005195617676
    7. ''' → logprob: -9.277005195617676
    8. ' ' → logprob: -9.777005195617676
    9. '[' → logprob: -10.402005195617676
    10. '      ' → logprob: -10.902005195617676

Token 1884: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0003918271977454424
    2. '       ' → logprob: -7.875391960144043
    3. '   ' → logprob: -11.875391960144043
    4. ' "' → logprob: -13.375391960144043
    5. ' ' → logprob: -13.750391960144043
    6. '           ' → logprob: -13.875391960144043
    7. ''' → logprob: -14.500391960144043
    8. '	' → logprob: -16.125391006469727
    9. '010' → logprob: -16.125391006469727
    10. '               ' → logprob: -16.375391006469727

Token 1885: '100' (ID: 1353)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1010856106877327
    2. '010' → logprob: -2.351085662841797
    3. '100' → logprob: -7.851085662841797
    4. '111' → logprob: -8.351085662841797
    5. '001' → logprob: -8.976085662841797
    6. ''' → logprob: -10.476085662841797
    7. '   ' → logprob: -10.601085662841797
    8. '000' → logprob: -10.726085662841797
    9. '110' → logprob: -11.226085662841797
    10. '011' → logprob: -11.351085662841797

Token 1886: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -1.1429381370544434
    2. '",' → logprob: -1.3929381370544434
    3. '<|end|>' → logprob: -1.8929381370544434
    4. '   ' → logprob: -2.0179381370544434
    5. '       ' → logprob: -3.3929381370544434
    6. ',' → logprob: -3.3929381370544434
    7. '"' → logprob: -3.5179381370544434
    8. ',
' → logprob: -3.5179381370544434
    9. ')' → logprob: -5.392938137054443
    10. '[
' → logprob: -5.767938137054443

Token 1887: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03126348555088043
    2. '"' → logprob: -3.531263589859009
    3. '   ' → logprob: -7.15626335144043
    4. '[
' → logprob: -8.15626335144043
    5. '"class' → logprob: -8.65626335144043
    6. ' "' → logprob: -9.53126335144043
    7. ''' → logprob: -10.15626335144043
    8. '"]' → logprob: -10.28126335144043
    9. ']' → logprob: -10.40626335144043
    10. '[' → logprob: -10.65626335144043

Token 1888: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.002157399198040366
    2. ' "' → logprob: -6.377157211303711
    3. '       ' → logprob: -8.377157211303711
    4. ''' → logprob: -9.252157211303711
    5. '111' → logprob: -9.752157211303711
    6. '"class' → logprob: -10.127157211303711
    7. '   ' → logprob: -11.752157211303711
    8. '100' → logprob: -12.377157211303711
    9. ' ' → logprob: -12.752157211303711
    10. '`' → logprob: -13.252157211303711

Token 1889: '100' (ID: 1353)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.001457735663279891
    2. '"' → logprob: -7.001457691192627
    3. '100' → logprob: -7.626457691192627
    4. ''' → logprob: -9.876458168029785
    5. '110' → logprob: -13.251458168029785
    6. '0' → logprob: -13.376458168029785
    7. ' ' → logprob: -13.751458168029785
    8. '000' → logprob: -14.251458168029785
    9. '```' → logprob: -14.751458168029785
    10. '       ' → logprob: -15.001458168029785

Token 1890: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.321632981300354
    2. '"
' → logprob: -1.571632981300354
    3. '   ' → logprob: -2.8216328620910645
    4. '"]' → logprob: -4.9466328620910645
    5. '",
' → logprob: -8.821633338928223
    6. ']' → logprob: -8.821633338928223
    7. '"class' → logprob: -9.321633338928223
    8. '       ' → logprob: -9.821633338928223
    9. '"]
' → logprob: -9.821633338928223
    10. ''' → logprob: -9.946633338928223

Token 1891: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034750174381770194
    2. 'class' → logprob: -9.000347137451172
    3. '"' → logprob: -9.625347137451172
    4. ']' → logprob: -9.875347137451172
    5. ''' → logprob: -10.625347137451172
    6. ',
' → logprob: -10.750347137451172
    7. ']
' → logprob: -11.000347137451172
    8. ',' → logprob: -11.875347137451172
    9. '"
' → logprob: -12.000347137451172
    10. '"class' → logprob: -12.250347137451172

Token 1892: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037013579276390374
    2. 'class' → logprob: -9.000370025634766
    3. ']
' (adapté à ' ]
') → logprob: -9.250370025634766
    4. '
' → logprob: -9.375370025634766
    5. ']' → logprob: -10.000370025634766
    6. '"
' → logprob: -12.375370025634766
    7. '    
' → logprob: -12.625370025634766
    8. '"' → logprob: -12.875370025634766
    9. ''
' → logprob: -13.250370025634766
    10. ':
' → logprob: -13.625370025634766

Token 1893: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065030320547521114
    2. 'class' → logprob: -5.381503105163574
    3. ':
' → logprob: -7.381503105163574
    4. 'char' → logprob: -7.506503105163574
    5. '
' → logprob: -8.131503105163574
    6. ':' → logprob: -8.506503105163574
    7. '{
' → logprob: -9.506503105163574
    8. '```' → logprob: -9.756503105163574
    9. '[
' → logprob: -10.756503105163574
    10. '[' → logprob: -11.631503105163574

Token 1894: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.0001584850688232109
    2. 'pattern' → logprob: -9.125158309936523
    3. '   ' → logprob: -10.000158309936523
    4. ' char' → logprob: -13.375158309936523
    5. 'class' → logprob: -13.500158309936523
    6. '
' → logprob: -14.000158309936523
    7. '```' → logprob: -16.375158309936523
    8. '_char' → logprob: -16.625158309936523
    9. '.char' → logprob: -16.625158309936523
    10. '	char' → logprob: -17.250158309936523

Token 1895: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -8.537868779967539e-06
    2. 'repr' → logprob: -11.750008583068848
    3. 'char' → logprob: -14.625008583068848
    4. '_char' → logprob: -17.25000762939453
    5. 'class' → logprob: -18.87500762939453
    6. '_rep' → logprob: -19.00000762939453
    7. '_chars' → logprob: -19.12500762939453
    8. 'classmethod' → logprob: -19.75000762939453
    9. '<char' → logprob: -20.25000762939453
    10. '_' → logprob: -20.62500762939453

Token 1896: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02329718880355358
    2. ' =' → logprob: -3.773297071456909
    3. '='' → logprob: -9.898297309875488
    4. ' ='' → logprob: -13.648297309875488
    5. ''' → logprob: -16.148296356201172
    6. '=
' → logprob: -16.648296356201172
    7. ':' → logprob: -17.398296356201172
    8. ' ' → logprob: -17.773296356201172
    9. ''=' → logprob: -17.773296356201172
    10. ' '' → logprob: -18.398296356201172

Token 1897: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.1008713702030946e-06
    2. ' '' → logprob: -13.875001907348633
    3. '7' → logprob: -14.250001907348633
    4. '"' → logprob: -14.875001907348633
    5. '`' → logprob: -16.375001907348633
    6. '('' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '‘' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.750001907348633
    10. '’' → logprob: -20.875001907348633

Token 1898: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.03804149478673935
    2. ''' → logprob: -3.288041591644287
    3. '"' → logprob: -18.288042068481445
    4. ' ' → logprob: -20.038042068481445
    5. ' '' → logprob: -20.413042068481445
    6. '`' → logprob: -20.913042068481445
    7. ''.' → logprob: -20.913042068481445
    8. '７' → logprob: -21.288042068481445
    9. ''''' → logprob: -21.288042068481445
    10. '٧' → logprob: -21.288042068481445

Token 1899: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12970615923404694
    2. '
' → logprob: -2.2547061443328857
    3. '

' → logprob: -4.254706382751465
    4. 'class' → logprob: -7.129706382751465
    5. ''' → logprob: -7.254706382751465
    6. '<|end|>' → logprob: -8.504706382751465
    7. '```' → logprob: -9.004706382751465
    8. ':' → logprob: -9.004706382751465
    9. ':

' → logprob: -9.129706382751465
    10. '@' → logprob: -9.254706382751465

Token 1900: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0384385883808136
    2. '   ' → logprob: -3.288438558578491
    3. '    
' → logprob: -9.16343879699707
    4. '```' → logprob: -9.28843879699707
    5. '@' → logprob: -9.66343879699707
    6. 'class' → logprob: -10.28843879699707
    7. '

' → logprob: -10.53843879699707
    8. '
' → logprob: -10.53843879699707
    9. '  
' → logprob: -11.28843879699707
    10. '<|end|>' → logprob: -11.53843879699707

Token 1901: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0453384667634964
    2. '@' (adapté à ' @') → logprob: -3.1703383922576904
    3. '   ' → logprob: -6.1703386306762695
    4. '

' → logprob: -9.67033863067627
    5. '@
' → logprob: -9.79533863067627
    6. '    
' → logprob: -10.54533863067627
    7. '@class' → logprob: -10.54533863067627
    8. ' @' → logprob: -10.79533863067627
    9. '
' → logprob: -10.92033863067627
    10. '@All' → logprob: -12.29533863067627

Token 1902: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -1.5048530030981055e-06
    2. 'class' → logprob: -13.500001907348633
    3. '@' → logprob: -17.375001907348633
    4. 'staticmethod' → logprob: -19.250001907348633
    5. '@class' → logprob: -19.500001907348633
    6. '"class' → logprob: -22.875001907348633
    7. '<class' → logprob: -23.750001907348633
    8. 'property' → logprob: -24.000001907348633
    9. '@dat' → logprob: -24.125001907348633
    10. 'aclass' → logprob: -24.375001907348633

Token 1903: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8122603893280029
    2. '   ' → logprob: -0.9372603893280029
    3. 'def' → logprob: -1.812260389328003
    4. '  ' → logprob: -8.437260627746582
    5. '.' → logprob: -8.687260627746582
    6. '(' → logprob: -8.937260627746582
    7. '[' → logprob: -9.187260627746582
    8. '@' → logprob: -9.562260627746582
    9. ' ' → logprob: -9.562260627746582
    10. '<|end|>' → logprob: -9.562260627746582

Token 1904: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003022153687197715
    2. '   ' → logprob: -8.5003023147583
    3. ' def' → logprob: -9.2503023147583
    4. '
' → logprob: -13.3753023147583
    5. ':def' → logprob: -14.3753023147583
    6. 'async' → logprob: -15.3753023147583
    7. ':' → logprob: -16.125301361083984
    8. '@' → logprob: -16.875301361083984
    9. '	def' → logprob: -16.875301361083984
    10. 'class' → logprob: -17.375301361083984

Token 1905: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.4259644558478612e-05
    2. 'try' → logprob: -11.250014305114746
    3. ' def' → logprob: -13.750014305114746
    4. 'async' → logprob: -16.62501335144043
    5. '
' → logprob: -20.37501335144043
    6. '   ' → logprob: -21.00001335144043
    7. '```' → logprob: -21.75001335144043
    8. '`' → logprob: -21.87501335144043
    9. '@' → logprob: -22.00001335144043
    10. '	def' → logprob: -22.25001335144043

Token 1906: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -9.615255839889869e-05
    2. ' try' → logprob: -9.250096321105957
    3. 'def' → logprob: -17.25009536743164
    4. '.try' → logprob: -19.75009536743164
    5. '_try' → logprob: -20.50009536743164
    6. '
' → logprob: -22.00009536743164
    7. '	try' → logprob: -22.50009536743164
    8. ' ' → logprob: -23.25009536743164
    9. 'Try' → logprob: -23.37509536743164
    10. '  ' → logprob: -23.37509536743164

Token 1907: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -1.1472419600977446e-06
    2. 'match' → logprob: -14.000000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_MATCH' → logprob: -18.250001907348633
    5. 'Match' → logprob: -18.500001907348633
    6. '_m' → logprob: -18.750001907348633
    7. '```' → logprob: -19.000001907348633
    8. '_matching' → logprob: -19.250001907348633
    9. '_mat' → logprob: -19.500001907348633
    10. '_
' → logprob: -20.000001907348633

Token 1908: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.1472419600977446e-06
    2. 'cls' → logprob: -14.000000953674316
    3. '(' → logprob: -16.125001907348633
    4. ' (' → logprob: -16.375001907348633
    5. '(cl' → logprob: -17.750001907348633
    6. '(
' → logprob: -17.875001907348633
    7. ' cls' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '(class' → logprob: -19.250001907348633
    10. '.cls' → logprob: -19.500001907348633

Token 1909: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.018206950277090073
    2. ',' → logprob: -4.01820707321167
    3. '   ' → logprob: -10.643206596374512
    4. ')' → logprob: -11.643206596374512
    5. '(' → logprob: -11.893206596374512
    6. 'def' → logprob: -12.393206596374512
    7. 'cls' → logprob: -13.018206596374512
    8. ' (' → logprob: -13.143206596374512
    9. ',
' → logprob: -13.518206596374512
    10. '       ' → logprob: -13.643206596374512

Token 1910: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6931827068328857
    2. 'cls' → logprob: -0.6931827068328857
    3. ' points' → logprob: -10.318182945251465
    4. ' cls' → logprob: -13.443182945251465
    5. 'pts' → logprob: -14.568182945251465
    6. 'cl' → logprob: -15.318182945251465
    7. 'class' → logprob: -16.06818199157715
    8. '(cls' → logprob: -16.06818199157715
    9. '(points' → logprob: -17.56818199157715
    10. '   ' → logprob: -17.94318199157715

Token 1911: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6795713305473328
    2. ')' → logprob: -1.3045713901519775
    3. '==' → logprob: -2.5545713901519775
    4. ' ==' → logprob: -3.1795713901519775
    5. '(points' → logprob: -4.054571151733398
    6. ',' → logprob: -4.304571151733398
    7. '(Set' → logprob: -4.429571151733398
    8. '(set' → logprob: -4.429571151733398
    9. '(cls' → logprob: -4.929571151733398
    10. ' in' → logprob: -5.429571151733398

Token 1912: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.00013166792632546276
    2. 'cls' → logprob: -9.375131607055664
    3. 'set' → logprob: -10.500131607055664
    4. ' Set' → logprob: -11.125131607055664
    5. '_set' → logprob: -13.250131607055664
    6. '(Set' → logprob: -13.250131607055664
    7. '_Set' → logprob: -15.750131607055664
    8. 'Sets' → logprob: -15.875131607055664
    9. 'True' → logprob: -16.000131607055664
    10. '[' → logprob: -16.250131607055664

Token 1913: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013197619700804353
    2. '(p' → logprob: -7.751319885253906
    3. '(Point' → logprob: -8.001319885253906
    4. '<Point' → logprob: -8.126319885253906
    5. '(' → logprob: -9.001319885253906
    6. ')' → logprob: -9.501319885253906
    7. '['' → logprob: -11.626319885253906
    8. '.Point' → logprob: -11.626319885253906
    9. '(points' → logprob: -11.626319885253906
    10. '[p' → logprob: -11.751319885253906

Token 1914: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.128163257315464e-07
    2. ' Point' → logprob: -15.375
    3. '	Point' → logprob: -17.875
    4. '.Point' → logprob: -18.0
    5. '<Point' → logprob: -18.125
    6. 'p' → logprob: -18.375
    7. '(Point' → logprob: -18.5
    8. '_point' → logprob: -20.0
    9. 'Points' → logprob: -20.0
    10. '_Point' → logprob: -20.125

Token 1915: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007709669880568981
    2. '):' → logprob: -4.882709503173828
    3. '):
' → logprob: -9.382709503173828
    4. '   ' → logprob: -11.132709503173828
    5. ' )' → logprob: -13.382709503173828
    6. '       ' → logprob: -13.882709503173828
    7. ')==' → logprob: -14.757709503173828
    8. ')
' → logprob: -14.882709503173828
    9. ':' → logprob: -14.882709503173828
    10. ')>' → logprob: -15.507709503173828

Token 1916: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6510023474693298
    2. '->' → logprob: -0.7760023474693298
    3. ' ->' → logprob: -4.151002407073975
    4. '   ' → logprob: -7.026002407073975
    5. ':
' → logprob: -7.151002407073975
    6. ':return' → logprob: -7.901002407073975
    7. ')' → logprob: -8.151001930236816
    8. '       ' → logprob: -9.276001930236816
    9. '  ' → logprob: -10.651001930236816
    10. ' ' → logprob: -11.901001930236816

Token 1917: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -1.0206720617134124e-05
    2. ' bool' → logprob: -11.50001049041748
    3. 'True' → logprob: -17.625009536743164
    4. 'return' → logprob: -17.875009536743164
    5. 'False' → logprob: -18.375009536743164
    6. 'def' → logprob: -18.750009536743164
    7. '<bool' → logprob: -19.375009536743164
    8. '	bool' → logprob: -19.750009536743164
    9. '(bool' → logprob: -20.250009536743164
    10. 'Bool' → logprob: -20.625009536743164

Token 1918: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003610163228586316
    2. ':
' → logprob: -5.628610134124756
    3. ':return' → logprob: -11.753610610961914
    4. ':def' → logprob: -14.878610610961914
    5. ':

' → logprob: -15.253610610961914
    6. '   ' → logprob: -15.253610610961914
    7. '       ' → logprob: -15.628610610961914
    8. ' :' → logprob: -15.628610610961914
    9. '=True' → logprob: -15.753610610961914
    10. '(True' → logprob: -15.878610610961914

Token 1919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3663626305060461e-05
    2. '           ' → logprob: -13.12501335144043
    3. 'if' → logprob: -13.25001335144043
    4. '
' → logprob: -13.50001335144043
    5. '   ' → logprob: -13.50001335144043
    6. '(cls' → logprob: -13.50001335144043
    7. 'cls' → logprob: -14.00001335144043
    8. '```' → logprob: -14.12501335144043
    9. '      ' → logprob: -14.25001335144043
    10. 'return' → logprob: -14.50001335144043

Token 1920: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08618272095918655
    2. 'if' (adapté à ' if') → logprob: -2.5861828327178955
    3. ' if' → logprob: -4.961182594299316
    4. '
' → logprob: -9.086182594299316
    5. 'def' → logprob: -9.211182594299316
    6. '@' → logprob: -10.711182594299316
    7. 'cls' → logprob: -11.461182594299316
    8. 'not' → logprob: -12.461182594299316
    9. 'If' → logprob: -12.836182594299316
    10. '@if' → logprob: -12.961182594299316

Token 1921: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1269317865371704
    2. 'not' → logprob: -2.126931667327881
    3. 'points' → logprob: -13.376932144165039
    4. ' points' → logprob: -14.251932144165039
    5. 'n' → logprob: -14.501932144165039
    6. '
' → logprob: -15.001932144165039
    7. 'False' → logprob: -15.751932144165039
    8. '(not' → logprob: -16.12693214416504
    9. '   ' → logprob: -16.62693214416504
    10. '	not' → logprob: -16.62693214416504

Token 1922: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0024775585625320673
    2. ' points' → logprob: -6.002477645874023
    3. '(points' → logprob: -13.877477645874023
    4. 'p' → logprob: -14.752477645874023
    5. 'point' → logprob: -15.377477645874023
    6. '	points' → logprob: -16.752477645874023
    7. 'not' → logprob: -16.877477645874023
    8. '
' → logprob: -17.252477645874023
    9. '.points' → logprob: -17.752477645874023
    10. 'Points' → logprob: -18.127477645874023

Token 1923: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027867671102285385
    2. ':
' → logprob: -4.152867794036865
    3. '           ' → logprob: -4.527867794036865
    4. '       ' → logprob: -8.027867317199707
    5. '   ' → logprob: -8.652867317199707
    6. '==' → logprob: -8.777867317199707
    7. '[' → logprob: -9.402867317199707
    8. '         ' → logprob: -10.027867317199707
    9. ':return' → logprob: -10.152867317199707
    10. '=' → logprob: -10.277867317199707

Token 1924: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2044307291507721
    2. 'False' → logprob: -1.7044306993484497
    3. '       ' → logprob: -6.07943058013916
    4. ' False' → logprob: -7.45443058013916
    5. '         ' → logprob: -9.82943058013916
    6. '        ' → logprob: -10.95443058013916
    7. 'return' → logprob: -11.07943058013916
    8. '               ' → logprob: -11.20443058013916
    9. '          ' → logprob: -11.20443058013916
    10. 'True' → logprob: -11.32943058013916

Token 1925: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0156437698751688
    2. 'return' (adapté à ' return') → logprob: -4.26564359664917
    3. ' False' → logprob: -7.01564359664917
    4. ' return' → logprob: -7.51564359664917
    5. 'True' → logprob: -10.515644073486328
    6. '       ' → logprob: -11.890644073486328
    7. 'Return' → logprob: -12.890644073486328
    8. '   ' → logprob: -15.890644073486328
    9. '           ' → logprob: -16.640644073486328
    10. '(False' → logprob: -16.890644073486328

Token 1926: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011047814972698689
    2. ' False' → logprob: -4.511047840118408
    3. 'True' → logprob: -17.38604736328125
    4. '(False' → logprob: -18.63604736328125
    5. '=False' → logprob: -20.13604736328125
    6. ' True' → logprob: -21.38604736328125
    7. '_false' → logprob: -21.88604736328125
    8. 'F' → logprob: -22.76104736328125
    9. 'false' → logprob: -24.13604736328125
    10. '.False' → logprob: -24.51104736328125

Token 1927: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018113892525434494
    2. ':
' → logprob: -4.64311408996582
    3. '	' → logprob: -6.14311408996582
    4. ':' → logprob: -6.39311408996582
    5. '
' → logprob: -6.39311408996582
    6. '(
' → logprob: -7.76811408996582
    7. ',' → logprob: -8.01811408996582
    8. '(' → logprob: -8.26811408996582
    9. '   ' → logprob: -8.26811408996582
    10. '[' → logprob: -8.39311408996582

Token 1928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.5107177862082608e-05
    2. '	' → logprob: -11.000024795532227
    3. '           ' → logprob: -12.375024795532227
    4. '   ' → logprob: -13.625024795532227
    5. '               ' → logprob: -14.000024795532227
    6. 'return' → logprob: -14.750024795532227
    7. '
' → logprob: -15.125024795532227
    8. '    ' → logprob: -15.125024795532227
    9. '	   ' → logprob: -15.750024795532227
    10. '        ' → logprob: -15.750024795532227

Token 1929: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004926258116029203
    2. 'min' (adapté à ' min') → logprob: -7.750492572784424
    3. ' min' → logprob: -9.875493049621582
    4. '
' → logprob: -11.875493049621582
    5. '   ' → logprob: -13.250493049621582
    6. '           ' → logprob: -13.500493049621582
    7. '(min' → logprob: -15.875493049621582
    8. '	min' → logprob: -16.375492095947266
    9. '               ' → logprob: -17.125492095947266
    10. '```' → logprob: -17.500492095947266

Token 1930: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0791313573718071
    2. '_' → logprob: -2.5791313648223877
    3. 'x' → logprob: -9.829131126403809
    4. ' _' → logprob: -9.954131126403809
    5. '_
' → logprob: -9.954131126403809
    6. '._' → logprob: -10.454131126403809
    7. '_p' → logprob: -11.204131126403809
    8. '.' → logprob: -11.204131126403809
    9. ')_' → logprob: -12.079131126403809
    10. '<|end|>' → logprob: -12.079131126403809

Token 1931: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. '=
' → logprob: -15.535224914550781
    4. ' ' → logprob: -15.785224914550781
    5. ' =
' → logprob: -16.16022491455078
    6. ' is' → logprob: -16.41022491455078
    7. '   ' → logprob: -16.53522491455078
    8. '<|end|>' → logprob: -16.53522491455078
    9. '=}' → logprob: -17.03522491455078
    10. ')' → logprob: -17.03522491455078

Token 1932: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009114635176956654
    2. ' min' → logprob: -7.000911235809326
    3. 'max' → logprob: -17.125911712646484
    4. '(min' → logprob: -18.000911712646484
    5. '[min' → logprob: -19.625911712646484
    6. '=min' → logprob: -20.750911712646484
    7. 'mini' → logprob: -20.875911712646484
    8. '	min' → logprob: -21.125911712646484
    9. 'minimum' → logprob: -21.500911712646484
    10. 'm' → logprob: -21.875911712646484

Token 1933: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.375015258789062
    3. 'p' → logprob: -12.875015258789062
    4. ' (' → logprob: -14.375015258789062
    5. '<|end|>' → logprob: -15.500015258789062
    6. '(
' → logprob: -15.625015258789062
    7. '(points' → logprob: -16.375015258789062
    8. ' p' → logprob: -17.375015258789062
    9. '(point' → logprob: -18.000015258789062
    10. '```' → logprob: -18.625015258789062

Token 1934: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.45630455017089844
    2. ' for' → logprob: -1.7063045501708984
    3. 'for' → logprob: -1.9563045501708984
    4. '.' → logprob: -3.2063045501708984
    5. '.for' → logprob: -7.331304550170898
    6. '.p' → logprob: -7.331304550170898
    7. ' .' → logprob: -7.331304550170898
    8. '(x' → logprob: -8.331304550170898
    9. ')' → logprob: -8.456304550170898
    10. '[' → logprob: -9.456304550170898

Token 1935: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4740825593471527
    2. 'for' → logprob: -0.9740825891494751
    3. '       ' → logprob: -13.349082946777344
    4. ',' → logprob: -13.474082946777344
    5. '
' → logprob: -14.349082946777344
    6. '	for' → logprob: -14.599082946777344
    7. '[' → logprob: -14.849082946777344
    8. ')' → logprob: -14.974082946777344
    9. '.for' → logprob: -15.099082946777344
    10. '   ' → logprob: -16.099082946777344

Token 1936: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009118211455643177
    2. ' p' → logprob: -7.000911712646484
    3. ' in' → logprob: -16.000911712646484
    4. '(p' → logprob: -16.750911712646484
    5. '	p' → logprob: -16.875911712646484
    6. ' ' → logprob: -16.875911712646484
    7. '   ' → logprob: -17.500911712646484
    8. 'in' → logprob: -17.875911712646484
    9. 'points' → logprob: -18.125911712646484
    10. '
' → logprob: -18.250911712646484

Token 1937: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06408187747001648
    2. ' p' → logprob: -3.189081907272339
    3. ' in' → logprob: -4.06408166885376
    4. 'points' → logprob: -6.31408166885376
    5. 'in' → logprob: -6.43908166885376
    6. ' points' → logprob: -8.314082145690918
    7. 'point' → logprob: -11.564082145690918
    8. 'x' → logprob: -11.939082145690918
    9. '_points' → logprob: -12.314082145690918
    10. '
' → logprob: -13.564082145690918

Token 1938: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0001158211671281606
    2. 'p' → logprob: -9.125115394592285
    3. ' points' → logprob: -12.250115394592285
    4. '(points' → logprob: -13.500115394592285
    5. 'point' → logprob: -15.750115394592285
    6. '[' → logprob: -16.1251163482666
    7. '.points' → logprob: -16.2501163482666
    8. '[p' → logprob: -16.2501163482666
    9. '
' → logprob: -16.6251163482666
    10. 'pts' → logprob: -16.8751163482666

Token 1939: ')
' (ID: 446)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5807130336761475
    2. 'for' → logprob: -0.8307130336761475
    3. ')' → logprob: -5.455713272094727
    4. ')
' → logprob: -7.955713272094727
    5. '       ' → logprob: -9.080713272094727
    6. '	for' → logprob: -12.330713272094727
    7. '
' → logprob: -12.455713272094727
    8. '),' → logprob: -12.580713272094727
    9. ' in' → logprob: -12.830713272094727
    10. 'points' → logprob: -13.205713272094727

Token 1940: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014664154732599854
    2. ',' → logprob: -7.501466274261475
    3. '        ' → logprob: -7.626466274261475
    4. '```' → logprob: -8.501466751098633
    5. ' for' → logprob: -10.001466751098633
    6. ' ,' → logprob: -10.251466751098633
    7. '               ' → logprob: -10.251466751098633
    8. '           ' → logprob: -10.876466751098633
    9. 'for' → logprob: -11.126466751098633
    10. ' min' → logprob: -11.376466751098633

Token 1941: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.11410300433635712
    2. ' min' → logprob: -2.614103078842163
    3. '       ' → logprob: -3.364103078842163
    4. '	min' → logprob: -12.739103317260742
    5. '(min' → logprob: -13.989103317260742
    6. ',min' → logprob: -14.114103317260742
    7. '_min' → logprob: -14.614103317260742
    8. '        ' → logprob: -14.739103317260742
    9. '```' → logprob: -14.864103317260742
    10. 'max' → logprob: -15.239103317260742

Token 1942: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.023678312078118324
    2. '_y' → logprob: -3.7736783027648926
    3. 'x' → logprob: -7.898678302764893
    4. '_' → logprob: -10.77367877960205
    5. '   ' → logprob: -11.27367877960205
    6. '```' → logprob: -11.64867877960205
    7. 'import' → logprob: -12.52367877960205
    8. '<|end|>' → logprob: -13.02367877960205
    9. '<|end|>' → logprob: -13.14867877960205
    10. 'y' → logprob: -14.02367877960205

Token 1943: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868810832500458
    2. '=' → logprob: -1.1368811130523682
    3. '<|end|>' → logprob: -12.011880874633789
    4. ' for' → logprob: -13.636880874633789
    5. '=
' → logprob: -14.136880874633789
    6. ' ' → logprob: -14.386880874633789
    7. 'for' → logprob: -14.511880874633789
    8. ' =
' → logprob: -15.261880874633789
    9. ')' → logprob: -15.636880874633789
    10. '<|end|>' → logprob: -16.38688087463379

Token 1944: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011048289015889168
    2. ' min' → logprob: -4.511048316955566
    3. '(min' → logprob: -14.761048316955566
    4. '[min' → logprob: -15.636048316955566
    5. 'max' → logprob: -17.63604736328125
    6. '.min' → logprob: -18.88604736328125
    7. '_min' → logprob: -19.01104736328125
    8. '	min' → logprob: -19.13604736328125
    9. 'minimum' → logprob: -19.38604736328125
    10. 'm' → logprob: -19.76104736328125

Token 1945: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001227276516146958
    2. 'p' → logprob: -9.125123023986816
    3. '(' → logprob: -11.750123023986816
    4. ' p' → logprob: -12.250123023986816
    5. ' (' → logprob: -14.250123023986816
    6. '(
' → logprob: -15.500123023986816
    7. '[' → logprob: -17.0001220703125
    8. '   ' → logprob: -17.0001220703125
    9. '[p' → logprob: -17.0001220703125
    10. '<|end|>' → logprob: -17.6251220703125

Token 1946: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.6801441311836243
    2. '.y' → logprob: -0.8051441311836243
    3. 'x' → logprob: -3.1801440715789795
    4. 'y' → logprob: -6.055144309997559
    5. 'for' → logprob: -6.180144309997559
    6. '(x' → logprob: -8.680144309997559
    7. ' for' → logprob: -9.805144309997559
    8. ' ' → logprob: -10.055144309997559
    9. '(p' → logprob: -10.180144309997559
    10. '.p' → logprob: -10.180144309997559

Token 1947: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25193390250205994
    2. ' for' → logprob: -1.5019339323043823
    3. 'in' → logprob: -12.751934051513672
    4. '	for' → logprob: -14.251934051513672
    5. ' in' → logprob: -15.376934051513672
    6. '
' → logprob: -15.376934051513672
    7. '<|end|>' → logprob: -15.376934051513672
    8. 'points' → logprob: -15.501934051513672
    9. '<|end|>' → logprob: -16.626934051513672
    10. ')' → logprob: -16.876934051513672

Token 1948: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4743824601173401
    2. 'p' → logprob: -0.9743824601173401
    3. ' points' → logprob: -9.099382400512695
    4. ' p' → logprob: -9.474382400512695
    5. '(p' → logprob: -9.474382400512695
    6. '(points' → logprob: -10.224382400512695
    7. '[p' → logprob: -12.724382400512695
    8. 'point' → logprob: -15.599382400512695
    9. '.points' → logprob: -15.724382400512695
    10. '	points' → logprob: -15.849382400512695

Token 1949: ' in' (ID: 306)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.0407586544752121
    2. 'points' → logprob: -4.2907586097717285
    3. ' in' → logprob: -4.5407586097717285
    4. ' points' → logprob: -4.9157586097717285
    5. '.points' → logprob: -5.2907586097717285
    6. '(points' → logprob: -6.5407586097717285
    7. '.y' → logprob: -7.4157586097717285
    8. 'y' → logprob: -7.4157586097717285
    9. 'in' → logprob: -8.540759086608887
    10. 'ints' → logprob: -9.165759086608887

Token 1950: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.8670179997570813e-05
    2. ' points' → logprob: -11.125019073486328
    3. 'p' → logprob: -12.875019073486328
    4. '(points' → logprob: -13.750019073486328
    5. '
' → logprob: -16.000019073486328
    6. '.points' → logprob: -16.250019073486328
    7. '	points' → logprob: -16.875019073486328
    8. 'Points' → logprob: -17.625019073486328
    9. 'oints' → logprob: -18.125019073486328
    10. 'point' → logprob: -18.625019073486328

Token 1951: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7214228510856628
    2. '       ' → logprob: -1.2214229106903076
    3. ' for' → logprob: -1.5964229106903076
    4. ')' → logprob: -4.2214226722717285
    5. ')
' → logprob: -6.9714226722717285
    6. ',' → logprob: -7.8464226722717285
    7. '),' → logprob: -8.096423149108887
    8. '           ' → logprob: -10.096423149108887
    9. '):
' → logprob: -10.221423149108887
    10. '```' → logprob: -10.596423149108887

Token 1952: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026815256103873253
    2. 'min' → logprob: -4.276815414428711
    3. ' min' → logprob: -4.401815414428711
    4. ',' → logprob: -9.276815414428711
    5. 'max' → logprob: -9.776815414428711
    6. '```' → logprob: -10.526815414428711
    7. ' max' → logprob: -10.651815414428711
    8. ' =' → logprob: -10.901815414428711
    9. '(min' → logprob: -11.026815414428711
    10. ':' → logprob: -11.276815414428711

Token 1953: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.00150390958879143
    2. ' max' → logprob: -6.501503944396973
    3. '       ' → logprob: -13.501503944396973
    4. 'min' → logprob: -15.376503944396973
    5. '	max' → logprob: -19.126502990722656
    6. '(max' → logprob: -19.751502990722656
    7. '_max' → logprob: -20.376502990722656
    8. '
' → logprob: -21.126502990722656
    9. '[max' → logprob: -21.501502990722656
    10. '.max' → logprob: -21.626502990722656

Token 1954: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0008907367591746151
    2. '(p' → logprob: -7.125890731811523
    3. '_p' → logprob: -9.500890731811523
    4. 'x' → logprob: -12.375890731811523
    5. '```' → logprob: -12.750890731811523
    6. '(x' → logprob: -13.625890731811523
    7. '_' → logprob: -14.125890731811523
    8. '(' → logprob: -14.625890731811523
    9. '(_' → logprob: -14.750890731811523
    10. '('_' → logprob: -14.875890731811523

Token 1955: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858771339058876
    2. '=' → logprob: -3.0485877990722656
    3. ' =
' → logprob: -15.548587799072266
    4. '=
' → logprob: -15.798587799072266
    5. ')' → logprob: -17.423587799072266
    6. '=max' → logprob: -18.048587799072266
    7. '=p' → logprob: -18.423587799072266
    8. ' for' → logprob: -18.673587799072266
    9. '=min' → logprob: -19.048587799072266
    10. '=

' → logprob: -19.048587799072266

Token 1956: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0067154900170862675
    2. ' max' → logprob: -5.006715297698975
    3. '(max' → logprob: -17.006715774536133
    4. 'min' → logprob: -17.881715774536133
    5. '	max' → logprob: -19.631715774536133
    6. '=max' → logprob: -19.631715774536133
    7. '_max' → logprob: -20.006715774536133
    8. '[max' → logprob: -20.131715774536133
    9. ',max' → logprob: -20.756715774536133
    10. '.max' → logprob: -21.256715774536133

Token 1957: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00026538874953985214
    2. 'p' → logprob: -8.250265121459961
    3. '(
' → logprob: -14.000265121459961
    4. '(' → logprob: -14.000265121459961
    5. 'x' → logprob: -14.250265121459961
    6. '```' → logprob: -15.125265121459961
    7. '[p' → logprob: -15.375265121459961
    8. '(points' → logprob: -15.375265121459961
    9. '_p' → logprob: -15.750265121459961
    10. '_x' → logprob: -15.750265121459961

Token 1958: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.7598685026168823
    2. '(p' → logprob: -1.1348685026168823
    3. 'x' → logprob: -1.7598685026168823
    4. '_x' → logprob: -3.259868621826172
    5. '(x' → logprob: -8.759868621826172
    6. '[p' → logprob: -9.759868621826172
    7. '.p' → logprob: -9.884868621826172
    8. '$x' → logprob: -11.134868621826172
    9. '{x' → logprob: -11.384868621826172
    10. '```' → logprob: -11.509868621826172

Token 1959: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12693418562412262
    2. ' for' → logprob: -2.126934289932251
    3. ')' → logprob: -12.626934051513672
    4. '```' → logprob: -13.626934051513672
    5. '(p' → logprob: -14.126934051513672
    6. '	for' → logprob: -14.626934051513672
    7. '
' → logprob: -15.751934051513672
    8. '(for' → logprob: -16.376934051513672
    9. '[' → logprob: -17.001934051513672
    10. '       ' → logprob: -17.001934051513672

Token 1960: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10040022432804108
    2. 'points' → logprob: -2.35040020942688
    3. ' p' → logprob: -8.8503999710083
    4. ' points' → logprob: -9.9753999710083
    5. '(points' → logprob: -13.3503999710083
    6. 'point' → logprob: -13.7253999710083
    7. '(p' → logprob: -14.6003999710083
    8. '[p' → logprob: -15.2253999710083
    9. '
' → logprob: -16.475400924682617
    10. ' ' → logprob: -17.225400924682617

Token 1961: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.05234141647815704
    2. '(points' → logprob: -3.5523414611816406
    3. '.points' → logprob: -4.052341461181641
    4. ' points' → logprob: -5.552341461181641
    5. 'oints' → logprob: -7.802341461181641
    6. '	points' → logprob: -8.17734146118164
    7. 'for' → logprob: -8.30234146118164
    8. ' in' → logprob: -10.05234146118164
    9. 'p' → logprob: -10.42734146118164
    10. 'in' → logprob: -10.55234146118164

Token 1962: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0003924231859855354
    2. ' points' → logprob: -7.875392436981201
    3. '(points' → logprob: -11.375391960144043
    4. '.points' → logprob: -14.875391960144043
    5. '	points' → logprob: -15.375391960144043
    6. 'p' → logprob: -16.62539291381836
    7. '
' → logprob: -16.75039291381836
    8. 'Points' → logprob: -16.87539291381836
    9. 'point' → logprob: -17.25039291381836
    10. '[' → logprob: -17.50039291381836

Token 1963: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.43878617882728577
    2. ')' → logprob: -1.5637861490249634
    3. '       ' → logprob: -2.063786268234253
    4. '),' → logprob: -4.188786029815674
    5. 'for' → logprob: -6.313786029815674
    6. ',' → logprob: -6.688786029815674
    7. '):
' → logprob: -8.188786506652832
    8. ' for' → logprob: -9.313786506652832
    9. '```' → logprob: -9.438786506652832
    10. ')p' → logprob: -9.938786506652832

Token 1964: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030030198395252228
    2. ',' → logprob: -6.003003120422363
    3. 'max' → logprob: -8.503003120422363
    4. ',max' → logprob: -8.503003120422363
    5. ' max' → logprob: -9.378003120422363
    6. '        ' → logprob: -11.878003120422363
    7. ' ,' → logprob: -12.003003120422363
    8. ' and' → logprob: -12.378003120422363
    9. '      ' → logprob: -12.878003120422363
    10. '```' → logprob: -12.878003120422363

Token 1965: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06197183206677437
    2. 'max' (adapté à ' max') → logprob: -2.81197190284729
    3. '       ' → logprob: -12.936971664428711
    4. '(max' → logprob: -13.936971664428711
    5. '=max' → logprob: -15.686971664428711
    6. ',max' → logprob: -15.811971664428711
    7. '_max' → logprob: -15.936971664428711
    8. '	max' → logprob: -15.936971664428711
    9. '.max' → logprob: -16.18697166442871
    10. ' return' → logprob: -16.68697166442871

Token 1966: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0002210596576333046
    2. '_x' → logprob: -8.750221252441406
    3. 'y' → logprob: -9.750221252441406
    4. 'Y' → logprob: -13.250221252441406
    5. '(p' → logprob: -13.375221252441406
    6. '   ' → logprob: -15.125221252441406
    7. '[' → logprob: -16.000221252441406
    8. '.y' → logprob: -16.625221252441406
    9. ' y' → logprob: -16.625221252441406
    10. '```' → logprob: -16.875221252441406

Token 1967: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868723213672638
    2. '=' → logprob: -1.1368722915649414
    3. '=max' → logprob: -14.261872291564941
    4. ')' → logprob: -15.636872291564941
    5. '=
' → logprob: -16.011873245239258
    6. '=p' → logprob: -16.011873245239258
    7. ' for' → logprob: -16.386873245239258
    8. 'for' → logprob: -16.761873245239258
    9. 'max' → logprob: -16.886873245239258
    10. '   ' → logprob: -17.011873245239258

Token 1968: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008618712425231934
    2. ' max' → logprob: -4.7586188316345215
    3. '(max' → logprob: -12.883618354797363
    4. 'min' → logprob: -13.508618354797363
    5. '[max' → logprob: -16.38361930847168
    6. '=max' → logprob: -16.75861930847168
    7. '	max' → logprob: -16.88361930847168
    8. '
' → logprob: -18.00861930847168
    9. ',max' → logprob: -18.63361930847168
    10. ' min' → logprob: -18.88361930847168

Token 1969: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.15441757265944e-05
    2. 'p' → logprob: -10.500031471252441
    3. '(points' → logprob: -13.125031471252441
    4. '[p' → logprob: -14.625031471252441
    5. '(max' → logprob: -15.000031471252441
    6. '(
' → logprob: -15.250031471252441
    7. 'max' → logprob: -15.875031471252441
    8. '```' → logprob: -15.875031471252441
    9. 'points' → logprob: -16.000032424926758
    10. 'Point' → logprob: -16.250032424926758

Token 1970: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0006841989234089851
    2. '.x' → logprob: -8.000683784484863
    3. '(p' → logprob: -8.125683784484863
    4. 'y' → logprob: -10.375683784484863
    5. '.p' → logprob: -11.750683784484863
    6. '[p' → logprob: -13.000683784484863
    7. 'for' → logprob: -13.125683784484863
    8. 'max' → logprob: -13.125683784484863
    9. '(y' → logprob: -13.250683784484863
    10. ',y' → logprob: -13.625683784484863

Token 1971: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3132782578468323
    2. ' for' → logprob: -1.3132781982421875
    3. '(p' → logprob: -12.313278198242188
    4. '	for' → logprob: -12.563278198242188
    5. ')' → logprob: -13.438278198242188
    6. '
' → logprob: -13.813278198242188
    7. '   ' → logprob: -13.938278198242188
    8. '(for' → logprob: -13.938278198242188
    9. 'in' → logprob: -14.313278198242188
    10. '```' → logprob: -14.688278198242188

Token 1972: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0009287334396503866
    2. 'p' → logprob: -7.12592887878418
    3. ' points' → logprob: -9.50092887878418
    4. '(points' → logprob: -10.00092887878418
    5. '
' → logprob: -13.62592887878418
    6. '(p' → logprob: -13.75092887878418
    7. '	points' → logprob: -14.62592887878418
    8. ' p' → logprob: -15.00092887878418
    9. '.points' → logprob: -15.37592887878418
    10. 'pts' → logprob: -15.50092887878418

Token 1973: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04840179532766342
    2. 'points' → logprob: -3.4234018325805664
    3. ' for' → logprob: -4.798401832580566
    4. '.points' → logprob: -5.548401832580566
    5. '(points' → logprob: -6.048401832580566
    6. ' points' → logprob: -9.673401832580566
    7. 'oints' → logprob: -9.798401832580566
    8. '	points' → logprob: -12.048401832580566
    9. '(p' → logprob: -12.173401832580566
    10. 'in' → logprob: -12.548401832580566

Token 1974: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0001394161517964676
    2. '(points' → logprob: -9.250139236450195
    3. ' points' → logprob: -10.125139236450195
    4. 'p' → logprob: -13.000139236450195
    5. '.points' → logprob: -15.875139236450195
    6. 'class' → logprob: -16.000139236450195
    7. '	points' → logprob: -16.125139236450195
    8. '(p' → logprob: -16.375139236450195
    9. 'parts' → logprob: -16.500139236450195
    10. 'point' → logprob: -16.625139236450195

Token 1975: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08178309351205826
    2. ':
' → logprob: -3.2067830562591553
    3. '):
' → logprob: -3.8317830562591553
    4. ':' → logprob: -4.706783294677734
    5. '):' → logprob: -5.706783294677734
    6. ')' → logprob: -5.831783294677734
    7. ',' → logprob: -8.081783294677734
    8. ':return' → logprob: -8.331783294677734
    9. '   ' → logprob: -8.581783294677734
    10. '           ' → logprob: -9.081783294677734

Token 1976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.4987974029500037e-05
    2. '	' → logprob: -11.000024795532227
    3. 'return' → logprob: -12.625024795532227
    4. '   ' → logprob: -13.375024795532227
    5. '           ' → logprob: -13.875024795532227
    6. '               ' → logprob: -14.625024795532227
    7. '	return' → logprob: -15.000024795532227
    8. ' return' → logprob: -15.125024795532227
    9. '      ' → logprob: -15.250024795532227
    10. '     ' → logprob: -15.375024795532227

Token 1977: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11033593118190765
    2. '       ' → logprob: -2.3603358268737793
    3. ' return' → logprob: -4.610335826873779
    4. '	return' → logprob: -9.235336303710938
    5. '           ' → logprob: -11.235336303710938
    6. '   ' → logprob: -12.235336303710938
    7. ':return' → logprob: -12.485336303710938
    8. '	' → logprob: -12.860336303710938
    9. '               ' → logprob: -13.235336303710938
    10. '```' → logprob: -13.485336303710938

Token 1978: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.008615042082965374
    2. ' cls' → logprob: -4.758615016937256
    3. '(cls' → logprob: -14.758615493774414
    4. '   ' → logprob: -17.383615493774414
    5. 'False' → logprob: -17.508615493774414
    6. 'class' → logprob: -18.133615493774414
    7. 'classmethod' → logprob: -18.508615493774414
    8. ' ' → logprob: -18.633615493774414
    9. '.cls' → logprob: -18.633615493774414
    10. 'super' → logprob: -18.883615493774414

Token 1979: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.0010775875998660922
    2. '.pattern' → logprob: -6.876077651977539
    3. '.' → logprob: -10.751077651977539
    4. 'match' → logprob: -12.001077651977539
    5. 'pattern' → logprob: -12.501077651977539
    6. '.matches' → logprob: -12.751077651977539
    7. '.MATCH' → logprob: -12.751077651977539
    8. '_match' → logprob: -13.126077651977539
    9. ' .' → logprob: -13.126077651977539
    10. '._' → logprob: -13.876077651977539

Token 1980: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00011152983643114567
    2. 'pattern' → logprob: -9.12511157989502
    3. '_' → logprob: -14.12511157989502
    4. '_class' → logprob: -14.37511157989502
    5. 'Pattern' → logprob: -15.50011157989502
    6. '
' → logprob: -15.62511157989502
    7. '_patterns' → logprob: -15.87511157989502
    8. '```' → logprob: -15.87511157989502
    9. '_p' → logprob: -16.500110626220703
    10. '_point' → logprob: -16.625110626220703

Token 1981: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -3.128163257315464e-07
    2. 'points' → logprob: -15.125
    3. '	points' → logprob: -18.5
    4. '(
' → logprob: -18.75
    5. '(parts' → logprob: -19.125
    6. '(' → logprob: -19.5
    7. '(point' → logprob: -19.5
    8. ' points' → logprob: -19.625
    9. '(cls' → logprob: -20.0
    10. '.points' → logprob: -20.5

Token 1982: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003874166286550462
    2. '(points' → logprob: -7.875387191772461
    3. 'points' → logprob: -12.375387191772461
    4. ' ,' → logprob: -13.750387191772461
    5. ' points' → logprob: -14.750387191772461
    6. ',p' → logprob: -14.875387191772461
    7. ',
' → logprob: -15.250387191772461
    8. '       ' → logprob: -15.500387191772461
    9. '.points' → logprob: -15.875387191772461
    10. '```' → logprob: -15.875387191772461

Token 1983: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004653099924325943
    2. 'points' → logprob: -5.379652976989746
    3. ' min' → logprob: -10.629652976989746
    4. 'max' → logprob: -12.004652976989746
    5. ' points' → logprob: -13.754652976989746
    6. '(min' → logprob: -13.879652976989746
    7. '[min' → logprob: -15.254652976989746
    8. '0' → logprob: -16.004653930664062
    9. '_min' → logprob: -17.504653930664062
    10. '       ' → logprob: -18.004653930664062

Token 1984: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.2113979209971149e-05
    2. 'x' → logprob: -11.625012397766113
    3. 'X' → logprob: -13.750012397766113
    4. '(p' → logprob: -14.375012397766113
    5. 'cls' → logprob: -14.375012397766113
    6. '_' → logprob: -15.875012397766113
    7. '```' → logprob: -16.125011444091797
    8. '_cls' → logprob: -16.250011444091797
    9. '0' → logprob: -16.625011444091797
    10. 'class' → logprob: -16.625011444091797

Token 1985: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003622793301474303
    2. ' ,' → logprob: -8.000362396240234
    3. ',p' → logprob: -11.250362396240234
    4. ',
' → logprob: -12.375362396240234
    5. ',min' → logprob: -13.000362396240234
    6. ',n' → logprob: -14.000362396240234
    7. '+' → logprob: -14.500362396240234
    8. ',max' → logprob: -14.500362396240234
    9. '```' → logprob: -14.625362396240234
    10. '[' → logprob: -14.625362396240234

Token 1986: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.615255839889869e-05
    2. ' min' → logprob: -9.250096321105957
    3. '_min' → logprob: -18.50009536743164
    4. '(min' → logprob: -19.75009536743164
    5. '[min' → logprob: -19.75009536743164
    6. '	min' → logprob: -20.50009536743164
    7. '.min' → logprob: -21.62509536743164
    8. 'max' → logprob: -21.87509536743164
    9. '=min' → logprob: -22.00009536743164
    10. ',min' → logprob: -22.00009536743164

Token 1987: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0007154120248742402
    2. 'y' → logprob: -8.125715255737305
    3. '_min' → logprob: -8.625715255737305
    4. 'min' → logprob: -9.375715255737305
    5. '_x' → logprob: -9.625715255737305
    6. ',' → logprob: -10.250715255737305
    7. 'Y' → logprob: -10.500715255737305
    8. '_,' → logprob: -12.250715255737305
    9. '```' → logprob: -12.750715255737305
    10. '   ' → logprob: -12.750715255737305

Token 1988: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8590300139039755e-05
    2. ',max' → logprob: -10.375048637390137
    3. ' ,' → logprob: -11.750048637390137
    4. ',p' → logprob: -11.875048637390137
    5. 'points' → logprob: -14.000048637390137
    6. '       ' → logprob: -14.375048637390137
    7. ',min' → logprob: -15.125048637390137
    8. '(points' → logprob: -15.125048637390137
    9. '```' → logprob: -15.750048637390137
    10. 'max' → logprob: -16.25004768371582

Token 1989: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.842555426876061e-06
    2. ' max' → logprob: -12.250004768371582
    3. '(max' → logprob: -20.5000057220459
    4. 'min' → logprob: -20.8750057220459
    5. '[max' → logprob: -21.2500057220459
    6. '_max' → logprob: -21.3750057220459
    7. '	max' → logprob: -22.2500057220459
    8. '       ' → logprob: -22.5000057220459
    9. ',max' → logprob: -22.7500057220459
    10. '   ' → logprob: -23.2500057220459

Token 1990: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -4.000763510703109e-05
    2. 'x' → logprob: -10.375040054321289
    3. 'X' → logprob: -12.125040054321289
    4. '(p' → logprob: -13.625040054321289
    5. ',' → logprob: -14.000040054321289
    6. '```' → logprob: -14.875040054321289
    7. '   ' → logprob: -15.125040054321289
    8. '_points' → logprob: -15.750040054321289
    9. '_,' → logprob: -16.25004005432129
    10. 'max' → logprob: -16.75004005432129

Token 1991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.44574936106801e-05
    2. ' ,' → logprob: -9.87507438659668
    3. ',p' → logprob: -11.62507438659668
    4. ',min' → logprob: -12.25007438659668
    5. ',max' → logprob: -12.75007438659668
    6. ',
' → logprob: -13.12507438659668
    7. '-' → logprob: -13.50007438659668
    8. ' -' → logprob: -14.50007438659668
    9. '+' → logprob: -14.62507438659668
    10. ',m' → logprob: -15.12507438659668

Token 1992: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011048642918467522
    2. ' max' → logprob: -4.511048793792725
    3. 'min' → logprob: -14.011048316955566
    4. '
' → logprob: -18.636049270629883
    5. '(max' → logprob: -18.886049270629883
    6. '[max' → logprob: -19.136049270629883
    7. ',max' → logprob: -19.761049270629883
    8. '```' → logprob: -20.011049270629883
    9. ' min' → logprob: -20.136049270629883
    10. '_max' → logprob: -20.136049270629883

Token 1993: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.026898236945271492
    2. ',' → logprob: -3.776898145675659
    3. 'max' → logprob: -7.276898384094238
    4. '_,' → logprob: -7.276898384094238
    5. 'min' → logprob: -7.651898384094238
    6. 'x' → logprob: -7.776898384094238
    7. ',max' → logprob: -8.026898384094238
    8. ',min' → logprob: -8.651898384094238
    9. '_min' → logprob: -8.776898384094238
    10. '_y' → logprob: -9.026898384094238

Token 1994: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. '       ' → logprob: -12.875009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. '                     ' → logprob: -13.250009536743164
    5. ',
' → logprob: -14.375009536743164
    6. '           ' → logprob: -14.750009536743164
    7. '```' → logprob: -15.250009536743164
    8. ',p' → logprob: -16.125009536743164
    9. '                      ' → logprob: -16.250009536743164
    10. '   ' → logprob: -16.500009536743164

Token 1995: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0007101670489646494
    2. ' cls' → logprob: -7.2507100105285645
    3. '(cls' → logprob: -16.750709533691406
    4. '.cls' → logprob: -17.375709533691406
    5. 'points' → logprob: -18.125709533691406
    6. '_cls' → logprob: -18.875709533691406
    7. 'class' → logprob: -19.125709533691406
    8. 'cl' → logprob: -19.875709533691406
    9. 'pattern' → logprob: -20.250709533691406
    10. '
' → logprob: -21.000709533691406

Token 1996: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.0008370272698812187
    2. ',' → logprob: -7.6258368492126465
    3. 'pattern' → logprob: -8.000837326049805
    4. '[' → logprob: -11.875837326049805
    5. '(pattern' → logprob: -13.250837326049805
    6. '   ' → logprob: -13.750837326049805
    7. '```' → logprob: -13.875837326049805
    8. '       ' → logprob: -14.000837326049805
    9. '.points' → logprob: -14.750837326049805
    10. '.p' → logprob: -15.125837326049805

Token 1997: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1998: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00015693542081862688
    2. '
' → logprob: -8.875157356262207
    3. '   ' → logprob: -11.375157356262207
    4. ' class' → logprob: -13.500157356262207
    5. '<class' → logprob: -13.750157356262207
    6. '"class' → logprob: -14.500157356262207
    7. '```' → logprob: -14.500157356262207
    8. '    
' → logprob: -14.750157356262207
    9. '[
' → logprob: -14.875157356262207
    10. '

' → logprob: -15.250157356262207

Token 1999: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -1.5213274309644476e-05
    2. '8' → logprob: -11.750015258789062
    3. ' Digit' → logprob: -12.125015258789062
    4. 'class' → logprob: -14.500015258789062
    5. 'Digital' → logprob: -15.125015258789062
    6. 'Character' → logprob: -15.250015258789062
    7. 'Char' → logprob: -15.625015258789062
    8. 'D' → logprob: -15.750015258789062
    9. 'Eight' → logprob: -15.750015258789062
    10. '
' → logprob: -16.125015258789062

Token 2000: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. '9' → logprob: -19.75
    3. '८' → logprob: -20.25
    4. 'Eight' → logprob: -20.625
    5. '৮' → logprob: -20.875
    6. '٨' → logprob: -20.875
    7. '
' → logprob: -21.125
    8. '۸' → logprob: -21.375
    9. ' ' → logprob: -21.5
    10. '' → logprob: -21.625

Token 2001: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -1.9361264946837764e-07
    2. '<Character' → logprob: -16.625
    3. 'Character' → logprob: -17.875
    4. '(Class' → logprob: -18.375
    5. '(' → logprob: -19.875
    6. '(
' → logprob: -20.0
    7. '.Character' → logprob: -20.5
    8. '(character' → logprob: -20.625
    9. 'class' → logprob: -21.375
    10. '_character' → logprob: -21.625

Token 2002: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22609928250312805
    2. '   ' → logprob: -1.8510992527008057
    3. '(Character' → logprob: -3.3510992527008057
    4. ':
' → logprob: -4.976099491119385
    5. '):' → logprob: -6.101099491119385
    6. 'class' → logprob: -7.976099491119385
    7. '<Character' → logprob: -8.601099014282227
    8. '(pattern' → logprob: -8.851099014282227
    9. 'Character' → logprob: -8.976099014282227
    10. 'pattern' → logprob: -9.476099014282227

Token 2003: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036930739879608154
    2. 'class' → logprob: -5.628693103790283
    3. 'pattern' → logprob: -9.753692626953125
    4. '```' → logprob: -11.503692626953125
    5. ' pattern' → logprob: -12.003692626953125
    6. '[
' → logprob: -12.253692626953125
    7. '{
' → logprob: -12.253692626953125
    8. ' class' → logprob: -12.378692626953125
    9. '[' → logprob: -13.253692626953125
    10. ':
' → logprob: -13.503692626953125

Token 2004: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -2.2127087504486553e-05
    2. '   ' → logprob: -10.750021934509277
    3. ' pattern' → logprob: -14.250021934509277
    4. 'class' → logprob: -16.750022888183594
    5. '```' → logprob: -19.125022888183594
    6. '(pattern' → logprob: -20.000022888183594
    7. '.pattern' → logprob: -20.250022888183594
    8. 'pat' → logprob: -20.375022888183594
    9. '``' → logprob: -20.500022888183594
    10. '[
' → logprob: -20.750022888183594

Token 2005: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029810316860675812
    2. '=' → logprob: -3.5298104286193848
    3. '   ' → logprob: -10.404809951782227
    4. '=[
' → logprob: -10.529809951782227
    5. '=[' → logprob: -14.029809951782227
    6. ':' → logprob: -14.529809951782227
    7. '  ' → logprob: -14.904809951782227
    8. ' =
' → logprob: -15.154809951782227
    9. ' ' → logprob: -15.279809951782227
    10. '=
' → logprob: -15.654809951782227

Token 2006: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0005563704180531204
    2. '[' → logprob: -7.500556468963623
    3. '   ' → logprob: -12.750555992126465
    4. ' [
' → logprob: -14.500555992126465
    5. '["' → logprob: -18.75055694580078
    6. '=[
' → logprob: -20.00055694580078
    7. ' ' → logprob: -20.62555694580078
    8. '       ' → logprob: -21.00055694580078
    9. ' [' → logprob: -21.00055694580078
    10. 'class' → logprob: -21.12555694580078

Token 2007: '       ' (ID: 309)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.43469947576522827
    2. '   ' → logprob: -1.434699535369873
    3. '       ' → logprob: -2.184699535369873
    4. '[' → logprob: -6.309699535369873
    5. ' [
' → logprob: -11.184699058532715
    6. '"' → logprob: -12.184699058532715
    7. '     ' → logprob: -13.684699058532715
    8. '["' → logprob: -13.934699058532715
    9. '{
' → logprob: -14.434699058532715
    10. '(
' → logprob: -14.559699058532715

Token 2008: ' "' (ID: 392)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.014183484017848969
    2. '"' (adapté à ' "') → logprob: -5.014183521270752
    3. '       ' → logprob: -5.514183521270752
    4. '[' → logprob: -6.264183521270752
    5. '   ' → logprob: -6.514183521270752
    6. '["' → logprob: -11.014183044433594
    7. '"class' → logprob: -12.639183044433594
    8. ' [
' → logprob: -12.764183044433594
    9. ' ' → logprob: -14.139183044433594
    10. '     ' → logprob: -14.889183044433594

Token 2009: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.014174560084939003
    2. '"' → logprob: -4.264174461364746
    3. '[
' → logprob: -11.639174461364746
    4. '"""' → logprob: -14.014174461364746
    5. ''' → logprob: -14.639174461364746
    6. '   ' → logprob: -15.389174461364746
    7. ' ' → logprob: -15.639174461364746
    8. '["' → logprob: -16.014175415039062
    9. '[' → logprob: -16.264175415039062
    10. '110' → logprob: -16.889175415039062

Token 2010: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.011136723682284355
    2. '",' → logprob: -4.511136531829834
    3. '",
' → logprob: -10.011137008666992
    4. '"' → logprob: -11.136137008666992
    5. '","' → logprob: -11.261137008666992
    6. '   ' → logprob: -11.636137008666992
    7. '',
' → logprob: -12.511137008666992
    8. '       ' → logprob: -13.011137008666992
    9. '",[' → logprob: -15.011137008666992
    10. '",

' → logprob: -15.261137008666992

Token 2011: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013458272442221642
    2. '"' → logprob: -6.626345634460449
    3. '   ' → logprob: -11.75134563446045
    4. '           ' → logprob: -11.75134563446045
    5. '"class' → logprob: -12.87634563446045
    6. '      ' → logprob: -15.00134563446045
    7. '     ' → logprob: -15.00134563446045
    8. '	' → logprob: -15.12634563446045
    9. 'class' → logprob: -15.75134563446045
    10. ''' → logprob: -16.126346588134766

Token 2012: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -1.9743012671824545e-05
    2. '       ' → logprob: -11.375020027160645
    3. '   ' → logprob: -12.250020027160645
    4. '111' → logprob: -12.875020027160645
    5. ''' → logprob: -14.375020027160645
    6. '           ' → logprob: -16.500019073486328
    7. ' "' → logprob: -16.625019073486328
    8. '"class' → logprob: -16.750019073486328
    9. ' ' → logprob: -16.875019073486328
    10. '
' → logprob: -17.250019073486328

Token 2013: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.06200153008103371
    2. '111' → logprob: -2.8120014667510986
    3. '"' → logprob: -10.93700122833252
    4. '010' → logprob: -11.18700122833252
    5. '1' → logprob: -14.31200122833252
    6. '\
' → logprob: -14.43700122833252
    7. '```' → logprob: -15.31200122833252
    8. '
' → logprob: -15.56200122833252
    9. '``' → logprob: -15.93700122833252
    10. ' ' → logprob: -15.93700122833252

Token 2014: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.038351863622665405
    2. '",' → logprob: -3.2883517742156982
    3. '"' → logprob: -8.788352012634277
    4. '",
' → logprob: -9.288352012634277
    5. '',
' → logprob: -10.288352012634277
    6. '","' → logprob: -11.413352012634277
    7. '<|end|>' → logprob: -12.538352012634277
    8. '",'' → logprob: -12.663352012634277
    9. '",[' → logprob: -12.663352012634277
    10. '       ' → logprob: -13.038352012634277

Token 2015: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16037340462207794
    2. '       ' → logprob: -1.9103734493255615
    3. '           ' → logprob: -9.78537368774414
    4. ''' → logprob: -10.28537368774414
    5. '   ' → logprob: -10.28537368774414
    6. ' "' → logprob: -11.41037368774414
    7. '"class' → logprob: -12.03537368774414
    8. '      ' → logprob: -13.78537368774414
    9. '	' → logprob: -13.78537368774414
    10. ' ' → logprob: -14.03537368774414

Token 2016: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -8.542423165636137e-05
    2. '       ' → logprob: -10.000085830688477
    3. '111' → logprob: -11.000085830688477
    4. ''' → logprob: -11.500085830688477
    5. '"class' → logprob: -11.625085830688477
    6. '   ' → logprob: -13.125085830688477
    7. ' "' → logprob: -14.250085830688477
    8. '           ' → logprob: -15.000085830688477
    9. 'class' → logprob: -15.250085830688477
    10. '[' → logprob: -15.375085830688477

Token 2017: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.036586180329322815
    2. '"' → logprob: -3.411586284637451
    3. '101' → logprob: -5.911586284637451
    4. ''' → logprob: -8.411585807800293
    5. ' ' → logprob: -13.286585807800293
    6. '"""' → logprob: -14.286585807800293
    7. '1' → logprob: -14.536585807800293
    8. '"class' → logprob: -14.911585807800293
    9. '110' → logprob: -15.036585807800293
    10. '```' → logprob: -15.161585807800293

Token 2018: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.02351950667798519
    2. '",' → logprob: -3.773519515991211
    3. '"' → logprob: -8.898519515991211
    4. '',
' → logprob: -9.523519515991211
    5. '",
' → logprob: -9.898519515991211
    6. '       ' → logprob: -12.023519515991211
    7. '',' → logprob: -13.523519515991211
    8. '   ' → logprob: -13.523519515991211
    9. '","' → logprob: -13.648519515991211
    10. '"',
' → logprob: -13.898519515991211

Token 2019: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018174178898334503
    2. '"' → logprob: -4.018174171447754
    3. '   ' → logprob: -11.143174171447754
    4. '"class' → logprob: -12.768174171447754
    5. 'class' → logprob: -13.268174171447754
    6. ''' → logprob: -13.768174171447754
    7. '           ' → logprob: -13.893174171447754
    8. '      ' → logprob: -14.143174171447754
    9. '
' → logprob: -14.393174171447754
    10. '[
' → logprob: -14.643174171447754

Token 2020: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0016287636244669557
    2. '101' → logprob: -6.501628875732422
    3. '       ' → logprob: -9.126628875732422
    4. ''' → logprob: -11.376628875732422
    5. '   ' → logprob: -12.876628875732422
    6. '111' → logprob: -13.751628875732422
    7. '
' → logprob: -14.251628875732422
    8. '           ' → logprob: -14.626628875732422
    9. ' "' → logprob: -14.626628875732422
    10. ' ' → logprob: -15.251628875732422

Token 2021: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.00012749579036608338
    2. '"' → logprob: -9.000127792358398
    3. '111' → logprob: -13.125127792358398
    4. ''' → logprob: -13.875127792358398
    5. ' ' → logprob: -14.125127792358398
    6. '
' → logprob: -15.750127792358398
    7. '   ' → logprob: -16.8751277923584
    8. '"""' → logprob: -17.2501277923584
    9. '```' → logprob: -17.5001277923584
    10. '100' → logprob: -17.8751277923584

Token 2022: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.4777282774448395
    2. '",' → logprob: -0.9777282476425171
    3. '       ' → logprob: -6.352728366851807
    4. '',
' → logprob: -7.727728366851807
    5. '"' → logprob: -8.102727890014648
    6. '<|end|>' → logprob: -8.102727890014648
    7. '","' → logprob: -8.602727890014648
    8. '",
' → logprob: -8.602727890014648
    9. '',' → logprob: -9.102727890014648
    10. '",'' → logprob: -9.477727890014648

Token 2023: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02986595593392849
    2. '"' → logprob: -3.5298659801483154
    3. '   ' → logprob: -9.404866218566895
    4. ' "' → logprob: -11.529866218566895
    5. '           ' → logprob: -11.904866218566895
    6. ''' → logprob: -12.154866218566895
    7. '[
' → logprob: -12.654866218566895
    8. '[' → logprob: -12.904866218566895
    9. '      ' → logprob: -13.154866218566895
    10. '"class' → logprob: -13.654866218566895

Token 2024: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0005266997031867504
    2. ''' → logprob: -8.250526428222656
    3. '       ' → logprob: -9.125526428222656
    4. ' "' → logprob: -9.125526428222656
    5. '111' → logprob: -11.125526428222656
    6. '"class' → logprob: -11.125526428222656
    7. '   ' → logprob: -11.250526428222656
    8. ' ' → logprob: -13.375526428222656
    9. '```' → logprob: -14.375526428222656
    10. '[' → logprob: -14.750526428222656

Token 2025: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.005571082700043917
    2. '"' → logprob: -5.255570888519287
    3. ''' → logprob: -8.005571365356445
    4. '101' → logprob: -13.005571365356445
    5. ' ' → logprob: -14.880571365356445
    6. '   ' → logprob: -15.380571365356445
    7. '```' → logprob: -15.380571365356445
    8. '"class' → logprob: -15.630571365356445
    9. '110' → logprob: -16.380571365356445
    10. '"""' → logprob: -16.755571365356445

Token 2026: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24000854790210724
    2. '"
' → logprob: -1.9900085926055908
    3. '   ' → logprob: -2.615008592605591
    4. '"]' → logprob: -5.865008354187012
    5. ']' → logprob: -8.240008354187012
    6. ']"' → logprob: -8.365008354187012
    7. ''' → logprob: -9.990008354187012
    8. '"]
' → logprob: -10.240008354187012
    9. ']"
' → logprob: -10.365008354187012
    10. ']
' → logprob: -11.115008354187012

Token 2027: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006857485859654844
    2. ']' → logprob: -7.750685691833496
    3. ']
' → logprob: -8.500685691833496
    4. '"' → logprob: -10.750685691833496
    5. ''' → logprob: -11.250685691833496
    6. 'class' → logprob: -12.125685691833496
    7. '"
' → logprob: -12.625685691833496
    8. '
' → logprob: -12.625685691833496
    9. ''
' → logprob: -13.125685691833496
    10. '[
' → logprob: -14.125685691833496

Token 2028: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3993164300918579
    2. ']
' (adapté à ' ]
') → logprob: -1.149316430091858
    3. ']' → logprob: -4.399316310882568
    4. 'class' → logprob: -10.149316787719727
    5. '
' → logprob: -11.149316787719727
    6. '"
' → logprob: -12.274316787719727
    7. ' ]
' → logprob: -12.399316787719727
    8. '"' → logprob: -12.649316787719727
    9. '  ' → logprob: -12.649316787719727
    10. ']
' → logprob: -13.024316787719727

Token 2029: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01563754864037037
    2. 'char' → logprob: -4.890637397766113
    3. 'class' → logprob: -5.140637397766113
    4. '
' → logprob: -6.265637397766113
    5. ':
' → logprob: -9.265637397766113
    6. '    
' → logprob: -10.265637397766113
    7. '  ' → logprob: -10.640637397766113
    8. ' char' → logprob: -11.390637397766113
    9. '  
' → logprob: -11.640637397766113
    10. '       ' → logprob: -11.640637397766113

Token 2030: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -1.9146995327901095e-05
    2. '   ' → logprob: -11.500019073486328
    3. ' char' → logprob: -12.125019073486328
    4. 'class' → logprob: -12.625019073486328
    5. '
' → logprob: -17.000019073486328
    6. '_char' → logprob: -17.375019073486328
    7. '.char' → logprob: -17.500019073486328
    8. '<char' → logprob: -18.625019073486328
    9. '	char' → logprob: -18.750019073486328
    10. 'pattern' → logprob: -19.250019073486328

Token 2031: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -7.822646693966817e-06
    2. 'char' → logprob: -12.875007629394531
    3. '_rep' → logprob: -13.250007629394531
    4. '_char' → logprob: -13.625007629394531
    5. 'repr' → logprob: -13.750007629394531
    6. 'class' → logprob: -14.500007629394531
    7. ''_' → logprob: -15.500007629394531
    8. '_class' → logprob: -16.37500762939453
    9. '<char' → logprob: -16.62500762939453
    10. '_cls' → logprob: -16.62500762939453

Token 2032: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3872218132019043
    2. '=' → logprob: -1.1372218132019043
    3. '='' → logprob: -8.012222290039062
    4. ' ='' → logprob: -11.887222290039062
    5. ''' → logprob: -12.387222290039062
    6. '   ' → logprob: -12.637222290039062
    7. ':' → logprob: -12.762222290039062
    8. ' ' → logprob: -14.262222290039062
    9. ' '' → logprob: -14.512222290039062
    10. '<|end|>' → logprob: -14.887222290039062

Token 2033: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01417032815515995
    2. ' '' → logprob: -4.264170169830322
    3. ''E' → logprob: -12.38917064666748
    4. '8' → logprob: -14.01417064666748
    5. '"' → logprob: -14.51417064666748
    6. ''e' → logprob: -14.51417064666748
    7. ' ' → logprob: -15.01417064666748
    8. ''O' → logprob: -16.014169692993164
    9. '   ' → logprob: -16.389169692993164
    10. '`' → logprob: -16.514169692993164

Token 2034: '8' (ID: 23)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.392202976712724e-06
    2. '8' → logprob: -12.000006675720215
    3. '"' → logprob: -15.625006675720215
    4. ' '' → logprob: -18.1250057220459
    5. '`' → logprob: -19.7500057220459
    6. '‘' → logprob: -21.2500057220459
    7. '('' → logprob: -21.2500057220459
    8. ''E' → logprob: -21.2500057220459
    9. '''' → logprob: -21.7500057220459
    10. ''.' → logprob: -22.3750057220459

Token 2035: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008366934955120087
    2. '
' → logprob: -4.88336706161499
    3. '@' → logprob: -8.258366584777832
    4. ''
' → logprob: -8.258366584777832
    5. 'class' → logprob: -8.883366584777832
    6. '  ' → logprob: -10.758366584777832
    7. '    
' → logprob: -11.133366584777832
    8. ''''
' → logprob: -11.383366584777832
    9. '@
' → logprob: -11.508366584777832
    10. ''' → logprob: -11.758366584777832

Token 2036: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16167639195919037
    2. '
' → logprob: -1.9116764068603516
    3. '@' → logprob: -6.786676406860352
    4. '    
' → logprob: -8.411676406860352
    5. 'class' → logprob: -10.536676406860352
    6. '@
' → logprob: -11.411676406860352
    7. '  
' → logprob: -11.536676406860352
    8. '  ' → logprob: -11.786676406860352
    9. ' @' → logprob: -11.911676406860352
    10. ' 
' → logprob: -12.036676406860352

Token 2037: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3207378387451172
    2. '@' (adapté à ' @') → logprob: -1.3207378387451172
    3. '
' → logprob: -4.945737838745117
    4. ' @' → logprob: -8.570737838745117
    5. '@class' → logprob: -10.445737838745117
    6. 'class' → logprob: -10.570737838745117
    7. '@
' → logprob: -10.945737838745117
    8. '```' → logprob: -10.945737838745117
    9. '    
' → logprob: -11.070737838745117
    10. '@click' → logprob: -11.820737838745117

Token 2038: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -1.0921942703134846e-05
    2. '@' → logprob: -11.50001049041748
    3. 'class' → logprob: -14.25001049041748
    4. 'staticmethod' → logprob: -16.500011444091797
    5. '@class' → logprob: -17.375011444091797
    6. '@property' → logprob: -21.125011444091797
    7. '<class' → logprob: -22.125011444091797
    8. '@dat' → logprob: -22.375011444091797
    9. 'property' → logprob: -23.250011444091797
    10. '@
' → logprob: -23.500011444091797

Token 2039: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16074497997760773
    2. 'def' → logprob: -1.9107450246810913
    3. ' def' → logprob: -8.285744667053223
    4. '
' → logprob: -8.285744667053223
    5. '@' → logprob: -11.660744667053223
    6. '  ' → logprob: -12.410744667053223
    7. '	def' → logprob: -13.910744667053223
    8. '    ' → logprob: -14.160744667053223
    9. '       ' → logprob: -14.410744667053223
    10. ':' → logprob: -14.535744667053223

Token 2040: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009045626036822796
    2. '   ' → logprob: -4.759045600891113
    3. ' def' → logprob: -7.759045600891113
    4. '
' → logprob: -13.884045600891113
    5. '	def' → logprob: -14.134045600891113
    6. '@' → logprob: -14.384045600891113
    7. ':def' → logprob: -14.384045600891113
    8. ':' → logprob: -14.884045600891113
    9. '(' → logprob: -14.884045600891113
    10. '  ' → logprob: -15.134045600891113

Token 2041: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.771655115589965e-05
    2. ' def' → logprob: -11.500018119812012
    3. '   ' → logprob: -11.875018119812012
    4. '
' → logprob: -14.375018119812012
    5. '	def' → logprob: -18.375017166137695
    6. 'async' → logprob: -18.875017166137695
    7. '  ' → logprob: -19.125017166137695
    8. '    
' → logprob: -20.250017166137695
    9. '```' → logprob: -20.250017166137695
    10. 'Def' → logprob: -21.000017166137695

Token 2042: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -2.15310683415737e-05
    2. ' try' → logprob: -11.000021934509277
    3. 'def' → logprob: -12.250021934509277
    4. '.try' → logprob: -18.75002098083496
    5. '
' → logprob: -19.75002098083496
    6. '_try' → logprob: -20.87502098083496
    7. '	try' → logprob: -21.50002098083496
    8. '   ' → logprob: -21.75002098083496
    9. 'classmethod' → logprob: -22.37502098083496
    10. 'Try' → logprob: -22.37502098083496

Token 2043: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -7.576873758807778e-05
    2. 'match' → logprob: -9.500075340270996
    3. '_' → logprob: -15.625075340270996
    4. 'Match' → logprob: -15.875075340270996
    5. 'def' → logprob: -16.000076293945312
    6. ' match' → logprob: -16.250076293945312
    7. 'class' → logprob: -16.625076293945312
    8. 'classmethod' → logprob: -17.125076293945312
    9. '   ' → logprob: -17.625076293945312
    10. '_MATCH' → logprob: -17.625076293945312

Token 2044: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -3.054500666621607e-06
    2. 'cls' → logprob: -13.62500286102295
    3. '(' → logprob: -14.00000286102295
    4. '(
' → logprob: -15.00000286102295
    5. '(class' → logprob: -15.25000286102295
    6. ' (' → logprob: -15.37500286102295
    7. '(clazz' → logprob: -15.87500286102295
    8. '.cls' → logprob: -16.625003814697266
    9. 'classmethod' → logprob: -17.000003814697266
    10. '<class' → logprob: -17.750003814697266

Token 2045: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0010229245526716113
    2. '(' → logprob: -7.126022815704346
    3. ',' → logprob: -8.876023292541504
    4. '(
' → logprob: -10.126023292541504
    5. '   ' → logprob: -11.626023292541504
    6. '[' → logprob: -11.751023292541504
    7. ' (' → logprob: -12.751023292541504
    8. '(class' → logprob: -12.876023292541504
    9. '.cls' → logprob: -12.876023292541504
    10. '(cl' → logprob: -13.126023292541504

Token 2046: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.02975928969681263
    2. 'cls' → logprob: -3.529759407043457
    3. ' points' → logprob: -11.654759407043457
    4. 'pts' → logprob: -16.52975845336914
    5. ' cls' → logprob: -16.90475845336914
    6. '(points' → logprob: -17.02975845336914
    7. 'class' → logprob: -17.27975845336914
    8. '(cls' → logprob: -18.02975845336914
    9. '   ' → logprob: -18.27975845336914
    10. '
' → logprob: -18.77975845336914

Token 2047: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6518085598945618
    2. '(points' → logprob: -1.901808500289917
    3. '.setdefault' → logprob: -2.151808500289917
    4. '<|end|>' → logprob: -3.026808500289917
    5. ')' → logprob: -3.276808500289917
    6. ',' → logprob: -3.401808500289917
    7. '(set' → logprob: -4.526808738708496
    8. '==' → logprob: -4.526808738708496
    9. '(cls' → logprob: -5.026808738708496
    10. '(Set' → logprob: -5.026808738708496

Token 2048: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.005621231161057949
    2. ' Set' → logprob: -5.255621433258057
    3. 'True' → logprob: -8.505620956420898
    4. '(Set' → logprob: -9.755620956420898
    5. 'cls' → logprob: -9.755620956420898
    6. 'return' → logprob: -10.630620956420898
    7. 'bool' → logprob: -10.880620956420898
    8. 'False' → logprob: -11.630620956420898
    9. '_set' → logprob: -12.630620956420898
    10. '_Set' → logprob: -13.130620956420898

Token 2049: '[' (ID: 58)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.6675816178321838
    2. '[' → logprob: -0.7925816178321838
    3. '(p' → logprob: -4.042581558227539
    4. '(cls' → logprob: -4.917581558227539
    5. '(Point' → logprob: -6.167581558227539
    6. '<Point' → logprob: -6.542581558227539
    7. '('' → logprob: -6.667581558227539
    8. ')' → logprob: -6.792581558227539
    9. '(' → logprob: -6.917581558227539
    10. '['' → logprob: -7.042581558227539

Token 2050: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.128163257315464e-07
    2. '.Point' → logprob: -15.625
    3. ' Point' → logprob: -16.0
    4. 'p' → logprob: -17.0
    5. '<Point' → logprob: -17.5
    6. '(Point' → logprob: -18.25
    7. '	Point' → logprob: -18.5
    8. ''' → logprob: -18.5
    9. '_point' → logprob: -19.125
    10. '_Point' → logprob: -19.375

Token 2051: '])' (ID: 4636)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011991284787654877
    2. '):
' → logprob: -4.511991500854492
    3. ')' → logprob: -7.636991500854492
    4. ',' → logprob: -8.136991500854492
    5. '   ' → logprob: -10.136991500854492
    6. ' ):' → logprob: -10.261991500854492
    7. ':' → logprob: -10.761991500854492
    8. '       ' → logprob: -11.011991500854492
    9. '),' → logprob: -11.511991500854492
    10. '):
' → logprob: -11.636991500854492

Token 2052: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010102755390107632
    2. ':
' → logprob: -5.26010274887085
    3. '->' → logprob: -6.13510274887085
    4. ':return' → logprob: -6.51010274887085
    5. ' ->' → logprob: -7.38510274887085
    6. '   ' → logprob: -8.010103225708008
    7. '       ' → logprob: -8.635103225708008
    8. ' :' → logprob: -10.510103225708008
    9. '  ' → logprob: -11.385103225708008
    10. ' ' → logprob: -11.885103225708008

Token 2053: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -9.722539834911004e-05
    2. ' bool' → logprob: -9.250097274780273
    3. 'True' → logprob: -14.750097274780273
    4. 'return' → logprob: -15.250097274780273
    5. 'False' → logprob: -15.250097274780273
    6. 'Bool' → logprob: -16.250097274780273
    7. 'def' → logprob: -16.875097274780273
    8. '<bool' → logprob: -17.500097274780273
    9. '	bool' → logprob: -18.750097274780273
    10. '(bool' → logprob: -19.250097274780273

Token 2054: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5295850038528442
    2. ':' → logprob: -0.9045850038528442
    3. '       ' → logprob: -5.529584884643555
    4. ':return' → logprob: -6.154584884643555
    5. '   ' → logprob: -8.404584884643555
    6. ':

' → logprob: -10.654584884643555
    7. '(' → logprob: -11.404584884643555
    8. '      ' → logprob: -11.779584884643555
    9. ':def' → logprob: -11.779584884643555
    10. ' :
' → logprob: -12.029584884643555

Token 2055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.128163257315464e-07
    2. '           ' → logprob: -15.5
    3. '   ' → logprob: -17.25
    4. '      ' → logprob: -17.25
    5. '               ' → logprob: -18.0
    6. '     ' → logprob: -18.5
    7. '        ' → logprob: -18.5
    8. '```' → logprob: -18.875
    9. 'return' → logprob: -19.375
    10. 'if' → logprob: -19.625

Token 2056: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005574395763687789
    2. 'if' (adapté à ' if') → logprob: -7.5005574226379395
    3. ' if' → logprob: -12.875557899475098
    4. '   ' → logprob: -14.375557899475098
    5. '
' → logprob: -15.250557899475098
    6. 'return' → logprob: -15.375557899475098
    7. 'class' → logprob: -15.375557899475098
    8. '           ' → logprob: -15.500557899475098
    9. 'If' → logprob: -16.25055694580078
    10. '     ' → logprob: -16.62555694580078

Token 2057: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1602267622947693
    2. ' not' → logprob: -1.910226821899414
    3. '
' → logprob: -13.535226821899414
    4. 'points' → logprob: -14.660226821899414
    5. '(not' → logprob: -14.660226821899414
    6. '	not' → logprob: -16.535226821899414
    7. '   ' → logprob: -16.660226821899414
    8. '       ' → logprob: -16.785226821899414
    9. 'n' → logprob: -17.160226821899414
    10. ' points' → logprob: -17.285226821899414

Token 2058: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0028072523418813944
    2. ' points' → logprob: -5.877807140350342
    3. '(points' → logprob: -13.2528076171875
    4. '	points' → logprob: -15.6278076171875
    5. 'point' → logprob: -16.1278076171875
    6. 'bool' → logprob: -16.3778076171875
    7. 'False' → logprob: -16.8778076171875
    8. 'p' → logprob: -17.2528076171875
    9. 'not' → logprob: -17.5028076171875
    10. '.points' → logprob: -17.6278076171875

Token 2059: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1971627175807953
    2. ':
' → logprob: -1.8221627473831177
    3. '           ' → logprob: -4.072162628173828
    4. '       ' → logprob: -9.197162628173828
    5. ':return' → logprob: -10.072162628173828
    6. '[' → logprob: -11.197162628173828
    7. '   ' → logprob: -11.447162628173828
    8. '         ' → logprob: -11.447162628173828
    9. '{
' → logprob: -11.697162628173828
    10. '          ' → logprob: -11.947162628173828

Token 2060: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004462812503334135
    2. 'False' → logprob: -7.750446319580078
    3. ' False' → logprob: -11.500446319580078
    4. '       ' → logprob: -12.875446319580078
    5. 'return' → logprob: -14.000446319580078
    6. '               ' → logprob: -14.125446319580078
    7. '          ' → logprob: -14.875446319580078
    8. '   ' → logprob: -14.875446319580078
    9. '         ' → logprob: -15.375446319580078
    10. ' return' → logprob: -15.500446319580078

Token 2061: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.48126542568206787
    2. 'return' (adapté à ' return') → logprob: -0.9812654256820679
    3. ' return' → logprob: -4.981265544891357
    4. ' False' → logprob: -8.2312650680542
    5. 'True' → logprob: -10.8562650680542
    6. '       ' → logprob: -11.9812650680542
    7. '           ' → logprob: -12.3562650680542
    8. 'Return' → logprob: -13.8562650680542
    9. '   ' → logprob: -16.606266021728516
    10. '               ' → logprob: -16.981266021728516

Token 2062: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005567280459217727
    2. ' False' → logprob: -7.500556945800781
    3. 'True' → logprob: -12.500556945800781
    4. '(False' → logprob: -18.37555694580078
    5. 'F' → logprob: -19.00055694580078
    6. ' True' → logprob: -19.62555694580078
    7. '   ' → logprob: -20.25055694580078
    8. '_false' → logprob: -20.25055694580078
    9. '=False' → logprob: -20.62555694580078
    10. '
' → logprob: -22.00055694580078

Token 2063: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.317247167928144e-05
    2. '
' → logprob: -10.000093460083008
    3. ':
' → logprob: -10.250093460083008
    4. '	' → logprob: -13.000093460083008
    5. '           ' → logprob: -13.000093460083008
    6. 'return' → logprob: -13.375093460083008
    7. '   ' → logprob: -13.375093460083008
    8. ':' → logprob: -14.250093460083008
    9. ',' → logprob: -14.250093460083008
    10. '[' → logprob: -14.500093460083008

Token 2064: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.292907877039397e-06
    2. '
' → logprob: -12.87500286102295
    3. '	' → logprob: -14.87500286102295
    4. '   ' → logprob: -15.87500286102295
    5. '           ' → logprob: -16.000003814697266
    6. '```' → logprob: -17.125003814697266
    7. '      ' → logprob: -17.750003814697266
    8. 'return' → logprob: -18.000003814697266
    9. '               ' → logprob: -18.125003814697266
    10. '     ' → logprob: -18.500003814697266

Token 2065: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.049709007143974304
    2. '       ' → logprob: -3.0497090816497803
    3. ' min' → logprob: -6.799708843231201
    4. '
' → logprob: -12.42470932006836
    5. '   ' → logprob: -13.17470932006836
    6. '(min' → logprob: -14.92470932006836
    7. '	min' → logprob: -15.04970932006836
    8. '           ' → logprob: -16.04970932006836
    9. '[min' → logprob: -16.67470932006836
    10. 'max' → logprob: -16.67470932006836

Token 2066: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.000810340337920934
    2. '_' → logprob: -7.125810146331787
    3. 'x' → logprob: -13.125810623168945
    4. '_tokens' → logprob: -14.125810623168945
    5. '_
' → logprob: -14.250810623168945
    6. '_p' → logprob: -14.500810623168945
    7. '_token' → logprob: -15.000810623168945
    8. ' _' → logprob: -15.125810623168945
    9. '   ' → logprob: -15.500810623168945
    10. '```' → logprob: -15.750810623168945

Token 2067: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759445428848267
    2. '=' → logprob: -0.8259445428848267
    3. '=
' → logprob: -12.450944900512695
    4. ' =
' → logprob: -14.450944900512695
    5. '=min' → logprob: -15.075944900512695
    6. '=

' → logprob: -15.825944900512695
    7. '=p' → logprob: -17.075944900512695
    8. ' ' → logprob: -17.200944900512695
    9. '   ' → logprob: -17.450944900512695
    10. ',' → logprob: -17.575944900512695

Token 2068: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10020763427019119
    2. ' min' → logprob: -2.350207567214966
    3. 'max' → logprob: -15.100207328796387
    4. '(min' → logprob: -15.100207328796387
    5. 'm' → logprob: -15.975207328796387
    6. '[min' → logprob: -16.475208282470703
    7. 'mini' → logprob: -17.350208282470703
    8. 'minimum' → logprob: -17.850208282470703
    9. '=min' → logprob: -17.850208282470703
    10. '	min' → logprob: -18.100208282470703

Token 2069: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.804671233519912e-05
    2. '(' → logprob: -9.37508773803711
    3. ' (' → logprob: -13.25008773803711
    4. 'p' → logprob: -14.37508773803711
    5. '(
' → logprob: -14.62508773803711
    6. '(points' → logprob: -16.00008773803711
    7. '(point' → logprob: -17.50008773803711
    8. 'token' → logprob: -17.62508773803711
    9. '(x' → logprob: -17.62508773803711
    10. '   ' → logprob: -17.75008773803711

Token 2070: '.x' (ID: 3700)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3352450728416443
    2. 'for' → logprob: -1.335245132446289
    3. '.' → logprob: -4.960245132446289
    4. '.x' → logprob: -5.085245132446289
    5. '.for' → logprob: -5.210245132446289
    6. '(p' → logprob: -6.585245132446289
    7. ')' → logprob: -7.210245132446289
    8. '.p' → logprob: -8.835245132446289
    9. ' .' → logprob: -8.960245132446289
    10. '(for' → logprob: -9.085245132446289

Token 2071: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07891038805246353
    2. 'for' → logprob: -2.5789103507995605
    3. '[' → logprob: -11.828910827636719
    4. ')' → logprob: -11.953910827636719
    5. ',' → logprob: -13.578910827636719
    6. '.for' → logprob: -13.828910827636719
    7. '(for' → logprob: -13.828910827636719
    8. '	for' → logprob: -14.203910827636719
    9. '<|end|>' → logprob: -14.828910827636719
    10. 'For' → logprob: -14.953910827636719

Token 2072: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001503790495917201
    2. ' p' → logprob: -6.501503944396973
    3. '(p' → logprob: -13.501503944396973
    4. '	p' → logprob: -17.501502990722656
    5. ' ' → logprob: -18.126502990722656
    6. 'point' → logprob: -18.251502990722656
    7. '.p' → logprob: -18.376502990722656
    8. 'points' → logprob: -18.626502990722656
    9. '[p' → logprob: -18.751502990722656
    10. '   ' → logprob: -18.876502990722656

Token 2073: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6326444745063782
    2. 'points' → logprob: -1.1326444149017334
    3. 'in' → logprob: -2.7576444149017334
    4. 'p' → logprob: -3.2576444149017334
    5. ' points' → logprob: -3.6326444149017334
    6. ' p' → logprob: -4.2576446533203125
    7. 'for' → logprob: -6.3826446533203125
    8. '(points' → logprob: -6.3826446533203125
    9. '.points' → logprob: -8.132644653320312
    10. ' for' → logprob: -8.507644653320312

Token 2074: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00011009939044015482
    2. ' points' → logprob: -9.250109672546387
    3. 'p' → logprob: -11.875109672546387
    4. '(points' → logprob: -12.125109672546387
    5. 'point' → logprob: -14.250109672546387
    6. '	points' → logprob: -15.875109672546387
    7. '[' → logprob: -16.000110626220703
    8. '.points' → logprob: -16.375110626220703
    9. '
' → logprob: -16.500110626220703
    10. '{' → logprob: -16.625110626220703

Token 2075: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7480539083480835
    2. '       ' → logprob: -1.4980539083480835
    3. ' for' → logprob: -1.4980539083480835
    4. ',' → logprob: -3.123054027557373
    5. ')' → logprob: -3.498054027557373
    6. '           ' → logprob: -6.748054027557373
    7. '<|end|>' → logprob: -7.373054027557373
    8. '[' → logprob: -7.498054027557373
    9. ')
' → logprob: -7.623054027557373
    10. ',
' → logprob: -7.873054027557373

Token 2076: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.35706390615087e-05
    2. ',' → logprob: -11.375033378601074
    3. '               ' → logprob: -12.250033378601074
    4. '        ' → logprob: -12.875033378601074
    5. '[' → logprob: -13.000033378601074
    6. '           ' → logprob: -13.125033378601074
    7. '      ' → logprob: -13.125033378601074
    8. ')' → logprob: -13.625033378601074
    9. '```' → logprob: -13.625033378601074
    10. ' ' → logprob: -13.875033378601074

Token 2077: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.08223097026348114
    2. 'min' (adapté à ' min') → logprob: -2.582231044769287
    3. '       ' → logprob: -5.707231044769287
    4. '	min' → logprob: -12.332230567932129
    5. '        ' → logprob: -12.957230567932129
    6. '(min' → logprob: -13.707230567932129
    7. ' max' → logprob: -13.832230567932129
    8. ',min' → logprob: -14.207230567932129
    9. '.min' → logprob: -14.332230567932129
    10. '_min' → logprob: -14.332230567932129

Token 2078: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0005244385101832449
    2. '_x' → logprob: -7.750524520874023
    3. '(p' → logprob: -10.000524520874023
    4. 'y' → logprob: -10.125524520874023
    5. '```' → logprob: -13.375524520874023
    6. '   ' → logprob: -13.500524520874023
    7. 'Y' → logprob: -13.625524520874023
    8. 'import' → logprob: -13.750524520874023
    9. '(_' → logprob: -14.750524520874023
    10. '(' → logprob: -15.250524520874023

Token 2079: ' =' (ID: 314)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09272798895835876
    2. ' in' → logprob: -3.2177278995513916
    3. ' =' → logprob: -3.3427278995513916
    4. '(p' → logprob: -5.092728137969971
    5. 'for' → logprob: -5.717728137969971
    6. '=' → logprob: -5.717728137969971
    7. '<|end|>' → logprob: -9.092727661132812
    8. ' (' → logprob: -9.717727661132812
    9. 'in' → logprob: -9.967727661132812
    10. ' at' → logprob: -10.217727661132812

Token 2080: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015036711702123284
    2. ' min' → logprob: -6.5015034675598145
    3. '(min' → logprob: -13.751503944396973
    4. '[min' → logprob: -15.626503944396973
    5. 'm' → logprob: -16.126502990722656
    6. 'max' → logprob: -17.876502990722656
    7. '	min' → logprob: -18.126502990722656
    8. 'minimum' → logprob: -18.751502990722656
    9. '=min' → logprob: -18.751502990722656
    10. 'mini' → logprob: -18.751502990722656

Token 2081: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0002668192028068006
    2. 'p' → logprob: -8.250267028808594
    3. ' p' → logprob: -12.375267028808594
    4. '(' → logprob: -14.375267028808594
    5. ' (' → logprob: -15.375267028808594
    6. '[p' → logprob: -16.125267028808594
    7. '(
' → logprob: -16.375267028808594
    8. 'for' → logprob: -16.750267028808594
    9. '   ' → logprob: -17.125267028808594
    10. '<p' → logprob: -17.500267028808594

Token 2082: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.033669330179691315
    2. '.y' → logprob: -3.4086692333221436
    3. 'x' → logprob: -10.908669471740723
    4. 'for' → logprob: -13.533669471740723
    5. '(x' → logprob: -13.908669471740723
    6. '.p' → logprob: -14.033669471740723
    7. 'y' → logprob: -14.533669471740723
    8. '(p' → logprob: -14.658669471740723
    9. 'import' → logprob: -14.908669471740723
    10. '```' → logprob: -14.908669471740723

Token 2083: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.575941801071167
    2. 'for' → logprob: -0.825941801071167
    3. '<|end|>' → logprob: -14.325942039489746
    4. '	for' → logprob: -14.825942039489746
    5. ' in' → logprob: -15.075942039489746
    6. '```' → logprob: -15.325942039489746
    7. 'in' → logprob: -15.575942039489746
    8. '<|end|>' → logprob: -15.825942039489746
    9. 'For' → logprob: -16.45094108581543
    10. 'points' → logprob: -16.57594108581543

Token 2084: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04509247839450836
    2. '(p' → logprob: -3.2950925827026367
    3. 'min' → logprob: -5.670092582702637
    4. 'points' → logprob: -6.045092582702637
    5. ' p' → logprob: -6.795092582702637
    6. '[p' → logprob: -10.545092582702637
    7. 'in' → logprob: -10.920092582702637
    8. '(points' → logprob: -11.170092582702637
    9. 'for' → logprob: -11.295092582702637
    10. ' points' → logprob: -11.545092582702637

Token 2085: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.18658830225467682
    2. '.points' → logprob: -1.9365882873535156
    3. '(points' → logprob: -4.311588287353516
    4. 'oints' → logprob: -4.936588287353516
    5. ' points' → logprob: -6.186588287353516
    6. 'in' → logprob: -6.561588287353516
    7. '	points' → logprob: -6.811588287353516
    8. '_points' → logprob: -8.311588287353516
    9. ' in' → logprob: -8.686588287353516
    10. 'for' → logprob: -9.061588287353516

Token 2086: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00010092071170220152
    2. 'p' → logprob: -9.250101089477539
    3. ' points' → logprob: -12.375101089477539
    4. '(points' → logprob: -14.375101089477539
    5. '.points' → logprob: -18.37510108947754
    6. '
' → logprob: -18.75010108947754
    7. '	points' → logprob: -19.25010108947754
    8. 'point' → logprob: -19.87510108947754
    9. ' p' → logprob: -20.12510108947754
    10. '(p' → logprob: -20.25010108947754

Token 2087: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14376303553581238
    2. '       ' → logprob: -2.0187630653381348
    3. ')' → logprob: -7.018763065338135
    4. 'for' → logprob: -9.768762588500977
    5. '
' → logprob: -9.893762588500977
    6. '):
' → logprob: -10.893762588500977
    7. '```' → logprob: -11.268762588500977
    8. ':
' → logprob: -11.893762588500977
    9. ',' → logprob: -11.893762588500977
    10. '           ' → logprob: -12.143762588500977

Token 2088: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -13.37500286102295
    3. 'max' → logprob: -15.50000286102295
    4. '               ' → logprob: -15.75000286102295
    5. '           ' → logprob: -16.000001907348633
    6. '
' → logprob: -16.250001907348633
    7. 'min' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.625001907348633
    9. '	' → logprob: -16.750001907348633
    10. '      ' → logprob: -18.375001907348633

Token 2089: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -1.1041145626222715e-05
    2. ' max' → logprob: -12.000011444091797
    3. '       ' → logprob: -12.250011444091797
    4. 'min' → logprob: -16.375011444091797
    5. '	max' → logprob: -20.750011444091797
    6. 'maximum' → logprob: -21.875011444091797
    7. '(max' → logprob: -22.375011444091797
    8. '_max' → logprob: -22.750011444091797
    9. '.max' → logprob: -23.250011444091797
    10. '   ' → logprob: -23.500011444091797

Token 2090: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -8.895480277715251e-06
    2. '(p' → logprob: -11.750008583068848
    3. '_p' → logprob: -15.000008583068848
    4. 'x' → logprob: -15.125008583068848
    5. '```' → logprob: -16.125009536743164
    6. '   ' → logprob: -16.375009536743164
    7. '(_' → logprob: -17.375009536743164
    8. '(' → logprob: -18.000009536743164
    9. '_y' → logprob: -18.000009536743164
    10. '(x' → logprob: -18.000009536743164

Token 2091: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889000326395035
    2. '=' → logprob: -2.578890085220337
    3. '   ' → logprob: -16.578889846801758
    4. '=max' → logprob: -16.828889846801758
    5. '```' → logprob: -17.453889846801758
    6. ' ' → logprob: -18.578889846801758
    7. ')' → logprob: -18.578889846801758
    8. 'max' → logprob: -18.828889846801758
    9. 'for' → logprob: -18.953889846801758
    10. '=
' → logprob: -18.953889846801758

Token 2092: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014164448715746403
    2. ' max' → logprob: -4.264164447784424
    3. 'min' → logprob: -14.389164924621582
    4. '(max' → logprob: -14.764164924621582
    5. 'hash' → logprob: -17.514163970947266
    6. '	max' → logprob: -18.014163970947266
    7. '=max' → logprob: -18.139163970947266
    8. '[max' → logprob: -18.264163970947266
    9. ' min' → logprob: -19.889163970947266
    10. ',max' → logprob: -20.139163970947266

Token 2093: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.9153885558771435e-06
    2. 'p' → logprob: -12.375005722045898
    3. '(max' → logprob: -14.500005722045898
    4. '(' → logprob: -15.125005722045898
    5. '(
' → logprob: -15.500005722045898
    6. '[p' → logprob: -15.500005722045898
    7. 'max' → logprob: -15.875005722045898
    8. ' p' → logprob: -16.7500057220459
    9. '```' → logprob: -16.7500057220459
    10. ' (' → logprob: -16.8750057220459

Token 2094: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0586521215736866
    2. '(p' → logprob: -3.05865216255188
    3. 'x' → logprob: -4.808651924133301
    4. '.p' → logprob: -7.058651924133301
    5. '_x' → logprob: -7.058651924133301
    6. '[p' → logprob: -9.1836519241333
    7. '(x' → logprob: -11.4336519241333
    8. 'p' → logprob: -12.1836519241333
    9. '[' → logprob: -12.8086519241333
    10. '$x' → logprob: -13.0586519241333

Token 2095: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007614913396537304
    2. ' for' → logprob: -4.882615089416504
    3. '(p' → logprob: -12.257615089416504
    4. '
' → logprob: -13.632615089416504
    5. '(for' → logprob: -14.257615089416504
    6. ')' → logprob: -14.382615089416504
    7. '```' → logprob: -14.757615089416504
    8. '	for' → logprob: -14.757615089416504
    9. 'For' → logprob: -15.632615089416504
    10. '[p' → logprob: -15.632615089416504

Token 2096: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.1010240986943245
    2. 'p' → logprob: -2.3510241508483887
    3. ' points' → logprob: -7.351024150848389
    4. '(points' → logprob: -8.85102367401123
    5. ' p' → logprob: -10.60102367401123
    6. 'point' → logprob: -12.85102367401123
    7. '(p' → logprob: -13.60102367401123
    8. '[p' → logprob: -13.97602367401123
    9. '	points' → logprob: -14.47602367401123
    10. '
' → logprob: -14.60102367401123

Token 2097: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.029350964352488518
    2. 'for' → logprob: -4.279350757598877
    3. '(points' → logprob: -4.654350757598877
    4. ' points' → logprob: -5.904350757598877
    5. '.points' → logprob: -6.029350757598877
    6. ' for' → logprob: -8.404351234436035
    7. '	points' → logprob: -9.279351234436035
    8. ' in' → logprob: -9.654351234436035
    9. 'in' → logprob: -11.779351234436035
    10. '[' → logprob: -12.279351234436035

Token 2098: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -4.394135612528771e-05
    2. ' points' → logprob: -10.750043869018555
    3. '(points' → logprob: -10.750043869018555
    4. 'p' → logprob: -14.750043869018555
    5. '
' → logprob: -15.375043869018555
    6. '.points' → logprob: -15.625043869018555
    7. '	points' → logprob: -16.125043869018555
    8. '[' → logprob: -17.625043869018555
    9. 'point' → logprob: -18.000043869018555
    10. '[p' → logprob: -18.500043869018555

Token 2099: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.23540335893630981
    2. '       ' → logprob: -1.610403299331665
    3. ')' → logprob: -4.735403537750244
    4. 'for' → logprob: -6.860403537750244
    5. ' for' → logprob: -9.610403060913086
    6. '),' → logprob: -11.485403060913086
    7. ',' → logprob: -11.485403060913086
    8. ')
' → logprob: -11.860403060913086
    9. '
' → logprob: -12.610403060913086
    10. '   ' → logprob: -12.735403060913086

Token 2100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029923528200015426
    2. ',' → logprob: -8.625299453735352
    3. 'max' → logprob: -9.500299453735352
    4. ' max' → logprob: -10.375299453735352
    5. ',max' → logprob: -12.000299453735352
    6. '
' → logprob: -13.250299453735352
    7. '```' → logprob: -13.750299453735352
    8. '(max' → logprob: -13.750299453735352
    9. '               ' → logprob: -14.000299453735352
    10. ' ,' → logprob: -14.250299453735352

Token 2101: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.023245595395565033
    2. 'max' (adapté à ' max') → logprob: -3.7732455730438232
    3. '       ' → logprob: -16.148244857788086
    4. '(max' → logprob: -17.148244857788086
    5. '_max' → logprob: -18.398244857788086
    6. '	max' → logprob: -18.398244857788086
    7. 'Max' → logprob: -18.398244857788086
    8. '.max' → logprob: -18.898244857788086
    9. '```' → logprob: -19.523244857788086
    10. ',max' → logprob: -20.273244857788086

Token 2102: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00010664248111424968
    2. 'y' → logprob: -9.375106811523438
    3. '_x' → logprob: -11.125106811523438
    4. '(p' → logprob: -12.375106811523438
    5. '.y' → logprob: -14.000106811523438
    6. 'Y' → logprob: -14.000106811523438
    7. '[' → logprob: -15.375106811523438
    8. 'p' → logprob: -15.500106811523438
    9. '[p' → logprob: -15.750106811523438
    10. '@y' → logprob: -15.875106811523438

Token 2103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197037547826767
    2. '=' → logprob: -2.8119704723358154
    3. '=p' → logprob: -13.561970710754395
    4. ' for' → logprob: -14.936970710754395
    5. ')' → logprob: -15.561970710754395
    6. '<|end|>' → logprob: -15.686970710754395
    7. 'for' → logprob: -16.061969757080078
    8. '=max' → logprob: -16.436969757080078
    9. ' ' → logprob: -16.561969757080078
    10. '   ' → logprob: -16.561969757080078

Token 2104: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008636788465082645
    2. ' max' → logprob: -4.758636951446533
    3. 'min' → logprob: -10.758636474609375
    4. '(max' → logprob: -13.883636474609375
    5. ' min' → logprob: -16.133636474609375
    6. '[max' → logprob: -17.883636474609375
    7. '=max' → logprob: -18.133636474609375
    8. '	max' → logprob: -18.383636474609375
    9. '_max' → logprob: -20.383636474609375
    10. '.max' → logprob: -20.633636474609375

Token 2105: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.2471589798224159e-05
    2. 'p' → logprob: -11.500012397766113
    3. '[p' → logprob: -14.375012397766113
    4. '(max' → logprob: -15.250012397766113
    5. '(points' → logprob: -15.250012397766113
    6. 'max' → logprob: -15.375012397766113
    7. ' p' → logprob: -15.500012397766113
    8. '```' → logprob: -15.750012397766113
    9. '<p' → logprob: -16.37501335144043
    10. '(point' → logprob: -16.50001335144043

Token 2106: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.04862244799733162
    2. '(p' → logprob: -3.2986223697662354
    3. '.p' → logprob: -5.5486226081848145
    4. '.points' → logprob: -5.9236226081848145
    5. '.x' → logprob: -6.1736226081848145
    6. '[p' → logprob: -7.4236226081848145
    7. 'y' → logprob: -8.048622131347656
    8. 'max' → logprob: -8.798622131347656
    9. '_points' → logprob: -8.923622131347656
    10. 'oints' → logprob: -9.423622131347656

Token 2107: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012751073576509953
    2. ' for' → logprob: -4.38775110244751
    3. '(p' → logprob: -8.637750625610352
    4. 'points' → logprob: -10.137750625610352
    5. '(points' → logprob: -11.012750625610352
    6. ')' → logprob: -13.637750625610352
    7. '       ' → logprob: -14.012750625610352
    8. '   ' → logprob: -14.137750625610352
    9. 'For' → logprob: -14.137750625610352
    10. '_points' → logprob: -14.387750625610352

Token 2108: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00235412223264575
    2. ' p' → logprob: -6.752354145050049
    3. 'points' → logprob: -6.752354145050049
    4. ' points' → logprob: -11.12735366821289
    5. 'Points' → logprob: -15.50235366821289
    6. 'Point' → logprob: -16.12735366821289
    7. '(p' → logprob: -16.50235366821289
    8. 'point' → logprob: -17.50235366821289
    9. '_points' → logprob: -18.00235366821289
    10. '
' → logprob: -18.00235366821289

Token 2109: ' in' (ID: 306)
  Prédit: '.points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.4461641013622284
    2. 'points' → logprob: -1.0711641311645508
    3. '(points' → logprob: -4.196164131164551
    4. ' points' → logprob: -7.071164131164551
    5. 'p' → logprob: -7.446164131164551
    6. '(p' → logprob: -8.32116413116455
    7. '.p' → logprob: -8.44616413116455
    8. '	points' → logprob: -8.69616413116455
    9. ' p' → logprob: -10.19616413116455
    10. '.Point' → logprob: -10.44616413116455

Token 2110: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0011292597046121955
    2. 'p' → logprob: -7.376129150390625
    3. ' points' → logprob: -8.376129150390625
    4. '(points' → logprob: -8.501129150390625
    5. 'for' → logprob: -9.876129150390625
    6. '(p' → logprob: -11.626129150390625
    7. '
' → logprob: -13.126129150390625
    8. ' p' → logprob: -13.376129150390625
    9. '	points' → logprob: -13.751129150390625
    10. '[p' → logprob: -13.876129150390625

Token 2111: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009719965048134327
    2. '):
' → logprob: -5.2597198486328125
    3. ')' → logprob: -6.0097198486328125
    4. ':
' → logprob: -6.8847198486328125
    5. '):' → logprob: -8.009719848632812
    6. ')
' → logprob: -8.134719848632812
    7. ':' → logprob: -8.884719848632812
    8. ',' → logprob: -9.259719848632812
    9. '           ' → logprob: -10.134719848632812
    10. '```' → logprob: -11.509719848632812

Token 2112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.5577775128767826e-06
    2. 'return' → logprob: -13.125005722045898
    3. '```' → logprob: -13.625005722045898
    4. '   ' → logprob: -13.750005722045898
    5. '	' → logprob: -14.625005722045898
    6. '
' → logprob: -15.625005722045898
    7. ' return' → logprob: -16.1250057220459
    8. '           ' → logprob: -16.2500057220459
    9. '               ' → logprob: -16.5000057220459
    10. '     ' → logprob: -16.8750057220459

Token 2113: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008663024753332138
    2. 'return' (adapté à ' return') → logprob: -4.758663177490234
    3. ' return' → logprob: -10.008663177490234
    4. '   ' → logprob: -12.633663177490234
    5. '           ' → logprob: -15.633663177490234
    6. '	return' → logprob: -16.883663177490234
    7. '     ' → logprob: -17.383663177490234
    8. '               ' → logprob: -17.383663177490234
    9. '      ' → logprob: -17.633663177490234
    10. '
' → logprob: -18.008663177490234

Token 2114: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.001502717612311244
    2. ' cls' → logprob: -6.501502513885498
    3. '(cls' → logprob: -14.876502990722656
    4. '.cls' → logprob: -17.501502990722656
    5. 'class' → logprob: -17.876502990722656
    6. 'classmethod' → logprob: -18.001502990722656
    7. 'Cls' → logprob: -18.501502990722656
    8. '_cls' → logprob: -18.626502990722656
    9. 'super' → logprob: -18.751502990722656
    10. '   ' → logprob: -19.001502990722656

Token 2115: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.000206401280593127
    2. '.pattern' → logprob: -8.500205993652344
    3. '.' → logprob: -13.625205993652344
    4. 'match' → logprob: -14.375205993652344
    5. '_match' → logprob: -14.875205993652344
    6. ' .' → logprob: -15.375205993652344
    7. '._' → logprob: -15.625205993652344
    8. '.matcher' → logprob: -15.625205993652344
    9. '.matches' → logprob: -16.000205993652344
    10. '.MATCH' → logprob: -16.125205993652344

Token 2116: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -1.9027791495318525e-05
    2. 'pattern' → logprob: -11.125019073486328
    3. '_' → logprob: -13.625019073486328
    4. '_class' → logprob: -14.375019073486328
    5. '   ' → logprob: -15.000019073486328
    6. '_point' → logprob: -15.125019073486328
    7. '_points' → logprob: -15.125019073486328
    8. '       ' → logprob: -15.125019073486328
    9. '(True' → logprob: -15.750019073486328
    10. '_patterns' → logprob: -16.125019073486328

Token 2117: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -3.128163257315464e-07
    2. 'points' → logprob: -15.5
    3. '(parts' → logprob: -18.375
    4. '(cls' → logprob: -19.0
    5. '	points' → logprob: -19.875
    6. '(' → logprob: -20.625
    7. '(point' → logprob: -20.625
    8. '(
' → logprob: -21.125
    9. ' points' → logprob: -21.75
    10. '.points' → logprob: -22.0

Token 2118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017188541823998094
    2. '(points' → logprob: -6.376718997955322
    3. ' ,' → logprob: -12.126718521118164
    4. '       ' → logprob: -12.376718521118164
    5. 'points' → logprob: -12.876718521118164
    6. '           ' → logprob: -13.501718521118164
    7. ' points' → logprob: -14.251718521118164
    8. '   ' → logprob: -14.376718521118164
    9. ',p' → logprob: -14.751718521118164
    10. ',
' → logprob: -14.876718521118164

Token 2119: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02975395694375038
    2. 'points' → logprob: -3.5297539234161377
    3. ' min' → logprob: -13.029753684997559
    4. ' points' → logprob: -14.654753684997559
    5. 'max' → logprob: -15.029753684997559
    6. '(min' → logprob: -15.404753684997559
    7. 'cls' → logprob: -15.779753684997559
    8. '[min' → logprob: -17.404754638671875
    9. '       ' → logprob: -17.529754638671875
    10. '	min' → logprob: -17.904754638671875

Token 2120: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -4.723352049040841e-06
    2. '(min' → logprob: -13.250004768371582
    3. 'x' → logprob: -13.750004768371582
    4. '(p' → logprob: -14.750004768371582
    5. '_y' → logprob: -14.750004768371582
    6. '_min' → logprob: -14.875004768371582
    7. 'min' → logprob: -15.625004768371582
    8. 'max' → logprob: -16.250003814697266
    9. '_max' → logprob: -16.750003814697266
    10. '(max' → logprob: -16.875003814697266

Token 2121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002043748099822551
    2. ' ,' → logprob: -8.750204086303711
    3. ',min' → logprob: -10.125204086303711
    4. ',p' → logprob: -13.250204086303711
    5. '_,' → logprob: -13.625204086303711
    6. 'min' → logprob: -14.500204086303711
    7. ',
' → logprob: -14.750204086303711
    8. ',n' → logprob: -15.000204086303711
    9. ',max' → logprob: -15.000204086303711
    10. ',m' → logprob: -15.250204086303711

Token 2122: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.5491004129871726e-05
    2. ' min' → logprob: -10.000045776367188
    3. '_min' → logprob: -18.875045776367188
    4. 'max' → logprob: -19.375045776367188
    5. '[min' → logprob: -20.500045776367188
    6. '(min' → logprob: -20.750045776367188
    7. '	min' → logprob: -20.750045776367188
    8. ',min' → logprob: -21.750045776367188
    9. '=min' → logprob: -21.750045776367188
    10. '.min' → logprob: -22.125045776367188

Token 2123: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0013248840114101768
    2. 'min' → logprob: -7.126324653625488
    3. '_min' → logprob: -8.501324653625488
    4. ',' → logprob: -9.126324653625488
    5. 'y' → logprob: -9.251324653625488
    6. '   ' → logprob: -10.251324653625488
    7. '```' → logprob: -11.376324653625488
    8. 'Y' → logprob: -11.626324653625488
    9. '_,' → logprob: -11.876324653625488
    10. '_x' → logprob: -12.001324653625488

Token 2124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ',max' → logprob: -12.000018119812012
    3. '(points' → logprob: -12.375018119812012
    4. ' ,' → logprob: -12.750018119812012
    5. 'points' → logprob: -13.125018119812012
    6. ',p' → logprob: -13.625018119812012
    7. '       ' → logprob: -14.875018119812012
    8. ' points' → logprob: -15.625018119812012
    9. ',
' → logprob: -15.625018119812012
    10. '```' → logprob: -16.375017166137695

Token 2125: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.088346359931165e-07
    2. ' max' → logprob: -14.000000953674316
    3. '_max' → logprob: -20.875
    4. '(max' → logprob: -21.125
    5. '
' → logprob: -22.0
    6. '[max' → logprob: -22.0
    7. '	max' → logprob: -22.625
    8. '   ' → logprob: -23.25
    9. ',max' → logprob: -23.625
    10. '       ' → logprob: -23.625

Token 2126: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00016086915275081992
    2. 'max' → logprob: -8.875161170959473
    3. '_y' → logprob: -12.125161170959473
    4. '(p' → logprob: -12.375161170959473
    5. '(max' → logprob: -12.625161170959473
    6. 'x' → logprob: -13.000161170959473
    7. ',' → logprob: -13.500161170959473
    8. 'X' → logprob: -13.500161170959473
    9. '_max' → logprob: -14.000161170959473
    10. '_points' → logprob: -14.375161170959473

Token 2127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.889424836728722e-05
    2. ',min' → logprob: -9.500099182128906
    3. ' ,' → logprob: -11.000099182128906
    4. ',max' → logprob: -12.500099182128906
    5. ',p' → logprob: -13.500099182128906
    6. ',
' → logprob: -14.375099182128906
    7. 'min' → logprob: -14.500099182128906
    8. '_,' → logprob: -14.625099182128906
    9. '-' → logprob: -15.250099182128906
    10. '[' → logprob: -16.500099182128906

Token 2128: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10040108114480972
    2. 'min' → logprob: -2.3504011631011963
    3. ' max' → logprob: -8.600400924682617
    4. ' min' → logprob: -11.475400924682617
    5. '_max' → logprob: -17.475400924682617
    6. 'm' → logprob: -18.100400924682617
    7. '_min' → logprob: -18.725400924682617
    8. '[max' → logprob: -18.975400924682617
    9. ',max' → logprob: -18.975400924682617
    10. '(max' → logprob: -19.350400924682617

Token 2129: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0016738721169531345
    2. 'max' → logprob: -6.501673698425293
    3. 'y' → logprob: -10.126673698425293
    4. '_points' → logprob: -10.376673698425293
    5. '_max' → logprob: -10.626673698425293
    6. '_x' → logprob: -10.751673698425293
    7. ',' → logprob: -10.751673698425293
    8. '_,' → logprob: -11.501673698425293
    9. '```' → logprob: -12.001673698425293
    10. '+' → logprob: -12.251673698425293

Token 2130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. '(points' → logprob: -11.500020980834961
    3. '       ' → logprob: -12.500020980834961
    4. ' ,' → logprob: -12.625020980834961
    5. 'points' → logprob: -13.000020980834961
    6. ',
' → logprob: -14.500020980834961
    7. ' points' → logprob: -14.750020980834961
    8. ',p' → logprob: -14.750020980834961
    9. '==' → logprob: -16.00002098083496
    10. ')' → logprob: -16.25002098083496

Token 2131: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0031784253660589457
    2. ' cls' → logprob: -5.753178596496582
    3. '(cls' → logprob: -14.628178596496582
    4. 'class' → logprob: -16.003177642822266
    5. '.cls' → logprob: -16.753177642822266
    6. 'points' → logprob: -16.878177642822266
    7. '_cls' → logprob: -17.753177642822266
    8. 'cl' → logprob: -17.753177642822266
    9. 'True' → logprob: -18.128177642822266
    10. '
' → logprob: -19.503177642822266

Token 2132: '.pattern' (ID: 76901)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04445677623152733
    2. '.pattern' → logprob: -3.294456720352173
    3. 'pattern' → logprob: -5.169456958770752
    4. '.points' → logprob: -8.544456481933594
    5. '[' → logprob: -9.044456481933594
    6. '(pattern' → logprob: -9.294456481933594
    7. ',
' → logprob: -9.794456481933594
    8. '```' → logprob: -10.044456481933594
    9. '+' → logprob: -10.294456481933594
    10. ',p' → logprob: -10.419456481933594

Token 2133: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2134: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.635164754698053e-05
    2. '
' → logprob: -9.625066757202148
    3. '<class' → logprob: -16.37506675720215
    4. ' class' → logprob: -16.75006675720215
    5. '```' → logprob: -17.50006675720215
    6. '"class' → logprob: -18.12506675720215
    7. '

' → logprob: -18.25006675720215
    8. 'classmethod' → logprob: -19.75006675720215
    9. '  
' → logprob: -19.87506675720215
    10. 'Class' → logprob: -19.87506675720215

Token 2135: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -3.380904672667384e-05
    2. ' Digit' → logprob: -10.500033378601074
    3. '9' → logprob: -12.625033378601074
    4. 'Digital' → logprob: -13.625033378601074
    5. 'D' → logprob: -14.500033378601074
    6. '
' → logprob: -15.500033378601074
    7. 'Decimal' → logprob: -15.750033378601074
    8. 'class' → logprob: -15.875033378601074
    9. '_digit' → logprob: -15.875033378601074
    10. 'Dot' → logprob: -16.25003433227539

Token 2136: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. 'Nine' → logprob: -19.0
    3. 'nine' → logprob: -19.375
    4. '９' → logprob: -20.125
    5. ' nine' → logprob: -20.25
    6. '९' → logprob: -20.625
    7. '
' → logprob: -20.875
    8. ' Nine' → logprob: -21.25
    9. ' ' → logprob: -21.375
    10. '۹' → logprob: -21.5

Token 2137: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -1.9361264946837764e-07
    2. 'Character' → logprob: -17.0
    3. '<Character' → logprob: -17.125
    4. '(Class' → logprob: -17.75
    5. '(' → logprob: -18.25
    6. '.Character' → logprob: -19.625
    7. '(
' → logprob: -19.75
    8. '(character' → logprob: -20.75
    9. '_character' → logprob: -21.0
    10. ' (' → logprob: -21.0

Token 2138: '):
' (ID: 1883)
  Prédit: '(Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -0.0006818148540332913
    2. '):
' → logprob: -7.7506818771362305
    3. '):' → logprob: -9.37568187713623
    4. '   ' → logprob: -9.62568187713623
    5. ':
' → logprob: -10.50068187713623
    6. '<Character' → logprob: -10.62568187713623
    7. 'class' → logprob: -11.00068187713623
    8. 'Character' → logprob: -11.12568187713623
    9. ':' → logprob: -11.75068187713623
    10. ')' → logprob: -12.62568187713623

Token 2139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024843348655849695
    2. 'pattern' → logprob: -6.752484321594238
    3. 'class' → logprob: -7.127484321594238
    4. '```' → logprob: -7.752484321594238
    5. ' pattern' → logprob: -9.502484321594238
    6. ' class' → logprob: -13.252484321594238
    7. '(pattern' → logprob: -13.502484321594238
    8. '``' → logprob: -13.877484321594238
    9. '[
' → logprob: -14.877484321594238
    10. 'patterns' → logprob: -14.877484321594238

Token 2140: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -1.8624639324116288e-06
    2. ' pattern' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.250001907348633
    4. 'class' → logprob: -16.500001907348633
    5. '```' → logprob: -18.250001907348633
    6. '.pattern' → logprob: -21.125001907348633
    7. '(pattern' → logprob: -21.250001907348633
    8. '``' → logprob: -22.875001907348633
    9. 'pat' → logprob: -23.000001907348633
    10. 'patterns' → logprob: -23.500001907348633

Token 2141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023280423134565353
    2. '=' → logprob: -3.773280382156372
    3. '   ' → logprob: -10.648280143737793
    4. '=[
' → logprob: -11.648280143737793
    5. '[
' → logprob: -13.898280143737793
    6. '```' → logprob: -14.148280143737793
    7. '  ' → logprob: -15.773280143737793
    8. ' ' → logprob: -15.898280143737793
    9. ':' → logprob: -16.02328109741211
    10. '=
' → logprob: -16.27328109741211

Token 2142: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0007950932485982776
    2. '[' → logprob: -7.250794887542725
    3. '   ' → logprob: -9.625795364379883
    4. ' [
' → logprob: -10.875795364379883
    5. ' [' → logprob: -16.750795364379883
    6. '["' → logprob: -16.750795364379883
    7. '=[
' → logprob: -17.875795364379883
    8. '  ' → logprob: -18.000795364379883
    9. ' ' → logprob: -18.250795364379883
    10. '       ' → logprob: -18.875795364379883

Token 2143: '       ' (ID: 309)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5171408653259277
    2. '       ' → logprob: -1.0171408653259277
    3. '   ' → logprob: -3.2671408653259277
    4. '[' → logprob: -5.517140865325928
    5. '"' → logprob: -11.642141342163086
    6. ' [
' → logprob: -12.392141342163086
    7. '     ' → logprob: -13.517141342163086
    8. '           ' → logprob: -13.767141342163086
    9. '      ' → logprob: -14.517141342163086
    10. '["' → logprob: -14.892141342163086

Token 2144: ' "' (ID: 392)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.010022268630564213
    2. '"' (adapté à ' "') → logprob: -4.760022163391113
    3. '   ' → logprob: -7.510022163391113
    4. '       ' → logprob: -7.760022163391113
    5. '[' → logprob: -7.760022163391113
    6. '"class' → logprob: -12.760022163391113
    7. '["' → logprob: -13.885022163391113
    8. '111' → logprob: -14.260022163391113
    9. '     ' → logprob: -14.635022163391113
    10. ' ' → logprob: -15.010022163391113

Token 2145: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.07889463007450104
    2. '"' → logprob: -2.57889461517334
    3. '[
' → logprob: -12.95389461517334
    4. '"""' → logprob: -13.70389461517334
    5. '"""
' → logprob: -14.95389461517334
    6. ''' → logprob: -15.07889461517334
    7. '```' → logprob: -15.70389461517334
    8. '"class' → logprob: -16.078895568847656
    9. '"
' → logprob: -16.203895568847656
    10. ' ' → logprob: -16.203895568847656

Token 2146: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.002232809318229556
    2. '",' → logprob: -6.127233028411865
    3. '",
' → logprob: -10.877232551574707
    4. '',
' → logprob: -11.127232551574707
    5. '"' → logprob: -11.877232551574707
    6. '       ' → logprob: -13.252232551574707
    7. '   ' → logprob: -13.377232551574707
    8. ',
' → logprob: -13.752232551574707
    9. '","' → logprob: -13.752232551574707
    10. '[
' → logprob: -14.627232551574707

Token 2147: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6932092308998108
    2. '       ' → logprob: -0.6932092308998108
    3. '[
' → logprob: -10.318209648132324
    4. '   ' → logprob: -11.693209648132324
    5. '[' → logprob: -11.693209648132324
    6. '           ' → logprob: -12.943209648132324
    7. ''' → logprob: -12.943209648132324
    8. '"class' → logprob: -13.318209648132324
    9. '111' → logprob: -14.193209648132324
    10. ' "' → logprob: -14.318209648132324

Token 2148: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -1.8312570318812504e-05
    2. '101' → logprob: -11.375018119812012
    3. ''' → logprob: -12.375018119812012
    4. '   ' → logprob: -14.000018119812012
    5. '       ' → logprob: -14.250018119812012
    6. '111' → logprob: -14.500018119812012
    7. '100' → logprob: -15.500018119812012
    8. ' ' → logprob: -15.750018119812012
    9. ' "' → logprob: -16.625019073486328
    10. '110' → logprob: -17.125019073486328

Token 2149: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -2.935296834039036e-06
    2. '"' → logprob: -13.75000286102295
    3. '100' → logprob: -14.12500286102295
    4. ' ' → logprob: -15.00000286102295
    5. '001' → logprob: -15.12500286102295
    6. '010' → logprob: -15.62500286102295
    7. '111' → logprob: -15.62500286102295
    8. ''' → logprob: -16.625003814697266
    9. '```' → logprob: -17.375003814697266
    10. '
' → logprob: -17.750003814697266

Token 2150: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.010717050172388554
    2. '",' → logprob: -5.510716915130615
    3. '       ' → logprob: -5.760716915130615
    4. '',
' → logprob: -6.135716915130615
    5. ',
' → logprob: -6.885716915130615
    6. '",
' → logprob: -9.385717391967773
    7. '","' → logprob: -9.885717391967773
    8. '[
' → logprob: -10.260717391967773
    9. '   ' → logprob: -10.385717391967773
    10. '"' → logprob: -10.635717391967773

Token 2151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026370203122496605
    2. '"' → logprob: -3.6513702869415283
    3. '   ' → logprob: -10.65137004852295
    4. '"class' → logprob: -10.90137004852295
    5. '           ' → logprob: -11.02637004852295
    6. ''' → logprob: -12.90137004852295
    7. '[
' → logprob: -13.02637004852295
    8. ' "' → logprob: -14.02637004852295
    9. '               ' → logprob: -14.15137004852295
    10. 'class' → logprob: -14.15137004852295

Token 2152: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0001158211671281606
    2. '       ' → logprob: -9.500115394592285
    3. '111' → logprob: -10.875115394592285
    4. ' "' → logprob: -10.875115394592285
    5. '"class' → logprob: -13.375115394592285
    6. '   ' → logprob: -14.250115394592285
    7. ''' → logprob: -14.500115394592285
    8. ' ' → logprob: -15.875115394592285
    9. '	' → logprob: -15.875115394592285
    10. '```' → logprob: -16.6251163482666

Token 2153: '111' (ID: 8780)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3133825659751892
    2. '111' → logprob: -1.313382625579834
    3. ''' → logprob: -9.063382148742676
    4. ' ' → logprob: -13.438382148742676
    5. ' "' → logprob: -13.938382148742676
    6. '101' → logprob: -14.313382148742676
    7. '011' → logprob: -14.563382148742676
    8. '110' → logprob: -14.563382148742676
    9. '```' → logprob: -15.188382148742676
    10. '"class' → logprob: -15.313382148742676

Token 2154: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.018126532435417175
    2. '",' → logprob: -4.143126487731934
    3. ',
' → logprob: -6.643126487731934
    4. '"' → logprob: -8.393126487731934
    5. '       ' → logprob: -8.393126487731934
    6. '",
' → logprob: -9.143126487731934
    7. '',
' → logprob: -9.268126487731934
    8. '[
' → logprob: -9.768126487731934
    9. '","' → logprob: -10.518126487731934
    10. '   ' → logprob: -11.143126487731934

Token 2155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008750018663704395
    2. '"' → logprob: -4.758749961853027
    3. '   ' → logprob: -9.508749961853027
    4. '[
' → logprob: -10.258749961853027
    5. '           ' → logprob: -11.883749961853027
    6. '[' → logprob: -11.883749961853027
    7. ' ' → logprob: -12.508749961853027
    8. '"class' → logprob: -13.508749961853027
    9. '      ' → logprob: -13.633749961853027
    10. '
' → logprob: -14.008749961853027

Token 2156: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -1.0683535037969705e-05
    2. '001' → logprob: -12.62501049041748
    3. '   ' → logprob: -13.12501049041748
    4. ''' → logprob: -13.25001049041748
    5. '
' → logprob: -13.75001049041748
    6. ' ' → logprob: -14.25001049041748
    7. '101' → logprob: -14.37501049041748
    8. '       ' → logprob: -14.50001049041748
    9. ' "' → logprob: -15.00001049041748
    10. '100' → logprob: -16.000011444091797

Token 2157: '001' (ID: 7659)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.693482518196106
    2. '001' → logprob: -0.693482518196106
    3. ''' → logprob: -8.193482398986816
    4. ' ' → logprob: -10.318482398986816
    5. '101' → logprob: -11.693482398986816
    6. '011' → logprob: -12.318482398986816
    7. '010' → logprob: -12.443482398986816
    8. '
' → logprob: -13.068482398986816
    9. ' "' → logprob: -13.193482398986816
    10. '   ' → logprob: -13.318482398986816

Token 2158: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.06573943048715591
    2. '",' → logprob: -2.815739393234253
    3. '","' → logprob: -6.690739631652832
    4. '       ' → logprob: -7.565739631652832
    5. ',
' → logprob: -7.565739631652832
    6. '   ' → logprob: -7.690739631652832
    7. '"' → logprob: -7.940739631652832
    8. '<|end|>' → logprob: -8.440739631652832
    9. '',
' → logprob: -8.565739631652832
    10. '",
' → logprob: -9.690739631652832

Token 2159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0486326739192009
    2. '"' → logprob: -3.0486326217651367
    3. '   ' → logprob: -10.673632621765137
    4. '[
' → logprob: -12.173632621765137
    5. ' "' → logprob: -12.798632621765137
    6. '               ' → logprob: -12.923632621765137
    7. '           ' → logprob: -12.923632621765137
    8. '      ' → logprob: -13.298632621765137
    9. '[' → logprob: -13.423632621765137
    10. ''' → logprob: -13.673632621765137

Token 2160: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.001119499676860869
    2. '       ' → logprob: -7.001119613647461
    3. ' "' → logprob: -9.251119613647461
    4. '111' → logprob: -10.251119613647461
    5. ''' → logprob: -10.376119613647461
    6. '   ' → logprob: -10.876119613647461
    7. '"class' → logprob: -11.126119613647461
    8. '	' → logprob: -13.001119613647461
    9. ' ' → logprob: -13.001119613647461
    10. '[
' → logprob: -13.501119613647461

Token 2161: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.00026407750556245446
    2. '"' → logprob: -8.250264167785645
    3. ''' → logprob: -12.875264167785645
    4. '```' → logprob: -16.750263214111328
    5. '110' → logprob: -17.500263214111328
    6. ' ' → logprob: -17.500263214111328
    7. ''''' → logprob: -17.750263214111328
    8. '"""' → logprob: -17.875263214111328
    9. '
' → logprob: -17.875263214111328
    10. '001' → logprob: -18.000263214111328

Token 2162: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21749527752399445
    2. '"' → logprob: -1.842495322227478
    3. '"
' → logprob: -3.3424952030181885
    4. ''' → logprob: -6.717495441436768
    5. ']' → logprob: -9.09249496459961
    6. 'class' → logprob: -9.09249496459961
    7. ''
' → logprob: -9.46749496459961
    8. '```' → logprob: -9.59249496459961
    9. ']
' → logprob: -10.59249496459961
    10. '"]' → logprob: -10.96749496459961

Token 2163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005127601907588542
    2. ']' → logprob: -8.250513076782227
    3. '"' → logprob: -9.125513076782227
    4. ''' → logprob: -9.875513076782227
    5. ']
' → logprob: -10.000513076782227
    6. '"
' → logprob: -10.625513076782227
    7. ''
' → logprob: -12.000513076782227
    8. '
' → logprob: -12.375513076782227
    9. 'class' → logprob: -12.500513076782227
    10. '```' → logprob: -13.500513076782227

Token 2164: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006544370204210281
    2. ']' → logprob: -5.631544589996338
    3. ']
' (adapté à ' ]
') → logprob: -5.881544589996338
    4. 'class' → logprob: -9.38154411315918
    5. '"' → logprob: -10.25654411315918
    6. '
' → logprob: -11.25654411315918
    7. '"
' → logprob: -12.25654411315918
    8. ''' → logprob: -12.63154411315918
    9. '"class' → logprob: -13.38154411315918
    10. '  ' → logprob: -13.75654411315918

Token 2165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1284625381231308
    2. 'char' → logprob: -2.378462553024292
    3. 'class' → logprob: -3.628462553024292
    4. '
' → logprob: -7.253462314605713
    5. '```' → logprob: -8.253462791442871
    6. '[' → logprob: -9.503462791442871
    7. '`' → logprob: -10.128462791442871
    8. '{
' → logprob: -10.253462791442871
    9. ' char' → logprob: -10.378462791442871
    10. '  ' → logprob: -10.878462791442871

Token 2166: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.0016613778425380588
    2. 'class' → logprob: -6.50166130065918
    3. '   ' → logprob: -8.75166130065918
    4. ' char' → logprob: -14.75166130065918
    5. '
' → logprob: -15.00166130065918
    6. '```' → logprob: -16.75166130065918
    7. '.char' → logprob: -18.12666130065918
    8. '	char' → logprob: -18.25166130065918
    9. '_char' → logprob: -18.75166130065918
    10. '  ' → logprob: -18.87666130065918

Token 2167: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -4.739826181321405e-05
    2. '_rep' → logprob: -11.00004768371582
    3. 'char' → logprob: -11.12504768371582
    4. '_char' → logprob: -11.50004768371582
    5. 'repr' → logprob: -12.37504768371582
    6. '_' → logprob: -14.62504768371582
    7. ''_' → logprob: -14.87504768371582
    8. '<char' → logprob: -15.62504768371582
    9. '_re' → logprob: -16.00004768371582
    10. 'represent' → logprob: -16.75004768371582

Token 2168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143146812915802
    2. ' =' → logprob: -1.7014315128326416
    3. '='' → logprob: -11.076431274414062
    4. ' ='' → logprob: -13.326431274414062
    5. ':' → logprob: -14.326431274414062
    6. '   ' → logprob: -16.201431274414062
    7. '=
' → logprob: -16.326431274414062
    8. ' ' → logprob: -16.326431274414062
    9. ''' → logprob: -16.701431274414062
    10. ''=' → logprob: -16.701431274414062

Token 2169: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.6776029699249193e-05
    2. ' '' → logprob: -11.25002670288086
    3. '9' → logprob: -11.62502670288086
    4. '"' → logprob: -12.25002670288086
    5. '`' → logprob: -16.75002670288086
    6. '('' → logprob: -17.87502670288086
    7. '   ' → logprob: -19.25002670288086
    8. ' ' → logprob: -19.37502670288086
    9. '_' → logprob: -20.37502670288086
    10. '‘' → logprob: -20.37502670288086

Token 2170: '9' (ID: 24)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12692831456661224
    2. '9' → logprob: -2.1269283294677734
    3. '"' → logprob: -15.626928329467773
    4. ' '' → logprob: -16.501928329467773
    5. ''.' → logprob: -19.501928329467773
    6. '`' → logprob: -19.626928329467773
    7. ''
' → logprob: -19.751928329467773
    8. '’' → logprob: -19.751928329467773
    9. ''''' → logprob: -19.751928329467773
    10. '''' → logprob: -19.876928329467773

Token 2171: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20634692907333374
    2. '
' → logprob: -1.7063469886779785
    3. '@' → logprob: -5.4563469886779785
    4. 'class' → logprob: -8.58134651184082
    5. '    
' → logprob: -9.20634651184082
    6. ''
' → logprob: -9.58134651184082
    7. '@
' → logprob: -9.70634651184082
    8. ''' → logprob: -9.70634651184082
    9. '```' → logprob: -9.83134651184082
    10. '  ' → logprob: -10.33134651184082

Token 2172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01012399885803461
    2. '@' → logprob: -5.010124206542969
    3. '
' → logprob: -5.760124206542969
    4. '```' → logprob: -8.760124206542969
    5. 'class' → logprob: -9.385124206542969
    6. ' @' → logprob: -13.135124206542969
    7. '    
' → logprob: -13.135124206542969
    8. '  ' → logprob: -13.635124206542969
    9. '@
' → logprob: -14.010124206542969
    10. '`' → logprob: -14.135124206542969

Token 2173: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0008084330474957824
    2. '   ' → logprob: -7.250808238983154
    3. 'class' → logprob: -10.000808715820312
    4. '@class' → logprob: -10.500808715820312
    5. ' @' → logprob: -11.125808715820312
    6. '
' → logprob: -13.000808715820312
    7. '```' → logprob: -13.000808715820312
    8. '@click' → logprob: -13.500808715820312
    9. '@pytest' → logprob: -13.625808715820312
    10. '@@' → logprob: -14.000808715820312

Token 2174: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -1.981667537620524e-06
    2. '@' → logprob: -13.250001907348633
    3. 'class' → logprob: -16.000001907348633
    4. 'staticmethod' → logprob: -17.750001907348633
    5. '@class' → logprob: -18.250001907348633
    6. '@dat' → logprob: -21.875001907348633
    7. '@property' → logprob: -22.625001907348633
    8. 'property' → logprob: -22.625001907348633
    9. '<class' → logprob: -23.000001907348633
    10. 'aclass' → logprob: -23.750001907348633

Token 2175: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09556447714567184
    2. '   ' → logprob: -2.470564365386963
    3. ' def' → logprob: -5.095564365386963
    4. '
' → logprob: -7.720564365386963
    5. '(' → logprob: -11.095564842224121
    6. '	def' → logprob: -11.970564842224121
    7. ':' → logprob: -12.595564842224121
    8. '```' → logprob: -12.970564842224121
    9. '(def' → logprob: -13.470564842224121
    10. '@' → logprob: -13.595564842224121

Token 2176: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017704968340694904
    2. '   ' → logprob: -6.376770496368408
    3. ' def' → logprob: -9.876770973205566
    4. '
' → logprob: -11.626770973205566
    5. '	def' → logprob: -12.626770973205566
    6. '```' → logprob: -12.751770973205566
    7. ':def' → logprob: -14.001770973205566
    8. '@' → logprob: -15.126770973205566
    9. '(def' → logprob: -16.25177001953125
    10. 'class' → logprob: -16.25177001953125

Token 2177: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.1472419600977446e-06
    2. ' def' → logprob: -13.750000953674316
    3. '
' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '	def' → logprob: -20.625001907348633
    6. '```' → logprob: -20.625001907348633
    7. 'async' → logprob: -21.125001907348633
    8. '@' → logprob: -21.250001907348633
    9. 'class' → logprob: -22.000001907348633
    10. '    
' → logprob: -24.125001907348633

Token 2178: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.005261629819869995
    2. 'def' → logprob: -5.255261421203613
    3. ' try' → logprob: -10.505261421203613
    4. ' def' → logprob: -14.630261421203613
    5. '.try' → logprob: -18.00526237487793
    6. '@' → logprob: -18.75526237487793
    7. '_try' → logprob: -19.00526237487793
    8. '```' → logprob: -19.13026237487793
    9. 'Try' → logprob: -19.75526237487793
    10. '
' → logprob: -20.75526237487793

Token 2179: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.00014215784904081374
    2. 'match' → logprob: -8.875142097473145
    3. 'def' → logprob: -13.250142097473145
    4. 'Match' → logprob: -16.00014305114746
    5. 'class' → logprob: -16.50014305114746
    6. '```' → logprob: -16.75014305114746
    7. 'classmethod' → logprob: -17.50014305114746
    8. '_class' → logprob: -17.75014305114746
    9. '_matching' → logprob: -18.00014305114746
    10. '_MATCH' → logprob: -18.25014305114746

Token 2180: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -5.200166469876422e-06
    2. 'cls' → logprob: -12.250004768371582
    3. '(' → logprob: -15.750004768371582
    4. '(class' → logprob: -15.875004768371582
    5. '(
' → logprob: -16.5000057220459
    6. ' (' → logprob: -17.6250057220459
    7. '(clazz' → logprob: -17.7500057220459
    8. 'classmethod' → logprob: -17.7500057220459
    9. 'class' → logprob: -18.7500057220459
    10. '.cls' → logprob: -18.8750057220459

Token 2181: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.018171364441514015
    2. '(points' → logprob: -4.018171310424805
    3. '(' → logprob: -12.268171310424805
    4. '(parts' → logprob: -12.268171310424805
    5. '(chars' → logprob: -12.893171310424805
    6. '(tokens' → logprob: -13.143171310424805
    7. '(cl' → logprob: -13.393171310424805
    8. ',' → logprob: -13.518171310424805
    9. '(clazz' → logprob: -13.643171310424805
    10. '(classes' → logprob: -13.768171310424805

Token 2182: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.20265628397464752
    2. 'cls' → logprob: -1.7026562690734863
    3. ' points' → logprob: -6.702656269073486
    4. ' cls' → logprob: -11.202656745910645
    5. '(cls' → logprob: -14.952656745910645
    6. 'class' → logprob: -15.452656745910645
    7. '(points' → logprob: -15.452656745910645
    8. 'cl' → logprob: -16.702655792236328
    9. 'pts' → logprob: -16.827655792236328
    10. '   ' → logprob: -17.202655792236328

Token 2183: ':' (ID: 25)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.5195021629333496
    2. '(cls' → logprob: -1.2695021629333496
    3. '<|end|>' → logprob: -2.7695021629333496
    4. ':' → logprob: -3.8945021629333496
    5. '==' → logprob: -4.76950216293335
    6. ')' → logprob: -5.26950216293335
    7. '.setdefault' → logprob: -5.89450216293335
    8. 'points' → logprob: -6.14450216293335
    9. '       ' → logprob: -6.14450216293335
    10. '<|end|>' → logprob: -6.39450216293335

Token 2184: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.32328763604164124
    2. 'cls' → logprob: -1.3232876062393188
    3. 'set' → logprob: -5.073287487030029
    4. 'True' → logprob: -6.073287487030029
    5. '(cls' → logprob: -7.448287487030029
    6. ' cls' → logprob: -8.198287963867188
    7. ' Set' → logprob: -8.573287963867188
    8. '_set' → logprob: -8.823287963867188
    9. 'False' → logprob: -9.573287963867188
    10. 'Sets' → logprob: -10.448287963867188

Token 2185: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003008965402841568
    2. '(Point' → logprob: -6.628008842468262
    3. '(p' → logprob: -7.378008842468262
    4. '(points' → logprob: -7.753008842468262
    5. '(' → logprob: -8.253008842468262
    6. '(cls' → logprob: -8.753008842468262
    7. ')' → logprob: -10.003008842468262
    8. '<Point' → logprob: -10.253008842468262
    9. '[p' → logprob: -10.378008842468262
    10. '[
' → logprob: -10.503008842468262

Token 2186: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -15.5
    3. ' Point' → logprob: -16.125
    4. '.Point' → logprob: -17.75
    5. '(Point' → logprob: -18.375
    6. '	Point' → logprob: -18.5
    7. '<Point' → logprob: -18.75
    8. 'Points' → logprob: -19.625
    9. ')' → logprob: -20.625
    10. '_point' → logprob: -20.625

Token 2187: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.710618905955926e-05
    2. '):' → logprob: -9.375097274780273
    3. '):
' → logprob: -11.500097274780273
    4. '   ' → logprob: -13.750097274780273
    5. ' )' → logprob: -14.375097274780273
    6. '       ' → logprob: -15.250097274780273
    7. ')
' → logprob: -16.625097274780273
    8. '):

' → logprob: -17.625097274780273
    9. ':' → logprob: -17.875097274780273
    10. ')set' → logprob: -18.375097274780273

Token 2188: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010576109401881695
    2. ':
' → logprob: -5.010576248168945
    3. '->' → logprob: -6.260576248168945
    4. ':return' → logprob: -7.135576248168945
    5. '   ' → logprob: -7.760576248168945
    6. '       ' → logprob: -8.010576248168945
    7. ' ->' → logprob: -8.010576248168945
    8. ')' → logprob: -11.010576248168945
    9. ' :' → logprob: -11.635576248168945
    10. '  ' → logprob: -11.760576248168945

Token 2189: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0001593195047462359
    2. ' bool' → logprob: -8.75015926361084
    3. 'return' → logprob: -15.12515926361084
    4. 'def' → logprob: -15.62515926361084
    5. '<bool' → logprob: -16.375160217285156
    6. 'True' → logprob: -16.625160217285156
    7. '	bool' → logprob: -16.875160217285156
    8. '(bool' → logprob: -17.875160217285156
    9. '
' → logprob: -18.500160217285156
    10. '   ' → logprob: -18.500160217285156

Token 2190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05569792166352272
    2. '(cls' → logprob: -3.0556979179382324
    3. ':
' → logprob: -5.180697917938232
    4. '   ' → logprob: -7.305697917938232
    5. ':return' → logprob: -7.680697917938232
    6. '       ' → logprob: -8.43069839477539
    7. '(' → logprob: -10.68069839477539
    8. '(
' → logprob: -10.93069839477539
    9. 'def' → logprob: -11.55569839477539
    10. ')' → logprob: -11.68069839477539

Token 2191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: 0.0
    2. '           ' → logprob: -16.875
    3. '      ' → logprob: -17.75
    4. 'if' → logprob: -18.375
    5. '   ' → logprob: -18.375
    6. 'return' → logprob: -18.625
    7. '     ' → logprob: -18.875
    8. '        ' → logprob: -19.25
    9. '               ' → logprob: -19.25
    10. '```' → logprob: -19.5

Token 2192: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1824740320444107
    2. 'if' (adapté à ' if') → logprob: -2.182474136352539
    3. 'not' → logprob: -2.932474136352539
    4. ' not' → logprob: -8.682474136352539
    5. 'def' → logprob: -8.807474136352539
    6. 'return' → logprob: -8.932474136352539
    7. '
' → logprob: -8.932474136352539
    8. ' if' → logprob: -9.557474136352539
    9. 'False' → logprob: -9.807474136352539
    10. '           ' → logprob: -10.932474136352539

Token 2193: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10020699352025986
    2. ' not' → logprob: -2.3502070903778076
    3. 'points' → logprob: -15.475207328796387
    4. '(not' → logprob: -15.975207328796387
    5. '
' → logprob: -17.10020637512207
    6. 'cls' → logprob: -18.10020637512207
    7. '	not' → logprob: -18.22520637512207
    8. 'n' → logprob: -18.22520637512207
    9. '       ' → logprob: -18.60020637512207
    10. '   ' → logprob: -19.10020637512207

Token 2194: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.038043782114982605
    2. ' points' → logprob: -3.288043737411499
    3. '(points' → logprob: -13.288043975830078
    4. 'False' → logprob: -15.538043975830078
    5. '	points' → logprob: -15.538043975830078
    6. 'point' → logprob: -16.413043975830078
    7. 'bool' → logprob: -16.413043975830078
    8. 'None' → logprob: -17.788043975830078
    9. '.points' → logprob: -17.788043975830078
    10. '
' → logprob: -18.163043975830078

Token 2195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1607208251953125
    2. ':
' → logprob: -2.1607208251953125
    3. '           ' → logprob: -3.4107208251953125
    4. '       ' → logprob: -9.160720825195312
    5. '{
' → logprob: -10.910720825195312
    6. '=' → logprob: -11.285720825195312
    7. ':return' → logprob: -11.535720825195312
    8. '   ' → logprob: -11.660720825195312
    9. '          ' → logprob: -11.660720825195312
    10. '==' → logprob: -11.785720825195312

Token 2196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3140013515949249
    2. 'False' → logprob: -1.3140013217926025
    3. ' False' → logprob: -7.314001560211182
    4. 'True' → logprob: -10.064001083374023
    5. '0' → logprob: -11.689001083374023
    6. 'None' → logprob: -12.314001083374023
    7. 'return' → logprob: -12.439001083374023
    8. '               ' → logprob: -12.689001083374023
    9. '       ' → logprob: -12.939001083374023
    10. '(False' → logprob: -13.064001083374023

Token 2197: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.032153770327568054
    2. 'False' → logprob: -4.032153606414795
    3. ' return' → logprob: -4.282153606414795
    4. '       ' → logprob: -9.657154083251953
    5. ' False' → logprob: -10.657154083251953
    6. '           ' → logprob: -12.782154083251953
    7. 'Return' → logprob: -13.032154083251953
    8. 'True' → logprob: -14.657154083251953
    9. '   ' → logprob: -16.032154083251953
    10. '	return' → logprob: -17.157154083251953

Token 2198: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005530327325686812
    2. ' False' → logprob: -7.500553131103516
    3. 'True' → logprob: -17.250553131103516
    4. '(False' → logprob: -19.375553131103516
    5. '=False' → logprob: -20.625553131103516
    6. 'F' → logprob: -21.250553131103516
    7. '_false' → logprob: -21.750553131103516
    8. 'false' → logprob: -23.750553131103516
    9. 'return' → logprob: -24.125553131103516
    10. '.False' → logprob: -24.250553131103516

Token 2199: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011725161311915144
    2. '           ' → logprob: -9.375117301940918
    3. '
' → logprob: -10.750117301940918
    4. ':
' → logprob: -12.125117301940918
    5. '               ' → logprob: -13.250117301940918
    6. '   ' → logprob: -14.375117301940918
    7. '        
' → logprob: -14.625117301940918
    8. 'return' → logprob: -14.750117301940918
    9. ':' → logprob: -14.875117301940918
    10. ',' → logprob: -15.125117301940918

Token 2200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.981667537620524e-06
    2. '
' → logprob: -13.500001907348633
    3. '           ' → logprob: -16.000001907348633
    4. 'return' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.250001907348633
    6. 'min' → logprob: -16.375001907348633
    7. 'class' → logprob: -17.000001907348633
    8. '	' → logprob: -17.250001907348633
    9. '               ' → logprob: -17.375001907348633
    10. '```' → logprob: -17.500001907348633

Token 2201: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.16595591604709625
    2. '       ' → logprob: -1.915955901145935
    3. ' min' → logprob: -5.165956020355225
    4. '
' → logprob: -12.540955543518066
    5. '	min' → logprob: -13.290955543518066
    6. '(min' → logprob: -13.540955543518066
    7. '   ' → logprob: -14.790955543518066
    8. '           ' → logprob: -15.540955543518066
    9. 'max' → logprob: -15.915955543518066
    10. '[min' → logprob: -15.915955543518066

Token 2202: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.252369225025177
    2. '_x' → logprob: -1.5023691654205322
    3. '_
' → logprob: -9.252368927001953
    4. 'x' → logprob: -9.502368927001953
    5. '.' → logprob: -9.627368927001953
    6. '_p' → logprob: -9.752368927001953
    7. ' _' → logprob: -9.877368927001953
    8. '._' → logprob: -10.502368927001953
    9. '<|end|>' → logprob: -10.877368927001953
    10. '```' → logprob: -12.002368927001953

Token 2203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326815485954285
    2. '=' → logprob: -1.3132681846618652
    3. '=
' → logprob: -12.313267707824707
    4. ' =
' → logprob: -14.188267707824707
    5. '=p' → logprob: -14.438267707824707
    6. '<|end|>' → logprob: -15.813267707824707
    7. '=min' → logprob: -15.938267707824707
    8. '=

' → logprob: -16.438268661499023
    9. ',' → logprob: -16.688268661499023
    10. ' ' → logprob: -16.688268661499023

Token 2204: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.005234475247561932
    2. ' min' → logprob: -5.255234241485596
    3. 'max' → logprob: -14.755234718322754
    4. '(min' → logprob: -15.005234718322754
    5. '[min' → logprob: -17.130233764648438
    6. '=min' → logprob: -17.880233764648438
    7. 'minimum' → logprob: -18.005233764648438
    8. 'mini' → logprob: -18.005233764648438
    9. '	min' → logprob: -18.005233764648438
    10. 'm' → logprob: -20.005233764648438

Token 2205: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.2378600735682994e-05
    2. 'p' → logprob: -11.000032424926758
    3. '(' → logprob: -11.250032424926758
    4. ' (' → logprob: -13.125032424926758
    5. '(
' → logprob: -14.875032424926758
    6. ' p' → logprob: -15.500032424926758
    7. 'for' → logprob: -17.375032424926758
    8. '   ' → logprob: -17.500032424926758
    9. '(points' → logprob: -17.875032424926758
    10. '       ' → logprob: -18.625032424926758

Token 2206: '.x' (ID: 3700)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5367860794067383
    2. 'for' → logprob: -0.9117860794067383
    3. '.p' → logprob: -5.411786079406738
    4. '(p' → logprob: -5.536786079406738
    5. '.x' → logprob: -5.661786079406738
    6. '.for' → logprob: -7.286786079406738
    7. '(for' → logprob: -7.786786079406738
    8. '.' → logprob: -8.661786079406738
    9. '(x' → logprob: -8.911786079406738
    10. ' .' → logprob: -9.786786079406738

Token 2207: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11286383122205734
    2. 'for' → logprob: -2.237863779067993
    3. '.for' → logprob: -10.737863540649414
    4. '.' → logprob: -11.487863540649414
    5. '	for' → logprob: -12.862863540649414
    6. ')' → logprob: -13.237863540649414
    7. ',' → logprob: -13.612863540649414
    8. '[' → logprob: -13.737863540649414
    9. 'For' → logprob: -14.612863540649414
    10. ' in' → logprob: -15.362863540649414

Token 2208: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007104054093360901
    2. ' p' → logprob: -7.250710487365723
    3. '(p' → logprob: -14.625710487365723
    4. 'points' → logprob: -18.625709533691406
    5. '	p' → logprob: -18.625709533691406
    6. 'point' → logprob: -18.875709533691406
    7. '   ' → logprob: -18.875709533691406
    8. '
' → logprob: -19.250709533691406
    9. '<p' → logprob: -19.250709533691406
    10. '[p' → logprob: -19.250709533691406

Token 2209: ' in' (ID: 306)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7891268134117126
    2. 'p' → logprob: -1.1641268730163574
    3. ' in' → logprob: -1.5391268730163574
    4. 'in' → logprob: -4.664126873016357
    5. 'points' → logprob: -5.164126873016357
    6. ' points' → logprob: -6.414126873016357
    7. 'for' → logprob: -7.039126873016357
    8. ' for' → logprob: -7.164126873016357
    9. 'point' → logprob: -8.6641263961792
    10. '.p' → logprob: -9.4141263961792

Token 2210: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.02330930158495903
    2. 'p' → logprob: -3.7733092308044434
    3. '(points' → logprob: -10.148309707641602
    4. ' points' → logprob: -11.023309707641602
    5. '(p' → logprob: -11.898309707641602
    6. 'point' → logprob: -14.398309707641602
    7. ' p' → logprob: -14.648309707641602
    8. '[p' → logprob: -15.273309707641602
    9. '	points' → logprob: -15.898309707641602
    10. '.points' → logprob: -16.7733097076416

Token 2211: ')
' (ID: 446)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3819181025028229
    2. 'for' → logprob: -1.6319180727005005
    3. '       ' → logprob: -2.50691819190979
    4. ')' → logprob: -3.75691819190979
    5. ',' → logprob: -4.381917953491211
    6. '),' → logprob: -5.881917953491211
    7. ')
' → logprob: -7.506917953491211
    8. '
' → logprob: -8.256917953491211
    9. '           ' → logprob: -8.881917953491211
    10. ',
' → logprob: -8.881917953491211

Token 2212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.143808109802194e-05
    2. 'min' → logprob: -10.250041007995605
    3. ' min' → logprob: -12.500041007995605
    4. '               ' → logprob: -13.750041007995605
    5. '           ' → logprob: -13.875041007995605
    6. '      ' → logprob: -16.500041961669922
    7. '        ' → logprob: -16.500041961669922
    8. '(min' → logprob: -17.125041961669922
    9. '   ' → logprob: -17.375041961669922
    10. ',' → logprob: -17.375041961669922

Token 2213: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6931627988815308
    2. 'min' (adapté à ' min') → logprob: -0.6931627988815308
    3. '       ' → logprob: -11.19316291809082
    4. '	min' → logprob: -14.31816291809082
    5. '(min' → logprob: -15.19316291809082
    6. ',min' → logprob: -15.44316291809082
    7. 'max' → logprob: -15.56816291809082
    8. '.min' → logprob: -15.69316291809082
    9. '_min' → logprob: -15.69316291809082
    10. '[min' → logprob: -16.19316291809082

Token 2214: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00013643606507685035
    2. 'y' → logprob: -9.625136375427246
    3. '_x' → logprob: -9.625136375427246
    4. '(p' → logprob: -13.000136375427246
    5. 'Y' → logprob: -14.625136375427246
    6. 'import' → logprob: -15.000136375427246
    7. '```' → logprob: -15.000136375427246
    8. '.y' → logprob: -15.625136375427246
    9. 'p' → logprob: -16.000137329101562
    10. '   ' → logprob: -16.375137329101562

Token 2215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141538977622986
    2. '=' → logprob: -1.7014154195785522
    3. '=
' → logprob: -14.701415061950684
    4. ' in' → logprob: -14.701415061950684
    5. ' for' → logprob: -14.951415061950684
    6. ' =
' → logprob: -15.451415061950684
    7. '<|end|>' → logprob: -15.451415061950684
    8. 'for' → logprob: -16.201416015625
    9. ',' → logprob: -16.326416015625
    10. ' ' → logprob: -16.576416015625

Token 2216: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01815146580338478
    2. ' min' → logprob: -4.01815128326416
    3. '(min' → logprob: -13.64315128326416
    4. '[min' → logprob: -15.39315128326416
    5. '	min' → logprob: -17.143152236938477
    6. '.min' → logprob: -17.893152236938477
    7. 'max' → logprob: -18.268152236938477
    8. 'p' → logprob: -18.268152236938477
    9. '=min' → logprob: -18.393152236938477
    10. '_min' → logprob: -18.518152236938477

Token 2217: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.000628683075774461
    2. 'p' → logprob: -7.375628471374512
    3. ' p' → logprob: -14.500628471374512
    4. '(' → logprob: -15.125628471374512
    5. '(points' → logprob: -15.125628471374512
    6. '[p' → logprob: -15.500628471374512
    7. 'points' → logprob: -16.125629425048828
    8. '(
' → logprob: -16.125629425048828
    9. '```' → logprob: -16.125629425048828
    10. '   ' → logprob: -16.250629425048828

Token 2218: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.004971289541572332
    2. '.x' → logprob: -5.629971504211426
    3. '.p' → logprob: -7.379971504211426
    4. 'x' → logprob: -7.629971504211426
    5. '.y' → logprob: -8.629971504211426
    6. 'for' → logprob: -11.004971504211426
    7. 'p' → logprob: -11.254971504211426
    8. '```' → logprob: -11.254971504211426
    9. 'y' → logprob: -11.379971504211426
    10. '[p' → logprob: -11.629971504211426

Token 2219: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47408542037010193
    2. 'for' → logprob: -0.9740854501724243
    3. '(p' → logprob: -13.099085807800293
    4. '(for' → logprob: -13.349085807800293
    5. ')' → logprob: -13.599085807800293
    6. ' in' → logprob: -14.474085807800293
    7. ',' → logprob: -14.849085807800293
    8. '_for' → logprob: -14.974085807800293
    9. '<|end|>' → logprob: -15.099085807800293
    10. '=' → logprob: -15.224085807800293

Token 2220: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001998227322474122
    2. '(p' → logprob: -6.251998424530029
    3. ' p' → logprob: -9.626997947692871
    4. 'points' → logprob: -12.626997947692871
    5. '[p' → logprob: -16.001998901367188
    6. '<p' → logprob: -16.876998901367188
    7. 'point' → logprob: -16.876998901367188
    8. '
' → logprob: -17.001998901367188
    9. '_p' → logprob: -17.876998901367188
    10. '(' → logprob: -18.001998901367188

Token 2221: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.10591766983270645
    2. '.points' → logprob: -2.7309176921844482
    3. '(points' → logprob: -4.230917453765869
    4. 'p' → logprob: -4.730917453765869
    5. ' points' → logprob: -5.230917453765869
    6. '(p' → logprob: -5.605917453765869
    7. 'in' → logprob: -6.855917453765869
    8. ' p' → logprob: -7.730917453765869
    9. ' in' → logprob: -7.855917453765869
    10. 'y' → logprob: -8.105917930603027

Token 2222: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.012316086329519749
    2. 'p' → logprob: -4.5123162269592285
    3. ' points' → logprob: -6.7623162269592285
    4. '(points' → logprob: -9.63731575012207
    5. ' p' → logprob: -10.63731575012207
    6. '(p' → logprob: -10.88731575012207
    7. '[p' → logprob: -13.13731575012207
    8. '
' → logprob: -15.38731575012207
    9. 'point' → logprob: -15.51231575012207
    10. '.points' → logprob: -15.76231575012207

Token 2223: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0451076403260231
    2. ')
' → logprob: -3.17010760307312
    3. ')' → logprob: -7.170107841491699
    4. 'for' → logprob: -7.295107841491699
    5. ' for' → logprob: -8.5451078414917
    6. ',' → logprob: -8.5451078414917
    7. '
' → logprob: -8.7951078414917
    8. '),' → logprob: -10.5451078414917
    9. '               ' → logprob: -10.9201078414917
    10. '```' → logprob: -10.9201078414917

Token 2224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.572941179503687e-05
    2. 'max' → logprob: -10.125045776367188
    3. 'min' → logprob: -13.250045776367188
    4. '
' → logprob: -13.500045776367188
    5. '               ' → logprob: -14.250045776367188
    6. ' max' → logprob: -14.250045776367188
    7. '```' → logprob: -14.375045776367188
    8. '           ' → logprob: -15.625045776367188
    9. '(max' → logprob: -16.375045776367188
    10. ' min' → logprob: -16.500045776367188

Token 2225: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0041742026805877686
    2. ' max' → logprob: -5.50417423248291
    3. '       ' → logprob: -9.25417423248291
    4. 'min' → logprob: -16.879173278808594
    5. '	max' → logprob: -17.004173278808594
    6. '(max' → logprob: -17.504173278808594
    7. '_max' → logprob: -18.379173278808594
    8. 'maximum' → logprob: -19.379173278808594
    9. 'maxlength' → logprob: -19.504173278808594
    10. '.max' → logprob: -19.504173278808594

Token 2226: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.026738997548818588
    2. '(p' → logprob: -3.6517388820648193
    3. '_p' → logprob: -7.901739120483398
    4. '_' → logprob: -9.901739120483398
    5. '(_' → logprob: -12.401739120483398
    6. '(' → logprob: -12.526739120483398
    7. '(x' → logprob: -13.151739120483398
    8. '```' → logprob: -13.151739120483398
    9. '_(' → logprob: -13.401739120483398
    10. 'x' → logprob: -13.901739120483398

Token 2227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020543403923511505
    2. '=' → logprob: -3.895543336868286
    3. ' =
' → logprob: -14.270543098449707
    4. '=p' → logprob: -15.520543098449707
    5. '<|end|>' → logprob: -15.520543098449707
    6. '=
' → logprob: -15.895543098449707
    7. ',' → logprob: -15.895543098449707
    8. ')' → logprob: -16.645544052124023
    9. '   ' → logprob: -16.770544052124023
    10. ' ' → logprob: -16.895544052124023

Token 2228: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005234002135694027
    2. ' max' → logprob: -5.2552337646484375
    3. '(max' → logprob: -15.880233764648438
    4. 'min' → logprob: -17.130233764648438
    5. '=max' → logprob: -18.630233764648438
    6. '[max' → logprob: -18.880233764648438
    7. '	max' → logprob: -18.880233764648438
    8. '_max' → logprob: -20.255233764648438
    9. 'hash' → logprob: -20.505233764648438
    10. ',max' → logprob: -20.755233764648438

Token 2229: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.7432603272027336e-06
    2. 'p' → logprob: -14.125001907348633
    3. '(' → logprob: -14.875001907348633
    4. '(
' → logprob: -15.500001907348633
    5. '```' → logprob: -15.750001907348633
    6. ' (' → logprob: -16.500001907348633
    7. '[p' → logprob: -17.125001907348633
    8. '(points' → logprob: -17.625001907348633
    9. '<|end|>' → logprob: -17.750001907348633
    10. '.p' → logprob: -17.875001907348633

Token 2230: '.x' (ID: 3700)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03791581466794014
    2. 'x' → logprob: -3.4129157066345215
    3. '_x' → logprob: -6.2879157066345215
    4. 'p' → logprob: -6.6629157066345215
    5. '.x' → logprob: -7.1629157066345215
    6. '.p' → logprob: -8.28791618347168
    7. '[p' → logprob: -9.91291618347168
    8. '(x' → logprob: -11.28791618347168
    9. 'X' → logprob: -11.78791618347168
    10. '<p' → logprob: -12.28791618347168

Token 2231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04861995577812195
    2. ' for' → logprob: -3.0486199855804443
    3. ')' → logprob: -11.173620223999023
    4. '(p' → logprob: -11.423620223999023
    5. '(for' → logprob: -12.173620223999023
    6. '	for' → logprob: -14.048620223999023
    7. '.for' → logprob: -14.798620223999023
    8. '<|end|>' → logprob: -14.798620223999023
    9. '```' → logprob: -15.298620223999023
    10. '_for' → logprob: -15.798620223999023

Token 2232: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.008573558181524277
    2. 'p' → logprob: -5.133573532104492
    3. ' points' → logprob: -6.008573532104492
    4. '(points' → logprob: -8.633573532104492
    5. ' p' → logprob: -13.383573532104492
    6. '	points' → logprob: -13.633573532104492
    7. '.points' → logprob: -13.883573532104492
    8. '(p' → logprob: -14.133573532104492
    9. '
' → logprob: -14.758573532104492
    10. '[p' → logprob: -15.008573532104492

Token 2233: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6412254571914673
    2. 'for' → logprob: -1.0162254571914673
    3. ' for' → logprob: -3.0162253379821777
    4. '(points' → logprob: -3.2662253379821777
    5. ' points' → logprob: -4.141225337982178
    6. ' in' → logprob: -5.641225337982178
    7. 'p' → logprob: -6.016225337982178
    8. 'in' → logprob: -6.891225337982178
    9. ' p' → logprob: -7.766225337982178
    10. '.points' → logprob: -7.891225337982178

Token 2234: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -9.949026571121067e-05
    2. ' points' → logprob: -9.250099182128906
    3. '(points' → logprob: -12.750099182128906
    4. '.points' → logprob: -15.250099182128906
    5. '	points' → logprob: -16.250099182128906
    6. '
' → logprob: -17.250099182128906
    7. 'Points' → logprob: -19.000099182128906
    8. 'pts' → logprob: -19.000099182128906
    9. 'oints' → logprob: -19.250099182128906
    10. 'point' → logprob: -19.250099182128906

Token 2235: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9563028216362
    2. ')' → logprob: -1.2063028812408447
    3. ' for' → logprob: -1.9563028812408447
    4. ',' → logprob: -2.4563028812408447
    5. 'for' → logprob: -2.5813028812408447
    6. '),' → logprob: -4.581302642822266
    7. ')
' → logprob: -5.956302642822266
    8. '[' → logprob: -9.206302642822266
    9. ' ,' → logprob: -9.456302642822266
    10. ')+' → logprob: -9.581302642822266

Token 2236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14684447646141052
    2. ',' → logprob: -2.2718443870544434
    3. 'max' → logprob: -3.7718443870544434
    4. ',max' → logprob: -5.271844387054443
    5. ' max' → logprob: -5.396844387054443
    6. '(max' → logprob: -7.396844387054443
    7. ' ,' → logprob: -10.021844863891602
    8. '",' → logprob: -10.896844863891602
    9. '[max' → logprob: -11.146844863891602
    10. '`,' → logprob: -11.646844863891602

Token 2237: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.061975862830877304
    2. ' max' → logprob: -2.8119759559631348
    3. '       ' → logprob: -11.811975479125977
    4. '(max' → logprob: -14.811975479125977
    5. '_max' → logprob: -15.936975479125977
    6. '	max' → logprob: -16.311975479125977
    7. 'Max' → logprob: -16.436975479125977
    8. '0' → logprob: -17.686975479125977
    9. ',max' → logprob: -17.686975479125977
    10. '.max' → logprob: -17.686975479125977

Token 2238: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00219866749830544
    2. '(p' → logprob: -6.127198696136475
    3. '_y' → logprob: -11.752198219299316
    4. '[p' → logprob: -12.877198219299316
    5. '```' → logprob: -14.252198219299316
    6. '(' → logprob: -14.502198219299316
    7. 'x' → logprob: -14.877198219299316
    8. '(_' → logprob: -15.252198219299316
    9. '<p' → logprob: -15.627198219299316
    10. '   ' → logprob: -15.627198219299316

Token 2239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759410262107849
    2. ' =' → logprob: -0.8259410262107849
    3. '=max' → logprob: -14.57594108581543
    4. ')' → logprob: -15.32594108581543
    5. '       ' → logprob: -15.82594108581543
    6. 'max' → logprob: -15.82594108581543
    7. '=
' → logprob: -16.07594108581543
    8. '=p' → logprob: -16.32594108581543
    9. '```' → logprob: -16.32594108581543
    10. ':' → logprob: -16.57594108581543

Token 2240: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.048589982092380524
    2. ' max' → logprob: -3.0485899448394775
    3. '(max' → logprob: -13.298589706420898
    4. 'min' → logprob: -13.923589706420898
    5. '	max' → logprob: -17.0485897064209
    6. '=max' → logprob: -17.2985897064209
    7. ' min' → logprob: -17.6735897064209
    8. '[max' → logprob: -17.7985897064209
    9. '_max' → logprob: -19.2985897064209
    10. '.max' → logprob: -19.4235897064209

Token 2241: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.372294698550832e-06
    2. 'p' → logprob: -11.875009536743164
    3. '[p' → logprob: -14.750009536743164
    4. '(
' → logprob: -14.875009536743164
    5. 'class' → logprob: -15.000009536743164
    6. '(' → logprob: -15.125009536743164
    7. '```' → logprob: -16.000009536743164
    8. '(points' → logprob: -16.125009536743164
    9. ' p' → logprob: -16.500009536743164
    10. 'import' → logprob: -16.625009536743164

Token 2242: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0033320679794996977
    2. '(p' → logprob: -6.003332138061523
    3. '.x' → logprob: -7.878332138061523
    4. '_y' → logprob: -8.003332138061523
    5. '.p' → logprob: -9.253332138061523
    6. 'y' → logprob: -10.628332138061523
    7. '(' → logprob: -12.378332138061523
    8. '(y' → logprob: -12.503332138061523
    9. 'max' → logprob: -12.628332138061523
    10. '[' → logprob: -13.128332138061523

Token 2243: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.095177061855793
    2. ' for' → logprob: -2.470177173614502
    3. '(p' → logprob: -5.095177173614502
    4. ')' → logprob: -9.595176696777344
    5. '[p' → logprob: -12.595176696777344
    6. '=' → logprob: -12.595176696777344
    7. '(for' → logprob: -12.845176696777344
    8. 'in' → logprob: -12.970176696777344
    9. ' in' → logprob: -13.220176696777344
    10. '```' → logprob: -13.470176696777344

Token 2244: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007287554908543825
    2. ' p' → logprob: -7.250728607177734
    3. 'points' → logprob: -11.625728607177734
    4. '(p' → logprob: -11.750728607177734
    5. 'point' → logprob: -14.875728607177734
    6. 'Point' → logprob: -14.875728607177734
    7. '
' → logprob: -14.875728607177734
    8. ' points' → logprob: -15.250728607177734
    9. '   ' → logprob: -15.625728607177734
    10. '1' → logprob: -15.875728607177734

Token 2245: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048934902995824814
    2. ' for' → logprob: -3.0489349365234375
    3. '(p' → logprob: -9.048934936523438
    4. 'points' → logprob: -9.673934936523438
    5. '(points' → logprob: -9.673934936523438
    6. '.points' → logprob: -10.173934936523438
    7. 'in' → logprob: -11.048934936523438
    8. '.p' → logprob: -11.298934936523438
    9. ' in' → logprob: -11.798934936523438
    10. 'p' → logprob: -11.798934936523438

Token 2246: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00018816311785485595
    2. ' points' → logprob: -8.625187873840332
    3. '(points' → logprob: -11.750187873840332
    4. 'p' → logprob: -15.125187873840332
    5. '	points' → logprob: -15.500187873840332
    6. '.points' → logprob: -16.87518882751465
    7. '
' → logprob: -17.12518882751465
    8. 'Points' → logprob: -17.25018882751465
    9. 'pts' → logprob: -17.75018882751465
    10. 'parts' → logprob: -18.62518882751465

Token 2247: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055934954434633255
    2. ')' → logprob: -5.255593299865723
    3. '):' → logprob: -9.130593299865723
    4. '):
' → logprob: -9.505593299865723
    5. ':' → logprob: -10.130593299865723
    6. ')
' → logprob: -10.255593299865723
    7. ':
' → logprob: -10.505593299865723
    8. ',' → logprob: -10.630593299865723
    9. ')return' → logprob: -11.630593299865723
    10. '   ' → logprob: -11.880593299865723

Token 2248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8670179997570813e-05
    2. '	' → logprob: -11.750019073486328
    3. '   ' → logprob: -12.125019073486328
    4. 'return' → logprob: -13.250019073486328
    5. '           ' → logprob: -14.125019073486328
    6. '	return' → logprob: -14.375019073486328
    7. ' return' → logprob: -14.625019073486328
    8. '	   ' → logprob: -15.125019073486328
    9. '     ' → logprob: -15.125019073486328
    10. '               ' → logprob: -15.250019073486328

Token 2249: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005357194691896439
    2. '       ' → logprob: -5.255357265472412
    3. ' return' → logprob: -9.005356788635254
    4. '
' → logprob: -15.005356788635254
    5. '   ' → logprob: -15.880356788635254
    6. '	return' → logprob: -16.38035774230957
    7. '```' → logprob: -16.88035774230957
    8. ':return' → logprob: -17.00535774230957
    9. '{return' → logprob: -17.75535774230957
    10. 'eturn' → logprob: -17.88035774230957

Token 2250: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.00033593899570405483
    2. ' cls' → logprob: -8.000335693359375
    3. '(cls' → logprob: -14.625335693359375
    4. 'False' → logprob: -17.125335693359375
    5. 'True' → logprob: -17.750335693359375
    6. 'class' → logprob: -18.250335693359375
    7. 'classmethod' → logprob: -18.375335693359375
    8. '.cls' → logprob: -18.625335693359375
    9. '_cls' → logprob: -18.625335693359375
    10. 'super' → logprob: -19.000335693359375

Token 2251: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.0012088033836334944
    2. '.pattern' → logprob: -6.751208782196045
    3. 'match' → logprob: -11.251209259033203
    4. '_match' → logprob: -11.751209259033203
    5. 'pattern' → logprob: -12.126209259033203
    6. '.' → logprob: -12.251209259033203
    7. '.matches' → logprob: -13.376209259033203
    8. '.MATCH' → logprob: -13.501209259033203
    9. '.try' → logprob: -13.626209259033203
    10. '.predict' → logprob: -14.376209259033203

Token 2252: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00010127831774298102
    2. 'pattern' → logprob: -9.375101089477539
    3. '_class' → logprob: -11.750101089477539
    4. '_points' → logprob: -12.500101089477539
    5. '_patterns' → logprob: -13.875101089477539
    6. '_point' → logprob: -14.250101089477539
    7. '_' → logprob: -14.500101089477539
    8. '_token' → logprob: -15.000101089477539
    9. 'Pattern' → logprob: -15.375101089477539
    10. '_method' → logprob: -15.375101089477539

Token 2253: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -2.339278580620885e-06
    2. 'points' → logprob: -13.000001907348633
    3. '(point' → logprob: -18.750001907348633
    4. '(' → logprob: -19.000001907348633
    5. '	points' → logprob: -19.125001907348633
    6. '(parts' → logprob: -19.250001907348633
    7. '(
' → logprob: -19.500001907348633
    8. ' points' → logprob: -19.750001907348633
    9. '.points' → logprob: -21.000001907348633
    10. '(cls' → logprob: -21.375001907348633

Token 2254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031830633524805307
    2. '(points' → logprob: -5.753182888031006
    3. 'points' → logprob: -13.503183364868164
    4. ',p' → logprob: -13.878183364868164
    5. '       ' → logprob: -13.878183364868164
    6. ' ,' → logprob: -14.503183364868164
    7. '   ' → logprob: -15.003183364868164
    8. ',
' → logprob: -15.378183364868164
    9. '           ' → logprob: -15.378183364868164
    10. '(p' → logprob: -15.503183364868164

Token 2255: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.491498531133402e-06
    2. ' min' → logprob: -11.625009536743164
    3. 'points' → logprob: -14.750009536743164
    4. 'max' → logprob: -17.000009536743164
    5. '(min' → logprob: -19.500009536743164
    6. '	min' → logprob: -20.125009536743164
    7. '   ' → logprob: -20.625009536743164
    8. '[min' → logprob: -20.750009536743164
    9. '_min' → logprob: -21.125009536743164
    10. ' points' → logprob: -21.625009536743164

Token 2256: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.941850526549388e-06
    2. 'x' → logprob: -12.250007629394531
    3. 'X' → logprob: -13.750007629394531
    4. '(p' → logprob: -13.875007629394531
    5. 'cls' → logprob: -15.250007629394531
    6. 'max' → logprob: -15.625007629394531
    7. '   ' → logprob: -16.12500762939453
    8. '_y' → logprob: -16.12500762939453
    9. '```' → logprob: -16.37500762939453
    10. 'class' → logprob: -16.87500762939453

Token 2257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002933942887466401
    2. ' ,' → logprob: -8.375293731689453
    3. ',p' → logprob: -10.250293731689453
    4. ',min' → logprob: -11.625293731689453
    5. '   ' → logprob: -12.250293731689453
    6. 'import' → logprob: -13.375293731689453
    7. '```' → logprob: -13.500293731689453
    8. '`,' → logprob: -13.625293731689453
    9. ',
' → logprob: -13.625293731689453
    10. '[' → logprob: -14.250293731689453

Token 2258: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0024756586644798517
    2. ' min' → logprob: -6.002475738525391
    3. '_min' → logprob: -16.87747573852539
    4. '[min' → logprob: -17.75247573852539
    5. '	min' → logprob: -18.75247573852539
    6. 'max' → logprob: -18.87747573852539
    7. '(min' → logprob: -18.87747573852539
    8. '.min' → logprob: -20.25247573852539
    9. ',min' → logprob: -20.87747573852539
    10. '=min' → logprob: -21.00247573852539

Token 2259: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0007108822464942932
    2. 'y' → logprob: -7.375710964202881
    3. 'min' → logprob: -9.875710487365723
    4. '_x' → logprob: -10.750710487365723
    5. '_min' → logprob: -12.625710487365723
    6. 'Y' → logprob: -12.875710487365723
    7. '   ' → logprob: -13.250710487365723
    8. ',' → logprob: -13.500710487365723
    9. 'x' → logprob: -14.125710487365723
    10. 'max' → logprob: -15.250710487365723

Token 2260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018458699923940003
    2. ',p' → logprob: -9.250185012817383
    3. ' ,' → logprob: -10.500185012817383
    4. '(points' → logprob: -11.250185012817383
    5. '       ' → logprob: -11.625185012817383
    6. '                     ' → logprob: -11.625185012817383
    7. ',
' → logprob: -12.750185012817383
    8. '   ' → logprob: -12.750185012817383
    9. '                         ' → logprob: -12.750185012817383
    10. 'points' → logprob: -12.750185012817383

Token 2261: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.8624639324116288e-06
    2. ' max' → logprob: -13.250001907348633
    3. '(max' → logprob: -20.250001907348633
    4. '[max' → logprob: -20.750001907348633
    5. 'min' → logprob: -21.375001907348633
    6. '_max' → logprob: -21.375001907348633
    7. '	max' → logprob: -21.625001907348633
    8. '       ' → logprob: -22.375001907348633
    9. ',max' → logprob: -23.375001907348633
    10. '   ' → logprob: -23.500001907348633

Token 2262: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00030841029365547
    2. '(p' → logprob: -8.7503080368042
    3. ',' → logprob: -9.8753080368042
    4. '_y' → logprob: -9.8753080368042
    5. '   ' → logprob: -11.2503080368042
    6. ',p' → logprob: -11.5003080368042
    7. '[p' → logprob: -12.1253080368042
    8. '```' → logprob: -12.1253080368042
    9. 'x' → logprob: -13.3753080368042
    10. '       ' → logprob: -13.5003080368042

Token 2263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. ' ,' → logprob: -11.750031471252441
    3. ',max' → logprob: -11.875031471252441
    4. ',
' → logprob: -12.000031471252441
    5. ',p' → logprob: -12.000031471252441
    6. ',min' → logprob: -13.250031471252441
    7. '+' → logprob: -13.500031471252441
    8. '-' → logprob: -15.625031471252441
    9. 'max' → logprob: -16.000032424926758
    10. '_,' → logprob: -16.000032424926758

Token 2264: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.044588353484869
    2. 'min' → logprob: -3.294588327407837
    3. ' max' → logprob: -5.044588565826416
    4. ' min' → logprob: -9.419588088989258
    5. '   ' → logprob: -16.294588088989258
    6. '
' → logprob: -16.419588088989258
    7. '_max' → logprob: -16.544588088989258
    8. '```' → logprob: -17.419588088989258
    9. 'm' → logprob: -17.544588088989258
    10. '(max' → logprob: -17.919588088989258

Token 2265: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.4289008677005768
    2. '_x' → logprob: -1.0539008378982544
    3. 'x' → logprob: -10.178900718688965
    4. 'Y' → logprob: -10.303900718688965
    5. 'y' → logprob: -10.553900718688965
    6. ',' → logprob: -10.553900718688965
    7. '_points' → logprob: -10.678900718688965
    8. 'max' → logprob: -11.303900718688965
    9. '(p' → logprob: -11.803900718688965
    10. '_,' → logprob: -11.928900718688965

Token 2266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. '       ' → logprob: -12.87501049041748
    3. ' ,' → logprob: -12.87501049041748
    4. ',
' → logprob: -13.50001049041748
    5. ')' → logprob: -13.62501049041748
    6. ',p' → logprob: -14.25001049041748
    7. 'points' → logprob: -14.50001049041748
    8. '(points' → logprob: -14.87501049041748
    9. '                     ' → logprob: -15.25001049041748
    10. '[' → logprob: -15.37501049041748

Token 2267: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0017693048575893044
    2. ' cls' → logprob: -6.501769542694092
    3. 'max' → logprob: -8.251769065856934
    4. 'points' → logprob: -12.501769065856934
    5. ' max' → logprob: -13.251769065856934
    6. '(cls' → logprob: -15.251769065856934
    7. 'class' → logprob: -15.876769065856934
    8. 'True' → logprob: -16.62677001953125
    9. 'pattern' → logprob: -16.62677001953125
    10. 'cl' → logprob: -16.87677001953125

Token 2268: '.pattern' (ID: 76901)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04201153293251991
    2. 'pattern' → logprob: -3.7920114994049072
    3. '.pattern' → logprob: -4.417011737823486
    4. '[' → logprob: -6.167011737823486
    5. '(pattern' → logprob: -6.417011737823486
    6. ')' → logprob: -6.417011737823486
    7. '),' → logprob: -8.417011260986328
    8. '.points' → logprob: -8.542011260986328
    9. ',
' → logprob: -8.792011260986328
    10. '_points' → logprob: -9.167011260986328

Token 2269: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2270: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0191903468221426
    2. 'character' → logprob: -4.644190311431885
    3. 'CHAR' → logprob: -5.394190311431885
    4. 'characters' → logprob: -6.269190311431885
    5. 'def' → logprob: -6.894190311431885
    6. '#' → logprob: -7.644190311431885
    7. 'char' → logprob: -8.144190788269043
    8. 'classes' → logprob: -8.394190788269043
    9. 'available' → logprob: -8.394190788269043
    10. 'all' → logprob: -8.519190788269043

Token 2271: ' Plus' (ID: 11899)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.21851491928100586
    2. 'characters' → logprob: -2.718514919281006
    3. 'CHAR' → logprob: -2.968514919281006
    4. 'character' → logprob: -2.968514919281006
    5. '#' → logprob: -4.718514919281006
    6. 'def' → logprob: -4.843514919281006
    7. 'DIG' → logprob: -5.843514919281006
    8. 'char' → logprob: -6.343514919281006
    9. 'digit' → logprob: -6.468514919281006
    10. 'all' → logprob: -6.593514919281006

Token 2272: ' sign' (ID: 2232)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.4974866644479334e-05
    2. '(
' → logprob: -11.625015258789062
    3. '(class' → logprob: -13.000015258789062
    4. ' class' → logprob: -13.250015258789062
    5. '
' → logprob: -13.500015258789062
    6. '(' → logprob: -15.125015258789062
    7. '<class' → logprob: -17.000015258789062
    8. '+
' → logprob: -17.250015258789062
    9. '```' → logprob: -17.250015258789062
    10. '(Character' → logprob: -17.375015258789062

Token 2273: ':' (ID: 25)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -13.875001907348633
    3. ' class' → logprob: -14.750001907348633
    4. '(
' → logprob: -16.125001907348633
    5. '```' → logprob: -17.375001907348633
    6. '(class' → logprob: -18.000001907348633
    7. '

' → logprob: -18.125001907348633
    8. '<class' → logprob: -18.875001907348633
    9. '+
' → logprob: -19.000001907348633
    10. '(' → logprob: -19.625001907348633

Token 2274: ' Horizontal' (ID: 75428)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -7.3458322731312364e-06
    2. '
' → logprob: -11.875007629394531
    3. ' class' → logprob: -15.500007629394531
    4. '```' → logprob: -15.875007629394531
    5. '<class' → logprob: -18.87500762939453
    6. 'pattern' → logprob: -19.37500762939453
    7. '

' → logprob: -19.50000762939453
    8. '"class' → logprob: -19.62500762939453
    9. 'clas' → logprob: -20.87500762939453
    10. 'classmethod' → logprob: -21.25000762939453

Token 2275: ' line' (ID: 2543)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0001427538663847372
    2. 'pattern' → logprob: -9.625143051147461
    3. '[
' → logprob: -10.625143051147461
    4. '
' → logprob: -11.375143051147461
    5. '+
' → logprob: -12.125143051147461
    6. ' class' → logprob: -12.125143051147461
    7. '   ' → logprob: -12.375143051147461
    8. '[' → logprob: -12.500143051147461
    9. '```' → logprob: -12.500143051147461
    10. '+' → logprob: -12.625143051147461

Token 2276: ' middle' (ID: 10006)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0018625955563038588
    2. '[
' → logprob: -6.751862525939941
    3. '   ' → logprob: -9.126862525939941
    4. '+
' → logprob: -9.251862525939941
    5. '
' → logprob: -9.501862525939941
    6. ' =' → logprob: -9.626862525939941
    7. '[' → logprob: -10.001862525939941
    8. ' class' → logprob: -10.001862525939941
    9. '=' → logprob: -10.126862525939941
    10. ':' → logprob: -10.126862525939941

Token 2277: ' +' (ID: 659)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0016668500611558557
    2. '   ' → logprob: -7.501667022705078
    3. '
' → logprob: -7.751667022705078
    4. '[
' → logprob: -8.001667022705078
    5. '+
' → logprob: -8.751667022705078
    6. 'pattern' → logprob: -9.876667022705078
    7. ' class' → logprob: -10.001667022705078
    8. '(
' → logprob: -11.001667022705078
    9. '[' → logprob: -11.126667022705078
    10. ':
' → logprob: -12.001667022705078

Token 2278: ' vertical' (ID: 17679)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.08251453936100006
    2. '[
' → logprob: -2.832514524459839
    3. 'vertical' → logprob: -4.332514762878418
    4. '
' → logprob: -6.207514762878418
    5. 'Vertical' → logprob: -6.582514762878418
    6. '[' → logprob: -6.707514762878418
    7. '   ' → logprob: -6.957514762878418
    8. '"' → logprob: -8.457514762878418
    9. 'pattern' → logprob: -8.582514762878418
    10. ' class' → logprob: -8.582514762878418

Token 2279: ' line' (ID: 2543)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7078671455383301
    2. 'pattern' → logprob: -0.7078671455383301
    3. '   ' → logprob: -5.08286714553833
    4. '[
' → logprob: -5.70786714553833
    5. ' pattern' → logprob: -6.95786714553833
    6. '+' → logprob: -7.45786714553833
    7. '+
' → logprob: -7.45786714553833
    8. '[' → logprob: -7.95786714553833
    9. ',' → logprob: -8.582866668701172
    10. 'sign' → logprob: -8.582866668701172

Token 2280: ' middle' (ID: 10006)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6120731234550476
    2. 'pattern' → logprob: -1.4870731830596924
    3. '[
' → logprob: -1.7370731830596924
    4. '   ' → logprob: -3.1120731830596924
    5. '=' → logprob: -5.987072944641113
    6. '[' → logprob: -6.112072944641113
    7. '+
' → logprob: -6.612072944641113
    8. ' =' → logprob: -7.112072944641113
    9. '=
' → logprob: -7.112072944641113
    10. '
' → logprob: -7.612072944641113

Token 2281: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.739826181321405e-05
    2. '
' → logprob: -10.00004768371582
    3. 'pattern' → logprob: -13.87504768371582
    4. '+
' → logprob: -15.12504768371582
    5. ' class' → logprob: -15.25004768371582
    6. '```' → logprob: -16.00004768371582
    7. '#' → logprob: -16.12504768371582
    8. '[
' → logprob: -16.75004768371582
    9. '   ' → logprob: -16.87504768371582
    10. '#
' → logprob: -17.25004768371582

Token 2282: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.8624639324116288e-06
    2. '
' → logprob: -13.250001907348633
    3. ' class' → logprob: -17.500001907348633
    4. '```' → logprob: -19.000001907348633
    5. '"class' → logprob: -19.250001907348633
    6. '

' → logprob: -20.250001907348633
    7. 'pattern' → logprob: -20.250001907348633
    8. '<class' → logprob: -20.375001907348633
    9. 'clas' → logprob: -20.625001907348633
    10. '  
' → logprob: -20.625001907348633

Token 2283: ' Plus' (ID: 11899)
  Prédit: 'Plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Plus' → logprob: -0.006202631164342165
    2. ' Plus' → logprob: -5.256202697753906
    3. 'Digit' → logprob: -7.256202697753906
    4. 'Character' → logprob: -8.881202697753906
    5. 'class' → logprob: -9.131202697753906
    6. ' class' → logprob: -12.381202697753906
    7. ' plus' → logprob: -12.381202697753906
    8. 'plus' → logprob: -13.506202697753906
    9. ' Digit' → logprob: -13.756202697753906
    10. '_plus' → logprob: -13.881202697753906

Token 2284: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -0.48779675364494324
    2. 'Sign' → logprob: -0.9877967834472656
    3. 'Character' → logprob: -4.987796783447266
    4. '_sign' → logprob: -5.737796783447266
    5. 'sign' → logprob: -5.987796783447266
    6. 'class' → logprob: -8.362796783447266
    7. '(Sign' → logprob: -8.862796783447266
    8. '(
' → logprob: -8.862796783447266
    9. '(' → logprob: -9.237796783447266
    10. '(class' → logprob: -9.487796783447266

Token 2285: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03204583004117012
    2. '   ' → logprob: -3.657045841217041
    3. ':
' → logprob: -5.657045841217041
    4. '):' → logprob: -6.157045841217041
    5. 'class' → logprob: -9.907045364379883
    6. ':' → logprob: -9.907045364379883
    7. '):
' → logprob: -11.657045364379883
    8. ')' → logprob: -12.657045364379883
    9. '  ' → logprob: -13.157045364379883
    10. 'pattern' → logprob: -13.907045364379883

Token 2286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3869073987007141
    2. 'pattern' → logprob: -1.1369073390960693
    3. ' pattern' → logprob: -10.261907577514648
    4. 'pat' → logprob: -14.136907577514648
    5. '(pattern' → logprob: -15.636907577514648
    6. '       ' → logprob: -15.886907577514648
    7. '```' → logprob: -16.01190757751465
    8. 'class' → logprob: -16.01190757751465
    9. '  ' → logprob: -16.63690757751465
    10. ' ' → logprob: -16.63690757751465

Token 2287: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: 0.0
    2. ' pattern' → logprob: -19.0
    3. '   ' → logprob: -19.5
    4. 'char' → logprob: -22.625
    5. '
' → logprob: -23.25
    6. 'pat' → logprob: -24.125
    7. 'patterns' → logprob: -24.625
    8. '```' → logprob: -25.75
    9. '_pattern' → logprob: -26.0
    10. '(pattern' → logprob: -26.125

Token 2288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024696826934814
    2. '=' → logprob: -1.9102469682693481
    3. '   ' → logprob: -11.785246849060059
    4. '=[
' → logprob: -11.785246849060059
    5. ':' → logprob: -12.285246849060059
    6. '[' → logprob: -14.160246849060059
    7. '=[' → logprob: -14.285246849060059
    8. '[
' → logprob: -15.035246849060059
    9. 's' → logprob: -15.035246849060059
    10. '=
' → logprob: -15.285246849060059

Token 2289: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -5.931863051955588e-05
    2. '[' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.000059127807617
    4. '["' → logprob: -16.125059127807617
    5. ' [
' → logprob: -18.125059127807617
    6. '['' → logprob: -20.875059127807617
    7. '"' → logprob: -21.625059127807617
    8. '       ' → logprob: -21.875059127807617
    9. '[\' → logprob: -21.875059127807617
    10. '=[
' → logprob: -21.875059127807617

Token 2290: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2777351438999176
    2. '       ' → logprob: -1.5277351140975952
    3. '[
' → logprob: -3.7777352333068848
    4. '   ' → logprob: -6.027735233306885
    5. '[' → logprob: -9.652734756469727
    6. '["' → logprob: -10.027734756469727
    7. ' ' → logprob: -10.027734756469727
    8. '     ' → logprob: -11.777734756469727
    9. ' "' → logprob: -12.027734756469727
    10. ''' → logprob: -12.027734756469727

Token 2291: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -1.4855663721391466e-05
    2. '010' → logprob: -11.625015258789062
    3. ''' → logprob: -12.625015258789062
    4. '001' → logprob: -13.375015258789062
    5. ' "' → logprob: -14.625015258789062
    6. '000' → logprob: -15.375015258789062
    7. '[
' → logprob: -15.500015258789062
    8. '["' → logprob: -17.125015258789062
    9. ' ' → logprob: -17.250015258789062
    10. '011' → logprob: -17.875015258789062

Token 2292: '010' (ID: 13522)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08510992676019669
    2. '010' → logprob: -2.5851099491119385
    3. '001' → logprob: -5.335109710693359
    4. ''' → logprob: -7.085109710693359
    5. '000' → logprob: -7.585109710693359
    6. '["' → logprob: -11.71010971069336
    7. '"""' → logprob: -11.96010971069336
    8. ' "' → logprob: -12.21010971069336
    9. '[
' → logprob: -12.83510971069336
    10. '011' → logprob: -12.83510971069336

Token 2293: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.05333896726369858
    2. '"' → logprob: -3.9283390045166016
    3. '",' → logprob: -4.303339004516602
    4. '010' → logprob: -4.303339004516602
    5. '10' → logprob: -6.178339004516602
    6. '","' → logprob: -6.803339004516602
    7. '0' → logprob: -7.303339004516602
    8. '1' → logprob: -8.053339004516602
    9. '101' → logprob: -8.178339004516602
    10. '",
' → logprob: -8.303339004516602

Token 2294: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003929864149540663
    2. '       ' → logprob: -5.62893009185791
    3. '   ' → logprob: -8.37893009185791
    4. ' ' → logprob: -9.37893009185791
    5. '           ' → logprob: -12.12893009185791
    6. '     ' → logprob: -12.25393009185791
    7. '010' → logprob: -12.87893009185791
    8. ' "' → logprob: -13.37893009185791
    9. '  ' → logprob: -15.25393009185791
    10. ''' → logprob: -15.25393009185791

Token 2295: ' "' (ID: 392)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.25691747665405273
    2. '"' (adapté à ' "') → logprob: -1.5069174766540527
    3. '010' → logprob: -5.381917476654053
    4. ' ' → logprob: -8.006917953491211
    5. ''' → logprob: -11.006917953491211
    6. '"""' → logprob: -11.756917953491211
    7. '"""
' → logprob: -12.131917953491211
    8. '   ' → logprob: -12.631917953491211
    9. '101' → logprob: -12.756917953491211
    10. ' "' → logprob: -13.006917953491211

Token 2296: '010' (ID: 13522)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.0052505917847156525
    2. '010' → logprob: -5.255250453948975
    3. '"' → logprob: -11.755250930786133
    4. '"""
' → logprob: -12.505250930786133
    5. '101' → logprob: -13.880250930786133
    6. ''''
' → logprob: -14.005250930786133
    7. '"""' → logprob: -14.005250930786133
    8. '```' → logprob: -14.005250930786133
    9. ''' → logprob: -14.630250930786133
    10. '\
' → logprob: -14.755250930786133

Token 2297: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.018977370113134384
    2. '",' → logprob: -4.018977165222168
    3. '<|end|>' → logprob: -8.643977165222168
    4. '",
' → logprob: -8.768977165222168
    5. '"' → logprob: -8.768977165222168
    6. '","' → logprob: -9.143977165222168
    7. '010' → logprob: -9.393977165222168
    8. ',
' → logprob: -10.268977165222168
    9. '       ' → logprob: -10.518977165222168
    10. '',
' → logprob: -11.143977165222168

Token 2298: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023302895948290825
    2. '       ' → logprob: -3.7733027935028076
    3. '   ' → logprob: -10.523303031921387
    4. '[
' → logprob: -11.898303031921387
    5. '010' → logprob: -12.273303031921387
    6. ''' → logprob: -12.398303031921387
    7. '"class' → logprob: -12.398303031921387
    8. ' "' → logprob: -12.648303031921387
    9. '[' → logprob: -12.773303031921387
    10. '0' → logprob: -13.273303031921387

Token 2299: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00031377444975078106
    2. '111' → logprob: -8.125313758850098
    3. ''' → logprob: -11.500313758850098
    4. '   ' → logprob: -12.750313758850098
    5. ' ' → logprob: -12.875313758850098
    6. '010' → logprob: -13.625313758850098
    7. ' "' → logprob: -14.750313758850098
    8. '       ' → logprob: -15.375313758850098
    9. '"""' → logprob: -16.250314712524414
    10. '"""
' → logprob: -16.625314712524414

Token 2300: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -4.2987729102605954e-05
    2. '"' → logprob: -10.250042915344238
    3. '010' → logprob: -12.375042915344238
    4. '"""' → logprob: -13.500042915344238
    5. '"""
' → logprob: -13.750042915344238
    6. ''' → logprob: -15.000042915344238
    7. '```' → logprob: -15.750042915344238
    8. '1' → logprob: -15.875042915344238
    9. ''''' → logprob: -16.125043869018555
    10. ' ' → logprob: -17.125043869018555

Token 2301: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.18757590651512146
    2. '",' → logprob: -1.8125759363174438
    3. '"' → logprob: -5.062575817108154
    4. '"]' → logprob: -6.687575817108154
    5. '<|end|>' → logprob: -9.687576293945312
    6. '",
' → logprob: -10.187576293945312
    7. '","' → logprob: -10.187576293945312
    8. '"
' → logprob: -10.687576293945312
    9. '',
' → logprob: -11.437576293945312
    10. ']' → logprob: -11.437576293945312

Token 2302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3135124742984772
    2. '"' → logprob: -1.3135124444961548
    3. '   ' → logprob: -8.563512802124023
    4. ''' → logprob: -10.938512802124023
    5. '           ' → logprob: -11.313512802124023
    6. ' ' → logprob: -11.813512802124023
    7. ' "' → logprob: -11.938512802124023
    8. '0' → logprob: -12.688512802124023
    9. '      ' → logprob: -12.813512802124023
    10. '"\' → logprob: -13.063512802124023

Token 2303: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00034273360506631434
    2. '010' → logprob: -8.12534236907959
    3. '   ' → logprob: -10.50034236907959
    4. '       ' → logprob: -11.25034236907959
    5. ' ' → logprob: -12.62534236907959
    6. ''' → logprob: -13.25034236907959
    7. ' "' → logprob: -14.37534236907959
    8. '	' → logprob: -16.625343322753906
    9. '  ' → logprob: -16.625343322753906
    10. '`' → logprob: -16.875343322753906

Token 2304: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -9.805981972021982e-05
    2. '"' → logprob: -9.25009822845459
    3. ''' → logprob: -13.25009822845459
    4. ' ' → logprob: -16.250097274780273
    5. '0' → logprob: -18.375097274780273
    6. '"""' → logprob: -18.375097274780273
    7. '   ' → logprob: -18.875097274780273
    8. '
' → logprob: -19.000097274780273
    9. '```' → logprob: -19.000097274780273
    10. '"""
' → logprob: -19.000097274780273

Token 2305: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.03048221580684185
    2. '",' → logprob: -3.530482292175293
    3. '   ' → logprob: -8.280482292175293
    4. '"' → logprob: -9.030482292175293
    5. ',' → logprob: -9.155482292175293
    6. ',
' → logprob: -9.405482292175293
    7. '",
' → logprob: -10.030482292175293
    8. '       ' → logprob: -10.030482292175293
    9. ',"' → logprob: -10.905482292175293
    10. '',
' → logprob: -11.030482292175293

Token 2306: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003342521144077182
    2. '       ' → logprob: -5.753342628479004
    3. '   ' → logprob: -8.878342628479004
    4. '010' → logprob: -11.753342628479004
    5. ''' → logprob: -12.003342628479004
    6. ' "' → logprob: -12.378342628479004
    7. ' ' → logprob: -12.753342628479004
    8. '           ' → logprob: -13.128342628479004
    9. '        ' → logprob: -14.253342628479004
    10. '      ' → logprob: -14.628342628479004

Token 2307: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00016444525681436062
    2. '010' → logprob: -8.750164031982422
    3. ' "' → logprob: -12.875164031982422
    4. ''' → logprob: -13.250164031982422
    5. ' ' → logprob: -14.375164031982422
    6. '   ' → logprob: -14.375164031982422
    7. '       ' → logprob: -16.125164031982422
    8. '"""' → logprob: -16.250164031982422
    9. '`' → logprob: -16.625164031982422
    10. '
' → logprob: -16.875164031982422

Token 2308: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.005956768058240414
    2. '"' → logprob: -5.130956649780273
    3. ''' → logprob: -10.630956649780273
    4. ' ' → logprob: -13.505956649780273
    5. '0' → logprob: -13.880956649780273
    6. '"""' → logprob: -14.005956649780273
    7. '   ' → logprob: -14.880956649780273
    8. '```' → logprob: -16.005956649780273
    9. '"""
' → logprob: -16.130956649780273
    10. '
' → logprob: -16.255956649780273

Token 2309: '"
' (ID: 1092)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.6028987169265747
    2. '"' → logprob: -1.1028987169265747
    3. '"
' → logprob: -2.227898597717285
    4. '   ' → logprob: -4.727898597717285
    5. ']' → logprob: -5.852898597717285
    6. '"]
' → logprob: -7.102898597717285
    7. ']"' → logprob: -8.227898597717285
    8. '       ' → logprob: -8.852898597717285
    9. ']"
' → logprob: -9.852898597717285
    10. '']' → logprob: -9.977898597717285

Token 2310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14368301630020142
    2. ']' → logprob: -2.0186829566955566
    3. '       ' → logprob: -7.143682956695557
    4. ',' → logprob: -9.768683433532715
    5. '"' → logprob: -10.268683433532715
    6. ',
' → logprob: -10.518683433532715
    7. ']
' → logprob: -10.768683433532715
    8. '.' → logprob: -11.143683433532715
    9. '}' → logprob: -11.268683433532715
    10. '[
' → logprob: -11.268683433532715

Token 2311: ' ]
' (ID: 10213)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' (adapté à ' ]
') → logprob: -0.12717324495315552
    2. ']' → logprob: -2.3771731853485107
    3. '   ' → logprob: -3.6271731853485107
    4. ']
' → logprob: -11.87717342376709
    5. ' ]
' → logprob: -12.37717342376709
    6. ' ' → logprob: -14.25217342376709
    7. 'class' → logprob: -14.50217342376709
    8. '  ' → logprob: -14.62717342376709
    9. ' ]' → logprob: -14.75217342376709
    10. '```' → logprob: -15.00217342376709

Token 2312: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6220494508743286
    2. 'char' → logprob: -1.1220494508743286
    3. '   ' → logprob: -2.622049331665039
    4. 'class' → logprob: -2.747049331665039
    5. '    
' → logprob: -8.622049331665039
    6. '  
' → logprob: -8.997049331665039
    7. 'pattern' → logprob: -9.372049331665039
    8. ' char' → logprob: -9.497049331665039
    9. '```' → logprob: -9.997049331665039
    10. ':
' → logprob: -10.122049331665039

Token 2313: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -3.128163257315464e-07
    2. 'pattern' → logprob: -15.75
    3. ' char' → logprob: -17.375
    4. 'class' → logprob: -18.375
    5. '
' → logprob: -19.25
    6. '   ' → logprob: -21.25
    7. '```' → logprob: -21.375
    8. '_char' → logprob: -22.75
    9. '.char' → logprob: -22.875
    10. '	char' → logprob: -23.75

Token 2314: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.125
    3. 'repr' → logprob: -17.0
    4. '_
' → logprob: -18.25
    5. '<|end|>' → logprob: -18.5
    6. '_rep' → logprob: -18.625
    7. '
' → logprob: -19.5
    8. '_relu' → logprob: -20.0
    9. '_rsp' → logprob: -20.125
    10. '   ' → logprob: -20.125

Token 2315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742049276828766
    2. ' =' → logprob: -0.9742048978805542
    3. '='' → logprob: -9.099205017089844
    4. ' ='' → logprob: -11.099205017089844
    5. ':' → logprob: -14.849205017089844
    6. ''' → logprob: -15.224205017089844
    7. ' ' → logprob: -16.224205017089844
    8. ' =
' → logprob: -17.099205017089844
    9. ' '' → logprob: -17.224205017089844
    10. '=
' → logprob: -17.224205017089844

Token 2316: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -7.862962229410186e-05
    2. ''+' → logprob: -9.500078201293945
    3. '"+"' → logprob: -13.125078201293945
    4. ' '+'' → logprob: -13.375078201293945
    5. '','' → logprob: -16.500078201293945
    6. '+' → logprob: -17.000078201293945
    7. '+'' → logprob: -17.250078201293945
    8. ''.' → logprob: -17.875078201293945
    9. '"' → logprob: -18.625078201293945
    10. ''*' → logprob: -18.750078201293945

Token 2317: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003336814232170582
    2. ''
' → logprob: -5.7533369064331055
    3. ''

' → logprob: -9.253336906433105
    4. '<|end|>' → logprob: -10.003336906433105
    5. '"' → logprob: -11.628336906433105
    6. ''class' → logprob: -12.003336906433105
    7. ''
' → logprob: -14.628336906433105
    8. ''#' → logprob: -14.753336906433105
    9. 'class' → logprob: -15.003336906433105
    10. ''>' → logprob: -15.253336906433105

Token 2318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027979308739304543
    2. '
' → logprob: -4.527979373931885
    3. 'class' → logprob: -4.527979373931885
    4. '@' → logprob: -5.152979373931885
    5. ' @' → logprob: -9.402978897094727
    6. '    
' → logprob: -9.902978897094727
    7. '@class' → logprob: -10.777978897094727
    8. ' class' → logprob: -11.027978897094727
    9. '```' → logprob: -11.402978897094727
    10. 'classmethod' → logprob: -12.027978897094727

Token 2319: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -1.2664456789934775e-06
    2. '@class' → logprob: -14.500000953674316
    3. '
' → logprob: -15.250000953674316
    4. ' @' → logprob: -15.875000953674316
    5. '@
' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.250001907348633
    7. 'classmethod' → logprob: -16.625001907348633
    8. '@property' → logprob: -17.125001907348633
    9. '@click' → logprob: -17.750001907348633
    10. 'class' → logprob: -18.500001907348633

Token 2320: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -6.704273118884885e-07
    2. 'class' → logprob: -14.500000953674316
    3. 'staticmethod' → logprob: -17.0
    4. '@' → logprob: -18.75
    5. 'cls' → logprob: -23.75
    6. 'property' → logprob: -23.875
    7. '@class' → logprob: -24.625
    8. 'cl' → logprob: -25.0
    9. '<class' → logprob: -25.0
    10. 'clas' → logprob: -25.375

Token 2321: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14676110446453094
    2. '   ' → logprob: -2.021761178970337
    3. ' def' → logprob: -5.771760940551758
    4. '
' → logprob: -7.021760940551758
    5. '  ' → logprob: -10.896760940551758
    6. '@' → logprob: -11.146760940551758
    7. '	def' → logprob: -11.271760940551758
    8. '(' → logprob: -12.021760940551758
    9. '```' → logprob: -12.521760940551758
    10. ' ' → logprob: -12.646760940551758

Token 2322: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.081584716506768e-05
    2. ' def' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.375020980834961
    4. ':def' → logprob: -16.12502098083496
    5. '	def' → logprob: -16.62502098083496
    6. '
' → logprob: -16.62502098083496
    7. '(def' → logprob: -17.00002098083496
    8. '@' → logprob: -17.62502098083496
    9. 'de' → logprob: -18.12502098083496
    10. 'Def' → logprob: -18.87502098083496

Token 2323: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.4391956685576588e-05
    2. 'try' → logprob: -10.750024795532227
    3. ' def' → logprob: -12.750024795532227
    4. 'Def' → logprob: -20.750024795532227
    5. 'async' → logprob: -22.250024795532227
    6. ' try' → logprob: -22.625024795532227
    7. '	def' → logprob: -22.875024795532227
    8. '
' → logprob: -22.875024795532227
    9. 'Try' → logprob: -22.875024795532227
    10. '```' → logprob: -23.000024795532227

Token 2324: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -7.896309739408025e-07
    2. ' try' → logprob: -14.125000953674316
    3. 'def' → logprob: -18.375
    4. '.try' → logprob: -19.125
    5. '_try' → logprob: -20.625
    6. 'Try' → logprob: -22.0
    7. '	try' → logprob: -22.0
    8. '
' → logprob: -22.375
    9. '```' → logprob: -22.625
    10. 'attempt' → logprob: -22.75

Token 2325: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -4.60414821645827e-06
    2. 'match' → logprob: -12.375004768371582
    3. '_' → logprob: -15.375004768371582
    4. '_mat' → logprob: -17.375003814697266
    5. '_try' → logprob: -18.000003814697266
    6. '_MATCH' → logprob: -18.125003814697266
    7. '_
' → logprob: -18.125003814697266
    8. '_m' → logprob: -18.375003814697266
    9. '_matching' → logprob: -18.375003814697266
    10. ' match' → logprob: -18.375003814697266

Token 2326: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.0280383548888494e-06
    2. 'cls' → logprob: -13.875000953674316
    3. '(
' → logprob: -17.250001907348633
    4. ' (' → logprob: -17.500001907348633
    5. '(' → logprob: -18.000001907348633
    6. '(clazz' → logprob: -18.125001907348633
    7. '(cl' → logprob: -18.875001907348633
    8. ' cls' → logprob: -19.875001907348633
    9. '   ' → logprob: -19.875001907348633
    10. '```' → logprob: -21.250001907348633

Token 2327: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -3.2378600735682994e-05
    2. '(points' → logprob: -10.625032424926758
    3. ',' → logprob: -12.000032424926758
    4. 'cls' → logprob: -13.375032424926758
    5. '(cl' → logprob: -16.375032424926758
    6. '(' → logprob: -17.000032424926758
    7. '(parts' → logprob: -17.500032424926758
    8. '(clazz' → logprob: -17.500032424926758
    9. '(class' → logprob: -17.625032424926758
    10. '   ' → logprob: -17.625032424926758

Token 2328: ' points' (ID: 5571)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -9.627176768844947e-05
    2. 'points' → logprob: -9.250096321105957
    3. ' cls' → logprob: -16.25009536743164
    4. '(cls' → logprob: -17.62509536743164
    5. 'cl' → logprob: -19.00009536743164
    6. 'class' → logprob: -20.12509536743164
    7. 'pts' → logprob: -20.50009536743164
    8. ' points' → logprob: -21.12509536743164
    9. 'classmethod' → logprob: -21.37509536743164
    10. 'clazz' → logprob: -21.75009536743164

Token 2329: ':' (ID: 25)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.4140441635390744e-05
    2. 'cls' → logprob: -12.000014305114746
    3. ')' → logprob: -12.375014305114746
    4. '   ' → logprob: -13.500014305114746
    5. '       ' → logprob: -13.875014305114746
    6. ',' → logprob: -15.000014305114746
    7. '(points' → logprob: -15.000014305114746
    8. '(' → logprob: -15.250014305114746
    9. ' (' → logprob: -16.12501335144043
    10. '(cl' → logprob: -16.50001335144043

Token 2330: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -4.227250610711053e-05
    2. 'cls' → logprob: -10.250041961669922
    3. ' Set' → logprob: -12.750041961669922
    4. 'set' → logprob: -13.375041961669922
    5. '(Set' → logprob: -13.875041961669922
    6. 'def' → logprob: -14.125041961669922
    7. '_set' → logprob: -15.375041961669922
    8. ')' → logprob: -15.500041961669922
    9. 'classmethod' → logprob: -15.750041961669922
    10. '(cls' → logprob: -16.125041961669922

Token 2331: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.368984107510187e-05
    2. '(Point' → logprob: -11.000033378601074
    3. '['' → logprob: -11.625033378601074
    4. ')' → logprob: -12.250033378601074
    5. '(' → logprob: -13.750033378601074
    6. ']' → logprob: -14.625033378601074
    7. '[p' → logprob: -15.250033378601074
    8. 'Point' → logprob: -15.250033378601074
    9. '[
' → logprob: -15.375033378601074
    10. '<Point' → logprob: -15.625033378601074

Token 2332: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. ' Point' → logprob: -17.25
    3. 'Points' → logprob: -18.625
    4. '.Point' → logprob: -19.625
    5. '	Point' → logprob: -19.625
    6. '(Point' → logprob: -19.75
    7. ')' → logprob: -20.0
    8. '<Point' → logprob: -20.625
    9. 'points' → logprob: -20.875
    10. 'Set' → logprob: -21.25

Token 2333: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3915141355246305e-05
    2. '):' → logprob: -10.75002384185791
    3. '):
' → logprob: -13.37502384185791
    4. ' )' → logprob: -14.75002384185791
    5. '   ' → logprob: -15.12502384185791
    6. '')' → logprob: -17.000024795532227
    7. '))' → logprob: -17.125024795532227
    8. '])' → logprob: -17.250024795532227
    9. '       ' → logprob: -17.875024795532227
    10. ')
' → logprob: -18.125024795532227

Token 2334: ' ->' (ID: 2747)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.6009432077407837
    2. ':' → logprob: -0.9759432077407837
    3. '->' → logprob: -2.975943088531494
    4. ' ->' → logprob: -4.350943088531494
    5. '   ' → logprob: -5.475943088531494
    6. '       ' → logprob: -5.850943088531494
    7. ':
' → logprob: -6.600943088531494
    8. '(' → logprob: -6.725943088531494
    9. ')' → logprob: -7.225943088531494
    10. 'def' → logprob: -8.225943565368652

Token 2335: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -4.961759259458631e-06
    2. ' bool' → logprob: -12.250004768371582
    3. 'True' → logprob: -17.1250057220459
    4. 'def' → logprob: -17.5000057220459
    5. 'False' → logprob: -18.5000057220459
    6. 'Bool' → logprob: -18.7500057220459
    7. '(bool' → logprob: -19.1250057220459
    8. '<bool' → logprob: -19.6250057220459
    9. '	bool' → logprob: -19.8750057220459
    10. 'return' → logprob: -20.1250057220459

Token 2336: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05505616217851639
    2. ':
' → logprob: -2.930056095123291
    3. '       ' → logprob: -9.05505657196045
    4. ':return' → logprob: -9.93005657196045
    5. '   ' → logprob: -13.05505657196045
    6. '):' → logprob: -13.68005657196045
    7. '():
' → logprob: -13.80505657196045
    8. '):
' → logprob: -13.93005657196045
    9. ':def' → logprob: -14.55505657196045
    10. ':
' → logprob: -14.55505657196045

Token 2337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.875
    3. '           ' → logprob: -16.375
    4. '      ' → logprob: -16.75
    5. 'if' → logprob: -17.625
    6. '     ' → logprob: -17.75
    7. '```' → logprob: -18.25
    8. ' if' → logprob: -18.25
    9. '        ' → logprob: -18.375
    10. '	' → logprob: -18.5

Token 2338: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005329693201929331
    2. '       ' → logprob: -5.255329608917236
    3. ' if' → logprob: -9.255330085754395
    4. '@' → logprob: -15.380330085754395
    5. '@if' → logprob: -17.005329132080078
    6. '   ' → logprob: -17.380329132080078
    7. 'cls' → logprob: -17.505329132080078
    8. 'for' → logprob: -18.630329132080078
    9. 'return' → logprob: -18.755329132080078
    10. '           ' → logprob: -19.630329132080078

Token 2339: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10021119564771652
    2. ' not' → logprob: -2.3502111434936523
    3. 'len' → logprob: -12.725211143493652
    4. 'points' → logprob: -14.600211143493652
    5. ' len' → logprob: -14.975211143493652
    6. '(not' → logprob: -15.600211143493652
    7. '
' → logprob: -15.975211143493652
    8. '   ' → logprob: -16.10021209716797
    9. '	not' → logprob: -16.10021209716797
    10. 'n' → logprob: -16.35021209716797

Token 2340: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.004650841932743788
    2. ' points' → logprob: -5.379651069641113
    3. '(points' → logprob: -10.754651069641113
    4. 'cls' → logprob: -12.379651069641113
    5. 'not' → logprob: -13.379651069641113
    6. 'bool' → logprob: -13.754651069641113
    7. 'point' → logprob: -14.254651069641113
    8. '	points' → logprob: -14.754651069641113
    9. ' cls' → logprob: -15.379651069641113
    10. 'False' → logprob: -15.754651069641113

Token 2341: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3494112193584442
    2. ':' → logprob: -1.2244112491607666
    3. '           ' → logprob: -7.3494110107421875
    4. '       ' → logprob: -8.099411010742188
    5. '):
' → logprob: -11.974411010742188
    6. ':

' → logprob: -12.974411010742188
    7. ':
' → logprob: -12.974411010742188
    8. ':return' → logprob: -13.099411010742188
    9. '   ' → logprob: -13.474411010742188
    10. '():
' → logprob: -14.099411010742188

Token 2342: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014179493300616741
    2. '           ' → logprob: -4.389179706573486
    3. ':
' → logprob: -7.014179706573486
    4. ':' → logprob: -8.014179229736328
    5. '	' → logprob: -9.014179229736328
    6. '               ' → logprob: -9.639179229736328
    7. '	   ' → logprob: -9.639179229736328
    8. '	       ' → logprob: -10.014179229736328
    9. '		' → logprob: -10.264179229736328
    10. '   ' → logprob: -10.514179229736328

Token 2343: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011193180456757545
    2. 'return' (adapté à ' return') → logprob: -4.51119327545166
    3. ' False' → logprob: -9.01119327545166
    4. ' return' → logprob: -10.76119327545166
    5. '       ' → logprob: -13.63619327545166
    6. 'True' → logprob: -14.38619327545166
    7. 'Return' → logprob: -15.63619327545166
    8. '           ' → logprob: -16.511192321777344
    9. '0' → logprob: -16.636192321777344
    10. '   ' → logprob: -16.761192321777344

Token 2344: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. 'True' → logprob: -18.000036239624023
    4. '(False' → logprob: -20.625036239624023
    5. 'false' → logprob: -21.625036239624023
    6. 'F' → logprob: -21.875036239624023
    7. '
' → logprob: -22.000036239624023
    8. '_false' → logprob: -23.250036239624023
    9. '=False' → logprob: -23.250036239624023
    10. '   ' → logprob: -23.500036239624023

Token 2345: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00593472458422184
    2. '
' → logprob: -5.130934715270996
    3. '
' → logprob: -12.755934715270996
    4. '        
' → logprob: -13.880934715270996
    5. 'return' → logprob: -14.380934715270996
    6. ',' → logprob: -14.880934715270996
    7. '```' → logprob: -15.130934715270996
    8. '           ' → logprob: -15.880934715270996
    9. '	' → logprob: -16.005935668945312
    10. '   ' → logprob: -16.005935668945312

Token 2346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.65707261255011e-06
    2. '
' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.125008583068848
    4. '           ' → logprob: -14.875008583068848
    5. 'return' → logprob: -16.000009536743164
    6. '
' → logprob: -16.125009536743164
    7. 'min' → logprob: -16.500009536743164
    8. '	' → logprob: -16.625009536743164
    9. '      ' → logprob: -16.875009536743164
    10. ' min' → logprob: -17.000009536743164

Token 2347: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0026338035240769386
    2. '       ' → logprob: -6.002633571624756
    3. ' min' → logprob: -8.752634048461914
    4. '	min' → logprob: -15.877634048461914
    5. '(min' → logprob: -17.252634048461914
    6. 'max' → logprob: -17.752634048461914
    7. '_min' → logprob: -18.502634048461914
    8. '   ' → logprob: -18.877634048461914
    9. '[min' → logprob: -19.002634048461914
    10. '.min' → logprob: -19.752634048461914

Token 2348: ' The' (ID: 623)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1637164789135568e-05
    2. '       ' → logprob: -11.625011444091797
    3. ' min' → logprob: -13.125011444091797
    4. '   ' → logprob: -15.500011444091797
    5. '#' → logprob: -16.375011444091797
    6. 'points' → logprob: -16.625011444091797
    7. 'def' → logprob: -16.750011444091797
    8. '
' → logprob: -16.875011444091797
    9. 'max' → logprob: -17.000011444091797
    10. 'class' → logprob: -17.375011444091797

Token 2349: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -8.73314929776825e-05
    2. ' min' → logprob: -9.50008773803711
    3. '#' → logprob: -12.00008773803711
    4. '       ' → logprob: -13.25008773803711
    5. 'from' → logprob: -13.50008773803711
    6. '   ' → logprob: -13.62508773803711
    7. 'def' → logprob: -14.12508773803711
    8. '
' → logprob: -15.50008773803711
    9. 'points' → logprob: -15.50008773803711
    10. 'max' → logprob: -15.62508773803711

Token 2350: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.2841626703739166
    2. 'pattern' → logprob: -2.534162759780884
    3. 'min' → logprob: -3.034162759780884
    4. 'class' → logprob: -3.034162759780884
    5. '       ' → logprob: -3.534162759780884
    6. '@' → logprob: -3.659162759780884
    7. '   ' → logprob: -5.034162521362305
    8. '_sign' → logprob: -5.784162521362305
    9. ' sign' → logprob: -6.409162521362305
    10. 'if' → logprob: -6.409162521362305

Token 2351: ' is' (ID: 382)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09149010479450226
    2. '       ' → logprob: -2.4664900302886963
    3. '
' → logprob: -6.841490268707275
    4. ' min' → logprob: -7.091490268707275
    5. 'if' → logprob: -8.466489791870117
    6. '(min' → logprob: -9.466489791870117
    7. '   ' → logprob: -9.716489791870117
    8. '#' → logprob: -9.966489791870117
    9. ':' → logprob: -10.341489791870117
    10. '           ' → logprob: -10.466489791870117

Token 2352: ' a' (ID: 261)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.9916084408760071
    2. '5' → logprob: -2.2416083812713623
    3. 'not' → logprob: -2.4916083812713623
    4. '       ' → logprob: -2.6166083812713623
    5. '#' → logprob: -2.6166083812713623
    6. 'center' → logprob: -3.2416083812713623
    7. 'exact' → logprob: -3.3666083812713623
    8. 'cls' → logprob: -3.6166083812713623
    9. 'False' → logprob: -3.7416083812713623
    10. '   ' → logprob: -3.9916083812713623

Token 2353: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.07912033796310425
    2. 'cross' → logprob: -3.204120397567749
    3. 'five' → logprob: -5.20412015914917
    4. ' ' → logprob: -5.32912015914917
    5. 'class' → logprob: -5.45412015914917
    6. 'bit' → logprob: -5.57912015914917
    7. 's' → logprob: -5.82912015914917
    8. 'plus' → logprob: -5.82912015914917
    9. 'special' → logprob: -5.95412015914917
    10. 'cls' → logprob: -6.57912015914917

Token 2354: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.06587973982095718
    2. 'cls' → logprob: -3.3158798217773438
    3. 'class' → logprob: -5.065879821777344
    4. '3' → logprob: -5.190879821777344
    5. ' ' → logprob: -5.440879821777344
    6. 'classmethod' → logprob: -5.815879821777344
    7. '@' → logprob: -6.065879821777344
    8. 'square' → logprob: -7.065879821777344
    9. 'five' → logprob: -7.065879821777344
    10. 'Character' → logprob: -7.440879821777344

Token 2355: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008763471618294716
    2. '   ' → logprob: -6.133763313293457
    3. '
' → logprob: -6.758763313293457
    4. 'by' → logprob: -6.883763313293457
    5. 'rows' → logprob: -7.008763313293457
    6. ',' → logprob: -7.008763313293457
    7. 'row' → logprob: -7.258763313293457
    8. 'line' → logprob: -8.008763313293457
    9. ',
' → logprob: -8.258763313293457
    10. 'pattern' → logprob: -8.633763313293457

Token 2356: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5663198828697205
    2. '1' → logprob: -1.1913199424743652
    3. '5' → logprob: -2.0663199424743652
    4. 'class' → logprob: -6.566319942474365
    5. '```' → logprob: -8.441319465637207
    6. '"""' → logprob: -9.816319465637207
    7. '"' → logprob: -10.566319465637207
    8. '(' → logprob: -10.691319465637207
    9. '111' → logprob: -10.691319465637207
    10. '
' → logprob: -10.816319465637207

Token 2357: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.07368755340576172
    2. ' pattern' → logprob: -2.6986875534057617
    3. 'class' → logprob: -6.198687553405762
    4. '   ' → logprob: -7.323687553405762
    5. 'grid' → logprob: -8.198687553405762
    6. 'character' → logprob: -9.073687553405762
    7. 'rectangle' → logprob: -9.198687553405762
    8. '
' → logprob: -9.198687553405762
    9. ' grid' → logprob: -9.323687553405762
    10. 'size' → logprob: -9.573687553405762

Token 2358: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.68022444692906e-05
    2. '
' → logprob: -10.250046730041504
    3. '```' → logprob: -12.875046730041504
    4. 'min' → logprob: -13.000046730041504
    5. '   ' → logprob: -13.375046730041504
    6. ',' → logprob: -13.625046730041504
    7. '           ' → logprob: -13.750046730041504
    8. 'import' → logprob: -14.875046730041504
    9. '      ' → logprob: -15.125046730041504
    10. ' min' → logprob: -15.125046730041504

Token 2359: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027099549770355225
    2. 'min' → logprob: -3.652099609375
    3. ' min' → logprob: -7.152099609375
    4. '   ' → logprob: -12.402099609375
    5. 'class' → logprob: -12.402099609375
    6. 'max' → logprob: -13.277099609375
    7. 'return' → logprob: -13.402099609375
    8. '
' → logprob: -13.652099609375
    9. '           ' → logprob: -14.277099609375
    10. 'minimum' → logprob: -14.652099609375

Token 2360: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029094640165567398
    2. 'pattern' → logprob: -4.404094696044922
    3. '#' → logprob: -5.279094696044922
    4. '@' → logprob: -5.654094696044922
    5. 'return' → logprob: -6.154094696044922
    6. '5' → logprob: -6.529094696044922
    7. '0' → logprob: -6.779094696044922
    8. 'cls' → logprob: -7.154094696044922
    9. ' min' → logprob: -7.904094696044922
    10. 'len' → logprob: -8.154094696044922

Token 2361: '3' (ID: 18)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04404861107468605
    2. 'pattern' → logprob: -3.419048547744751
    3. 'len' → logprob: -5.79404878616333
    4. 'height' → logprob: -6.16904878616333
    5. 'width' → logprob: -6.16904878616333
    6. 'cls' → logprob: -7.04404878616333
    7. 'exact' → logprob: -7.79404878616333
    8. '@' → logprob: -7.91904878616333
    9. ' min' → logprob: -7.91904878616333
    10. 'minimum' → logprob: -8.419048309326172

Token 2362: ' in' (ID: 306)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11870657652616501
    2. 'width' → logprob: -3.368706464767456
    3. 'rows' → logprob: -3.618706464767456
    4. ',' → logprob: -3.868706464767456
    5. ',
' → logprob: -5.118706703186035
    6. 'height' → logprob: -5.493706703186035
    7. '       ' → logprob: -6.368706703186035
    8. '
' → logprob: -6.368706703186035
    9. '   ' → logprob: -6.493706703186035
    10. 'columns' → logprob: -6.618706703186035

Token 2363: ' middle' (ID: 10006)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.04734589904546738
    2. 'the' → logprob: -4.297346115112305
    3. 'pattern' → logprob: -4.422346115112305
    4. 'width' → logprob: -5.047346115112305
    5. 'class' → logprob: -5.672346115112305
    6. 'vertical' → logprob: -6.047346115112305
    7. 'center' → logprob: -6.422346115112305
    8. 'cls' → logprob: -6.547346115112305
    9. '@' → logprob: -6.797346115112305
    10. 'points' → logprob: -6.922346115112305

Token 2364: ' row' (ID: 5225)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.04475736618042
    2. 'line' → logprob: -1.91975736618042
    3. 'height' → logprob: -2.16975736618042
    4. '   ' → logprob: -2.16975736618042
    5. 'rows' → logprob: -2.41975736618042
    6. ':' → logprob: -3.29475736618042
    7. 'lines' → logprob: -3.91975736618042
    8. ',' → logprob: -4.16975736618042
    9. 'row' → logprob: -4.16975736618042
    10. '       ' → logprob: -4.54475736618042

Token 2365: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005324215162545443
    2. '
' → logprob: -8.250532150268555
    3. ',' → logprob: -9.125532150268555
    4. ':' → logprob: -9.875532150268555
    5. '.' → logprob: -11.125532150268555
    6. ',
' → logprob: -11.375532150268555
    7. '(' → logprob: -11.375532150268555
    8. ':
' → logprob: -11.500532150268555
    9. '   ' → logprob: -11.875532150268555
    10. '(min' → logprob: -12.125532150268555

Token 2366: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22119782865047455
    2. 'min' → logprob: -1.7211978435516357
    3. '#' → logprob: -3.9711978435516357
    4. 'and' → logprob: -8.346198081970215
    5. ' min' → logprob: -8.971198081970215
    6. 'max' → logprob: -9.096198081970215
    7. '   ' → logprob: -9.471198081970215
    8. 'class' → logprob: -9.721198081970215
    9. 'minimum' → logprob: -9.721198081970215
    10. '           ' → logprob: -11.346198081970215

Token 2367: ' middle' (ID: 10006)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.31670278310775757
    2. 'min' → logprob: -1.5667028427124023
    3. '#' → logprob: -3.5667028427124023
    4. '5' → logprob: -3.6917028427124023
    5. 'middle' → logprob: -5.191702842712402
    6. '       ' → logprob: -6.816702842712402
    7. '@' → logprob: -7.566702842712402
    8. ' min' → logprob: -7.566702842712402
    9. 'points' → logprob: -8.191702842712402
    10. '
' → logprob: -8.316702842712402

Token 2368: ' column' (ID: 6000)
  Prédit: 'column'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'column' → logprob: -0.776268482208252
    2. 'x' → logprob: -1.151268482208252
    3. 'col' → logprob: -1.651268482208252
    4. 'line' → logprob: -4.026268482208252
    5. 'point' → logprob: -4.651268482208252
    6. '_x' → logprob: -6.401268482208252
    7. ' column' → logprob: -7.026268482208252
    8. 'row' → logprob: -7.276268482208252
    9. 'p' → logprob: -8.276268005371094
    10. '_col' → logprob: -8.651268005371094

Token 2369: ' vertical' (ID: 17679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008050769567489624
    2. '.' → logprob: -5.508050918579102
    3. ',' → logprob: -6.258050918579102
    4. ':' → logprob: -7.008050918579102
    5. ' at' → logprob: -8.133050918579102
    6. '   ' → logprob: -8.633050918579102
    7. '...' → logprob: -8.633050918579102
    8. ' for' → logprob: -9.883050918579102
    9. ':
' → logprob: -10.133050918579102
    10. '
' → logprob: -10.258050918579102

Token 2370: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07970579713582993
    2. '   ' → logprob: -3.9547057151794434
    3. 'lines' → logprob: -4.704705715179443
    4. 'line' → logprob: -4.829705715179443
    5. ' lines' → logprob: -4.829705715179443
    6. 'for' → logprob: -4.954705715179443
    7. 'if' → logprob: -5.329705715179443
    8. ',' → logprob: -5.579705715179443
    9. ' line' → logprob: -5.954705715179443
    10. 'points' → logprob: -6.204705715179443

Token 2371: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.827200897736475e-05
    2. ',' → logprob: -10.000078201293945
    3. '
' → logprob: -11.625078201293945
    4. '   ' → logprob: -12.750078201293945
    5. '           ' → logprob: -12.750078201293945
    6. '```' → logprob: -13.000078201293945
    7. ' at' → logprob: -13.250078201293945
    8. '.' → logprob: -13.250078201293945
    9. ':' → logprob: -13.375078201293945
    10. 'import' → logprob: -13.625078201293945

Token 2372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.3458322731312364e-06
    2. '
' → logprob: -12.375007629394531
    3. '```' → logprob: -13.500007629394531
    4. '   ' → logprob: -14.375007629394531
    5. 'class' → logprob: -14.500007629394531
    6. '           ' → logprob: -15.625007629394531
    7. '      ' → logprob: -16.37500762939453
    8. 'import' → logprob: -16.62500762939453
    9. ',' → logprob: -17.12500762939453
    10. 'from' → logprob: -17.25000762939453

Token 2373: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0031966082751750946
    2. '       ' → logprob: -5.753196716308594
    3. ' min' → logprob: -11.003196716308594
    4. 'if' → logprob: -14.003196716308594
    5. '   ' → logprob: -14.878196716308594
    6. '
' → logprob: -14.878196716308594
    7. '	min' → logprob: -15.503196716308594
    8. '(min' → logprob: -15.878196716308594
    9. 'max' → logprob: -16.003196716308594
    10. 'return' → logprob: -16.628196716308594

Token 2374: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.349075556499884e-05
    2. '_' → logprob: -9.7500638961792
    3. 'x' → logprob: -12.3750638961792
    4. 'def' → logprob: -14.8750638961792
    5. '_tokens' → logprob: -15.2500638961792
    6. '_
' → logprob: -16.250062942504883
    7. '_=' → logprob: -16.750062942504883
    8. '_token' → logprob: -16.750062942504883
    9. 'from' → logprob: -16.875062942504883
    10. 'import' → logprob: -17.250062942504883

Token 2375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804333135485649
    2. '=' → logprob: -3.288043260574341
    3. ',' → logprob: -13.788043022155762
    4. '=min' → logprob: -15.538043022155762
    5. ' =
' → logprob: -15.663043022155762
    6. '=
' → logprob: -16.038043975830078
    7. ' ' → logprob: -16.163043975830078
    8. '=

' → logprob: -16.663043975830078
    9. '<|end|>' → logprob: -16.663043975830078
    10. ' =)' → logprob: -17.288043975830078

Token 2376: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03804171830415726
    2. ' min' → logprob: -3.288041830062866
    3. '(min' → logprob: -15.413042068481445
    4. '0' → logprob: -17.913042068481445
    5. 'minimum' → logprob: -18.288042068481445
    6. '	min' → logprob: -18.538042068481445
    7. 'm' → logprob: -18.663042068481445
    8. '       ' → logprob: -19.163042068481445
    9. '   ' → logprob: -19.288042068481445
    10. 'mini' → logprob: -19.788042068481445

Token 2377: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.292907877039397e-06
    2. 'p' → logprob: -13.00000286102295
    3. '(' → logprob: -14.87500286102295
    4. '([' → logprob: -16.125003814697266
    5. '(
' → logprob: -16.500003814697266
    6. '[p' → logprob: -16.625003814697266
    7. '(min' → logprob: -16.625003814697266
    8. '(point' → logprob: -17.250003814697266
    9. ' (' → logprob: -17.375003814697266
    10. 'for' → logprob: -17.500003814697266

Token 2378: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00016468366084154695
    2. 'x' → logprob: -9.125164985656738
    3. '.p' → logprob: -10.750164985656738
    4. '.' → logprob: -10.875164985656738
    5. '(p' → logprob: -11.500164985656738
    6. '(x' → logprob: -13.000164985656738
    7. ' .' → logprob: -14.250164985656738
    8. '```' → logprob: -14.750164985656738
    9. '.token' → logprob: -15.125164985656738
    10. '(' → logprob: -15.375164985656738

Token 2379: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12693220376968384
    2. ' for' → logprob: -2.126932144165039
    3. '       ' → logprob: -13.126932144165039
    4. ')' → logprob: -14.126932144165039
    5. ',' → logprob: -14.126932144165039
    6. '
' → logprob: -16.12693214416504
    7. '(p' → logprob: -16.37693214416504
    8. '	for' → logprob: -16.37693214416504
    9. '```' → logprob: -16.50193214416504
    10. '        ' → logprob: -16.50193214416504

Token 2380: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.024311449378728867
    2. 'points' → logprob: -3.7743115425109863
    3. ' p' → logprob: -7.274311542510986
    4. ' points' → logprob: -7.899311542510986
    5. 'point' → logprob: -14.524311065673828
    6. '(points' → logprob: -14.774311065673828
    7. '	points' → logprob: -16.649311065673828
    8. '(p' → logprob: -16.899311065673828
    9. '   ' → logprob: -17.399311065673828
    10. '.points' → logprob: -17.399311065673828

Token 2381: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.03970516845583916
    2. 'p' → logprob: -4.039705276489258
    3. 'in' → logprob: -4.539705276489258
    4. ' points' → logprob: -4.789705276489258
    5. ' in' → logprob: -6.664705276489258
    6. 'oints' → logprob: -7.289705276489258
    7. '(points' → logprob: -8.539705276489258
    8. ' p' → logprob: -9.289705276489258
    9. '	points' → logprob: -10.789705276489258
    10. '.points' → logprob: -10.914705276489258

Token 2382: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -2.4987974029500037e-05
    2. ' points' → logprob: -10.625024795532227
    3. 'p' → logprob: -15.125024795532227
    4. '(points' → logprob: -15.250024795532227
    5. '
' → logprob: -17.375024795532227
    6. 'point' → logprob: -17.500024795532227
    7. '	points' → logprob: -17.875024795532227
    8. '.points' → logprob: -18.000024795532227
    9. '[' → logprob: -18.375024795532227
    10. '```' → logprob: -18.875024795532227

Token 2383: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02355210669338703
    2. ')' → logprob: -4.148551940917969
    3. '       ' → logprob: -4.898551940917969
    4. '   ' → logprob: -11.148551940917969
    5. ')
' → logprob: -11.148551940917969
    6. '           ' → logprob: -14.398551940917969
    7. '     ' → logprob: -14.773551940917969
    8. ',' → logprob: -14.898551940917969
    9. '),' → logprob: -14.898551940917969
    10. '
' → logprob: -15.023551940917969

Token 2384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00673905061557889
    2. 'min' → logprob: -6.381739139556885
    3. ' min' → logprob: -6.381739139556885
    4. ',' → logprob: -6.506739139556885
    5. '```' → logprob: -7.506739139556885
    6. '   ' → logprob: -7.756739139556885
    7. ',min' → logprob: -8.506738662719727
    8. '           ' → logprob: -9.006738662719727
    9. '        ' → logprob: -9.381738662719727
    10. '(min' → logprob: -9.506738662719727

Token 2385: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.000635235570371151
    2. ' min' → logprob: -7.750635147094727
    3. '       ' → logprob: -8.500635147094727
    4. 'max' → logprob: -14.625635147094727
    5. '	min' → logprob: -15.125635147094727
    6. '_min' → logprob: -15.625635147094727
    7. '(min' → logprob: -16.125635147094727
    8. '.min' → logprob: -16.250635147094727
    9. '[min' → logprob: -16.250635147094727
    10. ',min' → logprob: -17.125635147094727

Token 2386: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.026306219398975372
    2. '_y' → logprob: -3.65130615234375
    3. 'x' → logprob: -12.40130615234375
    4. '(p' → logprob: -14.90130615234375
    5. '   ' → logprob: -14.90130615234375
    6. '_' → logprob: -15.52630615234375
    7. '```' → logprob: -15.52630615234375
    8. '=' → logprob: -15.77630615234375
    9. '#' → logprob: -16.27630615234375
    10. 'import' → logprob: -16.27630615234375

Token 2387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38971269130706787
    2. '=' → logprob: -1.1397126913070679
    3. ' for' → logprob: -6.014712810516357
    4. 'for' → logprob: -7.889712810516357
    5. '<|end|>' → logprob: -11.1397123336792
    6. '=
' → logprob: -13.0147123336792
    7. ' in' → logprob: -14.1397123336792
    8. ' ' → logprob: -14.5147123336792
    9. 'in' → logprob: -15.0147123336792
    10. ')' → logprob: -15.2647123336792

Token 2388: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.7835754988482222e-05
    2. ' min' → logprob: -11.000018119812012
    3. '(min' → logprob: -13.750018119812012
    4. 'max' → logprob: -18.000017166137695
    5. 'm' → logprob: -18.125017166137695
    6. '(p' → logprob: -18.250017166137695
    7. '[min' → logprob: -18.625017166137695
    8. 'p' → logprob: -18.750017166137695
    9. 'mini' → logprob: -20.625017166137695
    10. 'for' → logprob: -21.250017166137695

Token 2389: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.107425062713446e-06
    2. 'for' → logprob: -12.250006675720215
    3. 'p' → logprob: -13.250006675720215
    4. '(' → logprob: -15.250006675720215
    5. '[p' → logprob: -16.62500762939453
    6. '```' → logprob: -16.87500762939453
    7. '(
' → logprob: -17.12500762939453
    8. '<p' → logprob: -18.37500762939453
    9. '(points' → logprob: -18.75000762939453
    10. 'For' → logprob: -18.87500762939453

Token 2390: '.y' (ID: 4486)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06880955398082733
    2. '(p' → logprob: -3.3188095092773438
    3. 'x' → logprob: -4.068809509277344
    4. ' for' → logprob: -5.068809509277344
    5. 'p' → logprob: -5.443809509277344
    6. '.x' → logprob: -6.693809509277344
    7. '.p' → logprob: -7.443809509277344
    8. '<|end|>' → logprob: -8.318809509277344
    9. '<|end|>' → logprob: -9.068809509277344
    10. '(x' → logprob: -9.568809509277344

Token 2391: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20141851902008057
    2. ' for' → logprob: -1.7014185190200806
    3. '<|end|>' → logprob: -12.95141887664795
    4. ')' → logprob: -14.45141887664795
    5. '```' → logprob: -14.45141887664795
    6. 'For' → logprob: -14.70141887664795
    7. '	for' → logprob: -15.07641887664795
    8. '
' → logprob: -15.45141887664795
    9. '<|end|>' → logprob: -15.57641887664795
    10. 'in' → logprob: -16.326417922973633

Token 2392: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.006640179082751274
    2. 'p' → logprob: -5.5066399574279785
    3. ' points' → logprob: -6.0066399574279785
    4. '(points' → logprob: -9.631640434265137
    5. ' p' → logprob: -10.881640434265137
    6. 'for' → logprob: -11.881640434265137
    7. '	points' → logprob: -13.756640434265137
    8. '(p' → logprob: -14.006640434265137
    9. '.points' → logprob: -14.256640434265137
    10. '
' → logprob: -14.506640434265137

Token 2393: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.06507772207260132
    2. 'oints' → logprob: -3.065077781677246
    3. 'for' → logprob: -4.940077781677246
    4. '(points' → logprob: -5.065077781677246
    5. ' points' → logprob: -6.565077781677246
    6. '.points' → logprob: -6.940077781677246
    7. 'p' → logprob: -8.315077781677246
    8. 'in' → logprob: -8.690077781677246
    9. ' for' → logprob: -10.190077781677246
    10. '	points' → logprob: -10.315077781677246

Token 2394: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0004259084234945476
    2. ' points' → logprob: -7.875425815582275
    3. '(points' → logprob: -10.625426292419434
    4. 'p' → logprob: -10.875426292419434
    5. '[' → logprob: -14.625426292419434
    6. '
' → logprob: -14.750426292419434
    7. '.points' → logprob: -14.875426292419434
    8. 'point' → logprob: -15.125426292419434
    9. 'oints' → logprob: -15.250426292419434
    10. '	points' → logprob: -15.500426292419434

Token 2395: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005278703290969133
    2. ')' → logprob: -5.880278587341309
    3. '       ' → logprob: -6.005278587341309
    4. ')
' → logprob: -12.880278587341309
    5. '   ' → logprob: -14.505278587341309
    6. '```' → logprob: -14.630278587341309
    7. 'for' → logprob: -15.130278587341309
    8. ' )
' → logprob: -15.380278587341309
    9. ')

' → logprob: -15.380278587341309
    10. '
' → logprob: -16.005279541015625

Token 2396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009812641888856888
    2. 'max' → logprob: -4.634812831878662
    3. ' max' → logprob: -10.759812355041504
    4. '
' → logprob: -10.759812355041504
    5. '```' → logprob: -12.009812355041504
    6. 'min' → logprob: -12.259812355041504
    7. '   ' → logprob: -13.884812355041504
    8. '           ' → logprob: -14.259812355041504
    9. 'maxlength' → logprob: -15.509812355041504
    10. '	max' → logprob: -15.509812355041504

Token 2397: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0001239196863025427
    2. ' max' → logprob: -9.000123977661133
    3. '       ' → logprob: -14.750123977661133
    4. '
' → logprob: -19.000123977661133
    5. 'min' → logprob: -19.250123977661133
    6. '   ' → logprob: -21.875123977661133
    7. '	max' → logprob: -22.000123977661133
    8. '_max' → logprob: -23.125123977661133
    9. '(max' → logprob: -23.375123977661133
    10. '.max' → logprob: -24.125123977661133

Token 2398: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.3306015716807451e-05
    2. '```' → logprob: -12.37501335144043
    3. '(p' → logprob: -12.50001335144043
    4. '_' → logprob: -13.00001335144043
    5. '<|end|>' → logprob: -14.75001335144043
    6. ' _' → logprob: -15.00001335144043
    7. '=_' → logprob: -15.25001335144043
    8. '=' → logprob: -15.25001335144043
    9. 'x' → logprob: -15.62501335144043
    10. ')_' → logprob: -15.62501335144043

Token 2399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759679675102234
    2. ' =' → logprob: -0.8259679675102234
    3. '=max' → logprob: -10.700967788696289
    4. '=
' → logprob: -12.700967788696289
    5. '=min' → logprob: -13.325967788696289
    6. 'max' → logprob: -14.700967788696289
    7. ' =
' → logprob: -15.200967788696289
    8. '=

' → logprob: -16.07596778869629
    9. '<|end|>' → logprob: -16.07596778869629
    10. ',' → logprob: -16.32596778869629

Token 2400: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0024758970830589533
    2. ' max' → logprob: -6.002475738525391
    3. '(max' → logprob: -15.25247573852539
    4. 'min' → logprob: -18.00247573852539
    5. '[max' → logprob: -18.62747573852539
    6. '	max' → logprob: -19.25247573852539
    7. '=max' → logprob: -19.25247573852539
    8. ',max' → logprob: -20.75247573852539
    9. 'm' → logprob: -21.12747573852539
    10. ' ' → logprob: -21.37747573852539

Token 2401: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3856492842023727e-06
    2. 'p' → logprob: -14.375000953674316
    3. '(' → logprob: -14.500000953674316
    4. '(points' → logprob: -17.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. ' (' → logprob: -17.375001907348633
    7. '(
' → logprob: -17.625001907348633
    8. '[p' → logprob: -17.750001907348633
    9. ' p' → logprob: -18.125001907348633
    10. '...' → logprob: -18.500001907348633

Token 2402: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0014248794177547097
    2. 'x' → logprob: -6.626424789428711
    3. '(p' → logprob: -9.751424789428711
    4. '(x' → logprob: -11.251424789428711
    5. '.p' → logprob: -11.501424789428711
    6. 'for' → logprob: -11.751424789428711
    7. '```' → logprob: -11.876424789428711
    8. ')' → logprob: -14.501424789428711
    9. ' for' → logprob: -15.001424789428711
    10. '_x' → logprob: -15.126424789428711

Token 2403: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.313264399766922
    2. 'for' → logprob: -1.3132643699645996
    3. '
' → logprob: -14.063264846801758
    4. ')' → logprob: -14.563264846801758
    5. '```' → logprob: -14.688264846801758
    6. '	for' → logprob: -15.563264846801758
    7. ',' → logprob: -15.813264846801758
    8. 'in' → logprob: -16.188264846801758
    9. 'For' → logprob: -16.688264846801758
    10. '       ' → logprob: -16.813264846801758

Token 2404: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6937432885169983
    2. 'points' → logprob: -0.6937432885169983
    3. ' points' → logprob: -8.568743705749512
    4. '(points' → logprob: -8.693743705749512
    5. ' p' → logprob: -9.068743705749512
    6. '(p' → logprob: -9.693743705749512
    7. 'for' → logprob: -10.068743705749512
    8. '[p' → logprob: -11.443743705749512
    9. 'point' → logprob: -13.068743705749512
    10. '
' → logprob: -13.943743705749512

Token 2405: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1159907579421997
    2. '.x' → logprob: -1.4909907579421997
    3. 'points' → logprob: -1.9909907579421997
    4. ' in' → logprob: -2.36599063873291
    5. '.points' → logprob: -2.61599063873291
    6. 'x' → logprob: -3.11599063873291
    7. 'in' → logprob: -3.11599063873291
    8. ' for' → logprob: -3.49099063873291
    9. ' points' → logprob: -4.61599063873291
    10. 'oints' → logprob: -5.24099063873291

Token 2406: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00010282796574756503
    2. 'p' → logprob: -10.125102996826172
    3. '(points' → logprob: -10.125102996826172
    4. ' points' → logprob: -10.750102996826172
    5. '[p' → logprob: -15.125102996826172
    6. '[' → logprob: -15.500102996826172
    7. '	points' → logprob: -15.500102996826172
    8. '.points' → logprob: -15.625102996826172
    9. '
' → logprob: -16.375102996826172
    10. '(p' → logprob: -16.375102996826172

Token 2407: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6424342393875122
    2. ')
' → logprob: -1.0174342393875122
    3. '       ' → logprob: -2.2674341201782227
    4. '),' → logprob: -5.142434120178223
    5. ')' → logprob: -6.017434120178223
    6. 'max' → logprob: -8.267434120178223
    7. ',max' → logprob: -8.517434120178223
    8. '
' → logprob: -10.017434120178223
    9. ' ,' → logprob: -10.517434120178223
    10. '```' → logprob: -11.142434120178223

Token 2408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030241334810853004
    2. ',' → logprob: -3.6552412509918213
    3. 'max' → logprob: -6.4052414894104
    4. ' max' → logprob: -6.9052414894104
    5. ',max' → logprob: -7.4052414894104
    6. '
' → logprob: -8.030241012573242
    7. '(max' → logprob: -8.905241012573242
    8. '```' → logprob: -9.530241012573242
    9. ' ,' → logprob: -9.905241012573242
    10. '   ' → logprob: -11.405241012573242

Token 2409: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.014170442707836628
    2. ' max' → logprob: -4.2641706466674805
    3. '       ' → logprob: -11.88917064666748
    4. '(max' → logprob: -16.764169692993164
    5. '_max' → logprob: -17.389169692993164
    6. '	max' → logprob: -17.639169692993164
    7. '
' → logprob: -17.889169692993164
    8. '.max' → logprob: -18.514169692993164
    9. '   ' → logprob: -18.764169692993164
    10. '     ' → logprob: -19.139169692993164

Token 2410: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -4.000763510703109e-05
    2. '_x' → logprob: -10.250040054321289
    3. 'y' → logprob: -12.750040054321289
    4. 'Y' → logprob: -14.375040054321289
    5. '```' → logprob: -14.500040054321289
    6. '   ' → logprob: -15.250040054321289
    7. '.y' → logprob: -16.12504005432129
    8. '[' → logprob: -16.37504005432129
    9. '_' → logprob: -16.87504005432129
    10. '._' → logprob: -17.75004005432129

Token 2411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5233956575393677
    2. ' =' → logprob: -0.8983956575393677
    3. ' for' → logprob: -8.898395538330078
    4. '=max' → logprob: -9.898395538330078
    5. '<|end|>' → logprob: -11.273395538330078
    6. ' in' → logprob: -11.523395538330078
    7. '==' → logprob: -11.523395538330078
    8. 'in' → logprob: -11.773395538330078
    9. '=
' → logprob: -11.773395538330078
    10. ' ==' → logprob: -11.898395538330078

Token 2412: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -8.895480277715251e-06
    2. ' max' → logprob: -11.750008583068848
    3. 'min' → logprob: -13.875008583068848
    4. '(max' → logprob: -18.125009536743164
    5. '[max' → logprob: -19.750009536743164
    6. '=max' → logprob: -20.000009536743164
    7. '	max' → logprob: -20.875009536743164
    8. '_max' → logprob: -22.500009536743164
    9. 'm' → logprob: -23.250009536743164
    10. '.max' → logprob: -23.625009536743164

Token 2413: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00025037277373485267
    2. 'p' → logprob: -8.500250816345215
    3. '[p' → logprob: -10.625250816345215
    4. '(points' → logprob: -11.750250816345215
    5. '```' → logprob: -12.000250816345215
    6. 'for' → logprob: -12.375250816345215
    7. ' p' → logprob: -13.875250816345215
    8. '<p' → logprob: -14.375250816345215
    9. 'points' → logprob: -14.625250816345215
    10. 'For' → logprob: -14.750250816345215

Token 2414: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.02345813624560833
    2. '.x' → logprob: -3.773458242416382
    3. 'for' → logprob: -8.773458480834961
    4. '.p' → logprob: -10.023458480834961
    5. ' for' → logprob: -12.898458480834961
    6. '(p' → logprob: -12.898458480834961
    7. '   ' → logprob: -13.648458480834961
    8. '```' → logprob: -13.648458480834961
    9. 'y' → logprob: -13.898458480834961
    10. '[' → logprob: -13.898458480834961

Token 2415: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2519335150718689
    2. ' for' → logprob: -1.5019335746765137
    3. '	for' → logprob: -13.376933097839355
    4. ')' → logprob: -14.376933097839355
    5. '```' → logprob: -14.376933097839355
    6. 'For' → logprob: -14.751933097839355
    7. '
' → logprob: -15.376933097839355
    8. '   ' → logprob: -15.626933097839355
    9. '<|end|>' → logprob: -15.876933097839355
    10. '.for' → logprob: -16.001934051513672

Token 2416: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0016300749266520143
    2. 'p' → logprob: -6.6266303062438965
    3. ' points' → logprob: -8.376629829406738
    4. '(points' → logprob: -9.626629829406738
    5. '(p' → logprob: -13.126629829406738
    6. ' p' → logprob: -13.376629829406738
    7. '
' → logprob: -13.376629829406738
    8. '	points' → logprob: -14.001629829406738
    9. '.points' → logprob: -14.876629829406738
    10. 'in' → logprob: -15.001629829406738

Token 2417: ' in' (ID: 306)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -1.153988003730774
    2. '.points' → logprob: -1.153988003730774
    3. 'points' → logprob: -1.528988003730774
    4. 'in' → logprob: -2.7789878845214844
    5. 'for' → logprob: -3.1539878845214844
    6. 'ints' → logprob: -3.9039878845214844
    7. ' in' → logprob: -5.028987884521484
    8. '(points' → logprob: -5.278987884521484
    9. ' points' → logprob: -5.403987884521484
    10. '.y' → logprob: -5.653987884521484

Token 2418: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -3.726595241460018e-05
    2. ' points' → logprob: -10.75003719329834
    3. '(points' → logprob: -11.25003719329834
    4. 'p' → logprob: -12.87503719329834
    5. '	points' → logprob: -16.875038146972656
    6. '
' → logprob: -17.500038146972656
    7. '[p' → logprob: -17.750038146972656
    8. '.points' → logprob: -18.000038146972656
    9. '(p' → logprob: -18.250038146972656
    10. 'for' → logprob: -18.250038146972656

Token 2419: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11088193953037262
    2. ')' → logprob: -2.735882043838501
    3. '):
' → logprob: -3.860882043838501
    4. '):' → logprob: -3.985882043838501
    5. '   ' → logprob: -8.735881805419922
    6. ')
' → logprob: -8.860881805419922
    7. ',' → logprob: -9.860881805419922
    8. ':' → logprob: -9.985881805419922
    9. ':
' → logprob: -10.235881805419922
    10. '           ' → logprob: -10.860881805419922

Token 2420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.774276774493046e-05
    2. 'return' → logprob: -10.375038146972656
    3. ' return' → logprob: -13.125038146972656
    4. '```' → logprob: -14.000038146972656
    5. '           ' → logprob: -14.625038146972656
    6. '   ' → logprob: -14.625038146972656
    7. '<|end|>' → logprob: -14.750038146972656
    8. '      ' → logprob: -14.750038146972656
    9. '	' → logprob: -15.375038146972656
    10. ':return' → logprob: -15.500038146972656

Token 2421: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10024948418140411
    2. '       ' → logprob: -2.3502495288848877
    3. ' return' → logprob: -10.100249290466309
    4. '```' → logprob: -14.100249290466309
    5. '   ' → logprob: -14.475249290466309
    6. '	return' → logprob: -15.600249290466309
    7. '
' → logprob: -16.475250244140625
    8. '           ' → logprob: -16.850250244140625
    9. '{return' → logprob: -16.850250244140625
    10. 'if' → logprob: -18.225250244140625

Token 2422: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0019293478690087795
    2. ' cls' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.87692928314209
    4. '(cls' → logprob: -15.25192928314209
    5. '       ' → logprob: -16.376930236816406
    6. 'super' → logprob: -17.001930236816406
    7. 'class' → logprob: -17.751930236816406
    8. 'cl' → logprob: -18.001930236816406
    9. '    ' → logprob: -19.251930236816406
    10. '     ' → logprob: -19.251930236816406

Token 2423: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.0005533903022296727
    2. '.pattern' → logprob: -7.750553607940674
    3. '.' → logprob: -9.250553131103516
    4. 'match' → logprob: -11.000553131103516
    5. '.try' → logprob: -12.375553131103516
    6. 'pattern' → logprob: -13.250553131103516
    7. ' .' → logprob: -13.250553131103516
    8. '.matches' → logprob: -14.500553131103516
    9. '.matcher' → logprob: -14.750553131103516
    10. '.m' → logprob: -14.750553131103516

Token 2424: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.001085566938854754
    2. '(points' → logprob: -7.1260857582092285
    3. 'pattern' → logprob: -8.25108528137207
    4. 'points' → logprob: -11.62608528137207
    5. '(p' → logprob: -12.50108528137207
    6. '_' → logprob: -13.25108528137207
    7. 'Pattern' → logprob: -13.37608528137207
    8. '(pattern' → logprob: -13.50108528137207
    9. 'patterns' → logprob: -14.12608528137207
    10. '_points' → logprob: -14.37608528137207

Token 2425: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -2.45848218582978e-06
    2. 'points' → logprob: -13.00000286102295
    3. '(' → logprob: -16.750001907348633
    4. '(
' → logprob: -16.750001907348633
    5. '(point' → logprob: -18.125001907348633
    6. '	points' → logprob: -18.250001907348633
    7. ' points' → logprob: -18.625001907348633
    8. '```' → logprob: -18.875001907348633
    9. '(parts' → logprob: -19.000001907348633
    10. '(p' → logprob: -20.875001907348633

Token 2426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015214069280773401
    2. '(points' → logprob: -6.501521587371826
    3. ' ,' → logprob: -12.126521110534668
    4. 'points' → logprob: -12.251521110534668
    5. '       ' → logprob: -12.501521110534668
    6. ',p' → logprob: -13.626521110534668
    7. '           ' → logprob: -14.126521110534668
    8. ',
' → logprob: -14.376521110534668
    9. '   ' → logprob: -14.501521110534668
    10. ')' → logprob: -14.751521110534668

Token 2427: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -8.895480277715251e-06
    2. 'points' → logprob: -11.750008583068848
    3. ' min' → logprob: -14.000008583068848
    4. 'max' → logprob: -16.500009536743164
    5. '(min' → logprob: -17.375009536743164
    6. '[min' → logprob: -19.000009536743164
    7. '       ' → logprob: -19.250009536743164
    8. '	min' → logprob: -19.750009536743164
    9. '   ' → logprob: -19.875009536743164
    10. '
' → logprob: -20.750009536743164

Token 2428: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.2127087504486553e-05
    2. 'x' → logprob: -10.750021934509277
    3. '(min' → logprob: -15.625021934509277
    4. 'min' → logprob: -16.375022888183594
    5. '_y' → logprob: -16.500022888183594
    6. 'X' → logprob: -17.500022888183594
    7. '0' → logprob: -17.625022888183594
    8. '   ' → logprob: -17.750022888183594
    9. '```' → logprob: -18.000022888183594
    10. 'import' → logprob: -18.437522888183594

Token 2429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.515961285913363e-05
    2. ' ,' → logprob: -10.000064849853516
    3. ',min' → logprob: -11.625064849853516
    4. ',
' → logprob: -12.625064849853516
    5. ',p' → logprob: -12.750064849853516
    6. '<|end|>' → logprob: -13.750064849853516
    7. ',max' → logprob: -15.250064849853516
    8. ',n' → logprob: -15.375064849853516
    9. 'min' → logprob: -15.375064849853516
    10. '```' → logprob: -15.500064849853516

Token 2430: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0004306692280806601
    2. ' min' → logprob: -7.750430583953857
    3. '[min' → logprob: -18.000431060791016
    4. 'max' → logprob: -18.125431060791016
    5. '(min' → logprob: -18.750431060791016
    6. '_min' → logprob: -19.375431060791016
    7. '	min' → logprob: -19.750431060791016
    8. 'm' → logprob: -21.125431060791016
    9. 'mini' → logprob: -21.375431060791016
    10. '=min' → logprob: -21.500431060791016

Token 2431: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.011409939266741276
    2. 'x' → logprob: -4.761409759521484
    3. '_y' → logprob: -5.886409759521484
    4. 'y' → logprob: -11.511409759521484
    5. '_points' → logprob: -14.511409759521484
    6. 'min' → logprob: -14.636409759521484
    7. '_min' → logprob: -14.636409759521484
    8. 'Y' → logprob: -14.886409759521484
    9. 'X' → logprob: -15.011409759521484
    10. '_' → logprob: -15.011409759521484

Token 2432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9650025428272784e-05
    2. ' ,' → logprob: -10.875040054321289
    3. '       ' → logprob: -12.250040054321289
    4. ',
' → logprob: -12.375040054321289
    5. '<|end|>' → logprob: -13.375040054321289
    6. '   ' → logprob: -13.750040054321289
    7. ',min' → logprob: -13.875040054321289
    8. ',max' → logprob: -14.125040054321289
    9. '```' → logprob: -14.125040054321289
    10. ',p' → logprob: -14.250040054321289

Token 2433: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011069283820688725
    2. 'max' → logprob: -4.511069297790527
    3. ' min' → logprob: -10.761069297790527
    4. ' max' → logprob: -15.386069297790527
    5. '_min' → logprob: -20.63606834411621
    6. '0' → logprob: -21.01106834411621
    7. '[min' → logprob: -21.26106834411621
    8. '(min' → logprob: -21.76106834411621
    9. 'm' → logprob: -22.26106834411621
    10. '	min' → logprob: -22.38606834411621

Token 2434: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.11452759057283401
    2. 'max' → logprob: -2.864527702331543
    3. 'x' → logprob: -2.989527702331543
    4. '_y' → logprob: -7.364527702331543
    5. '0' → logprob: -9.364527702331543
    6. '(max' → logprob: -9.739527702331543
    7. 'min' → logprob: -10.239527702331543
    8. '_max' → logprob: -10.989527702331543
    9. 'y' → logprob: -11.864527702331543
    10. '       ' → logprob: -12.364527702331543

Token 2435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.398067828034982e-05
    2. ' ,' → logprob: -9.62507438659668
    3. ',min' → logprob: -13.12507438659668
    4. ',p' → logprob: -13.25007438659668
    5. ',
' → logprob: -13.87507438659668
    6. '```' → logprob: -14.25007438659668
    7. '<|end|>' → logprob: -14.62507438659668
    8. ',m' → logprob: -15.50007438659668
    9. ',user' → logprob: -15.62507438659668
    10. ',max' → logprob: -15.62507438659668

Token 2436: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011205445975065231
    2. 'max' → logprob: -4.511205673217773
    3. ' min' → logprob: -8.761205673217773
    4. ' max' → logprob: -13.886205673217773
    5. '[min' → logprob: -18.011205673217773
    6. '(min' → logprob: -19.011205673217773
    7. 'minimum' → logprob: -19.136205673217773
    8. '_min' → logprob: -19.511205673217773
    9. '	min' → logprob: -20.261205673217773
    10. 'm' → logprob: -20.511205673217773

Token 2437: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0005440961103886366
    2. '_x' → logprob: -8.000544548034668
    3. 'y' → logprob: -8.625544548034668
    4. 'Y' → logprob: -11.250544548034668
    5. 'min' → logprob: -11.500544548034668
    6. '```' → logprob: -13.375544548034668
    7. '_min' → logprob: -13.500544548034668
    8. '1' → logprob: -14.750544548034668
    9. 'x' → logprob: -15.125544548034668
    10. '_' → logprob: -15.250544548034668

Token 2438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.225939872208983e-05
    2. '   ' → logprob: -11.375032424926758
    3. '       ' → logprob: -11.625032424926758
    4. ' ,' → logprob: -12.000032424926758
    5. ',
' → logprob: -12.875032424926758
    6. '           ' → logprob: -13.125032424926758
    7. '```' → logprob: -15.375032424926758
    8. '        ' → logprob: -15.500032424926758
    9. '          ' → logprob: -15.875032424926758
    10. '    ' → logprob: -16.125032424926758

Token 2439: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.00317783304490149
    2. ' cls' → logprob: -5.753177642822266
    3. '(cls' → logprob: -16.253177642822266
    4. '   ' → logprob: -17.253177642822266
    5. 'cl' → logprob: -17.503177642822266
    6. '       ' → logprob: -18.753177642822266
    7. '_cls' → logprob: -18.753177642822266
    8. '.cls' → logprob: -18.753177642822266
    9. '    ' → logprob: -19.128177642822266
    10. ' ' → logprob: -19.378177642822266

Token 2440: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.0008756125462241471
    2. 'pattern' → logprob: -7.250875473022461
    3. ',' → logprob: -8.750875473022461
    4. '   ' → logprob: -13.000875473022461
    5. '.points' → logprob: -13.250875473022461
    6. '.' → logprob: -14.375875473022461
    7. '(pattern' → logprob: -14.500875473022461
    8. ')' → logprob: -14.625875473022461
    9. 'patterns' → logprob: -15.125875473022461
    10. '       ' → logprob: -15.500875473022461

Token 2441: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2442: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0011129508493468165
    2. 'character' → logprob: -7.501112937927246
    3. '#' → logprob: -8.626112937927246
    4. 'CHAR' → logprob: -8.876112937927246
    5. 'char' → logprob: -9.126112937927246
    6. 'characters' → logprob: -10.251112937927246
    7. 'classes' → logprob: -10.501112937927246
    8. '
' → logprob: -11.126112937927246
    9. 'all' → logprob: -11.501112937927246
    10. 'available' → logprob: -11.626112937927246

Token 2443: ' Minus' (ID: 138001)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12324708700180054
    2. '#' → logprob: -3.4982471466064453
    3. 'CHAR' → logprob: -3.4982471466064453
    4. 'character' → logprob: -3.7482471466064453
    5. 'characters' → logprob: -4.373247146606445
    6. 'def' → logprob: -4.873247146606445
    7. 'char' → logprob: -5.123247146606445
    8. 'all' → logprob: -6.498247146606445
    9. 'available' → logprob: -7.123247146606445
    10. '_char' → logprob: -7.498247146606445

Token 2444: ' sign' (ID: 2232)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.523948907968588e-05
    2. '(class' → logprob: -11.125035285949707
    3. '(
' → logprob: -11.625035285949707
    4. ' class' → logprob: -12.000035285949707
    5. '
' → logprob: -12.375035285949707
    6. '(Character' → logprob: -14.000035285949707
    7. '(' → logprob: -16.00003433227539
    8. 'Character' → logprob: -16.37503433227539
    9. '```' → logprob: -17.12503433227539
    10. '#' → logprob: -18.12503433227539

Token 2445: ':' (ID: 25)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.512236498361744e-07
    2. '(
' → logprob: -15.625000953674316
    3. ' class' → logprob: -15.750000953674316
    4. '(class' → logprob: -15.750000953674316
    5. '
' → logprob: -16.375
    6. '```' → logprob: -18.125
    7. '(' → logprob: -19.375
    8. '<class' → logprob: -19.375
    9. '"class' → logprob: -19.5
    10. 'Class' → logprob: -19.875

Token 2446: ' a' (ID: 261)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. '
' → logprob: -17.625
    3. ' class' → logprob: -18.75
    4. '```' → logprob: -18.875
    5. '"class' → logprob: -21.5
    6. '<class' → logprob: -22.0
    7. 'Class' → logprob: -22.5
    8. 'pattern' → logprob: -22.625
    9. '[
' → logprob: -23.0
    10. 'character' → logprob: -23.125

Token 2447: ' horizontal' (ID: 25511)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06080062314867973
    2. '[
' → logprob: -3.185800552368164
    3. 'pattern' → logprob: -4.060800552368164
    4. '[' → logprob: -8.185800552368164
    5. ' class' → logprob: -9.435800552368164
    6. 'single' → logprob: -11.060800552368164
    7. ' [
' → logprob: -11.435800552368164
    8. ' pattern' → logprob: -11.685800552368164
    9. '
' → logprob: -12.810800552368164
    10. '   ' → logprob: -12.935800552368164

Token 2448: ' line' (ID: 2543)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5671741366386414
    2. 'pattern' → logprob: -1.3171741962432861
    3. 'line' → logprob: -1.8171741962432861
    4. '[
' → logprob: -6.942173957824707
    5. ' line' → logprob: -7.067173957824707
    6. 'sign' → logprob: -8.067173957824707
    7. ' pattern' → logprob: -8.567173957824707
    8. ' class' → logprob: -9.942173957824707
    9. '```' → logprob: -10.317173957824707
    10. '
' → logprob: -10.442173957824707

Token 2449: ' at' (ID: 540)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02210841327905655
    2. '[
' → logprob: -4.022108554840088
    3. '   ' → logprob: -5.772108554840088
    4. 'pattern' → logprob: -7.397108554840088
    5. '[' → logprob: -9.64710807800293
    6. '(
' → logprob: -9.77210807800293
    7. ' =' → logprob: -10.64710807800293
    8. '=' → logprob: -10.77210807800293
    9. '=[
' → logprob: -11.39710807800293
    10. '
' → logprob: -11.77210807800293

Token 2450: ' center' (ID: 6170)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0037658745422959328
    2. '[' → logprob: -5.753766059875488
    3. '["' → logprob: -7.503766059875488
    4. 'class' → logprob: -11.253766059875488
    5. '['' → logprob: -11.628766059875488
    6. ' [
' → logprob: -11.878766059875488
    7. 'Character' → logprob: -12.878766059875488
    8. '   ' → logprob: -12.878766059875488
    9. 'middle' → logprob: -13.878766059875488
    10. 'character' → logprob: -14.878766059875488

Token 2451: ' row' (ID: 5225)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.125
    3. '```' → logprob: -16.25
    4. ' class' → logprob: -17.625
    5. '   ' → logprob: -19.25
    6. '(
' → logprob: -19.5
    7. 'pattern' → logprob: -19.5
    8. '[
' → logprob: -19.875
    9. '"class' → logprob: -20.625
    10. '`
' → logprob: -20.875

Token 2452: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.875
    3. '   ' → logprob: -16.75
    4. 'pattern' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. ' class' → logprob: -18.125
    7. '#' → logprob: -19.0
    8. '#
' → logprob: -19.875
    9. '+
' → logprob: -20.0
    10. '[
' → logprob: -20.375

Token 2453: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. '
' → logprob: -18.75
    3. '```' → logprob: -20.0
    4. '"class' → logprob: -20.375
    5. ' class' → logprob: -21.0
    6. '   ' → logprob: -22.5
    7. '<class' → logprob: -23.625
    8. '#' → logprob: -23.75
    9. '"""
' → logprob: -23.875
    10. '[
' → logprob: -24.0

Token 2454: ' Minus' (ID: 138001)
  Prédit: 'Minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Minus' → logprob: -0.013869636692106724
    2. 'class' → logprob: -4.638869762420654
    3. 'Character' → logprob: -5.513869762420654
    4. ' Minus' → logprob: -11.263869285583496
    5. 'minus' → logprob: -11.263869285583496
    6. 'Plus' → logprob: -11.763869285583496
    7. 'Class' → logprob: -11.763869285583496
    8. '#' → logprob: -11.763869285583496
    9. ' class' → logprob: -12.513869285583496
    10. 'Subtract' → logprob: -12.638869285583496

Token 2455: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -7.896309739408025e-07
    2. 'Character' → logprob: -14.375000953674316
    3. '<Character' → logprob: -16.75
    4. '(
' → logprob: -17.375
    5. 'class' → logprob: -17.375
    6. '(Class' → logprob: -18.875
    7. '(character' → logprob: -19.125
    8. '(' → logprob: -19.25
    9. '.Character' → logprob: -19.625
    10. ' (' → logprob: -20.0

Token 2456: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.013369619846343994
    2. '   ' → logprob: -5.138369560241699
    3. ':
' → logprob: -5.513369560241699
    4. '(Character' → logprob: -6.263369560241699
    5. '):' → logprob: -6.888369560241699
    6. 'class' → logprob: -7.888369560241699
    7. 'Character' → logprob: -10.6383695602417
    8. '<Character' → logprob: -10.7633695602417
    9. ':' → logprob: -11.2633695602417
    10. ')' → logprob: -12.1383695602417

Token 2457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06450264155864716
    2. 'class' → logprob: -3.314502716064453
    3. 'pattern' → logprob: -3.689502716064453
    4. ':
' → logprob: -7.439502716064453
    5. '):
' → logprob: -8.814502716064453
    6. '```' → logprob: -8.939502716064453
    7. ' pattern' → logprob: -9.064502716064453
    8. '{
' → logprob: -10.189502716064453
    9. '(pattern' → logprob: -10.439502716064453
    10. ':' → logprob: -10.939502716064453

Token 2458: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: 0.0
    2. '   ' → logprob: -18.75
    3. ' pattern' → logprob: -20.875
    4. 'class' → logprob: -21.25
    5. '
' → logprob: -23.625
    6. '```' → logprob: -24.125
    7. 'pat' → logprob: -24.625
    8. 'patterns' → logprob: -25.375
    9. '.pattern' → logprob: -26.0
    10. '_pattern' → logprob: -26.125

Token 2459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932470202445984
    2. ' =' → logprob: -0.6932470202445984
    3. '   ' → logprob: -9.568246841430664
    4. '=[
' → logprob: -10.693246841430664
    5. '=
' → logprob: -12.818246841430664
    6. '  ' → logprob: -13.568246841430664
    7. '[
' → logprob: -13.693246841430664
    8. '=[' → logprob: -13.943246841430664
    9. ' ' → logprob: -15.068246841430664
    10. '```' → logprob: -15.318246841430664

Token 2460: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0007213685312308371
    2. '[' → logprob: -7.250721454620361
    3. '   ' → logprob: -11.500720977783203
    4. '["' → logprob: -13.750720977783203
    5. ' [
' → logprob: -15.375720977783203
    6. ' ' → logprob: -20.000720977783203
    7. '       ' → logprob: -20.375720977783203
    8. ' [' → logprob: -20.875720977783203
    9. '['' → logprob: -21.500720977783203
    10. '  ' → logprob: -22.000720977783203

Token 2461: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1759829968214035
    2. '       ' → logprob: -1.92598295211792
    3. '   ' → logprob: -4.17598295211792
    4. '[
' → logprob: -8.300983428955078
    5. '           ' → logprob: -11.675983428955078
    6. '["' → logprob: -12.300983428955078
    7. ' ' → logprob: -12.425983428955078
    8. '     ' → logprob: -12.925983428955078
    9. ''' → logprob: -12.925983428955078
    10. '[' → logprob: -13.050983428955078

Token 2462: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -5.080963092041202e-06
    2. ''' → logprob: -13.250004768371582
    3. '000' → logprob: -13.500004768371582
    4. '   ' → logprob: -13.750004768371582
    5. '       ' → logprob: -14.750004768371582
    6. ' "' → logprob: -16.3750057220459
    7. ' ' → logprob: -16.5000057220459
    8. '[
' → logprob: -17.2500057220459
    9. '"""' → logprob: -18.0000057220459
    10. '  ' → logprob: -18.1250057220459

Token 2463: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0036435495130717754
    2. '000' → logprob: -5.62864351272583
    3. ''' → logprob: -10.503643989562988
    4. ' "' → logprob: -12.378643989562988
    5. '001' → logprob: -12.378643989562988
    6. ' ' → logprob: -13.003643989562988
    7. '010' → logprob: -13.628643989562988
    8. '"""' → logprob: -13.628643989562988
    9. '  ' → logprob: -13.878643989562988
    10. '   ' → logprob: -14.503643989562988

Token 2464: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.004241161979734898
    2. '",' → logprob: -6.004240989685059
    3. '"' → logprob: -6.504240989685059
    4. '111' → logprob: -9.004240989685059
    5. '","' → logprob: -9.629240989685059
    6. '",
' → logprob: -10.629240989685059
    7. '000' → logprob: -10.629240989685059
    8. '010' → logprob: -10.754240989685059
    9. '',
' → logprob: -13.379240989685059
    10. '",

' → logprob: -13.504240989685059

Token 2465: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1605268269777298
    2. '       ' → logprob: -1.9105268716812134
    3. '"\' → logprob: -8.535527229309082
    4. '   ' → logprob: -9.535527229309082
    5. ' ' → logprob: -11.410527229309082
    6. ''' → logprob: -11.785527229309082
    7. '           ' → logprob: -12.160527229309082
    8. ' "' → logprob: -12.410527229309082
    9. '0' → logprob: -13.660527229309082
    10. '     ' → logprob: -13.785527229309082

Token 2466: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -1.3544423381972592e-05
    2. '000' → logprob: -11.37501335144043
    3. ''' → logprob: -13.62501335144043
    4. '   ' → logprob: -15.12501335144043
    5. ' ' → logprob: -15.37501335144043
    6. '111' → logprob: -16.00001335144043
    7. ' "' → logprob: -16.50001335144043
    8. '       ' → logprob: -16.75001335144043
    9. '  ' → logprob: -18.25001335144043
    10. '"""' → logprob: -18.62501335144043

Token 2467: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.210006445646286
    2. '000' → logprob: -1.7100064754486084
    3. '111' → logprob: -4.835006237030029
    4. '010' → logprob: -7.960006237030029
    5. ''' → logprob: -8.460006713867188
    6. '001' → logprob: -11.335006713867188
    7. ' ' → logprob: -11.460006713867188
    8. '  ' → logprob: -11.460006713867188
    9. ' "' → logprob: -12.085006713867188
    10. '0' → logprob: -12.460006713867188

Token 2468: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.004728564526885748
    2. '",' → logprob: -5.3797287940979
    3. '       ' → logprob: -10.254728317260742
    4. '"' → logprob: -10.254728317260742
    5. '",
' → logprob: -11.004728317260742
    6. '","' → logprob: -12.254728317260742
    7. '',
' → logprob: -12.629728317260742
    8. ',
' → logprob: -12.629728317260742
    9. '[' → logprob: -12.754728317260742
    10. '   ' → logprob: -13.504728317260742

Token 2469: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.021039513871073723
    2. '       ' → logprob: -3.8960394859313965
    3. ''' → logprob: -8.396039962768555
    4. '   ' → logprob: -9.021039962768555
    5. ' "' → logprob: -10.146039962768555
    6. '010' → logprob: -10.646039962768555
    7. '000' → logprob: -10.896039962768555
    8. '0' → logprob: -11.021039962768555
    9. ' ' → logprob: -11.146039962768555
    10. '[' → logprob: -12.021039962768555

Token 2470: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -4.4418171455617994e-05
    2. '111' → logprob: -10.375044822692871
    3. ''' → logprob: -11.250044822692871
    4. '`' → logprob: -17.250043869018555
    5. ' "' → logprob: -17.250043869018555
    6. '   ' → logprob: -17.750043869018555
    7. '```' → logprob: -18.125043869018555
    8. '"""' → logprob: -18.750043869018555
    9. ' ' → logprob: -18.875043869018555
    10. '"class' → logprob: -19.625043869018555

Token 2471: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.04870602488517761
    2. '"' → logprob: -3.0487060546875
    3. ''' → logprob: -9.0487060546875
    4. ' ' → logprob: -15.1737060546875
    5. '"""' → logprob: -15.7987060546875
    6. '1' → logprob: -16.0487060546875
    7. '`' → logprob: -16.1737060546875
    8. '000' → logprob: -16.2987060546875
    9. '###' → logprob: -16.4237060546875
    10. ' "' → logprob: -16.4237060546875

Token 2472: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.15035289525985718
    2. '",' → logprob: -2.025352954864502
    3. '"' → logprob: -5.275352954864502
    4. '"]' → logprob: -6.025352954864502
    5. '"
' → logprob: -9.775352478027344
    6. '",
' → logprob: -11.525352478027344
    7. '',
' → logprob: -11.650352478027344
    8. '<|end|>' → logprob: -11.775352478027344
    9. '   ' → logprob: -11.900352478027344
    10. '","' → logprob: -12.025352478027344

Token 2473: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7929304242134094
    2. '       ' → logprob: -0.7929304242134094
    3. '   ' → logprob: -2.6679303646087646
    4. ']' → logprob: -3.7929303646087646
    5. ''' → logprob: -6.042930603027344
    6. '"]' → logprob: -8.542930603027344
    7. ' ' → logprob: -9.042930603027344
    8. '           ' → logprob: -9.292930603027344
    9. ' "' → logprob: -9.417930603027344
    10. '0' → logprob: -10.167930603027344

Token 2474: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00033045929740183055
    2. '   ' → logprob: -8.750330924987793
    3. '000' → logprob: -9.125330924987793
    4. '       ' → logprob: -10.250330924987793
    5. ''' → logprob: -11.500330924987793
    6. ' ' → logprob: -11.875330924987793
    7. '0' → logprob: -12.000330924987793
    8. ' "' → logprob: -13.000330924987793
    9. '	' → logprob: -14.375330924987793
    10. '```' → logprob: -14.750330924987793

Token 2475: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -14.875
    3. '"' → logprob: -16.875
    4. '00' → logprob: -17.625
    5. ''' → logprob: -18.5
    6. ' ' → logprob: -19.0
    7. '   ' → logprob: -19.375
    8. '
' → logprob: -20.0
    9. '  ' → logprob: -20.125
    10. '```' → logprob: -20.5

Token 2476: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.0026428408455103636
    2. '",' → logprob: -6.002642631530762
    3. '   ' → logprob: -9.877642631530762
    4. '"' → logprob: -10.377642631530762
    5. '',
' → logprob: -10.752642631530762
    6. ',
' → logprob: -10.877642631530762
    7. '",
' → logprob: -11.127642631530762
    8. '"]' → logprob: -11.502642631530762
    9. '       ' → logprob: -11.752642631530762
    10. ']",
' → logprob: -12.502642631530762

Token 2477: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005959964822977781
    2. '       ' → logprob: -5.255959987640381
    3. '   ' → logprob: -7.255959987640381
    4. ''' → logprob: -12.130959510803223
    5. ' ' → logprob: -12.505959510803223
    6. '000' → logprob: -12.630959510803223
    7. '0' → logprob: -12.755959510803223
    8. ' "' → logprob: -13.005959510803223
    9. '     ' → logprob: -14.505959510803223
    10. '           ' → logprob: -14.755959510803223

Token 2478: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -1.2233183042553719e-05
    2. '000' → logprob: -11.500012397766113
    3. ''' → logprob: -13.875012397766113
    4. '   ' → logprob: -14.500012397766113
    5. ' "' → logprob: -15.375012397766113
    6. '0' → logprob: -16.125011444091797
    7. ' ' → logprob: -16.375011444091797
    8. '	' → logprob: -16.500011444091797
    9. '       ' → logprob: -17.500011444091797
    10. '```' → logprob: -17.500011444091797

Token 2479: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -8.566264295950532e-05
    2. '"' → logprob: -9.375085830688477
    3. ''' → logprob: -14.625085830688477
    4. '0' → logprob: -16.000085830688477
    5. '00' → logprob: -16.625085830688477
    6. '"""' → logprob: -17.125085830688477
    7. ' ' → logprob: -18.000085830688477
    8. '   ' → logprob: -18.125085830688477
    9. '""' → logprob: -18.375085830688477
    10. '  ' → logprob: -19.000085830688477

Token 2480: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6081364750862122
    2. '"]' → logprob: -1.3581364154815674
    3. '   ' → logprob: -1.8581364154815674
    4. '"
' → logprob: -3.6081364154815674
    5. ']' → logprob: -4.2331366539001465
    6. ']"' → logprob: -7.3581366539001465
    7. '']' → logprob: -8.983136177062988
    8. '"]
' → logprob: -9.608136177062988
    9. ']
' → logprob: -10.358136177062988
    10. ']"
' → logprob: -10.733136177062988

Token 2481: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056010425090789795
    2. ']' → logprob: -2.9310104846954346
    3. '"]' → logprob: -7.5560102462768555
    4. ']
' → logprob: -7.9310102462768555
    5. ',
' → logprob: -9.431010246276855
    6. '"' → logprob: -9.931010246276855
    7. '']' → logprob: -10.056010246276855
    8. '[
' → logprob: -10.306010246276855
    9. ',' → logprob: -11.681010246276855
    10. '```' → logprob: -11.806010246276855

Token 2482: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019169762963429093
    2. '
' → logprob: -6.626916885375977
    3. 'class' → logprob: -7.751916885375977
    4. '```' → logprob: -9.751916885375977
    5. ']' → logprob: -10.876916885375977
    6. ']
' (adapté à ' ]
') → logprob: -11.001916885375977
    7. '  ' → logprob: -11.126916885375977
    8. '<|end|>' → logprob: -11.376916885375977
    9. '[' → logprob: -12.501916885375977
    10. '[
' → logprob: -12.501916885375977

Token 2483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11700086295604706
    2. 'char' → logprob: -2.8670008182525635
    3. '
' → logprob: -2.9920008182525635
    4. 'class' → logprob: -6.492001056671143
    5. '[' → logprob: -7.492001056671143
    6. '[
' → logprob: -7.617001056671143
    7. 'pattern' → logprob: -8.492000579833984
    8. '    
' → logprob: -8.867000579833984
    9. '```' → logprob: -9.492000579833984
    10. ':
' → logprob: -9.992000579833984

Token 2484: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -4.9186317482963204e-05
    2. 'class' → logprob: -10.500049591064453
    3. 'pattern' → logprob: -10.750049591064453
    4. ' char' → logprob: -15.625049591064453
    5. '
' → logprob: -17.875049591064453
    6. '_char' → logprob: -18.125049591064453
    7. '```' → logprob: -18.625049591064453
    8. '   ' → logprob: -19.250049591064453
    9. '.char' → logprob: -19.875049591064453
    10. '<char' → logprob: -21.375049591064453

Token 2485: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -2.5776860184123507e-06
    2. 'repr' → logprob: -13.37500286102295
    3. 'class' → logprob: -14.37500286102295
    4. 'char' → logprob: -15.12500286102295
    5. '_rep' → logprob: -16.500001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '=' → logprob: -18.500001907348633
    8. '_char' → logprob: -19.000001907348633
    9. 'represent' → logprob: -19.125001907348633
    10. '
' → logprob: -19.375001907348633

Token 2486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062470294535160065
    2. ' =' → logprob: -2.8124701976776123
    3. '='' → logprob: -7.937470436096191
    4. ''' → logprob: -8.937470436096191
    5. ' ='' → logprob: -11.562470436096191
    6. ''=' → logprob: -12.937470436096191
    7. ' '' → logprob: -13.812470436096191
    8. '   ' → logprob: -14.812470436096191
    9. ''s' → logprob: -15.437470436096191
    10. ' '='' → logprob: -16.062469482421875

Token 2487: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -9.372294698550832e-06
    2. ''' → logprob: -11.625009536743164
    3. ' '-'' → logprob: -15.500009536743164
    4. '-' → logprob: -16.000009536743164
    5. '('-' → logprob: -17.250009536743164
    6. '"-' → logprob: -17.875009536743164
    7. '’-' → logprob: -19.000009536743164
    8. ''\' → logprob: -19.500009536743164
    9. ''.' → logprob: -19.625009536743164
    10. ''''' → logprob: -19.750009536743164

Token 2488: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02267402783036232
    2. ''

' → logprob: -4.272674083709717
    3. ''
' → logprob: -4.772674083709717
    4. 'class' → logprob: -11.897673606872559
    5. ''class' → logprob: -12.522673606872559
    6. ''


' → logprob: -12.897673606872559
    7. '"' → logprob: -13.897673606872559
    8. ''
' → logprob: -14.147673606872559
    9. '   ' → logprob: -14.397673606872559
    10. ''

' → logprob: -14.772673606872559

Token 2489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6974605917930603
    2. 'class' → logprob: -0.9474605917930603
    3. '
' → logprob: -2.197460651397705
    4. '@' → logprob: -6.322460651397705
    5. '```' → logprob: -6.697460651397705
    6. ' class' → logprob: -8.322460174560547
    7. '    
' → logprob: -10.572460174560547
    8. ' @' → logprob: -11.572460174560547
    9. 'classmethod' → logprob: -11.947460174560547
    10. '@class' → logprob: -11.947460174560547

Token 2490: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.00012868782505393028
    2. 'class' → logprob: -9.000128746032715
    3. '   ' → logprob: -12.625128746032715
    4. '@class' → logprob: -13.500128746032715
    5. ' @' → logprob: -15.875128746032715
    6. '
' → logprob: -16.1251277923584
    7. 'classmethod' → logprob: -16.3751277923584
    8. '@property' → logprob: -16.3751277923584
    9. '@
' → logprob: -18.0001277923584
    10. '@click' → logprob: -18.6251277923584

Token 2491: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -3.128163257315464e-07
    2. 'staticmethod' → logprob: -15.5
    3. 'class' → logprob: -16.25
    4. 'property' → logprob: -21.75
    5. '@' → logprob: -22.0
    6. ' class' → logprob: -25.625
    7. '@class' → logprob: -26.125
    8. '"class' → logprob: -26.375
    9. '<class' → logprob: -26.5
    10. 'aclass' → logprob: -27.125

Token 2492: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005532792769372463
    2. '   ' → logprob: -5.880532741546631
    3. ' def' → logprob: -6.255532741546631
    4. '
' → logprob: -7.130532741546631
    5. '    
' → logprob: -13.255533218383789
    6. '  ' → logprob: -14.505533218383789
    7. '@' → logprob: -14.755533218383789
    8. '```' → logprob: -15.005533218383789
    9. '	def' → logprob: -15.130533218383789
    10. '\' → logprob: -15.630533218383789

Token 2493: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005349855404347181
    2. '   ' → logprob: -5.255349636077881
    3. '
' → logprob: -9.505350112915039
    4. ' def' → logprob: -10.255350112915039
    5. ':' → logprob: -13.130350112915039
    6. '	def' → logprob: -13.255350112915039
    7. '@' → logprob: -13.880350112915039
    8. '```' → logprob: -14.380350112915039
    9. ':def' → logprob: -15.255350112915039
    10. '(def' → logprob: -15.880350112915039

Token 2494: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007233949727378786
    2. 'try' → logprob: -7.250723361968994
    3. ' def' → logprob: -11.875723838806152
    4. 'async' → logprob: -12.250723838806152
    5. 'classmethod' → logprob: -14.500723838806152
    6. '   ' → logprob: -14.875723838806152
    7. '
' → logprob: -15.125723838806152
    8. 'return' → logprob: -15.875723838806152
    9. '@' → logprob: -16.250722885131836
    10. '```' → logprob: -16.500722885131836

Token 2495: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -5.512236498361744e-07
    2. ' try' → logprob: -14.625000953674316
    3. 'def' → logprob: -19.5
    4. '.try' → logprob: -20.25
    5. '
' → logprob: -21.25
    6. '_try' → logprob: -21.875
    7. '	try' → logprob: -22.0
    8. '  ' → logprob: -22.125
    9. '   ' → logprob: -22.375
    10. 'trying' → logprob: -22.5

Token 2496: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.00043102685594931245
    2. 'match' → logprob: -7.750431060791016
    3. 'Match' → logprob: -15.250431060791016
    4. 'def' → logprob: -16.875431060791016
    5. ' match' → logprob: -17.625431060791016
    6. '_MATCH' → logprob: -18.375431060791016
    7. '_' → logprob: -18.500431060791016
    8. '```' → logprob: -19.250431060791016
    9. '
' → logprob: -19.375431060791016
    10. 'classmethod' → logprob: -19.500431060791016

Token 2497: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.165027217415627e-05
    2. 'cls' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.00002098083496
    4. ' cls' → logprob: -18.12502098083496
    5. 'classmethod' → logprob: -18.12502098083496
    6. ' (' → logprob: -18.25002098083496
    7. '.cls' → logprob: -18.50002098083496
    8. '(
' → logprob: -18.87502098083496
    9. '(' → logprob: -18.87502098083496
    10. 'class' → logprob: -19.37502098083496

Token 2498: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.0683535037969705e-05
    2. ',' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.12501049041748
    4. 'cls' → logprob: -16.375011444091797
    5. '(' → logprob: -17.500011444091797
    6. '(clazz' → logprob: -17.500011444091797
    7. '(cl' → logprob: -17.500011444091797
    8. ' (' → logprob: -17.750011444091797
    9. '       ' → logprob: -17.875011444091797
    10. ' cls' → logprob: -18.625011444091797

Token 2499: ' points' (ID: 5571)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: 0.0
    2. ' cls' → logprob: -17.5
    3. 'points' → logprob: -20.0
    4. '(cls' → logprob: -20.375
    5. 'classmethod' → logprob: -22.875
    6. 'cl' → logprob: -23.625
    7. '.cls' → logprob: -23.875
    8. '   ' → logprob: -24.0
    9. 'class' → logprob: -24.5
    10. 'clazz' → logprob: -24.625

Token 2500: ':' (ID: 25)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -3.292907877039397e-06
    2. 'cls' → logprob: -12.75000286102295
    3. '(cl' → logprob: -15.87500286102295
    4. '   ' → logprob: -16.875003814697266
    5. '(clazz' → logprob: -17.625003814697266
    6. '(points' → logprob: -17.750003814697266
    7. ' (' → logprob: -17.750003814697266
    8. '       ' → logprob: -18.625003814697266
    9. ' cls' → logprob: -19.000003814697266
    10. '(c' → logprob: -19.125003814697266

Token 2501: ' Set' (ID: 3957)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -3.650518920039758e-06
    2. ' cls' → logprob: -13.000003814697266
    3. '(cls' → logprob: -13.750003814697266
    4. 'points' → logprob: -15.500003814697266
    5. 'class' → logprob: -18.125003814697266
    6. 'cl' → logprob: -18.625003814697266
    7. 'classmethod' → logprob: -19.125003814697266
    8. 'Cls' → logprob: -19.375003814697266
    9. '.cls' → logprob: -19.875003814697266
    10. 'Set' → logprob: -20.250003814697266

Token 2502: '[' (ID: 58)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.31476113200187683
    2. 'cls' → logprob: -1.3147611618041992
    3. 'points' → logprob: -6.814761161804199
    4. '(points' → logprob: -8.0647611618042
    5. '[' → logprob: -10.5647611618042
    6. '_cls' → logprob: -11.5647611618042
    7. '_points' → logprob: -11.6897611618042
    8. ' cls' → logprob: -11.8147611618042
    9. '<class' → logprob: -12.0647611618042
    10. 'Set' → logprob: -12.3147611618042

Token 2503: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. ' Point' → logprob: -16.875
    3. 'cls' → logprob: -18.0
    4. 'Points' → logprob: -19.5
    5. '.Point' → logprob: -20.5
    6. '	Point' → logprob: -20.5
    7. 'point' → logprob: -20.75
    8. '(Point' → logprob: -21.125
    9. '_Point' → logprob: -21.125
    10. '_point' → logprob: -21.5

Token 2504: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4285862057004124e-05
    2. '   ' → logprob: -11.37503433227539
    3. ',' → logprob: -11.50003433227539
    4. '):' → logprob: -12.12503433227539
    5. 'cls' → logprob: -13.25003433227539
    6. '(cls' → logprob: -13.37503433227539
    7. '):
' → logprob: -13.50003433227539
    8. '       ' → logprob: -13.50003433227539
    9. ' )' → logprob: -15.12503433227539
    10. ')
' → logprob: -16.00003433227539

Token 2505: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20796069502830505
    2. '(cls' → logprob: -2.457960605621338
    3. ':
' → logprob: -2.707960605621338
    4. '   ' → logprob: -3.832960605621338
    5. '->' → logprob: -4.957960605621338
    6. '       ' → logprob: -5.707960605621338
    7. ' ->' → logprob: -6.457960605621338
    8. 'def' → logprob: -7.332960605621338
    9. ':return' → logprob: -7.457960605621338
    10. '(' → logprob: -9.082961082458496

Token 2506: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0002613358374219388
    2. ' bool' → logprob: -8.250261306762695
    3. 'cls' → logprob: -17.125261306762695
    4. 'False' → logprob: -17.625261306762695
    5. 'Bool' → logprob: -17.625261306762695
    6. '(bool' → logprob: -19.000261306762695
    7. '<bool' → logprob: -19.000261306762695
    8. 'return' → logprob: -19.250261306762695
    9. ' ' → logprob: -19.625261306762695
    10. 'True' → logprob: -19.875261306762695

Token 2507: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1339254379272461
    2. ':
' → logprob: -2.133925437927246
    3. '(cls' → logprob: -5.383925437927246
    4. '       ' → logprob: -6.508925437927246
    5. '   ' → logprob: -7.758925437927246
    6. 'def' → logprob: -8.633925437927246
    7. '(' → logprob: -9.508925437927246
    8. ':return' → logprob: -10.133925437927246
    9. ':def' → logprob: -10.258925437927246
    10. ',' → logprob: -10.383925437927246

Token 2508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.183501293184236e-05
    2. '   ' → logprob: -10.25007152557373
    3. 'cls' → logprob: -10.62507152557373
    4. 'def' → logprob: -12.12507152557373
    5. '           ' → logprob: -12.62507152557373
    6. '
' → logprob: -14.12507152557373
    7. '(cls' → logprob: -14.12507152557373
    8. '@' → logprob: -14.75007152557373
    9. '      ' → logprob: -15.00007152557373
    10. '     ' → logprob: -15.00007152557373

Token 2509: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5928179025650024
    2. 'if' (adapté à ' if') → logprob: -0.8428179025650024
    3. '@' → logprob: -4.842817783355713
    4. 'cls' → logprob: -5.092817783355713
    5. 'def' → logprob: -6.467817783355713
    6. 'not' → logprob: -7.092817783355713
    7. '   ' → logprob: -8.342818260192871
    8. 'return' → logprob: -9.967818260192871
    9. '@if' → logprob: -11.467818260192871
    10. '           ' → logprob: -11.842818260192871

Token 2510: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01815614476799965
    2. ' not' → logprob: -4.018156051635742
    3. 'points' → logprob: -12.518156051635742
    4. 'len' → logprob: -13.893156051635742
    5. '   ' → logprob: -14.768156051635742
    6. 'n' → logprob: -14.768156051635742
    7. '
' → logprob: -15.393156051635742
    8. '       ' → logprob: -15.643156051635742
    9. '(not' → logprob: -16.268156051635742
    10. 'cls' → logprob: -16.393156051635742

Token 2511: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -7.052377623040229e-05
    2. 'cls' → logprob: -9.625070571899414
    3. ' points' → logprob: -13.125070571899414
    4. '(points' → logprob: -13.125070571899414
    5. 'bool' → logprob: -15.375070571899414
    6. 'not' → logprob: -16.250070571899414
    7. 'pts' → logprob: -17.125070571899414
    8. 'point' → logprob: -17.375070571899414
    9. 'parts' → logprob: -17.875070571899414
    10. '	points' → logprob: -18.000070571899414

Token 2512: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6669632792472839
    2. ':
' → logprob: -0.7919632792472839
    3. '           ' → logprob: -3.7919633388519287
    4. '       ' → logprob: -4.66696310043335
    5. '==' → logprob: -7.16696310043335
    6. ':return' → logprob: -8.666963577270508
    7. '   ' → logprob: -8.791963577270508
    8. '{
' → logprob: -8.791963577270508
    9. '[' → logprob: -8.791963577270508
    10. '=' → logprob: -9.291963577270508

Token 2513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1277281939983368
    2. '       ' → logprob: -2.127728223800659
    3. ' return' → logprob: -7.87772798538208
    4. 'return' → logprob: -8.127728462219238
    5. '               ' → logprob: -9.877728462219238
    6. '   ' → logprob: -10.752728462219238
    7. '        ' → logprob: -10.877728462219238
    8. '         ' → logprob: -11.252728462219238
    9. '          ' → logprob: -12.002728462219238
    10. 'False' → logprob: -12.752728462219238

Token 2514: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02985982969403267
    2. ' return' → logprob: -3.529859781265259
    3. 'False' → logprob: -9.27985954284668
    4. '       ' → logprob: -11.15485954284668
    5. '           ' → logprob: -13.90485954284668
    6. ':return' → logprob: -15.15485954284668
    7. '   ' → logprob: -15.65485954284668
    8. 'eturn' → logprob: -15.77985954284668
    9. '	return' → logprob: -16.02985954284668
    10. ' False' → logprob: -16.52985954284668

Token 2515: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.3306015716807451e-05
    2. ' False' → logprob: -11.25001335144043
    3. 'True' → logprob: -15.25001335144043
    4. '(False' → logprob: -19.75001335144043
    5. '=False' → logprob: -21.25001335144043
    6. '_false' → logprob: -21.37501335144043
    7. 'false' → logprob: -22.37501335144043
    8. 'F' → logprob: -22.50001335144043
    9. '.False' → logprob: -23.75001335144043
    10. '   ' → logprob: -24.37501335144043

Token 2516: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.1008713702030946e-06
    2. '
' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.750001907348633
    4. '           ' → logprob: -16.375001907348633
    5. ',' → logprob: -16.500001907348633
    6. '      ' → logprob: -17.000001907348633
    7. '	' → logprob: -17.250001907348633
    8. 'import' → logprob: -17.500001907348633
    9. '#' → logprob: -17.625001907348633
    10. '               ' → logprob: -18.000001907348633

Token 2517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.60414821645827e-06
    2. 'min' → logprob: -13.000004768371582
    3. '
' → logprob: -13.625004768371582
    4. 'class' → logprob: -15.375004768371582
    5. '   ' → logprob: -15.625004768371582
    6. ' min' → logprob: -15.750004768371582
    7. 'return' → logprob: -15.750004768371582
    8. '           ' → logprob: -15.875004768371582
    9. '```' → logprob: -16.500003814697266
    10. '      ' → logprob: -17.750003814697266

Token 2518: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038223594427108765
    2. 'min' (adapté à ' min') → logprob: -3.2882235050201416
    3. '
' → logprob: -8.913223266601562
    4. '#' → logprob: -10.788223266601562
    5. ' min' → logprob: -11.038223266601562
    6. '   ' → logprob: -12.288223266601562
    7. 'class' → logprob: -12.788223266601562
    8. '           ' → logprob: -14.038223266601562
    9. '(min' → logprob: -14.163223266601562
    10. 'return' → logprob: -14.538223266601562

Token 2519: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.0325924449716695e-05
    2. 'x' → logprob: -11.87501049041748
    3. '_' → logprob: -13.50001049041748
    4. 'import' → logprob: -14.50001049041748
    5. 'from' → logprob: -15.00001049041748
    6. 'def' → logprob: -15.00001049041748
    7. '<|end|>' → logprob: -15.87501049041748
    8. '_min' → logprob: -16.375009536743164
    9. '_=' → logprob: -16.500009536743164
    10. '_xlim' → logprob: -16.500009536743164

Token 2520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759406089782715
    2. ' =' → logprob: -0.8259406089782715
    3. '=
' → logprob: -14.45094108581543
    4. '=min' → logprob: -15.45094108581543
    5. '   ' → logprob: -16.20094108581543
    6. ' ' → logprob: -17.07594108581543
    7. ')' → logprob: -17.20094108581543
    8. ',' → logprob: -17.32594108581543
    9. 'import' → logprob: -17.32594108581543
    10. '=

' → logprob: -17.32594108581543

Token 2521: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.615255839889869e-05
    2. ' min' → logprob: -9.250096321105957
    3. '(min' → logprob: -19.00009536743164
    4. 'max' → logprob: -19.25009536743164
    5. 'minimum' → logprob: -20.50009536743164
    6. '[min' → logprob: -20.75009536743164
    7. '	min' → logprob: -21.12509536743164
    8. '0' → logprob: -21.50009536743164
    9. '=min' → logprob: -21.50009536743164
    10. '   ' → logprob: -22.12509536743164

Token 2522: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001249925117008388
    2. 'p' → logprob: -9.00012493133545
    3. '(' → logprob: -14.37512493133545
    4. '[p' → logprob: -14.87512493133545
    5. 'for' → logprob: -15.62512493133545
    6. '   ' → logprob: -16.375125885009766
    7. '(
' → logprob: -16.500125885009766
    8. '([' → logprob: -17.125125885009766
    9. ' p' → logprob: -17.375125885009766
    10. ' (' → logprob: -17.375125885009766

Token 2523: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07898243516683578
    2. '.x' → logprob: -2.828982353210449
    3. '(p' → logprob: -4.203982353210449
    4. '(x' → logprob: -6.328982353210449
    5. '_x' → logprob: -9.32898235321045
    6. '```' → logprob: -10.95398235321045
    7. '.p' → logprob: -11.32898235321045
    8. 'for' → logprob: -11.95398235321045
    9. ' x' → logprob: -12.07898235321045
    10. '{x' → logprob: -12.32898235321045

Token 2524: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012515541166067123
    2. ' for' → logprob: -4.387515544891357
    3. '(p' → logprob: -13.1375150680542
    4. ')' → logprob: -14.2625150680542
    5. '
' → logprob: -14.2625150680542
    6. 'p' → logprob: -15.0125150680542
    7. ',' → logprob: -15.0125150680542
    8. '[p' → logprob: -15.0125150680542
    9. '	for' → logprob: -15.1375150680542
    10. '   ' → logprob: -15.3875150680542

Token 2525: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0024837462697178125
    2. '(p' → logprob: -6.12748384475708
    3. 'points' → logprob: -8.752483367919922
    4. '[p' → logprob: -9.377483367919922
    5. ' p' → logprob: -10.627483367919922
    6. 'point' → logprob: -11.002483367919922
    7. 'for' → logprob: -11.377483367919922
    8. 'px' → logprob: -14.252483367919922
    9. '(points' → logprob: -15.002483367919922
    10. 'min' → logprob: -15.127483367919922

Token 2526: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.223446324467659
    2. 'x' → logprob: -1.7234463691711426
    3. ' for' → logprob: -4.723446369171143
    4. 'p' → logprob: -5.098446369171143
    5. 'points' → logprob: -5.098446369171143
    6. ' p' → logprob: -8.723445892333984
    7. '.points' → logprob: -9.223445892333984
    8. 'in' → logprob: -9.598445892333984
    9. '(points' → logprob: -9.598445892333984
    10. ' points' → logprob: -9.723445892333984

Token 2527: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0005034659989178181
    2. 'p' → logprob: -7.6255035400390625
    3. '(points' → logprob: -11.250503540039062
    4. ' points' → logprob: -13.375503540039062
    5. '.points' → logprob: -15.375503540039062
    6. 'point' → logprob: -15.625503540039062
    7. '[p' → logprob: -15.750503540039062
    8. '(p' → logprob: -15.750503540039062
    9. '	points' → logprob: -17.125503540039062
    10. '[' → logprob: -17.375503540039062

Token 2528: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13145028054714203
    2. ' for' → logprob: -2.1314501762390137
    3. ')' → logprob: -6.006450176239014
    4. '       ' → logprob: -6.256450176239014
    5. ')
' → logprob: -9.256450653076172
    6. '),' → logprob: -11.506450653076172
    7. '	for' → logprob: -11.881450653076172
    8. '
' → logprob: -12.006450653076172
    9. '           ' → logprob: -12.881450653076172
    10. ',' → logprob: -13.006450653076172

Token 2529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.0948158382670954e-05
    2. 'min' → logprob: -10.500030517578125
    3. ',' → logprob: -13.750030517578125
    4. '           ' → logprob: -14.125030517578125
    5. '   ' → logprob: -14.125030517578125
    6. ' min' → logprob: -14.875030517578125
    7. '      ' → logprob: -16.000030517578125
    8. '               ' → logprob: -16.250030517578125
    9. ',min' → logprob: -16.750030517578125
    10. 'import' → logprob: -16.875030517578125

Token 2530: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.0007102862582542002
    2. ' min' → logprob: -7.250710487365723
    3. '	min' → logprob: -16.125709533691406
    4. '       ' → logprob: -16.250709533691406
    5. '_min' → logprob: -17.125709533691406
    6. '.min' → logprob: -17.875709533691406
    7. '[min' → logprob: -18.000709533691406
    8. '(min' → logprob: -18.125709533691406
    9. 'max' → logprob: -18.375709533691406
    10. 'm' → logprob: -19.250709533691406

Token 2531: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.007733446080237627
    2. 'x' → logprob: -4.882733345031738
    3. '.x' → logprob: -10.007733345031738
    4. 'import' → logprob: -10.007733345031738
    5. '_y' → logprob: -10.882733345031738
    6. '```' → logprob: -12.132733345031738
    7. '   ' → logprob: -12.632733345031738
    8. '(p' → logprob: -13.632733345031738
    9. '=' → logprob: -14.132733345031738
    10. ' x' → logprob: -14.257733345031738

Token 2532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2548888623714447
    2. '=' → logprob: -1.504888892173767
    3. ' for' → logprob: -6.254889011383057
    4. 'for' → logprob: -6.879889011383057
    5. '<|end|>' → logprob: -13.254888534545898
    6. '=
' → logprob: -13.879888534545898
    7. ' ' → logprob: -14.629888534545898
    8. ')' → logprob: -14.879888534545898
    9. ' =
' → logprob: -15.004888534545898
    10. '(for' → logprob: -15.004888534545898

Token 2533: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0006666870322078466
    2. '(p' → logprob: -7.875666618347168
    3. '(min' → logprob: -8.500666618347168
    4. ' min' → logprob: -9.500666618347168
    5. '[p' → logprob: -12.625666618347168
    6. 'p' → logprob: -12.625666618347168
    7. '[min' → logprob: -13.375666618347168
    8. 'max' → logprob: -16.875667572021484
    9. 'int' → logprob: -17.000667572021484
    10. '.min' → logprob: -17.250667572021484

Token 2534: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0002060436672763899
    2. 'p' → logprob: -8.500205993652344
    3. '[p' → logprob: -14.125205993652344
    4. '(' → logprob: -14.750205993652344
    5. '   ' → logprob: -15.000205993652344
    6. 'for' → logprob: -15.750205993652344
    7. '(
' → logprob: -15.750205993652344
    8. ' p' → logprob: -15.750205993652344
    9. '```' → logprob: -16.000205993652344
    10. '[' → logprob: -16.625205993652344

Token 2535: '.y' (ID: 4486)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003000285243615508
    2. '(p' → logprob: -6.128000259399414
    3. ' for' → logprob: -7.128000259399414
    4. 'p' → logprob: -11.628000259399414
    5. '.p' → logprob: -14.003000259399414
    6. '(for' → logprob: -14.628000259399414
    7. '.for' → logprob: -14.753000259399414
    8. 'y' → logprob: -14.878000259399414
    9. ')' → logprob: -15.503000259399414
    10. 'x' → logprob: -15.628000259399414

Token 2536: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061990320682525635
    2. ' for' → logprob: -2.811990261077881
    3. '(p' → logprob: -10.811990737915039
    4. ')' → logprob: -14.061990737915039
    5. '(for' → logprob: -14.436990737915039
    6. '=' → logprob: -15.311990737915039
    7. '	for' → logprob: -16.06199073791504
    8. '
' → logprob: -16.18699073791504
    9. 'For' → logprob: -16.43699073791504
    10. 'p' → logprob: -16.56199073791504

Token 2537: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007655369583517313
    2. 'points' → logprob: -4.882655143737793
    3. '(p' → logprob: -10.507655143737793
    4. ' p' → logprob: -11.257655143737793
    5. '(points' → logprob: -12.382655143737793
    6. ' points' → logprob: -12.632655143737793
    7. '[p' → logprob: -14.507655143737793
    8. 'point' → logprob: -15.507655143737793
    9. 'Points' → logprob: -15.757655143737793
    10. 'oints' → logprob: -16.00765609741211

Token 2538: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1014975309371948
    2. ' in' → logprob: -1.3514975309371948
    3. 'points' → logprob: -1.7264975309371948
    4. 'in' → logprob: -2.4764976501464844
    5. 'p' → logprob: -3.2264976501464844
    6. '.points' → logprob: -3.2264976501464844
    7. ' for' → logprob: -3.3514976501464844
    8. '.p' → logprob: -4.476497650146484
    9. '(points' → logprob: -5.101497650146484
    10. '_points' → logprob: -5.476497650146484

Token 2539: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -7.898723561083898e-05
    2. 'p' → logprob: -9.875079154968262
    3. '(points' → logprob: -10.625079154968262
    4. ' points' → logprob: -13.250079154968262
    5. 'oints' → logprob: -14.375079154968262
    6. '(p' → logprob: -15.750079154968262
    7. '.points' → logprob: -15.750079154968262
    8. '[p' → logprob: -15.875079154968262
    9. '
' → logprob: -15.875079154968262
    10. '[' → logprob: -16.125078201293945

Token 2540: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4459933936595917
    2. ' for' → logprob: -1.070993423461914
    3. ')' → logprob: -4.445993423461914
    4. '       ' → logprob: -5.320993423461914
    5. ')
' → logprob: -7.695993423461914
    6. ',' → logprob: -11.070993423461914
    7. '
' → logprob: -11.195993423461914
    8. '),' → logprob: -11.570993423461914
    9. '	for' → logprob: -11.945993423461914
    10. '   ' → logprob: -12.320993423461914

Token 2541: '       ' (ID: 309)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.048935696482658386
    2. ' min' → logprob: -3.048935651779175
    3. 'max' → logprob: -8.173935890197754
    4. '       ' → logprob: -9.798935890197754
    5. '(min' → logprob: -12.923935890197754
    6. ' max' → logprob: -12.923935890197754
    7. '	min' → logprob: -13.298935890197754
    8. '=min' → logprob: -13.673935890197754
    9. '[min' → logprob: -13.673935890197754
    10. '```' → logprob: -14.673935890197754

Token 2542: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -7.896309739408025e-07
    2. ' max' → logprob: -14.250000953674316
    3. 'min' → logprob: -16.75
    4. '       ' → logprob: -20.5
    5. '
' → logprob: -22.375
    6. '	max' → logprob: -23.5
    7. '(max' → logprob: -24.25
    8. '_max' → logprob: -24.875
    9. 'maximum' → logprob: -25.0
    10. '   ' → logprob: -25.125

Token 2543: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.292907877039397e-06
    2. 'x' → logprob: -13.50000286102295
    3. '```' → logprob: -14.37500286102295
    4. '(p' → logprob: -14.75000286102295
    5. '_p' → logprob: -15.00000286102295
    6. '_' → logprob: -15.37500286102295
    7. ')_' → logprob: -15.87500286102295
    8. '_y' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.375003814697266
    10. ')' → logprob: -18.125003814697266

Token 2544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141655206680298
    2. '=' → logprob: -1.7014164924621582
    3. '=max' → logprob: -13.826416969299316
    4. '=min' → logprob: -13.951416969299316
    5. '=
' → logprob: -14.701416969299316
    6. ',' → logprob: -15.076416969299316
    7. ' for' → logprob: -15.576416969299316
    8. ' =
' → logprob: -16.326416015625
    9. '<|end|>' → logprob: -16.451416015625
    10. 'max' → logprob: -16.451416015625

Token 2545: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0031777136027812958
    2. ' max' → logprob: -5.753177642822266
    3. '(max' → logprob: -17.128177642822266
    4. 'min' → logprob: -19.253177642822266
    5. '[max' → logprob: -20.003177642822266
    6. '	max' → logprob: -20.003177642822266
    7. '=max' → logprob: -20.378177642822266
    8. '_max' → logprob: -21.003177642822266
    9. '.max' → logprob: -21.628177642822266
    10. ',max' → logprob: -21.753177642822266

Token 2546: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.000206401280593127
    2. 'p' → logprob: -8.500205993652344
    3. '[p' → logprob: -13.375205993652344
    4. ' p' → logprob: -14.250205993652344
    5. '```' → logprob: -15.750205993652344
    6. '(
' → logprob: -16.000205993652344
    7. 'import' → logprob: -16.750205993652344
    8. '<p' → logprob: -16.750205993652344
    9. 'for' → logprob: -17.000205993652344
    10. '...' → logprob: -17.125205993652344

Token 2547: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.001205350155942142
    2. 'x' → logprob: -6.7512054443359375
    3. '(p' → logprob: -11.126205444335938
    4. 'for' → logprob: -11.251205444335938
    5. '(x' → logprob: -13.001205444335938
    6. '```' → logprob: -13.251205444335938
    7. '_x' → logprob: -14.001205444335938
    8. '.p' → logprob: -14.251205444335938
    9. ')' → logprob: -15.126205444335938
    10. 'For' → logprob: -15.251205444335938

Token 2548: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20142590999603271
    2. ' for' → logprob: -1.7014259099960327
    3. ')' → logprob: -12.326425552368164
    4. '```' → logprob: -12.326425552368164
    5. '=' → logprob: -13.326425552368164
    6. '
' → logprob: -14.451425552368164
    7. ',' → logprob: -14.951425552368164
    8. '	for' → logprob: -15.326425552368164
    9. '   ' → logprob: -15.701425552368164
    10. ' =' → logprob: -16.076425552368164

Token 2549: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001656613196246326
    2. 'points' → logprob: -6.501656532287598
    3. '(p' → logprob: -9.376656532287598
    4. ' p' → logprob: -9.626656532287598
    5. '[p' → logprob: -13.001656532287598
    6. ' points' → logprob: -14.876656532287598
    7. '(points' → logprob: -15.626656532287598
    8. 'for' → logprob: -15.626656532287598
    9. '.p' → logprob: -16.001657485961914
    10. '-p' → logprob: -16.376657485961914

Token 2550: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5103172659873962
    2. ' for' → logprob: -2.135317325592041
    3. 'points' → logprob: -2.135317325592041
    4. '.points' → logprob: -2.510317325592041
    5. '(points' → logprob: -2.885317325592041
    6. ' points' → logprob: -4.885317325592041
    7. 'oints' → logprob: -4.885317325592041
    8. '(p' → logprob: -5.385317325592041
    9. '.p' → logprob: -6.260317325592041
    10. 'p' → logprob: -7.010317325592041

Token 2551: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00014561474381480366
    2. ' points' → logprob: -9.12514591217041
    3. '(points' → logprob: -10.62514591217041
    4. 'p' → logprob: -11.37514591217041
    5. '.points' → logprob: -15.62514591217041
    6. 'for' → logprob: -15.75014591217041
    7. '	points' → logprob: -16.125144958496094
    8. '[p' → logprob: -16.375144958496094
    9. '
' → logprob: -16.750144958496094
    10. '(p' → logprob: -16.875144958496094

Token 2552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6915305852890015
    2. '       ' → logprob: -0.8165305852890015
    3. '),' → logprob: -3.441530704498291
    4. ')
' → logprob: -3.941530704498291
    5. ',' → logprob: -5.441530704498291
    6. 'max' → logprob: -7.191530704498291
    7. 'for' → logprob: -7.816530704498291
    8. ')p' → logprob: -9.191530227661133
    9. ',max' → logprob: -10.316530227661133
    10. ')[' → logprob: -10.441530227661133

Token 2553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2852872610092163
    2. ',' → logprob: -2.160287380218506
    3. ' max' → logprob: -2.410287380218506
    4. 'max' → logprob: -3.285287380218506
    5. ',max' → logprob: -5.785287380218506
    6. ' and' → logprob: -6.785287380218506
    7. '=max' → logprob: -7.785287380218506
    8. '[max' → logprob: -8.160286903381348
    9. '(max' → logprob: -8.785286903381348
    10. '=' → logprob: -9.035286903381348

Token 2554: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -2.7968066206085496e-05
    2. ' max' → logprob: -10.500027656555176
    3. '(max' → logprob: -16.000028610229492
    4. '=max' → logprob: -16.125028610229492
    5. '.max' → logprob: -17.125028610229492
    6. '       ' → logprob: -17.375028610229492
    7. 'min' → logprob: -17.375028610229492
    8. ',max' → logprob: -17.500028610229492
    9. '_max' → logprob: -17.625028610229492
    10. '	max' → logprob: -17.750028610229492

Token 2555: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.481510692741722e-05
    2. 'x' → logprob: -10.25007438659668
    3. '_y' → logprob: -10.50007438659668
    4. '```' → logprob: -11.87507438659668
    5. '   ' → logprob: -13.00007438659668
    6. '(p' → logprob: -13.75007438659668
    7. '[' → logprob: -15.00007438659668
    8. '       ' → logprob: -15.62507438659668
    9. 'import' → logprob: -16.12507438659668
    10. 'X' → logprob: -16.12507438659668

Token 2556: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693189084529877
    2. '=' → logprob: -2.12693190574646
    3. '=max' → logprob: -13.001932144165039
    4. ' for' → logprob: -14.001932144165039
    5. 'for' → logprob: -15.251932144165039
    6. '=
' → logprob: -15.876932144165039
    7. '=min' → logprob: -16.12693214416504
    8. '       ' → logprob: -16.37693214416504
    9. 'max' → logprob: -16.50193214416504
    10. ' =
' → logprob: -17.25193214416504

Token 2557: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.2729995988775045e-06
    2. ' max' → logprob: -12.000006675720215
    3. '(max' → logprob: -17.2500057220459
    4. 'min' → logprob: -17.8750057220459
    5. '[max' → logprob: -20.2500057220459
    6. '	max' → logprob: -20.8750057220459
    7. '=max' → logprob: -22.0000057220459
    8. '.max' → logprob: -22.5000057220459
    9. '_max' → logprob: -23.1250057220459
    10. '           ' → logprob: -23.3750057220459

Token 2558: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.650518920039758e-06
    2. 'for' → logprob: -13.500003814697266
    3. '[p' → logprob: -14.125003814697266
    4. '(points' → logprob: -14.500003814697266
    5. 'p' → logprob: -15.625003814697266
    6. '(
' → logprob: -15.875003814697266
    7. '```' → logprob: -16.000003814697266
    8. 'For' → logprob: -16.750003814697266
    9. ' for' → logprob: -16.875003814697266
    10. '...' → logprob: -17.125003814697266

Token 2559: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.004555084742605686
    2. '.x' → logprob: -5.5045552253723145
    3. 'y' → logprob: -8.254554748535156
    4. '.p' → logprob: -9.504554748535156
    5. '_y' → logprob: -9.504554748535156
    6. '(p' → logprob: -9.879554748535156
    7. 'x' → logprob: -12.504554748535156
    8. 'for' → logprob: -12.629554748535156
    9. '[' → logprob: -13.254554748535156
    10. 'oints' → logprob: -13.254554748535156

Token 2560: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0055827065370976925
    2. ' for' → logprob: -5.505582809448242
    3. '(p' → logprob: -6.505582809448242
    4. '(for' → logprob: -12.880582809448242
    5. '[p' → logprob: -13.255582809448242
    6. 'For' → logprob: -14.130582809448242
    7. '_for' → logprob: -14.255582809448242
    8. '.for' → logprob: -14.505582809448242
    9. '```' → logprob: -14.755582809448242
    10. '(points' → logprob: -15.255582809448242

Token 2561: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3152109682559967
    2. 'p' → logprob: -1.3152109384536743
    3. ' p' → logprob: -6.940210819244385
    4. ' points' → logprob: -7.190210819244385
    5. '(points' → logprob: -8.940211296081543
    6. '(p' → logprob: -9.690211296081543
    7. 'for' → logprob: -11.565211296081543
    8. '[p' → logprob: -11.940211296081543
    9. 'class' → logprob: -12.190211296081543
    10. 'cls' → logprob: -12.940211296081543

Token 2562: ' in' (ID: 306)
  Prédit: '.points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.8091543912887573
    2. ' in' → logprob: -1.0591543912887573
    3. 'points' → logprob: -2.184154510498047
    4. ' for' → logprob: -3.559154510498047
    5. '.p' → logprob: -3.684154510498047
    6. ' points' → logprob: -4.309154510498047
    7. 'for' → logprob: -4.309154510498047
    8. 'in' → logprob: -5.184154510498047
    9. '(points' → logprob: -5.559154510498047
    10. '_points' → logprob: -6.809154510498047

Token 2563: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00012284684635233134
    2. ' points' → logprob: -9.375123023986816
    3. 'p' → logprob: -10.375123023986816
    4. '(points' → logprob: -12.000123023986816
    5. 'for' → logprob: -15.250123023986816
    6. '.points' → logprob: -16.2501220703125
    7. '	points' → logprob: -16.6251220703125
    8. ' p' → logprob: -17.3751220703125
    9. 'pts' → logprob: -17.5001220703125
    10. '
' → logprob: -17.6251220703125

Token 2564: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5488532781600952
    2. ')' → logprob: -1.0488532781600952
    3. 'for' → logprob: -2.9238533973693848
    4. ' for' → logprob: -4.173853397369385
    5. ',' → logprob: -6.173853397369385
    6. ')=' → logprob: -8.173852920532227
    7. ')>' → logprob: -9.798852920532227
    8. ']' → logprob: -9.923852920532227
    9. '),' → logprob: -10.048852920532227
    10. '   ' → logprob: -10.173852920532227

Token 2565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.255023956531659e-05
    2. '   ' → logprob: -10.750072479248047
    3. '           ' → logprob: -11.375072479248047
    4. ' return' → logprob: -11.750072479248047
    5. '      ' → logprob: -11.750072479248047
    6. '        ' → logprob: -12.000072479248047
    7. '     ' → logprob: -12.250072479248047
    8. 'return' → logprob: -12.250072479248047
    9. '               ' → logprob: -13.500072479248047
    10. '    ' → logprob: -13.750072479248047

Token 2566: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47929322719573975
    2. 'return' (adapté à ' return') → logprob: -0.9792932271957397
    3. ' return' → logprob: -5.354293346405029
    4. '	return' → logprob: -7.979293346405029
    5. '	' → logprob: -9.729292869567871
    6. ':return' → logprob: -9.979292869567871
    7. '   ' → logprob: -11.354292869567871
    8. '	   ' → logprob: -12.729292869567871
    9. ')return' → logprob: -13.229292869567871
    10. '```' → logprob: -13.354292869567871

Token 2567: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0005570820067077875
    2. ' cls' → logprob: -7.500556945800781
    3. '(cls' → logprob: -12.500556945800781
    4. '   ' → logprob: -15.750556945800781
    5. 'classmethod' → logprob: -16.62555694580078
    6. 'False' → logprob: -17.25055694580078
    7. '.cls' → logprob: -17.87555694580078
    8. 'cl' → logprob: -17.87555694580078
    9. 'Cls' → logprob: -18.25055694580078
    10. '_cls' → logprob: -18.25055694580078

Token 2568: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.0032153804786503315
    2. '.pattern' → logprob: -5.753215312957764
    3. 'match' → logprob: -11.128215789794922
    4. 'pattern' → logprob: -11.253215789794922
    5. '.' → logprob: -12.253215789794922
    6. '_match' → logprob: -14.003215789794922
    7. ' .' → logprob: -14.003215789794922
    8. '   ' → logprob: -14.378215789794922
    9. '._' → logprob: -14.378215789794922
    10. '.m' → logprob: -14.628215789794922

Token 2569: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.003016214817762375
    2. 'pattern' → logprob: -5.878015995025635
    3. 'cls' → logprob: -8.878016471862793
    4. '(cls' → logprob: -10.753016471862793
    5. 'Pattern' → logprob: -10.878016471862793
    6. '       ' → logprob: -11.128016471862793
    7. '   ' → logprob: -12.128016471862793
    8. '_class' → logprob: -12.253016471862793
    9. 'class' → logprob: -13.628016471862793
    10. '           ' → logprob: -14.378016471862793

Token 2570: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -5.5577775128767826e-06
    2. 'points' → logprob: -12.125005722045898
    3. '(cls' → logprob: -17.5000057220459
    4. '(
' → logprob: -17.5000057220459
    5. '	points' → logprob: -18.0000057220459
    6. '```' → logprob: -18.5000057220459
    7. '(parts' → logprob: -18.7500057220459
    8. '(' → logprob: -19.3750057220459
    9. ' points' → logprob: -19.3750057220459
    10. '(lines' → logprob: -19.7500057220459

Token 2571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03815210983157158
    2. '(points' → logprob: -3.2881522178649902
    3. 'points' → logprob: -9.413151741027832
    4. '       ' → logprob: -10.913151741027832
    5. ' points' → logprob: -13.163151741027832
    6. '   ' → logprob: -13.413151741027832
    7. ' ,' → logprob: -13.413151741027832
    8. '```' → logprob: -13.663151741027832
    9. ',p' → logprob: -13.913151741027832
    10. '[' → logprob: -14.038151741027832

Token 2572: ' min' (ID: 1349)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00021259987261146307
    2. 'min' → logprob: -8.500212669372559
    3. ' points' → logprob: -11.625212669372559
    4. '(points' → logprob: -16.375211715698242
    5. 'point' → logprob: -17.375211715698242
    6. '       ' → logprob: -18.125211715698242
    7. 'max' → logprob: -18.250211715698242
    8. '	points' → logprob: -18.375211715698242
    9. '   ' → logprob: -18.500211715698242
    10. '0' → logprob: -18.500211715698242

Token 2573: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.97024549683556e-05
    2. 'x' → logprob: -9.625080108642578
    3. '_y' → logprob: -12.500080108642578
    4. 'X' → logprob: -13.000080108642578
    5. 'points' → logprob: -13.250080108642578
    6. '_points' → logprob: -13.625080108642578
    7. '   ' → logprob: -14.500080108642578
    8. '_min' → logprob: -14.500080108642578
    9. '```' → logprob: -14.625080108642578
    10. '(p' → logprob: -14.750080108642578

Token 2574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.566264295950532e-05
    2. ' ,' → logprob: -9.500085830688477
    3. ',min' → logprob: -12.500085830688477
    4. '   ' → logprob: -13.625085830688477
    5. ',
' → logprob: -13.750085830688477
    6. ',p' → logprob: -13.750085830688477
    7. '       ' → logprob: -14.000085830688477
    8. '[' → logprob: -14.625085830688477
    9. '           ' → logprob: -15.375085830688477
    10. '        ' → logprob: -15.375085830688477

Token 2575: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002476724097505212
    2. ' min' → logprob: -6.002476692199707
    3. '_min' → logprob: -14.877476692199707
    4. '[min' → logprob: -15.002476692199707
    5. '(min' → logprob: -15.502476692199707
    6. '	min' → logprob: -16.252477645874023
    7. ',min' → logprob: -17.252477645874023
    8. '0' → logprob: -17.502477645874023
    9. 'max' → logprob: -17.752477645874023
    10. '   ' → logprob: -17.752477645874023

Token 2576: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0005249153473414481
    2. 'y' → logprob: -8.000524520874023
    3. '_x' → logprob: -8.625524520874023
    4. 'Y' → logprob: -12.125524520874023
    5. '_min' → logprob: -13.625524520874023
    6. 'x' → logprob: -13.750524520874023
    7. '_points' → logprob: -14.125524520874023
    8. '1' → logprob: -15.000524520874023
    9. 'min' → logprob: -15.250524520874023
    10. '```' → logprob: -15.750524520874023

Token 2577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.111979357432574e-05
    2. '(points' → logprob: -10.75007152557373
    3. ',p' → logprob: -11.00007152557373
    4. 'points' → logprob: -11.37507152557373
    5. ' ,' → logprob: -11.50007152557373
    6. '       ' → logprob: -12.50007152557373
    7. ',max' → logprob: -13.37507152557373
    8. ' points' → logprob: -13.62507152557373
    9. ',
' → logprob: -14.00007152557373
    10. '           ' → logprob: -14.25007152557373

Token 2578: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.15310683415737e-05
    2. ' max' → logprob: -10.750021934509277
    3. '(max' → logprob: -19.75002098083496
    4. 'min' → logprob: -21.37502098083496
    5. '[max' → logprob: -21.37502098083496
    6. '_max' → logprob: -21.50002098083496
    7. 'Max' → logprob: -21.75002098083496
    8. '   ' → logprob: -21.75002098083496
    9. '	max' → logprob: -22.00002098083496
    10. '       ' → logprob: -22.37502098083496

Token 2579: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0002714681322686374
    2. 'x' → logprob: -8.500271797180176
    3. 'max' → logprob: -9.750271797180176
    4. '_y' → logprob: -13.375271797180176
    5. 'X' → logprob: -13.500271797180176
    6. 'cls' → logprob: -13.500271797180176
    7. '_max' → logprob: -13.750271797180176
    8. '```' → logprob: -14.125271797180176
    9. '   ' → logprob: -14.375271797180176
    10. ',' → logprob: -14.750271797180176

Token 2580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002128382766386494
    2. ' ,' → logprob: -8.750212669372559
    3. ',p' → logprob: -11.250212669372559
    4. ',
' → logprob: -11.375212669372559
    5. '       ' → logprob: -11.875212669372559
    6. ',min' → logprob: -12.875212669372559
    7. '[' → logprob: -13.125212669372559
    8. '           ' → logprob: -13.500212669372559
    9. '   ' → logprob: -13.625212669372559
    10. '        ' → logprob: -13.625212669372559

Token 2581: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00027432903880253434
    2. ' min' → logprob: -8.250274658203125
    3. 'max' → logprob: -11.250274658203125
    4. '_min' → logprob: -17.875274658203125
    5. '[min' → logprob: -18.375274658203125
    6. ' max' → logprob: -19.500274658203125
    7. '	min' → logprob: -19.500274658203125
    8. '(min' → logprob: -20.000274658203125
    9. '   ' → logprob: -20.750274658203125
    10. ',min' → logprob: -20.875274658203125

Token 2582: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.19460691511631012
    2. '_x' → logprob: -1.819606900215149
    3. 'max' → logprob: -4.944606781005859
    4. 'min' → logprob: -5.944606781005859
    5. ',' → logprob: -6.069606781005859
    6. '_min' → logprob: -7.444606781005859
    7. '_,' → logprob: -7.694606781005859
    8. '_points' → logprob: -7.694606781005859
    9. '```' → logprob: -8.31960678100586
    10. '_max' → logprob: -8.31960678100586

Token 2583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.472211968386546e-05
    2. '       ' → logprob: -10.125094413757324
    3. ',
' → logprob: -10.750094413757324
    4. ' ,' → logprob: -11.750094413757324
    5. ')' → logprob: -11.875094413757324
    6. '   ' → logprob: -12.000094413757324
    7. '           ' → logprob: -12.750094413757324
    8. '<|end|>' → logprob: -13.125094413757324
    9. '
' → logprob: -14.250094413757324
    10. '                     ' → logprob: -14.375094413757324

Token 2584: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0019291093340143561
    2. ' cls' → logprob: -6.25192928314209
    3. '(cls' → logprob: -14.75192928314209
    4. '.cls' → logprob: -16.501928329467773
    5. 'cl' → logprob: -16.876928329467773
    6. '_cls' → logprob: -18.001928329467773
    7. '   ' → logprob: -18.876928329467773
    8. 'classmethod' → logprob: -19.126928329467773
    9. 'Cls' → logprob: -19.126928329467773
    10. 'class' → logprob: -19.501928329467773

Token 2585: '.pattern' (ID: 76901)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032882285304367542
    2. ',max' → logprob: -6.128288269042969
    3. '[' → logprob: -8.253288269042969
    4. ',p' → logprob: -8.378288269042969
    5. 'pattern' → logprob: -8.378288269042969
    6. ',min' → logprob: -9.753288269042969
    7. 'max' → logprob: -10.003288269042969
    8. ',
' → logprob: -10.378288269042969
    9. '```' → logprob: -10.503288269042969
    10. '.pattern' → logprob: -10.503288269042969

Token 2586: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2587: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09261292219161987
    2. 'CHAR' → logprob: -3.0926129817962646
    3. 'character' → logprob: -3.9676129817962646
    4. 'def' → logprob: -3.9676129817962646
    5. '#' → logprob: -6.2176127433776855
    6. 'all' → logprob: -6.9676127433776855
    7. 'characters' → logprob: -7.3426127433776855
    8. 'char' → logprob: -7.5926127433776855
    9. 'available' → logprob: -8.342613220214844
    10. 'ALL' → logprob: -8.342613220214844

Token 2588: ' Dot' (ID: 49413)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.050650592893362045
    2. 'def' → logprob: -4.050650596618652
    3. 'character' → logprob: -4.300650596618652
    4. 'CHAR' → logprob: -4.425650596618652
    5. '#' → logprob: -5.425650596618652
    6. 'characters' → logprob: -7.175650596618652
    7. 'char' → logprob: -7.550650596618652
    8. 'all' → logprob: -7.925650596618652
    9. 'available' → logprob: -9.300650596618652
    10. 'ALL' → logprob: -9.675650596618652

Token 2589: ' (' (ID: 350)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -7.465036105713807e-06
    2. '.
' → logprob: -12.750007629394531
    3. '
' → logprob: -13.000007629394531
    4. ' class' → logprob: -14.000007629394531
    5. '.' → logprob: -14.625007629394531
    6. '(
' → logprob: -14.750007629394531
    7. '```' → logprob: -15.375007629394531
    8. '#' → logprob: -16.37500762939453
    9. '#
' → logprob: -16.75000762939453
    10. 'pattern' → logprob: -16.75000762939453

Token 2590: 'multip' (ID: 163898)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.861651490908116e-05
    2. '
' → logprob: -10.875068664550781
    3. ' class' → logprob: -11.500068664550781
    4. '#' → logprob: -11.625068664550781
    5. ')' → logprob: -11.625068664550781
    6. 'pattern' → logprob: -12.125068664550781
    7. '```' → logprob: -12.125068664550781
    8. '.
' → logprob: -12.625068664550781
    9. '[
' → logprob: -13.625068664550781
    10. '.' → logprob: -13.750068664550781

Token 2591: 'lication' (ID: 2389)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.37551310658454895
    2. 'le' → logprob: -1.2505130767822266
    3. 'class' → logprob: -4.000513076782227
    4. '
' → logprob: -5.375513076782227
    5. 'attern' → logprob: -6.875513076782227
    6. 'at' → logprob: -7.250513076782227
    7. 'line' → logprob: -7.375513076782227
    8. 'ointed' → logprob: -8.500513076782227
    9. '```' → logprob: -8.625513076782227
    10. 'atch' → logprob: -9.125513076782227

Token 2592: ' symbol' (ID: 10038)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005037713795900345
    2. ')
' → logprob: -5.880037784576416
    3. ')' → logprob: -7.005037784576416
    4. '.
' → logprob: -7.255037784576416
    5. ' class' → logprob: -8.630037307739258
    6. '
' → logprob: -8.880037307739258
    7. '(
' → logprob: -9.255037307739258
    8. '.' → logprob: -10.255037307739258
    9. '#' → logprob: -10.255037307739258
    10. '):
' → logprob: -10.630037307739258

Token 2593: ' '' (ID: 461)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0005736440070904791
    2. ')
' → logprob: -8.375574111938477
    3. '
' → logprob: -8.500574111938477
    4. ' class' → logprob: -9.625574111938477
    5. '.
' → logprob: -10.750574111938477
    6. '):
' → logprob: -11.375574111938477
    7. ')' → logprob: -11.375574111938477
    8. '(
' → logprob: -12.000574111938477
    9. '#' → logprob: -12.375574111938477
    10. '(class' → logprob: -12.500574111938477

Token 2594: '・' (ID: 4156)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.2644823789596558
    2. '.')
' → logprob: -1.5144823789596558
    3. '.')' → logprob: -2.0144824981689453
    4. '')' → logprob: -2.5144824981689453
    5. '')
' → logprob: -2.6394824981689453
    6. '.' → logprob: -3.0144824981689453
    7. '*' → logprob: -3.3894824981689453
    8. ''' → logprob: -3.5144824981689453
    9. ''.' → logprob: -3.5144824981689453
    10. '.'' → logprob: -3.7644824981689453

Token 2595: ''):' (ID: 83830)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2660810649394989
    2. '')
' → logprob: -2.3910810947418213
    3. '')' → logprob: -2.5160810947418213
    4. ''):
' → logprob: -3.2660810947418213
    5. ''' → logprob: -5.266080856323242
    6. ''):' → logprob: -5.516080856323242
    7. '.')
' → logprob: -5.641080856323242
    8. '.' → logprob: -5.641080856323242
    9. '.')' → logprob: -5.891080856323242
    10. '.'' → logprob: -7.391080856323242

Token 2596: ' a' (ID: 261)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -14.000000953674316
    3. 'pattern' → logprob: -17.0
    4. ' class' → logprob: -18.0
    5. '[
' → logprob: -18.0
    6. '```' → logprob: -18.25
    7. '"class' → logprob: -18.25
    8. '#' → logprob: -19.25
    9. '<class' → logprob: -20.25
    10. '"""
' → logprob: -21.0

Token 2597: ' single' (ID: 4590)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7056906819343567
    2. '[
' → logprob: -0.8306906819343567
    3. 'pattern' → logprob: -3.330690622329712
    4. '[' → logprob: -3.580690622329712
    5. 'single' → logprob: -5.705690860748291
    6. '["' → logprob: -6.205690860748291
    7. ' class' → logprob: -7.830690860748291
    8. ' [
' → logprob: -7.955690860748291
    9. 'point' → logprob: -8.330690383911133
    10. ' pattern' → logprob: -9.830690383911133

Token 2598: ' dot' (ID: 16579)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.9178244471549988
    2. '"' → logprob: -1.1678245067596436
    3. '[' → logprob: -1.5428245067596436
    4. 'class' → logprob: -3.5428245067596436
    5. 'point' → logprob: -4.4178242683410645
    6. 'Point' → logprob: -4.7928242683410645
    7. '["' → logprob: -4.9178242683410645
    8. 'pattern' → logprob: -5.0428242683410645
    9. '"class' → logprob: -5.6678242683410645
    10. '   ' → logprob: -5.7928242683410645

Token 2599: ' (' (ID: 350)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.227250610711053e-05
    2. '
' → logprob: -10.375041961669922
    3. '.
' → logprob: -12.250041961669922
    4. ' class' → logprob: -14.000041961669922
    5. '(
' → logprob: -14.000041961669922
    6. '.' → logprob: -14.000041961669922
    7. '#' → logprob: -14.250041961669922
    8. 'pattern' → logprob: -14.250041961669922
    9. '   ' → logprob: -14.750041961669922
    10. '[
' → logprob: -14.875041961669922

Token 2600: 'or' (ID: 267)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.2699057459831238
    2. 'class' → logprob: -1.5199058055877686
    3. '[' → logprob: -4.2699055671691895
    4. '["' → logprob: -7.2699055671691895
    5. '.' → logprob: -7.2699055671691895
    6. '   ' → logprob: -8.019906044006348
    7. ')' → logprob: -8.019906044006348
    8. '
' → logprob: -8.269906044006348
    9. '[class' → logprob: -8.394906044006348
    10. '"class' → logprob: -8.394906044006348

Token 2601: ' small' (ID: 3291)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.37254494428634644
    2. 'class' → logprob: -1.3725450038909912
    3. '#' → logprob: -4.122544765472412
    4. 'single' → logprob: -4.997544765472412
    5. '[
' → logprob: -5.122544765472412
    6. 'point' → logprob: -5.122544765472412
    7. 'a' → logprob: -5.372544765472412
    8. '"' → logprob: -5.372544765472412
    9. '
' → logprob: -5.622544765472412
    10. 'one' → logprob: -6.372544765472412

Token 2602: ' square' (ID: 13749)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.3309502601623535
    2. 'set' → logprob: -1.7059502601623535
    3. '
' → logprob: -1.8309502601623535
    4. 'Point' → logprob: -2.4559502601623535
    5. ' set' → logprob: -2.8309502601623535
    6. ' point' → logprob: -2.9559502601623535
    7. '{' → logprob: -3.7059502601623535
    8. '```' → logprob: -3.7059502601623535
    9. ' ' → logprob: -4.0809502601623535
    10. '"' → logprob: -4.2059502601623535

Token 2603: ')' (ID: 8)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.43041643500328064
    2. '   ' → logprob: -1.305416464805603
    3. 'class' → logprob: -2.9304163455963135
    4. '[' → logprob: -5.055416584014893
    5. ')
' → logprob: -5.180416584014893
    6. ')' → logprob: -5.555416584014893
    7. '#' → logprob: -6.430416584014893
    8. '")' → logprob: -6.430416584014893
    9. '       ' → logprob: -7.180416584014893
    10. '(
' → logprob: -7.430416584014893

Token 2604: ' in' (ID: 306)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.580929347255733e-05
    2. '
' → logprob: -11.250016212463379
    3. '#' → logprob: -14.125016212463379
    4. '[
' → logprob: -14.375016212463379
    5. '```' → logprob: -14.875016212463379
    6. 'pattern' → logprob: -15.375016212463379
    7. ' class' → logprob: -15.750016212463379
    8. '#
' → logprob: -15.750016212463379
    9. '.
' → logprob: -15.875016212463379
    10. '   ' → logprob: -16.000015258789062

Token 2605: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5466592907905579
    2. '[
' → logprob: -1.171659231185913
    3. 'class' → logprob: -2.671659231185913
    4. 'center' → logprob: -3.921659231185913
    5. 'a' → logprob: -4.796659469604492
    6. '#' → logprob: -6.171659469604492
    7. 'one' → logprob: -6.421659469604492
    8. '
' → logprob: -6.546659469604492
    9. 'middle' → logprob: -6.546659469604492
    10. ' the' → logprob: -6.671659469604492

Token 2606: ' middle' (ID: 10006)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.02306271530687809
    2. 'middle' → logprob: -4.148062705993652
    3. 'pattern' → logprob: -5.523062705993652
    4. '[
' → logprob: -6.273062705993652
    5. 'class' → logprob: -7.648062705993652
    6. '
' → logprob: -8.398062705993652
    7. '[' → logprob: -8.648062705993652
    8. 'central' → logprob: -9.648062705993652
    9. '"""
' → logprob: -10.148062705993652
    10. ' center' → logprob: -10.398062705993652

Token 2607: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.0259150157216936e-05
    2. '
' → logprob: -10.00005054473877
    3. '.
' → logprob: -13.62505054473877
    4. '#' → logprob: -13.75005054473877
    5. ' class' → logprob: -14.00005054473877
    6. 'pattern' → logprob: -15.00005054473877
    7. '#
' → logprob: -15.00005054473877
    8. '```' → logprob: -15.37505054473877
    9. '.' → logprob: -16.000049591064453
    10. '(
' → logprob: -16.250049591064453

Token 2608: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.5
    3. 'pattern' → logprob: -16.125
    4. ' class' → logprob: -17.5
    5. '"class' → logprob: -17.5
    6. '#' → logprob: -18.375
    7. '```' → logprob: -18.375
    8. '.' → logprob: -18.875
    9. '.
' → logprob: -19.625
    10. '   ' → logprob: -20.25

Token 2609: ' Dot' (ID: 49413)
  Prédit: 'Dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dot' → logprob: -0.001148313982412219
    2. 'class' → logprob: -7.001148223876953
    3. 'Digit' → logprob: -9.001148223876953
    4. 'Character' → logprob: -9.376148223876953
    5. ' Dot' → logprob: -11.751148223876953
    6. 'dot' → logprob: -12.126148223876953
    7. 'Class' → logprob: -12.376148223876953
    8. 'Point' → logprob: -13.001148223876953
    9. 'Multip' → logprob: -13.001148223876953
    10. ' class' → logprob: -13.501148223876953

Token 2610: '(Character' (ID: 129018)
  Prédit: '(Character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Character' → logprob: -0.01310858316719532
    2. ':
' → logprob: -4.638108730316162
    3. ':' → logprob: -6.638108730316162
    4. 'class' → logprob: -7.263108730316162
    5. '   ' → logprob: -7.513108730316162
    6. '(
' → logprob: -8.013108253479004
    7. '<Character' → logprob: -8.638108253479004
    8. 'Character' → logprob: -9.513108253479004
    9. '(character' → logprob: -10.513108253479004
    10. '(' → logprob: -10.638108253479004

Token 2611: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008016243577003479
    2. '   ' → logprob: -4.883016109466553
    3. '):' → logprob: -8.008016586303711
    4. ':
' → logprob: -9.758016586303711
    5. 'class' → logprob: -11.508016586303711
    6. 'pattern' → logprob: -12.633016586303711
    7. ')' → logprob: -13.383016586303711
    8. '):
' → logprob: -13.508016586303711
    9. '=' → logprob: -14.258016586303711
    10. '  ' → logprob: -14.258016586303711

Token 2612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005989351309835911
    2. 'pattern' → logprob: -5.1309895515441895
    3. ' pattern' → logprob: -9.755989074707031
    4. '(pattern' → logprob: -14.130989074707031
    5. 'class' → logprob: -14.255989074707031
    6. 'pat' → logprob: -14.755989074707031
    7. '```' → logprob: -14.880989074707031
    8. '       ' → logprob: -15.755989074707031
    9. '   ' → logprob: -15.755989074707031
    10. '  ' → logprob: -16.63098907470703

Token 2613: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -15.625
    3. ' pattern' → logprob: -17.0
    4. 'class' → logprob: -20.25
    5. '
' → logprob: -20.375
    6. 'char' → logprob: -20.875
    7. '#' → logprob: -21.125
    8. ' ' → logprob: -21.75
    9. 'pat' → logprob: -22.625
    10. 'character' → logprob: -23.5

Token 2614: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029034316539764
    2. '=' → logprob: -2.350290298461914
    3. '=[
' → logprob: -9.975290298461914
    4. '   ' → logprob: -10.350290298461914
    5. '=[' → logprob: -13.475290298461914
    6. '=
' → logprob: -13.725290298461914
    7. ':' → logprob: -13.725290298461914
    8. '[
' → logprob: -14.850290298461914
    9. ' =
' → logprob: -15.100290298461914
    10. '  ' → logprob: -15.475290298461914

Token 2615: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.0025113318115472794
    2. '[' → logprob: -6.002511501312256
    3. '["' → logprob: -10.502511024475098
    4. '   ' → logprob: -11.752511024475098
    5. ' [
' → logprob: -15.252511024475098
    6. '['' → logprob: -17.002511978149414
    7. ' [' → logprob: -19.127511978149414
    8. '[\' → logprob: -19.877511978149414
    9. '[`' → logprob: -20.502511978149414
    10. ' ' → logprob: -20.752511978149414

Token 2616: '       ' (ID: 309)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.8725426197052002
    2. '       ' → logprob: -1.1225426197052002
    3. '   ' → logprob: -1.6225426197052002
    4. '"' → logprob: -2.8725426197052
    5. '[' → logprob: -6.497542381286621
    6. '["' → logprob: -6.747542381286621
    7. '     ' → logprob: -11.497542381286621
    8. ' ' → logprob: -11.747542381286621
    9. '           ' → logprob: -13.372542381286621
    10. '  ' → logprob: -13.622542381286621

Token 2617: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -1.747814349073451e-05
    2. '[
' → logprob: -11.750017166137695
    3. '000' → logprob: -12.750017166137695
    4. ''' → logprob: -12.875017166137695
    5. '   ' → logprob: -13.125017166137695
    6. '"""' → logprob: -14.500017166137695
    7. '["' → logprob: -15.000017166137695
    8. ' "' → logprob: -15.125017166137695
    9. '"""
' → logprob: -15.375017166137695
    10. ' ' → logprob: -15.500017166137695

Token 2618: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11417287588119507
    2. '000' → logprob: -2.23917293548584
    3. ''' → logprob: -7.73917293548584
    4. '001' → logprob: -7.86417293548584
    5. '0' → logprob: -8.23917293548584
    6. '"""' → logprob: -8.98917293548584
    7. ' "' → logprob: -10.61417293548584
    8. '"""
' → logprob: -10.61417293548584
    9. '"
' → logprob: -10.86417293548584
    10. '010' → logprob: -11.36417293548584

Token 2619: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.01737058162689209
    2. '",' → logprob: -4.142370700836182
    3. '"' → logprob: -7.142370700836182
    4. '000' → logprob: -8.392370223999023
    5. '","' → logprob: -9.517370223999023
    6. '       ' → logprob: -9.767370223999023
    7. '   ' → logprob: -9.767370223999023
    8. '",
' → logprob: -9.767370223999023
    9. '[' → logprob: -11.392370223999023
    10. '010' → logprob: -11.517370223999023

Token 2620: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06235909461975098
    2. '       ' → logprob: -2.812359094619751
    3. '   ' → logprob: -8.562358856201172
    4. '000' → logprob: -9.062358856201172
    5. ' ' → logprob: -10.937358856201172
    6. '"\' → logprob: -10.937358856201172
    7. '010' → logprob: -10.937358856201172
    8. '0' → logprob: -11.562358856201172
    9. '	' → logprob: -11.687358856201172
    10. ''' → logprob: -12.312358856201172

Token 2621: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00020532844064291567
    2. '       ' → logprob: -8.875205039978027
    3. '000' → logprob: -9.750205039978027
    4. ''' → logprob: -12.750205039978027
    5. '   ' → logprob: -13.125205039978027
    6. '0' → logprob: -14.500205039978027
    7. ' ' → logprob: -14.500205039978027
    8. ' "' → logprob: -15.250205039978027
    9. '010' → logprob: -15.250205039978027
    10. '	' → logprob: -15.750205039978027

Token 2622: '010' (ID: 13522)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007030423264950514
    2. '010' → logprob: -5.507030487060547
    3. '000' → logprob: -6.007030487060547
    4. '001' → logprob: -7.757030487060547
    5. ''' → logprob: -10.007030487060547
    6. '0' → logprob: -11.882030487060547
    7. ' ' → logprob: -13.132030487060547
    8. ' "' → logprob: -13.632030487060547
    9. '"""' → logprob: -13.632030487060547
    10. '011' → logprob: -15.132030487060547

Token 2623: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.04169096425175667
    2. '",' → logprob: -3.2916910648345947
    3. ',
' → logprob: -6.916690826416016
    4. '"' → logprob: -6.916690826416016
    5. '<|end|>' → logprob: -7.291690826416016
    6. '       ' → logprob: -7.791690826416016
    7. '\n' → logprob: -8.666690826416016
    8. '","' → logprob: -9.291690826416016
    9. ',' → logprob: -9.541690826416016
    10. '",
' → logprob: -9.791690826416016

Token 2624: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38700705766677856
    2. '       ' → logprob: -1.1370069980621338
    3. '   ' → logprob: -9.637006759643555
    4. ''' → logprob: -10.387006759643555
    5. ' "' → logprob: -11.012006759643555
    6. '0' → logprob: -11.762006759643555
    7. '	' → logprob: -12.512006759643555
    8. ' ' → logprob: -12.762006759643555
    9. '[' → logprob: -13.137006759643555
    10. '      ' → logprob: -13.262006759643555

Token 2625: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -1.3663626305060461e-05
    2. '000' → logprob: -11.75001335144043
    3. '       ' → logprob: -13.37501335144043
    4. '   ' → logprob: -14.00001335144043
    5. ' "' → logprob: -14.12501335144043
    6. ' ' → logprob: -14.12501335144043
    7. '010' → logprob: -14.37501335144043
    8. ''' → logprob: -14.50001335144043
    9. '	' → logprob: -15.50001335144043
    10. '"
' → logprob: -16.12501335144043

Token 2626: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.04408397153019905
    2. '"' → logprob: -3.669084072113037
    3. '010' → logprob: -4.044084072113037
    4. ''' → logprob: -9.794083595275879
    5. '0' → logprob: -10.544083595275879
    6. '"""' → logprob: -11.669083595275879
    7. '001' → logprob: -12.419083595275879
    8. ' ' → logprob: -12.919083595275879
    9. '"""
' → logprob: -14.169083595275879
    10. ' "' → logprob: -14.294083595275879

Token 2627: '"
' (ID: 1092)
  Prédit: '",
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.10529588162899017
    2. '",' → logprob: -2.3552958965301514
    3. '"' → logprob: -5.480295658111572
    4. '   ' → logprob: -8.23029613494873
    5. '"]' → logprob: -8.23029613494873
    6. '       ' → logprob: -8.98029613494873
    7. ',
' → logprob: -9.48029613494873
    8. '"
' → logprob: -9.98029613494873
    9. '',
' → logprob: -9.98029613494873
    10. ']' → logprob: -10.60529613494873

Token 2628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45825809240341187
    2. ',
' → logprob: -1.8332581520080566
    3. ']' → logprob: -2.0832581520080566
    4. ',' → logprob: -2.5832581520080566
    5. '       ' → logprob: -5.208258152008057
    6. '[
' → logprob: -6.583258152008057
    7. '"' → logprob: -7.833258152008057
    8. '[' → logprob: -9.458257675170898
    9. '",' → logprob: -9.583257675170898
    10. '"]' → logprob: -9.958257675170898

Token 2629: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16363416612148285
    2. ']' → logprob: -1.913634181022644
    3. ']
' (adapté à ' ]
') → logprob: -6.413634300231934
    4. ',
' → logprob: -6.663634300231934
    5. '"' → logprob: -8.163634300231934
    6. ',' → logprob: -9.038634300231934
    7. '[
' → logprob: -11.038634300231934
    8. '"]' → logprob: -11.413634300231934
    9. '.' → logprob: -11.413634300231934
    10. ''' → logprob: -11.538634300231934

Token 2630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009439305402338505
    2. 'class' → logprob: -5.634439468383789
    3. 'char' → logprob: -5.634439468383789
    4. '[
' → logprob: -6.509439468383789
    5. '
' → logprob: -8.509439468383789
    6. 'pattern' → logprob: -8.509439468383789
    7. '[' → logprob: -8.634439468383789
    8. '```' → logprob: -9.884439468383789
    9. '{
' → logprob: -10.759439468383789
    10. '  ' → logprob: -11.009439468383789

Token 2631: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -3.128163257315464e-07
    2. ' char' → logprob: -15.75
    3. 'pattern' → logprob: -17.75
    4. 'class' → logprob: -18.0
    5. '
' → logprob: -19.75
    6. '   ' → logprob: -20.625
    7. '_char' → logprob: -22.875
    8. '.char' → logprob: -22.875
    9. '	char' → logprob: -23.875
    10. '```' → logprob: -23.875

Token 2632: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -2.1008713702030946e-06
    2. 'repr' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.375001907348633
    4. 'char' → logprob: -15.625001907348633
    5. '_rep' → logprob: -16.000001907348633
    6. '```' → logprob: -17.000001907348633
    7. '
' → logprob: -17.250001907348633
    8. ''_' → logprob: -17.875001907348633
    9. '_char' → logprob: -18.625001907348633
    10. '<|end|>' → logprob: -18.750001907348633

Token 2633: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1798890233039856
    2. ' =' → logprob: -1.8048889636993408
    3. '='' → logprob: -9.054888725280762
    4. ' ='' → logprob: -10.679888725280762
    5. '   ' → logprob: -13.304888725280762
    6. ''=' → logprob: -14.054888725280762
    7. ''' → logprob: -14.179888725280762
    8. '=
' → logprob: -14.929888725280762
    9. ':' → logprob: -15.304888725280762
    10. '	' → logprob: -15.429888725280762

Token 2634: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08147284388542175
    2. ''.' → logprob: -2.581472873687744
    3. ''*' → logprob: -6.081472873687744
    4. ''\' → logprob: -8.206472396850586
    5. '"' → logprob: -11.206472396850586
    6. ' '' → logprob: -11.956472396850586
    7. ''o' → logprob: -15.081472396850586
    8. '".' → logprob: -15.081472396850586
    9. '"."' → logprob: -15.581472396850586
    10. ''d' → logprob: -15.956472396850586

Token 2635: '・' (ID: 4156)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.7656137943267822
    2. ''.' → logprob: -1.0156137943267822
    3. ''' → logprob: -1.7656137943267822
    4. '*' → logprob: -6.515613555908203
    5. '・' → logprob: -9.640613555908203
    6. ''\' → logprob: -9.765613555908203
    7. '·' → logprob: -10.140613555908203
    8. '"' → logprob: -11.390613555908203
    9. '•' → logprob: -11.890613555908203
    10. ' '*'' → logprob: -12.265613555908203

Token 2636: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011425971984863281
    2. ''

' → logprob: -4.511425971984863
    3. ''
' → logprob: -7.886425971984863
    4. '"' → logprob: -14.011425971984863
    5. ' '' → logprob: -14.886425971984863
    6. ''


' → logprob: -14.886425971984863
    7. '<|end|>' → logprob: -15.886425971984863
    8. ''

' → logprob: -16.136425018310547
    9. ''"' → logprob: -16.136425018310547
    10. ''
' → logprob: -16.261425018310547

Token 2637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7244160175323486
    2. 'class' → logprob: -0.7244160175323486
    3. '@' → logprob: -3.7244160175323486
    4. '
' → logprob: -5.5994157791137695
    5. '```' → logprob: -5.8494157791137695
    6. ' class' → logprob: -10.84941577911377
    7. '    
' → logprob: -10.84941577911377
    8. '@class' → logprob: -11.84941577911377
    9. 'classmethod' → logprob: -12.34941577911377
    10. '`' → logprob: -12.59941577911377

Token 2638: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0006526283104903996
    2. 'class' → logprob: -7.50065279006958
    3. '   ' → logprob: -9.750652313232422
    4. '@class' → logprob: -10.375652313232422
    5. 'classmethod' → logprob: -12.375652313232422
    6. '
' → logprob: -12.750652313232422
    7. ' @' → logprob: -13.750652313232422
    8. '@property' → logprob: -14.250652313232422
    9. '@
' → logprob: -14.625652313232422
    10. '```' → logprob: -15.250652313232422

Token 2639: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -5.512236498361744e-07
    2. 'class' → logprob: -15.000000953674316
    3. 'staticmethod' → logprob: -15.500000953674316
    4. '@' → logprob: -18.5
    5. 'property' → logprob: -21.375
    6. '@class' → logprob: -23.125
    7. '<class' → logprob: -24.0
    8. 'cls' → logprob: -24.625
    9. '@property' → logprob: -25.75
    10. '@dat' → logprob: -26.125

Token 2640: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.049288783222436905
    2. '   ' → logprob: -3.049288749694824
    3. '
' → logprob: -7.549288749694824
    4. ' def' → logprob: -8.674288749694824
    5. '@' → logprob: -13.174288749694824
    6. '	def' → logprob: -14.299288749694824
    7. '  ' → logprob: -14.674288749694824
    8. ':def' → logprob: -15.799288749694824
    9. ' ' → logprob: -15.924288749694824
    10. '```' → logprob: -16.29928970336914

Token 2641: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003295705420896411
    2. '   ' → logprob: -5.7532958984375
    3. '
' → logprob: -9.6282958984375
    4. ' def' → logprob: -9.8782958984375
    5. '	def' → logprob: -15.1282958984375
    6. '  ' → logprob: -15.7532958984375
    7. 'async' → logprob: -16.1282958984375
    8. '```' → logprob: -16.2532958984375
    9. '\' → logprob: -16.3782958984375
    10. '    
' → logprob: -16.8782958984375

Token 2642: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.531315314830863e-06
    2. '   ' → logprob: -13.125003814697266
    3. 'try' → logprob: -14.125003814697266
    4. ' def' → logprob: -14.250003814697266
    5. 'async' → logprob: -17.875003814697266
    6. '@' → logprob: -17.875003814697266
    7. '
' → logprob: -18.375003814697266
    8. 'Def' → logprob: -19.125003814697266
    9. '  ' → logprob: -20.000003814697266
    10. '	def' → logprob: -21.000003814697266

Token 2643: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -6.704273118884885e-07
    2. ' try' → logprob: -14.375000953674316
    3. '.try' → logprob: -19.875
    4. '
' → logprob: -20.125
    5. 'def' → logprob: -21.125
    6. '   ' → logprob: -21.375
    7. '_try' → logprob: -21.375
    8. '	try' → logprob: -21.625
    9. 'Try' → logprob: -22.25
    10. '  ' → logprob: -22.625

Token 2644: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.0015051016816869378
    2. 'match' → logprob: -6.501504898071289
    3. 'Match' → logprob: -13.376504898071289
    4. 'def' → logprob: -14.126504898071289
    5. ' match' → logprob: -15.626504898071289
    6. '_MATCH' → logprob: -16.25150489807129
    7. 'try' → logprob: -17.37650489807129
    8. '_try' → logprob: -17.37650489807129
    9. '@' → logprob: -17.50150489807129
    10. '	match' → logprob: -17.75150489807129

Token 2645: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -1.9027791495318525e-05
    2. 'cls' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.375019073486328
    4. '(
' → logprob: -18.000019073486328
    5. '(' → logprob: -18.375019073486328
    6. 'def' → logprob: -18.500019073486328
    7. 'classmethod' → logprob: -19.000019073486328
    8. '```' → logprob: -19.125019073486328
    9. '(cl' → logprob: -19.375019073486328
    10. ' cls' → logprob: -19.625019073486328

Token 2646: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.696889623621246e-06
    2. ',' → logprob: -13.50000286102295
    3. '(points' → logprob: -14.12500286102295
    4. 'cls' → logprob: -15.00000286102295
    5. '(clazz' → logprob: -16.375001907348633
    6. '(cl' → logprob: -16.625001907348633
    7. ' (' → logprob: -18.000001907348633
    8. '(' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '(class' → logprob: -18.500001907348633

Token 2647: ' points' (ID: 5571)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -5.860340752406046e-05
    2. 'points' → logprob: -9.7500581741333
    3. ' cls' → logprob: -15.5000581741333
    4. '(cls' → logprob: -18.000059127807617
    5. 'pts' → logprob: -20.250059127807617
    6. ' points' → logprob: -20.625059127807617
    7. 'cl' → logprob: -20.750059127807617
    8. 'class' → logprob: -21.875059127807617
    9. '   ' → logprob: -22.500059127807617
    10. 'cs' → logprob: -23.000059127807617

Token 2648: ':' (ID: 25)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.00020687808864749968
    2. '   ' → logprob: -9.12520694732666
    3. '       ' → logprob: -10.12520694732666
    4. ')' → logprob: -10.75020694732666
    5. 'cls' → logprob: -10.87520694732666
    6. '==' → logprob: -11.75020694732666
    7. '           ' → logprob: -13.25020694732666
    8. 'if' → logprob: -13.62520694732666
    9. '```' → logprob: -13.75020694732666
    10. ',' → logprob: -13.75020694732666

Token 2649: ' Set' (ID: 3957)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.6730952262878418
    2. 'Set' → logprob: -0.9230952262878418
    3. 'set' → logprob: -2.548095226287842
    4. 'points' → logprob: -5.048095226287842
    5. 'lambda' → logprob: -6.298095226287842
    6. 'def' → logprob: -6.423095226287842
    7. '(cls' → logprob: -6.548095226287842
    8. ' cls' → logprob: -7.173095226287842
    9. ' set' → logprob: -7.423095226287842
    10. 'classmethod' → logprob: -8.048095703125

Token 2650: '[' (ID: 58)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.03480816259980202
    2. '(points' → logprob: -4.034808158874512
    3. 'cls' → logprob: -4.659808158874512
    4. '[' → logprob: -5.659808158874512
    5. '(p' → logprob: -6.659808158874512
    6. ')' → logprob: -6.659808158874512
    7. '(Point' → logprob: -7.909808158874512
    8. 'points' → logprob: -8.034808158874512
    9. '(
' → logprob: -9.659808158874512
    10. '(' → logprob: -10.409808158874512

Token 2651: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.9361264946837764e-07
    2. ' Point' → logprob: -16.875
    3. ')' → logprob: -17.875
    4. 'p' → logprob: -17.875
    5. 'point' → logprob: -18.25
    6. 'cls' → logprob: -19.375
    7. '(Point' → logprob: -19.375
    8. '
' → logprob: -19.5
    9. '	Point' → logprob: -19.625
    10. 'Points' → logprob: -20.0

Token 2652: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.550411151489243e-05
    2. '):' → logprob: -10.625055313110352
    3. '):
' → logprob: -11.125055313110352
    4. '   ' → logprob: -11.375055313110352
    5. '(cls' → logprob: -13.000055313110352
    6. '       ' → logprob: -14.000055313110352
    7. 'cls' → logprob: -14.625055313110352
    8. ' )' → logprob: -14.625055313110352
    9. ')
' → logprob: -15.375055313110352
    10. ']' → logprob: -15.625055313110352

Token 2653: ' ->' (ID: 2747)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0006987344822846353
    2. 'cls' → logprob: -7.750698566436768
    3. '   ' → logprob: -9.125699043273926
    4. '       ' → logprob: -9.875699043273926
    5. ':' → logprob: -10.000699043273926
    6. 'def' → logprob: -10.125699043273926
    7. '(' → logprob: -12.250699043273926
    8. 'return' → logprob: -12.375699043273926
    9. ' cls' → logprob: -12.625699043273926
    10. ')' → logprob: -13.375699043273926

Token 2654: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00013131031300872564
    2. ' bool' → logprob: -9.000131607055664
    3. 'def' → logprob: -12.250131607055664
    4. 'return' → logprob: -13.875131607055664
    5. 'cls' → logprob: -13.875131607055664
    6. 'True' → logprob: -15.125131607055664
    7. '<bool' → logprob: -15.250131607055664
    8. 'classmethod' → logprob: -15.750131607055664
    9. 'set' → logprob: -16.125131607055664
    10. 'False' → logprob: -16.125131607055664

Token 2655: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2810232639312744
    2. ':' → logprob: -1.5310232639312744
    3. '(cls' → logprob: -3.7810232639312744
    4. '       ' → logprob: -5.406023025512695
    5. '   ' → logprob: -6.906023025512695
    6. ':return' → logprob: -9.281023025512695
    7. '[' → logprob: -9.531023025512695
    8. '(' → logprob: -9.531023025512695
    9. '(
' → logprob: -10.406023025512695
    10. 'cls' → logprob: -10.656023025512695

Token 2656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.128163257315464e-07
    2. 'return' → logprob: -15.875
    3. 'if' → logprob: -15.875
    4. '           ' → logprob: -17.0
    5. '   ' → logprob: -17.75
    6. '      ' → logprob: -17.875
    7. '        ' → logprob: -19.25
    8. '     ' → logprob: -19.375
    9. '```' → logprob: -19.375
    10. '               ' → logprob: -20.25

Token 2657: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02996673621237278
    2. '       ' → logprob: -3.5299668312072754
    3. 'return' → logprob: -8.529966354370117
    4. ' if' → logprob: -10.904966354370117
    5. 'not' → logprob: -16.529966354370117
    6. '   ' → logprob: -16.654966354370117
    7. '
' → logprob: -16.779966354370117
    8. 'cls' → logprob: -16.904966354370117
    9. 'for' → logprob: -17.029966354370117
    10. '@' → logprob: -18.029966354370117

Token 2658: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0059202625416219234
    2. 'return' → logprob: -5.25592041015625
    3. '       ' → logprob: -7.38092041015625
    4. ' if' → logprob: -9.75592041015625
    5. '@' → logprob: -13.00592041015625
    6. 'for' → logprob: -14.00592041015625
    7. '   ' → logprob: -14.25592041015625
    8. 'cls' → logprob: -14.50592041015625
    9. '#' → logprob: -15.00592041015625
    10. ' return' → logprob: -15.13092041015625

Token 2659: ' small' (ID: 3291)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5076779127120972
    2. 'len' → logprob: -1.3826779127120972
    3. '       ' → logprob: -3.2576780319213867
    4. 'return' → logprob: -3.6326780319213867
    5. 'b' → logprob: -3.8826780319213867
    6. 'f' → logprob: -4.507678031921387
    7. 'cls' → logprob: -4.507678031921387
    8. '@' → logprob: -4.632678031921387
    9. 'classmethod' → logprob: -4.882678031921387
    10. 'def' → logprob: -5.382678031921387

Token 2660: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39786553382873535
    2. '@' → logprob: -1.3978655338287354
    3. 'set' → logprob: -3.2728655338287354
    4. '   ' → logprob: -4.772865295410156
    5. ' if' → logprob: -5.022865295410156
    6. '       ' → logprob: -5.522865295410156
    7. 'cls' → logprob: -5.522865295410156
    8. 'square' → logprob: -5.647865295410156
    9. 'classmethod' → logprob: -5.647865295410156
    10. 'points' → logprob: -6.147865295410156

Token 2661: '3' (ID: 18)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -1.0489850044250488
    2. 'set' → logprob: -1.4239850044250488
    3. 'dot' → logprob: -2.298985004425049
    4. 'def' → logprob: -2.673985004425049
    5. 'black' → logprob: -2.923985004425049
    6. 'cls' → logprob: -3.298985004425049
    7. 'square' → logprob: -3.298985004425049
    8. 'point' → logprob: -3.673985004425049
    9. 'if' → logprob: -3.923985004425049
    10. 'len' → logprob: -4.048985004425049

Token 2662: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08584954589605331
    2. '   ' → logprob: -2.5858495235443115
    3. 'class' → logprob: -6.460849761962891
    4. 'by' → logprob: -6.460849761962891
    5. '```' → logprob: -7.085849761962891
    6. '
' → logprob: -7.210849761962891
    7. '       ' → logprob: -7.210849761962891
    8. ',' → logprob: -7.835849761962891
    9. ' ' → logprob: -8.21084976196289
    10. '  ' → logprob: -8.71084976196289

Token 2663: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005468378076329827
    2. 'classmethod' → logprob: -8.8755464553833
    3. 'cls' → logprob: -9.1255464553833
    4. 'class' → logprob: -9.1255464553833
    5. '...' → logprob: -9.3755464553833
    6. '
' → logprob: -10.5005464553833
    7. '   ' → logprob: -10.7505464553833
    8. ' ' → logprob: -11.0005464553833
    9. '```' → logprob: -11.3755464553833
    10. '"""' → logprob: -11.7505464553833

Token 2664: ' with' (ID: 483)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.3303902745246887
    2. '
' → logprob: -1.705390214920044
    3. '   ' → logprob: -2.455390214920044
    4. ' pattern' → logprob: -4.830390453338623
    5. 'class' → logprob: -5.830390453338623
    6. '       ' → logprob: -7.205390453338623
    7. '[
' → logprob: -7.705390453338623
    8. '"""
' → logprob: -8.830389976501465
    9. '```' → logprob: -8.955389976501465
    10. 'def' → logprob: -9.080389976501465

Token 2665: ' only' (ID: 1606)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02083182893693447
    2. 'points' → logprob: -3.895831823348999
    3. 'def' → logprob: -9.520832061767578
    4. '(len' → logprob: -9.645832061767578
    5. '
' → logprob: -10.395832061767578
    6. 'all' → logprob: -10.645832061767578
    7. ' len' → logprob: -10.645832061767578
    8. 'point' → logprob: -11.395832061767578
    9. '(points' → logprob: -11.395832061767578
    10. 'cls' → logprob: -11.520832061767578

Token 2666: ' center' (ID: 6170)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.27447575330734253
    2. 'points' → logprob: -1.7744758129119873
    3. 'Point' → logprob: -3.0244758129119873
    4. '{' → logprob: -4.274475574493408
    5. '1' → logprob: -5.399475574493408
    6. 'the' → logprob: -7.024475574493408
    7. 'center' → logprob: -7.774475574493408
    8. 'a' → logprob: -7.774475574493408
    9. 'One' → logprob: -8.024476051330566
    10. 'set' → logprob: -8.149476051330566

Token 2667: ' is' (ID: 382)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3489637076854706
    2. 'set' → logprob: -2.723963737487793
    3. ''' → logprob: -3.223963737487793
    4. '(points' → logprob: -3.473963737487793
    5. 'point' → logprob: -3.723963737487793
    6. '(' → logprob: -3.723963737487793
    7. '{
' → logprob: -4.098963737487793
    8. '(
' → logprob: -4.598963737487793
    9. '{'' → logprob: -4.598963737487793
    10. '{' → logprob: -4.723963737487793

Token 2668: ' black' (ID: 5960)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8728256225585938
    2. 'points' → logprob: -0.8728256225585938
    3. 'black' → logprob: -2.4978256225585938
    4. '{'' → logprob: -3.8728256225585938
    5. '{' → logprob: -4.122825622558594
    6. 'occupied' → logprob: -4.872825622558594
    7. 'in' → logprob: -4.997825622558594
    8. 'p' → logprob: -5.372825622558594
    9. '(points' → logprob: -5.372825622558594
    10. '(p' → logprob: -5.497825622558594

Token 2669: ' method' (ID: 2595)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014540718868374825
    2. ':
' → logprob: -4.764540672302246
    3. ' and' → logprob: -6.389540672302246
    4. ':' → logprob: -6.389540672302246
    5. ',' → logprob: -7.139540672302246
    6. ' if' → logprob: -7.389540672302246
    7. '
' → logprob: -7.889540672302246
    8. '   ' → logprob: -8.639540672302246
    9. 'and' → logprob: -9.639540672302246
    10. '           ' → logprob: -9.764540672302246

Token 2670: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002446758095175028
    2. ' if' → logprob: -7.37744665145874
    3. 'if' → logprob: -7.50244665145874
    4. ':' → logprob: -7.62744665145874
    5. '@' → logprob: -8.127447128295898
    6. '   ' → logprob: -9.002447128295898
    7. '```' → logprob: -9.002447128295898
    8. ':
' → logprob: -9.377447128295898
    9. '
' → logprob: -9.752447128295898
    10. '(' → logprob: -11.002447128295898

Token 2671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.036524842376821e-05
    2. '@' → logprob: -11.125040054321289
    3. '   ' → logprob: -11.625040054321289
    4. '```' → logprob: -11.875040054321289
    5. '
' → logprob: -12.875040054321289
    6. 'def' → logprob: -13.000040054321289
    7. '           ' → logprob: -13.250040054321289
    8. 'if' → logprob: -14.125040054321289
    9. 'return' → logprob: -14.625040054321289
    10. '      ' → logprob: -15.125040054321289

Token 2672: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038941264152526855
    2. '       ' → logprob: -3.2889413833618164
    3. 'return' → logprob: -7.038941383361816
    4. ' if' → logprob: -11.038941383361816
    5. 'points' → logprob: -12.913941383361816
    6. 'cls' → logprob: -12.913941383361816
    7. '@' → logprob: -14.538941383361816
    8. '   ' → logprob: -14.663941383361816
    9. '           ' → logprob: -15.913941383361816
    10. 'for' → logprob: -15.913941383361816

Token 2673: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10599550604820251
    2. 'not' → logprob: -2.3559954166412354
    3. 'points' → logprob: -5.4809956550598145
    4. ' not' → logprob: -6.9809956550598145
    5. ' len' → logprob: -7.6059956550598145
    6. 'cls' → logprob: -9.730995178222656
    7. '   ' → logprob: -9.980995178222656
    8. '       ' → logprob: -10.855995178222656
    9. '(len' → logprob: -10.980995178222656
    10. 'set' → logprob: -11.230995178222656

Token 2674: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0015115276910364628
    2. ' points' → logprob: -6.501511573791504
    3. '(points' → logprob: -12.251511573791504
    4. 'cls' → logprob: -12.876511573791504
    5. 'point' → logprob: -14.376511573791504
    6. 'bool' → logprob: -15.251511573791504
    7. 'len' → logprob: -15.376511573791504
    8. '	points' → logprob: -15.376511573791504
    9. 'not' → logprob: -16.126510620117188
    10. 'pts' → logprob: -16.376510620117188

Token 2675: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8765825629234314
    2. ':
' → logprob: -1.0015826225280762
    3. '           ' → logprob: -2.126582622528076
    4. ' or' → logprob: -2.751582622528076
    5. '       ' → logprob: -3.501582622528076
    6. ':return' → logprob: -7.626582622528076
    7. '   ' → logprob: -7.751582622528076
    8. '==' → logprob: -7.876582622528076
    9. 'or' → logprob: -7.876582622528076
    10. ' and' → logprob: -8.376582145690918

Token 2676: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38745832443237305
    2. '       ' → logprob: -1.137458324432373
    3. 'return' → logprob: -7.637458324432373
    4. ' return' → logprob: -9.887458801269531
    5. '   ' → logprob: -10.762458801269531
    6. '               ' → logprob: -11.762458801269531
    7. 'False' → logprob: -11.887458801269531
    8. '        ' → logprob: -12.887458801269531
    9. '         ' → logprob: -13.012458801269531
    10. ' False' → logprob: -13.137458801269531

Token 2677: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011971325147897005
    2. 'False' → logprob: -7.001197338104248
    3. '           ' → logprob: -8.75119686126709
    4. ' return' → logprob: -9.50119686126709
    5. '       ' → logprob: -9.87619686126709
    6. '   ' → logprob: -15.37619686126709
    7. '               ' → logprob: -15.37619686126709
    8. '
' → logprob: -15.62619686126709
    9. ':return' → logprob: -15.62619686126709
    10. 'Return' → logprob: -15.75119686126709

Token 2678: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. 'True' → logprob: -17.625001907348633
    4. '(False' → logprob: -19.625001907348633
    5. 'F' → logprob: -20.250001907348633
    6. '_false' → logprob: -20.625001907348633
    7. 'false' → logprob: -21.250001907348633
    8. '=False' → logprob: -21.375001907348633
    9. '
' → logprob: -22.250001907348633
    10. 'return' → logprob: -22.375001907348633

Token 2679: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005576779949478805
    2. '
' → logprob: -7.500557899475098
    3. '
' → logprob: -14.125557899475098
    4. 'min' → logprob: -14.375557899475098
    5. '   ' → logprob: -14.750557899475098
    6. 'return' → logprob: -14.750557899475098
    7. '      ' → logprob: -14.875557899475098
    8. '        
' → logprob: -14.875557899475098
    9. '	' → logprob: -15.125557899475098
    10. '           ' → logprob: -15.250557899475098

Token 2680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.13388703338569e-06
    2. '
' → logprob: -11.750009536743164
    3. '	' → logprob: -15.000009536743164
    4. '           ' → logprob: -15.250009536743164
    5. '   ' → logprob: -15.625009536743164
    6. ' min' → logprob: -15.875009536743164
    7. '      ' → logprob: -16.750009536743164
    8. 'return' → logprob: -16.875009536743164
    9. 'min' → logprob: -16.875009536743164
    10. 'import' → logprob: -17.000009536743164

Token 2681: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.4869639277458191
    2. '       ' → logprob: -0.9869639277458191
    3. ' min' → logprob: -4.361963748931885
    4. '	min' → logprob: -10.986964225769043
    5. 'points' → logprob: -11.611964225769043
    6. '
' → logprob: -11.861964225769043
    7. 'if' → logprob: -11.861964225769043
    8. '   ' → logprob: -13.361964225769043
    9. 'max' → logprob: -13.361964225769043
    10. 'import' → logprob: -13.486964225769043

Token 2682: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0002153378736693412
    2. '_' → logprob: -8.625215530395508
    3. 'x' → logprob: -11.125215530395508
    4. '=' → logprob: -11.125215530395508
    5. '   ' → logprob: -13.875215530395508
    6. '_=' → logprob: -14.000215530395508
    7. ' =' → logprob: -14.250215530395508
    8. '_p' → logprob: -14.750215530395508
    9. ',' → logprob: -14.875215530395508
    10. '_min' → logprob: -15.125215530395508

Token 2683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931533217430115
    2. ' =' → logprob: -0.6931533217430115
    3. '=min' → logprob: -12.443153381347656
    4. '=
' → logprob: -13.943153381347656
    5. ',' → logprob: -14.193153381347656
    6. ' =
' → logprob: -16.443153381347656
    7. '=

' → logprob: -16.443153381347656
    8. '   ' → logprob: -16.568153381347656
    9. '==' → logprob: -16.818153381347656
    10. 'x' → logprob: -17.193153381347656

Token 2684: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.842555426876061e-06
    2. ' min' → logprob: -12.250004768371582
    3. '(min' → logprob: -16.8750057220459
    4. 'max' → logprob: -19.2500057220459
    5. 'minimum' → logprob: -19.3750057220459
    6. '[min' → logprob: -19.8750057220459
    7. '=min' → logprob: -20.1250057220459
    8. '	min' → logprob: -20.3750057220459
    9. 'mini' → logprob: -20.5000057220459
    10. '0' → logprob: -21.7500057220459

Token 2685: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00016265720478259027
    2. 'p' → logprob: -8.750163078308105
    3. '[p' → logprob: -13.625163078308105
    4. '(' → logprob: -13.750163078308105
    5. 'for' → logprob: -14.250163078308105
    6. '(
' → logprob: -15.500163078308105
    7. '([' → logprob: -15.625163078308105
    8. ' (' → logprob: -15.750163078308105
    9. 'min' → logprob: -15.875163078308105
    10. ' p' → logprob: -16.00016212463379

Token 2686: '.x' (ID: 3700)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007333529647439718
    2. ' for' → logprob: -5.382333755493164
    3. '(p' → logprob: -6.507333755493164
    4. '.x' → logprob: -7.132333755493164
    5. 'x' → logprob: -8.382333755493164
    6. '.for' → logprob: -9.757333755493164
    7. '.p' → logprob: -9.757333755493164
    8. '(x' → logprob: -10.507333755493164
    9. '.' → logprob: -10.757333755493164
    10. '(for' → logprob: -12.132333755493164

Token 2687: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04862358421087265
    2. ' for' → logprob: -3.048623561859131
    3. ',' → logprob: -10.423624038696289
    4. ')' → logprob: -12.423624038696289
    5. '
' → logprob: -15.048624038696289
    6. '(p' → logprob: -15.298624038696289
    7. '[' → logprob: -15.423624038696289
    8. '	for' → logprob: -15.673624038696289
    9. '```' → logprob: -15.673624038696289
    10. '   ' → logprob: -15.923624038696289

Token 2688: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.24818815290927887
    2. 'points' → logprob: -1.6231881380081177
    3. ' points' → logprob: -4.373188018798828
    4. ' p' → logprob: -4.623188018798828
    5. 'point' → logprob: -10.248188018798828
    6. '(points' → logprob: -11.123188018798828
    7. '(p' → logprob: -11.748188018798828
    8. ' in' → logprob: -12.123188018798828
    9. '[p' → logprob: -12.498188018798828
    10. 'for' → logprob: -12.998188018798828

Token 2689: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6557596325874329
    2. ' in' → logprob: -0.9057596325874329
    3. 'in' → logprob: -3.280759572982788
    4. 'for' → logprob: -4.155759811401367
    5. ' p' → logprob: -4.405759811401367
    6. 'points' → logprob: -5.280759811401367
    7. ' for' → logprob: -5.655759811401367
    8. ' points' → logprob: -6.280759811401367
    9. 'x' → logprob: -7.905759811401367
    10. '.p' → logprob: -9.280759811401367

Token 2690: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -2.999452772201039e-05
    2. ' points' → logprob: -10.500029563903809
    3. 'p' → logprob: -13.875029563903809
    4. '
' → logprob: -14.625029563903809
    5. 'point' → logprob: -15.125029563903809
    6. '(points' → logprob: -15.125029563903809
    7. '.points' → logprob: -16.375030517578125
    8. 'oints' → logprob: -16.625030517578125
    9. '[' → logprob: -16.625030517578125
    10. '	points' → logprob: -16.750030517578125

Token 2691: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6265625357627869
    2. ')' → logprob: -0.8765625357627869
    3. ',' → logprob: -3.7515625953674316
    4. ')
' → logprob: -4.376562595367432
    5. '<|end|>' → logprob: -4.501562595367432
    6. '),' → logprob: -6.626562595367432
    7. '<|end|>' → logprob: -8.376562118530273
    8. ',
' → logprob: -9.126562118530273
    9. ' ,' → logprob: -9.376562118530273
    10. '   ' → logprob: -9.501562118530273

Token 2692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015383612480945885
    2. 'min' → logprob: -9.375153541564941
    3. ',' → logprob: -10.250153541564941
    4. ',min' → logprob: -11.375153541564941
    5. '           ' → logprob: -11.750153541564941
    6. '   ' → logprob: -12.875153541564941
    7. ' min' → logprob: -12.875153541564941
    8. '	min' → logprob: -13.500153541564941
    9. '               ' → logprob: -13.625153541564941
    10. '	' → logprob: -13.625153541564941

Token 2693: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -4.842555426876061e-06
    2. ' min' → logprob: -12.500004768371582
    3. '       ' → logprob: -13.750004768371582
    4. 'max' → logprob: -16.7500057220459
    5. '	min' → logprob: -19.5000057220459
    6. '(min' → logprob: -21.1250057220459
    7. 'minimum' → logprob: -21.2500057220459
    8. '   ' → logprob: -22.2500057220459
    9. '.min' → logprob: -22.2500057220459
    10. '[min' → logprob: -22.2500057220459

Token 2694: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00012213163427077234
    2. 'x' → logprob: -9.1251220703125
    3. '=' → logprob: -12.1251220703125
    4. ' =' → logprob: -12.5001220703125
    5. '   ' → logprob: -13.2501220703125
    6. '```' → logprob: -14.1251220703125
    7. '_' → logprob: -14.8751220703125
    8. '_y' → logprob: -15.2501220703125
    9. ' x' → logprob: -15.3751220703125
    10. '.x' → logprob: -16.2501220703125

Token 2695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7024505138397217
    2. ' =' → logprob: -0.7024505138397217
    3. ' for' → logprob: -4.827450752258301
    4. 'for' → logprob: -6.702450752258301
    5. ' in' → logprob: -11.2024507522583
    6. '=
' → logprob: -12.7024507522583
    7. '=p' → logprob: -13.0774507522583
    8. '=min' → logprob: -13.7024507522583
    9. 'in' → logprob: -13.8274507522583
    10. ' ' → logprob: -14.0774507522583

Token 2696: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -8.160971628967673e-05
    2. ' min' → logprob: -9.500082015991211
    3. '(min' → logprob: -12.000082015991211
    4. '[min' → logprob: -14.875082015991211
    5. 'max' → logprob: -15.625082015991211
    6. '	min' → logprob: -19.50008201599121
    7. '=min' → logprob: -19.87508201599121
    8. 'p' → logprob: -20.62508201599121
    9. 'minimum' → logprob: -20.75008201599121
    10. '_min' → logprob: -21.37508201599121

Token 2697: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.008840521797537804
    2. 'p' → logprob: -5.258840560913086
    3. 'min' → logprob: -5.758840560913086
    4. '(min' → logprob: -7.758840560913086
    5. '[p' → logprob: -11.758840560913086
    6. 'for' → logprob: -11.883840560913086
    7. ' p' → logprob: -13.508840560913086
    8. '(
' → logprob: -14.383840560913086
    9. ' min' → logprob: -15.008840560913086
    10. '(' → logprob: -15.133840560913086

Token 2698: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5386082530021667
    2. 'x' → logprob: -1.1636083126068115
    3. '.x' → logprob: -2.4136083126068115
    4. '_x' → logprob: -5.038608074188232
    5. 'for' → logprob: -5.288608074188232
    6. '.p' → logprob: -6.413608074188232
    7. ' for' → logprob: -6.788608074188232
    8. '```' → logprob: -9.41360855102539
    9. '(x' → logprob: -10.16360855102539
    10. 'p' → logprob: -10.66360855102539

Token 2699: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3134820759296417
    2. ' for' → logprob: -1.3134820461273193
    3. 'in' → logprob: -9.188482284545898
    4. ')' → logprob: -9.938482284545898
    5. ' in' → logprob: -9.938482284545898
    6. '(points' → logprob: -12.188482284545898
    7. 'points' → logprob: -12.438482284545898
    8. '(p' → logprob: -12.563482284545898
    9. ' points' → logprob: -13.313482284545898
    10. '=' → logprob: -13.813482284545898

Token 2700: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0016681613633409142
    2. 'p' → logprob: -6.5016679763793945
    3. ' points' → logprob: -9.251667976379395
    4. '(points' → logprob: -9.626667976379395
    5. '	points' → logprob: -14.001667976379395
    6. '.points' → logprob: -14.376667976379395
    7. '(p' → logprob: -14.501667976379395
    8. 'point' → logprob: -14.751667976379395
    9. '
' → logprob: -14.751667976379395
    10. '[p' → logprob: -15.126667976379395

Token 2701: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.35125985741615295
    2. 'for' → logprob: -1.6012598276138306
    3. '.points' → logprob: -3.60125994682312
    4. '(points' → logprob: -3.85125994682312
    5. ' for' → logprob: -3.97625994682312
    6. ' points' → logprob: -4.101259708404541
    7. 'p' → logprob: -5.476259708404541
    8. 'oints' → logprob: -6.101259708404541
    9. 'in' → logprob: -6.226259708404541
    10. ' in' → logprob: -6.976259708404541

Token 2702: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -2.2961512513575144e-05
    2. 'p' → logprob: -11.375022888183594
    3. '(points' → logprob: -11.750022888183594
    4. ' points' → logprob: -12.750022888183594
    5. '[' → logprob: -15.875022888183594
    6. '
' → logprob: -16.125022888183594
    7. 'point' → logprob: -16.375022888183594
    8. '.points' → logprob: -16.500022888183594
    9. '	points' → logprob: -16.750022888183594
    10. '[p' → logprob: -16.875022888183594

Token 2703: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04946397244930267
    2. ')' → logprob: -3.424463987350464
    3. '       ' → logprob: -4.174463748931885
    4. 'min' → logprob: -8.799464225769043
    5. 'for' → logprob: -9.424464225769043
    6. '   ' → logprob: -10.174464225769043
    7. 'max' → logprob: -11.549464225769043
    8. '
' → logprob: -11.674464225769043
    9. ')
' → logprob: -12.424464225769043
    10. 'if' → logprob: -12.674464225769043

Token 2704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2535962760448456
    2. 'max' → logprob: -1.503596305847168
    3. 'min' → logprob: -6.878596305847168
    4. ' max' → logprob: -7.503596305847168
    5. '```' → logprob: -10.503596305847168
    6. ',' → logprob: -11.003596305847168
    7. '	max' → logprob: -11.753596305847168
    8. ' min' → logprob: -12.128596305847168
    9. 'maxlength' → logprob: -12.253596305847168
    10. ',max' → logprob: -12.753596305847168

Token 2705: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -7.226628895296017e-06
    2. '       ' → logprob: -12.000007629394531
    3. ' max' → logprob: -14.125007629394531
    4. 'min' → logprob: -15.000007629394531
    5. '
' → logprob: -17.62500762939453
    6. '```' → logprob: -18.87500762939453
    7. '	max' → logprob: -19.87500762939453
    8. '   ' → logprob: -20.12500762939453
    9. '0' → logprob: -20.25000762939453
    10. 'try' → logprob: -20.87500762939453

Token 2706: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00025084958178922534
    2. '(p' → logprob: -9.000250816345215
    3. '_' → logprob: -9.875250816345215
    4. '=' → logprob: -10.125250816345215
    5. '=_' → logprob: -12.125250816345215
    6. '_max' → logprob: -12.625250816345215
    7. '=p' → logprob: -12.625250816345215
    8. '_p' → logprob: -12.875250816345215
    9. '=max' → logprob: -12.875250816345215
    10. 'x' → logprob: -13.000250816345215

Token 2707: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519613206386566
    2. '=' → logprob: -1.501961350440979
    3. '=min' → logprob: -10.626961708068848
    4. '=max' → logprob: -12.251961708068848
    5. '=p' → logprob: -14.126961708068848
    6. '=
' → logprob: -14.251961708068848
    7. '<|end|>' → logprob: -14.376961708068848
    8. ',' → logprob: -15.751961708068848
    9. '```' → logprob: -15.876961708068848
    10. '=int' → logprob: -15.876961708068848

Token 2708: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00020616286201402545
    2. ' max' → logprob: -8.500205993652344
    3. 'min' → logprob: -12.875205993652344
    4. '(max' → logprob: -16.000205993652344
    5. '=max' → logprob: -18.500205993652344
    6. '[max' → logprob: -19.250205993652344
    7. '	max' → logprob: -20.125205993652344
    8. '_max' → logprob: -20.375205993652344
    9. ',max' → logprob: -20.500205993652344
    10. '   ' → logprob: -21.250205993652344

Token 2709: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0003280751989223063
    2. 'p' → logprob: -8.375328063964844
    3. '(max' → logprob: -9.875328063964844
    4. 'max' → logprob: -10.500328063964844
    5. '(min' → logprob: -11.625328063964844
    6. 'min' → logprob: -12.875328063964844
    7. 'x' → logprob: -13.375328063964844
    8. '```' → logprob: -13.875328063964844
    9. '[p' → logprob: -14.000328063964844
    10. 'Point' → logprob: -14.250328063964844

Token 2710: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.003319591749459505
    2. '(p' → logprob: -6.25331974029541
    3. '.p' → logprob: -6.62831974029541
    4. 'x' → logprob: -9.75331974029541
    5. '_x' → logprob: -12.00331974029541
    6. 'for' → logprob: -14.25331974029541
    7. '```' → logprob: -14.37831974029541
    8. 'X' → logprob: -14.75331974029541
    9. '.X' → logprob: -15.12831974029541
    10. '.y' → logprob: -15.25331974029541

Token 2711: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10025358200073242
    2. ' for' → logprob: -2.3502535820007324
    3. '=' → logprob: -10.97525405883789
    4. '-' → logprob: -11.60025405883789
    5. ' -' → logprob: -12.22525405883789
    6. ')' → logprob: -12.85025405883789
    7. ',' → logprob: -13.10025405883789
    8. '+' → logprob: -13.22525405883789
    9. '```' → logprob: -13.35025405883789
    10. 'For' → logprob: -13.47525405883789

Token 2712: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0036627871450036764
    2. 'points' → logprob: -5.628662586212158
    3. ' p' → logprob: -9.878663063049316
    4. ' points' → logprob: -11.628663063049316
    5. '(p' → logprob: -13.878663063049316
    6. '(points' → logprob: -14.253663063049316
    7. 'point' → logprob: -15.253663063049316
    8. '[p' → logprob: -15.628663063049316
    9. '   ' → logprob: -16.253662109375
    10. 'Point' → logprob: -16.503662109375

Token 2713: ' in' (ID: 306)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2338009625673294
    2. '.points' → logprob: -1.608801007270813
    3. '(points' → logprob: -5.358800888061523
    4. ' points' → logprob: -6.483800888061523
    5. 'oints' → logprob: -6.858800888061523
    6. '.p' → logprob: -7.733800888061523
    7. 'p' → logprob: -8.733800888061523
    8. '.x' → logprob: -8.858800888061523
    9. 'for' → logprob: -9.233800888061523
    10. 'x' → logprob: -9.358800888061523

Token 2714: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00043162284418940544
    2. '(points' → logprob: -8.000432014465332
    3. 'p' → logprob: -9.625432014465332
    4. ' points' → logprob: -10.500432014465332
    5. '	points' → logprob: -14.250432014465332
    6. '(p' → logprob: -14.500432014465332
    7. '.points' → logprob: -14.625432014465332
    8. 'oints' → logprob: -15.875432014465332
    9. 'point' → logprob: -16.000431060791016
    10. '[p' → logprob: -16.500431060791016

Token 2715: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6178110837936401
    2. ')' → logprob: -0.8678110837936401
    3. ')
' → logprob: -4.24281120300293
    4. ',' → logprob: -4.36781120300293
    5. '),' → logprob: -4.61781120300293
    6. '):
' → logprob: -5.86781120300293
    7. '):' → logprob: -8.24281120300293
    8. ')p' → logprob: -8.24281120300293
    9. '
' → logprob: -8.49281120300293
    10. '   ' → logprob: -8.74281120300293

Token 2716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004774599336087704
    2. 'max' → logprob: -5.629774570465088
    3. ' max' → logprob: -7.254774570465088
    4. ',' → logprob: -9.004775047302246
    5. '=' → logprob: -9.129775047302246
    6. '=max' → logprob: -9.504775047302246
    7. ' =' → logprob: -10.379775047302246
    8. '```' → logprob: -10.504775047302246
    9. '           ' → logprob: -10.629775047302246
    10. ',max' → logprob: -10.629775047302246

Token 2717: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.004079112783074379
    2. ' max' → logprob: -5.504079341888428
    3. '       ' → logprob: -15.00407886505127
    4. '(max' → logprob: -15.12907886505127
    5. 'min' → logprob: -16.254079818725586
    6. '	max' → logprob: -17.004079818725586
    7. '=max' → logprob: -17.504079818725586
    8. '[max' → logprob: -18.004079818725586
    9. '_max' → logprob: -18.379079818725586
    10. '```' → logprob: -18.754079818725586

Token 2718: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0003178273618686944
    2. '_y' → logprob: -8.250317573547363
    3. 'x' → logprob: -10.250317573547363
    4. 'X' → logprob: -11.625317573547363
    5. '```' → logprob: -12.250317573547363
    6. 'max' → logprob: -12.625317573547363
    7. '(max' → logprob: -13.000317573547363
    8. '=max' → logprob: -14.125317573547363
    9. '_max' → logprob: -15.125317573547363
    10. 'Y' → logprob: -15.250317573547363

Token 2719: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287416338920593
    2. '=' → logprob: -1.053741693496704
    3. '=min' → logprob: -11.303741455078125
    4. '=
' → logprob: -11.428741455078125
    5. '==' → logprob: -12.553741455078125
    6. '<|end|>' → logprob: -12.553741455078125
    7. ' ==' → logprob: -12.678741455078125
    8. '=p' → logprob: -13.428741455078125
    9. ' =
' → logprob: -13.678741455078125
    10. ' for' → logprob: -13.928741455078125

Token 2720: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2519835829734802
    2. 'min' → logprob: -1.501983642578125
    3. ' max' → logprob: -10.001983642578125
    4. ' min' → logprob: -11.626983642578125
    5. '(max' → logprob: -16.376983642578125
    6. '(min' → logprob: -16.876983642578125
    7. '[min' → logprob: -16.876983642578125
    8. '[max' → logprob: -17.876983642578125
    9. '=max' → logprob: -18.126983642578125
    10. '	min' → logprob: -18.626983642578125

Token 2721: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.02690543234348297
    2. '(points' → logprob: -4.401905536651611
    3. 'points' → logprob: -4.901905536651611
    4. 'p' → logprob: -5.276905536651611
    5. ' points' → logprob: -7.276905536651611
    6. 'for' → logprob: -7.526905536651611
    7. '(min' → logprob: -9.276905059814453
    8. ' p' → logprob: -9.651905059814453
    9. ' (' → logprob: -9.776905059814453
    10. '(max' → logprob: -9.776905059814453

Token 2722: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.06252360343933105
    2. '.x' → logprob: -2.937523603439331
    3. 'for' → logprob: -5.43752384185791
    4. '.p' → logprob: -5.81252384185791
    5. ' for' → logprob: -8.56252384185791
    6. 'y' → logprob: -11.18752384185791
    7. '(p' → logprob: -11.31252384185791
    8. '```' → logprob: -11.31252384185791
    9. 'For' → logprob: -11.68752384185791
    10. '[' → logprob: -12.31252384185791

Token 2723: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22590290009975433
    2. ' for' → logprob: -1.6009029150009155
    3. '(p' → logprob: -8.975902557373047
    4. '(points' → logprob: -9.600902557373047
    5. 'points' → logprob: -9.975902557373047
    6. '       ' → logprob: -10.100902557373047
    7. ')' → logprob: -10.350902557373047
    8. '=' → logprob: -10.725902557373047
    9. 'in' → logprob: -10.725902557373047
    10. '
' → logprob: -10.975902557373047

Token 2724: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.007000227924436331
    2. 'p' → logprob: -5.00700044631958
    3. '(points' → logprob: -8.881999969482422
    4. ' points' → logprob: -9.006999969482422
    5. '(p' → logprob: -11.631999969482422
    6. ' p' → logprob: -12.381999969482422
    7. '	points' → logprob: -13.381999969482422
    8. '       ' → logprob: -13.756999969482422
    9. '
' → logprob: -13.881999969482422
    10. '.points' → logprob: -14.131999969482422

Token 2725: ' in' (ID: 306)
  Prédit: '.points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.09382998943328857
    2. 'points' → logprob: -2.593830108642578
    3. 'for' → logprob: -5.093830108642578
    4. '(points' → logprob: -5.468830108642578
    5. ' points' → logprob: -6.968830108642578
    6. '.y' → logprob: -7.093830108642578
    7. '	points' → logprob: -7.718830108642578
    8. 'in' → logprob: -7.843830108642578
    9. '.x' → logprob: -8.093830108642578
    10. '.p' → logprob: -8.343830108642578

Token 2726: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -4.870950215263292e-05
    2. ' points' → logprob: -10.250048637390137
    3. '(points' → logprob: -11.500048637390137
    4. 'p' → logprob: -13.000048637390137
    5. '	points' → logprob: -15.875048637390137
    6. '.points' → logprob: -16.000049591064453
    7. '
' → logprob: -16.000049591064453
    8. 'point' → logprob: -16.625049591064453
    9. 'pts' → logprob: -16.750049591064453
    10. '[' → logprob: -17.250049591064453

Token 2727: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.570393979549408
    2. '       ' → logprob: -0.945393979549408
    3. ')' → logprob: -3.1953940391540527
    4. '):
' → logprob: -5.320394039154053
    5. '):' → logprob: -9.570393562316895
    6. '   ' → logprob: -9.695393562316895
    7. '
' → logprob: -9.695393562316895
    8. ',' → logprob: -10.820393562316895
    9. ':
' → logprob: -10.820393562316895
    10. ')
' → logprob: -11.070393562316895

Token 2728: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2961512513575144e-05
    2. '           ' → logprob: -12.000022888183594
    3. 'return' → logprob: -12.125022888183594
    4. '   ' → logprob: -12.750022888183594
    5. '
' → logprob: -13.375022888183594
    6. ' return' → logprob: -13.500022888183594
    7. ':' → logprob: -13.875022888183594
    8. '```' → logprob: -14.125022888183594
    9. '               ' → logprob: -14.500022888183594
    10. '	' → logprob: -14.750022888183594

Token 2729: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029782429337501526
    2. '       ' → logprob: -3.52978253364563
    3. ' return' → logprob: -10.40478229522705
    4. 'if' → logprob: -14.40478229522705
    5. '   ' → logprob: -14.52978229522705
    6. '
' → logprob: -15.02978229522705
    7. '	return' → logprob: -16.029783248901367
    8. '```' → logprob: -17.029783248901367
    9. '           ' → logprob: -18.029783248901367
    10. '{return' → logprob: -18.904783248901367

Token 2730: ' dot' (ID: 16579)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001761809689924121
    2. '       ' → logprob: -6.7517619132995605
    3. 'if' → logprob: -7.5017619132995605
    4. '
' → logprob: -10.501761436462402
    5. ' return' → logprob: -11.501761436462402
    6. '```' → logprob: -14.876761436462402
    7. '   ' → logprob: -15.001761436462402
    8. 'for' → logprob: -15.251761436462402
    9. '
' → logprob: -15.626761436462402
    10. '           ' → logprob: -15.626761436462402

Token 2731: ' must' (ID: 2804)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33550626039505005
    2. '=' → logprob: -1.7105062007904053
    3. '       ' → logprob: -2.7105062007904053
    4. '==' → logprob: -4.460506439208984
    5. '   ' → logprob: -4.460506439208984
    6. 'pattern' → logprob: -5.460506439208984
    7. ' =' → logprob: -5.835506439208984
    8. 'is' → logprob: -6.710506439208984
    9. '
' → logprob: -6.835506439208984
    10. ':return' → logprob: -7.210506439208984

Token 2732: ' be' (ID: 413)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3222939968109131
    2. '=' → logprob: -1.447293996810913
    3. 'return' → logprob: -4.572294235229492
    4. ' be' → logprob: -4.822294235229492
    5. 'have' → logprob: -4.822294235229492
    6. 'be' → logprob: -5.322294235229492
    7. ' ==' → logprob: -5.447294235229492
    8. 'match' → logprob: -6.822294235229492
    9. '==
' → logprob: -6.822294235229492
    10. ' have' → logprob: -7.572294235229492

Token 2733: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1606324911117554
    2. 'min' → logprob: -1.7856324911117554
    3. 'cls' → logprob: -1.9106324911117554
    4. '(min' → logprob: -2.160632610321045
    5. '(max' → logprob: -2.535632610321045
    6. 'len' → logprob: -2.660632610321045
    7. 'Point' → logprob: -3.660632610321045
    8. '(cls' → logprob: -3.785632610321045
    9. '3' → logprob: -4.160632610321045
    10. 'True' → logprob: -4.285632610321045

Token 2734: '3' (ID: 18)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.36211591958999634
    2. 'max' → logprob: -1.6121158599853516
    3. '(min' → logprob: -2.7371158599853516
    4. 'True' → logprob: -3.8621158599853516
    5. '3' → logprob: -5.112115859985352
    6. '(max' → logprob: -5.487115859985352
    7. 'False' → logprob: -5.612115859985352
    8. ' min' → logprob: -6.362115859985352
    9. 'equal' → logprob: -6.862115859985352
    10. 'Point' → logprob: -7.862115859985352

Token 2735: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23927977681159973
    2. ',' → logprob: -1.9892797470092773
    3. ' x' → logprob: -3.6142797470092773
    4. '<|end|>' → logprob: -4.239279747009277
    5. '
' → logprob: -4.614279747009277
    6. '   ' → logprob: -5.239279747009277
    7. '<|end|>' → logprob: -5.614279747009277
    8. ' <=' → logprob: -5.614279747009277
    9. 'max' → logprob: -5.864279747009277
    10. ' ' → logprob: -6.114279747009277

Token 2736: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1655110865831375
    2. 'max' → logprob: -2.915511131286621
    3. '_max' → logprob: -4.040511131286621
    4. '_x' → logprob: -4.165511131286621
    5. '_' → logprob: -4.665511131286621
    6. ' max' → logprob: -4.665511131286621
    7. 'x' → logprob: -4.915511131286621
    8. ':' → logprob: -5.165511131286621
    9. '+' → logprob: -5.165511131286621
    10. '=' → logprob: -5.540511131286621

Token 2737: ' bounding' (ID: 70758)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08391004055738449
    2. 'and' → logprob: -3.2089099884033203
    3. 'if' → logprob: -4.33390998840332
    4. ' and' → logprob: -4.33390998840332
    5. ' if' → logprob: -5.20890998840332
    6. ':
' → logprob: -5.83390998840332
    7. '           ' → logprob: -6.58390998840332
    8. '
' → logprob: -6.95890998840332
    9. ',' → logprob: -7.20890998840332
    10. ':' → logprob: -7.45890998840332

Token 2738: ' box' (ID: 5506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1761513501405716
    2. '+' → logprob: -2.5511512756347656
    3. 'and' → logprob: -3.8011512756347656
    4. ' and' → logprob: -4.551151275634766
    5. '+
' → logprob: -4.551151275634766
    6. 'if' → logprob: -4.801151275634766
    7. ':
' → logprob: -4.801151275634766
    8. ' if' → logprob: -5.301151275634766
    9. '           ' → logprob: -5.551151275634766
    10. ')' → logprob: -6.301151275634766

Token 2739: ' size' (ID: 2349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004386082757264376
    2. ' if' → logprob: -5.754385948181152
    3. '           ' → logprob: -7.754385948181152
    4. ' and' → logprob: -8.254385948181152
    5. 'if' → logprob: -8.379385948181152
    6. 'and' → logprob: -8.879385948181152
    7. ',' → logprob: -10.379385948181152
    8. '        ' → logprob: -10.754385948181152
    9. '   ' → logprob: -10.879385948181152
    10. '=' → logprob: -11.504385948181152

Token 2740: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009898189455270767
    2. 'and' → logprob: -7.37598991394043
    3. 'if' → logprob: -8.87598991394043
    4. ' and' → logprob: -9.12598991394043
    5. ' if' → logprob: -10.00098991394043
    6. '           ' → logprob: -10.87598991394043
    7. 'return' → logprob: -11.25098991394043
    8. '
' → logprob: -11.75098991394043
    9. ',' → logprob: -12.12598991394043
    10. ':' → logprob: -12.37598991394043

Token 2741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.9054008084349334e-05
    2. 'return' → logprob: -10.250039100646973
    3. '           ' → logprob: -13.125039100646973
    4. '   ' → logprob: -14.250039100646973
    5. 'if' → logprob: -14.875039100646973
    6. '
' → logprob: -15.250039100646973
    7. ' return' → logprob: -15.750039100646973
    8. ' if' → logprob: -16.750038146972656
    9. '               ' → logprob: -16.750038146972656
    10. '```' → logprob: -17.375038146972656

Token 2742: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18176281452178955
    2. 'return' → logprob: -2.1817626953125
    3. '       ' → logprob: -2.9317626953125
    4. ' if' → logprob: -10.5567626953125
    5. 'width' → logprob: -11.3067626953125
    6. 'size' → logprob: -12.1817626953125
    7. 'w' → logprob: -12.5567626953125
    8. ' return' → logprob: -13.1817626953125
    9. '```' → logprob: -13.4317626953125
    10. '
' → logprob: -13.4317626953125

Token 2743: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.002520488342270255
    2. 'max' → logprob: -6.002520561218262
    3. ' (' → logprob: -11.002520561218262
    4. 'not' → logprob: -11.752520561218262
    5. ' max' → logprob: -11.877520561218262
    6. '(' → logprob: -12.877520561218262
    7. '(min' → logprob: -13.002520561218262
    8. '   ' → logprob: -13.252520561218262
    9. '(not' → logprob: -13.252520561218262
    10. '[max' → logprob: -13.502520561218262

Token 2744: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.038056522607803345
    2. '(max' → logprob: -3.2880566120147705
    3. ' max' → logprob: -11.288056373596191
    4. '[max' → logprob: -14.663056373596191
    5. '=max' → logprob: -14.663056373596191
    6. ' (' → logprob: -14.913056373596191
    7. '	max' → logprob: -15.038056373596191
    8. '   ' → logprob: -15.288056373596191
    9. ',max' → logprob: -15.913056373596191
    10. '
' → logprob: -16.163057327270508

Token 2745: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -8.53050296427682e-05
    2. 'x' → logprob: -9.62508487701416
    3. '_' → logprob: -11.75008487701416
    4. 'max' → logprob: -11.87508487701416
    5. 'X' → logprob: -13.87508487701416
    6. ' -' → logprob: -14.75008487701416
    7. '._' → logprob: -14.87508487701416
    8. '(max' → logprob: -14.87508487701416
    9. '```' → logprob: -15.12508487701416
    10. ' _' → logprob: -15.12508487701416

Token 2746: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01251847855746746
    2. '-' → logprob: -4.387518405914307
    3. '-min' → logprob: -11.887518882751465
    4. ' -
' → logprob: -14.137518882751465
    5. ' ' → logprob: -14.887518882751465
    6. '-
' → logprob: -15.137518882751465
    7. 'min' → logprob: -15.887518882751465
    8. ',' → logprob: -16.38751792907715
    9. ' ==' → logprob: -16.38751792907715
    10. '==' → logprob: -16.88751792907715

Token 2747: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02324594371020794
    2. ' min' → logprob: -3.7732460498809814
    3. '(min' → logprob: -14.898245811462402
    4. '_min' → logprob: -16.52324676513672
    5. '[min' → logprob: -17.89824676513672
    6. '	min' → logprob: -18.64824676513672
    7. 'max' → logprob: -19.27324676513672
    8. 'minimum' → logprob: -19.27324676513672
    9. 'm' → logprob: -19.52324676513672
    10. 'mini' → logprob: -19.64824676513672

Token 2748: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.025485530495643616
    2. 'min' → logprob: -4.525485515594482
    3. '_min' → logprob: -4.650485515594482
    4. 'x' → logprob: -5.525485515594482
    5. ' min' → logprob: -7.900485515594482
    6. '(min' → logprob: -8.52548599243164
    7. '_' → logprob: -8.77548599243164
    8. '[min' → logprob: -10.02548599243164
    9. 'xmin' → logprob: -11.40048599243164
    10. '=min' → logprob: -12.02548599243164

Token 2749: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5768910050392151
    2. '+' → logprob: -0.8268910050392151
    3. ' ==' → logprob: -7.95189094543457
    4. ')' → logprob: -7.95189094543457
    5. '==' → logprob: -8.70189094543457
    6. ' !=' → logprob: -9.82689094543457
    7. ')+' → logprob: -11.95189094543457
    8. '!=' → logprob: -11.95189094543457
    9. '[' → logprob: -13.20189094543457
    10. ')==' → logprob: -13.20189094543457

Token 2750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016481097787618637
    2. ' ' → logprob: -4.141480922698975
    3. '3' → logprob: -8.016481399536133
    4. '```' → logprob: -9.141481399536133
    5. '9' → logprob: -12.891481399536133
    6. '7' → logprob: -13.516481399536133
    7. '           ' → logprob: -14.141481399536133
    8. '==' → logprob: -14.141481399536133
    9. '6' → logprob: -14.141481399536133
    10. '2' → logprob: -14.266481399536133

Token 2751: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6786016821861267
    2. ')' → logprob: -0.8036016821861267
    3. '!=' → logprob: -3.4286017417907715
    4. ' ==' → logprob: -5.0536017417907715
    5. '==' → logprob: -5.4286017417907715
    6. ')!=' → logprob: -6.5536017417907715
    7. ' )' → logprob: -8.303601264953613
    8. ')==' → logprob: -9.928601264953613
    9. '```' → logprob: -10.803601264953613
    10. '   ' → logprob: -12.803601264953613

Token 2752: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11720751971006393
    2. ' !=' → logprob: -2.3672075271606445
    3. '==' → logprob: -4.1172075271606445
    4. ' ==' → logprob: -7.7422075271606445
    5. '<' → logprob: -9.367207527160645
    6. '```' → logprob: -11.367207527160645
    7. '>' → logprob: -11.492207527160645
    8. '<=' → logprob: -12.117207527160645
    9. ')!=' → logprob: -12.867207527160645
    10. ')' → logprob: -12.867207527160645

Token 2753: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.5
    4. '۳' → logprob: -19.5
    5. '```' → logprob: -19.75
    6. '３' → logprob: -20.625
    7. '٣' → logprob: -21.125
    8. '' → logprob: -21.25
    9. '৩' → logprob: -21.375
    10. '३' → logprob: -22.0625

Token 2754: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۳' → logprob: -17.875001907348633
    4. '৩' → logprob: -18.937501907348633
    5. '３' → logprob: -19.375001907348633
    6. '```' → logprob: -19.437501907348633
    7. '٣' → logprob: -19.750001907348633
    8. '३' → logprob: -19.875001907348633
    9. '' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.250001907348633

Token 2755: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.021506670862436295
    2. ' and' → logprob: -4.5215067863464355
    3. 'and' → logprob: -5.2715067863464355
    4. 'or' → logprob: -5.8965067863464355
    5. ':' → logprob: -6.8965067863464355
    6. '<|end|>' → logprob: -7.5215067863464355
    7. '       ' → logprob: -7.8965067863464355
    8. '           ' → logprob: -8.521506309509277
    9. ')' → logprob: -8.646506309509277
    10. ':return' → logprob: -9.021506309509277

Token 2756: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0005538671393878758
    2. ' (' → logprob: -7.500554084777832
    3. '       ' → logprob: -14.875554084777832
    4. '[max' → logprob: -15.500554084777832
    5. 'max' → logprob: -15.875554084777832
    6. '   ' → logprob: -16.125553131103516
    7. '           ' → logprob: -16.750553131103516
    8. '(min' → logprob: -17.125553131103516
    9. '(' → logprob: -17.500553131103516
    10. ' ' → logprob: -18.125553131103516

Token 2757: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003189478302374482
    2. '(max' → logprob: -5.753189563751221
    3. ' max' → logprob: -11.378189086914062
    4. '[max' → logprob: -15.253189086914062
    5. '=max' → logprob: -17.253189086914062
    6. '
' → logprob: -17.628189086914062
    7. '	max' → logprob: -17.878189086914062
    8. ',max' → logprob: -18.378189086914062
    9. ' (' → logprob: -18.753189086914062
    10. '   ' → logprob: -19.503189086914062

Token 2758: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.000555416801944375
    2. 'y' → logprob: -7.625555515289307
    3. 'Y' → logprob: -9.875555038452148
    4. '_x' → logprob: -11.250555038452148
    5. '```' → logprob: -14.250555038452148
    6. 'max' → logprob: -14.750555038452148
    7. '-y' → logprob: -15.250555038452148
    8. '_' → logprob: -15.375555038452148
    9. '[' → logprob: -15.750555038452148
    10. '#' → logprob: -16.12555503845215

Token 2759: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0046781376004219055
    2. '-' → logprob: -5.379678249359131
    3. '-min' → logprob: -10.004677772521973
    4. '<|end|>' → logprob: -11.504677772521973
    5. '-m' → logprob: -13.879677772521973
    6. ' ' → logprob: -14.504677772521973
    7. '<|end|>' → logprob: -15.504677772521973
    8. '-next' → logprob: -16.25467872619629
    9. ' -
' → logprob: -16.37967872619629
    10. 'min' → logprob: -16.50467872619629

Token 2760: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00033713103039190173
    2. ' min' → logprob: -8.000337600708008
    3. 'max' → logprob: -13.500337600708008
    4. '(min' → logprob: -15.375337600708008
    5. '_min' → logprob: -16.750337600708008
    6. '[min' → logprob: -17.625337600708008
    7. 'mini' → logprob: -19.250337600708008
    8. '	min' → logprob: -19.500337600708008
    9. 'minimum' → logprob: -20.375337600708008
    10. '.min' → logprob: -20.375337600708008

Token 2761: '_y' (ID: 9410)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1736292690038681
    2. '_y' → logprob: -2.2986292839050293
    3. '_min' → logprob: -2.9236292839050293
    4. ' min' → logprob: -5.798629283905029
    5. '1' → logprob: -6.423629283905029
    6. '(min' → logprob: -7.923629283905029
    7. 'y' → logprob: -9.798628807067871
    8. 'Y' → logprob: -9.798628807067871
    9. '_x' → logprob: -10.423628807067871
    10. '-min' → logprob: -10.798628807067871

Token 2762: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6326941251754761
    2. '+' → logprob: -0.7576941251754761
    3. '<|end|>' → logprob: -10.382694244384766
    4. '```' → logprob: -10.882694244384766
    5. ' !=' → logprob: -11.382694244384766
    6. '()+' → logprob: -12.257694244384766
    7. '<|end|>' → logprob: -12.507694244384766
    8. ')' → logprob: -12.632694244384766
    9. '!=' → logprob: -13.007694244384766
    10. ' +=' → logprob: -13.007694244384766

Token 2763: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0032875132746994495
    2. '1' → logprob: -5.753287315368652
    3. ' ' → logprob: -9.128287315368652
    4. '   ' → logprob: -15.003287315368652
    5. '```' → logprob: -15.128287315368652
    6. ')' → logprob: -15.878287315368652
    7. '
' → logprob: -15.878287315368652
    8. '=' → logprob: -16.37828826904297
    9. '  ' → logprob: -16.56578826904297
    10. '    ' → logprob: -17.62828826904297

Token 2764: ')!=' (ID: 86517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028411133214831352
    2. ')!=' → logprob: -3.9034111499786377
    3. ' !=' → logprob: -5.403410911560059
    4. '!=' → logprob: -5.778410911560059
    5. ' )' → logprob: -9.653410911560059
    6. ')==' → logprob: -10.028410911560059
    7. '<|end|>' → logprob: -10.153410911560059
    8. '```' → logprob: -10.528410911560059
    9. ']!=' → logprob: -10.778410911560059
    10. '==' → logprob: -11.278410911560059

Token 2765: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۳' → logprob: -19.625011444091797
    4. '   ' → logprob: -19.750011444091797
    5. '３' → logprob: -20.875011444091797
    6. '```' → logprob: -21.750011444091797
    7. '٣' → logprob: -22.125011444091797
    8. '৩' → logprob: -22.125011444091797
    9. '³' → logprob: -22.625011444091797
    10. '' → logprob: -22.812511444091797

Token 2766: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15372809767723083
    2. ':' → logprob: -2.6537280082702637
    3. ' or' → logprob: -3.4037280082702637
    4. ':
' → logprob: -3.6537280082702637
    5. ':return' → logprob: -5.653728008270264
    6. '               ' → logprob: -5.778728008270264
    7. ' and' → logprob: -6.028728008270264
    8. '       ' → logprob: -6.528728008270264
    9. '          ' → logprob: -6.778728008270264
    10. 'and' → logprob: -7.528728008270264

Token 2767: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019245444855187088
    2. '       ' → logprob: -10.000192642211914
    3. 'return' → logprob: -10.250192642211914
    4. '               ' → logprob: -10.375192642211914
    5. '          ' → logprob: -11.250192642211914
    6. ' return' → logprob: -11.375192642211914
    7. ':' → logprob: -11.500192642211914
    8. '            ' → logprob: -11.625192642211914
    9. '
' → logprob: -11.875192642211914
    10. '		' → logprob: -12.625192642211914

Token 2768: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.016072848811745644
    2. '           ' → logprob: -4.266072750091553
    3. ' return' → logprob: -6.266072750091553
    4. ':return' → logprob: -12.891073226928711
    5. '	return' → logprob: -13.766073226928711
    6. '   ' → logprob: -14.016073226928711
    7. '{return' → logprob: -14.016073226928711
    8. '               ' → logprob: -14.016073226928711
    9. 'Return' → logprob: -14.516073226928711
    10. '       ' → logprob: -15.141073226928711

Token 2769: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.320199877838604e-07
    2. ' False' → logprob: -15.0
    3. '(False' → logprob: -19.625
    4. 'True' → logprob: -20.0
    5. 'false' → logprob: -21.0
    6. '=False' → logprob: -21.875
    7. 'F' → logprob: -21.875
    8. '_false' → logprob: -22.75
    9. '```' → logprob: -23.75
    10. 'Fal' → logprob: -24.25

Token 2770: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021283722016960382
    2. '           ' → logprob: -7.252128601074219
    3. '
' → logprob: -7.752128601074219
    4. '               ' → logprob: -8.127128601074219
    5. '	' → logprob: -8.252128601074219
    6. 'return' → logprob: -9.627128601074219
    7. ' return' → logprob: -9.752128601074219
    8. '   ' → logprob: -10.002128601074219
    9. '<|end|>' → logprob: -10.002128601074219
    10. ',' → logprob: -10.127128601074219

Token 2771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0050011747516691685
    2. '           ' → logprob: -6.130001068115234
    3. ' for' → logprob: -6.505001068115234
    4. 'for' → logprob: -7.255001068115234
    5. '               ' → logprob: -7.880001068115234
    6. ' if' → logprob: -9.505001068115234
    7. 'return' → logprob: -9.755001068115234
    8. 'if' → logprob: -10.130001068115234
    9. '
' → logprob: -10.630001068115234
    10. '   ' → logprob: -11.255001068115234

Token 2772: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05566173046827316
    2. 'for' → logprob: -3.680661678314209
    3. 'center' → logprob: -4.180661678314209
    4. 'points' → logprob: -5.305661678314209
    5. 'if' → logprob: -5.930661678314209
    6. '
' → logprob: -6.305661678314209
    7. 'count' → logprob: -6.430661678314209
    8. 'return' (adapté à ' return') → logprob: -7.180661678314209
    9. ' for' → logprob: -8.305662155151367
    10. '#' → logprob: -8.555662155151367

Token 2773: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.006232010200619698
    2. 'points' → logprob: -5.256231784820557
    3. 'len' → logprob: -7.256231784820557
    4. ' cls' → logprob: -8.756232261657715
    5. '(cls' → logprob: -9.381232261657715
    6. 'pts' → logprob: -11.756232261657715
    7. 'all' → logprob: -11.756232261657715
    8. 'set' → logprob: -12.006232261657715
    9. '   ' → logprob: -12.131232261657715
    10. '(points' → logprob: -12.256232261657715

Token 2774: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -5.431207682704553e-05
    2. '.pattern' → logprob: -9.875054359436035
    3. 'match' → logprob: -12.875054359436035
    4. '.' → logprob: -16.00005340576172
    5. '.matches' → logprob: -16.62505340576172
    6. 'pattern' → logprob: -17.75005340576172
    7. '.matcher' → logprob: -18.50005340576172
    8. '   ' → logprob: -19.00005340576172
    9. '       ' → logprob: -19.12505340576172
    10. '.try' → logprob: -19.12505340576172

Token 2775: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.0003609680861700326
    2. 'pattern' → logprob: -8.875361442565918
    3. '(points' → logprob: -9.000361442565918
    4. 'points' → logprob: -10.500361442565918
    5. '(p' → logprob: -10.750361442565918
    6. '_' → logprob: -11.125361442565918
    7. '_points' → logprob: -11.125361442565918
    8. '_point' → logprob: -12.250361442565918
    9. '_class' → logprob: -12.500361442565918
    10. '(pattern' → logprob: -13.000361442565918

Token 2776: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -2.451116051815916e-05
    2. 'points' → logprob: -11.000024795532227
    3. '(
' → logprob: -11.875024795532227
    4. '(' → logprob: -14.250024795532227
    5. '(point' → logprob: -17.375024795532227
    6. '       ' → logprob: -17.500024795532227
    7. '	points' → logprob: -17.500024795532227
    8. ' points' → logprob: -17.625024795532227
    9. '
' → logprob: -17.875024795532227
    10. '(cls' → logprob: -18.125024795532227

Token 2777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019221604452468455
    2. '(points' → logprob: -9.000192642211914
    3. '           ' → logprob: -10.500192642211914
    4. '       ' → logprob: -10.875192642211914
    5. ' ,' → logprob: -11.500192642211914
    6. 'points' → logprob: -12.625192642211914
    7. ',
' → logprob: -13.000192642211914
    8. '   ' → logprob: -13.375192642211914
    9. ',p' → logprob: -13.500192642211914
    10. '               ' → logprob: -13.625192642211914

Token 2778: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.339278580620885e-06
    2. ' min' → logprob: -13.000001907348633
    3. 'max' → logprob: -19.000001907348633
    4. '(min' → logprob: -20.875001907348633
    5. '[min' → logprob: -21.375001907348633
    6. '_min' → logprob: -21.875001907348633
    7. '	min' → logprob: -23.250001907348633
    8. 'mini' → logprob: -24.375001907348633
    9. '
' → logprob: -25.625001907348633
    10. '   ' → logprob: -25.750001907348633

Token 2779: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -9.014684110297821e-06
    2. 'x' → logprob: -11.625008583068848
    3. '(min' → logprob: -18.125009536743164
    4. '_y' → logprob: -18.125009536743164
    5. 'min' → logprob: -18.375009536743164
    6. '_min' → logprob: -18.875009536743164
    7. '_' → logprob: -20.375009536743164
    8. 'X' → logprob: -20.625009536743164
    9. 'xmin' → logprob: -20.625009536743164
    10. '   ' → logprob: -20.875009536743164

Token 2780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008586966432631016
    2. ' ,' → logprob: -7.125858783721924
    3. '+' → logprob: -10.375858306884766
    4. ' +' → logprob: -11.250858306884766
    5. ',min' → logprob: -12.625858306884766
    6. ',
' → logprob: -12.750858306884766
    7. '   ' → logprob: -13.875858306884766
    8. '       ' → logprob: -15.000858306884766
    9. '```' → logprob: -15.000858306884766
    10. '        ' → logprob: -15.125858306884766

Token 2781: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0004306692280806601
    2. ' min' → logprob: -7.750430583953857
    3. '(min' → logprob: -18.625431060791016
    4. '[min' → logprob: -18.625431060791016
    5. '_min' → logprob: -19.000431060791016
    6. 'max' → logprob: -19.375431060791016
    7. '	min' → logprob: -19.625431060791016
    8. 'Min' → logprob: -21.250431060791016
    9. 'm' → logprob: -21.250431060791016
    10. ',min' → logprob: -22.000431060791016

Token 2782: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.02641478180885315
    2. 'y' → logprob: -3.6514148712158203
    3. 'min' → logprob: -9.65141487121582
    4. '_min' → logprob: -10.90141487121582
    5. 'Y' → logprob: -11.40141487121582
    6. '_x' → logprob: -11.52641487121582
    7. 'x' → logprob: -12.27641487121582
    8. '_' → logprob: -13.65141487121582
    9. '1' → logprob: -13.90141487121582
    10. '   ' → logprob: -14.15141487121582

Token 2783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016241880075540394
    2. ' ,' → logprob: -9.125162124633789
    3. ',max' → logprob: -10.500162124633789
    4. '       ' → logprob: -11.875162124633789
    5. '        ' → logprob: -12.625162124633789
    6. ',min' → logprob: -12.625162124633789
    7. '```' → logprob: -13.375162124633789
    8. '           ' → logprob: -13.625162124633789
    9. ',m' → logprob: -13.750162124633789
    10. '`,' → logprob: -14.000162124633789

Token 2784: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.636475493200123e-05
    2. ' min' → logprob: -9.500076293945312
    3. 'max' → logprob: -13.500076293945312
    4. '(min' → logprob: -22.500076293945312
    5. '_min' → logprob: -22.500076293945312
    6. '[min' → logprob: -22.500076293945312
    7. '	min' → logprob: -22.875076293945312
    8. 'm' → logprob: -23.125076293945312
    9. ' max' → logprob: -23.125076293945312
    10. '   ' → logprob: -23.125076293945312

Token 2785: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.006029761396348476
    2. '_y' → logprob: -5.1310296058654785
    3. 'x' → logprob: -9.256030082702637
    4. '1' → logprob: -13.381030082702637
    5. 'min' → logprob: -13.756030082702637
    6. 'max' → logprob: -14.256030082702637
    7. 'y' → logprob: -14.381030082702637
    8. '   ' → logprob: -14.506030082702637
    9. '```' → logprob: -14.756030082702637
    10. '_min' → logprob: -15.381030082702637

Token 2786: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000885730201844126
    2. ' ,' → logprob: -7.875885963439941
    3. ',min' → logprob: -8.125885963439941
    4. '+' → logprob: -8.875885963439941
    5. ' +' → logprob: -10.375885963439941
    6. '```' → logprob: -11.000885963439941
    7. '<|end|>' → logprob: -11.500885963439941
    8. ',max' → logprob: -12.500885963439941
    9. '[' → logprob: -13.375885963439941
    10. '[min' → logprob: -14.125885963439941

Token 2787: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0032756258733570576
    2. ' min' → logprob: -5.753275394439697
    3. 'max' → logprob: -9.253275871276855
    4. '_min' → logprob: -13.503275871276855
    5. ' max' → logprob: -14.628275871276855
    6. '[min' → logprob: -16.00327491760254
    7. '(min' → logprob: -16.37827491760254
    8. '	min' → logprob: -17.87827491760254
    9. ',min' → logprob: -18.37827491760254
    10. 'm' → logprob: -19.12827491760254

Token 2788: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0024762547109276056
    2. 'min' → logprob: -6.252476215362549
    3. 'y' → logprob: -7.877476215362549
    4. '_min' → logprob: -9.627476692199707
    5. 'max' → logprob: -10.377476692199707
    6. '_x' → logprob: -10.627476692199707
    7. '(min' → logprob: -11.002476692199707
    8. 'Y' → logprob: -11.502476692199707
    9. '```' → logprob: -12.252476692199707
    10. '_' → logprob: -12.877476692199707

Token 2789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2617008400848135e-05
    2. ' ,' → logprob: -11.375032424926758
    3. '       ' → logprob: -11.625032424926758
    4. '   ' → logprob: -12.125032424926758
    5. ',D' → logprob: -13.375032424926758
    6. ',p' → logprob: -13.750032424926758
    7. '           ' → logprob: -14.000032424926758
    8. ',
' → logprob: -14.250032424926758
    9. ',d' → logprob: -14.500032424926758
    10. ')' → logprob: -14.875032424926758

Token 2790: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0002651503309607506
    2. ' cls' → logprob: -8.250265121459961
    3. '[
' → logprob: -13.250265121459961
    4. 'Dot' → logprob: -13.625265121459961
    5. '['' → logprob: -15.000265121459961
    6. '   ' → logprob: -15.375265121459961
    7. '       ' → logprob: -16.00026512145996
    8. 'Cls' → logprob: -16.87526512145996
    9. '["' → logprob: -17.12526512145996
    10. '[' → logprob: -17.12526512145996

Token 2791: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.00028576893964782357
    2. 'pattern' → logprob: -8.750286102294922
    3. '[' → logprob: -9.750286102294922
    4. '.' → logprob: -9.750286102294922
    5. '['' → logprob: -12.375286102294922
    6. '   ' → logprob: -12.500286102294922
    7. '.p' → logprob: -14.500286102294922
    8. '[
' → logprob: -14.750286102294922
    9. '
' → logprob: -14.875286102294922
    10. '.Pattern' → logprob: -15.000286102294922

Token 2792: ')


' (ID: 7861)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2793: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.08716028928756714
    2. '   ' → logprob: -3.337160348892212
    3. 'def' → logprob: -3.962160348892212
    4. '
' → logprob: -4.087160110473633
    5. '#' → logprob: -4.712160110473633
    6. 'CHAR' → logprob: -6.962160110473633
    7. 'Character' → logprob: -7.212160110473633
    8. 'character' → logprob: -8.087160110473633
    9. 'char' → logprob: -8.337160110473633
    10. 'characters' → logprob: -8.962160110473633

Token 2794: ' Factory' (ID: 28905)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5622961521148682
    2. 'class' → logprob: -0.9372961521148682
    3. '#' → logprob: -3.937296152114868
    4. 'CHAR' → logprob: -4.312295913696289
    5. 'character' → logprob: -5.812295913696289
    6. 'char' → logprob: -6.562295913696289
    7. 'characters' → logprob: -7.687295913696289
    8. '_char' → logprob: -9.437295913696289
    9. 'classes' → logprob: -9.437295913696289
    10. '
' → logprob: -9.562295913696289

Token 2795: ' that' (ID: 484)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.000260382192209363
    2. '
' → logprob: -8.500260353088379
    3. 'classes' → logprob: -10.375260353088379
    4. '_classes' → logprob: -12.125260353088379
    5. 'Character' → logprob: -12.500260353088379
    6. 'characters' → logprob: -12.625260353088379
    7. '_character' → logprob: -12.875260353088379
    8. 'character' → logprob: -12.875260353088379
    9. 'def' → logprob: -13.000260353088379
    10. '_char' → logprob: -13.375260353088379

Token 2796: ' tries' (ID: 30519)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25746193528175354
    2. 'def' → logprob: -1.6324619054794312
    3. 'provid' → logprob: -4.007462024688721
    4. 'creates' → logprob: -5.257462024688721
    5. 'returns' → logprob: -6.132462024688721
    6. ' def' → logprob: -6.632462024688721
    7. ' class' → logprob: -7.007462024688721
    8. 'from' → logprob: -7.382462024688721
    9. '   ' → logprob: -7.757462024688721
    10. 'maps' → logprob: -8.507461547851562

Token 2797: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23273491859436035
    2. 'class' → logprob: -1.8577349185943604
    3. '@' → logprob: -4.107734680175781
    4. '   ' → logprob: -4.107734680175781
    5. ' def' → logprob: -4.607734680175781
    6. 'to' → logprob: -5.982734680175781
    7. ' to' → logprob: -6.732734680175781
    8. 'character' → logprob: -6.732734680175781
    9. ' @' → logprob: -6.857734680175781
    10. '_character' → logprob: -7.357734680175781

Token 2798: ' identify' (ID: 11410)
  Prédit: 'recogn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'recogn' → logprob: -1.1403453350067139
    2. 'match' → logprob: -1.2653453350067139
    3. 'detect' → logprob: -2.015345335006714
    4. 'identify' → logprob: -2.140345335006714
    5. 'create' → logprob: -2.640345335006714
    6. 'class' → logprob: -3.390345335006714
    7. 'find' → logprob: -3.765345335006714
    8. 'parse' → logprob: -5.640345573425293
    9. 'register' → logprob: -6.265345573425293
    10. 'decode' → logprob: -6.390345573425293

Token 2799: ' character' (ID: 5855)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0011566509492695332
    2. '   ' → logprob: -7.001156806945801
    3. ' class' → logprob: -9.5011568069458
    4. 'Character' → logprob: -10.0011568069458
    5. 'character' → logprob: -10.3761568069458
    6. 'characters' → logprob: -10.7511568069458
    7. 'def' → logprob: -11.0011568069458
    8. 'classes' → logprob: -11.0011568069458
    9. '
' → logprob: -11.1261568069458
    10. '@' → logprob: -11.3761568069458

Token 2800: ' from' (ID: 591)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0008022417314350605
    2. '
' → logprob: -7.625802040100098
    3. 'classes' → logprob: -9.125802040100098
    4. 'characters' → logprob: -9.500802040100098
    5. '(
' → logprob: -10.375802040100098
    6. 'Character' → logprob: -10.875802040100098
    7. 'def' → logprob: -11.125802040100098
    8. ':
' → logprob: -11.375802040100098
    9. 'character' → logprob: -11.875802040100098
    10. '(class' → logprob: -12.250802040100098

Token 2801: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.06921064853668213
    2. 'occupied' → logprob: -3.1942105293273926
    3. 'characters' → logprob: -5.069210529327393
    4. 'the' → logprob: -5.069210529327393
    5. '#' → logprob: -5.819210529327393
    6. 'point' → logprob: -6.569210529327393
    7. 'class' → logprob: -6.694210529327393
    8. 'Set' → logprob: -6.694210529327393
    9. ' points' → logprob: -6.819210529327393
    10. '
' → logprob: -7.069210529327393

Token 2802: ' by' (ID: 656)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00011832444579340518
    2. '
' → logprob: -9.375118255615234
    3. 'character' → logprob: -10.500118255615234
    4. 'characters' → logprob: -12.875118255615234
    5. 'char' → logprob: -13.375118255615234
    6. '_character' → logprob: -14.375118255615234
    7. 'Character' → logprob: -15.250118255615234
    8. 'classes' → logprob: -15.500118255615234
    9. '_char' → logprob: -15.625118255615234
    10. '_class' → logprob: -15.750118255615234

Token 2803: ' trying' (ID: 6700)
  Prédit: 'checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checking' → logprob: -0.4445711076259613
    2. 'trying' → logprob: -2.319571018218994
    3. 'class' → logprob: -2.694571018218994
    4. 'classmethod' → logprob: -2.819571018218994
    5. 'def' → logprob: -3.319571018218994
    6. 'characters' → logprob: -3.819571018218994
    7. 'try' → logprob: -3.944571018218994
    8. 'return' → logprob: -4.694571018218994
    9. 'testing' → logprob: -4.944571018218994
    10. 'points' → logprob: -5.069571018218994

Token 2804: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.04437229409813881
    2. 'each' → logprob: -4.294372081756592
    3. 'characters' → logprob: -5.169372081756592
    4. ' all' → logprob: -5.294372081756592
    5. 'the' → logprob: -5.544372081756592
    6. 'character' → logprob: -5.794372081756592
    7. 'classes' → logprob: -6.044372081756592
    8. 'known' → logprob: -6.169372081756592
    9. '#' → logprob: -6.169372081756592
    10. '   ' → logprob: -6.419372081756592

Token 2805: ' known' (ID: 5542)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.6823412179946899
    2. '[
' → logprob: -0.9323412179946899
    3. '[' → logprob: -3.4323410987854004
    4. 'class' → logprob: -3.9323410987854004
    5. 'classes' → logprob: -4.5573410987854
    6. '(Character' → logprob: -5.1823410987854
    7. '(
' → logprob: -5.4323410987854
    8. 'character' → logprob: -5.4323410987854
    9. 'characters' → logprob: -5.4323410987854
    10. ' Character' → logprob: -5.5573410987854

Token 2806: ' characters' (ID: 9862)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.27060508728027344
    2. 'characters' → logprob: -2.3956050872802734
    3. 'classes' → logprob: -2.6456050872802734
    4. 'class' → logprob: -3.1456050872802734
    5. '_character' → logprob: -4.770605087280273
    6. 'character' → logprob: -4.770605087280273
    7. ' Character' → logprob: -5.395605087280273
    8. '(Character' → logprob: -5.520605087280273
    9. '
' → logprob: -6.395605087280273
    10. 'Characters' → logprob: -7.145605087280273

Token 2807: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004670780152082443
    2. '
' → logprob: -5.7546706199646
    3. ':
' → logprob: -8.004671096801758
    4. 'Character' → logprob: -8.254671096801758
    5. 'characters' → logprob: -8.254671096801758
    6. 'character' → logprob: -8.504671096801758
    7. '   ' → logprob: -9.629671096801758
    8. '(
' → logprob: -9.629671096801758
    9. 'char' → logprob: -9.879671096801758
    10. '_character' → logprob: -9.879671096801758

Token 2808: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.7159857786027715e-05
    2. '
' → logprob: -10.375046730041504
    3. 'character' → logprob: -11.375046730041504
    4. 'def' → logprob: -13.250046730041504
    5. 'char' → logprob: -14.250046730041504
    6. 'characters' → logprob: -14.375046730041504
    7. '_class' → logprob: -15.000046730041504
    8. '_character' → logprob: -15.125046730041504
    9. ' class' → logprob: -16.00004768371582
    10. '_char' → logprob: -16.12504768371582

Token 2809: ' Character' (ID: 27668)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.00038384052459150553
    2. ' Character' → logprob: -8.750383377075195
    3. 'Recognizer' → logprob: -9.500383377075195
    4. 'Char' → logprob: -10.125383377075195
    5. 'def' → logprob: -10.250383377075195
    6. 'Characters' → logprob: -10.250383377075195
    7. '_character' → logprob: -11.500383377075195
    8. 'Known' → logprob: -12.000383377075195
    9. 'character' → logprob: -12.000383377075195
    10. 'Recogn' → logprob: -12.750383377075195

Token 2810: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.008879040367901325
    2. 'Recognizer' → logprob: -4.7588791847229
    3. 'Finder' → logprob: -9.508878707885742
    4. 'Detector' → logprob: -9.508878707885742
    5. ':
' → logprob: -9.883878707885742
    6. 'Classifier' → logprob: -10.633878707885742
    7. 'Identifier' → logprob: -12.133878707885742
    8. 'Extractor' → logprob: -12.258878707885742
    9. ':' → logprob: -12.383878707885742
    10. 'Parser' → logprob: -12.508878707885742

Token 2811: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519811689853668
    2. ':
' → logprob: -1.5019811391830444
    3. ':

' → logprob: -10.126980781555176
    4. '   ' → logprob: -13.001980781555176
    5. 'class' → logprob: -13.251980781555176
    6. ':def' → logprob: -13.376980781555176
    7. '):
' → logprob: -14.126980781555176
    8. ' :
' → logprob: -14.251980781555176
    9. ':
' → logprob: -14.251980781555176
    10. ' :' → logprob: -14.251980781555176

Token 2812: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014355066232383251
    2. 'class' → logprob: -4.264355182647705
    3. 'def' → logprob: -10.014354705810547
    4. '    
' → logprob: -10.139354705810547
    5. '```' → logprob: -10.264354705810547
    6. ':' → logprob: -10.764354705810547
    7. '
' → logprob: -11.139354705810547
    8. 'characters' → logprob: -11.514354705810547
    9. ' class' → logprob: -11.764354705810547
    10. 'known' → logprob: -11.764354705810547

Token 2813: ' char' (ID: 1826)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.5013415813446045
    2. 'known' → logprob: -1.8763415813446045
    3. '@' → logprob: -2.2513415813446045
    4. '   ' → logprob: -2.6263415813446045
    5. 'char' (adapté à ' char') → logprob: -4.251341819763184
    6. '_char' → logprob: -4.501341819763184
    7. '_known' → logprob: -4.751341819763184
    8. 'chars' → logprob: -4.751341819763184
    9. 'class' → logprob: -5.001341819763184
    10. 'character' → logprob: -5.001341819763184

Token 2814: '_classes' (ID: 37969)
  Prédit: 'acters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.1180087998509407
    2. 's' → logprob: -2.368008852005005
    3. '_classes' → logprob: -4.118008613586426
    4. 'acter' → logprob: -6.868008613586426
    5. 'classes' → logprob: -9.743008613586426
    6. '_types' → logprob: -9.868008613586426
    7. 'set' → logprob: -9.993008613586426
    8. '_candidates' → logprob: -9.993008613586426
    9. '   ' → logprob: -10.493008613586426
    10. '_list' → logprob: -10.868008613586426

Token 2815: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016938310116529465
    2. '=' → logprob: -4.141938209533691
    3. ':' → logprob: -7.141938209533691
    4. ' =[' → logprob: -10.141938209533691
    5. '=[' → logprob: -10.891938209533691
    6. '   ' → logprob: -11.016938209533691
    7. ' ' → logprob: -11.266938209533691
    8. '=[
' → logprob: -11.641938209533691
    9. '[' → logprob: -12.266938209533691
    10. ' :' → logprob: -12.391938209533691

Token 2816: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.20146293938159943
    2. '[' → logprob: -1.701462984085083
    3. ' [
' → logprob: -10.076462745666504
    4. ' [' → logprob: -12.076462745666504
    5. '   ' → logprob: -13.576462745666504
    6. '[class' → logprob: -14.951462745666504
    7. '[List' → logprob: -16.32646369934082
    8. '  ' → logprob: -17.70146369934082
    9. ' ' → logprob: -17.70146369934082
    10. '{' → logprob: -17.70146369934082

Token 2817: '       ' (ID: 309)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.040810950100421906
    2. '       ' → logprob: -3.290811061859131
    3. '   ' → logprob: -5.915811061859131
    4. ' Digit' → logprob: -9.665810585021973
    5. 'Digits' → logprob: -12.540810585021973
    6. 'Dig' → logprob: -14.040810585021973
    7. 'Digital' → logprob: -14.790810585021973
    8. 'Character' → logprob: -15.540810585021973
    9. 'D' → logprob: -16.16581153869629
    10. '     ' → logprob: -16.29081153869629

Token 2818: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' (adapté à ' Digit') → logprob: -1.9027791495318525e-05
    2. '   ' → logprob: -11.000019073486328
    3. ' Digit' → logprob: -13.250019073486328
    4. '       ' → logprob: -15.500019073486328
    5. 'Digital' → logprob: -15.625019073486328
    6. 'Digits' → logprob: -16.500019073486328
    7. 'Character' → logprob: -18.375019073486328
    8. ' ' → logprob: -19.625019073486328
    9. '     ' → logprob: -20.250019073486328
    10. '  ' → logprob: -20.375019073486328

Token 2819: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.75
    3. 'Zero' → logprob: -18.125
    4. ''' → logprob: -18.875
    5. '[' → logprob: -20.0
    6. '۰' → logprob: -20.125
    7. '０' → logprob: -20.5
    8. '(' → logprob: -20.625
    9. '_' → logprob: -20.75
    10. ' ' → logprob: -20.75

Token 2820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47427526116371155
    2. ',
' → logprob: -0.9742752313613892
    3. '   ' → logprob: -8.974275588989258
    4. ',
' → logprob: -10.099275588989258
    5. ',D' → logprob: -10.724275588989258
    6. ',

' → logprob: -12.224275588989258
    7. ',\
' → logprob: -13.474275588989258
    8. ' ,
' → logprob: -14.599275588989258
    9. ' ,' → logprob: -14.724275588989258
    10. '       ' → logprob: -15.224275588989258

Token 2821: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.005235887598246336
    2. ' Digit' → logprob: -5.25523567199707
    3. '   ' → logprob: -13.38023567199707
    4. '       ' → logprob: -15.13023567199707
    5. 'Digits' → logprob: -15.25523567199707
    6. '
' → logprob: -17.25523567199707
    7. '_digit' → logprob: -17.63023567199707
    8. 'Digital' → logprob: -18.75523567199707
    9. ' digit' → logprob: -19.50523567199707
    10. ' ' → logprob: -20.00523567199707

Token 2822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -14.875
    3. '9' → logprob: -17.25
    4. '
' → logprob: -18.5
    5. '   ' → logprob: -18.625
    6. 'One' → logprob: -19.125
    7. '```' → logprob: -19.125
    8. '{' → logprob: -19.5
    9. '۱' → logprob: -19.625
    10. ' ' → logprob: -19.75

Token 2823: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006514362758025527
    2. ',
' → logprob: -7.3756513595581055
    3. ',D' → logprob: -11.000651359558105
    4. '   ' → logprob: -12.375651359558105
    5. ' ,' → logprob: -13.625651359558105
    6. ',

' → logprob: -13.750651359558105
    7. ',
' → logprob: -14.500651359558105
    8. ',...' → logprob: -14.625651359558105
    9. ',\
' → logprob: -15.000651359558105
    10. ',List' → logprob: -16.250652313232422

Token 2824: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.008614926598966122
    2. ' Digit' → logprob: -4.758615016937256
    3. '_digit' → logprob: -15.508614540100098
    4. 'Digits' → logprob: -16.383615493774414
    5. ' digit' → logprob: -17.383615493774414
    6. '   ' → logprob: -17.758615493774414
    7. '
' → logprob: -18.133615493774414
    8. 'digit' → logprob: -18.383615493774414
    9. '-digit' → logprob: -19.383615493774414
    10. ' ' → logprob: -19.633615493774414

Token 2825: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. '
' → logprob: -12.750004768371582
    3. 'Digit' → logprob: -14.125004768371582
    4. ',' → logprob: -15.125004768371582
    5. '0' → logprob: -16.000003814697266
    6. ',
' → logprob: -16.375003814697266
    7. '8' → logprob: -16.500003814697266
    8. ' ' → logprob: -16.750003814697266
    9. '   ' → logprob: -17.250003814697266
    10. '9' → logprob: -17.312503814697266

Token 2826: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011367550177965313
    2. ',
' → logprob: -9.250113487243652
    3. ',D' → logprob: -11.250113487243652
    4. ' ,' → logprob: -12.625113487243652
    5. '   ' → logprob: -14.625113487243652
    6. ',

' → logprob: -15.500113487243652
    7. ',...' → logprob: -15.750113487243652
    8. ',
' → logprob: -16.00011444091797
    9. ',\
' → logprob: -16.12511444091797
    10. ',,' → logprob: -17.12511444091797

Token 2827: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.07889066636562347
    2. ' Digit' → logprob: -2.578890562057495
    3. 'Digits' → logprob: -14.828890800476074
    4. '   ' → logprob: -15.453890800476074
    5. '       ' → logprob: -15.578890800476074
    6. '_digit' → logprob: -16.203889846801758
    7. ' digit' → logprob: -16.453889846801758
    8. 'Dot' → logprob: -17.953889846801758
    9. '
' → logprob: -18.328889846801758
    10. 'digit' → logprob: -18.453889846801758

Token 2828: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.173704271830502e-06
    2. '   ' → logprob: -13.87500286102295
    3. ',' → logprob: -14.25000286102295
    4. '
' → logprob: -14.87500286102295
    5. ' ' → logprob: -14.87500286102295
    6. 'Digit' → logprob: -14.87500286102295
    7. '...' → logprob: -15.75000286102295
    8. 'class' → logprob: -16.625003814697266
    9. '       ' → logprob: -17.250003814697266
    10. '#' → logprob: -17.375003814697266

Token 2829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.386147626675665e-05
    2. ',
' → logprob: -9.750073432922363
    3. ' ,' → logprob: -11.375073432922363
    4. '   ' → logprob: -12.875073432922363
    5. ',D' → logprob: -13.875073432922363
    6. ',
' → logprob: -15.875073432922363
    7. 'Digit' → logprob: -16.50007438659668
    8. ',

' → logprob: -16.62507438659668
    9. ',...' → logprob: -16.87507438659668
    10. ',\
' → logprob: -16.87507438659668

Token 2830: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.10021648555994034
    2. ' Digit' → logprob: -2.3502163887023926
    3. '   ' → logprob: -12.60021686553955
    4. '_digit' → logprob: -13.60021686553955
    5. '
' → logprob: -13.72521686553955
    6. ' ' → logprob: -13.85021686553955
    7. 'Digits' → logprob: -14.22521686553955
    8. ' digit' → logprob: -14.47521686553955
    9. ' 
' → logprob: -14.60021686553955
    10. ' ' → logprob: -14.72521686553955

Token 2831: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.128163257315464e-07
    2. '6' → logprob: -16.0
    3. '
' → logprob: -16.25
    4. ',' → logprob: -17.0
    5. '5' → logprob: -17.125
    6. '9' → logprob: -17.75
    7. '8' → logprob: -18.5
    8. 'class' → logprob: -18.5
    9. ' ' → logprob: -18.75
    10. 'Four' → logprob: -18.75

Token 2832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016229959146585315
    2. ',
' → logprob: -8.875162124633789
    3. ' ,' → logprob: -11.375162124633789
    4. '   ' → logprob: -11.875162124633789
    5. ',D' → logprob: -12.750162124633789
    6. ',

' → logprob: -16.25016212463379
    7. ',class' → logprob: -16.25016212463379
    8. ',
' → logprob: -16.37516212463379
    9. ',\
' → logprob: -16.37516212463379
    10. '       ' → logprob: -16.50016212463379

Token 2833: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.0005538671393878758
    2. ' Digit' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.750554084777832
    4. '_digit' → logprob: -16.125553131103516
    5. 'Digits' → logprob: -16.375553131103516
    6. '
' → logprob: -16.625553131103516
    7. 'Digital' → logprob: -17.000553131103516
    8. 'digit' → logprob: -18.125553131103516
    9. ' ' → logprob: -18.125553131103516
    10. 'Dot' → logprob: -18.125553131103516

Token 2834: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.128163257315464e-07
    2. '6' → logprob: -15.25
    3. '
' → logprob: -17.625
    4. '...' → logprob: -17.75
    5. '   ' → logprob: -18.125
    6. ',' → logprob: -18.875
    7. ' ' → logprob: -19.125
    8. '4' → logprob: -19.5
    9. 'Five' → logprob: -19.625
    10. '৫' → logprob: -19.875

Token 2835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001468067930545658
    2. ',
' → logprob: -8.875146865844727
    3. ' ,' → logprob: -12.375146865844727
    4. ',D' → logprob: -13.500146865844727
    5. '   ' → logprob: -14.625146865844727
    6. 'Digit' → logprob: -14.875146865844727
    7. ',\
' → logprob: -16.125146865844727
    8. '`,' → logprob: -16.250146865844727
    9. ',

' → logprob: -16.500146865844727
    10. ',
' → logprob: -16.625146865844727

Token 2836: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.0015024791937321424
    2. ' Digit' → logprob: -6.501502513885498
    3. 'Digits' → logprob: -17.126502990722656
    4. '
' → logprob: -17.251502990722656
    5. 'Digital' → logprob: -17.376502990722656
    6. '   ' → logprob: -18.001502990722656
    7. '_digit' → logprob: -18.126502990722656
    8. 'Dot' → logprob: -18.251502990722656
    9. 'digit' → logprob: -19.126502990722656
    10. ' digit' → logprob: -19.501502990722656

Token 2837: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. '६' → logprob: -17.875
    3. '৬' → logprob: -18.5
    4. '
' → logprob: -19.0
    5. '٦' → logprob: -19.125
    6. '' → logprob: -19.25
    7. '۶' → logprob: -19.25
    8. '66' → logprob: -20.25
    9. ''' → logprob: -20.625
    10. 'Digit' → logprob: -20.75

Token 2838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.44574936106801e-05
    2. ',
' → logprob: -9.62507438659668
    3. ' ,' → logprob: -12.12507438659668
    4. ',D' → logprob: -13.37507438659668
    5. 'Digit' → logprob: -14.75007438659668
    6. '7' → logprob: -15.25007438659668
    7. '   ' → logprob: -15.37507438659668
    8. ',\
' → logprob: -16.00007438659668
    9. ',
' → logprob: -16.62507438659668
    10. '`,' → logprob: -17.00007438659668

Token 2839: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.03805112838745117
    2. ' Digit' → logprob: -3.288051128387451
    3. '   ' → logprob: -11.78805160522461
    4. 'Digits' → logprob: -14.16305160522461
    5. ' digit' → logprob: -15.28805160522461
    6. '       ' → logprob: -15.28805160522461
    7. '_digit' → logprob: -15.28805160522461
    8. '
' → logprob: -15.66305160522461
    9. ' ' → logprob: -15.66305160522461
    10. 'Dot' → logprob: -16.28805160522461

Token 2840: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '
' → logprob: -17.75
    3. '   ' → logprob: -17.875
    4. ',' → logprob: -18.625
    5. ' ' → logprob: -19.625
    6. '  ' → logprob: -21.625
    7. '७' → logprob: -21.625
    8. '' → logprob: -21.625
    9. '9' → logprob: -21.875
    10. '۷' → logprob: -22.0

Token 2841: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022237090161070228
    2. ',
' → logprob: -8.500222206115723
    3. ' ,' → logprob: -11.500222206115723
    4. ',D' → logprob: -12.125222206115723
    5. '   ' → logprob: -13.750222206115723
    6. 'Digit' → logprob: -14.250222206115723
    7. '`,' → logprob: -14.750222206115723
    8. ',\
' → logprob: -15.125222206115723
    9. '[' → logprob: -16.00022315979004
    10. ',

' → logprob: -16.00022315979004

Token 2842: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.003178071230649948
    2. ' Digit' → logprob: -5.753178119659424
    3. '   ' → logprob: -16.378177642822266
    4. 'Digits' → logprob: -16.378177642822266
    5. '
' → logprob: -16.503177642822266
    6. 'Digital' → logprob: -17.128177642822266
    7. '_digit' → logprob: -17.253177642822266
    8. ' digit' → logprob: -17.878177642822266
    9. 'digit' → logprob: -17.878177642822266
    10. ' ' → logprob: -18.628177642822266

Token 2843: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -7.896309739408025e-07
    2. 'Digit' → logprob: -15.000000953674316
    3. '
' → logprob: -15.500000953674316
    4. ' ' → logprob: -16.0
    5. ',' → logprob: -17.25
    6. '   ' → logprob: -18.0
    7. 'Eight' → logprob: -18.375
    8. '  ' → logprob: -19.25
    9. '89' → logprob: -19.375
    10. '88' → logprob: -19.625

Token 2844: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8219583075260743e-05
    2. ',
' → logprob: -10.375038146972656
    3. ' ,' → logprob: -12.250038146972656
    4. ',D' → logprob: -13.625038146972656
    5. '   ' → logprob: -14.875038146972656
    6. 'Digit' → logprob: -15.750038146972656
    7. '`,' → logprob: -15.750038146972656
    8. ',\
' → logprob: -16.750038146972656
    9. ',
' → logprob: -16.875038146972656
    10. ',

' → logprob: -17.250038146972656

Token 2845: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.0011718906462192535
    2. ' Digit' → logprob: -6.751172065734863
    3. 'Dot' → logprob: -13.626172065734863
    4. '   ' → logprob: -14.751172065734863
    5. '
' → logprob: -17.001171112060547
    6. 'Digital' → logprob: -17.251171112060547
    7. ' ' → logprob: -17.876171112060547
    8. 'Digits' → logprob: -18.001171112060547
    9. '_digit' → logprob: -18.376171112060547
    10. ' digit' → logprob: -18.751171112060547

Token 2846: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.5
    3. '   ' → logprob: -17.125
    4. ' ' → logprob: -18.0
    5. 'Digit' → logprob: -18.875
    6. 'Nine' → logprob: -19.125
    7. ',' → logprob: -19.5
    8. 'class' → logprob: -20.125
    9. '  ' → logprob: -20.25
    10. '8' → logprob: -20.875

Token 2847: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033558503491804004
    2. ',
' → logprob: -8.125335693359375
    3. ' ,' → logprob: -10.500335693359375
    4. '   ' → logprob: -11.500335693359375
    5. ',D' → logprob: -14.125335693359375
    6. ',\
' → logprob: -14.625335693359375
    7. ',

' → logprob: -15.375335693359375
    8. ',
' → logprob: -15.875335693359375
    9. '       ' → logprob: -16.000335693359375
    10. '[' → logprob: -17.250335693359375

Token 2848: '       ' (ID: 309)
  Prédit: 'Plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Plus' → logprob: -0.0780678316950798
    2. '       ' → logprob: -2.7030677795410156
    3. ' Plus' → logprob: -5.078067779541016
    4. 'Minus' → logprob: -6.578067779541016
    5. 'Dot' → logprob: -8.453067779541016
    6. '   ' → logprob: -8.578067779541016
    7. 'Digit' → logprob: -10.328067779541016
    8. ' plus' → logprob: -11.328067779541016
    9. '      ' → logprob: -12.203067779541016
    10. '+' → logprob: -12.328067779541016

Token 2849: ' Plus' (ID: 11899)
  Prédit: 'Plus'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Plus' (adapté à ' Plus') → logprob: -0.00020866614067927003
    2. 'Minus' → logprob: -8.500208854675293
    3. ' Plus' → logprob: -12.500208854675293
    4. 'Digit' → logprob: -14.375208854675293
    5. '   ' → logprob: -14.625208854675293
    6. 'Dot' → logprob: -15.250208854675293
    7. 'plus' → logprob: -15.750208854675293
    8. 'PLUS' → logprob: -16.750207901000977
    9. '+' → logprob: -17.000207901000977
    10. ' plus' → logprob: -17.250207901000977

Token 2850: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.162282367469743e-05
    2. ',
' → logprob: -9.375091552734375
    3. ',D' → logprob: -12.875091552734375
    4. '   ' → logprob: -14.125091552734375
    5. ' ,' → logprob: -14.250091552734375
    6. ',,' → logprob: -14.375091552734375
    7. ',List' → logprob: -14.375091552734375
    8. ',

' → logprob: -15.125091552734375
    9. ',C' → logprob: -15.500091552734375
    10. ',...' → logprob: -15.625091552734375

Token 2851: ' Minus' (ID: 138001)
  Prédit: 'Minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Minus' → logprob: -0.014199945144355297
    2. ' Minus' → logprob: -4.264199733734131
    3. '   ' → logprob: -10.264200210571289
    4. '
' → logprob: -14.264200210571289
    5. '       ' → logprob: -15.014200210571289
    6. 'Subtract' → logprob: -15.264200210571289
    7. ' ' → logprob: -16.26420021057129
    8. ' minus' → logprob: -16.38920021057129
    9. 'Minor' → logprob: -17.01420021057129
    10. '_minus' → logprob: -17.01420021057129

Token 2852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4656579120783135e-05
    2. ',
' → logprob: -10.250044822692871
    3. ']' → logprob: -12.500044822692871
    4. '   ' → logprob: -13.000044822692871
    5. ',D' → logprob: -13.000044822692871
    6. ' ,' → logprob: -14.250044822692871
    7. '       ' → logprob: -15.750044822692871
    8. '],' → logprob: -17.375043869018555
    9. '```' → logprob: -17.750043869018555
    10. '`,' → logprob: -17.875043869018555

Token 2853: ' Dot' (ID: 49413)
  Prédit: 'Dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dot' → logprob: -0.0002613358374219388
    2. ' Dot' → logprob: -8.250261306762695
    3. 'Dots' → logprob: -17.250261306762695
    4. 'DOT' → logprob: -19.750261306762695
    5. '.Dot' → logprob: -19.750261306762695
    6. '   ' → logprob: -20.125261306762695
    7. 'dot' → logprob: -21.000261306762695
    8. '       ' → logprob: -21.625261306762695
    9. ' dot' → logprob: -21.750261306762695
    10. '_dot' → logprob: -21.750261306762695

Token 2854: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12999112904071808
    2. ',' → logprob: -2.129991054534912
    3. '   ' → logprob: -6.004991054534912
    4. ',D' → logprob: -8.00499153137207
    5. ',
' → logprob: -8.50499153137207
    6. ' ]' → logprob: -10.62999153137207
    7. ']
' → logprob: -11.12999153137207
    8. '       ' → logprob: -11.50499153137207
    9. ')' → logprob: -14.12999153137207
    10. '  ' → logprob: -14.50499153137207

Token 2855: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16122357547283173
    2. '   ' → logprob: -1.9112235307693481
    3. ',' → logprob: -7.036223411560059
    4. ',
' → logprob: -10.036223411560059
    5. ' ]' → logprob: -10.036223411560059
    6. ']

' → logprob: -11.536223411560059
    7. ']
' → logprob: -11.661223411560059
    8. '
' → logprob: -11.911223411560059
    9. ' ' → logprob: -13.036223411560059
    10. '       ' → logprob: -13.161223411560059

Token 2856: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7152501940727234
    2. '   ' → logprob: -0.7152501940727234
    3. ']

' (adapté à ' ]

') → logprob: -4.090250015258789
    4. ']
' → logprob: -5.465250015258789
    5. ',' → logprob: -7.840250015258789
    6. '
' → logprob: -8.465250015258789
    7. ',
' → logprob: -9.090250015258789
    8. '    
' → logprob: -9.840250015258789
    9. ' ]' → logprob: -10.715250015258789
    10. '```' → logprob: -10.965250015258789

Token 2857: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020932804327458143
    2. '@' → logprob: -6.627093315124512
    3. '
' → logprob: -7.502093315124512
    4. 'def' → logprob: -8.627093315124512
    5. '    
' → logprob: -11.002093315124512
    6. ' @' → logprob: -11.627093315124512
    7. '       ' → logprob: -13.377093315124512
    8. '    ' → logprob: -13.752093315124512
    9. '```' → logprob: -14.127093315124512
    10. '

' → logprob: -14.252093315124512

Token 2858: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -1.1756367712223437e-05
    2. '   ' → logprob: -11.750011444091797
    3. ' @' → logprob: -12.500011444091797
    4. '
' → logprob: -16.375011444091797
    5. 'def' → logprob: -18.125011444091797
    6. '@
' → logprob: -18.625011444091797
    7. '```' → logprob: -19.375011444091797
    8. '@param' → logprob: -20.125011444091797
    9. '@property' → logprob: -20.375011444091797
    10. '@return' → logprob: -21.125011444091797

Token 2859: 'classmethod' (ID: 64680)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.029750484973192215
    2. 'classmethod' → logprob: -3.5297505855560303
    3. 'static' → logprob: -21.27975082397461
    4. '@' → logprob: -25.02975082397461
    5. 'typing' → logprob: -25.15475082397461
    6. 'property' → logprob: -25.90475082397461
    7. ' static' → logprob: -27.40475082397461
    8. '```' → logprob: -27.40475082397461
    9. '@@' → logprob: -27.52975082397461
    10. 'dat' → logprob: -28.02975082397461

Token 2860: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008665391243994236
    2. ' def' → logprob: -5.008665561676025
    3. '   ' → logprob: -6.258665561676025
    4. '
' → logprob: -10.758665084838867
    5. '	def' → logprob: -12.258665084838867
    6. ':def' → logprob: -13.258665084838867
    7. ' ' → logprob: -13.633665084838867
    8. '(' → logprob: -14.008665084838867
    9. '(def' → logprob: -14.008665084838867
    10. '_def' → logprob: -14.258665084838867

Token 2861: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008385853841900826
    2. '   ' → logprob: -4.88338565826416
    3. '
' → logprob: -8.00838565826416
    4. ' def' → logprob: -8.13338565826416
    5. '	def' → logprob: -8.88338565826416
    6. '```' → logprob: -11.63338565826416
    7. ' ' → logprob: -13.75838565826416
    8. ':def' → logprob: -13.88338565826416
    9. '(def' → logprob: -14.13338565826416
    10. '  ' → logprob: -14.25838565826416

Token 2862: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.6457742175552994e-05
    2. ' def' → logprob: -10.125056266784668
    3. '
' → logprob: -11.125056266784668
    4. 'try' → logprob: -13.625056266784668
    5. 'staticmethod' → logprob: -15.625056266784668
    6. 'classmethod' → logprob: -16.875057220458984
    7. '	def' → logprob: -17.375057220458984
    8. 'decode' → logprob: -17.750057220458984
    9. '   ' → logprob: -17.875057220458984
    10. 'find' → logprob: -18.250057220458984

Token 2863: ' identify' (ID: 11410)
  Prédit: 'identify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identify' → logprob: -0.5157862305641174
    2. 'try' → logprob: -1.0157861709594727
    3. 'recogn' → logprob: -4.015786170959473
    4. 'from' → logprob: -4.015786170959473
    5. 'get' → logprob: -6.265786170959473
    6. 'detect' → logprob: -6.640786170959473
    7. 'find' → logprob: -7.015786170959473
    8. 'create' → logprob: -7.640786170959473
    9. 'match' → logprob: -9.390786170959473
    10. 'guess' → logprob: -10.015786170959473

Token 2864: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.00011784763046307489
    2. 'cls' → logprob: -9.750118255615234
    3. '(' → logprob: -10.000118255615234
    4. '_character' → logprob: -12.000118255615234
    5. '(
' → logprob: -13.250118255615234
    6. '(Character' → logprob: -13.500118255615234
    7. 'Character' → logprob: -13.875118255615234
    8. '_char' → logprob: -14.125118255615234
    9. '(points' → logprob: -14.500118255615234
    10. '_points' → logprob: -14.625118255615234

Token 2865: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.827843427658081
    2. '(cls' → logprob: -1.077843427658081
    3. '._' → logprob: -3.202843427658081
    4. '[' → logprob: -3.827843427658081
    5. '_next' → logprob: -3.827843427658081
    6. '_token' → logprob: -3.952843427658081
    7. '_' → logprob: -3.952843427658081
    8. '.try' → logprob: -4.57784366607666
    9. '(' → logprob: -5.07784366607666
    10. ')' → logprob: -5.20284366607666

Token 2866: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.003234155708923936
    2. ' points' → logprob: -6.378234386444092
    3. 'occupied' → logprob: -6.503234386444092
    4. 'point' → logprob: -11.253233909606934
    5. ' occupied' → logprob: -12.128233909606934
    6. '   ' → logprob: -12.378233909606934
    7. '       ' → logprob: -13.378233909606934
    8. '	points' → logprob: -13.628233909606934
    9. '(points' → logprob: -13.753233909606934
    10. 'characters' → logprob: -14.128233909606934

Token 2867: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19829800724983215
    2. '):' → logprob: -2.5732979774475098
    3. ':' → logprob: -2.6982979774475098
    4. '):
' → logprob: -4.07329797744751
    5. '   ' → logprob: -4.82329797744751
    6. '       ' → logprob: -5.57329797744751
    7. ',' → logprob: -6.19829797744751
    8. ')set' → logprob: -7.07329797744751
    9. '[' → logprob: -7.32329797744751
    10. ' )' → logprob: -7.94829797744751

Token 2868: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.014425795525312424
    2. ' Set' → logprob: -4.264425754547119
    3. ')' → logprob: -8.264426231384277
    4. 'points' → logprob: -13.764426231384277
    5. 'set' → logprob: -14.014426231384277
    6. '_set' → logprob: -14.139426231384277
    7. '(Set' → logprob: -14.514426231384277
    8. '):
' → logprob: -14.639426231384277
    9. '_Set' → logprob: -15.389426231384277
    10. '   ' → logprob: -15.764426231384277

Token 2869: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010401520878076553
    2. ')' → logprob: -4.760401725769043
    3. '(Point' → logprob: -7.635401725769043
    4. 'Point' → logprob: -8.260401725769043
    5. '):' → logprob: -8.510401725769043
    6. '):
' → logprob: -8.760401725769043
    7. ']' → logprob: -9.010401725769043
    8. '[
' → logprob: -9.260401725769043
    9. '   ' → logprob: -9.385401725769043
    10. '<Point' → logprob: -9.510401725769043

Token 2870: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.320199877838604e-07
    2. ' Point' → logprob: -15.5
    3. ')' → logprob: -16.875
    4. '   ' → logprob: -16.875
    5. 'p' → logprob: -18.125
    6. '	Point' → logprob: -18.75
    7. '       ' → logprob: -19.0
    8. '.Point' → logprob: -19.625
    9. '           ' → logprob: -20.0
    10. 'Points' → logprob: -20.125

Token 2871: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007834573276340961
    2. '):
' → logprob: -5.007834434509277
    3. '):' → logprob: -6.882834434509277
    4. '   ' → logprob: -9.507834434509277
    5. ' )' → logprob: -11.757834434509277
    6. '       ' → logprob: -12.132834434509277
    7. ')>' → logprob: -13.382834434509277
    8. '):
' → logprob: -13.382834434509277
    9. '):

' → logprob: -13.882834434509277
    10. ')->' → logprob: -14.632834434509277

Token 2872: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004385132808238268
    2. ':
' → logprob: -5.754384994506836
    3. '->' → logprob: -7.254384994506836
    4. '   ' → logprob: -9.004384994506836
    5. ':return' → logprob: -9.004384994506836
    6. ' ->' → logprob: -9.629384994506836
    7. '       ' → logprob: -9.879384994506836
    8. ')' → logprob: -10.004384994506836
    9. '):' → logprob: -10.129384994506836
    10. ')->' → logprob: -10.504384994506836

Token 2873: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.002288471907377243
    2. ''' → logprob: -6.877288341522217
    3. 'Character' → logprob: -7.002288341522217
    4. ' str' → logprob: -9.002288818359375
    5. '[str' → logprob: -9.377288818359375
    6. 'character' → logprob: -10.252288818359375
    7. ''s' → logprob: -10.502288818359375
    8. 'Tuple' → logprob: -10.877288818359375
    9. 'object' → logprob: -11.877288818359375
    10. '   ' → logprob: -12.002288818359375

Token 2874: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6722474098205566
    2. '(cls' → logprob: -1.0472474098205566
    3. ':
' → logprob: -3.1722474098205566
    4. '       ' → logprob: -3.2972474098205566
    5. '(' → logprob: -3.2972474098205566
    6. '(
' → logprob: -4.422247409820557
    7. '   ' → logprob: -4.672247409820557
    8. '[' → logprob: -8.172246932983398
    9. '(self' → logprob: -8.172246932983398
    10. '():' → logprob: -9.047246932983398

Token 2875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.481510692741722e-05
    2. '        
' → logprob: -10.75007438659668
    3. '   ' → logprob: -11.25007438659668
    4. '    ' → logprob: -11.37507438659668
    5. ':' → logprob: -12.00007438659668
    6. '           ' → logprob: -12.12507438659668
    7. ' for' → logprob: -12.62507438659668
    8. '(' → logprob: -13.25007438659668
    9. '        ' → logprob: -13.50007438659668
    10. '`' → logprob: -13.62507438659668

Token 2876: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18007603287696838
    2. '       ' → logprob: -1.930076003074646
    3. ' for' → logprob: -3.9300761222839355
    4. 'if' → logprob: -11.555075645446777
    5. '
' → logprob: -13.555075645446777
    6. '   ' → logprob: -13.680075645446777
    7. '	for' → logprob: -14.680075645446777
    8. ':' → logprob: -14.930075645446777
    9. '        
' → logprob: -15.055075645446777
    10. '#' → logprob: -15.680075645446777

Token 2877: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.002466621110215783
    2. 'ch' → logprob: -6.752466678619385
    3. 'c' → logprob: -7.002466678619385
    4. 'cc' → logprob: -8.002466201782227
    5. 'cls' → logprob: -10.127466201782227
    6. 'character' → logprob: -11.877466201782227
    7. 'candidate' → logprob: -13.377466201782227
    8. 'Char' → logprob: -13.877466201782227
    9. '_char' → logprob: -14.377466201782227
    10. 'klass' → logprob: -14.502466201782227

Token 2878: '_cls' (ID: 93166)
  Prédit: '_class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -0.30368784070014954
    2. '_cls' → logprob: -1.9286878108978271
    3. '_' → logprob: -2.303687810897827
    4. 'class' → logprob: -4.303688049316406
    5. 'Class' → logprob: -6.303688049316406
    6. '_
' → logprob: -7.803688049316406
    7. 'cls' → logprob: -8.053688049316406
    8. '_classes' → logprob: -8.303688049316406
    9. '_cl' → logprob: -9.303688049316406
    10. '_c' → logprob: -9.803688049316406

Token 2879: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6983245611190796
    2. ' in' → logprob: -0.6983245611190796
    3. '.' → logprob: -5.323324680328369
    4. ',' → logprob: -8.823324203491211
    5. '   ' → logprob: -9.948324203491211
    6. '[' → logprob: -10.823324203491211
    7. '  ' → logprob: -11.323324203491211
    8. ' ' → logprob: -11.448324203491211
    9. '    ' → logprob: -11.823324203491211
    10. '       ' → logprob: -12.073324203491211

Token 2880: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -4.572941179503687e-05
    2. ' cls' → logprob: -10.000045776367188
    3. '(cls' → logprob: -15.375045776367188
    4. '   ' → logprob: -17.250045776367188
    5. '.cls' → logprob: -18.875045776367188
    6. 'classmethod' → logprob: -20.250045776367188
    7. 'cl' → logprob: -20.625045776367188
    8. '_cls' → logprob: -20.750045776367188
    9. 'Character' → logprob: -20.875045776367188
    10. '
' → logprob: -21.000045776367188

Token 2881: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.05815860629081726
    2. '.' → logprob: -3.0581586360931396
    3. 'char' → logprob: -4.6831583976745605
    4. ' .' → logprob: -9.808158874511719
    5. '   ' → logprob: -10.058158874511719
    6. '.
' → logprob: -10.183158874511719
    7. ' char' → logprob: -10.808158874511719
    8. '._' → logprob: -10.933158874511719
    9. '<char' → logprob: -11.058158874511719
    10. '.Char' → logprob: -11.058158874511719

Token 2882: '_classes' (ID: 37969)
  Prédit: '_classes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_classes' → logprob: -4.334533878136426e-05
    2. 's' → logprob: -11.000042915344238
    3. '_CLASSES' → logprob: -11.000042915344238
    4. 'Classes' → logprob: -12.375042915344238
    5. 'classes' → logprob: -13.125042915344238
    6. '_class' → logprob: -13.750042915344238
    7. '_' → logprob: -14.000042915344238
    8. 'aclasses' → logprob: -14.750042915344238
    9. 'class' → logprob: -15.500042915344238
    10. '_
' → logprob: -15.625042915344238

Token 2883: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0962127223610878
    2. '       ' → logprob: -2.97121262550354
    3. ':
' → logprob: -3.59621262550354
    4. '.' → logprob: -5.096212863922119
    5. '           ' → logprob: -6.096212863922119
    6. ',' → logprob: -6.721212863922119
    7. ' if' → logprob: -6.971212863922119
    8. '[' → logprob: -7.346212863922119
    9. ' in' → logprob: -7.846212863922119
    10. '<|end|>' → logprob: -8.596212387084961

Token 2884: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017576448153704405
    2. ' if' → logprob: -7.126757621765137
    3. ':' → logprob: -8.001757621765137
    4. 'if' → logprob: -8.126757621765137
    5. '       ' → logprob: -8.626757621765137
    6. '	       ' → logprob: -10.626757621765137
    7. '               ' → logprob: -11.001757621765137
    8. '        ' → logprob: -11.126757621765137
    9. '            ' → logprob: -11.251757621765137
    10. '          ' → logprob: -11.376757621765137

Token 2885: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008361928048543632
    2. '           ' → logprob: -7.250836372375488
    3. ' if' → logprob: -9.000836372375488
    4. '       ' → logprob: -13.375836372375488
    5. 'If' → logprob: -15.125836372375488
    6. 'return' → logprob: -15.250836372375488
    7. '               ' → logprob: -15.500836372375488
    8. ';if' → logprob: -16.000835418701172
    9. 'try' → logprob: -16.250835418701172
    10. '   ' → logprob: -16.250835418701172

Token 2886: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.014165159314870834
    2. ' char' → logprob: -4.264164924621582
    3. '.char' → logprob: -14.264164924621582
    4. '   ' → logprob: -14.389164924621582
    5. '(char' → logprob: -16.1391658782959
    6. '_char' → logprob: -16.5141658782959
    7. '	char' → logprob: -16.8891658782959
    8. '           ' → logprob: -16.8891658782959
    9. '       ' → logprob: -17.1391658782959
    10. '    ' → logprob: -17.3891658782959

Token 2887: '_cls' (ID: 93166)
  Prédit: '_cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cls' → logprob: -1.9146995327901095e-05
    2. 'Cls' → logprob: -11.500019073486328
    3. 'cls' → logprob: -13.250019073486328
    4. 'try' → logprob: -13.375019073486328
    5. '_classes' → logprob: -13.625019073486328
    6. '._' → logprob: -13.750019073486328
    7. '.cls' → logprob: -14.125019073486328
    8. '_cl' → logprob: -15.125019073486328
    9. '(cls' → logprob: -15.125019073486328
    10. '_' → logprob: -15.375019073486328

Token 2888: '.try' (ID: 85688)
  Prédit: '.try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.try' → logprob: -0.0006196272443048656
    2. '.' → logprob: -7.500619411468506
    3. ' .' → logprob: -10.500619888305664
    4. 'try' → logprob: -11.125619888305664
    5. '   ' → logprob: -11.375619888305664
    6. ').' → logprob: -12.000619888305664
    7. '
' → logprob: -13.875619888305664
    8. '>.' → logprob: -14.125619888305664
    9. '```' → logprob: -14.625619888305664
    10. '().' → logprob: -14.625619888305664

Token 2889: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -7.3458322731312364e-06
    2. 'match' → logprob: -11.875007629394531
    3. '_MATCH' → logprob: -16.25000762939453
    4. '_mat' → logprob: -16.62500762939453
    5. '_matching' → logprob: -17.37500762939453
    6. '_' → logprob: -17.50000762939453
    7. '(match' → logprob: -17.75000762939453
    8. 'Match' → logprob: -17.87500762939453
    9. '_matches' → logprob: -18.00000762939453
    10. ' match' → logprob: -19.00000762939453

Token 2890: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. 'points' → logprob: -15.875000953674316
    4. '(
' → logprob: -16.75
    5. '(point' → logprob: -17.375
    6. '(cls' → logprob: -17.875
    7. '(parts' → logprob: -18.125
    8. ' (' → logprob: -18.625
    9. ' points' → logprob: -19.125
    10. '(p' → logprob: -19.875

Token 2891: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07925426214933395
    2. '):
' → logprob: -2.579254150390625
    3. ')' → logprob: -7.954254150390625
    4. '[' → logprob: -12.454254150390625
    5. '):
' → logprob: -12.579254150390625
    6. ':' → logprob: -13.079254150390625
    7. '   ' → logprob: -13.954254150390625
    8. ' ):' → logprob: -13.954254150390625
    9. '       ' → logprob: -14.329254150390625
    10. '[]):' → logprob: -14.829254150390625

Token 2892: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01932716928422451
    2. '           ' → logprob: -4.144327163696289
    3. 'return' → logprob: -6.644327163696289
    4. ' return' → logprob: -6.894327163696289
    5. ':' → logprob: -8.019327163696289
    6. ':return' → logprob: -8.144327163696289
    7. ':
' → logprob: -8.269327163696289
    8. '              ' → logprob: -11.019327163696289
    9. '                       ' → logprob: -11.019327163696289
    10. '                   ' → logprob: -11.019327163696289

Token 2893: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00014454191841650754
    2. '                   ' → logprob: -9.500144958496094
    3. '               ' → logprob: -10.000144958496094
    4. ' return' → logprob: -10.750144958496094
    5. '           ' → logprob: -13.000144958496094
    6. '	return' → logprob: -15.500144958496094
    7. '   ' → logprob: -15.625144958496094
    8. '{return' → logprob: -16.625144958496094
    9. '                       ' → logprob: -16.750144958496094
    10. '
' → logprob: -17.000144958496094

Token 2894: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -3.128163257315464e-07
    2. ' char' → logprob: -15.25
    3. '   ' → logprob: -25.125
    4. '	char' → logprob: -26.125
    5. '       ' → logprob: -26.25
    6. '           ' → logprob: -26.375
    7. '.char' → logprob: -26.5
    8. 'chr' → logprob: -26.875
    9. '(char' → logprob: -27.0
    10. 'ch' → logprob: -27.75

Token 2895: '_cls' (ID: 93166)
  Prédit: '_cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cls' → logprob: -2.2200749754119897e-06
    2. '_repr' → logprob: -13.250001907348633
    3. 'Cls' → logprob: -15.625001907348633
    4. 'cls' → logprob: -15.875001907348633
    5. '_chr' → logprob: -16.750001907348633
    6. 'acter' → logprob: -17.500001907348633
    7. 'char' → logprob: -18.250001907348633
    8. '.cls' → logprob: -18.250001907348633
    9. 'acters' → logprob: -18.500001907348633
    10. '(cls' → logprob: -19.250001907348633

Token 2896: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.07520105689764023
    2. '.' → logprob: -2.7002010345458984
    3. '.
' → logprob: -5.700201034545898
    4. '.__' → logprob: -7.700201034545898
    5. 'char' → logprob: -8.075201034545898
    6. ' .' → logprob: -8.200201034545898
    7. '._' → logprob: -8.575201034545898
    8. '   ' → logprob: -8.700201034545898
    9. '.Char' → logprob: -9.200201034545898
    10. '(char' → logprob: -9.825201034545898

Token 2897: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -3.128163257315464e-07
    2. 'repr' → logprob: -15.25
    3. '_rsp' → logprob: -21.125
    4. '_rep' → logprob: -22.5
    5. '\' → logprob: -23.125
    6. '```' → logprob: -23.625
    7. '_interp' → logprob: -23.75
    8. '_relu' → logprob: -23.75
    9. '
' → logprob: -24.0
    10. '_' → logprob: -24.0

Token 2898: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03222186863422394
    2. '        
' → logprob: -4.032221794128418
    3. '<|end|>' → logprob: -5.157221794128418
    4. '           ' → logprob: -6.157221794128418
    5. '        ' → logprob: -6.907221794128418
    6. ' 
' → logprob: -7.157221794128418
    7. '
' → logprob: -7.157221794128418
    8. '               ' → logprob: -7.657221794128418
    9. '       
' → logprob: -7.907221794128418
    10. '    
' → logprob: -7.907221794128418

Token 2899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05882442742586136
    2. '           ' → logprob: -4.43382453918457
    3. '.' → logprob: -4.68382453918457
    4. '<|end|>' → logprob: -4.68382453918457
    5. '               ' → logprob: -4.80882453918457
    6. '#' → logprob: -5.30882453918457
    7. '        
' → logprob: -5.68382453918457
    8. '\' → logprob: -6.55882453918457
    9. '   ' → logprob: -7.05882453918457
    10. '
' → logprob: -7.05882453918457

Token 2900: ' #' (ID: 1069)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.017842020839452744
    2. 'return' → logprob: -4.767841815948486
    3. 'False' → logprob: -5.017841815948486
    4. ' None' → logprob: -6.517841815948486
    5. '       ' → logprob: -7.642841815948486
    6. '#' (adapté à ' #') → logprob: -8.517842292785645
    7. ''' → logprob: -9.642842292785645
    8. '        
' → logprob: -9.642842292785645
    9. ' return' → logprob: -9.642842292785645
    10. 'raise' → logprob: -9.892842292785645

Token 2901: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1815452128648758
    2. ' return' → logprob: -2.6815452575683594
    3. 'raise' → logprob: -2.8065452575683594
    4. '       ' → logprob: -3.5565452575683594
    5. ' raise' → logprob: -5.056545257568359
    6. 'None' → logprob: -6.681545257568359
    7. '#' → logprob: -7.806545257568359
    8. ' None' → logprob: -8.18154525756836
    9. '   ' → logprob: -8.80654525756836
    10. '?' → logprob: -9.55654525756836

Token 2902: ' fail' (ID: 7111)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.07671264559030533
    2. ''' → logprob: -3.3267126083374023
    3. 'None' → logprob: -3.5767126083374023
    4. ' not' → logprob: -4.951712608337402
    5. ' '' → logprob: -6.701712608337402
    6. '   ' → logprob: -7.951712608337402
    7. ' return' → logprob: -8.451712608337402
    8. '       ' → logprob: -8.951712608337402
    9. ' ' → logprob: -8.951712608337402
    10. '    ' → logprob: -9.076712608337402

Token 2903: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20055802166461945
    2. '   ' → logprob: -2.3255579471588135
    3. ''' → logprob: -3.4505579471588135
    4. ':
' → logprob: -4.450558185577393
    5. ' None' → logprob: -4.825558185577393
    6. '       ' → logprob: -4.950558185577393
    7. 'return' → logprob: -5.325558185577393
    8. ':return' → logprob: -5.575558185577393
    9. 'None' → logprob: -5.700558185577393
    10. ' ' → logprob: -6.200558185577393

Token 2904: ' identify' (ID: 11410)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6829079389572144
    2. 'identify' → logprob: -1.0579079389572144
    3. ' return' → logprob: -2.057908058166504
    4. ' identify' → logprob: -4.307908058166504
    5. ''' → logprob: -5.932908058166504
    6. 'None' → logprob: -7.307908058166504
    7. ' match' → logprob: -7.432908058166504
    8. 'match' → logprob: -7.432908058166504
    9. 'find' → logprob: -7.682908058166504
    10. 'detect' → logprob: -7.932908058166504

Token 2905: ',' (ID: 11)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1920672357082367
    2. '''' → logprob: -2.6920671463012695
    3. ' return' → logprob: -2.9420671463012695
    4. ':' → logprob: -3.8170671463012695
    5. 'return' → logprob: -4.4420671463012695
    6. ' None' → logprob: -5.0670671463012695
    7. '   ' → logprob: -5.5670671463012695
    8. '       ' → logprob: -6.1920671463012695
    9. ':return' → logprob: -6.5670671463012695
    10. ' '' → logprob: -6.8170671463012695

Token 2906: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10077720135450363
    2. ' return' → logprob: -2.3507771492004395
    3. '       ' → logprob: -7.7257771492004395
    4. 'raise' → logprob: -9.100777626037598
    5. ' raise' → logprob: -11.100777626037598
    6. ''' → logprob: -13.600777626037598
    7. ':return' → logprob: -15.225777626037598
    8. '?' → logprob: -15.350777626037598
    9. '           ' → logprob: -15.475777626037598
    10. '   ' → logprob: -16.22577667236328

Token 2907: ' error' (ID: 2915)
  Prédit: ' Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Exception' → logprob: -0.11933425068855286
    2. ' Value' → logprob: -2.8693342208862305
    3. 'Exception' → logprob: -3.2443342208862305
    4. ' Runtime' → logprob: -4.4943342208862305
    5. 'Value' → logprob: -5.7443342208862305
    6. ' raise' → logprob: -7.3693342208862305
    7. ' exception' → logprob: -7.6193342208862305
    8. ' Key' → logprob: -8.11933422088623
    9. 'Runtime' → logprob: -8.61933422088623
    10. ' None' → logprob: -8.61933422088623

Token 2908: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02200230024755001
    2. 'raise' → logprob: -4.272002220153809
    3. '
' → logprob: -5.147002220153809
    4. '           ' → logprob: -7.147002220153809
    5. ' raise' → logprob: -7.772002220153809
    6. '        
' → logprob: -8.772002220153809
    7. ':
' → logprob: -8.772002220153809
    8. '   ' → logprob: -8.772002220153809
    9. ':' → logprob: -9.522002220153809
    10. 'Raise' → logprob: -9.897002220153809

Token 2909: 'should' (ID: 10618)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2330419421195984
    2. ')' → logprob: -2.733042001724243
    3. '           ' → logprob: -3.108042001724243
    4. ')
' → logprob: -3.358042001724243
    5. 'Exception' → logprob: -3.483042001724243
    6. '   ' → logprob: -4.983041763305664
    7. 'Value' → logprob: -5.108041763305664
    8. 'raise' → logprob: -5.233041763305664
    9. ' Exception' → logprob: -5.608041763305664
    10. '
' → logprob: -5.858041763305664

Token 2910: ' not' (ID: 625)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.5990121364593506
    2. 'raise' → logprob: -0.8490121364593506
    3. '_raise' → logprob: -4.34901237487793
    4. ')' → logprob: -5.34901237487793
    5. '	raise' → logprob: -5.72401237487793
    6. '   ' → logprob: -7.09901237487793
    7. '.raise' → logprob: -8.34901237487793
    8. '       ' → logprob: -8.72401237487793
    9. '    ' → logprob: -8.72401237487793
    10. '
' → logprob: -8.97401237487793

Token 2911: ' happen' (ID: 5659)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.27764376997947693
    2. 'raise' → logprob: -1.7776437997817993
    3. ')' → logprob: -3.1526436805725098
    4. ' continue' → logprob: -5.02764368057251
    5. ' be' → logprob: -5.27764368057251
    6. ')
' → logprob: -5.65264368057251
    7. ' happen' → logprob: -5.65264368057251
    8. ' occur' → logprob: -6.15264368057251
    9. '   ' → logprob: -6.15264368057251
    10. ' Exception' → logprob: -6.40264368057251

Token 2912: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.17611946165561676
    2. ')' → logprob: -2.176119565963745
    3. '       ' → logprob: -3.051119565963745
    4. '):
' → logprob: -8.051119804382324
    5. '   ' → logprob: -8.176119804382324
    6. '           ' → logprob: -10.551119804382324
    7. ')
' → logprob: -11.551119804382324
    8. ')`
' → logprob: -11.551119804382324
    9. '):' → logprob: -11.926119804382324
    10. ')

' → logprob: -12.551119804382324

Token 2913: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030263781547546387
    2. 'raise' → logprob: -3.530263900756836
    3. ' raise' → logprob: -8.280263900756836
    4. '           ' → logprob: -8.405263900756836
    5. '   ' → logprob: -11.155263900756836
    6. '               ' → logprob: -12.280263900756836
    7. '```' → logprob: -12.280263900756836
    8. 'return' → logprob: -12.655263900756836
    9. 'Raise' → logprob: -13.030263900756836
    10. '	raise' → logprob: -13.280263900756836

Token 2914: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.011358676478266716
    2. ' raise' → logprob: -4.511358737945557
    3. '       ' → logprob: -8.511358261108398
    4. 'return' → logprob: -9.261358261108398
    5. '           ' → logprob: -11.511358261108398
    6. '```' → logprob: -13.386358261108398
    7. '	raise' → logprob: -13.761358261108398
    8. '
' → logprob: -14.511358261108398
    9. ' return' → logprob: -14.511358261108398
    10. 'assert' → logprob: -15.011358261108398

Token 2915: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0009762406698428094
    2. 'Runtime' → logprob: -7.000976085662842
    3. ' Value' → logprob: -9.7509765625
    4. 'Exception' → logprob: -12.0009765625
    5. ' Runtime' → logprob: -15.3759765625
    6. '_value' → logprob: -16.7509765625
    7. 'value' → logprob: -17.2509765625
    8. 'Assertion' → logprob: -17.2509765625
    9. '_Value' → logprob: -18.3759765625
    10. 'Lookup' → logprob: -18.6259765625

Token 2916: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00043281487887725234
    2. 'rror' → logprob: -7.750432968139648
    3. 'Exception' → logprob: -14.500432968139648
    4. 'Value' → logprob: -14.625432968139648
    5. 'SError' → logprob: -15.125432968139648
    6. '(' → logprob: -16.12543296813965
    7. 'n' → logprob: -16.25043296813965
    8. 'Invalid' → logprob: -16.37543296813965
    9. 'error' → logprob: -16.50043296813965
    10. '("' → logprob: -16.62543296813965

Token 2917: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5340256094932556
    2. '("' → logprob: -0.9090256094932556
    3. '('' → logprob: -4.6590256690979
    4. '(
' → logprob: -6.9090256690979
    5. '       ' → logprob: -9.034025192260742
    6. '"' → logprob: -9.159025192260742
    7. '("("' → logprob: -9.784025192260742
    8. '   ' → logprob: -10.909025192260742
    9. '(f' → logprob: -11.034025192260742
    10. '           ' → logprob: -11.409025192260742

Token 2918: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.442787766456604
    2. ''' → logprob: -1.067787766456604
    3. '("' → logprob: -4.8177876472473145
    4. '('' → logprob: -5.4427876472473145
    5. '(' → logprob: -7.3177876472473145
    6. '"No' → logprob: -7.8177876472473145
    7. '(f' → logprob: -9.442788124084473
    8. '   ' → logprob: -9.567788124084473
    9. '(
' → logprob: -9.942788124084473
    10. '       ' → logprob: -10.192788124084473

Token 2919: 'Unknown' (ID: 24560)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03184134513139725
    2. ''' → logprob: -3.781841278076172
    3. '"No' → logprob: -5.406841278076172
    4. 'Unknown' → logprob: -5.656841278076172
    5. 'No' → logprob: -8.406841278076172
    6. 'Unable' → logprob: -9.031841278076172
    7. 'Un' → logprob: -9.781841278076172
    8. 'Could' → logprob: -9.781841278076172
    9. 'Cannot' → logprob: -10.031841278076172
    10. ''un' → logprob: -11.031841278076172

Token 2920: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.0176788829267025
    2. 'character' → logprob: -4.267678737640381
    3. '_character' → logprob: -6.517678737640381
    4. 'Character' → logprob: -6.892678737640381
    5. ' Character' → logprob: -7.392678737640381
    6. '(character' → logprob: -8.892679214477539
    7. ' ' → logprob: -10.142679214477539
    8. ' symbol' → logprob: -10.392679214477539
    9. ' char' → logprob: -10.517679214477539
    10. '(Character' → logprob: -10.767679214477539

Token 2921: ' pattern' (ID: 8302)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24739521741867065
    2. '")' → logprob: -1.8723952770233154
    3. ')' → logprob: -3.2473952770233154
    4. '')' → logprob: -4.622395038604736
    5. '}")' → logprob: -5.122395038604736
    6. ')")' → logprob: -5.997395038604736
    7. ''' → logprob: -6.247395038604736
    8. ',' → logprob: -6.997395038604736
    9. '}' → logprob: -7.247395038604736
    10. '_' → logprob: -7.372395038604736

Token 2922: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3352524936199188
    2. '}")' → logprob: -2.335252523422241
    3. ')' → logprob: -2.585252523422241
    4. ')")' → logprob: -3.085252523422241
    5. '")' → logprob: -3.335252523422241
    6. '{' → logprob: -4.460252285003662
    7. '')' → logprob: -5.210252285003662
    8. '}' → logprob: -5.585252285003662
    9. ')")
' → logprob: -5.960252285003662
    10. ',' → logprob: -6.585252285003662

Token 2923: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.11594463139772415
    2. ' points' → logprob: -2.6159446239471436
    3. '{' → logprob: -3.3659446239471436
    4. 'len' → logprob: -6.865944862365723
    5. ' {' → logprob: -8.365944862365723
    6. 'occupied' → logprob: -8.490944862365723
    7. 'coordinates' → logprob: -8.740944862365723
    8. 'characters' → logprob: -9.865944862365723
    9. 'positions' → logprob: -10.490944862365723
    10. 'point' → logprob: -11.740944862365723

Token 2924: ':' (ID: 25)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.1702902913093567
    2. ' {' → logprob: -2.295290231704712
    3. ':' → logprob: -3.295290231704712
    4. '{s' → logprob: -4.670290470123291
    5. '(points' → logprob: -5.170290470123291
    6. '(p' → logprob: -6.420290470123291
    7. ' {(' → logprob: -6.920290470123291
    8. ' points' → logprob: -7.795290470123291
    9. '{
' → logprob: -8.420289993286133
    10. ' p' → logprob: -9.045289993286133

Token 2925: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.13138914108276367
    2. 'points' → logprob: -2.1313891410827637
    3. ' points' → logprob: -5.506389141082764
    4. ' {' → logprob: -7.881389141082764
    5. '(points' → logprob: -11.881389617919922
    6. 'f' → logprob: -13.006389617919922
    7. ''{' → logprob: -14.006389617919922
    8. '	points' → logprob: -14.256389617919922
    9. '{}' → logprob: -14.631389617919922
    10. '{
' → logprob: -15.631389617919922

Token 2926: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0024806505534797907
    2. '{' → logprob: -6.002480506896973
    3. ' points' → logprob: -12.502480506896973
    4. 'sorted' → logprob: -14.252480506896973
    5. '(points' → logprob: -15.377480506896973
    6. '	points' → logprob: -16.87748146057129
    7. ' {' → logprob: -17.00248146057129
    8. 'repr' → logprob: -17.37748146057129
    9. '{
' → logprob: -17.37748146057129
    10. 'point' → logprob: -17.50248146057129

Token 2927: '}"' (ID: 21503)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.004627360496670008
    2. '}' → logprob: -5.504627227783203
    3. '")' → logprob: -8.129627227783203
    4. ')")' → logprob: -8.754627227783203
    5. ')' → logprob: -9.879627227783203
    6. '}")
' → logprob: -10.754627227783203
    7. '}"' → logprob: -11.629627227783203
    8. '})' → logprob: -12.004627227783203
    9. '}")
' → logprob: -12.879627227783203
    10. ' }' → logprob: -13.004627227783203

Token 2928: ')


' (ID: 7861)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12562894821166992
    2. '   ' → logprob: -2.50062894821167
    3. ':' → logprob: -4.25062894821167
    4. 'def' → logprob: -5.37562894821167
    5. '

' → logprob: -5.75062894821167
    6. '<|end|>' → logprob: -6.00062894821167
    7. ':
' → logprob: -6.12562894821167
    8. ')' → logprob: -6.12562894821167
    9. '    
' → logprob: -6.12562894821167
    10. '\n' → logprob: -6.25062894821167

Token 2929: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0553397573530674
    2. 'class' → logprob: -3.180339813232422
    3. '
' → logprob: -4.805339813232422
    4. '   ' → logprob: -6.055339813232422
    5. '#' → logprob: -6.555339813232422
    6. '

' → logprob: -8.555339813232422
    7. '    
' → logprob: -9.555339813232422
    8. '```' → logprob: -10.930339813232422
    9. '  
' → logprob: -11.805339813232422
    10. ' def' → logprob: -12.430339813232422

Token 2930: ' Expression' (ID: 32496)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005268976557999849
    2. 'class' → logprob: -5.2552690505981445
    3. '#' → logprob: -10.255269050598145
    4. '
' → logprob: -17.630268096923828
    5. ' def' → logprob: -19.005268096923828
    6. '   ' → logprob: -19.755268096923828
    7. 'from' → logprob: -20.880268096923828
    8. 'import' → logprob: -21.505268096923828
    9. '```' → logprob: -21.880268096923828
    10. 'Def' → logprob: -22.005268096923828

Token 2931: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00042768914136104286
    2. '
' → logprob: -8.37542724609375
    3. 'def' → logprob: -8.75042724609375
    4. ' class' → logprob: -10.87542724609375
    5. '#' → logprob: -11.75042724609375
    6. ':' → logprob: -12.00042724609375
    7. ' =' → logprob: -13.75042724609375
    8. ':
' → logprob: -13.75042724609375
    9. 'from' → logprob: -14.50042724609375
    10. ')' → logprob: -14.50042724609375

Token 2932: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.125000953674316
    3. ' class' → logprob: -15.000000953674316
    4. '<class' → logprob: -18.500001907348633
    5. ':' → logprob: -18.625001907348633
    6. ':
' → logprob: -18.750001907348633
    7. '(class' → logprob: -19.500001907348633
    8. '"class' → logprob: -19.875001907348633
    9. '(
' → logprob: -20.125001907348633
    10. 'from' → logprob: -20.375001907348633

Token 2933: ' storing' (ID: 42787)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9900913238525391
    2. 'par' → logprob: -1.115091323852539
    3. ' parsing' → logprob: -2.115091323852539
    4. 'def' → logprob: -2.865091323852539
    5. 'Expression' → logprob: -3.365091323852539
    6. 'Character' → logprob: -3.740091323852539
    7. '#' → logprob: -4.365091323852539
    8. ':' → logprob: -4.615091323852539
    9. '
' → logprob: -5.115091323852539
    10. ' decoding' → logprob: -5.365091323852539

Token 2934: ' token' (ID: 6602)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03989476338028908
    2. '
' → logprob: -3.4148948192596436
    3. 'Expression' → logprob: -6.1648945808410645
    4. 'expression' → logprob: -6.4148945808410645
    5. '#' → logprob: -7.9148945808410645
    6. ':' → logprob: -8.289895057678223
    7. 'def' → logprob: -8.539895057678223
    8. 'characters' → logprob: -8.789895057678223
    9. 'points' → logprob: -8.914895057678223
    10. 'the' → logprob: -8.914895057678223

Token 2935: 'ized' (ID: 2110)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.006806314457207918
    2. '
' → logprob: -5.631806373596191
    3. 'tokens' → logprob: -6.131806373596191
    4. ' class' → logprob: -7.756806373596191
    5. 's' → logprob: -8.256806373596191
    6. '   ' → logprob: -9.756806373596191
    7. '[
' → logprob: -9.881806373596191
    8. ':
' → logprob: -10.131806373596191
    9. ' tokens' → logprob: -10.381806373596191
    10. '_tokens' → logprob: -10.381806373596191

Token 2936: ' expression' (ID: 12973)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0031635798513889313
    2. 'tokens' → logprob: -6.128163814544678
    3. ' class' → logprob: -7.503163814544678
    4. '
' → logprob: -9.00316333770752
    5. ' tokens' → logprob: -10.00316333770752
    6. 'Token' → logprob: -10.25316333770752
    7. 'token' → logprob: -10.62816333770752
    8. '<|end|>' → logprob: -10.62816333770752
    9. '<class' → logprob: -10.75316333770752
    10. '[
' → logprob: -11.00316333770752

Token 2937: ' and' (ID: 326)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0005212200339883566
    2. '(
' → logprob: -8.375521659851074
    3. '
' → logprob: -9.125521659851074
    4. ':' → logprob: -10.125521659851074
    5. ' class' → logprob: -10.125521659851074
    6. ':
' → logprob: -10.125521659851074
    7. '(' → logprob: -10.500521659851074
    8. '(class' → logprob: -10.500521659851074
    9. '<class' → logprob: -12.875521659851074
    10. '[
' → logprob: -14.250521659851074

Token 2938: ' evaluation' (ID: 21407)
  Prédit: 'evalu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'evalu' → logprob: -0.0612366609275341
    2. 'par' → logprob: -2.936236619949341
    3. ' evaluating' → logprob: -5.81123685836792
    4. '#' → logprob: -7.18623685836792
    5. 'evaluation' → logprob: -7.18623685836792
    6. 'tokens' → logprob: -7.43623685836792
    7. '   ' → logprob: -7.81123685836792
    8. ' parsing' → logprob: -8.561236381530762
    9. 'evaluate' → logprob: -8.561236381530762
    10. '
' → logprob: -8.936236381530762

Token 2939: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0005892522749491036
    2. ':
' → logprob: -8.375589370727539
    3. '
' → logprob: -8.750589370727539
    4. '(
' → logprob: -9.250589370727539
    5. ' class' → logprob: -10.250589370727539
    6. ':' → logprob: -10.250589370727539
    7. '(class' → logprob: -10.500589370727539
    8. '(' → logprob: -13.000589370727539
    9. '<class' → logprob: -13.625589370727539
    10. '{
' → logprob: -14.750589370727539

Token 2940: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -17.125
    3. ' class' → logprob: -17.375
    4. '<class' → logprob: -19.625
    5. '"class' → logprob: -19.75
    6. '```' → logprob: -21.25
    7. 'from' → logprob: -21.75
    8. '#' → logprob: -21.875
    9. ''class' → logprob: -22.375
    10. '@dat' → logprob: -22.875

Token 2941: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -3.9292415749514475e-05
    2. 'Token' → logprob: -10.500039100646973
    3. 'Expr' → logprob: -12.375039100646973
    4. ' Expression' → logprob: -12.750039100646973
    5. 'Character' → logprob: -14.000039100646973
    6. 'class' → logprob: -14.500039100646973
    7. 'expression' → logprob: -14.625039100646973
    8. 'Evaluator' → logprob: -14.625039100646973
    9. 'Arithmetic' → logprob: -14.625039100646973
    10. 'Point' → logprob: -14.875039100646973

Token 2942: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3487425744533539
    2. ':
' → logprob: -1.2237426042556763
    3. '(Character' → logprob: -9.098742485046387
    4. '):' → logprob: -9.723742485046387
    5. '):
' → logprob: -10.098742485046387
    6. '(object' → logprob: -10.723742485046387
    7. '(' → logprob: -10.848742485046387
    8. ':

' → logprob: -10.973742485046387
    9. ':def' → logprob: -12.973742485046387
    10. '
' → logprob: -13.098742485046387

Token 2943: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046856500557623804
    2. 'def' → logprob: -7.875468730926514
    3. ' def' → logprob: -9.500468254089355
    4. '	def' → logprob: -12.000468254089355
    5. '```' → logprob: -12.375468254089355
    6. 'class' → logprob: -13.000468254089355
    7. '
' → logprob: -14.625468254089355
    8. ':' → logprob: -15.250468254089355
    9. '    
' → logprob: -16.375469207763672
    10. '  ' → logprob: -16.500469207763672

Token 2944: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06915134936571121
    2. ' def' → logprob: -2.8191514015197754
    3. '   ' → logprob: -4.944151401519775
    4. 'class' → logprob: -10.819150924682617
    5. '	def' → logprob: -12.569150924682617
    6. '```' → logprob: -12.569150924682617
    7. 'tokens' → logprob: -12.819150924682617
    8. '
' → logprob: -13.319150924682617
    9. '__' → logprob: -14.444150924682617
    10. 'token' → logprob: -15.319150924682617

Token 2945: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0940573439002037
    2. '__' → logprob: -2.969057321548462
    3. '_init' → logprob: -3.719057321548462
    4. ' __' → logprob: -4.844057559967041
    5. '```' → logprob: -5.719057559967041
    6. 'def' → logprob: -5.844057559967041
    7. ' def' → logprob: -10.469057083129883
    8. 'list' → logprob: -11.094057083129883
    9. ' init' → logprob: -11.344057083129883
    10. '`' → logprob: -11.344057083129883

Token 2946: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.127333340875339e-06
    2. 'class' → logprob: -13.875003814697266
    3. 'def' → logprob: -14.375003814697266
    4. 'int' → logprob: -14.500003814697266
    5. ' init' → logprob: -14.625003814697266
    6. '__' → logprob: -14.625003814697266
    7. '```' → logprob: -14.625003814697266
    8. 'set' → logprob: -15.125003814697266
    9. '   ' → logprob: -15.625003814697266
    10. '_init' → logprob: -16.000003814697266

Token 2947: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009075520560145378
    2. '__(' → logprob: -4.75907564163208
    3. ' (' → logprob: -8.009075164794922
    4. 'self' → logprob: -9.759075164794922
    5. '(' → logprob: -10.134075164794922
    6. '   ' → logprob: -10.884075164794922
    7. '__(
' → logprob: -12.384075164794922
    8. '(
' → logprob: -12.759075164794922
    9. '=self' → logprob: -13.884075164794922
    10. '```' → logprob: -14.134075164794922

Token 2948: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1472419600977446e-06
    2. ' self' → logprob: -14.125000953674316
    3. '       ' → logprob: -15.375000953674316
    4. '   ' → logprob: -16.500001907348633
    5. 'tokens' → logprob: -17.125001907348633
    6. '
' → logprob: -17.750001907348633
    7. '(self' → logprob: -17.875001907348633
    8. '	self' → logprob: -17.875001907348633
    9. '):
' → logprob: -19.125001907348633
    10. '```' → logprob: -19.750001907348633

Token 2949: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005179678089916706
    2. '   ' → logprob: -6.2551798820495605
    3. 'self' → logprob: -6.2551798820495605
    4. ' ,' → logprob: -7.2551798820495605
    5. 'occupied' → logprob: -8.755179405212402
    6. '):
' → logprob: -9.005179405212402
    7. 'tokens' → logprob: -9.505179405212402
    8. '):' → logprob: -9.880179405212402
    9. ',
' → logprob: -10.130179405212402
    10. '(points' → logprob: -10.380179405212402

Token 2950: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.013103523291647434
    2. 'self' → logprob: -4.888103485107422
    3. 'chars' → logprob: -5.763103485107422
    4. 'characters' → logprob: -6.763103485107422
    5. ' tokens' → logprob: -6.888103485107422
    6. 'text' → logprob: -10.388103485107422
    7. 'token' → logprob: -10.638103485107422
    8. 'expression' → logprob: -10.638103485107422
    9. 'symbols' → logprob: -11.263103485107422
    10. 'expr' → logprob: -11.513103485107422

Token 2951: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07396502792835236
    2. '):
' → logprob: -2.823965072631836
    3. '):' → logprob: -4.573965072631836
    4. '   ' → logprob: -7.198965072631836
    5. '       ' → logprob: -7.698965072631836
    6. ',' → logprob: -9.448965072631836
    7. ' :' → logprob: -9.573965072631836
    8. ':list' → logprob: -9.823965072631836
    9. ' ):
' → logprob: -9.948965072631836
    10. '(self' → logprob: -10.573965072631836

Token 2952: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0005942588322795928
    2. '[List' → logprob: -7.500594139099121
    3. ' List' → logprob: -10.750594139099121
    4. 'list' → logprob: -11.000594139099121
    5. 'self' → logprob: -13.000594139099121
    6. '   ' → logprob: -15.125594139099121
    7. ')' → logprob: -15.625594139099121
    8. '[' → logprob: -16.125595092773438
    9. '       ' → logprob: -16.125595092773438
    10. '(List' → logprob: -16.375595092773438

Token 2953: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0002767094410955906
    2. '[' → logprob: -8.875276565551758
    3. '[int' → logprob: -9.375276565551758
    4. ')' → logprob: -10.750276565551758
    5. '):
' → logprob: -11.125276565551758
    6. '):' → logprob: -11.750276565551758
    7. 'str' → logprob: -12.625276565551758
    8. '['' → logprob: -14.375276565551758
    9. '[List' → logprob: -14.750276565551758
    10. '=str' → logprob: -14.750276565551758

Token 2954: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.021019315347075462
    2. '):' → logprob: -4.396019458770752
    3. ']):
' → logprob: -4.896019458770752
    4. '   ' → logprob: -7.396019458770752
    5. ')' → logprob: -9.021018981933594
    6. ']):' → logprob: -9.146018981933594
    7. '       ' → logprob: -9.646018981933594
    8. '):
' → logprob: -11.021018981933594
    9. ',' → logprob: -11.021018981933594
    10. '[' → logprob: -11.146018981933594

Token 2955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012999906903132796
    2. 'self' → logprob: -9.500129699707031
    3. ':' → logprob: -10.750129699707031
    4. ' self' → logprob: -11.250129699707031
    5. '   ' → logprob: -11.625129699707031
    6. '(self' → logprob: -12.000129699707031
    7. ',' → logprob: -13.250129699707031
    8. '      ' → logprob: -13.875129699707031
    9. '):
' → logprob: -14.375129699707031
    10. '     ' → logprob: -15.000129699707031

Token 2956: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.47451838850975037
    2. '       ' → logprob: -0.9745184183120728
    3. ' self' → logprob: -7.849518299102783
    4. '	self' → logprob: -10.724518775939941
    5. '	' → logprob: -11.099518775939941
    6. '   ' → logprob: -11.224518775939941
    7. '	   ' → logprob: -14.974518775939941
    8. '(self' → logprob: -15.099518775939941
    9. '    ' → logprob: -15.849518775939941
    10. ' ' → logprob: -16.349517822265625

Token 2957: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -0.0014622616581618786
    2. '.' → logprob: -6.626462459564209
    3. 'tokens' → logprob: -9.00146198272705
    4. ' .' → logprob: -11.87646198272705
    5. '.t' → logprob: -12.87646198272705
    6. ' tokens' → logprob: -13.75146198272705
    7. '   ' → logprob: -13.87646198272705
    8. '_tokens' → logprob: -14.37646198272705
    9. '.token' → logprob: -14.87646198272705
    10. 'Tokens' → logprob: -15.25146198272705

Token 2958: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5769197940826416
    2. '=' → logprob: -0.8269197940826416
    3. '=[]' → logprob: -8.076919555664062
    4. '   ' → logprob: -8.076919555664062
    5. ':' → logprob: -9.201919555664062
    6. '.append' → logprob: -9.701919555664062
    7. '[' → logprob: -10.076919555664062
    8. ')' → logprob: -10.326919555664062
    9. ',' → logprob: -10.576919555664062
    10. '<|end|>' → logprob: -10.826919555664062

Token 2959: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.0031784253660589457
    2. ' tokens' → logprob: -5.753178596496582
    3. '(tokens' → logprob: -14.503178596496582
    4. '   ' → logprob: -17.003177642822266
    5. '[' → logprob: -17.253177642822266
    6. '.tokens' → logprob: -17.628177642822266
    7. '[]' → logprob: -18.378177642822266
    8. '       ' → logprob: -18.878177642822266
    9. 'token' → logprob: -19.003177642822266
    10. ' ' → logprob: -20.003177642822266

Token 2960: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.172294020652771
    2. '
' → logprob: -2.1722941398620605
    3. '    
' → logprob: -3.4222941398620605
    4. '<|end|>' → logprob: -4.9222941398620605
    5. ':' → logprob: -6.2972941398620605
    6. 'def' → logprob: -7.4222941398620605
    7. '       ' → logprob: -8.172293663024902
    8. ')' → logprob: -8.172293663024902
    9. '        
' → logprob: -8.297293663024902
    10. '  
' → logprob: -8.672293663024902

Token 2961: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0900442898273468
    2. '   ' → logprob: -2.4650442600250244
    3. '    
' → logprob: -7.2150444984436035
    4. 'def' → logprob: -8.715044021606445
    5. '

' → logprob: -8.840044021606445
    6. '<|end|>' → logprob: -10.340044021606445
    7. '        
' → logprob: -12.215044021606445
    8. '       ' → logprob: -12.340044021606445
    9. ' def' → logprob: -12.590044021606445
    10. ' ' → logprob: -13.340044021606445

Token 2962: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13457292318344116
    2. '   ' → logprob: -2.134572982788086
    3. ' def' → logprob: -4.884572982788086
    4. '
' → logprob: -9.884572982788086
    5. '	def' → logprob: -13.384572982788086
    6. '       ' → logprob: -14.759572982788086
    7. '4' → logprob: -16.259572982788086
    8. 'Def' → logprob: -16.634572982788086
    9. '```' → logprob: -16.634572982788086
    10. '    
' → logprob: -16.884572982788086

Token 2963: ' __' (ID: 2516)
  Prédit: ' evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.16303490102291107
    2. 'evaluate' → logprob: -1.9130349159240723
    3. '_eval' → logprob: -6.663034915924072
    4. ' def' → logprob: -7.788034915924072
    5. ' eval' → logprob: -8.038034439086914
    6. 'eval' → logprob: -8.913034439086914
    7. 'def' → logprob: -9.288034439086914
    8. '   ' → logprob: -9.288034439086914
    9. ' evaluates' → logprob: -9.288034439086914
    10. '_e' → logprob: -9.538034439086914

Token 2964: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.137911856174469
    2. 'repr' → logprob: -2.137911796569824
    3. 'eq' → logprob: -5.387911796569824
    4. 'len' → logprob: -5.637911796569824
    5. 'init' → logprob: -5.887911796569824
    6. 'add' → logprob: -11.512911796569824
    7. 'iter' → logprob: -12.137911796569824
    8. 'getitem' → logprob: -13.762911796569824
    9. 'lt' → logprob: -14.137911796569824
    10. 'call' → logprob: -14.262911796569824

Token 2965: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004606111440807581
    2. '(self' → logprob: -5.504606246948242
    3. '__(
' → logprob: -7.879606246948242
    4. '__' → logprob: -8.879606246948242
    5. '(' → logprob: -12.379606246948242
    6. '__('' → logprob: -13.004606246948242
    7. '__[' → logprob: -13.754606246948242
    8. '__("' → logprob: -14.254606246948242
    9. '__.__' → logprob: -15.129606246948242
    10. 'self' → logprob: -15.254606246948242

Token 2966: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.951771421066951e-05
    2. ')' → logprob: -10.500029563903809
    3. ' self' → logprob: -13.250029563903809
    4. '(self' → logprob: -16.375028610229492
    5. ')(' → logprob: -17.375028610229492
    6. '	self' → logprob: -17.375028610229492
    7. '
' → logprob: -17.500028610229492
    8. '   ' → logprob: -18.000028610229492
    9. '):' → logprob: -18.875028610229492
    10. '):
' → logprob: -19.125028610229492

Token 2967: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.3356082439422607
    2. '__(' → logprob: -1.5856082439422607
    3. '(self' → logprob: -1.7106082439422607
    4. '__' → logprob: -1.9606082439422607
    5. '):
' → logprob: -1.9606082439422607
    6. 'self' → logprob: -3.4606082439422607
    7. ')' → logprob: -3.8356082439422607
    8. '   ' → logprob: -4.58560848236084
    9. ')__' → logprob: -6.96060848236084
    10. '__:' → logprob: -7.08560848236084

Token 2968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000584249384701252
    2. 'return' → logprob: -7.875584125518799
    3. 'def' → logprob: -8.875584602355957
    4. '   ' → logprob: -10.000584602355957
    5. ' return' → logprob: -12.000584602355957
    6. 'self' → logprob: -12.125584602355957
    7. '(self' → logprob: -12.875584602355957
    8. '(' → logprob: -13.250584602355957
    9. '           ' → logprob: -13.875584602355957
    10. ' def' → logprob: -15.125584602355957

Token 2969: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10521475970745087
    2. ' return' → logprob: -2.355214834213257
    3. '       ' → logprob: -5.355214595794678
    4. '   ' → logprob: -8.605215072631836
    5. '"' → logprob: -9.980215072631836
    6. ''' → logprob: -10.980215072631836
    7. '	return' → logprob: -11.355215072631836
    8. '
' → logprob: -11.605215072631836
    9. '```' → logprob: -13.730215072631836
    10. ':return' → logprob: -13.730215072631836

Token 2970: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24746160209178925
    2. ''' → logprob: -1.9974615573883057
    3. '''.' → logprob: -2.4974615573883057
    4. ' ''.' → logprob: -7.122461795806885
    5. ' "".' → logprob: -8.122461318969727
    6. '''' → logprob: -9.872461318969727
    7. ' '' → logprob: -10.122461318969727
    8. '""' → logprob: -10.497461318969727
    9. '   ' → logprob: -11.622461318969727
    10. ' "' → logprob: -12.497461318969727

Token 2971: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.869017852295656e-06
    2. '''.' → logprob: -12.250006675720215
    3. ' join' → logprob: -13.625006675720215
    4. '.join' → logprob: -14.000006675720215
    5. '   ' → logprob: -18.00000762939453
    6. ''.' → logprob: -18.12500762939453
    7. ''' → logprob: -18.75000762939453
    8. '.' → logprob: -19.12500762939453
    9. 'self' → logprob: -19.62500762939453
    10. 'jo' → logprob: -19.87500762939453

Token 2972: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47447171807289124
    2. '(self' → logprob: -0.9744716882705688
    3. 'token' → logprob: -8.099472045898438
    4. '[self' → logprob: -9.599472045898438
    5. 'str' → logprob: -11.599472045898438
    6. ' self' → logprob: -12.099472045898438
    7. '(str' → logprob: -13.099472045898438
    8. 't' → logprob: -13.349472045898438
    9. '(token' → logprob: -13.599472045898438
    10. '([' → logprob: -14.224472045898438

Token 2973: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -2.4391956685576588e-05
    2. 'self' → logprob: -11.000024795532227
    3. 'tokens' → logprob: -12.500024795532227
    4. '.token' → logprob: -13.000024795532227
    5. '.t' → logprob: -14.375024795532227
    6. '.' → logprob: -14.750024795532227
    7. '.self' → logprob: -15.125024795532227
    8. ' .' → logprob: -15.500024795532227
    9. '(tokens' → logprob: -16.000024795532227
    10. ')' → logprob: -17.750024795532227

Token 2974: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.73183855926618e-05
    2. '   ' → logprob: -9.625077247619629
    3. ')+' → logprob: -11.750077247619629
    4. '       ' → logprob: -13.500077247619629
    5. ')
' → logprob: -14.125077247619629
    6. ' )' → logprob: -14.250077247619629
    7. '[' → logprob: -15.125077247619629
    8. ').' → logprob: -16.750078201293945
    9. ')`' → logprob: -16.750078201293945
    10. '))' → logprob: -17.000078201293945

Token 2975: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10627702623605728
    2. '
' → logprob: -2.3562769889831543
    3. 'def' → logprob: -5.231276988983154
    4. ' def' → logprob: -7.981276988983154
    5. '    
' → logprob: -8.356277465820312
    6. '

' → logprob: -9.606277465820312
    7. ' 
' → logprob: -11.106277465820312
    8. '<|end|>' → logprob: -11.731277465820312
    9. '```' → logprob: -12.481277465820312
    10. '	def' → logprob: -12.481277465820312

Token 2976: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015090317465364933
    2. '   ' → logprob: -6.501509189605713
    3. ' def' → logprob: -12.126508712768555
    4. '
' → logprob: -13.626508712768555
    5. '#' → logprob: -16.501508712768555
    6. 'class' → logprob: -17.751508712768555
    7. '	def' → logprob: -18.001508712768555
    8. '@' → logprob: -18.376508712768555
    9. '    
' → logprob: -18.751508712768555
    10. 'import' → logprob: -19.126508712768555

Token 2977: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.1302967369556427
    2. ' evaluate' → logprob: -2.3802967071533203
    3. 'def' → logprob: -3.7552967071533203
    4. 'eval' → logprob: -5.63029670715332
    5. ' def' → logprob: -6.50529670715332
    6. '   ' → logprob: -8.00529670715332
    7. '_eval' → logprob: -8.25529670715332
    8. ' eval' → logprob: -8.63029670715332
    9. '_tokens' → logprob: -9.25529670715332
    10. 'token' → logprob: -9.50529670715332

Token 2978: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.35706390615087e-05
    2. '(' → logprob: -10.375033378601074
    3. 'self' → logprob: -13.875033378601074
    4. '(
' → logprob: -14.375033378601074
    5. '   ' → logprob: -14.750033378601074
    6. 'def' → logprob: -15.125033378601074
    7. ' (' → logprob: -17.12503433227539
    8. '       ' → logprob: -17.87503433227539
    9. '():' → logprob: -18.62503433227539
    10. '```' → logprob: -18.62503433227539

Token 2979: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7476926445960999
    2. 'self' → logprob: -1.372692584991455
    3. '):
' → logprob: -2.122692584991455
    4. '):' → logprob: -2.372692584991455
    5. ',' → logprob: -3.122692584991455
    6. '   ' → logprob: -4.372692584991455
    7. ')' → logprob: -6.622692584991455
    8. '(' → logprob: -7.497692584991455
    9. '       ' → logprob: -7.747692584991455
    10. ' self' → logprob: -8.872693061828613

Token 2980: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016526242718100548
    2. '   ' → logprob: -4.641526222229004
    3. '       ' → logprob: -5.391526222229004
    4. 'self' → logprob: -7.016526222229004
    5. 'def' → logprob: -7.266526222229004
    6. '(
' → logprob: -8.766526222229004
    7. '(' → logprob: -8.766526222229004
    8. ':
' → logprob: -8.766526222229004
    9. ':' → logprob: -10.391526222229004
    10. '	self' → logprob: -10.391526222229004

Token 2981: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003825293097179383
    2. ' int' → logprob: -8.250382423400879
    3. 'float' → logprob: -9.375382423400879
    4. '(int' → logprob: -10.625382423400879
    5. 'str' → logprob: -11.625382423400879
    6. '   ' → logprob: -13.625382423400879
    7. '[int' → logprob: -14.625382423400879
    8. ':int' → logprob: -15.250382423400879
    9. ':' → logprob: -15.375382423400879
    10. ':
' → logprob: -15.625382423400879

Token 2982: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34952300786972046
    2. '(self' → logprob: -1.8495230674743652
    3. ':
' → logprob: -2.3495230674743652
    4. '   ' → logprob: -3.3495230674743652
    5. ':' → logprob: -5.099523067474365
    6. '):
' → logprob: -7.974523067474365
    7. 'self' → logprob: -8.099522590637207
    8. '(
' → logprob: -9.099522590637207
    9. 'def' → logprob: -9.724522590637207
    10. '(' → logprob: -10.599522590637207

Token 2983: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013834332639817148
    2. '	' → logprob: -9.875138282775879
    3. 'tokens' → logprob: -10.000138282775879
    4. '
' → logprob: -11.125138282775879
    5. '```' → logprob: -11.875138282775879
    6. ' tokens' → logprob: -12.500138282775879
    7. '	   ' → logprob: -13.000138282775879
    8. '   ' → logprob: -13.000138282775879
    9. 'result' → logprob: -13.375138282775879
    10. 'token' → logprob: -13.375138282775879

Token 2984: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36922910809516907
    2. 'stack' → logprob: -1.4942290782928467
    3. 'tokens' → logprob: -3.1192290782928467
    4. 'expr' → logprob: -3.9942290782928467
    5. 'result' → logprob: -4.369229316711426
    6. 'res' → logprob: -5.869229316711426
    7. ' tokens' → logprob: -6.994229316711426
    8. ' expr' → logprob: -6.994229316711426
    9. ' stack' → logprob: -7.369229316711426
    10. 'value' → logprob: -7.494229316711426

Token 2985: ' parse' (ID: 8420)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.30019766092300415
    2. 'result' → logprob: -2.6751976013183594
    3. 'stack' → logprob: -3.0501976013183594
    4. '       ' → logprob: -3.1751976013183594
    5. 'tokens' → logprob: -3.4251976013183594
    6. '#' → logprob: -3.8001976013183594
    7. '   ' → logprob: -4.300197601318359
    8. 'import' → logprob: -4.425197601318359
    9. 'expression' → logprob: -5.300197601318359
    10. 'res' → logprob: -5.675197601318359

Token 2986: ' and' (ID: 326)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.7188589572906494
    2. '       ' → logprob: -1.3438589572906494
    3. 'i' → logprob: -2.5938589572906494
    4. 'expr' → logprob: -2.8438589572906494
    5. 'idx' → logprob: -3.2188589572906494
    6. 'index' → logprob: -3.5938589572906494
    7. 'result' → logprob: -4.09385871887207
    8. 'pos' → logprob: -4.34385871887207
    9. 'stack' → logprob: -4.84385871887207
    10. 'token' → logprob: -5.96885871887207

Token 2987: ' calculate' (ID: 17950)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -1.353502631187439
    2. 'compute' → logprob: -1.603502631187439
    3. 'def' → logprob: -1.978502631187439
    4. 'return' → logprob: -2.1035027503967285
    5. '   ' → logprob: -2.2285027503967285
    6. 'calculate' → logprob: -3.1035027503967285
    7. 'tokens' → logprob: -3.3535027503967285
    8. '       ' → logprob: -3.4785027503967285
    9. 'token' → logprob: -4.2285027503967285
    10. 'eval' → logprob: -4.3535027503967285

Token 2988: ' expression' (ID: 12973)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7280255556106567
    2. 'tokens' → logprob: -0.9780255556106567
    3. 'expr' → logprob: -2.103025436401367
    4. 'expression' → logprob: -5.353025436401367
    5. 'stack' → logprob: -5.728025436401367
    6. ' tokens' → logprob: -5.853025436401367
    7. ' expr' → logprob: -6.228025436401367
    8. 'index' → logprob: -6.603025436401367
    9. 'result' → logprob: -7.353025436401367
    10. 'token' → logprob: -7.478025436401367

Token 2989: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28268271684646606
    2. '(self' → logprob: -1.4076826572418213
    3. 'self' → logprob: -7.7826828956604
    4. '   ' → logprob: -8.032682418823242
    5. ' (' → logprob: -8.032682418823242
    6. '_tokens' → logprob: -9.282682418823242
    7. '(' → logprob: -9.657682418823242
    8. '(tokens' → logprob: -9.782682418823242
    9. ' self' → logprob: -9.907682418823242
    10. 'tokens' → logprob: -10.282682418823242

Token 2990: ' given' (ID: 4335)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10660101473331451
    2. 'tokens' → logprob: -2.8566009998321533
    3. 'eval' → logprob: -4.356601238250732
    4. 'def' → logprob: -4.481601238250732
    5. 'preced' → logprob: -4.981601238250732
    6. 'standard' → logprob: -6.231601238250732
    7. '0' → logprob: -6.231601238250732
    8. '#' → logprob: -6.231601238250732
    9. 'operator' → logprob: -7.106601238250732
    10. '
' → logprob: -7.106601238250732

Token 2991: ' +' (ID: 659)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.10919295996427536
    2. ' tokens' → logprob: -2.3591928482055664
    3. '_tokens' → logprob: -5.484192848205566
    4. 'self' → logprob: -6.484192848205566
    5. '
' → logprob: -6.859192848205566
    6. '       ' → logprob: -7.359192848205566
    7. 'preced' → logprob: -7.984192848205566
    8. ' self' → logprob: -8.359192848205566
    9. 'token' → logprob: -8.734192848205566
    10. 'def' → logprob: -8.734192848205566

Token 2992: ' -' (ID: 533)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4383545517921448
    2. 'and' → logprob: -2.4383544921875
    3. ' ' → logprob: -2.6883544921875
    4. '-' → logprob: -2.9383544921875
    5. ' or' → logprob: -3.0633544921875
    6. ' -' → logprob: -3.3133544921875
    7. '<|end|>' → logprob: -3.5633544921875
    8. ',' → logprob: -3.6883544921875
    9. '  ' → logprob: -6.1883544921875
    10. ' ,' → logprob: -6.4383544921875

Token 2993: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1836712658405304
    2. ' ' → logprob: -2.683671236038208
    3. ' tokens' → logprob: -3.808671236038208
    4. '   ' → logprob: -4.433671474456787
    5. ' self' → logprob: -4.558671474456787
    6. ',' → logprob: -4.558671474456787
    7. ' operator' → logprob: -4.558671474456787
    8. ' or' → logprob: -4.933671474456787
    9. ' operators' → logprob: -5.433671474456787
    10. '       ' → logprob: -5.558671474456787

Token 2994: ' ・' (ID: 39700)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23922543227672577
    2. ' ' → logprob: -2.614225387573242
    3. ' tokens' → logprob: -3.364225387573242
    4. 'tokens' → logprob: -3.864225387573242
    5. ' *' → logprob: -3.864225387573242
    6. '   ' → logprob: -4.489225387573242
    7. ' (' → logprob: -5.364225387573242
    8. '  ' → logprob: -5.489225387573242
    9. ')' → logprob: -5.989225387573242
    10. ' times' → logprob: -6.239225387573242

Token 2995: ' operators' (ID: 29893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34314340353012085
    2. '(self' → logprob: -1.9681434631347656
    3. ' (' → logprob: -2.9681434631347656
    4. 'self' → logprob: -3.4681434631347656
    5. '   ' → logprob: -3.8431434631347656
    6. '(' → logprob: -4.593143463134766
    7. ' self' → logprob: -4.843143463134766
    8. '_tokens' → logprob: -5.468143463134766
    9. 'tokens' → logprob: -5.468143463134766
    10. ' tokens' → logprob: -5.843143463134766

Token 2996: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00272771785967052
    2. ':' → logprob: -6.627727508544922
    3. '(tokens' → logprob: -7.752727508544922
    4. ',' → logprob: -8.002727508544922
    5. ':
' → logprob: -8.002727508544922
    6. '(self' → logprob: -9.377727508544922
    7. '_tokens' → logprob: -10.127727508544922
    8. 'tokens' → logprob: -10.377727508544922
    9. '   ' → logprob: -10.627727508544922
    10. ' (' → logprob: -11.127727508544922

Token 2997: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000831782293971628
    2. ':' → logprob: -8.000831604003906
    3. '(self' → logprob: -8.000831604003906
    4. '   ' → logprob: -10.250831604003906
    5. ':
' → logprob: -10.375831604003906
    6. ',' → logprob: -10.625831604003906
    7. 'self' → logprob: -11.250831604003906
    8. '```' → logprob: -11.625831604003906
    9. '      ' → logprob: -12.000831604003906
    10. '(' → logprob: -12.250831604003906

Token 2998: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008313494734466076
    2. 'tokens' → logprob: -5.0083136558532715
    3. 'expr' → logprob: -7.2583136558532715
    4. ' tokens' → logprob: -7.8833136558532715
    5. 'stack' → logprob: -9.008313179016113
    6. 's' → logprob: -9.258313179016113
    7. ' expr' → logprob: -9.633313179016113
    8. 'result' → logprob: -9.633313179016113
    9. ' s' → logprob: -10.008313179016113
    10. 'expression' → logprob: -10.758313179016113

Token 2999: ' operator' (ID: 11019)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038543786853551865
    2. 'tokens' → logprob: -3.538543701171875
    3. 'expr' → logprob: -5.038543701171875
    4. 's' → logprob: -7.663543701171875
    5. ' tokens' → logprob: -7.913543701171875
    6. '#' → logprob: -8.038543701171875
    7. 'result' → logprob: -8.163543701171875
    8. 'stack' → logprob: -8.538543701171875
    9. ' expr' → logprob: -9.163543701171875
    10. 'expression' → logprob: -9.288543701171875

Token 3000: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.4378109574317932
    2. '_stack' → logprob: -1.9378108978271484
    3. 'stack' → logprob: -2.0628108978271484
    4. '=' → logprob: -3.3128108978271484
    5. 's' → logprob: -3.8128108978271484
    6. ' =' → logprob: -4.312810897827148
    7. 'prec' → logprob: -5.437810897827148
    8. '_pre' → logprob: -6.062810897827148
    9. '_tokens' → logprob: -6.812810897827148
    10. ' precedence' → logprob: -6.812810897827148

Token 3001: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07159639894962311
    2. '=' → logprob: -3.571596384048462
    3. ':' → logprob: -3.946596384048462
    4. '       ' → logprob: -4.446596622467041
    5. '   ' → logprob: -5.821596622467041
    6. ' is' → logprob: -6.446596622467041
    7. ' (' → logprob: -6.821596622467041
    8. ':
' → logprob: -7.071596622467041
    9. ' :' → logprob: -7.196596622467041
    10. ',' → logprob: -7.446596622467041

Token 3002: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3174539804458618
    2. '       ' → logprob: -1.5674539804458618
    3. ''' → logprob: -1.8174539804458618
    4. '   ' → logprob: -2.0674538612365723
    5. ''*' → logprob: -2.1924538612365723
    6. ' '' → logprob: -4.067453861236572
    7. 'self' → logprob: -4.442453861236572
    8. 'multip' → logprob: -4.567453861236572
    9. '"' → logprob: -4.692453861236572
    10. ' '*' → logprob: -4.942453861236572

Token 3003: ' ・' (ID: 39700)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -1.2504429817199707
    2. ''' → logprob: -1.5004429817199707
    3. 'multip' → logprob: -1.8754429817199707
    4. ''*' → logprob: -2.1254429817199707
    5. '[
' → logprob: -2.2504429817199707
    6. 'self' → logprob: -3.5004429817199707
    7. '[' → logprob: -3.6254429817199707
    8. 'mul' → logprob: -4.500442981719971
    9. '#' → logprob: -4.750442981719971
    10. '1' → logprob: -5.125442981719971

Token 3004: '(' (ID: 7)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9171949625015259
    2. ' has' → logprob: -1.5421949625015259
    3. '>' → logprob: -2.2921948432922363
    4. ' first' → logprob: -2.2921948432922363
    5. ' (' → logprob: -3.4171948432922363
    6. ' =' → logprob: -3.4171948432922363
    7. '=' → logprob: -3.6671948432922363
    8. ' and' → logprob: -4.417194843292236
    9. '   ' → logprob: -4.542194843292236
    10. 'first' → logprob: -4.542194843292236

Token 3005: 'mul' (ID: 44857)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -1.1342419385910034
    2. ')' → logprob: -1.2592419385910034
    3. '1' → logprob: -1.2592419385910034
    4. '*' → logprob: -3.259242057800293
    5. '*)' → logprob: -3.634242057800293
    6. '')' → logprob: -4.634242057800293
    7. ''' → logprob: -5.009242057800293
    8. '2' → logprob: -5.384242057800293
    9. ' ' → logprob: -5.634242057800293
    10. 'multip' → logprob: -5.759242057800293

Token 3006: ')' (ID: 8)
  Prédit: 'tip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tip' → logprob: -0.08058525621891022
    2. '*' → logprob: -3.580585241317749
    3. ')' → logprob: -3.955585241317749
    4. 't' → logprob: -4.330585479736328
    5. '*)' → logprob: -4.330585479736328
    6. 'ip' → logprob: -6.455585479736328
    7. '
' → logprob: -7.705585479736328
    8. '）' → logprob: -7.830585479736328
    9. '＊' → logprob: -8.080585479736328
    10. '・' → logprob: -8.205585479736328

Token 3007: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06149306520819664
    2. ',' → logprob: -4.061492919921875
    3. '>' → logprob: -4.186492919921875
    4. ' first' → logprob: -5.061492919921875
    5. ' ' → logprob: -5.311492919921875
    6. ' *' → logprob: -6.061492919921875
    7. ' and' → logprob: -6.186492919921875
    8. ' ->' → logprob: -6.186492919921875
    9. '   ' → logprob: -6.311492919921875
    10. ' ,' → logprob: -6.436492919921875

Token 3008: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0199249517172575
    2. '+-' → logprob: -4.644925117492676
    3. ' +' → logprob: -4.894925117492676
    4. '-' → logprob: -6.019925117492676
    5. '+
' → logprob: -9.894925117492676
    6. ''+' → logprob: -10.019925117492676
    7. ' -' → logprob: -10.394925117492676
    8. ''-' → logprob: -11.394925117492676
    9. 'plus' → logprob: -11.644925117492676
    10. ' '+'' → logprob: -11.769925117492676

Token 3009: ' >' (ID: 1424)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.164302796125412
    2. '-' → logprob: -2.9143028259277344
    3. ' ' → logprob: -3.6643028259277344
    4. ' and' → logprob: -3.9143028259277344
    5. '   ' → logprob: -4.414302825927734
    6. '       ' → logprob: -4.664302825927734
    7. ',' → logprob: -4.914302825927734
    8. '        ' → logprob: -5.914302825927734
    9. '<|end|>' → logprob: -6.039302825927734
    10. ' (' → logprob: -6.164302825927734

Token 3010: ' -
' (ID: 27418)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0022128233686089516
    2. ' -' → logprob: -6.127213001251221
    3. '-minus' → logprob: -11.627212524414062
    4. 'minus' → logprob: -12.252212524414062
    5. '_minus' → logprob: -12.877212524414062
    6. '-
' → logprob: -13.377212524414062
    7. ' ' → logprob: -13.377212524414062
    8. ' minus' → logprob: -13.377212524414062
    9. '<|end|>' → logprob: -13.377212524414062
    10. 'Minus' → logprob: -13.627212524414062

Token 3011: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005608965293504298
    2. '
' → logprob: -7.750560760498047
    3. '   ' → logprob: -9.875560760498047
    4. 'def' → logprob: -10.750560760498047
    5. '           ' → logprob: -11.500560760498047
    6. '	' → logprob: -11.875560760498047
    7. '```' → logprob: -11.875560760498047
    8. '        
' → logprob: -12.250560760498047
    9. ':' → logprob: -12.250560760498047
    10. ' def' → logprob: -12.625560760498047

Token 3012: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005476721096783876
    2. 'tokens' → logprob: -5.380476951599121
    3. 'stack' → logprob: -8.005476951599121
    4. 'expr' → logprob: -8.255476951599121
    5. 'result' → logprob: -9.505476951599121
    6. '#' (adapté à ' #') → logprob: -10.005476951599121
    7. 'ops' → logprob: -10.505476951599121
    8. 'pos' → logprob: -10.505476951599121
    9. '   ' → logprob: -11.005476951599121
    10. ' tokens' → logprob: -11.505476951599121

Token 3013: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07018750160932541
    2. 'tokens' → logprob: -2.945187568664551
    3. 'def' → logprob: -4.320187568664551
    4. 'stack' → logprob: -7.320187568664551
    5. '   ' → logprob: -7.820187568664551
    6. 'expr' → logprob: -8.32018756866455
    7. '#' → logprob: -8.57018756866455
    8. 'pos' → logprob: -9.57018756866455
    9. 'result' → logprob: -9.57018756866455
    10. ' tokens' → logprob: -9.69518756866455

Token 3014: ' implement' (ID: 6365)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.27601027488708496
    2. 'def' → logprob: -1.776010274887085
    3. '   ' → logprob: -2.776010274887085
    4. ' need' → logprob: -6.526010513305664
    5. ' will' → logprob: -6.901010513305664
    6. '```' → logprob: -7.276010513305664
    7. ' =' → logprob: -7.401010513305664
    8. ' ' → logprob: -7.526010513305664
    9. '       ' → logprob: -7.651010513305664
    10. 'e' → logprob: -7.651010513305664

Token 3015: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5678906440734863
    2. ' a' → logprob: -2.0678906440734863
    3. 'a' → logprob: -2.1928906440734863
    4. 'self' → logprob: -2.8178906440734863
    5. ' def' → logprob: -2.9428906440734863
    6. 'the' → logprob: -3.8178906440734863
    7. ' the' → logprob: -4.192890644073486
    8. '
' → logprob: -4.692890644073486
    9. '   ' → logprob: -4.817890644073486
    10. ' self' → logprob: -4.942890644073486

Token 3016: ' proper' (ID: 7937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006783335469663143
    2. ' def' → logprob: -5.631783485412598
    3. 'two' → logprob: -6.506783485412598
    4. ' two' → logprob: -7.506783485412598
    5. '#' → logprob: -8.006783485412598
    6. 'stack' → logprob: -8.256783485412598
    7. '   ' → logprob: -9.256783485412598
    8. 'new' → logprob: -9.631783485412598
    9. 'sh' → logprob: -10.131783485412598
    10. '
' → logprob: -10.381783485412598

Token 3017: ' parser' (ID: 14216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22137410938739777
    2. 'preced' → logprob: -2.096374034881592
    3. 'sh' → logprob: -3.471374034881592
    4. 'parser' → logprob: -3.971374034881592
    5. 'token' → logprob: -4.346374034881592
    6. ' sh' → logprob: -5.346374034881592
    7. ' parser' → logprob: -6.221374034881592
    8. ' def' → logprob: -6.471374034881592
    9. '
' → logprob: -7.221374034881592
    10. 'e' → logprob: -7.471374034881592

Token 3018: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38298866152763367
    2. '   ' → logprob: -1.257988691329956
    3. '(self' → logprob: -4.132988452911377
    4. ':
' → logprob: -5.257988452911377
    5. 'def' → logprob: -5.632988452911377
    6. '
' → logprob: -6.257988452911377
    7. ':' → logprob: -7.007988452911377
    8. '(
' → logprob: -7.132988452911377
    9. ' (' → logprob: -7.257988452911377
    10. ' def' → logprob: -7.257988452911377

Token 3019: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.48243820667266846
    2. 'token' → logprob: -2.607438087463379
    3. 'two' → logprob: -2.732438087463379
    4. 'self' → logprob: -2.857438087463379
    5. 'def' → logprob: -2.857438087463379
    6. 'tokens' → logprob: -2.982438087463379
    7. 'sh' → logprob: -3.482438087463379
    8. 'a' → logprob: -4.607438087463379
    9. ' precedence' → logprob: -4.607438087463379
    10. ' two' → logprob: -4.857438087463379

Token 3020: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048873938620090485
    2. '   ' → logprob: -4.0488739013671875
    3. ':
' → logprob: -4.5488739013671875
    4. '
' → logprob: -5.1738739013671875
    5. '(tokens' → logprob: -5.4238739013671875
    6. 'tokens' → logprob: -6.1738739013671875
    7. '(self' → logprob: -6.2988739013671875
    8. ':' → logprob: -6.9238739013671875
    9. 'def' → logprob: -7.1738739013671875
    10. '_tokens' → logprob: -7.1738739013671875

Token 3021: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7573755979537964
    2. '
' → logprob: -1.0073755979537964
    3. '   ' → logprob: -1.8823755979537964
    4. 'def' → logprob: -5.132375717163086
    5. '    
' → logprob: -5.507375717163086
    6. '        
' → logprob: -6.257375717163086
    7. ' def' → logprob: -7.007375717163086
    8. '```' → logprob: -7.632375717163086
    9. '    ' → logprob: -9.882375717163086
    10. '`' → logprob: -10.132375717163086

Token 3022: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1992141157388687
    2. 'tokens' → logprob: -1.9492141008377075
    3. '#' → logprob: -3.574214220046997
    4. 'def' (adapté à ' def') → logprob: -5.074213981628418
    5. 'expr' → logprob: -6.699213981628418
    6. 'pos' → logprob: -6.824213981628418
    7. 'stack' → logprob: -7.324213981628418
    8. ' tokens' → logprob: -8.199213981628418
    9. '   ' → logprob: -8.574213981628418
    10. 'ops' → logprob: -8.574213981628418

Token 3023: ' precedence' (ID: 120000)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.020228033885359764
    2. 'token' → logprob: -4.520227909088135
    3. 'preced' → logprob: -5.145227909088135
    4. ' parse' → logprob: -6.645227909088135
    5. 'prec' → logprob: -7.020227909088135
    6. 'tokens' → logprob: -7.770227909088135
    7. ' tokenize' → logprob: -8.520228385925293
    8. ' precedence' → logprob: -8.645228385925293
    9. '_token' → logprob: -9.770228385925293
    10. '_parse' → logprob: -9.895228385925293

Token 3024: '(op' (ID: 34275)
  Prédit: '(token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(token' → logprob: -0.26400822401046753
    2. '(' → logprob: -1.8890082836151123
    3. '(op' → logprob: -3.0140082836151123
    4. '(operator' → logprob: -3.8890082836151123
    5. '(level' → logprob: -5.639008045196533
    6. '(tokens' → logprob: -6.264008045196533
    7. '(self' → logprob: -6.389008045196533
    8. ':' → logprob: -7.139008045196533
    9. '('' → logprob: -7.639008045196533
    10. '(s' → logprob: -7.764008045196533

Token 3025: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16691577434539795
    2. '):
' → logprob: -1.916915774345398
    3. ':' → logprob: -5.7919158935546875
    4. '(op' → logprob: -6.4169158935546875
    5. ')' → logprob: -6.6669158935546875
    6. '   ' → logprob: -8.291915893554688
    7. '):
' → logprob: -9.166915893554688
    8. '[' → logprob: -9.791915893554688
    9. '_op' → logprob: -9.916915893554688
    10. '_' → logprob: -9.916915893554688

Token 3026: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.017907585948705673
    2. 'op' → logprob: -4.642907619476318
    3. ')' → logprob: -6.142907619476318
    4. 'int' → logprob: -6.392907619476318
    5. ' str' → logprob: -6.392907619476318
    6. '):
' → logprob: -7.517907619476318
    7. '   ' → logprob: -7.892907619476318
    8. 'operator' → logprob: -7.892907619476318
    9. 'token' → logprob: -8.14290714263916
    10. '[str' → logprob: -8.39290714263916

Token 3027: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06343428790569305
    2. '):
' → logprob: -3.438434362411499
    3. '):' → logprob: -3.563434362411499
    4. ':' → logprob: -7.56343412399292
    5. '   ' → logprob: -7.81343412399292
    6. ')->' → logprob: -10.438434600830078
    7. ' )' → logprob: -10.563434600830078
    8. '       ' → logprob: -12.063434600830078
    9. '=' → logprob: -12.438434600830078
    10. '):
' → logprob: -12.688434600830078

Token 3028: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015158153837546706
    2. ':
' → logprob: -7.001515865325928
    3. '->' → logprob: -8.37651538848877
    4. '):' → logprob: -8.50151538848877
    5. '   ' → logprob: -9.75151538848877
    6. ')' → logprob: -9.87651538848877
    7. ' ->' → logprob: -10.37651538848877
    8. '):
' → logprob: -11.50151538848877
    9. ')->' → logprob: -12.00151538848877
    10. '       ' → logprob: -12.37651538848877

Token 3029: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004635584482457489
    2. '{' → logprob: -8.000463485717773
    3. '{
' → logprob: -9.000463485717773
    4. ' int' → logprob: -12.500463485717773
    5. '[int' → logprob: -14.875463485717773
    6. '(int' → logprob: -15.000463485717773
    7. '{'' → logprob: -15.500463485717773
    8. '{"' → logprob: -15.875463485717773
    9. '   ' → logprob: -17.000463485717773
    10. '{return' → logprob: -17.125463485717773

Token 3030: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0612260103225708
    2. ':
' → logprob: -2.9362258911132812
    3. ')' → logprob: -6.311225891113281
    4. '       ' → logprob: -6.561225891113281
    5. '   ' → logprob: -6.811225891113281
    6. '):' → logprob: -6.936225891113281
    7. '):
' → logprob: -7.811225891113281
    8. ':return' → logprob: -8.436225891113281
    9. '->' → logprob: -8.936225891113281
    10. ' ->' → logprob: -9.686225891113281

Token 3031: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2533842921257019
    2. '       ' → logprob: -1.5033843517303467
    3. '   ' → logprob: -7.753384113311768
    4. '               ' → logprob: -7.753384113311768
    5. '        ' → logprob: -8.253384590148926
    6. ':' → logprob: -9.753384590148926
    7. '          ' → logprob: -10.003384590148926
    8. ' return' → logprob: -10.253384590148926
    9. 'return' → logprob: -10.628384590148926
    10. ' ' → logprob: -10.753384590148926

Token 3032: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4327581524848938
    2. '       ' → logprob: -1.682758092880249
    3. ' if' → logprob: -2.807758092880249
    4. '   ' → logprob: -3.432758092880249
    5. ' return' → logprob: -3.682758092880249
    6. 'return' → logprob: -3.682758092880249
    7. 'if' (adapté à ' if') → logprob: -4.807758331298828
    8. ' ' → logprob: -5.432758331298828
    9. '               ' → logprob: -5.682758331298828
    10. '{
' → logprob: -6.307758331298828

Token 3033: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.1602262556552887
    2. ' op' → logprob: -1.9102262258529663
    3. '(op' → logprob: -13.535225868225098
    4. '	op' → logprob: -14.535225868225098
    5. '_op' → logprob: -16.785226821899414
    6. '
' → logprob: -17.160226821899414
    7. ' ' → logprob: -17.285226821899414
    8. '.op' → logprob: -18.035226821899414
    9. ''op' → logprob: -18.160226821899414
    10. ' ' → logprob: -18.285226821899414

Token 3034: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20136158168315887
    2. '==' → logprob: -1.8263615369796753
    3. ' in' → logprob: -3.951361656188965
    4. 'in' → logprob: -6.451361656188965
    5. '[' → logprob: -8.576361656188965
    6. ' ' → logprob: -9.076361656188965
    7. '=='' → logprob: -9.826361656188965
    8. '=' → logprob: -10.326361656188965
    9. '=="' → logprob: -10.701361656188965
    10. ' =='' → logprob: -10.951361656188965

Token 3035: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007243485888466239
    2. ''*' → logprob: -8.000724792480469
    3. '"' → logprob: -8.375724792480469
    4. ''+' → logprob: -8.875724792480469
    5. '・' → logprob: -12.000724792480469
    6. ' '' → logprob: -12.500724792480469
    7. ''m' → logprob: -13.750724792480469
    8. ''\' → logprob: -14.000724792480469
    9. ''M' → logprob: -14.000724792480469
    10. ''s' → logprob: -14.375724792480469

Token 3036: '・' (ID: 4156)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1131899505853653
    2. '・' → logprob: -2.238189935684204
    3. '"' → logprob: -8.488189697265625
    4. ''*' → logprob: -9.113189697265625
    5. ' '' → logprob: -10.488189697265625
    6. '`' → logprob: -11.863189697265625
    7. ''.' → logprob: -13.113189697265625
    8. ''+' → logprob: -13.113189697265625
    9. ''\' → logprob: -13.238189697265625
    10. '*' → logprob: -13.363189697265625

Token 3037: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.2550892233848572
    2. '':' → logprob: -1.505089282989502
    3. ''' → logprob: -6.380089282989502
    4. ''):
' → logprob: -7.130089282989502
    5. ' '' → logprob: -8.130088806152344
    6. '':
' → logprob: -8.255088806152344
    7. '       ' → logprob: -11.130088806152344
    8. 'return' → logprob: -11.255088806152344
    9. ''):' → logprob: -11.505088806152344
    10. ' ':' → logprob: -11.630088806152344

Token 3038: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018035095185041428
    2. ':
' → logprob: -4.893034934997559
    3. ':' → logprob: -5.393034934997559
    4. 'return' → logprob: -5.893034934997559
    5. ':return' → logprob: -6.893034934997559
    6. '           ' → logprob: -6.893034934997559
    7. ' return' → logprob: -7.518034934997559
    8. '1' → logprob: -8.643034934997559
    9. '2' → logprob: -9.268034934997559
    10. ' or' → logprob: -9.893034934997559

Token 3039: ' return' (ID: 622)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06225201115012169
    2. '2' → logprob: -2.8122520446777344
    3. '           ' → logprob: -8.937252044677734
    4. ' ' → logprob: -9.312252044677734
    5. '               ' → logprob: -10.312252044677734
    6. 'return' (adapté à ' return') → logprob: -11.062252044677734
    7. '4' → logprob: -12.187252044677734
    8. '   ' → logprob: -12.437252044677734
    9. '                   ' → logprob: -13.187252044677734
    10. '       ' → logprob: -13.437252044677734

Token 3040: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005241583567112684
    2. '3' → logprob: -5.255241394042969
    3. ' ' → logprob: -12.255241394042969
    4. '   ' → logprob: -12.755241394042969
    5. '1' → logprob: -16.63024139404297
    6. '       ' → logprob: -16.88024139404297
    7. '  ' → logprob: -17.38024139404297
    8. '           ' → logprob: -18.38024139404297
    9. '10' → logprob: -18.38024139404297
    10. '    ' → logprob: -18.63024139404297

Token 3041: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04858816787600517
    2. '3' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.048587799072266
    4. '   ' → logprob: -17.173587799072266
    5. '20' → logprob: -18.048587799072266
    6. '10' → logprob: -18.423587799072266
    7. ''' → logprob: -18.423587799072266
    8. '"' → logprob: -19.673587799072266
    9. '30' → logprob: -19.673587799072266
    10. '  ' → logprob: -19.923587799072266

Token 3042: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020813820883631706
    2. '
' → logprob: -6.627081394195557
    3. 'elif' → logprob: -7.627081394195557
    4. '		' → logprob: -9.252080917358398
    5. '       ' → logprob: -9.377080917358398
    6. ' elif' → logprob: -10.502080917358398
    7. '   ' → logprob: -11.252080917358398
    8. '          ' → logprob: -11.752080917358398
    9. '               ' → logprob: -11.877080917358398
    10. '         ' → logprob: -12.627080917358398

Token 3043: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.231182826217264e-05
    2. 'elif' → logprob: -10.375072479248047
    3. '       ' → logprob: -11.125072479248047
    4. '
' → logprob: -11.625072479248047
    5. ' elif' → logprob: -12.125072479248047
    6. '          ' → logprob: -12.375072479248047
    7. '		' → logprob: -12.750072479248047
    8. ' if' → logprob: -13.750072479248047
    9. '            ' → logprob: -14.125072479248047
    10. '               ' → logprob: -14.125072479248047

Token 3044: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015751613304018974
    2. 'elif' (adapté à ' elif') → logprob: -4.265751838684082
    3. 'if' → logprob: -6.515751838684082
    4. ' elif' → logprob: -9.640751838684082
    5. ' if' → logprob: -10.515751838684082
    6. '       ' → logprob: -11.890751838684082
    7. '
' → logprob: -12.140751838684082
    8. '          ' → logprob: -14.140751838684082
    9. '               ' → logprob: -14.390751838684082
    10. '		' → logprob: -14.640751838684082

Token 3045: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.2014257162809372
    2. ' op' → logprob: -1.7014256715774536
    3. '(op' → logprob: -11.326425552368164
    4. '           ' → logprob: -15.451425552368164
    5. '	op' → logprob: -16.576425552368164
    6. ''op' → logprob: -17.826425552368164
    7. '            ' → logprob: -17.951425552368164
    8. '.op' → logprob: -18.451425552368164
    9. '               ' → logprob: -18.451425552368164
    10. '_op' → logprob: -18.576425552368164

Token 3046: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07903464883565903
    2. '==' → logprob: -2.5790345668792725
    3. ' in' → logprob: -9.454034805297852
    4. '=='' → logprob: -9.954034805297852
    5. 'in' → logprob: -11.454034805297852
    6. ' =='' → logprob: -12.204034805297852
    7. ' ' → logprob: -14.329034805297852
    8. '=="' → logprob: -14.454034805297852
    9. '==
' → logprob: -14.954034805297852
    10. '===' → logprob: -15.079034805297852

Token 3047: ' '+'' (ID: 137356)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.3546055257320404
    2. ''' → logprob: -1.2296055555343628
    3. ' '+'' → logprob: -5.229605674743652
    4. ' '+' → logprob: -7.604605674743652
    5. '('+' → logprob: -9.354605674743652
    6. ''-' → logprob: -9.604605674743652
    7. '"+"' → logprob: -9.854605674743652
    8. ''>' → logprob: -10.479605674743652
    9. '+' → logprob: -11.104605674743652
    10. ''*' → logprob: -11.979605674743652

Token 3048: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8255743384361267
    2. ':
' → logprob: -1.2005743980407715
    3. ' or' → logprob: -2.3255743980407715
    4. '           ' → logprob: -2.3255743980407715
    5. '<|end|>' → logprob: -3.4505743980407715
    6. '               ' → logprob: -4.0755743980407715
    7. '       ' → logprob: -5.9505743980407715
    8. '            ' → logprob: -6.2005743980407715
    9. 'or' → logprob: -6.2005743980407715
    10. '==' → logprob: -6.4505743980407715

Token 3049: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.38687393069267273
    2. ' op' → logprob: -1.1368739604949951
    3. '(op' → logprob: -12.886874198913574
    4. '	op' → logprob: -14.636874198913574
    5. '_op' → logprob: -18.886873245239258
    6. '.op' → logprob: -19.261873245239258
    7. 'opf' → logprob: -19.261873245239258
    8. 'opc' → logprob: -19.511873245239258
    9. 'os' → logprob: -19.636873245239258
    10. ' ' → logprob: -19.886873245239258

Token 3050: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10042006522417068
    2. '==' → logprob: -2.3504199981689453
    3. '=='' → logprob: -8.725419998168945
    4. ' =='' → logprob: -10.975419998168945
    5. '=' → logprob: -11.600419998168945
    6. ''' → logprob: -12.725419998168945
    7. ' ' → logprob: -12.725419998168945
    8. '[' → logprob: -12.975419998168945
    9. '==-' → logprob: -12.975419998168945
    10. ' ' → logprob: -13.100419998168945

Token 3051: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.0004982246900908649
    2. ''' → logprob: -8.500497817993164
    3. ' '-' → logprob: -8.625497817993164
    4. ' '-'' → logprob: -9.750497817993164
    5. ''>' → logprob: -11.375497817993164
    6. '-' → logprob: -11.500497817993164
    7. '   ' → logprob: -12.000497817993164
    8. ' '-')' → logprob: -12.000497817993164
    9. ' ' → logprob: -12.250497817993164
    10. '"-' → logprob: -12.500497817993164

Token 3052: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.36545330286026
    2. '               ' → logprob: -1.7404532432556152
    3. '           ' → logprob: -3.2404532432556152
    4. '':' → logprob: -3.4904532432556152
    5. ''' → logprob: -3.9904532432556152
    6. ' '' → logprob: -3.9904532432556152
    7. ':
' → logprob: -4.740453243255615
    8. ':' → logprob: -5.115453243255615
    9. ''):
' → logprob: -6.490453243255615
    10. '              ' → logprob: -6.740453243255615

Token 3053: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023187821730971336
    2. '           ' → logprob: -4.273187637329102
    3. ':' → logprob: -5.273187637329102
    4. ':
' → logprob: -5.898187637329102
    5. '              ' → logprob: -8.273187637329102
    6. 'return' → logprob: -8.773187637329102
    7. ':return' → logprob: -8.898187637329102
    8. ' return' → logprob: -9.148187637329102
    9. '	           ' → logprob: -9.898187637329102
    10. '1' → logprob: -9.898187637329102

Token 3054: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01730099506676197
    2. ' return' → logprob: -4.267301082611084
    3. '1' → logprob: -6.517301082611084
    4. '               ' → logprob: -6.642301082611084
    5. '2' → logprob: -8.267300605773926
    6. '           ' → logprob: -9.892300605773926
    7. ':return' → logprob: -10.892300605773926
    8. ' ' → logprob: -11.892300605773926
    9. '                   ' → logprob: -11.892300605773926
    10. '3' → logprob: -12.892300605773926

Token 3055: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.75
    4. '           ' → logprob: -19.0
    5. '       ' → logprob: -20.25
    6. '`' → logprob: -20.5
    7. '               ' → logprob: -20.625
    8. '
' → logprob: -20.875
    9. '  ' → logprob: -21.375
    10. '    ' → logprob: -21.375

Token 3056: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '   ' → logprob: -18.875
    4. '
' → logprob: -20.3125
    5. '0' → logprob: -20.6875
    6. '```' → logprob: -20.9375
    7. '`' → logprob: -21.0
    8. '１' → logprob: -21.625
    9. '۱' → logprob: -21.625
    10. '2' → logprob: -22.25

Token 3057: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020377879263833165
    2. '       ' → logprob: -9.875204086303711
    3. '		' → logprob: -10.125204086303711
    4. '	       ' → logprob: -10.375204086303711
    5. 'return' → logprob: -11.125204086303711
    6. '          ' → logprob: -11.250204086303711
    7. '<|end|>' → logprob: -12.000204086303711
    8. '               ' → logprob: -12.125204086303711
    9. '<|end|>' → logprob: -12.125204086303711
    10. '
' → logprob: -12.500204086303711

Token 3058: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001214237418025732
    2. '       ' → logprob: -9.750121116638184
    3. '               ' → logprob: -10.625121116638184
    4. '		' → logprob: -11.500121116638184
    5. '
' → logprob: -11.875121116638184
    6. 'return' → logprob: -12.375121116638184
    7. 'elif' → logprob: -12.375121116638184
    8. '          ' → logprob: -12.750121116638184
    9. '	       ' → logprob: -13.375121116638184
    10. 'else' → logprob: -13.500121116638184

Token 3059: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006526130251586437
    2. 'else' (adapté à ' else') → logprob: -5.256525993347168
    3. ' else' → logprob: -7.256525993347168
    4. 'return' → logprob: -7.881525993347168
    5. '       ' → logprob: -9.381525993347168
    6. '               ' → logprob: -9.756525993347168
    7. '
' → logprob: -11.381525993347168
    8. 'elif' → logprob: -11.381525993347168
    9. ' return' → logprob: -11.506525993347168
    10. '		' → logprob: -11.756525993347168

Token 3060: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9932421445846558
    2. ':' → logprob: -1.4932421445846558
    3. ':
' → logprob: -1.6182421445846558
    4. '           ' → logprob: -1.6182421445846558
    5. ',' → logprob: -6.743242263793945
    6. ' return' → logprob: -6.743242263793945
    7. ':return' → logprob: -6.743242263793945
    8. 'return' → logprob: -7.243242263793945
    9. ' if' → logprob: -7.368242263793945
    10. '            ' → logprob: -7.368242263793945

Token 3061: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1385318636894226
    2. '           ' → logprob: -2.5135319232940674
    3. ' return' → logprob: -3.8885319232940674
    4. '0' → logprob: -3.8885319232940674
    5. 'return' → logprob: -5.138531684875488
    6. ' None' → logprob: -7.513531684875488
    7. ':
' → logprob: -8.513531684875488
    8. ' ' → logprob: -8.763531684875488
    9. 'None' → logprob: -9.138531684875488
    10. '            ' → logprob: -9.138531684875488

Token 3062: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3139479458332062
    2. 'return' (adapté à ' return') → logprob: -1.3139479160308838
    3. '               ' → logprob: -7.813948154449463
    4. ' return' → logprob: -8.563947677612305
    5. '           ' → logprob: -10.313947677612305
    6. '                   ' → logprob: -10.813947677612305
    7. '-' → logprob: -10.938947677612305
    8. ' ' → logprob: -11.313947677612305
    9. 'raise' → logprob: -12.313947677612305
    10. '   ' → logprob: -14.938947677612305

Token 3063: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045045334263704717
    2. '-' → logprob: -7.750450611114502
    3. ' ' → logprob: -11.000450134277344
    4. ' -' → logprob: -12.875450134277344
    5. '   ' → logprob: -15.500450134277344
    6. 'float' → logprob: -15.875450134277344
    7. '           ' → logprob: -16.875450134277344
    8. '       ' → logprob: -17.625450134277344
    9. '               ' → logprob: -18.125450134277344
    10. '  ' → logprob: -18.375450134277344

Token 3064: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008096250821836293
    2. '-' → logprob: -7.125809669494629
    3. ' ' → logprob: -12.625809669494629
    4. ' -' → logprob: -13.250809669494629
    5. '   ' → logprob: -17.000808715820312
    6. '999' → logprob: -17.375808715820312
    7. 'float' → logprob: -17.625808715820312
    8. '  ' → logprob: -18.750808715820312
    9. '100' → logprob: -19.250808715820312
    10. '99' → logprob: -19.500808715820312

Token 3065: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04186360538005829
    2. '
' → logprob: -3.6668636798858643
    3. ')' → logprob: -5.791863441467285
    4. '<|end|>' → logprob: -5.916863441467285
    5. '        ' → logprob: -6.666863441467285
    6. '           ' → logprob: -7.041863441467285
    7. '    ' → logprob: -7.166863441467285
    8. '      ' → logprob: -7.166863441467285
    9. '   ' → logprob: -7.291863441467285
    10. '        
' → logprob: -7.291863441467285

Token 3066: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11995024979114532
    2. '
' → logprob: -2.244950294494629
    3. '        
' → logprob: -5.369950294494629
    4. '    
' → logprob: -7.119950294494629
    5. '   ' → logprob: -7.494950294494629
    6. ' 
' → logprob: -8.494950294494629
    7. '    ' → logprob: -8.869950294494629
    8. '        ' → logprob: -9.369950294494629
    9. '  
' → logprob: -9.369950294494629
    10. '           ' → logprob: -9.619950294494629

Token 3067: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4139324724674225
    2. 'def' (adapté à ' def') → logprob: -1.1639324426651
    3. ' def' → logprob: -3.9139325618743896
    4. 'stack' → logprob: -6.1639323234558105
    5. '
' → logprob: -6.5389323234558105
    6. 'tokens' → logprob: -6.6639323234558105
    7. '   ' → logprob: -6.9139323234558105
    8. 'ops' → logprob: -8.413932800292969
    9. 'result' → logprob: -9.288932800292969
    10. '#' → logprob: -9.288932800292969

Token 3068: ' apply' (ID: 6096)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.00749233877286315
    2. 'sh' → logprob: -5.007492542266846
    3. ' apply' → logprob: -7.882492542266846
    4. 'parse' → logprob: -8.132492065429688
    5. '_apply' → logprob: -10.507492065429688
    6. 'eval' → logprob: -11.382492065429688
    7. 'token' → logprob: -11.382492065429688
    8. 'evaluate' → logprob: -11.507492065429688
    9. 'to' → logprob: -11.882492065429688
    10. '   ' → logprob: -11.882492065429688

Token 3069: '_op' (ID: 20111)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.9698172211647034
    2. '_operator' → logprob: -1.2198171615600586
    3. '_op' → logprob: -1.4698171615600586
    4. '(' → logprob: -2.5948171615600586
    5. '(operator' → logprob: -4.219817161560059
    6. '_operation' → logprob: -6.219817161560059
    7. '_' → logprob: -6.719817161560059
    8. 'operator' → logprob: -7.219817161560059
    9. 'op' → logprob: -7.344817161560059
    10. '_operand' → logprob: -7.719817161560059

Token 3070: '(a' (ID: 6271)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.23380936682224274
    2. '(operator' → logprob: -2.108809471130371
    3. '(' → logprob: -2.483809471130371
    4. ' (' → logprob: -5.733809471130371
    5. '(self' → logprob: -9.483809471130371
    6. '(operation' → logprob: -9.608809471130371
    7. '_' → logprob: -10.108809471130371
    8. '(token' → logprob: -10.233809471130371
    9. '(
' → logprob: -10.483809471130371
    10. '(tokens' → logprob: -10.608809471130371

Token 3071: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002299301093444228
    2. ' ,' → logprob: -6.1272993087768555
    3. ':' → logprob: -9.252299308776855
    4. ',b' → logprob: -11.377299308776855
    5. ',int' → logprob: -13.377299308776855
    6. ',
' → logprob: -13.752299308776855
    7. '   ' → logprob: -13.877299308776855
    8. '       ' → logprob: -14.377299308776855
    9. ' ' → logprob: -14.752299308776855
    10. ':int' → logprob: -15.002299308776855

Token 3072: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0026630505453795195
    2. ' int' → logprob: -6.0026631355285645
    3. ',' → logprob: -9.252662658691406
    4. '   ' → logprob: -11.002662658691406
    5. 'str' → logprob: -11.002662658691406
    6. ':int' → logprob: -11.002662658691406
    7. '[int' → logprob: -11.127662658691406
    8. ',int' → logprob: -11.877662658691406
    9. ')' → logprob: -12.252662658691406
    10. '(int' → logprob: -12.502662658691406

Token 3073: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005362413823604584
    2. ' ,' → logprob: -5.255362510681152
    3. ',b' → logprob: -9.005362510681152
    4. ',
' → logprob: -12.380362510681152
    5. ' ' → logprob: -14.755362510681152
    6. ',int' → logprob: -15.505362510681152
    7. ',p' → logprob: -15.505362510681152
    8. '   ' → logprob: -15.505362510681152
    9. 'b' → logprob: -16.255361557006836
    10. 'op' → logprob: -16.380361557006836

Token 3074: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03667466342449188
    2. ' b' → logprob: -3.911674737930298
    3. 'op' → logprob: -4.161674499511719
    4. ''' → logprob: -8.786674499511719
    5. ' op' → logprob: -8.786674499511719
    6. ''b' → logprob: -9.286674499511719
    7. ''op' → logprob: -11.786674499511719
    8. ' '' → logprob: -11.786674499511719
    9. ' ' → logprob: -12.161674499511719
    10. 'ops' → logprob: -14.911674499511719

Token 3075: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08924926817417145
    2. ':' → logprob: -2.4642493724823
    3. ' ,' → logprob: -8.839249610900879
    4. ')' → logprob: -10.214249610900879
    5. '<|end|>' → logprob: -10.214249610900879
    6. ' :' → logprob: -10.464249610900879
    7. ':int' → logprob: -11.089249610900879
    8. '):' → logprob: -11.214249610900879
    9. ':str' → logprob: -11.214249610900879
    10. '):
' → logprob: -12.339249610900879

Token 3076: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.062032103538513184
    2. ' int' → logprob: -2.8120322227478027
    3. ')' → logprob: -10.937031745910645
    4. ' str' → logprob: -11.062031745910645
    5. 'str' → logprob: -11.187031745910645
    6. ''' → logprob: -11.437031745910645
    7. ''int' → logprob: -12.812031745910645
    8. ' '' → logprob: -13.687031745910645
    9. ' ' → logprob: -14.062031745910645
    10. ':int' → logprob: -14.312031745910645

Token 3077: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010201065801084042
    2. ' ,' → logprob: -4.6352009773254395
    3. ':' → logprob: -8.385201454162598
    4. ')' → logprob: -9.385201454162598
    5. ',
' → logprob: -10.135201454162598
    6. '):' → logprob: -10.260201454162598
    7. ' ' → logprob: -10.760201454162598
    8. '):
' → logprob: -11.510201454162598
    9. '   ' → logprob: -11.885201454162598
    10. ' :' → logprob: -12.760201454162598

Token 3078: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.018151231110095978
    2. ' op' → logprob: -4.01815128326416
    3. '	op' → logprob: -14.01815128326416
    4. ')' → logprob: -15.51815128326416
    5. 'operator' → logprob: -15.64315128326416
    6. 'opr' → logprob: -16.643150329589844
    7. '(op' → logprob: -17.143150329589844
    8. '_op' → logprob: -17.268150329589844
    9. ' ' → logprob: -17.893150329589844
    10. '   ' → logprob: -18.018150329589844

Token 3079: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000505730917211622
    2. ':str' → logprob: -8.375505447387695
    3. '):' → logprob: -8.875505447387695
    4. ' :' → logprob: -9.875505447387695
    5. '):
' → logprob: -10.250505447387695
    6. ')' → logprob: -10.500505447387695
    7. '   ' → logprob: -11.000505447387695
    8. ',' → logprob: -14.000505447387695
    9. '       ' → logprob: -14.250505447387695
    10. ' op' → logprob: -14.500505447387695

Token 3080: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.026203572750091553
    2. ' str' → logprob: -4.401203632354736
    3. 'op' → logprob: -4.651203632354736
    4. ')' → logprob: -6.026203632354736
    5. ''' → logprob: -6.901203632354736
    6. '')' → logprob: -8.401203155517578
    7. ''op' → logprob: -8.901203155517578
    8. ' op' → logprob: -9.651203155517578
    9. '   ' → logprob: -9.776203155517578
    10. '):' → logprob: -9.901203155517578

Token 3081: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016061515780165792
    2. '):' → logprob: -7.001605987548828
    3. '):
' → logprob: -7.376605987548828
    4. ' )' → logprob: -9.876605987548828
    5. ':' → logprob: -11.376605987548828
    6. ')->' → logprob: -13.126605987548828
    7. '   ' → logprob: -13.501605987548828
    8. '       ' → logprob: -14.126605987548828
    9. '):
' → logprob: -14.626605987548828
    10. '')' → logprob: -15.251605987548828

Token 3082: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025057552382349968
    2. ':
' → logprob: -3.775057554244995
    3. ')' → logprob: -7.275057315826416
    4. ' ->' → logprob: -8.025057792663574
    5. '       ' → logprob: -8.150057792663574
    6. '):
' → logprob: -9.275057792663574
    7. '->' → logprob: -9.400057792663574
    8. '   ' → logprob: -9.400057792663574
    9. '):' → logprob: -9.775057792663574
    10. ':return' → logprob: -10.275057792663574

Token 3083: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16024483740329742
    2. ' int' → logprob: -1.9102448225021362
    3. ' ' → logprob: -11.035244941711426
    4. '   ' → logprob: -13.285244941711426
    5. '  ' → logprob: -13.910244941711426
    6. '(int' → logprob: -14.035244941711426
    7. '	int' → logprob: -14.660244941711426
    8. ':int' → logprob: -15.160244941711426
    9. ')' → logprob: -15.910244941711426
    10. '[int' → logprob: -16.28524398803711

Token 3084: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6825472712516785
    2. ':' → logprob: -0.8075472712516785
    3. '       ' → logprob: -3.1825473308563232
    4. '):
' → logprob: -5.182547092437744
    5. ')' → logprob: -7.307547092437744
    6. '           ' → logprob: -8.057547569274902
    7. '):' → logprob: -8.182547569274902
    8. '   ' → logprob: -8.932547569274902
    9. ':return' → logprob: -10.057547569274902
    10. '        ' → logprob: -10.182547569274902

Token 3085: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046451209345832467
    2. '           ' → logprob: -8.37546443939209
    3. ':' → logprob: -9.87546443939209
    4. '               ' → logprob: -10.12546443939209
    5. '   ' → logprob: -10.50046443939209
    6. ' if' → logprob: -10.62546443939209
    7. '                               ' → logprob: -11.00046443939209
    8. '        ' → logprob: -11.00046443939209
    9. '                       ' → logprob: -11.00046443939209
    10. '      ' → logprob: -12.00046443939209

Token 3086: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.725624144077301
    2. 'if' (adapté à ' if') → logprob: -0.975624144077301
    3. ' if' → logprob: -1.9756240844726562
    4. '           ' → logprob: -8.225624084472656
    5. '   ' → logprob: -10.600624084472656
    6. '               ' → logprob: -11.100624084472656
    7. '        ' → logprob: -11.100624084472656
    8. 'return' → logprob: -12.100624084472656
    9. '	if' → logprob: -12.225624084472656
    10. '      ' → logprob: -12.475624084472656

Token 3087: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.47408145666122437
    2. ' op' → logprob: -0.9740814566612244
    3. '(op' → logprob: -12.849081039428711
    4. '	op' → logprob: -13.974081039428711
    5. '           ' → logprob: -14.974081039428711
    6. 'o' → logprob: -15.974081039428711
    7. '_op' → logprob: -16.72408103942871
    8. ''op' → logprob: -16.84908103942871
    9. ' ' → logprob: -16.97408103942871
    10. '.op' → logprob: -16.97408103942871

Token 3088: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03837377578020096
    2. '==' → logprob: -3.2883737087249756
    3. '=' → logprob: -8.913373947143555
    4. '=='' → logprob: -10.038373947143555
    5. '[' → logprob: -10.538373947143555
    6. ' =='' → logprob: -10.538373947143555
    7. ' =' → logprob: -10.663373947143555
    8. ' ' → logprob: -10.788373947143555
    9. 'space' → logprob: -11.163373947143555
    10. ' in' → logprob: -11.788373947143555

Token 3089: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6935228705406189
    2. ''+' → logprob: -0.6935228705406189
    3. ''*' → logprob: -8.318522453308105
    4. '+' → logprob: -9.818522453308105
    5. '"+"' → logprob: -10.443522453308105
    6. ''-' → logprob: -11.068522453308105
    7. ' '+'' → logprob: -11.068522453308105
    8. '"+' → logprob: -11.818522453308105
    9. '"' → logprob: -12.818522453308105
    10. ' '+' → logprob: -13.193522453308105

Token 3090: '':
' (ID: 7669)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.1475447416305542
    2. '':' → logprob: -2.2725448608398438
    3. '':
' → logprob: -3.8975448608398438
    4. ''' → logprob: -4.772544860839844
    5. ' ':' → logprob: -6.022544860839844
    6. ''):
' → logprob: -6.272544860839844
    7. ''):' → logprob: -7.897544860839844
    8. '+' → logprob: -8.022544860839844
    9. ' +' → logprob: -8.897544860839844
    10. ' '+' → logprob: -9.522544860839844

Token 3091: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007936051115393639
    2. ' return' → logprob: -5.007936000823975
    3. '           ' → logprob: -8.007936477661133
    4. '            ' → logprob: -8.132936477661133
    5. ':' → logprob: -9.132936477661133
    6. 'return' → logprob: -9.257936477661133
    7. '                ' → logprob: -9.507936477661133
    8. '                   ' → logprob: -9.507936477661133
    9. ' ' → logprob: -9.757936477661133
    10. '                       ' → logprob: -10.382936477661133

Token 3092: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5581932663917542
    2. 'return' (adapté à ' return') → logprob: -1.5581932067871094
    3. 'a' → logprob: -1.8081932067871094
    4. ' a' → logprob: -2.9331932067871094
    5. '           ' → logprob: -11.05819320678711
    6. '               ' → logprob: -11.30819320678711
    7. '   ' → logprob: -11.55819320678711
    8. '    ' → logprob: -12.18319320678711
    9. ' ' → logprob: -12.30819320678711
    10. 'eturn' → logprob: -12.43319320678711

Token 3093: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031777136027812958
    2. ' a' → logprob: -5.753177642822266
    3. '	a' → logprob: -16.878177642822266
    4. '(a' → logprob: -18.128177642822266
    5. '   ' → logprob: -18.253177642822266
    6. ' ' → logprob: -19.378177642822266
    7. '_a' → logprob: -20.253177642822266
    8. ''a' → logprob: -20.753177642822266
    9. ')a' → logprob: -21.065677642822266
    10. 'а' → logprob: -21.315677642822266

Token 3094: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31347858905792236
    2. '+' → logprob: -1.3134785890579224
    3. '+b' → logprob: -8.438478469848633
    4. '+B' → logprob: -15.688478469848633
    5. ' ' → logprob: -15.813478469848633
    6. '+a' → logprob: -16.938478469848633
    7. ' +
' → logprob: -18.188478469848633
    8. '+
' → logprob: -18.188478469848633
    9. ' b' → logprob: -19.313478469848633
    10. ' plus' → logprob: -19.438478469848633

Token 3095: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25192907452583313
    2. ' b' → logprob: -1.5019290447235107
    3. ' ' → logprob: -18.001928329467773
    4. '	b' → logprob: -18.001928329467773
    5. ')b' → logprob: -20.751928329467773
    6. ' б' → logprob: -21.626928329467773
    7. ''b' → logprob: -22.001928329467773
    8. '_b' → logprob: -22.126928329467773
    9. '   ' → logprob: -22.501928329467773
    10. ' ' → logprob: -22.626928329467773

Token 3096: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35041743516921997
    2. '<|end|>' → logprob: -1.3504173755645752
    3. 'elif' → logprob: -4.975417613983154
    4. '       ' → logprob: -4.975417613983154
    5. '
' → logprob: -5.225417613983154
    6. ' elif' → logprob: -5.600417613983154
    7. '               ' → logprob: -5.850417613983154
    8. '<|end|>' → logprob: -6.225417613983154
    9. '            
' → logprob: -6.350417613983154
    10. ' 
' → logprob: -6.475417613983154

Token 3097: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013790446100756526
    2. ' elif' → logprob: -7.376379013061523
    3. 'elif' → logprob: -8.626379013061523
    4. ' 
' → logprob: -8.876379013061523
    5. '       ' → logprob: -9.001379013061523
    6. ' else' → logprob: -10.001379013061523
    7. '
' → logprob: -10.126379013061523
    8. '            
' → logprob: -10.376379013061523
    9. '               ' → logprob: -10.501379013061523
    10. '<|end|>' → logprob: -10.626379013061523

Token 3098: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7166543006896973
    2. 'elif' (adapté à ' elif') → logprob: -0.7166543006896973
    3. ' elif' → logprob: -3.8416543006896973
    4. '               ' → logprob: -7.216654300689697
    5. '       ' → logprob: -7.466654300689697
    6. 'if' → logprob: -8.466653823852539
    7. ' if' → logprob: -9.716653823852539
    8. '            ' → logprob: -9.966653823852539
    9. 'else' → logprob: -10.466653823852539
    10. '
' → logprob: -10.716653823852539

Token 3099: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5856890082359314
    2. ' op' → logprob: -1.0856890678405762
    3. ''-' → logprob: -2.585689067840576
    4. ''' → logprob: -3.835689067840576
    5. ''op' → logprob: -5.210689067840576
    6. ' '-'' → logprob: -6.835689067840576
    7. '-' → logprob: -7.335689067840576
    8. ' '-' → logprob: -7.460689067840576
    9. '           ' → logprob: -8.335688591003418
    10. '               ' → logprob: -8.335688591003418

Token 3100: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01419324241578579
    2. '==' → logprob: -4.264193058013916
    3. '           ' → logprob: -12.014193534851074
    4. ' ' → logprob: -12.264193534851074
    5. '=' → logprob: -12.639193534851074
    6. '=='' → logprob: -12.764193534851074
    7. '-' → logprob: -13.264193534851074
    8. ' -' → logprob: -13.264193534851074
    9. ' ==
' → logprob: -13.514193534851074
    10. '[' → logprob: -13.889193534851074

Token 3101: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.15167230367660522
    2. ''' → logprob: -2.40167236328125
    3. '-' → logprob: -3.02667236328125
    4. ' ' → logprob: -7.40167236328125
    5. ' '-' → logprob: -7.77667236328125
    6. ''*' → logprob: -8.40167236328125
    7. ' '' → logprob: -8.77667236328125
    8. ' -' → logprob: -9.77667236328125
    9. '*' → logprob: -9.77667236328125
    10. ' '-'' → logprob: -10.27667236328125

Token 3102: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35083478689193726
    2. ':
' → logprob: -2.225834846496582
    3. '           ' → logprob: -2.725834846496582
    4. '<|end|>' → logprob: -2.975834846496582
    5. ':' → logprob: -3.600834846496582
    6. '             ' → logprob: -4.850834846496582
    7. '            ' → logprob: -4.850834846496582
    8. '<|end|>' → logprob: -5.225834846496582
    9. '              ' → logprob: -5.475834846496582
    10. '):
' → logprob: -5.725834846496582

Token 3103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028129592537879944
    2. ' return' → logprob: -6.37781286239624
    3. 'return' → logprob: -6.87781286239624
    4. ':return' → logprob: -10.502813339233398
    5. '           ' → logprob: -10.877813339233398
    6. ':' → logprob: -11.502813339233398
    7. '   ' → logprob: -12.252813339233398
    8. ':
' → logprob: -12.502813339233398
    9. '              ' → logprob: -12.627813339233398
    10. '                   ' → logprob: -12.752813339233398

Token 3104: ' return' (ID: 622)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5694053173065186
    2. 'a' → logprob: -1.3194053173065186
    3. ' b' → logprob: -2.3194053173065186
    4. 'return' (adapté à ' return') → logprob: -3.3194053173065186
    5. ' a' → logprob: -3.8194053173065186
    6. ' return' → logprob: -4.569405555725098
    7. '   ' → logprob: -10.944405555725098
    8. '           ' → logprob: -11.819405555725098
    9. '               ' → logprob: -12.694405555725098
    10. ' ' → logprob: -13.444405555725098

Token 3105: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015023599844425917
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -17.376502990722656
    4. '(a' → logprob: -17.751502990722656
    5. '   ' → logprob: -19.001502990722656
    6. '           ' → logprob: -19.126502990722656
    7. ' ' → logprob: -21.126502990722656
    8. '               ' → logprob: -21.251502990722656
    9. ''a' → logprob: -21.376502990722656
    10. '
' → logprob: -21.626502990722656

Token 3106: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.017163077369332314
    2. '-' → logprob: -4.392163276672363
    3. ' +' → logprob: -5.892163276672363
    4. '+' → logprob: -6.517163276672363
    5. ' ' → logprob: -9.517163276672363
    6. '           ' → logprob: -9.517163276672363
    7. '-b' → logprob: -9.642163276672363
    8. ' *' → logprob: -9.767163276672363
    9. 'b' → logprob: -11.017163276672363
    10. '        ' → logprob: -11.142163276672363

Token 3107: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047814972698689
    2. ' b' → logprob: -4.511047840118408
    3. '	b' → logprob: -17.88604736328125
    4. '   ' → logprob: -18.63604736328125
    5. '           ' → logprob: -18.63604736328125
    6. '       ' → logprob: -19.13604736328125
    7. ' ' → logprob: -20.63604736328125
    8. ')b' → logprob: -21.01104736328125
    9. '               ' → logprob: -21.63604736328125
    10. '    ' → logprob: -21.76104736328125

Token 3108: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000111768240458332
    2. 'elif' → logprob: -9.25011157989502
    3. ' elif' → logprob: -12.00011157989502
    4. '       ' → logprob: -12.37511157989502
    5. '		' → logprob: -12.75011157989502
    6. '               ' → logprob: -13.87511157989502
    7. '	       ' → logprob: -15.12511157989502
    8. '          ' → logprob: -15.12511157989502
    9. '	elif' → logprob: -15.25011157989502
    10. '   ' → logprob: -16.125112533569336

Token 3109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040815072134137154
    2. 'elif' → logprob: -8.000408172607422
    3. '               ' → logprob: -10.375408172607422
    4. '       ' → logprob: -10.875408172607422
    5. ' elif' → logprob: -11.500408172607422
    6. '		' → logprob: -12.125408172607422
    7. 'else' → logprob: -13.500408172607422
    8. '          ' → logprob: -13.625408172607422
    9. '   ' → logprob: -14.375408172607422
    10. 'return' → logprob: -14.375408172607422

Token 3110: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014400302432477474
    2. 'elif' (adapté à ' elif') → logprob: -4.264400482177734
    3. ' elif' → logprob: -8.639400482177734
    4. '		' → logprob: -10.889400482177734
    5. 'else' → logprob: -11.139400482177734
    6. '       ' → logprob: -11.139400482177734
    7. '	elif' → logprob: -13.014400482177734
    8. '               ' → logprob: -13.014400482177734
    9. '   ' → logprob: -13.389400482177734
    10. 'return' → logprob: -13.389400482177734

Token 3111: ' op' (ID: 991)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2522541880607605
    2. ' '' → logprob: -1.5022542476654053
    3. '           ' → logprob: -8.502254486083984
    4. '            ' → logprob: -10.252254486083984
    5. '"' → logprob: -10.877254486083984
    6. '               ' → logprob: -11.002254486083984
    7. ' ' → logprob: -11.252254486083984
    8. '             ' → logprob: -12.377254486083984
    9. '       ' → logprob: -12.502254486083984
    10. '   ' → logprob: -12.502254486083984

Token 3112: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.058144208043813705
    2. '==' → logprob: -2.9331440925598145
    3. '=='' → logprob: -6.4331440925598145
    4. ''' → logprob: -6.8081440925598145
    5. ' '' → logprob: -8.058144569396973
    6. ' =='' → logprob: -9.558144569396973
    7. '           ' → logprob: -10.058144569396973
    8. '        ' → logprob: -10.808144569396973
    9. ' ' → logprob: -11.058144569396973
    10. '[' → logprob: -11.183144569396973

Token 3113: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0014899849193170667
    2. ' '' → logprob: -7.126490116119385
    3. ''*' → logprob: -7.376490116119385
    4. '"' → logprob: -10.626489639282227
    5. '・' → logprob: -11.626489639282227
    6. '       ' → logprob: -12.126489639282227
    7. '`' → logprob: -12.376489639282227
    8. ' ' → logprob: -12.626489639282227
    9. ''m' → logprob: -12.751489639282227
    10. '   ' → logprob: -12.751489639282227

Token 3114: '・' (ID: 4156)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018225332722067833
    2. '・' → logprob: -4.018225193023682
    3. ' '' → logprob: -10.14322566986084
    4. '"' → logprob: -10.89322566986084
    5. '`' → logprob: -11.26822566986084
    6. '*' → logprob: -13.64322566986084
    7. ''*' → logprob: -13.76822566986084
    8. ''
' → logprob: -14.64322566986084
    9. '
' → logprob: -14.89322566986084
    10. '·' → logprob: -15.01822566986084

Token 3115: '':
' (ID: 7669)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5561966896057129
    2. ''' → logprob: -1.556196689605713
    3. '':' → logprob: -2.056196689605713
    4. '':
' → logprob: -3.181196689605713
    5. ''*' → logprob: -3.306196689605713
    6. ' '' → logprob: -4.806196689605713
    7. ' *' → logprob: -8.806196212768555
    8. ' ':' → logprob: -8.806196212768555
    9. ' '*' → logprob: -8.931196212768555
    10. '',' → logprob: -8.931196212768555

Token 3116: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18786215782165527
    2. ' return' → logprob: -2.1878621578216553
    3. 'return' → logprob: -3.1878621578216553
    4. ' a' → logprob: -4.187862396240234
    5. 'a' → logprob: -6.062862396240234
    6. ' ' → logprob: -9.187862396240234
    7. '                   ' → logprob: -9.312862396240234
    8. '           ' → logprob: -9.687862396240234
    9. '   ' → logprob: -10.312862396240234
    10. ' (' → logprob: -11.437862396240234

Token 3117: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.021030526608228683
    2. ' return' → logprob: -4.271030426025391
    3. 'a' → logprob: -5.021030426025391
    4. ' a' → logprob: -8.89603042602539
    5. '               ' → logprob: -9.39603042602539
    6. '           ' → logprob: -10.64603042602539
    7. '                   ' → logprob: -13.77103042602539
    8. ' ' → logprob: -15.02103042602539
    9. '   ' → logprob: -15.14603042602539
    10. '	return' → logprob: -15.64603042602539

Token 3118: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031777136027812958
    2. ' a' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.503177642822266
    4. '	a' → logprob: -18.878177642822266
    5. '(a' → logprob: -20.628177642822266
    6. ' ' → logprob: -21.253177642822266
    7. '           ' → logprob: -21.378177642822266
    8. '    ' → logprob: -22.128177642822266
    9. '_a' → logprob: -22.503177642822266
    10. ''a' → logprob: -23.003177642822266

Token 3119: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20146265625953674
    2. '*' → logprob: -1.7014626264572144
    3. '*b' → logprob: -10.076462745666504
    4. ' ' → logprob: -12.451462745666504
    5. '**' → logprob: -14.451462745666504
    6. ' *
' → logprob: -14.826462745666504
    7. '*object' → logprob: -14.826462745666504
    8. '*a' → logprob: -14.951462745666504
    9. '  ' → logprob: -15.201462745666504
    10. '   ' → logprob: -15.326462745666504

Token 3120: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047814972698689
    2. ' b' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.76104736328125
    4. '	b' → logprob: -18.88604736328125
    5. ')b' → logprob: -19.88604736328125
    6. '<|end|>' → logprob: -20.51104736328125
    7. ' б' → logprob: -20.88604736328125
    8. '  ' → logprob: -21.51104736328125
    9. '   ' → logprob: -21.51104736328125
    10. '\b' → logprob: -22.01104736328125

Token 3121: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001537169300718233
    2. '          ' → logprob: -9.625153541564941
    3. '       ' → logprob: -10.500153541564941
    4. '<|end|>' → logprob: -10.750153541564941
    5. '		' → logprob: -11.375153541564941
    6. '               ' → logprob: -12.000153541564941
    7. '            ' → logprob: -12.250153541564941
    8. '         ' → logprob: -12.500153541564941
    9. '        ' → logprob: -13.000153541564941
    10. '            
' → logprob: -13.500153541564941

Token 3122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033335138112306595
    2. '               ' → logprob: -4.533335208892822
    3. ':
' → logprob: -4.783335208892822
    4. '       ' → logprob: -5.033335208892822
    5. ':' → logprob: -5.408335208892822
    6. '.' → logprob: -7.533335208892822
    7. '<|end|>' → logprob: -7.783335208892822
    8. '          ' → logprob: -8.408334732055664
    9. '		' → logprob: -8.533334732055664
    10. '   ' → logprob: -8.533334732055664

Token 3123: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007416844367980957
    2. '               ' → logprob: -5.632416725158691
    3. '       ' → logprob: -6.382416725158691
    4. ':
' → logprob: -6.882416725158691
    5. ':' → logprob: -7.507416725158691
    6. 'return' → logprob: -8.882416725158691
    7. '.' → logprob: -9.132416725158691
    8. '          ' → logprob: -9.882416725158691
    9. '		' → logprob: -10.507416725158691
    10. '
' → logprob: -10.507416725158691

Token 3124: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7372921109199524
    2. ':' → logprob: -0.8622921109199524
    3. ':
' → logprob: -2.9872920513153076
    4. '           ' → logprob: -3.1122920513153076
    5. '              ' → logprob: -6.862292289733887
    6. ':return' → logprob: -6.862292289733887
    7. '          ' → logprob: -7.737292289733887
    8. '            ' → logprob: -7.987292289733887
    9. '                   ' → logprob: -8.487292289733887
    10. '=' → logprob: -8.862292289733887

Token 3125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020501010585576296
    2. 'raise' → logprob: -7.877049922943115
    3. ' raise' → logprob: -7.877049922943115
    4. '                ' → logprob: -8.002050399780273
    5. 'None' → logprob: -8.127050399780273
    6. 'return' → logprob: -8.502050399780273
    7. '0' → logprob: -9.002050399780273
    8. ' None' → logprob: -9.252050399780273
    9. '           ' → logprob: -9.252050399780273
    10. '              ' → logprob: -10.002050399780273

Token 3126: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.006158200558274984
    2. 'return' → logprob: -5.256158351898193
    3. '               ' → logprob: -7.256158351898193
    4. ' raise' → logprob: -9.006157875061035
    5. '           ' → logprob: -9.756157875061035
    6. 'assert' → logprob: -10.631157875061035
    7. '                   ' → logprob: -12.131157875061035
    8. '0' → logprob: -12.381157875061035
    9. '   ' → logprob: -13.006157875061035
    10. '       ' → logprob: -14.006157875061035

Token 3127: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0007762773893773556
    2. 'Runtime' → logprob: -7.750776290893555
    3. 'Exception' → logprob: -8.000776290893555
    4. ' Value' → logprob: -11.500776290893555
    5. '_value' → logprob: -16.750776290893555
    6. 'Assertion' → logprob: -17.375776290893555
    7. ' Runtime' → logprob: -17.500776290893555
    8. 'Syntax' → logprob: -18.375776290893555
    9. 'Val' → logprob: -18.750776290893555
    10. '(Value' → logprob: -18.875776290893555

Token 3128: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.656383680412546e-05
    2. 'rror' → logprob: -10.000046730041504
    3. 'Token' → logprob: -15.250046730041504
    4. '       ' → logprob: -15.375046730041504
    5. 'Value' → logprob: -15.750046730041504
    6. 'SError' → logprob: -16.250045776367188
    7. 'error' → logprob: -16.500045776367188
    8. '           ' → logprob: -17.000045776367188
    9. 'Exception' → logprob: -17.500045776367188
    10. 'ERROR' → logprob: -17.625045776367188

Token 3129: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08540866523981094
    2. '('' → logprob: -2.9604086875915527
    3. '(
' → logprob: -4.085408687591553
    4. '           ' → logprob: -5.210408687591553
    5. ''' → logprob: -6.585408687591553
    6. '("' → logprob: -6.585408687591553
    7. '("("' → logprob: -6.585408687591553
    8. '               ' → logprob: -7.085408687591553
    9. '       ' → logprob: -7.460408687591553
    10. ' (' → logprob: -7.460408687591553

Token 3130: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7225563526153564
    2. '"' → logprob: -0.8475563526153564
    3. ' f' → logprob: -2.7225563526153564
    4. 'f' → logprob: -5.347556114196777
    5. '           ' → logprob: -6.097556114196777
    6. ' (' → logprob: -6.472556114196777
    7. '{' → logprob: -6.472556114196777
    8. ')' → logprob: -6.597556114196777
    9. ' '' → logprob: -6.847556114196777
    10. '(' → logprob: -6.847556114196777

Token 3131: 'Invalid' (ID: 12278)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.5241202116012573
    2. 'f' → logprob: -1.6491202116012573
    3. ' f' → logprob: -1.6491202116012573
    4. 'Unknown' → logprob: -2.274120330810547
    5. 'Invalid' → logprob: -2.274120330810547
    6. ''' → logprob: -2.649120330810547
    7. '"' → logprob: -3.149120330810547
    8. ' op' → logprob: -3.524120330810547
    9. 'Unexpected' → logprob: -4.274120330810547
    10. ' Unknown' → logprob: -4.649120330810547

Token 3132: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.40299516916275024
    2. ' op' → logprob: -1.1529951095581055
    3. 'operator' → logprob: -4.4029951095581055
    4. ' token' → logprob: -6.6529951095581055
    5. 'op' → logprob: -7.1529951095581055
    6. '_operator' → logprob: -7.1529951095581055
    7. ' operation' → logprob: -8.027995109558105
    8. '_op' → logprob: -8.027995109558105
    9. 'token' → logprob: -9.527995109558105
    10. ' operador' → logprob: -10.527995109558105

Token 3133: ' {' (ID: 354)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23758235573768616
    2. '')' → logprob: -2.8625824451446533
    3. '(op' → logprob: -3.2375824451446533
    4. ' op' → logprob: -3.2375824451446533
    5. ''' → logprob: -3.6125824451446533
    6. ' ')' → logprob: -4.612582206726074
    7. ' '' → logprob: -4.737582206726074
    8. '           ' → logprob: -4.862582206726074
    9. '{' → logprob: -4.987582206726074
    10. ' {' → logprob: -5.487582206726074

Token 3134: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.10027093440294266
    2. ' op' → logprob: -2.350270986557007
    3. '{' → logprob: -9.975271224975586
    4. '(op' → logprob: -11.475271224975586
    5. '}' → logprob: -13.225271224975586
    6. ' {' → logprob: -13.350271224975586
    7. '	op' → logprob: -13.350271224975586
    8. '_op' → logprob: -15.100271224975586
    9. ' ' → logprob: -15.100271224975586
    10. ''op' → logprob: -15.100271224975586

Token 3135: '}')

' (ID: 171301)
  Prédit: '}')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}')
' → logprob: -0.5902893543243408
    2. '}')' → logprob: -1.0902893543243408
    3. ')' → logprob: -3.090289354324341
    4. '')' → logprob: -3.340289354324341
    5. '           ' → logprob: -4.590289115905762
    6. ')')
' → logprob: -4.715289115905762
    7. '       ' → logprob: -5.340289115905762
    8. '}' → logprob: -5.590289115905762
    9. '')
' → logprob: -7.465289115905762
    10. '}')

' → logprob: -8.715289115905762

Token 3136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2414909452199936
    2. '
' → logprob: -1.6164909601211548
    3. '        
' → logprob: -4.991490840911865
    4. '' → logprob: -5.866490840911865
    5. '    
' → logprob: -6.116490840911865
    6. ' 
' → logprob: -7.116490840911865
    7. '   ' → logprob: -7.491490840911865
    8. '
' → logprob: -7.491490840911865
    9. '  
' → logprob: -8.241491317749023
    10. '```' → logprob: -8.616491317749023

Token 3137: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4945894777774811
    2. '
' → logprob: -0.9945894479751587
    3. '        
' → logprob: -3.9945895671844482
    4. '    
' → logprob: -7.119589328765869
    5. 'tokens' → logprob: -7.869589328765869
    6. 'def' → logprob: -8.619589805603027
    7. 'stack' → logprob: -8.619589805603027
    8. '   ' → logprob: -10.494589805603027
    9. ' tokens' → logprob: -10.494589805603027
    10. '  
' → logprob: -10.494589805603027

Token 3138: ' Sh' (ID: 1955)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.8869722485542297
    2. 'def' → logprob: -1.511972188949585
    3. 'output' → logprob: -1.636972188949585
    4. 'tokens' → logprob: -2.261972188949585
    5. '       ' → logprob: -4.011972427368164
    6. 'ops' → logprob: -4.136972427368164
    7. 'vals' → logprob: -4.636972427368164
    8. 'nums' → logprob: -4.761972427368164
    9. '   ' → logprob: -5.011972427368164
    10. 'oper' → logprob: -5.886972427368164

Token 3139: 'unting' (ID: 28940)
  Prédit: 'unting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unting' → logprob: -0.000518482003826648
    2. 'unt' → logprob: -8.125518798828125
    3. 'unted' → logprob: -8.625518798828125
    4. 'ont' → logprob: -11.500518798828125
    5. 'unts' → logprob: -11.875518798828125
    6. '
' → logprob: -12.625518798828125
    7. 'util' → logprob: -12.750518798828125
    8. 't' → logprob: -13.000518798828125
    9. '_tokens' → logprob: -13.125518798828125
    10. '_t' → logprob: -13.375518798828125

Token 3140: ' yard' (ID: 19416)
  Prédit: '-yard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-yard' → logprob: -0.695531964302063
    2. '_y' → logprob: -1.570531964302063
    3. 'yard' → logprob: -2.1955318450927734
    4. '   ' → logprob: -2.4455318450927734
    5. 'Y' → logprob: -2.6955318450927734
    6. '
' → logprob: -4.570531845092773
    7. '```' → logprob: -5.195531845092773
    8. ' Yard' → logprob: -5.820531845092773
    9. '_token' → logprob: -5.945531845092773
    10. '_tokens' → logprob: -6.820531845092773

Token 3141: ' algorithm' (ID: 22184)
  Prédit: ' algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' algorithm' → logprob: -0.35218483209609985
    2. 'algorithm' → logprob: -2.102184772491455
    3. '(tokens' → logprob: -2.852184772491455
    4. '_algorithm' → logprob: -3.352184772491455
    5. '       ' → logprob: -3.602184772491455
    6. '
' → logprob: -4.352184772491455
    7. '   ' → logprob: -4.602184772491455
    8. '(
' → logprob: -4.727184772491455
    9. '(stack' → logprob: -5.852184772491455
    10. '(queue' → logprob: -5.852184772491455

Token 3142: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8428181409835815
    2. '(tokens' → logprob: -1.8428181409835815
    3. '       ' → logprob: -2.342818260192871
    4. 'tokens' → logprob: -2.592818260192871
    5. '
' → logprob: -2.717818260192871
    6. ':
' → logprob: -2.717818260192871
    7. '(
' → logprob: -3.717818260192871
    8. ' :' → logprob: -3.967818260192871
    9. '(' → logprob: -4.592818260192871
    10. '\n' → logprob: -4.842818260192871

Token 3143: ' convert' (ID: 8452)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.7778485417366028
    2. ' tokenize' → logprob: -1.277848482131958
    3. 'token' → logprob: -2.277848482131958
    4. 'convert' → logprob: -2.402848482131958
    5. ' parse' → logprob: -3.277848482131958
    6. ' convert' → logprob: -4.527848720550537
    7. 'tokens' → logprob: -5.027848720550537
    8. 'process' → logprob: -5.277848720550537
    9. 'evaluate' → logprob: -6.277848720550537
    10. ' process' → logprob: -6.777848720550537

Token 3144: ' to' (ID: 316)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.3924922049045563
    2. 'expression' → logprob: -1.3924921751022339
    3. ' tokens' → logprob: -4.267492294311523
    4. ' expression' → logprob: -4.267492294311523
    5. 'self' → logprob: -4.392492294311523
    6. 'to' → logprob: -4.517492294311523
    7. 'in' → logprob: -5.267492294311523
    8. 'expr' → logprob: -5.767492294311523
    9. '_tokens' → logprob: -5.767492294311523
    10. 'output' → logprob: -5.892492294311523

Token 3145: ' Reverse' (ID: 48128)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.33580803871154785
    2. 'post' → logprob: -1.5858080387115479
    3. 'tokens' → logprob: -2.835808038711548
    4. 'output' → logprob: -4.960807800292969
    5. ' postfix' → logprob: -4.960807800292969
    6. 'reverse' → logprob: -5.710807800292969
    7. 'token' → logprob: -6.210807800292969
    8. 'Reverse' → logprob: -6.960807800292969
    9. 'r' → logprob: -7.335807800292969
    10. ' Reverse' → logprob: -7.835807800292969

Token 3146: ' Polish' (ID: 58531)
  Prédit: ' Polish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Polish' → logprob: -0.6334797143936157
    2. 'Pol' → logprob: -0.7584797143936157
    3. ' polish' → logprob: -7.633479595184326
    4. 'Reverse' → logprob: -8.883480072021484
    5. '_pol' → logprob: -9.133480072021484
    6. ' Pol' → logprob: -10.133480072021484
    7. 'Token' → logprob: -10.508480072021484
    8. 'pol' → logprob: -10.758480072021484
    9. '```' → logprob: -11.133480072021484
    10. '   ' → logprob: -11.133480072021484

Token 3147: ' Not' (ID: 4037)
  Prédit: 'Notation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Notation' → logprob: -0.0664958506822586
    2. '_not' → logprob: -3.316495895385742
    3. ' Not' → logprob: -4.316495895385742
    4. 'notation' → logprob: -5.191495895385742
    5. ' notation' → logprob: -5.441495895385742
    6. 'Not' → logprob: -6.066495895385742
    7. '_token' → logprob: -7.191495895385742
    8. '_Not' → logprob: -8.441495895385742
    9. '_NOT' → logprob: -8.566495895385742
    10. '_' → logprob: -8.816495895385742

Token 3148: 'ation' (ID: 387)
  Prédit: 'notation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'notation' → logprob: -0.5043124556541443
    2. 'otation' → logprob: -1.629312515258789
    3. 'Notation' → logprob: -1.754312515258789
    4. 'otic' → logprob: -4.629312515258789
    5. 'ot' → logprob: -4.879312515258789
    6. 'ation' → logprob: -6.254312515258789
    7. 't' → logprob: -6.629312515258789
    8. 'orm' → logprob: -7.629312515258789
    9. '   ' → logprob: -7.629312515258789
    10. ' notation' → logprob: -7.754312515258789

Token 3149: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18261954188346863
    2. 'tokens' → logprob: -2.307619571685791
    3. ':' → logprob: -4.182619571685791
    4. '(tokens' → logprob: -4.182619571685791
    5. '
' → logprob: -4.682619571685791
    6. ' tokens' → logprob: -5.557619571685791
    7. '   ' → logprob: -5.557619571685791
    8. ':
' → logprob: -5.932619571685791
    9. '```' → logprob: -6.307619571685791
    10. '(
' → logprob: -6.432619571685791

Token 3150: 'R' (ID: 49)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07425780594348907
    2. 'notation' → logprob: -3.8242578506469727
    3. 'expression' → logprob: -4.574257850646973
    4. 'output' → logprob: -5.074257850646973
    5. 'Notation' → logprob: -5.324257850646973
    6. 'tokens' → logprob: -5.449257850646973
    7. '_not' → logprob: -5.824257850646973
    8. 'not' → logprob: -6.199257850646973
    9. 'Not' → logprob: -6.199257850646973
    10. '(tokens' → logprob: -6.324257850646973

Token 3151: 'PN' (ID: 14513)
  Prédit: 'PN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PN' → logprob: -0.08612924814224243
    2. 'Notation' → logprob: -2.9611291885375977
    3. 'Not' → logprob: -3.9611291885375977
    4. 'otation' → logprob: -5.836129188537598
    5. 'N' → logprob: -6.211129188537598
    6. '
' → logprob: -6.461129188537598
    7. 'pn' → logprob: -6.836129188537598
    8. 'Pol' → logprob: -7.586129188537598
    9. ')' → logprob: -7.586129188537598
    10. '(Not' → logprob: -8.336129188537598

Token 3152: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6711431741714478
    2. ')' → logprob: -1.5461431741714478
    3. '):' → logprob: -2.296143054962158
    4. ':' → logprob: -2.796143054962158
    5. ',' → logprob: -3.796143054962158
    6. '   ' → logprob: -4.046143054962158
    7. ' tokens' → logprob: -4.421143054962158
    8. 'tokens' → logprob: -4.421143054962158
    9. '):
' → logprob: -4.546143054962158
    10. ' )' → logprob: -4.921143054962158

Token 3153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009568016044795513
    2. '
' → logprob: -5.509568214416504
    3. ':' → logprob: -6.259568214416504
    4. 'tokens' → logprob: -6.384568214416504
    5. '   ' → logprob: -7.259568214416504
    6. '           ' → logprob: -8.509568214416504
    7. ':
' → logprob: -8.634568214416504
    8. '```' → logprob: -8.884568214416504
    9. '        
' → logprob: -9.009568214416504
    10. ',' → logprob: -9.134568214416504

Token 3154: ' output' (ID: 4733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48736003041267395
    2. 'output' (adapté à ' output') → logprob: -1.1123600006103516
    3. '
' → logprob: -3.9873600006103516
    4. 'tokens' → logprob: -4.362360000610352
    5. 'ops' → logprob: -4.612360000610352
    6. ' output' → logprob: -5.237360000610352
    7. '   ' → logprob: -5.862360000610352
    8. 'stack' → logprob: -5.862360000610352
    9. 'op' → logprob: -6.487360000610352
    10. 'operator' → logprob: -6.862360000610352

Token 3155: '_queue' (ID: 25622)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6513407826423645
    2. '_tokens' → logprob: -1.0263407230377197
    3. '=' → logprob: -2.4013407230377197
    4. '=[]' → logprob: -4.151340961456299
    5. '_' → logprob: -4.651340961456299
    6. '_queue' → logprob: -6.401340961456299
    7. '_stack' → logprob: -7.026340961456299
    8. 'tokens' → logprob: -7.401340961456299
    9. '=[]
' → logprob: -7.526340961456299
    10. ',' → logprob: -8.40134048461914

Token 3156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8153619766235352
    2. '.append' → logprob: -0.9403619766235352
    3. '=' → logprob: -1.9403619766235352
    4. '=[]' → logprob: -4.190361976623535
    5. '.' → logprob: -5.690361976623535
    6. '=[]
' → logprob: -7.440361976623535
    7. '_tokens' → logprob: -7.440361976623535
    8. ' +=' → logprob: -7.690361976623535
    9. ':' → logprob: -7.690361976623535
    10. ',' → logprob: -7.940361976623535

Token 3157: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0019866866059601307
    2. 'deque' → logprob: -6.251986503601074
    3. '[]
' → logprob: -10.251986503601074
    4. ' []' → logprob: -10.751986503601074
    5. ' deque' → logprob: -14.876986503601074
    6. '[]>' → logprob: -15.001986503601074
    7. '[],' → logprob: -15.376986503601074
    8. '[]}' → logprob: -15.501986503601074
    9. 'de' → logprob: -16.00198745727539
    10. '[' → logprob: -16.37698745727539

Token 3158: '       ' (ID: 309)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.23720769584178925
    2. 'operators' → logprob: -2.6122076511383057
    3. ' operator' → logprob: -2.7372076511383057
    4. 'op' → logprob: -3.1122076511383057
    5. ' operators' → logprob: -4.362207889556885
    6. ' op' → logprob: -4.487207889556885
    7. 'ops' → logprob: -6.112207889556885
    8. '       ' → logprob: -6.362207889556885
    9. ' ops' → logprob: -7.987207889556885
    10. '   ' → logprob: -9.487207412719727

Token 3159: ' operator' (ID: 11019)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.3287819027900696
    2. 'operator' (adapté à ' operator') → logprob: -1.5787818431854248
    3. 'ops' → logprob: -3.078781843185425
    4. 'op' → logprob: -3.578781843185425
    5. ' operators' → logprob: -10.328782081604004
    6. ' ops' → logprob: -12.453782081604004
    7. 'oper' → logprob: -12.453782081604004
    8. 'input' → logprob: -12.953782081604004
    9. ' operator' → logprob: -13.078782081604004
    10. 'tokens' → logprob: -13.328782081604004

Token 3160: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0007408959208987653
    2. 's' → logprob: -7.250741004943848
    3. '_' → logprob: -11.375741004943848
    4. 'stack' → logprob: -11.500741004943848
    5. '_queue' → logprob: -11.875741004943848
    6. ' stack' → logprob: -14.625741004943848
    7. '_s' → logprob: -14.750741004943848
    8. '_buffer' → logprob: -15.000741004943848
    9. '_STACK' → logprob: -15.125741004943848
    10. ' _' → logprob: -15.250741004943848

Token 3161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20154732465744019
    2. ' =' → logprob: -1.701547384262085
    3. '=[]' → logprob: -8.951547622680664
    4. '=[]
' → logprob: -13.326547622680664
    5. ':' → logprob: -13.451547622680664
    6. '.append' → logprob: -13.826547622680664
    7. ' ' → logprob: -15.951547622680664
    8. '[:]' → logprob: -16.076547622680664
    9. '[]' → logprob: -16.201547622680664
    10. '   ' → logprob: -17.201547622680664

Token 3162: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -5.319370302458992e-06
    2. ' []' → logprob: -12.875005722045898
    3. '[]
' → logprob: -12.875005722045898
    4. '[]>' → logprob: -16.7500057220459
    5. '[]

' → logprob: -17.0000057220459
    6. '[]}' → logprob: -17.1250057220459
    7. '[]"' → logprob: -17.8750057220459
    8. '[])' → logprob: -18.3750057220459
    9. '[' → logprob: -18.6250057220459
    10. 'deque' → logprob: -18.8750057220459

Token 3163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5954211950302124
    2. ' for' → logprob: -1.3454211950302124
    3. 'for' → logprob: -2.345421314239502
    4. 'i' → logprob: -3.845421314239502
    5. '
' → logprob: -3.970421314239502
    6. ' i' → logprob: -4.345421314239502
    7. '   ' → logprob: -4.345421314239502
    8. 'token' → logprob: -5.220421314239502
    9. ' 
' → logprob: -5.595421314239502
    10. '        
' → logprob: -5.845421314239502

Token 3164: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4850730895996094
    2. 'for' → logprob: -0.9850730895996094
    3. '       ' → logprob: -4.735073089599609
    4. 'idx' → logprob: -6.360073089599609
    5. 'index' → logprob: -8.61007308959961
    6. ' for' → logprob: -9.11007308959961
    7. ' i' → logprob: -9.61007308959961
    8. '   ' → logprob: -10.48507308959961
    9. 'tokens' → logprob: -10.98507308959961
    10. 'pos' → logprob: -10.98507308959961

Token 3165: ' token' (ID: 6602)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08823053538799286
    2. 'for' → logprob: -2.588230609893799
    3. 'idx' → logprob: -5.088230609893799
    4. ' i' → logprob: -7.088230609893799
    5. ' for' → logprob: -7.088230609893799
    6. 'tokens' → logprob: -7.338230609893799
    7. '       ' → logprob: -7.963230609893799
    8. 'index' → logprob: -8.46323013305664
    9. 'pos' → logprob: -8.83823013305664
    10. 'token' → logprob: -9.96323013305664

Token 3166: ' iterator' (ID: 30787)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.6369882822036743
    2. '_index' → logprob: -1.5119882822036743
    3. 's' → logprob: -2.1369881629943848
    4. ' =' → logprob: -2.2619881629943848
    5. '=' → logprob: -4.636988162994385
    6. '_i' → logprob: -5.261988162994385
    7. '   ' → logprob: -6.261988162994385
    8. 'index' → logprob: -6.261988162994385
    9. 'idx' → logprob: -6.261988162994385
    10. '_iter' → logprob: -6.761988162994385

Token 3167: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.344927042722702
    2. ' for' → logprob: -1.8449270725250244
    3. ' i' → logprob: -3.0949270725250244
    4. 'i' → logprob: -3.8449270725250244
    5. 'for' → logprob: -3.8449270725250244
    6. ' =' → logprob: -4.344926834106445
    7. ':' → logprob: -4.844926834106445
    8. ' idx' → logprob: -4.969926834106445
    9. 'idx' → logprob: -5.344926834106445
    10. 'token' → logprob: -5.969926834106445

Token 3168: ' buffer' (ID: 8573)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.688801646232605
    2. 'i' → logprob: -0.938801646232605
    3. ' i' → logprob: -2.6888017654418945
    4. 'idx' → logprob: -4.1888017654418945
    5. ' index' → logprob: -4.1888017654418945
    6. 'pos' → logprob: -5.1888017654418945
    7. ' idx' → logprob: -6.5638017654418945
    8. 'for' → logprob: -8.188801765441895
    9. '   ' → logprob: -8.313801765441895
    10. ' for' → logprob: -8.563801765441895

Token 3169: ' for' (ID: 395)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8902974128723145
    2. 'i' → logprob: -1.1402974128723145
    3. '       ' → logprob: -1.8902974128723145
    4. 'idx' → logprob: -3.1402974128723145
    5. ' idx' → logprob: -3.3902974128723145
    6. 'index' → logprob: -4.6402974128723145
    7. ' =' → logprob: -5.2652974128723145
    8. 'pos' → logprob: -5.5152974128723145
    9. ' index' → logprob: -5.6402974128723145
    10. ':' → logprob: -5.8902974128723145

Token 3170: ' multi' (ID: 12151)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39394843578338623
    2. 'index' → logprob: -2.268948554992676
    3. 'tokens' → logprob: -2.393948554992676
    4. 'token' → logprob: -3.393948554992676
    5. 'number' → logprob: -3.643948554992676
    6. 'idx' → logprob: -3.893948554992676
    7. ' i' → logprob: -4.018948554992676
    8. 'value' → logprob: -5.018948554992676
    9. 'numbers' → logprob: -5.393948554992676
    10. 'num' → logprob: -6.018948554992676

Token 3171: '-digit' (ID: 88590)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.9362256526947021
    2. 'token' → logprob: -1.1862256526947021
    3. '_digit' → logprob: -3.061225652694702
    4. 'char' → logprob: -3.186225652694702
    5. 't' → logprob: -3.561225652694702
    6. 'd' → logprob: -3.936225652694702
    7. ' =' → logprob: -3.936225652694702
    8. '-digit' → logprob: -4.061225891113281
    9. 'ch' → logprob: -4.436225891113281
    10. '=' → logprob: -4.561225891113281

Token 3172: ' numbers' (ID: 8663)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.683197557926178
    2. ' token' → logprob: -1.5581974983215332
    3. ''' → logprob: -2.308197498321533
    4. 'token' → logprob: -2.558197498321533
    5. ' '' → logprob: -3.683197498321533
    6. ' tokens' → logprob: -3.933197498321533
    7. 'tokens' → logprob: -4.183197498321533
    8. ' t' → logprob: -4.308197498321533
    9. ' =' → logprob: -5.183197498321533
    10. ' 
' → logprob: -5.558197498321533

Token 3173: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8143353462219238
    2. ' i' → logprob: -0.9393353462219238
    3. '       ' → logprob: -2.064335346221924
    4. ' idx' → logprob: -3.939335346221924
    5. 'idx' → logprob: -4.939335346221924
    6. 'pos' → logprob: -5.314335346221924
    7. 'index' → logprob: -5.939335346221924
    8. ' pos' → logprob: -5.939335346221924
    9. ' index' → logprob: -6.439335346221924
    10. ',' → logprob: -8.814334869384766

Token 3174: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1968952864408493
    2. ' i' → logprob: -2.4468953609466553
    3. '       ' → logprob: -2.5718953609466553
    4. 'idx' → logprob: -5.321895122528076
    5. ' =' → logprob: -5.571895122528076
    6. 'pos' → logprob: -6.071895122528076
    7. 'index' → logprob: -6.196895122528076
    8. 'tokens' → logprob: -6.821895122528076
    9. ' idx' → logprob: -7.446895122528076
    10. 'num' → logprob: -8.196895599365234

Token 3175: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.02263486199080944
    2. 'num' → logprob: -4.772634983062744
    3. 'number' → logprob: -5.272634983062744
    4. 'idx' → logprob: -5.522634983062744
    5. ' i' → logprob: -6.522634983062744
    6. 'buffer' → logprob: -6.522634983062744
    7. 'current' → logprob: -7.272634983062744
    8. '   ' → logprob: -8.022634506225586
    9. 'buf' → logprob: -8.772634506225586
    10. 'acc' → logprob: -8.897634506225586

Token 3176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6013387441635132
    2. ' =' → logprob: -1.3513387441635132
    3. ' +=' → logprob: -1.8513387441635132
    4. '+=' → logprob: -4.226338863372803
    5. ' ' → logprob: -4.601338863372803
    6. '[' → logprob: -5.226338863372803
    7. '   ' → logprob: -6.851338863372803
    8. '+' → logprob: -7.101338863372803
    9. '  ' → logprob: -7.476338863372803
    10. 'tokens' → logprob: -7.976338863372803

Token 3177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008049834286794066
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -14.875804901123047
    4. '  ' → logprob: -16.750804901123047
    5. '1' → logprob: -17.125804901123047
    6. '       ' → logprob: -17.875804901123047
    7. '    ' → logprob: -18.500804901123047
    8. '۰' → logprob: -18.563304901123047
    9. 'len' → logprob: -18.563304901123047
    10. '         ' → logprob: -18.813304901123047

Token 3178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.375097274780273
    4. '-' → logprob: -16.625097274780273
    5. 'i' → logprob: -17.125097274780273
    6. '1' → logprob: -17.500097274780273
    7. 'len' → logprob: -18.500097274780273
    8. '=' → logprob: -18.625097274780273
    9. '۰' → logprob: -18.625097274780273
    10. 'None' → logprob: -18.750097274780273

Token 3179: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.3268648386001587
    2. ':' → logprob: -1.7018648386001587
    3. '
' → logprob: -1.7018648386001587
    4. 'tokens' → logprob: -2.201864719390869
    5. ' while' → logprob: -2.701864719390869
    6. 'token' → logprob: -2.951864719390869
    7. ' ' → logprob: -3.701864719390869
    8. '       ' → logprob: -3.826864719390869
    9. '   ' → logprob: -4.326864719390869
    10. '```' → logprob: -4.326864719390869

Token 3180: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1001198291778564
    2. '       ' → logprob: -1.8501198291778564
    3. ' while' → logprob: -1.8501198291778564
    4. '
' → logprob: -2.6001198291778564
    5. ' ' → logprob: -2.8501198291778564
    6. 'tokens' → logprob: -2.8501198291778564
    7. '   ' → logprob: -3.6001198291778564
    8. 'token' → logprob: -3.8501198291778564
    9. ':' → logprob: -3.9751198291778564
    10. ':
' → logprob: -4.475119590759277

Token 3181: ' n' (ID: 297)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18580517172813416
    2. 'n' (adapté à ' n') → logprob: -2.185805082321167
    3. ' while' → logprob: -3.310805082321167
    4. 'tokens' → logprob: -4.810805320739746
    5. ' n' → logprob: -5.060805320739746
    6. 'num' → logprob: -6.435805320739746
    7. '
' → logprob: -6.685805320739746
    8. 'length' → logprob: -6.810805320739746
    9. '```' → logprob: -7.060805320739746
    10. '       ' → logprob: -7.310805320739746

Token 3182: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.39430341124534607
    2. '+=' → logprob: -1.6443034410476685
    3. '=' → logprob: -2.519303321838379
    4. ' =' → logprob: -3.269303321838379
    5. '+' → logprob: -5.519303321838379
    6. '[' → logprob: -6.519303321838379
    7. '   ' → logprob: -6.644303321838379
    8. 'tokens' → logprob: -6.644303321838379
    9. ' ' → logprob: -6.894303321838379
    10. '[i' → logprob: -7.019303321838379

Token 3183: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0024764856789261103
    2. ' len' → logprob: -6.002476692199707
    3. '(len' → logprob: -15.377476692199707
    4. '   ' → logprob: -15.502476692199707
    5. '	len' → logprob: -15.752476692199707
    6. '[len' → logprob: -16.12747573852539
    7. ' ' → logprob: -17.25247573852539
    8. '
' → logprob: -17.87747573852539
    9. '=len' → logprob: -18.25247573852539
    10. ',len' → logprob: -18.25247573852539

Token 3184: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.49912169575691223
    2. 'self' → logprob: -1.1241216659545898
    3. 'tokens' → logprob: -2.87412166595459
    4. '(tokens' → logprob: -4.99912166595459
    5. ' self' → logprob: -5.99912166595459
    6. '(' → logprob: -7.12412166595459
    7. ' tokens' → logprob: -7.49912166595459
    8. '(
' → logprob: -8.12412166595459
    9. ' (' → logprob: -8.12412166595459
    10. '_tokens' → logprob: -8.62412166595459

Token 3185: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -0.6074609756469727
    2. 'tokens' → logprob: -1.2324609756469727
    3. '(tokens' → logprob: -1.8574609756469727
    4. ' tokens' → logprob: -5.357460975646973
    5. 'self' → logprob: -6.732460975646973
    6. ')' → logprob: -7.357460975646973
    7. '(self' → logprob: -7.982460975646973
    8. ' )' → logprob: -8.732460975646973
    9. '
' → logprob: -8.857460975646973
    10. ' (' → logprob: -9.357460975646973

Token 3186: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25509947538375854
    2. '
' → logprob: -1.8800995349884033
    3. '   ' → logprob: -3.6300995349884033
    4. ')
' → logprob: -4.005099296569824
    5. '       ' → logprob: -4.130099296569824
    6. '+' → logprob: -6.005099296569824
    7. ' )' → logprob: -6.630099296569824
    8. '):
' → logprob: -6.630099296569824
    9. 'tokens' → logprob: -7.255099296569824
    10. ' +' → logprob: -7.505099296569824

Token 3187: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9068691730499268
    2. '
' → logprob: -1.7818691730499268
    3. ' while' → logprob: -2.1568691730499268
    4. ' ' → logprob: -2.2818691730499268
    5. '       ' → logprob: -2.7818691730499268
    6. 'while' → logprob: -3.4068691730499268
    7. '   ' → logprob: -3.6568691730499268
    8. ' i' → logprob: -4.531868934631348
    9. ':' → logprob: -4.656868934631348
    10. '  
' → logprob: -4.781868934631348

Token 3188: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0998586043715477
    2. ' while' → logprob: -3.224858522415161
    3. 'num' → logprob: -3.349858522415161
    4. '       ' → logprob: -4.59985876083374
    5. 'number' → logprob: -5.34985876083374
    6. '   ' → logprob: -6.34985876083374
    7. 'value' → logprob: -7.47485876083374
    8. 'tokens' → logprob: -7.47485876083374
    9. '```' → logprob: -7.72485876083374
    10. 'token' → logprob: -7.84985876083374

Token 3189: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08899563550949097
    2. ' i' → logprob: -2.4639956951141357
    3. '   ' → logprob: -10.338995933532715
    4. '       ' → logprob: -11.963995933532715
    5. '     ' → logprob: -12.213995933532715
    6. ' ' → logprob: -12.463995933532715
    7. '    ' → logprob: -12.588995933532715
    8. '  ' → logprob: -13.713995933532715
    9. '(i' → logprob: -14.088995933532715
    10. '      ' → logprob: -14.338995933532715

Token 3190: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11716616898775101
    2. '<' → logprob: -2.24216628074646
    3. '<len' → logprob: -5.617166042327881
    4. '<n' → logprob: -8.867166519165039
    5. '[' → logprob: -9.242166519165039
    6. ' ' → logprob: -9.367166519165039
    7. '=' → logprob: -9.992166519165039
    8. ' ==' → logprob: -9.992166519165039
    9. ' +=' → logprob: -10.117166519165039
    10. '<T' → logprob: -10.367166519165039

Token 3191: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.620622712536715e-05
    2. 'len' → logprob: -10.375045776367188
    3. ' n' → logprob: -11.125045776367188
    4. '   ' → logprob: -16.750045776367188
    5. ')n' → logprob: -17.375045776367188
    6. '       ' → logprob: -17.500045776367188
    7. '	n' → logprob: -18.250045776367188
    8. '(n' → logprob: -18.375045776367188
    9. ' len' → logprob: -18.625045776367188
    10. '_n' → logprob: -18.750045776367188

Token 3192: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.021215060725808144
    2. ':' → logprob: -3.8962149620056152
    3. '       ' → logprob: -7.771214962005615
    4. '):
' → logprob: -8.896215438842773
    5. ' :
' → logprob: -10.646215438842773
    6. '           ' → logprob: -10.771215438842773
    7. ' and' → logprob: -11.021215438842773
    8. '   ' → logprob: -11.021215438842773
    9. 'and' → logprob: -11.896215438842773
    10. ':

' → logprob: -12.146215438842773

Token 3193: '           ' (ID: 352)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.1258455067873001
    2. '       ' → logprob: -2.875845432281494
    3. 't' → logprob: -3.625845432281494
    4. ' token' → logprob: -3.875845432281494
    5. '           ' → logprob: -4.625845432281494
    6. '   ' → logprob: -6.125845432281494
    7. ' t' → logprob: -6.750845432281494
    8. 'tok' → logprob: -7.375845432281494
    9. ' if' → logprob: -8.250845909118652
    10. 'if' → logprob: -9.000845909118652

Token 3194: ' tok' (ID: 13372)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.006422729231417179
    2. 'tok' (adapté à ' tok') → logprob: -5.256422519683838
    3. '           ' → logprob: -7.006422519683838
    4. ' token' → logprob: -8.506422996520996
    5. 't' → logprob: -10.006422996520996
    6. 'tk' → logprob: -10.881422996520996
    7. 'if' → logprob: -11.506422996520996
    8. '   ' → logprob: -13.131422996520996
    9. ' tok' → logprob: -13.131422996520996
    10. '       ' → logprob: -13.506422996520996

Token 3195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024574637413025
    2. ' =' → logprob: -1.9102457761764526
    3. 'n' → logprob: -12.285245895385742
    4. 'ken' → logprob: -12.410245895385742
    5. 'k' → logprob: -13.035245895385742
    6. '       ' → logprob: -13.160245895385742
    7. 'okens' → logprob: -13.910245895385742
    8. 'en' → logprob: -14.160245895385742
    9. '           ' → logprob: -14.160245895385742
    10. '   ' → logprob: -14.285245895385742

Token 3196: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.541112427134067e-05
    2. ' self' → logprob: -9.500075340270996
    3. '           ' → logprob: -14.625075340270996
    4. '(self' → logprob: -19.125076293945312
    5. '               ' → logprob: -19.625076293945312
    6. '       ' → logprob: -20.500076293945312
    7. '   ' → logprob: -20.625076293945312
    8. '
' → logprob: -20.750076293945312
    9. '	self' → logprob: -21.375076293945312
    10. '[self' → logprob: -21.750076293945312

Token 3197: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -0.03372408077120781
    2. 'tokens' → logprob: -3.408724069595337
    3. 'okens' → logprob: -10.533723831176758
    4. ' .' → logprob: -11.533723831176758
    5. ' tokens' → logprob: -11.533723831176758
    6. '   ' → logprob: -11.908723831176758
    7. '.' → logprob: -12.158723831176758
    8. '[t' → logprob: -12.658723831176758
    9. '_tokens' → logprob: -12.658723831176758
    10. '[i' → logprob: -12.908723831176758

Token 3198: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03729353845119476
    2. '[' → logprob: -4.037293434143066
    3. '           ' → logprob: -4.537293434143066
    4. '[token' → logprob: -5.662293434143066
    5. '[
' → logprob: -6.287293434143066
    6. ' if' → logprob: -7.287293434143066
    7. 'if' → logprob: -7.537293434143066
    8. '            
' → logprob: -8.287293434143066
    9. '
' → logprob: -8.412293434143066
    10. '       ' → logprob: -8.662293434143066

Token 3199: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1105097159743309
    2. '           ' → logprob: -2.8605096340179443
    3. ')' → logprob: -3.4855096340179443
    4. '
' → logprob: -4.610509872436523
    5. ']
' → logprob: -5.360509872436523
    6. ']' → logprob: -7.485509872436523
    7. '       ' → logprob: -7.735509872436523
    8. ' )
' → logprob: -8.735509872436523
    9. ' 
' → logprob: -8.735509872436523
    10. '            
' → logprob: -8.735509872436523

Token 3200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013136898633092642
    2. '       ' → logprob: -7.00131368637085
    3. '            
' → logprob: -9.001314163208008
    4. '   ' → logprob: -9.876314163208008
    5. ' 
' → logprob: -10.501314163208008
    6. '        
' → logprob: -10.876314163208008
    7. '    ' → logprob: -11.001314163208008
    8. '          ' → logprob: -11.126314163208008
    9. '    
' → logprob: -11.126314163208008
    10. ' if' → logprob: -11.126314163208008

Token 3201: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04751165583729744
    2. ' if' → logprob: -3.547511577606201
    3. '           ' → logprob: -4.047511577606201
    4. '       ' → logprob: -8.92251205444336
    5. '   ' → logprob: -13.17251205444336
    6. 'If' → logprob: -14.42251205444336
    7. '               ' → logprob: -14.54751205444336
    8. 'token' → logprob: -14.92251205444336
    9. '        ' → logprob: -15.04751205444336
    10. '    ' → logprob: -15.42251205444336

Token 3202: ' tok' (ID: 13372)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.0001261845463886857
    2. ' tok' → logprob: -9.000125885009766
    3. '(tok' → logprob: -12.875125885009766
    4. ''' → logprob: -16.125125885009766
    5. 'token' → logprob: -17.500125885009766
    6. 'tk' → logprob: -17.750125885009766
    7. ''t' → logprob: -18.000125885009766
    8. '   ' → logprob: -18.000125885009766
    9. 'tol' → logprob: -19.250125885009766
    10. ' ' → logprob: -19.250125885009766

Token 3203: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.10926362127065659
    2. 'isdigit' → logprob: -2.8592636585235596
    3. '.' → logprob: -3.3592636585235596
    4. '[' → logprob: -5.2342634201049805
    5. '>=' → logprob: -5.8592634201049805
    6. ' in' → logprob: -6.2342634201049805
    7. ' >=' → logprob: -7.2342634201049805
    8. ' .' → logprob: -8.23426342010498
    9. '>' → logprob: -9.10926342010498
    10. ' not' → logprob: -10.23426342010498

Token 3204: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -1.4378848391061183e-05
    2. 'decimal' → logprob: -11.250014305114746
    3. 'numeric' → logprob: -13.750014305114746
    4. 'al' → logprob: -15.125014305114746
    5. 'd' → logprob: -17.625015258789062
    6. 'dig' → logprob: -18.125015258789062
    7. 'digital' → logprob: -19.500015258789062
    8. '_digit' → logprob: -19.875015258789062
    9. 'token' → logprob: -20.500015258789062
    10. ' digit' → logprob: -21.125015258789062

Token 3205: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06533615291118622
    2. '():' → logprob: -3.440336227416992
    3. ' :' → logprob: -4.190336227416992
    4. ' ' → logprob: -5.315336227416992
    5. '<|end|>' → logprob: -6.315336227416992
    6. ':
' → logprob: -6.315336227416992
    7. '(' → logprob: -6.440336227416992
    8. '[' → logprob: -6.690336227416992
    9. '):' → logprob: -7.440336227416992
    10. ' or' → logprob: -7.440336227416992

Token 3206: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5948952436447144
    2. ':' → logprob: -1.0948952436447144
    3. ':
' → logprob: -2.719895362854004
    4. ' or' → logprob: -3.594895362854004
    5. '           ' → logprob: -4.219895362854004
    6. ' :' → logprob: -6.469895362854004
    7. '):' → logprob: -7.094895362854004
    8. '                   ' → logprob: -7.719895362854004
    9. '            ' → logprob: -7.844895362854004
    10. ' and' → logprob: -7.969895362854004

Token 3207: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0025657913647592068
    2. '           ' → logprob: -6.252565860748291
    3. 'val' → logprob: -8.127565383911133
    4. 'number' → logprob: -8.502565383911133
    5. 'j' → logprob: -9.502565383911133
    6. 'value' → logprob: -10.877565383911133
    7. '               ' → logprob: -10.877565383911133
    8. '#' (adapté à ' #') → logprob: -11.627565383911133
    9. 'output' → logprob: -12.002565383911133
    10. ' num' → logprob: -12.252565383911133

Token 3208: ' accumulate' (ID: 74226)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.001486058346927166
    2. 'j' → logprob: -7.876485824584961
    3. 'val' → logprob: -7.876485824584961
    4. 'number' → logprob: -8.001485824584961
    5. '           ' → logprob: -8.626485824584961
    6. '               ' → logprob: -9.501485824584961
    7. 'value' → logprob: -9.751485824584961
    8. '#' → logprob: -10.376485824584961
    9. 'start' → logprob: -10.376485824584961
    10. '                   ' → logprob: -12.501485824584961

Token 3209: ' consecutive' (ID: 40840)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.9753506183624268
    2. 'tokens' → logprob: -0.9753506183624268
    3. 'token' → logprob: -2.1003506183624268
    4. ' tok' → logprob: -2.7253506183624268
    5. ''' → logprob: -4.225350379943848
    6. '''' → logprob: -5.100350379943848
    7. 'output' → logprob: -5.350350379943848
    8. ' tokens' → logprob: -5.350350379943848
    9. '')' → logprob: -5.600350379943848
    10. ' token' → logprob: -5.850350379943848

Token 3210: ' digits' (ID: 37806)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2170436382293701
    2. 'tokens' → logprob: -1.2170436382293701
    3. ''' → logprob: -1.3420436382293701
    4. ' '' → logprob: -3.34204363822937
    5. 'token' → logprob: -3.34204363822937
    6. 'tok' → logprob: -3.96704363822937
    7. 'digits' → logprob: -4.467043876647949
    8. ' )' → logprob: -4.592043876647949
    9. ' tokens' → logprob: -4.717043876647949
    10. ' tok' → logprob: -5.217043876647949

Token 3211: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5568031072616577
    2. ':' → logprob: -1.6818031072616577
    3. 'tokens' → logprob: -1.9318031072616577
    4. '               ' → logprob: -2.0568032264709473
    5. 'token' → logprob: -2.3068032264709473
    6. 'while' → logprob: -2.5568032264709473
    7. 'output' → logprob: -3.8068032264709473
    8. '                   ' → logprob: -4.056803226470947
    9. '+' → logprob: -4.181803226470947
    10. ' while' → logprob: -4.306803226470947

Token 3212: ' make' (ID: 1520)
  Prédit: ' form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' form' → logprob: -1.0651944875717163
    2. 'form' → logprob: -1.8151944875717163
    3. 'token' → logprob: -1.9401944875717163
    4. 'num' → logprob: -2.190194606781006
    5. 'build' → logprob: -2.565194606781006
    6. 'number' → logprob: -2.690194606781006
    7. 'int' → logprob: -4.190194606781006
    8. 'result' → logprob: -4.440194606781006
    9. 'append' → logprob: -4.440194606781006
    10. 'tokens' → logprob: -4.940194606781006

Token 3213: ' number' (ID: 2086)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5732142925262451
    2. 'number' → logprob: -1.3232142925262451
    3. 'token' → logprob: -2.448214292526245
    4. 'tok' → logprob: -2.698214292526245
    5. ' number' → logprob: -4.698214530944824
    6. ' tok' → logprob: -6.198214530944824
    7. 'a' → logprob: -6.698214530944824
    8. 'output' → logprob: -6.948214530944824
    9. ' num' → logprob: -7.198214530944824
    10. ' a' → logprob: -7.948214530944824

Token 3214: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7486064434051514
    2. '           ' → logprob: -1.6236064434051514
    3. 'token' → logprob: -2.9986064434051514
    4. '                   ' → logprob: -3.1236064434051514
    5. 'num' → logprob: -3.2486064434051514
    6. 'while' → logprob: -3.3736064434051514
    7. 'number' → logprob: -3.6236064434051514
    8. ':' → logprob: -3.7486064434051514
    9. 'result' → logprob: -4.6236066818237305
    10. ' ' → logprob: -4.9986066818237305

Token 3215: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23210138082504272
    2. '           ' → logprob: -2.2321014404296875
    3. '                   ' → logprob: -3.1071014404296875
    4. ':' → logprob: -4.1071014404296875
    5. 'token' → logprob: -4.6071014404296875
    6. '                ' → logprob: -5.6071014404296875
    7. ' =' → logprob: -6.1071014404296875
    8. ' ' → logprob: -6.1071014404296875
    9. ':
' → logprob: -6.2321014404296875
    10. '            ' → logprob: -6.3571014404296875

Token 3216: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.0005060884868726134
    2. 'number' → logprob: -8.000506401062012
    3. 'j' → logprob: -9.250506401062012
    4. '           ' → logprob: -10.375506401062012
    5. ' num' → logprob: -10.625506401062012
    6. '               ' → logprob: -11.875506401062012
    7. 'val' → logprob: -12.000506401062012
    8. '   ' → logprob: -13.500506401062012
    9. 'value' → logprob: -13.500506401062012
    10. '                   ' → logprob: -14.250506401062012

Token 3217: '_str' (ID: 6182)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6368594169616699
    2. ' =' → logprob: -1.01185941696167
    3. '_tokens' → logprob: -3.26185941696167
    4. '_' → logprob: -3.63685941696167
    5. ' ' → logprob: -4.51185941696167
    6. '=' → logprob: -4.51185941696167
    7. '+=' → logprob: -4.76185941696167
    8. '_token' → logprob: -5.51185941696167
    9. 's' → logprob: -6.26185941696167
    10. 'tokens' → logprob: -6.76185941696167

Token 3218: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.48015591502189636
    2. '+=' → logprob: -1.8551559448242188
    3. ' =' → logprob: -1.9801559448242188
    4. '=' → logprob: -2.4801559448242188
    5. '+='' → logprob: -6.855155944824219
    6. '+' → logprob: -7.230155944824219
    7. '=''' → logprob: -8.105155944824219
    8. '=""' → logprob: -8.355155944824219
    9. '+="' → logprob: -8.730155944824219
    10. ' +' → logprob: -8.855155944824219

Token 3219: ' tok' (ID: 13372)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.00028064317302778363
    2. ' tok' → logprob: -8.250280380249023
    3. 'tokens' → logprob: -11.625280380249023
    4. '(tok' → logprob: -12.500280380249023
    5. 'token' → logprob: -13.125280380249023
    6. '''' → logprob: -13.750280380249023
    7. '""' → logprob: -14.000280380249023
    8. '           ' → logprob: -14.500280380249023
    9. 'tk' → logprob: -14.875280380249023
    10. 'tol' → logprob: -15.000280380249023

Token 3220: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.346528172492981
    2. '<|end|>' → logprob: -1.346528172492981
    3. '<|end|>' → logprob: -2.0965280532836914
    4. 'while' → logprob: -2.7215280532836914
    5. '[i' → logprob: -2.8465280532836914
    6. 'i' → logprob: -2.9715280532836914
    7. ' +' → logprob: -3.4715280532836914
    8. ' ' → logprob: -3.5965280532836914
    9. ')' → logprob: -3.5965280532836914
    10. '[' → logprob: -4.221528053283691

Token 3221: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003972847014665604
    2. '               ' → logprob: -5.753973007202148
    3. 'i' → logprob: -8.378973007202148
    4. ' i' → logprob: -8.628973007202148
    5. '            
' → logprob: -9.503973007202148
    6. '
' → logprob: -9.628973007202148
    7. '                   ' → logprob: -9.753973007202148
    8. 'while' → logprob: -10.378973007202148
    9. ' while' → logprob: -10.378973007202148
    10. '	       ' → logprob: -10.628973007202148

Token 3222: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.021779527887701988
    2. ' i' → logprob: -4.021779537200928
    3. '           ' → logprob: -5.646779537200928
    4. '               ' → logprob: -9.89677906036377
    5. 'while' → logprob: -10.77177906036377
    6. '	i' → logprob: -11.14677906036377
    7. ' while' → logprob: -13.27177906036377
    8. ',i' → logprob: -13.27177906036377
    9. '                   ' → logprob: -13.52177906036377
    10. '```' → logprob: -13.89677906036377

Token 3223: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018155209720134735
    2. ' +=' → logprob: -4.018155097961426
    3. ']+=' → logprob: -13.143155097961426
    4. '=' → logprob: -13.268155097961426
    5. '+' → logprob: -14.143155097961426
    6. '   ' → logprob: -14.643155097961426
    7. '```' → logprob: -15.768155097961426
    8. '    ' → logprob: -16.768156051635742
    9. 'increment' → logprob: -17.018156051635742
    10. '           ' → logprob: -17.143156051635742

Token 3224: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.5
    4. '0' → logprob: -21.125
    5. '```' → logprob: -21.75
    6. '+' → logprob: -21.875
    7. '
' → logprob: -22.0
    8. '  ' → logprob: -22.875
    9. '           ' → logprob: -23.375
    10. '１' → logprob: -23.625

Token 3225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '0' → logprob: -18.0
    4. '   ' → logprob: -19.375
    5. '+' → logprob: -20.375
    6. '-' → logprob: -21.625
    7. 'while' → logprob: -22.375
    8. '           ' → logprob: -22.625
    9. '```' → logprob: -22.625
    10. '
' → logprob: -22.75

Token 3226: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1305985003709793
    2. '               ' → logprob: -2.255598545074463
    3. 'while' → logprob: -4.255598545074463
    4. ' while' → logprob: -6.130598545074463
    5. '                   ' → logprob: -7.630598545074463
    6. '       ' → logprob: -8.505598068237305
    7. '            ' → logprob: -9.380598068237305
    8. '                       ' → logprob: -9.755598068237305
    9. '             ' → logprob: -9.880598068237305
    10. '              ' → logprob: -9.880598068237305

Token 3227: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7001110315322876
    2. '               ' → logprob: -0.7001110315322876
    3. 'while' → logprob: -5.450110912322998
    4. '       ' → logprob: -6.450110912322998
    5. '                   ' → logprob: -7.950110912322998
    6. ' while' → logprob: -8.075111389160156
    7. '                       ' → logprob: -8.950111389160156
    8. '```' → logprob: -9.700111389160156
    9. '              ' → logprob: -9.825111389160156
    10. 'continue' → logprob: -10.575111389160156

Token 3228: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.027456259354948997
    2. '           ' → logprob: -3.777456283569336
    3. ' while' → logprob: -5.527456283569336
    4. '               ' → logprob: -8.777456283569336
    5. '```' → logprob: -10.152456283569336
    6. 'if' → logprob: -11.027456283569336
    7. '                   ' → logprob: -11.902456283569336
    8. '       ' → logprob: -12.652456283569336
    9. '	while' → logprob: -12.902456283569336
    10. 'While' → logprob: -13.777456283569336

Token 3229: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.043016090989112854
    2. ' i' → logprob: -3.168016195297241
    3. '(i' → logprob: -11.54301643371582
    4. '   ' → logprob: -12.79301643371582
    5. ' ' → logprob: -13.79301643371582
    6. '	i' → logprob: -13.91801643371582
    7. ' (' → logprob: -14.04301643371582
    8. 'self' → logprob: -15.16801643371582
    9. '(' → logprob: -15.16801643371582
    10. '  ' → logprob: -15.41801643371582

Token 3230: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4171309471130371
    2. ' <' → logprob: -1.167130947113037
    3. '<len' → logprob: -3.667130947113037
    4. '<n' → logprob: -5.542130947113037
    5. '<num' → logprob: -9.667131423950195
    6. '<size' → logprob: -10.042131423950195
    7. '<Token' → logprob: -10.167131423950195
    8. '<th' → logprob: -10.667131423950195
    9. '<s' → logprob: -10.792131423950195
    10. '<p' → logprob: -10.792131423950195

Token 3231: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007143391412682831
    2. ' n' → logprob: -7.250714302062988
    3. 'len' → logprob: -12.375714302062988
    4. '	n' → logprob: -16.625715255737305
    5. '1' → logprob: -17.250715255737305
    6. ' len' → logprob: -17.500715255737305
    7. '<n' → logprob: -17.875715255737305
    8. '   ' → logprob: -18.625715255737305
    9. '(n' → logprob: -19.375715255737305
    10. ')n' → logprob: -19.500715255737305

Token 3232: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16022534668445587
    2. ' and' → logprob: -1.9102253913879395
    3. '	and' → logprob: -13.785224914550781
    4. '           ' → logprob: -15.910224914550781
    5. '   ' → logprob: -16.28522491455078
    6. '```' → logprob: -18.28522491455078
    7. '          ' → logprob: -18.41022491455078
    8. ' ' → logprob: -18.53522491455078
    9. ' и' → logprob: -18.78522491455078
    10. '               ' → logprob: -19.03522491455078

Token 3233: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018150994554162025
    2. ' self' → logprob: -4.018150806427002
    3. 'tokens' → logprob: -14.51815128326416
    4. '(self' → logprob: -14.89315128326416
    5. '	self' → logprob: -16.893150329589844
    6. ' ' → logprob: -17.018150329589844
    7. ' (' → logprob: -18.268150329589844
    8. ''' → logprob: -18.268150329589844
    9. ' tokens' → logprob: -18.268150329589844
    10. 'len' → logprob: -18.518150329589844

Token 3234: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -0.0001872094871941954
    2. 'tokens' → logprob: -8.625186920166016
    3. ' .' → logprob: -12.125186920166016
    4. '.' → logprob: -14.750186920166016
    5. '.t' → logprob: -14.875186920166016
    6. '.tasks' → logprob: -15.375186920166016
    7. '.i' → logprob: -15.375186920166016
    8. 'i' → logprob: -15.875186920166016
    9. '.token' → logprob: -16.375186920166016
    10. ' tokens' → logprob: -16.375186920166016

Token 3235: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.75
    3. '```' → logprob: -16.75
    4. '
' → logprob: -17.0
    5. '[' → logprob: -17.375
    6. '[
' → logprob: -18.125
    7. ' [' → logprob: -19.375
    8. '`' → logprob: -19.5
    9. '``' → logprob: -19.5
    10. '{i' → logprob: -20.125

Token 3236: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0023830225691199303
    2. 'isdigit' → logprob: -6.752383232116699
    3. '[' → logprob: -7.002383232116699
    4. '.is' → logprob: -9.7523832321167
    5. '   ' → logprob: -9.7523832321167
    6. '].' → logprob: -10.0023832321167
    7. '.' → logprob: -10.8773832321167
    8. ').' → logprob: -10.8773832321167
    9. '           ' → logprob: -11.0023832321167
    10. ' .' → logprob: -11.1273832321167

Token 3237: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -1.3856492842023727e-06
    2. 'isd' → logprob: -13.875000953674316
    3. ' is' → logprob: -14.875000953674316
    4. 'tok' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.500001907348633
    6. 'token' → logprob: -17.875001907348633
    7. 'isl' → logprob: -17.875001907348633
    8. ' ' → logprob: -18.500001907348633
    9. '```' → logprob: -19.125001907348633
    10. 'ist' → logprob: -19.375001907348633

Token 3238: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.013960042037069798
    2. '():' → logprob: -4.388959884643555
    3. '()' → logprob: -6.888959884643555
    4. ':
' → logprob: -8.263959884643555
    5. 'and' → logprob: -9.763959884643555
    6. ':' → logprob: -10.013959884643555
    7. '()):
' → logprob: -11.013959884643555
    8. ' and' → logprob: -11.263959884643555
    9. '():
' → logprob: -11.513959884643555
    10. '()==' → logprob: -11.638959884643555

Token 3239: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7994548678398132
    2. 'num' → logprob: -1.424454927444458
    3. ' num' → logprob: -2.799454927444458
    4. ' and' → logprob: -2.799454927444458
    5. ':
' → logprob: -3.174454927444458
    6. ':' → logprob: -3.299454927444458
    7. '               ' → logprob: -3.674454927444458
    8. '                           ' → logprob: -3.674454927444458
    9. '                               ' → logprob: -4.299454689025879
    10. 'and' → logprob: -4.674454689025879

Token 3240: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.07895929366350174
    2. ' num' → logprob: -2.5789592266082764
    3. '                   ' → logprob: -10.203959465026855
    4. 'token' → logprob: -12.078959465026855
    5. '	num' → logprob: -12.203959465026855
    6. 'tok' → logprob: -12.328959465026855
    7. '                           ' → logprob: -12.828959465026855
    8. ' ' → logprob: -12.828959465026855
    9. '   ' → logprob: -12.953959465026855
    10. '                               ' → logprob: -13.203959465026855

Token 3241: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -9.817902173381299e-05
    2. 'str' → logprob: -9.50009822845459
    3. '_' → logprob: -11.50009822845459
    4. 'Str' → logprob: -12.00009822845459
    5. '_tokens' → logprob: -13.62509822845459
    6. '_tok' → logprob: -13.62509822845459
    7. '+=' → logprob: -13.75009822845459
    8. 's' → logprob: -14.62509822845459
    9. '_s' → logprob: -15.00009822845459
    10. '_STR' → logprob: -15.25009822845459

Token 3242: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00021152703266125172
    2. ' +=' → logprob: -8.500211715698242
    3. '+='' → logprob: -12.250211715698242
    4. '+="' → logprob: -13.000211715698242
    5. ']+=' → logprob: -14.625211715698242
    6. '+' → logprob: -14.750211715698242
    7. '+=(' → logprob: -16.000211715698242
    8. '   ' → logprob: -17.625211715698242
    9. '=' → logprob: -18.000211715698242
    10. '```' → logprob: -18.750211715698242

Token 3243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.000017166137695
    3. 'tokens' → logprob: -17.750017166137695
    4. 'token' → logprob: -20.250017166137695
    5. '(self' → logprob: -20.625017166137695
    6. '	self' → logprob: -20.875017166137695
    7. ' ' → logprob: -21.625017166137695
    8. '           ' → logprob: -22.375017166137695
    9. '
' → logprob: -22.500017166137695
    10. '   ' → logprob: -22.625017166137695

Token 3244: '.tokens' (ID: 127362)
  Prédit: '.tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -9.448370838072151e-05
    2. 'tokens' → logprob: -9.375094413757324
    3. '.t' → logprob: -12.250094413757324
    4. '[t' → logprob: -12.625094413757324
    5. '[i' → logprob: -14.500094413757324
    6. '_tokens' → logprob: -15.000094413757324
    7. '.' → logprob: -15.750094413757324
    8. '[self' → logprob: -15.875094413757324
    9. '.tasks' → logprob: -16.12509536743164
    10. '(tokens' → logprob: -16.37509536743164

Token 3245: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. 'i' → logprob: -13.125001907348633
    3. '[' → logprob: -18.500001907348633
    4. '```' → logprob: -18.625001907348633
    5. '{i' → logprob: -19.125001907348633
    6. '[
' → logprob: -19.375001907348633
    7. '   ' → logprob: -20.750001907348633
    8. '`' → logprob: -21.125001907348633
    9. '(i' → logprob: -21.125001907348633
    10. '[j' → logprob: -21.750001907348633

Token 3246: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0363349914550781
    2. '                   ' → logprob: -1.2863349914550781
    3. '           ' → logprob: -2.036334991455078
    4. ']' → logprob: -2.411334991455078
    5. '               ' → logprob: -2.911334991455078
    6. '<|end|>' → logprob: -3.286334991455078
    7. '[i' → logprob: -4.286334991455078
    8. 'i' → logprob: -4.661334991455078
    9. ')i' → logprob: -4.911334991455078
    10. '<|end|>' → logprob: -5.036334991455078

Token 3247: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14922431111335754
    2. '               ' → logprob: -2.274224281311035
    3. '           ' → logprob: -3.524224281311035
    4. '                ' → logprob: -6.024224281311035
    5. 'i' → logprob: -7.274224281311035
    6. '            ' → logprob: -7.399224281311035
    7. '                       ' → logprob: -7.524224281311035
    8. '                    ' → logprob: -7.524224281311035
    9. ' i' → logprob: -8.149224281311035
    10. '       ' → logprob: -8.524224281311035

Token 3248: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.014372811652719975
    2. ' i' → logprob: -4.264372825622559
    3. '                   ' → logprob: -8.514372825622559
    4. '```' → logprob: -13.264372825622559
    5. '                       ' → logprob: -13.514372825622559
    6. '               ' → logprob: -13.639372825622559
    7. '   ' → logprob: -14.139372825622559
    8. '           ' → logprob: -14.139372825622559
    9. '                           ' → logprob: -14.264372825622559
    10. '1' → logprob: -14.389372825622559

Token 3249: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03805594891309738
    2. ' +=' → logprob: -3.288055896759033
    3. '=' → logprob: -11.788056373596191
    4. ']+=' → logprob: -12.788056373596191
    5. '```' → logprob: -13.663056373596191
    6. '   ' → logprob: -14.038056373596191
    7. '           ' → logprob: -14.413056373596191
    8. '-=' → logprob: -14.913056373596191
    9. '+' → logprob: -15.163056373596191
    10. '       ' → logprob: -15.413056373596191

Token 3250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.500003814697266
    4. '```' → logprob: -20.000003814697266
    5. '+' → logprob: -22.250003814697266
    6. '                   ' → logprob: -22.500003814697266
    7. '
' → logprob: -22.500003814697266
    8. '           ' → logprob: -22.625003814697266
    9. '               ' → logprob: -23.000003814697266
    10. '１' → logprob: -23.250003814697266

Token 3251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -20.125
    4. '
' → logprob: -20.875
    5. '   ' → logprob: -20.875
    6. '+' → logprob: -21.125
    7. '１' → logprob: -22.875
    8. '`' → logprob: -23.3125
    9. '           ' → logprob: -23.5625
    10. '=' → logprob: -23.625

Token 3252: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04649408161640167
    2. '                   ' → logprob: -3.6714940071105957
    3. '           ' → logprob: -4.171494007110596
    4. ')' → logprob: -6.046494007110596
    5. '                       ' → logprob: -7.421494007110596
    6. ' output' → logprob: -8.296494483947754
    7. 'output' → logprob: -8.296494483947754
    8. ' continue' → logprob: -8.421494483947754
    9. '       ' → logprob: -8.546494483947754
    10. '                ' → logprob: -9.296494483947754

Token 3253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05541442334651947
    2. '                   ' → logprob: -3.0554144382476807
    3. '           ' → logprob: -5.305414199829102
    4. '                       ' → logprob: -6.805414199829102
    5. '                ' → logprob: -8.805414199829102
    6. ' continue' → logprob: -9.555414199829102
    7. '              ' → logprob: -9.555414199829102
    8. '```' → logprob: -9.680414199829102
    9. 'continue' → logprob: -9.680414199829102
    10. ')' → logprob: -10.055414199829102

Token 3254: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.2363450527191162
    2. 'num' → logprob: -2.361345052719116
    3. '               ' → logprob: -2.736345052719116
    4. 'i' → logprob: -3.111345052719116
    5. 'number' → logprob: -6.361345291137695
    6. 'continue' → logprob: -6.361345291137695
    7. ' output' → logprob: -6.486345291137695
    8. '           ' → logprob: -6.611345291137695
    9. 'token' → logprob: -9.236345291137695
    10. ' i' → logprob: -9.486345291137695

Token 3255: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.002066041575744748
    2. '_' → logprob: -6.627066135406494
    3. '_tokens' → logprob: -8.877065658569336
    4. '_append' → logprob: -9.127065658569336
    5. '_stack' → logprob: -9.127065658569336
    6. '_token' → logprob: -9.252065658569336
    7. '_buffer' → logprob: -9.752065658569336
    8. '_push' → logprob: -10.002065658569336
    9. ')_' → logprob: -10.377065658569336
    10. '```' → logprob: -11.002065658569336

Token 3256: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004084216430783272
    2. '.' → logprob: -5.50408411026001
    3. '.extend' → logprob: -13.129084587097168
    4. '.app' → logprob: -13.254084587097168
    5. ' .' → logprob: -13.504084587097168
    6. '.ap' → logprob: -15.254084587097168
    7. 'append' → logprob: -16.00408363342285
    8. '_append' → logprob: -16.12908363342285
    9. '.push' → logprob: -16.50408363342285
    10. '.Append' → logprob: -17.25408363342285

Token 3257: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02384711243212223
    2. 'int' → logprob: -4.0238471031188965
    3. '(num' → logprob: -5.3988471031188965
    4. 'num' → logprob: -6.7738471031188965
    5. '(' → logprob: -11.898847579956055
    6. ' int' → logprob: -12.398847579956055
    7. '(str' → logprob: -12.648847579956055
    8. '[int' → logprob: -14.273847579956055
    9. ' (' → logprob: -15.773847579956055
    10. '	int' → logprob: -16.023847579956055

Token 3258: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0465269573032856
    2. 'num' → logprob: -3.6715269088745117
    3. '(' → logprob: -3.9215269088745117
    4. '(
' → logprob: -8.921526908874512
    5. ')' → logprob: -9.921526908874512
    6. '('' → logprob: -12.046526908874512
    7. ' num' → logprob: -12.171526908874512
    8. ' (' → logprob: -12.171526908874512
    9. '[num' → logprob: -12.421526908874512
    10. ''' → logprob: -12.671526908874512

Token 3259: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -9.698698704596609e-05
    2. 'str' → logprob: -9.500097274780273
    3. 'Str' → logprob: -10.875097274780273
    4. '_' → logprob: -13.875097274780273
    5. '_num' → logprob: -14.000097274780273
    6. '```' → logprob: -14.500097274780273
    7. ')' → logprob: -15.000097274780273
    8. '_STR' → logprob: -15.750097274780273
    9. '[str' → logprob: -16.250097274780273
    10. ')_' → logprob: -16.750097274780273

Token 3260: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001863750658230856
    2. ' )' → logprob: -8.7501859664917
    3. ')
' → logprob: -10.6251859664917
    4. '))' → logprob: -13.1251859664917
    5. ')#' → logprob: -15.2501859664917
    6. '           ' → logprob: -15.3751859664917
    7. '[' → logprob: -15.7501859664917
    8. '),' → logprob: -16.000186920166016
    9. ')return' → logprob: -16.250186920166016
    10. ');' → logprob: -16.250186920166016

Token 3261: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03888370469212532
    2. '               ' → logprob: -3.913883686065674
    3. 'continue' → logprob: -4.663883686065674
    4. '       ' → logprob: -5.913883686065674
    5. '                   ' → logprob: -5.913883686065674
    6. ' continue' → logprob: -6.538883686065674
    7. '            ' → logprob: -7.788883686065674
    8. '          ' → logprob: -8.663884162902832
    9. '```' → logprob: -8.663884162902832
    10. '                       ' → logprob: -8.788884162902832

Token 3262: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02997043915092945
    2. 'continue' (adapté à ' continue') → logprob: -3.779970407485962
    3. '           ' → logprob: -5.029970645904541
    4. ' continue' → logprob: -8.904970169067383
    5. '                   ' → logprob: -11.154970169067383
    6. '	continue' → logprob: -12.279970169067383
    7. '	           ' → logprob: -13.654970169067383
    8. '_continue' → logprob: -13.654970169067383
    9. '```' → logprob: -13.654970169067383
    10. '              ' → logprob: -14.154970169067383

Token 3263: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03751872852444649
    2. '       ' → logprob: -4.037518501281738
    3. ' 
' → logprob: -4.537518501281738
    4. '            
' → logprob: -6.287518501281738
    5. '
' → logprob: -6.912518501281738
    6. ' ' → logprob: -6.912518501281738
    7. '     
' → logprob: -7.537518501281738
    8. '        
' → logprob: -7.537518501281738
    9. '        ' → logprob: -8.037518501281738
    10. 'elif' → logprob: -8.037518501281738

Token 3264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025131162256002426
    2. '            
' → logprob: -7.0025129318237305
    3. '       ' → logprob: -7.3775129318237305
    4. ' 
' → logprob: -7.7525129318237305
    5. '        
' → logprob: -9.37751293182373
    6. '    
' → logprob: -9.37751293182373
    7. '          ' → logprob: -9.87751293182373
    8. '            ' → logprob: -10.25251293182373
    9. '<|end|>' → logprob: -10.50251293182373
    10. '        ' → logprob: -10.62751293182373

Token 3265: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.8811041116714478
    2. '           ' → logprob: -1.5061041116714478
    3. ' elif' → logprob: -1.5061041116714478
    4. ' if' → logprob: -3.256103992462158
    5. 'if' → logprob: -3.381103992462158
    6. '       ' → logprob: -3.506103992462158
    7. 'else' → logprob: -3.881103992462158
    8. ' else' → logprob: -5.256103992462158
    9. '            
' → logprob: -6.256103992462158
    10. ' )' → logprob: -6.256103992462158

Token 3266: ' tok' (ID: 13372)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.03370068594813347
    2. ' tok' → logprob: -3.408700704574585
    3. '(tok' → logprob: -10.408700942993164
    4. 'token' → logprob: -11.283700942993164
    5. ' ' → logprob: -12.408700942993164
    6. 'len' → logprob: -13.283700942993164
    7. '   ' → logprob: -13.783700942993164
    8. 'Tok' → logprob: -14.283700942993164
    9. 'tokens' → logprob: -14.283700942993164
    10. '_tok' → logprob: -14.408700942993164

Token 3267: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12056393921375275
    2. ' ==' → logprob: -2.2455639839172363
    3. 'in' → logprob: -5.120563983917236
    4. '==' → logprob: -6.370563983917236
    5. ' ' → logprob: -11.620563507080078
    6. ' =='' → logprob: -11.995563507080078
    7. '[' → logprob: -12.620563507080078
    8. '=='' → logprob: -12.870563507080078
    9. ' =="' → logprob: -13.370563507080078
    10. ' =' → logprob: -13.995563507080078

Token 3268: ' ('' (ID: 9906)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.4680086374282837
    2. '{'' → logprob: -1.2180086374282837
    3. ''+' → logprob: -3.468008518218994
    4. '('' → logprob: -3.468008518218994
    5. '('+' → logprob: -4.968008518218994
    6. '{' → logprob: -4.968008518218994
    7. ''' → logprob: -7.343008518218994
    8. '"+' → logprob: -8.218008995056152
    9. ' ('' → logprob: -8.968008995056152
    10. ' ['' → logprob: -8.968008995056152

Token 3269: '+',' (ID: 141314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5907957553863525
    2. '+',' → logprob: -0.8407957553863525
    3. ''+' → logprob: -4.840795516967773
    4. '＋' → logprob: -6.090795516967773
    5. '+-' → logprob: -6.340795516967773
    6. '',' → logprob: -6.590795516967773
    7. '+,' → logprob: -7.215795516967773
    8. ''' → logprob: -7.840795516967773
    9. '+
' → logprob: -9.465795516967773
    10. '+'' → logprob: -9.590795516967773

Token 3270: ' '-',' (ID: 124266)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.08983726799488068
    2. ''' → logprob: -2.4648373126983643
    3. ' '-',' → logprob: -7.339837074279785
    4. ' '-' → logprob: -9.339837074279785
    5. ' '-')' → logprob: -9.839837074279785
    6. ' '' → logprob: -10.089837074279785
    7. ' ' → logprob: -11.339837074279785
    8. '-' → logprob: -11.464837074279785
    9. ' '-'' → logprob: -11.839837074279785
    10. '"-' → logprob: -11.839837074279785

Token 3271: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -9.007317567011341e-05
    2. ' '' → logprob: -9.375089645385742
    3. '"' → logprob: -12.875089645385742
    4. '       ' → logprob: -14.500089645385742
    5. '           ' → logprob: -15.125089645385742
    6. '
' → logprob: -15.500089645385742
    7. '               ' → logprob: -15.625089645385742
    8. ''*' → logprob: -15.750089645385742
    9. '   ' → logprob: -16.000089645385742
    10. ''\' → logprob: -16.125089645385742

Token 3272: '・' (ID: 4156)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.440506407059729e-05
    2. ' '' → logprob: -10.37503433227539
    3. '・' → logprob: -13.12503433227539
    4. '"' → logprob: -14.00003433227539
    5. '
' → logprob: -16.37503433227539
    6. ''*' → logprob: -17.25003433227539
    7. '   ' → logprob: -18.00003433227539
    8. '`' → logprob: -18.00003433227539
    9. ''ה' → logprob: -18.00003433227539
    10. '       ' → logprob: -18.12503433227539

Token 3273: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.0011395039036870003
    2. '):
' → logprob: -7.6261396408081055
    3. ''):' → logprob: -7.6261396408081055
    4. '',' → logprob: -9.376139640808105
    5. '')' → logprob: -10.376139640808105
    6. ''' → logprob: -10.751139640808105
    7. ' '' → logprob: -12.001139640808105
    8. '           ' → logprob: -12.126139640808105
    9. '               ' → logprob: -12.501139640808105
    10. ''):
' → logprob: -12.751139640808105

Token 3274: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37977927923202515
    2. ':' → logprob: -1.50477933883667
    3. '           ' → logprob: -2.50477933883667
    4. '               ' → logprob: -5.12977933883667
    5. '       ' → logprob: -5.62977933883667
    6. ' and' → logprob: -6.62977933883667
    7. '):
' → logprob: -8.254778861999512
    8. 'operator' → logprob: -8.879778861999512
    9. ':

' → logprob: -9.004778861999512
    10. ' ' → logprob: -9.254778861999512

Token 3275: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.008680754341185093
    2. ' while' → logprob: -4.758680820465088
    3. '           ' → logprob: -10.00868034362793
    4. '	while' → logprob: -11.75868034362793
    5. '               ' → logprob: -11.88368034362793
    6. 'if' → logprob: -13.00868034362793
    7. '       ' → logprob: -13.38368034362793
    8. 'While' → logprob: -13.75868034362793
    9. '   ' → logprob: -13.88368034362793
    10. '#' → logprob: -14.88368034362793

Token 3276: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.0021221882198005915
    2. '(operator' → logprob: -6.252122402191162
    3. ' operator' → logprob: -8.627121925354004
    4. 'len' → logprob: -11.502121925354004
    5. '(len' → logprob: -13.502121925354004
    6. '(' → logprob: -13.877121925354004
    7. '   ' → logprob: -14.002121925354004
    8. ' (' → logprob: -14.377121925354004
    9. '	operator' → logprob: -15.127121925354004
    10. ' ' → logprob: -15.877121925354004

Token 3277: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0008267794037237763
    2. '[-' → logprob: -7.375826835632324
    3. '_' → logprob: -9.375826835632324
    4. '```' → logprob: -10.625826835632324
    5. '`' → logprob: -11.000826835632324
    6. '_queue' → logprob: -11.125826835632324
    7. ')' → logprob: -11.750826835632324
    8. 's' → logprob: -11.875826835632324
    9. '_STACK' → logprob: -11.875826835632324
    10. ' _' → logprob: -11.875826835632324

Token 3278: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.38705968856811523
    2. ' and' → logprob: -1.1370596885681152
    3. '[-' → logprob: -8.887060165405273
    4. '           ' → logprob: -11.387060165405273
    5. '          ' → logprob: -11.512060165405273
    6. '	and' → logprob: -12.262060165405273
    7. '            ' → logprob: -12.387060165405273
    8. '               ' → logprob: -12.387060165405273
    9. '                   ' → logprob: -12.387060165405273
    10. '              ' → logprob: -12.512060165405273

Token 3279: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.0006060526939108968
    2. ' precedence' → logprob: -7.500606060028076
    3. 'operator' → logprob: -10.125605583190918
    4. '(pre' → logprob: -12.375605583190918
    5. '   ' → logprob: -12.625605583190918
    6. 'pre' → logprob: -13.125605583190918
    7. 'prec' → logprob: -13.875605583190918
    8. '(' → logprob: -14.125605583190918
    9. ' (' → logprob: -15.375605583190918
    10. '           ' → logprob: -15.375605583190918

Token 3280: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.09705095738172531
    2. 'operator' → logprob: -2.472050905227661
    3. ' operator' → logprob: -5.34705114364624
    4. '(' → logprob: -5.97205114364624
    5. '(
' → logprob: -8.472050666809082
    6. '	operator' → logprob: -8.847050666809082
    7. '('' → logprob: -9.222050666809082
    8. ' ' → logprob: -9.722050666809082
    9. '[' → logprob: -9.972050666809082
    10. ''' → logprob: -10.222050666809082

Token 3281: '_stack' (ID: 35650)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.020876428112387657
    2. '_stack' → logprob: -3.895876407623291
    3. 'operator' → logprob: -9.89587688446045
    4. 'Stack' → logprob: -10.02087688446045
    5. 'stack' → logprob: -10.27087688446045
    6. '```' → logprob: -10.27087688446045
    7. ')' → logprob: -10.39587688446045
    8. '   ' → logprob: -10.52087688446045
    9. '[' → logprob: -10.77087688446045
    10. '_operator' → logprob: -11.02087688446045

Token 3282: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. '][-' → logprob: -15.250000953674316
    3. '[len' → logprob: -16.0
    4. '```' → logprob: -16.125
    5. '   ' → logprob: -16.5
    6. ' [-' → logprob: -16.625
    7. '[' → logprob: -17.125
    8. '`' → logprob: -17.375
    9. '[
' → logprob: -17.5
    10. '           ' → logprob: -18.5

Token 3283: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0047419723123312
    2. '[-' → logprob: -5.75474214553833
    3. '1' → logprob: -7.00474214553833
    4. ' -' → logprob: -7.87974214553833
    5. '(-' → logprob: -8.629741668701172
    6. '```' → logprob: -10.129741668701172
    7. '])' → logprob: -11.254741668701172
    8. '   ' → logprob: -12.004741668701172
    9. '][-' → logprob: -12.004741668701172
    10. ')' → logprob: -12.504741668701172

Token 3284: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02637624368071556
    2. ' )' → logprob: -3.651376247406006
    3. ')>=' → logprob: -9.651375770568848
    4. '[' → logprob: -12.526375770568848
    5. ')>' → logprob: -13.151375770568848
    6. ']' → logprob: -13.901375770568848
    7. '')' → logprob: -14.026375770568848
    8. '())' → logprob: -14.151375770568848
    9. '])' → logprob: -14.651375770568848
    10. ')
' → logprob: -15.026375770568848

Token 3285: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.02057598903775215
    2. '>=' → logprob: -3.895576000213623
    3. ')>=' → logprob: -11.145575523376465
    4. '```' → logprob: -12.395575523376465
    5. '[' → logprob: -12.520575523376465
    6. ']>=' → logprob: -12.645575523376465
    7. ' ' → logprob: -12.895575523376465
    8. ')' → logprob: -13.270575523376465
    9. '            ' → logprob: -13.520575523376465
    10. '    ' → logprob: -14.395575523376465

Token 3286: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -2.339278580620885e-06
    2. ' precedence' → logprob: -13.000001907348633
    3. 'prec' → logprob: -18.875001907348633
    4. 'prefix' → logprob: -20.500001907348633
    5. '           ' → logprob: -22.250001907348633
    6. ' preced' → logprob: -22.250001907348633
    7. 'prepend' → logprob: -22.375001907348633
    8. 'pre' → logprob: -22.750001907348633
    9. '
' → logprob: -23.250001907348633
    10. '1' → logprob: -23.500001907348633

Token 3287: '(tok' (ID: 182089)
  Prédit: '(tok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tok' → logprob: -0.023106880486011505
    2. '(' → logprob: -4.648107051849365
    3. 'tok' → logprob: -4.773107051849365
    4. '('' → logprob: -5.898107051849365
    5. ' tok' → logprob: -6.398107051849365
    6. ' (' → logprob: -8.523106575012207
    7. '(token' → logprob: -9.648106575012207
    8. '(
' → logprob: -10.398106575012207
    9. ''' → logprob: -10.523106575012207
    10. '(t' → logprob: -10.773106575012207

Token 3288: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006701989099383354
    2. '):' → logprob: -5.756701946258545
    3. '               ' → logprob: -6.631701946258545
    4. ')' → logprob: -6.881701946258545
    5. ' ):
' → logprob: -7.006701946258545
    6. '                   ' → logprob: -9.006702423095703
    7. ' and' → logprob: -10.381702423095703
    8. ':
' → logprob: -10.381702423095703
    9. '           ' → logprob: -10.881702423095703
    10. ''):
' → logprob: -11.006702423095703

Token 3289: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6823109984397888
    2. '                   ' → logprob: -0.9323109984397888
    3. '               ' → logprob: -3.1823110580444336
    4. 'operator' → logprob: -3.6823110580444336
    5. ':
' → logprob: -3.8073110580444336
    6. 'and' → logprob: -4.932311058044434
    7. ' operator' → logprob: -6.057311058044434
    8. ':' → logprob: -7.557311058044434
    9. '):
' → logprob: -7.682311058044434
    10. '                       ' → logprob: -7.807311058044434

Token 3290: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' (adapté à ' op') → logprob: -0.06205350160598755
    2. ' op' → logprob: -2.8120534420013428
    3. '	op' → logprob: -9.937053680419922
    4. 'top' → logprob: -11.562053680419922
    5. 'operator' → logprob: -11.562053680419922
    6. '           ' → logprob: -11.937053680419922
    7. '               ' → logprob: -12.812053680419922
    8. '   ' → logprob: -13.562053680419922
    9. 'pop' → logprob: -13.562053680419922
    10. 'oper' → logprob: -13.562053680419922

Token 3291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11285584419965744
    2. '=' → logprob: -2.237855911254883
    3. '_token' → logprob: -10.612855911254883
    4. 'token' → logprob: -12.987855911254883
    5. '_stack' → logprob: -12.987855911254883
    6. ')' → logprob: -13.612855911254883
    7. 's' → logprob: -14.987855911254883
    8. '	' → logprob: -14.987855911254883
    9. '   ' → logprob: -14.987855911254883
    10. '_tokens' → logprob: -15.112855911254883

Token 3292: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.0380525141954422
    2. ' operator' → logprob: -3.288052558898926
    3. '	operator' → logprob: -11.913052558898926
    4. '(operator' → logprob: -12.413052558898926
    5. '.operator' → logprob: -15.413052558898926
    6. '                   ' → logprob: -17.16305160522461
    7. ' ' → logprob: -17.66305160522461
    8. ' operador' → logprob: -18.03805160522461
    9. '_operator' → logprob: -18.78805160522461
    10. 'operation' → logprob: -19.41305160522461

Token 3293: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -1.8074162653647363e-05
    2. 'stack' → logprob: -11.250018119812012
    3. '_STACK' → logprob: -13.250018119812012
    4. '[-' → logprob: -13.750018119812012
    5. 'Stack' → logprob: -13.875018119812012
    6. 's' → logprob: -14.375018119812012
    7. '           ' → logprob: -16.125017166137695
    8. '   ' → logprob: -16.500017166137695
    9. ' =' → logprob: -16.750017166137695
    10. '=' → logprob: -16.750017166137695

Token 3294: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.16026577353477478
    2. '[-' → logprob: -1.9102658033370972
    3. 'pop' → logprob: -10.160265922546387
    4. '][-' → logprob: -13.410265922546387
    5. '   ' → logprob: -14.660265922546387
    6. '.' → logprob: -15.285265922546387
    7. '       ' → logprob: -15.410265922546387
    8. ' pop' → logprob: -16.03526496887207
    9. '           ' → logprob: -16.41026496887207
    10. '	pop' → logprob: -16.53526496887207

Token 3295: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1731744259595871
    2. ')
' → logprob: -2.6731743812561035
    3. '                   ' → logprob: -3.0481743812561035
    4. 'output' → logprob: -4.2981743812561035
    5. '(output' → logprob: -4.9231743812561035
    6. '           ' → logprob: -5.0481743812561035
    7. '               ' → logprob: -5.4231743812561035
    8. '       ' → logprob: -5.9231743812561035
    9. '()' → logprob: -6.5481743812561035
    10. '()
' → logprob: -6.5481743812561035

Token 3296: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010493654757738113
    2. '               ' → logprob: -4.760493755340576
    3. '                       ' → logprob: -7.385493755340576
    4. '           ' → logprob: -7.510493755340576
    5. ')' → logprob: -8.760493278503418
    6. '       ' → logprob: -9.385493278503418
    7. '                    
' → logprob: -9.510493278503418
    8. '                    ' → logprob: -10.135493278503418
    9. '   ' → logprob: -10.385493278503418
    10. ' a' → logprob: -10.385493278503418

Token 3297: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.13799087703227997
    2. '                   ' → logprob: -2.137990951538086
    3. 'right' → logprob: -4.762990951538086
    4. ' b' → logprob: -7.137990951538086
    5. '               ' → logprob: -7.512990951538086
    6. '                       ' → logprob: -7.637990951538086
    7. ' right' → logprob: -8.262990951538086
    8. 'rhs' → logprob: -8.637990951538086
    9. 'if' → logprob: -9.137990951538086
    10. 'val' → logprob: -10.262990951538086

Token 3298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5103945732116699
    2. '=' → logprob: -1.01039457321167
    3. ')' → logprob: -3.76039457321167
    4. '<|end|>' → logprob: -5.01039457321167
    5. ',' → logprob: -6.13539457321167
    6. '           ' → logprob: -7.26039457321167
    7. ')
' → logprob: -7.51039457321167
    8. '               ' → logprob: -7.63539457321167
    9. ' ' → logprob: -8.135395050048828
    10. '       ' → logprob: -8.885395050048828

Token 3299: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0024756586644798517
    2. ' output' → logprob: -6.002475738525391
    3. '	output' → logprob: -18.87747573852539
    4. '(output' → logprob: -18.87747573852539
    5. '$output' → logprob: -19.75247573852539
    6. '_output' → logprob: -21.37747573852539
    7. '   ' → logprob: -21.62747573852539
    8. 'Output' → logprob: -21.87747573852539
    9. '.output' → logprob: -23.25247573852539
    10. ' ' → logprob: -23.62747573852539

Token 3300: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.007267732638865709
    2. 'output' → logprob: -5.132267951965332
    3. '_stack' → logprob: -7.507267951965332
    4. 'Queue' → logprob: -8.007267951965332
    5. '.pop' → logprob: -9.132267951965332
    6. '_output' → logprob: -9.257267951965332
    7. 'queue' → logprob: -9.257267951965332
    8. ' output' → logprob: -10.757267951965332
    9. '(output' → logprob: -10.757267951965332
    10. 'pop' → logprob: -10.757267951965332

Token 3301: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.975612187583465e-05
    2. 'pop' → logprob: -11.000029563903809
    3. '.' → logprob: -11.500029563903809
    4. ' .' → logprob: -14.000029563903809
    5. '[-' → logprob: -14.000029563903809
    6. '   ' → logprob: -14.500029563903809
    7. '_pop' → logprob: -15.125029563903809
    8. '.append' → logprob: -15.500029563903809
    9. ' pop' → logprob: -16.500030517578125
    10. '	pop' → logprob: -16.750030517578125

Token 3302: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.1262071281671524
    2. '()' → logprob: -2.376207113265991
    3. '                   ' → logprob: -4.00120735168457
    4. ')
' → logprob: -5.25120735168457
    5. ')' → logprob: -6.75120735168457
    6. '               ' → logprob: -7.62620735168457
    7. '                       ' → logprob: -9.00120735168457
    8. '           ' → logprob: -9.62620735168457
    9. '())
' → logprob: -9.75120735168457
    10. '       ' → logprob: -10.25120735168457

Token 3303: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01612844690680504
    2. 'a' → logprob: -4.7661285400390625
    3. '               ' → logprob: -6.1411285400390625
    4. ' a' → logprob: -6.2661285400390625
    5. '                    ' → logprob: -6.5161285400390625
    6. '           ' → logprob: -7.2661285400390625
    7. '```' → logprob: -7.7661285400390625
    8. '                       ' → logprob: -8.391128540039062
    9. ' ' → logprob: -9.516128540039062
    10. '                ' → logprob: -9.516128540039062

Token 3304: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.3869536221027374
    2. ' a' → logprob: -1.136953592300415
    3. '                   ' → logprob: -10.136953353881836
    4. '```' → logprob: -11.636953353881836
    5. '                    ' → logprob: -11.761953353881836
    6. ' ' → logprob: -12.011953353881836
    7. '	a' → logprob: -12.011953353881836
    8. ' ' → logprob: -12.886953353881836
    9. '               ' → logprob: -13.511953353881836
    10. '                ' → logprob: -13.511953353881836

Token 3305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06722495704889297
    2. '=' → logprob: -2.8172249794006348
    3. '                ' → logprob: -6.942224979400635
    4. '                   ' → logprob: -6.942224979400635
    5. '               ' → logprob: -7.442224979400635
    6. ')' → logprob: -7.942224979400635
    7. '.pop' → logprob: -7.942224979400635
    8. '                    ' → logprob: -8.067224502563477
    9. '```' → logprob: -8.192224502563477
    10. '<|end|>' → logprob: -8.692224502563477

Token 3306: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.011047814972698689
    2. ' output' → logprob: -4.511047840118408
    3. '(output' → logprob: -17.26104736328125
    4. '	output' → logprob: -18.38604736328125
    5. '_output' → logprob: -18.88604736328125
    6. '$output' → logprob: -19.01104736328125
    7. 'Output' → logprob: -19.51104736328125
    8. '.output' → logprob: -21.88604736328125
    9. 'OUTPUT' → logprob: -22.13604736328125
    10. 'out' → logprob: -22.38604736328125

Token 3307: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.5332478142227046e-05
    2. '_stack' → logprob: -11.625015258789062
    3. '_output' → logprob: -12.750015258789062
    4. 'Queue' → logprob: -13.250015258789062
    5. '_' → logprob: -15.125015258789062
    6. '_QUEUE' → logprob: -15.125015258789062
    7. ' _' → logprob: -15.625015258789062
    8. '```' → logprob: -15.750015258789062
    9. '`' → logprob: -16.250015258789062
    10. '   ' → logprob: -16.500015258789062

Token 3308: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.607391408877447e-05
    2. '.' → logprob: -10.500036239624023
    3. 'pop' → logprob: -11.875036239624023
    4. '.append' → logprob: -14.000036239624023
    5. ' .' → logprob: -15.000036239624023
    6. '[-' → logprob: -16.125036239624023
    7. '_pop' → logprob: -16.500036239624023
    8. '	pop' → logprob: -17.125036239624023
    9. ' pop' → logprob: -17.375036239624023
    10. '   ' → logprob: -17.625036239624023

Token 3309: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021367352455854416
    2. ')' → logprob: -3.896367311477661
    3. ')
' → logprob: -7.77136754989624
    4. '<|end|>' → logprob: -9.271367073059082
    5. '):
' → logprob: -9.646367073059082
    6. '               ' → logprob: -9.646367073059082
    7. '                       ' → logprob: -9.771367073059082
    8. '```' → logprob: -10.646367073059082
    9. '           ' → logprob: -10.771367073059082
    10. '       ' → logprob: -11.021367073059082

Token 3310: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008804962271824479
    2. '                       ' → logprob: -8.250880241394043
    3. ')' → logprob: -8.625880241394043
    4. '```' → logprob: -9.500880241394043
    5. '               ' → logprob: -9.750880241394043
    6. 'output' → logprob: -10.000880241394043
    7. '           ' → logprob: -10.375880241394043
    8. ' op' → logprob: -10.375880241394043
    9. ' output' → logprob: -10.625880241394043
    10. '       ' → logprob: -10.750880241394043

Token 3311: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.33299264311790466
    2. 'result' → logprob: -1.832992672920227
    3. ' output' → logprob: -2.5829925537109375
    4. ' result' → logprob: -3.8329925537109375
    5. 'res' → logprob: -4.0829925537109375
    6. '                   ' → logprob: -5.3329925537109375
    7. ' res' → logprob: -5.7079925537109375
    8. 'c' → logprob: -8.457992553710938
    9. '           ' → logprob: -8.582992553710938
    10. '               ' → logprob: -8.707992553710938

Token 3312: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.0009365935111418366
    2. '_stack' → logprob: -8.000936508178711
    3. '                   ' → logprob: -8.500936508178711
    4. '           ' → logprob: -9.000936508178711
    5. '               ' → logprob: -9.000936508178711
    6. '.append' → logprob: -9.500936508178711
    7. '       ' → logprob: -11.000936508178711
    8. 'Queue' → logprob: -11.500936508178711
    9. '   ' → logprob: -11.625936508178711
    10. ' =' → logprob: -11.750936508178711

Token 3313: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005320638883858919
    2. '=' → logprob: -7.750532150268555
    3. '.' → logprob: -9.625532150268555
    4. ' =' → logprob: -11.875532150268555
    5. '.pop' → logprob: -11.875532150268555
    6. '                   ' → logprob: -12.625532150268555
    7. '_append' → logprob: -12.625532150268555
    8. '.extend' → logprob: -12.875532150268555
    9. 'append' → logprob: -13.000532150268555
    10. '.insert' → logprob: -13.375532150268555

Token 3314: '(app' (ID: 21667)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.030800651758909225
    2. ' apply' → logprob: -3.5308005809783936
    3. 'a' → logprob: -7.155800819396973
    4. '(app' → logprob: -8.530800819396973
    5. 'app' → logprob: -9.905800819396973
    6. ' a' → logprob: -10.905800819396973
    7. '(a' → logprob: -13.280800819396973
    8. '.apply' → logprob: -13.905800819396973
    9. 'ap' → logprob: -14.655800819396973
    10. '   ' → logprob: -15.280800819396973

Token 3315: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -2.696889623621246e-06
    2. 'y' → logprob: -12.87500286102295
    3. 'l' → logprob: -17.625001907348633
    4. 'end' → logprob: -18.250001907348633
    5. 'a' → logprob: -19.375001907348633
    6. '
' → logprob: -19.875001907348633
    7. 'lys' → logprob: -20.125001907348633
    8. 'ply' → logprob: -20.125001907348633
    9. 'lyph' → logprob: -20.375001907348633
    10. 'yly' → logprob: -20.375001907348633

Token 3316: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.03585899621248245
    2. '(a' → logprob: -3.9108591079711914
    3. '(' → logprob: -4.410859107971191
    4. '(op' → logprob: -6.160859107971191
    5. '(_' → logprob: -7.910859107971191
    6. '_' → logprob: -8.160859107971191
    7. ' (' → logprob: -9.660859107971191
    8. '(
' → logprob: -9.785859107971191
    9. '_(' → logprob: -10.410859107971191
    10. 'op' → logprob: -10.535859107971191

Token 3317: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.016241982579231262
    2. '(' → logprob: -4.141242027282715
    3. 'a' → logprob: -8.641242027282715
    4. '(
' → logprob: -11.016242027282715
    5. ' (' → logprob: -11.266242027282715
    6. ')' → logprob: -14.266242027282715
    7. ' a' → logprob: -14.891242027282715
    8. '   ' → logprob: -15.641242027282715
    9. '```' → logprob: -16.1412410736084
    10. ' ' → logprob: -16.1412410736084

Token 3318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013514261227101088
    2. ' ,' → logprob: -7.001351356506348
    3. ',b' → logprob: -7.751351356506348
    4. ',
' → logprob: -12.251351356506348
    5. ',p' → logprob: -14.251351356506348
    6. ' ' → logprob: -14.626351356506348
    7. ',a' → logprob: -15.001351356506348
    8. '```' → logprob: -15.001351356506348
    9. '`,' → logprob: -15.126351356506348
    10. ',user' → logprob: -15.251351356506348

Token 3319: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.62520408630371
    4. '
' → logprob: -20.62520408630371
    5. '    ' → logprob: -20.62520408630371
    6. '       ' → logprob: -21.00020408630371
    7. ')b' → logprob: -21.37520408630371
    8. ' ' → logprob: -21.50020408630371
    9. '	b' → logprob: -21.50020408630371
    10. '           ' → logprob: -21.87520408630371

Token 3320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -12.625009536743164
    3. ',
' → logprob: -13.000009536743164
    4. ')' → logprob: -14.000009536743164
    5. ',p' → logprob: -14.375009536743164
    6. ',b' → logprob: -14.750009536743164
    7. ',user' → logprob: -15.125009536743164
    8. ',opt' → logprob: -15.250009536743164
    9. '<|end|>' → logprob: -15.625009536743164
    10. '```' → logprob: -15.750009536743164

Token 3321: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00033546582562848926
    2. ' op' → logprob: -8.000335693359375
    3. '_op' → logprob: -18.375335693359375
    4. '	op' → logprob: -18.500335693359375
    5. '(op' → logprob: -19.000335693359375
    6. ')' → logprob: -19.250335693359375
    7. 'opt' → logprob: -20.000335693359375
    8. ''op' → logprob: -20.750335693359375
    9. 'ops' → logprob: -21.125335693359375
    10. 'Op' → logprob: -21.125335693359375

Token 3322: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20518894493579865
    2. '))' → logprob: -1.7051889896392822
    3. '))
' → logprob: -5.955188751220703
    4. '               ' → logprob: -7.455188751220703
    5. ')
' → logprob: -7.705188751220703
    6. '                   ' → logprob: -8.955188751220703
    7. '           ' → logprob: -11.705188751220703
    8. ')))' → logprob: -12.330188751220703
    9. '       ' → logprob: -13.330188751220703
    10. '                       ' → logprob: -14.080188751220703

Token 3323: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.290784560609609e-05
    2. '                   ' → logprob: -10.125072479248047
    3. '                
' → logprob: -11.375072479248047
    4. 'operator' → logprob: -11.625072479248047
    5. '```' → logprob: -12.500072479248047
    6. '
' → logprob: -13.250072479248047
    7. '           ' → logprob: -13.250072479248047
    8. ' operator' → logprob: -14.250072479248047
    9. '                ' → logprob: -14.625072479248047
    10. '                       ' → logprob: -14.625072479248047

Token 3324: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' (adapté à ' operator') → logprob: -0.08966400474309921
    2. '               ' → logprob: -3.0896639823913574
    3. ' operator' → logprob: -3.2146639823913574
    4. '           ' → logprob: -10.839664459228516
    5. '(operator' → logprob: -10.839664459228516
    6. '```' → logprob: -11.714664459228516
    7. '                   ' → logprob: -11.964664459228516
    8. '	operator' → logprob: -12.089664459228516
    9. '_operator' → logprob: -12.714664459228516
    10. '.operator' → logprob: -12.964664459228516

Token 3325: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -2.117345684382599e-05
    2. '_' → logprob: -11.125020980834961
    3. '_STACK' → logprob: -12.750020980834961
    4. 'Stack' → logprob: -13.875020980834961
    5. 'stack' → logprob: -13.875020980834961
    6. 's' → logprob: -15.125020980834961
    7. '.stack' → logprob: -15.375020980834961
    8. '	stack' → logprob: -15.500020980834961
    9. '.append' → logprob: -16.00002098083496
    10. ' =' → logprob: -16.25002098083496

Token 3326: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014718334190547466
    2. '.' → logprob: -4.264718532562256
    3. '.pop' → logprob: -7.514718532562256
    4. ' .' → logprob: -11.889718055725098
    5. '.app' → logprob: -13.389718055725098
    6. '.push' → logprob: -14.264718055725098
    7. 'append' → logprob: -15.389718055725098
    8. '_append' → logprob: -16.139719009399414
    9. '.Append' → logprob: -16.389719009399414
    10. '.ap' → logprob: -16.889719009399414

Token 3327: '(tok' (ID: 182089)
  Prédit: '(tok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tok' → logprob: -0.018156498670578003
    2. 'tok' → logprob: -4.0181565284729
    3. ' tok' → logprob: -12.643156051635742
    4. '(' → logprob: -12.893156051635742
    5. '_tok' → logprob: -14.768156051635742
    6. 'Tok' → logprob: -15.518156051635742
    7. '(t' → logprob: -16.268156051635742
    8. '(token' → logprob: -16.518156051635742
    9. 'token' → logprob: -16.768156051635742
    10. 'to' → logprob: -17.518156051635742

Token 3328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006604921072721481
    2. ')
' → logprob: -8.50066089630127
    3. '           ' → logprob: -8.62566089630127
    4. '<|end|>' → logprob: -8.75066089630127
    5. '<|end|>' → logprob: -9.75066089630127
    6. ' )' → logprob: -10.62566089630127
    7. '               ' → logprob: -11.75066089630127
    8. '       ' → logprob: -12.12566089630127
    9. ')return' → logprob: -12.75066089630127
    10. '[' → logprob: -12.87566089630127

Token 3329: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012737659562844783
    2. 'i' → logprob: -9.500127792358398
    3. '               ' → logprob: -10.500127792358398
    4. '       ' → logprob: -11.000127792358398
    5. '		' → logprob: -13.375127792358398
    6. '```' → logprob: -13.375127792358398
    7. ' i' → logprob: -13.625127792358398
    8. '   ' → logprob: -13.625127792358398
    9. '                   ' → logprob: -14.375127792358398
    10. '	       ' → logprob: -14.750127792358398

Token 3330: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013250234769657254
    2. 'i' → logprob: -9.37513256072998
    3. ' i' → logprob: -10.50013256072998
    4. '       ' → logprob: -11.12513256072998
    5. '   ' → logprob: -13.25013256072998
    6. '<|end|>' → logprob: -14.37513256072998
    7. '
' → logprob: -14.50013256072998
    8. '		' → logprob: -14.75013256072998
    9. '	       ' → logprob: -15.12513256072998
    10. '               ' → logprob: -15.37513256072998

Token 3331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3532932698726654
    2. ':
' → logprob: -1.2282932996749878
    3. '               ' → logprob: -6.228293418884277
    4. '           ' → logprob: -6.353293418884277
    5. ':return' → logprob: -8.603293418884277
    6. '            ' → logprob: -8.728293418884277
    7. '<|end|>' → logprob: -9.228293418884277
    8. '[' → logprob: -9.603293418884277
    9. ' :' → logprob: -9.728293418884277
    10. ' :
' → logprob: -9.978293418884277

Token 3332: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031252045184373856
    2. '           ' → logprob: -3.531252145767212
    3. '                   ' → logprob: -7.531251907348633
    4. ' raise' → logprob: -7.906251907348633
    5. 'raise' → logprob: -8.531251907348633
    6. ':
' → logprob: -9.281251907348633
    7. '   ' → logprob: -9.531251907348633
    8. '            ' → logprob: -10.031251907348633
    9. '                       ' → logprob: -10.781251907348633
    10. '       ' → logprob: -10.781251907348633

Token 3333: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.4306909739971161
    2. '               ' → logprob: -1.1806910037994385
    3. '                   ' → logprob: -3.9306910037994385
    4. ' raise' → logprob: -4.305690765380859
    5. 'break' → logprob: -5.180690765380859
    6. '           ' → logprob: -5.680690765380859
    7. 'return' → logprob: -8.18069076538086
    8. '   ' → logprob: -9.30569076538086
    9. ' break' → logprob: -9.30569076538086
    10. '                ' → logprob: -9.43069076538086

Token 3334: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.02975720353424549
    2. ' Value' → logprob: -3.529757261276245
    3. 'Syntax' → logprob: -12.279757499694824
    4. 'Runtime' → logprob: -13.404757499694824
    5. '(Value' → logprob: -15.279757499694824
    6. '_value' → logprob: -16.404756546020508
    7. 'Exception' → logprob: -16.404756546020508
    8. ' Runtime' → logprob: -16.654756546020508
    9. '_Value' → logprob: -17.654756546020508
    10. '<Value' → logprob: -18.404756546020508

Token 3335: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.029800597578287125
    2. 'rror' → logprob: -3.5298006534576416
    3. 'Value' → logprob: -10.154800415039062
    4. 'Token' → logprob: -12.279800415039062
    5. 'SError' → logprob: -13.029800415039062
    6. '_error' → logprob: -13.154800415039062
    7. 'LError' → logprob: -14.654800415039062
    8. 'error' → logprob: -15.279800415039062
    9. 'ERROR' → logprob: -15.279800415039062
    10. 'Val' → logprob: -15.529800415039062

Token 3336: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.053786978125572205
    2. '('' → logprob: -3.3037869930267334
    3. '(' → logprob: -4.303786754608154
    4. '("' → logprob: -6.178786754608154
    5. 'f' → logprob: -10.928787231445312
    6. '(
' → logprob: -11.303787231445312
    7. '("'' → logprob: -14.678787231445312
    8. '(F' → logprob: -15.053787231445312
    9. '("("' → logprob: -16.053787231445312
    10. ' f' → logprob: -16.178787231445312

Token 3337: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7863290309906006
    2. ' f' → logprob: -1.2863290309906006
    3. ''' → logprob: -1.4113290309906006
    4. '"' → logprob: -3.9113290309906006
    5. '(f' → logprob: -5.91132926940918
    6. 'Unexpected' → logprob: -6.66132926940918
    7. ' Unexpected' → logprob: -9.16132926940918
    8. ''f' → logprob: -9.53632926940918
    9. 'Invalid' → logprob: -9.66132926940918
    10. '           ' → logprob: -10.78632926940918

Token 3338: 'Unknown' (ID: 24560)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7843996286392212
    2. 'Invalid' → logprob: -1.1593996286392212
    3. '"' → logprob: -2.0343995094299316
    4. 'Unexpected' → logprob: -3.1593995094299316
    5. ' f' → logprob: -3.5343995094299316
    6. 'Unknown' → logprob: -4.534399509429932
    7. 'f' → logprob: -5.159399509429932
    8. ' Invalid' → logprob: -5.534399509429932
    9. 'Syntax' → logprob: -6.409399509429932
    10. 'Value' → logprob: -6.909399509429932

Token 3339: ' token' (ID: 6602)
  Prédit: ' token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.03266376256942749
    2. 'token' → logprob: -3.6576638221740723
    3. '_token' → logprob: -6.032663822174072
    4. ' ' → logprob: -6.657663822174072
    5. ' operator' → logprob: -6.657663822174072
    6. ' Token' → logprob: -7.407663822174072
    7. 'operator' → logprob: -8.657663345336914
    8. ' character' → logprob: -8.657663345336914
    9. 'Token' → logprob: -9.157663345336914
    10. ' tok' → logprob: -9.532663345336914

Token 3340: ' {' (ID: 354)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0368742942810059
    2. '           ' → logprob: -1.5368742942810059
    3. '(tok' → logprob: -1.6618742942810059
    4. ' f' → logprob: -3.161874294281006
    5. ' '' → logprob: -3.286874294281006
    6. '               ' → logprob: -3.411874294281006
    7. ' tok' → logprob: -3.536874294281006
    8. ' {' → logprob: -3.911874294281006
    9. '            ' → logprob: -4.911874294281006
    10. '(token' → logprob: -5.036874294281006

Token 3341: 'tok' (ID: 43620)
  Prédit: 'tok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.30031996965408325
    2. '{' → logprob: -1.8003199100494385
    3. ' tok' → logprob: -2.5503199100494385
    4. '(tok' → logprob: -4.800320148468018
    5. ' {' → logprob: -4.925320148468018
    6. 'token' → logprob: -8.42531967163086
    7. '}' → logprob: -8.80031967163086
    8. ''' → logprob: -9.42531967163086
    9. ''{' → logprob: -9.55031967163086
    10. '_tok' → logprob: -10.55031967163086

Token 3342: '}")
' (ID: 23577)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.17165642976760864
    2. ')' → logprob: -2.171656370162964
    3. '}")' → logprob: -3.671656370162964
    4. ')")
' → logprob: -4.171656608581543
    5. '")' → logprob: -5.921656608581543
    6. '}")
' → logprob: -10.046656608581543
    7. '}' → logprob: -10.171656608581543
    8. '       ' → logprob: -10.671656608581543
    9. '           ' → logprob: -10.921656608581543
    10. '')' → logprob: -10.921656608581543

Token 3343: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.46681639552116394
    2. '           ' → logprob: -1.2168164253234863
    3. '
' → logprob: -3.7168164253234863
    4. '   ' → logprob: -3.9668164253234863
    5. '       ' → logprob: -4.341816425323486
    6. ' i' → logprob: -4.591816425323486
    7. '```' → logprob: -5.966816425323486
    8. '	i' → logprob: -6.591816425323486
    9. '{i' → logprob: -6.716816425323486
    10. '    
' → logprob: -6.841816425323486

Token 3344: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.27917423844337463
    2. '           ' → logprob: -1.9041742086410522
    3. '
' → logprob: -3.154174327850342
    4. '   ' → logprob: -3.904174327850342
    5. ' i' → logprob: -4.154174327850342
    6. '       ' → logprob: -4.404174327850342
    7. '	i' → logprob: -7.029174327850342
    8. '\n' → logprob: -7.529174327850342
    9. '    
' → logprob: -7.654174327850342
    10. '```' → logprob: -7.904174327850342

Token 3345: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018163636326789856
    2. ' +=' → logprob: -4.018163681030273
    3. '   ' → logprob: -11.768163681030273
    4. ']+=' → logprob: -12.393163681030273
    5. '           ' → logprob: -14.768163681030273
    6. '=' → logprob: -15.018163681030273
    7. '    ' → logprob: -15.018163681030273
    8. '       ' → logprob: -15.268163681030273
    9. '```' → logprob: -15.268163681030273
    10. '+' → logprob: -16.143163681030273

Token 3346: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -20.75000762939453
    4. '１' → logprob: -22.87500762939453
    5. '   ' → logprob: -23.00000762939453
    6. '۱' → logprob: -23.12500762939453
    7. '<|end|>' → logprob: -23.75000762939453
    8. '
' → logprob: -24.00000762939453
    9. '`' → logprob: -24.75000762939453
    10. '१' → logprob: -24.87500762939453

Token 3347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '0' → logprob: -21.5
    4. '```' → logprob: -23.0
    5. '１' → logprob: -23.625
    6. '   ' → logprob: -25.125
    7. '`' → logprob: -25.5
    8. '۱' → logprob: -25.5
    9. '#' → logprob: -26.125
    10. '+' → logprob: -26.5

Token 3348: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03828912228345871
    2. '
' → logprob: -3.2882890701293945
    3. '        
' → logprob: -8.538289070129395
    4. 'while' → logprob: -10.538289070129395
    5. '

' → logprob: -12.163289070129395
    6. ')
' → logprob: -12.538289070129395
    7. '```' → logprob: -12.538289070129395
    8. '
' → logprob: -12.913289070129395
    9. '    
' → logprob: -13.288289070129395
    10. ')' → logprob: -13.288289070129395

Token 3349: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06339266151189804
    2. '       ' → logprob: -2.8133926391601562
    3. 'While' → logprob: -7.438392639160156
    4. '#' → logprob: -7.688392639160156
    5. ' while' → logprob: -8.563392639160156
    6. '
' → logprob: -8.688392639160156
    7. '        
' → logprob: -11.938392639160156
    8. '```' → logprob: -12.438392639160156
    9. '	while' → logprob: -12.563392639160156
    10. '   ' → logprob: -13.188392639160156

Token 3350: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.000182921823579818
    2. ' while' → logprob: -8.75018310546875
    3. '       ' → logprob: -11.50018310546875
    4. '   ' → logprob: -11.75018310546875
    5. 'While' → logprob: -12.50018310546875
    6. '	while' → logprob: -12.87518310546875
    7. '```' → logprob: -15.75018310546875
    8. '#' → logprob: -17.87518310546875
    9. 'for' → logprob: -18.12518310546875
    10. '
' → logprob: -18.37518310546875

Token 3351: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.0007142199319787323
    2. ' operator' → logprob: -7.250714302062988
    3. 'len' → logprob: -12.750714302062988
    4. '(operator' → logprob: -13.625714302062988
    5. ' len' → logprob: -17.625713348388672
    6. '   ' → logprob: -17.625713348388672
    7. '	operator' → logprob: -17.625713348388672
    8. ' ' → logprob: -19.000713348388672
    9. '.operator' → logprob: -20.375713348388672
    10. 'operation' → logprob: -20.625713348388672

Token 3352: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -2.2127087504486553e-05
    2. 'stack' → logprob: -11.125021934509277
    3. '_' → logprob: -12.750021934509277
    4. 's' → logprob: -13.000021934509277
    5. 'Stack' → logprob: -14.250021934509277
    6. '_st' → logprob: -14.625021934509277
    7. '_operator' → logprob: -14.750021934509277
    8. '```' → logprob: -15.125021934509277
    9. '_STACK' → logprob: -15.875021934509277
    10. '_queue' → logprob: -16.750022888183594

Token 3353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2520315647125244
    2. ':
' → logprob: -1.5020315647125244
    3. 'and' → logprob: -9.752031326293945
    4. ' and' → logprob: -10.877031326293945
    5. '):
' → logprob: -11.502031326293945
    6. '!=' → logprob: -12.627031326293945
    7. '.pop' → logprob: -13.377031326293945
    8. '[::-' → logprob: -13.377031326293945
    9. '>' → logprob: -13.627031326293945
    10. '[-' → logprob: -13.752031326293945

Token 3354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2881094813346863
    2. 'op' → logprob: -1.913109540939331
    3. ' op' → logprob: -2.288109540939331
    4. ':
' → logprob: -7.913109302520752
    5. '	op' → logprob: -8.16310977935791
    6. '(op' → logprob: -8.28810977935791
    7. '   ' → logprob: -9.03810977935791
    8. '_op' → logprob: -9.28810977935791
    9. '.op' → logprob: -10.16310977935791
    10. ':' → logprob: -10.78810977935791

Token 3355: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' (adapté à ' op') → logprob: -0.023422496393322945
    2. ' op' → logprob: -3.7734224796295166
    3. '           ' → logprob: -8.648422241210938
    4. '	op' → logprob: -13.648422241210938
    5. '_op' → logprob: -15.398422241210938
    6. '(op' → logprob: -16.398422241210938
    7. '.op' → logprob: -16.773422241210938
    8. 'operator' → logprob: -17.023422241210938
    9. '   ' → logprob: -17.773422241210938
    10. '               ' → logprob: -18.023422241210938

Token 3356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931476593017578
    2. ' =' → logprob: -0.6931476593017578
    3. '   ' → logprob: -15.568147659301758
    4. '=
' → logprob: -15.818147659301758
    5. 'op' → logprob: -15.943147659301758
    6. ' ' → logprob: -17.443147659301758
    7. ' =
' → logprob: -18.068147659301758
    8. ' op' → logprob: -18.443147659301758
    9. '       ' → logprob: -18.693147659301758
    10. '_op' → logprob: -18.818147659301758

Token 3357: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.0005538671393878758
    2. ' operator' → logprob: -7.500554084777832
    3. '(operator' → logprob: -14.875554084777832
    4. '	operator' → logprob: -14.875554084777832
    5. '.operator' → logprob: -16.125553131103516
    6. '_operator' → logprob: -18.000553131103516
    7. 'operation' → logprob: -18.375553131103516
    8. 'op' → logprob: -18.750553131103516
    9. 'stack' → logprob: -19.875553131103516
    10. '`' → logprob: -20.250553131103516

Token 3358: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0026741146575659513
    2. 'stack' → logprob: -6.002674102783203
    3. '_operator' → logprob: -9.127674102783203
    4. 'operator' → logprob: -9.377674102783203
    5. 's' → logprob: -13.127674102783203
    6. '[-' → logprob: -13.752674102783203
    7. 'Stack' → logprob: -14.127674102783203
    8. '.pop' → logprob: -14.752674102783203
    9. 'pop' → logprob: -15.127674102783203
    10. '_STACK' → logprob: -15.252674102783203

Token 3359: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -8.685467764735222e-05
    2. 'pop' → logprob: -9.875086784362793
    3. '.' → logprob: -10.375086784362793
    4. '.append' → logprob: -12.625086784362793
    5. ' .' → logprob: -14.875086784362793
    6. '_pop' → logprob: -15.625086784362793
    7. '.p' → logprob: -16.25008773803711
    8. '```' → logprob: -16.50008773803711
    9. '[-' → logprob: -17.00008773803711
    10. '	pop' → logprob: -17.25008773803711

Token 3360: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05417551472783089
    2. 'b' → logprob: -3.179175615310669
    3. '()
' → logprob: -6.05417537689209
    4. ',' → logprob: -6.05417537689209
    5. '()' → logprob: -6.05417537689209
    6. ')' → logprob: -6.67917537689209
    7. '       ' → logprob: -7.30417537689209
    8. '
' → logprob: -7.92917537689209
    9. ')
' → logprob: -8.17917537689209
    10. ',b' → logprob: -8.42917537689209

Token 3361: '           ' (ID: 352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4752015769481659
    2. '           ' → logprob: -0.9752016067504883
    3. '       ' → logprob: -7.350201606750488
    4. ' b' → logprob: -8.350201606750488
    5. '   ' → logprob: -8.475201606750488
    6. '```' → logprob: -10.975201606750488
    7. '
' → logprob: -11.350201606750488
    8. '               ' → logprob: -12.725201606750488
    9. ' ' → logprob: -13.600201606750488
    10. '                   ' → logprob: -14.725201606750488

Token 3362: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -1.6166903151315637e-05
    2. ' b' → logprob: -11.250016212463379
    3. '           ' → logprob: -12.750016212463379
    4. '       ' → logprob: -15.375016212463379
    5. '   ' → logprob: -19.125015258789062
    6. '               ' → logprob: -19.500015258789062
    7. '
' → logprob: -20.125015258789062
    8. '	b' → logprob: -20.500015258789062
    9. '_b' → logprob: -21.000015258789062
    10. ')b' → logprob: -22.000015258789062

Token 3363: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020763427019119
    2. ' =' → logprob: -2.350207567214966
    3. '=
' → logprob: -14.225207328796387
    4. '           ' → logprob: -15.725207328796387
    5. ')' → logprob: -16.600208282470703
    6. '       ' → logprob: -17.350208282470703
    7. ' =
' → logprob: -17.475208282470703
    8. '   ' → logprob: -17.600208282470703
    9. ' ' → logprob: -18.225208282470703
    10. '        ' → logprob: -18.225208282470703

Token 3364: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.00012356207298580557
    2. ' output' → logprob: -9.000123977661133
    3. '(output' → logprob: -15.750123977661133
    4. '$output' → logprob: -19.875123977661133
    5. '	output' → logprob: -20.875123977661133
    6. '_output' → logprob: -21.250123977661133
    7. 'Output' → logprob: -22.500123977661133
    8. '.output' → logprob: -23.250123977661133
    9. 'out' → logprob: -23.250123977661133
    10. '   ' → logprob: -23.625123977661133

Token 3365: '_queue' (ID: 25622)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.4335477948188782
    2. '_queue' → logprob: -1.6835477352142334
    3. '_output' → logprob: -1.8085477352142334
    4. ' output' → logprob: -7.1835479736328125
    5. '_stack' → logprob: -7.6835479736328125
    6. '(output' → logprob: -8.308547973632812
    7. '$output' → logprob: -8.308547973632812
    8. '.output' → logprob: -9.183547973632812
    9. '_tokens' → logprob: -9.558547973632812
    10. '	output' → logprob: -9.933547973632812

Token 3366: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.15441757265944e-05
    2. 'pop' → logprob: -11.000031471252441
    3. '.append' → logprob: -11.625031471252441
    4. '.' → logprob: -12.250031471252441
    5. '[-' → logprob: -15.250031471252441
    6. ' .' → logprob: -15.750031471252441
    7. '```' → logprob: -15.750031471252441
    8. '=' → logprob: -16.250032424926758
    9. '   ' → logprob: -16.500032424926758
    10. '.
' → logprob: -16.625032424926758

Token 3367: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10348533093929291
    2. ',' → logprob: -2.603485345840454
    3. '<|end|>' → logprob: -4.978485107421875
    4. '       ' → logprob: -5.478485107421875
    5. 'a' → logprob: -5.478485107421875
    6. ',
' → logprob: -5.978485107421875
    7. 'b' → logprob: -5.978485107421875
    8. ')' → logprob: -6.603485107421875
    9. '```' → logprob: -7.353485107421875
    10. ')
' → logprob: -7.728485107421875

Token 3368: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04936821013689041
    2. ',' → logprob: -3.674368143081665
    3. '           ' → logprob: -4.299368381500244
    4. '```' → logprob: -5.299368381500244
    5. '   ' → logprob: -6.799368381500244
    6. 'b' → logprob: -7.049368381500244
    7. ' a' → logprob: -7.299368381500244
    8. '       ' → logprob: -7.799368381500244
    9. '               ' → logprob: -8.049367904663086
    10. ',a' → logprob: -8.549367904663086

Token 3369: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00671584764495492
    2. ' a' → logprob: -5.006715774536133
    3. '           ' → logprob: -15.131715774536133
    4. '	a' → logprob: -16.506715774536133
    5. '       ' → logprob: -16.881715774536133
    6. '```' → logprob: -16.881715774536133
    7. '_a' → logprob: -17.881715774536133
    8. '   ' → logprob: -17.881715774536133
    9. ' op' → logprob: -18.131715774536133
    10. 'op' → logprob: -19.506715774536133

Token 3370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ')' → logprob: -15.45141315460205
    4. '=
' → logprob: -17.701414108276367
    5. ' =
' → logprob: -17.701414108276367
    6. ':' → logprob: -18.076414108276367
    7. '```' → logprob: -18.326414108276367
    8. ' ' → logprob: -18.576414108276367
    9. '<|end|>' → logprob: -18.576414108276367
    10. '   ' → logprob: -18.826414108276367

Token 3371: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0001239196863025427
    2. ' output' → logprob: -9.000123977661133
    3. '(output' → logprob: -15.000123977661133
    4. '$output' → logprob: -17.000123977661133
    5. '	output' → logprob: -19.000123977661133
    6. '_output' → logprob: -19.375123977661133
    7. 'Output' → logprob: -20.125123977661133
    8. 'OUTPUT' → logprob: -20.875123977661133
    9. 'input' → logprob: -21.000123977661133
    10. '.output' → logprob: -21.250123977661133

Token 3372: '_queue' (ID: 25622)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.3094536066055298
    2. '_queue' → logprob: -1.4344536066055298
    3. '.append' → logprob: -3.8094534873962402
    4. 'pop' → logprob: -5.43445348739624
    5. '_output' → logprob: -7.55945348739624
    6. 'output' → logprob: -8.934453964233398
    7. '_pop' → logprob: -9.184453964233398
    8. '.p' → logprob: -9.309453964233398
    9. '```' → logprob: -9.434453964233398
    10. '.' → logprob: -9.934453964233398

Token 3373: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.618001053633634e-05
    2. 'pop' → logprob: -10.625025749206543
    3. '.' → logprob: -13.500025749206543
    4. '.append' → logprob: -14.875025749206543
    5. ' .' → logprob: -16.87502670288086
    6. '	pop' → logprob: -18.12502670288086
    7. '.p' → logprob: -18.50002670288086
    8. ' pop' → logprob: -19.12502670288086
    9. '.Pop' → logprob: -19.50002670288086
    10. '.push' → logprob: -20.12502670288086

Token 3374: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028644466772675514
    2. 'output' → logprob: -3.653644561767578
    3. ')' → logprob: -6.903644561767578
    4. ')
' → logprob: -7.903644561767578
    5. '(output' → logprob: -8.028644561767578
    6. '               ' → logprob: -8.653644561767578
    7. ' output' → logprob: -9.028644561767578
    8. '```' → logprob: -9.403644561767578
    9. '
' → logprob: -9.778644561767578
    10. '       ' → logprob: -10.278644561767578

Token 3375: '           ' (ID: 352)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.31364378333091736
    2. '           ' → logprob: -1.3136438131332397
    3. ' output' → logprob: -8.438643455505371
    4. '```' → logprob: -9.063643455505371
    5. '   ' → logprob: -10.688643455505371
    6. '       ' → logprob: -11.688643455505371
    7. '(output' → logprob: -12.063643455505371
    8. '               ' → logprob: -12.188643455505371
    9. 'op' → logprob: -13.438643455505371
    10. '``' → logprob: -13.563643455505371

Token 3376: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.00017946491425391287
    2. '           ' → logprob: -8.750179290771484
    3. ' output' → logprob: -11.000179290771484
    4. '       ' → logprob: -12.875179290771484
    5. '   ' → logprob: -13.500179290771484
    6. '               ' → logprob: -16.000179290771484
    7. '```' → logprob: -16.000179290771484
    8. '	output' → logprob: -16.250179290771484
    9. '         ' → logprob: -17.000179290771484
    10. '``' → logprob: -18.625179290771484

Token 3377: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.014168680645525455
    2. '.append' → logprob: -4.264168739318848
    3. 'Queue' → logprob: -13.764168739318848
    4. 'append' → logprob: -14.014168739318848
    5. 'queue' → logprob: -14.264168739318848
    6. '_append' → logprob: -14.264168739318848
    7. '_output' → logprob: -14.514168739318848
    8. 'output' → logprob: -14.764168739318848
    9. '_QUEUE' → logprob: -15.139168739318848
    10. '_stack' → logprob: -15.139168739318848

Token 3378: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.014684110297821e-06
    2. '.' → logprob: -12.250008583068848
    3. 'append' → logprob: -12.750008583068848
    4. '.app' → logprob: -14.375008583068848
    5. '_append' → logprob: -15.125008583068848
    6. 'Append' → logprob: -15.500008583068848
    7. '.Append' → logprob: -16.250009536743164
    8. 'app' → logprob: -17.000009536743164
    9. '[-' → logprob: -17.375009536743164
    10. ' .' → logprob: -17.750009536743164

Token 3379: '(app' (ID: 21667)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -5.512236498361744e-07
    2. ' apply' → logprob: -15.000000953674316
    3. 'app' → logprob: -15.750000953674316
    4. '(app' → logprob: -19.25
    5. '.apply' → logprob: -19.75
    6. '_apply' → logprob: -22.0
    7. 'append' → logprob: -23.625
    8. 'ap' → logprob: -23.625
    9. '
' → logprob: -23.75
    10. '   ' → logprob: -24.75

Token 3380: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.16068753600120544
    2. 'y' → logprob: -1.9106875658035278
    3. 'end' → logprob: -7.910687446594238
    4. 'ay' → logprob: -10.035687446594238
    5. '(app' → logprob: -10.660687446594238
    6. '```' → logprob: -11.785687446594238
    7. '
' → logprob: -12.410687446594238
    8. '_apply' → logprob: -12.535687446594238
    9. 'a' → logprob: -12.910687446594238
    10. 'and' → logprob: -13.410687446594238

Token 3381: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -6.704273118884885e-07
    2. 'op' → logprob: -15.500000953674316
    3. '_ops' → logprob: -16.25
    4. 'a' → logprob: -16.75
    5. '(op' → logprob: -17.0
    6. '-op' → logprob: -17.125
    7. 'Op' → logprob: -17.125
    8. '```' → logprob: -17.875
    9. '(a' → logprob: -18.375
    10. ''op' → logprob: -18.625

Token 3382: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02324652671813965
    2. '(a' → logprob: -3.7732465267181396
    3. '(' → logprob: -14.523246765136719
    4. ' a' → logprob: -14.773246765136719
    5. '	a' → logprob: -17.14824676513672
    6. '(
' → logprob: -17.27324676513672
    7. ')a' → logprob: -17.89824676513672
    8. '   ' → logprob: -18.77324676513672
    9. '```' → logprob: -19.02324676513672
    10. ' (' → logprob: -19.39824676513672

Token 3383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.958325295476243e-05
    2. ',a' → logprob: -9.625079154968262
    3. ' ,' → logprob: -11.625079154968262
    4. 'a' → logprob: -12.625079154968262
    5. ',
' → logprob: -14.000079154968262
    6. ',b' → logprob: -15.750079154968262
    7. '(a' → logprob: -16.625080108642578
    8. ' a' → logprob: -17.125080108642578
    9. '           ' → logprob: -17.750080108642578
    10. '[' → logprob: -18.125080108642578

Token 3384: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.64708495605737e-05
    2. ' b' → logprob: -9.625066757202148
    3. 'a' → logprob: -14.750066757202148
    4. '       ' → logprob: -18.62506675720215
    5. '   ' → logprob: -18.75006675720215
    6. ')b' → logprob: -19.62506675720215
    7. '	b' → logprob: -19.87506675720215
    8. '    ' → logprob: -20.12506675720215
    9. '           ' → logprob: -20.25006675720215
    10. ' ' → logprob: -20.62506675720215

Token 3385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. ' ,' → logprob: -14.375000953674316
    3. ',
' → logprob: -16.5
    4. ',p' → logprob: -17.375
    5. ')' → logprob: -17.75
    6. '),' → logprob: -17.75
    7. '           ' → logprob: -17.875
    8. '[' → logprob: -18.625
    9. ',a' → logprob: -19.0
    10. 'a' → logprob: -19.625

Token 3386: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.8908587662735954e-05
    2. 'b' → logprob: -11.375019073486328
    3. ' op' → logprob: -12.000019073486328
    4. 'o' → logprob: -14.500019073486328
    5. 'ops' → logprob: -15.000019073486328
    6. '(op' → logprob: -15.625019073486328
    7. '-op' → logprob: -16.125019073486328
    8. '
' → logprob: -16.625019073486328
    9. '	op' → logprob: -17.500019073486328
    10. 'output' → logprob: -17.875019073486328

Token 3387: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007516834419220686
    2. ')' → logprob: -5.007516860961914
    3. '))
' → logprob: -7.257516860961914
    4. '           ' → logprob: -9.757516860961914
    5. '       ' → logprob: -10.757516860961914
    6. ')
' → logprob: -12.007516860961914
    7. ',' → logprob: -12.382516860961914
    8. '               ' → logprob: -13.132516860961914
    9. ')))' → logprob: -13.257516860961914
    10. '])' → logprob: -14.257516860961914

Token 3388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.575950562953949
    2. 'return' → logprob: -0.825950562953949
    3. ' return' → logprob: -11.700950622558594
    4. '   ' → logprob: -13.575950622558594
    5. '	return' → logprob: -13.950950622558594
    6. '           ' → logprob: -15.575950622558594
    7. '```' → logprob: -15.950950622558594
    8. '
' → logprob: -16.700950622558594
    9. '#' → logprob: -16.700950622558594
    10. 'result' → logprob: -16.825950622558594

Token 3389: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009149204124696553
    2. '       ' → logprob: -7.000915050506592
    3. ' return' → logprob: -12.625914573669434
    4. '	return' → logprob: -16.25091552734375
    5. 'result' → logprob: -17.50091552734375
    6. '#' → logprob: -17.62591552734375
    7. '
' → logprob: -18.87591552734375
    8. '   ' → logprob: -19.37591552734375
    9. '```' → logprob: -19.62591552734375
    10. ':return' → logprob: -19.62591552734375

Token 3390: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.8624639324116288e-06
    2. ' output' → logprob: -13.250001907348633
    3. '(output' → logprob: -21.250001907348633
    4. '   ' → logprob: -22.250001907348633
    5. '	output' → logprob: -22.875001907348633
    6. '$output' → logprob: -23.250001907348633
    7. '       ' → logprob: -25.000001907348633
    8. '_output' → logprob: -25.750001907348633
    9. '.output' → logprob: -25.875001907348633
    10. 'Output' → logprob: -25.875001907348633

Token 3391: '_queue' (ID: 25622)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.698131263256073
    2. '[' → logprob: -1.4481313228607178
    3. '_queue' → logprob: -1.6981313228607178
    4. '_output' → logprob: -2.9481313228607178
    5. '[-' → logprob: -3.5731313228607178
    6. '_stack' → logprob: -6.198131084442139
    7. '[len' → logprob: -7.573131084442139
    8. 'pop' → logprob: -7.823131084442139
    9. '.pop' → logprob: -8.448131561279297
    10. '0' → logprob: -8.948131561279297

Token 3392: '[' (ID: 58)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.04272007197141647
    2. '[' → logprob: -3.542720079421997
    3. '[-' → logprob: -4.542719841003418
    4. '0' → logprob: -6.167719841003418
    5. 'pop' → logprob: -9.042719841003418
    6. '_pop' → logprob: -11.917719841003418
    7. '.' → logprob: -12.042719841003418
    8. 'Pop' → logprob: -12.167719841003418
    9. ' pop' → logprob: -12.917719841003418
    10. '	pop' → logprob: -12.917719841003418

Token 3393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. '-' → logprob: -9.625065803527832
    3. ' ' → logprob: -16.00006675720215
    4. '
' → logprob: -18.25006675720215
    5. ' -' → logprob: -19.37506675720215
    6. '   ' → logprob: -19.50006675720215
    7. '00' → logprob: -19.75006675720215
    8. '```' → logprob: -19.87506675720215
    9. '۰' → logprob: -20.00006675720215
    10. '000' → logprob: -20.25006675720215

Token 3394: ']


' (ID: 52447)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009435765445232391
    2. ']' → logprob: -4.759435653686523
    3. '}' → logprob: -7.634435653686523
    4. '<|end|>' → logprob: -8.759435653686523
    5. '[' → logprob: -9.384435653686523
    6. '   ' → logprob: -10.759435653686523
    7. ' )' → logprob: -10.884435653686523
    8. ')return' → logprob: -11.509435653686523
    9. '#' → logprob: -11.884435653686523
    10. ')
' → logprob: -12.009435653686523

Token 3395: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07530533522367477
    2. '#' → logprob: -2.825305223464966
    3. 'class' → logprob: -4.325305461883545
    4. '   ' → logprob: -11.200304985046387
    5. '```' → logprob: -13.200304985046387
    6. '
' → logprob: -13.700304985046387
    7. '    
' → logprob: -14.325304985046387
    8. ' def' → logprob: -14.575304985046387
    9. 'from' → logprob: -14.825304985046387
    10. '#
' → logprob: -15.075304985046387

Token 3396: ' Main' (ID: 7956)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001943514565937221
    2. 'class' → logprob: -6.876943588256836
    3. '#' → logprob: -7.001943588256836
    4. '
' → logprob: -16.376943588256836
    5. ' def' → logprob: -16.501943588256836
    6. 'import' → logprob: -16.876943588256836
    7. 'from' → logprob: -17.751943588256836
    8. '#
' → logprob: -18.126943588256836
    9. 'sys' → logprob: -18.376943588256836
    10. 'Point' → logprob: -19.001943588256836

Token 3397: ' processing' (ID: 12323)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005398815032094717
    2. 'class' → logprob: -5.255398750305176
    3. 'if' → logprob: -8.755398750305176
    4. ':' → logprob: -12.880398750305176
    5. '#' → logprob: -13.005398750305176
    6. ' def' → logprob: -13.130398750305176
    7. ' class' → logprob: -15.880398750305176
    8. 'input' → logprob: -15.880398750305176
    9. 'import' → logprob: -16.005399703979492
    10. ':def' → logprob: -16.880399703979492

Token 3398: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.36574100604048e-06
    2. 'if' → logprob: -12.625004768371582
    3. 'class' → logprob: -14.750004768371582
    4. '```' → logprob: -15.000004768371582
    5. ' def' → logprob: -15.125004768371582
    6. '#' → logprob: -17.000003814697266
    7. 'lines' → logprob: -18.875003814697266
    8. 'data' → logprob: -19.250003814697266
    9. 'line' → logprob: -19.250003814697266
    10. 'input' → logprob: -19.750003814697266

Token 3399: ' handling' (ID: 17491)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. ' class' → logprob: -17.25
    3. '
' → logprob: -19.0
    4. 'Class' → logprob: -20.25
    5. 'Character' → logprob: -20.5
    6. '<class' → logprob: -21.125
    7. '"class' → logprob: -22.5
    8. '#' → logprob: -23.25
    9. '```' → logprob: -23.25
    10. '-class' → logprob: -23.375

Token 3400: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1920279860496521
    2. 'class' → logprob: -2.317028045654297
    3. 'the' → logprob: -2.817028045654297
    4. 'input' → logprob: -4.817028045654297
    5. '
' → logprob: -6.317028045654297
    6. 'sys' → logprob: -6.442028045654297
    7. ' the' → logprob: -6.692028045654297
    8. 'stdin' → logprob: -7.692028045654297
    9. '#' → logprob: -7.942028045654297
    10. '<|end|>' → logprob: -8.067028045654297

Token 3401: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00029160623671486974
    2. ':' → logprob: -8.75029182434082
    3. ' class' → logprob: -9.00029182434082
    4. ':
' → logprob: -12.87529182434082
    5. '
' → logprob: -13.00029182434082
    6. '=' → logprob: -14.37529182434082
    7. '   ' → logprob: -14.50029182434082
    8. '"class' → logprob: -14.50029182434082
    9. 'def' → logprob: -14.50029182434082
    10. '<|end|>' → logprob: -14.62529182434082

Token 3402: ' detection' (ID: 28385)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.006356512662023306
    2. 'output' → logprob: -5.631356716156006
    3. 'processing' → logprob: -6.256356716156006
    4. 'def' → logprob: -8.131356239318848
    5. '#' → logprob: -8.631356239318848
    6. ' parsing' → logprob: -8.756356239318848
    7. 'grid' → logprob: -9.256356239318848
    8. 'reading' → logprob: -10.756356239318848
    9. 'token' → logprob: -11.131356239318848
    10. 'seg' → logprob: -11.506356239318848

Token 3403: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3317679762840271
    2. ',' → logprob: -2.206768035888672
    3. 'class' → logprob: -2.456768035888672
    4. ':' → logprob: -3.456768035888672
    5. '   ' → logprob: -3.831768035888672
    6. ' and' → logprob: -3.956768035888672
    7. 'def' → logprob: -4.706768035888672
    8. ':
' → logprob: -5.831768035888672
    9. '```' → logprob: -7.581768035888672
    10. '=' → logprob: -7.831768035888672

Token 3404: ' parsing' (ID: 51039)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0863766074180603
    2. 'and' → logprob: -3.211376667022705
    3. '#' → logprob: -4.086376667022705
    4. 'output' → logprob: -4.336376667022705
    5. ' and' → logprob: -5.086376667022705
    6. 'seg' → logprob: -5.461376667022705
    7. ' parsing' → logprob: -7.461376667022705
    8. 'def' → logprob: -7.711376667022705
    9. 'processing' → logprob: -8.461376190185547
    10. 'f' → logprob: -8.961376190185547

Token 3405: ' and' (ID: 326)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0030516237020492554
    2. '
' → logprob: -6.7530517578125
    3. ' class' → logprob: -7.1280517578125
    4. ':' → logprob: -7.5030517578125
    5. ':
' → logprob: -8.5030517578125
    6. 'and' → logprob: -9.2530517578125
    7. ',' → logprob: -9.5030517578125
    8. '<|end|>' → logprob: -10.1280517578125
    9. '   ' → logprob: -10.5030517578125
    10. ' and' → logprob: -10.7530517578125

Token 3406: ' evaluation' (ID: 21407)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.03913078084588051
    2. 'evaluation' → logprob: -3.289130687713623
    3. 'execution' → logprob: -7.414130687713623
    4. '#' → logprob: -7.914130687713623
    5. 'cal' → logprob: -10.164131164550781
    6. 'processing' → logprob: -10.289131164550781
    7. 'printing' → logprob: -11.789131164550781
    8. 'expression' → logprob: -11.914131164550781
    9. 'def' → logprob: -12.289131164550781
    10. 'solution' → logprob: -12.289131164550781

Token 3407: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. ' class' → logprob: -17.125
    3. '"class' → logprob: -20.5
    4. '<class' → logprob: -20.5
    5. '
' → logprob: -21.5
    6. 'Class' → logprob: -21.75
    7. ''class' → logprob: -21.875
    8. '```' → logprob: -22.875
    9. '	class' → logprob: -23.0
    10. 'def' → logprob: -23.0

Token 3408: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. ' class' → logprob: -20.25
    3. '
' → logprob: -23.5
    4. 'def' → logprob: -24.625
    5. '<class' → logprob: -25.375
    6. '```' → logprob: -26.125
    7. '"class' → logprob: -26.25
    8. 'Class' → logprob: -26.5
    9. 'from' → logprob: -27.5
    10. '	class' → logprob: -27.625

Token 3409: ' Cheat' (ID: 160729)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -1.2579957246780396
    2. 'Solver' → logprob: -1.5079957246780396
    3. 'Paper' → logprob: -2.25799560546875
    4. 'Main' → logprob: -2.50799560546875
    5. 'Scanner' → logprob: -2.63299560546875
    6. 'Processor' → logprob: -2.63299560546875
    7. 'Canvas' → logprob: -2.88299560546875
    8. 'Input' → logprob: -3.38299560546875
    9. 'Painter' → logprob: -4.25799560546875
    10. 'OCR' → logprob: -4.38299560546875

Token 3410: 'Case' (ID: 6187)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8118097186088562
    2. ':
' → logprob: -0.9368097186088562
    3. 'Solver' → logprob: -2.186809778213501
    4. 'Code' → logprob: -4.311809539794922
    5. 'Processor' → logprob: -4.686809539794922
    6. '   ' → logprob: -4.811809539794922
    7. 'Reader' → logprob: -5.561809539794922
    8. 'Parser' → logprob: -6.186809539794922
    9. '(
' → logprob: -6.436809539794922
    10. 'Detector' → logprob: -6.561809539794922

Token 3411: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10030727088451385
    2. ':
' → logprob: -2.3503072261810303
    3. '   ' → logprob: -10.10030746459961
    4. '(' → logprob: -10.22530746459961
    5. ':

' → logprob: -11.97530746459961
    6. '{' → logprob: -12.47530746459961
    7. '):' → logprob: -12.47530746459961
    8. '(object' → logprob: -13.60030746459961
    9. '(
' → logprob: -14.22530746459961
    10. '  ' → logprob: -14.35030746459961

Token 3412: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1269780844449997
    2. ':
' → logprob: -2.1269781589508057
    3. ':def' → logprob: -10.751977920532227
    4. ':

' → logprob: -11.376977920532227
    5. '   ' → logprob: -11.876977920532227
    6. 'def' → logprob: -12.626977920532227
    7. '```' → logprob: -13.876977920532227
    8. '(' → logprob: -13.876977920532227
    9. '):' → logprob: -14.001977920532227
    10. '):
' → logprob: -14.001977920532227

Token 3413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018058452988043427
    2. 'def' → logprob: -6.376805782318115
    3. ' def' → logprob: -9.251806259155273
    4. ':' → logprob: -12.751806259155273
    5. '```' → logprob: -13.251806259155273
    6. '	def' → logprob: -14.126806259155273
    7. 'class' → logprob: -14.126806259155273
    8. '   ' → logprob: -14.501806259155273
    9. '
' → logprob: -15.001806259155273
    10. '    
' → logprob: -15.251806259155273

Token 3414: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12389901280403137
    2. '   ' → logprob: -2.623898983001709
    3. ' def' → logprob: -3.123898983001709
    4. '	def' → logprob: -11.623899459838867
    5. '```' → logprob: -12.248899459838867
    6. ':' → logprob: -12.373899459838867
    7. ':def' → logprob: -13.248899459838867
    8. ' ' → logprob: -13.623899459838867
    9. 'IND' → logprob: -13.998899459838867
    10. '  ' → logprob: -13.998899459838867

Token 3415: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.29971927404403687
    2. '__' → logprob: -1.7997193336486816
    3. 'init' → logprob: -2.5497193336486816
    4. '_init' → logprob: -4.549719333648682
    5. 'def' → logprob: -5.424719333648682
    6. ' def' → logprob: -7.674719333648682
    7. ' init' → logprob: -10.549718856811523
    8. '```' → logprob: -10.674718856811523
    9. '___' → logprob: -11.299718856811523
    10. '_' → logprob: -12.549718856811523

Token 3416: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.093505099765025e-05
    2. 'int' → logprob: -11.250020980834961
    3. '__' → logprob: -12.125020980834961
    4. 'nit' → logprob: -13.625020980834961
    5. 'def' → logprob: -15.000020980834961
    6. '_init' → logprob: -15.375020980834961
    7. 'iter' → logprob: -15.500020980834961
    8. ' __' → logprob: -15.750020980834961
    9. '```' → logprob: -16.00002098083496
    10. 'it' → logprob: -16.12502098083496

Token 3417: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10088033974170685
    2. '(self' → logprob: -2.3508803844451904
    3. '__(
' → logprob: -7.975880146026611
    4. '__' → logprob: -8.35088062286377
    5. '(' → logprob: -9.60088062286377
    6. 'self' → logprob: -11.60088062286377
    7. ' (' → logprob: -11.85088062286377
    8. '_(' → logprob: -12.60088062286377
    9. '   ' → logprob: -13.10088062286377
    10. '(
' → logprob: -13.60088062286377

Token 3418: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001733855315251276
    2. ')' → logprob: -9.125173568725586
    3. '   ' → logprob: -10.500173568725586
    4. '       ' → logprob: -11.750173568725586
    5. '):' → logprob: -11.750173568725586
    6. ' self' → logprob: -11.750173568725586
    7. 'int' → logprob: -12.375173568725586
    8. '):
' → logprob: -12.750173568725586
    9. '0' → logprob: -12.875173568725586
    10. 'width' → logprob: -14.000173568725586

Token 3419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06071312353014946
    2. 'self' → logprob: -2.935713052749634
    3. '   ' → logprob: -6.060713291168213
    4. '(self' → logprob: -6.685713291168213
    5. '):' → logprob: -6.935713291168213
    6. '):
' → logprob: -8.435712814331055
    7. '       ' → logprob: -8.560712814331055
    8. ' (' → logprob: -8.935712814331055
    9. ',
' → logprob: -8.935712814331055
    10. ' ,' → logprob: -8.935712814331055

Token 3420: ' line' (ID: 2543)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5245488882064819
    2. 'width' → logprob: -1.149548888206482
    3. '):
' → logprob: -2.8995490074157715
    4. 'w' → logprob: -4.1495490074157715
    5. 'input' → logprob: -5.0245490074157715
    6. 'lines' → logprob: -5.0245490074157715
    7. '):' → logprob: -5.6495490074157715
    8. ')' → logprob: -6.8995490074157715
    9. 'grid' → logprob: -7.1495490074157715
    10. 'test' → logprob: -7.8995490074157715

Token 3421: '_segments' (ID: 142925)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08984566479921341
    2. ':' → logprob: -3.714845657348633
    3. '   ' → logprob: -4.089845657348633
    4. '_width' → logprob: -4.589845657348633
    5. '_length' → logprob: -4.714845657348633
    6. 'width' → logprob: -4.964845657348633
    7. '_count' → logprob: -5.464845657348633
    8. '       ' → logprob: -5.589845657348633
    9. '_len' → logprob: -6.214845657348633
    10. '):' → logprob: -6.339845657348633

Token 3422: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26038187742233276
    2. '):' → logprob: -1.7603819370269775
    3. '):
' → logprob: -3.1353819370269775
    4. ',' → logprob: -5.135381698608398
    5. '=' → logprob: -5.135381698608398
    6. '=[]' → logprob: -7.135381698608398
    7. ')' → logprob: -7.635381698608398
    8. '   ' → logprob: -8.510381698608398
    9. ':list' → logprob: -8.885381698608398
    10. '=None' → logprob: -8.885381698608398

Token 3423: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0006039070431143045
    2. ' List' → logprob: -7.875603675842285
    3. '[List' → logprob: -9.125603675842285
    4. '[]' → logprob: -10.000603675842285
    5. 'list' → logprob: -10.250603675842285
    6. '[])' → logprob: -10.875603675842285
    7. ')' → logprob: -12.000603675842285
    8. '[]):' → logprob: -12.625603675842285
    9. '):' → logprob: -13.625603675842285
    10. '):
' → logprob: -13.750603675842285

Token 3424: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019436265574768186
    2. '[List' → logprob: -6.251943588256836
    3. '<Point' → logprob: -12.376943588256836
    4. 'Point' → logprob: -12.501943588256836
    5. ':' → logprob: -13.251943588256836
    6. '[int' → logprob: -13.501943588256836
    7. '):' → logprob: -13.626943588256836
    8. '):
' → logprob: -13.876943588256836
    9. '[
' → logprob: -13.876943588256836
    10. '(Point' → logprob: -15.251943588256836

Token 3425: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.002517515793442726
    2. 'List' → logprob: -6.0025177001953125
    3. 'Point' → logprob: -10.877517700195312
    4. '[' → logprob: -11.627517700195312
    5. ' Tuple' → logprob: -11.877517700195312
    6. 'Line' → logprob: -12.002517700195312
    7. ']' → logprob: -15.377517700195312
    8. '[List' → logprob: -15.502517700195312
    9. 'Tu' → logprob: -15.627517700195312
    10. '   ' → logprob: -16.127517700195312

Token 3426: '[int' (ID: 40124)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.664371848164592e-05
    2. '[' → logprob: -11.375016212463379
    3. ' Point' → logprob: -13.375016212463379
    4. 'int' → logprob: -13.375016212463379
    5. '	Point' → logprob: -13.875016212463379
    6. 'Tuple' → logprob: -15.125016212463379
    7. '   ' → logprob: -15.250016212463379
    8. ')' → logprob: -15.625016212463379
    9. '(Point' → logprob: -15.875016212463379
    10. '[int' → logprob: -16.000017166137695

Token 3427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.284662663936615
    2. ',int' → logprob: -1.4096627235412598
    3. 'int' → logprob: -6.28466272354126
    4. '[int' → logprob: -6.53466272354126
    5. '   ' → logprob: -9.284662246704102
    6. ',List' → logprob: -10.534662246704102
    7. ':int' → logprob: -10.659662246704102
    8. ' ,' → logprob: -10.909662246704102
    9. '(int' → logprob: -12.534662246704102
    10. '       ' → logprob: -12.659662246704102

Token 3428: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.421908958349377e-05
    2. ' int' → logprob: -10.00007438659668
    3. 'Point' → logprob: -11.12507438659668
    4. '   ' → logprob: -11.75007438659668
    5. '
' → logprob: -13.12507438659668
    6. '...' → logprob: -13.87507438659668
    7. '[int' → logprob: -14.62507438659668
    8. '
' → logprob: -14.75007438659668
    9. '```' → logprob: -14.75007438659668
    10. 'List' → logprob: -14.75007438659668

Token 3429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004115323536098003
    2. ',int' → logprob: -5.504115104675293
    3. ' ,' → logprob: -11.129115104675293
    4. ',
' → logprob: -11.754115104675293
    5. 'int' → logprob: -11.754115104675293
    6. ',List' → logprob: -12.629115104675293
    7. ',float' → logprob: -14.504115104675293
    8. ',Integer' → logprob: -14.629115104675293
    9. '[int' → logprob: -15.004115104675293
    10. ',bool' → logprob: -15.254115104675293

Token 3430: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.080963092041202e-06
    2. ' int' → logprob: -13.125004768371582
    3. '   ' → logprob: -13.375004768371582
    4. '[int' → logprob: -14.125004768371582
    5. '...' → logprob: -15.500004768371582
    6. ']int' → logprob: -15.625004768371582
    7. '(int' → logprob: -16.2500057220459
    8. '	int' → logprob: -16.3750057220459
    9. ')' → logprob: -16.7500057220459
    10. '<int' → logprob: -17.0000057220459

Token 3431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018816311785485595
    2. ',int' → logprob: -8.750187873840332
    3. 'int' → logprob: -11.375187873840332
    4. '   ' → logprob: -11.750187873840332
    5. ' ,' → logprob: -12.250187873840332
    6. ',
' → logprob: -12.375187873840332
    7. '```' → logprob: -14.500187873840332
    8. '
' → logprob: -15.625187873840332
    9. '<|end|>' → logprob: -15.875187873840332
    10. '[int' → logprob: -15.875187873840332

Token 3432: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.465036105713807e-06
    2. '[int' → logprob: -12.500007629394531
    3. ' int' → logprob: -14.000007629394531
    4. '(int' → logprob: -14.125007629394531
    5. '4' → logprob: -14.125007629394531
    6. '<int' → logprob: -15.125007629394531
    7. ']int' → logprob: -15.125007629394531
    8. '...' → logprob: -15.625007629394531
    9. ':int' → logprob: -15.750007629394531
    10. ',int' → logprob: -15.875007629394531

Token 3433: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.42915835976600647
    2. ',' → logprob: -1.429158329963684
    3. ')]' → logprob: -2.6791584491729736
    4. ']' → logprob: -3.5541584491729736
    5. '       ' → logprob: -5.3041582107543945
    6. '   ' → logprob: -6.1791582107543945
    7. ']):
' → logprob: -7.1791582107543945
    8. ']])' → logprob: -7.1791582107543945
    9. ']]:
' → logprob: -7.3041582107543945
    10. '```' → logprob: -7.5541582107543945

Token 3434: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22602301836013794
    2. '):' → logprob: -1.6010229587554932
    3. '   ' → logprob: -8.226022720336914
    4. '       ' → logprob: -8.601022720336914
    5. ')' → logprob: -9.851022720336914
    6. ',' → logprob: -9.851022720336914
    7. '):
' → logprob: -10.101022720336914
    8. ':' → logprob: -11.726022720336914
    9. ':
' → logprob: -13.976022720336914
    10. '):

' → logprob: -14.101022720336914

Token 3435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.468279752880335e-05
    2. 'self' → logprob: -10.625064849853516
    3. ',' → logprob: -10.750064849853516
    4. ':' → logprob: -11.625064849853516
    5. '   ' → logprob: -12.625064849853516
    6. ' self' → logprob: -13.250064849853516
    7. '```' → logprob: -13.625064849853516
    8. '):
' → logprob: -14.125064849853516
    9. ':
' → logprob: -14.250064849853516
    10. ')' → logprob: -14.625064849853516

Token 3436: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01786215789616108
    2. '       ' → logprob: -4.142862319946289
    3. 'max' → logprob: -7.392862319946289
    4. 'width' → logprob: -7.392862319946289
    5. '#' → logprob: -7.642862319946289
    6. ' self' → logprob: -9.767862319946289
    7. 'points' → logprob: -11.517862319946289
    8. 'w' → logprob: -11.642862319946289
    9. 'x' → logprob: -11.767862319946289
    10. 'lines' → logprob: -11.892862319946289

Token 3437: '.line' (ID: 21221)
  Prédit: '.width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0064325639978051186
    2. '.line' → logprob: -5.25643253326416
    3. '.' → logprob: -7.75643253326416
    4. '.grid' → logprob: -8.25643253326416
    5. '.points' → logprob: -8.50643253326416
    6. '.lines' → logprob: -8.75643253326416
    7. '.height' → logprob: -10.13143253326416
    8. 'width' → logprob: -10.13143253326416
    9. '   ' → logprob: -10.75643253326416
    10. '.w' → logprob: -11.25643253326416

Token 3438: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0004691610229201615
    2. 's' → logprob: -7.750469207763672
    3. 'segments' → logprob: -11.000469207763672
    4. '_points' → logprob: -11.375469207763672
    5. 'Segments' → logprob: -12.125469207763672
    6. '       ' → logprob: -13.250469207763672
    7. '_' → logprob: -13.875469207763672
    8. '   ' → logprob: -14.750469207763672
    9. '_positions' → logprob: -15.125469207763672
    10. '_segment' → logprob: -15.125469207763672

Token 3439: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03382480889558792
    2. ' =' → logprob: -3.408824920654297
    3. '=[]' → logprob: -8.783824920654297
    4. '=[]
' → logprob: -11.783824920654297
    5. '       ' → logprob: -12.033824920654297
    6. ':' → logprob: -12.158824920654297
    7. '.append' → logprob: -13.533824920654297
    8. '=self' → logprob: -13.783824920654297
    9. '   ' → logprob: -13.908824920654297
    10. '=
' → logprob: -13.908824920654297

Token 3440: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -4.4849443838757e-06
    2. '[line' → logprob: -13.250004768371582
    3. ' line' → logprob: -13.375004768371582
    4. '[(' → logprob: -13.875004768371582
    5. '[
' → logprob: -16.500003814697266
    6. '[' → logprob: -16.875003814697266
    7. '   ' → logprob: -18.000003814697266
    8. '[]
' → logprob: -19.000003814697266
    9. '	line' → logprob: -19.125003814697266
    10. 'list' → logprob: -19.375003814697266

Token 3441: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.00017624642350710928
    2. 'segments' → logprob: -9.125176429748535
    3. '_
' → logprob: -10.500176429748535
    4. 's' → logprob: -10.625176429748535
    5. '_' → logprob: -11.875176429748535
    6. 'Segments' → logprob: -12.250176429748535
    7. '[
' → logprob: -14.125176429748535
    8. '[' → logprob: -14.375176429748535
    9. '
' → logprob: -15.000176429748535
    10. '_

' → logprob: -15.125176429748535

Token 3442: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007919375784695148
    2. '
' → logprob: -4.8829193115234375
    3. '   ' → logprob: -8.632919311523438
    4. ',' → logprob: -10.007919311523438
    5. '<|end|>' → logprob: -10.257919311523438
    6. '        
' → logprob: -10.882919311523438
    7. 'self' → logprob: -11.257919311523438
    8. 'def' → logprob: -12.007919311523438
    9. '    
' → logprob: -12.257919311523438
    10. ',
' → logprob: -13.132919311523438

Token 3443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010318108834326267
    2. '   ' → logprob: -5.260318279266357
    3. 'def' → logprob: -5.385318279266357
    4. '
' → logprob: -8.0103178024292
    5. 'self' → logprob: -10.2603178024292
    6. '        
' → logprob: -10.3853178024292
    7. '<|end|>' → logprob: -10.5103178024292
    8. ' def' → logprob: -10.8853178024292
    9. ',' → logprob: -11.0103178024292
    10. '```' → logprob: -11.8853178024292

Token 3444: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12403938919305801
    2. 'self' (adapté à ' self') → logprob: -2.7490394115448
    3. 'def' → logprob: -3.1240394115448
    4. '
' → logprob: -4.874039173126221
    5. '   ' → logprob: -6.999039173126221
    6. '        
' → logprob: -9.874039649963379
    7. ' self' → logprob: -10.374039649963379
    8. '#' → logprob: -11.249039649963379
    9. ' def' → logprob: -12.374039649963379
    10. '    
' → logprob: -12.499039649963379

Token 3445: '.grid' (ID: 19269)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.30064302682876587
    2. 'grid' → logprob: -1.925642967224121
    3. 'points' → logprob: -2.800642967224121
    4. '.grid' → logprob: -3.925642967224121
    5. 'min' → logprob: -4.925642967224121
    6. 'max' → logprob: -4.925642967224121
    7. 'def' → logprob: -5.175642967224121
    8. '.width' → logprob: -5.175642967224121
    9. '_points' → logprob: -6.675642967224121
    10. '   ' → logprob: -6.800642967224121

Token 3446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1428023725748062
    2. ' =' → logprob: -2.0178024768829346
    3. ':' → logprob: -9.767802238464355
    4. '   ' → logprob: -10.392802238464355
    5. '=
' → logprob: -10.892802238464355
    6. '=None' → logprob: -11.392802238464355
    7. ' =
' → logprob: -12.267802238464355
    8. '       ' → logprob: -14.267802238464355
    9. '=self' → logprob: -14.892802238464355
    10. ')' → logprob: -14.892802238464355

Token 3447: ' Grid' (ID: 18087)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -5.574251918005757e-05
    2. ' Grid' → logprob: -10.000055313110352
    3. 'None' → logprob: -11.500055313110352
    4. '(Grid' → logprob: -16.25005531311035
    5. '	Grid' → logprob: -16.75005531311035
    6. '   ' → logprob: -17.37505531311035
    7. '<Grid' → logprob: -19.50005531311035
    8. '.Grid' → logprob: -20.12505531311035
    9. ' None' → logprob: -20.37505531311035
    10. 'GRID' → logprob: -21.37505531311035

Token 3448: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000596043246332556
    2. '(max' → logprob: -8.750596046447754
    3. '100' → logprob: -9.125596046447754
    4. '(sys' → logprob: -9.125596046447754
    5. '       ' → logprob: -9.500596046447754
    6. ' (' → logprob: -9.875596046447754
    7. 'max' → logprob: -11.375596046447754
    8. '((' → logprob: -11.500596046447754
    9. '   ' → logprob: -11.625596046447754
    10. '80' → logprob: -11.875596046447754

Token 3449: '201' (ID: 667)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9747679829597473
    2. '101' → logprob: -1.2247679233551025
    3. '200' → logprob: -2.0997679233551025
    4. '201' → logprob: -3.4747679233551025
    5. '151' → logprob: -3.4747679233551025
    6. '50' → logprob: -3.7247679233551025
    7. '150' → logprob: -4.224768161773682
    8. '51' → logprob: -4.349768161773682
    9. '110' → logprob: -4.599768161773682
    10. '210' → logprob: -4.974768161773682

Token 3450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0072676134295761585
    2. ')' → logprob: -5.007267475128174
    3. ' ,' → logprob: -8.507267951965332
    4. '   ' → logprob: -9.257267951965332
    5. '       ' → logprob: -9.507267951965332
    6. ')
' → logprob: -10.132267951965332
    7. ',
' → logprob: -10.132267951965332
    8. '<|end|>' → logprob: -10.382267951965332
    9. '```' → logprob: -11.257267951965332
    10. '<|end|>' → logprob: -11.757267951965332

Token 3451: ' ' (ID: 220)
  Prédit: '201'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '201' → logprob: -0.004814580548554659
    2. '101' → logprob: -5.754814624786377
    3. '61' → logprob: -7.504814624786377
    4. '161' → logprob: -8.379814147949219
    5. '151' → logprob: -8.504814147949219
    6. '51' → logprob: -8.504814147949219
    7. '121' → logprob: -9.004814147949219
    8. '301' → logprob: -9.379814147949219
    9. '81' → logprob: -9.754814147949219
    10. '41' → logprob: -9.879814147949219

Token 3452: '201' (ID: 667)
  Prédit: '201'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '201' → logprob: -0.012091398239135742
    2. '101' → logprob: -4.637091636657715
    3. '51' → logprob: -7.262091636657715
    4. '151' → logprob: -7.387091636657715
    5. '61' → logprob: -7.637091636657715
    6. '301' → logprob: -9.262091636657715
    7. '41' → logprob: -9.512091636657715
    8. '121' → logprob: -9.887091636657715
    9. '161' → logprob: -9.887091636657715
    10. '251' → logprob: -10.137091636657715

Token 3453: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5597102396423e-05
    2. '       ' → logprob: -10.500035285949707
    3. ')
' → logprob: -11.875035285949707
    4. '   ' → logprob: -13.875035285949707
    5. ' )' → logprob: -16.875036239624023
    6. '))' → logprob: -17.625036239624023
    7. ')#' → logprob: -17.875036239624023
    8. ')`' → logprob: -18.000036239624023
    9. '),' → logprob: -18.500036239624023
    10. ')
' → logprob: -18.625036239624023

Token 3454: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016885673627257347
    2. 'for' → logprob: -4.891885757446289
    3. '   ' → logprob: -5.016885757446289
    4. ' for' → logprob: -6.266885757446289
    5. '
' → logprob: -7.391885757446289
    6. 'def' → logprob: -10.141885757446289
    7. ' ' → logprob: -10.891885757446289
    8. '<|end|>' → logprob: -11.016885757446289
    9. '	for' → logprob: -11.766885757446289
    10. '	' → logprob: -12.891885757446289

Token 3455: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2549954652786255
    2. 'for' → logprob: -1.5049954652786255
    3. ' for' → logprob: -6.004995346069336
    4. '
' → logprob: -7.629995346069336
    5. '   ' → logprob: -9.254995346069336
    6. '	for' → logprob: -12.629995346069336
    7. ',' → logprob: -13.379995346069336
    8. 'def' → logprob: -13.504995346069336
    9. ')' → logprob: -13.629995346069336
    10. 'self' → logprob: -13.754995346069336

Token 3456: ' specs' (ID: 56919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018363336857873946
    2. '#' → logprob: -9.875184059143066
    3. '       ' → logprob: -9.875184059143066
    4. ' for' → logprob: -9.875184059143066
    5. 'self' → logprob: -11.250184059143066
    6. 'def' → logprob: -11.875184059143066
    7. '201' → logprob: -12.375184059143066
    8. '202' → logprob: -13.250184059143066
    9. '   ' → logprob: -13.625184059143066
    10. '0' → logprob: -14.625184059143066

Token 3457: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4910070598125458
    2. '       ' → logprob: -0.9910070896148682
    3. ' for' → logprob: -4.116006851196289
    4. '   ' → logprob: -7.741006851196289
    5. 'def' → logprob: -11.116006851196289
    6. '
' → logprob: -11.741006851196289
    7. '#' → logprob: -11.866006851196289
    8. '<|end|>' → logprob: -12.866006851196289
    9. ')' → logprob: -13.116006851196289
    10. '	for' → logprob: -13.491006851196289

Token 3458: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4692865014076233
    2. 'self' → logprob: -2.0942864418029785
    3. 'x' → logprob: -2.3442864418029785
    4. '
' → logprob: -3.2192864418029785
    5. ' for' → logprob: -3.7192864418029785
    6. '#' → logprob: -4.3442864418029785
    7. '=' → logprob: -4.4692864418029785
    8. ')
' → logprob: -4.7192864418029785
    9. 'size' → logprob: -4.8442864418029785
    10. '       ' → logprob: -5.0942864418029785

Token 3459: '0' (ID: 15)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.24714703857898712
    2. '201' → logprob: -1.7471470832824707
    3. '
' → logprob: -4.122147083282471
    4. '0' → logprob: -4.747147083282471
    5. 'x' → logprob: -5.122147083282471
    6. '=' → logprob: -5.747147083282471
    7. ' ' → logprob: -5.997147083282471
    8. '+
' → logprob: -6.247147083282471
    9. '   ' → logprob: -6.372147083282471
    10. '+' → logprob: -6.497147083282471

Token 3460: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01698131673038006
    2. ',
' → logprob: -4.64198112487793
    3. ' ,' → logprob: -5.89198112487793
    4. '<|end|>' → logprob: -6.39198112487793
    5. '0' → logprob: -6.76698112487793
    6. ')' → logprob: -7.26698112487793
    7. '
' → logprob: -8.39198112487793
    8. ' ,
' → logprob: -9.26698112487793
    9. '<|end|>' → logprob: -9.39198112487793
    10. '200' → logprob: -9.76698112487793

Token 3461: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0011633152607828379
    2. '201' → logprob: -7.251163482666016
    3. ' ' → logprob: -8.501163482666016
    4. '0' → logprob: -9.001163482666016
    5. '
' → logprob: -9.501163482666016
    6. '   ' → logprob: -10.376163482666016
    7. '```' → logprob: -11.626163482666016
    8. '100' → logprob: -12.501163482666016
    9. '199' → logprob: -13.001163482666016
    10. '       ' → logprob: -13.751163482666016

Token 3462: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05025297775864601
    2. '       ' → logprob: -3.050252914428711
    3. ' for' → logprob: -6.425252914428711
    4. '   ' → logprob: -10.300252914428711
    5. '	for' → logprob: -12.800252914428711
    6. 'def' → logprob: -13.050252914428711
    7. '```' → logprob: -13.050252914428711
    8. '
' → logprob: -13.425252914428711
    9. '#' → logprob: -13.800252914428711
    10. 'self' → logprob: -15.175252914428711

Token 3463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007809850387275219
    2. 'for' → logprob: -5.382809638977051
    3. '   ' → logprob: -5.882809638977051
    4. '
' → logprob: -8.63280963897705
    5. 'def' → logprob: -9.13280963897705
    6. ' for' → logprob: -9.13280963897705
    7. 'self' → logprob: -13.75780963897705
    8. '	for' → logprob: -14.38280963897705
    9. ' ' → logprob: -14.88280963897705
    10. 'For' → logprob: -15.50780963897705

Token 3464: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019797838758677244
    2. '       ' → logprob: -6.251979827880859
    3. 'def' → logprob: -10.12697982788086
    4. ' for' → logprob: -12.00197982788086
    5. '   ' → logprob: -12.37697982788086
    6. 'self' (adapté à ' self') → logprob: -14.25197982788086
    7. '#' → logprob: -15.87697982788086
    8. '
' → logprob: -17.00197982788086
    9. '	for' → logprob: -17.00197982788086
    10. '```' → logprob: -18.25197982788086

Token 3465: '.vis' (ID: 15800)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.32574138045310974
    2. 'def' → logprob: -2.8257412910461426
    3. 'points' → logprob: -2.9507412910461426
    4. '.vis' → logprob: -3.0757412910461426
    5. '._' → logprob: -3.2007412910461426
    6. '_points' → logprob: -3.3257412910461426
    7. 'for' → logprob: -4.700741291046143
    8. '.points' → logprob: -4.825741291046143
    9. '.' → logprob: -5.825741291046143
    10. 'point' → logprob: -5.950741291046143

Token 3466: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.696889623621246e-06
    2. 'isted' → logprob: -13.25000286102295
    3. '```' → logprob: -15.62500286102295
    4. '_' → logprob: -15.87500286102295
    5. '[' → logprob: -16.000001907348633
    6. 'ITED' → logprob: -16.000001907348633
    7. 'ible' → logprob: -16.125001907348633
    8. '   ' → logprob: -16.750001907348633
    9. '=' → logprob: -16.750001907348633
    10. '`' → logprob: -17.500001907348633

Token 3467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1607036590576172
    2. ' =' → logprob: -1.9107036590576172
    3. '=set' → logprob: -8.035703659057617
    4. ':' → logprob: -8.785703659057617
    5. 'set' → logprob: -13.910703659057617
    6. ' ' → logprob: -14.035703659057617
    7. '   ' → logprob: -14.785703659057617
    8. '=
' → logprob: -15.785703659057617
    9. ' set' → logprob: -15.785703659057617
    10. ' =
' → logprob: -16.035703659057617

Token 3468: ' [[' (ID: 9237)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.386922687292099
    2. '[[' → logprob: -1.1369227170944214
    3. ' [[' → logprob: -10.011922836303711
    4. 'Grid' → logprob: -12.511922836303711
    5. ' set' → logprob: -13.386922836303711
    6. '[' → logprob: -13.886922836303711
    7. '{' → logprob: -14.761922836303711
    8. '{}' → logprob: -16.13692283630371
    9. 'Set' → logprob: -16.51192283630371
    10. '[
' → logprob: -17.26192283630371

Token 3469: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.512236498361744e-07
    2. ' False' → logprob: -14.500000953674316
    3. '(False' → logprob: -21.5
    4. '0' → logprob: -24.125
    5. '=False' → logprob: -24.5
    6. 'false' → logprob: -24.75
    7. 'True' → logprob: -25.125
    8. '   ' → logprob: -25.5
    9. '[' → logprob: -26.5
    10. 'None' → logprob: -26.75

Token 3470: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.07690098136663437
    2. ']' → logprob: -2.7019009590148926
    3. ' for' → logprob: -5.576900959014893
    4. 'for' → logprob: -6.826900959014893
    5. ']*(' → logprob: -7.201900959014893
    6. '   ' → logprob: -7.826900959014893
    7. '][' → logprob: -7.826900959014893
    8. '[' → logprob: -7.951900959014893
    9. ']+' → logprob: -9.57690143585205
    10. '       ' → logprob: -10.45190143585205

Token 3471: '201' (ID: 667)
  Prédit: '201'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '201' → logprob: -7.584239938296378e-06
    2. 'self' → logprob: -11.875007629394531
    3. '(' → logprob: -15.125007629394531
    4. '200' → logprob: -15.625007629394531
    5. '202' → logprob: -16.87500762939453
    6. ' ' → logprob: -17.25000762939453
    7. '   ' → logprob: -18.00000762939453
    8. '(self' → logprob: -18.75000762939453
    9. '```' → logprob: -19.25000762939453
    10. '
' → logprob: -19.75000762939453

Token 3472: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12806712090969086
    2. 'for' → logprob: -2.1280670166015625
    3. ']' → logprob: -7.6280670166015625
    4. '   ' → logprob: -8.253067016601562
    5. '       ' → logprob: -8.753067016601562
    6. '           ' → logprob: -9.128067016601562
    7. '               ' → logprob: -10.128067016601562
    8. '[' → logprob: -10.378067016601562
    9. ']*' → logprob: -11.253067016601562
    10. '	for' → logprob: -11.378067016601562

Token 3473: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012198820477351546
    2. '_range' → logprob: -6.751219749450684
    3. ' _' → logprob: -10.626219749450684
    4. '_in' → logprob: -10.751219749450684
    5. '_i' → logprob: -13.376219749450684
    6. ' range' → logprob: -13.751219749450684
    7. '_=' → logprob: -14.751219749450684
    8. 'range' → logprob: -15.251219749450684
    9. '_row' → logprob: -16.001220703125
    10. '_r' → logprob: -16.501220703125

Token 3474: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.37512102723121643
    2. '_' → logprob: -1.500120997428894
    3. '_range' → logprob: -2.6251211166381836
    4. ' range' → logprob: -4.125121116638184
    5. 'i' → logprob: -8.125121116638184
    6. '_i' → logprob: -8.375121116638184
    7. '_=' → logprob: -9.250121116638184
    8. '<|end|>' → logprob: -9.250121116638184
    9. '_lineno' → logprob: -10.375121116638184
    10. '_RANGE' → logprob: -10.375121116638184

Token 3475: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.941161776310764e-05
    2. ' range' → logprob: -10.250039100646973
    3. '_range' → logprob: -12.500039100646973
    4. '_' → logprob: -15.500039100646973
    5. '
' → logprob: -20.00004005432129
    6. '	range' → logprob: -20.25004005432129
    7. '(range' → logprob: -20.87504005432129
    8. '[' → logprob: -22.37504005432129
    9. '.range' → logprob: -22.37504005432129
    10. '   ' → logprob: -22.87504005432129

Token 3476: '(' (ID: 7)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009119403548538685
    2. ' range' → logprob: -7.000911712646484
    3. '(range' → logprob: -15.250911712646484
    4. '
' → logprob: -15.750911712646484
    5. '201' → logprob: -16.375911712646484
    6. '   ' → logprob: -17.625911712646484
    7. '[' → logprob: -17.750911712646484
    8. '_range' → logprob: -18.250911712646484
    9. '	range' → logprob: -18.375911712646484
    10. 'self' → logprob: -18.500911712646484

Token 3477: '201' (ID: 667)
  Prédit: '201'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '201' → logprob: -0.004091935232281685
    2. 'range' → logprob: -5.504091739654541
    3. 'self' → logprob: -12.3790922164917
    4. '200' → logprob: -12.7540922164917
    5. ' range' → logprob: -12.8790922164917
    6. '(' → logprob: -13.6290922164917
    7. ' ' → logprob: -13.6290922164917
    8. '   ' → logprob: -14.2540922164917
    9. '202' → logprob: -15.2540922164917
    10. '
' → logprob: -15.3790922164917

Token 3478: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0017948969034478068
    2. ')]
' → logprob: -6.876794815063477
    3. '       ' → logprob: -7.251794815063477
    4. ']' → logprob: -11.126794815063477
    5. '   ' → logprob: -11.376794815063477
    6. ')' → logprob: -11.876794815063477
    7. ')]
' → logprob: -12.376794815063477
    8. '])]' → logprob: -12.376794815063477
    9. ')])' → logprob: -12.626794815063477
    10. '           ' → logprob: -12.751794815063477

Token 3479: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31918641924858093
    2. '   ' → logprob: -1.3191864490509033
    3. '
' → logprob: -5.569186210632324
    4. ' def' → logprob: -6.194186210632324
    5. '    
' → logprob: -11.069186210632324
    6. '<|end|>' → logprob: -11.444186210632324
    7. '	def' → logprob: -11.819186210632324
    8. '       ' → logprob: -12.444186210632324
    9. '```' → logprob: -12.444186210632324
    10. '

' → logprob: -12.694186210632324

Token 3480: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.081584716506768e-05
    2. ' def' → logprob: -11.375020980834961
    3. '   ' → logprob: -11.625020980834961
    4. '
' → logprob: -14.875020980834961
    5. '	def' → logprob: -18.75002098083496
    6. 'class' → logprob: -19.50002098083496
    7. ')' → logprob: -19.62502098083496
    8. '    
' → logprob: -19.62502098083496
    9. '#' → logprob: -19.75002098083496
    10. '```' → logprob: -20.75002098083496

Token 3481: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.56834876537323
    2. 'mark' → logprob: -1.69334876537323
    3. 'fill' → logprob: -2.4433488845825195
    4. 'f' → logprob: -2.5683488845825195
    5. 'process' → logprob: -3.1933488845825195
    6. 'run' → logprob: -4.0683488845825195
    7. 'parse' → logprob: -5.0683488845825195
    8. 'populate' → logprob: -5.1933488845825195
    9. '_mark' → logprob: -5.6933488845825195
    10. 'solve' → logprob: -6.0683488845825195

Token 3482: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.07191683351993561
    2. '_line' → logprob: -3.3219168186187744
    3. '_' → logprob: -4.3219170570373535
    4. '_lines' → logprob: -4.6969170570373535
    5. '(' → logprob: -4.9469170570373535
    6. '_cells' → logprob: -6.8219170570373535
    7. '(
' → logprob: -7.5719170570373535
    8. 'grid' → logprob: -7.6969170570373535
    9. '(self' → logprob: -7.8219170570373535
    10. '()' → logprob: -7.9469170570373535

Token 3483: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.615255839889869e-05
    2. '(' → logprob: -9.375096321105957
    3. '(
' → logprob: -11.875096321105957
    4. '   ' → logprob: -12.750096321105957
    5. ' (' → logprob: -14.125096321105957
    6. '       ' → logprob: -14.750096321105957
    7. 'self' → logprob: -15.500096321105957
    8. '(s' → logprob: -16.87509536743164
    9. 'def' → logprob: -17.50009536743164
    10. ' ' → logprob: -17.75009536743164

Token 3484: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06962670385837555
    2. '):' → logprob: -2.944626808166504
    3. '):
' → logprob: -4.319626808166504
    4. '   ' → logprob: -7.819626808166504
    5. 'self' → logprob: -7.819626808166504
    6. '       ' → logprob: -8.194626808166504
    7. ',' → logprob: -9.444626808166504
    8. '(' → logprob: -9.694626808166504
    9. ')' → logprob: -10.194626808166504
    10. '):
' → logprob: -11.319626808166504

Token 3485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8325677703833207e-05
    2. ' for' → logprob: -11.125028610229492
    3. 'for' → logprob: -11.375028610229492
    4. '```' → logprob: -14.000028610229492
    5. '   ' → logprob: -14.125028610229492
    6. ':' → logprob: -15.375028610229492
    7. ',' → logprob: -16.375028610229492
    8. '	' → logprob: -16.625028610229492
    9. '	for' → logprob: -17.375028610229492
    10. 'self' → logprob: -18.000028610229492

Token 3486: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1007099449634552
    2. '       ' → logprob: -2.350709915161133
    3. ' for' → logprob: -7.600709915161133
    4. '   ' → logprob: -13.350709915161133
    5. '	for' → logprob: -13.850709915161133
    6. '```' → logprob: -14.600709915161133
    7. '	' → logprob: -17.600709915161133
    8. ' ' → logprob: -18.725709915161133
    9. 'def' → logprob: -19.600709915161133
    10. '           ' → logprob: -19.600709915161133

Token 3487: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029802558943629265
    2. '(x' → logprob: -3.5298025608062744
    3. 'p' → logprob: -10.779802322387695
    4. ' x' → logprob: -11.779802322387695
    5. '(p' → logprob: -11.779802322387695
    6. 'seg' → logprob: -12.654802322387695
    7. '   ' → logprob: -12.904802322387695
    8. '(' → logprob: -12.904802322387695
    9. ' (' → logprob: -13.154802322387695
    10. '(l' → logprob: -13.529802322387695

Token 3488: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.3199920178740285e-05
    2. '   ' → logprob: -11.250022888183594
    3. '(x' → logprob: -11.875022888183594
    4. ' x' → logprob: -14.000022888183594
    5. 'p' → logprob: -14.250022888183594
    6. '       ' → logprob: -14.875022888183594
    7. '           ' → logprob: -15.000022888183594
    8. ')x' → logprob: -15.375022888183594
    9. 'sx' → logprob: -15.375022888183594
    10. '_x' → logprob: -15.750022888183594

Token 3489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018113377154804766
    2. '0' → logprob: -8.875181198120117
    3. '_start' → logprob: -10.875181198120117
    4. 'start' → logprob: -11.625181198120117
    5. 'from' → logprob: -11.750181198120117
    6. ',' → logprob: -13.125181198120117
    7. 's' → logprob: -14.125181198120117
    8. '   ' → logprob: -14.500181198120117
    9. '_from' → logprob: -14.500181198120117
    10. ')' → logprob: -14.625181198120117

Token 3490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006077215657569468
    2. ',y' → logprob: -8.00060749053955
    3. ' ,' → logprob: -8.75060749053955
    4. ',x' → logprob: -9.25060749053955
    5. '1' → logprob: -12.50060749053955
    6. '_,' → logprob: -12.75060749053955
    7. ',
' → logprob: -12.87560749053955
    8. ',int' → logprob: -13.50060749053955
    9. '‌,' → logprob: -14.12560749053955
    10. 'def' → logprob: -14.12560749053955

Token 3491: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.572941179503687e-05
    2. ' y' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.500045776367188
    4. ',' → logprob: -17.250045776367188
    5. ',y' → logprob: -17.250045776367188
    6. '<|end|>' → logprob: -17.375045776367188
    7. '       ' → logprob: -17.500045776367188
    8. '    ' → logprob: -17.750045776367188
    9. '	y' → logprob: -17.750045776367188
    10. ')' → logprob: -18.750045776367188

Token 3492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010390079842181876
    2. ',' → logprob: -9.250103950500488
    3. ')' → logprob: -12.875103950500488
    4. '
' → logprob: -13.875103950500488
    5. '_start' → logprob: -13.875103950500488
    6. '   ' → logprob: -14.375103950500488
    7. '_' → logprob: -14.625103950500488
    8. '),' → logprob: -14.750103950500488
    9. '```' → logprob: -14.750103950500488
    10. '=' → logprob: -15.625103950500488

Token 3493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004218554822728038
    2. ' ,' → logprob: -7.87542200088501
    3. ',x' → logprob: -10.125421524047852
    4. ',
' → logprob: -14.750421524047852
    5. '),' → logprob: -15.500421524047852
    6. '_,' → logprob: -15.625421524047852
    7. '   ' → logprob: -15.750421524047852
    8. ',y' → logprob: -15.750421524047852
    9. 'x' → logprob: -16.00042152404785
    10. 'def' → logprob: -16.12542152404785

Token 3494: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00020354038861114532
    2. ' x' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.62520408630371
    4. '	x' → logprob: -19.87520408630371
    5. ')x' → logprob: -19.87520408630371
    6. ',x' → logprob: -20.62520408630371
    7. ' ' → logprob: -21.75020408630371
    8. '    ' → logprob: -22.25020408630371
    9. ')' → logprob: -22.25020408630371
    10. '  ' → logprob: -22.62520408630371

Token 3495: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '2' → logprob: -12.62501049041748
    3. ',' → logprob: -13.00001049041748
    4. '```' → logprob: -13.37501049041748
    5. ')' → logprob: -13.87501049041748
    6. '   ' → logprob: -14.12501049041748
    7. '_' → logprob: -14.87501049041748
    8. ' ' → logprob: -15.25001049041748
    9. '       ' → logprob: -16.000009536743164
    10. '=' → logprob: -16.750009536743164

Token 3496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002516681095585227
    2. ',x' → logprob: -6.502516746520996
    3. ' ,' → logprob: -7.252516746520996
    4. '1' → logprob: -8.252516746520996
    5. ',y' → logprob: -10.752516746520996
    6. '_,' → logprob: -12.002516746520996
    7. ')' → logprob: -12.252516746520996
    8. '       ' → logprob: -13.002516746520996
    9. ',
' → logprob: -13.127516746520996
    10. '```' → logprob: -13.627516746520996

Token 3497: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01632232777774334
    2. 'x' → logprob: -4.266322135925293
    3. ' y' → logprob: -6.141322135925293
    4. ' x' → logprob: -13.391322135925293
    5. '   ' → logprob: -13.391322135925293
    6. ' ' → logprob: -15.016322135925293
    7. ')' → logprob: -15.391322135925293
    8. '    ' → logprob: -15.766322135925293
    9. ')y' → logprob: -16.01632308959961
    10. 'int' → logprob: -16.39132308959961

Token 3498: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014165744185447693
    2. '1' → logprob: -4.264165878295898
    3. ')' → logprob: -13.764165878295898
    4. '```' → logprob: -14.514165878295898
    5. 'x' → logprob: -15.389165878295898
    6. ' ' → logprob: -15.514165878295898
    7. '   ' → logprob: -16.1391658782959
    8. '
' → logprob: -16.5141658782959
    9. ',' → logprob: -16.7641658782959
    10. '_' → logprob: -17.7641658782959

Token 3499: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. '       ' → logprob: -11.500019073486328
    3. '):
' → logprob: -12.000019073486328
    4. ' )' → logprob: -13.625019073486328
    5. '):' → logprob: -14.125019073486328
    6. ' in' → logprob: -14.625019073486328
    7. '),' → logprob: -15.875019073486328
    8. '   ' → logprob: -15.875019073486328
    9. 'in' → logprob: -16.125019073486328
    10. ')
' → logprob: -16.250019073486328

Token 3500: ' in' (ID: 306)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11825285106897354
    2. ':' → logprob: -3.118252754211426
    3. ' in' → logprob: -3.243252754211426
    4. '       ' → logprob: -4.243252754211426
    5. '   ' → logprob: -4.993252754211426
    6. 'in' → logprob: -5.868252754211426
    7. '):
' → logprob: -6.118252754211426
    8. '=' → logprob: -7.368252754211426
    9. ',' → logprob: -7.743252754211426
    10. '           ' → logprob: -7.993252754211426

Token 3501: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.542423165636137e-05
    2. ' self' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.250085830688477
    4. '(self' → logprob: -15.750085830688477
    5. '[self' → logprob: -16.625085830688477
    6. '       ' → logprob: -16.875085830688477
    7. ')' → logprob: -18.375085830688477
    8. '
' → logprob: -18.875085830688477
    9. '           ' → logprob: -19.375085830688477
    10. '	self' → logprob: -19.500085830688477

Token 3502: '.line' (ID: 21221)
  Prédit: '.line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.line' → logprob: -0.0552164688706398
    2. 'line' → logprob: -2.9302165508270264
    3. '.' → logprob: -9.055216789245605
    4. '.grid' → logprob: -9.555216789245605
    5. ' line' → logprob: -9.805216789245605
    6. '_line' → logprob: -11.055216789245605
    7. '   ' → logprob: -11.555216789245605
    8. '.
' → logprob: -11.680216789245605
    9. '	line' → logprob: -11.930216789245605
    10. ':' → logprob: -12.305216789245605

Token 3503: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0016642312984913588
    2. '_' → logprob: -6.626664161682129
    3. 'segments' → logprob: -9.001664161682129
    4. '_
' → logprob: -9.876664161682129
    5. '       ' → logprob: -10.251664161682129
    6. 'Segments' → logprob: -10.626664161682129
    7. '   ' → logprob: -10.626664161682129
    8. 's' → logprob: -10.751664161682129
    9. ')' → logprob: -11.751664161682129
    10. '):
' → logprob: -12.126664161682129

Token 3504: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01558802742511034
    2. ':' → logprob: -4.51558780670166
    3. '       ' → logprob: -5.64058780670166
    4. '):
' → logprob: -7.26558780670166
    5. '           ' → logprob: -8.26558780670166
    6. ':
' → logprob: -12.01558780670166
    7. '():
' → logprob: -12.26558780670166
    8. '   ' → logprob: -12.64058780670166
    9. ',' → logprob: -13.51558780670166
    10. ':

' → logprob: -13.64058780670166

Token 3505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001657565007917583
    2. '       ' → logprob: -8.875165939331055
    3. 'self' → logprob: -10.750165939331055
    4. '```' → logprob: -13.500165939331055
    5. '   ' → logprob: -13.625165939331055
    6. ' self' → logprob: -14.375165939331055
    7. '	       ' → logprob: -15.250165939331055
    8. '
' → logprob: -15.625165939331055
    9. '	   ' → logprob: -15.750165939331055
    10. '               ' → logprob: -15.875165939331055

Token 3506: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4386213719844818
    2. '           ' → logprob: -1.5636214017868042
    3. 'p' → logprob: -1.9386214017868042
    4. '               ' → logprob: -7.063621520996094
    5. ' self' → logprob: -7.188621520996094
    6. ' p' → logprob: -9.813621520996094
    7. '   ' → logprob: -10.188621520996094
    8. 'point' → logprob: -10.188621520996094
    9. '       ' → logprob: -10.813621520996094
    10. 'pt' → logprob: -11.063621520996094

Token 3507: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.002666854066774249
    2. '.' → logprob: -6.25266695022583
    3. 'grid' → logprob: -7.37766695022583
    4. '.build' → logprob: -10.127666473388672
    5. '.mark' → logprob: -10.252666473388672
    6. '.
' → logprob: -11.002666473388672
    7. ' .' → logprob: -12.127666473388672
    8. 'build' → logprob: -13.252666473388672
    9. '   ' → logprob: -13.377666473388672
    10. ').' → logprob: -13.627666473388672

Token 3508: '.mark' (ID: 32834)
  Prédit: '.mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mark' → logprob: -0.0004315036640036851
    2. '.' → logprob: -7.750431537628174
    3. 'mark' → logprob: -15.875431060791016
    4. '.Mark' → logprob: -15.875431060791016
    5. ' .' → logprob: -16.000431060791016
    6. '   ' → logprob: -16.125431060791016
    7. '.
' → logprob: -16.250431060791016
    8. '\.' → logprob: -16.625431060791016
    9. '       ' → logprob: -17.375431060791016
    10. '(mark' → logprob: -17.625431060791016

Token 3509: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.580929347255733e-05
    2. 'line' → logprob: -11.125016212463379
    3. '_' → logprob: -14.625016212463379
    4. '_LINE' → logprob: -15.125016212463379
    5. '(line' → logprob: -16.375015258789062
    6. 'Line' → logprob: -17.625015258789062
    7. '_point' → logprob: -17.750015258789062
    8. '_lines' → logprob: -17.750015258789062
    9. '#line' → logprob: -17.875015258789062
    10. '_
' → logprob: -18.250015258789062

Token 3510: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.018182599917054176
    2. 'Point' → logprob: -4.018182754516602
    3. ' Point' → logprob: -11.018182754516602
    4. '(' → logprob: -11.643182754516602
    5. '(
' → logprob: -12.643182754516602
    6. '   ' → logprob: -13.018182754516602
    7. '	Point' → logprob: -13.393182754516602
    8. '       ' → logprob: -15.643182754516602
    9. '           ' → logprob: -16.1431827545166
    10. 'Points' → logprob: -16.5181827545166

Token 3511: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.033757731318473816
    2. 'x' → logprob: -3.4087576866149902
    3. '(' → logprob: -9.533758163452148
    4. '(
' → logprob: -11.158758163452148
    5. ')' → logprob: -11.658758163452148
    6. ' x' → logprob: -12.533758163452148
    7. ')x' → logprob: -12.658758163452148
    8. ')(' → logprob: -12.908758163452148
    9. '   ' → logprob: -13.283758163452148
    10. ' (' → logprob: -13.533758163452148

Token 3512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5861724831629544e-05
    2. 'x' → logprob: -10.125056266784668
    3. '(' → logprob: -12.375056266784668
    4. '=' → logprob: -12.500056266784668
    5. '(x' → logprob: -12.500056266784668
    6. '   ' → logprob: -13.125056266784668
    7. '```' → logprob: -13.875056266784668
    8. '_' → logprob: -15.000056266784668
    9. '       ' → logprob: -15.875056266784668
    10. '=x' → logprob: -16.12505531311035

Token 3513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004264185205101967
    2. ' ,' → logprob: -5.6292643547058105
    3. ',y' → logprob: -7.8792643547058105
    4. '),' → logprob: -9.379263877868652
    5. '<|end|>' → logprob: -10.129263877868652
    6. '<|end|>' → logprob: -10.129263877868652
    7. ',x' → logprob: -10.379263877868652
    8. '   ' → logprob: -10.504263877868652
    9. ',
' → logprob: -11.004263877868652
    10. ')' → logprob: -11.504263877868652

Token 3514: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00015860427811276168
    2. ' y' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.875158309936523
    4. 'x' → logprob: -17.375158309936523
    5. '	y' → logprob: -17.500158309936523
    6. '<|end|>' → logprob: -19.500158309936523
    7. '    ' → logprob: -19.625158309936523
    8. ' ' → logprob: -19.750158309936523
    9. '  ' → logprob: -19.750158309936523
    10. '0' → logprob: -19.750158309936523

Token 3515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18132558465003967
    2. 'y' → logprob: -1.8063255548477173
    3. '```' → logprob: -7.806325435638428
    4. ')' → logprob: -8.056325912475586
    5. ',y' → logprob: -8.431325912475586
    6. '   ' → logprob: -8.556325912475586
    7. ',' → logprob: -8.556325912475586
    8. ' y' → logprob: -8.931325912475586
    9. '),' → logprob: -10.556325912475586
    10. '<|end|>' → logprob: -10.806325912475586

Token 3516: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020460553932935
    2. '),' → logprob: -6.25204610824585
    3. ',
' → logprob: -9.252045631408691
    4. ' ,' → logprob: -11.502045631408691
    5. ',x' → logprob: -12.377045631408691
    6. ')' → logprob: -12.502045631408691
    7. ',p' → logprob: -13.877045631408691
    8. ',),' → logprob: -14.252045631408691
    9. '),
' → logprob: -14.377045631408691
    10. '   ' → logprob: -15.127045631408691

Token 3517: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.5048530030981055e-06
    2. ' Point' → logprob: -13.500001907348633
    3. '(Point' → logprob: -18.875001907348633
    4. '	Point' → logprob: -19.500001907348633
    5. '           ' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.375001907348633
    7. '_Point' → logprob: -22.250001907348633
    8. '               ' → logprob: -22.500001907348633
    9. '<Point' → logprob: -22.625001907348633
    10. '       ' → logprob: -23.000001907348633

Token 3518: '(x' (ID: 4061)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0014288094826042652
    2. '(x' → logprob: -7.251428604125977
    3. '(Point' → logprob: -7.251428604125977
    4. ' Point' → logprob: -11.626428604125977
    5. '	Point' → logprob: -15.501428604125977
    6. 'x' → logprob: -16.501428604125977
    7. '_Point' → logprob: -16.501428604125977
    8. '<Point' → logprob: -17.126428604125977
    9. '```' → logprob: -17.251428604125977
    10. '   ' → logprob: -17.626428604125977

Token 3519: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04401438683271408
    2. '2' → logprob: -3.1690144538879395
    3. '(x' → logprob: -6.9190144538879395
    4. 'Point' → logprob: -11.169013977050781
    5. '1' → logprob: -12.669013977050781
    6. '(' → logprob: -13.044013977050781
    7. ' x' → logprob: -13.419013977050781
    8. '```' → logprob: -13.794013977050781
    9. ')x' → logprob: -14.044013977050781
    10. '   ' → logprob: -14.169013977050781

Token 3520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038695470429956913
    2. '(x' → logprob: -5.753869533538818
    3. 'Point' → logprob: -8.128870010375977
    4. '(Point' → logprob: -8.753870010375977
    5. ',x' → logprob: -9.003870010375977
    6. '(' → logprob: -9.503870010375977
    7. 'x' → logprob: -11.253870010375977
    8. ' ,' → logprob: -11.378870010375977
    9. ')' → logprob: -12.378870010375977
    10. '1' → logprob: -13.253870010375977

Token 3521: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008264916017651558
    2. 'Point' → logprob: -5.008265018463135
    3. 'x' → logprob: -7.008265018463135
    4. ' y' → logprob: -7.383265018463135
    5. ' Point' → logprob: -11.633264541625977
    6. 'Points' → logprob: -12.258264541625977
    7. '   ' → logprob: -12.758264541625977
    8. '(Point' → logprob: -13.383264541625977
    9. '(y' → logprob: -14.508264541625977
    10. '       ' → logprob: -14.758264541625977

Token 3522: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015096203424036503
    2. '1' → logprob: -6.501509666442871
    3. 'y' → logprob: -12.626509666442871
    4. ')' → logprob: -13.376509666442871
    5. '```' → logprob: -14.376509666442871
    6. ' ' → logprob: -15.001509666442871
    7. 'ellow' → logprob: -15.126509666442871
    8. ' y' → logprob: -15.251509666442871
    9. '   ' → logprob: -16.001508712768555
    10. 'x' → logprob: -16.126508712768555

Token 3523: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004016664810478687
    2. ')' → logprob: -5.629016876220703
    3. '       ' → logprob: -8.254016876220703
    4. '))
' → logprob: -9.129016876220703
    5. '           ' → logprob: -10.129016876220703
    6. '   ' → logprob: -13.129016876220703
    7. ')))' → logprob: -13.379016876220703
    8. ')
' → logprob: -13.504016876220703
    9. '               ' → logprob: -13.879016876220703
    10. ' ))' → logprob: -14.629016876220703

Token 3524: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06709163635969162
    2. '   ' → logprob: -2.817091703414917
    3. 'def' → logprob: -5.817091464996338
    4. '<|end|>' → logprob: -6.942091464996338
    5. ' def' → logprob: -7.692091464996338
    6. '

' → logprob: -8.067091941833496
    7. '    
' → logprob: -8.317091941833496
    8. '```' → logprob: -9.817091941833496
    9. '	def' → logprob: -10.942091941833496
    10. ' ' → logprob: -11.067091941833496

Token 3525: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0024663826916366816
    2. '   ' → logprob: -6.627466201782227
    3. ' def' → logprob: -7.252466201782227
    4. '
' → logprob: -7.752466201782227
    5. '	def' → logprob: -14.127466201782227
    6. '    
' → logprob: -14.627466201782227
    7. '```' → logprob: -15.502466201782227
    8. '

' → logprob: -15.877466201782227
    9. ' ' → logprob: -16.502466201782227
    10. 'de' → logprob: -16.752466201782227

Token 3526: ' find' (ID: 1646)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7653805613517761
    2. 'find' → logprob: -0.7653805613517761
    3. 'detect' → logprob: -4.265380382537842
    4. 'dfs' → logprob: -4.515380382537842
    5. 'run' → logprob: -5.015380382537842
    6. 'scan' → logprob: -5.140380382537842
    7. 'identify' → logprob: -5.390380382537842
    8. 'b' → logprob: -5.515380382537842
    9. 'extract' → logprob: -5.640380382537842
    10. 'mark' → logprob: -5.640380382537842

Token 3527: '_char' (ID: 23398)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.7930104732513428
    2. '_connected' → logprob: -1.1680104732513428
    3. '_clusters' → logprob: -2.4180104732513428
    4. '_chars' → logprob: -2.9180104732513428
    5. '_char' → logprob: -3.2930104732513428
    6. '_next' → logprob: -4.293010711669922
    7. '_all' → logprob: -4.793010711669922
    8. '_black' → logprob: -5.043010711669922
    9. '_' → logprob: -5.043010711669922
    10. '_points' → logprob: -5.293010711669922

Token 3528: '_regions' (ID: 153218)
  Prédit: 'acters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.05799594894051552
    2. 'acter' → logprob: -2.9329960346221924
    3. '_clusters' → logprob: -6.307995796203613
    4. 's' → logprob: -7.557995796203613
    5. '_components' → logprob: -8.932995796203613
    6. 'clusters' → logprob: -8.932995796203613
    7. '_regions' → logprob: -9.807995796203613
    8. '_points' → logprob: -9.932995796203613
    9. '(self' → logprob: -9.932995796203613
    10. 'act' → logprob: -10.057995796203613

Token 3529: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -11.62501049041748
    3. '   ' → logprob: -13.75001049041748
    4. 'self' → logprob: -14.62501049041748
    5. '       ' → logprob: -15.87501049041748
    6. ' (' → logprob: -16.250011444091797
    7. '(
' → logprob: -17.250011444091797
    8. '	self' → logprob: -18.250011444091797
    9. '(s' → logprob: -18.375011444091797
    10. 'def' → logprob: -18.500011444091797

Token 3530: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5650683045387268
    2. '):
' → logprob: -1.690068244934082
    3. 'self' → logprob: -2.065068244934082
    4. '):' → logprob: -2.440068244934082
    5. ')' → logprob: -4.315068244934082
    6. '       ' → logprob: -4.690068244934082
    7. '   ' → logprob: -4.940068244934082
    8. 's' → logprob: -6.190068244934082
    9. ')_' → logprob: -8.815068244934082
    10. '):

' → logprob: -8.940068244934082

Token 3531: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018904022872447968
    2. '       ' → logprob: -4.393904209136963
    3. '   ' → logprob: -5.143904209136963
    4. 'self' → logprob: -7.893904209136963
    5. '(' → logprob: -9.643903732299805
    6. 'def' → logprob: -10.018903732299805
    7. ':
' → logprob: -10.643903732299805
    8. '	self' → logprob: -11.393903732299805
    9. ':' → logprob: -12.143903732299805
    10. '(
' → logprob: -12.643903732299805

Token 3532: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.001548545085825026
    2. 'Set' → logprob: -6.501548767089844
    3. ' List' → logprob: -11.001548767089844
    4. '[List' → logprob: -11.251548767089844
    5. 'self' → logprob: -12.126548767089844
    6. '[]' → logprob: -12.251548767089844
    7. '[]
' → logprob: -12.626548767089844
    8. 'def' → logprob: -13.751548767089844
    9. 'Dict' → logprob: -14.126548767089844
    10. 'list' → logprob: -15.501548767089844

Token 3533: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7019185423851013
    2. '[List' → logprob: -0.7019185423851013
    3. '[self' → logprob: -4.826918601989746
    4. '(self' → logprob: -8.201918601989746
    5. '[
' → logprob: -8.326918601989746
    6. 'self' → logprob: -9.826918601989746
    7. '   ' → logprob: -9.826918601989746
    8. '[(' → logprob: -10.326918601989746
    9. '(Set' → logprob: -10.701918601989746
    10. '(List' → logprob: -11.076918601989746

Token 3534: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.6240566083070007e-06
    2. ' Set' → logprob: -14.125001907348633
    3. 'Point' → logprob: -15.125001907348633
    4. 'set' → logprob: -15.250001907348633
    5. '   ' → logprob: -15.375001907348633
    6. 'List' → logprob: -17.500001907348633
    7. '	Set' → logprob: -17.500001907348633
    8. '(Set' → logprob: -17.500001907348633
    9. '
' → logprob: -18.625001907348633
    10. 'Tuple' → logprob: -18.625001907348633

Token 3535: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.050213754177093506
    2. 'Point' → logprob: -3.0502138137817383
    3. '(Point' → logprob: -6.800213813781738
    4. '{' → logprob: -8.300213813781738
    5. '<Point' → logprob: -8.800213813781738
    6. '[
' → logprob: -9.550213813781738
    7. ']' → logprob: -11.050213813781738
    8. '(' → logprob: -11.925213813781738
    9. '{
' → logprob: -12.425213813781738
    10. '	Point' → logprob: -12.675213813781738

Token 3536: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.9361264946837764e-07
    2. ' Point' → logprob: -16.625
    3. '	Point' → logprob: -18.25
    4. '(Point' → logprob: -18.375
    5. '<Point' → logprob: -20.625
    6. '[' → logprob: -20.875
    7. '   ' → logprob: -21.0
    8. '.Point' → logprob: -21.125
    9. '_point' → logprob: -21.375
    10. '_Point' → logprob: -21.375

Token 3537: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0010103036183863878
    2. ']:' → logprob: -7.626010417938232
    3. ']:
' → logprob: -8.251009941101074
    4. '']:
' → logprob: -9.376009941101074
    5. ']]:
' → logprob: -9.751009941101074
    6. ']' → logprob: -9.751009941101074
    7. '():
' → logprob: -11.251009941101074
    8. ']:

' → logprob: -11.501009941101074
    9. '):
' → logprob: -11.626009941101074
    10. '>' → logprob: -11.626009941101074

Token 3538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.796184723294573e-06
    2. '```' → logprob: -12.500005722045898
    3. '   ' → logprob: -13.875005722045898
    4. 'points' → logprob: -15.125005722045898
    5. 'visited' → logprob: -15.250005722045898
    6. '
' → logprob: -15.250005722045898
    7. 's' → logprob: -16.3750057220459
    8. 'result' → logprob: -17.0000057220459
    9. '``' → logprob: -17.1250057220459
    10. 'n' → logprob: -17.5000057220459

Token 3539: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10203247517347336
    2. 'regions' → logprob: -2.352032423019409
    3. 'result' → logprob: -6.852032661437988
    4. 'points' → logprob: -7.727032661437988
    5. 'results' → logprob: -9.102032661437988
    6. 'visited' → logprob: -9.602032661437988
    7. 'char' → logprob: -10.102032661437988
    8. 'res' → logprob: -10.352032661437988
    9. 'chars' → logprob: -11.102032661437988
    10. ' regions' → logprob: -11.477032661437988

Token 3540: ' BFS' (ID: 190016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0201495885849
    2. 'def' → logprob: -1.2701495885849
    3. 'regions' → logprob: -1.5201495885849
    4. 'result' → logprob: -3.0201497077941895
    5. 'visited' → logprob: -3.1451497077941895
    6. 'res' → logprob: -4.1451497077941895
    7. 'points' → logprob: -4.6451497077941895
    8. 'queue' → logprob: -4.7701497077941895
    9. '   ' → logprob: -5.6451497077941895
    10. 'chars' → logprob: -6.0201497077941895

Token 3541: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04290703684091568
    2. '
' → logprob: -4.042907238006592
    3. 'def' → logprob: -4.417907238006592
    4. 'queue' → logprob: -6.167907238006592
    5. '   ' → logprob: -6.292907238006592
    6. 'for' → logprob: -6.417907238006592
    7. 'start' → logprob: -6.417907238006592
    8. 'visited' → logprob: -6.667907238006592
    9. '(start' → logprob: -7.292907238006592
    10. 'points' → logprob: -7.667907238006592

Token 3542: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.06507236510515213
    2. 'def' → logprob: -3.1900722980499268
    3. '       ' → logprob: -5.440072536468506
    4. '   ' → logprob: -5.565072536468506
    5. '[]' → logprob: -5.940072536468506
    6. ' find' → logprob: -6.065072536468506
    7. 'identify' → logprob: -6.440072536468506
    8. '
' → logprob: -6.690072536468506
    9. 'detect' → logprob: -6.940072536468506
    10. 'discover' → logprob: -6.940072536468506

Token 3543: ' connected' (ID: 12079)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.11122161895036697
    2. 'points' → logprob: -3.6112215518951416
    3. 'un' → logprob: -3.9862215518951416
    4. 'all' → logprob: -4.486221790313721
    5. 'char' → logprob: -4.861221790313721
    6. 'components' → logprob: -4.986221790313721
    7. 'connected' → logprob: -5.486221790313721
    8. 'chars' → logprob: -5.611221790313721
    9. ' regions' → logprob: -5.736221790313721
    10. 'characters' → logprob: -5.861221790313721

Token 3544: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.12487956881523132
    2. 'points' → logprob: -2.8748795986175537
    3. 'regions' → logprob: -3.8748795986175537
    4. '_points' → logprob: -3.9998795986175537
    5. ' components' → logprob: -4.624879360198975
    6. '_components' → logprob: -5.624879360198975
    7. ' points' → logprob: -6.374879360198975
    8. 'component' → logprob: -6.624879360198975
    9. ' regions' → logprob: -6.999879360198975
    10. '
' → logprob: -7.124879360198975

Token 3545: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06076439097523689
    2. '
' → logprob: -2.9357643127441406
    3. 'result' → logprob: -5.810764312744141
    4. 'points' → logprob: -6.560764312744141
    5. '   ' → logprob: -7.935764312744141
    6. '```' → logprob: -8.68576431274414
    7. 'def' → logprob: -8.93576431274414
    8. '        
' → logprob: -9.68576431274414
    9. '(' → logprob: -9.81076431274414
    10. 'visited' → logprob: -9.93576431274414

Token 3546: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.5716132521629333
    2. 'True' → logprob: -0.9466132521629333
    3. 'black' → logprob: -4.196613311767578
    4. ' True' → logprob: -4.696613311767578
    5. 'points' → logprob: -4.946613311767578
    6. ' marked' → logprob: -5.446613311767578
    7. ' points' → logprob: -5.446613311767578
    8. ' black' → logprob: -5.696613311767578
    9. 'paint' → logprob: -6.321613311767578
    10. 'def' → logprob: -7.196613311767578

Token 3547: ' cells' (ID: 11242)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.26404136419296265
    2. 'points' → logprob: -1.5140414237976074
    3. ' points' → logprob: -5.514041423797607
    4. 'cells' → logprob: -6.014041423797607
    5. 'def' → logprob: -6.639041423797607
    6. '_cells' → logprob: -6.639041423797607
    7. 'Points' → logprob: -6.764041423797607
    8. 'True' → logprob: -7.264041423797607
    9. '
' → logprob: -8.01404094696045
    10. 'components' → logprob: -8.51404094696045

Token 3548: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00161733478307724
    2. '
' → logprob: -6.626617431640625
    3. 'result' → logprob: -8.876617431640625
    4. 'points' → logprob: -9.751617431640625
    5. '```' → logprob: -10.126617431640625
    6. 'regions' → logprob: -11.126617431640625
    7. '   ' → logprob: -11.626617431640625
    8. '        
' → logprob: -12.251617431640625
    9. 'def' → logprob: -12.501617431640625
    10. 'visited' → logprob: -12.626617431640625

Token 3549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006327504757791758
    2. '
' → logprob: -5.1313276290893555
    3. '```' → logprob: -8.006327629089355
    4. '   ' → logprob: -10.131327629089355
    5. 'def' → logprob: -12.256327629089355
    6. 'result' → logprob: -12.506327629089355
    7. '        
' → logprob: -12.631327629089355
    8. 'points' → logprob: -12.881327629089355
    9. 'visited' → logprob: -12.881327629089355
    10. '
' → logprob: -13.131327629089355

Token 3550: ' regions' (ID: 21043)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025251567363739014
    2. 'regions' (adapté à ' regions') → logprob: -3.900251626968384
    3. 'result' → logprob: -5.900251388549805
    4. 'components' → logprob: -6.900251388549805
    5. 'visited' → logprob: -8.150251388549805
    6. 'points' → logprob: -8.650251388549805
    7. 'res' → logprob: -8.775251388549805
    8. 'results' → logprob: -9.025251388549805
    9. 'queue' → logprob: -9.525251388549805
    10. 'char' → logprob: -10.400251388549805

Token 3551: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17174679040908813
    2. ' =' → logprob: -1.9217467308044434
    3. '       ' → logprob: -4.921746730804443
    4. '=[]
' → logprob: -6.046746730804443
    5. '=[]' → logprob: -6.796746730804443
    6. '   ' → logprob: -7.671746730804443
    7. '=self' → logprob: -9.671747207641602
    8. '(self' → logprob: -10.046747207641602
    9. '=
' → logprob: -10.171747207641602
    10. ':' → logprob: -10.796747207641602

Token 3552: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.048671282827854156
    2. '[]' → logprob: -3.048671245574951
    3. '[]

' → logprob: -9.79867172241211
    4. ' []
' → logprob: -10.54867172241211
    5. ' []' → logprob: -13.29867172241211
    6. '   ' → logprob: -15.17367172241211
    7. 'deque' → logprob: -16.54867172241211
    8. '[])
' → logprob: -17.54867172241211
    9. '[]"' → logprob: -18.29867172241211
    10. '[],' → logprob: -18.42367172241211

Token 3553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021951000962872058
    2. '
' → logprob: -8.750219345092773
    3. '   ' → logprob: -10.125219345092773
    4. 'visited' → logprob: -12.250219345092773
    5. 'for' → logprob: -12.500219345092773
    6. 'queue' → logprob: -12.500219345092773
    7. '           ' → logprob: -12.875219345092773
    8. '        
' → logprob: -13.500219345092773
    9. ' for' → logprob: -13.875219345092773
    10. '```' → logprob: -14.000219345092773

Token 3554: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007677250076085329
    2. 'visited' → logprob: -5.63267707824707
    3. 'h' → logprob: -6.13267707824707
    4. '       ' → logprob: -6.88267707824707
    5. 'height' → logprob: -7.63267707824707
    6. 'queue' → logprob: -8.00767707824707
    7. 'q' → logprob: -10.63267707824707
    8. 'H' → logprob: -11.38267707824707
    9. ' for' → logprob: -12.25767707824707
    10. 'hq' → logprob: -12.38267707824707

Token 3555: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0067154900170862675
    2. ' y' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.131715774536133
    4. '	y' → logprob: -17.881715774536133
    5. ''y' → logprob: -19.506715774536133
    6. '
' → logprob: -19.881715774536133
    7. ')y' → logprob: -20.006715774536133
    8. '       ' → logprob: -20.131715774536133
    9. '```' → logprob: -20.381715774536133
    10. '_y' → logprob: -20.381715774536133

Token 3556: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994988024234772
    2. 'in' → logprob: -2.6949498653411865
    3. ',' → logprob: -12.194950103759766
    4. '0' → logprob: -12.819950103759766
    5. '
' → logprob: -13.819950103759766
    6. ' ' → logprob: -13.944950103759766
    7. '       ' → logprob: -13.944950103759766
    8. '   ' → logprob: -14.194950103759766
    9. '[' → logprob: -14.694950103759766
    10. 'i' → logprob: -14.819950103759766

Token 3557: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476724097505212
    2. ' range' → logprob: -6.002476692199707
    3. '0' → logprob: -13.752476692199707
    4. '(range' → logprob: -18.627477645874023
    5. '   ' → logprob: -19.752477645874023
    6. '
' → logprob: -19.877477645874023
    7. ')' → logprob: -19.877477645874023
    8. '	range' → logprob: -20.127477645874023
    9. ' ' → logprob: -20.502477645874023
    10. '[' → logprob: -21.377477645874023

Token 3558: '(self' (ID: 2402)
  Prédit: '201'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '201' → logprob: -0.00012594614236149937
    2. '0' → logprob: -9.250125885009766
    3. 'self' → logprob: -11.000125885009766
    4. '(' → logprob: -12.000125885009766
    5. '200' → logprob: -12.500125885009766
    6. '           ' → logprob: -14.000125885009766
    7. '(self' → logprob: -14.000125885009766
    8. '       ' → logprob: -14.125125885009766
    9. ' ' → logprob: -14.625125885009766
    10. '   ' → logprob: -15.500125885009766

Token 3559: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.08012575656175613
    2. '.height' → logprob: -2.5801258087158203
    3. 'grid' → logprob: -7.20512580871582
    4. '.' → logprob: -8.33012580871582
    5. 'height' → logprob: -8.45512580871582
    6. '.vis' → logprob: -11.58012580871582
    7. '201' → logprob: -12.45512580871582
    8. '   ' → logprob: -12.70512580871582
    9. '.width' → logprob: -13.08012580871582
    10. '.size' → logprob: -13.20512580871582

Token 3560: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0005106182070448995
    2. 'height' → logprob: -7.6255106925964355
    3. '   ' → logprob: -11.000510215759277
    4. '.width' → logprob: -13.500510215759277
    5. '.size' → logprob: -13.750510215759277
    6. '.' → logprob: -13.875510215759277
    7. ' height' → logprob: -15.375510215759277
    8. '       ' → logprob: -15.500510215759277
    9. '	height' → logprob: -15.500510215759277
    10. 'HEIGHT' → logprob: -15.500510215759277

Token 3561: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0023100038524717093
    2. '):' → logprob: -6.252309799194336
    3. '       ' → logprob: -8.502309799194336
    4. '   ' → logprob: -8.752309799194336
    5. '           ' → logprob: -11.377309799194336
    6. '):
' → logprob: -13.377309799194336
    7. '201' → logprob: -13.627309799194336
    8. '()):
' → logprob: -13.877309799194336
    9. ':
' → logprob: -14.002309799194336
    10. ' ):
' → logprob: -14.252309799194336

Token 3562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01209305040538311
    2. ' for' → logprob: -4.5120930671691895
    3. 'for' → logprob: -7.2620930671691895
    4. '   ' → logprob: -8.137092590332031
    5. '               ' → logprob: -10.762092590332031
    6. ' ' → logprob: -11.387092590332031
    7. '       ' → logprob: -12.137092590332031
    8. '```' → logprob: -12.137092590332031
    9. '                   ' → logprob: -13.012092590332031
    10. '	       ' → logprob: -14.137092590332031

Token 3563: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07808172702789307
    2. 'x' → logprob: -3.3280816078186035
    3. ' for' → logprob: -3.3280816078186035
    4. '           ' → logprob: -5.9530816078186035
    5. '               ' → logprob: -7.9530816078186035
    6. '   ' → logprob: -8.203082084655762
    7. ' x' → logprob: -9.203082084655762
    8. '       ' → logprob: -10.828082084655762
    9. 'if' → logprob: -11.078082084655762
    10. ' ' → logprob: -11.203082084655762

Token 3564: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00023679454170633107
    2. ' x' → logprob: -8.375236511230469
    3. 'self' → logprob: -12.625236511230469
    4. '0' → logprob: -13.000236511230469
    5. '   ' → logprob: -14.875236511230469
    6. ' self' → logprob: -16.12523651123047
    7. '           ' → logprob: -17.37523651123047
    8. '```' → logprob: -17.50023651123047
    9. ' ' → logprob: -17.75023651123047
    10. '       ' → logprob: -18.00023651123047

Token 3565: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048654474318027496
    2. 'in' → logprob: -3.048654556274414
    3. ',' → logprob: -10.298654556274414
    4. '           ' → logprob: -11.548654556274414
    5. '1' → logprob: -11.673654556274414
    6. 'if' → logprob: -12.923654556274414
    7. ' ' → logprob: -13.423654556274414
    8. '(' → logprob: -13.673654556274414
    9. '0' → logprob: -13.673654556274414
    10. '               ' → logprob: -13.923654556274414

Token 3566: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0025622190441936255
    2. ' range' → logprob: -6.002562046051025
    3. 'self' → logprob: -9.377562522888184
    4. '(range' → logprob: -13.377562522888184
    5. ' self' → logprob: -16.252561569213867
    6. '(' → logprob: -16.502561569213867
    7. '(self' → logprob: -16.627561569213867
    8. '
' → logprob: -17.377561569213867
    9. ')' → logprob: -17.752561569213867
    10. '0' → logprob: -18.127561569213867

Token 3567: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10830429941415787
    2. 'self' → logprob: -2.358304262161255
    3. '(' → logprob: -4.983304500579834
    4. '201' → logprob: -6.858304500579834
    5. ' self' → logprob: -10.108304023742676
    6. '           ' → logprob: -10.483304023742676
    7. '[self' → logprob: -10.858304023742676
    8. '0' → logprob: -10.983304023742676
    9. '               ' → logprob: -11.733304023742676
    10. '=self' → logprob: -11.858304023742676

Token 3568: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.6530896425247192
    2. 'grid' → logprob: -1.4030896425247192
    3. '):
' → logprob: -2.5280895233154297
    4. 'self' → logprob: -2.7780895233154297
    5. '201' → logprob: -3.5280895233154297
    6. 'if' → logprob: -4.27808952331543
    7. 'width' → logprob: -4.77808952331543
    8. '):' → logprob: -4.90308952331543
    9. '
' → logprob: -5.02808952331543
    10. ' grid' → logprob: -5.15308952331543

Token 3569: '.width' (ID: 11038)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.86421799659729
    2. '[x' → logprob: -1.48921799659729
    3. '   ' → logprob: -3.11421799659729
    4. '       ' → logprob: -3.23921799659729
    5. '           ' → logprob: -3.23921799659729
    6. 'width' → logprob: -3.36421799659729
    7. '][' → logprob: -3.36421799659729
    8. '201' → logprob: -3.48921799659729
    9. 'x' → logprob: -3.48921799659729
    10. ']:
' → logprob: -4.239217758178711

Token 3570: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002404550788924098
    2. '               ' → logprob: -6.377404689788818
    3. '           ' → logprob: -7.502404689788818
    4. ':
' → logprob: -9.62740421295166
    5. '):' → logprob: -10.12740421295166
    6. '                   ' → logprob: -11.50240421295166
    7. '():
' → logprob: -11.62740421295166
    8. '):
' → logprob: -12.12740421295166
    9. '       ' → logprob: -12.25240421295166
    10. '                       ' → logprob: -12.37740421295166

Token 3571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012725738633889705
    2. ' if' → logprob: -9.250126838684082
    3. 'if' → logprob: -11.375126838684082
    4. '                   ' → logprob: -11.750126838684082
    5. '                       ' → logprob: -11.875126838684082
    6. ',' → logprob: -14.000126838684082
    7. '	           ' → logprob: -14.125126838684082
    8. '              ' → logprob: -14.625126838684082
    9. '```' → logprob: -15.000126838684082
    10. '                               ' → logprob: -15.000126838684082

Token 3572: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43303877115249634
    2. 'if' (adapté à ' if') → logprob: -1.4330387115478516
    3. '                   ' → logprob: -2.1830387115478516
    4. '   ' → logprob: -9.058038711547852
    5. '               ' → logprob: -10.058038711547852
    6. '                       ' → logprob: -11.308038711547852
    7. '	if' → logprob: -12.058038711547852
    8. 'If' → logprob: -12.683038711547852
    9. '           ' → logprob: -15.058038711547852
    10. ' ' → logprob: -15.058038711547852

Token 3573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.877676784992218
    2. ' self' → logprob: -1.0026767253875732
    3. ' not' → logprob: -1.7526767253875732
    4. 'not' → logprob: -3.1276767253875732
    5. '                   ' → logprob: -9.377676963806152
    6. '               ' → logprob: -9.627676963806152
    7. '(self' → logprob: -10.127676963806152
    8. '   ' → logprob: -11.752676963806152
    9. '           ' → logprob: -12.002676963806152
    10. '(not' → logprob: -12.002676963806152

Token 3574: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.7167956829071045
    2. '.cells' → logprob: -0.8417956829071045
    3. '.' → logprob: -3.4667956829071045
    4. '.vis' → logprob: -3.5917956829071045
    5. ' .' → logprob: -3.9667956829071045
    6. 'grid' → logprob: -6.466795921325684
    7. 'cells' → logprob: -7.841795921325684
    8. '   ' → logprob: -8.341795921325684
    9. ' ' → logprob: -8.841795921325684
    10. '       ' → logprob: -9.216795921325684

Token 3575: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.09473799914121628
    2. '.is' → logprob: -2.469738006591797
    3. 'cells' → logprob: -6.219738006591797
    4. 'marked' → logprob: -6.219738006591797
    5. '.mark' → logprob: -6.844738006591797
    6. '.' → logprob: -8.719738006591797
    7. '   ' → logprob: -8.969738006591797
    8. 'is' → logprob: -9.094738006591797
    9. 'Marked' → logprob: -9.219738006591797
    10. ' .' → logprob: -9.969738006591797

Token 3576: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -9.088346359931165e-07
    2. '][' → logprob: -15.625000953674316
    3. '               ' → logprob: -15.750000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '           ' → logprob: -16.125
    6. ' [' → logprob: -16.625
    7. '[' → logprob: -17.0
    8. '                   ' → logprob: -17.375
    9. 'y' → logprob: -17.875
    10. '[x' → logprob: -18.0

Token 3577: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02095978334546089
    2. '[x' → logprob: -3.8959598541259766
    3. '[y' → logprob: -9.270959854125977
    4. ']' → logprob: -9.770959854125977
    5. ')[' → logprob: -10.020959854125977
    6. '           ' → logprob: -10.020959854125977
    7. ' ][' → logprob: -10.395959854125977
    8. '               ' → logprob: -10.520959854125977
    9. '
' → logprob: -10.895959854125977
    10. '[' → logprob: -10.895959854125977

Token 3578: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.3458322731312364e-06
    2. ' x' → logprob: -11.875007629394531
    3. '][' → logprob: -15.250007629394531
    4. '[x' → logprob: -16.75000762939453
    5. '   ' → logprob: -18.25000762939453
    6. ']' → logprob: -18.37500762939453
    7. ')x' → logprob: -18.37500762939453
    8. '
' → logprob: -18.87500762939453
    9. '```' → logprob: -19.00000762939453
    10. '[' → logprob: -19.25000762939453

Token 3579: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0789133608341217
    2. 'and' → logprob: -2.578913450241089
    3. '                   ' → logprob: -11.328913688659668
    4. '               ' → logprob: -12.078913688659668
    5. '==' → logprob: -13.453913688659668
    6. '                ' → logprob: -13.828913688659668
    7. ']' → logprob: -14.078913688659668
    8. ' ' → logprob: -14.578913688659668
    9. '                       ' → logprob: -14.703913688659668
    10. '                    ' → logprob: -14.703913688659668

Token 3580: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6932314038276672
    2. 'and' → logprob: -0.6932314038276672
    3. '==' → logprob: -10.193231582641602
    4. '                   ' → logprob: -10.443231582641602
    5. '               ' → logprob: -11.943231582641602
    6. '                       ' → logprob: -12.193231582641602
    7. ' ==' → logprob: -13.943231582641602
    8. '                    ' → logprob: -14.068231582641602
    9. ':
' → logprob: -14.193231582641602
    10. '                  ' → logprob: -14.568231582641602

Token 3581: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.008628406561911106
    2. ' not' → logprob: -4.7586283683776855
    3. '                   ' → logprob: -12.008628845214844
    4. '               ' → logprob: -12.508628845214844
    5. 'and' → logprob: -13.133628845214844
    6. '(not' → logprob: -13.133628845214844
    7. 'self' → logprob: -17.633628845214844
    8. '                       ' → logprob: -17.633628845214844
    9. '	not' → logprob: -17.758628845214844
    10. '
' → logprob: -18.008628845214844

Token 3582: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043257648940198123
    2. ' self' → logprob: -7.75043249130249
    3. '(self' → logprob: -13.375432968139648
    4. '   ' → logprob: -16.00043296813965
    5. '           ' → logprob: -16.37543296813965
    6. '                   ' → logprob: -16.62543296813965
    7. '[self' → logprob: -17.37543296813965
    8. '               ' → logprob: -17.50043296813965
    9. '       ' → logprob: -18.12543296813965
    10. '	self' → logprob: -18.50043296813965

Token 3583: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.002512047067284584
    2. 'visited' → logprob: -6.002511978149414
    3. 'self' → logprob: -10.752511978149414
    4. 'vis' → logprob: -11.377511978149414
    5. '.' → logprob: -13.877511978149414
    6. '           ' → logprob: -14.627511978149414
    7. ' .' → logprob: -14.752511978149414
    8. '.self' → logprob: -15.127511978149414
    9. '.visible' → logprob: -15.252511978149414
    10. '       ' → logprob: -15.252511978149414

Token 3584: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -13.125006675720215
    3. 'isted' → logprob: -13.625006675720215
    4. '   ' → logprob: -14.000006675720215
    5. 'visited' → logprob: -14.250006675720215
    6. 'ITED' → logprob: -14.500006675720215
    7. '[i' → logprob: -14.625006675720215
    8. '_' → logprob: -15.000006675720215
    9. 'itted' → logprob: -15.750006675720215
    10. '
' → logprob: -15.750006675720215

Token 3585: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -14.750001907348633
    3. ' [' → logprob: -14.875001907348633
    4. '
' → logprob: -15.000001907348633
    5. '                   ' → logprob: -15.125001907348633
    6. '   ' → logprob: -15.750001907348633
    7. '           ' → logprob: -15.875001907348633
    8. '][' → logprob: -16.125001907348633
    9. 'y' → logprob: -16.250001907348633
    10. '               ' → logprob: -16.375001907348633

Token 3586: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.9424725148128346e-05
    2. '   ' → logprob: -11.125049591064453
    3. '[x' → logprob: -11.375049591064453
    4. ' ][' → logprob: -11.750049591064453
    5. '           ' → logprob: -12.625049591064453
    6. ']' → logprob: -12.875049591064453
    7. '       ' → logprob: -13.250049591064453
    8. '               ' → logprob: -13.375049591064453
    9. '                   ' → logprob: -13.875049591064453
    10. '[' → logprob: -14.000049591064453

Token 3587: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1994775377388578e-05
    2. '][' → logprob: -11.625012397766113
    3. ' x' → logprob: -12.750012397766113
    4. '   ' → logprob: -16.750011444091797
    5. '               ' → logprob: -17.375011444091797
    6. ']' → logprob: -18.000011444091797
    7. '(x' → logprob: -18.250011444091797
    8. '	x' → logprob: -18.250011444091797
    9. '[x' → logprob: -18.500011444091797
    10. '           ' → logprob: -18.750011444091797

Token 3588: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.05243271216750145
    2. ':
' → logprob: -3.0524327754974365
    3. '                   ' → logprob: -6.052432537078857
    4. ':' → logprob: -7.677432537078857
    5. ']:' → logprob: -7.927432537078857
    6. '               ' → logprob: -8.052433013916016
    7. '):
' → logprob: -8.927433013916016
    8. '                       ' → logprob: -9.302433013916016
    9. '           ' → logprob: -10.427433013916016
    10. ']:
' → logprob: -10.552433013916016

Token 3589: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013391701504588127
    2. ':
' → logprob: -7.001338958740234
    3. '                       ' → logprob: -8.376338958740234
    4. ':' → logprob: -9.376338958740234
    5. '```' → logprob: -10.251338958740234
    6. '                           ' → logprob: -10.376338958740234
    7. '                    
' → logprob: -11.501338958740234
    8. '               ' → logprob: -11.626338958740234
    9. '				' → logprob: -11.876338958740234
    10. '
' → logprob: -13.126338958740234

Token 3590: ' region' (ID: 7967)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0360778383910656
    2. ' queue' → logprob: -4.036077976226807
    3. 'q' → logprob: -4.661077976226807
    4. '                   ' → logprob: -5.286077976226807
    5. 'stack' → logprob: -6.286077976226807
    6. 'self' → logprob: -7.661077976226807
    7. ' q' → logprob: -8.036077499389648
    8. '                       ' → logprob: -8.411077499389648
    9. 'dq' → logprob: -8.411077499389648
    10. 'que' → logprob: -10.036077499389648

Token 3591: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24129362404346466
    2. '                   ' → logprob: -1.8662936687469482
    3. '                       ' → logprob: -3.9912936687469482
    4. '=' → logprob: -4.116293430328369
    5. '_points' → logprob: -4.116293430328369
    6. '=[]
' → logprob: -5.741293430328369
    7. ':' → logprob: -6.991293430328369
    8. '=[]' → logprob: -7.366293430328369
    9. '=set' → logprob: -7.616293430328369
    10. 'points' → logprob: -8.116293907165527

Token 3592: ' self' (ID: 1051)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -9.841743303695694e-05
    2. ' set' → logprob: -9.50009822845459
    3. 'self' → logprob: -10.87509822845459
    4. '{' → logprob: -12.37509822845459
    5. '   ' → logprob: -15.62509822845459
    6. '=set' → logprob: -16.750099182128906
    7. '{
' → logprob: -17.375099182128906
    8. '
' → logprob: -17.500099182128906
    9. '	set' → logprob: -17.625099182128906
    10. '(set' → logprob: -17.750099182128906

Token 3593: '.b' (ID: 1292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.12952668964862823
    2. 'self' → logprob: -2.1295266151428223
    3. 'deque' → logprob: -6.754526615142822
    4. 'def' → logprob: -7.629526615142822
    5. ' set' → logprob: -8.00452709197998
    6. '=set' → logprob: -8.12952709197998
    7. '_set' → logprob: -9.87952709197998
    8. '
' → logprob: -10.25452709197998
    9. '   ' → logprob: -10.37952709197998
    10. '```' → logprob: -10.37952709197998

Token 3594: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.25318536162376404
    2. 'read' → logprob: -1.5031853914260864
    3. 'FS' → logprob: -7.128185272216797
    4. '   ' → logprob: -9.128185272216797
    5. 'reath' → logprob: -9.503185272216797
    6. '_read' → logprob: -9.503185272216797
    7. 'e' → logprob: -10.003185272216797
    8. 'search' → logprob: -10.753185272216797
    9. 'f' → logprob: -11.003185272216797
    10. '                   ' → logprob: -11.253185272216797

Token 3595: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.0001294030516874045
    2. '(' → logprob: -10.000129699707031
    3. '(
' → logprob: -10.750129699707031
    4. 'Point' → logprob: -11.125129699707031
    5. '(x' → logprob: -11.250129699707031
    6. '(self' → logprob: -11.625129699707031
    7. '((' → logprob: -12.000129699707031
    8. '   ' → logprob: -12.625129699707031
    9. 'Set' → logprob: -12.750129699707031
    10. '(Set' → logprob: -12.750129699707031

Token 3596: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0008051026379689574
    2. 'x' → logprob: -7.250804901123047
    3. '(' → logprob: -9.500804901123047
    4. ')' → logprob: -11.375804901123047
    5. '(
' → logprob: -13.125804901123047
    6. ')x' → logprob: -13.125804901123047
    7. ')(' → logprob: -13.250804901123047
    8. '                   ' → logprob: -13.750804901123047
    9. '{x' → logprob: -14.875804901123047
    10. ',x' → logprob: -15.125804901123047

Token 3597: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12734180688858032
    2. ',y' → logprob: -2.1273417472839355
    3. ' ,' → logprob: -7.8773417472839355
    4. '<|end|>' → logprob: -11.502342224121094
    5. ',
' → logprob: -11.877342224121094
    6. 'y' → logprob: -12.127342224121094
    7. ',p' → logprob: -13.252342224121094
    8. '),' → logprob: -13.252342224121094
    9. ',Y' → logprob: -13.627342224121094
    10. '   ' → logprob: -13.877342224121094

Token 3598: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.13120996952056885
    2. ')
' → logprob: -2.2562098503112793
    3. '                   ' → logprob: -4.756209850311279
    4. '))' → logprob: -5.006209850311279
    5. ')' → logprob: -5.881209850311279
    6. '                       ' → logprob: -10.381210327148438
    7. ' ))
' → logprob: -10.381210327148438
    8. '):
' → logprob: -11.381210327148438
    9. '               ' → logprob: -11.506210327148438
    10. ')))
' → logprob: -11.881210327148438

Token 3599: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10816875845193863
    2. '                       ' → logprob: -2.358168840408325
    3. '
' → logprob: -6.108168601989746
    4. '       ' → logprob: -6.483168601989746
    5. '```' → logprob: -6.733168601989746
    6. '(self' → logprob: -7.108168601989746
    7. ':
' → logprob: -7.108168601989746
    8. '()
' → logprob: -8.983168601989746
    9. '()' → logprob: -9.233168601989746
    10. '               ' → logprob: -9.233168601989746

Token 3600: ' regions' (ID: 21043)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11034831404685974
    2. 'self' → logprob: -2.6103482246398926
    3. 'regions' (adapté à ' regions') → logprob: -3.7353482246398926
    4. 'return' → logprob: -5.985348224639893
    5. ' regions' → logprob: -6.485348224639893
    6. 'region' → logprob: -6.735348224639893
    7. ' self' → logprob: -7.110348224639893
    8. '```' → logprob: -7.985348224639893
    9. '       ' → logprob: -9.36034870147705
    10. '				' → logprob: -9.73534870147705

Token 3601: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.016722973436117172
    2. '.' → logprob: -4.141723155975342
    3. '                   ' → logprob: -8.016722679138184
    4. '.add' → logprob: -8.641722679138184
    5. ').' → logprob: -9.891722679138184
    6. ' =' → logprob: -10.516722679138184
    7. '=' → logprob: -10.766722679138184
    8. '                       ' → logprob: -10.891722679138184
    9. 'append' → logprob: -11.641722679138184
    10. ')' → logprob: -12.016722679138184

Token 3602: '(region' (ID: 103309)
  Prédit: '(region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(region' → logprob: -0.0040818434208631516
    2. 'region' → logprob: -5.504081726074219
    3. ' region' → logprob: -12.629081726074219
    4. ' (' → logprob: -16.12908172607422
    5. '(reg' → logprob: -17.62908172607422
    6. '(' → logprob: -17.75408172607422
    7. '(
' → logprob: -17.87908172607422
    8. '   ' → logprob: -18.37908172607422
    9. '#region' → logprob: -19.25408172607422
    10. 'endregion' → logprob: -19.50408172607422

Token 3603: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.421232134103775
    2. ')
' → logprob: -1.4212321043014526
    3. '                   ' → logprob: -2.296232223510742
    4. '       ' → logprob: -7.546232223510742
    5. '
' → logprob: -8.296232223510742
    6. '               ' → logprob: -8.421232223510742
    7. '<|end|>' → logprob: -8.796232223510742
    8. '           ' → logprob: -8.921232223510742
    9. '                       ' → logprob: -9.171232223510742
    10. '   ' → logprob: -9.921232223510742

Token 3604: '       ' (ID: 309)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23344828188419342
    2. '       ' → logprob: -2.6084482669830322
    3. '
' → logprob: -3.2334482669830322
    4. '   ' → logprob: -3.8584482669830322
    5. '                       ' → logprob: -3.8584482669830322
    6. ':
' → logprob: -4.108448505401611
    7. ':' → logprob: -4.983448505401611
    8. '           ' → logprob: -5.108448505401611
    9. '               ' → logprob: -5.608448505401611
    10. '```' → logprob: -5.858448505401611

Token 3605: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20584054291248322
    2. '       ' → logprob: -2.955840587615967
    3. '   ' → logprob: -3.080840587615967
    4. '
' → logprob: -3.580840587615967
    5. ':
' → logprob: -4.205840587615967
    6. '                       ' → logprob: -4.705840587615967
    7. '           ' → logprob: -4.830840587615967
    8. '               ' → logprob: -4.955840587615967
    9. 'return' (adapté à ' return') → logprob: -5.330840587615967
    10. ':' → logprob: -5.830840587615967

Token 3606: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.004080062732100487
    2. ' regions' → logprob: -5.504080295562744
    3. 'region' → logprob: -14.254079818725586
    4. '[
' → logprob: -15.004079818725586
    5. '[' → logprob: -15.629079818725586
    6. '   ' → logprob: -15.879079818725586
    7. '                   ' → logprob: -16.754079818725586
    8. '
' → logprob: -16.754079818725586
    9. '       ' → logprob: -17.004079818725586
    10. '```' → logprob: -17.254079818725586

Token 3607: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1047106385231018
    2. '
' → logprob: -2.354710578918457
    3. '    
' → logprob: -6.729710578918457
    4. '       ' → logprob: -6.979710578918457
    5. '                   ' → logprob: -7.479710578918457
    6. '

' → logprob: -7.604710578918457
    7. '```' → logprob: -7.979710578918457
    8. 'def' → logprob: -8.229710578918457
    9. '(self' → logprob: -8.979710578918457
    10. '           ' → logprob: -9.104710578918457

Token 3608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.097635418176651
    2. 'def' → logprob: -2.472635507583618
    3. ' def' → logprob: -5.347635269165039
    4. '	def' → logprob: -6.097635269165039
    5. '
' → logprob: -6.972635269165039
    6. '    
' → logprob: -7.972635269165039
    7. '```' → logprob: -8.722635269165039
    8. '       ' → logprob: -10.347635269165039
    9. '  ' → logprob: -10.847635269165039
    10. '        
' → logprob: -11.222635269165039

Token 3609: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0036155125126242638
    2. '   ' → logprob: -5.753615379333496
    3. '
' → logprob: -8.128615379333496
    4. ' def' → logprob: -8.878615379333496
    5. '	def' → logprob: -13.503615379333496
    6. '       ' → logprob: -14.628615379333496
    7. '                   ' → logprob: -14.628615379333496
    8. '    
' → logprob: -15.128615379333496
    9. ' ' → logprob: -15.128615379333496
    10. '_def' → logprob: -15.878615379333496

Token 3610: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004070778959430754
    2. ' bfs' → logprob: -8.750407218933105
    3. 'visited' → logprob: -8.875407218933105
    4. 'def' → logprob: -10.250407218933105
    5. '   ' → logprob: -10.500407218933105
    6. '
' → logprob: -11.375407218933105
    7. 'dfs' → logprob: -11.500407218933105
    8. 'find' → logprob: -12.250407218933105
    9. '  ' → logprob: -12.625407218933105
    10. ' ' → logprob: -13.125407218933105

Token 3611: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00026407750556245446
    2. '(Point' → logprob: -8.250264167785645
    3. '(' → logprob: -13.250264167785645
    4. '(
' → logprob: -14.250264167785645
    5. '(start' → logprob: -15.750264167785645
    6. '(s' → logprob: -16.375263214111328
    7. '(point' → logprob: -17.125263214111328
    8. ' (' → logprob: -17.875263214111328
    9. '   ' → logprob: -18.125263214111328
    10. 'self' → logprob: -18.125263214111328

Token 3612: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -13.500004768371582
    3. ')(' → logprob: -14.250004768371582
    4. ')' → logprob: -14.250004768371582
    5. '(start' → logprob: -14.750004768371582
    6. '(Point' → logprob: -14.875004768371582
    7. '       ' → logprob: -15.250004768371582
    8. 'self' → logprob: -15.250004768371582
    9. ' (' → logprob: -15.500004768371582
    10. '   ' → logprob: -15.625004768371582

Token 3613: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06309209018945694
    2. 'p' → logprob: -2.813091993331909
    3. ' start' → logprob: -7.438092231750488
    4. 'Point' → logprob: -7.938092231750488
    5. 'point' → logprob: -9.063092231750488
    6. 'self' → logprob: -11.063092231750488
    7. ' p' → logprob: -11.313092231750488
    8. 'root' → logprob: -11.563092231750488
    9. '   ' → logprob: -11.813092231750488
    10. 's' → logprob: -11.938092231750488

Token 3614: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0061704013496637344
    2. '(start' → logprob: -6.256170272827148
    3. '(Point' → logprob: -6.631170272827148
    4. '):
' → logprob: -6.756170272827148
    5. '):' → logprob: -7.506170272827148
    6. 'self' → logprob: -7.506170272827148
    7. '(Start' → logprob: -8.506170272827148
    8. ')' → logprob: -9.381170272827148
    9. ')(' → logprob: -9.506170272827148
    10. '   ' → logprob: -9.756170272827148

Token 3615: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.1279553291387856e-05
    2. ' Point' → logprob: -12.000011444091797
    3. 'start' → logprob: -12.250011444091797
    4. ')' → logprob: -15.375011444091797
    5. '   ' → logprob: -17.500011444091797
    6. 'Start' → logprob: -18.625011444091797
    7. 'self' → logprob: -19.000011444091797
    8. '_point' → logprob: -19.625011444091797
    9. '       ' → logprob: -19.875011444091797
    10. '	Point' → logprob: -19.875011444091797

Token 3616: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04358196631073952
    2. ')' → logprob: -3.293581962585449
    3. '):' → logprob: -5.293581962585449
    4. '       ' → logprob: -7.793581962585449
    5. '   ' → logprob: -9.66858196258545
    6. '):
' → logprob: -11.54358196258545
    7. 'self' → logprob: -11.66858196258545
    8. '):

' → logprob: -12.66858196258545
    9. '(self' → logprob: -13.16858196258545
    10. ')->' → logprob: -13.41858196258545

Token 3617: ' ->' (ID: 2747)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5781181454658508
    2. '       ' → logprob: -1.203118085861206
    3. ':' → logprob: -2.078118085861206
    4. '(self' → logprob: -5.453118324279785
    5. 'self' → logprob: -6.078118324279785
    6. '   ' → logprob: -6.078118324279785
    7. '->' → logprob: -6.203118324279785
    8. '):
' → logprob: -6.703118324279785
    9. ' ->' → logprob: -7.453118324279785
    10. ')' → logprob: -8.828118324279785

Token 3618: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -8.017927029868588e-05
    2. 'set' → logprob: -9.875080108642578
    3. ' Set' → logprob: -11.125080108642578
    4. 'Deque' → logprob: -12.000080108642578
    5. 'deque' → logprob: -12.375080108642578
    6. '_set' → logprob: -13.250080108642578
    7. 'def' → logprob: -14.000080108642578
    8. '_Set' → logprob: -15.000080108642578
    9. '   ' → logprob: -15.750080108642578
    10. 'self' → logprob: -16.000080108642578

Token 3619: '[' (ID: 58)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.25746792554855347
    2. '[' → logprob: -1.5074679851531982
    3. '(Point' → logprob: -5.507467746734619
    4. '({' → logprob: -7.382467746734619
    5. '{
' → logprob: -7.882467746734619
    6. '<Point' → logprob: -8.257468223571777
    7. '[{' → logprob: -9.132468223571777
    8. 'Point' → logprob: -10.507468223571777
    9. '[
' → logprob: -11.132468223571777
    10. '(Set' → logprob: -11.257468223571777

Token 3620: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. '(Point' → logprob: -17.125
    3. ' Point' → logprob: -17.25
    4. 'start' → logprob: -19.0
    5. '	Point' → logprob: -20.125
    6. '<Point' → logprob: -20.25
    7. '_Point' → logprob: -21.625
    8. 'point' → logprob: -21.625
    9. '.Point' → logprob: -21.875
    10. '_point' → logprob: -22.125

Token 3621: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02544066496193409
    2. '   ' → logprob: -4.525440692901611
    3. ']:
' → logprob: -5.275440692901611
    4. '       ' → logprob: -5.775440692901611
    5. '():
' → logprob: -6.025440692901611
    6. ':
' → logprob: -6.400440692901611
    7. '):' → logprob: -7.025440692901611
    8. '{' → logprob: -8.025440216064453
    9. '```' → logprob: -8.275440216064453
    10. ''):
' → logprob: -8.900440216064453

Token 3622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.463036435074173e-05
    2. '   ' → logprob: -11.375024795532227
    3. '
' → logprob: -11.750024795532227
    4. ' queue' → logprob: -12.500024795532227
    5. '```' → logprob: -14.125024795532227
    6. 'queue' → logprob: -14.750024795532227
    7. ' visited' → logprob: -16.625024795532227
    8. '	' → logprob: -16.750024795532227
    9. 'visited' → logprob: -17.000024795532227
    10. '{
' → logprob: -17.500024795532227

Token 3623: ' q' (ID: 2335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6605280637741089
    2. 'queue' → logprob: -0.9105280637741089
    3. 'visited' → logprob: -2.6605281829833984
    4. 'q' (adapté à ' q') → logprob: -4.660528182983398
    5. ' queue' → logprob: -7.160528182983398
    6. 'seen' → logprob: -8.035528182983398
    7. 'points' → logprob: -8.160528182983398
    8. '   ' → logprob: -8.410528182983398
    9. ' visited' → logprob: -9.910528182983398
    10. 'que' → logprob: -11.160528182983398

Token 3624: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5770741105079651
    2. '=' → logprob: -0.8270741105079651
    3. '       ' → logprob: -7.20207405090332
    4. '.append' → logprob: -9.07707405090332
    5. ':' → logprob: -9.32707405090332
    6. '   ' → logprob: -9.70207405090332
    7. '.push' → logprob: -10.70207405090332
    8. '.' → logprob: -11.07707405090332
    9. '	' → logprob: -11.32707405090332
    10. '=[' → logprob: -11.82707405090332

Token 3625: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -2.15310683415737e-05
    2. ' deque' → logprob: -10.750021934509277
    3. 'Deque' → logprob: -20.37502098083496
    4. '   ' → logprob: -21.00002098083496
    5. 'collections' → logprob: -22.12502098083496
    6. '       ' → logprob: -23.00002098083496
    7. '```' → logprob: -23.37502098083496
    8. '[' → logprob: -24.87502098083496
    9. 'dq' → logprob: -25.00002098083496
    10. '
' → logprob: -25.37502098083496

Token 3626: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.011392037384212017
    2. '()
' → logprob: -4.511392116546631
    3. '()' → logprob: -8.136391639709473
    4. '([(' → logprob: -10.386391639709473
    5. '[' → logprob: -11.761391639709473
    6. '[start' → logprob: -11.886391639709473
    7. '([
' → logprob: -12.761391639709473
    8. '(Point' → logprob: -13.636391639709473
    9. '[(' → logprob: -14.511391639709473
    10. '       ' → logprob: -14.886391639709473

Token 3627: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.6240566083070007e-06
    2. ' start' → logprob: -13.625001907348633
    3. '(start' → logprob: -15.125001907348633
    4. '[start' → logprob: -16.875001907348633
    5. '   ' → logprob: -19.125001907348633
    6. ')' → logprob: -20.375001907348633
    7. '	start' → logprob: -21.125001907348633
    8. '
' → logprob: -21.500001907348633
    9. '=start' → logprob: -22.375001907348633
    10. '       ' → logprob: -22.500001907348633

Token 3628: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.029964184388518333
    2. '])' → logprob: -3.5299642086029053
    3. ')
' → logprob: -8.654964447021484
    4. '       ' → logprob: -11.404964447021484
    5. '])
' → logprob: -11.904964447021484
    6. ' ])
' → logprob: -11.904964447021484
    7. ')' → logprob: -12.154964447021484
    8. ']);' → logprob: -12.529964447021484
    9. '])

' → logprob: -13.154964447021484
    10. '   ' → logprob: -14.779964447021484

Token 3629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030429141595959663
    2. 'self' → logprob: -4.155429363250732
    3. 'visited' → logprob: -4.280429363250732
    4. ' self' → logprob: -8.780428886413574
    5. ' visited' → logprob: -9.155428886413574
    6. '   ' → logprob: -9.405428886413574
    7. 'seen' → logprob: -10.155428886413574
    8. '```' → logprob: -10.780428886413574
    9. '	' → logprob: -11.530428886413574
    10. 'points' → logprob: -11.530428886413574

Token 3630: ' region' (ID: 7967)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06995199620723724
    2. 'visited' → logprob: -3.0699520111083984
    3. '       ' → logprob: -3.9449520111083984
    4. 'result' → logprob: -6.944952011108398
    5. 'points' → logprob: -8.194952011108398
    6. 'region' (adapté à ' region') → logprob: -8.319952011108398
    7. 'seen' → logprob: -8.569952011108398
    8. ' self' → logprob: -9.444952011108398
    9. 'res' → logprob: -11.069952011108398
    10. ' visited' → logprob: -12.069952011108398

Token 3631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6405035257339478
    2. '=' → logprob: -0.7655035257339478
    3. '.add' → logprob: -5.140503406524658
    4. '   ' → logprob: -7.265503406524658
    5. '       ' → logprob: -7.765503406524658
    6. '=set' → logprob: -7.890503406524658
    7. ':' → logprob: -8.640503883361816
    8. '.' → logprob: -9.640503883361816
    9. 'points' → logprob: -10.265503883361816
    10. ' ' → logprob: -10.390503883361816

Token 3632: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3132733702659607
    2. '{' → logprob: -1.3132734298706055
    3. ' set' → logprob: -11.563273429870605
    4. ' {' → logprob: -13.188273429870605
    5. '{
' → logprob: -16.31327247619629
    6. '   ' → logprob: -16.68827247619629
    7. '(set' → logprob: -16.81327247619629
    8. '	set' → logprob: -17.56327247619629
    9. '       ' → logprob: -17.93827247619629
    10. '=set' → logprob: -18.06327247619629

Token 3633: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.1981385350227356
    2. '([' → logprob: -2.073138475418091
    3. '()' → logprob: -3.073138475418091
    4. '{' → logprob: -5.19813871383667
    5. '({' → logprob: -6.82313871383667
    6. '       ' → logprob: -7.44813871383667
    7. '()

' → logprob: -9.073138236999512
    8. '(start' → logprob: -9.573138236999512
    9. '{
' → logprob: -9.948138236999512
    10. '
' → logprob: -10.198138236999512

Token 3634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004789664875715971
    2. '   ' → logprob: -5.75478982925415
    3. '	' → logprob: -7.37978982925415
    4. 'while' → logprob: -8.129789352416992
    5. 'q' → logprob: -8.629789352416992
    6. '	while' → logprob: -8.754789352416992
    7. ' while' → logprob: -9.254789352416992
    8. '           ' → logprob: -9.629789352416992
    9. '```' → logprob: -9.629789352416992
    10. '
' → logprob: -10.129789352416992

Token 3635: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6025902628898621
    2. 'while' → logprob: -0.8525902628898621
    3. 'start' → logprob: -3.852590322494507
    4. 'self' (adapté à ' self') → logprob: -5.727590084075928
    5. 'region' → logprob: -6.977590084075928
    6. ' while' → logprob: -7.727590084075928
    7. 'point' → logprob: -8.102590560913086
    8. '   ' → logprob: -10.477590560913086
    9. '	while' → logprob: -10.602590560913086
    10. 'visited' → logprob: -10.727590560913086

Token 3636: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.160382941365242
    2. 'visited' → logprob: -1.9103829860687256
    3. '   ' → logprob: -9.410383224487305
    4. 'vis' → logprob: -10.285383224487305
    5. '.' → logprob: -10.785383224487305
    6. ' visited' → logprob: -11.410383224487305
    7. '```' → logprob: -12.910383224487305
    8. 'Visited' → logprob: -13.035383224487305
    9. '       ' → logprob: -13.410383224487305
    10. ' .' → logprob: -13.910383224487305

Token 3637: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -7.314625690924004e-05
    2. 'isted' → logprob: -9.625073432922363
    3. 'ITED' → logprob: -13.000073432922363
    4. 'it' → logprob: -13.000073432922363
    5. 'visited' → logprob: -13.750073432922363
    6. '[' → logprob: -14.250073432922363
    7. 'itted' → logprob: -15.125073432922363
    8. 'ted' → logprob: -15.750073432922363
    9. 'ite' → logprob: -16.625072479248047
    10. '   ' → logprob: -17.000072479248047

Token 3638: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00038479414070025086
    2. '[' → logprob: -7.87538480758667
    3. '[q' → logprob: -12.625384330749512
    4. '[end' → logprob: -15.250384330749512
    5. '[self' → logprob: -15.625384330749512
    6. '[now' → logprob: -15.625384330749512
    7. '[size' → logprob: -16.125385284423828
    8. '[next' → logprob: -16.125385284423828
    9. '[current' → logprob: -16.250385284423828
    10. '[s' → logprob: -16.375385284423828

Token 3639: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.022793123498558998
    2. '.x' → logprob: -3.8977930545806885
    3. '][' → logprob: -6.397793292999268
    4. '[' → logprob: -8.02279281616211
    5. '.' → logprob: -8.89779281616211
    6. '].' → logprob: -10.27279281616211
    7. ']' → logprob: -10.52279281616211
    8. 'y' → logprob: -11.02279281616211
    9. ' .' → logprob: -11.52279281616211
    10. '   ' → logprob: -11.89779281616211

Token 3640: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005771008436568081
    2. '[start' → logprob: -7.500576972961426
    3. ' ][' → logprob: -11.000576972961426
    4. '       ' → logprob: -12.875576972961426
    5. '   ' → logprob: -13.750576972961426
    6. '[' → logprob: -14.000576972961426
    7. 'start' → logprob: -14.500576972961426
    8. ']' → logprob: -14.500576972961426
    9. '```' → logprob: -14.500576972961426
    10. '           ' → logprob: -15.375576972961426

Token 3641: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.320199877838604e-07
    2. ' start' → logprob: -15.375
    3. '[start' → logprob: -15.5
    4. '(start' → logprob: -18.625
    5. '
' → logprob: -19.0
    6. '	start' → logprob: -19.25
    7. '0' → logprob: -19.5
    8. '   ' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. '[' → logprob: -20.25

Token 3642: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -6.909333023941144e-05
    2. '.' → logprob: -10.625068664550781
    3. 'x' → logprob: -11.000068664550781
    4. '.y' → logprob: -11.500068664550781
    5. ']' → logprob: -11.625068664550781
    6. '].' → logprob: -12.375068664550781
    7. '```' → logprob: -13.250068664550781
    8. '<|end|>' → logprob: -14.125068664550781
    9. '.]' → logprob: -14.375068664550781
    10. '   ' → logprob: -15.125068664550781

Token 3643: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012623753864318132
    2. ']=' → logprob: -6.751262187957764
    3. '=' → logprob: -9.501262664794922
    4. ' ]' → logprob: -11.501262664794922
    5. ' =' → logprob: -12.501262664794922
    6. '       ' → logprob: -13.626262664794922
    7. '   ' → logprob: -14.626262664794922
    8. '=True' → logprob: -15.001262664794922
    9. ')' → logprob: -15.001262664794922
    10. 'True' → logprob: -15.126262664794922

Token 3644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009762583300471306
    2. ' =' → logprob: -4.634762763977051
    3. '=True' → logprob: -12.50976276397705
    4. '   ' → logprob: -13.63476276397705
    5. '=
' → logprob: -14.25976276397705
    6. '       ' → logprob: -15.13476276397705
    7. '.add' → logprob: -15.38476276397705
    8. ' ' → logprob: -15.50976276397705
    9. '.=' → logprob: -16.509761810302734
    10. '    ' → logprob: -16.634761810302734

Token 3645: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.547789674485102e-05
    2. ' True' → logprob: -10.250035285949707
    3. '(True' → logprob: -18.125036239624023
    4. '1' → logprob: -18.250036239624023
    5. '=True' → logprob: -19.750036239624023
    6. '
' → logprob: -20.875036239624023
    7. '   ' → logprob: -20.875036239624023
    8. 'true' → logprob: -21.625036239624023
    9. '_true' → logprob: -23.500036239624023
    10. 'TRUE' → logprob: -23.500036239624023

Token 3646: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3520555794239044
    2. '
' → logprob: -1.227055549621582
    3. 'while' → logprob: -6.102055549621582
    4. ' while' → logprob: -7.102055549621582
    5. '	while' → logprob: -8.352055549621582
    6. '	' → logprob: -9.352055549621582
    7. '        
' → logprob: -9.477055549621582
    8. '   ' → logprob: -10.102055549621582
    9. '
' → logprob: -11.102055549621582
    10. '           ' → logprob: -11.352055549621582

Token 3647: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7433056235313416
    2. '       ' → logprob: -1.3683056831359863
    3. '	while' → logprob: -1.6183056831359863
    4. ' while' → logprob: -2.8683056831359863
    5. 'while' → logprob: -4.368305683135986
    6. '
' → logprob: -6.368305683135986
    7. ' ' → logprob: -8.243305206298828
    8. '```' → logprob: -8.743305206298828
    9. '	' → logprob: -10.868305206298828
    10. '        
' → logprob: -11.618305206298828

Token 3648: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02416123077273369
    2. '       ' → logprob: -3.7741613388061523
    3. ' while' → logprob: -7.274161338806152
    4. '
' → logprob: -8.899161338806152
    5. '	while' → logprob: -9.524161338806152
    6. '   ' → logprob: -11.649161338806152
    7. '```' → logprob: -12.899161338806152
    8. '	' → logprob: -14.774161338806152
    9. 'While' → logprob: -14.774161338806152
    10. '        
' → logprob: -15.274161338806152

Token 3649: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.23917081207037e-05
    2. ' q' → logprob: -10.250041961669922
    3. 'len' → logprob: -12.375041961669922
    4. '   ' → logprob: -13.250041961669922
    5. '       ' → logprob: -15.000041961669922
    6. 'True' → logprob: -15.000041961669922
    7. '
' → logprob: -16.000041961669922
    8. '	q' → logprob: -16.125041961669922
    9. '(q' → logprob: -16.875041961669922
    10. '           ' → logprob: -17.250041961669922

Token 3650: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0008086714660748839
    2. ':' → logprob: -7.2508087158203125
    3. '           ' → logprob: -9.875808715820312
    4. '       ' → logprob: -10.750808715820312
    5. '.p' → logprob: -11.500808715820312
    6. '   ' → logprob: -12.125808715820312
    7. '):
' → logprob: -13.000808715820312
    8. '.pop' → logprob: -13.000808715820312
    9. '.append' → logprob: -13.375808715820312
    10. '=' → logprob: -13.750808715820312

Token 3651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04788489639759064
    2. 'p' → logprob: -3.672884941101074
    3. ' p' → logprob: -4.047884941101074
    4. 'point' → logprob: -5.922884941101074
    5. ' point' → logprob: -6.922884941101074
    6. '   ' → logprob: -9.297884941101074
    7. '		' → logprob: -10.422884941101074
    8. '       ' → logprob: -10.672884941101074
    9. '	       ' → logprob: -10.672884941101074
    10. '```' → logprob: -10.922884941101074

Token 3652: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -1.0504181385040283
    2. 'current' → logprob: -1.0504181385040283
    3. 'curr' → logprob: -1.8004181385040283
    4. 'cur' → logprob: -2.3004181385040283
    5. 'point' → logprob: -3.5504181385040283
    6. 'pos' → logprob: -5.550417900085449
    7. 'u' → logprob: -6.550417900085449
    8. '           ' → logprob: -8.30041790008545
    9. 'node' → logprob: -8.42541790008545
    10. ' curr' → logprob: -8.67541790008545

Token 3653: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6949682831764221
    2. ' =' → logprob: -0.6949682831764221
    3. '=q' → logprob: -6.694968223571777
    4. '=p' → logprob: -7.569968223571777
    5. 'p' → logprob: -10.694968223571777
    6. '   ' → logprob: -11.319968223571777
    7. 'q' → logprob: -11.819968223571777
    8. ')' → logprob: -12.319968223571777
    9. ':' → logprob: -12.694968223571777
    10. '.q' → logprob: -12.819968223571777

Token 3654: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00020616286201402545
    2. ' q' → logprob: -8.500205993652344
    3. 'p' → logprob: -12.875205993652344
    4. 'deque' → logprob: -17.000205993652344
    5. '	q' → logprob: -17.250205993652344
    6. '   ' → logprob: -19.125205993652344
    7. ' p' → logprob: -19.250205993652344
    8. '
' → logprob: -20.125205993652344
    9. '.q' → logprob: -20.250205993652344
    10. '```' → logprob: -20.750205993652344

Token 3655: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.40661105513572693
    2. '.pop' → logprob: -1.4066110849380493
    3. '=' → logprob: -2.5316109657287598
    4. ' =' → logprob: -5.28161096572876
    5. '.' → logprob: -5.65661096572876
    6. '   ' → logprob: -8.531611442565918
    7. '       ' → logprob: -8.656611442565918
    8. '.append' → logprob: -8.656611442565918
    9. '           ' → logprob: -9.031611442565918
    10. '=p' → logprob: -9.281611442565918

Token 3656: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0011722482740879059
    2. 'op' → logprob: -6.751172065734863
    3. '=' → logprob: -14.376172065734863
    4. '   ' → logprob: -15.126172065734863
    5. 'opup' → logprob: -15.126172065734863
    6. 'append' → logprob: -15.751172065734863
    7. '```' → logprob: -15.751172065734863
    8. 'opped' → logprob: -15.751172065734863
    9. 'ople' → logprob: -16.62617301940918
    10. 'opl' → logprob: -16.75117301940918

Token 3657: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0076601081527769566
    2. '
' → logprob: -4.882659912109375
    3. '               ' → logprob: -11.132659912109375
    4. '            
' → logprob: -11.132659912109375
    5. '       ' → logprob: -11.757659912109375
    6. 'for' → logprob: -12.632659912109375
    7. '```' → logprob: -13.257659912109375
    8. '                   ' → logprob: -13.257659912109375
    9. ')
' → logprob: -13.382659912109375
    10. '		' → logprob: -13.632659912109375

Token 3658: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43418028950691223
    2. 'region' → logprob: -1.3091802597045898
    3. ' region' → logprob: -2.68418025970459
    4. '       ' → logprob: -4.55918025970459
    5. '   ' → logprob: -6.80918025970459
    6. ' for' → logprob: -7.18418025970459
    7. '
' → logprob: -7.55918025970459
    8. '               ' → logprob: -7.68418025970459
    9. 'for' → logprob: -8.18418025970459
    10. ' if' → logprob: -9.43418025970459

Token 3659: ' region' (ID: 7967)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' (adapté à ' region') → logprob: -5.919942486798391e-05
    2. 'if' → logprob: -10.375059127807617
    3. ' region' → logprob: -11.000059127807617
    4. 'for' → logprob: -11.750059127807617
    5. '           ' → logprob: -13.500059127807617
    6. '   ' → logprob: -13.875059127807617
    7. '       ' → logprob: -14.500059127807617
    8. '```' → logprob: -15.500059127807617
    9. 'regions' → logprob: -15.750059127807617
    10. '``' → logprob: -16.625059127807617

Token 3660: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.248469718324486e-05
    2. '.' → logprob: -10.875022888183594
    3. 'add' → logprob: -12.625022888183594
    4. '.update' → logprob: -15.875022888183594
    5. ' .' → logprob: -17.250022888183594
    6. '.Add' → logprob: -17.375022888183594
    7. '_add' → logprob: -17.375022888183594
    8. '|' → logprob: -18.125022888183594
    9. '.
' → logprob: -18.250022888183594
    10. '   ' → logprob: -18.625022888183594

Token 3661: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.01815134845674038
    2. 'p' → logprob: -4.01815128326416
    3. '(Point' → logprob: -14.14315128326416
    4. '(' → logprob: -14.89315128326416
    5. 'Point' → logprob: -15.51815128326416
    6. ' p' → logprob: -15.64315128326416
    7. '(
' → logprob: -16.643152236938477
    8. 'point' → logprob: -16.768152236938477
    9. '(point' → logprob: -17.893152236938477
    10. '	p' → logprob: -19.268152236938477

Token 3662: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011816701851785183
    2. '           ' → logprob: -4.511816501617432
    3. ')' → logprob: -7.386816501617432
    4. '       ' → logprob: -9.38681697845459
    5. '
' → logprob: -10.01181697845459
    6. '               ' → logprob: -11.76181697845459
    7. '   ' → logprob: -12.38681697845459
    8. ')
' → logprob: -12.76181697845459
    9. '		' → logprob: -13.63681697845459
    10. '                   ' → logprob: -13.76181697845459

Token 3663: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06325269490480423
    2. '       ' → logprob: -3.0632526874542236
    3. 'for' → logprob: -4.563252925872803
    4. ' for' → logprob: -7.063252925872803
    5. '	for' → logprob: -7.063252925872803
    6. '	       ' → logprob: -7.313252925872803
    7. '
' → logprob: -7.438252925872803
    8. '		' → logprob: -7.813252925872803
    9. '   ' → logprob: -8.188252449035645
    10. '```' → logprob: -9.063252449035645

Token 3664: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.398067828034982e-05
    2. '           ' → logprob: -9.87507438659668
    3. ' for' → logprob: -10.75007438659668
    4. '               ' → logprob: -14.25007438659668
    5. '
' → logprob: -15.00007438659668
    6. '```' → logprob: -16.75007438659668
    7. '	for' → logprob: -16.87507438659668
    8. 'For' → logprob: -19.50007438659668
    9. '            
' → logprob: -19.75007438659668
    10. '``' → logprob: -20.50007438659668

Token 3665: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9274718761444092
    2. 'neighbor' → logprob: -1.4274718761444092
    3. 'nbr' → logprob: -1.4274718761444092
    4. 'np' → logprob: -2.177471876144409
    5. 'nb' → logprob: -4.677472114562988
    6. 'nei' → logprob: -6.677472114562988
    7. 'nx' → logprob: -7.927472114562988
    8. 'npos' → logprob: -8.552472114562988
    9. 'ne' → logprob: -9.677472114562988
    10. 'ng' → logprob: -10.052472114562988

Token 3666: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5491288304328918
    2. ' in' → logprob: -0.9241288304328918
    3. 'n' → logprob: -3.674128770828247
    4. 'p' → logprob: -8.549128532409668
    5. '_' → logprob: -10.049128532409668
    6. 'e' → logprob: -11.049128532409668
    7. ' n' → logprob: -11.299128532409668
    8. '_in' → logprob: -11.674128532409668
    9. ' ' → logprob: -12.299128532409668
    10. '_n' → logprob: -12.424128532409668

Token 3667: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.876193169271573e-05
    2. ' p' → logprob: -9.500088691711426
    3. 'n' → logprob: -12.000088691711426
    4. '[' → logprob: -12.375088691711426
    5. '[p' → logprob: -12.875088691711426
    6. '   ' → logprob: -14.750088691711426
    7. '[
' → logprob: -15.500088691711426
    8. '(p' → logprob: -15.750088691711426
    9. '```' → logprob: -16.500089645385742
    10. '['' → logprob: -17.125089645385742

Token 3668: '.ne' (ID: 39319)
  Prédit: '.ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ne' → logprob: -0.004276650492101908
    2. 'neighbors' → logprob: -5.504276752471924
    3. '_neighbors' → logprob: -8.754276275634766
    4. '(ne' → logprob: -11.754276275634766
    5. '.' → logprob: -11.879276275634766
    6. 'ne' → logprob: -12.129276275634766
    7. '_ne' → logprob: -12.379276275634766
    8. '().' → logprob: -12.504276275634766
    9. '_.' → logprob: -12.754276275634766
    10. ' .' → logprob: -12.879276275634766

Token 3669: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -1.282920129597187e-05
    2. 'igh' → logprob: -11.750012397766113
    3. 'neighbors' → logprob: -12.375012397766113
    4. 'ighbor' → logprob: -15.125012397766113
    5. 'ighbours' → logprob: -16.25001335144043
    6. 'ig' → logprob: -16.25001335144043
    7. 'bors' → logprob: -17.00001335144043
    8. 'gh' → logprob: -17.37501335144043
    9. 'ib' → logprob: -18.37501335144043
    10. '_neighbors' → logprob: -18.50001335144043

Token 3670: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015802091220393777
    2. '4' → logprob: -6.501580238342285
    3. '(' → logprob: -10.001580238342285
    4. '```' → logprob: -10.501580238342285
    5. '[' → logprob: -13.626580238342285
    6. '-' → logprob: -14.376580238342285
    7. '()' → logprob: -14.376580238342285
    8. '`' → logprob: -14.751580238342285
    9. '('_' → logprob: -14.751580238342285
    10. '(_' → logprob: -14.876580238342285

Token 3671: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.500000953674316
    3. '(' → logprob: -14.875000953674316
    4. '_' → logprob: -15.750000953674316
    5. '('' → logprob: -16.625001907348633
    6. '[' → logprob: -16.625001907348633
    7. '۴' → logprob: -17.125001907348633
    8. 'def' → logprob: -17.500001907348633
    9. ' ' → logprob: -17.875001907348633
    10. '' → logprob: -18.250001907348633

Token 3672: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4753226637840271
    2. '():
' → logprob: -0.9753226637840271
    3. '()' → logprob: -6.725322723388672
    4. '():
' → logprob: -10.350322723388672
    5. ':' → logprob: -12.600322723388672
    6. ' ():' → logprob: -12.600322723388672
    7. '(' → logprob: -12.725322723388672
    8. '():

' → logprob: -13.600322723388672
    9. '()):
' → logprob: -14.225322723388672
    10. ':
' → logprob: -14.975322723388672

Token 3673: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012535012501757592
    2. '	           ' → logprob: -10.00012493133545
    3. ' if' → logprob: -10.12512493133545
    4. 'if' → logprob: -10.75012493133545
    5. '           ' → logprob: -12.50012493133545
    6. '```' → logprob: -12.75012493133545
    7. '		       ' → logprob: -13.12512493133545
    8. '                   ' → logprob: -13.25012493133545
    9. '                
' → logprob: -13.75012493133545
    10. '              ' → logprob: -13.75012493133545

Token 3674: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0019527795957401395
    2. ' if' → logprob: -6.251952648162842
    3. '               ' → logprob: -11.126953125
    4. 'x' → logprob: -12.251953125
    5. '0' → logprob: -13.251953125
    6. '                   ' → logprob: -14.001953125
    7. '           ' → logprob: -14.376953125
    8. '```' → logprob: -14.376953125
    9. 'y' → logprob: -15.126953125
    10. 'nx' → logprob: -15.626953125

Token 3675: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5861724831629544e-05
    2. ' ' → logprob: -10.125056266784668
    3. '(' → logprob: -11.375056266784668
    4. '   ' → logprob: -13.750056266784668
    5. '               ' → logprob: -13.750056266784668
    6. '                   ' → logprob: -14.000056266784668
    7. ' (' → logprob: -14.625056266784668
    8. 'self' → logprob: -14.750056266784668
    9. '(
' → logprob: -15.875056266784668
    10. '                ' → logprob: -16.87505531311035

Token 3676: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.396757089532912e-05
    2. '               ' → logprob: -10.6250638961792
    3. ' ' → logprob: -10.8750638961792
    4. '                   ' → logprob: -11.2500638961792
    5. 'n' → logprob: -13.3750638961792
    6. '   ' → logprob: -13.6250638961792
    7. '                 ' → logprob: -13.7500638961792
    8. 'self' → logprob: -13.7500638961792
    9. '                ' → logprob: -14.2500638961792
    10. '                  ' → logprob: -14.6250638961792

Token 3677: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06994354724884033
    2. '<=' → logprob: -2.694943428039551
    3. ' <' → logprob: -13.44494342803955
    4. '```' → logprob: -13.44494342803955
    5. '<' → logprob: -13.56994342803955
    6. '   ' → logprob: -14.31994342803955
    7. ')<=' → logprob: -14.31994342803955
    8. '0' → logprob: -15.06994342803955
    9. ' ' → logprob: -15.81994342803955
    10. '                   ' → logprob: -15.94494342803955

Token 3678: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.491498531133402e-06
    2. ' n' → logprob: -11.750009536743164
    3. '               ' → logprob: -13.625009536743164
    4. '                   ' → logprob: -15.125009536743164
    5. '                               ' → logprob: -18.375009536743164
    6. ')n' → logprob: -18.500009536743164
    7. '	n' → logprob: -18.750009536743164
    8. '   ' → logprob: -19.000009536743164
    9. '                  ' → logprob: -19.125009536743164
    10. '              ' → logprob: -19.375009536743164

Token 3679: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0003479785518720746
    2. '.n' → logprob: -8.375348091125488
    3. '.y' → logprob: -9.875348091125488
    4. 'n' → logprob: -10.000348091125488
    5. 'x' → logprob: -11.375348091125488
    6. '.' → logprob: -11.625348091125488
    7. ' .' → logprob: -15.750348091125488
    8. '```' → logprob: -17.750347137451172
    9. '   ' → logprob: -18.000347137451172
    10. ' n' → logprob: -18.750347137451172

Token 3680: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.029257552698254585
    2. ' <' → logprob: -4.154257774353027
    3. 'and' → logprob: -4.904257774353027
    4. '<n' → logprob: -5.404257774353027
    5. ' and' → logprob: -6.904257774353027
    6. '<int' → logprob: -9.779257774353027
    7. '<len' → logprob: -10.279257774353027
    8. '<size' → logprob: -10.404257774353027
    9. '<m' → logprob: -11.154257774353027
    10. '<|end|>' → logprob: -11.529257774353027

Token 3681: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026400389149785042
    2. '201' → logprob: -3.651400327682495
    3. ' self' → logprob: -9.526400566101074
    4. '200' → logprob: -10.651400566101074
    5. '   ' → logprob: -13.526400566101074
    6. ' ' → logprob: -13.651400566101074
    7. '(self' → logprob: -15.151400566101074
    8. '
' → logprob: -16.026399612426758
    9. '```' → logprob: -16.151399612426758
    10. '202' → logprob: -16.526399612426758

Token 3682: '.grid' (ID: 19269)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005096780136227608
    2. '201' → logprob: -6.130096912384033
    3. 'grid' → logprob: -6.130096912384033
    4. '200' → logprob: -7.255096912384033
    5. ' self' → logprob: -10.880096435546875
    6. '
' → logprob: -13.255096435546875
    7. '   ' → logprob: -14.005096435546875
    8. '```' → logprob: -14.255096435546875
    9. ' grid' → logprob: -14.755096435546875
    10. '.grid' → logprob: -15.005096435546875

Token 3683: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.003179259831085801
    2. 'width' → logprob: -5.75317907333374
    3. '   ' → logprob: -13.628179550170898
    4. '.' → logprob: -16.0031795501709
    5. ' width' → logprob: -17.2531795501709
    6. '.height' → logprob: -17.6281795501709
    7. '	width' → logprob: -17.7531795501709
    8. ' .' → logprob: -18.0031795501709
    9. 'WIDTH' → logprob: -18.0031795501709
    10. '       ' → logprob: -18.1281795501709

Token 3684: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31423670053482056
    2. 'and' → logprob: -1.3142366409301758
    3. ')' → logprob: -7.064236640930176
    4. '               ' → logprob: -9.439236640930176
    5. '                   ' → logprob: -10.314236640930176
    6. '                       ' → logprob: -12.939236640930176
    7. '                ' → logprob: -13.189236640930176
    8. '                 ' → logprob: -14.814236640930176
    9. '                    ' → logprob: -14.939236640930176
    10. '                  ' → logprob: -15.189236640930176

Token 3685: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017840604996308684
    2. ' ' → logprob: -6.376783847808838
    3. '               ' → logprob: -9.876784324645996
    4. '                   ' → logprob: -10.876784324645996
    5. '                ' → logprob: -12.001784324645996
    6. '(' → logprob: -13.626784324645996
    7. '                 ' → logprob: -14.251784324645996
    8. '                    ' → logprob: -14.251784324645996
    9. '                  ' → logprob: -14.501784324645996
    10. ' (' → logprob: -14.626784324645996

Token 3686: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020795092859771103
    2. 'n' → logprob: -8.500207901000977
    3. ' ' → logprob: -13.125207901000977
    4. '               ' → logprob: -14.250207901000977
    5. '(' → logprob: -14.500207901000977
    6. '                   ' → logprob: -14.625207901000977
    7. '   ' → logprob: -16.125207901000977
    8. '
' → logprob: -16.375207901000977
    9. '                ' → logprob: -16.375207901000977
    10. '              ' → logprob: -16.750207901000977

Token 3687: ' <=' (ID: 5017)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.171937957406044
    2. 'n' → logprob: -1.9219379425048828
    3. ' ' → logprob: -5.046937942504883
    4. ' n' → logprob: -5.796937942504883
    5. '   ' → logprob: -7.171937942504883
    6. '               ' → logprob: -8.171937942504883
    7. '<' → logprob: -8.421937942504883
    8. '<n' → logprob: -8.546937942504883
    9. '                   ' → logprob: -8.671937942504883
    10. '  ' → logprob: -9.546937942504883

Token 3688: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010330495424568653
    2. ' n' → logprob: -6.876032829284668
    3. '
' → logprob: -16.126033782958984
    4. '	n' → logprob: -17.501033782958984
    5. '                   ' → logprob: -17.501033782958984
    6. '_n' → logprob: -17.751033782958984
    7. '               ' → logprob: -17.751033782958984
    8. ')n' → logprob: -17.751033782958984
    9. '(n' → logprob: -17.876033782958984
    10. '```' → logprob: -18.001033782958984

Token 3689: '.y' (ID: 4486)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031636992935091257
    2. '.grid' → logprob: -6.253163814544678
    3. '.n' → logprob: -6.753163814544678
    4. ' n' → logprob: -10.25316333770752
    5. '.height' → logprob: -10.75316333770752
    6. 'grid' → logprob: -11.62816333770752
    7. '.y' → logprob: -14.75316333770752
    8. '.width' → logprob: -15.37816333770752
    9. '<n' → logprob: -15.75316333770752
    10. '```' → logprob: -16.628164291381836

Token 3690: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07891931384801865
    2. '<' → logprob: -2.5789194107055664
    3. '<n' → logprob: -11.328919410705566
    4. '<class' → logprob: -12.703919410705566
    5. '<size' → logprob: -13.203919410705566
    6. '<len' → logprob: -13.203919410705566
    7. '<Grid' → logprob: -13.453919410705566
    8. '[' → logprob: -13.578919410705566
    9. '<int' → logprob: -13.828919410705566
    10. '<context' → logprob: -14.078919410705566

Token 3691: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020413640595506877
    2. ' self' → logprob: -8.500204086303711
    3. '(self' → logprob: -15.875204086303711
    4. '
' → logprob: -16.00020408630371
    5. '=self' → logprob: -16.37520408630371
    6. '[self' → logprob: -17.00020408630371
    7. '   ' → logprob: -17.12520408630371
    8. ' ' → logprob: -17.25020408630371
    9. '           ' → logprob: -17.37520408630371
    10. '201' → logprob: -17.50020408630371

Token 3692: '.grid' (ID: 19269)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023655613767914474
    2. 'grid' → logprob: -9.000236511230469
    3. ' self' → logprob: -9.125236511230469
    4. '.grid' → logprob: -13.000236511230469
    5. '
' → logprob: -14.375236511230469
    6. '[self' → logprob: -14.750236511230469
    7. ' ' → logprob: -15.750236511230469
    8. '   ' → logprob: -16.12523651123047
    9. '.self' → logprob: -16.37523651123047
    10. '(self' → logprob: -16.50023651123047

Token 3693: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.547076404094696
    2. '.grid' → logprob: -1.1720764636993408
    3. 'and' → logprob: -3.297076463699341
    4. '       ' → logprob: -3.797076463699341
    5. ' and' → logprob: -4.047076225280762
    6. 'height' → logprob: -4.172076225280762
    7. 'grid' → logprob: -5.297076225280762
    8. '   ' → logprob: -5.547076225280762
    9. 'self' → logprob: -5.672076225280762
    10. '[self' → logprob: -6.422076225280762

Token 3694: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014054319821298122
    2. 'and' → logprob: -5.014054298400879
    3. '               ' → logprob: -5.389054298400879
    4. '                   ' → logprob: -6.389054298400879
    5. ')' → logprob: -7.389054298400879
    6. '):
' → logprob: -8.389054298400879
    7. '                       ' → logprob: -9.639054298400879
    8. '                ' → logprob: -10.514054298400879
    9. '                    ' → logprob: -11.139054298400879
    10. '           ' → logprob: -11.139054298400879

Token 3695: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18279656767845154
    2. '                   ' → logprob: -2.0577964782714844
    3. 'and' → logprob: -3.4327964782714844
    4. '               ' → logprob: -5.432796478271484
    5. '                       ' → logprob: -6.307796478271484
    6. '                  ' → logprob: -8.182796478271484
    7. '):
' → logprob: -9.182796478271484
    8. '                ' → logprob: -9.307796478271484
    9. '                    ' → logprob: -9.307796478271484
    10. ')' → logprob: -9.807796478271484

Token 3696: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' (adapté à ' and') → logprob: -0.3877169191837311
    2. ' and' → logprob: -1.1377168893814087
    3. '                   ' → logprob: -7.512716770172119
    4. '                       ' → logprob: -8.387717247009277
    5. '                  ' → logprob: -11.262717247009277
    6. '	and' → logprob: -11.262717247009277
    7. '):
' → logprob: -11.387717247009277
    8. '                      ' → logprob: -11.512717247009277
    9. '                     ' → logprob: -12.012717247009277
    10. '               ' → logprob: -12.262717247009277

Token 3697: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3750559985637665
    2. 'not' → logprob: -1.2500560283660889
    3. ' not' → logprob: -3.875056028366089
    4. ' self' → logprob: -5.25005578994751
    5. '                   ' → logprob: -8.625056266784668
    6. '               ' → logprob: -11.250056266784668
    7. '                       ' → logprob: -11.625056266784668
    8. '(self' → logprob: -11.625056266784668
    9. '(not' → logprob: -11.625056266784668
    10. '   ' → logprob: -12.000056266784668

Token 3698: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.000776634959038347
    2. '.vis' → logprob: -7.625776767730713
    3. '.' → logprob: -8.875776290893555
    4. 'grid' → logprob: -8.875776290893555
    5. ' .' → logprob: -13.250776290893555
    6. ').' → logprob: -14.000776290893555
    7. '.user' → logprob: -14.500776290893555
    8. '   ' → logprob: -14.500776290893555
    9. '
' → logprob: -14.625776290893555
    10. 'visited' → logprob: -14.625776290893555

Token 3699: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.00017910730093717575
    2. 'cells' → logprob: -8.875179290771484
    3. '.' → logprob: -11.250179290771484
    4. '   ' → logprob: -11.875179290771484
    5. '               ' → logprob: -12.375179290771484
    6. ' .' → logprob: -12.625179290771484
    7. '                   ' → logprob: -13.125179290771484
    8. '           ' → logprob: -13.250179290771484
    9. '       ' → logprob: -13.625179290771484
    10. ').' → logprob: -13.750179290771484

Token 3700: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00021295747137628496
    2. '                   ' → logprob: -9.000212669372559
    3. '[y' → logprob: -10.750212669372559
    4. 'n' → logprob: -11.000212669372559
    5. '               ' → logprob: -11.125212669372559
    6. '[p' → logprob: -11.750212669372559
    7. '[' → logprob: -12.000212669372559
    8. '           ' → logprob: -12.125212669372559
    9. '][' → logprob: -12.125212669372559
    10. '                       ' → logprob: -12.625212669372559

Token 3701: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.1995602399110794
    2. '.n' → logprob: -2.8245601654052734
    3. '[n' → logprob: -2.8245601654052734
    4. 'y' → logprob: -3.5745601654052734
    5. '][' → logprob: -4.074560165405273
    6. 'n' → logprob: -4.324560165405273
    7. '[y' → logprob: -6.449560165405273
    8. ']' → logprob: -6.949560165405273
    9. '].' → logprob: -7.574560165405273
    10. '[' → logprob: -8.199560165405273

Token 3702: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011142584262415767
    2. '[n' → logprob: -6.876114368438721
    3. ']' → logprob: -10.001113891601562
    4. ' ][' → logprob: -10.876113891601562
    5. '           ' → logprob: -12.751113891601562
    6. '               ' → logprob: -13.126113891601562
    7. ']][' → logprob: -13.501113891601562
    8. '   ' → logprob: -13.501113891601562
    9. '                   ' → logprob: -13.626113891601562
    10. 'n' → logprob: -14.001113891601562

Token 3703: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.339278580620885e-06
    2. ' n' → logprob: -13.375001907348633
    3. '
' → logprob: -14.875001907348633
    4. '[n' → logprob: -16.000001907348633
    5. '                   ' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '               ' → logprob: -17.500001907348633
    8. '[' → logprob: -18.000001907348633
    9. '(n' → logprob: -18.125001907348633
    10. '           ' → logprob: -18.125001907348633

Token 3704: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.014186308719217777
    2. 'x' → logprob: -4.264186382293701
    3. '[x' → logprob: -11.639185905456543
    4. '].' → logprob: -12.389185905456543
    5. '.' → logprob: -13.014185905456543
    6. '```' → logprob: -13.264185905456543
    7. '{x' → logprob: -13.264185905456543
    8. ']' → logprob: -13.389185905456543
    9. '.n' → logprob: -14.639185905456543
    10. ' x' → logprob: -14.764185905456543

Token 3705: ']
' (ID: 1592)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6646398901939392
    2. ' and' → logprob: -1.539639949798584
    3. ']' → logprob: -1.789639949798584
    4. '                   ' → logprob: -2.289639949798584
    5. '                       ' → logprob: -7.414639949798584
    6. ']==' → logprob: -7.539639949798584
    7. '               ' → logprob: -8.039639472961426
    8. ']
' → logprob: -8.039639472961426
    9. '
' → logprob: -8.164639472961426
    10. '                    ' → logprob: -8.914639472961426

Token 3706: '                   ' (ID: 699)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.9828895330429077
    2. ' and' → logprob: -1.1078895330429077
    3. '                   ' → logprob: -1.2328895330429077
    4. '                       ' → logprob: -6.357889652252197
    5. '                    ' → logprob: -6.982889652252197
    6. '                  ' → logprob: -7.607889652252197
    7. '               ' → logprob: -7.982889652252197
    8. '                ' → logprob: -8.482889175415039
    9. '                     ' → logprob: -9.357889175415039
    10. '                 ' → logprob: -9.732889175415039

Token 3707: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' (adapté à ' and') → logprob: -0.3972746431827545
    2. ' and' → logprob: -1.3972746133804321
    3. '                   ' → logprob: -2.5222747325897217
    4. '                    ' → logprob: -9.3972749710083
    5. '                  ' → logprob: -9.3972749710083
    6. '                       ' → logprob: -10.1472749710083
    7. '               ' → logprob: -10.1472749710083
    8. '                ' → logprob: -10.7722749710083
    9. '                 ' → logprob: -11.3972749710083
    10. '                     ' → logprob: -12.0222749710083

Token 3708: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.005410077050328255
    2. ' not' → logprob: -5.255410194396973
    3. '                   ' → logprob: -8.755410194396973
    4. '(not' → logprob: -11.130410194396973
    5. '   ' → logprob: -13.380410194396973
    6. '               ' → logprob: -13.505410194396973
    7. 'and' → logprob: -15.005410194396973
    8. '
' → logprob: -15.505410194396973
    9. '                    ' → logprob: -15.755410194396973
    10. '                       ' → logprob: -16.130409240722656

Token 3709: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013290488859638572
    2. ' self' → logprob: -6.626328945159912
    3. '(self' → logprob: -13.37632942199707
    4. '                   ' → logprob: -14.37632942199707
    5. '   ' → logprob: -14.62632942199707
    6. '[self' → logprob: -15.25132942199707
    7. '           ' → logprob: -16.12632942199707
    8. '               ' → logprob: -16.50132942199707
    9. '	self' → logprob: -17.50132942199707
    10. ' ' → logprob: -17.62632942199707

Token 3710: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -7.088138227118179e-05
    2. 'visited' → logprob: -9.625070571899414
    3. '.' → logprob: -13.125070571899414
    4. ' .' → logprob: -13.875070571899414
    5. 'self' → logprob: -14.250070571899414
    6. '.visible' → logprob: -15.625070571899414
    7. '.v' → logprob: -15.875070571899414
    8. '.used' → logprob: -15.875070571899414
    9. '.self' → logprob: -16.125070571899414
    10. 'vis' → logprob: -16.250070571899414

Token 3711: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.0009566014050506055
    2. 'isted' → logprob: -7.0009565353393555
    3. 'visited' → logprob: -10.625956535339355
    4. '[' → logprob: -11.250956535339355
    5. '_' → logprob: -12.750956535339355
    6. 's' → logprob: -14.250956535339355
    7. '   ' → logprob: -14.250956535339355
    8. '[i' → logprob: -14.375956535339355
    9. '
' → logprob: -15.000956535339355
    10. '[self' → logprob: -15.125956535339355

Token 3712: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.392202976712724e-06
    2. 'n' → logprob: -12.750006675720215
    3. '[' → logprob: -13.500006675720215
    4. '[p' → logprob: -14.875006675720215
    5. '                   ' → logprob: -15.250006675720215
    6. '           ' → logprob: -15.375006675720215
    7. '   ' → logprob: -15.375006675720215
    8. '[y' → logprob: -15.625006675720215
    9. '               ' → logprob: -16.1250057220459
    10. '       ' → logprob: -16.2500057220459

Token 3713: '.y' (ID: 4486)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.005976904183626175
    2. '[y' → logprob: -5.255976676940918
    3. '][' → logprob: -7.255976676940918
    4. '[' → logprob: -11.005976676940918
    5. '[p' → logprob: -11.755976676940918
    6. 'y' → logprob: -12.380976676940918
    7. '
' → logprob: -13.255976676940918
    8. '   ' → logprob: -13.880976676940918
    9. 'n' → logprob: -14.005976676940918
    10. '       ' → logprob: -14.380976676940918

Token 3714: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5766201019287109
    2. '[n' → logprob: -0.8266201019287109
    3. '               ' → logprob: -8.576620101928711
    4. '                   ' → logprob: -8.951620101928711
    5. '   ' → logprob: -9.326620101928711
    6. ' ][' → logprob: -9.826620101928711
    7. ')[' → logprob: -10.076620101928711
    8. '[' → logprob: -10.326620101928711
    9. '           ' → logprob: -10.576620101928711
    10. ' [' → logprob: -10.951620101928711

Token 3715: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7432603272027336e-06
    2. ' n' → logprob: -13.750001907348633
    3. '[n' → logprob: -14.625001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '	n' → logprob: -17.000001907348633
    6. '(n' → logprob: -17.000001907348633
    7. 'nx' → logprob: -17.250001907348633
    8. '```' → logprob: -18.000001907348633
    9. 'x' → logprob: -18.375001907348633
    10. '
' → logprob: -18.875001907348633

Token 3716: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.333692729473114
    2. '[x' → logprob: -1.5836927890777588
    3. '][' → logprob: -2.708692789077759
    4. '[n' → logprob: -4.58369255065918
    5. '.x' → logprob: -7.58369255065918
    6. ']' → logprob: -7.58369255065918
    7. '[' → logprob: -8.45869255065918
    8. '_x' → logprob: -8.70869255065918
    9. '[
' → logprob: -9.70869255065918
    10. '   ' → logprob: -9.95869255065918

Token 3717: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10869809985160828
    2. '                   ' → logprob: -2.7336981296539307
    3. ']):
' → logprob: -3.7336981296539307
    4. '                       ' → logprob: -5.233697891235352
    5. '               ' → logprob: -5.358697891235352
    6. '):' → logprob: -6.733697891235352
    7. ']:
' → logprob: -7.233697891235352
    8. '                           ' → logprob: -7.608697891235352
    9. ']):' → logprob: -7.983697891235352
    10. ':
' → logprob: -8.358697891235352

Token 3718: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0386255644261837
    2. '                       ' → logprob: -3.288625478744507
    3. '
' → logprob: -8.788625717163086
    4. '               ' → logprob: -8.913625717163086
    5. '                           ' → logprob: -9.163625717163086
    6. '                               ' → logprob: -9.163625717163086
    7. '                    ' → logprob: -11.163625717163086
    8. '                  ' → logprob: -11.663625717163086
    9. '				' → logprob: -11.788625717163086
    10. ' self' → logprob: -11.788625717163086

Token 3719: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05422012135386467
    2. ' self' → logprob: -3.679220199584961
    3. '                   ' → logprob: -3.804220199584961
    4. '                       ' → logprob: -5.429220199584961
    5. '               ' → logprob: -8.054220199584961
    6. '   ' → logprob: -8.804220199584961
    7. '	self' → logprob: -8.804220199584961
    8. '       ' → logprob: -9.679220199584961
    9. '           ' → logprob: -10.054220199584961
    10. '                    ' → logprob: -10.304220199584961

Token 3720: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -3.7146746763028204e-05
    2. 'visited' → logprob: -10.25003719329834
    3. ' .' → logprob: -14.50003719329834
    4. '.' → logprob: -15.12503719329834
    5. '.visit' → logprob: -15.12503719329834
    6. '       ' → logprob: -15.75003719329834
    7. '   ' → logprob: -16.125036239624023
    8. '           ' → logprob: -16.125036239624023
    9. 'Visited' → logprob: -16.375036239624023
    10. 'vis' → logprob: -17.000036239624023

Token 3721: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.00019388488726690412
    2. 'ted' → logprob: -8.62519359588623
    3. 'isted' → logprob: -12.12519359588623
    4. '_' → logprob: -12.75019359588623
    5. '[' → logprob: -13.50019359588623
    6. 'sted' → logprob: -14.12519359588623
    7. '
' → logprob: -14.37519359588623
    8. '```' → logprob: -14.87519359588623
    9. '`' → logprob: -15.12519359588623
    10. '__' → logprob: -15.37519359588623

Token 3722: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.1008713702030946e-06
    2. 'n' → logprob: -13.625001907348633
    3. '[' → logprob: -14.750001907348633
    4. '[p' → logprob: -15.750001907348633
    5. '
' → logprob: -16.250001907348633
    6. '[
' → logprob: -17.500001907348633
    7. '                   ' → logprob: -17.625001907348633
    8. '```' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '           ' → logprob: -18.750001907348633

Token 3723: '.y' (ID: 4486)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5308771133422852
    2. '[y' → logprob: -0.9058771133422852
    3. 'y' → logprob: -5.155877113342285
    4. '[p' → logprob: -6.905877113342285
    5. '.y' → logprob: -7.155877113342285
    6. '[' → logprob: -9.280877113342285
    7. 'p' → logprob: -10.530877113342285
    8. '][' → logprob: -11.530877113342285
    9. '_y' → logprob: -11.905877113342285
    10. '   ' → logprob: -11.905877113342285

Token 3724: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.006733018439263105
    2. '][' → logprob: -5.006732940673828
    3. '[y' → logprob: -11.881732940673828
    4. '[p' → logprob: -12.381732940673828
    5. '[' → logprob: -13.006732940673828
    6. '   ' → logprob: -13.506732940673828
    7. '       ' → logprob: -15.006732940673828
    8. '[][' → logprob: -15.006732940673828
    9. ']' → logprob: -15.256732940673828
    10. '[j' → logprob: -15.631732940673828

Token 3725: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002632430987432599
    2. 'x' → logprob: -8.250263214111328
    3. '[n' → logprob: -14.375263214111328
    4. ' n' → logprob: -14.500263214111328
    5. 'nx' → logprob: -15.125263214111328
    6. '1' → logprob: -15.625263214111328
    7. '(n' → logprob: -16.250263214111328
    8. '   ' → logprob: -16.250263214111328
    9. '
' → logprob: -16.250263214111328
    10. 'p' → logprob: -16.375263214111328

Token 3726: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.009975525550544262
    2. '[x' → logprob: -4.884975433349609
    3. 'x' → logprob: -6.259975433349609
    4. '[n' → logprob: -9.00997543334961
    5. '][' → logprob: -9.75997543334961
    6. '[' → logprob: -9.75997543334961
    7. '```' → logprob: -9.75997543334961
    8. '{x' → logprob: -9.88497543334961
    9. '               ' → logprob: -10.75997543334961
    10. '           ' → logprob: -11.25997543334961

Token 3727: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12115783989429474
    2. ' =' → logprob: -2.3711578845977783
    3. ']' → logprob: -3.9961578845977783
    4. ']=' → logprob: -6.121157646179199
    5. '=True' → logprob: -9.3711576461792
    6. '                   ' → logprob: -10.1211576461792
    7. ' ]' → logprob: -11.9961576461792
    8. ')' → logprob: -12.1211576461792
    9. '                       ' → logprob: -12.4961576461792
    10. '[' → logprob: -12.9961576461792

Token 3728: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015164113137871027
    2. ' =' → logprob: -6.501516342163086
    3. '=
' → logprob: -11.876516342163086
    4. '=True' → logprob: -12.501516342163086
    5. '[' → logprob: -13.251516342163086
    6. '                   ' → logprob: -14.876516342163086
    7. '           ' → logprob: -15.376516342163086
    8. ']=' → logprob: -15.376516342163086
    9. '                           ' → logprob: -15.626516342163086
    10. '               ' → logprob: -16.001516342163086

Token 3729: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033546582562848926
    2. ' True' → logprob: -8.000335693359375
    3. '                   ' → logprob: -19.625335693359375
    4. '(True' → logprob: -20.250335693359375
    5. '   ' → logprob: -20.625335693359375
    6. '               ' → logprob: -21.375335693359375
    7. '           ' → logprob: -22.000335693359375
    8. '=True' → logprob: -22.000335693359375
    9. '                       ' → logprob: -22.625335693359375
    10. '
' → logprob: -22.750335693359375

Token 3730: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02165156975388527
    2. '                       ' → logprob: -4.021651744842529
    3. '				' → logprob: -6.146651744842529
    4. 'q' → logprob: -7.646651744842529
    5. ' q' → logprob: -8.646651268005371
    6. '                           ' → logprob: -9.021651268005371
    7. '		           ' → logprob: -9.146651268005371
    8. '					' → logprob: -9.271651268005371
    9. '
' → logprob: -9.896651268005371
    10. ',' → logprob: -10.021651268005371

Token 3731: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26572805643081665
    2. '                       ' → logprob: -2.265727996826172
    3. '				' → logprob: -2.390727996826172
    4. '                           ' → logprob: -5.015727996826172
    5. '					' → logprob: -5.015727996826172
    6. '	q' → logprob: -5.890727996826172
    7. '		           ' → logprob: -6.015727996826172
    8. '```' → logprob: -6.015727996826172
    9. '			       ' → logprob: -6.265727996826172
    10. '		' → logprob: -6.265727996826172

Token 3732: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0006597769097425044
    2. '                   ' → logprob: -8.125659942626953
    3. ' q' → logprob: -8.875659942626953
    4. '                       ' → logprob: -9.125659942626953
    5. '	q' → logprob: -9.500659942626953
    6. '                           ' → logprob: -10.250659942626953
    7. '```' → logprob: -13.750659942626953
    8. '                    ' → logprob: -13.875659942626953
    9. '                               ' → logprob: -14.250659942626953
    10. '                     ' → logprob: -14.750659942626953

Token 3733: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00036965898470953107
    2. '.' → logprob: -8.125370025634766
    3. '.extend' → logprob: -10.125370025634766
    4. '.enqueue' → logprob: -10.500370025634766
    5. '.push' → logprob: -13.125370025634766
    6. '.put' → logprob: -13.625370025634766
    7. '.Append' → logprob: -14.250370025634766
    8. 'append' → logprob: -14.375370025634766
    9. '.add' → logprob: -14.625370025634766
    10. '.p' → logprob: -14.625370025634766

Token 3734: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000206401280593127
    2. 'n' → logprob: -8.500205993652344
    3. '(' → logprob: -12.750205993652344
    4. '(
' → logprob: -17.625205993652344
    5. ' n' → logprob: -18.375205993652344
    6. ' (' → logprob: -18.500205993652344
    7. '	n' → logprob: -19.625205993652344
    8. '```' → logprob: -20.250205993652344
    9. '((' → logprob: -20.375205993652344
    10. ')' → logprob: -20.375205993652344

Token 3735: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017632400849834085
    2. ')
' → logprob: -6.626763343811035
    3. '(n' → logprob: -8.626763343811035
    4. ')n' → logprob: -8.626763343811035
    5. '[n' → logprob: -9.876763343811035
    6. '               ' → logprob: -11.626763343811035
    7. 'n' → logprob: -11.751763343811035
    8. '                   ' → logprob: -12.626763343811035
    9. '       ' → logprob: -13.001763343811035
    10. ' )' → logprob: -14.001763343811035

Token 3736: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3737: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8985277414321899
    2. '       ' → logprob: -1.02352774143219
    3. '	return' → logprob: -2.6485276222229004
    4. '                   ' → logprob: -2.7735276222229004
    5. '<|end|>' → logprob: -3.7735276222229004
    6. ' return' → logprob: -3.8985276222229004
    7. '
' → logprob: -4.2735276222229
    8. '               ' → logprob: -4.5235276222229
    9. '           ' → logprob: -4.7735276222229
    10. ')' → logprob: -5.3985276222229

Token 3738: ' region' (ID: 7967)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -9.615255839889869e-05
    2. ' region' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.87509536743164
    4. '(region' → logprob: -18.00009536743164
    5. 'set' → logprob: -18.50009536743164
    6. 'return' → logprob: -20.12509536743164
    7. '       ' → logprob: -20.25009536743164
    8. 'endregion' → logprob: -20.50009536743164
    9. '{' → logprob: -21.37509536743164
    10. '```' → logprob: -21.62509536743164

Token 3739: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04458744078874588
    2. '<|end|>' → logprob: -3.6695873737335205
    3. '   ' → logprob: -4.2945876121521
    4. 'def' → logprob: -6.4195876121521
    5. '    
' → logprob: -6.9195876121521
    6. '

' → logprob: -6.9195876121521
    7. '<|end|>' → logprob: -7.6695876121521
    8. '```' → logprob: -8.919587135314941
    9. '  ' → logprob: -10.169587135314941
    10. ' ' → logprob: -10.294587135314941

Token 3740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015135504072532058
    2. 'class' → logprob: -7.251513481140137
    3. 'def' → logprob: -7.251513481140137
    4. '
' → logprob: -9.626513481140137
    5. '```' → logprob: -11.126513481140137
    6. '#' → logprob: -11.876513481140137
    7. 'import' → logprob: -12.876513481140137
    8. 'from' → logprob: -13.501513481140137
    9. '    
' → logprob: -14.001513481140137
    10. '<|end|>' → logprob: -14.126513481140137

Token 3741: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.050046853721141815
    2. '   ' → logprob: -3.050046920776367
    3. '
' → logprob: -6.550046920776367
    4. ' def' → logprob: -10.550046920776367
    5. 'class' → logprob: -14.050046920776367
    6. '```' → logprob: -14.550046920776367
    7. '#' → logprob: -15.175046920776367
    8. '	def' → logprob: -15.550046920776367
    9. 'import' → logprob: -15.675046920776367
    10. 'from' → logprob: -15.800046920776367

Token 3742: ' identify' (ID: 11410)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.8182769417762756
    2. 'recogn' → logprob: -1.3182768821716309
    3. 'decode' → logprob: -1.5682768821716309
    4. 'solve' → logprob: -3.318276882171631
    5. 'detect' → logprob: -3.693276882171631
    6. 'read' → logprob: -4.568276882171631
    7. 'extract' → logprob: -5.068276882171631
    8. 'process' → logprob: -6.193276882171631
    9. 'identify' → logprob: -6.318276882171631
    10. 'interpret' → logprob: -8.068277359008789

Token 3743: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.5444669127464294
    2. '_chars' → logprob: -1.6694669723510742
    3. '(self' → logprob: -1.9194669723510742
    4. '_character' → logprob: -2.669466972351074
    5. '(' → logprob: -5.044466972351074
    6. '_tokens' → logprob: -5.544466972351074
    7. '_points' → logprob: -5.919466972351074
    8. '(
' → logprob: -7.419466972351074
    9. '_token' → logprob: -7.669466972351074
    10. '_regions' → logprob: -7.919466972351074

Token 3744: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.002669949783012271
    2. 'acter' → logprob: -6.252669811248779
    3. '(self' → logprob: -7.252669811248779
    4. 's' → logprob: -10.377670288085938
    5. 'actors' → logprob: -14.127670288085938
    6. 'aters' → logprob: -14.752670288085938
    7. 'act' → logprob: -14.877670288085938
    8. '   ' → logprob: -16.877670288085938
    9. '(char' → logprob: -17.002670288085938
    10. 'actor' → logprob: -17.127670288085938

Token 3745: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00027301779482513666
    2. '(' → logprob: -8.375272750854492
    3. 'self' → logprob: -10.500272750854492
    4. '   ' → logprob: -11.625272750854492
    5. '(
' → logprob: -12.750272750854492
    6. '       ' → logprob: -13.250272750854492
    7. ' (' → logprob: -14.000272750854492
    8. '
' → logprob: -16.125272750854492
    9. '	self' → logprob: -16.250272750854492
    10. 'def' → logprob: -16.500272750854492

Token 3746: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0021283722016960382
    2. 'self' → logprob: -6.377128601074219
    3. '       ' → logprob: -8.752128601074219
    4. '   ' → logprob: -9.002128601074219
    5. ')' → logprob: -10.002128601074219
    6. '):
' → logprob: -10.002128601074219
    7. '(' → logprob: -10.627128601074219
    8. '
' → logprob: -11.502128601074219
    9. 's' → logprob: -12.252128601074219
    10. '):' → logprob: -12.377128601074219

Token 3747: ' regions' (ID: 21043)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2524612843990326
    2. 'regions' → logprob: -1.752461314201355
    3. ')' → logprob: -3.3774611949920654
    4. '   ' → logprob: -5.1274614334106445
    5. '):
' → logprob: -5.3774614334106445
    6. ' self' → logprob: -7.1274614334106445
    7. ' regions' → logprob: -7.1274614334106445
    8. 'char' → logprob: -7.2524614334106445
    9. 'characters' → logprob: -7.3774614334106445
    10. 'chars' → logprob: -7.6274614334106445

Token 3748: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9939634799957275
    2. 'self' → logprob: -1.2439634799957275
    3. '(self' → logprob: -2.2439634799957275
    4. '):
' → logprob: -2.3689634799957275
    5. '       ' → logprob: -2.7439634799957275
    6. '   ' → logprob: -2.9939634799957275
    7. '):' → logprob: -3.6189634799957275
    8. '
' → logprob: -7.743963241577148
    9. ' self' → logprob: -8.743963241577148
    10. ' ' → logprob: -10.618963241577148

Token 3749: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.07162225246429443
    2. ')' → logprob: -2.946622371673584
    3. 'Set' → logprob: -4.571622371673584
    4. '[List' → logprob: -6.071622371673584
    5. 'regions' → logprob: -6.571622371673584
    6. 'self' → logprob: -6.696622371673584
    7. '
' → logprob: -7.946622371673584
    8. 'list' → logprob: -8.696621894836426
    9. ' List' → logprob: -8.696621894836426
    10. '):
' → logprob: -8.946621894836426

Token 3750: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00030436101951636374
    2. '[List' → logprob: -8.500304222106934
    3. ')' → logprob: -10.000304222106934
    4. '   ' → logprob: -10.125304222106934
    5. '       ' → logprob: -12.125304222106934
    6. '(Set' → logprob: -12.625304222106934
    7. 'Set' → logprob: -12.875304222106934
    8. '[self' → logprob: -14.125304222106934
    9. '):
' → logprob: -14.375304222106934
    10. '```' → logprob: -14.625304222106934

Token 3751: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.9361264946837764e-07
    2. ' Set' → logprob: -15.875
    3. 'set' → logprob: -17.125
    4. '	Set' → logprob: -17.625
    5. 'Point' → logprob: -17.75
    6. '   ' → logprob: -17.75
    7. '_Set' → logprob: -18.25
    8. '(Set' → logprob: -18.875
    9. '_set' → logprob: -19.0
    10. '```' → logprob: -19.0

Token 3752: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. 'Point' → logprob: -13.75000286102295
    3. '[
' → logprob: -14.12500286102295
    4. '<Point' → logprob: -15.25000286102295
    5. '
' → logprob: -15.50000286102295
    6. '```' → logprob: -15.75000286102295
    7. '   ' → logprob: -15.87500286102295
    8. 'Set' → logprob: -17.000003814697266
    9. ']' → logprob: -17.000003814697266
    10. '       ' → logprob: -17.375003814697266

Token 3753: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. ' Point' → logprob: -17.125
    3. '   ' → logprob: -17.75
    4. '	Point' → logprob: -18.5
    5. 'Set' → logprob: -19.0
    6. '(Point' → logprob: -19.75
    7. '[' → logprob: -20.125
    8. ')' → logprob: -20.375
    9. '<Point' → logprob: -20.375
    10. '       ' → logprob: -20.5

Token 3754: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0047743613831698895
    2. ']):
' → logprob: -5.629774570465088
    3. ']):' → logprob: -8.12977409362793
    4. ')' → logprob: -8.12977409362793
    5. ')])' → logprob: -8.25477409362793
    6. ']])' → logprob: -9.25477409362793
    7. '])]' → logprob: -9.50477409362793
    8. ')]' → logprob: -9.75477409362793
    9. ']' → logprob: -10.62977409362793
    10. '   ' → logprob: -10.75477409362793

Token 3755: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7138111591339111
    2. '->' → logprob: -1.4638111591339111
    3. ':' → logprob: -2.213811159133911
    4. '(self' → logprob: -2.588811159133911
    5. '   ' → logprob: -3.838811159133911
    6. ' ->' → logprob: -3.838811159133911
    7. ')' → logprob: -3.963811159133911
    8. ':
' → logprob: -4.588810920715332
    9. ')->' → logprob: -4.713810920715332
    10. 'self' → logprob: -5.338810920715332

Token 3756: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00011284107313258573
    2. ' List' → logprob: -9.250112533569336
    3. '[List' → logprob: -11.500112533569336
    4. 'str' → logprob: -12.125112533569336
    5. 'list' → logprob: -14.125112533569336
    6. '   ' → logprob: -15.375112533569336
    7. '[str' → logprob: -15.750112533569336
    8. '	List' → logprob: -17.875112533569336
    9. '       ' → logprob: -17.875112533569336
    10. '_list' → logprob: -18.750112533569336

Token 3757: '[' (ID: 58)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -6.704273118884885e-07
    2. '[int' → logprob: -14.625000953674316
    3. '[' → logprob: -15.500000953674316
    4. '[
' → logprob: -17.25
    5. 'str' → logprob: -17.375
    6. '[String' → logprob: -20.25
    7. 'Str' → logprob: -20.25
    8. '[List' → logprob: -20.375
    9. ':
' → logprob: -20.75
    10. '['' → logprob: -21.25

Token 3758: 'Tuple' (ID: 40048)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00017529279284644872
    2. 'Tuple' → logprob: -9.375175476074219
    3. 'Point' → logprob: -9.875175476074219
    4. 'Character' → logprob: -10.500175476074219
    5. '[str' → logprob: -12.375175476074219
    6. ' str' → logprob: -13.000175476074219
    7. '(str' → logprob: -13.625175476074219
    8. 'char' → logprob: -13.750175476074219
    9. 'tuple' → logprob: -13.750175476074219
    10. 'Str' → logprob: -14.375175476074219

Token 3759: '[int' (ID: 40124)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.27796369791030884
    2. 'int' → logprob: -2.152963638305664
    3. 'str' → logprob: -2.152963638305664
    4. '[int' → logprob: -5.652963638305664
    5. '[str' → logprob: -5.777963638305664
    6. 'Character' → logprob: -6.527963638305664
    7. 'Set' → logprob: -7.027963638305664
    8. 'float' → logprob: -8.152963638305664
    9. ' Point' → logprob: -8.652963638305664
    10. 'char' → logprob: -8.777963638305664

Token 3760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.909333023941144e-05
    2. ',int' → logprob: -10.000068664550781
    3. ',float' → logprob: -12.125068664550781
    4. ' ,' → logprob: -12.875068664550781
    5. ',List' → logprob: -12.875068664550781
    6. 'Set' → logprob: -13.000068664550781
    7. '[' → logprob: -13.125068664550781
    8. ',
' → logprob: -13.375068664550781
    9. '[int' → logprob: -13.375068664550781
    10. ',set' → logprob: -13.500068664550781

Token 3761: ' str' (ID: 989)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.1293092519044876
    2. 'int' → logprob: -2.1293091773986816
    3. 'Point' → logprob: -6.504309177398682
    4. 'Character' → logprob: -7.879309177398682
    5. 'str' → logprob: -8.75430965423584
    6. ' Set' → logprob: -9.12930965423584
    7. ' int' → logprob: -9.50430965423584
    8. 'List' → logprob: -10.12930965423584
    9. '
' → logprob: -10.25430965423584
    10. 'min' → logprob: -11.12930965423584

Token 3762: ']]:
' (ID: 183340)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010164948180317879
    2. ']:
' → logprob: -7.376016616821289
    3. '   ' → logprob: -8.126016616821289
    4. ']]:
' → logprob: -10.751016616821289
    5. ' ,' → logprob: -10.876016616821289
    6. ',
' → logprob: -10.876016616821289
    7. ']:' → logprob: -11.501016616821289
    8. ']' → logprob: -11.626016616821289
    9. ']>' → logprob: -12.876016616821289
    10. ']:
' → logprob: -13.001016616821289

Token 3763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008423840627074242
    2. '```' → logprob: -7.125842571258545
    3. 'points' → logprob: -11.500842094421387
    4. 'result' → logprob: -11.625842094421387
    5. '``' → logprob: -12.375842094421387
    6. 'results' → logprob: -13.125842094421387
    7. 'tokens' → logprob: -13.125842094421387
    8. '`' → logprob: -13.125842094421387
    9. 'chars' → logprob: -13.250842094421387
    10. '
' → logprob: -14.000842094421387

Token 3764: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6006993651390076
    2. 'result' → logprob: -0.8506993651390076
    3. 'results' → logprob: -4.225699424743652
    4. 'chars' → logprob: -5.100699424743652
    5. 'res' → logprob: -5.975699424743652
    6. 'identified' → logprob: -6.975699424743652
    7. 'char' → logprob: -8.975699424743652
    8. 'output' → logprob: -9.975699424743652
    9. 'characters' → logprob: -10.225699424743652
    10. 'recognized' → logprob: -11.100699424743652

Token 3765: ' Each' (ID: 11555)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8971652984619141
    2. 'identified' → logprob: -1.022165298461914
    3. 'chars' → logprob: -1.772165298461914
    4. 'results' → logprob: -3.522165298461914
    5. 'char' → logprob: -4.022165298461914
    6. 'characters' → logprob: -4.897165298461914
    7. 'sorted' → logprob: -5.772165298461914
    8. 'output' → logprob: -6.772165298461914
    9. 'recognized' → logprob: -7.147165298461914
    10. 'indexed' → logprob: -7.272165298461914

Token 3766: ' region' (ID: 7967)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.0025603151880204678
    2. ' region' → logprob: -6.377560138702393
    3. '   ' → logprob: -7.877560138702393
    4. '
' → logprob: -8.50256061553955
    5. '       ' → logprob: -9.25256061553955
    6. '(region' → logprob: -10.37756061553955
    7. 'point' → logprob: -10.50256061553955
    8. 'regions' → logprob: -10.87756061553955
    9. 'char' → logprob: -11.25256061553955
    10. ' ' → logprob: -11.37756061553955

Token 3767: ' corresponds' (ID: 66938)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7016837000846863
    2. '=' → logprob: -1.826683759689331
    3. ' is' → logprob: -2.576683759689331
    4. '.sort' → logprob: -2.826683759689331
    5. 'is' → logprob: -3.076683759689331
    6. '_sorted' → logprob: -3.201683759689331
    7. ' =' → logprob: -3.701683759689331
    8. 'def' → logprob: -3.826683759689331
    9. '   ' → logprob: -3.951683759689331
    10. '       ' → logprob: -5.076683521270752

Token 3768: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.23082353174686432
    2. ' to' → logprob: -1.7308235168457031
    3. '=' → logprob: -4.105823516845703
    4. ',' → logprob: -4.980823516845703
    5. '       ' → logprob: -5.605823516845703
    6. '```' → logprob: -7.605823516845703
    7. ' =' → logprob: -7.730823516845703
    8. '_to' → logprob: -8.355823516845703
    9. '#' → logprob: -9.355823516845703
    10. 'self' → logprob: -9.355823516845703

Token 3769: ' a' (ID: 261)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'region' → logprob: -1.3428045511245728
    2. '(p' → logprob: -2.092804431915283
    3. '(region' → logprob: -2.092804431915283
    4. '(' → logprob: -2.342804431915283
    5. '(Point' → logprob: -2.342804431915283
    6. ' (' → logprob: -2.842804431915283
    7. '(x' → logprob: -3.092804431915283
    8. 'character' → logprob: -3.217804431915283
    9. '   ' → logprob: -3.467804431915283
    10. 'point' → logprob: -3.717804431915283

Token 3770: ' character' (ID: 5855)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.45927608013153076
    2. 'point' → logprob: -1.8342760801315308
    3. 'tuple' → logprob: -2.7092761993408203
    4. 'character' → logprob: -3.0842761993408203
    5. ' Tuple' → logprob: -3.7092761993408203
    6. 'Point' → logprob: -4.08427619934082
    7. '(' → logprob: -4.20927619934082
    8. ' tuple' → logprob: -4.95927619934082
    9. ' (' → logprob: -5.08427619934082
    10. '(int' → logprob: -5.20927619934082

Token 3771: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25916680693626404
    2. '       ' → logprob: -1.5091668367385864
    3. ':' → logprob: -6.509166717529297
    4. '   ' → logprob: -6.634166717529297
    5. ':
' → logprob: -7.384166717529297
    6. '        
' → logprob: -7.384166717529297
    7. '```' → logprob: -7.384166717529297
    8. ',' → logprob: -7.509166717529297
    9. 'result' → logprob: -7.634166717529297
    10. '
' → logprob: -8.259166717529297

Token 3772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24972373247146606
    2. 'result' → logprob: -1.6247236728668213
    3. 'results' → logprob: -4.6247239112854
    4. 'chars' → logprob: -4.9997239112854
    5. 'res' → logprob: -5.2497239112854
    6. '```' → logprob: -7.3747239112854
    7. 'positions' → logprob: -8.249723434448242
    8. 'char' → logprob: -8.624723434448242
    9. 'points' → logprob: -8.874723434448242
    10. 'tokens' → logprob: -8.874723434448242

Token 3773: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3272293508052826
    2. 'result' → logprob: -1.577229380607605
    3. 'results' → logprob: -3.2022292613983154
    4. 'identified' → logprob: -3.8272292613983154
    5. 'chars' → logprob: -4.9522294998168945
    6. 'char' → logprob: -6.2022294998168945
    7. 'res' → logprob: -7.8272294998168945
    8. 'characters' → logprob: -7.9522294998168945
    9. 'recognized' → logprob: -9.452229499816895
    10. 'ident' → logprob: -10.202229499816895

Token 3774: ' The' (ID: 623)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identified' → logprob: -0.714176595211029
    2. 'result' → logprob: -1.0891766548156738
    3. 'chars' → logprob: -2.714176654815674
    4. 'results' → logprob: -2.839176654815674
    5. 'char' → logprob: -3.339176654815674
    6. '       ' → logprob: -5.214176654815674
    7. 'characters' → logprob: -5.839176654815674
    8. 'res' → logprob: -6.089176654815674
    9. 'recognized' → logprob: -6.714176654815674
    10. '   ' → logprob: -7.589176654815674

Token 3775: ' position' (ID: 4010)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identified' → logprob: -0.6481988430023193
    2. 'result' → logprob: -1.6481988430023193
    3. 'characters' → logprob: -2.2731988430023193
    4. 'chars' → logprob: -2.7731988430023193
    5. 'results' → logprob: -2.7731988430023193
    6. ' identified' → logprob: -4.148199081420898
    7. 'char' → logprob: -4.523199081420898
    8. 'sorted' → logprob: -5.148199081420898
    9. '#' → logprob: -5.273199081420898
    10. 'points' → logprob: -5.523199081420898

Token 3776: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7114437818527222
    2. 's' → logprob: -1.0864437818527222
    3. ' =' → logprob: -1.9614437818527222
    4. 'of' → logprob: -4.961443901062012
    5. ' of' → logprob: -5.211443901062012
    6. 'for' → logprob: -5.836443901062012
    7. '   ' → logprob: -5.836443901062012
    8. ' is' → logprob: -6.336443901062012
    9. '_points' → logprob: -6.461443901062012
    10. 'points' → logprob: -6.586443901062012

Token 3777: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.9237463474273682
    2. 'identify' → logprob: -1.0487463474273682
    3. 'return' → logprob: -2.048746347427368
    4. 'append' → logprob: -3.548746347427368
    5. 'use' → logprob: -4.173746109008789
    6. 'x' → logprob: -4.173746109008789
    7. 'recogn' → logprob: -4.173746109008789
    8. 'min' → logprob: -4.548746109008789
    9. 'pos' → logprob: -5.298746109008789
    10. 'represent' → logprob: -5.298746109008789

Token 3778: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8624235391616821
    2. '=' → logprob: -1.2374235391616821
    3. 'by' → logprob: -2.8624234199523926
    4. ' =' → logprob: -2.9874234199523926
    5. '_regions' → logprob: -3.6124234199523926
    6. '_points' → logprob: -3.7374234199523926
    7. 's' → logprob: -3.9874234199523926
    8. '_by' → logprob: -4.237423419952393
    9. '_key' → logprob: -4.362423419952393
    10. 'regions' → logprob: -4.612423419952393

Token 3779: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44736167788505554
    2. ' =' → logprob: -1.072361707687378
    3. 'return' → logprob: -5.697361469268799
    4. 'min' → logprob: -5.697361469268799
    5. 'points' → logprob: -6.572361469268799
    6. 'pos' → logprob: -6.572361469268799
    7. 'region' → logprob: -6.822361469268799
    8. 'for' → logprob: -7.447361469268799
    9. 'sorted' → logprob: -7.447361469268799
    10. 'x' → logprob: -7.572361469268799

Token 3780: ' the' (ID: 290)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0013516645412892103
    2. '(min' → logprob: -6.751351833343506
    3. ' min' → logprob: -8.751351356506348
    4. '[min' → logprob: -11.001351356506348
    5. 'next' → logprob: -12.501351356506348
    6. '   ' → logprob: -13.751351356506348
    7. 'sorted' → logprob: -14.501351356506348
    8. 'tuple' → logprob: -15.251351356506348
    9. '=min' → logprob: -15.626351356506348
    10. 'regions' → logprob: -15.751351356506348

Token 3781: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.289473822107539e-05
    2. ' min' → logprob: -10.375062942504883
    3. '(min' → logprob: -10.500062942504883
    4. '[min' → logprob: -12.875062942504883
    5. '   ' → logprob: -14.250062942504883
    6. 'max' → logprob: -15.250062942504883
    7. 'next' → logprob: -15.625062942504883
    8. 'tuple' → logprob: -16.125062942504883
    9. 'sorted' → logprob: -16.500062942504883
    10. 'minimum' → logprob: -16.500062942504883

Token 3782: ' x' (ID: 1215)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.6584493517875671
    2. 'x' → logprob: -0.7834493517875671
    3. 'p' → logprob: -3.908449411392212
    4. '(p' → logprob: -5.283449172973633
    5. ' p' → logprob: -9.658449172973633
    6. '```' → logprob: -9.658449172973633
    7. '_p' → logprob: -10.158449172973633
    8. '_y' → logprob: -10.283449172973633
    9. '_' → logprob: -10.283449172973633
    10. 'point' → logprob: -10.908449172973633

Token 3783: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2131793200969696
    2. 'for' → logprob: -3.088179349899292
    3. ' =' → logprob: -3.213179349899292
    4. ',
' → logprob: -3.588179349899292
    5. '
' → logprob: -3.838179349899292
    6. '   ' → logprob: -4.963179111480713
    7. ' ,' → logprob: -5.088179111480713
    8. '=' → logprob: -5.213179111480713
    9. ' for' → logprob: -5.213179111480713
    10. '(p' → logprob: -5.713179111480713

Token 3784: ' region' (ID: 7967)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0617518424987793
    2. 'region' → logprob: -1.4367518424987793
    3. 'p' → logprob: -1.8117518424987793
    4. 'min' → logprob: -2.0617518424987793
    5. '(region' → logprob: -2.8117518424987793
    6. '(min' → logprob: -3.9367518424987793
    7. 'points' → logprob: -4.936751842498779
    8. 'point' → logprob: -5.061751842498779
    9. 'r' → logprob: -5.186751842498779
    10. '[(' → logprob: -5.436751842498779

Token 3785: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15651562809944153
    2. '
' → logprob: -2.156515598297119
    3. '   ' → logprob: -4.031515598297119
    4. 'result' → logprob: -6.031515598297119
    5. '[]
' → logprob: -6.156515598297119
    6. 'points' → logprob: -7.031515598297119
    7. 'def' → logprob: -7.156515598297119
    8. 'results' → logprob: -7.281515598297119
    9. ',' → logprob: -7.531515598297119
    10. '):
' → logprob: -7.531515598297119

Token 3786: 'small' (ID: 18158)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.28205931186676025
    2. 'lambda' → logprob: -1.7820593118667603
    3. 'min' → logprob: -3.1570591926574707
    4. 'region' → logprob: -4.407059192657471
    5. ' lambda' → logprob: -5.032059192657471
    6. ' p' → logprob: -5.657059192657471
    7. ')' → logprob: -5.782059192657471
    8. 'key' → logprob: -5.782059192657471
    9. 'point' → logprob: -7.157059192657471
    10. '
' → logprob: -7.157059192657471

Token 3787: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.005410788580775261
    2. ')' → logprob: -6.630410671234131
    3. '       ' → logprob: -6.755410671234131
    4. '_x' → logprob: -7.130410671234131
    5. 'set' → logprob: -7.630410671234131
    6. '   ' → logprob: -7.880410671234131
    7. '_' → logprob: -7.880410671234131
    8. '           ' → logprob: -8.005411148071289
    9. 'ests' → logprob: -9.505411148071289
    10. '               ' → logprob: -9.630411148071289

Token 3788: ' X' (ID: 2127)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.19997180998325348
    2. 'p' → logprob: -1.9499717950820923
    3. '(
' → logprob: -3.949971914291382
    4. 'min' → logprob: -5.324971675872803
    5. 'x' → logprob: -5.574971675872803
    6. '(' → logprob: -5.824971675872803
    7. 'point' → logprob: -6.324971675872803
    8. '_x' → logprob: -6.824971675872803
    9. '
' → logprob: -7.199971675872803
    10. ' p' → logprob: -7.199971675872803

Token 3789: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07652825117111206
    2. ',' → logprob: -3.201528310775757
    3. 'for' → logprob: -4.201528072357178
    4. ' for' → logprob: -5.326528072357178
    5. ')
' → logprob: -5.826528072357178
    6. '),' → logprob: -6.076528072357178
    7. '
' → logprob: -6.701528072357178
    8. '):' → logprob: -6.826528072357178
    9. '):
' → logprob: -7.076528072357178
    10. ',
' → logprob: -7.451528072357178

Token 3790: ' region' (ID: 7967)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12215372920036316
    2. 'point' → logprob: -3.7471537590026855
    3. 'points' → logprob: -4.1221537590026855
    4. '(p' → logprob: -4.1221537590026855
    5. '[p' → logprob: -4.2471537590026855
    6. 'region' → logprob: -4.2471537590026855
    7. '[(' → logprob: -4.8721537590026855
    8. 'min' → logprob: -5.3721537590026855
    9. '{' → logprob: -5.4971537590026855
    10. '
' → logprob: -5.8721537590026855

Token 3791: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.688562273979187
    2. ')' → logprob: -1.813562273979187
    3. ',' → logprob: -1.813562273979187
    4. '       ' → logprob: -3.0635623931884766
    5. '),' → logprob: -3.0635623931884766
    6. '):
' → logprob: -3.4385623931884766
    7. '):' → logprob: -4.938562393188477
    8. 'for' → logprob: -5.063562393188477
    9. '   ' → logprob: -5.188562393188477
    10. '[' → logprob: -5.188562393188477

Token 3792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3652075231075287
    2. '```' → logprob: -2.3652074337005615
    3. '
' → logprob: -2.8652074337005615
    4. '   ' → logprob: -2.8652074337005615
    5. ',' → logprob: -3.8652074337005615
    6. ':
' → logprob: -4.490207672119141
    7. '):
' → logprob: -4.490207672119141
    8. ':' → logprob: -4.615207672119141
    9. ' =' → logprob: -4.990207672119141
    10. '[]
' → logprob: -5.365207672119141

Token 3793: ' identified' (ID: 17800)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.49570053815841675
    2. '       ' → logprob: -0.9957005381584167
    3. 'results' → logprob: -4.745700359344482
    4. 'res' → logprob: -4.870700359344482
    5. 'identified' (adapté à ' identified') → logprob: -6.120700359344482
    6. 'chars' → logprob: -6.370700359344482
    7. 'char' → logprob: -7.370700359344482
    8. 'ret' → logprob: -8.12070083618164
    9. 'output' → logprob: -10.12070083618164
    10. 'ident' → logprob: -10.12070083618164

Token 3794: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6043073534965515
    2. '_chars' → logprob: -0.9793073534965515
    3. ' =' → logprob: -2.8543074131011963
    4. '_char' → logprob: -4.604307174682617
    5. 's' → logprob: -5.229307174682617
    6. '_points' → logprob: -6.229307174682617
    7. 'chars' → logprob: -6.979307174682617
    8. '_positions' → logprob: -7.229307174682617
    9. '_list' → logprob: -7.604307174682617
    10. 'characters' → logprob: -8.104307174682617

Token 3795: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.07896392047405243
    2. '[]' → logprob: -2.5789639949798584
    3. '[]

' → logprob: -9.578964233398438
    4. ' []
' → logprob: -12.578964233398438
    5. '[
' → logprob: -14.203964233398438
    6. '[(' → logprob: -14.578964233398438
    7. ' []' → logprob: -15.203964233398438
    8. '[])
' → logprob: -16.328964233398438
    9. '[' → logprob: -16.703964233398438
    10. '   ' → logprob: -16.828964233398438

Token 3796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002135982969775796
    2. 'for' → logprob: -6.377135753631592
    3. ' for' → logprob: -8.00213623046875
    4. '
' → logprob: -9.62713623046875
    5. '   ' → logprob: -10.50213623046875
    6. '```' → logprob: -13.00213623046875
    7. '           ' → logprob: -13.75213623046875
    8. '        
' → logprob: -14.25213623046875
    9. ',' → logprob: -15.12713623046875
    10. ')' → logprob: -15.37713623046875

Token 3797: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12699194252490997
    2. '       ' → logprob: -2.1269919872283936
    3. ' for' → logprob: -9.751992225646973
    4. '   ' → logprob: -12.251992225646973
    5. '```' → logprob: -14.001992225646973
    6. '	for' → logprob: -16.001991271972656
    7. '           ' → logprob: -18.126991271972656
    8. '
' → logprob: -18.126991271972656
    9. '``' → logprob: -18.751991271972656
    10. 'For' → logprob: -19.626991271972656

Token 3798: ' region' (ID: 7967)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.28488701581954956
    2. 'points' → logprob: -1.4098870754241943
    3. 'pts' → logprob: -6.159886837005615
    4. ' region' → logprob: -7.034886837005615
    5. ' points' → logprob: -7.909886837005615
    6. 'r' → logprob: -9.159887313842773
    7. 'point' → logprob: -9.659887313842773
    8. 'reg' → logprob: -9.909887313842773
    9. 'regions' → logprob: -9.909887313842773
    10. ' pts' → logprob: -10.159887313842773

Token 3799: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1610938161611557
    2. 'in' → logprob: -1.911093831062317
    3. '   ' → logprob: -7.911093711853027
    4. '       ' → logprob: -8.161093711853027
    5. ',' → logprob: -9.036093711853027
    6. '_in' → logprob: -10.786093711853027
    7. ')' → logprob: -11.286093711853027
    8. '    ' → logprob: -11.661093711853027
    9. '```' → logprob: -11.786093711853027
    10. '_point' → logprob: -11.911093711853027

Token 3800: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.04901151359081268
    2. 'region' → logprob: -3.799011468887329
    3. '[(' → logprob: -4.049011707305908
    4. 'identified' → logprob: -5.674011707305908
    5. 'sorted' → logprob: -6.424011707305908
    6. '[' → logprob: -6.799011707305908
    7. ' regions' → logprob: -7.049011707305908
    8. '(region' → logprob: -8.79901123046875
    9. '[((' → logprob: -9.04901123046875
    10. '((' → logprob: -9.17401123046875

Token 3801: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.51654452085495
    2. ':' → logprob: -1.2665445804595947
    3. '       ' → logprob: -2.7665445804595947
    4. '           ' → logprob: -3.1415445804595947
    5. ',' → logprob: -4.266544342041016
    6. '):
' → logprob: -7.641544342041016
    7. '[' → logprob: -8.766544342041016
    8. '<|end|>' → logprob: -9.266544342041016
    9. '[::-' → logprob: -9.641544342041016
    10. '        ' → logprob: -9.891544342041016

Token 3802: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5234565138816833
    2. '       ' → logprob: -0.8984565138816833
    3. '```' → logprob: -8.898456573486328
    4. 'min' → logprob: -9.023456573486328
    5. ' min' → logprob: -10.773456573486328
    6. '
' → logprob: -10.898456573486328
    7. '   ' → logprob: -11.398456573486328
    8. '               ' → logprob: -12.273456573486328
    9. ',' → logprob: -12.898456573486328
    10. '        ' → logprob: -12.898456573486328

Token 3803: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.23371905088424683
    2. 'try' → logprob: -1.6087191104888916
    3. '           ' → logprob: -4.9837188720703125
    4. 'x' → logprob: -7.6087188720703125
    5. 'char' → logprob: -7.8587188720703125
    6. 'xmin' → logprob: -8.483718872070312
    7. 'points' → logprob: -8.983718872070312
    8. 'chars' → logprob: -9.858718872070312
    9. '       ' → logprob: -10.108718872070312
    10. ' min' → logprob: -10.983718872070312

Token 3804: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.050212737172842026
    2. '(p' → logprob: -3.1752126216888428
    3. 'x' → logprob: -5.425212860107422
    4. '(region' → logprob: -7.175212860107422
    5. 'p' → logprob: -7.550212860107422
    6. '_p' → logprob: -7.550212860107422
    7. '(min' → logprob: -7.675212860107422
    8. 'region' → logprob: -9.050212860107422
    9. 'min' → logprob: -9.175212860107422
    10. '(point' → logprob: -9.425212860107422

Token 3805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14744733273983002
    2. ' =' → logprob: -2.022447347640991
    3. '=min' → logprob: -5.647447109222412
    4. ',' → logprob: -6.897447109222412
    5. '=p' → logprob: -9.77244758605957
    6. '=
' → logprob: -10.39744758605957
    7. '(p' → logprob: -10.77244758605957
    8. ',min' → logprob: -10.77244758605957
    9. ')' → logprob: -10.77244758605957
    10. '(min' → logprob: -11.39744758605957

Token 3806: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.7848862373502925e-05
    2. ' min' → logprob: -10.500027656555176
    3. '(min' → logprob: -15.375027656555176
    4. '   ' → logprob: -18.250028610229492
    5. '=min' → logprob: -19.000028610229492
    6. '	min' → logprob: -19.125028610229492
    7. '[min' → logprob: -19.500028610229492
    8. 'max' → logprob: -20.500028610229492
    9. ',min' → logprob: -21.000028610229492
    10. 'minimum' → logprob: -21.375028610229492

Token 3807: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.5491004129871726e-05
    2. 'p' → logprob: -10.625045776367188
    3. '([' → logprob: -11.625045776367188
    4. '((' → logprob: -12.125045776367188
    5. '(region' → logprob: -12.500045776367188
    6. '(' → logprob: -14.000045776367188
    7. '(point' → logprob: -14.250045776367188
    8. 'region' → logprob: -14.375045776367188
    9. '(
' → logprob: -14.875045776367188
    10. '(pt' → logprob: -15.375045776367188

Token 3808: '.x' (ID: 3700)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.011537227779626846
    2. '.x' → logprob: -4.886537075042725
    3. '.p' → logprob: -5.886537075042725
    4. 'for' → logprob: -6.886537075042725
    5. '(point' → logprob: -9.511537551879883
    6. 'x' → logprob: -11.386537551879883
    7. 'p' → logprob: -12.011537551879883
    8. '(' → logprob: -12.011537551879883
    9. '(x' → logprob: -12.011537551879883
    10. ').' → logprob: -12.761537551879883

Token 3809: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5433840751647949
    2. ' for' → logprob: -0.9183840751647949
    3. '(p' → logprob: -3.918384075164795
    4. '           ' → logprob: -9.918384552001953
    5. ')' → logprob: -10.043384552001953
    6. '   ' → logprob: -11.293384552001953
    7. 'p' → logprob: -11.543384552001953
    8. '
' → logprob: -11.793384552001953
    9. '...' → logprob: -12.043384552001953
    10. ',' → logprob: -12.043384552001953

Token 3810: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006820533308200538
    2. ' p' → logprob: -8.00068187713623
    3. 'region' → logprob: -8.00068187713623
    4. ' region' → logprob: -11.50068187713623
    5. 'point' → logprob: -14.75068187713623
    6. ')p' → logprob: -15.62568187713623
    7. '   ' → logprob: -16.000682830810547
    8. 'points' → logprob: -16.500682830810547
    9. '<p' → logprob: -16.500682830810547
    10. '(p' → logprob: -16.500682830810547

Token 3811: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007238972000777721
    2. ' p' → logprob: -5.257238864898682
    3. ' in' → logprob: -7.132238864898682
    4. 'region' → logprob: -7.132238864898682
    5. 'in' → logprob: -8.00723934173584
    6. ' region' → logprob: -9.63223934173584
    7. ')p' → logprob: -13.38223934173584
    8. '(p' → logprob: -13.75723934173584
    9. 'point' → logprob: -14.13223934173584
    10. '<p' → logprob: -14.25723934173584

Token 3812: ' region' (ID: 7967)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -3.440506407059729e-05
    2. 'p' → logprob: -10.87503433227539
    3. ' region' → logprob: -11.25003433227539
    4. '
' → logprob: -14.12503433227539
    5. 'endregion' → logprob: -14.37503433227539
    6. '(region' → logprob: -15.12503433227539
    7. 'range' → logprob: -15.12503433227539
    8. 'point' → logprob: -15.62503433227539
    9. '#region' → logprob: -16.00003433227539
    10. '   ' → logprob: -16.62503433227539

Token 3813: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015409015119075775
    2. ',' → logprob: -5.015408992767334
    3. ')' → logprob: -5.265408992767334
    4. ')
' → logprob: -5.890408992767334
    5. '),' → logprob: -8.140409469604492
    6. '
' → logprob: -9.140409469604492
    7. '<|end|>' → logprob: -9.140409469604492
    8. '):
' → logprob: -10.265409469604492
    9. '               ' → logprob: -10.515409469604492
    10. '            
' → logprob: -10.765409469604492

Token 3814: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006682366947643459
    2. 'token' → logprob: -8.0006685256958
    3. 'char' → logprob: -8.7506685256958
    4. ' char' → logprob: -9.1256685256958
    5. ' token' → logprob: -11.0006685256958
    6. 'try' → logprob: -11.5006685256958
    7. ' try' → logprob: -11.7506685256958
    8. 'tokens' → logprob: -12.3756685256958
    9. '       ' → logprob: -12.5006685256958
    10. '
' → logprob: -12.5006685256958

Token 3815: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.3898945450782776
    2. 'min' → logprob: -1.5148944854736328
    3. 'try' → logprob: -2.764894485473633
    4. 'ch' → logprob: -4.014894485473633
    5. '           ' → logprob: -4.514894485473633
    6. 'token' → logprob: -5.889894485473633
    7. 'c' → logprob: -6.639894485473633
    8. 'result' → logprob: -6.764894485473633
    9. 'character' → logprob: -7.014894485473633
    10. 'identified' → logprob: -7.014894485473633

Token 3816: ' =' (ID: 314)
  Prédit: '_repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -0.4605337083339691
    2. ' =' → logprob: -1.0855337381362915
    3. '_cls' → logprob: -3.710533618927002
    4. '=' → logprob: -6.085533618927002
    5. '_class' → logprob: -6.460533618927002
    6. '_char' → logprob: -6.710533618927002
    7. '_' → logprob: -7.210533618927002
    8. '_str' → logprob: -7.460533618927002
    9. '_chr' → logprob: -9.08553409576416
    10. 'class' → logprob: -9.58553409576416

Token 3817: ' Character' (ID: 27668)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.00033593899570405483
    2. ' Character' → logprob: -8.000335693359375
    3. '           ' → logprob: -14.500335693359375
    4. 'Characteristic' → logprob: -17.875335693359375
    5. '(Character' → logprob: -17.875335693359375
    6. '<Character' → logprob: -18.750335693359375
    7. '   ' → logprob: -19.875335693359375
    8. '_character' → logprob: -20.000335693359375
    9. '.Character' → logprob: -20.750335693359375
    10. '       ' → logprob: -21.000335693359375

Token 3818: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.0006909898947924376
    2. '.' → logprob: -7.875690937042236
    3. '.ident' → logprob: -8.500691413879395
    4. '.Factory' → logprob: -10.375691413879395
    5. '.char' → logprob: -10.750691413879395
    6. '   ' → logprob: -11.125691413879395
    7. '.factory' → logprob: -11.875691413879395
    8. '_factory' → logprob: -12.250691413879395
    9. '.Char' → logprob: -12.375691413879395
    10. 'identify' → logprob: -12.500691413879395

Token 3819: '.ident' (ID: 131924)
  Prédit: '.ident'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ident' → logprob: -0.011759092099964619
    2. 'identify' → logprob: -4.511759281158447
    3. '.' → logprob: -7.261759281158447
    4. '.identifier' → logprob: -12.761758804321289
    5. '_ident' → logprob: -13.511758804321289
    6. 'ident' → logprob: -13.886758804321289
    7. '.identity' → logprob: -14.511758804321289
    8. ''ident' → logprob: -14.636758804321289
    9. '   ' → logprob: -14.636758804321289
    10. 'Identify' → logprob: -14.761758804321289

Token 3820: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -6.034592388459714e-06
    2. '(char' → logprob: -12.375005722045898
    3. 'fy' → logprob: -14.000005722045898
    4. 'char' → logprob: -15.000005722045898
    5. '
' → logprob: -15.375005722045898
    6. 'if' → logprob: -15.625005722045898
    7. '_char' → logprob: -16.0000057220459
    8. '```' → logprob: -17.1250057220459
    9. 'y' → logprob: -17.2500057220459
    10. 'IFY' → logprob: -17.3750057220459

Token 3821: '(region' (ID: 103309)
  Prédit: '(region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(region' → logprob: -6.704273118884885e-07
    2. 'region' → logprob: -14.375000953674316
    3. '(' → logprob: -17.5
    4. '(reg' → logprob: -18.5
    5. '(
' → logprob: -18.5
    6. ' (' → logprob: -20.125
    7. ' region' → logprob: -20.125
    8. '(points' → logprob: -20.375
    9. '#region' → logprob: -21.25
    10. '(room' → logprob: -21.875

Token 3822: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25476986169815063
    2. ')' → logprob: -1.5047698020935059
    3. '           ' → logprob: -5.879769802093506
    4. '       ' → logprob: -11.629770278930664
    5. '               ' → logprob: -11.754770278930664
    6. '   ' → logprob: -11.879770278930664
    7. ')
' → logprob: -12.004770278930664
    8. ' )
' → logprob: -12.879770278930664
    9. '          ' → logprob: -13.379770278930664
    10. ',' → logprob: -13.504770278930664

Token 3823: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.339278580620885e-06
    2. ',' → logprob: -13.875001907348633
    3. '		' → logprob: -14.750001907348633
    4. '               ' → logprob: -15.250001907348633
    5. '	       ' → logprob: -16.125001907348633
    6. '                   ' → logprob: -16.250001907348633
    7. '       ' → logprob: -16.500001907348633
    8. '   ' → logprob: -16.500001907348633
    9. '```' → logprob: -17.000001907348633
    10. '          ' → logprob: -17.000001907348633

Token 3824: ' identified' (ID: 17800)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25198376178741455
    2. 'identified' (adapté à ' identified') → logprob: -1.5019837617874146
    3. ' identified' → logprob: -9.876983642578125
    4. '   ' → logprob: -13.376983642578125
    5. 'ident' → logprob: -13.751983642578125
    6. '               ' → logprob: -15.501983642578125
    7. '       ' → logprob: -15.876983642578125
    8. '                   ' → logprob: -16.376983642578125
    9. '		' → logprob: -16.501983642578125
    10. ' ' → logprob: -17.001983642578125

Token 3825: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010747690976131707
    2. 'append' → logprob: -9.750107765197754
    3. ',' → logprob: -11.000107765197754
    4. '           ' → logprob: -11.000107765197754
    5. '.' → logprob: -11.625107765197754
    6. '_append' → logprob: -13.500107765197754
    7. 'identified' → logprob: -13.625107765197754
    8. '.app' → logprob: -13.875107765197754
    9. '.insert' → logprob: -14.625107765197754
    10. '               ' → logprob: -14.750107765197754

Token 3826: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1445969045162201
    2. '(min' → logprob: -2.394596815109253
    3. '(' → logprob: -3.144596815109253
    4. '   ' → logprob: -8.269597053527832
    5. ' (' → logprob: -9.519597053527832
    6. '(
' → logprob: -12.769597053527832
    7. '       ' → logprob: -14.269597053527832
    8. ' ((' → logprob: -14.269597053527832
    9. '           ' → logprob: -15.394597053527832
    10. ' ' → logprob: -15.644597053527832

Token 3827: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. ' min' → logprob: -15.75
    3. '   ' → logprob: -19.25
    4. '(min' → logprob: -20.0
    5. '_min' → logprob: -20.0
    6. '	min' → logprob: -21.0
    7. '[min' → logprob: -22.0
    8. 'max' → logprob: -22.375
    9. 'mini' → logprob: -23.5
    10. '           ' → logprob: -23.875

Token 3828: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00016206118743866682
    2. '(p' → logprob: -9.000162124633789
    3. '(min' → logprob: -11.000162124633789
    4. 'region' → logprob: -11.125162124633789
    5. '(region' → logprob: -12.500162124633789
    6. 'min' → logprob: -13.500162124633789
    7. 'x' → logprob: -14.250162124633789
    8. '   ' → logprob: -14.750162124633789
    9. '(x' → logprob: -15.375162124633789
    10. 'char' → logprob: -15.875162124633789

Token 3829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013500562636181712
    2. ',char' → logprob: -9.12513542175293
    3. ',
' → logprob: -11.37513542175293
    4. ' ,' → logprob: -12.37513542175293
    5. '           ' → logprob: -12.50013542175293
    6. '   ' → logprob: -12.62513542175293
    7. '       ' → logprob: -13.75013542175293
    8. '‌,' → logprob: -14.50013542175293
    9. ',{
' → logprob: -14.87513542175293
    10. ',",' → logprob: -15.62513542175293

Token 3830: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.00020354038861114532
    2. ' char' → logprob: -8.500203132629395
    3. '(char' → logprob: -19.75020408630371
    4. '.char' → logprob: -20.50020408630371
    5. '_char' → logprob: -20.62520408630371
    6. '	char' → logprob: -21.25020408630371
    7. ',char' → logprob: -21.87520408630371
    8. '   ' → logprob: -22.25020408630371
    9. 'chars' → logprob: -22.87520408630371
    10. '<char' → logprob: -23.12520408630371

Token 3831: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001863750658230856
    2. ',' → logprob: -9.1251859664917
    3. ')
' → logprob: -10.3751859664917
    4. ',)' → logprob: -11.3751859664917
    5. '))' → logprob: -11.3751859664917
    6. '           ' → logprob: -11.5001859664917
    7. '),' → logprob: -12.0001859664917
    8. '       ' → logprob: -13.2501859664917
    9. ')]' → logprob: -13.7501859664917
    10. ')}' → logprob: -14.0001859664917

Token 3832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14720453321933746
    2. '
' → logprob: -2.022204637527466
    3. '        
' → logprob: -6.397204399108887
    4. 'return' → logprob: -6.897204399108887
    5. '   ' → logprob: -7.772204399108887
    6. '```' → logprob: -8.397204399108887
    7. '    
' → logprob: -8.647204399108887
    8. '[' → logprob: -8.772204399108887
    9. ')
' → logprob: -8.897204399108887
    10. '<|end|>' → logprob: -9.272204399108887

Token 3833: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0795987918972969
    2. '
' → logprob: -2.579598903656006
    3. 'return' → logprob: -8.079598426818848
    4. '   ' → logprob: -8.704598426818848
    5. ')' → logprob: -9.704598426818848
    6. '        
' → logprob: -10.079598426818848
    7. ' return' → logprob: -10.079598426818848
    8. ')
' → logprob: -10.579598426818848
    9. '```' → logprob: -10.704598426818848
    10. '[' → logprob: -12.579598426818848

Token 3834: ' sort' (ID: 4506)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identified' → logprob: -0.0002931558701675385
    2. '   ' → logprob: -8.625292778015137
    3. '
' → logprob: -9.500292778015137
    4. ' identified' → logprob: -11.000292778015137
    5. '       ' → logprob: -11.750292778015137
    6. '#' → logprob: -11.875292778015137
    7. 'return' → logprob: -12.000292778015137
    8. '```' → logprob: -14.750292778015137
    9. 'sorted' → logprob: -15.625292778015137
    10. '    
' → logprob: -16.000293731689453

Token 3835: ' by' (ID: 656)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09747181087732315
    2. '(key' → logprob: -2.9724717140197754
    3. 'identified' → logprob: -3.2224717140197754
    4. 'key' → logprob: -7.472471714019775
    5. '(reverse' → logprob: -7.847471714019775
    6. '   ' → logprob: -8.097472190856934
    7. '(
' → logprob: -8.722472190856934
    8. '(sorted' → logprob: -9.097472190856934
    9. ' identified' → logprob: -9.222472190856934
    10. '(return' → logprob: -10.347472190856934

Token 3836: ' position' (ID: 4010)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identified' → logprob: -0.6304833292961121
    2. 'min' → logprob: -1.0054833889007568
    3. 'lambda' → logprob: -2.505483388900757
    4. ' identified' → logprob: -4.880483150482178
    5. 'key' → logprob: -5.005483150482178
    6. '0' → logprob: -6.380483150482178
    7. '```' → logprob: -6.505483150482178
    8. '(lambda' → logprob: -6.630483150482178
    9. '(min' → logprob: -8.380483627319336
    10. '=lambda' → logprob: -8.505483627319336

Token 3837: ' x' (ID: 1215)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identified' → logprob: -0.7475035786628723
    2. '(' → logprob: -1.1225035190582275
    3. '(key' → logprob: -2.8725035190582275
    4. ',' → logprob: -2.9975035190582275
    5. '(sorted' → logprob: -3.1225035190582275
    6. '   ' → logprob: -4.122503757476807
    7. 'key' → logprob: -4.872503757476807
    8. '(
' → logprob: -5.372503757476807
    9. 'sorted' → logprob: -5.372503757476807
    10. '```' → logprob: -5.372503757476807

Token 3838: ' ascending' (ID: 75564)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.744941234588623
    2. '(' → logprob: -0.869941234588623
    3. '   ' → logprob: -3.369941234588623
    4. '(sorted' → logprob: -3.494941234588623
    5. 'identified' → logprob: -3.994941234588623
    6. ',
' → logprob: -5.119941234588623
    7. '       ' → logprob: -5.619941234588623
    8. '.sort' → logprob: -5.994941234588623
    9. '(
' → logprob: -6.619941234588623
    10. 'return' → logprob: -6.744941234588623

Token 3839: '
' (ID: 198)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identified' → logprob: -0.7221704721450806
    2. '       ' → logprob: -1.3471704721450806
    3. '
' → logprob: -1.7221704721450806
    4. ',' → logprob: -3.097170352935791
    5. ' identified' → logprob: -3.972170352935791
    6. '        
' → logprob: -5.472170352935791
    7. ',
' → logprob: -5.847170352935791
    8. 'sorted' → logprob: -6.472170352935791
    9. '   ' → logprob: -6.722170352935791
    10. '           ' → logprob: -7.347170352935791

Token 3840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015557393431663513
    2. 'identified' → logprob: -4.265557289123535
    3. '   ' → logprob: -7.015557289123535
    4. '
' → logprob: -7.890557289123535
    5. ' identified' → logprob: -9.140557289123535
    6. '        
' → logprob: -12.765557289123535
    7. '           ' → logprob: -12.890557289123535
    8. 'sorted' → logprob: -13.140557289123535
    9. ',' → logprob: -13.390557289123535
    10. 'return' → logprob: -13.515557289123535

Token 3841: ' identified' (ID: 17800)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identified' (adapté à ' identified') → logprob: -0.003859339514747262
    2. 'sorted' → logprob: -6.003859519958496
    3. ' identified' → logprob: -7.003859519958496
    4. 'return' → logprob: -7.753859519958496
    5. '       ' → logprob: -10.253859519958496
    6. '   ' → logprob: -12.003859519958496
    7. '
' → logprob: -12.753859519958496
    8. 'ident' → logprob: -15.378859519958496
    9. 'sort' → logprob: -15.378859519958496
    10. '```' → logprob: -15.878859519958496

Token 3842: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -4.60414821645827e-06
    2. 'sort' → logprob: -13.250004768371582
    3. '.' → logprob: -13.500004768371582
    4. '=' → logprob: -14.250004768371582
    5. '.append' → logprob: -14.875004768371582
    6. '   ' → logprob: -15.625004768371582
    7. 'sorted' → logprob: -16.875003814697266
    8. '	sort' → logprob: -17.000003814697266
    9. '_sorted' → logprob: -17.125003814697266
    10. ' .' → logprob: -17.125003814697266

Token 3843: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.14316236972808838
    2. '()' → logprob: -2.143162250518799
    3. '(reverse' → logprob: -4.893162250518799
    4. '()
' → logprob: -4.893162250518799
    5. ',key' → logprob: -7.768162250518799
    6. 'key' → logprob: -7.893162250518799
    7. '(),' → logprob: -9.393162727355957
    8. '   ' → logprob: -9.893162727355957
    9. '(' → logprob: -10.143162727355957
    10. '(lambda' → logprob: -11.143162727355957

Token 3844: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00012821101699955761
    2. '=' → logprob: -9.000127792358398
    3. 'lambda' → logprob: -12.250127792358398
    4. '(lambda' → logprob: -17.3751277923584
    5. '=
' → logprob: -20.3751277923584
    6. '=_' → logprob: -21.1251277923584
    7. ' lambda' → logprob: -21.1251277923584
    8. '=item' → logprob: -21.5001277923584
    9. '   ' → logprob: -21.6251277923584
    10. '=str' → logprob: -22.0001277923584

Token 3845: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.47993162274360657
    2. 'x' → logprob: -0.9799315929412842
    3. ' lambda' → logprob: -6.354931831359863
    4. 'item' → logprob: -6.479931831359863
    5. 't' → logprob: -6.604931831359863
    6. 'pos' → logprob: -7.479931831359863
    7. '_:' → logprob: -8.729931831359863
    8. 'a' → logprob: -9.479931831359863
    9. '_lambda' → logprob: -9.604931831359863
    10. '_' → logprob: -9.854931831359863

Token 3846: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11515876650810242
    2. ':x' → logprob: -2.365158796310425
    3. 'x' → logprob: -4.240158557891846
    4. '0' → logprob: -8.240159034729004
    5. '[' → logprob: -9.365159034729004
    6. ' :' → logprob: -9.740159034729004
    7. ' x' → logprob: -10.865159034729004
    8. '1' → logprob: -12.115159034729004
    9. '(x' → logprob: -14.615159034729004
    10. '[x' → logprob: -14.740159034729004

Token 3847: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.696889623621246e-06
    2. ' x' → logprob: -13.00000286102295
    3. 'lambda' → logprob: -14.87500286102295
    4. '0' → logprob: -18.250001907348633
    5. '(x' → logprob: -20.875001907348633
    6. '_' → logprob: -21.750001907348633
    7. '_x' → logprob: -21.875001907348633
    8. '1' → logprob: -23.250001907348633
    9. ' lambda' → logprob: -23.375001907348633
    10. '   ' → logprob: -23.750001907348633

Token 3848: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20815470814704895
    2. '[' → logprob: -1.7081546783447266
    3. 'x' → logprob: -5.083154678344727
    4. ':' → logprob: -8.333154678344727
    5. '1' → logprob: -8.583154678344727
    6. ' ' → logprob: -10.083154678344727
    7. ' x' → logprob: -10.208154678344727
    8. '.' → logprob: -12.583154678344727
    9. '   ' → logprob: -13.333154678344727
    10. ' [' → logprob: -13.583154678344727

Token 3849: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.625001907348633
    3. 'x' → logprob: -15.375001907348633
    4. '1' → logprob: -17.875001907348633
    5. ' ' → logprob: -18.750001907348633
    6. 'lambda' → logprob: -20.375001907348633
    7. '   ' → logprob: -20.750001907348633
    8. '(' → logprob: -21.250001907348633
    9. '۰' → logprob: -22.250001907348633
    10. ':' → logprob: -22.500001907348633

Token 3850: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008201113669201732
    2. '[' → logprob: -7.250820159912109
    3. ')
' → logprob: -9.62582015991211
    4. ')return' → logprob: -11.12582015991211
    5. '0' → logprob: -11.62582015991211
    6. ',' → logprob: -11.75082015991211
    7. ' )' → logprob: -12.37582015991211
    8. '<|end|>' → logprob: -12.87582015991211
    9. ')#' → logprob: -13.50082015991211
    10. '1' → logprob: -14.00082015991211

Token 3851: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002198313595727086
    2. 'return' → logprob: -6.377198219299316
    3. '   ' → logprob: -8.127198219299316
    4. '
' → logprob: -9.002198219299316
    5. ' return' → logprob: -10.127198219299316
    6. '```' → logprob: -11.377198219299316
    7. '[' → logprob: -12.002198219299316
    8. '	' → logprob: -12.877198219299316
    9. '        
' → logprob: -13.002198219299316
    10. ',' → logprob: -13.002198219299316

Token 3852: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06220071390271187
    2. '       ' → logprob: -2.8122007846832275
    3. ' return' → logprob: -8.437200546264648
    4. '   ' → logprob: -11.562200546264648
    5. '
' → logprob: -12.812200546264648
    6. '```' → logprob: -13.312200546264648
    7. '	return' → logprob: -14.187200546264648
    8. '[' → logprob: -15.437200546264648
    9. '_return' → logprob: -15.562200546264648
    10. '{return' → logprob: -15.687200546264648

Token 3853: ' identified' (ID: 17800)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identified' → logprob: -0.47779330611228943
    2. '[' → logprob: -0.9777933359146118
    3. '[(' → logprob: -5.852793216705322
    4. ' [' → logprob: -7.852793216705322
    5. ' identified' → logprob: -8.60279369354248
    6. '[i' → logprob: -8.97779369354248
    7. '[id' → logprob: -9.47779369354248
    8. '[x' → logprob: -11.47779369354248
    9. '[ind' → logprob: -11.72779369354248
    10. '[int' → logprob: -11.97779369354248

Token 3854: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20378239452838898
    2. '   ' → logprob: -1.7037824392318726
    3. '<|end|>' → logprob: -6.703782558441162
    4. 'def' → logprob: -7.453782558441162
    5. '    
' → logprob: -8.578782081604004
    6. '

' → logprob: -8.578782081604004
    7. '<|end|>' → logprob: -9.203782081604004
    8. '```' → logprob: -10.703782081604004
    9. '  
' → logprob: -11.703782081604004
    10. 'class' → logprob: -11.828782081604004

Token 3855: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038843925576657057
    2. 'def' → logprob: -6.128884315490723
    3. '
' → logprob: -6.503884315490723
    4. '<|end|>' → logprob: -8.878884315490723
    5. '<|end|>' → logprob: -10.503884315490723
    6. 'class' → logprob: -11.503884315490723
    7. '```' → logprob: -12.378884315490723
    8. '    
' → logprob: -12.503884315490723
    9. ' ' → logprob: -12.628884315490723
    10. ' def' → logprob: -12.628884315490723

Token 3856: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10085263848304749
    2. '   ' → logprob: -2.3508527278900146
    3. '
' → logprob: -7.3508524894714355
    4. ' def' → logprob: -12.600852966308594
    5. '    
' → logprob: -14.850852966308594
    6. '

' → logprob: -16.850852966308594
    7. '	def' → logprob: -17.600852966308594
    8. 'class' → logprob: -17.850852966308594
    9. '```' → logprob: -18.475852966308594
    10. '#' → logprob: -18.600852966308594

Token 3857: ' parse' (ID: 8420)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.6099920868873596
    2. 'parse' → logprob: -0.8599920868873596
    3. 'decode' → logprob: -3.609992027282715
    4. 'read' → logprob: -5.984992027282715
    5. 'process' → logprob: -6.484992027282715
    6. 'recogn' → logprob: -7.609992027282715
    7. 'run' → logprob: -7.734992027282715
    8. ' solve' → logprob: -7.734992027282715
    9. ' parse' → logprob: -7.984992027282715
    10. 'extract' → logprob: -8.484992027282715

Token 3858: '_expression' (ID: 69265)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.646886944770813
    2. '(self' → logprob: -1.021886944770813
    3. '_expression' → logprob: -2.2718868255615234
    4. 'tokens' → logprob: -5.021886825561523
    5. 'expression' → logprob: -5.646886825561523
    6. 'self' → logprob: -7.021886825561523
    7. '   ' → logprob: -7.646886825561523
    8. '(
' → logprob: -8.146886825561523
    9. '_line' → logprob: -8.271886825561523
    10. '_char' → logprob: -8.521886825561523

Token 3859: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.954393079970032e-05
    2. '(' → logprob: -10.000049591064453
    3. 'self' → logprob: -13.500049591064453
    4. '(
' → logprob: -13.875049591064453
    5. ' (' → logprob: -14.000049591064453
    6. '   ' → logprob: -14.250049591064453
    7. '       ' → logprob: -15.625049591064453
    8. '_tokens' → logprob: -17.000049591064453
    9. '	self' → logprob: -17.625049591064453
    10. '[self' → logprob: -17.750049591064453

Token 3860: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9939684271812439
    2. ',' → logprob: -1.3689684867858887
    3. '(self' → logprob: -1.9939684867858887
    4. 'self' → logprob: -2.1189684867858887
    5. '):' → logprob: -2.6189684867858887
    6. '_tokens' → logprob: -4.118968486785889
    7. '   ' → logprob: -4.243968486785889
    8. ')' → logprob: -4.618968486785889
    9. 'tokens' → logprob: -5.868968486785889
    10. '(tokens' → logprob: -7.118968486785889

Token 3861: ' char' (ID: 1826)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identified' → logprob: -0.4216694235801697
    2. 'chars' → logprob: -1.5466694831848145
    3. 'characters' → logprob: -2.7966694831848145
    4. 'self' → logprob: -3.5466694831848145
    5. 'tokens' → logprob: -3.7966694831848145
    6. 'char' → logprob: -4.7966694831848145
    7. ')' → logprob: -5.1716694831848145
    8. ' identified' → logprob: -6.6716694831848145
    9. '):
' → logprob: -7.4216694831848145
    10. ' chars' → logprob: -7.6716694831848145

Token 3862: '_list' (ID: 4162)
  Prédit: 'acters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.08914961665868759
    2. 's' → logprob: -2.4641497135162354
    3. '_positions' → logprob: -9.589149475097656
    4. 'acter' → logprob: -9.714149475097656
    5. '_list' → logprob: -10.589149475097656
    6. '   ' → logprob: -11.339149475097656
    7. '_s' → logprob: -11.589149475097656
    8. ' s' → logprob: -12.339149475097656
    9. ')' → logprob: -12.589149475097656
    10. '```' → logprob: -12.714149475097656

Token 3863: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8135551810264587
    2. '):
' → logprob: -1.6885552406311035
    3. '(self' → logprob: -2.0635552406311035
    4. '       ' → logprob: -2.3135552406311035
    5. '   ' → logprob: -2.3135552406311035
    6. '):' → logprob: -4.1885552406311035
    7. 'self' → logprob: -4.1885552406311035
    8. ':' → logprob: -4.1885552406311035
    9. ',' → logprob: -7.0635552406311035
    10. '):

' → logprob: -9.438554763793945

Token 3864: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.16954338550567627
    2. ')' → logprob: -2.4195432662963867
    3. 'self' → logprob: -2.7945432662963867
    4. ' List' → logprob: -5.794543266296387
    5. '[List' → logprob: -6.669543266296387
    6. '   ' → logprob: -7.669543266296387
    7. 'list' → logprob: -8.419543266296387
    8. '):
' → logprob: -8.419543266296387
    9. '[self' → logprob: -8.919543266296387
    10. ' self' → logprob: -9.294543266296387

Token 3865: '[str' (ID: 33439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27931392192840576
    2. '[str' → logprob: -1.6543139219284058
    3. '[int' → logprob: -3.0293140411376953
    4. ')' → logprob: -5.654314041137695
    5. '[List' → logprob: -8.154314041137695
    6. '[(' → logprob: -8.529314041137695
    7. '):
' → logprob: -10.029314041137695
    8. '   ' → logprob: -10.404314041137695
    9. ':' → logprob: -11.029314041137695
    10. 'Tuple' → logprob: -11.154314041137695

Token 3866: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.090135358273983
    2. '])' → logprob: -2.840135335922241
    3. '):
' → logprob: -3.715135335922241
    4. '   ' → logprob: -6.21513557434082
    5. ']):
' → logprob: -7.59013557434082
    6. ',' → logprob: -8.09013557434082
    7. '):' → logprob: -8.71513557434082
    8. ']' → logprob: -9.21513557434082
    9. '[' → logprob: -9.34013557434082
    10. '       ' → logprob: -9.59013557434082

Token 3867: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.1117335706949234
    2. ' ->' → logprob: -2.8617336750030518
    3. ':' → logprob: -4.361733436584473
    4. '       ' → logprob: -4.486733436584473
    5. ':
' → logprob: -4.611733436584473
    6. ')' → logprob: -5.111733436584473
    7. '   ' → logprob: -5.236733436584473
    8. ')->' → logprob: -5.986733436584473
    9. '):
' → logprob: -8.736733436584473
    10. ' ->
' → logprob: -8.736733436584473

Token 3868: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.2532859146595001
    2. 'Expression' → logprob: -1.5032858848571777
    3. ' List' → logprob: -6.878285884857178
    4. ' Expression' → logprob: -8.628286361694336
    5. 'str' → logprob: -9.503286361694336
    6. 'list' → logprob: -11.003286361694336
    7. '   ' → logprob: -11.503286361694336
    8. ''' → logprob: -11.753286361694336
    9. '[List' → logprob: -11.753286361694336
    10. 'expression' → logprob: -12.003286361694336

Token 3869: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.04168056324124336
    2. '[]' → logprob: -4.166680335998535
    3. '=' → logprob: -4.791680335998535
    4. '['' → logprob: -5.541680335998535
    5. ' =' → logprob: -5.666680335998535
    6. '=[]' → logprob: -5.666680335998535
    7. '[' → logprob: -6.541680335998535
    8. ':' → logprob: -6.916680335998535
    9. '[int' → logprob: -7.666680335998535
    10. ':
' → logprob: -7.666680335998535

Token 3870: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7049102187156677
    2. '):
' → logprob: -0.8299102187156677
    3. ':' → logprob: -3.7049102783203125
    4. '   ' → logprob: -4.0799102783203125
    5. ']:
' → logprob: -4.0799102783203125
    6. ')' → logprob: -5.7049102783203125
    7. '       ' → logprob: -5.7049102783203125
    8. '):' → logprob: -6.2049102783203125
    9. ']' → logprob: -6.9549102783203125
    10. '[' → logprob: -7.5799102783203125

Token 3871: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018364151939749718
    2. 'tokens' → logprob: -4.018363952636719
    3. ' tokens' → logprob: -8.893363952636719
    4. '   ' → logprob: -10.768363952636719
    5. 'result' → logprob: -11.393363952636719
    6. 'token' → logprob: -11.393363952636719
    7. 'i' → logprob: -11.643363952636719
    8. '```' → logprob: -11.643363952636719
    9. '(tokens' → logprob: -12.518363952636719
    10. '_tokens' → logprob: -12.893363952636719

Token 3872: ' #' (ID: 1069)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.041085921227931976
    2. '       ' → logprob: -3.291085958480835
    3. 'result' → logprob: -6.166085720062256
    4. 'expr' → logprob: -7.666085720062256
    5. 'res' → logprob: -8.041086196899414
    6. 'i' → logprob: -9.916086196899414
    7. 'parsed' → logprob: -10.041086196899414
    8. ' tokens' → logprob: -10.541086196899414
    9. '   ' → logprob: -11.291086196899414
    10. 'token' → logprob: -11.666086196899414

Token 3873: ' Simply' (ID: 31470)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.006770672742277384
    2. 'result' → logprob: -5.256770610809326
    3. '   ' → logprob: -7.631770610809326
    4. '       ' → logprob: -8.256771087646484
    5. 'res' → logprob: -8.256771087646484
    6. 'expr' → logprob: -8.381771087646484
    7. 'parsed' → logprob: -8.506771087646484
    8. '#' → logprob: -9.756771087646484
    9. 'i' → logprob: -11.381771087646484
    10. 'token' → logprob: -11.631771087646484

Token 3874: ' return' (ID: 622)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.5335301756858826
    2. 'tokens' → logprob: -1.2835302352905273
    3. '[' → logprob: -3.5335302352905273
    4. 'result' → logprob: -3.6585302352905273
    5. 'res' → logprob: -3.7835302352905273
    6. 'return' → logprob: -4.033530235290527
    7. '[]' → logprob: -4.533530235290527
    8. 'chars' → logprob: -4.908530235290527
    9. ' char' → logprob: -5.658530235290527
    10. ' tokens' → logprob: -5.783530235290527

Token 3875: ' the' (ID: 290)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -1.1517960956552997e-05
    2. ' char' → logprob: -11.500011444091797
    3. '[' → logprob: -14.250011444091797
    4. '   ' → logprob: -14.375011444091797
    5. '       ' → logprob: -17.250011444091797
    6. 'list' → logprob: -17.250011444091797
    7. ' ' → logprob: -17.500011444091797
    8. '  ' → logprob: -18.375011444091797
    9. 'chars' → logprob: -18.750011444091797
    10. '	char' → logprob: -18.875011444091797

Token 3876: ' list' (ID: 1562)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -4.978233846486546e-05
    2. '[' → logprob: -10.125049591064453
    3. ' char' → logprob: -12.625049591064453
    4. '[]' → logprob: -13.875049591064453
    5. '[
' → logprob: -14.000049591064453
    6. '[].' → logprob: -14.125049591064453
    7. 'chars' → logprob: -14.250049591064453
    8. 'list' → logprob: -14.500049591064453
    9. '   ' → logprob: -14.750049591064453
    10. '_char' → logprob: -15.000049591064453

Token 3877: ' of' (ID: 328)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.07224758714437485
    2. 'return' → logprob: -2.8222475051879883
    3. '(char' → logprob: -4.947247505187988
    4. '=' → logprob: -7.197247505187988
    5. '[:]' → logprob: -7.572247505187988
    6. ' char' → logprob: -7.697247505187988
    7. '   ' → logprob: -7.697247505187988
    8. ' return' → logprob: -8.572247505187988
    9. '```' → logprob: -8.822247505187988
    10. '[' → logprob: -9.322247505187988

Token 3878: ' characters' (ID: 9862)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.00013452880375552922
    2. 'chars' → logprob: -9.625134468078613
    3. 'tokens' → logprob: -10.125134468078613
    4. ' char' → logprob: -11.625134468078613
    5. 'list' → logprob: -11.875134468078613
    6. 'characters' → logprob: -12.875134468078613
    7. '[]' → logprob: -13.375134468078613
    8. 'token' → logprob: -13.750134468078613
    9. '[]
' → logprob: -14.000134468078613
    10. '
' → logprob: -14.125134468078613

Token 3879: ' as' (ID: 472)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11420265585184097
    2. '       ' → logprob: -2.7392027378082275
    3. 'char' → logprob: -3.3642027378082275
    4. ' return' → logprob: -5.489202499389648
    5. '   ' → logprob: -5.864202499389648
    6. '(char' → logprob: -7.114202499389648
    7. '        
' → logprob: -7.989202499389648
    8. '```' → logprob: -8.739202499389648
    9. ':return' → logprob: -8.864202499389648
    10. '
' → logprob: -9.864202499389648

Token 3880: ' tokens' (ID: 20290)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.0024930182844400406
    2. 'is' → logprob: -6.377492904663086
    3. ' char' → logprob: -7.252492904663086
    4. ' is' → logprob: -10.002492904663086
    5. 'the' → logprob: -11.502492904663086
    6. 'chars' → logprob: -12.127492904663086
    7. 'list' → logprob: -12.502492904663086
    8. 'they' → logprob: -12.752492904663086
    9. '```' → logprob: -12.752492904663086
    10. 'it' → logprob: -12.877492904663086

Token 3881: '.
' (ID: 558)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3198745548725128
    2. '       ' → logprob: -1.3198745250701904
    3. ' return' → logprob: -5.4448747634887695
    4. '
' → logprob: -6.3198747634887695
    5. '```' → logprob: -8.31987476348877
    6. ':return' → logprob: -9.94487476348877
    7. '        
' → logprob: -10.06987476348877
    8. '   ' → logprob: -10.19487476348877
    9. 'char' → logprob: -10.19487476348877
    10. '{return' → logprob: -10.31987476348877

Token 3882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003918107133358717
    2. 'return' → logprob: -5.628918170928955
    3. ' return' → logprob: -8.128917694091797
    4. '   ' → logprob: -11.128917694091797
    5. '```' → logprob: -12.503917694091797
    6. '           ' → logprob: -13.503917694091797
    7. '	' → logprob: -14.003917694091797
    8. '	return' → logprob: -14.128917694091797
    9. ' ' → logprob: -15.128917694091797
    10. '[' → logprob: -15.253917694091797

Token 3883: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38774344325065613
    2. 'return' → logprob: -1.1377434730529785
    3. ' return' → logprob: -7.1377434730529785
    4. '	' → logprob: -10.51274299621582
    5. '	return' → logprob: -10.76274299621582
    6. '
' → logprob: -11.13774299621582
    7. '   ' → logprob: -12.01274299621582
    8. '```' → logprob: -12.51274299621582
    9. '        
' → logprob: -13.01274299621582
    10. ' ' → logprob: -14.51274299621582

Token 3884: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12717095017433167
    2. '       ' → logprob: -2.127171039581299
    3. ' return' → logprob: -8.37717056274414
    4. '
' → logprob: -11.75217056274414
    5. '   ' → logprob: -12.87717056274414
    6. '```' → logprob: -13.75217056274414
    7. '#' → logprob: -14.87717056274414
    8. '        
' → logprob: -15.12717056274414
    9. 'tokens' → logprob: -15.37717056274414
    10. '	return' → logprob: -15.62717056274414

Token 3885: ' problem' (ID: 4792)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1839490830898285
    2. 'return' → logprob: -1.9339491128921509
    3. ' tokens' → logprob: -4.058948993682861
    4. 'tokens' → logprob: -5.808948993682861
    5. ' ' → logprob: -6.183948993682861
    6. ' 
' → logprob: -7.308948993682861
    7. ' ' → logprob: -8.93394947052002
    8. '```' → logprob: -9.30894947052002
    9. '[' → logprob: -10.55894947052002
    10. '_tokens' → logprob: -10.80894947052002

Token 3886: ' states' (ID: 9407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40237826108932495
    2. '   ' → logprob: -1.7773783206939697
    3. '#' → logprob: -2.6523783206939697
    4. 'return' → logprob: -3.4023783206939697
    5. 'returns' → logprob: -3.9023783206939697
    6. ' returns' → logprob: -4.777378082275391
    7. ' return' → logprob: -5.152378082275391
    8. ':' → logprob: -5.652378082275391
    9. '
' → logprob: -5.777378082275391
    10. ' is' → logprob: -6.277378082275391

Token 3887: ' the' (ID: 290)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4934815466403961
    2. '       ' → logprob: -1.1184815168380737
    3. ' return' → logprob: -2.8684816360473633
    4. '#' → logprob: -5.993481636047363
    5. ' that' → logprob: -6.868481636047363
    6. 'char' → logprob: -7.243481636047363
    7. '   ' → logprob: -7.618481636047363
    8. 'tokens' → logprob: -7.868481636047363
    9. ' #' → logprob: -8.743481636047363
    10. 'that' → logprob: -8.868481636047363

Token 3888: ' characters' (ID: 9862)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.136361002922058
    2. 'return' → logprob: -1.261361002922058
    3. 'tokens' → logprob: -1.511361002922058
    4. ' return' → logprob: -3.0113611221313477
    5. 'char' → logprob: -3.3863611221313477
    6. ' tokens' → logprob: -4.261361122131348
    7. 'expression' → logprob: -4.261361122131348
    8. ' #' → logprob: -4.511361122131348
    9. 'characters' → logprob: -4.511361122131348
    10. ' expression' → logprob: -5.011361122131348

Token 3889: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.9835467338562012
    2. 'are' → logprob: -1.6085467338562012
    3. '       ' → logprob: -1.7335467338562012
    4. 'return' → logprob: -2.358546733856201
    5. '#' → logprob: -3.108546733856201
    6. '
' → logprob: -3.233546733856201
    7. '```' → logprob: -3.733546733856201
    8. '   ' → logprob: -4.608546733856201
    9. ' return' → logprob: -4.733546733856201
    10. ' can' → logprob: -5.858546733856201

Token 3890: ' properly' (ID: 13425)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.3403375744819641
    2. '       ' → logprob: -2.8403375148773193
    3. 'self' → logprob: -3.2153375148773193
    4. 'all' → logprob: -3.2153375148773193
    5. 'valid' → logprob: -3.4653375148773193
    6. ' already' → logprob: -3.7153375148773193
    7. 'just' → logprob: -3.8403375148773193
    8. '['' → logprob: -4.715337753295898
    9. '   ' → logprob: -4.715337753295898
    10. '#' → logprob: -4.840337753295898

Token 3891: ' formed' (ID: 20680)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.7264553904533386
    2. 'token' → logprob: -1.4764554500579834
    3. ' separated' → logprob: -2.4764554500579834
    4. 'parsed' → logprob: -2.6014554500579834
    5. ' spaced' → logprob: -2.9764554500579834
    6. 'sp' → logprob: -3.1014554500579834
    7. ' token' → logprob: -4.726455211639404
    8. 'split' → logprob: -4.976455211639404
    9. 'del' → logprob: -5.601455211639404
    10. '['' → logprob: -5.851455211639404

Token 3892: ' expressions' (ID: 43578)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003424969967454672
    2. 'return' → logprob: -6.128425121307373
    3. '
' → logprob: -6.878425121307373
    4. ' return' → logprob: -9.253424644470215
    5. '   ' → logprob: -10.253424644470215
    6. '```' → logprob: -11.003424644470215
    7. '        
' → logprob: -11.378424644470215
    8. '           ' → logprob: -11.503424644470215
    9. ',' → logprob: -12.003424644470215
    10. ' and' → logprob: -12.128424644470215

Token 3893: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002061757491901517
    2. '
' → logprob: -6.62706184387207
    3. 'return' → logprob: -8.00206184387207
    4. '```' → logprob: -9.00206184387207
    5. '   ' → logprob: -9.12706184387207
    6. ' return' → logprob: -9.87706184387207
    7. '        
' → logprob: -10.12706184387207
    8. '	' → logprob: -11.00206184387207
    9. ',' → logprob: -11.87706184387207
    10. '[' → logprob: -11.87706184387207

Token 3894: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.550411151489243e-05
    2. '   ' → logprob: -10.625055313110352
    3. 'return' → logprob: -10.625055313110352
    4. ' return' → logprob: -12.750055313110352
    5. '```' → logprob: -13.250055313110352
    6. '           ' → logprob: -13.875055313110352
    7. '        
' → logprob: -15.000055313110352
    8. '
' → logprob: -15.250055313110352
    9. '	' → logprob: -15.500055313110352
    10. '      ' → logprob: -16.25005531311035

Token 3895: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16040974855422974
    2. '       ' → logprob: -1.910409688949585
    3. ' return' → logprob: -8.785409927368164
    4. '
' → logprob: -10.910409927368164
    5. '```' → logprob: -11.535409927368164
    6. '        
' → logprob: -13.035409927368164
    7. '   ' → logprob: -13.785409927368164
    8. '	return' → logprob: -14.285409927368164
    9. '{return' → logprob: -14.910409927368164
    10. ':return' → logprob: -16.660409927368164

Token 3896: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -4.191489642835222e-05
    2. ' char' → logprob: -10.125041961669922
    3. 'list' → logprob: -13.875041961669922
    4. '[' → logprob: -14.375041961669922
    5. '   ' → logprob: -15.375041961669922
    6. 'chars' → logprob: -18.375041961669922
    7. '       ' → logprob: -18.500041961669922
    8. '	char' → logprob: -18.625041961669922
    9. '_char' → logprob: -19.125041961669922
    10. '.char' → logprob: -19.375041961669922

Token 3897: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00015085970517247915
    2. 's' → logprob: -9.125150680541992
    3. 'List' → logprob: -11.625150680541992
    4. '```' → logprob: -11.750150680541992
    5. '_chars' → logprob: -12.125150680541992
    6. '[' → logprob: -12.875150680541992
    7. 'acters' → logprob: -12.875150680541992
    8. 'list' → logprob: -13.000150680541992
    9. '[_' → logprob: -13.500150680541992
    10. '[
' → logprob: -13.750150680541992

Token 3898: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3899: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0340663306415081
    2. '   ' → logprob: -3.4090664386749268
    3. ' def' → logprob: -8.159066200256348
    4. '
' → logprob: -9.159066200256348
    5. '```' → logprob: -11.034066200256348
    6. '	def' → logprob: -12.534066200256348
    7. '<|end|>' → logprob: -13.284066200256348
    8. '    
' → logprob: -13.534066200256348
    9. '<|end|>' → logprob: -13.659066200256348
    10. 'The' → logprob: -13.909066200256348

Token 3900: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000785091076977551
    2. '   ' → logprob: -7.625784873962402
    3. ' def' → logprob: -8.375784873962402
    4. '
' → logprob: -9.625784873962402
    5. '	def' → logprob: -14.875784873962402
    6. '```' → logprob: -15.875784873962402
    7. '    
' → logprob: -16.00078582763672
    8. '       ' → logprob: -17.62578582763672
    9. '

' → logprob: -17.75078582763672
    10. ' ' → logprob: -19.37578582763672

Token 3901: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.001078183762729168
    2. ' solve' → logprob: -7.626078128814697
    3. 'decode' → logprob: -8.251078605651855
    4. 'process' → logprob: -8.501078605651855
    5. 'run' → logprob: -10.126078605651855
    6. 'evaluate' → logprob: -10.376078605651855
    7. 'parse' → logprob: -10.876078605651855
    8. 'compute' → logprob: -11.251078605651855
    9. 'calculate' → logprob: -11.751078605651855
    10. 'resolve' → logprob: -11.876078605651855

Token 3902: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004046938265673816
    2. '(' → logprob: -7.8754048347473145
    3. '   ' → logprob: -11.375404357910156
    4. '_(' → logprob: -12.875404357910156
    5. '()' → logprob: -13.375404357910156
    6. '(
' → logprob: -13.375404357910156
    7. 'self' → logprob: -13.375404357910156
    8. '_' → logprob: -13.500404357910156
    9. ' (' → logprob: -13.625404357910156
    10. '       ' → logprob: -14.125404357910156

Token 3903: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11965423822402954
    2. '):
' → logprob: -2.8696541786193848
    3. '   ' → logprob: -3.4946541786193848
    4. 'self' → logprob: -4.619654178619385
    5. '):' → logprob: -4.619654178619385
    6. '(self' → logprob: -5.744654178619385
    7. '       ' → logprob: -7.494654178619385
    8. '_' → logprob: -7.494654178619385
    9. ')_' → logprob: -7.869654178619385
    10. ')' → logprob: -7.994654178619385

Token 3904: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005759088089689612
    2. '   ' → logprob: -7.875576019287109
    3. '(' → logprob: -9.62557601928711
    4. 'self' → logprob: -10.00057601928711
    5. '       ' → logprob: -10.62557601928711
    6. ':
' → logprob: -10.62557601928711
    7. ':' → logprob: -11.00057601928711
    8. '(
' → logprob: -12.00057601928711
    9. '```' → logprob: -12.37557601928711
    10. '->' → logprob: -13.37557601928711

Token 3905: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38815730810165405
    2. 'List' → logprob: -1.1381573677062988
    3. ' List' → logprob: -7.388157367706299
    4. 'str' → logprob: -8.01315689086914
    5. ' int' → logprob: -8.38815689086914
    6. '[int' → logprob: -10.01315689086914
    7. 'Expression' → logprob: -10.63815689086914
    8. '   ' → logprob: -11.88815689086914
    9. '[List' → logprob: -12.01315689086914
    10. 'Int' → logprob: -12.13815689086914

Token 3906: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4318310022354126
    2. ':
' → logprob: -1.3068310022354126
    3. ':' → logprob: -2.931830883026123
    4. '   ' → logprob: -3.806830883026123
    5. '(self' → logprob: -6.056830883026123
    6. '():
' → logprob: -6.431830883026123
    7. '):
' → logprob: -8.056831359863281
    8. 'self' → logprob: -10.181831359863281
    9. '```' → logprob: -10.556831359863281
    10. '():' → logprob: -11.056831359863281

Token 3907: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.963691804325208e-05
    2. '   ' → logprob: -10.875029563903809
    3. 'self' → logprob: -11.500029563903809
    4. '```' → logprob: -15.375029563903809
    5. '
' → logprob: -15.500029563903809
    6. ' self' → logprob: -16.500030517578125
    7. '        
' → logprob: -17.375030517578125
    8. '           ' → logprob: -18.000030517578125
    9. '     ' → logprob: -18.750030517578125
    10. '#' → logprob: -18.875030517578125

Token 3908: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06200778856873512
    2. '       ' → logprob: -2.8120079040527344
    3. ' self' → logprob: -10.312007904052734
    4. '   ' → logprob: -12.062007904052734
    5. '#' → logprob: -14.312007904052734
    6. '	self' → logprob: -15.437007904052734
    7. '(self' → logprob: -15.812007904052734
    8. '```' → logprob: -16.312007904052734
    9. '[self' → logprob: -18.187007904052734
    10. ' ' → logprob: -18.437007904052734

Token 3909: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.00023441045777872205
    2. '.' → logprob: -8.500234603881836
    3. 'build' → logprob: -10.625234603881836
    4. ' .' → logprob: -12.500234603881836
    5. '.
' → logprob: -14.125234603881836
    6. '.grid' → logprob: -14.875234603881836
    7. '_build' → logprob: -15.000234603881836
    8. '.solve' → logprob: -15.000234603881836
    9. '   ' → logprob: -15.500234603881836
    10. '._' → logprob: -15.875234603881836

Token 3910: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -3.333223139634356e-05
    2. '_' → logprob: -11.125033378601074
    3. 'grid' → logprob: -11.250033378601074
    4. '()' → logprob: -12.500033378601074
    5. '()
' → logprob: -13.750033378601074
    6. '_
' → logprob: -14.750033378601074
    7. 'Grid' → logprob: -16.375032424926758
    8. '\' → logprob: -16.375032424926758
    9. '_gr' → logprob: -16.750032424926758
    10. '(_' → logprob: -18.000032424926758

Token 3911: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13396359980106354
    2. '()' → logprob: -2.5089635848999023
    3. '()
' → logprob: -3.1339635848999023
    4. '
' → logprob: -7.883963584899902
    5. '(self' → logprob: -10.758963584899902
    6. 'self' → logprob: -10.758963584899902
    7. '        
' → logprob: -11.258963584899902
    8. '();' → logprob: -11.633963584899902
    9. '(' → logprob: -11.883963584899902
    10. '()
' → logprob: -11.883963584899902

Token 3912: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47413602471351624
    2. 'regions' → logprob: -0.9741359949111938
    3. ' regions' → logprob: -9.849136352539062
    4. 'regs' → logprob: -13.224136352539062
    5. '   ' → logprob: -13.599136352539062
    6. 'region' → logprob: -14.099136352539062
    7. '```' → logprob: -14.474136352539062
    8. 'reg' → logprob: -14.599136352539062
    9. 'segments' → logprob: -15.099136352539062
    10. '        
' → logprob: -15.349136352539062

Token 3913: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' (adapté à ' regions') → logprob: -8.65707261255011e-06
    2. '       ' → logprob: -12.125008583068848
    3. 'char' → logprob: -13.875008583068848
    4. 'regs' → logprob: -14.250008583068848
    5. '   ' → logprob: -14.250008583068848
    6. 'chars' → logprob: -15.250008583068848
    7. 'self' → logprob: -15.500008583068848
    8. ' regions' → logprob: -15.875008583068848
    9. 'region' → logprob: -16.625009536743164
    10. '           ' → logprob: -16.750009536743164

Token 3914: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327880620956421
    2. '=' → logprob: -0.7577880620956421
    3. '       ' → logprob: -9.007787704467773
    4. '<|end|>' → logprob: -11.132787704467773
    5. '=[]' → logprob: -11.132787704467773
    6. '=self' → logprob: -12.132787704467773
    7. '        ' → logprob: -12.257787704467773
    8. '   ' → logprob: -12.382787704467773
    9. '()' → logprob: -12.632787704467773
    10. ',' → logprob: -12.632787704467773

Token 3915: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.874882430769503e-05
    2. ' self' → logprob: -9.500079154968262
    3. '       ' → logprob: -12.500079154968262
    4. '[self' → logprob: -17.000078201293945
    5. '(self' → logprob: -17.375078201293945
    6. '=self' → logprob: -18.625078201293945
    7. '	self' → logprob: -19.125078201293945
    8. '   ' → logprob: -20.125078201293945
    9. '           ' → logprob: -20.625078201293945
    10. '`' → logprob: -21.250078201293945

Token 3916: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.20144793391227722
    2. '.find' → logprob: -1.7014479637145996
    3. '=find' → logprob: -10.826447486877441
    4. ' find' → logprob: -11.701447486877441
    5. '.' → logprob: -12.951447486877441
    6. '.findall' → logprob: -13.576447486877441
    7. '_find' → logprob: -13.951447486877441
    8. '
' → logprob: -14.451447486877441
    9. '	find' → logprob: -15.076447486877441
    10. ' .' → logprob: -15.201447486877441

Token 3917: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00016027313540689647
    2. 'char' → logprob: -8.750160217285156
    3. 'regions' → logprob: -14.000160217285156
    4. '_regions' → logprob: -14.750160217285156
    5. '_chars' → logprob: -15.625160217285156
    6. '<char' → logprob: -15.875160217285156
    7. '
' → logprob: -16.375160217285156
    8. 'Char' → logprob: -16.625160217285156
    9. '_CHAR' → logprob: -17.000160217285156
    10. '_character' → logprob: -18.250160217285156

Token 3918: '_regions' (ID: 153218)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.483230322599411
    2. '_regions' → logprob: -1.1082303524017334
    3. 'regions' → logprob: -2.9832303524017334
    4. 'ections' → logprob: -6.858230113983154
    5. 'ected' → logprob: -8.483230590820312
    6. 'Regions' → logprob: -8.733230590820312
    7. 'ects' → logprob: -8.983230590820312
    8. '   ' → logprob: -9.108230590820312
    9. '       ' → logprob: -9.108230590820312
    10. 'ion' → logprob: -9.108230590820312

Token 3919: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005304908379912376
    2. '
' → logprob: -5.25530481338501
    3. '        
' → logprob: -9.880305290222168
    4. '<|end|>' → logprob: -12.130305290222168
    5. ',' → logprob: -12.755305290222168
    6. '```' → logprob: -12.880305290222168
    7. '<|end|>' → logprob: -13.130305290222168
    8. '   ' → logprob: -13.380305290222168
    9. ')' → logprob: -14.380305290222168
    10. '  
' → logprob: -14.755305290222168

Token 3920: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020210994989611208
    2. 'char' → logprob: -8.750202178955078
    3. 'chars' → logprob: -10.625202178955078
    4. 'result' → logprob: -12.125202178955078
    5. 'tokens' → logprob: -13.000202178955078
    6. 'return' → logprob: -13.000202178955078
    7. '```' → logprob: -13.000202178955078
    8. 'sorted' → logprob: -13.125202178955078
    9. 'characters' → logprob: -13.875202178955078
    10. '   ' → logprob: -13.875202178955078

Token 3921: ' identified' (ID: 17800)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identified' (adapté à ' identified') → logprob: -0.043584469705820084
    2. 'chars' → logprob: -3.2935845851898193
    3. 'id' → logprob: -5.79358434677124
    4. 'characters' → logprob: -6.79358434677124
    5. 'char' → logprob: -7.16858434677124
    6. 'ident' → logprob: -8.293584823608398
    7. 'sorted' → logprob: -9.418584823608398
    8. 'idents' → logprob: -9.418584823608398
    9. 'ids' → logprob: -9.668584823608398
    10. ' identified' → logprob: -10.668584823608398

Token 3922: ' =' (ID: 314)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.4230925142765045
    2. '.append' → logprob: -1.9230924844741821
    3. ' =' → logprob: -2.7980926036834717
    4. '=' → logprob: -2.7980926036834717
    5. '.' → logprob: -3.6730926036834717
    6. '_char' → logprob: -4.048092365264893
    7. ',' → logprob: -4.923092365264893
    8. '_tokens' → logprob: -5.298092365264893
    9. '<|end|>' → logprob: -5.673092365264893
    10. 'characters' → logprob: -6.423092365264893

Token 3923: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003234394360333681
    2. ' self' → logprob: -5.753234386444092
    3. '       ' → logprob: -10.12823486328125
    4. '[self' → logprob: -11.25323486328125
    5. '[(' → logprob: -12.75323486328125
    6. '(self' → logprob: -14.50323486328125
    7. ' [(' → logprob: -16.00323486328125
    8. '   ' → logprob: -16.50323486328125
    9. '	self' → logprob: -16.62823486328125
    10. '           ' → logprob: -17.25323486328125

Token 3924: '.ident' (ID: 131924)
  Prédit: 'identify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identify' → logprob: -0.47173118591308594
    2. '.ident' → logprob: -1.096731185913086
    3. 'identified' → logprob: -4.346731185913086
    4. '.append' → logprob: -4.596731185913086
    5. '.' → logprob: -4.846731185913086
    6. '.extend' → logprob: -5.471731185913086
    7. '_ident' → logprob: -6.096731185913086
    8. '=' → logprob: -6.221731185913086
    9. 'ident' → logprob: -6.971731185913086
    10. ' =' → logprob: -7.221731185913086

Token 3925: 'ify' (ID: 1985)
  Prédit: 'ified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ified' → logprob: -0.2021867036819458
    2. 'ify' → logprob: -1.7021867036819458
    3. 'if' → logprob: -7.577186584472656
    4. 'f' → logprob: -8.327186584472656
    5. 'fy' → logprob: -11.952186584472656
    6. '   ' → logprob: -12.452186584472656
    7. 'ifie' → logprob: -13.202186584472656
    8. '
' → logprob: -13.702186584472656
    9. 't' → logprob: -13.952186584472656
    10. '_char' → logprob: -14.202186584472656

Token 3926: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.20421303808689117
    2. 'characters' → logprob: -1.70421302318573
    3. '_chars' → logprob: -6.2042131423950195
    4. 'identified' → logprob: -7.8292131423950195
    5. 'char' → logprob: -8.32921314239502
    6. 'Characters' → logprob: -10.70421314239502
    7. 'character' → logprob: -10.82921314239502
    8. 'chars' → logprob: -10.82921314239502
    9. 'regions' → logprob: -11.07921314239502
    10. ' characters' → logprob: -11.82921314239502

Token 3927: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.1476612687110901
    2. 'characters' → logprob: -2.6476612091064453
    3. 'ified' → logprob: -3.1476612091064453
    4. 'regions' → logprob: -4.397661209106445
    5. 'ized' → logprob: -6.022661209106445
    6. 'ated' → logprob: -6.522661209106445
    7. 'ifiers' → logprob: -6.772661209106445
    8. '(' → logprob: -6.897661209106445
    9. 's' → logprob: -7.147661209106445
    10. 'ar' → logprob: -7.397661209106445

Token 3928: '(reg' (ID: 36833)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06222715228796005
    2. '
' → logprob: -3.062227249145508
    3. '(' → logprob: -4.937227249145508
    4. '()
' → logprob: -5.562227249145508
    5. '        
' → logprob: -7.062227249145508
    6. '   ' → logprob: -8.187227249145508
    7. 'return' → logprob: -8.562227249145508
    8. '```' → logprob: -8.687227249145508
    9. ' (' → logprob: -8.812227249145508
    10. ',' → logprob: -8.937227249145508

Token 3929: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.0003912311512976885
    2. '[' → logprob: -8.500391006469727
    3. 'ion' → logprob: -9.625391006469727
    4. '   ' → logprob: -10.250391006469727
    5. '(' → logprob: -10.375391006469727
    6. '[(' → logprob: -10.500391006469727
    7. '       ' → logprob: -12.250391006469727
    8. '[
' → logprob: -12.625391006469727
    9. '```' → logprob: -12.750391006469727
    10. '           ' → logprob: -13.375391006469727

Token 3930: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01636618562042713
    2. '
' → logprob: -4.641366004943848
    3. ')' → logprob: -5.641366004943848
    4. ')
' → logprob: -6.141366004943848
    5. '        
' → logprob: -7.266366004943848
    6. ',' → logprob: -10.141366004943848
    7. '[::-' → logprob: -10.141366004943848
    8. '<|end|>' → logprob: -11.016366004943848
    9. '()
' → logprob: -11.266366004943848
    10. '```' → logprob: -11.766366004943848

Token 3931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014184460742399096
    2. 'tokens' → logprob: -7.126418590545654
    3. 'char' → logprob: -7.501418590545654
    4. 'result' → logprob: -10.751418113708496
    5. 'chars' → logprob: -11.001418113708496
    6. 'token' → logprob: -11.751418113708496
    7. 'return' → logprob: -12.376418113708496
    8. '
' → logprob: -12.626418113708496
    9. '```' → logprob: -12.876418113708496
    10. '   ' → logprob: -13.376418113708496

Token 3932: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.4092356860637665
    2. 'chars' → logprob: -1.4092357158660889
    3. 'char' → logprob: -2.409235715866089
    4. '       ' → logprob: -7.15923547744751
    5. 'token' → logprob: -7.53423547744751
    6. 'expr' → logprob: -8.159235954284668
    7. 'characters' → logprob: -11.284235954284668
    8. 'expression' → logprob: -11.659235954284668
    9. ' tokens' → logprob: -12.909235954284668
    10. ' chars' → logprob: -13.159235954284668

Token 3933: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16035187244415283
    2. ' =' → logprob: -1.9103518724441528
    3. '=[]' → logprob: -9.285351753234863
    4. '_tokens' → logprob: -11.660351753234863
    5. '=[' → logprob: -11.785351753234863
    6. 'tokens' → logprob: -11.785351753234863
    7. '   ' → logprob: -12.535351753234863
    8. '=[]
' → logprob: -12.785351753234863
    9. ',' → logprob: -13.035351753234863
    10. '=
' → logprob: -15.035351753234863

Token 3934: ' [' (ID: 723)
  Prédit: '[token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[token' → logprob: -0.348641961812973
    2. '[' → logprob: -1.5986419916152954
    3. '[t' → logprob: -2.598641872406006
    4. '[i' → logprob: -4.598641872406006
    5. '[ind' → logprob: -5.598641872406006
    6. '[self' → logprob: -7.348641872406006
    7. '[item' → logprob: -7.473641872406006
    8. '[x' → logprob: -7.848641872406006
    9. ' [' → logprob: -7.973641872406006
    10. '[idx' → logprob: -7.973641872406006

Token 3935: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6803645491600037
    2. 'char' → logprob: -1.1803646087646484
    3. 'ch' → logprob: -1.6803646087646484
    4. 'x' → logprob: -9.930364608764648
    5. 't' → logprob: -10.680364608764648
    6. 'chr' → logprob: -11.930364608764648
    7. 'item' → logprob: -12.430364608764648
    8. 'ci' → logprob: -12.805364608764648
    9. 'pair' → logprob: -13.180364608764648
    10. 'ic' → logprob: -13.305364608764648

Token 3936: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4086381494998932
    2. ' for' → logprob: -1.1586381196975708
    3. '[' → logprob: -3.9086382389068604
    4. 'char' → logprob: -6.533638000488281
    5. '_char' → logprob: -12.408638000488281
    6. '	for' → logprob: -12.533638000488281
    7. '.char' → logprob: -14.658638000488281
    8. ' ' → logprob: -14.783638000488281
    9. ' char' → logprob: -15.033638000488281
    10. '
' → logprob: -15.283638000488281

Token 3937: ' (_,' (ID: 89384)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.00047809764510020614
    2. 'pos' → logprob: -7.750478267669678
    3. '(_,' → logprob: -10.75047779083252
    4. '_' → logprob: -11.62547779083252
    5. 'x' → logprob: -11.75047779083252
    6. ' _,' → logprob: -12.25047779083252
    7. '_pos' → logprob: -13.12547779083252
    8. '_x' → logprob: -13.62547779083252
    9. '__,' → logprob: -14.25047779083252
    10. '_,
' → logprob: -15.37547779083252

Token 3938: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5048530030981055e-06
    2. ' c' → logprob: -13.500001907348633
    3. ')c' → logprob: -17.000001907348633
    4. '	c' → logprob: -21.375001907348633
    5. '_c' → logprob: -21.625001907348633
    6. '   ' → logprob: -21.625001907348633
    7. '```' → logprob: -23.125001907348633
    8. '
' → logprob: -23.125001907348633
    9. '$c' → logprob: -23.875001907348633
    10. '(c' → logprob: -23.875001907348633

Token 3939: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016134120523929596
    2. 'in' → logprob: -6.501613616943359
    3. ' in' → logprob: -9.25161361694336
    4. ' )' → logprob: -11.25161361694336
    5. ')c' → logprob: -14.37661361694336
    6. ')
' → logprob: -14.62661361694336
    7. ',' → logprob: -14.87661361694336
    8. 'import' → logprob: -15.50161361694336
    9. ')]' → logprob: -15.62661361694336
    10. ']' → logprob: -16.37661361694336

Token 3940: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759723782539368
    2. ' in' → logprob: -0.8259723782539368
    3. ',' → logprob: -10.575972557067871
    4. ')' → logprob: -12.700972557067871
    5. '
' → logprob: -12.825972557067871
    6. 'c' → logprob: -14.950972557067871
    7. 'import' → logprob: -15.200972557067871
    8. '	in' → logprob: -15.450972557067871
    9. ',c' → logprob: -15.950972557067871
    10. ' ' → logprob: -16.325971603393555

Token 3941: ' identified' (ID: 17800)
  Prédit: 'identified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identified' → logprob: -1.1472419600977446e-06
    2. ' identified' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.125001907348633
    4. '
' → logprob: -18.500001907348633
    5. '           ' → logprob: -18.500001907348633
    6. 'recognized' → logprob: -19.500001907348633
    7. '_' → logprob: -20.625001907348633
    8. '     ' → logprob: -20.625001907348633
    9. '         ' → logprob: -20.750001907348633
    10. '       ' → logprob: -20.750001907348633

Token 3942: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031895045191049576
    2. ']
' → logprob: -3.656895160675049
    3. '       ' → logprob: -5.281895160675049
    4. ' ]' → logprob: -7.781895160675049
    5. ')' → logprob: -10.53189468383789
    6. ' ]
' → logprob: -11.28189468383789
    7. ']
' → logprob: -11.78189468383789
    8. '   ' → logprob: -12.15689468383789
    9. ']

' → logprob: -12.28189468383789
    10. '
' → logprob: -12.40689468383789

Token 3943: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12842227518558502
    2. 'return' → logprob: -2.128422260284424
    3. ' return' → logprob: -6.628422260284424
    4. '
' → logprob: -9.003422737121582
    5. 'tokens' → logprob: -10.878422737121582
    6. '   ' → logprob: -11.628422737121582
    7. 'result' → logprob: -12.128422737121582
    8. '```' → logprob: -12.878422737121582
    9. '        
' → logprob: -13.003422737121582
    10. '	' → logprob: -13.253422737121582

Token 3944: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' (adapté à ' expr') → logprob: -0.1607685387134552
    2. 'expression' → logprob: -1.9107685089111328
    3. 'tokens' → logprob: -8.285768508911133
    4. '       ' → logprob: -8.910768508911133
    5. 'return' → logprob: -9.035768508911133
    6. 'parsed' → logprob: -10.910768508911133
    7. 'exp' → logprob: -11.535768508911133
    8. 'express' → logprob: -12.285768508911133
    9. ' expr' → logprob: -12.910768508911133
    10. 'token' → logprob: -14.160768508911133

Token 3945: ' =' (ID: 314)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.21207112073898315
    2. ' =' → logprob: -1.712071180343628
    3. 'tokens' → logprob: -5.462070941925049
    4. 's' → logprob: -5.462070941925049
    5. 'ession' → logprob: -7.462070941925049
    6. '=' → logprob: -8.462071418762207
    7. '.tokens' → logprob: -8.462071418762207
    8. 'okens' → logprob: -8.462071418762207
    9. 'essions' → logprob: -8.587071418762207
    10. '       ' → logprob: -8.712071418762207

Token 3946: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.0024756586644798517
    2. ' Expression' → logprob: -6.002475738525391
    3. '   ' → logprob: -19.37747573852539
    4. '       ' → logprob: -20.62747573852539
    5. '(Expression' → logprob: -20.75247573852539
    6. 'self' → logprob: -21.62747573852539
    7. '.Expression' → logprob: -21.75247573852539
    8. ' expression' → logprob: -21.87747573852539
    9. '_expression' → logprob: -22.37747573852539
    10. 'expression' → logprob: -23.50247573852539

Token 3947: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.006743081379681826
    2. 'tokens' → logprob: -5.00674295425415
    3. '([' → logprob: -11.256743431091309
    4. '(
' → logprob: -11.631743431091309
    5. '(' → logprob: -12.756743431091309
    6. '.tokens' → logprob: -13.881743431091309
    7. '(expr' → logprob: -14.756743431091309
    8. ' tokens' → logprob: -14.756743431091309
    9. '(token' → logprob: -15.506743431091309
    10. '   ' → logprob: -15.631743431091309

Token 3948: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07556135952472687
    2. ')
' → logprob: -2.700561285018921
    3. '       ' → logprob: -5.2005615234375
    4. ').' → logprob: -9.9505615234375
    5. '   ' → logprob: -10.3255615234375
    6. '           ' → logprob: -12.9505615234375
    7. '[' → logprob: -13.2005615234375
    8. ')
' → logprob: -13.3255615234375
    9. '(tokens' → logprob: -13.4505615234375
    10. '),' → logprob: -13.9505615234375

Token 3949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049387846142053604
    2. 'return' → logprob: -3.0493879318237305
    3. '   ' → logprob: -7.9243879318237305
    4. ' return' → logprob: -8.04938793182373
    5. 'result' → logprob: -9.92438793182373
    6. '	return' → logprob: -10.92438793182373
    7. '.return' → logprob: -11.42438793182373
    8. '	' → logprob: -11.79938793182373
    9. ':return' → logprob: -12.29938793182373
    10. '{return' → logprob: -12.42438793182373

Token 3950: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00010616567305987701
    2. '       ' → logprob: -9.750105857849121
    3. 'result' → logprob: -10.000105857849121
    4. ' return' → logprob: -13.000105857849121
    5. '
' → logprob: -16.000106811523438
    6. '   ' → logprob: -17.500106811523438
    7. '```' → logprob: -18.500106811523438
    8. 'res' → logprob: -19.125106811523438
    9. '	return' → logprob: -19.625106811523438
    10. 'ret' → logprob: -20.125106811523438

Token 3951: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -6.2729995988775045e-06
    2. ' expr' → logprob: -12.000006675720215
    3. '(expr' → logprob: -18.8750057220459
    4. 'express' → logprob: -20.2500057220459
    5. '   ' → logprob: -21.3750057220459
    6. '       ' → logprob: -21.7500057220459
    7. 'obj' → logprob: -22.6250057220459
    8. '.expr' → logprob: -23.5000057220459
    9. '_expr' → logprob: -24.1250057220459
    10. '```' → logprob: -24.3750057220459

Token 3952: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.001765382126905024
    2. '.solve' → logprob: -6.626765251159668
    3. '.' → logprob: -7.751765251159668
    4. '.eval' → logprob: -13.001765251159668
    5. 'evaluate' → logprob: -13.376765251159668
    6. '.
' → logprob: -13.626765251159668
    7. '.parse' → logprob: -13.751765251159668
    8. '.execute' → logprob: -13.876765251159668
    9. '.calculate' → logprob: -14.126765251159668
    10. ' .' → logprob: -14.376765251159668

Token 3953: '()


' (ID: 29771)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3954: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3955: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.012481163255870342
    2. 'main' → logprob: -5.012481212615967
    3. ' __' → logprob: -5.512481212615967
    4. ' solve' → logprob: -7.012481212615967
    5. '_main' → logprob: -8.137480735778809
    6. '__' → logprob: -8.262480735778809
    7. ' solution' → logprob: -9.637480735778809
    8. ' parse' → logprob: -10.512480735778809
    9. ' def' → logprob: -10.512480735778809
    10. ' ' → logprob: -10.887480735778809

Token 3956: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03367117419838905
    2. '():
' → logprob: -3.4086711406707764
    3. '()' → logprob: -11.158671379089355
    4. '(argv' → logprob: -11.908671379089355
    5. '():
' → logprob: -13.658671379089355
    6. 'def' → logprob: -14.158671379089355
    7. '():

' → logprob: -14.408671379089355
    8. ' ():' → logprob: -14.533671379089355
    9. '(args' → logprob: -14.783671379089355
    10. '(argc' → logprob: -15.533671379089355

Token 3957: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31529057025909424
    2. 'import' → logprob: -1.3152905702590942
    3. 'data' → logprob: -7.315290451049805
    4. '```' → logprob: -7.315290451049805
    5. 'input' → logprob: -8.065290451049805
    6. ' import' → logprob: -9.190290451049805
    7. 'if' → logprob: -9.315290451049805
    8. 'lines' → logprob: -9.690290451049805
    9. '	import' → logprob: -9.940290451049805
    10. 'n' → logprob: -10.190290451049805

Token 3958: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4023953378200531
    2. 'input' (adapté à ' input') → logprob: -1.9023953676223755
    3. ' n' → logprob: -2.652395248413086
    4. '   ' → logprob: -2.902395248413086
    5. 'import' → logprob: -3.152395248413086
    6. ' input' → logprob: -4.902395248413086
    7. 't' → logprob: -5.152395248413086
    8. ' import' → logprob: -7.777395248413086
    9. 'num' → logprob: -9.152395248413086
    10. 'N' → logprob: -9.527395248413086

Token 3959: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.6507529020309448
    2. '()' → logprob: -0.7757529020309448
    3. '_lines' → logprob: -4.775753021240234
    4. '_data' → logprob: -5.025753021240234
    5. '_' → logprob: -6.650753021240234
    6. ' =' → logprob: -7.900753021240234
    7. 'line' → logprob: -8.150753021240234
    8. '=' → logprob: -8.150753021240234
    9. '_tokens' → logprob: -8.650753021240234
    10. '().' → logprob: -8.775753021240234

Token 3960: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004080658778548241
    2. ' sys' → logprob: -5.504080772399902
    3. '=sys' → logprob: -13.879080772399902
    4. 'lambda' → logprob: -14.629080772399902
    5. '(sys' → logprob: -14.629080772399902
    6. '	sys' → logprob: -14.879080772399902
    7. 'input' → logprob: -17.379079818725586
    8. ' lambda' → logprob: -19.129079818725586
    9. '```' → logprob: -19.504079818725586
    10. 'stdin' → logprob: -20.629079818725586

Token 3961: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010866894444916397
    2. 'stdin' → logprob: -9.37510871887207
    3. '.stdout' → logprob: -11.25010871887207
    4. '.argv' → logprob: -12.37510871887207
    5. '.' → logprob: -13.00010871887207
    6. '.readline' → logprob: -13.12510871887207
    7. '(stdin' → logprob: -14.00010871887207
    8. '.std' → logprob: -14.75010871887207
    9. '
' → logprob: -14.87510871887207
    10. '```' → logprob: -15.50010871887207

Token 3962: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0024372583720833063
    2. '().' → logprob: -6.502437114715576
    3. '.' → logprob: -7.752437114715576
    4. '()' → logprob: -8.877437591552734
    5. 'read' → logprob: -9.127437591552734
    6. '()
' → logprob: -9.502437591552734
    7. '=' → logprob: -9.627437591552734
    8. ' =' → logprob: -10.127437591552734
    9. '.read' → logprob: -10.877437591552734
    10. '.stdin' → logprob: -11.502437591552734

Token 3963: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7424564957618713
    2. '().' → logprob: -1.7424564361572266
    3. '   ' → logprob: -1.8674564361572266
    4. '()
' → logprob: -1.9924564361572266
    5. 'n' → logprob: -4.117456436157227
    6. 'while' → logprob: -4.117456436157227
    7. 'num' → logprob: -4.617456436157227
    8. '
' → logprob: -4.617456436157227
    9. 'def' → logprob: -5.742456436157227
    10. 'line' → logprob: -7.367456436157227

Token 3964: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25405028462409973
    2. '   ' → logprob: -1.5040502548217773
    3. 't' → logprob: -6.504050254821777
    4. '```' → logprob: -8.004050254821777
    5. 'num' → logprob: -8.879050254821777
    6. '
' → logprob: -9.504050254821777
    7. ' n' → logprob: -10.379050254821777
    8. 'def' → logprob: -10.754050254821777
    9. 'while' → logprob: -12.254050254821777
    10. 'N' → logprob: -12.629050254821777

Token 3965: ' N' (ID: 478)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.591750979423523
    2. 'T' → logprob: -0.841750979423523
    3. 'n' → logprob: -4.3417510986328125
    4. '   ' → logprob: -6.0917510986328125
    5. 'N' (adapté à ' N') → logprob: -8.216751098632812
    6. 'num' → logprob: -9.716751098632812
    7. 'Q' → logprob: -10.591751098632812
    8. 'try' → logprob: -10.716751098632812
    9. 'q' → logprob: -11.216751098632812
    10. 'tc' → logprob: -11.841751098632812

Token 3966: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22620044648647308
    2. ' =' → logprob: -1.6012004613876343
    3. '   ' → logprob: -7.726200580596924
    4. '_' → logprob: -8.976200103759766
    5. '=int' → logprob: -10.101200103759766
    6. ')' → logprob: -10.226200103759766
    7. '```' → logprob: -10.601200103759766
    8. ',' → logprob: -10.851200103759766
    9. ' ' → logprob: -11.351200103759766
    10. '  ' → logprob: -11.601200103759766

Token 3967: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.615255839889869e-05
    2. ' int' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.00009536743164
    4. '	int' → logprob: -19.50009536743164
    5. '
' → logprob: -20.37509536743164
    6. '(int' → logprob: -21.25009536743164
    7. '[int' → logprob: -21.25009536743164
    8. ' ' → logprob: -21.62509536743164
    9. '  ' → logprob: -22.12509536743164
    10. '=int' → logprob: -22.50009536743164

Token 3968: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014273041859269142
    2. 'input' → logprob: -4.264273166656494
    3. '()' → logprob: -9.514272689819336
    4. '(sys' → logprob: -10.389272689819336
    5. '()
' → logprob: -13.014272689819336
    6. 'sys' → logprob: -14.014272689819336
    7. '(' → logprob: -14.139272689819336
    8. ' input' → logprob: -14.389272689819336
    9. '=input' → logprob: -14.764272689819336
    10. '(
' → logprob: -16.514272689819336

Token 3969: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10003378987312317
    2. '()' → logprob: -2.600033760070801
    3. '())
' → logprob: -4.100033760070801
    4. '().' → logprob: -5.475033760070801
    5. '()
' → logprob: -8.9750337600708
    6. ')' → logprob: -11.6000337600708
    7. '(' → logprob: -11.7250337600708
    8. ' ())' → logprob: -11.8500337600708
    9. '()[' → logprob: -13.3500337600708
    10. '();)' → logprob: -13.4750337600708

Token 3970: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008661959320306778
    2. 'line' → logprob: -5.75866174697876
    3. 'lines' → logprob: -5.88366174697876
    4. 'segments' → logprob: -6.50866174697876
    5. '   ' → logprob: -7.38366174697876
    6. 'points' → logprob: -7.63366174697876
    7. ' for' → logprob: -10.133662223815918
    8. 'tokens' → logprob: -10.258662223815918
    9. 'coordinates' → logprob: -12.508662223815918
    10. '	for' → logprob: -12.883662223815918

Token 3971: ' seg' (ID: 3055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3267109990119934
    2. 'line' → logprob: -1.3267109394073486
    3. 'lines' → logprob: -5.076711177825928
    4. 'segments' → logprob: -5.076711177825928
    5. 'points' → logprob: -7.701711177825928
    6. 'tokens' → logprob: -8.57671070098877
    7. ' for' → logprob: -9.20171070098877
    8. '   ' → logprob: -9.57671070098877
    9. ' line' → logprob: -10.45171070098877
    10. '
' → logprob: -11.32671070098877

Token 3972: 's' (ID: 82)
  Prédit: 'ments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -3.047134305234067e-05
    2. 's' → logprob: -10.750030517578125
    3. 'ements' → logprob: -12.125030517578125
    4. 'gments' → logprob: -13.250030517578125
    5. 'ment' → logprob: -14.500030517578125
    6. 'm' → logprob: -14.500030517578125
    7. 'ents' → logprob: -15.125030517578125
    8. '_segments' → logprob: -16.000030517578125
    9. 'segments' → logprob: -16.375030517578125
    10. 'MENTS' → logprob: -17.000030517578125

Token 3973: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18417735397815704
    2. '=' → logprob: -1.8091773986816406
    3. 's' → logprob: -5.559177398681641
    4. '   ' → logprob: -7.809177398681641
    5. 'nts' → logprob: -9.55917739868164
    6. 'ts' → logprob: -10.93417739868164
    7. '=[]' → logprob: -11.68417739868164
    8. '	' → logprob: -11.68417739868164
    9. 't' → logprob: -12.05917739868164
    10. '_' → logprob: -12.05917739868164

Token 3974: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6894750595092773
    2. '[]
' → logprob: -0.9394750595092773
    3. '[' → logprob: -2.4394750595092773
    4. '[N' → logprob: -3.9394750595092773
    5. '[n' → logprob: -7.939475059509277
    6. '[int' → logprob: -9.189475059509277
    7. '[s' → logprob: -10.064475059509277
    8. '[num' → logprob: -10.439475059509277
    9. '[line' → logprob: -10.689475059509277
    10. '[number' → logprob: -11.064475059509277

Token 3975: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012682090746238828
    2. '   ' → logprob: -7.25126838684082
    3. ' for' → logprob: -7.50126838684082
    4. '	for' → logprob: -12.37626838684082
    5. '
' → logprob: -13.75126838684082
    6. 'while' → logprob: -15.62626838684082
    7. '    
' → logprob: -16.37626838684082
    8. ' 
' → logprob: -17.87626838684082
    9. '  
' → logprob: -18.50126838684082
    10. ' ' → logprob: -18.62626838684082

Token 3976: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.676292231422849e-05
    2. ' for' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.125017166137695
    4. '
' → logprob: -17.125017166137695
    5. '	for' → logprob: -19.250017166137695
    6. 'while' → logprob: -22.250017166137695
    7. '```' → logprob: -22.875017166137695
    8. '    
' → logprob: -24.000017166137695
    9. '_for' → logprob: -24.625017166137695
    10. ' 
' → logprob: -25.000017166137695

Token 3977: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1472419600977446e-06
    2. '_
' → logprob: -14.250000953674316
    3. '_i' → logprob: -15.250000953674316
    4. ' _' → logprob: -16.375001907348633
    5. '_range' → logprob: -17.125001907348633
    6. '_N' → logprob: -17.250001907348633
    7. '_=' → logprob: -17.500001907348633
    8. '_in' → logprob: -17.750001907348633
    9. '_
' → logprob: -18.875001907348633
    10. '
' → logprob: -18.875001907348633

Token 3978: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9661460518836975
    2. 'in' → logprob: -0.9661460518836975
    3. ' in' → logprob: -1.4661459922790527
    4. 'range' → logprob: -4.966145992279053
    5. ' range' → logprob: -7.341145992279053
    6. '_range' → logprob: -8.466146469116211
    7. ' _' → logprob: -9.341146469116211
    8. '
' → logprob: -10.216146469116211
    9. '_in' → logprob: -10.341146469116211
    10. '0' → logprob: -10.966146469116211

Token 3979: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.339278580620885e-06
    2. ' range' → logprob: -13.000001907348633
    3. 'r' → logprob: -18.875001907348633
    4. '
' → logprob: -18.875001907348633
    5. '(range' → logprob: -19.250001907348633
    6. 'rang' → logprob: -19.750001907348633
    7. 'se' → logprob: -20.000001907348633
    8. 'N' → logprob: -20.375001907348633
    9. '```' → logprob: -21.750001907348633
    10. '   ' → logprob: -22.000001907348633

Token 3980: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004820868838578463
    2. '(N' → logprob: -5.504820823669434
    3. ' N' → logprob: -7.879820823669434
    4. 'int' → logprob: -8.504820823669434
    5. '_N' → logprob: -9.879820823669434
    6. '   ' → logprob: -9.879820823669434
    7. 'range' → logprob: -11.004820823669434
    8. '
' → logprob: -11.379820823669434
    9. '_' → logprob: -11.754820823669434
    10. ' ' → logprob: -11.879820823669434

Token 3981: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4088215231895447
    2. '   ' → logprob: -1.1588215827941895
    3. '       ' → logprob: -4.6588215827941895
    4. '():
' → logprob: -5.0338215827941895
    5. '):' → logprob: -5.9088215827941895
    6. '()):
' → logprob: -6.4088215827941895
    7. ',' → logprob: -7.6588215827941895
    8. '```' → logprob: -8.783821105957031
    9. ':
' → logprob: -9.033821105957031
    10. '()' → logprob: -9.408821105957031

Token 3982: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012657620012760162
    2. '       ' → logprob: -4.762657642364502
    3. '   ' → logprob: -5.887657642364502
    4. ' x' → logprob: -7.387657642364502
    5. 'line' → logprob: -7.512657642364502
    6. '	x' → logprob: -10.387657165527344
    7. ' line' → logprob: -10.762657165527344
    8. '```' → logprob: -11.262657165527344
    9. '(x' → logprob: -12.637657165527344
    10. 'l' → logprob: -12.637657165527344

Token 3983: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -1.6166903151315637e-05
    2. '   ' → logprob: -11.250016212463379
    3. ' x' → logprob: -13.375016212463379
    4. 'line' → logprob: -13.500016212463379
    5. 'seg' → logprob: -16.875015258789062
    6. '	x' → logprob: -17.125015258789062
    7. 'xs' → logprob: -17.125015258789062
    8. '       ' → logprob: -17.875015258789062
    9. '```' → logprob: -17.875015258789062
    10. 'l' → logprob: -18.125015258789062

Token 3984: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018422940047457814
    2. ',' → logprob: -8.625184059143066
    3. 's' → logprob: -13.000184059143066
    4. ',y' → logprob: -13.750184059143066
    5. ' =' → logprob: -14.625184059143066
    6. ' ,' → logprob: -15.250184059143066
    7. '=' → logprob: -15.875184059143066
    8. '_,' → logprob: -16.000185012817383
    9. 'a' → logprob: -16.500185012817383
    10. ',s' → logprob: -16.875185012817383

Token 3985: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010332842357456684
    2. ',y' → logprob: -7.876033306121826
    3. ' ,' → logprob: -7.876033306121826
    4. ',x' → logprob: -8.376032829284668
    5. ',int' → logprob: -11.251032829284668
    6. ',s' → logprob: -11.501032829284668
    7. ',
' → logprob: -13.001032829284668
    8. '_,' → logprob: -13.126032829284668
    9. ',w' → logprob: -13.251032829284668
    10. ',n' → logprob: -13.751032829284668

Token 3986: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ',' → logprob: -13.75000286102295
    3. 'x' → logprob: -14.12500286102295
    4. ',x' → logprob: -14.50000286102295
    5. '
' → logprob: -15.50000286102295
    6. '=' → logprob: -16.375001907348633
    7. ' ' → logprob: -16.875001907348633
    8. ' =' → logprob: -17.375001907348633
    9. 's' → logprob: -17.500001907348633
    10. '2' → logprob: -17.750001907348633

Token 3987: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.20163582265377045
    2. ',' → logprob: -1.7016358375549316
    3. ' ,' → logprob: -8.576635360717773
    4. 'x' → logprob: -10.576635360717773
    5. ',y' → logprob: -12.826635360717773
    6. ',w' → logprob: -13.701635360717773
    7. ',
' → logprob: -14.326635360717773
    8. ' x' → logprob: -14.451635360717773
    9. ',int' → logprob: -14.451635360717773
    10. ',q' → logprob: -14.576635360717773

Token 3988: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47825106978416443
    2. '1' → logprob: -0.9782510995864868
    3. ',x' → logprob: -5.603250980377197
    4. 'x' → logprob: -8.228251457214355
    5. ',' → logprob: -8.478251457214355
    6. '   ' → logprob: -13.603251457214355
    7. ' x' → logprob: -14.103251457214355
    8. ' ' → logprob: -14.228251457214355
    9. '
' → logprob: -14.603251457214355
    10. ' =' → logprob: -15.103251457214355

Token 3989: ',y' (ID: 16103)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.2571756839752197
    2. ',y' → logprob: -1.5071756839752197
    3. ',' → logprob: -5.257175445556641
    4. ',int' → logprob: -12.00717544555664
    5. ' ,' → logprob: -12.50717544555664
    6. 'x' → logprob: -12.75717544555664
    7. ',input' → logprob: -13.00717544555664
    8. '_,' → logprob: -13.13217544555664
    9. ',z' → logprob: -13.50717544555664
    10. ',line' → logprob: -13.88217544555664

Token 3990: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007343433680944145
    2. '2' → logprob: -7.250734329223633
    3. ',' → logprob: -11.250734329223633
    4. '   ' → logprob: -12.500734329223633
    5. '=' → logprob: -12.875734329223633
    6. '
' → logprob: -13.875734329223633
    7. '```' → logprob: -13.875734329223633
    8. ' ' → logprob: -14.125734329223633
    9. ' =' → logprob: -14.750734329223633
    10. 'x' → logprob: -15.250734329223633

Token 3991: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022111982107162
    2. ' =' → logprob: -2.3502211570739746
    3. '=input' → logprob: -11.725220680236816
    4. '=line' → logprob: -12.225220680236816
    5. '=int' → logprob: -14.350220680236816
    6. '=
' → logprob: -15.225220680236816
    7. '   ' → logprob: -15.475220680236816
    8. ',' → logprob: -15.725220680236816
    9. ' =
' → logprob: -16.600221633911133
    10. ' ' → logprob: -17.100221633911133

Token 3992: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0040801819413900375
    2. ' map' → logprob: -5.504080295562744
    3. '	map' → logprob: -14.254079818725586
    4. '   ' → logprob: -14.504079818725586
    5. '[' → logprob: -15.129079818725586
    6. 'list' → logprob: -16.004079818725586
    7. '(map' → logprob: -16.504079818725586
    8. '
' → logprob: -17.379079818725586
    9. 'tuple' → logprob: -19.004079818725586
    10. ' ' → logprob: -19.129079818725586

Token 3993: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740854501724243
    2. '(int' → logprob: -0.9740854501724243
    3. '[int' → logprob: -12.599085807800293
    4. ',int' → logprob: -13.224085807800293
    5. ' int' → logprob: -13.599085807800293
    6. '=int' → logprob: -14.724085807800293
    7. 'input' → logprob: -14.849085807800293
    8. '<int' → logprob: -14.849085807800293
    9. '   ' → logprob: -15.224085807800293
    10. ']int' → logprob: -15.599085807800293

Token 3994: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.10428895801305771
    2. ',' → logprob: -2.3542890548706055
    3. 'input' → logprob: -5.8542890548706055
    4. '(input' → logprob: -6.7292890548706055
    5. '=input' → logprob: -12.354289054870605
    6. ' input' → logprob: -13.104289054870605
    7. '[input' → logprob: -13.354289054870605
    8. '   ' → logprob: -13.729289054870605
    9. '<input' → logprob: -14.854289054870605
    10. ',int' → logprob: -15.229289054870605

Token 3995: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.320199877838604e-07
    2. ' input' → logprob: -14.75
    3. 'sys' → logprob: -22.5
    4. '(input' → logprob: -23.0
    5. '<input' → logprob: -23.75
    6. '	input' → logprob: -24.0
    7. '_input' → logprob: -24.25
    8. '   ' → logprob: -25.125
    9. 'Input' → logprob: -25.125
    10. '=input' → logprob: -25.125

Token 3996: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.5
    3. '.readline' → logprob: -17.5
    4. '(' → logprob: -17.875
    5. '   ' → logprob: -18.375
    6. '()
' → logprob: -18.75
    7. '.split' → logprob: -19.375
    8. ' ().' → logprob: -20.25
    9. '()[' → logprob: -20.5
    10. '().__' → logprob: -21.25

Token 3997: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.31459787487983704
    2. 'strip' → logprob: -1.3145978450775146
    3. 'read' → logprob: -7.314598083496094
    4. 'rstrip' → logprob: -7.314598083496094
    5. ' strip' → logprob: -13.439598083496094
    6. '().' → logprob: -13.564598083496094
    7. '.readline' → logprob: -15.564598083496094
    8. '.strip' → logprob: -15.689598083496094
    9. ' split' → logprob: -15.689598083496094
    10. '(split' → logprob: -16.439598083496094

Token 3998: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4770398437976837
    2. '())
' → logprob: -0.9770398139953613
    3. ')' → logprob: -6.227039813995361
    4. '())' → logprob: -7.602039813995361
    5. '   ' → logprob: -8.47704029083252
    6. '()' → logprob: -8.85204029083252
    7. '       ' → logprob: -9.60204029083252
    8. '()
' → logprob: -10.10204029083252
    9. ' )
' → logprob: -12.60204029083252
    10. ')
' → logprob: -12.72704029083252

Token 3999: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005303950165398419
    2. '   ' → logprob: -8.125530242919922
    3. 'se' → logprob: -8.500530242919922
    4. '	se' → logprob: -10.500530242919922
    5. 'seg' → logprob: -13.750530242919922
    6. '           ' → logprob: -14.500530242919922
    7. ',se' → logprob: -14.875530242919922
    8. '_se' → logprob: -15.000530242919922
    9. '
' → logprob: -15.125530242919922
    10. '(se' → logprob: -15.375530242919922

Token 4000: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.023487014696002007
    2. '       ' → logprob: -3.773487091064453
    3. '   ' → logprob: -8.898487091064453
    4. ' seg' → logprob: -9.523487091064453
    5. '	se' → logprob: -10.898487091064453
    6. 'seg' (adapté à ' seg') → logprob: -11.898487091064453
    7. '           ' → logprob: -12.898487091064453
    8. '_se' → logprob: -13.523487091064453
    9. 'segments' → logprob: -14.398487091064453
    10. 'secs' → logprob: -14.773487091064453

Token 4001: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008673948468640447
    2. 'ments' → logprob: -7.3758673667907715
    3. 'se' → logprob: -9.37586784362793
    4. '       ' → logprob: -10.00086784362793
    5. '   ' → logprob: -10.25086784362793
    6. '_se' → logprob: -10.37586784362793
    7. 'ms' → logprob: -11.25086784362793
    8. '_segments' → logprob: -11.50086784362793
    9. 'ment' → logprob: -12.50086784362793
    10. 'segments' → logprob: -12.62586784362793

Token 4002: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0076220110058784485
    2. '.se' → logprob: -5.007622241973877
    3. 'append' → logprob: -8.007621765136719
    4. '.' → logprob: -8.132621765136719
    5. '       ' → logprob: -8.632621765136719
    6. '_se' → logprob: -10.507621765136719
    7. 'se' → logprob: -11.257621765136719
    8. ' .' → logprob: -11.257621765136719
    9. '           ' → logprob: -11.757621765136719
    10. 'Append' → logprob: -12.007621765136719

Token 4003: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.36574100604048e-06
    2. ' (' → logprob: -12.625004768371582
    3. '(' → logprob: -13.875004768371582
    4. '   ' → logprob: -17.000003814697266
    5. 'x' → logprob: -17.625003814697266
    6. '((' → logprob: -17.625003814697266
    7. '(
' → logprob: -19.375003814697266
    8. '(int' → logprob: -21.875003814697266
    9. '       ' → logprob: -22.250003814697266
    10. ')' → logprob: -22.500003814697266

Token 4004: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.625
    3. ')x' → logprob: -19.25
    4. '(x' → logprob: -22.0
    5. '	x' → logprob: -22.375
    6. '   ' → logprob: -23.0
    7. '"x' → logprob: -24.125
    8. '
' → logprob: -24.375
    9. '       ' → logprob: -24.5
    10. '{x' → logprob: -24.625

Token 4005: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. 'x' → logprob: -12.87500286102295
    3. '_' → logprob: -17.500001907348633
    4. '   ' → logprob: -18.375001907348633
    5. 's' → logprob: -19.375001907348633
    6. ',' → logprob: -20.125001907348633
    7. '2' → logprob: -20.625001907348633
    8. ' x' → logprob: -20.625001907348633
    9. '_,' → logprob: -21.000001907348633
    10. '
' → logprob: -21.250001907348633

Token 4006: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009817597456276417
    2. ',y' → logprob: -4.634817600250244
    3. ' ,' → logprob: -9.759817123413086
    4. ',
' → logprob: -13.134817123413086
    5. ',user' → logprob: -14.259817123413086
    6. 'y' → logprob: -15.259817123413086
    7. ',x' → logprob: -15.509817123413086
    8. '<|end|>' → logprob: -16.009817123413086
    9. ',w' → logprob: -16.509817123413086
    10. ',q' → logprob: -16.634817123413086

Token 4007: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012458281125873327
    2. ',' → logprob: -7.126245975494385
    3. ',y' → logprob: -7.751245975494385
    4. 'y' → logprob: -12.251245498657227
    5. ' y' → logprob: -12.501245498657227
    6. ' ,' → logprob: -13.876245498657227
    7. '   ' → logprob: -14.001245498657227
    8. ' ' → logprob: -14.376245498657227
    9. '```' → logprob: -15.626245498657227
    10. '_,' → logprob: -17.001245498657227

Token 4008: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6932235956192017
    2. ',x' → logprob: -0.6932235956192017
    3. ' ,' → logprob: -9.81822395324707
    4. ',
' → logprob: -11.19322395324707
    5. ',y' → logprob: -13.19322395324707
    6. ',w' → logprob: -13.81822395324707
    7. 'x' → logprob: -14.06822395324707
    8. '   ' → logprob: -14.31822395324707
    9. ',user' → logprob: -14.44322395324707
    10. ',q' → logprob: -14.56822395324707

Token 4009: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011473640333861113
    2. '1' → logprob: -6.876147270202637
    3. ',' → logprob: -9.376147270202637
    4. '```' → logprob: -11.001147270202637
    5. '   ' → logprob: -11.751147270202637
    6. '4' → logprob: -13.626147270202637
    7. ',x' → logprob: -13.626147270202637
    8. '       ' → logprob: -14.626147270202637
    9. 'x' → logprob: -14.876147270202637
    10. ')' → logprob: -15.001147270202637

Token 4010: ',y' (ID: 16103)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.02386201173067093
    2. 'x' → logprob: -3.77386212348938
    3. ',' → logprob: -7.398861885070801
    4. ',y' → logprob: -13.2738618850708
    5. '_,' → logprob: -13.8988618850708
    6. ',
' → logprob: -14.0238618850708
    7. '```' → logprob: -15.2738618850708
    8. ' ,' → logprob: -15.3988618850708
    9. '   ' → logprob: -16.148862838745117
    10. '(x' → logprob: -16.398862838745117

Token 4011: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.9292415749514475e-05
    2. 'y' → logprob: -10.750039100646973
    3. '4' → logprob: -11.375039100646973
    4. '```' → logprob: -12.875039100646973
    5. '   ' → logprob: -13.500039100646973
    6. ',' → logprob: -13.875039100646973
    7. '_' → logprob: -15.000039100646973
    8. ',y' → logprob: -15.625039100646973
    9. '₂' → logprob: -15.750039100646973
    10. '1' → logprob: -16.12504005432129

Token 4012: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.43927931785583496
    2. ',x' → logprob: -1.439279317855835
    3. ',' → logprob: -2.314279317855835
    4. '))
' → logprob: -4.189279556274414
    5. ',y' → logprob: -5.564279556274414
    6. ',
' → logprob: -8.689279556274414
    7. ',se' → logprob: -9.564279556274414
    8. ' ))' → logprob: -9.939279556274414
    9. ',))
' → logprob: -10.064279556274414
    10. '       ' → logprob: -10.189279556274414

Token 4013: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6785939931869507
    2. '   ' → logprob: -0.8035939931869507
    3. '
' → logprob: -3.4285941123962402
    4. 'res' → logprob: -5.42859411239624
    5. '    
' → logprob: -5.92859411239624
    6. '```' → logprob: -6.55359411239624
    7. ' result' → logprob: -6.80359411239624
    8. 'answer' → logprob: -6.92859411239624
    9. 'print' → logprob: -7.55359411239624
    10. 'solver' → logprob: -8.053593635559082

Token 4014: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.00030900631099939346
    2. '   ' → logprob: -8.250308990478516
    3. ' solver' → logprob: -10.000308990478516
    4. '
' → logprob: -14.125308990478516
    5. 'solution' → logprob: -14.375308990478516
    6. 's' → logprob: -14.500308990478516
    7. 'sol' → logprob: -15.250308990478516
    8. '_solver' → logprob: -16.000308990478516
    9. '```' → logprob: -16.375308990478516
    10. 'solve' → logprob: -16.625308990478516

Token 4015: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10093530267477036
    2. '=' → logprob: -2.350935220718384
    3. '   ' → logprob: -7.725935459136963
    4. '.solve' → logprob: -8.975934982299805
    5. '_solver' → logprob: -10.475934982299805
    6. '=s' → logprob: -10.725934982299805
    7. '<|end|>' → logprob: -10.725934982299805
    8. '.' → logprob: -11.100934982299805
    9. '(s' → logprob: -11.225934982299805
    10. '<|end|>' → logprob: -11.475934982299805

Token 4016: ' Cheat' (ID: 160729)
  Prédit: 'Che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Che' → logprob: 0.0
    2. ' Cheat' → logprob: -17.75
    3. ' Che' → logprob: -18.375
    4. 'C' → logprob: -19.375
    5. 'Cheque' → logprob: -20.25
    6. 'Chel' → logprob: -22.75
    7. '   ' → logprob: -23.125
    8. 'Chef' → logprob: -23.25
    9. 'Cut' → logprob: -23.875
    10. '_C' → logprob: -24.0

Token 4017: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -1.9361264946837764e-07
    2. 'Cas' → logprob: -16.125
    3. 'C' → logprob: -17.25
    4. ' Case' → logprob: -17.5
    5. '_case' → logprob: -17.75
    6. 'Cases' → logprob: -18.25
    7. 'case' → logprob: -18.625
    8. '
' → logprob: -19.125
    9. '_CASE' → logprob: -20.0
    10. 'CASE' → logprob: -20.375

Token 4018: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.0032409359700977802
    2. 'solver' → logprob: -5.753241062164307
    3. 'Case' → logprob: -9.753240585327148
    4. '_solver' → logprob: -12.878240585327148
    5. ' solver' → logprob: -13.253240585327148
    6. 'olver' → logprob: -14.253240585327148
    7. 'Solve' → logprob: -16.62824058532715
    8. ' Solver' → logprob: -16.75324058532715
    9. 'Resolver' → logprob: -17.37824058532715
    10. 'er' → logprob: -18.37824058532715

Token 4019: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.018280576914548874
    2. '(s' → logprob: -4.018280506134033
    3. 'solver' → logprob: -9.643280982971191
    4. '(seg' → logprob: -10.143280982971191
    5. 'se' → logprob: -11.143280982971191
    6. '(' → logprob: -12.518280982971191
    7. 'Solver' → logprob: -12.643280982971191
    8. '(sol' → logprob: -13.518280982971191
    9. '   ' → logprob: -13.768280982971191
    10. '.se' → logprob: -14.018280982971191

Token 4020: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.0002956591488327831
    2. 'g' → logprob: -8.625295639038086
    3. '(gs' → logprob: -9.625295639038086
    4. 'gments' → logprob: -11.750295639038086
    5. '(g' → logprob: -11.750295639038086
    6. '(' → logprob: -11.750295639038086
    7. '(
' → logprob: -12.125295639038086
    8. 'gv' → logprob: -12.875295639038086
    9. '```' → logprob: -13.375295639038086
    10. 'ms' → logprob: -13.500295639038086

Token 4021: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4172511398792267
    2. '   ' → logprob: -1.1672511100769043
    3. ')
' → logprob: -3.6672511100769043
    4. '.solve' → logprob: -6.417251110076904
    5. '<|end|>' → logprob: -6.667251110076904
    6. '<|end|>' → logprob: -7.542251110076904
    7. ').' → logprob: -8.917251586914062
    8. '    
' → logprob: -8.917251586914062
    9. '
' → logprob: -8.917251586914062
    10. '()
' → logprob: -9.292251586914062

Token 4022: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.032199010252952576
    2. '   ' → logprob: -3.532198905944824
    3. 'result' → logprob: -6.032198905944824
    4. ' print' → logprob: -10.532198905944824
    5. '```' → logprob: -11.407198905944824
    6. 'res' → logprob: -12.157198905944824
    7. '
' → logprob: -14.032198905944824
    8. ' result' → logprob: -14.907198905944824
    9. '``' → logprob: -15.157198905944824
    10. '	print' → logprob: -15.157198905944824

Token 4023: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009211080614477396
    2. 'result' → logprob: -7.000921249389648
    3. '   ' → logprob: -12.250921249389648
    4. 'res' → logprob: -12.500921249389648
    5. ' print' → logprob: -14.375921249389648
    6. '```' → logprob: -14.750921249389648
    7. 'answer' → logprob: -16.37592124938965
    8. '``' → logprob: -18.50092124938965
    9. 'ans' → logprob: -18.62592124938965
    10. '
' → logprob: -18.87592124938965

Token 4024: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.25193890929222107
    2. 'solver' → logprob: -1.5019389390945435
    3. 's' → logprob: -13.126938819885254
    4. ' solver' → logprob: -13.251938819885254
    5. '(solution' → logprob: -13.251938819885254
    6. '(sol' → logprob: -13.751938819885254
    7. 'sol' → logprob: -14.001938819885254
    8. '_solver' → logprob: -14.126938819885254
    9. '(' → logprob: -14.626938819885254
    10. '(f' → logprob: -15.001938819885254

Token 4025: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -1.2113979209971149e-05
    2. 'solver' → logprob: -11.750012397766113
    3. 'olve' → logprob: -12.500012397766113
    4. 'ol' → logprob: -16.250011444091797
    5. '(' → logprob: -16.875011444091797
    6. ')' → logprob: -17.000011444091797
    7. 'over' → logprob: -17.250011444091797
    8. 'oler' → logprob: -17.375011444091797
    9. '_' → logprob: -18.250011444091797
    10. '`' → logprob: -18.375011444091797

Token 4026: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.00014203863975126296
    2. '.' → logprob: -8.875142097473145
    3. ').' → logprob: -14.250142097473145
    4. ' .' → logprob: -14.625142097473145
    5. '.
' → logprob: -15.250142097473145
    6. '.run' → logprob: -15.375142097473145
    7. '.sol' → logprob: -15.625142097473145
    8. ')' → logprob: -15.625142097473145
    9. '.)' → logprob: -16.750141143798828
    10. 'solve' → logprob: -17.250141143798828

Token 4027: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -6.277553620748222e-05
    2. '()' → logprob: -10.000062942504883
    3. '())
' → logprob: -11.125062942504883
    4. ')' → logprob: -13.000062942504883
    5. '()
' → logprob: -16.000062942504883
    6. ' ())' → logprob: -17.125062942504883
    7. '(' → logprob: -18.000062942504883
    8. '()))' → logprob: -18.625062942504883
    9. '();)' → logprob: -18.625062942504883
    10. '())

' → logprob: -18.750062942504883

Token 4028: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005163363530300558
    2. 'main' → logprob: -8.000515937805176
    3. '```' → logprob: -9.500515937805176
    4. ' if' → logprob: -10.000515937805176
    5. '<|end|>' → logprob: -10.500515937805176
    6. '#' → logprob: -10.625515937805176
    7. '
' → logprob: -12.750515937805176
    8. '__' → logprob: -12.875515937805176
    9. '...' → logprob: -14.250515937805176
    10. '#if' → logprob: -14.750515937805176

Token 4029: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004091342911124229
    2. ' __' → logprob: -5.504091262817383
    3. 'name' → logprob: -11.379091262817383
    4. '___' → logprob: -14.504091262817383
    5. '_name' → logprob: -15.129091262817383
    6. 'True' → logprob: -15.504091262817383
    7. 'Name' → logprob: -15.754091262817383
    8. ' ' → logprob: -16.629091262817383
    9. '____' → logprob: -16.754091262817383
    10. ''' → logprob: -16.879091262817383

Token 4030: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12743522226810455
    2. '==' → logprob: -2.3774352073669434
    3. ' ==' → logprob: -4.002435207366943
    4. '=="' → logprob: -5.377435207366943
    5. 'name' → logprob: -6.002435207366943
    6. '=='' → logprob: -6.752435207366943
    7. 'if' → logprob: -8.627435684204102
    8. ' __' → logprob: -10.127435684204102
    9. '```' → logprob: -10.502435684204102
    10. '==
' → logprob: -10.752435684204102

Token 4031: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.991464786347933e-05
    2. '==' → logprob: -9.875060081481934
    3. '__.__' → logprob: -12.625060081481934
    4. ' ==' → logprob: -13.250060081481934
    5. '=="' → logprob: -13.500060081481934
    6. '```' → logprob: -14.000060081481934
    7. '__
' → logprob: -15.375060081481934
    8. '____' → logprob: -15.875060081481934
    9. '___' → logprob: -16.125059127807617
    10. '__('' → logprob: -16.125059127807617

Token 4032: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7026472687721252
    2. '__' → logprob: -0.7026472687721252
    3. ' ==' → logprob: -5.4526472091674805
    4. '=="' → logprob: -5.4526472091674805
    5. '=='' → logprob: -7.0776472091674805
    6. '==
' → logprob: -10.70264720916748
    7. '```' → logprob: -11.95264720916748
    8. '===' → logprob: -12.45264720916748
    9. '__.__' → logprob: -13.07764720916748
    10. '=' → logprob: -13.20264720916748

Token 4033: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16023559868335724
    2. ''' → logprob: -1.9102356433868408
    3. '__' → logprob: -11.535235404968262
    4. ' "__' → logprob: -13.535235404968262
    5. ' '__' → logprob: -15.785235404968262
    6. '   ' → logprob: -16.910236358642578
    7. '"name' → logprob: -17.035236358642578
    8. ''name' → logprob: -17.410236358642578
    9. 'main' → logprob: -18.410236358642578
    10. '('__' → logprob: -18.410236358642578

Token 4034: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1270049661397934
    2. 'main' → logprob: -2.127004861831665
    3. 'name' → logprob: -9.877004623413086
    4. '"' → logprob: -10.877004623413086
    5. ''' → logprob: -12.127004623413086
    6. '_main' → logprob: -14.252004623413086
    7. '__
' → logprob: -15.752004623413086
    8. '___' → logprob: -16.252004623413086
    9. ' main' → logprob: -16.752004623413086
    10. ' __' → logprob: -17.002004623413086

Token 4035: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.008665982633829117
    2. '__' → logprob: -4.758666038513184
    3. '__":
' → logprob: -9.883666038513184
    4. '_' → logprob: -15.633666038513184
    5. '':
' → logprob: -16.258665084838867
    6. '__.' → logprob: -17.508665084838867
    7. '('__' → logprob: -17.633665084838867
    8. '__('' → logprob: -17.758665084838867
    9. '__
' → logprob: -18.008665084838867
    10. '```' → logprob: -18.258665084838867

Token 4036: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.935296834039036e-06
    2. '	main' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.00000286102295
    4. ' main' → logprob: -15.37500286102295
    5. '_main' → logprob: -17.625003814697266
    6. '(main' → logprob: -19.750003814697266
    7. '.main' → logprob: -21.000003814697266
    8. '__' → logprob: -21.375003814697266
    9. '
' → logprob: -21.500003814697266
    10. 'Main' → logprob: -21.875003814697266

Token 4037: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.75
    3. '	main' → logprob: -22.0
    4. '   ' → logprob: -24.25
    5. '_main' → logprob: -25.875
    6. '.main' → logprob: -27.125
    7. '(main' → logprob: -27.375
    8. 'import' → logprob: -29.125
    9. '主' → logprob: -29.875
    10. '__' → logprob: -30.625

Token 4038: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 4036
Tokens correctement prédits (1ère position, stricte): 1643
Tokens correctement prédits (1ère position, avec adaptation): 1919
Tokens correctement prédits (top 10): 3538
Précision stricte (1ère position): 40.71%
Précision adaptée (1ère position): 47.55%
Précision (top 10): 87.66%
================================================================================
