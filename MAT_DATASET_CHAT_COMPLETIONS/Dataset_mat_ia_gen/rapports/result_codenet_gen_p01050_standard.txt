================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S = input()
from collections import Counter
c = Counter(S)
letters = sorted([ch*c[ch] for ch in c if ch.isalpha()])
digits = sorted([ch*c[ch] for ch in c if ch.isdigit()])
s = ''.join(letters)+''.join(digits)
res = 0
i = 0
n = len(s)
while i < n:
    start = s[i]
    j = i+1
    while j < n:
        if start.isalpha() and s[j].isalpha() and ord(s[j])==ord(s[j-1])+1:
            j += 1
        elif start.isdigit() and s[j].isdigit() and int(s[j])==int(s[j-1])+1:
            j += 1
        else:
            break
    length = j - i
    if length >= 3:
        res += 3
    else:
        res += length
    i = j
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013045518659055233
    2. ''' → logprob: -5.013045310974121
    3. '('' → logprob: -5.888045310974121
    4. '()' → logprob: -6.388045310974121
    5. '"' → logprob: -6.888045310974121
    6. '("("' → logprob: -8.138045310974121
    7. '(
' → logprob: -8.638045310974121
    8. '`' → logprob: -8.888045310974121
    9. '```' → logprob: -9.638045310974121
    10. ''''' → logprob: -11.138045310974121

Token 4: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09113486111164093
    2. '[' → logprob: -3.466134786605835
    3. '[::-' → logprob: -3.591134786605835
    4. 'if' → logprob: -4.716135025024414
    5. '.strip' → logprob: -4.841135025024414
    6. '.count' → logprob: -5.966135025024414
    7. 'print' → logprob: -6.091135025024414
    8. '+' → logprob: -6.716135025024414
    9. '.lower' → logprob: -6.966135025024414
    10. '.upper' → logprob: -7.216135025024414

Token 5: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.0929903984069824
    2. ' math' → logprob: -1.3429903984069824
    3. 'collections' → logprob: -1.7179903984069824
    4. ' sys' → logprob: -1.9679903984069824
    5. '_' → logprob: -3.0929903984069824
    6. 'sys' → logprob: -4.592990398406982
    7. ' itertools' → logprob: -4.717990398406982
    8. 'math' → logprob: -4.717990398406982
    9. ' re' → logprob: -5.967990398406982
    10. ' string' → logprob: -6.592990398406982

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6328368186950684
    2. 'import' → logprob: -0.7578368186950684
    3. '.' → logprob: -9.132837295532227
    4. ' Counter' → logprob: -10.507837295532227
    5. '.Counter' → logprob: -10.632837295532227
    6. ' defaultdict' → logprob: -10.757837295532227
    7. ' ' → logprob: -11.507837295532227
    8. '	import' → logprob: -11.757837295532227
    9. 'Counter' → logprob: -12.507837295532227
    10. ' ' → logprob: -12.507837295532227

Token 7: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0808897390961647
    2. ' defaultdict' → logprob: -2.9558897018432617
    3. ' deque' → logprob: -3.9558897018432617
    4. 'default' → logprob: -6.080889701843262
    5. ' Counter' → logprob: -6.205889701843262
    6. 'Counter' → logprob: -6.455889701843262
    7. 'collections' → logprob: -8.205889701843262
    8. 'import' → logprob: -9.080889701843262
    9. 'counter' → logprob: -9.205889701843262
    10. ' counter' → logprob: -9.830889701843262

Token 8: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3726506233215332
    2. 'count' → logprob: -1.6226506233215332
    3. 'counter' → logprob: -2.122650623321533
    4. 'freq' → logprob: -2.372650623321533
    5. '
' → logprob: -2.622650623321533
    6. 'counts' → logprob: -3.122650623321533
    7. '(' → logprob: -3.372650623321533
    8. 's' → logprob: -3.622650623321533
    9. 'result' → logprob: -3.747650623321533
    10. 'frequency' → logprob: -3.872650623321533

Token 9: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.48010575771331787
    2. 'count' → logprob: -1.8551057577133179
    3. 'counts' → logprob: -2.3551058769226074
    4. 'counter' → logprob: -2.9801058769226074
    5. 'freq' → logprob: -3.3551058769226074
    6. 'cnt' → logprob: -3.8551058769226074
    7. 's' → logprob: -4.855105876922607
    8. 'S' → logprob: -5.480105876922607
    9. 'frequency' → logprob: -5.605105876922607
    10. 'C' → logprob: -6.105105876922607

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36536094546318054
    2. ' =' → logprob: -1.990360975265503
    3. 'ounter' → logprob: -2.115360975265503
    4. 'ount' → logprob: -3.240360975265503
    5. 'o' → logprob: -4.990360736846924
    6. 'ounters' → logprob: -6.990360736846924
    7. 't' → logprob: -6.990360736846924
    8. 's' → logprob: -7.990360736846924
    9. 'S' → logprob: -8.740361213684082
    10. '=S' → logprob: -8.865361213684082

Token 11: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.061980124562978745
    2. ' Counter' → logprob: -2.8119800090789795
    3. '.Counter' → logprob: -11.686980247497559
    4. 'C' → logprob: -13.311980247497559
    5. '_counter' → logprob: -14.061980247497559
    6. 'counter' → logprob: -14.561980247497559
    7. 'Counters' → logprob: -14.811980247497559
    8. ' counter' → logprob: -14.936980247497559
    9. '(C' → logprob: -16.186979293823242
    10. 'Count' → logprob: -16.186979293823242

Token 12: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.006727564614266157
    2. '(' → logprob: -5.006727695465088
    3. '(s' → logprob: -11.63172721862793
    4. '()' → logprob: -13.25672721862793
    5. '(
' → logprob: -14.50672721862793
    6. '((' → logprob: -14.75672721862793
    7. ' (' → logprob: -15.75672721862793
    8. '(input' → logprob: -15.75672721862793
    9. 'S' → logprob: -16.50672721862793
    10. 's' → logprob: -17.25672721862793

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. '))' → logprob: -12.625006675720215
    3. '[' → logprob: -13.875006675720215
    4. ' )' → logprob: -14.625006675720215
    5. '`)' → logprob: -14.875006675720215
    6. ')`' → logprob: -14.875006675720215
    7. '(' → logprob: -15.000006675720215
    8. ')
' → logprob: -15.250006675720215
    9. '')' → logprob: -15.625006675720215
    10. 'S' → logprob: -15.750006675720215

Token 14: 'letters' (ID: 38724)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5851035118103027
    2. 'for' → logprob: -1.8351035118103027
    3. '\n' → logprob: -2.7101035118103027
    4. ')' → logprob: -3.2101035118103027
    5. '[' → logprob: -3.3351035118103027
    6. '.' → logprob: -3.3351035118103027
    7. 'm' → logprob: -4.210103511810303
    8. 's' → logprob: -4.335103511810303
    9. 'print' → logprob: -4.585103511810303
    10. 'a' → logprob: -4.710103511810303

Token 15: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015924684703350067
    2. '=' → logprob: -4.640924453735352
    3. ' =' → logprob: -5.390924453735352
    4. '<|end|>' → logprob: -8.015924453735352
    5. ')' → logprob: -8.140924453735352
    6. '_' → logprob: -8.265924453735352
    7. '.keys' → logprob: -9.015924453735352
    8. '(' → logprob: -9.140924453735352
    9. 's' → logprob: -9.515924453735352
    10. '.=' → logprob: -9.640924453735352

Token 16: ' sorted' (ID: 20099)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2653238773345947
    2. 'list' → logprob: -1.2653238773345947
    3. ' list' → logprob: -1.3903238773345947
    4. ' c' → logprob: -2.7653238773345947
    5. '[c' → logprob: -2.7653238773345947
    6. ' [' → logprob: -3.5153238773345947
    7. '[' → logprob: -4.265323638916016
    8. 'sorted' → logprob: -4.765323638916016
    9. '[list' → logprob: -5.640323638916016
    10. ' sorted' → logprob: -5.890323638916016

Token 17: '([' (ID: 5194)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.005971334408968687
    2. '(' → logprob: -5.130971431732178
    3. '(list' → logprob: -10.75597095489502
    4. '((' → logprob: -11.38097095489502
    5. '(S' → logprob: -12.50597095489502
    6. '(C' → logprob: -13.38097095489502
    7. '(s' → logprob: -13.63097095489502
    8. '(count' → logprob: -13.88097095489502
    9. '(
' → logprob: -14.25597095489502
    10. ' (' → logprob: -14.50597095489502

Token 18: 'ch' (ID: 332)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5391184687614441
    2. 'ch' → logprob: -1.2891185283660889
    3. 'c' → logprob: -3.039118528366089
    4. 'x' → logprob: -3.289118528366089
    5. 'char' → logprob: -3.789118528366089
    6. 'key' → logprob: -4.16411828994751
    7. '(k' → logprob: -5.03911828994751
    8. '(ch' → logprob: -5.16411828994751
    9. '(c' → logprob: -5.91411828994751
    10. 'i' → logprob: -7.66411828994751

Token 19: '*c' (ID: 83421)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09829559177160263
    2. 'for' → logprob: -2.4732956886291504
    3. '(' → logprob: -5.34829568862915
    4. '(c' → logprob: -5.59829568862915
    5. ' ' → logprob: -7.59829568862915
    6. '(ch' → logprob: -9.348295211791992
    7. ')' → logprob: -9.973295211791992
    8. ' (' → logprob: -9.973295211791992
    9. 'c' → logprob: -10.223295211791992
    10. ' in' → logprob: -10.973295211791992

Token 20: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -6.12258882028982e-05
    2. 'ch' → logprob: -10.12506103515625
    3. '[c' → logprob: -11.87506103515625
    4. '```' → logprob: -12.12506103515625
    5. '[' → logprob: -12.50006103515625
    6. '(ch' → logprob: -13.50006103515625
    7. ' ch' → logprob: -14.75006103515625
    8. ')' → logprob: -14.75006103515625
    9. 's' → logprob: -15.00006103515625
    10. 'c' → logprob: -15.12506103515625

Token 21: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18739022314548492
    2. 'for' → logprob: -1.8123902082443237
    3. ']' → logprob: -4.937390327453613
    4. ' ' → logprob: -8.687390327453613
    5. ')' → logprob: -8.812390327453613
    6. ' ]' → logprob: -9.812390327453613
    7. '  ' → logprob: -10.937390327453613
    8. 'ch' → logprob: -11.062390327453613
    9. '}' → logprob: -11.812390327453613
    10. '])' → logprob: -12.312390327453613

Token 22: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22558872401714325
    2. 'for' → logprob: -1.6005886793136597
    3. ')' → logprob: -9.10058879852295
    4. '])' → logprob: -10.72558879852295
    5. ' ' → logprob: -10.97558879852295
    6. ']' → logprob: -11.10058879852295
    7. '	for' → logprob: -12.22558879852295
    8. '<|end|>' → logprob: -13.10058879852295
    9. '```' → logprob: -14.60058879852295
    10. ')])' → logprob: -14.97558879852295

Token 23: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.28116467595100403
    2. 'ch' → logprob: -1.4061646461486816
    3. '	ch' → logprob: -12.40616512298584
    4. '<|end|>' → logprob: -13.03116512298584
    5. '[ch' → logprob: -13.28116512298584
    6. '(ch' → logprob: -13.40616512298584
    7. ' ' → logprob: -13.90616512298584
    8. ',ch' → logprob: -13.90616512298584
    9. '<|end|>' → logprob: -14.15616512298584
    10. ' in' → logprob: -14.28116512298584

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0067633334547281265
    2. 'in' → logprob: -5.006763458251953
    3. 's' → logprob: -11.131763458251953
    4. ' ' → logprob: -11.381763458251953
    5. 'c' → logprob: -11.631763458251953
    6. '<|end|>' → logprob: -13.131763458251953
    7. 'n' → logprob: -13.569263458251953
    8. 'ch' → logprob: -13.756763458251953
    9. ',' → logprob: -13.944263458251953
    10. '<|end|>' → logprob: -14.194263458251953

Token 25: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14304448664188385
    2. ' c' → logprob: -2.0180444717407227
    3. 'sorted' → logprob: -8.768044471740723
    4. ' sorted' → logprob: -9.518044471740723
    5. 'range' → logprob: -10.518044471740723
    6. 'list' → logprob: -10.643044471740723
    7. 'S' → logprob: -10.893044471740723
    8. ' ' → logprob: -11.330544471740723
    9. ' range' → logprob: -11.518044471740723
    10. ')c' → logprob: -11.705544471740723

Token 26: ' if' (ID: 538)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000952075351960957
    2. ')' → logprob: -7.125952243804932
    3. ')])' → logprob: -9.500951766967773
    4. ']' → logprob: -10.250951766967773
    5. ' ])' → logprob: -11.625951766967773
    6. '],' → logprob: -11.625951766967773
    7. ')]' → logprob: -12.125951766967773
    8. '])]' → logprob: -12.250951766967773
    9. ']])' → logprob: -12.500951766967773
    10. ''])' → logprob: -13.125951766967773

Token 27: ' ch' (ID: 549)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03704211115837097
    2. 'c' → logprob: -4.037042140960693
    3. ' ch' → logprob: -4.037042140960693
    4. 'ch' → logprob: -7.162042140960693
    5. ' ' → logprob: -9.037041664123535
    6. ' not' → logprob: -10.037041664123535
    7. ' len' → logprob: -10.037041664123535
    8. ')' → logprob: -11.724541664123535
    9. ' '' → logprob: -11.849541664123535
    10. ' (' → logprob: -11.912041664123535

Token 28: '.is' (ID: 3109)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3466041088104248
    2. '.is' → logprob: -1.7216041088104248
    3. '%' → logprob: -2.221604108810425
    4. ' ==' → logprob: -2.471604108810425
    5. ' !=' → logprob: -2.721604108810425
    6. ' in' → logprob: -2.846604108810425
    7. 'is' → logprob: -2.971604108810425
    8. '>' → logprob: -3.346604108810425
    9. ' not' → logprob: -3.846604108810425
    10. ' >' → logprob: -3.971604108810425

Token 29: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.007121442351490259
    2. 'lower' → logprob: -5.007121562957764
    3. 'al' → logprob: -8.507121086120605
    4. 'upper' → logprob: -8.757121086120605
    5. 'ascii' → logprob: -10.757121086120605
    6. 'digit' → logprob: -12.132121086120605
    7. 'a' → logprob: -12.132121086120605
    8. 'print' → logprob: -12.257121086120605
    9. ' alpha' → logprob: -12.882121086120605
    10. 'alphabet' → logprob: -13.257121086120605

Token 30: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0026225047186017036
    2. '])' → logprob: -6.252622604370117
    3. '()],' → logprob: -7.877622604370117
    4. '(' → logprob: -9.002622604370117
    5. '())' → logprob: -9.502622604370117
    6. '()]' → logprob: -10.002622604370117
    7. ')])' → logprob: -10.502622604370117
    8. '()])
' → logprob: -10.502622604370117
    9. ']' → logprob: -12.627622604370117
    10. '()][' → logprob: -12.752622604370117

Token 31: 'digits' (ID: 135574)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19208849966526031
    2. ')' → logprob: -2.6920886039733887
    3. ']' → logprob: -3.3170886039733887
    4. '#' → logprob: -3.9420886039733887
    5. 'output' → logprob: -4.317088603973389
    6. '()' → logprob: -5.567088603973389
    7. 'result' → logprob: -5.567088603973389
    8. '+' → logprob: -5.817088603973389
    9. ''' → logprob: -5.942088603973389
    10. '(' → logprob: -5.942088603973389

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6340108513832092
    2. '=' → logprob: -0.7590108513832092
    3. '+' → logprob: -7.1340107917785645
    4. '+=' → logprob: -8.759011268615723
    5. 's' → logprob: -9.634011268615723
    6. ' +=' → logprob: -9.634011268615723
    7. '_' → logprob: -9.884011268615723
    8. '=[]' → logprob: -10.134011268615723
    9. '_sorted' → logprob: -10.259011268615723
    10. ' +' → logprob: -10.259011268615723

Token 33: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.5903828144073486
    2. '[ch' → logprob: -1.4653828144073486
    3. '[c' → logprob: -1.9653828144073486
    4. ' sorted' → logprob: -2.9653828144073486
    5. '[' → logprob: -4.5903825759887695
    6. ' [' → logprob: -5.4653825759887695
    7. '''.' → logprob: -5.8403825759887695
    8. '[s' → logprob: -5.9653825759887695
    9. '[str' → logprob: -6.7153825759887695
    10. '[int' → logprob: -7.5903825759887695

Token 34: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.009091231040656567
    2. '([(' → logprob: -4.759091377258301
    3. '(' → logprob: -8.8840913772583
    4. '[int' → logprob: -9.3840913772583
    5. '(int' → logprob: -10.0090913772583
    6. '((' → logprob: -10.1340913772583
    7. '[(' → logprob: -10.5090913772583
    8. '(c' → logprob: -10.6340913772583
    9. '(([' → logprob: -10.8840913772583
    10. '(list' → logprob: -10.8840913772583

Token 35: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.03663652017712593
    2. 'd' → logprob: -3.6616365909576416
    3. '(ch' → logprob: -4.7866363525390625
    4. 'int' → logprob: -7.2866363525390625
    5. ' ch' → logprob: -7.9116363525390625
    6. 'str' → logprob: -8.161636352539062
    7. 'digit' → logprob: -8.661636352539062
    8. '[ch' → logprob: -8.661636352539062
    9. '(d' → logprob: -9.161636352539062
    10. 'dig' → logprob: -10.411636352539062

Token 36: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.010499437339603901
    2. '*d' → logprob: -4.760499477386475
    3. '*' → logprob: -6.385499477386475
    4. ' *' → logprob: -9.010499000549316
    5. ' for' → logprob: -10.260499000549316
    6. '**' → logprob: -10.885499000549316
    7. '*s' → logprob: -12.385499000549316
    8. 'for' → logprob: -13.010499000549316
    9. ')*' → logprob: -13.385499000549316
    10. '*num' → logprob: -13.385499000549316

Token 37: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -0.0022153230383992195
    2. '[d' → logprob: -6.127215385437012
    3. '[' → logprob: -11.127215385437012
    4. ' for' → logprob: -12.377215385437012
    5. '[c' → logprob: -12.627215385437012
    6. 'for' → logprob: -13.002215385437012
    7. 'd' → logprob: -13.127215385437012
    8. 'ch' → logprob: -13.877215385437012
    9. '```' → logprob: -14.377215385437012
    10. '[D' → logprob: -14.752215385437012

Token 38: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32535067200660706
    2. ' for' → logprob: -1.8253506422042847
    3. 'for' → logprob: -2.450350761413574
    4. ')' → logprob: -3.950350761413574
    5. '[ch' → logprob: -4.575350761413574
    6. ' ' → logprob: -8.575350761413574
    7. '[' → logprob: -8.700350761413574
    8. '[c' → logprob: -9.825350761413574
    9. ')]' → logprob: -10.075350761413574
    10. 'd' → logprob: -10.325350761413574

Token 39: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6939179301261902
    2. 'for' → logprob: -0.6939179301261902
    3. ')' → logprob: -8.443918228149414
    4. 'd' → logprob: -8.443918228149414
    5. '[ch' → logprob: -8.943918228149414
    6. ' ' → logprob: -9.443918228149414
    7. 'digit' → logprob: -9.818918228149414
    8. '(ch' → logprob: -10.818918228149414
    9. '	for' → logprob: -11.443918228149414
    10. '[d' → logprob: -11.818918228149414

Token 40: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.03374079242348671
    2. 'ch' → logprob: -3.408740758895874
    3. 'd' → logprob: -10.283740997314453
    4. '(ch' → logprob: -10.408740997314453
    5. ' d' → logprob: -10.658740997314453
    6. '[ch' → logprob: -12.158740997314453
    7. '	ch' → logprob: -13.908740997314453
    8. ' ' → logprob: -15.158740997314453
    9. ',ch' → logprob: -15.158740997314453
    10. 'digit' → logprob: -15.783740997314453

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004251931968610734
    2. '[ch' → logprob: -8.125425338745117
    3. ' ' → logprob: -10.125425338745117
    4. 'in' → logprob: -10.375425338745117
    5. 'd' → logprob: -10.500425338745117
    6. 'ch' → logprob: -11.000425338745117
    7. '(ch' → logprob: -12.625425338745117
    8. '[d' → logprob: -13.625425338745117
    9. '  ' → logprob: -13.750425338745117
    10. ' ch' → logprob: -14.000425338745117

Token 42: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00862119346857071
    2. ' c' → logprob: -4.7586212158203125
    3. 'S' → logprob: -12.758621215820312
    4. 'ch' → logprob: -13.883621215820312
    5. '[c' → logprob: -14.508621215820312
    6. ' ' → logprob: -14.633621215820312
    7. 'filter' → logprob: -14.758621215820312
    8. 'd' → logprob: -15.008621215820312
    9. 's' → logprob: -15.758621215820312
    10. ' S' → logprob: -15.883621215820312

Token 43: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02004554495215416
    2. 'if' → logprob: -4.270045757293701
    3. ' in' → logprob: -5.145045757293701
    4. ' ' → logprob: -11.270045280456543
    5. 'd' → logprob: -11.520045280456543
    6. 'isdigit' → logprob: -12.270045280456543
    7. 'in' → logprob: -12.395045280456543
    8. 'digit' → logprob: -13.770045280456543
    9. 'digits' → logprob: -14.020045280456543
    10. ' for' → logprob: -14.395045280456543

Token 44: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.05490146577358246
    2. 'ch' → logprob: -2.929901361465454
    3. '(ch' → logprob: -11.179901123046875
    4. '[ch' → logprob: -13.054901123046875
    5. ' ' → logprob: -13.554901123046875
    6. '	ch' → logprob: -14.554901123046875
    7. ' not' → logprob: -14.554901123046875
    8. 'not' → logprob: -15.554901123046875
    9. ',ch' → logprob: -15.804901123046875
    10. 'c' → logprob: -16.804901123046875

Token 45: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0009542173356749117
    2. '.' → logprob: -7.1259541511535645
    3. 'isdigit' → logprob: -9.750954627990723
    4. '().' → logprob: -9.750954627990723
    5. ' .' → logprob: -10.625954627990723
    6. '.d' → logprob: -13.500954627990723
    7. 's' → logprob: -13.625954627990723
    8. ' is' → logprob: -13.875954627990723
    9. '.ch' → logprob: -14.000954627990723
    10. '.isnan' → logprob: -14.375954627990723

Token 46: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.000340945553034544
    2. 'd' → logprob: -8.500341415405273
    3. 'alpha' → logprob: -9.125341415405273
    4. ' digit' → logprob: -12.000341415405273
    5. 'al' → logprob: -12.125341415405273
    6. '_digit' → logprob: -12.375341415405273
    7. '-digit' → logprob: -12.875341415405273
    8. 'digital' → logprob: -13.000341415405273
    9. 'Digit' → logprob: -13.750341415405273
    10. 'dig' → logprob: -13.875341415405273

Token 47: '()])
' (ID: 141457)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012354481033980846
    2. '()' → logprob: -5.262354373931885
    3. ')])' → logprob: -5.512354373931885
    4. '(ch' → logprob: -6.262354373931885
    5. ']' → logprob: -7.387354373931885
    6. ')' → logprob: -8.637354850769043
    7. ']])' → logprob: -8.762354850769043
    8. '(' → logprob: -9.637354850769043
    9. '])]' → logprob: -9.887354850769043
    10. ']))' → logprob: -11.137354850769043

Token 48: 's' (ID: 82)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08688678592443466
    2. 'result' → logprob: -2.8368868827819824
    3. 'output' → logprob: -4.461886882781982
    4. '[' → logprob: -5.711886882781982
    5. 'if' → logprob: -6.211886882781982
    6. ')' → logprob: -6.586886882781982
    7. 'for' → logprob: -6.711886882781982
    8. '[
' → logprob: -6.711886882781982
    9. ']' → logprob: -7.086886882781982
    10. '```' → logprob: -7.336886882781982

Token 49: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.5277613401412964
    2. 'tr' → logprob: -1.6527613401412964
    3. 'tring' → logprob: -2.027761459350586
    4. '''.' → logprob: -3.152761459350586
    5. ''' → logprob: -4.277761459350586
    6. 'letters' → logprob: -4.527761459350586
    7. '''' → logprob: -5.402761459350586
    8. '"' → logprob: -5.527761459350586
    9. '('' → logprob: -6.027761459350586
    10. ' ''.' → logprob: -6.652761459350586

Token 50: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.19093583524227142
    2. '"' → logprob: -2.3159358501434326
    3. '''' → logprob: -3.4409358501434326
    4. ''' → logprob: -3.8159358501434326
    5. '""' → logprob: -4.1909356117248535
    6. ' ''.' → logprob: -6.0659356117248535
    7. 'letters' → logprob: -6.5659356117248535
    8. ' "".' → logprob: -6.6909356117248535
    9. ''',' → logprob: -8.940936088562012
    10. ''s' → logprob: -9.065936088562012

Token 51: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. 'jo' → logprob: -15.125000953674316
    3. ' join' → logprob: -15.375000953674316
    4. 'concat' → logprob: -15.875000953674316
    5. '.join' → logprob: -16.500001907348633
    6. 'j' → logprob: -16.500001907348633
    7. '(join' → logprob: -16.500001907348633
    8. 'Join' → logprob: -17.125001907348633
    9. '```' → logprob: -17.750001907348633
    10. '''.' → logprob: -18.250001907348633

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008166295476257801
    2. '([' → logprob: -5.258166313171387
    3. '(s' → logprob: -6.508166313171387
    4. '((' → logprob: -6.883166313171387
    5. '(['' → logprob: -9.258166313171387
    6. 'letters' → logprob: -9.258166313171387
    7. '(sorted' → logprob: -10.258166313171387
    8. '([]' → logprob: -10.758166313171387
    9. '(letter' → logprob: -10.758166313171387
    10. '(l' → logprob: -10.883166313171387

Token 53: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.00027492138906382024
    2. 'digits' → logprob: -8.750274658203125
    3. ' letters' → logprob: -9.250274658203125
    4. '[' → logprob: -10.875274658203125
    5. 'letter' → logprob: -15.125274658203125
    6. 'lett' → logprob: -15.375274658203125
    7. '_letters' → logprob: -15.500274658203125
    8. 'let' → logprob: -15.750274658203125
    9. ')' → logprob: -16.125274658203125
    10. ' digits' → logprob: -16.250274658203125

Token 54: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03959815576672554
    2. ')' → logprob: -3.414598226547241
    3. '+s' → logprob: -5.664597988128662
    4. ' +' → logprob: -6.289597988128662
    5. ')+' → logprob: -7.914597988128662
    6. '+)' → logprob: -8.66459846496582
    7. 's' → logprob: -10.41459846496582
    8. '+')' → logprob: -11.03959846496582
    9. ')s' → logprob: -12.41459846496582
    10. '+
' → logprob: -12.41459846496582

Token 55: '''.' (ID: 153150)
  Prédit: '''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0006542971823364496
    2. ' ''.' → logprob: -7.500654220581055
    3. '''' → logprob: -9.250654220581055
    4. '('' → logprob: -12.875654220581055
    5. 'digits' → logprob: -14.000654220581055
    6. '"' → logprob: -15.125654220581055
    7. ' ' → logprob: -15.375654220581055
    8. ''',' → logprob: -15.375654220581055
    9. '   ' → logprob: -15.500654220581055
    10. '```' → logprob: -15.750654220581055

Token 56: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0006604921072721481
    2. ''.' → logprob: -8.12566089630127
    3. '''.' → logprob: -8.25066089630127
    4. '.join' → logprob: -9.50066089630127
    5. 'digits' → logprob: -11.00066089630127
    6. '.' → logprob: -12.25066089630127
    7. 'd' → logprob: -13.25066089630127
    8. ''' → logprob: -13.50066089630127
    9. '''' → logprob: -13.75066089630127
    10. 'joins' → logprob: -14.37566089630127

Token 57: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.004234393127262592
    2. '(' → logprob: -6.129234313964844
    3. '(['' → logprob: -6.379234313964844
    4. '((' → logprob: -9.004234313964844
    5. '([' → logprob: -9.379234313964844
    6. '('' → logprob: -10.004234313964844
    7. '(('' → logprob: -10.254234313964844
    8. '(s' → logprob: -10.254234313964844
    9. '("("' → logprob: -12.004234313964844
    10. '('(' → logprob: -12.004234313964844

Token 58: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -7.226628895296017e-06
    2. 'ig' → logprob: -12.250007629394531
    3. 'igts' → logprob: -13.375007629394531
    4. 'digits' → logprob: -14.750007629394531
    5. 'its' → logprob: -15.500007629394531
    6. 'igit' → logprob: -15.750007629394531
    7. 'igita' → logprob: -17.75000762939453
    8. 'i' → logprob: -18.75000762939453
    9. ' digits' → logprob: -19.12500762939453
    10. 'igi' → logprob: -19.50000762939453

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. '')' → logprob: -13.250006675720215
    3. ')`' → logprob: -13.375006675720215
    4. '`)' → logprob: -13.875006675720215
    5. '))' → logprob: -13.875006675720215
    6. ')
' → logprob: -14.500006675720215
    7. '()' → logprob: -16.3750057220459
    8. ')**' → logprob: -16.5000057220459
    9. ')#' → logprob: -16.5000057220459
    10. ')s' → logprob: -16.7500057220459

Token 60: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.869639476761222e-05
    2. 's' → logprob: -11.125039100646973
    3. '#' → logprob: -12.000039100646973
    4. ')' → logprob: -12.375039100646973
    5. ' print' → logprob: -12.750039100646973
    6. 'for' → logprob: -13.000039100646973
    7. 'p' → logprob: -13.375039100646973
    8. '#print' → logprob: -13.625039100646973
    9. 'pr' → logprob: -13.875039100646973
    10. '```' → logprob: -14.000039100646973

Token 61: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.08112994581460953
    2. 'ults' → logprob: -2.956130027770996
    3. 'u' → logprob: -4.831130027770996
    4. '=' → logprob: -4.956130027770996
    5. ' =' → logprob: -5.831130027770996
    6. 'ULT' → logprob: -6.456130027770996
    7. 'ultat' → logprob: -6.581130027770996
    8. '.' → logprob: -6.706130027770996
    9. 'ault' → logprob: -6.831130027770996
    10. 'ul' → logprob: -7.081130027770996

Token 62: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4000760316848755
    2. ' s' → logprob: -1.6500760316848755
    3. '''' → logprob: -2.525075912475586
    4. ' []' → logprob: -4.150075912475586
    5. ' ''' → logprob: -4.400075912475586
    6. '[]' → logprob: -4.525075912475586
    7. ''s' → logprob: -5.150075912475586
    8. '''.' → logprob: -6.150075912475586
    9. 'sorted' → logprob: -6.400075912475586
    10. ''' → logprob: -6.525075912475586

Token 63: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.045712850987911224
    2. '''.' → logprob: -3.795712947845459
    3. '''' → logprob: -4.795712947845459
    4. 'sorted' → logprob: -5.420712947845459
    5. ''s' → logprob: -5.420712947845459
    6. '[]' → logprob: -6.545712947845459
    7. '[s' → logprob: -7.295712947845459
    8. 'list' → logprob: -7.795712947845459
    9. ''' → logprob: -7.795712947845459
    10. '[' → logprob: -7.920712947845459

Token 64: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08670786023139954
    2. '+' → logprob: -3.961707830429077
    3. '+
' → logprob: -4.086708068847656
    4. ' for' → logprob: -4.211708068847656
    5. '
' → logprob: -4.211708068847656
    6. 'i' → logprob: -4.711708068847656
    7. '*' → logprob: -6.086708068847656
    8. 's' → logprob: -6.211708068847656
    9. '\n' → logprob: -6.836708068847656
    10. '\' → logprob: -7.461708068847656

Token 65: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6611565351486206
    2. '+' → logprob: -0.9111565351486206
    3. '+
' → logprob: -2.78615665435791
    4. 'i' → logprob: -4.78615665435791
    5. '*' → logprob: -5.16115665435791
    6. ' for' → logprob: -6.16115665435791
    7. 'f' → logprob: -7.28615665435791
    8. 'n' → logprob: -7.78615665435791
    9. 's' → logprob: -7.91115665435791
    10. '(' → logprob: -8.28615665435791

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6715088486671448
    2. ' =' → logprob: -1.1715087890625
    3. ' +=' → logprob: -2.5465087890625
    4. '+' → logprob: -2.7965087890625
    5. ' ' → logprob: -3.7965087890625
    6. '+=' → logprob: -4.7965087890625
    7. ' +' → logprob: -5.2965087890625
    8. 'n' → logprob: -6.7965087890625
    9. '<|end|>' → logprob: -6.9215087890625
    10. ' n' → logprob: -8.0465087890625

Token 67: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023560021072626114
    2. ' ' → logprob: -3.773560047149658
    3. '1' → logprob: -8.2735595703125
    4. 'len' → logprob: -10.5235595703125
    5. '2' → logprob: -11.0235595703125
    6. 's' → logprob: -12.2735595703125
    7. ' len' → logprob: -12.3985595703125
    8. '<|end|>' → logprob: -12.6485595703125
    9. 'i' → logprob: -14.3985595703125
    10. '(len' → logprob: -14.5235595703125

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018158364109694958
    2. '1' → logprob: -6.7518157958984375
    3. ' ' → logprob: -7.8768157958984375
    4. 'len' → logprob: -8.376815795898438
    5. '2' → logprob: -11.126815795898438
    6. '-' → logprob: -11.751815795898438
    7. 's' → logprob: -11.876815795898438
    8. ' len' → logprob: -13.876815795898438
    9. '(len' → logprob: -14.001815795898438
    10. '+' → logprob: -14.126815795898438

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39531171321868896
    2. '<|end|>' → logprob: -2.5203118324279785
    3. ' while' → logprob: -2.7703118324279785
    4. ' ' → logprob: -2.7703118324279785
    5. '+' → logprob: -2.8953118324279785
    6. 'while' → logprob: -3.0203118324279785
    7. ' 
' → logprob: -5.0203118324279785
    8. ',' → logprob: -5.7703118324279785
    9. ' ,' → logprob: -6.8953118324279785
    10. 's' → logprob: -7.1453118324279785

Token 70: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12855131924152374
    2. '=' → logprob: -2.1285512447357178
    3. '=len' → logprob: -6.628551483154297
    4. ' ' → logprob: -8.878551483154297
    5. '>' → logprob: -10.378551483154297
    6. 's' → logprob: -10.628551483154297
    7. ' >' → logprob: -10.878551483154297
    8. '<len' → logprob: -11.128551483154297
    9. ' ==' → logprob: -11.378551483154297
    10. '  ' → logprob: -11.503551483154297

Token 72: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03804252669215202
    2. 'len' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.913042068481445
    4. '(len' → logprob: -15.288042068481445
    5. '=len' → logprob: -15.538042068481445
    6. '[len' → logprob: -15.788042068481445
    7. '	len' → logprob: -16.663042068481445
    8. '<len' → logprob: -16.913042068481445
    9. ',len' → logprob: -17.663042068481445
    10. '<|end|>' → logprob: -19.538042068481445

Token 73: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007678175461478531
    2. '(' → logprob: -7.250767707824707
    3. 's' → logprob: -9.875767707824707
    4. '(S' → logprob: -12.000767707824707
    5. '(
' → logprob: -15.875767707824707
    6. '(n' → logprob: -16.875768661499023
    7. ' s' → logprob: -17.625768661499023
    8. ' (' → logprob: -18.000768661499023
    9. '(t' → logprob: -18.250768661499023
    10. 'S' → logprob: -18.375768661499023

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.754368223482743e-05
    2. ')
' → logprob: -10.500067710876465
    3. ')i' → logprob: -10.625067710876465
    4. ' )' → logprob: -11.500067710876465
    5. ')n' → logprob: -13.625067710876465
    6. ')s' → logprob: -13.875067710876465
    7. '')' → logprob: -14.625067710876465
    8. ')-' → logprob: -14.875067710876465
    9. 's' → logprob: -15.250067710876465
    10. ')**' → logprob: -15.625067710876465

Token 75: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4896921217441559
    2. '+' → logprob: -1.4896920919418335
    3. ' ' → logprob: -2.364692211151123
    4. ' while' → logprob: -3.489692211151123
    5. '
' → logprob: -4.739692211151123
    6. '<|end|>' → logprob: -5.114692211151123
    7. ',' → logprob: -5.239692211151123
    8. '```' → logprob: -5.489692211151123
    9. ')' → logprob: -6.364692211151123
    10. '>' → logprob: -6.489692211151123

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018210232257843018
    2. 'i' → logprob: -4.018210411071777
    3. ' n' → logprob: -10.643210411071777
    4. ' ' → logprob: -10.893210411071777
    5. ' s' → logprob: -12.393210411071777
    6. '(i' → logprob: -12.643210411071777
    7. 'n' → logprob: -12.643210411071777
    8. 's' → logprob: -13.268210411071777
    9. '	i' → logprob: -13.393210411071777
    10. ' True' → logprob: -13.643210411071777

Token 77: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05678369104862213
    2. '<' → logprob: -2.931783676147461
    3. ' ' → logprob: -6.431783676147461
    4. '<n' → logprob: -9.431783676147461
    5. ' <=' → logprob: -9.431783676147461
    6. '<len' → logprob: -9.431783676147461
    7. '<=' → logprob: -11.306783676147461
    8. '+' → logprob: -11.431783676147461
    9. ' <
' → logprob: -11.806783676147461
    10. '<size' → logprob: -13.056783676147461

Token 78: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014163628220558167
    2. ' n' → logprob: -4.264163494110107
    3. 'len' → logprob: -16.514163970947266
    4. ')n' → logprob: -17.764163970947266
    5. ' ' → logprob: -18.139163970947266
    6. '	n' → logprob: -18.889163970947266
    7. '
' → logprob: -19.764163970947266
    8. 's' → logprob: -19.889163970947266
    9. '<n' → logprob: -19.889163970947266
    10. ' len' → logprob: -20.264163970947266

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006808568723499775
    2. ' and' → logprob: -5.256808757781982
    3. ':
' → logprob: -6.881808757781982
    4. 'and' → logprob: -7.756808757781982
    5. '+:' → logprob: -10.006808280944824
    6. '+' → logprob: -10.756808280944824
    7. ' :' → logprob: -11.256808280944824
    8. ':**' → logprob: -11.506808280944824
    9. ' ' → logprob: -11.756808280944824
    10. ',' → logprob: -12.131808280944824

Token 80: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5771522521972656
    2. ' j' → logprob: -1.2021522521972656
    3. '   ' → logprob: -2.8271522521972656
    4. ' if' → logprob: -3.3271522521972656
    5. ' ' → logprob: -4.577152252197266
    6. '+' → logprob: -4.577152252197266
    7. 'if' → logprob: -4.827152252197266
    8. 'res' → logprob: -6.202152252197266
    9. ' res' → logprob: -6.327152252197266
    10. '1' → logprob: -6.827152252197266

Token 81: ' start' (ID: 1604)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.33203238248825073
    2. 'if' → logprob: -1.8320324420928955
    3. '   ' → logprob: -2.2070324420928955
    4. 'i' → logprob: -5.457032203674316
    5. 's' → logprob: -6.082032203674316
    6. ' if' → logprob: -6.582032203674316
    7. 'res' → logprob: -7.207032203674316
    8. 'ch' → logprob: -7.207032203674316
    9. 'c' → logprob: -7.582032203674316
    10. ' j' → logprob: -7.707032203674316

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2846602499485016
    2. '=' → logprob: -1.4096602201461792
    3. '=i' → logprob: -6.784660339355469
    4. '   ' → logprob: -7.034660339355469
    5. '_char' → logprob: -7.159660339355469
    6. '_idx' → logprob: -9.034660339355469
    7. '=end' → logprob: -9.159660339355469
    8. ',' → logprob: -9.659660339355469
    9. '=start' → logprob: -9.909660339355469
    10. '=len' → logprob: -10.159660339355469

Token 83: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014765332452952862
    2. '   ' → logprob: -6.751476764678955
    3. ' i' → logprob: -8.251476287841797
    4. 's' → logprob: -10.126476287841797
    5. '0' → logprob: -13.001476287841797
    6. '  ' → logprob: -14.501476287841797
    7. ' ' → logprob: -14.501476287841797
    8. '(i' → logprob: -15.251476287841797
    9. '	i' → logprob: -15.251476287841797
    10. ' s' → logprob: -15.501476287841797

Token 84: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -16.25
    3. '   ' → logprob: -16.375
    4. '[index' → logprob: -16.75
    5. '[' → logprob: -17.375
    6. '[start' → logprob: -17.875
    7. '[I' → logprob: -18.0
    8. '[int' → logprob: -18.25
    9. '[j' → logprob: -18.75
    10. 'index' → logprob: -19.0

Token 85: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.036501701921224594
    2. ']
' → logprob: -3.66150164604187
    3. ')' → logprob: -5.911501884460449
    4. ']+' → logprob: -6.661501884460449
    5. '+' → logprob: -6.786501884460449
    6. '])' → logprob: -6.911501884460449
    7. '   ' → logprob: -7.286501884460449
    8. ':i' → logprob: -7.286501884460449
    9. ')]' → logprob: -7.786501884460449
    10. ']==' → logprob: -8.03650188446045

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2993403971195221
    2. 'i' → logprob: -1.9243403673171997
    3. ' i' → logprob: -3.1743404865264893
    4. ' if' → logprob: -3.4243404865264893
    5. 'if' → logprob: -4.29934024810791
    6. 'j' → logprob: -4.79934024810791
    7. ',' → logprob: -5.67434024810791
    8. 'count' → logprob: -5.67434024810791
    9. '  ' → logprob: -6.42434024810791
    10. 'n' → logprob: -7.29934024810791

Token 87: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.7540229558944702
    2. 'count' → logprob: -0.8790229558944702
    3. '   ' → logprob: -3.1290230751037598
    4. 'cnt' → logprob: -3.5040230751037598
    5. 'length' → logprob: -4.00402307510376
    6. 'i' → logprob: -4.37902307510376
    7. ' j' → logprob: -5.87902307510376
    8. ' count' → logprob: -6.12902307510376
    9. 'if' → logprob: -7.00402307510376
    10. 'end' → logprob: -7.00402307510376

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03028182126581669
    2. '=' → logprob: -3.6552817821502686
    3. '=i' → logprob: -5.530282020568848
    4. '<|end|>' → logprob: -12.655282020568848
    5. 'i' → logprob: -12.780282020568848
    6. '=int' → logprob: -14.655282020568848
    7. '<|end|>' → logprob: -14.905282020568848
    8. ' ' → logprob: -14.905282020568848
    9. '   ' → logprob: -15.030282020568848
    10. ' i' → logprob: -15.405282020568848

Token 89: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.474081814289093
    2. ' i' → logprob: -0.974081814289093
    3. '   ' → logprob: -13.349081993103027
    4. ' ' → logprob: -13.474081993103027
    5. '	i' → logprob: -13.599081993103027
    6. '0' → logprob: -15.599081993103027
    7. '  ' → logprob: -16.47408103942871
    8. '(i' → logprob: -16.47408103942871
    9. ',i' → logprob: -16.84908103942871
    10. '    ' → logprob: -17.09908103942871

Token 90: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0054071154445409775
    2. ' +' → logprob: -5.380407333374023
    3. '<|end|>' → logprob: -7.255407333374023
    4. '<|end|>' → logprob: -9.505407333374023
    5. '+j' → logprob: -13.005407333374023
    6. '+
' → logprob: -14.130407333374023
    7. '+++' → logprob: -14.755407333374023
    8. '+i' → logprob: -14.755407333374023
    9. '
' → logprob: -14.755407333374023
    10. '1' → logprob: -15.005407333374023

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -16.000032424926758
    4. '0' → logprob: -16.125032424926758
    5. '<|end|>' → logprob: -16.750032424926758
    6. '2' → logprob: -17.500032424926758
    7. '   ' → logprob: -17.687532424926758
    8. '+' → logprob: -18.000032424926758
    9. '  ' → logprob: -18.437532424926758
    10. '
' → logprob: -18.500032424926758

Token 92: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2014387845993042
    2. ' j' → logprob: -1.7014387845993042
    3. ' ' → logprob: -11.451438903808594
    4. ' s' → logprob: -12.076438903808594
    5. 's' → logprob: -12.201438903808594
    6. '   ' → logprob: -13.201438903808594
    7. 'n' → logprob: -14.576438903808594
    8. '	j' → logprob: -14.826438903808594
    9. ' n' → logprob: -15.076438903808594
    10. ' ' → logprob: -15.451438903808594

Token 96: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.35073092579841614
    2. '<n' → logprob: -1.8507308959960938
    3. '<' → logprob: -1.9757308959960938
    4. '<len' → logprob: -10.600730895996094
    5. 'n' → logprob: -12.225730895996094
    6. ' <=' → logprob: -12.350730895996094
    7. '<=' → logprob: -12.475730895996094
    8. '<num' → logprob: -13.600730895996094
    9. ' ' → logprob: -13.975730895996094
    10. '<|end|>' → logprob: -14.350730895996094

Token 97: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019287518225610256
    2. ' n' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.001928329467773
    4. ' ' → logprob: -17.626928329467773
    5. '	n' → logprob: -18.626928329467773
    6. ')n' → logprob: -19.001928329467773
    7. '
' → logprob: -19.251928329467773
    8. ',n' → logprob: -19.251928329467773
    9. '```' → logprob: -19.626928329467773
    10. '<n' → logprob: -20.376928329467773

Token 98: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804194927215576
    2. 'and' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.538042068481445
    4. '   ' → logprob: -18.663042068481445
    5. '	and' → logprob: -19.163042068481445
    6. '<|end|>' → logprob: -19.288042068481445
    7. ' и' → logprob: -19.413042068481445
    8. '```' → logprob: -19.413042068481445
    9. ' ' → logprob: -19.538042068481445
    10. ')' → logprob: -19.538042068481445

Token 99: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03377317264676094
    2. 'and' → logprob: -3.408773183822632
    3. ' ' → logprob: -9.908773422241211
    4. '   ' → logprob: -10.533773422241211
    5. '       ' → logprob: -10.658773422241211
    6. '<|end|>' → logprob: -11.033773422241211
    7. ' if' → logprob: -12.533773422241211
    8. '    ' → logprob: -12.658773422241211
    9. 'if' → logprob: -14.033773422241211
    10. '<|end|>' → logprob: -14.283773422241211

Token 100: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1279972791671753
    2. 'and' → logprob: -2.502997398376465
    3. ' if' → logprob: -3.627997398376465
    4. 'if' (adapté à ' if') → logprob: -4.877997398376465
    5. ' ' → logprob: -5.752997398376465
    6. '       ' → logprob: -8.002997398376465
    7. '<|end|>' → logprob: -8.627997398376465
    8. '        ' → logprob: -8.877997398376465
    9. '    ' → logprob: -9.377997398376465
    10. '   ' → logprob: -9.877997398376465

Token 101: ' start' (ID: 1604)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5760172605514526
    2. 's' → logprob: -0.8260172605514526
    3. 'start' → logprob: -9.826017379760742
    4. ' start' → logprob: -11.951017379760742
    5. 'j' → logprob: -12.701017379760742
    6. 'abs' → logprob: -12.826017379760742
    7. ' ' → logprob: -13.076017379760742
    8. '   ' → logprob: -13.451017379760742
    9. '           ' → logprob: -14.138517379760742
    10. '
' → logprob: -14.201017379760742

Token 102: '.is' (ID: 3109)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2707245945930481
    2. '!=' → logprob: -1.7707245349884033
    3. ' ==' → logprob: -3.0207245349884033
    4. ' !=' → logprob: -4.395724773406982
    5. '>=' → logprob: -6.270724773406982
    6. '<' → logprob: -6.770724773406982
    7. '>' → logprob: -6.770724773406982
    8. '+' → logprob: -7.145724773406982
    9. '<=' → logprob: -8.520724296569824
    10. ' >=' → logprob: -8.895724296569824

Token 103: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.3755369484424591
    2. 'lower' → logprob: -1.5005369186401367
    3. 'digit' → logprob: -2.7505369186401367
    4. 'upper' → logprob: -3.7505369186401367
    5. 'al' → logprob: -6.125536918640137
    6. 'decimal' → logprob: -8.500536918640137
    7. 'numeric' → logprob: -9.250536918640137
    8. 'start' → logprob: -9.625536918640137
    9. 'ascii' → logprob: -11.125536918640137
    10. 'a' → logprob: -11.125536918640137

Token 104: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011412883177399635
    2. '():' → logprob: -7.25114107131958
    3. '()==' → logprob: -8.751141548156738
    4. 'and' → logprob: -9.001141548156738
    5. '():
' → logprob: -9.751141548156738
    6. ' and' → logprob: -10.001141548156738
    7. '()!=' → logprob: -10.376141548156738
    8. '(' → logprob: -12.501141548156738
    9. '()>' → logprob: -12.626141548156738
    10. ')' → logprob: -13.751141548156738

Token 105: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3148058354854584
    2. 'and' → logprob: -2.064805746078491
    3. '==' → logprob: -2.189805746078491
    4. '!=' → logprob: -3.814805746078491
    5. ' ==' → logprob: -5.06480598449707
    6. ' !=' → logprob: -6.06480598449707
    7. ' or' → logprob: -8.31480598449707
    8. ' ' → logprob: -9.06480598449707
    9. '>' → logprob: -9.68980598449707
    10. 'or' → logprob: -10.31480598449707

Token 106: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6671074032783508
    2. ' s' → logprob: -0.7921074032783508
    3. ' not' → logprob: -3.792107343673706
    4. 'not' → logprob: -4.917107582092285
    5. 'start' → logprob: -6.792107582092285
    6. '(s' → logprob: -6.917107582092285
    7. ' (' → logprob: -7.292107582092285
    8. ' start' → logprob: -8.167107582092285
    9. 'j' → logprob: -8.167107582092285
    10. ' j' → logprob: -8.292107582092285

Token 107: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.981667537620524e-06
    2. '[i' → logprob: -13.250001907348633
    3. 'j' → logprob: -16.125001907348633
    4. '[' → logprob: -16.625001907348633
    5. '```' → logprob: -17.250001907348633
    6. ' [' → logprob: -18.625001907348633
    7. '[
' → logprob: -19.000001907348633
    8. '[start' → logprob: -19.625001907348633
    9. '[s' → logprob: -19.750001907348633
    10. ' j' → logprob: -20.000001907348633

Token 108: '].' (ID: 1651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3517005443572998
    2. '.is' → logprob: -1.8517005443572998
    3. ' ==' → logprob: -2.1017005443573
    4. '!=' → logprob: -5.351700782775879
    5. 'is' → logprob: -5.476700782775879
    6. '.' → logprob: -5.601700782775879
    7. ' !=' → logprob: -6.851700782775879
    8. '>' → logprob: -7.101700782775879
    9. ']==' → logprob: -7.476700782775879
    10. '[' → logprob: -7.726700782775879

Token 109: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0046503725461661816
    2. 'isl' → logprob: -6.129650592803955
    3. 'isdigit' → logprob: -6.379650592803955
    4. 'isal' → logprob: -8.254650115966797
    5. '.is' → logprob: -9.004650115966797
    6. 'startswith' → logprob: -9.254650115966797
    7. 'start' → logprob: -9.504650115966797
    8. 'isas' → logprob: -9.754650115966797
    9. ' is' → logprob: -10.129650115966797
    10. 'ist' → logprob: -10.379650115966797

Token 110: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.0046877493150532246
    2. 'lower' → logprob: -6.004687786102295
    3. 'start' → logprob: -6.504687786102295
    4. 'al' → logprob: -8.379687309265137
    5. 'digit' → logprob: -8.879687309265137
    6. 'a' → logprob: -9.379687309265137
    7. 'upper' → logprob: -10.254687309265137
    8. 's' → logprob: -10.379687309265137
    9. '=start' → logprob: -10.629687309265137
    10. '.alpha' → logprob: -11.129687309265137

Token 111: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008973798714578152
    2. '():' → logprob: -4.758973598480225
    3. '():
' → logprob: -8.133974075317383
    4. '()==' → logprob: -10.758974075317383
    5. '())' → logprob: -10.883974075317383
    6. '()]' → logprob: -11.883974075317383
    7. 'and' → logprob: -11.883974075317383
    8. '(' → logprob: -13.258974075317383
    9. '()>' → logprob: -13.383974075317383
    10. ' and' → logprob: -13.508974075317383

Token 112: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008792662061750889
    2. 'and' → logprob: -4.758792877197266
    3. ' ' → logprob: -9.758792877197266
    4. '    ' → logprob: -10.133792877197266
    5. '==' → logprob: -10.883792877197266
    6. '   ' → logprob: -11.008792877197266
    7. ' ==' → logprob: -11.258792877197266
    8. ' or' → logprob: -11.383792877197266
    9. '       ' → logprob: -11.633792877197266
    10. '        ' → logprob: -12.133792877197266

Token 113: ' ord' (ID: 6608)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07958744466304779
    2. 's' → logprob: -2.579587459564209
    3. ' start' → logprob: -8.20458698272705
    4. 'start' → logprob: -8.57958698272705
    5. ' ord' → logprob: -9.32958698272705
    6. 'ord' → logprob: -10.07958698272705
    7. ' ' → logprob: -10.70458698272705
    8. ' (' → logprob: -11.07958698272705
    9. ' abs' → logprob: -11.51708698272705
    10. ' j' → logprob: -11.70458698272705

Token 114: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.492120155598968e-05
    2. '(' → logprob: -9.875064849853516
    3. 's' → logprob: -11.500064849853516
    4. '(start' → logprob: -12.875064849853516
    5. '(j' → logprob: -14.875064849853516
    6. ' (' → logprob: -15.625064849853516
    7. '((' → logprob: -17.375064849853516
    8. '(ord' → logprob: -18.000064849853516
    9. '([' → logprob: -18.375064849853516
    10. '()' → logprob: -18.625064849853516

Token 115: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.2729995988775045e-06
    2. '[start' → logprob: -12.250006675720215
    3. '[i' → logprob: -14.250006675720215
    4. '[s' → logprob: -14.500006675720215
    5. '[' → logprob: -15.875006675720215
    6. 'j' → logprob: -16.5000057220459
    7. ')' → logprob: -16.5000057220459
    8. ')[' → logprob: -17.1250057220459
    9. ' [' → logprob: -17.6250057220459
    10. '```' → logprob: -17.7500057220459

Token 116: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040989235043525696
    2. '])' → logprob: -4.040989398956299
    3. ' )' → logprob: -4.040989398956299
    4. '[' → logprob: -6.540989398956299
    5. '[i' → logprob: -7.040989398956299
    6. ')-' → logprob: -7.540989398956299
    7. '[j' → logprob: -8.16598892211914
    8. ']' → logprob: -8.54098892211914
    9. '`)' → logprob: -8.66598892211914
    10. ')==' → logprob: -8.91598892211914

Token 117: '==' (ID: 560)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.612827479839325
    2. ' -' → logprob: -1.6128275394439697
    3. '==' → logprob: -1.9878275394439697
    4. ' ==' → logprob: -3.1128275394439697
    5. '>' → logprob: -3.3628275394439697
    6. '<' → logprob: -3.7378275394439697
    7. '<=' → logprob: -4.737827301025391
    8. ' >' → logprob: -5.487827301025391
    9. ' <=' → logprob: -5.862827301025391
    10. ' <' → logprob: -5.987827301025391

Token 118: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0015245062531903386
    2. ' ord' → logprob: -6.501524448394775
    3. '(ord' → logprob: -10.751524925231934
    4. '   ' → logprob: -14.126524925231934
    5. 'ords' → logprob: -16.876523971557617
    6. ' ' → logprob: -17.751523971557617
    7. 'ordin' → logprob: -18.376523971557617
    8. '  ' → logprob: -18.876523971557617
    9. 'ordinal' → logprob: -19.001523971557617
    10. 'orm' → logprob: -19.501523971557617

Token 119: '(s' (ID: 1858)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0025003906339406967
    2. '(s' → logprob: -6.252500534057617
    3. 'start' → logprob: -7.502500534057617
    4. 's' → logprob: -11.127500534057617
    5. '(' → logprob: -12.252500534057617
    6. '[start' → logprob: -15.252500534057617
    7. ' (' → logprob: -15.752500534057617
    8. ' start' → logprob: -17.127500534057617
    9. ',start' → logprob: -17.627500534057617
    10. '=start' → logprob: -17.752500534057617

Token 120: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002321533625945449
    2. '-' → logprob: -6.252321720123291
    3. '[i' → logprob: -8.752321243286133
    4. 'j' → logprob: -9.627321243286133
    5. '[' → logprob: -9.752321243286133
    6. ')' → logprob: -10.377321243286133
    7. ' -' → logprob: -11.002321243286133
    8. '   ' → logprob: -11.252321243286133
    9. ']' → logprob: -11.377321243286133
    10. ' ' → logprob: -11.502321243286133

Token 121: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003185436362400651
    2. '])' → logprob: -6.503185272216797
    3. '])-' → logprob: -6.878185272216797
    4. '[j' → logprob: -8.003185272216797
    5. ' -' → logprob: -9.128185272216797
    6. ']-' → logprob: -9.503185272216797
    7. 'j' → logprob: -10.253185272216797
    8. '[i' → logprob: -10.253185272216797
    9. 'i' → logprob: -10.878185272216797
    10. '[-' → logprob: -11.753185272216797

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009951756801456213
    2. ']' → logprob: -7.62599515914917
    3. ']+' → logprob: -8.375995635986328
    4. '])' → logprob: -9.250995635986328
    5. '-' → logprob: -9.875995635986328
    6. '])-' → logprob: -10.000995635986328
    7. ']-' → logprob: -10.625995635986328
    8. ' ' → logprob: -11.125995635986328
    9. '```' → logprob: -11.250995635986328
    10. 'i' → logprob: -11.250995635986328

Token 123: '])+' (ID: 119485)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.038353580981492996
    2. ')' → logprob: -3.288353681564331
    3. ']+' → logprob: -8.41335391998291
    4. '")+' → logprob: -10.53835391998291
    5. '+' → logprob: -11.03835391998291
    6. ' )' → logprob: -11.91335391998291
    7. '}+' → logprob: -12.03835391998291
    8. '])+' → logprob: -12.03835391998291
    9. '))+' → logprob: -12.28835391998291
    10. ')+(' → logprob: -12.53835391998291

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.016616291366518e-05
    2. ' ' → logprob: -9.625070571899414
    3. '   ' → logprob: -13.250070571899414
    4. '<|end|>' → logprob: -14.000070571899414
    5. '<|end|>' → logprob: -15.125070571899414
    6. '```' → logprob: -15.750070571899414
    7. '  ' → logprob: -16.437570571899414
    8. '.' → logprob: -16.562570571899414
    9. '2' → logprob: -16.625070571899414
    10. '...' → logprob: -16.687570571899414

Token 125: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.701103925704956
    2. ':' → logprob: -0.826103925704956
    3. '       ' → logprob: -3.076103925704956
    4. ' and' → logprob: -4.701104164123535
    5. '):
' → logprob: -5.076104164123535
    6. 'and' → logprob: -7.201104164123535
    7. '   ' → logprob: -7.201104164123535
    8. '):' → logprob: -7.326104164123535
    9. ':j' → logprob: -7.451104164123535
    10. '           ' → logprob: -7.701104164123535

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01674489676952362
    2. '       ' → logprob: -4.266745090484619
    3. '               ' → logprob: -6.766745090484619
    4. ' j' → logprob: -8.266744613647461
    5. '
' → logprob: -8.391744613647461
    6. 'j' → logprob: -8.641744613647461
    7. ',' → logprob: -8.641744613647461
    8. '            
' → logprob: -8.891744613647461
    9. ':
' → logprob: -9.641744613647461
    10. '	       ' → logprob: -9.766744613647461

Token 127: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.04976708069443703
    2. ' j' → logprob: -3.049767017364502
    3. '               ' → logprob: -7.174767017364502
    4. '           ' → logprob: -8.17476749420166
    5. '	j' → logprob: -9.29976749420166
    6. '       ' → logprob: -10.92476749420166
    7. '   ' → logprob: -11.17476749420166
    8. '            ' → logprob: -13.29976749420166
    9. '                   ' → logprob: -13.79976749420166
    10. ',j' → logprob: -13.92476749420166

Token 128: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0010605561546981335
    2. ' +=' → logprob: -7.126060485839844
    3. '+' → logprob: -8.376060485839844
    4. '=' → logprob: -11.001060485839844
    5. ']+=' → logprob: -12.126060485839844
    6. '++' → logprob: -13.001060485839844
    7. '+='' → logprob: -14.376060485839844
    8. '```' → logprob: -15.251060485839844
    9. ')' → logprob: -15.751060485839844
    10. '+="' → logprob: -15.876060485839844

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.500024795532227
    4. '```' → logprob: -17.500024795532227
    5. '  ' → logprob: -19.500024795532227
    6. '<|end|>' → logprob: -20.375024795532227
    7. '۱' → logprob: -21.062524795532227
    8. '１' → logprob: -21.125024795532227
    9. ' ' → logprob: -21.187524795532227
    10. '
' → logprob: -21.187524795532227

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -18.0000057220459
    4. '   ' → logprob: -18.5000057220459
    5. '0' → logprob: -19.3125057220459
    6. '
' → logprob: -19.8125057220459
    7. '<|end|>' → logprob: -20.0625057220459
    8. '  ' → logprob: -20.1250057220459
    9. '۱' → logprob: -20.4375057220459
    10. '１' → logprob: -20.6250057220459

Token 131: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5331353545188904
    2. 'else' → logprob: -1.4081354141235352
    3. ' else' → logprob: -1.7831354141235352
    4. 'elif' → logprob: -7.783135414123535
    5. ' elif' → logprob: -9.908135414123535
    6. '               ' → logprob: -11.158135414123535
    7. '   ' → logprob: -11.658135414123535
    8. '<|end|>' → logprob: -11.783135414123535
    9. '```' → logprob: -12.033135414123535
    10. '	else' → logprob: -12.033135414123535

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13812492787837982
    2. 'else' → logprob: -2.263124942779541
    3. ' else' → logprob: -3.763124942779541
    4. 'elif' → logprob: -6.763124942779541
    5. '
' → logprob: -7.888124942779541
    6. '<|end|>' → logprob: -9.638124465942383
    7. ' elif' → logprob: -10.263124465942383
    8. '```' → logprob: -10.388124465942383
    9. ')' → logprob: -10.638124465942383
    10. '#else' → logprob: -11.138124465942383

Token 133: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09711868315935135
    2. ' else' → logprob: -2.597118616104126
    3. 'elif' (adapté à ' elif') → logprob: -4.597118854522705
    4. '       ' → logprob: -4.847118854522705
    5. ' elif' → logprob: -8.972118377685547
    6. '   ' → logprob: -13.222118377685547
    7. '	else' → logprob: -13.847118377685547
    8. '           ' → logprob: -14.472118377685547
    9. '      ' → logprob: -15.097118377685547
    10. '        ' → logprob: -15.597118377685547

Token 134: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.1866130530834198
    2. 'start' → logprob: -1.8116130828857422
    3. ' not' → logprob: -5.061613082885742
    4. 'not' → logprob: -8.061613082885742
    5. ' s' → logprob: -8.936613082885742
    6. 's' → logprob: -10.686613082885742
    7. ' ' → logprob: -10.936613082885742
    8. ' ' → logprob: -12.561613082885742
    9. '(start' → logprob: -12.811613082885742
    10. ' False' → logprob: -12.936613082885742

Token 135: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.002496706321835518
    2. '.' → logprob: -6.002496719360352
    3. '==' → logprob: -11.252496719360352
    4. ' .' → logprob: -12.127496719360352
    5. ' ==' → logprob: -13.377496719360352
    6. 'is' → logprob: -15.002496719360352
    7. '.startswith' → logprob: -15.627496719360352
    8. '   ' → logprob: -16.00249671936035
    9. '.isnan' → logprob: -16.00249671936035
    10. ' ' → logprob: -16.37749671936035

Token 136: 'digit' (ID: 78327)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -4.537180211627856e-05
    2. 'is' → logprob: -10.875045776367188
    3. 's' → logprob: -11.750045776367188
    4. 'a' → logprob: -12.625045776367188
    5. 'start' → logprob: -12.625045776367188
    6. ' alpha' → logprob: -12.875045776367188
    7. '_alpha' → logprob: -13.000045776367188
    8. '.alpha' → logprob: -13.375045776367188
    9. 'i' → logprob: -13.625045776367188
    10. 'al' → logprob: -13.750045776367188

Token 137: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3856492842023727e-06
    2. 'and' → logprob: -13.750000953674316
    3. ')' → logprob: -15.625000953674316
    4. ' and' → logprob: -17.500001907348633
    5. '()
' → logprob: -17.875001907348633
    6. ' ()' → logprob: -18.000001907348633
    7. '()==' → logprob: -18.250001907348633
    8. '```' → logprob: -18.750001907348633
    9. '()`' → logprob: -19.000001907348633
    10. ']' → logprob: -19.750001907348633

Token 138: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519296407699585
    2. 'and' → logprob: -1.5019296407699585
    3. ' ' → logprob: -14.50192928314209
    4. '==' → logprob: -17.251930236816406
    5. '&&' → logprob: -17.251930236816406
    6. ' &&' → logprob: -17.876930236816406
    7. ' ' → logprob: -18.251930236816406
    8. 'elif' → logprob: -18.376930236816406
    9. '	and' → logprob: -18.751930236816406
    10. 'is' → logprob: -19.001930236816406

Token 139: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.693192720413208
    2. ' s' → logprob: -0.693192720413208
    3. 'int' → logprob: -11.443192481994629
    4. ' ' → logprob: -12.068192481994629
    5. 'ord' → logprob: -12.068192481994629
    6. 'isdigit' → logprob: -12.318192481994629
    7. 'j' → logprob: -12.880692481994629
    8. ' ' → logprob: -13.068192481994629
    9. ' ord' → logprob: -13.130692481994629
    10. ''s' → logprob: -13.380692481994629

Token 140: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.088346359931165e-07
    2. '[i' → logprob: -14.750000953674316
    3. '[' → logprob: -15.250000953674316
    4. 'j' → logprob: -16.125
    5. '```' → logprob: -16.875
    6. '[
' → logprob: -17.25
    7. 'isdigit' → logprob: -17.5
    8. '   ' → logprob: -18.75
    9. '
' → logprob: -19.0
    10. 'digit' → logprob: -19.25

Token 141: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.005926070269197226
    2. ').' → logprob: -5.380926132202148
    3. '.' → logprob: -7.005926132202148
    4. '].' → logprob: -8.380926132202148
    5. ' .' → logprob: -9.630926132202148
    6. '().' → logprob: -10.005926132202148
    7. 'isdigit' → logprob: -11.005926132202148
    8. '[j' → logprob: -11.255926132202148
    9. '   ' → logprob: -11.380926132202148
    10. '```' → logprob: -12.505926132202148

Token 142: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.003631788771599531
    2. 'is' → logprob: -5.628631591796875
    3. ' is' → logprob: -11.503631591796875
    4. 'isd' → logprob: -11.753631591796875
    5. 'isal' → logprob: -12.003631591796875
    6. '.is' → logprob: -12.628631591796875
    7. '```' → logprob: -13.378631591796875
    8. 'isl' → logprob: -14.003631591796875
    9. 's' → logprob: -14.503631591796875
    10. 'j' → logprob: -14.753631591796875

Token 143: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.490809417096898e-05
    2. '()==' → logprob: -9.875055313110352
    3. 'and' → logprob: -12.875055313110352
    4. ' and' → logprob: -14.500055313110352
    5. ' ()' → logprob: -16.50005531311035
    6. ')' → logprob: -16.62505531311035
    7. '()+' → logprob: -16.87505531311035
    8. '```' → logprob: -17.25005531311035
    9. '   ' → logprob: -17.37505531311035
    10. '==' → logprob: -17.62505531311035

Token 144: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740907549858093
    2. 'and' → logprob: -0.9740907549858093
    3. '==' → logprob: -11.474090576171875
    4. ' ' → logprob: -14.099090576171875
    5. ')' → logprob: -14.474090576171875
    6. '   ' → logprob: -15.099090576171875
    7. ' ==' → logprob: -15.224090576171875
    8. '&&' → logprob: -15.224090576171875
    9. '```' → logprob: -15.474090576171875
    10. '    ' → logprob: -15.724090576171875

Token 145: ' int' (ID: 677)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.16018563508987427
    2. 'int' → logprob: -2.0351855754852295
    3. ' ord' → logprob: -4.285185813903809
    4. '(ord' → logprob: -6.035185813903809
    5. ' int' → logprob: -6.785185813903809
    6. '(int' → logprob: -10.160185813903809
    7. ' (' → logprob: -11.785185813903809
    8. 's' → logprob: -12.910185813903809
    9. 'chr' → logprob: -12.910185813903809
    10. '   ' → logprob: -13.035185813903809

Token 146: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00014942926645744592
    2. 's' → logprob: -9.000149726867676
    3. '(start' → logprob: -10.750149726867676
    4. '(' → logprob: -12.875149726867676
    5. 'start' → logprob: -13.375149726867676
    6. '(
' → logprob: -16.87514877319336
    7. '((' → logprob: -17.25014877319336
    8. '(ord' → logprob: -17.25014877319336
    9. '`s' → logprob: -17.37514877319336
    10. '(j' → logprob: -17.37514877319336

Token 147: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.790129555156454e-05
    2. 's' → logprob: -9.750067710876465
    3. '[s' → logprob: -12.250067710876465
    4. '[i' → logprob: -12.375067710876465
    5. '[' → logprob: -15.375067710876465
    6. '```' → logprob: -15.625067710876465
    7. 'j' → logprob: -16.25006866455078
    8. '[start' → logprob: -16.87506866455078
    9. '{s' → logprob: -18.25006866455078
    10. '[
' → logprob: -18.75006866455078

Token 148: '])' (ID: 4636)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.4754806458950043
    2. ')' → logprob: -0.9754806756973267
    3. ')-' → logprob: -6.850480556488037
    4. '())' → logprob: -9.350481033325195
    5. ']==' → logprob: -9.350481033325195
    6. ')+' → logprob: -9.725481033325195
    7. '')' → logprob: -10.600481033325195
    8. '[j' → logprob: -11.100481033325195
    9. '）' → logprob: -11.225481033325195
    10. '==' → logprob: -11.225481033325195

Token 149: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0002788551209960133
    2. ' ==' → logprob: -8.75027847290039
    3. ')==' → logprob: -10.00027847290039
    4. ']==' → logprob: -10.75027847290039
    5. '=int' → logprob: -11.00027847290039
    6. '==
' → logprob: -11.25027847290039
    7. '=' → logprob: -12.00027847290039
    8. '()==' → logprob: -12.12527847290039
    9. '==(' → logprob: -12.25027847290039
    10. 'int' → logprob: -12.50027847290039

Token 150: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.2200749754119897e-06
    2. ' int' → logprob: -13.125001907348633
    3. '(int' → logprob: -16.000001907348633
    4. '1' → logprob: -17.750001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '  ' → logprob: -19.000001907348633
    7. '<int' → logprob: -19.500001907348633
    8. '=int' → logprob: -19.500001907348633
    9. '[int' → logprob: -19.625001907348633
    10. ' ' → logprob: -19.875001907348633

Token 151: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00038384052459150553
    2. 's' → logprob: -7.8753838539123535
    3. '(' → logprob: -12.625383377075195
    4. ' (' → logprob: -15.250383377075195
    5. ' s' → logprob: -16.000383377075195
    6. ' ' → logprob: -17.125383377075195
    7. ')s' → logprob: -18.250383377075195
    8. '[s' → logprob: -18.375383377075195
    9. '(
' → logprob: -18.500383377075195
    10. '`s' → logprob: -18.750383377075195

Token 152: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.180258191714529e-06
    2. '-' → logprob: -12.000008583068848
    3. '[i' → logprob: -14.000008583068848
    4. 's' → logprob: -14.375008583068848
    5. '[' → logprob: -14.500008583068848
    6. '[s' → logprob: -16.75000762939453
    7. '[-' → logprob: -16.87500762939453
    8. '[k' → logprob: -18.12500762939453
    9. 'j' → logprob: -18.12500762939453
    10. '```' → logprob: -18.12500762939453

Token 153: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931915283203125
    2. '[j' → logprob: -0.6931915283203125
    3. 'j' → logprob: -10.943191528320312
    4. '[i' → logprob: -11.443191528320312
    5. '[-' → logprob: -11.818191528320312
    6. ' -' → logprob: -12.818191528320312
    7. '[k' → logprob: -13.568191528320312
    8. 's' → logprob: -13.818191528320312
    9. '1' → logprob: -13.943191528320312
    10. '[' → logprob: -14.318191528320312

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005719788023270667
    2. '-' → logprob: -7.500572204589844
    3. ' ' → logprob: -11.375572204589844
    4. ')' → logprob: -13.375572204589844
    5. '```' → logprob: -13.375572204589844
    6. ' -' → logprob: -13.750572204589844
    7. '   ' → logprob: -13.750572204589844
    8. 'prev' → logprob: -15.375572204589844
    9. '`' → logprob: -15.563072204589844
    10. '')' → logprob: -16.000572204589844

Token 155: '])+' (ID: 119485)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.005555909126996994
    2. ')' → logprob: -5.255556106567383
    3. ']+' → logprob: -8.505556106567383
    4. '])+' → logprob: -9.255556106567383
    5. ' )' → logprob: -11.880556106567383
    6. '")+' → logprob: -12.005556106567383
    7. '))+' → logprob: -13.130556106567383
    8. '])' → logprob: -13.380556106567383
    9. '+' → logprob: -13.505556106567383
    10. '   ' → logprob: -13.630556106567383

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. ' ' → logprob: -11.375014305114746
    3. '```' → logprob: -13.375014305114746
    4. '   ' → logprob: -13.500014305114746
    5. '<|end|>' → logprob: -16.375015258789062
    6. '`' → logprob: -17.375015258789062
    7. '           ' → logprob: -17.750015258789062
    8. '       ' → logprob: -17.750015258789062
    9. '``' → logprob: -17.750015258789062
    10. '  ' → logprob: -18.500015258789062

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16310052573680878
    2. ':
' → logprob: -2.038100481033325
    3. '):' → logprob: -4.538100719451904
    4. '):
' → logprob: -5.163100719451904
    5. '       ' → logprob: -5.913100719451904
    6. '           ' → logprob: -7.663100719451904
    7. ')' → logprob: -7.663100719451904
    8. ':
' → logprob: -10.538100242614746
    9. ':j' → logprob: -10.663100242614746
    10. '               ' → logprob: -10.788100242614746

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005908019375056028
    2. '               ' → logprob: -8.750591278076172
    3. '       ' → logprob: -9.000591278076172
    4. ' j' → logprob: -9.125591278076172
    5. ':' → logprob: -9.625591278076172
    6. ':
' → logprob: -10.500591278076172
    7. 'j' → logprob: -10.500591278076172
    8. ' ' → logprob: -10.750591278076172
    9. '```' → logprob: -10.875591278076172
    10. '          ' → logprob: -11.875591278076172

Token 159: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.019072582945227623
    2. 'j' (adapté à ' j') → logprob: -4.019072532653809
    3. '           ' → logprob: -7.019072532653809
    4. ' ' → logprob: -11.144072532653809
    5. '               ' → logprob: -12.144072532653809
    6. '       ' → logprob: -13.144072532653809
    7. '                   ' → logprob: -13.769072532653809
    8. ' ' → logprob: -13.894072532653809
    9. '            ' → logprob: -14.144072532653809
    10. ' 
' → logprob: -14.269072532653809

Token 160: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10061551630496979
    2. ' +=' → logprob: -2.3506155014038086
    3. '+' → logprob: -7.850615501403809
    4. '=' → logprob: -11.350615501403809
    5. '++' → logprob: -12.975615501403809
    6. '<' → logprob: -13.225615501403809
    7. '<=' → logprob: -13.350615501403809
    8. ' +' → logprob: -14.850615501403809
    9. '==' → logprob: -15.100615501403809
    10. '>=' → logprob: -15.600615501403809

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '```' → logprob: -15.375296592712402
    4. '   ' → logprob: -16.875295639038086
    5. '2' → logprob: -18.500295639038086
    6. '
' → logprob: -18.812795639038086
    7. '           ' → logprob: -19.062795639038086
    8. '`' → logprob: -19.875295639038086
    9. '0' → logprob: -20.062795639038086
    10. '       ' → logprob: -20.250295639038086

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -17.625001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '１' → logprob: -21.000001907348633
    6. '۱' → logprob: -21.687501907348633
    7. '``' → logprob: -21.812501907348633
    8. '`' → logprob: -21.875001907348633
    9. '       ' → logprob: -22.187501907348633
    10. '-' → logprob: -22.312501907348633

Token 163: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3182452917098999
    2. 'else' → logprob: -1.3182452917099
    3. ' else' → logprob: -5.3182454109191895
    4. 'elif' → logprob: -10.568244934082031
    5. '```' → logprob: -10.693244934082031
    6. '	else' → logprob: -11.818244934082031
    7. '   ' → logprob: -12.193244934082031
    8. '
' → logprob: -13.068244934082031
    9. '<|end|>' → logprob: -13.568244934082031
    10. '​' → logprob: -14.193244934082031

Token 164: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4886758625507355
    2. '       ' → logprob: -0.9886758327484131
    3. ' else' → logprob: -4.238676071166992
    4. 'elif' → logprob: -10.113676071166992
    5. '```' → logprob: -11.488676071166992
    6. '	else' → logprob: -11.863676071166992
    7. '   ' → logprob: -12.363676071166992
    8. '_else' → logprob: -13.988676071166992
    9. '	' → logprob: -14.738676071166992
    10. '}else' → logprob: -14.738676071166992

Token 165: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3887362480163574
    2. '       ' → logprob: -1.1387362480163574
    3. ' else' → logprob: -6.388736248016357
    4. 'elif' → logprob: -8.763736724853516
    5. '   ' → logprob: -10.638736724853516
    6. '	else' → logprob: -13.513736724853516
    7. '```' → logprob: -14.763736724853516
    8. ' elif' → logprob: -15.513736724853516
    9. '}else' → logprob: -15.888736724853516
    10. '           ' → logprob: -15.888736724853516

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16440312564373016
    2. ':
' → logprob: -1.9144030809402466
    3. '           ' → logprob: -5.539402961730957
    4. '       ' → logprob: -8.664402961730957
    5. ' break' → logprob: -10.289402961730957
    6. ' :
' → logprob: -12.164402961730957
    7. '   ' → logprob: -12.539402961730957
    8. ':
' → logprob: -12.664402961730957
    9. '         ' → logprob: -12.789402961730957
    10. 'break' → logprob: -12.789402961730957

Token 167: '           ' (ID: 352)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5271408557891846
    2. '           ' → logprob: -1.0271408557891846
    3. ' break' → logprob: -3.0271408557891846
    4. '       ' → logprob: -5.7771406173706055
    5. '	break' → logprob: -9.652140617370605
    6. '```' → logprob: -10.277140617370605
    7. '   ' → logprob: -10.902140617370605
    8. '               ' → logprob: -12.527140617370605
    9. ' ' → logprob: -12.777140617370605
    10. '         ' → logprob: -13.152140617370605

Token 168: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20347198843955994
    2. ' break' → logprob: -1.7034720182418823
    3. '           ' → logprob: -6.828472137451172
    4. '       ' → logprob: -6.953472137451172
    5. '   ' → logprob: -11.703472137451172
    6. '	break' → logprob: -11.703472137451172
    7. '```' → logprob: -14.453472137451172
    8. 'b' → logprob: -14.828472137451172
    9. '               ' → logprob: -15.078472137451172
    10. ' ' → logprob: -15.328472137451172

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0313948392868042
    2. '```' → logprob: -3.9063949584960938
    3. '<|end|>' → logprob: -5.406394958496094
    4. '   ' → logprob: -5.656394958496094
    5. '  
' → logprob: -6.906394958496094
    6. '<|end|>' → logprob: -7.406394958496094
    7. '``' → logprob: -8.906394958496094
    8. '    
' → logprob: -8.906394958496094
    9. ':
' → logprob: -9.031394958496094
    10. '[i' → logprob: -9.031394958496094

Token 170: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1357894390821457
    2. '   ' → logprob: -3.010789394378662
    3. '<|end|>' → logprob: -3.260789394378662
    4. '
' → logprob: -4.135789394378662
    5. 'res' → logprob: -5.010789394378662
    6. ')' → logprob: -6.010789394378662
    7. 'i' → logprob: -6.135789394378662
    8. '``' → logprob: -6.260789394378662
    9. ' res' → logprob: -6.635789394378662
    10. '<|end|>' → logprob: -6.760789394378662

Token 171: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46292269229888916
    2. 'if' → logprob: -1.5879226922988892
    3. 'length' (adapté à ' length') → logprob: -2.9629225730895996
    4. 'res' → logprob: -3.0879225730895996
    5. '
' → logprob: -3.3379225730895996
    6. '```' → logprob: -4.5879225730896
    7. 'i' → logprob: -4.7129225730896
    8. ' if' → logprob: -5.5879225730896
    9. '    
' → logprob: -6.5879225730896
    10. ' length' → logprob: -6.7129225730896

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005935670807957649
    2. ' =' → logprob: -5.1309356689453125
    3. '=len' → logprob: -12.630935668945312
    4. '=j' → logprob: -12.755935668945312
    5. '+=' → logprob: -15.630935668945312
    6. '=end' → logprob: -16.005935668945312
    7. 's' → logprob: -16.380935668945312
    8. '=int' → logprob: -16.630935668945312
    9. '=s' → logprob: -16.630935668945312
    10. '=i' → logprob: -17.005935668945312

Token 173: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20141372084617615
    2. ' j' → logprob: -1.7014137506484985
    3. '   ' → logprob: -14.701414108276367
    4. '	j' → logprob: -17.326414108276367
    5. '(j' → logprob: -17.701414108276367
    6. '[j' → logprob: -18.451414108276367
    7. '$j' → logprob: -19.576414108276367
    8. '=j' → logprob: -19.701414108276367
    9. ' ' → logprob: -19.951414108276367
    10. ':j' → logprob: -20.451414108276367

Token 174: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5861994028091431
    2. ' -' → logprob: -0.8361994028091431
    3. '-i' → logprob: -4.5861992835998535
    4. '   ' → logprob: -11.586199760437012
    5. '<|end|>' → logprob: -13.711199760437012
    6. '-I' → logprob: -14.086199760437012
    7. '-token' → logprob: -14.586199760437012
    8. '–' → logprob: -14.711199760437012
    9. '-
' → logprob: -14.711199760437012
    10. '```' → logprob: -14.961199760437012

Token 175: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.2007883671903983e-05
    2. ' i' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.875021934509277
    4. '```' → logprob: -16.375022888183594
    5. '`' → logprob: -17.375022888183594
    6. '<|end|>' → logprob: -18.000022888183594
    7. '	i' → logprob: -18.250022888183594
    8. '1' → logprob: -18.750022888183594
    9. 'start' → logprob: -19.000022888183594
    10. ' ' → logprob: -19.125022888183594

Token 176: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0245174802839756
    2. '   ' → logprob: -5.02451753616333
    3. 'if' → logprob: -5.02451753616333
    4. ' if' → logprob: -5.14951753616333
    5. '<|end|>' → logprob: -5.77451753616333
    6. 'res' → logprob: -6.77451753616333
    7. ' res' → logprob: -8.149517059326172
    8. '    
' → logprob: -9.024517059326172
    9. '<|end|>' → logprob: -9.149517059326172
    10. '*' → logprob: -9.149517059326172

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7040669918060303
    2. 'res' → logprob: -1.3290669918060303
    3. 'if' → logprob: -1.4540669918060303
    4. ' if' → logprob: -5.454067230224609
    5. ' res' → logprob: -6.454067230224609
    6. '```' → logprob: -7.329067230224609
    7. 'i' → logprob: -7.579067230224609
    8. '``' → logprob: -10.95406723022461
    9. '  ' → logprob: -11.57906723022461
    10. '
' → logprob: -11.70406723022461

Token 178: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47503048181533813
    2. 'res' → logprob: -0.9750304818153381
    3. '   ' → logprob: -7.100030422210693
    4. 'i' → logprob: -10.100030899047852
    5. ' if' → logprob: -10.225030899047852
    6. '```' → logprob: -10.975030899047852
    7. '
' → logprob: -11.475030899047852
    8. ' res' → logprob: -11.975030899047852
    9. 'length' → logprob: -12.600030899047852
    10. 'for' → logprob: -12.850030899047852

Token 179: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.038062721490859985
    2. ' length' → logprob: -3.288062810897827
    3. 'start' → logprob: -11.413063049316406
    4. '(length' → logprob: -12.538063049316406
    5. 's' → logprob: -13.413063049316406
    6. 'res' → logprob: -13.913063049316406
    7. 'i' → logprob: -14.413063049316406
    8. '   ' → logprob: -14.538063049316406
    9. ' ' → logprob: -14.663063049316406
    10. ' s' → logprob: -14.788063049316406

Token 180: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3614753484725952
    2. ' >=' → logprob: -1.2364753484725952
    3. '>' → logprob: -4.486475467681885
    4. ' >' → logprob: -6.986475467681885
    5. '==' → logprob: -7.486475467681885
    6. ' ==' → logprob: -9.861474990844727
    7. ' ' → logprob: -9.986474990844727
    8. '   ' → logprob: -10.986474990844727
    9. ')>=' → logprob: -10.986474990844727
    10. '≥' → logprob: -11.361474990844727

Token 181: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5768217444419861
    2. '3' → logprob: -0.8268217444419861
    3. '4' → logprob: -7.701821804046631
    4. '1' → logprob: -8.576821327209473
    5. ' ' → logprob: -9.076821327209473
    6. '5' → logprob: -9.826821327209473
    7. '=' → logprob: -10.701821327209473
    8. '10' → logprob: -11.326821327209473
    9. '

' → logprob: -12.389321327209473
    10. '
' → logprob: -12.514321327209473

Token 182: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.38784149289131165
    2. '2' → logprob: -1.1378414630889893
    3. '4' → logprob: -7.387841701507568
    4. '5' → logprob: -9.01284122467041
    5. '1' → logprob: -9.63784122467041
    6. '10' → logprob: -10.01284122467041
    7. ' ' → logprob: -10.51284122467041
    8. '
' → logprob: -11.45034122467041
    9. '

' → logprob: -11.57534122467041
    10. 'length' → logprob: -11.76284122467041

Token 183: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38694342970848083
    2. ':' → logprob: -1.1369434595108032
    3. ':

' → logprob: -10.886943817138672
    4. '   ' → logprob: -11.136943817138672
    5. ':
' → logprob: -11.386943817138672
    6. '       ' → logprob: -11.511943817138672
    7. ' and' → logprob: -11.761943817138672
    8. '):
' → logprob: -12.136943817138672
    9. ',' → logprob: -13.386943817138672
    10. ' :
' → logprob: -13.511943817138672

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03508489951491356
    2. 'res' → logprob: -3.4100849628448486
    3. ' res' → logprob: -6.6600847244262695
    4. '   ' → logprob: -9.41008472442627
    5. '
' → logprob: -10.53508472442627
    6. '           ' → logprob: -10.78508472442627
    7. '```' → logprob: -10.78508472442627
    8. ',' → logprob: -13.91008472442627
    9. '	res' → logprob: -13.91008472442627
    10. '      ' → logprob: -14.03508472442627

Token 185: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0003540542966220528
    2. ' res' → logprob: -8.375353813171387
    3. '       ' → logprob: -9.500353813171387
    4. '
' → logprob: -11.000353813171387
    5. 'if' → logprob: -11.250353813171387
    6. '   ' → logprob: -11.250353813171387
    7. 'for' → logprob: -13.250353813171387
    8. '           ' → logprob: -13.250353813171387
    9. 'length' → logprob: -14.250353813171387
    10. '```' → logprob: -14.500353813171387

Token 186: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008618239313364029
    2. '+=' → logprob: -4.758618354797363
    3. ' =' → logprob: -13.508618354797363
    4. '+=(' → logprob: -14.258618354797363
    5. '   ' → logprob: -14.633618354797363
    6. ']+=' → logprob: -14.883618354797363
    7. ' -=' → logprob: -15.133618354797363
    8. '=' → logprob: -15.633618354797363
    9. '+' → logprob: -15.883618354797363
    10. '+='' → logprob: -16.383617401123047

Token 187: ' ' (ID: 220)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.026303669437766075
    2. '(length' → logprob: -4.276303768157959
    3. ' length' → logprob: -4.651303768157959
    4. '(' → logprob: -6.526303768157959
    5. '1' → logprob: -7.276303768157959
    6. ' (' → logprob: -8.4013032913208
    7. '2' → logprob: -10.4013032913208
    8. 'int' → logprob: -10.6513032913208
    9. '((' → logprob: -11.4013032913208
    10. 'sum' → logprob: -11.5263032913208

Token 188: '3' (ID: 18)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.01225133053958416
    2. '(length' → logprob: -4.887251377105713
    3. '(' → logprob: -5.512251377105713
    4. '1' → logprob: -7.887251377105713
    5. '2' → logprob: -10.012250900268555
    6. 'int' → logprob: -10.137250900268555
    7. '10' → logprob: -10.387250900268555
    8. 'pow' → logprob: -10.512250900268555
    9. 'sum' → logprob: -11.387250900268555
    10. '((' → logprob: -11.512250900268555

Token 189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09514596313238144
    2. '
' → logprob: -2.4701459407806396
    3. 'else' → logprob: -5.595146179199219
    4. '    
' → logprob: -6.845146179199219
    5. 'elif' → logprob: -8.095146179199219
    6. ' else' → logprob: -8.595146179199219
    7. '+' → logprob: -8.595146179199219
    8. '<|end|>' → logprob: -8.970146179199219
    9. '  
' → logprob: -9.220146179199219
    10. '*i' → logprob: -9.470146179199219

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01573026180267334
    2. 'i' → logprob: -4.765730381011963
    3. '
' → logprob: -5.140730381011963
    4. '```' → logprob: -7.265730381011963
    5. ' i' → logprob: -7.765730381011963
    6. '    
' → logprob: -9.890729904174805
    7. 'else' → logprob: -10.890729904174805
    8. '``' → logprob: -11.390729904174805
    9. ',i' → logprob: -12.015729904174805
    10. '       ' → logprob: -12.265729904174805

Token 191: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033536650240421295
    2. 'else' (adapté à ' else') → logprob: -3.783536672592163
    3. ' else' → logprob: -5.158536434173584
    4. 'i' → logprob: -5.783536434173584
    5. ' i' → logprob: -7.033536434173584
    6. 'elif' → logprob: -7.783536434173584
    7. '```' → logprob: -10.158536911010742
    8. '	else' → logprob: -11.033536911010742
    9. '
' → logprob: -11.158536911010742
    10. ' elif' → logprob: -11.283536911010742

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6932340264320374
    2. ':
' → logprob: -0.6932340264320374
    3. '       ' → logprob: -10.06823444366455
    4. '   ' → logprob: -11.06823444366455
    5. ' :
' → logprob: -11.06823444366455
    6. ':
' → logprob: -12.19323444366455
    7. ':

' → logprob: -12.81823444366455
    8. ' :' → logprob: -12.94323444366455
    9. '{' → logprob: -14.81823444366455
    10. '    ' → logprob: -14.94323444366455

Token 193: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.23418454825878143
    2. '       ' → logprob: -1.6091845035552979
    3. ' res' → logprob: -4.984184741973877
    4. '   ' → logprob: -6.609184741973877
    5. 'for' → logprob: -8.359184265136719
    6. 'i' → logprob: -9.109184265136719
    7. '```' → logprob: -9.734184265136719
    8. 'length' → logprob: -10.734184265136719
    9. '           ' → logprob: -10.984184265136719
    10. '
' → logprob: -11.234184265136719

Token 194: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.011419492773711681
    2. ' res' → logprob: -5.136419296264648
    3. 'for' → logprob: -5.511419296264648
    4. '   ' → logprob: -7.386419296264648
    5. 'i' → logprob: -7.886419296264648
    6. ' for' → logprob: -8.511419296264648
    7. 'while' → logprob: -9.386419296264648
    8. '       ' → logprob: -9.636419296264648
    9. ' i' → logprob: -10.261419296264648
    10. '    ' → logprob: -11.636419296264648

Token 195: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09101710468530655
    2. ' +=' → logprob: -2.466017007827759
    3. '+' → logprob: -6.216017246246338
    4. '+='' → logprob: -10.84101676940918
    5. '```' → logprob: -10.96601676940918
    6. ']+=' → logprob: -11.09101676940918
    7. '=' → logprob: -11.71601676940918
    8. '+="' → logprob: -12.21601676940918
    9. ' +' → logprob: -12.59101676940918
    10. '<|end|>' → logprob: -12.71601676940918

Token 196: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.038085781037807465
    2. ' length' → logprob: -3.288085699081421
    3. '1' → logprob: -10.1630859375
    4. ' ' → logprob: -12.9130859375
    5. '2' → logprob: -13.6630859375
    6. 'len' → logprob: -14.2880859375
    7. '(length' → logprob: -15.0380859375
    8. '[length' → logprob: -15.2880859375
    9. '0' → logprob: -15.4130859375
    10. '   ' → logprob: -16.4130859375

Token 197: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005485066794790328
    2. '
' → logprob: -7.750548362731934
    3. ' i' → logprob: -10.375548362731934
    4. 'i' → logprob: -11.125548362731934
    5. '    
' → logprob: -11.125548362731934
    6. '       ' → logprob: -11.375548362731934
    7. '```' → logprob: -11.750548362731934
    8. '[i' → logprob: -11.875548362731934
    9. '<|end|>' → logprob: -12.250548362731934
    10. ',i' → logprob: -12.250548362731934

Token 198: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24835331737995148
    2. '
' → logprob: -2.2483532428741455
    3. '   ' → logprob: -2.7483532428741455
    4. '```' → logprob: -3.3733532428741455
    5. ' i' → logprob: -4.373353481292725
    6. '    
' → logprob: -6.998353481292725
    7. '\n' → logprob: -7.623353481292725
    8. '``' → logprob: -7.748353481292725
    9. '[i' → logprob: -7.998353481292725
    10. '<|end|>' → logprob: -8.373353004455566

Token 199: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.25716057419776917
    2. '   ' → logprob: -1.5071605443954468
    3. ' i' → logprob: -5.257160663604736
    4. '```' → logprob: -12.382160186767578
    5. '	i' → logprob: -13.257160186767578
    6. '
' → logprob: -14.132160186767578
    7. '``' → logprob: -15.507160186767578
    8. '_i' → logprob: -15.507160186767578
    9. '    
' → logprob: -15.507160186767578
    10. '       ' → logprob: -15.882160186767578

Token 200: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09781228005886078
    2. '=' → logprob: -2.8478121757507324
    3. ' +=' → logprob: -3.3478121757507324
    4. '+' → logprob: -10.22281265258789
    5. ' =' → logprob: -11.47281265258789
    6. '+='' → logprob: -13.72281265258789
    7. '+="' → logprob: -14.97281265258789
    8. '+=(' → logprob: -15.72281265258789
    9. ']+=' → logprob: -16.09781265258789
    10. '++' → logprob: -16.59781265258789

Token 201: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0380416102707386
    2. ' j' → logprob: -3.288041591644287
    3. '$j' → logprob: -16.663042068481445
    4. '	j' → logprob: -17.413042068481445
    5. '```' → logprob: -20.413042068481445
    6. '   ' → logprob: -20.538042068481445
    7. '_j' → logprob: -20.663042068481445
    8. '[j' → logprob: -20.663042068481445
    9. '=j' → logprob: -21.163042068481445
    10. 'jax' → logprob: -21.913042068481445

Token 202: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012594180181622505
    2. '
' → logprob: -4.387594223022461
    3. ' print' → logprob: -10.012594223022461
    4. '<|end|>' → logprob: -11.262594223022461
    5. '```' → logprob: -11.887594223022461
    6. ')' → logprob: -12.012594223022461
    7. '  
' → logprob: -12.762594223022461
    8. '
' → logprob: -13.262594223022461
    9. ')
' → logprob: -13.262594223022461
    10. '\n' → logprob: -13.512594223022461

Token 203: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.466968650580384e-05
    2. '```' → logprob: -10.625054359436035
    3. '
' → logprob: -10.750054359436035
    4. ' print' → logprob: -11.875054359436035
    5. '<|end|>' → logprob: -14.375054359436035
    6. '#' → logprob: -14.750054359436035
    7. '#print' → logprob: -14.875054359436035
    8. '``' → logprob: -15.250054359436035
    9. '\' → logprob: -16.37505531311035
    10. '.print' → logprob: -17.12505531311035

Token 204: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00022487416572403163
    2. '(' → logprob: -8.500225067138672
    3. '(s' → logprob: -10.875225067138672
    4. 'res' → logprob: -13.125225067138672
    5. ' (' → logprob: -16.000225067138672
    6. '(
' → logprob: -16.375225067138672
    7. '(r' → logprob: -16.750225067138672
    8. '('' → logprob: -16.875225067138672
    9. '(result' → logprob: -17.000225067138672
    10. '(re' → logprob: -17.125225067138672

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')`' → logprob: -16.25
    4. '))' → logprob: -18.5
    5. ')
' → logprob: -18.875
    6. '`)' → logprob: -19.25
    7. '')' → logprob: -19.5
    8. '())' → logprob: -19.875
    9. '）' → logprob: -19.875
    10. ')}' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 203
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 177
Précision stricte (1ère position): 46.31%
Précision adaptée (1ère position): 50.25%
Précision (top 10): 87.19%
================================================================================
