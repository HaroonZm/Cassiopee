================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

# Pyonkichi's jump relative moves
JUMP_MOVES = [(2, 1), (2, -1), (-2, 1), (-2, -1),
              (1, 2), (1, -2), (-1, 2), (-1, -2)]

# Check in range 0~9 for park field
def in_park(x, y):
    return 0 <= x <= 9 and 0 <= y <= 9

# Sprinkler's water coverage relative moves including itself
WATER_COVERAGE = [
    (0,0),(0,1),(0,-1),(1,0),(-1,0),
    (1,1),(1,-1),(-1,1),(-1,-1)
]

def solve(px, py, n, sprinklers):
    # Compute sprinkler water coverage sets for each sprinkler
    water_areas = []
    for (sx, sy) in sprinklers:
        area = set()
        for dx, dy in WATER_COVERAGE:
            nx, ny = sx + dx, sy + dy
            if in_park(nx, ny):
                area.add((nx, ny))
        water_areas.append(area)
    # BFS state: index in sprinklers, position of Pyonkichi
    # At sprinkler i, Pyonkichi jumps once from previous pos to pos in water area of sprinkler i
    # For i=0, Pyonkichi jumps from initial pos to pos in water area of first sprinkler
    # At transition from sprinkler i to i+1, one jump allowed, then stay fixed at that pos until next sprinkler start
    # Whether there is a path that for all sprinklers Pyonkichi can be within water coverage by single jump at each transition.

    # Since Pyonkichi's jump is always one of the 8 L-shaped knight moves with length fixed,
    # from previous position, he must jump exactly one of JUMP_MOVES and land inside the sprinkler coverage

    # We'll use a queue for BFS, storing (index_sprinkler, x, y)
    # index_sprinkler is the sprinklers step 0-based
    # For first step, Pyonkichi jumps from initial position to some pos in water_areas[0] reachable by one jump move

    queue = deque()
    visited = [set() for _ in range(n)]  # visited positions per sprinkler index

    # For first sprinkler, jump from initial pos to reachable watering pos
    for dx, dy in JUMP_MOVES:
        nx, ny = px + dx, py + dy
        if in_park(nx, ny) and (nx, ny) in water_areas[0]:
            queue.append((0, nx, ny))
            visited[0].add((nx, ny))

    while queue:
        i, x, y = queue.popleft()
        if i == n - 1:
            # Reached last sprinkler with valid position
            return "OK"
        # Next sprinkler index
        ni = i + 1
        # From current position (x, y), Pyonkichi can jump once to pos inside water_areas[ni]
        for dx, dy in JUMP_MOVES:
            nx, ny = x + dx, y + dy
            if in_park(nx, ny) and (nx, ny) in water_areas[ni]:
                if (nx, ny) not in visited[ni]:
                    visited[ni].add((nx, ny))
                    queue.append((ni, nx, ny))
    # No path found
    return "NA"

def main():
    input_lines = sys.stdin.read().split()
    idx = 0
    while True:
        if idx + 2 > len(input_lines):
            break
        px = int(input_lines[idx]); py = int(input_lines[idx+1])
        idx += 2
        if px == 0 and py == 0:
            break
        n = int(input_lines[idx])
        idx += 1
        sprinklers = []
        for _ in range(n):
            x = int(input_lines[idx]); y = int(input_lines[idx+1])
            idx += 2
            sprinklers.append((x, y))
        print(solve(px, py, n, sprinklers))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3205606937408447
    2. '.' → logprob: -1.4455606937408447
    3. '\' → logprob: -4.570560455322266
    4. 'import' → logprob: -4.570560455322266
    5. 'newline' → logprob: -5.195560455322266
    6. '<|end|>' → logprob: -5.320560455322266
    7. '
' → logprob: -6.570560455322266
    8. '```' → logprob: -7.070560455322266
    9. ',' → logprob: -7.195560455322266
    10. '\r' → logprob: -7.195560455322266

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.537659227848053
    2. 'import' → logprob: -0.912659227848053
    3. '.' → logprob: -4.287659168243408
    4. ' ' → logprob: -8.287659645080566
    5. '<|end|>' → logprob: -9.037659645080566
    6. '.import' → logprob: -9.287659645080566
    7. '```' → logprob: -9.412659645080566
    8. '_import' → logprob: -10.537659645080566
    9. '	import' → logprob: -10.662659645080566
    10. '_' → logprob: -11.412659645080566

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.38865795731544495
    2. ' deque' → logprob: -1.3886579275131226
    3. ' abc' → logprob: -2.763658046722412
    4. 'deque' → logprob: -4.888658046722412
    5. 'abc' → logprob: -6.888658046722412
    6. ' named' → logprob: -7.638658046722412
    7. ' Counter' → logprob: -7.888658046722412
    8. ' Ordered' → logprob: -10.263657569885254
    9. 'named' → logprob: -10.638657569885254
    10. 'default' → logprob: -10.638657569885254

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5585038661956787
    2. '

' → logprob: -1.9335038661956787
    3. '
' → logprob: -2.1835038661956787
    4. 'import' → logprob: -2.4335038661956787
    5. '```' → logprob: -3.0585038661956787
    6. '\' → logprob: -3.6835038661956787
    7. '<|end|>' → logprob: -5.308504104614258
    8. 'newline' → logprob: -6.433504104614258
    9. '<|end|>' → logprob: -6.683504104614258
    10. '' → logprob: -7.558504104614258

Token 8: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1668646335601807
    2. 'b' → logprob: -1.4168646335601807
    3. '`' → logprob: -1.9168646335601807
    4. 'd' → logprob: -2.1668646335601807
    5. '.' → logprob: -3.1668646335601807
    6. '```' → logprob: -3.2918646335601807
    7. 'import' → logprob: -3.6668646335601807
    8. '\' → logprob: -4.291864395141602
    9. 'a' → logprob: -4.541864395141602
    10. 'data' → logprob: -5.041864395141602

Token 9: ' P' (ID: 398)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6958755254745483
    2. 'd' → logprob: -1.8208755254745483
    3. '#' → logprob: -2.320875644683838
    4. 'b' → logprob: -2.570875644683838
    5. 'input' → logprob: -2.695875644683838
    6. ' class' → logprob: -2.695875644683838
    7. ' input' → logprob: -2.695875644683838
    8. ' #' → logprob: -2.820875644683838
    9. ' ' → logprob: -3.320875644683838
    10. 'deque' → logprob: -3.695875644683838

Token 10: 'yon' (ID: 10033)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10727372020483017
    2. 'ath' → logprob: -2.732273817062378
    3. 'rim' → logprob: -4.107273578643799
    4. 'rocessing' → logprob: -5.357273578643799
    5. 'ro' → logprob: -5.982273578643799
    6. 'riority' → logprob: -6.357273578643799
    7. 'R' → logprob: -6.732273578643799
    8. 'rompt' → logprob: -6.982273578643799
    9. 'layer' → logprob: -7.107273578643799
    10. 'rocess' → logprob: -7.107273578643799

Token 11: 'k' (ID: 74)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9787315726280212
    2. 'ex' → logprob: -2.228731632232666
    3. 'sort' → logprob: -2.353731632232666
    4. '_' → logprob: -2.478731632232666
    5. 'et' → logprob: -3.103731632232666
    6. '#' → logprob: -3.728731632232666
    7. '=' → logprob: -3.728731632232666
    8. '()' → logprob: -3.978731632232666
    9. ':' → logprob: -4.228731632232666
    10. 'queue' → logprob: -4.228731632232666

Token 12: 'ichi' (ID: 44252)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5440507531166077
    2. '(' → logprob: -1.669050693511963
    3. ':' → logprob: -2.044050693511963
    4. '=' → logprob: -4.044050693511963
    5. ' =' → logprob: -4.044050693511963
    6. '.py' → logprob: -4.669050693511963
    7. ' (' → logprob: -5.044050693511963
    8. ' ' → logprob: -5.294050693511963
    9. '_' → logprob: -5.419050693511963
    10. '()' → logprob: -5.794050693511963

Token 13: ''s' (ID: 885)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2243480682373047
    2. ' =' → logprob: -1.4743480682373047
    3. '=' → logprob: -1.9743480682373047
    4. '.' → logprob: -2.7243480682373047
    5. ':' → logprob: -2.9743480682373047
    6. '.py' → logprob: -3.0993480682373047
    7. '_' → logprob: -3.7243480682373047
    8. ''s' → logprob: -3.7243480682373047
    9. 'class' → logprob: -3.8493480682373047
    10. '(' → logprob: -4.349348068237305

Token 14: ' jump' (ID: 13843)
  Prédit: 'Queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Queue' → logprob: -1.5419964790344238
    2. '_queue' → logprob: -2.416996479034424
    3. '.py' → logprob: -2.541996479034424
    4. ''s' → logprob: -2.666996479034424
    5. ' Queue' → logprob: -3.541996479034424
    6. 'Game' → logprob: -3.666996479034424
    7. '_' → logprob: -3.791996479034424
    8. 'queue' → logprob: -3.916996479034424
    9. ' queue' → logprob: -4.041996479034424
    10. 'Deque' → logprob: -4.041996479034424

Token 15: ' relative' (ID: 15001)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4255138635635376
    2. 'def' → logprob: -1.5505138635635376
    3. '_height' → logprob: -1.8005138635635376
    4. '_count' → logprob: -2.300513744354248
    5. ' =' → logprob: -3.175513744354248
    6. '_points' → logprob: -3.300513744354248
    7. '_distance' → logprob: -3.300513744354248
    8. ' def' → logprob: -3.925513744354248
    9. 's' → logprob: -4.050513744354248
    10. '_positions' → logprob: -4.175513744354248

Token 16: ' moves' (ID: 19523)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.8382410407066345
    2. '_positions' → logprob: -0.8382410407066345
    3. '_' → logprob: -2.2132411003112793
    4. ' positions' → logprob: -5.338241100311279
    5. ' position' → logprob: -5.713241100311279
    6. 's' → logprob: -5.838241100311279
    7. '_pos' → logprob: -5.963241100311279
    8. ' _' → logprob: -6.088241100311279
    9. '_offsets' → logprob: -6.213241100311279
    10. '_coordinates' → logprob: -6.713241100311279

Token 17: '
' (ID: 198)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.34175530076026917
    2. '_j' → logprob: -2.0917553901672363
    3. '_moves' → logprob: -2.7167553901672363
    4. 'MOV' → logprob: -3.2167553901672363
    5. 'dire' → logprob: -3.8417553901672363
    6. 'jump' → logprob: -5.091755390167236
    7. 'J' → logprob: -5.216755390167236
    8. 'j' → logprob: -5.466755390167236
    9. '_jump' → logprob: -5.716755390167236
    10. '```' → logprob: -5.716755390167236

Token 18: 'J' (ID: 41)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.9111003875732422
    2. '_moves' → logprob: -1.9111003875732422
    3. 'J' → logprob: -2.161100387573242
    4. 'moves' → logprob: -2.411100387573242
    5. '_' → logprob: -2.786100387573242
    6. '_jump' → logprob: -3.036100387573242
    7. 'relative' → logprob: -3.911100387573242
    8. 'j' → logprob: -4.161100387573242
    9. 'jump' → logprob: -4.411100387573242
    10. '_relative' → logprob: -4.661100387573242

Token 19: 'UMP' (ID: 49053)
  Prédit: 'UM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UM' → logprob: -0.6767130494117737
    2. 'U' → logprob: -1.426712989807129
    3. 'UMP' → logprob: -1.676712989807129
    4. '_' → logprob: -3.176712989807129
    5. '_U' → logprob: -4.426712989807129
    6. 'umps' → logprob: -6.176712989807129
    7. '_u' → logprob: -6.801712989807129
    8. 'S' → logprob: -6.926712989807129
    9. 'J' → logprob: -7.301712989807129
    10. '_um' → logprob: -7.426712989807129

Token 20: '_MOV' (ID: 96227)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6216662526130676
    2. '_MOV' → logprob: -0.9966662526130676
    3. '_OFF' → logprob: -2.496666193008423
    4. '_REL' → logprob: -5.746666431427002
    5. '_ST' → logprob: -6.121666431427002
    6. '_POS' → logprob: -6.871666431427002
    7. '_D' → logprob: -6.996666431427002
    8. '_' → logprob: -7.121666431427002
    9. '_V' → logprob: -7.246666431427002
    10. '_OFFSET' → logprob: -7.871666431427002

Token 21: 'ES' (ID: 1759)
  Prédit: 'ES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ES' → logprob: -0.0006129555404186249
    2. 'E' → logprob: -7.625612735748291
    3. '_ES' → logprob: -9.12561321258545
    4. '=' → logprob: -13.00061321258545
    5. '```' → logprob: -13.12561321258545
    6. ' ES' → logprob: -13.62561321258545
    7. 'EST' → logprob: -13.62561321258545
    8. '   ' → logprob: -13.75061321258545
    9. '_E' → logprob: -13.87561321258545
    10. '_' → logprob: -14.00061321258545

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003196965903043747
    2. '=' → logprob: -5.753197193145752
    3. ':' → logprob: -11.628196716308594
    4. ' =[' → logprob: -12.503196716308594
    5. ' ' → logprob: -13.253196716308594
    6. '=[' → logprob: -13.878196716308594
    7. '[' → logprob: -14.503196716308594
    8. '_' → logprob: -14.628196716308594
    9. '[:]' → logprob: -14.753196716308594
    10. 's' → logprob: -14.753196716308594

Token 23: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.11721670627594
    2. '[(' → logprob: -1.11721670627594
    3. ' [(' → logprob: -1.61721670627594
    4. ' [' → logprob: -1.99221670627594
    5. '{' → logprob: -5.11721658706665
    6. ' {' → logprob: -6.24221658706665
    7. ' {(' → logprob: -6.24221658706665
    8. '[
' → logprob: -7.99221658706665
    9. '[((' → logprob: -8.367217063903809
    10. ' [
' → logprob: -9.242217063903809

Token 24: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12295480072498322
    2. '1' → logprob: -2.747954845428467
    3. '0' → logprob: -2.997954845428467
    4. '2' → logprob: -6.872954845428467
    5. '(' → logprob: -7.872954845428467
    6. ' ' → logprob: -8.622954368591309
    7. '(-' → logprob: -8.997954368591309
    8. ' -' → logprob: -10.997954368591309
    9. '+' → logprob: -12.372954368591309
    10. '3' → logprob: -13.247954368591309

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.625866030342877e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',)' → logprob: -14.625085830688477
    4. ' ' → logprob: -15.000085830688477
    5. ',-' → logprob: -15.125085830688477
    6. '1' → logprob: -16.000085830688477
    7. ',),' → logprob: -16.750085830688477
    8. ',+' → logprob: -16.875085830688477
    9. ')' → logprob: -17.250085830688477
    10. '```' → logprob: -18.375085830688477

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22868598997592926
    2. '1' → logprob: -1.603685975074768
    3. '-' → logprob: -6.4786858558654785
    4. ' -' → logprob: -6.8536858558654785
    5. '0' → logprob: -7.7286858558654785
    6. '3' → logprob: -8.853686332702637
    7. '2' → logprob: -9.353686332702637
    8. ' ' → logprob: -13.541186332702637
    9. '4' → logprob: -14.353686332702637
    10. '7' → logprob: -14.416186332702637

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05321555212140083
    2. '-' → logprob: -3.178215503692627
    3. ' ' → logprob: -4.928215503692627
    4. '0' → logprob: -6.303215503692627
    5. '2' → logprob: -7.678215503692627
    6. '3' → logprob: -7.678215503692627
    7. ' -' → logprob: -8.803215980529785
    8. '```' → logprob: -12.678215980529785
    9. ' ' → logprob: -13.053215980529785
    10. '   ' → logprob: -13.178215980529785

Token 28: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0010409059468656778
    2. '),
' → logprob: -7.626040935516357
    3. '),(' → logprob: -8.0010404586792
    4. ' ),' → logprob: -8.7510404586792
    5. ')' → logprob: -10.0010404586792
    6. '),

' → logprob: -12.0010404586792
    7. ' ' → logprob: -12.5010404586792
    8. '),
' → logprob: -13.2510404586792
    9. ')]' → logprob: -14.2510404586792
    10. ' ),
' → logprob: -14.3760404586792

Token 29: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25232774019241333
    2. '(' → logprob: -1.5023276805877686
    3. ' ' → logprob: -8.127327919006348
    4. '1' → logprob: -10.377327919006348
    5. '(-' → logprob: -10.502327919006348
    6. ' (-' → logprob: -10.627327919006348
    7. '2' → logprob: -10.877327919006348
    8. ' -' → logprob: -14.127327919006348
    9. '  ' → logprob: -14.752327919006348
    10. '-' → logprob: -16.00232696533203

Token 30: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1553381383419037
    2. '2' → logprob: -2.0303380489349365
    3. '-' → logprob: -4.405338287353516
    4. ' ' → logprob: -8.030338287353516
    5. ' -' → logprob: -10.905338287353516
    6. ')' → logprob: -11.905338287353516
    7. '3' → logprob: -12.030338287353516
    8. '```' → logprob: -12.342838287353516
    9. '(' → logprob: -13.405338287353516
    10. '-)' → logprob: -13.842838287353516

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020580526324920356
    2. ' ,' → logprob: -8.500205993652344
    3. ',-' → logprob: -14.000205993652344
    4. ' ' → logprob: -15.125205993652344
    5. '<|end|>' → logprob: -15.375205993652344
    6. '0' → logprob: -15.625205993652344
    7. '2' → logprob: -15.750205993652344
    8. '),' → logprob: -15.875205993652344
    9. ')' → logprob: -16.250205993652344
    10. ',
' → logprob: -16.375205993652344

Token 32: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1181752160191536
    2. '2' → logprob: -2.2431752681732178
    3. ' -' → logprob: -5.868175029754639
    4. ' ' → logprob: -5.993175029754639
    5. '0' → logprob: -11.493175506591797
    6. '1' → logprob: -13.493175506591797
    7. '3' → logprob: -13.493175506591797
    8. '```' → logprob: -13.993175506591797
    9. '−' → logprob: -14.618175506591797
    10. ')' → logprob: -16.493175506591797

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -15.875019073486328
    4. '１' → logprob: -17.625019073486328
    5. '```' → logprob: -18.875019073486328
    6. '-' → logprob: -19.062519073486328
    7. '۱' → logprob: -19.687519073486328
    8. '১' → logprob: -20.250019073486328
    9. ' ' → logprob: -20.312519073486328
    10. '१' → logprob: -20.312519073486328

Token 34: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.008238185197114944
    2. ')' → logprob: -5.133238315582275
    3. ')]' → logprob: -6.258238315582275
    4. '),(' → logprob: -8.008237838745117
    5. ' ),' → logprob: -10.133237838745117
    6. '),
' → logprob: -11.383237838745117
    7. ',' → logprob: -13.258237838745117
    8. '),

' → logprob: -13.383237838745117
    9. ')],' → logprob: -13.883237838745117
    10. ' )' → logprob: -14.008237838745117

Token 35: ' (-' (ID: 21382)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.33349189162254333
    2. '(' → logprob: -1.4584919214248657
    3. ' (-' → logprob: -3.333491802215576
    4. '(-' → logprob: -4.208491802215576
    5. ' -' → logprob: -8.208492279052734
    6. '0' → logprob: -9.708492279052734
    7. ' ' → logprob: -9.958492279052734
    8. '-' → logprob: -10.333492279052734
    9. '1' → logprob: -10.583492279052734
    10. '<|end|>' → logprob: -11.458492279052734

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011546355381142348
    2. '1' → logprob: -9.250115394592285
    3. ' ' → logprob: -10.875115394592285
    4. '-' → logprob: -16.0626163482666
    5. '```' → logprob: -16.5626163482666
    6. '<|end|>' → logprob: -17.6251163482666
    7. '２' → logprob: -17.7501163482666
    8. '۲' → logprob: -17.7501163482666
    9. '   ' → logprob: -18.0001163482666
    10. '  ' → logprob: -18.0626163482666

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007170771714299917
    2. '<|end|>' → logprob: -7.5007171630859375
    3. ' ,' → logprob: -8.750717163085938
    4. '<|end|>' → logprob: -12.875717163085938
    5. '0' → logprob: -14.250717163085938
    6. ')' → logprob: -14.625717163085938
    7. '1' → logprob: -14.750717163085938
    8. ' ' → logprob: -15.125717163085938
    9. '‌,' → logprob: -15.750717163085938
    10. ',
' → logprob: -15.875717163085938

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5761756300926208
    2. '1' → logprob: -0.8261756300926208
    3. '<|end|>' → logprob: -8.701175689697266
    4. '0' → logprob: -10.076175689697266
    5. ' -' → logprob: -11.201175689697266
    6. '-' → logprob: -11.951175689697266
    7. '2' → logprob: -12.326175689697266
    8. '<|end|>' → logprob: -14.076175689697266
    9. ' ' → logprob: -14.701175689697266
    10. '```' → logprob: -14.763675689697266

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008638204075396061
    2. ' ' → logprob: -4.758638381958008
    3. '-' → logprob: -11.383638381958008
    4. '<|end|>' → logprob: -11.883638381958008
    5. ' -' → logprob: -12.633638381958008
    6. '+' → logprob: -14.258638381958008
    7. '2' → logprob: -14.633638381958008
    8. ',' → logprob: -14.758638381958008
    9. '0' → logprob: -15.196138381958008
    10. ' ' → logprob: -16.633638381958008

Token 40: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0018774702912196517
    2. ',' → logprob: -6.626877307891846
    3. ')' → logprob: -7.626877307891846
    4. ' ),' → logprob: -10.251877784729004
    5. '),(' → logprob: -11.001877784729004
    6. ',),' → logprob: -11.876877784729004
    7. '),
' → logprob: -13.001877784729004
    8. '<|end|>' → logprob: -14.001877784729004
    9. '),

' → logprob: -14.376877784729004
    10. ')]' → logprob: -14.876877784729004

Token 41: ' (-' (ID: 21382)
  Prédit: ' (-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.32806041836738586
    2. ' -' → logprob: -1.4530603885650635
    3. '(-' → logprob: -3.2030603885650635
    4. '-' → logprob: -5.453060626983643
    5. ' (' → logprob: -7.828060626983643
    6. ' ' → logprob: -8.078060150146484
    7. '(' → logprob: -9.078060150146484
    8. '<|end|>' → logprob: -9.703060150146484
    9. '2' → logprob: -11.203060150146484
    10. ' ' → logprob: -13.203060150146484

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.318681188422488e-05
    2. '1' → logprob: -11.50001335144043
    3. ' ' → logprob: -12.87501335144043
    4. '-' → logprob: -15.62501335144043
    5. '<|end|>' → logprob: -16.25001335144043
    6. '۲' → logprob: -17.43751335144043
    7. '(' → logprob: -17.50001335144043
    8. '２' → logprob: -18.06251335144043
    9. '<|end|>' → logprob: -18.12501335144043
    10. ')' → logprob: -18.18751335144043

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007914052694104612
    2. ',-' → logprob: -7.250791549682617
    3. ' ,' → logprob: -10.250791549682617
    4. '<|end|>' → logprob: -10.875791549682617
    5. ' -' → logprob: -11.250791549682617
    6. '-' → logprob: -11.500791549682617
    7. ')' → logprob: -13.750791549682617
    8. ' ,-' → logprob: -14.000791549682617
    9. '<|end|>' → logprob: -14.750791549682617
    10. '0' → logprob: -14.875791549682617

Token 44: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11285564303398132
    2. ' -' → logprob: -2.2378556728363037
    3. '<|end|>' → logprob: -10.362855911254883
    4. ' ' → logprob: -14.987855911254883
    5. '0' → logprob: -15.112855911254883
    6. '1' → logprob: -15.237855911254883
    7. '<|end|>' → logprob: -15.362855911254883
    8. '```' → logprob: -15.737855911254883
    9. ')' → logprob: -16.237855911254883
    10. '2' → logprob: -16.737855911254883

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.000001907348633
    3. '2' → logprob: -14.875001907348633
    4. '-' → logprob: -16.375001907348633
    5. '```' → logprob: -17.000001907348633
    6. '<|end|>' → logprob: -17.125001907348633
    7. ')' → logprob: -17.750001907348633
    8. '۱' → logprob: -17.875001907348633
    9. '0' → logprob: -18.312501907348633
    10. '１' → logprob: -19.000001907348633

Token 46: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005014820955693722
    2. ')]' → logprob: -5.505014896392822
    3. '),(' → logprob: -7.505014896392822
    4. ')' → logprob: -8.505014419555664
    5. ' ),' → logprob: -8.755014419555664
    6. '),
' → logprob: -11.505014419555664
    7. ',' → logprob: -11.630014419555664
    8. '],' → logprob: -13.880014419555664
    9. ' ' → logprob: -14.130014419555664
    10. ' )' → logprob: -14.380014419555664

Token 47: '             ' (ID: 1698)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0181527491658926
    2. '(' → logprob: -4.018152713775635
    3. '<|end|>' → logprob: -13.518153190612793
    4. ' ' → logprob: -14.268153190612793
    5. ' (-' → logprob: -14.643153190612793
    6. '   ' → logprob: -16.143152236938477
    7. ',' → logprob: -16.518152236938477
    8. ' ' → logprob: -16.518152236938477
    9. ')' → logprob: -18.018152236938477
    10. '(-' → logprob: -18.018152236938477

Token 48: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10049186646938324
    2. '(' (adapté à ' (') → logprob: -2.350491762161255
    3. ' ' → logprob: -8.600491523742676
    4. '1' → logprob: -9.225491523742676
    5. '0' → logprob: -12.975491523742676
    6. '<|end|>' → logprob: -15.850491523742676
    7. ' (-' → logprob: -16.475492477416992
    8. ' ' → logprob: -16.850492477416992
    9. '  ' → logprob: -16.975492477416992
    10. '(-' → logprob: -17.100492477416992

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020854694594163448
    2. '0' → logprob: -8.750208854675293
    3. '-' → logprob: -10.625208854675293
    4. ' ' → logprob: -10.625208854675293
    5. ')' → logprob: -14.937708854675293
    6. '```' → logprob: -15.125208854675293
    7. ' -' → logprob: -16.250207901000977
    8. '2' → logprob: -16.312707901000977
    9. '   ' → logprob: -16.312707901000977
    10. '+' → logprob: -17.000207901000977

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015569974202662706
    2. ' ,' → logprob: -6.501556873321533
    3. '2' → logprob: -9.876557350158691
    4. ' ' → logprob: -13.501557350158691
    5. '0' → logprob: -14.001557350158691
    6. '1' → logprob: -14.501557350158691
    7. '<|end|>' → logprob: -15.626557350158691
    8. ',
' → logprob: -15.751557350158691
    9. '3' → logprob: -16.751556396484375
    10. '‌,' → logprob: -17.001556396484375

Token 51: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11282762885093689
    2. ' ' → logprob: -2.2378275394439697
    3. '-' → logprob: -12.61282730102539
    4. ' ' → logprob: -14.86282730102539
    5. '<|end|>' → logprob: -14.92532730102539
    6. '  ' → logprob: -15.23782730102539
    7. ' -' → logprob: -15.80032730102539
    8. '1' → logprob: -16.17532730102539
    9. '0' → logprob: -16.23782730102539
    10. ')' → logprob: -16.23782730102539

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001021970878355205
    2. ' ' → logprob: -7.001021862030029
    3. '-' → logprob: -9.126022338867188
    4. '```' → logprob: -15.063522338867188
    5. ' -' → logprob: -15.126022338867188
    6. '  ' → logprob: -15.188522338867188
    7. '<|end|>' → logprob: -15.376022338867188
    8. '   ' → logprob: -16.313522338867188
    9. '1' → logprob: -16.501022338867188
    10. ')' → logprob: -16.501022338867188

Token 53: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5768579840660095
    2. ',' → logprob: -0.8268579840660095
    3. ' ,' → logprob: -7.576858043670654
    4. ')' → logprob: -8.451857566833496
    5. ' ),' → logprob: -8.951857566833496
    6. '),(' → logprob: -10.076857566833496
    7. ',),' → logprob: -11.701857566833496
    8. ' ' → logprob: -12.576857566833496
    9. '(' → logprob: -12.951857566833496
    10. ')]' → logprob: -13.451857566833496

Token 54: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08338209241628647
    2. '(' → logprob: -3.0833821296691895
    3. ' ' → logprob: -3.4583821296691895
    4. '1' → logprob: -6.3333821296691895
    5. '<|end|>' → logprob: -7.7083821296691895
    6. '0' → logprob: -8.083381652832031
    7. ' (-' → logprob: -9.083381652832031
    8. '             ' → logprob: -10.458381652832031
    9. '(-' → logprob: -10.458381652832031
    10. ' -' → logprob: -12.708381652832031

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02713354118168354
    2. '-' → logprob: -3.7771334648132324
    3. ' ' → logprob: -5.652133464813232
    4. ' -' → logprob: -7.902133464813232
    5. '2' → logprob: -16.02713394165039
    6. '  ' → logprob: -16.08963394165039
    7. '```' → logprob: -16.83963394165039
    8. '   ' → logprob: -17.27713394165039
    9. '<|end|>' → logprob: -17.40213394165039
    10. '–' → logprob: -17.40213394165039

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006553700077347457
    2. ' ,' → logprob: -7.375655174255371
    3. ',-' → logprob: -11.250655174255371
    4. ' -' → logprob: -12.000655174255371
    5. ' ' → logprob: -12.750655174255371
    6. '-' → logprob: -12.875655174255371
    7. '2' → logprob: -13.000655174255371
    8. '<|end|>' → logprob: -14.250655174255371
    9. '1' → logprob: -14.625655174255371
    10. ',
' → logprob: -14.875655174255371

Token 57: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009758212603628635
    2. ' -' → logprob: -4.634757995605469
    3. ' ' → logprob: -13.884757995605469
    4. '2' → logprob: -14.384757995605469
    5. '<|end|>' → logprob: -14.384757995605469
    6. '0' → logprob: -16.63475799560547
    7. '1' → logprob: -16.63475799560547
    8. ')' → logprob: -18.88475799560547
    9. '-​' → logprob: -19.25975799560547
    10. '```' → logprob: -19.88475799560547

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.625004768371582
    3. '1' → logprob: -13.875004768371582
    4. '-' → logprob: -17.750003814697266
    5. ')' → logprob: -18.250003814697266
    6. '```' → logprob: -18.312503814697266
    7. '   ' → logprob: -18.500003814697266
    8. '۲' → logprob: -18.750003814697266
    9. '  ' → logprob: -19.250003814697266
    10. '２' → logprob: -19.375003814697266

Token 59: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.13873952627182007
    2. ')]' → logprob: -2.138739585876465
    3. ')' → logprob: -4.513739585876465
    4. ' ),' → logprob: -7.638739585876465
    5. ' )' → logprob: -8.638739585876465
    6. '),
' → logprob: -10.138739585876465
    7. '),(' → logprob: -10.138739585876465
    8. '],' → logprob: -11.638739585876465
    9. ')],' → logprob: -11.638739585876465
    10. ',' → logprob: -12.013739585876465

Token 60: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.31331634521484375
    2. ' (-' → logprob: -1.3133163452148438
    3. '(' → logprob: -10.563316345214844
    4. ' -' → logprob: -11.438316345214844
    5. '-' → logprob: -11.563316345214844
    6. ' (' → logprob: -12.188316345214844
    7. '             ' → logprob: -13.188316345214844
    8. ' ' → logprob: -14.188316345214844
    9. '[-' → logprob: -15.938316345214844
    10. '            ' → logprob: -16.063316345214844

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '2' → logprob: -11.625009536743164
    3. ' ' → logprob: -15.875009536743164
    4. '-' → logprob: -18.312509536743164
    5. '１' → logprob: -18.625009536743164
    6. ')' → logprob: -18.625009536743164
    7. '۱' → logprob: -18.687509536743164
    8. '
' → logprob: -19.000009536743164
    9. '१' → logprob: -19.500009536743164
    10. '১' → logprob: -19.625009536743164

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03862384334206581
    2. '2' → logprob: -3.413623809814453
    3. ' ,' → logprob: -5.788623809814453
    4. ' ' → logprob: -6.288623809814453
    5. '<|end|>' → logprob: -10.288623809814453
    6. '1' → logprob: -12.163623809814453
    7. '3' → logprob: -13.288623809814453
    8. ')' → logprob: -13.663623809814453
    9. '0' → logprob: -13.788623809814453
    10. '7' → logprob: -14.851123809814453

Token 63: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16023437678813934
    2. ' ' → logprob: -1.9102343320846558
    3. '<|end|>' → logprob: -12.035234451293945
    4. '1' → logprob: -13.035234451293945
    5. '-' → logprob: -14.035234451293945
    6. ' ' → logprob: -14.660234451293945
    7. ' -' → logprob: -15.347734451293945
    8. '  ' → logprob: -15.972734451293945
    9. '۲' → logprob: -16.347734451293945
    10. '```' → logprob: -16.660234451293945

Token 64: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011050770990550518
    2. ' ' → logprob: -4.511050701141357
    3. '-' → logprob: -13.511051177978516
    4. '1' → logprob: -14.261051177978516
    5. '<|end|>' → logprob: -15.761051177978516
    6. '  ' → logprob: -16.011051177978516
    7. ' ' → logprob: -16.136051177978516
    8. '```' → logprob: -16.261051177978516
    9. ' -' → logprob: -16.386051177978516
    10. '۲' → logprob: -16.761051177978516

Token 65: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0024112078826874495
    2. ')' → logprob: -7.002411365509033
    3. ',' → logprob: -7.127411365509033
    4. ')]' → logprob: -7.377411365509033
    5. ' ),' → logprob: -9.877410888671875
    6. '),(' → logprob: -11.627410888671875
    7. '(-' → logprob: -13.127410888671875
    8. ')],' → logprob: -13.502410888671875
    9. '],' → logprob: -13.627410888671875
    10. '),
' → logprob: -13.752410888671875

Token 66: ' (-' (ID: 21382)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008770680986344814
    2. '-' → logprob: -4.75877046585083
    3. '(-' → logprob: -9.258770942687988
    4. ' (-' → logprob: -9.883770942687988
    5. '1' → logprob: -12.383770942687988
    6. ' ' → logprob: -13.258770942687988
    7. '2' → logprob: -13.758770942687988
    8. ')' → logprob: -14.383770942687988
    9. ' (' → logprob: -14.508770942687988
    10. ',' → logprob: -14.883770942687988

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '2' → logprob: -14.000000953674316
    3. ')' → logprob: -15.500000953674316
    4. ' ' → logprob: -17.000001907348633
    5. '-' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -17.750001907348633
    7. '```' → logprob: -18.687501907348633
    8. ']' → logprob: -19.812501907348633
    9. '१' → logprob: -20.187501907348633
    10. '১' → logprob: -20.250001907348633

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011555780656635761
    2. ' -' → logprob: -7.626155376434326
    3. '-' → logprob: -7.876155376434326
    4. ',-' → logprob: -8.751155853271484
    5. ' ,' → logprob: -9.001155853271484
    6. ' ,-' → logprob: -13.251155853271484
    7. '2' → logprob: -13.501155853271484
    8. ' ' → logprob: -13.501155853271484
    9. ')' → logprob: -14.751155853271484
    10. ',
' → logprob: -15.126155853271484

Token 69: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026667742058634758
    2. ' -' → logprob: -3.651667833328247
    3. '2' → logprob: -8.026667594909668
    4. ' ' → logprob: -10.526667594909668
    5. '1' → logprob: -11.276667594909668
    6. '```' → logprob: -14.651667594909668
    7. ')' → logprob: -15.026667594909668
    8. '0' → logprob: -16.151668548583984
    9. '<|end|>' → logprob: -16.151668548583984
    10. ' ' → logprob: -16.401668548583984

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28115546703338623
    2. '1' → logprob: -1.4061554670333862
    3. ' ' → logprob: -12.406155586242676
    4. '-' → logprob: -14.531155586242676
    5. '```' → logprob: -15.031155586242676
    6. ')' → logprob: -15.281155586242676
    7. '3' → logprob: -16.28115463256836
    8. '   ' → logprob: -16.96865463256836
    9. '  ' → logprob: -18.09365463256836
    10. '<|end|>' → logprob: -18.15615463256836

Token 71: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008544052834622562
    2. ')' → logprob: -7.1258544921875
    3. '),' → logprob: -10.5008544921875
    4. ' )' → logprob: -11.8758544921875
    5. ')])' → logprob: -12.0008544921875
    6. ']' → logprob: -12.1258544921875
    7. '))' → logprob: -13.8758544921875
    8. ')],' → logprob: -14.1258544921875
    9. '])]' → logprob: -14.5008544921875
    10. ')]
' → logprob: -15.0008544921875

Token 72: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015810634940862656
    2. 'd' → logprob: -5.015810489654541
    3. '#' → logprob: -5.140810489654541
    4. 'n' → logprob: -6.265810489654541
    5. '```' → logprob: -7.140810489654541
    6. '\' → logprob: -9.6408109664917
    7. '
' → logprob: -9.7658109664917
    8. 'N' → logprob: -9.8908109664917
    9. '.' → logprob: -10.1408109664917
    10. 'D' → logprob: -10.1408109664917

Token 73: ' Check' (ID: 6208)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16556017100811005
    2. ' def' → logprob: -3.040560245513916
    3. 'GRID' → logprob: -3.665560245513916
    4. 'BOARD' → logprob: -3.915560245513916
    5. 'B' → logprob: -4.415560245513916
    6. ' BFS' → logprob: -5.165560245513916
    7. 'ROWS' → logprob: -5.790560245513916
    8. 'N' → logprob: -5.915560245513916
    9. '#' → logprob: -6.040560245513916
    10. 'Define' → logprob: -6.165560245513916

Token 74: ' in' (ID: 306)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07468302547931671
    2. ' whether' → logprob: -4.07468318939209
    3. '_' → logprob: -4.44968318939209
    4. '_valid' → logprob: -4.69968318939209
    5. ' valid' → logprob: -5.19968318939209
    6. 'if' → logprob: -5.32468318939209
    7. 'ing' → logprob: -5.44968318939209
    8. 's' → logprob: -5.69968318939209
    9. ' ' → logprob: -5.82468318939209
    10. ' the' → logprob: -6.19968318939209

Token 75: ' range' (ID: 3352)
  Prédit: '_bounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.6759457588195801
    2. 'bounds' → logprob: -1.30094575881958
    3. 'range' → logprob: -2.67594575881958
    4. '_' → logprob: -3.05094575881958
    5. '_range' → logprob: -3.30094575881958
    6. ' bounds' → logprob: -4.42594575881958
    7. ' range' → logprob: -4.67594575881958
    8. 'side' → logprob: -4.67594575881958
    9. 'dex' → logprob: -4.80094575881958
    10. 'bound' → logprob: -5.17594575881958

Token 76: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6618835926055908
    2. '_' → logprob: -1.1618835926055908
    3. '(x' → logprob: -2.536883592605591
    4. 'def' → logprob: -2.786883592605591
    5. 's' → logprob: -4.286883354187012
    6. 'x' → logprob: -5.536883354187012
    7. '(row' → logprob: -5.661883354187012
    8. '_x' → logprob: -5.786883354187012
    9. '(
' → logprob: -6.286883354187012
    10. '(_' → logprob: -7.161883354187012

Token 77: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2051975727081299
    2. 'def' → logprob: -1.2051975727081299
    3. '(x' → logprob: -1.3301975727081299
    4. '(' → logprob: -2.70519757270813
    5. '(row' → logprob: -3.08019757270813
    6. 'y' → logprob: -4.955197334289551
    7. '_' → logprob: -5.580197334289551
    8. 's' → logprob: -5.955197334289551
    9. 'row' → logprob: -6.205197334289551
    10. '(y' → logprob: -6.455197334289551

Token 78: '~' (ID: 93)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020353959873318672
    2. ' (' → logprob: -4.7703537940979
    3. 'and' → logprob: -5.7703537940979
    4. ' and' → logprob: -6.1453537940979
    5. ')' → logprob: -6.7703537940979
    6. 's' → logprob: -7.0203537940979
    7. '(
' → logprob: -7.1453537940979
    8. ',' → logprob: -7.2703537940979
    9. '_' → logprob: -7.6453537940979
    10. 'x' → logprob: -7.7703537940979

Token 79: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.46236345171928406
    2. '9' → logprob: -2.2123634815216064
    3. ' ' → logprob: -2.7123634815216064
    4. '4' → logprob: -3.2123634815216064
    5. 'N' → logprob: -3.4623634815216064
    6. 'H' → logprob: -3.8373634815216064
    7. 'h' → logprob: -3.8373634815216064
    8. '14' → logprob: -3.9623634815216064
    9. '19' → logprob: -4.337363243103027
    10. '49' → logprob: -4.962363243103027

Token 80: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01110075879842043
    2. ':' → logprob: -4.886100769042969
    3. '_' → logprob: -6.886100769042969
    4. ')' → logprob: -7.011100769042969
    5. ' def' → logprob: -7.261100769042969
    6. '(' → logprob: -8.386100769042969
    7. '```' → logprob: -9.011100769042969
    8. '[' → logprob: -9.136100769042969
    9. ':def' → logprob: -9.386100769042969
    10. ',' → logprob: -9.511100769042969

Token 81: ' park' (ID: 11796)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12478276342153549
    2. ' x' → logprob: -2.3747828006744385
    3. 'row' → logprob: -4.874782562255859
    4. 'y' → logprob: -5.874782562255859
    5. 'def' → logprob: -5.874782562255859
    6. ' row' → logprob: -6.624782562255859
    7. ' a' → logprob: -6.874782562255859
    8. 'r' → logprob: -6.874782562255859
    9. ' the' → logprob: -6.999782562255859
    10. ' y' → logprob: -6.999782562255859

Token 82: ' field' (ID: 3259)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48708322644233704
    2. '_' → logprob: -1.1120831966400146
    3. ':' → logprob: -3.9870831966400146
    4. ''s' → logprob: -4.362083435058594
    5. ')' → logprob: -4.862083435058594
    6. 's' → logprob: -5.112083435058594
    7. ',' → logprob: -5.737083435058594
    8. '[' → logprob: -6.237083435058594
    9. ' ' → logprob: -6.987083435058594
    10. ' def' → logprob: -7.237083435058594

Token 83: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01769867353141308
    2. ':' → logprob: -4.892698764801025
    3. '_' → logprob: -5.517698764801025
    4. ',' → logprob: -6.767698764801025
    5. '
' → logprob: -6.892698764801025
    6. ')' → logprob: -7.517698764801025
    7. '```' → logprob: -7.517698764801025
    8. '#' → logprob: -7.892698764801025
    9. ' def' → logprob: -7.892698764801025
    10. ''s' → logprob: -8.267698287963867

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.458980300929397e-05
    2. '```' → logprob: -10.12508487701416
    3. '
' → logprob: -10.37508487701416
    4. ' def' → logprob: -12.62508487701416
    5. '#' → logprob: -12.87508487701416
    6. '`' → logprob: -13.87508487701416
    7. '``' → logprob: -14.12508487701416
    8. '_' → logprob: -14.25008487701416
    9. '0' → logprob: -14.25008487701416
    10. '[' → logprob: -14.75008487701416

Token 85: ' in' (ID: 306)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4329511225223541
    2. ' in' → logprob: -1.0579510927200317
    3. 'is' → logprob: -6.182950973510742
    4. 'in' → logprob: -6.932950973510742
    5. ' check' → logprob: -7.807950973510742
    6. '_' → logprob: -8.432950973510742
    7. ' valid' → logprob: -8.682950973510742
    8. ' ' → logprob: -9.307950973510742
    9. '_in' → logprob: -9.932950973510742
    10. ' i' → logprob: -10.182950973510742

Token 86: '_' (ID: 62)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.00866775307804346
    2. '_bounds' → logprob: -5.008667945861816
    3. '_' → logprob: -6.508667945861816
    4. '_field' → logprob: -8.383667945861816
    5. '_bound' → logprob: -8.758667945861816
    6. 'range' → logprob: -10.758667945861816
    7. '_area' → logprob: -11.133667945861816
    8. '_ranges' → logprob: -11.633667945861816
    9. '_grid' → logprob: -11.883667945861816
    10. '_boundary' → logprob: -12.383667945861816

Token 87: 'park' (ID: 11174)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009203928639180958
    2. 'field' → logprob: -8.125920295715332
    3. 'bounds' → logprob: -8.250920295715332
    4. 'park' → logprob: -8.375920295715332
    5. 'bound' → logprob: -10.125920295715332
    6. '_range' → logprob: -10.250920295715332
    7. 'board' → logprob: -10.500920295715332
    8. '```' → logprob: -12.000920295715332
    9. 'grid' → logprob: -12.125920295715332
    10. 'boundary' → logprob: -12.875920295715332

Token 88: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5708419680595398
    2. '(' → logprob: -1.0708420276641846
    3. '_field' → logprob: -2.8208420276641846
    4. '(field' → logprob: -4.3208417892456055
    5. '_range' → logprob: -5.0708417892456055
    6. '_' → logprob: -5.4458417892456055
    7. '(i' → logprob: -6.3208417892456055
    8. '_(' → logprob: -7.0708417892456055
    9. '(pos' → logprob: -7.0708417892456055
    10. '(row' → logprob: -7.1958417892456055

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020294437126722187
    2. ' ,' → logprob: -9.125203132629395
    3. '):' → logprob: -9.875203132629395
    4. ',y' → logprob: -10.250203132629395
    5. ',x' → logprob: -13.125203132629395
    6. ')' → logprob: -13.375203132629395
    7. ':' → logprob: -13.625203132629395
    8. ',int' → logprob: -14.250203132629395
    9. ',
' → logprob: -14.375203132629395
    10. ' ' → logprob: -16.125202178955078

Token 90: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023246292024850845
    2. ' y' → logprob: -3.7732462882995605
    3. '<|end|>' → logprob: -14.648246765136719
    4. ')y' → logprob: -15.773246765136719
    5. ')' → logprob: -15.898246765136719
    6. '	y' → logprob: -16.27324676513672
    7. ' ' → logprob: -17.02324676513672
    8. ',y' → logprob: -18.02324676513672
    9. '0' → logprob: -18.39824676513672
    10. 'x' → logprob: -18.39824676513672

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00034845535992644727
    2. ')' → logprob: -8.125348091125488
    3. '):
' → logprob: -10.875348091125488
    4. ':' → logprob: -11.000348091125488
    5. ' ):' → logprob: -11.250348091125488
    6. ',' → logprob: -13.250348091125488
    7. ')：' → logprob: -14.875348091125488
    8. '():' → logprob: -15.250348091125488
    9. ''):' → logprob: -15.875348091125488
    10. '}:' → logprob: -16.000349044799805

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006561783142387867
    2. ':' → logprob: -5.256561756134033
    3. ' return' → logprob: -6.881561756134033
    4. '    ' → logprob: -9.506562232971191
    5. ':
' → logprob: -9.506562232971191
    6. ':return' → logprob: -10.006562232971191
    7. ' ' → logprob: -10.506562232971191
    8. '  ' → logprob: -10.756562232971191
    9. '(' → logprob: -11.256562232971191
    10. '	return' → logprob: -11.631562232971191

Token 93: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11157557368278503
    2. ' return' → logprob: -2.3615756034851074
    3. 'return' (adapté à ' return') → logprob: -4.486575603485107
    4. '    ' → logprob: -11.11157512664795
    5. '	return' → logprob: -11.48657512664795
    6. '```' → logprob: -12.23657512664795
    7. '0' → logprob: -12.36157512664795
    8. ' ' → logprob: -12.73657512664795
    9. '    
' → logprob: -13.73657512664795
    10. '
' → logprob: -13.73657512664795

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132900297641754
    2. ' ' → logprob: -1.313289999961853
    3. ' (' → logprob: -10.938289642333984
    4. '(' → logprob: -11.938289642333984
    5. ' ' → logprob: -12.813289642333984
    6. 'x' → logprob: -15.063289642333984
    7. '   ' → logprob: -15.438289642333984
    8. '  ' → logprob: -15.438289642333984
    9. ' x' → logprob: -15.813289642333984
    10. '```' → logprob: -16.313289642333984

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.750059127807617
    3. '(' → logprob: -13.875059127807617
    4. ' (' → logprob: -19.000059127807617
    5. '   ' → logprob: -19.000059127807617
    6. ' ' → logprob: -19.000059127807617
    7. '`' → logprob: -19.125059127807617
    8. '```' → logprob: -19.375059127807617
    9. 'x' → logprob: -19.500059127807617
    10. '00' → logprob: -20.750059127807617

Token 96: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.054911281913518906
    2. '<=' → logprob: -2.9299113750457764
    3. 'x' → logprob: -11.304911613464355
    4. '<' → logprob: -11.804911613464355
    5. ' ' → logprob: -12.679911613464355
    6. ' ' → logprob: -13.679911613464355
    7. ',' → logprob: -13.679911613464355
    8. ' <' → logprob: -13.929911613464355
    9. ')<=' → logprob: -14.554911613464355
    10. ' <=",' → logprob: -15.054911613464355

Token 97: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00020354038861114532
    2. ' x' → logprob: -8.500203132629395
    3. '	x' → logprob: -19.75020408630371
    4. ')x' → logprob: -20.37520408630371
    5. ' ' → logprob: -20.75020408630371
    6. '```' → logprob: -21.12520408630371
    7. '"x' → logprob: -21.75020408630371
    8. '{x' → logprob: -21.87520408630371
    9. '   ' → logprob: -22.12520408630371
    10. 'xref' → logprob: -22.12520408630371

Token 98: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.012992207892239094
    2. ' <' → logprob: -4.3879923820495605
    3. '<=' → logprob: -8.137991905212402
    4. 'and' → logprob: -9.137991905212402
    5. ' <=' → logprob: -10.012991905212402
    6. ' and' → logprob: -10.512991905212402
    7. '9' → logprob: -13.262991905212402
    8. '<int' → logprob: -13.637991905212402
    9. '<size' → logprob: -13.762991905212402
    10. ' ' → logprob: -13.762991905212402

Token 99: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.016042111441493034
    2. ' ' → logprob: -4.141042232513428
    3. '8' → logprob: -11.89104175567627
    4. '  ' → logprob: -15.26604175567627
    5. '   ' → logprob: -15.26604175567627
    6. '```' → logprob: -15.51604175567627
    7. '
' → logprob: -16.203542709350586
    8. '９' → logprob: -16.891042709350586
    9. '09' → logprob: -17.078542709350586
    10. ' ' → logprob: -17.578542709350586

Token 100: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.480199954239652e-05
    2. ' ' → logprob: -9.875064849853516
    3. '8' → logprob: -11.250064849853516
    4. '```' → logprob: -16.937564849853516
    5. '7' → logprob: -17.000064849853516
    6. '   ' → logprob: -17.500064849853516
    7. '９' → logprob: -17.812564849853516
    8. '99' → logprob: -18.062564849853516
    9. '4' → logprob: -18.187564849853516
    10. '  ' → logprob: -18.312564849853516

Token 101: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008623793721199036
    2. 'and' → logprob: -4.7586236000061035
    3. ' ' → logprob: -11.758624076843262
    4. '   ' → logprob: -13.883624076843262
    5. '	and' → logprob: -15.383624076843262
    6. ' ' → logprob: -16.633623123168945
    7. '    ' → logprob: -16.633623123168945
    8. '<|end|>' → logprob: -17.258623123168945
    9. '  ' → logprob: -17.383623123168945
    10. ' ,' → logprob: -18.383623123168945

Token 102: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2015714943408966
    2. '0' → logprob: -1.7015714645385742
    3. '   ' → logprob: -8.951571464538574
    4. '    ' → logprob: -11.076571464538574
    5. '  ' → logprob: -11.451571464538574
    6. 'y' → logprob: -14.076571464538574
    7. ' y' → logprob: -14.076571464538574
    8. ' ' → logprob: -14.576571464538574
    9. '     ' → logprob: -15.701571464538574
    10. '9' → logprob: -15.951571464538574

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008688322268426418
    2. ' ' → logprob: -4.758688449859619
    3. 'y' → logprob: -9.883687973022461
    4. ' y' → logprob: -10.758687973022461
    5. '   ' → logprob: -13.508687973022461
    6. '  ' → logprob: -16.00868797302246
    7. '    ' → logprob: -16.38368797302246
    8. 'x' → logprob: -17.38368797302246
    9. '     ' → logprob: -18.38368797302246
    10. ' ' → logprob: -18.50868797302246

Token 104: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03541460633277893
    2. '<=' → logprob: -3.410414695739746
    3. ' <' → logprob: -7.410414695739746
    4. '<|end|>' → logprob: -7.660414695739746
    5. ' ' → logprob: -8.035414695739746
    6. '<' → logprob: -8.285414695739746
    7. '   ' → logprob: -10.285414695739746
    8. ' >=' → logprob: -10.285414695739746
    9. ' ≤' → logprob: -11.785414695739746
    10. 'x' → logprob: -12.035414695739746

Token 105: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0067154900170862675
    2. ' y' → logprob: -5.006715297698975
    3. '	y' → logprob: -16.381715774536133
    4. ' ' → logprob: -17.006715774536133
    5. '9' → logprob: -17.256715774536133
    6. '   ' → logprob: -17.506715774536133
    7. '<|end|>' → logprob: -17.881715774536133
    8. 'x' → logprob: -18.631715774536133
    9. ')y' → logprob: -18.631715774536133
    10. '  ' → logprob: -19.881715774536133

Token 106: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03808888420462608
    2. '<=' → logprob: -3.288088798522949
    3. ' ' → logprob: -10.66308879852295
    4. '<|end|>' → logprob: -11.16308879852295
    5. ' <' → logprob: -12.53808879852295
    6. '<' → logprob: -13.28808879852295
    7. ' ≤' → logprob: -13.41308879852295
    8. ')<=' → logprob: -13.78808879852295
    9. ' ' → logprob: -14.91308879852295
    10. ' <=",' → logprob: -14.91308879852295

Token 107: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.012509997934103012
    2. ' ' → logprob: -4.387509822845459
    3. '   ' → logprob: -15.762510299682617
    4. '```' → logprob: -16.387510299682617
    5. '  ' → logprob: -16.637510299682617
    6. '۹' → logprob: -18.512510299682617
    7. '９' → logprob: -18.512510299682617
    8. ' ' → logprob: -18.575010299682617
    9. '4' → logprob: -18.700010299682617
    10. '10' → logprob: -18.825010299682617

Token 108: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.375011444091797
    4. '   ' → logprob: -17.687511444091797
    5. '۹' → logprob: -17.687511444091797
    6. '９' → logprob: -17.812511444091797
    7. '९' → logprob: -18.187511444091797
    8. '৯' → logprob: -18.812511444091797
    9. '  ' → logprob: -19.062511444091797
    10. '999' → logprob: -19.062511444091797

Token 109: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.048072945326566696
    2. '

' → logprob: -3.1730730533599854
    3. 'def' → logprob: -5.923072814941406
    4. '
' → logprob: -7.173072814941406
    5. 'newline' → logprob: -7.423072814941406
    6. '\n' → logprob: -8.048072814941406
    7. '<|end|>' → logprob: -8.173072814941406
    8. '```' → logprob: -8.673072814941406
    9. '#' → logprob: -9.798072814941406
    10. '  
' → logprob: -10.173072814941406

Token 110: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.639751136302948
    2. 'def' → logprob: -0.764751136302948
    3. '

' → logprob: -5.264750957489014
    4. '
' → logprob: -6.889750957489014
    5. '<|end|>' → logprob: -8.764751434326172
    6. '\n' → logprob: -8.889751434326172
    7. '#' → logprob: -8.889751434326172
    8. 'x' → logprob: -9.139751434326172
    9. '  
' → logprob: -9.139751434326172
    10. '```' → logprob: -9.264751434326172

Token 111: ' Spr' (ID: 16635)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.319370302458992e-06
    2. '#' → logprob: -12.625005722045898
    3. 'from' → logprob: -14.250005722045898
    4. '
' → logprob: -14.500005722045898
    5. 'class' → logprob: -15.125005722045898
    6. ' def' → logprob: -15.125005722045898
    7. 'de' → logprob: -15.875005722045898
    8. 'visited' → logprob: -16.7500057220459
    9. 'deque' → logprob: -17.0000057220459
    10. 'B' → logprob: -18.2500057220459

Token 112: 'ink' (ID: 881)
  Prédit: 'ead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ead' → logprob: -0.5755333304405212
    2. 'int' → logprob: -0.9505333304405212
    3. 'ep' → logprob: -3.950533390045166
    4. 'ing' → logprob: -4.575533390045166
    5. 'e' → logprob: -4.950533390045166
    6. 'ef' → logprob: -6.075533390045166
    7. 'def' → logprob: -6.575533390045166
    8. 'ed' → logprob: -6.700533390045166
    9. 'ess' → logprob: -7.075533390045166
    10. 'ose' → logprob: -7.200533390045166

Token 113: 'ler' (ID: 1639)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2026129812002182
    2. 'ler' → logprob: -1.7026129961013794
    3. 'ling' → logprob: -6.95261287689209
    4. 'l' → logprob: -9.20261287689209
    5. 'lers' → logprob: -9.57761287689209
    6. '   ' → logprob: -11.07761287689209
    7. '#' → logprob: -11.70261287689209
    8. '```' → logprob: -12.01511287689209
    9. 'er' → logprob: -12.07761287689209
    10. '_' → logprob: -12.82761287689209

Token 114: ''s' (ID: 885)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24285584688186646
    2. '(x' → logprob: -2.4928557872772217
    3. '_positions' → logprob: -3.2428557872772217
    4. ' =' → logprob: -3.4928557872772217
    5. ' def' → logprob: -4.492856025695801
    6. 's' → logprob: -4.867856025695801
    7. 'position' → logprob: -5.242856025695801
    8. 'class' → logprob: -5.492856025695801
    9. '_position' → logprob: -5.492856025695801
    10. 'pos' → logprob: -5.617856025695801

Token 115: ' water' (ID: 3411)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.870347261428833
    2. ' range' → logprob: -1.995347261428833
    3. ' coverage' → logprob: -2.120347261428833
    4. 'def' → logprob: -2.120347261428833
    5. ' def' → logprob: -2.620347261428833
    6. 'coverage' → logprob: -2.620347261428833
    7. 'position' → logprob: -3.495347261428833
    8. 'moves' → logprob: -3.620347261428833
    9. ' position' → logprob: -3.745347261428833
    10. 'water' → logprob: -3.995347261428833

Token 116: ' coverage' (ID: 13422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29370254278182983
    2. 'coverage' → logprob: -2.5437026023864746
    3. 'positions' → logprob: -3.6687026023864746
    4. 'range' → logprob: -3.7937026023864746
    5. '_positions' → logprob: -3.9187026023864746
    6. ' def' → logprob: -4.418702602386475
    7. ' coverage' → logprob: -4.418702602386475
    8. 'moves' → logprob: -4.543702602386475
    9. 's' → logprob: -4.668702602386475
    10. ' =' → logprob: -4.918702602386475

Token 117: ' relative' (ID: 15001)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3909671902656555
    2. ' =' → logprob: -1.2659671306610107
    3. ' def' → logprob: -4.14096736907959
    4. ' coverage' → logprob: -4.26596736907959
    5. 'coverage' → logprob: -5.64096736907959
    6. '_moves' → logprob: -6.26596736907959
    7. '=' → logprob: -6.89096736907959
    8. '_positions' → logprob: -7.26596736907959
    9. '_MOV' → logprob: -7.39096736907959
    10. 'moves' → logprob: -7.64096736907959

Token 118: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.6623820662498474
    2. 'moves' → logprob: -1.0373821258544922
    3. ' positions' → logprob: -2.412382125854492
    4. 'positions' → logprob: -3.412382125854492
    5. '_moves' → logprob: -5.662382125854492
    6. ' area' → logprob: -7.287382125854492
    7. ' coverage' → logprob: -7.787382125854492
    8. ' range' → logprob: -7.912382125854492
    9. ' offsets' → logprob: -7.912382125854492
    10. '_positions' → logprob: -8.287382125854492

Token 119: ' including' (ID: 3463)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6032294034957886
    2. 'SPR' → logprob: -0.8532294034957886
    3. ' =' → logprob: -4.228229522705078
    4. 'C' → logprob: -5.478229522705078
    5. ' SPR' → logprob: -6.603229522705078
    6. '=' → logprob: -6.603229522705078
    7. 'SP' → logprob: -6.728229522705078
    8. 'S' → logprob: -6.728229522705078
    9. 'J' → logprob: -6.853229522705078
    10. '#' → logprob: -7.853229522705078

Token 120: ' itself' (ID: 8807)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07027273625135422
    2. ' (' → logprob: -3.32027268409729
    3. 'the' → logprob: -3.94527268409729
    4. ' the' → logprob: -4.945272922515869
    5. 'current' → logprob: -6.945272922515869
    6. ' itself' → logprob: -7.070272922515869
    7. 'self' → logprob: -7.195272922515869
    8. ' staying' → logprob: -7.820272922515869
    9. ' current' → logprob: -7.945272922515869
    10. '(x' → logprob: -8.070272445678711

Token 121: '
' (ID: 198)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.48304712772369385
    2. 'SPR' → logprob: -1.1080471277236938
    3. 'C' → logprob: -3.2330470085144043
    4. 'S' → logprob: -5.858047008514404
    5. ' =' → logprob: -5.858047008514404
    6. 'SP' → logprob: -6.733047008514404
    7. ' SPR' → logprob: -6.858047008514404
    8. ' WATER' → logprob: -6.983047008514404
    9. '#' → logprob: -7.358047008514404
    10. 'SELF' → logprob: -7.733047008514404

Token 122: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.4232466220855713
    2. 'SPR' → logprob: -1.1732466220855713
    3. 'C' → logprob: -3.4232466220855713
    4. 'S' → logprob: -6.923246383666992
    5. '#' → logprob: -7.798246383666992
    6. 'SP' → logprob: -8.173246383666992
    7. 'SELF' → logprob: -8.798246383666992
    8. ' SPR' → logprob: -8.923246383666992
    9. '```' → logprob: -8.923246383666992
    10. ' WATER' → logprob: -9.173246383666992

Token 123: 'ATER' (ID: 30328)
  Prédit: 'ATER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ATER' → logprob: -0.00038407891406677663
    2. 'C' → logprob: -8.625384330749512
    3. 'W' → logprob: -9.000384330749512
    4. 'ater' → logprob: -10.500384330749512
    5. 'A' → logprob: -11.625384330749512
    6. '_' → logprob: -12.000384330749512
    7. 'SPR' → logprob: -12.000384330749512
    8. 'AT' → logprob: -12.375384330749512
    9. '_C' → logprob: -12.875384330749512
    10. 'S' → logprob: -13.000384330749512

Token 124: '_C' (ID: 1720)
  Prédit: '_MOV'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOV' → logprob: -0.5781484246253967
    2. '_C' → logprob: -0.8281484246253967
    3. 'C' → logprob: -6.703148365020752
    4. ' =' → logprob: -7.453148365020752
    5. '_' → logprob: -9.45314884185791
    6. '_MOVE' → logprob: -9.82814884185791
    7. '_moves' → logprob: -9.95314884185791
    8. '_RANGE' → logprob: -9.95314884185791
    9. '=' → logprob: -10.07814884185791
    10. '_AREA' → logprob: -10.07814884185791

Token 125: 'OVER' (ID: 34489)
  Prédit: 'OVER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OVER' → logprob: -0.043288394808769226
    2. 'OV' → logprob: -3.168288469314575
    3. 'O' → logprob: -9.168288230895996
    4. 'OVE' → logprob: -9.793288230895996
    5. 'over' → logprob: -10.293288230895996
    6. 'ONT' → logprob: -10.793288230895996
    7. 'MOV' → logprob: -11.418288230895996
    8. 'C' → logprob: -11.668288230895996
    9. 'OVERY' → logprob: -11.793288230895996
    10. 'OM' → logprob: -12.043288230895996

Token 126: 'AGE' (ID: 6582)
  Prédit: 'AGE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AGE' → logprob: -0.0010187560692429543
    2. 'ED' → logprob: -8.001018524169922
    3. '=' → logprob: -8.751018524169922
    4. ' =' → logprob: -8.876018524169922
    5. 'AGES' → logprob: -8.876018524169922
    6. 'S' → logprob: -9.126018524169922
    7. '_' → logprob: -10.626018524169922
    8. 'ING' → logprob: -10.876018524169922
    9. 'ES' → logprob: -10.876018524169922
    10. 'E' → logprob: -11.001018524169922

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009757975116372108
    2. '=' → logprob: -4.634757995605469
    3. ' ' → logprob: -13.634757995605469
    4. ' =[' → logprob: -14.759757995605469
    5. '=[' → logprob: -15.759757995605469
    6. ')' → logprob: -16.50975799560547
    7. '[' → logprob: -16.88475799560547
    8. ' =
' → logprob: -16.88475799560547
    9. ',' → logprob: -17.50975799560547
    10. 's' → logprob: -17.63475799560547

Token 128: ' [
' (ID: 4240)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.115269236266613
    2. ' [(' → logprob: -2.240269184112549
    3. '[' → logprob: -6.740269184112549
    4. '[
' → logprob: -6.990269184112549
    5. ' [' → logprob: -8.365269660949707
    6. ' [
' → logprob: -9.365269660949707
    7. '[((' → logprob: -11.615269660949707
    8. ' ' → logprob: -11.865269660949707
    9. '([(' → logprob: -12.490269660949707
    10. '(' → logprob: -14.115269660949707

Token 129: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20329484343528748
    2. ' (' → logprob: -1.7032948732376099
    3. '   ' → logprob: -6.32829475402832
    4. '(-' → logprob: -9.70329475402832
    5. ' ' → logprob: -11.57829475402832
    6. '(x' → logprob: -11.57829475402832
    7. ' (-' → logprob: -12.07829475402832
    8. '  ' → logprob: -12.57829475402832
    9. '[' → logprob: -13.45329475402832
    10. '	' → logprob: -13.82829475402832

Token 130: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.017211591824889183
    2. ' (' → logprob: -4.767211437225342
    3. '(-' → logprob: -4.767211437225342
    4. '   ' → logprob: -10.7672119140625
    5. ' (-' → logprob: -10.7672119140625
    6. '(x' → logprob: -11.5172119140625
    7. ' ' → logprob: -13.3922119140625
    8. '(dx' → logprob: -14.1422119140625
    9. '  ' → logprob: -14.5172119140625
    10. '0' → logprob: -15.7672119140625

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015117661096155643
    2. ' ' → logprob: -6.751511573791504
    3. '-' → logprob: -8.001511573791504
    4. '(' → logprob: -13.251511573791504
    5. '   ' → logprob: -13.501511573791504
    6. ' -' → logprob: -13.626511573791504
    7. '1' → logprob: -14.001511573791504
    8. '  ' → logprob: -14.501511573791504
    9. ')' → logprob: -15.501511573791504
    10. ' (' → logprob: -16.18901252746582

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006212961161509156
    2. ' ,' → logprob: -7.500621318817139
    3. '0' → logprob: -9.75062084197998
    4. ' ' → logprob: -11.87562084197998
    5. ',
' → logprob: -13.87562084197998
    6. '   ' → logprob: -14.12562084197998
    7. ')' → logprob: -15.00062084197998
    8. '  ' → logprob: -15.12562084197998
    9. '
' → logprob: -15.50062084197998
    10. '),' → logprob: -16.250621795654297

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01609865576028824
    2. ' ' → logprob: -4.141098499298096
    3. '-' → logprob: -9.891098976135254
    4. ' -' → logprob: -12.391098976135254
    5. ')' → logprob: -12.516098976135254
    6. '1' → logprob: -12.641098976135254
    7. '  ' → logprob: -14.203598976135254
    8. '),' → logprob: -14.828598976135254
    9. ',' → logprob: -15.078598976135254
    10. '   ' → logprob: -15.266098976135254

Token 134: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5894849300384521
    2. '),
' → logprob: -0.8394849300384521
    3. ')' → logprob: -4.589485168457031
    4. '),(' → logprob: -6.089485168457031
    5. '),

' → logprob: -7.089485168457031
    6. ')]' → logprob: -9.464485168457031
    7. ')
' → logprob: -10.214485168457031
    8. '),
' → logprob: -10.589485168457031
    9. ' ),
' → logprob: -10.839485168457031
    10. ' ),' → logprob: -10.839485168457031

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48876863718032837
    2. '-' → logprob: -1.1137685775756836
    3. '1' → logprob: -2.8637685775756836
    4. ' ' → logprob: -6.738768577575684
    5. ' -' → logprob: -9.738768577575684
    6. ')' → logprob: -14.176268577575684
    7. '−' → logprob: -14.238768577575684
    8. '+' → logprob: -14.801268577575684
    9. '   ' → logprob: -15.238768577575684
    10. '  ' → logprob: -15.613768577575684

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00171278219204396
    2. ',-' → logprob: -6.501712799072266
    3. ' ,' → logprob: -9.001712799072266
    4. '1' → logprob: -10.001712799072266
    5. ',+' → logprob: -10.376712799072266
    6. '-' → logprob: -12.376712799072266
    7. ' ' → logprob: -13.251712799072266
    8. ',
' → logprob: -14.126712799072266
    9. '+' → logprob: -14.251712799072266
    10. '),' → logprob: -14.251712799072266

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42899706959724426
    2. '-' → logprob: -1.0539970397949219
    3. '0' → logprob: -8.678997039794922
    4. ' ' → logprob: -9.303997039794922
    5. ' -' → logprob: -10.428997039794922
    6. '+' → logprob: -12.553997039794922
    7. '−' → logprob: -14.866497039794922
    8. '   ' → logprob: -14.928997039794922
    9. '2' → logprob: -15.116497039794922
    10. '
' → logprob: -15.303997039794922

Token 138: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0025629340671002865
    2. '),' → logprob: -6.002562999725342
    3. ')' → logprob: -10.002562522888184
    4. '),
' → logprob: -10.752562522888184
    5. ' ),' → logprob: -10.877562522888184
    6. ',' → logprob: -14.627562522888184
    7. ' ' → logprob: -14.627562522888184
    8. ')(' → logprob: -15.127562522888184
    9. '),

' → logprob: -15.627562522888184
    10. '(' → logprob: -16.1275634765625

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07692702859640121
    2. '-' → logprob: -3.0769269466400146
    3. '1' → logprob: -3.7019269466400146
    4. ' ' → logprob: -5.826927185058594
    5. ' -' → logprob: -8.076927185058594
    6. '   ' → logprob: -13.826927185058594
    7. ')' → logprob: -13.826927185058594
    8. '−' → logprob: -13.826927185058594
    9. '```' → logprob: -14.014427185058594
    10. '  ' → logprob: -14.576927185058594

Token 140: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.10026393085718155
    2. ',' → logprob: -2.350263833999634
    3. ',+' → logprob: -10.350263595581055
    4. '-' → logprob: -11.725263595581055
    5. ' ,-' → logprob: -11.850263595581055
    6. ' ,' → logprob: -12.475263595581055
    7. '2' → logprob: -13.850263595581055
    8. ',-
' → logprob: -14.100263595581055
    9. '1' → logprob: -14.475263595581055
    10. ',
' → logprob: -14.600263595581055

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. '0' → logprob: -11.125018119812012
    3. ' ' → logprob: -13.125018119812012
    4. '```' → logprob: -15.187518119812012
    5. '2' → logprob: -15.625018119812012
    6. '-' → logprob: -16.312517166137695
    7. ')' → logprob: -16.375017166137695
    8. '<|end|>' → logprob: -17.937517166137695
    9. '   ' → logprob: -18.000017166137695
    10. '
' → logprob: -18.250017166137695

Token 142: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0015008177142590284
    2. '),' → logprob: -6.626500606536865
    3. ')' → logprob: -8.751501083374023
    4. '),
' → logprob: -12.251501083374023
    5. ',' → logprob: -12.376501083374023
    6. ',(' → logprob: -12.751501083374023
    7. ' ),' → logprob: -13.001501083374023
    8. '(' → logprob: -13.751501083374023
    9. ')(' → logprob: -14.876501083374023
    10. ' ' → logprob: -15.751501083374023

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037680165842175484
    2. '-' → logprob: -5.628767967224121
    3. ' ' → logprob: -8.878767967224121
    4. ' -' → logprob: -10.628767967224121
    5. '0' → logprob: -12.878767967224121
    6. ')' → logprob: -14.378767967224121
    7. '   ' → logprob: -15.066267967224121
    8. '```' → logprob: -15.441267967224121
    9. '
' → logprob: -16.066268920898438
    10. '(' → logprob: -16.503768920898438

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027222526259720325
    2. '0' → logprob: -6.002722263336182
    3. ' ,' → logprob: -8.502721786499023
    4. '<|end|>' → logprob: -10.127721786499023
    5. ')' → logprob: -13.377721786499023
    6. ' ' → logprob: -14.002721786499023
    7. '<|end|>' → logprob: -14.752721786499023
    8. ',
' → logprob: -15.752721786499023
    9. '1' → logprob: -16.377721786499023
    10. ',)' → logprob: -16.502721786499023

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -11.00002670288086
    3. '1' → logprob: -12.12502670288086
    4. '<|end|>' → logprob: -12.37502670288086
    5. ')' → logprob: -14.87502670288086
    6. '-' → logprob: -15.75002670288086
    7. '```' → logprob: -16.25002670288086
    8. '<|end|>' → logprob: -16.93752670288086
    9. '۰' → logprob: -17.25002670288086
    10. '  ' → logprob: -17.87502670288086

Token 146: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0008778737974353135
    2. '),' → logprob: -7.250877857208252
    3. ')' → logprob: -9.25087833404541
    4. ',' → logprob: -10.00087833404541
    5. ',(' → logprob: -10.75087833404541
    6. '),
' → logprob: -13.25087833404541
    7. ' ),' → logprob: -13.62587833404541
    8. '(' → logprob: -13.87587833404541
    9. ',),' → logprob: -14.75087833404541
    10. ')(' → logprob: -15.12587833404541

Token 147: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.03846268355846405
    2. '(' → logprob: -3.2884626388549805
    3. '-' → logprob: -7.9134626388549805
    4. ' (-' → logprob: -10.03846263885498
    5. '1' → logprob: -12.16346263885498
    6. ' (' → logprob: -12.28846263885498
    7. ',-' → logprob: -14.16346263885498
    8. '[-' → logprob: -14.78846263885498
    9. '   ' → logprob: -15.66346263885498
    10. ' -' → logprob: -15.66346263885498

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '0' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '<|end|>' → logprob: -15.750001907348633
    5. '```' → logprob: -17.187501907348633
    6. ')' → logprob: -17.687501907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. ',' → logprob: -17.937501907348633
    9. '   ' → logprob: -18.000001907348633
    10. '१' → logprob: -18.187501907348633

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2525087893009186
    2. '0' → logprob: -1.5025087594985962
    3. '<|end|>' → logprob: -8.002509117126465
    4. ' ,' → logprob: -8.627509117126465
    5. ' ' → logprob: -9.752509117126465
    6. ')' → logprob: -13.002509117126465
    7. '<|end|>' → logprob: -13.002509117126465
    8. '```' → logprob: -13.752509117126465
    9. '
' → logprob: -15.002509117126465
    10. '1' → logprob: -15.065009117126465

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4259644558478612e-05
    2. '<|end|>' → logprob: -11.500014305114746
    3. ' ' → logprob: -12.500014305114746
    4. ')' → logprob: -15.500014305114746
    5. '<|end|>' → logprob: -16.87501335144043
    6. '1' → logprob: -17.37501335144043
    7. '۰' → logprob: -17.87501335144043
    8. '```' → logprob: -18.43751335144043
    9. '
' → logprob: -18.81251335144043
    10. 'user' → logprob: -18.81251335144043

Token 151: '),
' (ID: 2313)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.16304858028888702
    2. '),' → logprob: -2.163048505783081
    3. ')' → logprob: -3.663048505783081
    4. ')]' → logprob: -5.03804874420166
    5. ',' → logprob: -6.16304874420166
    6. ',(' → logprob: -6.78804874420166
    7. '(' → logprob: -10.66304874420166
    8. '),
' → logprob: -11.41304874420166
    9. ' ),' → logprob: -11.41304874420166
    10. ')],' → logprob: -11.41304874420166

Token 152: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07891435921192169
    2. ' (' → logprob: -2.5789144039154053
    3. '   ' → logprob: -10.828914642333984
    4. ',(' → logprob: -12.953914642333984
    5. ',' → logprob: -13.578914642333984
    6. '(-' → logprob: -14.203914642333984
    7. '<|end|>' → logprob: -15.953914642333984
    8. ' ' → logprob: -16.578914642333984
    9. '1' → logprob: -16.828914642333984
    10. ' (-' → logprob: -17.203914642333984

Token 153: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' (adapté à ' (') → logprob: -0.03365607559680939
    2. ' (' → logprob: -3.408656120300293
    3. '   ' → logprob: -11.783656120300293
    4. ',' → logprob: -14.033656120300293
    5. '1' → logprob: -14.158656120300293
    6. '(-' → logprob: -14.783656120300293
    7. ')' → logprob: -14.908656120300293
    8. ' ' → logprob: -16.033655166625977
    9. ']' → logprob: -16.158655166625977
    10. ',(' → logprob: -16.283655166625977

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022979900240898132
    2. '0' → logprob: -6.252297878265381
    3. ' ' → logprob: -8.002298355102539
    4. '-' → logprob: -10.377298355102539
    5. ',' → logprob: -14.127298355102539
    6. '```' → logprob: -14.627298355102539
    7. '
' → logprob: -14.752298355102539
    8. ')' → logprob: -14.814798355102539
    9. '   ' → logprob: -14.939798355102539
    10. ' -' → logprob: -15.002298355102539

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034356804098933935
    2. ' ,' → logprob: -8.750343322753906
    3. '1' → logprob: -9.125343322753906
    4. '<|end|>' → logprob: -9.875343322753906
    5. ',-' → logprob: -11.000343322753906
    6. '<|end|>' → logprob: -13.500343322753906
    7. ')' → logprob: -13.750343322753906
    8. ',
' → logprob: -13.875343322753906
    9. ' ' → logprob: -14.000343322753906
    10. '-' → logprob: -14.937843322753906

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.172891830326989e-05
    2. ' ' → logprob: -10.000082015991211
    3. '-' → logprob: -10.500082015991211
    4. '<|end|>' → logprob: -12.125082015991211
    5. ')' → logprob: -13.625082015991211
    6. '0' → logprob: -14.000082015991211
    7. ' -' → logprob: -15.000082015991211
    8. '
' → logprob: -15.250082015991211
    9. '```' → logprob: -15.625082015991211
    10. '<|end|>' → logprob: -15.812582015991211

Token 157: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.03386709466576576
    2. '),' → logprob: -3.408867120742798
    3. ')' → logprob: -8.533866882324219
    4. ',' → logprob: -11.533866882324219
    5. '),
' → logprob: -11.783866882324219
    6. ' ),' → logprob: -13.033866882324219
    7. '(' → logprob: -13.533866882324219
    8. '),

' → logprob: -13.783866882324219
    9. ',(' → logprob: -13.908866882324219
    10. ')(' → logprob: -14.908866882324219

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28123438358306885
    2. '-' → logprob: -1.4062343835830688
    3. ' ' → logprob: -10.156234741210938
    4. ' -' → logprob: -10.281234741210938
    5. '(' → logprob: -11.906234741210938
    6. '0' → logprob: -14.156234741210938
    7. '−' → logprob: -14.406234741210938
    8. '```' → logprob: -14.656234741210938
    9. '(-' → logprob: -15.031234741210938
    10. '   ' → logprob: -15.031234741210938

Token 159: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.014500296674668789
    2. ',' → logprob: -4.264500141143799
    3. '-' → logprob: -8.014500617980957
    4. '",-' → logprob: -13.639500617980957
    5. '0' → logprob: -13.764500617980957
    6. ' ,-' → logprob: -13.764500617980957
    7. '<|end|>' → logprob: -14.514500617980957
    8. ' -' → logprob: -14.764500617980957
    9. ',-
' → logprob: -15.014500617980957
    10. ')' → logprob: -15.264500617980957

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '<|end|>' → logprob: -14.250000953674316
    3. ' ' → logprob: -17.5
    4. '<|end|>' → logprob: -17.875
    5. '۱' → logprob: -20.0
    6. '-' → logprob: -20.1875
    7. '১' → logprob: -20.1875
    8. '१' → logprob: -20.375
    9. ')' → logprob: -20.4375
    10. '```' → logprob: -20.4375

Token 161: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.2255568653345108
    2. '),' → logprob: -1.6005568504333496
    3. ' ),' → logprob: -9.600557327270508
    4. ')' → logprob: -9.725557327270508
    5. ',' → logprob: -11.975557327270508
    6. '),
' → logprob: -12.975557327270508
    7. ')(' → logprob: -13.225557327270508
    8. '(' → logprob: -13.350557327270508
    9. '),'' → logprob: -14.225557327270508
    10. ',),' → logprob: -14.475557327270508

Token 162: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.04949108511209488
    2. '-' → logprob: -3.0494911670684814
    3. ' (-' → logprob: -7.049490928649902
    4. '(' → logprob: -11.174490928649902
    5. ' -' → logprob: -11.299490928649902
    6. '   ' → logprob: -11.924490928649902
    7. '[-' → logprob: -14.049490928649902
    8. ',-' → logprob: -14.049490928649902
    9. '{-' → logprob: -14.924490928649902
    10. '0' → logprob: -15.924490928649902

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '<|end|>' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '<|end|>' → logprob: -17.875
    5. '۱' → logprob: -18.0
    6. '१' → logprob: -18.0625
    7. '১' → logprob: -18.125
    8. '2' → logprob: -18.875
    9. '１' → logprob: -18.875
    10. '```' → logprob: -18.875

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033938486594706774
    2. '1' → logprob: -5.878393650054932
    3. ',-' → logprob: -7.628393650054932
    4. '<|end|>' → logprob: -9.50339412689209
    5. ' ,' → logprob: -10.75339412689209
    6. '-' → logprob: -13.12839412689209
    7. '<|end|>' → logprob: -13.75339412689209
    8. ',
' → logprob: -13.87839412689209
    9. ' ' → logprob: -14.00339412689209
    10. ',user' → logprob: -15.25339412689209

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004067202680744231
    2. '-' → logprob: -7.875406742095947
    3. '<|end|>' → logprob: -10.750406265258789
    4. ' ' → logprob: -13.000406265258789
    5. '0' → logprob: -13.625406265258789
    6. ' -' → logprob: -13.875406265258789
    7. ')' → logprob: -14.750406265258789
    8. '+' → logprob: -15.625406265258789
    9. '<|end|>' → logprob: -16.50040626525879
    10. '```' → logprob: -18.00040626525879

Token 166: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0026887289714068174
    2. '),(' → logprob: -6.127688884735107
    3. ',' → logprob: -7.752688884735107
    4. ')' → logprob: -9.75268840789795
    5. ' ),' → logprob: -11.50268840789795
    6. ',),' → logprob: -12.50268840789795
    7. ' ' → logprob: -15.00268840789795
    8. '),
' → logprob: -15.12768840789795
    9. '},' → logprob: -15.50268840789795
    10. '   ' → logprob: -15.75268840789795

Token 167: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.005245260428637266
    2. '-' → logprob: -5.255245208740234
    3. ' (-' → logprob: -11.505245208740234
    4. '   ' → logprob: -14.255245208740234
    5. ' -' → logprob: -15.255245208740234
    6. '(' → logprob: -15.630245208740234
    7. '
' → logprob: -16.630245208740234
    8. ',-' → logprob: -16.755245208740234
    9. '[-' → logprob: -16.880245208740234
    10. ' ' → logprob: -17.505245208740234

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. '-' → logprob: -11.875012397766113
    3. ')' → logprob: -13.375012397766113
    4. ' ' → logprob: -14.187512397766113
    5. ' -' → logprob: -14.625012397766113
    6. '```' → logprob: -14.812512397766113
    7. '<|end|>' → logprob: -15.562512397766113
    8. '   ' → logprob: -15.812512397766113
    9. '2' → logprob: -15.812512397766113
    10. ',' → logprob: -16.437511444091797

Token 169: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0019336353288963437
    2. '-' → logprob: -6.626933574676514
    3. ',' → logprob: -7.501933574676514
    4. ' -' → logprob: -10.001934051513672
    5. ',-
' → logprob: -12.751934051513672
    6. ' ,-' → logprob: -13.126934051513672
    7. ',-

' → logprob: -13.626934051513672
    8. ')' → logprob: -14.126934051513672
    9. '",-' → logprob: -14.251934051513672
    10. '<|end|>' → logprob: -14.626934051513672

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ')' → logprob: -12.625003814697266
    3. '-' → logprob: -16.250003814697266
    4. ' ' → logprob: -17.625003814697266
    5. '```' → logprob: -18.812503814697266
    6. '<|end|>' → logprob: -18.812503814697266
    7. '१' → logprob: -19.500003814697266
    8. '１' → logprob: -19.562503814697266
    9. '১' → logprob: -19.562503814697266
    10. '۱' → logprob: -19.687503814697266

Token 171: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40515783429145813
    2. ')]' → logprob: -1.1551578044891357
    3. ']' → logprob: -4.030158042907715
    4. '),' → logprob: -8.155158042907715
    5. ' )' → logprob: -11.155158042907715
    6. '),(' → logprob: -11.405158042907715
    7. '   ' → logprob: -12.030158042907715
    8. ')
' → logprob: -12.030158042907715
    9. ')],' → logprob: -12.030158042907715
    10. ')])' → logprob: -12.280158042907715

Token 172: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.060365608893335e-05
    2. ')' → logprob: -10.375041007995605
    3. ' ]' → logprob: -12.250041007995605
    4. ']

' → logprob: -13.500041007995605
    5. ',' → logprob: -13.875041007995605
    6. ']
' → logprob: -13.875041007995605
    7. ')]' → logprob: -14.125041007995605
    8. '   ' → logprob: -15.375041007995605
    9. '<|end|>' → logprob: -16.00004005432129
    10. '}' → logprob: -16.12504005432129

Token 173: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011133303865790367
    2. '
' → logprob: -5.011133193969727
    3. '<|end|>' → logprob: -6.136133193969727
    4. '#' → logprob: -6.511133193969727
    5. 'class' → logprob: -8.386133193969727
    6. '\n' → logprob: -9.011133193969727
    7. 'x' → logprob: -9.261133193969727
    8. '<|end|>' → logprob: -9.886133193969727
    9. '\' → logprob: -10.011133193969727
    10. '

' → logprob: -10.011133193969727

Token 174: ' solve' (ID: 17722)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.09981351345777512
    2. ' ' → logprob: -3.599813461303711
    3. ' shortest' → logprob: -3.849813461303711
    4. ' can' → logprob: -4.349813461303711
    5. ' find' → logprob: -4.849813461303711
    6. ' calculate' → logprob: -5.099813461303711
    7. ' solve' → logprob: -5.474813461303711
    8. ' is' → logprob: -5.599813461303711
    9. ' space' → logprob: -6.224813461303711
    10. ' sprinkler' → logprob: -6.349813461303711

Token 175: '(px' (ID: 195026)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013134514447301626
    2. '(' → logprob: -7.50131368637085
    3. '(x' → logprob: -7.87631368637085
    4. ' ():' → logprob: -8.251313209533691
    5. '()' → logprob: -9.876313209533691
    6. '(s' → logprob: -11.751313209533691
    7. '(line' → logprob: -12.126313209533691
    8. '(a' → logprob: -12.126313209533691
    9. '(grid' → logprob: -12.251313209533691
    10. '(p' → logprob: -12.501313209533691

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009223414584994316
    2. '):' → logprob: -5.259223461151123
    3. ')' → logprob: -6.884223461151123
    4. '_,' → logprob: -7.009223461151123
    5. 'p' → logprob: -7.759223461151123
    6. ',p' → logprob: -8.134222984313965
    7. '_p' → logprob: -8.384222984313965
    8. 'x' → logprob: -8.384222984313965
    9. ' ,' → logprob: -8.759222984313965
    10. 'y' → logprob: -9.259222984313965

Token 177: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.08895615488290787
    2. ' py' → logprob: -2.463956117630005
    3. ' ' → logprob: -11.713955879211426
    4. '```' → logprob: -13.338955879211426
    5. '   ' → logprob: -13.588955879211426
    6. '.py' → logprob: -13.713955879211426
    7. '_py' → logprob: -13.838955879211426
    8. '
' → logprob: -14.213955879211426
    9. '(py' → logprob: -14.338955879211426
    10. 'qy' → logprob: -14.963955879211426

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06217001751065254
    2. '):' → logprob: -2.8121700286865234
    3. '):
' → logprob: -9.062170028686523
    4. ' ,' → logprob: -10.062170028686523
    5. ')' → logprob: -11.062170028686523
    6. ',p' → logprob: -11.437170028686523
    7. ' ):' → logprob: -12.187170028686523
    8. '   ' → logprob: -12.812170028686523
    9. ',x' → logprob: -12.812170028686523
    10. ':' → logprob: -13.437170028686523

Token 179: ' n' (ID: 297)
  Prédit: 'gx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gx' → logprob: -0.3742392063140869
    2. 'tx' → logprob: -2.249239206314087
    3. 'qx' → logprob: -2.499239206314087
    4. 'sx' → logprob: -2.999239206314087
    5. ' gx' → logprob: -4.624238967895508
    6. 'ex' → logprob: -4.749238967895508
    7. 'kx' → logprob: -5.249238967895508
    8. 'dx' → logprob: -5.249238967895508
    9. 'wx' → logprob: -5.374238967895508
    10. 'visited' → logprob: -5.374238967895508

Token 180: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040421660989522934
    2. ',' → logprob: -3.290421724319458
    3. ')' → logprob: -6.665421485900879
    4. '):
' → logprob: -7.040421485900879
    5. ' ):' → logprob: -9.290421485900879
    6. '=' → logprob: -10.540421485900879
    7. 'w' → logprob: -10.915421485900879
    8. ' ,' → logprob: -11.165421485900879
    9. ':' → logprob: -11.790421485900879
    10. 's' → logprob: -12.165421485900879

Token 181: ' sprink' (ID: 80706)
  Prédit: ' sprink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sprink' → logprob: -0.7167320847511292
    2. 'sx' → logprob: -2.0917320251464844
    3. 'spr' → logprob: -2.2167320251464844
    4. 'park' → logprob: -2.9667320251464844
    5. ' sx' → logprob: -3.7167320251464844
    6. ' sprinkler' → logprob: -3.8417320251464844
    7. 'water' → logprob: -3.9667320251464844
    8. ' park' → logprob: -4.091732025146484
    9. 'w' → logprob: -4.216732025146484
    10. 'wx' → logprob: -4.466732025146484

Token 182: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.005982362665235996
    2. 'ler' → logprob: -5.255982398986816
    3. 'l' → logprob: -8.130982398986816
    4. 'ers' → logprob: -9.255982398986816
    5. '#' → logprob: -9.630982398986816
    6. '_' → logprob: -10.005982398986816
    7. ')' → logprob: -10.630982398986816
    8. '   ' → logprob: -11.068482398986816
    9. '```' → logprob: -11.130982398986816
    10. '{' → logprob: -11.505982398986816

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025946661829948425
    2. ',' → logprob: -3.900946617126465
    3. '):
' → logprob: -5.275946617126465
    4. ')' → logprob: -9.150946617126465
    5. '_positions' → logprob: -9.525946617126465
    6. '):
' → logprob: -10.400946617126465
    7. 's' → logprob: -11.150946617126465
    8. ' ):' → logprob: -11.150946617126465
    9. '_list' → logprob: -11.900946617126465
    10. 'positions' → logprob: -11.900946617126465

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2235398292541504
    2. ':' → logprob: -1.7235398292541504
    3. ':
' → logprob: -3.8485398292541504
    4. '```' → logprob: -8.598539352416992
    5. '):
' → logprob: -9.348539352416992
    6. '    
' → logprob: -9.723539352416992
    7. ',' → logprob: -9.848539352416992
    8. '):' → logprob: -9.973539352416992
    9. '
' → logprob: -10.098539352416992
    10. 'def' → logprob: -11.098539352416992

Token 185: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4065277576446533
    2. ' visited' → logprob: -1.7815277576446533
    3. 'visited' → logprob: -2.1565277576446533
    4. ' from' → logprob: -4.031527519226074
    5. ' queue' → logprob: -4.406527519226074
    6. 'from' → logprob: -4.656527519226074
    7. 'queue' → logprob: -5.281527519226074
    8. ' dist' → logprob: -6.781527519226074
    9. 'dist' → logprob: -6.906527519226074
    10. ' dp' → logprob: -7.281527519226074

Token 186: ' Compute' (ID: 45438)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1073499545454979
    2. 'from' → logprob: -3.1073498725891113
    3. ' visited' → logprob: -3.3573498725891113
    4. 'queue' → logprob: -5.357349872589111
    5. 'dist' → logprob: -5.482349872589111
    6. 'field' → logprob: -5.732349872589111
    7. '   ' → logprob: -6.107349872589111
    8. ' from' → logprob: -6.357349872589111
    9. '#' → logprob: -6.982349872589111
    10. 'q' → logprob: -7.107349872589111

Token 187: ' sprinkler' (ID: 181940)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6388850808143616
    2. ' visited' → logprob: -1.1388850212097168
    3. 'dist' → logprob: -3.388885021209717
    4. 'from' → logprob: -4.013885021209717
    5. ' dist' → logprob: -4.138885021209717
    6. ' from' → logprob: -4.138885021209717
    7. '   ' → logprob: -4.263885021209717
    8. 'dp' → logprob: -5.388885021209717
    9. ' water' → logprob: -5.638885021209717
    10. ' min' → logprob: -5.638885021209717

Token 188: ' water' (ID: 3411)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1754124015569687
    2. '_positions' → logprob: -2.05041241645813
    3. '_cover' → logprob: -4.300412178039551
    4. '_ranges' → logprob: -5.050412178039551
    5. 'coverage' → logprob: -5.425412178039551
    6. '_water' → logprob: -5.925412178039551
    7. ' coverage' → logprob: -6.050412178039551
    8. '_range' → logprob: -7.050412178039551
    9. 's' → logprob: -7.050412178039551
    10. '_pos' → logprob: -9.42541217803955

Token 189: ' coverage' (ID: 13422)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.6995125412940979
    2. '_' → logprob: -1.0745124816894531
    3. 'ed' → logprob: -2.324512481689453
    4. ' coverage' → logprob: -2.949512481689453
    5. 's' → logprob: -5.449512481689453
    6. '_ranges' → logprob: -5.949512481689453
    7. '_positions' → logprob: -6.949512481689453
    8. '_cover' → logprob: -7.574512481689453
    9. '   ' → logprob: -7.949512481689453
    10. 'ing' → logprob: -8.074512481689453

Token 190: ' sets' (ID: 11982)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059721387922763824
    2. 'coverage' → logprob: -3.4347214698791504
    3. ' coverage' → logprob: -3.9347214698791504
    4. 'covered' → logprob: -6.05972146987915
    5. '    
' → logprob: -7.18472146987915
    6. 'water' → logprob: -7.55972146987915
    7. '
' → logprob: -7.55972146987915
    8. ' =' → logprob: -7.55972146987915
    9. 'def' → logprob: -7.68472146987915
    10. ',' → logprob: -8.059720993041992

Token 191: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12118897587060928
    2. ':' → logprob: -3.2461888790130615
    3. ' =' → logprob: -3.9961888790130615
    4. '
' → logprob: -4.246189117431641
    5. 'coverage' → logprob: -4.621189117431641
    6. ':
' → logprob: -4.746189117431641
    7. ' coverage' → logprob: -4.746189117431641
    8. '    
' → logprob: -4.996189117431641
    9. 's' → logprob: -6.246189117431641
    10. ' :
' → logprob: -6.996189117431641

Token 192: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7204030752182007
    2. 'each' → logprob: -1.7204030752182007
    3. ' sprinkler' → logprob: -1.7204030752182007
    4. ' each' → logprob: -1.9704030752182007
    5. 's' → logprob: -2.3454031944274902
    6. ' i' → logprob: -2.5954031944274902
    7. 'spr' → logprob: -2.7204031944274902
    8. ' s' → logprob: -3.4704031944274902
    9. ' spr' → logprob: -4.09540319442749
    10. ' all' → logprob: -4.72040319442749

Token 193: ' sprinkler' (ID: 181940)
  Prédit: ' sprinkler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sprinkler' → logprob: -0.8252307176589966
    2. 'spr' → logprob: -1.9502307176589966
    3. 'i' → logprob: -2.325230598449707
    4. 's' → logprob: -2.575230598449707
    5. ' i' → logprob: -2.825230598449707
    6. 'idx' → logprob: -2.825230598449707
    7. ' idx' → logprob: -3.075230598449707
    8. '(' → logprob: -3.825230598449707
    9. ' (' → logprob: -3.950230598449707
    10. 'index' → logprob: -4.575230598449707

Token 194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06805521249771118
    2. ':' → logprob: -3.3180551528930664
    3. ' coverage' → logprob: -4.943055152893066
    4. ':
' → logprob: -5.318055152893066
    5. 'coverage' → logprob: -5.318055152893066
    6. 's' → logprob: -5.568055152893066
    7. '
' → logprob: -5.943055152893066
    8. '    
' → logprob: -6.068055152893066
    9. 'def' → logprob: -7.193055152893066
    10. ' =' → logprob: -7.568055152893066

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020115524530410767
    2. '    
' → logprob: -7.377011775970459
    3. ':' → logprob: -7.877011775970459
    4. ' coverage' → logprob: -8.0020112991333
    5. 'coverage' → logprob: -8.3770112991333
    6. '
' → logprob: -8.8770112991333
    7. 's' → logprob: -9.2520112991333
    8. 'def' → logprob: -9.5020112991333
    9. ',' → logprob: -9.8770112991333
    10. ' =' → logprob: -11.2520112991333

Token 196: ' water' (ID: 3411)
  Prédit: ' coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coverage' → logprob: -0.35495230555534363
    2. 'coverage' → logprob: -1.854952335357666
    3. ' sprinkler' → logprob: -2.729952335357666
    4. ' water' → logprob: -3.354952335357666
    5. '   ' → logprob: -3.979952335357666
    6. 'water' (adapté à ' water') → logprob: -4.354952335357666
    7. ' sprink' → logprob: -5.479952335357666
    8. 'covered' → logprob: -6.354952335357666
    9. 'spr' → logprob: -6.354952335357666
    10. ' covered' → logprob: -6.729952335357666

Token 197: '_' (ID: 62)
  Prédit: '_sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.3351691961288452
    2. '_' → logprob: -1.5851691961288452
    3. 'coverage' → logprob: -2.8351693153381348
    4. 'sets' → logprob: -4.460169315338135
    5. '=' → logprob: -5.835169315338135
    6. ' =' → logprob: -6.210169315338135
    7. '_set' → logprob: -6.710169315338135
    8. '_positions' → logprob: -7.085169315338135
    9. 's' → logprob: -7.335169315338135
    10. '_cover' → logprob: -7.710169315338135

Token 198: 'areas' (ID: 69250)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.002617158927023411
    2. 'sets' → logprob: -6.127617359161377
    3. 'covered' → logprob: -8.502616882324219
    4. ' coverage' → logprob: -9.377616882324219
    5. 'cover' → logprob: -9.877616882324219
    6. 'positions' → logprob: -10.377616882324219
    7. '_sets' → logprob: -10.752616882324219
    8. 'covers' → logprob: -11.377616882324219
    9. 'cells' → logprob: -12.127616882324219
    10. '_' → logprob: -12.127616882324219

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31516316533088684
    2. ' =' → logprob: -1.3151631355285645
    3. 's' → logprob: -6.3151631355285645
    4. '=[]' → logprob: -9.690163612365723
    5. '   ' → logprob: -11.315163612365723
    6. '=[]
' → logprob: -12.315163612365723
    7. '=s' → logprob: -12.440163612365723
    8. '[]' → logprob: -12.690163612365723
    9. '=set' → logprob: -13.690163612365723
    10. ' ' → logprob: -14.065163612365723

Token 200: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4568047523498535
    2. ' []' → logprob: -1.2068047523498535
    3. ' [' → logprob: -2.9568047523498535
    4. '[' → logprob: -4.4568047523498535
    5. '[]
' → logprob: -5.7068047523498535
    6. ' []
' → logprob: -8.081804275512695
    7. '[s' → logprob: -9.081804275512695
    8. '[
' → logprob: -9.331804275512695
    9. ' [
' → logprob: -10.706804275512695
    10. '[n' → logprob: -11.081804275512695

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1206178218126297
    2. ' for' → logprob: -2.8706178665161133
    3. 'for' → logprob: -2.9956178665161133
    4. 'def' → logprob: -6.995617866516113
    5. '<|end|>' → logprob: -6.995617866516113
    6. '    
' → logprob: -7.120617866516113
    7. '
' → logprob: -7.120617866516113
    8. ' ' → logprob: -7.245617866516113
    9. '[' → logprob: -7.495617866516113
    10. ':' → logprob: -7.870617866516113

Token 202: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0032058770302683115
    2. ' for' → logprob: -5.7532057762146
    3. '   ' → logprob: -10.503206253051758
    4. '	for' → logprob: -14.128206253051758
    5. '
' → logprob: -17.878206253051758
    6. '    
' → logprob: -18.753206253051758
    7. '```' → logprob: -19.003206253051758
    8. 'def' → logprob: -21.378206253051758
    9. ' 
' → logprob: -21.753206253051758
    10. '[' → logprob: -22.003206253051758

Token 203: ' (' (ID: 350)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.8919544816017151
    2. ' sx' → logprob: -1.1419544219970703
    3. 'x' → logprob: -1.7669544219970703
    4. 'dx' → logprob: -3.5169544219970703
    5. ' x' → logprob: -4.14195442199707
    6. 'i' → logprob: -4.26695442199707
    7. 's' → logprob: -4.39195442199707
    8. ' dx' → logprob: -4.64195442199707
    9. ' i' → logprob: -5.01695442199707
    10. 'spr' → logprob: -5.89195442199707

Token 204: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.008907396346330643
    2. 'x' → logprob: -4.758907318115234
    3. ' sx' → logprob: -9.258907318115234
    4. 'wx' → logprob: -9.508907318115234
    5. 'dx' → logprob: -9.633907318115234
    6. 'xi' → logprob: -12.008907318115234
    7. 'spr' → logprob: -12.133907318115234
    8. 'ix' → logprob: -12.258907318115234
    9. '``' → logprob: -12.383907318115234
    10. 'cx' → logprob: -12.508907318115234

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010859245667234063
    2. ' ,' → logprob: -7.0010857582092285
    3. ',s' → logprob: -9.126086235046387
    4. ',x' → logprob: -10.126086235046387
    5. 'x' → logprob: -11.251086235046387
    6. ',y' → logprob: -11.751086235046387
    7. 's' → logprob: -13.126086235046387
    8. ',
' → logprob: -13.626086235046387
    9. ' ' → logprob: -15.376086235046387
    10. '‌,' → logprob: -15.501086235046387

Token 206: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.029751529917120934
    2. ' sy' → logprob: -3.5297515392303467
    3. '_sy' → logprob: -14.029751777648926
    4. '.sy' → logprob: -15.404751777648926
    5. 's' → logprob: -17.15475082397461
    6. 'sys' → logprob: -17.27975082397461
    7. 'Sy' → logprob: -17.65475082397461
    8. ' ' → logprob: -17.77975082397461
    9. ',' → logprob: -18.02975082397461
    10. '   ' → logprob: -18.27975082397461

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029959288076497614
    2. ' )' → logprob: -8.625299453735352
    3. 'in' → logprob: -9.125299453735352
    4. ' in' → logprob: -12.000299453735352
    5. ',' → logprob: -13.000299453735352
    6. '),' → logprob: -13.375299453735352
    7. ',)' → logprob: -14.625299453735352
    8. ')
' → logprob: -16.50029945373535
    9. '   ' → logprob: -16.62529945373535
    10. 's' → logprob: -16.75029945373535

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18041399121284485
    2. 'in' → logprob: -1.8054139614105225
    3. ')' → logprob: -7.555414199829102
    4. ',' → logprob: -9.180414199829102
    5. ' ' → logprob: -10.930414199829102
    6. ' )' → logprob: -11.805414199829102
    7. 's' → logprob: -12.430414199829102
    8. ' ,' → logprob: -12.680414199829102
    9. '   ' → logprob: -12.805414199829102
    10. '),' → logprob: -13.680414199829102

Token 209: ' sprink' (ID: 80706)
  Prédit: ' sprink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sprink' → logprob: -0.6350944638252258
    2. 'spr' → logprob: -0.7600944638252258
    3. 's' → logprob: -6.01009464263916
    4. ' sprinkler' → logprob: -10.76009464263916
    5. ' spr' → logprob: -12.76009464263916
    6. 'spring' → logprob: -12.88509464263916
    7. 'spar' → logprob: -12.88509464263916
    8. ' sprinkled' → logprob: -13.63509464263916
    9. ' sprinkle' → logprob: -13.76009464263916
    10. 'sprites' → logprob: -14.13509464263916

Token 210: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -8.947715832618997e-05
    2. 'l' → logprob: -10.125089645385742
    3. 'ers' → logprob: -10.750089645385742
    4. 'kl' → logprob: -11.125089645385742
    5. 'kers' → logprob: -12.250089645385742
    6. 'ler' → logprob: -12.875089645385742
    7. 'k' → logprob: -13.500089645385742
    8. 'ulers' → logprob: -13.875089645385742
    9. 'arkers' → logprob: -14.375089645385742
    10. 'alers' → logprob: -14.875089645385742

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0794278085231781
    2. ':
' → logprob: -2.579427719116211
    3. '):
' → logprob: -8.579427719116211
    4. '   ' → logprob: -8.579427719116211
    5. ',' → logprob: -9.454427719116211
    6. '):' → logprob: -9.954427719116211
    7. ' :
' → logprob: -11.079427719116211
    8. ' :' → logprob: -11.204427719116211
    9. ':

' → logprob: -13.079427719116211
    10. ':
' → logprob: -13.329427719116211

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02177148498594761
    2. ':' → logprob: -4.646771430969238
    3. '   ' → logprob: -5.396771430969238
    4. ':
' → logprob: -5.396771430969238
    5. ',' → logprob: -6.271771430969238
    6. '):
' → logprob: -7.896771430969238
    7. '        
' → logprob: -8.646771430969238
    8. '    
' → logprob: -8.771771430969238
    9. '
' → logprob: -9.146771430969238
    10. '):' → logprob: -10.146771430969238

Token 213: ' area' (ID: 3624)
  Prédit: ' coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coverage' → logprob: -0.20395177602767944
    2. 'coverage' → logprob: -2.203951835632324
    3. ' area' → logprob: -2.828951835632324
    4. 'area' (adapté à ' area') → logprob: -5.328951835632324
    5. ' water' → logprob: -5.328951835632324
    6. '   ' → logprob: -6.703951835632324
    7. ' covered' → logprob: -6.828951835632324
    8. '       ' → logprob: -7.078951835632324
    9. 'cover' → logprob: -7.453951835632324
    10. 'covered' → logprob: -7.703951835632324

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20150339603424072
    2. ' =' → logprob: -1.7015033960342407
    3. '=set' → logprob: -9.32650375366211
    4. 's' → logprob: -14.70150375366211
    5. 'set' → logprob: -15.20150375366211
    6. '=
' → logprob: -16.20150375366211
    7. ' ' → logprob: -16.32650375366211
    8. '=

' → logprob: -16.82650375366211
    9. ')' → logprob: -17.45150375366211
    10. '_set' → logprob: -17.82650375366211

Token 215: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06239818036556244
    2. '{' → logprob: -2.8123981952667236
    3. ' set' → logprob: -8.437397956848145
    4. '{
' → logprob: -9.187397956848145
    5. ' {(' → logprob: -9.187397956848145
    6. '[(' → logprob: -12.437397956848145
    7. '   ' → logprob: -12.812397956848145
    8. ' ' → logprob: -13.937397956848145
    9. '	set' → logprob: -14.062397956848145
    10. '{s' → logprob: -14.937397956848145

Token 216: '()
' (ID: 1234)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.27400970458984375
    2. '()' → logprob: -1.5240097045898438
    3. '()
' → logprob: -4.274009704589844
    4. '(' → logprob: -5.399009704589844
    5. '(W' → logprob: -6.649009704589844
    6. '([(' → logprob: -6.774009704589844
    7. '(
' → logprob: -7.149009704589844
    8. '()

' → logprob: -9.524009704589844
    9. '(((' → logprob: -10.024009704589844
    10. '([' → logprob: -11.024009704589844

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001038883114233613
    2. '        
' → logprob: -7.251039028167725
    3. ' for' → logprob: -8.251038551330566
    4. 'for' → logprob: -11.251038551330566
    5. '
' → logprob: -11.376038551330566
    6. '<|end|>' → logprob: -11.376038551330566
    7. ',' → logprob: -11.751038551330566
    8. ' 
' → logprob: -12.626038551330566
    9. '  
' → logprob: -12.876038551330566
    10. ')' → logprob: -13.126038551330566

Token 218: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018857121467590332
    2. ' for' → logprob: -4.018857002258301
    3. 'for' (adapté à ' for') → logprob: -7.268857002258301
    4. '   ' → logprob: -12.3938570022583
    5. '<|end|>' → logprob: -13.0188570022583
    6. '	for' → logprob: -14.1438570022583
    7. '```' → logprob: -14.2688570022583
    8. '           ' → logprob: -14.6438570022583
    9. '
' → logprob: -14.7688570022583
    10. ' ' → logprob: -15.3938570022583

Token 219: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.26068785786628723
    2. '(dx' → logprob: -1.5106878280639648
    3. ' dx' → logprob: -4.760687828063965
    4. '   ' → logprob: -9.760687828063965
    5. '(' → logprob: -9.885687828063965
    6. '```' → logprob: -10.635687828063965
    7. '(d' → logprob: -11.510687828063965
    8. '_dx' → logprob: -11.510687828063965
    9. ' (' → logprob: -12.760687828063965
    10. ' ' → logprob: -13.510687828063965

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.096126576769166e-05
    2. ' ,' → logprob: -10.250041007995605
    3. ',
' → logprob: -12.625041007995605
    4. ',y' → logprob: -13.500041007995605
    5. ',d' → logprob: -14.875041007995605
    6. '```' → logprob: -15.875041007995605
    7. ',

' → logprob: -16.75004005432129
    8. 'dy' → logprob: -17.00004005432129
    9. '<|end|>' → logprob: -17.12504005432129
    10. '‌,' → logprob: -17.25004005432129

Token 221: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.006715370807796717
    2. ' dy' → logprob: -5.006715297698975
    3. '.dy' → logprob: -19.131715774536133
    4. 'd' → logprob: -20.131715774536133
    5. 'dym' → logprob: -20.506715774536133
    6. 'Dy' → logprob: -20.756715774536133
    7. '```' → logprob: -21.006715774536133
    8. 'ddy' → logprob: -21.006715774536133
    9. '   ' → logprob: -21.381715774536133
    10. '<|end|>' → logprob: -21.506715774536133

Token 222: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007635139394551516
    2. 'in' → logprob: -4.882635116577148
    3. '<|end|>' → logprob: -11.132635116577148
    4. ' ' → logprob: -12.132635116577148
    5. ',' → logprob: -12.882635116577148
    6. ')' → logprob: -13.007635116577148
    7. '   ' → logprob: -13.757635116577148
    8. '    ' → logprob: -14.132635116577148
    9. ' ,' → logprob: -14.507635116577148
    10. '<|end|>' → logprob: -14.882635116577148

Token 223: ' WATER' (ID: 119618)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.5213274309644476e-05
    2. ' WATER' → logprob: -11.125015258789062
    3. ' W' → logprob: -15.625015258789062
    4. '```' → logprob: -16.125015258789062
    5. '	W' → logprob: -16.750015258789062
    6. '   ' → logprob: -17.000015258789062
    7. ')' → logprob: -17.125015258789062
    8. ' ' → logprob: -17.375015258789062
    9. '`' → logprob: -17.375015258789062
    10. '
' → logprob: -18.500015258789062

Token 224: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.000968987587839365
    2. 'C' → logprob: -7.000968933105469
    3. '_' → logprob: -9.875968933105469
    4. '   ' → logprob: -12.375968933105469
    5. 'Coverage' → logprob: -14.375968933105469
    6. '	C' → logprob: -14.500968933105469
    7. ' COVER' → logprob: -15.625968933105469
    8. '  ' → logprob: -16.00096893310547
    9. '       ' → logprob: -16.62596893310547
    10. 'coverage' → logprob: -16.62596893310547

Token 225: 'OVER' (ID: 34489)
  Prédit: 'OVER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OVER' → logprob: -9.85366350505501e-05
    2. 'over' → logprob: -9.37509822845459
    3. 'C' → logprob: -11.75009822845459
    4. 'OV' → logprob: -13.12509822845459
    5. 'OVERY' → logprob: -13.62509822845459
    6. 'OVE' → logprob: -14.12509822845459
    7. 'ER' → logprob: -14.62509822845459
    8. '_OVER' → logprob: -14.87509822845459
    9. 'O' → logprob: -15.25009822845459
    10. 'VER' → logprob: -15.25009822845459

Token 226: 'AGE' (ID: 6582)
  Prédit: 'AGE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AGE' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.0
    3. 'age' → logprob: -17.5
    4. '
' → logprob: -18.125
    5. 'ANGE' → logprob: -18.625
    6. '       ' → logprob: -19.0
    7. '  ' → logprob: -19.0
    8. '

' → logprob: -19.25
    9. 'UAGE' → logprob: -19.625
    10. 'ARGE' → logprob: -19.75

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12709735333919525
    2. ':
' → logprob: -2.1270973682403564
    3. '           ' → logprob: -9.877097129821777
    4. '       ' → logprob: -10.002097129821777
    5. '):
' → logprob: -10.502097129821777
    6. '<|end|>' → logprob: -11.252097129821777
    7. '):' → logprob: -12.127097129821777
    8. ':

' → logprob: -12.377097129821777
    9. ':
' → logprob: -12.377097129821777
    10. '   ' → logprob: -12.502097129821777

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011021859245374799
    2. ',' → logprob: -9.750110626220703
    3. '<|end|>' → logprob: -11.125110626220703
    4. ':' → logprob: -12.000110626220703
    5. ':
' → logprob: -12.125110626220703
    6. '               ' → logprob: -12.250110626220703
    7. '
' → logprob: -12.375110626220703
    8. '            
' → logprob: -12.625110626220703
    9. '):
' → logprob: -12.875110626220703
    10. '	       ' → logprob: -13.250110626220703

Token 229: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.07706963270902634
    2. ' x' → logprob: -2.9520695209503174
    3. 'nx' (adapté à ' nx') → logprob: -4.4520697593688965
    4. '           ' → logprob: -5.0770697593688965
    5. 'x' → logprob: -5.8270697593688965
    6. ' wx' → logprob: -7.7020697593688965
    7. ' ax' → logprob: -9.077069282531738
    8. '            ' → logprob: -9.327069282531738
    9. ' new' → logprob: -9.327069282531738
    10. 'wx' → logprob: -9.327069282531738

Token 230: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019076554104685783
    2. ' =' → logprob: -4.019076347351074
    3. ',' → logprob: -7.019076347351074
    4. '=s' → logprob: -10.644076347351074
    5. '=
' → logprob: -12.394076347351074
    6. '=x' → logprob: -13.644076347351074
    7. ' =
' → logprob: -13.769076347351074
    8. '=

' → logprob: -15.144076347351074
    9. ',s' → logprob: -15.269076347351074
    10. '=n' → logprob: -15.519076347351074

Token 231: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.5966639518737793
    2. ' ny' → logprob: -0.8466639518737793
    3. '=' → logprob: -4.596663951873779
    4. ' =' → logprob: -5.471663951873779
    5. 'x' → logprob: -6.471663951873779
    6. 'nx' → logprob: -6.846663951873779
    7. 'n' → logprob: -6.971663951873779
    8. ' nx' → logprob: -6.971663951873779
    9. 'sx' → logprob: -7.221663951873779
    10. ' sx' → logprob: -8.346664428710938

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10028527677059174
    2. ' =' → logprob: -2.350285291671753
    3. '=s' → logprob: -9.475285530090332
    4. '=
' → logprob: -13.975285530090332
    5. '=x' → logprob: -15.350285530090332
    6. ',' → logprob: -15.725285530090332
    7. '=ax' → logprob: -16.225284576416016
    8. ' =
' → logprob: -16.475284576416016
    9. '=

' → logprob: -16.725284576416016
    10. '   ' → logprob: -16.850284576416016

Token 233: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.07892107218503952
    2. ' sx' → logprob: -2.57892107963562
    3. '   ' → logprob: -10.5789213180542
    4. 's' → logprob: -13.0789213180542
    5. ' ' → logprob: -13.5789213180542
    6. '    ' → logprob: -13.7039213180542
    7. '(s' → logprob: -14.7039213180542
    8. '	s' → logprob: -15.5789213180542
    9. '       ' → logprob: -16.203920364379883
    10. '  ' → logprob: -16.203920364379883

Token 234: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759515166282654
    2. '+' → logprob: -0.8259515166282654
    3. '   ' → logprob: -12.20095157623291
    4. '+x' → logprob: -12.57595157623291
    5. ' ' → logprob: -14.20095157623291
    6. ' +
' → logprob: -14.57595157623291
    7. '+
' → logprob: -14.70095157623291
    8. '+d' → logprob: -14.82595157623291
    9. ' dx' → logprob: -14.95095157623291
    10. ',' → logprob: -15.07595157623291

Token 235: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0003362966235727072
    2. ' dx' → logprob: -8.000336647033691
    3. '_dx' → logprob: -14.750336647033691
    4. '(dx' → logprob: -15.000336647033691
    5. 'x' → logprob: -15.750336647033691
    6. 'Dx' → logprob: -17.125335693359375
    7. 'd' → logprob: -17.625335693359375
    8. '.dx' → logprob: -17.750335693359375
    9. '
' → logprob: -18.500335693359375
    10. 'xd' → logprob: -18.875335693359375

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017652629176154733
    2. ' ,' → logprob: -6.376765251159668
    3. '           ' → logprob: -10.001765251159668
    4. ',n' → logprob: -11.751765251159668
    5. ',
' → logprob: -12.001765251159668
    6. ',s' → logprob: -13.376765251159668
    7. ',y' → logprob: -14.626765251159668
    8. '       ' → logprob: -15.376765251159668
    9. ',w' → logprob: -15.376765251159668
    10. '<|end|>' → logprob: -15.626765251159668

Token 237: ' sy' (ID: 6157)
  Prédit: ' sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sy' → logprob: -0.029750952497124672
    2. 'sy' → logprob: -3.5297510623931885
    3. '_sy' → logprob: -15.52975082397461
    4. ' ' → logprob: -16.02975082397461
    5. '.sy' → logprob: -16.27975082397461
    6. 's' → logprob: -17.02975082397461
    7. ' ' → logprob: -17.65475082397461
    8. 'syz' → logprob: -17.65475082397461
    9. ' sys' → logprob: -17.77975082397461
    10. 'Sy' → logprob: -18.40475082397461

Token 238: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933730840682983
    2. ' +' → logprob: -0.6933730840682983
    3. '+y' → logprob: -8.56837272644043
    4. 'y' → logprob: -10.31837272644043
    5. 'dy' → logprob: -13.56837272644043
    6. '+
' → logprob: -14.31837272644043
    7. '<|end|>' → logprob: -15.56837272644043
    8. ' +
' → logprob: -15.56837272644043
    9. 'wy' → logprob: -16.44337272644043
    10. '[' → logprob: -16.44337272644043

Token 239: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.048617683351039886
    2. ' dy' → logprob: -3.0486176013946533
    3. 'sy' → logprob: -10.548617362976074
    4. ' sy' → logprob: -12.798617362976074
    5. '.dy' → logprob: -14.798617362976074
    6. ' ' → logprob: -15.548617362976074
    7. 'py' → logprob: -15.798617362976074
    8. '1' → logprob: -16.29861831665039
    9. 'ny' → logprob: -16.42361831665039
    10. 'd' → logprob: -16.42361831665039

Token 240: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04210158810019493
    2. '           ' → logprob: -3.7921016216278076
    3. '       ' → logprob: -4.1671013832092285
    4. '<|end|>' → logprob: -6.4171013832092285
    5. '
' → logprob: -7.4171013832092285
    6. ' if' → logprob: -7.7921013832092285
    7. '<|end|>' → logprob: -9.167101860046387
    8. 'if' → logprob: -9.167101860046387
    9. '   ' → logprob: -9.292101860046387
    10. ',' → logprob: -10.042101860046387

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047940885997377336
    2. '
' → logprob: -8.375479698181152
    3. '<|end|>' → logprob: -8.750479698181152
    4. '<|end|>' → logprob: -10.625479698181152
    5. ',' → logprob: -11.000479698181152
    6. '       ' → logprob: -11.125479698181152
    7. '		' → logprob: -11.625479698181152
    8. '               ' → logprob: -12.000479698181152
    9. '            
' → logprob: -12.625479698181152
    10. '                   ' → logprob: -13.000479698181152

Token 242: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3912433385848999
    2. '           ' → logprob: -1.2662433385849
    3. 'if' (adapté à ' if') → logprob: -3.7662434577941895
    4. '
' → logprob: -5.1412434577941895
    5. ' 
' → logprob: -5.1412434577941895
    6. ' ' → logprob: -5.7662434577941895
    7. '<|end|>' → logprob: -6.1412434577941895
    8. '            ' → logprob: -7.3912434577941895
    9. '            
' → logprob: -7.7662434577941895
    10. '<|end|>' → logprob: -8.391242980957031

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6339445114135742
    2. 'in' → logprob: -0.7589445114135742
    3. '0' → logprob: -6.883944511413574
    4. ' ' → logprob: -8.133944511413574
    5. ' ' → logprob: -11.758944511413574
    6. '	in' → logprob: -12.258944511413574
    7. '1' → logprob: -12.883944511413574
    8. '
' → logprob: -13.008944511413574
    9. 'x' → logprob: -13.383944511413574
    10. '   ' → logprob: -13.821444511413574

Token 244: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. 'in' → logprob: -16.875
    3. 'park' → logprob: -16.875
    4. ' _' → logprob: -17.0
    5. '_
' → logprob: -17.0
    6. '_par' → logprob: -17.125
    7. '_water' → logprob: -17.25
    8. '_p' → logprob: -18.25
    9. '_s' → logprob: -18.5
    10. '```' → logprob: -18.5

Token 245: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.00030686063109897077
    2. '_' → logprob: -8.125307083129883
    3. ' park' → logprob: -12.125307083129883
    4. '```' → logprob: -13.500307083129883
    5. 'in' → logprob: -13.875307083129883
    6. '
' → logprob: -14.625307083129883
    7. 'Park' → logprob: -15.125307083129883
    8. 'range' → logprob: -15.125307083129883
    9. '   ' → logprob: -15.625307083129883
    10. 'water' → logprob: -15.875307083129883

Token 246: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.0008953820797614753
    2. '(' → logprob: -7.1258955001831055
    3. ' (' → logprob: -10.000895500183105
    4. '(n' → logprob: -10.500895500183105
    5. '(
' → logprob: -11.000895500183105
    6. 'nx' → logprob: -14.500895500183105
    7. '((' → logprob: -15.125895500183105
    8. '
' → logprob: -15.625895500183105
    9. ' nx' → logprob: -16.37589454650879
    10. '

' → logprob: -16.37589454650879

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014984336448833346
    2. ',n' → logprob: -7.001498222351074
    3. ' ,' → logprob: -7.501498222351074
    4. ',
' → logprob: -10.626498222351074
    5. '(nx' → logprob: -12.251498222351074
    6. ',y' → logprob: -12.876498222351074
    7. '
' → logprob: -14.251498222351074
    8. ')' → logprob: -15.251498222351074
    9. '

' → logprob: -15.376498222351074
    10. '           ' → logprob: -15.501498222351074

Token 248: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.03366044908761978
    2. ' ny' → logprob: -3.408660411834717
    3. 'n' → logprob: -12.908660888671875
    4. '
' → logprob: -12.908660888671875
    5. 'y' → logprob: -13.408660888671875
    6. 'py' → logprob: -13.408660888671875
    7. ',' → logprob: -13.408660888671875
    8. ' ' → logprob: -14.033660888671875
    9. '10' → logprob: -14.158660888671875
    10. '9' → logprob: -15.033660888671875

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03065299242734909
    2. '):
' → logprob: -3.5306529998779297
    3. ')' → logprob: -7.15565299987793
    4. ' ):' → logprob: -10.03065299987793
    5. ':' → logprob: -10.53065299987793
    6. '):
' → logprob: -11.15565299987793
    7. '   ' → logprob: -11.78065299987793
    8. '):

' → logprob: -11.78065299987793
    9. ' and' → logprob: -12.03065299987793
    10. '           ' → logprob: -12.28065299987793

Token 250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.353008499601856e-05
    2. ' area' → logprob: -10.250093460083008
    3. ':' → logprob: -11.000093460083008
    4. ':
' → logprob: -11.625093460083008
    5. '           ' → logprob: -12.000093460083008
    6. ',' → logprob: -12.250093460083008
    7. '                
' → logprob: -12.375093460083008
    8. '):
' → logprob: -12.625093460083008
    9. '<|end|>' → logprob: -12.875093460083008
    10. ' ' → logprob: -13.250093460083008

Token 251: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.0208758432418108
    2. '               ' → logprob: -4.270875930786133
    3. 'area' (adapté à ' area') → logprob: -5.020875930786133
    4. '           ' → logprob: -9.895875930786133
    5. '                   ' → logprob: -10.520875930786133
    6. '   ' → logprob: -11.770875930786133
    7. ' ' → logprob: -13.895875930786133
    8. '(area' → logprob: -14.020875930786133
    9. '.area' → logprob: -14.270875930786133
    10. '                ' → logprob: -14.270875930786133

Token 252: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0009168167016468942
    2. '.' → logprob: -7.000916957855225
    3. '.append' → logprob: -13.000916481018066
    4. '.update' → logprob: -13.250916481018066
    5. ' .' → logprob: -14.000916481018066
    6. '.insert' → logprob: -15.500916481018066
    7. '.Add' → logprob: -15.750916481018066
    8. 'add' → logprob: -17.250917434692383
    9. '.union' → logprob: -17.875917434692383
    10. '.setdefault' → logprob: -18.000917434692383

Token 253: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04863744229078293
    2. '(' → logprob: -3.5486373901367188
    3. '(nx' → logprob: -4.048637390136719
    4. '(n' → logprob: -6.798637390136719
    5. ' (' → logprob: -8.923637390136719
    6. '   ' → logprob: -12.423637390136719
    7. ' ' → logprob: -12.798637390136719
    8. '(
' → logprob: -12.798637390136719
    9. '(x' → logprob: -12.923637390136719
    10. ' ((' → logprob: -14.173637390136719

Token 254: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0003989720717072487
    2. ' nx' → logprob: -7.875399112701416
    3. '(nx' → logprob: -11.000398635864258
    4. 'n' → logprob: -14.000398635864258
    5. '
' → logprob: -14.500398635864258
    6. 'ny' → logprob: -14.500398635864258
    7. '   ' → logprob: -15.750398635864258
    8. 'x' → logprob: -17.500398635864258
    9. ' ' → logprob: -17.500398635864258
    10. 'Nx' → logprob: -18.000398635864258

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027897433028556406
    2. ' ,' → logprob: -8.375279426574707
    3. ',y' → logprob: -11.000279426574707
    4. '<|end|>' → logprob: -11.250279426574707
    5. ',n' → logprob: -11.375279426574707
    6. ',
' → logprob: -12.500279426574707
    7. '‌,' → logprob: -13.875279426574707
    8. '),' → logprob: -14.375279426574707
    9. ')' → logprob: -14.875279426574707
    10. '
' → logprob: -15.000279426574707

Token 256: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0031781906727701426
    2. ' ny' → logprob: -5.753178119659424
    3. 'nyi' → logprob: -15.378178596496582
    4. '
' → logprob: -16.128177642822266
    5. 'n' → logprob: -17.503177642822266
    6. 'Ny' → logprob: -17.753177642822266
    7. ' ' → logprob: -17.878177642822266
    8. 'nyt' → logprob: -17.878177642822266
    9. ' ' → logprob: -18.003177642822266
    10. ''ny' → logprob: -18.878177642822266

Token 257: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010755611583590508
    2. '))
' → logprob: -6.876075744628906
    3. ')' → logprob: -10.251075744628906
    4. ' ))' → logprob: -12.126075744628906
    5. ')))' → logprob: -14.251075744628906
    6. '))

' → logprob: -14.501075744628906
    7. ')
' → logprob: -15.376075744628906
    8. '))
' → logprob: -15.876075744628906
    9. '       ' → logprob: -15.876075744628906
    10. '   ' → logprob: -15.876075744628906

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002605856629088521
    2. '
' → logprob: -6.37760591506958
    3. '<|end|>' → logprob: -7.87760591506958
    4. '        
' → logprob: -8.502605438232422
    5. ')' → logprob: -9.002605438232422
    6. '	' → logprob: -10.127605438232422
    7. '<|end|>' → logprob: -10.627605438232422
    8. ',' → logprob: -10.752605438232422
    9. '
' → logprob: -10.752605438232422
    10. '   ' → logprob: -11.252605438232422

Token 259: ' water' (ID: 3411)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8721171617507935
    2. 'water' (adapté à ' water') → logprob: -1.2471171617507935
    3. '   ' → logprob: -1.3721171617507935
    4. ' water' → logprob: -3.247117042541504
    5. ')' → logprob: -6.622117042541504
    6. '           ' → logprob: -9.122117042541504
    7. ' ' → logprob: -9.372117042541504
    8. '    ' → logprob: -9.497117042541504
    9. '     ' → logprob: -9.622117042541504
    10. '<|end|>' → logprob: -9.872117042541504

Token 260: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.771655115589965e-05
    2. 'areas' → logprob: -11.125018119812012
    3. 'area' → logprob: -13.875018119812012
    4. 'coverage' → logprob: -14.375018119812012
    5. 'Areas' → logprob: -15.000018119812012
    6. '.append' → logprob: -15.125018119812012
    7. '_area' → logprob: -15.250018119812012
    8. '\' → logprob: -15.375018119812012
    9. '   ' → logprob: -16.875017166137695
    10. '=' → logprob: -17.000017166137695

Token 261: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -3.4285862057004124e-05
    2. '_' → logprob: -10.62503433227539
    3. 'coverage' → logprob: -12.12503433227539
    4. ' areas' → logprob: -12.87503433227539
    5. 'area' → logprob: -14.00003433227539
    6. 'append' → logprob: -15.25003433227539
    7. 'Areas' → logprob: -15.37503433227539
    8. 'add' → logprob: -16.50003433227539
    9. '```' → logprob: -16.50003433227539
    10. '   ' → logprob: -16.50003433227539

Token 262: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009142052149400115
    2. '.' → logprob: -7.000914096832275
    3. '.app' → logprob: -13.625914573669434
    4. '.add' → logprob: -14.375914573669434
    5. '.push' → logprob: -14.875914573669434
    6. 'append' → logprob: -15.250914573669434
    7. '.extend' → logprob: -16.375913619995117
    8. '.ap' → logprob: -16.500913619995117
    9. '.Append' → logprob: -17.125913619995117
    10. ').' → logprob: -17.250913619995117

Token 263: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -1.981667537620524e-06
    2. 'area' → logprob: -13.250001907348633
    3. '(' → logprob: -15.750001907348633
    4. ' area' → logprob: -18.750001907348633
    5. ' (' → logprob: -19.625001907348633
    6. '(angle' → logprob: -20.000001907348633
    7. '((' → logprob: -21.125001907348633
    8. '(amount' → logprob: -21.375001907348633
    9. '(
' → logprob: -21.750001907348633
    10. '(age' → logprob: -22.000001907348633

Token 264: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019948746194131672
    2. '<|end|>' → logprob: -9.125199317932129
    3. '   ' → logprob: -10.375199317932129
    4. '
' → logprob: -10.500199317932129
    5. ')
' → logprob: -11.250199317932129
    6. ' )' → logprob: -11.375199317932129
    7. ')return' → logprob: -13.000199317932129
    8. '<|end|>' → logprob: -13.250199317932129
    9. ')n' → logprob: -14.625199317932129
    10. '#' → logprob: -14.875199317932129

Token 265: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22626452147960663
    2. '   ' → logprob: -2.101264476776123
    3. 'visited' → logprob: -3.476264476776123
    4. '    
' → logprob: -3.601264476776123
    5. ' visited' → logprob: -5.101264476776123
    6. '<|end|>' → logprob: -5.601264476776123
    7. '#' (adapté à ' #') → logprob: -6.101264476776123
    8. '  
' → logprob: -6.226264476776123
    9. 'queue' → logprob: -6.476264476776123
    10. 'from' → logprob: -6.726264476776123

Token 267: ' BFS' (ID: 190016)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5324119329452515
    2. '#' → logprob: -2.407412052154541
    3. ' visited' → logprob: -2.407412052154541
    4. 'dp' → logprob: -2.407412052154541
    5. 'from' → logprob: -3.032412052154541
    6. ' from' → logprob: -4.032412052154541
    7. 'reachable' → logprob: -4.157412052154541
    8. 'dist' → logprob: -4.532412052154541
    9. ' #' → logprob: -4.657412052154541
    10. 'queue' → logprob: -5.157412052154541

Token 268: ' state' (ID: 2608)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1301136016845703
    2. '   ' → logprob: -2.2551136016845703
    3. ' queue' → logprob: -4.63011360168457
    4. 'queue' → logprob: -5.63011360168457
    5. '    
' → logprob: -6.25511360168457
    6. '  
' → logprob: -7.88011360168457
    7. ' 
' → logprob: -7.88011360168457
    8. '   
' → logprob: -8.50511360168457
    9. '_queue' → logprob: -8.75511360168457
    10. '(queue' → logprob: -8.75511360168457

Token 269: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.388658732175827
    2. ' queue' → logprob: -1.6386587619781494
    3. 'queue' → logprob: -2.3886587619781494
    4. ' =' → logprob: -5.01365852355957
    5. '
' → logprob: -5.26365852355957
    6. '_queue' → logprob: -5.26365852355957
    7. 'from' → logprob: -5.38865852355957
    8. ' from' → logprob: -6.01365852355957
    9. 'visited' → logprob: -6.01365852355957
    10. ':' → logprob: -6.13865852355957

Token 270: ' index' (ID: 3472)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5223978757858276
    2. ' deque' → logprob: -1.8973978757858276
    3. 'from' → logprob: -2.147397994995117
    4. ' (' → logprob: -3.272397994995117
    5. ' queue' → logprob: -3.772397994995117
    6. 'queue' → logprob: -4.022397994995117
    7. '(queue' → logprob: -4.147397994995117
    8. ' from' → logprob: -4.272397994995117
    9. '   ' → logprob: -4.272397994995117
    10. 'visited' → logprob: -4.522397994995117

Token 271: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1989111751317978
    2. ' ,' → logprob: -2.198911190032959
    3. ' =' → logprob: -2.698911190032959
    4. '<|end|>' → logprob: -6.948911190032959
    5. ')' → logprob: -8.3239107131958
    6. '=' → logprob: -8.8239107131958
    7. ' )' → logprob: -9.0739107131958
    8. '_queue' → logprob: -9.0739107131958
    9. '<|end|>' → logprob: -9.1989107131958
    10. ',
' → logprob: -9.1989107131958

Token 272: ' sprink' (ID: 80706)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.4382908046245575
    2. ' sprink' → logprob: -1.0632908344268799
    3. 's' → logprob: -5.188290596008301
    4. 'water' → logprob: -6.563290596008301
    5. 'n' → logprob: -7.188290596008301
    6. ' water' → logprob: -8.1882905960083
    7. ' spr' → logprob: -8.3132905960083
    8. ' sprinkler' → logprob: -8.4382905960083
    9. 'jump' → logprob: -8.6882905960083
    10. 'J' → logprob: -8.8132905960083

Token 273: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.0012683282839134336
    2. 'ler' → logprob: -7.62626838684082
    3. 'ers' → logprob: -7.75126838684082
    4. 'ulers' → logprob: -8.62626838684082
    5. 'ters' → logprob: -10.25126838684082
    6. 'gers' → logprob: -10.50126838684082
    7. 'iters' → logprob: -10.50126838684082
    8. 'alers' → logprob: -10.87626838684082
    9. 'als' → logprob: -11.62626838684082
    10. 'l' → logprob: -12.00126838684082

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007151984144002199
    2. ' ,' → logprob: -5.007152080535889
    3. '   ' → logprob: -8.38215160369873
    4. ')' → logprob: -10.13215160369873
    5. ',
' → logprob: -10.13215160369873
    6. ',state' → logprob: -10.63215160369873
    7. ' and' → logprob: -11.00715160369873
    8. ' =' → logprob: -11.63215160369873
    9. 's' → logprob: -11.88215160369873
    10. ',current' → logprob: -12.00715160369873

Token 275: ' position' (ID: 4010)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -1.528983235359192
    2. ' current' → logprob: -1.778983235359192
    3. ' position' → logprob: -1.903983235359192
    4. ' px' → logprob: -1.903983235359192
    5. ' pos' → logprob: -2.4039831161499023
    6. 'visited' → logprob: -2.9039831161499023
    7. ' queue' → logprob: -3.4039831161499023
    8. ' (' → logprob: -3.7789831161499023
    9. ' x' → logprob: -3.9039831161499023
    10. 'pos' → logprob: -4.028983116149902

Token 276: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09090020507574081
    2. ' =' → logprob: -2.465900182723999
    3. ' ,' → logprob: -6.840900421142578
    4. '   ' → logprob: -8.340900421142578
    5. ')' → logprob: -8.590900421142578
    6. '_queue' → logprob: -9.090900421142578
    7. '=' → logprob: -9.465900421142578
    8. 'queue' → logprob: -9.965900421142578
    9. 'x' → logprob: -10.090900421142578
    10. ' queue' → logprob: -10.340900421142578

Token 277: ' P' (ID: 398)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -1.1553961038589478
    2. 'px' → logprob: -1.2803961038589478
    3. 'P' → logprob: -1.9053961038589478
    4. 'p' → logprob: -2.155395984649658
    5. 'the' → logprob: -3.155395984649658
    6. ' px' → logprob: -3.905395984649658
    7. '(px' → logprob: -3.905395984649658
    8. ' py' → logprob: -4.405395984649658
    9. 'current' → logprob: -4.780395984649658
    10. ' P' → logprob: -4.780395984649658

Token 278: 'yon' (ID: 10033)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001937558175995946
    2. '(x' → logprob: -7.626937389373779
    3. '(px' → logprob: -7.751937389373779
    4. 'on' → logprob: -8.751937866210938
    5. 'xon' → logprob: -8.751937866210938
    6. 'px' → logprob: -9.126937866210938
    7. 'onk' → logprob: -9.251937866210938
    8. '(p' → logprob: -9.376937866210938
    9. ',' → logprob: -9.751937866210938
    10. ' (' → logprob: -9.876937866210938

Token 279: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002378023462370038
    2. 'kich' → logprob: -6.127377986907959
    3. '   ' → logprob: -9.752378463745117
    4. 'x' → logprob: -10.252378463745117
    5. 'ki' → logprob: -10.252378463745117
    6. '_k' → logprob: -11.002378463745117
    7. 'ichi' → logprob: -11.627378463745117
    8. 'kii' → logprob: -12.127378463745117
    9. 'c' → logprob: -12.627378463745117
    10. 'kx' → logprob: -12.877378463745117

Token 280: 'ichi' (ID: 44252)
  Prédit: 'ichi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichi' → logprob: -0.0007840183097869158
    2. 'ich' → logprob: -7.500783920288086
    3. 'chi' → logprob: -8.875783920288086
    4. 'ic' → logprob: -10.625783920288086
    5. '   ' → logprob: -11.125783920288086
    6. 'i' → logprob: -11.750783920288086
    7. '(' → logprob: -11.875783920288086
    8. '#' → logprob: -12.375783920288086
    9. ' ichi' → logprob: -12.375783920288086
    10. 'inchi' → logprob: -12.750783920288086

Token 281: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008682293817400932
    2. '   ' → logprob: -5.0086822509765625
    3. ' ,' → logprob: -7.1336822509765625
    4. ')' → logprob: -7.8836822509765625
    5. ' =' → logprob: -8.758682250976562
    6. ',
' → logprob: -9.258682250976562
    7. 'queue' → logprob: -9.508682250976562
    8. '_,' → logprob: -9.883682250976562
    9. ' queue' → logprob: -9.883682250976562
    10. 's' → logprob: -10.133682250976562

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09068891406059265
    2. ',' → logprob: -2.715688943862915
    3. ' queue' → logprob: -4.590688705444336
    4. 'queue' → logprob: -5.215688705444336
    5. 'from' → logprob: -6.090688705444336
    6. ' from' → logprob: -6.965688705444336
    7. '
' → logprob: -7.215688705444336
    8. 'visited' → logprob: -8.965688705444336
    9. ',
' → logprob: -9.215688705444336
    10. ')' → logprob: -9.465688705444336

Token 283: ' #' (ID: 1069)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.6363720893859863
    2. ' from' → logprob: -1.5113720893859863
    3. 'from' → logprob: -2.0113720893859863
    4. '   ' → logprob: -2.5113720893859863
    5. 'queue' → logprob: -3.3863720893859863
    6. ' visited' → logprob: -7.511372089385986
    7. '
' → logprob: -7.886372089385986
    8. 'visited' → logprob: -8.761371612548828
    9. ' q' → logprob: -9.511371612548828
    10. 'q' → logprob: -9.636371612548828

Token 284: ' At' (ID: 3604)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0644787549972534
    2. ' from' → logprob: -1.1894787549972534
    3. ' visited' → logprob: -2.189478874206543
    4. 'visited' → logprob: -2.314478874206543
    5. ' queue' → logprob: -2.439478874206543
    6. 'queue' → logprob: -3.064478874206543
    7. '   ' → logprob: -5.564478874206543
    8. 'q' → logprob: -7.064478874206543
    9. ' q' → logprob: -7.689478874206543
    10. '
' → logprob: -8.064478874206543

Token 285: ' sprinkler' (ID: 181940)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.6140019297599792
    2. 'each' → logprob: -1.739001989364624
    3. 'visited' → logprob: -2.989001989364624
    4. ' ' → logprob: -3.114001989364624
    5. ' least' → logprob: -3.864001989364624
    6. 'index' → logprob: -3.989001989364624
    7. 'idx' → logprob: -4.239001750946045
    8. ' visited' → logprob: -4.364001750946045
    9. ' first' → logprob: -4.489001750946045
    10. ' the' → logprob: -4.614001750946045

Token 286: ' i' (ID: 575)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.51168292760849
    2. '_index' → logprob: -1.3866829872131348
    3. 's' → logprob: -3.2616829872131348
    4. ' =' → logprob: -3.2616829872131348
    5. ',' → logprob: -4.261682987213135
    6. '_i' → logprob: -4.511682987213135
    7. 'index' → logprob: -5.136682987213135
    8. '=' → logprob: -5.386682987213135
    9. 'idx' → logprob: -5.386682987213135
    10. '_states' → logprob: -5.386682987213135

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050290387123823166
    2. ' ,' → logprob: -3.30029034614563
    3. ')' → logprob: -5.925290584564209
    4. 's' → logprob: -6.425290584564209
    5. ' i' → logprob: -6.675290584564209
    6. ' =' → logprob: -7.300290584564209
    7. ',i' → logprob: -7.300290584564209
    8. ' visited' → logprob: -7.425290584564209
    9. ':' → logprob: -7.550290584564209
    10. '_index' → logprob: -7.675290584564209

Token 288: ' P' (ID: 398)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.9053232073783875
    2. 'visited' → logprob: -1.4053232669830322
    3. ' px' → logprob: -1.9053232669830322
    4. ' pos' → logprob: -3.1553232669830322
    5. 'pos' → logprob: -3.6553232669830322
    6. ' queue' → logprob: -3.7803232669830322
    7. ' position' → logprob: -4.030323028564453
    8. 'x' → logprob: -4.530323028564453
    9. 'px' → logprob: -4.530323028564453
    10. '#' → logprob: -4.655323028564453

Token 289: 'yon' (ID: 10033)
  Prédit: 'ython'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ython' → logprob: -1.0798063278198242
    2. 'on' → logprob: -1.4548063278198242
    3. 'position' → logprob: -1.9548063278198242
    4. 'osition' → logprob: -2.454806327819824
    5. 'y' → logprob: -3.204806327819824
    6. 'yon' → logprob: -3.329806327819824
    7. '   ' → logprob: -3.329806327819824
    8. ' position' → logprob: -3.704806327819824
    9. 'os' → logprob: -4.329806327819824
    10. ')' → logprob: -5.079806327819824

Token 290: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.282920129597187e-05
    2. 'kich' → logprob: -12.125012397766113
    3. 'к' → logprob: -13.000012397766113
    4. ' k' → logprob: -13.750012397766113
    5. '_k' → logprob: -14.125012397766113
    6. '	k' → logprob: -14.250012397766113
    7. 'kish' → logprob: -15.437512397766113
    8. '
' → logprob: -15.625012397766113
    9. '   ' → logprob: -16.06251335144043
    10. 'kimi' → logprob: -16.06251335144043

Token 291: 'ichi' (ID: 44252)
  Prédit: 'ichi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichi' → logprob: -0.0002727793762460351
    2. 'chi' → logprob: -8.875272750854492
    3. 'ich' → logprob: -9.625272750854492
    4. ' ichi' → logprob: -11.000272750854492
    5. 'i' → logprob: -11.375272750854492
    6. 'ic' → logprob: -11.750272750854492
    7. '   ' → logprob: -11.750272750854492
    8. 'inchi' → logprob: -12.625272750854492
    9. ' ' → logprob: -12.750272750854492
    10. 'ちは' → logprob: -13.250272750854492

Token 292: ' jumps' (ID: 65613)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.24215298891067505
    2. 'can' → logprob: -1.9921529293060303
    3. ''s' → logprob: -3.7421529293060303
    4. ' is' → logprob: -4.117153167724609
    5. ' at' → logprob: -4.742153167724609
    6. 'pos' → logprob: -5.867153167724609
    7. ' moves' → logprob: -5.867153167724609
    8. 'x' → logprob: -6.117153167724609
    9. 'moves' → logprob: -6.117153167724609
    10. 'is' → logprob: -6.117153167724609

Token 293: ' once' (ID: 4730)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5704935789108276
    2. 'to' → logprob: -1.0704935789108276
    3. 'from' → logprob: -3.070493698120117
    4. '   ' → logprob: -4.445493698120117
    5. 'i' → logprob: -4.570493698120117
    6. ' from' → logprob: -4.695493698120117
    7. ' i' → logprob: -4.820493698120117
    8. ' =' → logprob: -7.070493698120117
    9. '(i' → logprob: -7.070493698120117
    10. '=' → logprob: -7.570493698120117

Token 294: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4278143048286438
    2. '
' → logprob: -1.177814245223999
    3. ',' → logprob: -3.552814245223999
    4. ',
' → logprob: -5.927814483642578
    5. '<|end|>' → logprob: -5.927814483642578
    6. 'def' → logprob: -6.677814483642578
    7. 'visited' → logprob: -6.677814483642578
    8. 'from' → logprob: -6.802814483642578
    9. 'queue' → logprob: -7.677814483642578
    10. '    
' → logprob: -7.927814483642578

Token 295: ' previous' (ID: 5880)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0587186813354492
    2. '(s' → logprob: -1.3087186813354492
    3. '(px' → logprob: -1.9337186813354492
    4. ' (' → logprob: -2.808718681335449
    5. 'current' → logprob: -3.683718681335449
    6. '(' → logprob: -3.808718681335449
    7. 'the' → logprob: -3.808718681335449
    8. 'spr' → logprob: -4.058718681335449
    9. ' sprink' → logprob: -4.183718681335449
    10. ' current' → logprob: -4.308718681335449

Token 296: ' pos' (ID: 1253)
  Prédit: ' sprinkler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sprinkler' → logprob: -1.4334557056427002
    2. 'spr' → logprob: -1.5584557056427002
    3. ' positions' → logprob: -2.3084557056427
    4. ' position' → logprob: -2.3084557056427
    5. '_s' → logprob: -2.4334557056427
    6. 'position' → logprob: -3.4334557056427
    7. 's' → logprob: -3.5584557056427
    8. 'positions' → logprob: -3.6834557056427
    9. 'state' → logprob: -3.8084557056427
    10. ' state' → logprob: -4.183455467224121

Token 297: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5178446173667908
    2. '   ' → logprob: -1.5178446769714355
    3. '
' → logprob: -2.8928446769714355
    4. ' ,' → logprob: -3.1428446769714355
    5. ')' → logprob: -4.0178446769714355
    6. ' to' → logprob: -4.2678446769714355
    7. ',
' → logprob: -4.5178446769714355
    8. 'def' → logprob: -4.5178446769714355
    9. '<|end|>' → logprob: -4.5178446769714355
    10. '  ' → logprob: -6.0178446769714355

Token 298: ' pos' (ID: 1253)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.22172847390174866
    2. ' sprink' → logprob: -1.7217284440994263
    3. '(s' → logprob: -5.096728324890137
    4. 'the' → logprob: -5.596728324890137
    5. 'water' → logprob: -6.096728324890137
    6. 'a' → logprob: -6.346728324890137
    7. 'next' → logprob: -6.846728324890137
    8. ' the' → logprob: -6.846728324890137
    9. 'any' → logprob: -7.846728324890137
    10. '   ' → logprob: -8.096728324890137

Token 299: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1641515493392944
    2. 's' → logprob: -1.4141515493392944
    3. ')' → logprob: -1.5391515493392944
    4. '   ' → logprob: -1.7891515493392944
    5. ' =' → logprob: -5.164151668548584
    6. ',
' → logprob: -5.164151668548584
    7. 'itions' → logprob: -5.414151668548584
    8. 'ition' → logprob: -5.664151668548584
    9. ' ,' → logprob: -5.664151668548584
    10. ' )' → logprob: -5.789151668548584

Token 300: ' water' (ID: 3411)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.6610298752784729
    2. ' sprink' → logprob: -1.4110298156738281
    3. 'park' → logprob: -2.411029815673828
    4. 'water' → logprob: -2.661029815673828
    5. ' water' → logprob: -3.661029815673828
    6. 'range' → logprob: -4.911029815673828
    7. ' park' → logprob: -5.036029815673828
    8. 'i' → logprob: -5.161029815673828
    9. 'jump' → logprob: -5.286029815673828
    10. ' range' → logprob: -5.411029815673828

Token 301: ' area' (ID: 3624)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21232621371746063
    2. ',' → logprob: -2.2123262882232666
    3. '_' → logprob: -4.3373260498046875
    4. '_states' → logprob: -4.3373260498046875
    5. '
' → logprob: -4.7123260498046875
    6. 's' → logprob: -5.2123260498046875
    7. ' coverage' → logprob: -5.4623260498046875
    8. ',
' → logprob: -5.4623260498046875
    9. ' ,' → logprob: -5.7123260498046875
    10. '_queue' → logprob: -5.9623260498046875

Token 302: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24602888524532318
    2. '   ' → logprob: -1.9960289001464844
    3. '<|end|>' → logprob: -2.9960289001464844
    4. ',' → logprob: -3.8710289001464844
    5. 'def' → logprob: -5.746028900146484
    6. ',
' → logprob: -5.871028900146484
    7. '<|end|>' → logprob: -6.621028900146484
    8. ')' → logprob: -6.746028900146484
    9. '    
' → logprob: -7.371028900146484
    10. '  
' → logprob: -7.746028900146484

Token 303: ' sprinkler' (ID: 181940)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7156091332435608
    2. ' i' → logprob: -1.090609073638916
    3. ' sprink' → logprob: -2.215609073638916
    4. 'spr' → logprob: -2.840609073638916
    5. ' sprinkler' → logprob: -6.340609073638916
    6. ' the' → logprob: -6.715609073638916
    7. ' current' → logprob: -6.840609073638916
    8. ' water' → logprob: -7.340609073638916
    9. ' ' → logprob: -7.465609073638916
    10. 'the' → logprob: -7.590609073638916

Token 304: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10125099867582321
    2. ',' → logprob: -3.2262508869171143
    3. '
' → logprob: -3.4762508869171143
    4. '<|end|>' → logprob: -4.601251125335693
    5. ',
' → logprob: -5.851251125335693
    6. 'def' → logprob: -5.851251125335693
    7. 'visited' → logprob: -5.851251125335693
    8. ' visited' → logprob: -6.726251125335693
    9. ')' → logprob: -6.851251125335693
    10. '<|end|>' → logprob: -7.351251125335693

Token 305: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9084582924842834
    2. '   ' → logprob: -1.0334582328796387
    3. '<|end|>' → logprob: -2.0334582328796387
    4. ',' → logprob: -2.5334582328796387
    5. ',
' → logprob: -4.783458232879639
    6. 'def' → logprob: -4.783458232879639
    7. '<|end|>' → logprob: -5.658458232879639
    8. ')' → logprob: -5.783458232879639
    9. '  
' → logprob: -6.783458232879639
    10. '    
' → logprob: -6.908458232879639

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02012311853468418
    2. ',' → logprob: -4.89512300491333
    3. '
' → logprob: -5.02012300491333
    4. 'def' → logprob: -5.89512300491333
    5. 'visited' → logprob: -6.89512300491333
    6. ')' → logprob: -7.64512300491333
    7. '    
' → logprob: -7.77012300491333
    8. ',
' → logprob: -8.895123481750488
    9. ' visited' → logprob: -9.020123481750488
    10. ':' → logprob: -9.145123481750488

Token 307: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08385950326919556
    2. 'visited' → logprob: -3.333859443664551
    3. 'from' → logprob: -4.333859443664551
    4. 'queue' → logprob: -4.333859443664551
    5. '
' → logprob: -5.208859443664551
    6. ' queue' → logprob: -5.333859443664551
    7. ' visited' → logprob: -5.458859443664551
    8. ' from' → logprob: -6.458859443664551
    9. '    
' → logprob: -7.333859443664551
    10. 'q' → logprob: -7.583859443664551

Token 308: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9596300721168518
    2. 'visited' → logprob: -1.084630012512207
    3. '   ' → logprob: -1.834630012512207
    4. ' from' → logprob: -2.834630012512207
    5. ' visited' → logprob: -2.959630012512207
    6. 'queue' → logprob: -5.709630012512207
    7. ' queue' → logprob: -6.459630012512207
    8. 'dp' → logprob: -6.709630012512207
    9. 'q' → logprob: -6.834630012512207
    10. 'start' → logprob: -8.084630012512207

Token 309: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13054168224334717
    2. 'i' → logprob: -2.1305418014526367
    3. 'visited' → logprob: -7.130541801452637
    4. ' visited' → logprob: -7.255541801452637
    5. ' ' → logprob: -7.630541801452637
    6. ' idx' → logprob: -8.005541801452637
    7. ' prev' → logprob: -8.880541801452637
    8. '_i' → logprob: -9.130541801452637
    9. ' s' → logprob: -9.130541801452637
    10. 'spr' → logprob: -9.130541801452637

Token 310: '=' (ID: 28)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0286784116178751
    2. 'in' → logprob: -3.6536784172058105
    3. 'n' → logprob: -7.0286784172058105
    4. '=' → logprob: -7.4036784172058105
    5. ',' → logprob: -7.7786784172058105
    6. ' =' → logprob: -9.278677940368652
    7. ' ' → logprob: -9.278677940368652
    8. '+' → logprob: -9.403677940368652
    9. ' i' → logprob: -9.903677940368652
    10. ')' → logprob: -10.028677940368652

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05549382045865059
    2. ' ' → logprob: -2.9304938316345215
    3. '1' → logprob: -7.4304938316345215
    4. 'n' → logprob: -12.930493354797363
    5. '=' → logprob: -13.305493354797363
    6. '
' → logprob: -13.305493354797363
    7. '```' → logprob: -13.305493354797363
    8. '   ' → logprob: -13.617993354797363
    9. 'i' → logprob: -13.805493354797363
    10. ' n' → logprob: -13.805493354797363

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09261803328990936
    2. ':' → logprob: -2.467617988586426
    3. ' ,' → logprob: -6.092617988586426
    4. ':
' → logprob: -7.342617988586426
    5. ',
' → logprob: -8.217617988586426
    6. ' :' → logprob: -9.342617988586426
    7. ' only' → logprob: -9.592617988586426
    8. ' (' → logprob: -10.592617988586426
    9. '):' → logprob: -10.842617988586426
    10. ':,' → logprob: -10.842617988586426

Token 313: ' P' (ID: 398)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.44732531905174255
    2. ' start' → logprob: -2.0723252296447754
    3. ' q' → logprob: -2.8223252296447754
    4. 'queue' → logprob: -2.9473252296447754
    5. ' visited' → logprob: -3.0723252296447754
    6. 'start' → logprob: -3.6973252296447754
    7. 'visited' → logprob: -3.9473252296447754
    8. ' initial' → logprob: -5.447325229644775
    9. ' positions' → logprob: -5.572325229644775
    10. 'q' → logprob: -5.572325229644775

Token 314: 'yon' (ID: 10033)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0190708637237549
    2. 'yon' → logprob: -1.1440708637237549
    3. 'ython' → logprob: -1.8940708637237549
    4. 'x' → logprob: -2.019070863723755
    5. 'xon' → logprob: -5.144070625305176
    6. '#' → logprob: -5.519070625305176
    7. 'ylon' → logprob: -5.769070625305176
    8. '   ' → logprob: -5.769070625305176
    9. ' y' → logprob: -5.894070625305176
    10. 'osition' → logprob: -6.519070625305176

Token 315: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00011355629976605996
    2. '_k' → logprob: -10.000113487243652
    3. 'kich' → logprob: -10.125113487243652
    4. '_' → logprob: -11.375113487243652
    5. 'c' → logprob: -12.625113487243652
    6. '   ' → logprob: -12.875113487243652
    7. 'ki' → logprob: -12.875113487243652
    8. '#' → logprob: -13.750113487243652
    9. ' k' → logprob: -13.875113487243652
    10. 'к' → logprob: -14.125113487243652

Token 316: 'ichi' (ID: 44252)
  Prédit: 'ichi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichi' → logprob: -0.004154975991696119
    2. 'ich' → logprob: -6.754155158996582
    3. 'chi' → logprob: -6.879155158996582
    4. 'i' → logprob: -7.129155158996582
    5. 'ic' → logprob: -7.504155158996582
    6. ' ichi' → logprob: -9.129155158996582
    7. '   ' → logprob: -9.379155158996582
    8. 'itch' → logprob: -9.754155158996582
    9. 'ichí' → logprob: -9.879155158996582
    10. 'inchi' → logprob: -10.129155158996582

Token 317: ' jumps' (ID: 65613)
  Prédit: ' starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' starts' → logprob: -0.2611536383628845
    2. ' can' → logprob: -2.3861536979675293
    3. 'starts' → logprob: -2.8861536979675293
    4. 'can' → logprob: -3.8861536979675293
    5. 'pos' → logprob: -4.761153697967529
    6. '_start' → logprob: -4.886153697967529
    7. 'start' → logprob: -5.011153697967529
    8. '_pos' → logprob: -5.011153697967529
    9. ' is' → logprob: -5.136153697967529
    10. '_position' → logprob: -5.511153697967529

Token 318: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.3983386158943176
    2. 'from' → logprob: -1.2733385562896729
    3. ' once' → logprob: -3.523338556289673
    4. 'once' → logprob: -4.523338794708252
    5. ' to' → logprob: -5.273338794708252
    6. ' directly' → logprob: -6.898338794708252
    7. 'to' → logprob: -7.148338794708252
    8. ' in' → logprob: -8.773338317871094
    9. ' only' → logprob: -8.773338317871094
    10. ' at' → logprob: -8.898338317871094

Token 319: ' initial' (ID: 4871)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.07918675243854523
    2. ' (' → logprob: -2.8291866779327393
    3. '(py' → logprob: -4.204186916351318
    4. '(' → logprob: -6.579186916351318
    5. ' px' → logprob: -8.07918643951416
    6. 'px' → logprob: -8.82918643951416
    7. '(p' → logprob: -9.07918643951416
    8. '(None' → logprob: -9.82918643951416
    9. '(x' → logprob: -10.82918643951416
    10. '(nx' → logprob: -10.95418643951416

Token 320: ' pos' (ID: 1253)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.8795880079269409
    2. 'pos' → logprob: -1.129588007926941
    3. ' position' → logprob: -1.629588007926941
    4. ' (' → logprob: -3.7545881271362305
    5. 'px' → logprob: -4.5045881271362305
    6. '(px' → logprob: -5.0045881271362305
    7. ' pos' → logprob: -5.3795881271362305
    8. '_pos' → logprob: -5.3795881271362305
    9. ' px' → logprob: -5.3795881271362305
    10. '_position' → logprob: -5.6295881271362305

Token 321: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18915186822414398
    2. '
' → logprob: -1.9391518831253052
    3. ',' → logprob: -4.189151763916016
    4. ' to' → logprob: -5.939151763916016
    5. '    
' → logprob: -6.314151763916016
    6. ',
' → logprob: -6.689151763916016
    7. '  
' → logprob: -6.814151763916016
    8. ' ,' → logprob: -7.064151763916016
    9. 'import' → logprob: -7.814151763916016
    10. 'from' → logprob: -7.814151763916016

Token 322: ' pos' (ID: 1253)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.27440908551216125
    2. ' any' → logprob: -1.6494090557098389
    3. 'water' → logprob: -4.024409294128418
    4. ' a' → logprob: -5.024409294128418
    5. 'a' → logprob: -5.399409294128418
    6. ' water' → logprob: -5.524409294128418
    7. ' positions' → logprob: -5.524409294128418
    8. 'some' → logprob: -5.899409294128418
    9. ' one' → logprob: -6.524409294128418
    10. ' some' → logprob: -6.649409294128418

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4435367286205292
    2. ' =' → logprob: -1.6935367584228516
    3. '<|end|>' → logprob: -2.8185367584228516
    4. 's' → logprob: -3.9435367584228516
    5. ' ' → logprob: -3.9435367584228516
    6. ',' → logprob: -4.318536758422852
    7. ')' → logprob: -4.693536758422852
    8. '=' → logprob: -4.818536758422852
    9. ' for' → logprob: -5.318536758422852
    10. ' at' → logprob: -5.318536758422852

Token 324: ' water' (ID: 3411)
  Prédit: 'water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'water' → logprob: -0.475713312625885
    2. ' water' → logprob: -0.975713312625885
    3. 'spr' → logprob: -7.22571325302124
    4. 'area' → logprob: -7.85071325302124
    5. ' area' → logprob: -7.97571325302124
    6. ' sprink' → logprob: -9.975713729858398
    7. ' sprinkler' → logprob: -10.225713729858398
    8. ' ' → logprob: -10.725713729858398
    9. 'W' → logprob: -10.975713729858398
    10. 'watering' → logprob: -11.725713729858398

Token 325: ' area' (ID: 3624)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001588654238730669
    2. 'coverage' → logprob: -7.126588821411133
    3. 'areas' → logprob: -7.501588821411133
    4. '_cover' → logprob: -9.876588821411133
    5. 'cover' → logprob: -10.376588821411133
    6. ')' → logprob: -10.376588821411133
    7. 's' → logprob: -10.751588821411133
    8. 'covered' → logprob: -11.126588821411133
    9. '[' → logprob: -11.501588821411133
    10. 'area' → logprob: -11.626588821411133

Token 326: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00936643872410059
    2. ',' → logprob: -6.009366512298584
    3. '
' → logprob: -6.134366512298584
    4. '    
' → logprob: -6.509366512298584
    5. 'def' → logprob: -7.384366512298584
    6. '.' → logprob: -7.884366512298584
    7. '[i' → logprob: -7.884366512298584
    8. ')' → logprob: -8.009366035461426
    9. '0' → logprob: -8.259366035461426
    10. '[' → logprob: -8.384366035461426

Token 327: ' first' (ID: 1577)
  Prédit: ' sprink'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sprink' → logprob: -0.475213885307312
    2. 'spr' → logprob: -0.975213885307312
    3. ' sprinkler' → logprob: -7.225214004516602
    4. ' spr' → logprob: -9.600214004516602
    5. ' ' → logprob: -9.725214004516602
    6. 'water' → logprob: -9.850214004516602
    7. '   ' → logprob: -9.975214004516602
    8. 's' → logprob: -10.100214004516602
    9. '0' → logprob: -10.725214004516602
    10. '```' → logprob: -11.350214004516602

Token 328: ' sprinkler' (ID: 181940)
  Prédit: ' sprinkler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sprinkler' → logprob: -0.6787823438644409
    2. ' sprink' → logprob: -1.303782343864441
    3. ' ' → logprob: -2.1787824630737305
    4. 'spr' → logprob: -2.3037824630737305
    5. 's' → logprob: -5.8037824630737305
    6. ' )' → logprob: -5.9287824630737305
    7. ' ' → logprob: -7.1787824630737305
    8. '_s' → logprob: -7.5537824630737305
    9. ')' → logprob: -7.9287824630737305
    10. ' ,' → logprob: -8.55378246307373

Token 329: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031008008867502213
    2. '
' → logprob: -3.531008005142212
    3. '    
' → logprob: -6.906008243560791
    4. ' queue' → logprob: -9.781007766723633
    5. 'queue' → logprob: -10.031007766723633
    6. ',' → logprob: -10.031007766723633
    7. 'from' → logprob: -10.531007766723633
    8. ',
' → logprob: -11.281007766723633
    9. 'def' → logprob: -11.531007766723633
    10. '  
' → logprob: -11.781007766723633

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015965107595548034
    2. '
' → logprob: -6.876596450805664
    3. '    
' → logprob: -8.751596450805664
    4. 'from' → logprob: -8.751596450805664
    5. 'visited' → logprob: -9.126596450805664
    6. 'queue' → logprob: -9.626596450805664
    7. 'def' → logprob: -10.751596450805664
    8. '```' → logprob: -11.251596450805664
    9. ' queue' → logprob: -11.501596450805664
    10. ' visited' → logprob: -11.876596450805664

Token 331: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03863932564854622
    2. 'queue' → logprob: -4.163639545440674
    3. 'from' → logprob: -4.663639545440674
    4. 'visited' → logprob: -5.163639545440674
    5. ' queue' → logprob: -5.663639545440674
    6. ' from' → logprob: -6.538639545440674
    7. '
' → logprob: -7.038639545440674
    8. ' visited' → logprob: -7.413639545440674
    9. 'dp' → logprob: -8.163639068603516
    10. 'q' → logprob: -8.288639068603516

Token 332: ' At' (ID: 3604)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22833018004894257
    2. '   ' → logprob: -2.228330135345459
    3. 'visited' → logprob: -2.728330135345459
    4. 'queue' → logprob: -4.478330135345459
    5. ' from' → logprob: -4.478330135345459
    6. ' visited' → logprob: -5.728330135345459
    7. 'q' → logprob: -5.978330135345459
    8. 'dp' → logprob: -7.103330135345459
    9. ' queue' → logprob: -7.103330135345459
    10. '
' → logprob: -7.853330135345459

Token 333: ' transition' (ID: 14463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4512723386287689
    2. ' i' → logprob: -1.8262723684310913
    3. ' each' → logprob: -2.5762722492218018
    4. 'each' → logprob: -3.0762722492218018
    5. ' the' → logprob: -3.4512722492218018
    6. 'the' → logprob: -5.076272487640381
    7. 'spr' → logprob: -5.451272487640381
    8. 'len' → logprob: -5.576272487640381
    9. '#' → logprob: -5.576272487640381
    10. ' ' → logprob: -5.826272487640381

Token 334: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47238889336586
    2. 's' → logprob: -2.097388982772827
    3. 'from' → logprob: -2.222388982772827
    4. ' from' → logprob: -2.597388982772827
    5. ' =' → logprob: -3.722388982772827
    6. '=' → logprob: -3.972388982772827
    7. ' i' → logprob: -4.722388744354248
    8. ':' → logprob: -5.097388744354248
    9. 'i' → logprob: -6.097388744354248
    10. ' s' → logprob: -6.097388744354248

Token 335: ' sprinkler' (ID: 181940)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38967978954315186
    2. 'spr' → logprob: -1.1396797895431519
    3. ' i' → logprob: -6.889679908752441
    4. ' sprink' → logprob: -7.014679908752441
    5. ' sprinkler' → logprob: -7.764679908752441
    6. '```' → logprob: -8.889679908752441
    7. '   ' → logprob: -9.139679908752441
    8. '#' → logprob: -10.514679908752441
    9. 'water' → logprob: -10.514679908752441
    10. '
' → logprob: -11.014679908752441

Token 336: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22570012509822845
    2. 'i' → logprob: -1.6007001399993896
    3. '_i' → logprob: -9.100700378417969
    4. '[i' → logprob: -9.225700378417969
    5. '
' → logprob: -11.100700378417969
    6. ' to' → logprob: -11.225700378417969
    7. 's' → logprob: -11.475700378417969
    8. 'to' → logprob: -11.600700378417969
    9. '   ' → logprob: -12.225700378417969
    10. '(i' → logprob: -12.600700378417969

Token 337: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14632877707481384
    2. '+' → logprob: -2.8963286876678467
    3. ' i' → logprob: -3.1463286876678467
    4. 'to' → logprob: -3.5213286876678467
    5. 'i' → logprob: -5.396328926086426
    6. ',' → logprob: -6.396328926086426
    7. ' +' → logprob: -6.896328926086426
    8. ' ' → logprob: -7.521328926086426
    9. '_i' → logprob: -8.646328926086426
    10. ' ,' → logprob: -9.021328926086426

Token 338: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004634826444089413
    2. ' i' → logprob: -5.379634857177734
    3. 's' → logprob: -11.879634857177734
    4. '
' → logprob: -12.879634857177734
    5. 'spr' → logprob: -13.629634857177734
    6. '```' → logprob: -13.629634857177734
    7. '(i' → logprob: -14.004634857177734
    8. ' sprinkler' → logprob: -15.004634857177734
    9. '   ' → logprob: -15.129634857177734
    10. ' (' → logprob: -15.254634857177734

Token 339: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031871015671640635
    2. ' +' → logprob: -5.75318717956543
    3. '1' → logprob: -12.87818717956543
    4. '+i' → logprob: -13.37818717956543
    5. 'i' → logprob: -13.62818717956543
    6. '```' → logprob: -14.00318717956543
    7. '+
' → logprob: -14.12818717956543
    8. '-' → logprob: -14.37818717956543
    9. '
' → logprob: -14.62818717956543
    10. '++' → logprob: -14.87818717956543

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005976904183626175
    2. '+' → logprob: -5.130976676940918
    3. '```' → logprob: -11.005976676940918
    4. '
' → logprob: -11.505976676940918
    5. 'i' → logprob: -12.005976676940918
    6. ' ' → logprob: -12.380976676940918
    7. ',' → logprob: -12.755976676940918
    8. '   ' → logprob: -12.755976676940918
    9. ' +' → logprob: -13.005976676940918
    10. ')' → logprob: -13.505976676940918

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005247748922556639
    2. '   ' → logprob: -5.630247592926025
    3. ' ,' → logprob: -7.005247592926025
    4. 'def' → logprob: -8.380248069763184
    5. ',
' → logprob: -8.630248069763184
    6. ':' → logprob: -8.880248069763184
    7. '#' → logprob: -9.505248069763184
    8. ',i' → logprob: -10.505248069763184
    9. ' for' → logprob: -10.755248069763184
    10. ' def' → logprob: -11.630248069763184

Token 342: ' one' (ID: 1001)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.8785400390625
    2. '   ' → logprob: -1.6285400390625
    3. ' visited' → logprob: -1.8785400390625
    4. 'visited' → logprob: -2.5035400390625
    5. ' for' → logprob: -3.0035400390625
    6. ' the' → logprob: -3.1285400390625
    7. 'for' → logprob: -5.1285400390625
    8. ' if' → logprob: -5.3785400390625
    9. ' #' → logprob: -5.6285400390625
    10. 'we' → logprob: -5.6285400390625

Token 343: ' jump' (ID: 13843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3675886392593384
    2. ' more' → logprob: -1.8675886392593384
    3. ' step' → logprob: -2.992588520050049
    4. ' can' → logprob: -3.117588520050049
    5. 'pos' → logprob: -3.242588520050049
    6. ' ' → logprob: -3.367588520050049
    7. 'def' → logprob: -3.742588520050049
    8. ' jump' → logprob: -3.867588520050049
    9. '_jump' → logprob: -3.867588520050049
    10. '_moves' → logprob: -3.992588520050049

Token 344: ' allowed' (ID: 9279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038112640380859375
    2. '
' → logprob: -3.4131126403808594
    3. '    
' → logprob: -5.788112640380859
    4. 'visited' → logprob: -7.788112640380859
    5. 'def' → logprob: -8.78811264038086
    6. 'from' → logprob: -8.91311264038086
    7. 'queue' → logprob: -9.28811264038086
    8. ',' → logprob: -9.41311264038086
    9. ' 
' → logprob: -9.41311264038086
    10. ' visited' → logprob: -9.41311264038086

Token 345: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14671672880649567
    2. '
' → logprob: -2.021716833114624
    3. '    
' → logprob: -6.146716594696045
    4. 'from' → logprob: -7.396716594696045
    5. ',' → logprob: -7.896716594696045
    6. ',
' → logprob: -8.021717071533203
    7. 'visited' → logprob: -8.646717071533203
    8. 'def' → logprob: -9.396717071533203
    9. 'queue' → logprob: -10.021717071533203
    10. '  
' → logprob: -10.396717071533203

Token 346: ' then' (ID: 1815)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3579075336456299
    2. '   ' → logprob: -1.6079075336456299
    3. ' and' → logprob: -1.9829075336456299
    4. ' i' → logprob: -2.23290753364563
    5. ' so' → logprob: -2.85790753364563
    6. '
' → logprob: -2.98290753364563
    7. ' #' → logprob: -3.48290753364563
    8. 'and' → logprob: -3.98290753364563
    9. 'from' → logprob: -4.232907295227051
    10. ' visited' → logprob: -4.482907295227051

Token 347: ' stay' (ID: 5092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6406075954437256
    2. 'return' → logprob: -2.0156075954437256
    3. 'i' → logprob: -2.1406075954437256
    4. ' i' → logprob: -2.3906075954437256
    5. 'continue' → logprob: -2.3906075954437256
    6. ' return' → logprob: -2.8906075954437256
    7. ' the' → logprob: -3.1406075954437256
    8. 'def' → logprob: -3.3906075954437256
    9. ' continue' → logprob: -3.3906075954437256
    10. 'if' → logprob: -3.5156075954437256

Token 348: ' fixed' (ID: 13213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049494609236717224
    2. '
' → logprob: -3.174494504928589
    3. ',' → logprob: -6.424494743347168
    4. '    
' → logprob: -6.674494743347168
    5. 'def' → logprob: -6.799494743347168
    6. 'visited' → logprob: -7.049494743347168
    7. ',
' → logprob: -7.799494743347168
    8. 'from' → logprob: -8.299494743347168
    9. ' visited' → logprob: -8.674494743347168
    10. ')' → logprob: -9.299494743347168

Token 349: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040858328342437744
    2. '
' → logprob: -3.665858268737793
    3. 'visited' → logprob: -4.915858268737793
    4. 'from' → logprob: -5.415858268737793
    5. '    
' → logprob: -7.040858268737793
    6. ' visited' → logprob: -7.540858268737793
    7. ' from' → logprob: -7.790858268737793
    8. 'queue' → logprob: -8.040858268737793
    9. ',' → logprob: -8.790858268737793
    10. ',
' → logprob: -9.540858268737793

Token 350: ' that' (ID: 484)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.5646716356277466
    2. 'water' → logprob: -1.3146716356277466
    3. ' sprink' → logprob: -2.439671516418457
    4. ' water' → logprob: -2.814671516418457
    5. 'the' → logprob: -6.064671516418457
    6. ' sprinkler' → logprob: -6.189671516418457
    7. '(s' → logprob: -6.189671516418457
    8. 'position' → logprob: -6.689671516418457
    9. ' the' → logprob: -6.814671516418457
    10. 'pos' → logprob: -7.314671516418457

Token 351: ' pos' (ID: 1253)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.10784666240215302
    2. 'position' → logprob: -3.232846736907959
    3. 'i' → logprob: -4.607846736907959
    4. ' point' → logprob: -4.732846736907959
    5. ' i' → logprob: -5.107846736907959
    6. '<|end|>' → logprob: -5.232846736907959
    7. ',' → logprob: -5.357846736907959
    8. 's' → logprob: -5.607846736907959
    9. ' spot' → logprob: -5.732846736907959
    10. ')' → logprob: -5.982846736907959

Token 352: ' until' (ID: 4609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016887668520212173
    2. 'visited' → logprob: -4.891887664794922
    3. 'from' → logprob: -5.516887664794922
    4. '
' → logprob: -5.641887664794922
    5. '    
' → logprob: -7.516887664794922
    6. ' visited' → logprob: -7.766887664794922
    7. ' from' → logprob: -7.891887664794922
    8. 'queue' → logprob: -9.016887664794922
    9. ',' → logprob: -9.891887664794922
    10. 'import' → logprob: -10.641887664794922

Token 353: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6676693558692932
    2. 'next' → logprob: -1.1676692962646484
    3. 'i' → logprob: -2.4176692962646484
    4. ' the' → logprob: -3.4176692962646484
    5. ' i' → logprob: -3.6676692962646484
    6. 'the' → logprob: -3.7926692962646484
    7. 'spr' → logprob: -6.167669296264648
    8. ' sprink' → logprob: -6.542669296264648
    9. ' all' → logprob: -7.292669296264648
    10. '   ' → logprob: -7.792669296264648

Token 354: ' sprinkler' (ID: 181940)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06941185891628265
    2. ' _' → logprob: -4.069411754608154
    3. '
' → logprob: -4.319411754608154
    4. 'def' → logprob: -4.569411754608154
    5. '_' → logprob: -4.694411754608154
    6. ' i' → logprob: -5.069411754608154
    7. '_i' → logprob: -6.819411754608154
    8. ' step' → logprob: -6.944411754608154
    9. ' def' → logprob: -7.069411754608154
    10. '_move' → logprob: -7.194411754608154

Token 355: ' start' (ID: 1604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053061582148075104
    2. '
' → logprob: -3.1780614852905273
    3. '    
' → logprob: -4.928061485290527
    4. 'visited' → logprob: -6.303061485290527
    5. 'from' → logprob: -8.428061485290527
    6. 'queue' → logprob: -8.553061485290527
    7. ' visited' → logprob: -9.428061485290527
    8. '   
' → logprob: -9.678061485290527
    9. ' 
' → logprob: -9.803061485290527
    10. '  
' → logprob: -9.928061485290527

Token 356: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0746927559375763
    2. '
' → logprob: -2.699692726135254
    3. 'visited' → logprob: -6.074692726135254
    4. '    
' → logprob: -6.449692726135254
    5. 'from' → logprob: -8.199692726135254
    6. ' visited' → logprob: -8.824692726135254
    7. 'queue' → logprob: -9.074692726135254
    8. 'def' → logprob: -9.449692726135254
    9. ',' → logprob: -10.449692726135254
    10. ' queue' → logprob: -10.699692726135254

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005393838044255972
    2. '
' → logprob: -6.130393981933594
    3. 'visited' → logprob: -6.380393981933594
    4. 'from' → logprob: -7.130393981933594
    5. '    
' → logprob: -7.880393981933594
    6. 'queue' → logprob: -9.130393981933594
    7. 'def' → logprob: -9.380393981933594
    8. ' visited' → logprob: -10.130393981933594
    9. 'dp' → logprob: -10.755393981933594
    10. '```' → logprob: -11.255393981933594

Token 358: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012046637013554573
    2. '
' → logprob: -4.887046813964844
    3. 'visited' → logprob: -6.137046813964844
    4. '    
' → logprob: -7.012046813964844
    5. 'from' → logprob: -7.387046813964844
    6. ' visited' → logprob: -7.887046813964844
    7. 'queue' → logprob: -9.012046813964844
    8. 'def' → logprob: -9.262046813964844
    9. ' from' → logprob: -10.262046813964844
    10. ' queue' → logprob: -10.262046813964844

Token 359: ' Whether' (ID: 14959)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10184740275144577
    2. 'queue' → logprob: -3.4768474102020264
    3. 'from' → logprob: -3.6018474102020264
    4. 'visited' → logprob: -3.6018474102020264
    5. ' visited' → logprob: -5.601847171783447
    6. ' queue' → logprob: -5.976847171783447
    7. 'dp' → logprob: -6.351847171783447
    8. ' from' → logprob: -6.476847171783447
    9. 'q' → logprob: -6.851847171783447
    10. 'start' → logprob: -8.351847648620605

Token 360: ' there' (ID: 1354)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5017299056053162
    2. ' visited' → logprob: -2.126729965209961
    3. 'i' → logprob: -2.751729965209961
    4. ' i' → logprob: -4.001729965209961
    5. 'from' → logprob: -4.251729965209961
    6. 'def' → logprob: -4.251729965209961
    7. ' (' → logprob: -4.751729965209961
    8. ' the' → logprob: -4.876729965209961
    9. 'px' → logprob: -4.876729965209961
    10. 'the' → logprob: -4.876729965209961

Token 361: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4348981976509094
    2. ' is' → logprob: -1.1848981380462646
    3. 'exists' → logprob: -3.8098981380462646
    4. ' exists' → logprob: -4.559898376464844
    5. ' are' → logprob: -5.559898376464844
    6. 'are' → logprob: -5.809898376464844
    7. ' a' → logprob: -6.059898376464844
    8. ' was' → logprob: -6.684898376464844
    9. 'a' → logprob: -6.934898376464844
    10. '#' → logprob: -7.809898376464844

Token 362: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.11907967925071716
    2. 'a' → logprob: -2.99407958984375
    3. ' ' → logprob: -3.11907958984375
    4. ' an' → logprob: -5.36907958984375
    5. ' any' → logprob: -5.49407958984375
    6. ' more' → logprob: -6.86907958984375
    7. 'visited' → logprob: -6.86907958984375
    8. ' visited' → logprob: -7.36907958984375
    9. ' (' → logprob: -7.61907958984375
    10. ')' → logprob: -7.80657958984375

Token 363: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.68083655834198
    2. 'path' → logprob: -1.05583655834198
    3. ' valid' → logprob: -3.3058366775512695
    4. 'possible' → logprob: -3.9308366775512695
    5. ' ' → logprob: -4.1808366775512695
    6. 'reachable' → logprob: -4.3058366775512695
    7. 'valid' → logprob: -4.4308366775512695
    8. 'jump' → logprob: -5.0558366775512695
    9. ' possible' → logprob: -5.1808366775512695
    10. ' next' → logprob: -5.1808366775512695

Token 364: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15846003592014313
    2. 'visited' → logprob: -2.7834601402282715
    3. 'def' → logprob: -2.9084601402282715
    4. ' visited' → logprob: -4.2834601402282715
    5. '
' → logprob: -4.9084601402282715
    6. ',' → logprob: -5.9084601402282715
    7. 'from' → logprob: -6.4084601402282715
    8. 'queue' → logprob: -7.6584601402282715
    9. ' from' → logprob: -7.7834601402282715
    10. ' queue' → logprob: -7.7834601402282715

Token 365: ' for' (ID: 395)
  Prédit: ' covers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' covers' → logprob: -0.33254995942115784
    2. ' allows' → logprob: -2.332550048828125
    3. ' visits' → logprob: -2.832550048828125
    4. 'covers' → logprob: -3.082550048828125
    5. 'allows' → logprob: -3.832550048828125
    6. ' leads' → logprob: -4.332550048828125
    7. ' reaches' → logprob: -4.582550048828125
    8. ' can' → logprob: -4.957550048828125
    9. 'vis' → logprob: -5.707550048828125
    10. ' passes' → logprob: -5.957550048828125

Token 366: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5874000787734985
    2. ' i' → logprob: -0.8374000787734985
    3. ' all' → logprob: -4.712399959564209
    4. 'all' → logprob: -6.837399959564209
    5. ' ' → logprob: -7.962399959564209
    6. ' each' → logprob: -8.212400436401367
    7. ' sprink' → logprob: -9.337400436401367
    8. '   ' → logprob: -9.587400436401367
    9. ' sprinkler' → logprob: -9.587400436401367
    10. 'each' → logprob: -9.712400436401367

Token 367: ' sprink' (ID: 80706)
  Prédit: ' sprink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sprink' → logprob: -0.051687076687812805
    2. 'i' → logprob: -3.801687002182007
    3. 'spr' → logprob: -3.801687002182007
    4. ' i' → logprob: -5.426687240600586
    5. ' sprinkler' → logprob: -7.051687240600586
    6. 's' → logprob: -9.301687240600586
    7. ' ' → logprob: -9.426687240600586
    8. ' spr' → logprob: -9.426687240600586
    9. '0' → logprob: -10.301687240600586
    10. '```' → logprob: -10.801687240600586

Token 368: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -0.1446472406387329
    2. 'ler' → logprob: -2.0196471214294434
    3. 'ers' → logprob: -6.894647121429443
    4. 'l' → logprob: -7.644647121429443
    5. 'er' → logprob: -8.644647598266602
    6. '#' → logprob: -9.394647598266602
    7. 'le' → logprob: -11.019647598266602
    8. '   ' → logprob: -11.332147598266602
    9. 'les' → logprob: -11.394647598266602
    10. '[' → logprob: -11.582147598266602

Token 369: ' P' (ID: 398)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04719410464167595
    2. ' visited' → logprob: -3.922194004058838
    3. 'visited' → logprob: -4.922194004058838
    4. ',' → logprob: -5.172194004058838
    5. '
' → logprob: -5.297194004058838
    6. 'def' → logprob: -6.422194004058838
    7. ' possible' → logprob: -7.172194004058838
    8. '    
' → logprob: -7.297194004058838
    9. ' from' → logprob: -7.422194004058838
    10. ':' → logprob: -7.547194004058838

Token 370: 'yon' (ID: 10033)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3288039565086365
    2. 'ython' → logprob: -2.0788040161132812
    3. 'yon' → logprob: -2.8288040161132812
    4. '```' → logprob: -3.8288040161132812
    5. 'on' → logprob: -4.453804016113281
    6. '#' → logprob: -4.578804016113281
    7. '   ' → logprob: -4.953804016113281
    8. 'def' → logprob: -5.453804016113281
    9. 'ylon' → logprob: -5.453804016113281
    10. 'positions' → logprob: -6.391304016113281

Token 371: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000522650487255305
    2. 'ichi' → logprob: -8.12552261352539
    3. 'kich' → logprob: -9.62552261352539
    4. '_k' → logprob: -10.12552261352539
    5. '_' → logprob: -10.25052261352539
    6. 'ich' → logprob: -11.68802261352539
    7. 'ik' → logprob: -12.25052261352539
    8. '```' → logprob: -12.31302261352539
    9. ' k' → logprob: -12.50052261352539
    10. '	k' → logprob: -12.68802261352539

Token 372: 'ichi' (ID: 44252)
  Prédit: 'ichi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichi' → logprob: -0.003617647336795926
    2. 'ich' → logprob: -6.003617763519287
    3. 'ic' → logprob: -8.128617286682129
    4. 'i' → logprob: -8.253617286682129
    5. '   ' → logprob: -8.503617286682129
    6. 'chi' → logprob: -9.378617286682129
    7. ' ichi' → logprob: -10.253617286682129
    8. ' ' → logprob: -10.503617286682129
    9. '#' → logprob: -10.753617286682129
    10. '_' → logprob: -10.878617286682129

Token 373: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.43130266666412354
    2. 'can' → logprob: -1.0563026666641235
    3. ' is' → logprob: -7.431302547454834
    4. 'is' → logprob: -7.806302547454834
    5. ''s' → logprob: -7.931302547454834
    6. 's' → logprob: -8.806303024291992
    7. '_can' → logprob: -9.306303024291992
    8. '   ' → logprob: -9.556303024291992
    9. '```' → logprob: -9.556303024291992
    10. ' has' → logprob: -9.556303024291992

Token 374: ' be' (ID: 413)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.5963152050971985
    2. ' jump' → logprob: -2.0963151454925537
    3. ' reach' → logprob: -2.2213151454925537
    4. 'reach' → logprob: -2.3463151454925537
    5. ' be' → logprob: -3.4713151454925537
    6. 'stand' → logprob: -3.8463151454925537
    7. 'be' → logprob: -4.346315383911133
    8. 'start' → logprob: -4.471315383911133
    9. 'make' → logprob: -4.596315383911133
    10. 'land' → logprob: -5.221315383911133

Token 375: ' within' (ID: 3518)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6940675377845764
    2. ' at' → logprob: -0.8190675377845764
    3. 'in' → logprob: -4.069067478179932
    4. ' positioned' → logprob: -5.069067478179932
    5. ' in' → logprob: -5.194067478179932
    6. 'found' → logprob: -5.444067478179932
    7. 'located' → logprob: -5.694067478179932
    8. ' ' → logprob: -5.819067478179932
    9. 'visited' → logprob: -5.944067478179932
    10. 'reachable' → logprob: -6.069067478179932

Token 376: ' water' (ID: 3411)
  Prédit: 'water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'water' → logprob: -0.5934203267097473
    2. 'the' → logprob: -1.3434202671051025
    3. ' water' → logprob: -2.2184202671051025
    4. ' the' → logprob: -2.9684202671051025
    5. 'coverage' → logprob: -5.093420505523682
    6. 'their' → logprob: -5.218420505523682
    7. 'spr' → logprob: -5.718420505523682
    8. ' coverage' → logprob: -5.843420505523682
    9. ' their' → logprob: -6.843420505523682
    10. 'W' → logprob: -6.968420505523682

Token 377: ' coverage' (ID: 13422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.052288930863142014
    2. 'coverage' → logprob: -3.4272890090942383
    3. ' coverage' → logprob: -4.302289009094238
    4. '   ' → logprob: -5.552289009094238
    5. '_area' → logprob: -7.552289009094238
    6. '_cover' → logprob: -8.552289009094238
    7. ' ' → logprob: -10.052289009094238
    8. 'areas' → logprob: -10.177289009094238
    9. ')' → logprob: -10.177289009094238
    10. 'Coverage' → logprob: -10.427289009094238

Token 378: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024182874709367752
    2. '
' → logprob: -4.2741827964782715
    3. 'def' → logprob: -5.5241827964782715
    4. 'visited' → logprob: -6.1491827964782715
    5. '    
' → logprob: -6.8991827964782715
    6. ',' → logprob: -7.0241827964782715
    7. 'from' → logprob: -7.3991827964782715
    8. ' visited' → logprob: -8.64918327331543
    9. 'queue' → logprob: -8.77418327331543
    10. '  
' → logprob: -9.02418327331543

Token 379: ' single' (ID: 4590)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9887862205505371
    2. 'jump' → logprob: -1.238786220550537
    3. 'i' → logprob: -2.488786220550537
    4. 'spr' → logprob: -2.988786220550537
    5. 'index' → logprob: -3.488786220550537
    6. ' the' → logprob: -3.738786220550537
    7. 'all' → logprob: -4.238786220550537
    8. 'using' → logprob: -4.238786220550537
    9. ' sprink' → logprob: -4.488786220550537
    10. ' visiting' → logprob: -4.863786220550537

Token 380: ' jump' (ID: 13843)
  Prédit: ' jump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jump' → logprob: -0.40409544110298157
    2. 'jump' → logprob: -1.1540954113006592
    3. ' jumps' → logprob: -4.404095649719238
    4. ' step' → logprob: -6.404095649719238
    5. '_jump' → logprob: -7.904095649719238
    6. '   ' → logprob: -7.904095649719238
    7. 'step' → logprob: -8.279095649719238
    8. 'j' → logprob: -8.279095649719238
    9. 's' → logprob: -8.529095649719238
    10. '#' → logprob: -8.529095649719238

Token 381: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000977671123109758
    2. 'visited' → logprob: -7.500977516174316
    3. 'from' → logprob: -8.125977516174316
    4. 'queue' → logprob: -10.125977516174316
    5. ' visited' → logprob: -10.625977516174316
    6. '    
' → logprob: -10.875977516174316
    7. '
' → logprob: -10.875977516174316
    8. ' from' → logprob: -11.500977516174316
    9. 'def' → logprob: -11.875977516174316
    10. ' queue' → logprob: -12.875977516174316

Token 382: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.20392103493213654
    2. 'each' → logprob: -2.20392107963562
    3. ' sprinkler' → logprob: -3.82892107963562
    4. ' the' → logprob: -4.578920841217041
    5. ' sprink' → logprob: -4.703920841217041
    6. ' next' → logprob: -4.953920841217041
    7. 'i' → logprob: -5.078920841217041
    8. ' i' → logprob: -5.078920841217041
    9. ' current' → logprob: -5.953920841217041
    10. 'the' → logprob: -5.953920841217041

Token 383: ' transition' (ID: 14463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14089050889015198
    2. ' visited' → logprob: -3.515890598297119
    3. ' from' → logprob: -4.140890598297119
    4. 'from' → logprob: -4.140890598297119
    5. 'n' → logprob: -4.390890598297119
    6. '
' → logprob: -4.515890598297119
    7. 'visited' → logprob: -4.515890598297119
    8. ' i' → logprob: -5.265890598297119
    9. 'def' → logprob: -5.265890598297119
    10. ' for' → logprob: -5.640890598297119

Token 384: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005038779228925705
    2. '
' → logprob: -6.255038738250732
    3. 'from' → logprob: -6.255038738250732
    4. 'visited' → logprob: -7.880038738250732
    5. ' from' → logprob: -8.25503921508789
    6. '    
' → logprob: -8.38003921508789
    7. 'queue' → logprob: -9.38003921508789
    8. ' visited' → logprob: -9.50503921508789
    9. ' queue' → logprob: -10.13003921508789
    10. 'def' → logprob: -10.25503921508789

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00821383111178875
    2. '
' → logprob: -5.508213996887207
    3. 'from' → logprob: -6.383213996887207
    4. ' queue' → logprob: -7.383213996887207
    5. ' from' → logprob: -7.633213996887207
    6. '    
' → logprob: -7.758213996887207
    7. ' visited' → logprob: -8.133213996887207
    8. 'visited' → logprob: -8.258213996887207
    9. 'queue' → logprob: -9.008213996887207
    10. 'def' → logprob: -9.383213996887207

Token 386: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32046040892601013
    2. 'from' → logprob: -1.8204604387283325
    3. 'visited' → logprob: -2.320460319519043
    4. 'queue' → logprob: -4.695460319519043
    5. ' from' → logprob: -5.945460319519043
    6. ' visited' → logprob: -6.445460319519043
    7. 'dp' → logprob: -8.070460319519043
    8. ' queue' → logprob: -8.695460319519043
    9. 'q' → logprob: -9.320460319519043
    10. '
' → logprob: -10.070460319519043

Token 387: ' Since' (ID: 12265)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6076539754867554
    2. 'from' → logprob: -0.8576539754867554
    3. 'queue' → logprob: -4.107654094696045
    4. '   ' → logprob: -4.857654094696045
    5. ' visited' → logprob: -5.607654094696045
    6. ' from' → logprob: -6.482654094696045
    7. 'start' → logprob: -6.982654094696045
    8. 'dp' → logprob: -7.482654094696045
    9. 'q' → logprob: -8.732653617858887
    10. ' queue' → logprob: -9.857653617858887

Token 388: ' P' (ID: 398)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8001018166542053
    2. ' n' → logprob: -1.4251017570495605
    3. ' px' → logprob: -2.9251017570495605
    4. ' the' → logprob: -3.1751017570495605
    5. 'from' → logprob: -3.1751017570495605
    6. 'len' → logprob: -3.4251017570495605
    7. ' len' → logprob: -3.8001017570495605
    8. 'the' → logprob: -3.8001017570495605
    9. 'px' → logprob: -3.9251017570495605
    10. ' water' → logprob: -4.3001017570495605

Token 389: 'yon' (ID: 10033)
  Prédit: 'ython'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ython' → logprob: -0.8729782700538635
    2. 'os' → logprob: -1.4979782104492188
    3. '#' → logprob: -1.9979782104492188
    4. 'y' → logprob: -2.2479782104492188
    5. 'from' → logprob: -3.6229782104492188
    6. '   ' → logprob: -3.7479782104492188
    7. 'osition' → logprob: -4.122978210449219
    8. 'yon' → logprob: -4.122978210449219
    9. 'Y' → logprob: -4.747978210449219
    10. '
' → logprob: -5.872978210449219

Token 390: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.030563965439796448
    2. '_moves' → logprob: -3.905564069747925
    3. '   ' → logprob: -4.905563831329346
    4. '_' → logprob: -6.905563831329346
    5. '_k' → logprob: -7.655563831329346
    6. 'K' → logprob: -8.280564308166504
    7. '#' → logprob: -8.905564308166504
    8. 'moves' → logprob: -9.280564308166504
    9. '
' → logprob: -9.780564308166504
    10. 'q' → logprob: -9.780564308166504

Token 391: 'ichi' (ID: 44252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7599167823791504
    2. '_moves' → logprob: -1.0099167823791504
    3. '_MOV' → logprob: -2.0099167823791504
    4. '_' → logprob: -3.7599167823791504
    5. 'MOV' → logprob: -4.88491678237915
    6. 'moves' → logprob: -7.38491678237915
    7. 'Moves' → logprob: -7.63491678237915
    8. 'k' → logprob: -8.134916305541992
    9. '_mov' → logprob: -8.509916305541992
    10. '#' → logprob: -8.634916305541992

Token 392: ''s' (ID: 885)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.262031078338623
    2. 'pos' → logprob: -1.387031078338623
    3. '_pos' → logprob: -1.637031078338623
    4. 'can' → logprob: -2.512031078338623
    5. 'positions' → logprob: -2.512031078338623
    6. ' can' → logprob: -4.137031078338623
    7. 'from' → logprob: -4.137031078338623
    8. ' =' → logprob: -4.262031078338623
    9. 'position' → logprob: -4.512031078338623
    10. '=' → logprob: -4.512031078338623

Token 393: ' jump' (ID: 13843)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4788174033164978
    2. ' from' → logprob: -2.3538174629211426
    3. 'start' → logprob: -2.9788174629211426
    4. 'visited' → logprob: -3.2288174629211426
    5. ' visited' → logprob: -3.6038174629211426
    6. ' start' → logprob: -3.6038174629211426
    7. 'pos' → logprob: -3.7288174629211426
    8. ' px' → logprob: -3.9788174629211426
    9. ' queue' → logprob: -4.103817462921143
    10. ' positions' → logprob: -4.103817462921143

Token 394: ' is' (ID: 382)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.43780791759490967
    2. 'positions' → logprob: -2.812808036804199
    3. '_moves' → logprob: -3.312808036804199
    4. 'from' → logprob: -3.437808036804199
    5. '_queue' → logprob: -3.687808036804199
    6. 's' → logprob: -3.937808036804199
    7. ' =' → logprob: -4.062808036804199
    8. 'can' → logprob: -4.187808036804199
    9. 'pos' → logprob: -4.312808036804199
    10. 'queue' → logprob: -4.312808036804199

Token 395: ' always' (ID: 3324)
  Prédit: 'limited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limited' → logprob: -1.542112946510315
    2. 'fixed' → logprob: -1.792112946510315
    3. 'always' → logprob: -2.1671128273010254
    4. 'a' → logprob: -2.4171128273010254
    5. 'only' → logprob: -2.9171128273010254
    6. '(' → logprob: -2.9171128273010254
    7. 'restricted' → logprob: -3.4171128273010254
    8. ' always' → logprob: -3.6671128273010254
    9. 'exact' → logprob: -3.6671128273010254
    10. 'relative' → logprob: -3.9171128273010254

Token 396: ' one' (ID: 1001)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33642882108688354
    2. 'length' → logprob: -2.4614288806915283
    3. 'limited' → logprob: -3.8364288806915283
    4. 'of' → logprob: -3.8364288806915283
    5. 'a' → logprob: -3.9614288806915283
    6. 'one' → logprob: -4.086428642272949
    7. ' (' → logprob: -4.211428642272949
    8. 'restricted' → logprob: -4.461428642272949
    9. 'fixed' → logprob: -4.711428642272949
    10. 'exact' → logprob: -4.836428642272949

Token 397: ' of' (ID: 328)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -1.0955333709716797
    2. 'move' → logprob: -1.5955333709716797
    3. 'step' → logprob: -1.7205333709716797
    4. ' move' → logprob: -2.0955333709716797
    5. ' step' → logprob: -2.3455333709716797
    6. ' jump' → logprob: -3.5955333709716797
    7. 'unit' → logprob: -4.72053337097168
    8. ' unit' → logprob: -4.84553337097168
    9. 'def' → logprob: -5.09553337097168
    10. '-step' → logprob: -5.72053337097168

Token 398: ' the' (ID: 290)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.009411556646227837
    2. 'the' → logprob: -4.759411334991455
    3. ' J' → logprob: -7.259411334991455
    4. ' the' → logprob: -9.509411811828613
    5. '   ' → logprob: -12.509411811828613
    6. '8' → logprob: -12.509411811828613
    7. ' ' → logprob: -12.634411811828613
    8. 'eight' → logprob: -12.884411811828613
    9. '[J' → logprob: -13.259411811828613
    10. '[' → logprob: -14.259411811828613

Token 399: ' ' (ID: 220)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.006403654348105192
    2. ' J' → logprob: -6.25640344619751
    3. '8' → logprob: -6.50640344619751
    4. 'eight' → logprob: -6.50640344619751
    5. 'allowed' → logprob: -8.256403923034668
    6. 'possible' → logprob: -8.256403923034668
    7. 'valid' → logprob: -8.756403923034668
    8. 'next' → logprob: -8.881403923034668
    9. 'moves' → logprob: -9.256403923034668
    10. ' eight' → logprob: -9.631403923034668

Token 400: '8' (ID: 23)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.005184782203286886
    2. ' J' → logprob: -6.005184650421143
    3. 'eight' → logprob: -6.630184650421143
    4. '8' → logprob: -6.880184650421143
    5. 'next' → logprob: -9.2551851272583
    6. ' ' → logprob: -10.0051851272583
    7. 'possible' → logprob: -10.1301851272583
    8. ' eight' → logprob: -10.6301851272583
    9. 'allowed' → logprob: -11.0051851272583
    10. '   ' → logprob: -11.1301851272583

Token 401: ' L' (ID: 451)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.9526805877685547
    2. ' moves' → logprob: -1.5776805877685547
    3. 'moves' → logprob: -1.8276805877685547
    4. ' possible' → logprob: -2.4526805877685547
    5. 'possible' → logprob: -2.5776805877685547
    6. 'dire' → logprob: -3.7026805877685547
    7. ' knight' → logprob: -3.8276805877685547
    8. 'allowed' → logprob: -5.202680587768555
    9. 'kn' → logprob: -5.327680587768555
    10. ' relative' → logprob: -5.702680587768555

Token 402: '-shaped' (ID: 53876)
  Prédit: '-shaped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-shaped' → logprob: -0.3086833953857422
    2. 'sh' → logprob: -1.5586833953857422
    3. '_moves' → logprob: -3.683683395385742
    4. '_sh' → logprob: -4.308683395385742
    5. '-sh' → logprob: -5.558683395385742
    6. '-m' → logprob: -5.933683395385742
    7. '_' → logprob: -6.058683395385742
    8. 'moves' → logprob: -6.058683395385742
    9. '_move' → logprob: -6.433683395385742
    10. ' moves' → logprob: -7.433683395385742

Token 403: ' knight' (ID: 105457)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.25337153673171997
    2. ' moves' → logprob: -1.5033714771270752
    3. '_moves' → logprob: -7.628371715545654
    4. 'kn' → logprob: -8.878371238708496
    5. '#' → logprob: -9.003371238708496
    6. ' knight' → logprob: -9.003371238708496
    7. 'm' → logprob: -9.503371238708496
    8. 'mov' → logprob: -9.628371238708496
    9. 'sh' → logprob: -9.878371238708496
    10. '```' → logprob: -10.253371238708496

Token 404: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.511300265789032
    2. ' moves' → logprob: -1.0113003253936768
    3. '_moves' → logprob: -3.5113003253936768
    4. ''s' → logprob: -5.511300086975098
    5. '-m' → logprob: -6.511300086975098
    6. ' move' → logprob: -7.636300086975098
    7. 'move' → logprob: -8.011300086975098
    8. '_move' → logprob: -8.886300086975098
    9. '   ' → logprob: -10.136300086975098
    10. '#' → logprob: -10.511300086975098

Token 405: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007743386086076498
    2. 'from' → logprob: -5.8827433586120605
    3. ',
' → logprob: -6.1327433586120605
    4. '   ' → logprob: -6.3827433586120605
    5. '.' → logprob: -8.132743835449219
    6. ' from' → logprob: -8.257743835449219
    7. '#' → logprob: -8.882743835449219
    8. 'def' → logprob: -8.882743835449219
    9. ' and' → logprob: -10.257743835449219
    10. ':' → logprob: -10.257743835449219

Token 406: ' length' (ID: 5517)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.1393800973892212
    2. 'length' → logprob: -1.5143800973892212
    3. 'distance' → logprob: -1.8893800973892212
    4. 'no' → logprob: -2.8893799781799316
    5. 'def' → logprob: -3.3893799781799316
    6. 'the' → logprob: -3.7643799781799316
    7. 'J' → logprob: -3.8893799781799316
    8. 'a' → logprob: -3.8893799781799316
    9. 'fixed' → logprob: -3.8893799781799316
    10. 'cost' → logprob: -4.514379978179932

Token 407: ' fixed' (ID: 13213)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8865209817886353
    2. ' ' → logprob: -1.1365209817886353
    3. '=' → logprob: -2.1365208625793457
    4. '2' → logprob: -2.5115208625793457
    5. ' of' → logprob: -4.011520862579346
    6. ',' → logprob: -4.761520862579346
    7. ' =' → logprob: -5.011520862579346
    8. 's' → logprob: -5.011520862579346
    9. 'of' → logprob: -5.136520862579346
    10. '(' → logprob: -5.761520862579346

Token 408: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028029829263687134
    2. ',
' → logprob: -6.877802848815918
    3. '<|end|>' → logprob: -7.752802848815918
    4. '.' → logprob: -8.252802848815918
    5. ' ,' → logprob: -8.377802848815918
    6. '(' → logprob: -8.627802848815918
    7. ')' → logprob: -8.627802848815918
    8. '<|end|>' → logprob: -9.627802848815918
    9. ' and' → logprob: -10.002802848815918
    10. 'from' → logprob: -10.127802848815918

Token 409: '   ' (ID: 271)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.3539492189884186
    2. ' we' → logprob: -1.9789491891860962
    3. 'visited' → logprob: -2.7289493083953857
    4. '   ' → logprob: -3.6039493083953857
    5. ' #' → logprob: -3.7289493083953857
    6. '#' → logprob: -4.103949069976807
    7. ' queue' → logprob: -4.353949069976807
    8. ',' → logprob: -6.478949069976807
    9. ' from' → logprob: -6.478949069976807
    10. ' the' → logprob: -6.853949069976807

Token 410: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6112536787986755
    2. '#' (adapté à ' #') → logprob: -1.2362537384033203
    3. ' visited' → logprob: -2.4862537384033203
    4. 'visited' → logprob: -2.9862537384033203
    5. ' #' → logprob: -3.7362537384033203
    6. ' we' → logprob: -5.23625373840332
    7. ' queue' → logprob: -7.11125373840332
    8. 'from' → logprob: -7.73625373840332
    9. 'we' → logprob: -7.86125373840332
    10. ' and' → logprob: -8.61125373840332

Token 411: ' from' (ID: 591)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.7468532919883728
    2. 'visited' → logprob: -1.8718533515930176
    3. 'from' → logprob: -2.2468533515930176
    4. '   ' → logprob: -2.6218533515930176
    5. ' from' → logprob: -2.8718533515930176
    6. '#' → logprob: -2.9968533515930176
    7. ' start' → logprob: -3.2468533515930176
    8. ' #' → logprob: -3.8718533515930176
    9. 'start' → logprob: -5.121853351593018
    10. '
' → logprob: -5.121853351593018

Token 412: ' previous' (ID: 5880)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.79715096950531
    2. 'each' → logprob: -2.0471510887145996
    3. 'current' → logprob: -2.1721510887145996
    4. ' any' → logprob: -2.2971510887145996
    5. ' each' → logprob: -2.4221510887145996
    6. ' current' → logprob: -2.6721510887145996
    7. ' px' → logprob: -3.2971510887145996
    8. 'the' → logprob: -3.2971510887145996
    9. ' the' → logprob: -3.4221510887145996
    10. '(px' → logprob: -3.4221510887145996

Token 413: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0588088035583496
    2. '_pos' → logprob: -1.1838088035583496
    3. '_positions' → logprob: -1.3088088035583496
    4. 'positions' → logprob: -2.8088088035583496
    5. '_x' → logprob: -5.55880880355835
    6. 'position' → logprob: -6.05880880355835
    7. ' positions' → logprob: -6.43380880355835
    8. 'x' → logprob: -6.43380880355835
    9. '_area' → logprob: -6.80880880355835
    10. '   ' → logprob: -7.05880880355835

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028796790167689323
    2. ' to' → logprob: -4.278796672821045
    3. ' in' → logprob: -5.028796672821045
    4. 'to' → logprob: -5.903796672821045
    5. ' ,' → logprob: -6.278796672821045
    6. 'in' → logprob: -6.778796672821045
    7. 'possible' → logprob: -8.278797149658203
    8. ' we' → logprob: -8.403797149658203
    9. '   ' → logprob: -8.653797149658203
    10. ',
' → logprob: -8.778797149658203

Token 415: ' he' (ID: 501)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.5650173425674438
    2. ' for' → logprob: -2.1900172233581543
    3. ' possible' → logprob: -2.6900172233581543
    4. 'we' → logprob: -2.9400172233581543
    5. 'for' → logprob: -2.9400172233581543
    6. 'possible' → logprob: -3.1900172233581543
    7. ' next' → logprob: -3.3150172233581543
    8. ' visited' → logprob: -4.440017223358154
    9. 'next' → logprob: -4.440017223358154
    10. ' reachable' → logprob: -4.940017223358154

Token 416: ' must' (ID: 2804)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.08234580606222153
    2. 'can' → logprob: -2.582345724105835
    3. ' must' → logprob: -6.707345962524414
    4. 's' → logprob: -7.207345962524414
    5. ' may' → logprob: -8.082345962524414
    6. ' should' → logprob: -8.707345962524414
    7. '#' → logprob: -8.707345962524414
    8. ' cannot' → logprob: -8.957345962524414
    9. 'must' → logprob: -8.957345962524414
    10. '   ' → logprob: -9.332345962524414

Token 417: ' jump' (ID: 13843)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.5276946425437927
    2. ' be' → logprob: -2.1526947021484375
    3. 'move' → logprob: -2.5276947021484375
    4. 'jump' → logprob: -2.5276947021484375
    5. ' move' → logprob: -3.4026947021484375
    6. 'land' → logprob: -3.7776947021484375
    7. 'reach' → logprob: -4.0276947021484375
    8. 'find' → logprob: -4.2776947021484375
    9. ' land' → logprob: -4.4026947021484375
    10. ' jump' → logprob: -4.7776947021484375

Token 418: ' exactly' (ID: 9707)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3489808440208435
    2. 'to' → logprob: -1.2239809036254883
    3. ' into' → logprob: -8.348980903625488
    4. ' in' → logprob: -10.098980903625488
    5. ' only' → logprob: -10.223980903625488
    6. 'only' → logprob: -10.223980903625488
    7. ' exactly' → logprob: -10.348980903625488
    8. ' ' → logprob: -10.473980903625488
    9. '```' → logprob: -10.598980903625488
    10. 'into' → logprob: -10.723980903625488

Token 419: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6820443868637085
    2. 'to' → logprob: -0.9320443868637085
    3. ' one' → logprob: -2.807044506072998
    4. ' to' → logprob: -3.432044506072998
    5. 'once' → logprob: -5.307044506072998
    6. '1' → logprob: -6.807044506072998
    7. ' ' → logprob: -7.682044506072998
    8. 'in' → logprob: -8.05704402923584
    9. 'into' → logprob: -8.05704402923584
    10. 'onto' → logprob: -8.68204402923584

Token 420: ' of' (ID: 328)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.9510281085968018
    2. 'step' → logprob: -1.2010281085968018
    3. ' move' → logprob: -2.4510281085968018
    4. ' of' → logprob: -3.0760281085968018
    5. 'move' → logprob: -3.2010281085968018
    6. 'time' → logprob: -3.5760281085968018
    7. 'jump' → logprob: -3.7010281085968018
    8. ' jump' → logprob: -4.201027870178223
    9. 'space' → logprob: -4.326027870178223
    10. ' time' → logprob: -4.826027870178223

Token 421: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.031168857589364052
    2. ' J' → logprob: -3.7811689376831055
    3. 'the' → logprob: -5.1561689376831055
    4. ' the' → logprob: -6.1561689376831055
    5. ' ' → logprob: -12.906168937683105
    6. '   ' → logprob: -13.156168937683105
    7. '[J' → logprob: -13.781168937683105
    8. '
' → logprob: -14.281168937683105
    9. '`' → logprob: -14.906168937683105
    10. '	J' → logprob: -15.281168937683105

Token 422: 'UMP' (ID: 49053)
  Prédit: 'UMP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UMP' → logprob: -2.3438327843905427e-05
    2. '_' → logprob: -11.37502384185791
    3. 'J' → logprob: -12.25002384185791
    4. 'ump' → logprob: -12.50002384185791
    5. 'UM' → logprob: -13.37502384185791
    6. 'U' → logprob: -14.12502384185791
    7. '_J' → logprob: -15.25002384185791
    8. '_jump' → logprob: -15.75002384185791
    9. '_U' → logprob: -16.250022888183594
    10. '   ' → logprob: -16.875022888183594

Token 423: '_MOV' (ID: 96227)
  Prédit: '_MOV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOV' → logprob: -2.069664333248511e-05
    2. '_MOVE' → logprob: -11.375020980834961
    3. '_moves' → logprob: -12.000020980834961
    4. '_' → logprob: -14.000020980834961
    5. 'MOV' → logprob: -14.875020980834961
    6. '```' → logprob: -14.875020980834961
    7. ' _' → logprob: -15.375020980834961
    8. '_MOD' → logprob: -15.625020980834961
    9. '`' → logprob: -15.625020980834961
    10. '"_' → logprob: -15.750020980834961

Token 424: 'ES' (ID: 1759)
  Prédit: 'ES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ES' → logprob: -1.7432603272027336e-06
    2. 'E' → logprob: -13.500001907348633
    3. '_ES' → logprob: -15.625001907348633
    4. ' ES' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.000001907348633
    6. 'Es' → logprob: -18.625001907348633
    7. '[' → logprob: -18.750001907348633
    8. 'EST' → logprob: -19.125001907348633
    9. '```' → logprob: -19.125001907348633
    10. '
' → logprob: -19.125001907348633

Token 425: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02228073962032795
    2. 'from' → logprob: -5.022280693054199
    3. ',' → logprob: -5.147280693054199
    4. '.' → logprob: -6.397280693054199
    5. 'def' → logprob: -6.522280693054199
    6. ' from' → logprob: -6.522280693054199
    7. '
' → logprob: -6.522280693054199
    8. 'visited' → logprob: -6.647280693054199
    9. ' to' → logprob: -7.522280693054199
    10. ',
' → logprob: -8.1472806930542

Token 426: ' land' (ID: 4583)
  Prédit: 'land'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'land' → logprob: -0.7791405320167542
    2. 'arr' → logprob: -1.7791404724121094
    3. 'check' → logprob: -1.9041404724121094
    4. 'end' → logprob: -2.5291404724121094
    5. 'reach' → logprob: -2.6541404724121094
    6. 'if' → logprob: -3.5291404724121094
    7. ' land' → logprob: -4.029140472412109
    8. 'the' → logprob: -5.154140472412109
    9. 'lands' → logprob: -5.654140472412109
    10. 'landing' → logprob: -6.029140472412109

Token 427: ' inside' (ID: 6772)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13926777243614197
    2. 'in' → logprob: -2.264267683029175
    3. ' on' → logprob: -4.514267921447754
    4. ' within' → logprob: -4.889267921447754
    5. ' inside' → logprob: -5.514267921447754
    6. 'on' → logprob: -6.389267921447754
    7. 'inside' → logprob: -7.139267921447754
    8. 'within' → logprob: -7.514267921447754
    9. ' at' → logprob: -8.139267921447754
    10. ' into' → logprob: -9.014267921447754

Token 428: ' the' (ID: 290)
  Prédit: 'water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'water' → logprob: -0.08114302903413773
    2. ' water' → logprob: -2.5811431407928467
    3. '   ' → logprob: -6.581142902374268
    4. 'the' → logprob: -7.331142902374268
    5. ' the' → logprob: -9.456143379211426
    6. '           ' → logprob: -10.081143379211426
    7. '       ' → logprob: -10.206143379211426
    8. '               ' → logprob: -10.706143379211426
    9. 'area' → logprob: -12.331143379211426
    10. 'current' → logprob: -12.831143379211426

Token 429: ' sprinkler' (ID: 181940)
  Prédit: 'water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'water' → logprob: -0.030008608475327492
    2. ' water' → logprob: -3.530008554458618
    3. 'current' → logprob: -9.030008316040039
    4. 'next' → logprob: -10.155008316040039
    5. 'area' → logprob: -10.405008316040039
    6. ' current' → logprob: -11.030008316040039
    7. ' next' → logprob: -11.280008316040039
    8. 'set' → logprob: -11.530008316040039
    9. '   ' → logprob: -12.155008316040039
    10. ' area' → logprob: -12.530008316040039

Token 430: ' coverage' (ID: 13422)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.3479299545288086
    2. '_water' → logprob: -1.3479299545288086
    3. '_' → logprob: -1.4729299545288086
    4. ' area' → logprob: -3.0979299545288086
    5. ' water' → logprob: -3.2229299545288086
    6. 'area' → logprob: -3.3479299545288086
    7. 'water' → logprob: -3.3479299545288086
    8. '_area' → logprob: -3.5979299545288086
    9. 'coverage' → logprob: -3.9729299545288086
    10. 's' → logprob: -4.347929954528809

Token 431: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01892964169383049
    2. '
' → logprob: -4.643929481506348
    3. ',' → logprob: -5.893929481506348
    4. '.' → logprob: -6.393929481506348
    5. '    
' → logprob: -6.518929481506348
    6. 'def' → logprob: -7.018929481506348
    7. 'visited' → logprob: -7.018929481506348
    8. 'from' → logprob: -7.768929481506348
    9. ',
' → logprob: -8.393929481506348
    10. ' visited' → logprob: -8.768929481506348

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026853985618799925
    2. '
' → logprob: -7.252685546875
    3. 'visited' → logprob: -7.252685546875
    4. ' visited' → logprob: -7.752685546875
    5. '    
' → logprob: -8.502685546875
    6. 'def' → logprob: -8.502685546875
    7. 'from' → logprob: -9.127685546875
    8. 'import' → logprob: -9.877685546875
    9. ' queue' → logprob: -9.877685546875
    10. 'queue' → logprob: -10.252685546875

Token 433: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2858053743839264
    2. 'from' → logprob: -1.535805344581604
    3. 'visited' → logprob: -3.6608054637908936
    4. 'queue' → logprob: -5.4108052253723145
    5. ' from' → logprob: -6.1608052253723145
    6. '
' → logprob: -7.6608052253723145
    7. ' visited' → logprob: -8.285805702209473
    8. ' queue' → logprob: -9.160805702209473
    9. 'q' → logprob: -9.910805702209473
    10. 'dp' → logprob: -10.160805702209473

Token 434: ' We'll' (ID: 46830)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5127982497215271
    2. 'visited' → logprob: -1.3877983093261719
    3. ' from' → logprob: -2.887798309326172
    4. '   ' → logprob: -3.137798309326172
    5. ' visited' → logprob: -3.137798309326172
    6. 'queue' → logprob: -5.512798309326172
    7. 'start' → logprob: -6.137798309326172
    8. ' queue' → logprob: -7.012798309326172
    9. '#' → logprob: -7.262798309326172
    10. ' start' → logprob: -7.762798309326172

Token 435: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.12342949211597443
    2. ' use' → logprob: -2.498429536819458
    3. 'initialize' → logprob: -4.373429298400879
    4. 'from' → logprob: -4.998429298400879
    5. 'implement' → logprob: -5.248429298400879
    6. 'continue' → logprob: -5.623429298400879
    7. ' implement' → logprob: -6.123429298400879
    8. 'queue' → logprob: -6.748429298400879
    9. 'import' → logprob: -6.748429298400879
    10. 'init' → logprob: -8.248429298400879

Token 436: ' a' (ID: 261)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.31457018852233887
    2. 'from' → logprob: -1.3145701885223389
    3. ' deque' → logprob: -7.439570426940918
    4. 'queue' → logprob: -8.189570426940918
    5. 'visited' → logprob: -8.814570426940918
    6. 'a' → logprob: -9.314570426940918
    7. '```' → logprob: -9.439570426940918
    8. ' from' → logprob: -9.564570426940918
    9. 'b' → logprob: -10.189570426940918
    10. 'collections' → logprob: -11.939570426940918

Token 437: ' queue' (ID: 13661)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.13680104911327362
    2. 'from' → logprob: -2.63680100440979
    3. 'queue' → logprob: -2.88680100440979
    4. ' deque' → logprob: -8.261800765991211
    5. ' queue' → logprob: -9.011800765991211
    6. 'def' → logprob: -10.136800765991211
    7. '
' → logprob: -10.761800765991211
    8. 'visited' → logprob: -10.886800765991211
    9. ' from' → logprob: -11.011800765991211
    10. 'for' → logprob: -11.136800765991211

Token 438: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37554046511650085
    2. '=' → logprob: -2.1255404949188232
    3. '(queue' → logprob: -2.1255404949188232
    4. ',' → logprob: -3.6255404949188232
    5. '   ' → logprob: -4.375540256500244
    6. '(' → logprob: -4.500540256500244
    7. ' to' → logprob: -4.750540256500244
    8. ' for' → logprob: -5.250540256500244
    9. 'deque' → logprob: -5.875540256500244
    10. ' (' → logprob: -6.000540256500244

Token 439: ' BFS' (ID: 190016)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00997812207788229
    2. ' deque' → logprob: -5.009978294372559
    3. 'b' → logprob: -6.009978294372559
    4. ' BFS' → logprob: -7.759978294372559
    5. 'B' → logprob: -8.259978294372559
    6. ' bfs' → logprob: -9.259978294372559
    7. 'queue' → logprob: -11.259978294372559
    8. 'bread' → logprob: -12.384978294372559
    9. 'collections' → logprob: -13.134978294372559
    10. ' queue' → logprob: -13.509978294372559

Token 440: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4862958490848541
    2. 'queue' → logprob: -2.1112959384918213
    3. ' queue' → logprob: -2.4862959384918213
    4. ':' → logprob: -2.6112959384918213
    5. '
' → logprob: -2.7362959384918213
    6. '(queue' → logprob: -4.361295700073242
    7. '	queue' → logprob: -4.861295700073242
    8. 'q' → logprob: -5.236295700073242
    9. ',' → logprob: -5.861295700073242
    10. ' =' → logprob: -5.986295700073242

Token 441: ' storing' (ID: 42787)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.02895672619342804
    2. 'queue' → logprob: -4.028956890106201
    3. ' visited' → logprob: -5.278956890106201
    4. ' q' → logprob: -5.778956890106201
    5. '   ' → logprob: -7.278956890106201
    6. ' que' → logprob: -7.528956890106201
    7. 'visited' → logprob: -7.653956890106201
    8. ' deque' → logprob: -8.403956413269043
    9. 'deque' → logprob: -8.403956413269043
    10. '
' → logprob: -9.028956413269043

Token 442: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.33999237418174744
    2. '(px' → logprob: -2.2149922847747803
    3. ' (' → logprob: -2.3399922847747803
    4. '(' → logprob: -2.8399922847747803
    5. '(index' → logprob: -5.089992523193359
    6. '(queue' → logprob: -5.339992523193359
    7. '(s' → logprob: -5.464992523193359
    8. '(current' → logprob: -5.964992523193359
    9. '(p' → logprob: -6.589992523193359
    10. ' the' → logprob: -7.089992523193359

Token 443: 'index' (ID: 2257)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11847089976072311
    2. 'i' → logprob: -2.2434709072113037
    3. 'index' → logprob: -6.243470668792725
    4. 'idx' → logprob: -6.243470668792725
    5. 'spr' → logprob: -7.618470668792725
    6. 'current' → logprob: -7.993470668792725
    7. ')' → logprob: -8.118471145629883
    8. ' ' → logprob: -8.743471145629883
    9. ' i' → logprob: -9.243471145629883
    10. 's' → logprob: -9.493471145629883

Token 444: '_s' (ID: 1278)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012710826471447945
    2. ' ,' → logprob: -4.512711048126221
    3. '_s' → logprob: -6.762711048126221
    4. 'spr' → logprob: -8.137710571289062
    5. '_in' → logprob: -9.762710571289062
    6. '_,' → logprob: -10.262710571289062
    7. ',s' → logprob: -10.887710571289062
    8. ')' → logprob: -11.012710571289062
    9. ' sprink' → logprob: -11.637710571289062
    10. 's' → logprob: -11.762710571289062

Token 445: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.08409373462200165
    2. ',' → logprob: -3.2090938091278076
    3. '_s' → logprob: -5.3340935707092285
    4. 'p' → logprob: -5.4590935707092285
    5. '_pr' → logprob: -5.7090935707092285
    6. ')' → logprob: -6.0840935707092285
    7. '_' → logprob: -6.2090935707092285
    8. 'spr' → logprob: -6.2715935707092285
    9. '_,' → logprob: -6.4590935707092285
    10. '_i' → logprob: -6.4590935707092285

Token 446: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.003531178692355752
    2. 'inkle' → logprob: -6.753530979156494
    3. 'inkl' → logprob: -6.753530979156494
    4. 'ay' → logprob: -7.878530979156494
    5. 'k' → logprob: -9.253531455993652
    6. 'i' → logprob: -9.253531455993652
    7. 'in' → logprob: -9.378531455993652
    8. '   ' → logprob: -9.503531455993652
    9. 'inkles' → logprob: -9.753531455993652
    10. '```' → logprob: -9.878531455993652

Token 447: 'ler' (ID: 1639)
  Prédit: 'ink'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.0894164964556694
    2. 'ler' → logprob: -3.46441650390625
    3. 'lers' → logprob: -3.58941650390625
    4. 'in' → logprob: -4.58941650390625
    5. '   ' → logprob: -5.58941650390625
    6. 'kl' → logprob: -5.71441650390625
    7. 'inter' → logprob: -6.08941650390625
    8. 'k' → logprob: -6.46441650390625
    9. 'inker' → logprob: -6.46441650390625
    10. 'int' → logprob: -7.71441650390625

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011558275582501665
    2. ' ,' → logprob: -9.250115394592285
    3. ')' → logprob: -12.250115394592285
    4. ',p' → logprob: -13.000115394592285
    5. ',x' → logprob: -13.000115394592285
    6. ',s' → logprob: -13.375115394592285
    7. ',
' → logprob: -13.500115394592285
    8. ',i' → logprob: -14.000115394592285
    9. ',n' → logprob: -14.125115394592285
    10. ',current' → logprob: -14.125115394592285

Token 449: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03829140588641167
    2. 'px' → logprob: -3.6632914543151855
    3. 'pos' → logprob: -5.2882914543151855
    4. ' x' → logprob: -5.6632914543151855
    5. 'position' → logprob: -6.1632914543151855
    6. ' px' → logprob: -7.4132914543151855
    7. 'current' → logprob: -7.7882914543151855
    8. 'cur' → logprob: -10.413290977478027
    9. 'nx' → logprob: -10.413290977478027
    10. 'curr' → logprob: -10.538290977478027

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008015265921130776
    2. ' ,' → logprob: -7.2508015632629395
    3. ',y' → logprob: -10.125801086425781
    4. '<|end|>' → logprob: -10.750801086425781
    5. '_,' → logprob: -11.625801086425781
    6. ')' → logprob: -12.375801086425781
    7. ',
' → logprob: -12.750801086425781
    8. '<|end|>' → logprob: -13.000801086425781
    9. 'py' → logprob: -13.375801086425781
    10. '_py' → logprob: -13.500801086425781

Token 451: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048528365790844
    2. ' y' → logprob: -4.511048316955566
    3. ',' → logprob: -14.761048316955566
    4. ',y' → logprob: -16.261049270629883
    5. '<|end|>' → logprob: -16.261049270629883
    6. ')' → logprob: -16.636049270629883
    7. '	y' → logprob: -17.261049270629883
    8. ')y' → logprob: -17.636049270629883
    9. ' ' → logprob: -18.011049270629883
    10. '   ' → logprob: -18.636049270629883

Token 452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -12.625004768371582
    3. ')
' → logprob: -13.875004768371582
    4. '   ' → logprob: -15.625004768371582
    5. '),' → logprob: -15.750004768371582
    6. '))' → logprob: -17.250003814697266
    7. ',' → logprob: -17.500003814697266
    8. '}' → logprob: -18.625003814697266
    9. ')

' → logprob: -18.625003814697266
    10. ' ' → logprob: -18.625003814697266

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16117192804813385
    2. ',' → logprob: -3.2861719131469727
    3. 'queue' → logprob: -3.2861719131469727
    4. '
' → logprob: -3.6611719131469727
    5. ':' → logprob: -3.9111719131469727
    6. '(queue' → logprob: -4.786171913146973
    7. '	queue' → logprob: -5.161171913146973
    8. ' queue' → logprob: -5.161171913146973
    9. ')' → logprob: -5.786171913146973
    10. ',
' → logprob: -6.661171913146973

Token 454: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15590432286262512
    2. 'queue' → logprob: -2.1559042930603027
    3. ' queue' → logprob: -3.6559042930603027
    4. '
' → logprob: -6.405904293060303
    5. '	queue' → logprob: -7.655904293060303
    6. 'q' → logprob: -7.905904293060303
    7. '    
' → logprob: -8.905904769897461
    8. ' q' → logprob: -10.405904769897461
    9. '	q' → logprob: -11.155904769897461
    10. ' 
' → logprob: -11.780904769897461

Token 455: ' index' (ID: 3472)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4214599132537842
    2. '   ' → logprob: -1.1714599132537842
    3. ' queue' → logprob: -3.921459913253784
    4. 'q' → logprob: -4.796460151672363
    5. 'from' → logprob: -6.046460151672363
    6. 'visited' → logprob: -6.046460151672363
    7. '
' → logprob: -7.046460151672363
    8. ' visited' → logprob: -9.421460151672363
    9. ' q' → logprob: -10.046460151672363
    10. ' from' → logprob: -10.046460151672363

Token 456: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.08772248029708862
    2. ' =' → logprob: -2.8377225399017334
    3. '_queue' → logprob: -4.462722301483154
    4. '=' → logprob: -4.962722301483154
    5. ',' → logprob: -5.462722301483154
    6. '_' → logprob: -6.337722301483154
    7. ')' → logprob: -7.962722301483154
    8. '_q' → logprob: -8.712722778320312
    9. ',_' → logprob: -9.837722778320312
    10. '_,' → logprob: -10.212722778320312

Token 457: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.008182968012988567
    2. '_s' → logprob: -5.258183002471924
    3. '_pr' → logprob: -6.383183002471924
    4. 'spr' → logprob: -6.758183002471924
    5. 'p' → logprob: -10.258182525634766
    6. '_' → logprob: -10.758182525634766
    7. '_p' → logprob: -10.883182525634766
    8. '=' → logprob: -12.633182525634766
    9. '_queue' → logprob: -12.883182525634766
    10. 'pray' → logprob: -13.133182525634766

Token 458: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.05749502405524254
    2. 'inkle' → logprob: -4.3074951171875
    3. '_' → logprob: -4.8074951171875
    4. 'inker' → logprob: -5.0574951171875
    5. 'inter' → logprob: -5.5574951171875
    6. 'int' → logprob: -5.6824951171875
    7. 'i' → logprob: -6.1824951171875
    8. 'n' → logprob: -6.3074951171875
    9. 'ing' → logprob: -6.3074951171875
    10. '_index' → logprob: -6.4324951171875

Token 459: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.006223475094884634
    2. 'er' → logprob: -5.131223678588867
    3. '_index' → logprob: -9.506223678588867
    4. 'лер' → logprob: -10.256223678588867
    5. 'l' → logprob: -10.381223678588867
    6. 'iller' → logprob: -10.881223678588867
    7. 'r' → logprob: -11.006223678588867
    8. 'erl' → logprob: -11.506223678588867
    9. 'lighter' → logprob: -11.631223678588867
    10. 'index' → logprob: -11.756223678588867

Token 460: ' is' (ID: 382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21325503289699554
    2. ' =' → logprob: -1.7132550477981567
    3. '=' → logprob: -4.588254928588867
    4. ' ,' → logprob: -7.088254928588867
    5. ')' → logprob: -7.963254928588867
    6. ' +' → logprob: -8.838254928588867
    7. '+' → logprob: -9.338254928588867
    8. ' +=' → logprob: -9.588254928588867
    9. ',
' → logprob: -10.838254928588867
    10. ' ==' → logprob: -10.963254928588867

Token 461: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8729776740074158
    2. ' the' → logprob: -0.8729776740074158
    3. ' ' → logprob: -1.9979777336120605
    4. ' i' → logprob: -5.1229777336120605
    5. 'the' → logprob: -5.2479777336120605
    6. ' an' → logprob: -5.4979777336120605
    7. ' int' → logprob: -5.6229777336120605
    8. ' n' → logprob: -5.8729777336120605
    9. ' current' → logprob: -6.3729777336120605
    10. 'n' → logprob: -6.4979777336120605

Token 462: ' sprink' (ID: 80706)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5434929132461548
    2. 'current' → logprob: -1.4184929132461548
    3. '0' → logprob: -2.0434927940368652
    4. ' next' → logprob: -3.6684927940368652
    5. 'next' → logprob: -4.543492794036865
    6. 'int' → logprob: -6.043492794036865
    7. ' int' → logprob: -6.168492794036865
    8. 'spr' → logprob: -6.293492794036865
    9. ' index' → logprob: -6.918492794036865
    10. ' ' → logprob: -6.918492794036865

Token 463: 'lers' (ID: 15137)
  Prédit: 'ler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.16767555475234985
    2. 'er' → logprob: -2.792675495147705
    3. 'lers' → logprob: -2.917675495147705
    4. 'ink' → logprob: -4.167675495147705
    5. 'ers' → logprob: -4.292675495147705
    6. '_index' → logprob: -6.167675495147705
    7. '_' → logprob: -7.042675495147705
    8. '#' → logprob: -7.042675495147705
    9. 'index' → logprob: -7.792675495147705
    10. '   ' → logprob: -8.042675971984863

Token 464: ' step' (ID: 5983)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9940638542175293
    2. '_' → logprob: -1.2440638542175293
    3. ',' → logprob: -2.1190638542175293
    4. '_index' → logprob: -2.1190638542175293
    5. '_idx' → logprob: -2.9940638542175293
    6. '_i' → logprob: -3.9940638542175293
    7. '+' → logprob: -5.119063854217529
    8. '_queue' → logprob: -5.244063854217529
    9. ' +' → logprob: -5.869063854217529
    10. ')_' → logprob: -6.119063854217529

Token 465: ' ' (ID: 220)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4280993342399597
    2. '+' → logprob: -1.3030993938446045
    3. ',' → logprob: -3.5530993938446045
    4. ')' → logprob: -3.8030993938446045
    5. '   ' → logprob: -3.9280993938446045
    6. '_queue' → logprob: -6.428099155426025
    7. ' =' → logprob: -6.928099155426025
    8. 'queue' → logprob: -7.803099155426025
    9. '=' → logprob: -8.053099632263184
    10. ' +=' → logprob: -8.053099632263184

Token 466: '0' (ID: 15)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0215388685464859
    2. ' +' → logprob: -3.8965389728546143
    3. ',' → logprob: -7.896538734436035
    4. '=' → logprob: -8.646538734436035
    5. 'to' → logprob: -9.396538734436035
    6. ')' → logprob: -9.521538734436035
    7. '   ' → logprob: -9.771538734436035
    8. '0' → logprob: -9.896538734436035
    9. 'index' → logprob: -10.396538734436035
    10. '+=' → logprob: -10.521538734436035

Token 467: '-based' (ID: 8235)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37367376685142517
    2. ')' → logprob: -1.6236737966537476
    3. '   ' → logprob: -2.748673677444458
    4. '+' → logprob: -4.248673915863037
    5. ' +' → logprob: -4.748673915863037
    6. 'import' → logprob: -4.998673915863037
    7. '<|end|>' → logprob: -5.123673915863037
    8. ' ,' → logprob: -6.248673915863037
    9. '),' → logprob: -6.248673915863037
    10. ',
' → logprob: -6.248673915863037

Token 468: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1263335943222046
    2. ',' → logprob: -1.3763335943222046
    3. 'queue' → logprob: -1.8763335943222046
    4. ')' → logprob: -2.501333713531494
    5. '   ' → logprob: -2.626333713531494
    6. ' queue' → logprob: -3.626333713531494
    7. 'def' → logprob: -3.626333713531494
    8. ',
' → logprob: -3.751333713531494
    9. '_queue' → logprob: -4.876333713531494
    10. ')
' → logprob: -5.001333713531494

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3234505355358124
    2. 'queue' → logprob: -1.5734505653381348
    3. ' queue' → logprob: -3.4484505653381348
    4. '
' → logprob: -3.6984505653381348
    5. 'def' → logprob: -5.073450565338135
    6. '	queue' → logprob: -5.948450565338135
    7. ',' → logprob: -6.823450565338135
    8. 'q' → logprob: -7.198450565338135
    9. '```' → logprob: -8.073450088500977
    10. '    
' → logprob: -8.448450088500977

Token 470: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.273154079914093
    2. '   ' → logprob: -1.8981540203094482
    3. ' queue' → logprob: -2.6481540203094482
    4. 'q' → logprob: -4.648154258728027
    5. 'from' → logprob: -5.023154258728027
    6. 'visited' → logprob: -6.898154258728027
    7. ' from' → logprob: -7.898154258728027
    8. ' q' → logprob: -8.273154258728027
    9. 'def' → logprob: -9.273154258728027
    10. '	queue' → logprob: -9.273154258728027

Token 471: ' For' (ID: 2214)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.05280164256691933
    2. 'q' → logprob: -3.8028016090393066
    3. 'from' → logprob: -4.052801609039307
    4. 'visited' → logprob: -4.552801609039307
    5. '   ' → logprob: -7.677801609039307
    6. ' queue' → logprob: -8.052802085876465
    7. 'start' → logprob: -8.427802085876465
    8. 'que' → logprob: -9.052802085876465
    9. '
' → logprob: -11.052802085876465
    10. 'initial' → logprob: -11.052802085876465

Token 472: ' first' (ID: 1577)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -1.0645397901535034
    2. ' i' → logprob: -1.4395397901535034
    3. 'index' → logprob: -1.5645397901535034
    4. 'i' → logprob: -2.814539909362793
    5. ' _' → logprob: -3.314539909362793
    6. ' px' → logprob: -3.439539909362793
    7. '_' → logprob: -4.189539909362793
    8. ' idx' → logprob: -4.689539909362793
    9. ' (' → logprob: -5.064539909362793
    10. 'x' → logprob: -5.064539909362793

Token 473: ' step' (ID: 5983)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.6646482348442078
    2. '_' → logprob: -0.7896482348442078
    3. ' _' → logprob: -4.039648056030273
    4. ',' → logprob: -5.039648056030273
    5. ')' → logprob: -5.539648056030273
    6. '(' → logprob: -7.539648056030273
    7. ' ' → logprob: -7.914648056030273
    8. 'spr' → logprob: -7.914648056030273
    9. ' (' → logprob: -8.039648056030273
    10. ' ,' → logprob: -8.164648056030273

Token 474: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31941717863082886
    2. ',' → logprob: -1.6944172382354736
    3. ' =' → logprob: -3.6944172382354736
    4. 'queue' → logprob: -4.0694169998168945
    5. ':
' → logprob: -4.1944169998168945
    6. '=' → logprob: -4.4444169998168945
    7. '   ' → logprob: -5.5694169998168945
    8. 'q' → logprob: -5.6944169998168945
    9. '(queue' → logprob: -5.9444169998168945
    10. '_queue' → logprob: -6.5694169998168945

Token 475: ' P' (ID: 398)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.34763580560684204
    2. ' queue' → logprob: -1.4726357460021973
    3. 'q' → logprob: -3.9726357460021973
    4. 'for' → logprob: -3.9726357460021973
    5. 'from' → logprob: -4.722635746002197
    6. ' for' → logprob: -4.847635746002197
    7. '   ' → logprob: -5.472635746002197
    8. ' q' → logprob: -5.972635746002197
    9. ' from' → logprob: -6.472635746002197
    10. 'visited' → logprob: -6.847635746002197

Token 476: 'yon' (ID: 10033)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15699920058250427
    2. 'X' → logprob: -2.906999111175537
    3. 'y' → logprob: -4.156999111175537
    4. 'ython' → logprob: -4.531999111175537
    5. 'Y' → logprob: -4.781999111175537
    6. 'r' → logprob: -4.781999111175537
    7. '#' → logprob: -5.031999111175537
    8. 'osition' → logprob: -5.156999111175537
    9. 'os' → logprob: -5.156999111175537
    10. '   ' → logprob: -5.156999111175537

Token 477: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.003655768698081374
    2. 't' → logprob: -5.878655910491943
    3. 'q' → logprob: -7.378655910491943
    4. 'rk' → logprob: -9.378655433654785
    5. '_k' → logprob: -9.503655433654785
    6. 'tk' → logprob: -11.503655433654785
    7. 'kt' → logprob: -11.878655433654785
    8. '_' → logprob: -12.128655433654785
    9. 'ik' → logprob: -12.128655433654785
    10. 'queue' → logprob: -12.128655433654785

Token 478: 'ichi' (ID: 44252)
  Prédit: 'ichi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichi' → logprob: -0.09225231409072876
    2. 'c' → logprob: -2.842252254486084
    3. 'k' → logprob: -4.467252254486084
    4. 'ich' → logprob: -4.592252254486084
    5. 'ic' → logprob: -5.842252254486084
    6. 'ch' → logprob: -6.217252254486084
    7. 'inchi' → logprob: -6.842252254486084
    8. 'chi' → logprob: -7.967252254486084
    9. 'o' → logprob: -8.217252731323242
    10. 'itch' → logprob: -8.217252731323242

Token 479: ' jumps' (ID: 65613)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -1.1240671873092651
    2. ' can' → logprob: -1.8740671873092651
    3. '_x' → logprob: -2.4990673065185547
    4. '_pos' → logprob: -2.8740673065185547
    5. '_queue' → logprob: -3.3740673065185547
    6. '_positions' → logprob: -3.4990673065185547
    7. ',' → logprob: -3.4990673065185547
    8. ' =' → logprob: -3.7490673065185547
    9. 'pos' → logprob: -3.9990673065185547
    10. ' must' → logprob: -3.9990673065185547

Token 480: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.41694337129592896
    2. ' to' → logprob: -1.9169433116912842
    3. 'to' → logprob: -2.041943311691284
    4. ' from' → logprob: -2.791943311691284
    5. '=' → logprob: -7.541943550109863
    6. ' =' → logprob: -7.541943550109863
    7. ',' → logprob: -7.541943550109863
    8. ')' → logprob: -7.791943550109863
    9. '(' → logprob: -8.791943550109863
    10. '0' → logprob: -8.791943550109863

Token 481: ' initial' (ID: 4871)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.038831762969493866
    2. 'px' → logprob: -3.9138317108154297
    3. ' (' → logprob: -4.91383171081543
    4. '(py' → logprob: -5.16383171081543
    5. ' px' → logprob: -5.78883171081543
    6. 'initial' → logprob: -6.66383171081543
    7. 'py' → logprob: -7.91383171081543
    8. ' initial' → logprob: -8.91383171081543
    9. '(initial' → logprob: -9.53883171081543
    10. '(' → logprob: -10.28883171081543

Token 482: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.7964374423027039
    2. 'pos' → logprob: -1.2964375019073486
    3. 'position' → logprob: -2.6714375019073486
    4. ',' → logprob: -2.7964375019073486
    5. '_pos' → logprob: -3.4214375019073486
    6. ' pos' → logprob: -3.5464375019073486
    7. ' px' → logprob: -3.6714375019073486
    8. '_px' → logprob: -3.6714375019073486
    9. 'px' → logprob: -3.9214375019073486
    10. ' ,' → logprob: -5.5464372634887695

Token 483: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5877994894981384
    2. ' to' → logprob: -0.8377994894981384
    3. ' into' → logprob: -5.337799549102783
    4. ',' → logprob: -6.337799549102783
    5. 'to' → logprob: -6.587799549102783
    6. 'queue' → logprob: -6.962799549102783
    7. ' queue' → logprob: -7.212799549102783
    8. ' q' → logprob: -7.962799549102783
    9. ' =' → logprob: -8.212799072265625
    10. 'q' → logprob: -8.212799072265625

Token 484: ' some' (ID: 1236)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.16723674535751343
    2. ' any' → logprob: -3.042236804962158
    3. 'positions' → logprob: -3.292236804962158
    4. 'a' → logprob: -3.792236804962158
    5. ' positions' → logprob: -4.167236804962158
    6. 'water' → logprob: -4.417236804962158
    7. ' a' → logprob: -4.917236804962158
    8. 'some' → logprob: -5.917236804962158
    9. 'each' → logprob: -6.042236804962158
    10. ' water' → logprob: -6.167236804962158

Token 485: ' pos' (ID: 1253)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.26733437180519104
    2. ' water' → logprob: -2.392334461212158
    3. ' (' → logprob: -2.767334461212158
    4. 'position' → logprob: -3.392334461212158
    5. ' pos' → logprob: -4.142334461212158
    6. ' coverage' → logprob: -5.017334461212158
    7. 'pos' → logprob: -5.267334461212158
    8. 'water' → logprob: -5.767334461212158
    9. ' sprinkler' → logprob: -5.767334461212158
    10. '(' → logprob: -6.017334461212158

Token 486: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9785604476928711
    2. ' in' → logprob: -1.103560447692871
    3. '=' → logprob: -2.478560447692871
    4. 'in' → logprob: -2.728560447692871
    5. ')' → logprob: -2.853560447692871
    6. ',' → logprob: -3.603560447692871
    7. '_' → logprob: -3.728560447692871
    8. '_in' → logprob: -5.353560447692871
    9. '   ' → logprob: -5.603560447692871
    10. '<|end|>' → logprob: -5.728560447692871

Token 487: ' water' (ID: 3411)
  Prédit: 'water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'water' → logprob: -0.026387959718704224
    2. ' water' → logprob: -3.651387929916382
    3. 'the' → logprob: -9.651388168334961
    4. 'W' → logprob: -11.776388168334961
    5. 'spr' → logprob: -11.776388168334961
    6. ' the' → logprob: -13.276388168334961
    7. 'Water' → logprob: -13.526388168334961
    8. 'watering' → logprob: -13.526388168334961
    9. '```' → logprob: -14.151388168334961
    10. '   ' → logprob: -14.276388168334961

Token 488: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0065642716363072395
    2. 'coverage' → logprob: -5.256564140319824
    3. '_area' → logprob: -7.131564140319824
    4. '_cover' → logprob: -8.631564140319824
    5. 'area' → logprob: -9.131564140319824
    6. 'cover' → logprob: -10.131564140319824
    7. '_cov' → logprob: -10.381564140319824
    8. 'areas' → logprob: -10.381564140319824
    9. 'Coverage' → logprob: -10.631564140319824
    10. ')' → logprob: -10.631564140319824

Token 489: 'areas' (ID: 69250)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007657153531908989
    2. 'areas' → logprob: -4.882657051086426
    3. 'coverage' → logprob: -10.382657051086426
    4. 'area' → logprob: -11.007657051086426
    5. 'Areas' → logprob: -13.632657051086426
    6. 'water' → logprob: -14.007657051086426
    7. '_area' → logprob: -15.007657051086426
    8. '```' → logprob: -15.132657051086426
    9. 'cover' → logprob: -15.757657051086426
    10. 'are' → logprob: -16.132658004760742

Token 490: '[' (ID: 58)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04761452600359917
    2. 'queue' → logprob: -3.672614574432373
    3. '
' → logprob: -4.922614574432373
    4. ' queue' → logprob: -5.672614574432373
    5. '(queue' → logprob: -5.797614574432373
    6. 'from' → logprob: -6.297614574432373
    7. '_queue' → logprob: -6.672614574432373
    8. 'def' → logprob: -7.047614574432373
    9. '       ' → logprob: -7.422614574432373
    10. '```' → logprob: -7.547614574432373

Token 491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.125005722045898
    3. '```' → logprob: -16.8750057220459
    4. ' ' → logprob: -18.2500057220459
    5. ']' → logprob: -19.1250057220459
    6. '
' → logprob: -19.2500057220459
    7. '][' → logprob: -20.1250057220459
    8. '   ' → logprob: -20.2500057220459
    9. '`' → logprob: -20.3750057220459
    10. '#' → logprob: -20.6250057220459

Token 492: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4235144555568695
    2. ']' → logprob: -1.423514485359192
    3. '])' → logprob: -2.2985143661499023
    4. '][' → logprob: -6.423514366149902
    5. ')' → logprob: -7.048514366149902
    6. '],' → logprob: -7.673514366149902
    7. '   ' → logprob: -8.048514366149902
    8. '].' → logprob: -8.423514366149902
    9. '[i' → logprob: -9.048514366149902
    10. ']:' → logprob: -9.673514366149902

Token 493: ' reachable' (ID: 143580)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3492130637168884
    2. 'queue' → logprob: -1.3492131233215332
    3. '
' → logprob: -3.974213123321533
    4. ' queue' → logprob: -4.599213123321533
    5. 'q' → logprob: -5.474213123321533
    6. 'def' → logprob: -7.849213123321533
    7. ',' → logprob: -7.974213123321533
    8. '    
' → logprob: -8.349212646484375
    9. '	queue' → logprob: -8.349212646484375
    10. 'from' → logprob: -8.599212646484375

Token 494: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2123822122812271
    2. 'from' → logprob: -2.2123823165893555
    3. ')' → logprob: -2.9623823165893555
    4. ' by' → logprob: -4.2123823165893555
    5. ' from' → logprob: -4.7123823165893555
    6. 'by' → logprob: -7.2123823165893555
    7. ' ' → logprob: -7.4623823165893555
    8. '       ' → logprob: -7.5873823165893555
    9. '  ' → logprob: -7.8373823165893555
    10. ',' → logprob: -7.8373823165893555

Token 495: ' one' (ID: 1001)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.1300724744796753
    2. ' J' → logprob: -2.755072593688965
    3. 'any' → logprob: -3.380072593688965
    4. ' any' → logprob: -4.880072593688965
    5. 'a' → logprob: -5.130072593688965
    6. 'one' → logprob: -5.380072593688965
    7. ' a' → logprob: -6.130072593688965
    8. ' one' → logprob: -6.255072593688965
    9. '   ' → logprob: -7.755072593688965
    10. ' ' → logprob: -7.880072593688965

Token 496: ' jump' (ID: 13843)
  Prédit: ' jump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jump' → logprob: -0.22714343667030334
    2. 'jump' → logprob: -2.2271435260772705
    3. '_jump' → logprob: -2.6021435260772705
    4. '_' → logprob: -4.727143287658691
    5. ' J' → logprob: -5.227143287658691
    6. 'J' → logprob: -6.352143287658691
    7. ')' → logprob: -6.977143287658691
    8. ' move' → logprob: -6.977143287658691
    9. '   ' → logprob: -7.352143287658691
    10. ' _' → logprob: -7.727143287658691

Token 497: ' move' (ID: 5275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16895590722560883
    2. 'queue' → logprob: -2.0439558029174805
    3. ' queue' → logprob: -4.4189558029174805
    4. '
' → logprob: -4.6689558029174805
    5. 'q' → logprob: -6.6689558029174805
    6. '	queue' → logprob: -6.7939558029174805
    7. '    
' → logprob: -7.2939558029174805
    8. 'def' → logprob: -8.41895580291748
    9. '(queue' → logprob: -8.41895580291748
    10. ',' → logprob: -8.54395580291748

Token 498: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05385543778538704
    2. 'queue' → logprob: -3.0538554191589355
    3. ' queue' → logprob: -6.1788554191589355
    4. '
' → logprob: -6.1788554191589355
    5. 'from' → logprob: -7.8038554191589355
    6. 'q' → logprob: -8.178855895996094
    7. 'def' → logprob: -8.678855895996094
    8. '    
' → logprob: -9.428855895996094
    9. '	queue' → logprob: -9.803855895996094
    10. ' from' → logprob: -10.803855895996094

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11775942891836166
    2. '
' → logprob: -2.4927594661712646
    3. 'queue' → logprob: -4.1177592277526855
    4. ' queue' → logprob: -4.9927592277526855
    5. '	queue' → logprob: -6.1177592277526855
    6. '    
' → logprob: -6.9927592277526855
    7. '```' → logprob: -7.1177592277526855
    8. ',' → logprob: -8.367759704589844
    9. 'q' → logprob: -8.367759704589844
    10. 'def' → logprob: -8.617759704589844

Token 500: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.02477138675749302
    2. '   ' → logprob: -3.7747714519500732
    3. 'q' → logprob: -7.024771213531494
    4. ' queue' → logprob: -8.024771690368652
    5. 'visited' → logprob: -8.899771690368652
    6. 'que' → logprob: -9.399771690368652
    7. 'from' → logprob: -9.649771690368652
    8. '
' → logprob: -11.024771690368652
    9. '    
' → logprob: -13.024771690368652
    10. 'start' → logprob: -13.524771690368652

Token 501: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687241077423096
    2. '=' → logprob: -1.136872410774231
    3. '.' → logprob: -14.636872291564941
    4. ',' → logprob: -14.886872291564941
    5. ')' → logprob: -15.011872291564941
    6. '=[]' → logprob: -16.386873245239258
    7. ':' → logprob: -16.886873245239258
    8. ' ' → logprob: -16.886873245239258
    9. '.=' → logprob: -16.886873245239258
    10. '＝' → logprob: -17.636873245239258

Token 502: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0002613358374219388
    2. ' deque' → logprob: -8.250261306762695
    3. '   ' → logprob: -19.375261306762695
    4. 'collections' → logprob: -19.500261306762695
    5. 'Deque' → logprob: -19.625261306762695
    6. '```' → logprob: -21.000261306762695
    7. '[(' → logprob: -21.250261306762695
    8. ' ' → logprob: -22.375261306762695
    9. '[]' → logprob: -23.000261306762695
    10. '  ' → logprob: -23.125261306762695

Token 503: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3147875666618347
    2. '([(' → logprob: -1.3147876262664795
    3. '(' → logprob: -7.0647873878479
    4. '()
' → logprob: -7.8147873878479
    5. '([' → logprob: -8.814787864685059
    6. '((' → logprob: -10.314787864685059
    7. '[(' → logprob: -10.689787864685059
    8. '([
' → logprob: -10.814787864685059
    9. '([]' → logprob: -10.814787864685059
    10. '()

' → logprob: -12.064787864685059

Token 504: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46538248658180237
    2. 'for' → logprob: -1.09038245677948
    3. 'visited' → logprob: -3.5903825759887695
    4. ' visited' → logprob: -5.4653825759887695
    5. '   ' → logprob: -7.0903825759887695
    6. 'possible' → logprob: -7.0903825759887695
    7. 'reachable' → logprob: -7.5903825759887695
    8. 'positions' → logprob: -7.9653825759887695
    9. ' possible' → logprob: -8.46538257598877
    10. '
' → logprob: -8.71538257598877

Token 505: ' visited' (ID: 18416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009474621154367924
    2. ' for' → logprob: -5.009474754333496
    3. 'visited' (adapté à ' visited') → logprob: -6.134474754333496
    4. '#' → logprob: -7.509474754333496
    5. 'initial' → logprob: -11.134474754333496
    6. 'possible' → logprob: -11.759474754333496
    7. ' visited' → logprob: -12.009474754333496
    8. 'seen' → logprob: -12.634474754333496
    9. ' #' → logprob: -13.009474754333496
    10. 'start' → logprob: -13.634474754333496

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011144026182591915
    2. ' =' → logprob: -4.511144161224365
    3. '=set' → logprob: -9.261143684387207
    4. 'set' → logprob: -14.761143684387207
    5. '   ' → logprob: -15.386143684387207
    6. ' ' → logprob: -16.386144638061523
    7. '```' → logprob: -16.761144638061523
    8. '.add' → logprob: -16.886144638061523
    9. '=
' → logprob: -16.886144638061523
    10. '＝' → logprob: -16.886144638061523

Token 507: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.010829683393239975
    2. '[' → logprob: -5.010829448699951
    3. ' set' → logprob: -5.510829448699951
    4. '{' → logprob: -10.01082992553711
    5. ' [' → logprob: -11.26082992553711
    6. '[{' → logprob: -12.63582992553711
    7. '(set' → logprob: -14.38582992553711
    8. '{}' → logprob: -14.63582992553711
    9. '[[' → logprob: -14.76082992553711
    10. '[(' → logprob: -14.76082992553711

Token 508: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3133349120616913
    2. '[' → logprob: -1.3133349418640137
    3. ' [' → logprob: -9.813334465026855
    4. ' set' → logprob: -11.063334465026855
    5. '(set' → logprob: -14.063334465026855
    6. '{' → logprob: -14.188334465026855
    7. '   ' → logprob: -14.313334465026855
    8. '[[' → logprob: -15.188334465026855
    9. '{}' → logprob: -15.938334465026855
    10. '[{' → logprob: -16.063335418701172

Token 509: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3870888948440552
    2. '()]' → logprob: -1.1370888948440552
    3. '()]
' → logprob: -8.762088775634766
    4. '()
' → logprob: -10.387088775634766
    5. '(),' → logprob: -10.637088775634766
    6. ']' → logprob: -13.512088775634766
    7. '()],' → logprob: -14.012088775634766
    8. ' ()' → logprob: -14.512088775634766
    9. '()].' → logprob: -14.512088775634766
    10. ']()' → logprob: -14.512088775634766

Token 510: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08308396488428116
    2. '()]' → logprob: -2.8330838680267334
    3. ']' → logprob: -4.2080841064453125
    4. '()]
' → logprob: -5.7080841064453125
    5. 'for' → logprob: -6.8330841064453125
    6. ' for' → logprob: -7.0830841064453125
    7. '()
' → logprob: -8.083084106445312
    8. ']
' → logprob: -8.208084106445312
    9. ']()' → logprob: -9.708084106445312
    10. '(),' → logprob: -10.708084106445312

Token 511: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05109483376145363
    2. 'range' → logprob: -3.0510947704315186
    3. ' range' → logprob: -6.426095008850098
    4. '_s' → logprob: -7.801095008850098
    5. '_range' → logprob: -7.926095008850098
    6. '(range' → logprob: -9.926095008850098
    7. '_water' → logprob: -10.176095008850098
    8. ' _' → logprob: -10.926095008850098
    9. '_r' → logprob: -12.426095008850098
    10. '_w' → logprob: -13.176095008850098

Token 512: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.876193169271573e-05
    2. ' range' → logprob: -9.375088691711426
    3. 'water' → logprob: -13.500088691711426
    4. '(range' → logprob: -14.000088691711426
    5. 'spr' → logprob: -14.250088691711426
    6. 's' → logprob: -15.250088691711426
    7. '_' → logprob: -15.500088691711426
    8. 'n' → logprob: -15.750088691711426
    9. '_range' → logprob: -16.250089645385742
    10. 'in' → logprob: -16.750089645385742

Token 513: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005452174227684736
    2. 'spr' → logprob: -5.7554521560668945
    3. ' range' → logprob: -6.2554521560668945
    4. 'water' → logprob: -8.380452156066895
    5. 'watering' → logprob: -10.255452156066895
    6. ' sprink' → logprob: -10.380452156066895
    7. 's' → logprob: -10.755452156066895
    8. '(range' → logprob: -10.880452156066895
    9. 'w' → logprob: -12.880452156066895
    10. 'rang' → logprob: -13.130452156066895

Token 514: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5333532691001892
    2. 'len' → logprob: -1.783353328704834
    3. 'n' → logprob: -1.908353328704834
    4. '(len' → logprob: -2.658353328704834
    5. 'range' → logprob: -3.658353328704834
    6. '(range' → logprob: -7.783353328704834
    7. ' len' → logprob: -8.533352851867676
    8. ' n' → logprob: -8.783352851867676
    9. ' range' → logprob: -8.783352851867676
    10. '(' → logprob: -9.658352851867676

Token 515: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.263011578586884e-05
    2. ')]
' → logprob: -10.500042915344238
    3. '+' → logprob: -11.875042915344238
    4. ' )' → logprob: -12.375042915344238
    5. ')]

' → logprob: -13.375042915344238
    6. ')' → logprob: -13.750042915344238
    7. ')]
' → logprob: -14.000042915344238
    8. ']' → logprob: -15.500042915344238
    9. ')][' → logprob: -17.000041961669922
    10. '')]' → logprob: -17.250041961669922

Token 516: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46166545152664185
    2. '<|end|>' → logprob: -1.961665391921997
    3. 'for' → logprob: -2.086665391921997
    4. '   ' → logprob: -2.836665391921997
    5. ' for' → logprob: -3.961665391921997
    6. ' 
' → logprob: -4.961665630340576
    7. '    
' → logprob: -5.086665630340576
    8. '  
' → logprob: -5.586665630340576
    9. 'queue' → logprob: -5.586665630340576
    10. '<|end|>' → logprob: -6.586665630340576

Token 517: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15428964793682098
    2. 'for' → logprob: -2.529289722442627
    3. '   ' → logprob: -3.529289722442627
    4. '  
' → logprob: -4.654289722442627
    5. '<|end|>' → logprob: -5.029289722442627
    6. 'if' → logprob: -5.654289722442627
    7. '    
' → logprob: -5.654289722442627
    8. ' for' → logprob: -6.154289722442627
    9. ' 
' → logprob: -6.404289722442627
    10. '(queue' → logprob: -7.029289722442627

Token 518: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.24255910515785217
    2. ' visited' → logprob: -2.3675591945648193
    3. 'for' → logprob: -2.7425591945648193
    4. ' for' → logprob: -3.3675591945648193
    5. 'True' → logprob: -4.61755895614624
    6. ' True' → logprob: -5.11755895614624
    7. '#' → logprob: -6.24255895614624
    8. '   ' → logprob: -6.49255895614624
    9. 'False' → logprob: -7.11755895614624
    10. '0' → logprob: -7.74255895614624

Token 519: ' positions' (ID: 15897)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.7136521935462952
    2. '[' → logprob: -0.9636521935462952
    3. ' =' → logprob: -2.7136521339416504
    4. '.' → logprob: -4.58865213394165
    5. '.append' → logprob: -4.58865213394165
    6. '=' → logprob: -4.71365213394165
    7. '
' → logprob: -5.21365213394165
    8. 'add' → logprob: -5.33865213394165
    9. '_states' → logprob: -5.46365213394165
    10. '_add' → logprob: -5.83865213394165

Token 520: ' per' (ID: 777)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 521: ' sprinkler' (ID: 181940)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.1597372442483902
    2. ' sprinkler' → logprob: -2.4097373485565186
    3. 'index' → logprob: -3.0347373485565186
    4. ' sprink' → logprob: -5.4097371101379395
    5. ' index' → logprob: -6.2847371101379395
    6. 'step' → logprob: -6.4097371101379395
    7. 'i' → logprob: -6.6597371101379395
    8. ' step' → logprob: -8.909737586975098
    9. 's' → logprob: -8.909737586975098
    10. '0' → logprob: -10.284737586975098

Token 522: ' index' (ID: 3472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5034592747688293
    2. '
' → logprob: -2.0034592151641846
    3. 'if' → logprob: -2.2534592151641846
    4. 'queue' → logprob: -2.5034592151641846
    5. '   ' → logprob: -2.8784592151641846
    6. ' for' → logprob: -4.628459453582764
    7. 'initial' → logprob: -6.003459453582764
    8. ' if' → logprob: -6.378459453582764
    9. '    
' → logprob: -6.378459453582764
    10. '```' → logprob: -7.753459453582764

Token 523: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08556123077869415
    2. 'for' → logprob: -3.4605612754821777
    3. 'queue' → logprob: -3.4605612754821777
    4. '   ' → logprob: -5.085561275482178
    5. '<|end|>' → logprob: -5.335561275482178
    6. '  
' → logprob: -6.210561275482178
    7. '    
' → logprob: -6.460561275482178
    8. ' for' → logprob: -6.960561275482178
    9. ' 
' → logprob: -7.210561275482178
    10. '<|end|>' → logprob: -7.710561275482178

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4898182153701782
    2. 'for' → logprob: -1.2398182153701782
    3. ' for' → logprob: -2.7398180961608887
    4. '
' → logprob: -3.6148180961608887
    5. '    
' → logprob: -5.739818096160889
    6. '```' → logprob: -6.739818096160889
    7. '	for' → logprob: -7.739818096160889
    8. '#' → logprob: -8.114818572998047
    9. ' 
' → logprob: -8.239818572998047
    10. '<|end|>' → logprob: -8.489818572998047

Token 525: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002610974188428372
    2. '#' (adapté à ' #') → logprob: -8.500261306762695
    3. ' for' → logprob: -10.125261306762695
    4. 'initial' → logprob: -11.750261306762695
    5. 'possible' → logprob: -12.625261306762695
    6. '   ' → logprob: -13.375261306762695
    7. 'found' → logprob: -13.750261306762695
    8. 'start' → logprob: -14.125261306762695
    9. 'first' → logprob: -14.250261306762695
    10. 'positions' → logprob: -14.500261306762695

Token 526: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00469083059579134
    2. '#' → logprob: -5.379690647125244
    3. 'initial' → logprob: -10.129691123962402
    4. 'possible' → logprob: -11.129691123962402
    5. ' for' → logprob: -11.629691123962402
    6. 'start' → logprob: -12.879691123962402
    7. 'first' → logprob: -13.379691123962402
    8. '   ' → logprob: -13.754691123962402
    9. 'reachable' → logprob: -14.254691123962402
    10. 'found' → logprob: -15.254691123962402

Token 527: ' first' (ID: 1577)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4630497395992279
    2. 'nx' → logprob: -1.5880497694015503
    3. 'dx' → logprob: -2.0880496501922607
    4. 'x' → logprob: -4.58804988861084
    5. '(dx' → logprob: -4.71304988861084
    6. '(nx' → logprob: -5.08804988861084
    7. '(' → logprob: -5.33804988861084
    8. 'next' → logprob: -5.46304988861084
    9. '(x' → logprob: -6.21304988861084
    10. '(pos' → logprob: -6.58804988861084

Token 528: ' sprinkler' (ID: 181940)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8717620968818665
    2. ' pos' → logprob: -1.8717620372772217
    3. ' dx' → logprob: -1.8717620372772217
    4. ' (' → logprob: -2.1217620372772217
    5. ' sx' → logprob: -3.2467620372772217
    6. 'dx' → logprob: -3.9967620372772217
    7. 'sx' → logprob: -4.246762275695801
    8. '(dx' → logprob: -4.371762275695801
    9. ' nx' → logprob: -4.871762275695801
    10. 'for' → logprob: -5.246762275695801

Token 529: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19963999092578888
    2. ':
' → logprob: -2.4496400356292725
    3. ' for' → logprob: -2.6996400356292725
    4. ':' → logprob: -4.199639797210693
    5. '   ' → logprob: -4.449639797210693
    6. 'in' → logprob: -8.074640274047852
    7. ' in' → logprob: -9.449640274047852
    8. ',' → logprob: -9.824640274047852
    9. 'area' → logprob: -10.199640274047852
    10. '):
' → logprob: -10.324640274047852

Token 530: ' jump' (ID: 13843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031781906727701426
    2. ' for' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.003178596496582
    4. 'x' → logprob: -16.378177642822266
    5. 'initial' → logprob: -17.503177642822266
    6. 'start' → logprob: -18.503177642822266
    7. 'px' → logprob: -18.628177642822266
    8. '
' → logprob: -18.878177642822266
    9. 'from' → logprob: -19.003177642822266
    10. 'found' → logprob: -19.003177642822266

Token 531: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.540953516960144
    2. 'for' → logprob: -1.540953516960144
    3. 'from' → logprob: -2.0409536361694336
    4. ' for' → logprob: -2.0409536361694336
    5. 'pos' → logprob: -2.4159536361694336
    6. ' in' → logprob: -3.1659536361694336
    7. ' to' → logprob: -3.1659536361694336
    8. ' from' → logprob: -3.2909536361694336
    9. 'to' → logprob: -3.2909536361694336
    10. '_pos' → logprob: -4.915953636169434

Token 532: ' initial' (ID: 4871)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.28322094678878784
    2. ' px' → logprob: -2.1582210063934326
    3. '(px' → logprob: -2.1582210063934326
    4. '(' → logprob: -5.1582207679748535
    5. '0' → logprob: -5.2832207679748535
    6. ' (' → logprob: -6.1582207679748535
    7. 'range' → logprob: -6.6582207679748535
    8. 'py' → logprob: -7.6582207679748535
    9. ' range' → logprob: -8.783221244812012
    10. ' ' → logprob: -9.033221244812012

Token 533: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1418237686157227
    2. 'px' → logprob: -1.1418237686157227
    3. ' px' → logprob: -1.8918237686157227
    4. 'position' → logprob: -2.6418237686157227
    5. ' position' → logprob: -3.0168237686157227
    6. '(px' → logprob: -3.5168237686157227
    7. '   ' → logprob: -4.016823768615723
    8. ' pos' → logprob: -4.266823768615723
    9. ' (' → logprob: -4.766823768615723
    10. '_px' → logprob: -5.391823768615723

Token 534: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6528602838516235
    2. 'for' → logprob: -1.0278602838516235
    3. ' for' → logprob: -2.652860164642334
    4. ' to' → logprob: -3.652860164642334
    5. 'to' → logprob: -4.402860164642334
    6. ':
' → logprob: -5.527860164642334
    7. ':' → logprob: -5.902860164642334
    8. ',' → logprob: -6.027860164642334
    9. ' in' → logprob: -6.777860164642334
    10. 'in' → logprob: -7.777860164642334

Token 535: ' reachable' (ID: 143580)
  Prédit: 'water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'water' → logprob: -0.6563974022865295
    2. 'pos' → logprob: -1.0313973426818848
    3. ' water' → logprob: -2.6563973426818848
    4. 'positions' → logprob: -3.5313973426818848
    5. ' pos' → logprob: -4.656397342681885
    6. 'area' → logprob: -5.156397342681885
    7. ' positions' → logprob: -5.406397342681885
    8. 'possible' → logprob: -6.531397342681885
    9. 'w' → logprob: -6.906397342681885
    10. ' area' → logprob: -7.156397342681885

Token 536: ' watering' (ID: 101148)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.9182438254356384
    2. 'pos' → logprob: -1.0432438850402832
    3. 'positions' → logprob: -1.6682438850402832
    4. ' pos' → logprob: -3.293243885040283
    5. ' water' → logprob: -4.543243885040283
    6. 'water' → logprob: -5.543243885040283
    7. ' (' → logprob: -5.793243885040283
    8. '(' → logprob: -7.168243885040283
    9. '(s' → logprob: -7.668243885040283
    10. '_positions' → logprob: -7.668243885040283

Token 537: ' pos' (ID: 1253)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.2871142029762268
    2. 'positions' → logprob: -1.662114143371582
    3. ' positions' → logprob: -4.412114143371582
    4. 'spots' → logprob: -4.662114143371582
    5. '_area' → logprob: -4.787114143371582
    6. 'pos' → logprob: -4.912114143371582
    7. '_' → logprob: -5.287114143371582
    8. ' spots' → logprob: -5.412114143371582
    9. 'area' → logprob: -5.537114143371582
    10. 'areas' → logprob: -5.912114143371582

Token 538: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021313084289431572
    2. ' for' → logprob: -4.146313190460205
    3. '   ' → logprob: -5.271313190460205
    4. ':' → logprob: -10.271312713623047
    5. ':
' → logprob: -10.521312713623047
    6. 'reachable' → logprob: -10.771312713623047
    7. 'possible' → logprob: -11.271312713623047
    8. '	for' → logprob: -11.521312713623047
    9. 'positions' → logprob: -12.271312713623047
    10. 'found' → logprob: -12.646312713623047

Token 539: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05067892745137215
    2. ' for' → logprob: -3.0506789684295654
    3. '   ' → logprob: -6.175678730010986
    4. '
' → logprob: -12.175679206848145
    5. '	for' → logprob: -13.550679206848145
    6. 'possible' → logprob: -13.800679206848145
    7. '```' → logprob: -14.175679206848145
    8. 'reachable' → logprob: -14.300679206848145
    9. ':' → logprob: -15.425679206848145
    10. 'initial' → logprob: -15.550679206848145

Token 540: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016742534353397787
    2. ' for' → logprob: -8.750167846679688
    3. '   ' → logprob: -11.625167846679688
    4. 'found' → logprob: -16.875167846679688
    5. '```' → logprob: -18.750167846679688
    6. 'possible' → logprob: -19.250167846679688
    7. '
' → logprob: -20.125167846679688
    8. '	for' → logprob: -20.250167846679688
    9. 'reachable' → logprob: -20.250167846679688
    10. '    
' → logprob: -20.375167846679688

Token 541: ' dx' (ID: 29472)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -1.2422068119049072
    2. 'wx' → logprob: -1.3672068119049072
    3. 'dx' → logprob: -1.7422068119049072
    4. '(nx' → logprob: -2.3672068119049072
    5. '(dx' → logprob: -2.4922068119049072
    6. '(wx' → logprob: -3.4922068119049072
    7. '(' → logprob: -3.8672068119049072
    8. '(w' → logprob: -4.242206573486328
    9. '(x' → logprob: -4.367206573486328
    10. 'x' → logprob: -5.117206573486328

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. ' ,' → logprob: -12.000017166137695
    3. ',
' → logprob: -12.000017166137695
    4. ',y' → logprob: -12.375017166137695
    5. ',d' → logprob: -15.125017166137695
    6. '‌,' → logprob: -17.000017166137695
    7. ',

' → logprob: -17.125017166137695
    8. 'd' → logprob: -17.250017166137695
    9. ',\
' → logprob: -18.125017166137695
    10. 's' → logprob: -18.250017166137695

Token 543: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00020354038861114532
    2. ' dy' → logprob: -8.500203132629395
    3. 'dx' → logprob: -20.37520408630371
    4. 'Dy' → logprob: -21.25020408630371
    5. '
' → logprob: -21.87520408630371
    6. '.dy' → logprob: -21.87520408630371
    7. '   ' → logprob: -22.00020408630371
    8. 'd' → logprob: -22.25020408630371
    9. 'ddy' → logprob: -22.87520408630371
    10. 'dym' → logprob: -23.00020408630371

Token 544: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11284870654344559
    2. 'in' → logprob: -2.2378487586975098
    3. ',' → logprob: -12.362848281860352
    4. '	in' → logprob: -12.612848281860352
    5. '<|end|>' → logprob: -12.737848281860352
    6. ' ' → logprob: -12.862848281860352
    7. ')' → logprob: -12.987848281860352
    8. 's' → logprob: -13.237848281860352
    9. 'import' → logprob: -13.987848281860352
    10. 'd' → logprob: -14.237848281860352

Token 545: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0004889304982498288
    2. ' J' → logprob: -7.625488758087158
    3. '   ' → logprob: -14.250489234924316
    4. ' ' → logprob: -16.37548828125
    5. '	J' → logprob: -18.62548828125
    6. '  ' → logprob: -18.87548828125
    7. '[J' → logprob: -19.37548828125
    8. '    ' → logprob: -20.37548828125
    9. ',J' → logprob: -21.25048828125
    10. ')' → logprob: -21.62548828125

Token 546: 'UMP' (ID: 49053)
  Prédit: 'UMP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UMP' → logprob: -4.513339445111342e-05
    2. 'UM' → logprob: -10.375044822692871
    3. '_' → logprob: -11.500044822692871
    4. 'J' → logprob: -13.375044822692871
    5. 'ump' → logprob: -13.750044822692871
    6. 'U' → logprob: -15.125044822692871
    7. 'MP' → logprob: -15.250044822692871
    8. '_MOVE' → logprob: -16.375045776367188
    9. '_jump' → logprob: -16.500045776367188
    10. 'M' → logprob: -16.500045776367188

Token 547: '_MOV' (ID: 96227)
  Prédit: '_MOV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOV' → logprob: -5.319370302458992e-06
    2. 'MOV' → logprob: -12.375005722045898
    3. 'Moves' → logprob: -14.750005722045898
    4. '_MOD' → logprob: -15.625005722045898
    5. '_MOVE' → logprob: -15.625005722045898
    6. '_moves' → logprob: -15.625005722045898
    7. '```' → logprob: -16.3750057220459
    8. '_' → logprob: -17.1250057220459
    9. '   ' → logprob: -17.1250057220459
    10. 'moves' → logprob: -17.5000057220459

Token 548: 'ES' (ID: 1759)
  Prédit: 'ES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ES' → logprob: -3.173704271830502e-06
    2. 'VES' → logprob: -13.62500286102295
    3. 'E' → logprob: -13.87500286102295
    4. '   ' → logprob: -15.50000286102295
    5. 'S' → logprob: -15.87500286102295
    6. 'ESP' → logprob: -16.250003814697266
    7. '_ES' → logprob: -16.750003814697266
    8. 'V' → logprob: -16.875003814697266
    9. '
' → logprob: -16.875003814697266
    10. 'es' → logprob: -16.875003814697266

Token 549: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004098585341125727
    2. ':
' → logprob: -5.504098415374756
    3. '   ' → logprob: -11.379098892211914
    4. ' :' → logprob: -13.129098892211914
    5. '):' → logprob: -13.129098892211914
    6. ':
' → logprob: -13.629098892211914
    7. '):
' → logprob: -14.129098892211914
    8. '=' → logprob: -14.254098892211914
    9. '<|end|>' → logprob: -14.254098892211914
    10. ':

' → logprob: -15.379098892211914

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012188091641291976
    2. ' x' → logprob: -7.626218795776367
    3. '    ' → logprob: -8.501218795776367
    4. ' nx' → logprob: -9.126218795776367
    5. 'x' → logprob: -9.376218795776367
    6. '   ' → logprob: -9.376218795776367
    7. '<|end|>' → logprob: -9.626218795776367
    8. ' new' → logprob: -10.376218795776367
    9. ',' → logprob: -10.501218795776367
    10. ' ' → logprob: -10.751218795776367

Token 551: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.038482069969177246
    2. ' nx' → logprob: -3.288482189178467
    3. '   ' → logprob: -7.913482189178467
    4. 'qx' → logprob: -10.788481712341309
    5. '       ' → logprob: -11.038481712341309
    6. ' ' → logprob: -11.288481712341309
    7. 'x' → logprob: -11.788481712341309
    8. 'tx' → logprob: -11.913481712341309
    9. 'new' → logprob: -13.288481712341309
    10. '(nx' → logprob: -13.413481712341309

Token 552: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1649952232837677
    2. ' =' → logprob: -2.1649951934814453
    3. ',' → logprob: -3.2899951934814453
    4. ' ,' → logprob: -9.289995193481445
    5. '=
' → logprob: -13.789995193481445
    6. ' ' → logprob: -14.164995193481445
    7. '=

' → logprob: -14.539995193481445
    8. '<|end|>' → logprob: -14.664995193481445
    9. '=int' → logprob: -15.289995193481445
    10. ')' → logprob: -15.289995193481445

Token 553: ' ny' (ID: 4423)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.16397875547409058
    2. 'px' → logprob: -1.9139788150787354
    3. ' py' → logprob: -5.788978576660156
    4. ' px' → logprob: -7.288978576660156
    5. '(py' → logprob: -13.663978576660156
    6. '_py' → logprob: -14.288978576660156
    7. '(px' → logprob: -15.163978576660156
    8. '_px' → logprob: -15.288978576660156
    9. 'sys' → logprob: -15.663978576660156
    10. 'ply' → logprob: -15.788978576660156

Token 554: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407710552215576
    2. ' =' → logprob: -0.9740771055221558
    3. ',' → logprob: -16.349077224731445
    4. '=int' → logprob: -18.099077224731445
    5. '＝' → logprob: -18.474077224731445
    6. '=
' → logprob: -18.849077224731445
    7. ' ' → logprob: -19.224077224731445
    8. ' =
' → logprob: -19.474077224731445
    9. '=ax' → logprob: -19.599077224731445
    10. '=

' → logprob: -19.724077224731445

Token 555: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.023259690031409264
    2. ' px' → logprob: -3.7732596397399902
    3. '   ' → logprob: -11.898260116577148
    4. '(px' → logprob: -11.898260116577148
    5. 'py' → logprob: -14.648260116577148
    6. '       ' → logprob: -16.27326011657715
    7. '_px' → logprob: -16.77326011657715
    8. '    ' → logprob: -17.39826011657715
    9. '           ' → logprob: -18.27326011657715
    10. '  ' → logprob: -18.52326011657715

Token 556: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.043026477098464966
    2. '+' → logprob: -3.1680264472961426
    3. ',' → logprob: -11.2930269241333
    4. ' ' → logprob: -12.0430269241333
    5. ' ,' → logprob: -12.1680269241333
    6. ' +
' → logprob: -13.6680269241333
    7. ' ' → logprob: -13.7930269241333
    8. ' plus' → logprob: -13.9180269241333
    9. '+,' → logprob: -14.7930269241333
    10. '+
' → logprob: -16.043025970458984

Token 557: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0009115827269852161
    2. ' dx' → logprob: -7.000911712646484
    3. '_dx' → logprob: -16.250911712646484
    4. '(dx' → logprob: -18.250911712646484
    5. '.dx' → logprob: -19.500911712646484
    6. 'Dx' → logprob: -20.125911712646484
    7. 'DX' → logprob: -21.000911712646484
    8. 'd' → logprob: -21.000911712646484
    9. '   ' → logprob: -21.500911712646484
    10. ' ' → logprob: -21.500911712646484

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019885902293026447
    2. ' ,' → logprob: -6.251988410949707
    3. ',n' → logprob: -10.001988410949707
    4. ',
' → logprob: -11.251988410949707
    5. ',y' → logprob: -14.376988410949707
    6. ' ,
' → logprob: -15.001988410949707
    7. '‌,' → logprob: -15.376988410949707
    8. ',p' → logprob: -15.501988410949707
    9. ',next' → logprob: -16.626989364624023
    10. ',\
' → logprob: -16.876989364624023

Token 559: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.011048408225178719
    2. 'py' → logprob: -4.511048316955566
    3. '(py' → logprob: -14.386048316955566
    4. '_py' → logprob: -16.636049270629883
    5. '.py' → logprob: -19.261049270629883
    6. 'Py' → logprob: -19.511049270629883
    7. ' px' → logprob: -19.511049270629883
    8. ' ' → logprob: -20.011049270629883
    9. 'px' → logprob: -20.511049270629883
    10. ' Py' → logprob: -20.761049270629883

Token 560: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193077325820923
    2. ' +' → logprob: -1.5019307136535645
    3. '<|end|>' → logprob: -13.626931190490723
    4. '+
' → logprob: -16.251930236816406
    5. '+y' → logprob: -16.251930236816406
    6. ' ' → logprob: -16.876930236816406
    7. '+n' → logprob: -16.876930236816406
    8. ' ' → logprob: -17.376930236816406
    9. ' +
' → logprob: -17.501930236816406
    10. '+x' → logprob: -18.626930236816406

Token 561: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.003177952254191041
    2. ' dy' → logprob: -5.753178119659424
    3. 'Dy' → logprob: -16.253177642822266
    4. '.dy' → logprob: -16.253177642822266
    5. 'py' → logprob: -17.253177642822266
    6. 'd' → logprob: -17.253177642822266
    7. 'ny' → logprob: -18.128177642822266
    8. 'dym' → logprob: -19.503177642822266
    9. 'sy' → logprob: -19.628177642822266
    10. '	d' → logprob: -19.878177642822266

Token 562: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008584582828916609
    2. '
' → logprob: -7.250858306884766
    3. '<|end|>' → logprob: -10.000858306884766
    4. ' if' → logprob: -10.125858306884766
    5. '   ' → logprob: -10.875858306884766
    6. 'if' → logprob: -11.375858306884766
    7. ',' → logprob: -11.750858306884766
    8. '        
' → logprob: -11.750858306884766
    9. '  
' → logprob: -12.500858306884766
    10. '	' → logprob: -12.750858306884766

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011629798245849088
    2. '<|end|>' → logprob: -9.500116348266602
    3. '        
' → logprob: -11.375116348266602
    4. '   ' → logprob: -12.000116348266602
    5. ',' → logprob: -12.125116348266602
    6. ' if' → logprob: -12.500116348266602
    7. '<|end|>' → logprob: -12.500116348266602
    8. 'if' → logprob: -12.875116348266602
    9. '	' → logprob: -13.250116348266602
    10. '  
' → logprob: -13.750116348266602

Token 564: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006728634238243103
    2. ' if' → logprob: -5.256728649139404
    3. '       ' → logprob: -6.506728649139404
    4. '	if' → logprob: -15.256728172302246
    5. '   ' → logprob: -15.756728172302246
    6. 'If' → logprob: -17.256729125976562
    7. 'for' → logprob: -17.881729125976562
    8. ' ' → logprob: -19.006729125976562
    9. '           ' → logprob: -19.131729125976562
    10. '
' → logprob: -19.881729125976562

Token 565: ' in' (ID: 306)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.12050782144069672
    2. ' (' → logprob: -2.4955077171325684
    3. '(n' → logprob: -3.4955077171325684
    4. '(' → logprob: -7.495507717132568
    5. ' ' → logprob: -9.870508193969727
    6. '(x' → logprob: -10.370508193969727
    7. 'in' → logprob: -10.370508193969727
    8. '(px' → logprob: -10.995508193969727
    9. ' nx' → logprob: -11.245508193969727
    10. '   ' → logprob: -11.745508193969727

Token 566: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7432603272027336e-06
    2. '_water' → logprob: -14.625001907348633
    3. ' _' → logprob: -15.375001907348633
    4. '(' → logprob: -15.500001907348633
    5. '\' → logprob: -15.875001907348633
    6. '(_' → logprob: -16.000001907348633
    7. '```' → logprob: -16.125001907348633
    8. 'in' → logprob: -16.250001907348633
    9. '_par' → logprob: -16.250001907348633
    10. 'park' → logprob: -16.375001907348633

Token 567: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.04301026836037636
    2. '_' → logprob: -3.1680102348327637
    3. 'in' → logprob: -13.418010711669922
    4. '```' → logprob: -13.543010711669922
    5. 'x' → logprob: -13.793010711669922
    6. '
' → logprob: -13.793010711669922
    7. ' park' → logprob: -13.793010711669922
    8. 'par' → logprob: -14.293010711669922
    9. 'range' → logprob: -14.668010711669922
    10. 'p' → logprob: -14.793010711669922

Token 568: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.0004224515287205577
    2. ' (' → logprob: -8.875422477722168
    3. ' and' → logprob: -9.125422477722168
    4. 'and' → logprob: -9.750422477722168
    5. 'nx' → logprob: -9.750422477722168
    6. '(' → logprob: -10.125422477722168
    7. '(
' → logprob: -12.250422477722168
    8. '
' → logprob: -12.250422477722168
    9. '```' → logprob: -13.625422477722168
    10. '(n' → logprob: -13.750422477722168

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032998246024362743
    2. ' ,' → logprob: -8.250329971313477
    3. ',n' → logprob: -9.875329971313477
    4. ',
' → logprob: -11.000329971313477
    5. ',y' → logprob: -15.000329971313477
    6. '       ' → logprob: -16.500329971313477
    7. '
' → logprob: -17.250329971313477
    8. '‌,' → logprob: -17.500329971313477
    9. '<|end|>' → logprob: -17.500329971313477
    10. ',

' → logprob: -18.125329971313477

Token 570: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.003600901924073696
    2. ' ny' → logprob: -5.62860107421875
    3. 'n' → logprob: -15.00360107421875
    4. 'nyi' → logprob: -15.87860107421875
    5. '
' → logprob: -16.12860107421875
    6. 'nyt' → logprob: -16.87860107421875
    7. 'Ny' → logprob: -17.00360107421875
    8. ' ' → logprob: -17.12860107421875
    9. 'nym' → logprob: -17.25360107421875
    10. '

' → logprob: -17.62860107421875

Token 571: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004653465002775192
    2. ' and' → logprob: -8.250465393066406
    3. 'and' → logprob: -8.625465393066406
    4. ' )' → logprob: -10.750465393066406
    5. '           ' → logprob: -14.125465393066406
    6. '):
' → logprob: -14.125465393066406
    7. '')' → logprob: -14.750465393066406
    8. ')
' → logprob: -15.125465393066406
    9. '")' → logprob: -15.125465393066406
    10. '       ' → logprob: -15.375465393066406

Token 572: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008615872822701931
    2. 'and' → logprob: -4.758615970611572
    3. '           ' → logprob: -14.258615493774414
    4. '       ' → logprob: -14.508615493774414
    5. ' ' → logprob: -16.883615493774414
    6. ',' → logprob: -17.758615493774414
    7. '	and' → logprob: -17.883615493774414
    8. '   ' → logprob: -18.008615493774414
    9. '        ' → logprob: -18.133615493774414
    10. ')' → logprob: -18.258615493774414

Token 573: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.16470609605312347
    2. '(n' → logprob: -1.9147061109542847
    3. ' (' → logprob: -5.414706230163574
    4. '((' → logprob: -11.914706230163574
    5. 'nx' → logprob: -12.539706230163574
    6. '   ' → logprob: -12.914706230163574
    7. ' ' → logprob: -13.039706230163574
    8. '(' → logprob: -13.539706230163574
    9. 'ny' → logprob: -13.914706230163574
    10. '(x' → logprob: -14.414706230163574

Token 574: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.004656899254769087
    2. '(nx' → logprob: -5.379656791687012
    3. ' nx' → logprob: -10.254656791687012
    4. ' (' → logprob: -14.129656791687012
    5. 'n' → logprob: -15.629656791687012
    6. '   ' → logprob: -15.879656791687012
    7. '(n' → logprob: -16.004657745361328
    8. ')' → logprob: -16.629657745361328
    9. 'ny' → logprob: -16.629657745361328
    10. '(' → logprob: -17.004657745361328

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.76628842484206e-05
    2. ',
' → logprob: -10.625067710876465
    3. ',n' → logprob: -10.625067710876465
    4. ' ,' → logprob: -11.250067710876465
    5. '<|end|>' → logprob: -13.000067710876465
    6. ',y' → logprob: -14.125067710876465
    7. '<|end|>' → logprob: -14.500067710876465
    8. ',

' → logprob: -14.750067710876465
    9. '
' → logprob: -14.750067710876465
    10. '‌,' → logprob: -15.250067710876465

Token 576: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -3.5954712075181305e-05
    2. ' ny' → logprob: -10.250036239624023
    3. '
' → logprob: -15.500036239624023
    4. '   ' → logprob: -16.250036239624023
    5. ' ' → logprob: -17.250036239624023
    6. '    ' → logprob: -17.500036239624023
    7. ' ' → logprob: -17.875036239624023
    8. 'n' → logprob: -17.875036239624023
    9. '

' → logprob: -18.000036239624023
    10. 'nx' → logprob: -18.000036239624023

Token 577: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5458405613899231
    2. ' in' → logprob: -1.0458405017852783
    3. 'in' → logprob: -2.6708405017852783
    4. ' )' → logprob: -10.0458402633667
    5. 'not' → logprob: -12.7958402633667
    6. ' ' → logprob: -13.2958402633667
    7. ' not' → logprob: -13.5458402633667
    8. 'In' → logprob: -13.6708402633667
    9. '   ' → logprob: -13.7958402633667
    10. ' ' → logprob: -14.1708402633667

Token 578: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693314254283905
    2. 'in' → logprob: -2.1269330978393555
    3. ')' → logprob: -13.001933097839355
    4. 'not' → logprob: -14.126933097839355
    5. ' ' → logprob: -14.251933097839355
    6. ' not' → logprob: -14.751933097839355
    7. ' ' → logprob: -14.876933097839355
    8. 'In' → logprob: -15.501933097839355
    9. '
' → logprob: -16.001934051513672
    10. '	in' → logprob: -16.001934051513672

Token 579: ' water' (ID: 3411)
  Prédit: 'water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'water' → logprob: -0.00014001218369230628
    2. ' water' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.625139236450195
    4. 'w' → logprob: -17.750139236450195
    5. '
' → logprob: -19.250139236450195
    6. 'Water' → logprob: -19.250139236450195
    7. 'watering' → logprob: -19.250139236450195
    8. '水' → logprob: -19.375139236450195
    9. 'wasser' → logprob: -19.625139236450195
    10. '_water' → logprob: -19.625139236450195

Token 580: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'areas' → logprob: -16.875
    3. 'Areas' → logprob: -20.625
    4. '\' → logprob: -20.875
    5. '_area' → logprob: -22.0
    6. '_
' → logprob: -22.875
    7. '   ' → logprob: -22.875
    8. '```' → logprob: -23.375
    9. 'coverage' → logprob: -23.5
    10. 's' → logprob: -24.0

Token 581: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.00038360210601240396
    2. '_' → logprob: -7.875383377075195
    3. 'coverage' → logprob: -12.875383377075195
    4. 'area' → logprob: -14.875383377075195
    5. '   ' → logprob: -15.500383377075195
    6. '```' → logprob: -16.750383377075195
    7. 'water' → logprob: -16.875383377075195
    8. 'ages' → logprob: -17.000383377075195
    9. 'Areas' → logprob: -17.000383377075195
    10. '
' → logprob: -17.250383377075195

Token 582: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.11996734328568e-05
    2. '0' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.125041007995605
    4. '[
' → logprob: -15.625041007995605
    5. ' [' → logprob: -16.250041961669922
    6. '```' → logprob: -16.625041961669922
    7. '       ' → logprob: -16.750041961669922
    8. 's' → logprob: -17.750041961669922
    9. '][' → logprob: -17.875041961669922
    10. '\[' → logprob: -18.125041961669922

Token 583: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.500001907348633
    3. ' ' → logprob: -15.250001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '       ' → logprob: -18.875001907348633
    6. '           ' → logprob: -19.375001907348633
    7. '
' → logprob: -19.750001907348633
    8. '```' → logprob: -19.875001907348633
    9. '][' → logprob: -20.000001907348633
    10. '[
' → logprob: -20.250001907348633

Token 584: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2265021651983261
    2. '):
' → logprob: -1.6015021800994873
    3. '       ' → logprob: -7.351501941680908
    4. '   ' → logprob: -8.351502418518066
    5. ')' → logprob: -9.351502418518066
    6. '):
' → logprob: -10.101502418518066
    7. ':' → logprob: -10.226502418518066
    8. '           ' → logprob: -10.601502418518066
    9. ' ):' → logprob: -12.226502418518066
    10. '):

' → logprob: -12.476502418518066

Token 585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007292322698049247
    2. ' queue' → logprob: -7.875729084014893
    3. 'queue' → logprob: -8.00072956085205
    4. '	       ' → logprob: -12.62572956085205
    5. '               ' → logprob: -12.87572956085205
    6. '		' → logprob: -13.00072956085205
    7. '```' → logprob: -13.50072956085205
    8. '       ' → logprob: -13.62572956085205
    9. ' ' → logprob: -14.62572956085205
    10. '.queue' → logprob: -14.62572956085205

Token 586: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.10420915484428406
    2. ' queue' → logprob: -2.3542091846466064
    3. '           ' → logprob: -5.979208946228027
    4. '       ' → logprob: -6.729208946228027
    5. '   ' → logprob: -8.354208946228027
    6. '               ' → logprob: -10.729208946228027
    7. '	queue' → logprob: -11.604208946228027
    8. '.queue' → logprob: -14.104208946228027
    9. '```' → logprob: -15.104208946228027
    10. '(queue' → logprob: -15.229208946228027

Token 587: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.0126840758603066e-05
    2. '.' → logprob: -10.250040054321289
    3. '.enqueue' → logprob: -13.250040054321289
    4. '.extend' → logprob: -13.625040054321289
    5. '.app' → logprob: -14.625040054321289
    6. ' .' → logprob: -14.750040054321289
    7. '.add' → logprob: -15.125040054321289
    8. 'append' → logprob: -15.750040054321289
    9. ').' → logprob: -16.00004005432129
    10. '   ' → logprob: -16.62504005432129

Token 588: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2519305646419525
    2. '(' → logprob: -1.501930594444275
    3. ' (' → logprob: -13.626930236816406
    4. '   ' → logprob: -16.376930236816406
    5. '(
' → logprob: -16.876930236816406
    6. ' ' → logprob: -17.251930236816406
    7. '```' → logprob: -17.376930236816406
    8. ' ((' → logprob: -17.751930236816406
    9. '([' → logprob: -17.751930236816406
    10. '[(' → logprob: -18.501930236816406

Token 589: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. '1' → logprob: -11.125015258789062
    3. ' ' → logprob: -15.125015258789062
    4. '(' → logprob: -16.750015258789062
    5. ')' → logprob: -18.500015258789062
    6. '   ' → logprob: -18.625015258789062
    7. '[' → logprob: -19.062515258789062
    8. '۰' → logprob: -19.500015258789062
    9. '`' → logprob: -20.250015258789062
    10. ',' → logprob: -20.250015258789062

Token 590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003597760514821857
    2. ',n' → logprob: -8.000359535217285
    3. ',
' → logprob: -11.125359535217285
    4. ' ,' → logprob: -11.750359535217285
    5. '(nx' → logprob: -13.500359535217285
    6. '‌,' → logprob: -16.5003604888916
    7. ' nx' → logprob: -17.0003604888916
    8. '<|end|>' → logprob: -17.1253604888916
    9. ',

' → logprob: -17.3753604888916
    10. ',\
' → logprob: -17.3753604888916

Token 591: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -7.803360495017841e-05
    2. ' nx' → logprob: -9.500078201293945
    3. '(nx' → logprob: -12.750078201293945
    4. 'ny' → logprob: -16.250078201293945
    5. 'n' → logprob: -16.375078201293945
    6. 'nn' → logprob: -18.750078201293945
    7. 'Nx' → logprob: -19.500078201293945
    8. '   ' → logprob: -19.500078201293945
    9. 'xn' → logprob: -19.875078201293945
    10. '
' → logprob: -20.000078201293945

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1424973713001236e-05
    2. ' ,' → logprob: -11.250031471252441
    3. ',n' → logprob: -11.625031471252441
    4. '<|end|>' → logprob: -12.375031471252441
    5. ',
' → logprob: -12.875031471252441
    6. ',y' → logprob: -13.500031471252441
    7. '‌,' → logprob: -14.375031471252441
    8. '<|end|>' → logprob: -15.000031471252441
    9. ',user' → logprob: -16.875030517578125
    10. ',num' → logprob: -16.875030517578125

Token 593: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -5.1689596148207784e-05
    2. ' ny' → logprob: -9.875051498413086
    3. 'nyi' → logprob: -16.125051498413086
    4. 'nym' → logprob: -17.750051498413086
    5. 'nyt' → logprob: -18.250051498413086
    6. 'n' → logprob: -18.875051498413086
    7. 'nye' → logprob: -19.125051498413086
    8. ''ny' → logprob: -19.875051498413086
    9. 'nych' → logprob: -20.000051498413086
    10. 'Ny' → logprob: -20.375051498413086

Token 594: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2589736878871918
    2. ')' → logprob: -1.5089737176895142
    3. '))
' → logprob: -5.008973598480225
    4. ')
' → logprob: -8.008974075317383
    5. ' ))' → logprob: -12.758974075317383
    6. ' )' → logprob: -13.008974075317383
    7. '))
' → logprob: -13.883974075317383
    8. '))

' → logprob: -14.508974075317383
    9. '           ' → logprob: -14.633974075317383
    10. '),' → logprob: -14.633974075317383

Token 595: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.408677290892228e-05
    2. 'visited' → logprob: -10.0000638961792
    3. '               ' → logprob: -12.3750638961792
    4. '		' → logprob: -12.6250638961792
    5. '                   ' → logprob: -12.6250638961792
    6. '```' → logprob: -13.1250638961792
    7. '                           ' → logprob: -13.6250638961792
    8. '   ' → logprob: -13.7500638961792
    9. ' visited' → logprob: -14.2500638961792
    10. '                       ' → logprob: -14.5000638961792

Token 596: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -4.1557283111615106e-05
    2. '           ' → logprob: -10.250041961669922
    3. ' visited' → logprob: -12.000041961669922
    4. '
' → logprob: -19.625041961669922
    5. '            
' → logprob: -20.000041961669922
    6. '   ' → logprob: -20.625041961669922
    7. '               ' → logprob: -21.250041961669922
    8. 'visible' → logprob: -22.875041961669922
    9. '```' → logprob: -23.375041961669922
    10. 'visit' → logprob: -24.000041961669922

Token 597: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -15.125000953674316
    3. '```' → logprob: -15.500000953674316
    4. '0' → logprob: -15.750000953674316
    5. '=' → logprob: -16.0
    6. ' [' → logprob: -17.125
    7. '\[' → logprob: -18.375
    8. '[
' → logprob: -18.375
    9. '   ' → logprob: -18.5
    10. ')[' → logprob: -18.5

Token 598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7120533811976202e-05
    2. '[' → logprob: -11.000017166137695
    3. ' ' → logprob: -15.250017166137695
    4. '   ' → logprob: -17.062517166137695
    5. '
' → logprob: -17.312517166137695
    6. '```' → logprob: -17.375017166137695
    7. '(' → logprob: -17.562517166137695
    8. ']' → logprob: -18.187517166137695
    9. '][' → logprob: -18.187517166137695
    10. '1' → logprob: -18.250017166137695

Token 599: '].' (ID: 1651)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.45836663246154785
    2. '].' → logprob: -1.0833666324615479
    3. ').' → logprob: -3.583366632461548
    4. '}.' → logprob: -6.958366394042969
    5. 'add' → logprob: -8.208366394042969
    6. ')add' → logprob: -9.333366394042969
    7. '.' → logprob: -9.583366394042969
    8. ')' → logprob: -11.208366394042969
    9. ']' → logprob: -11.333366394042969
    10. '>.' → logprob: -11.708366394042969

Token 600: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.320199877838604e-07
    2. '.add' → logprob: -15.0
    3. ' add' → logprob: -18.25
    4. '_add' → logprob: -19.375
    5. '	add' → logprob: -19.875
    6. '
' → logprob: -22.125
    7. '```' → logprob: -23.125
    8. ')add' → logprob: -24.0
    9. ' ' → logprob: -24.875
    10. 'addi' → logprob: -24.875

Token 601: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.2664456789934775e-06
    2. '(nx' → logprob: -14.500000953674316
    3. ' ((' → logprob: -14.625000953674316
    4. '(' → logprob: -15.250000953674316
    5. '(n' → logprob: -18.750001907348633
    6. '(((' → logprob: -19.750001907348633
    7. '   ' → logprob: -19.750001907348633
    8. ' (' → logprob: -20.125001907348633
    9. '>((' → logprob: -20.625001907348633
    10. '[(' → logprob: -20.750001907348633

Token 602: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -2.4868770196917467e-05
    2. ' nx' → logprob: -11.250024795532227
    3. '(nx' → logprob: -11.375024795532227
    4. 'n' → logprob: -15.625024795532227
    5. '0' → logprob: -17.375024795532227
    6. '
' → logprob: -17.750024795532227
    7. 'ny' → logprob: -18.500024795532227
    8. 'x' → logprob: -19.125024795532227
    9. 'xn' → logprob: -19.125024795532227
    10. '   ' → logprob: -19.125024795532227

Token 603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008333319565281272
    2. ',n' → logprob: -8.000833511352539
    3. ' ,' → logprob: -8.125833511352539
    4. '(nx' → logprob: -8.875833511352539
    5. '_,' → logprob: -10.250833511352539
    6. ',
' → logprob: -11.750833511352539
    7. 'nx' → logprob: -11.875833511352539
    8. '_n' → logprob: -13.250833511352539
    9. '<|end|>' → logprob: -13.500833511352539
    10. '
' → logprob: -13.750833511352539

Token 604: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.023675983771681786
    2. 'nx' → logprob: -3.7736759185791016
    3. ' ny' → logprob: -7.773675918579102
    4. ' nx' → logprob: -12.148675918579102
    5. '(nx' → logprob: -13.273675918579102
    6. '
' → logprob: -13.773675918579102
    7. ' ' → logprob: -15.023675918579102
    8. '   ' → logprob: -15.148675918579102
    9. 'n' → logprob: -15.523675918579102
    10. 'nz' → logprob: -16.2736759185791

Token 605: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006726026069372892
    2. ')' → logprob: -5.006725788116455
    3. '))
' → logprob: -11.631726264953613
    4. ')))' → logprob: -13.881726264953613
    5. ' ))' → logprob: -14.756726264953613
    6. ')
' → logprob: -16.006725311279297
    7. '   ' → logprob: -16.256725311279297
    8. '));' → logprob: -16.506725311279297
    9. '()))' → logprob: -16.756725311279297
    10. '),' → logprob: -16.881725311279297

Token 606: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05868910253047943
    2. '   ' → logprob: -3.4336891174316406
    3. '
' → logprob: -4.058689117431641
    4. '```' → logprob: -5.558689117431641
    5. ' while' → logprob: -5.933689117431641
    6. '	while' → logprob: -8.18368911743164
    7. ')' → logprob: -8.55868911743164
    8. 'for' → logprob: -8.55868911743164
    9. '    
' → logprob: -8.68368911743164
    10. '<|end|>' → logprob: -10.05868911743164

Token 607: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00018113377154804766
    2. ' while' → logprob: -8.875181198120117
    3. '
' → logprob: -11.000181198120117
    4. '   ' → logprob: -11.625181198120117
    5. '```' → logprob: -12.125181198120117
    6. '	while' → logprob: -12.500181198120117
    7. 'While' → logprob: -12.625181198120117
    8. '    
' → logprob: -12.875181198120117
    9. 'for' → logprob: -15.125181198120117
    10. 'from' → logprob: -16.500181198120117

Token 608: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5759641528129578
    2. ' queue' → logprob: -0.8259641528129578
    3. '(queue' → logprob: -10.825963973999023
    4. '	queue' → logprob: -12.700963973999023
    5. 'len' → logprob: -13.950963973999023
    6. 'True' → logprob: -14.575963973999023
    7. ' len' → logprob: -15.700963973999023
    8. '.queue' → logprob: -15.825963973999023
    9. '   ' → logprob: -16.950963973999023
    10. ' ' → logprob: -16.950963973999023

Token 609: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.05731290206313133
    2. ':
' → logprob: -3.1823129653930664
    3. ':' → logprob: -5.432312965393066
    4. '.' → logprob: -6.057312965393066
    5. '.dequeue' → logprob: -6.057312965393066
    6. '.append' → logprob: -6.432312965393066
    7. '.pop' → logprob: -6.932312965393066
    8. '.peek' → logprob: -7.432312965393066
    9. '   ' → logprob: -7.807312965393066
    10. ' .' → logprob: -7.932312965393066

Token 610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008904088288545609
    2. '	' → logprob: -6.008903980255127
    3. '(' → logprob: -6.383903980255127
    4. '   ' → logprob: -6.883903980255127
    5. '	   ' → logprob: -6.883903980255127
    6. '    ' → logprob: -7.133903980255127
    7. ' (' → logprob: -7.133903980255127
    8. '(i' → logprob: -7.883903980255127
    9. '	       ' → logprob: -9.383904457092285
    10. '```' → logprob: -9.633904457092285

Token 611: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00890763197094202
    2. 'idx' → logprob: -5.383907794952393
    3. 'index' → logprob: -5.758907794952393
    4. ' i' → logprob: -6.883907794952393
    5. '       ' → logprob: -9.758907318115234
    6. ' idx' → logprob: -11.258907318115234
    7. ' index' → logprob: -11.883907318115234
    8. '   ' → logprob: -11.883907318115234
    9. '           ' → logprob: -12.008907318115234
    10. '```' → logprob: -13.133907318115234

Token 612: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009295677882619202
    2. ' ,' → logprob: -7.000929355621338
    3. ',n' → logprob: -11.875929832458496
    4. ',i' → logprob: -12.500929832458496
    5. ',k' → logprob: -14.000929832458496
    6. ',
' → logprob: -14.000929832458496
    7. '<|end|>' → logprob: -14.500929832458496
    8. ',index' → logprob: -14.625929832458496
    9. ',user' → logprob: -14.625929832458496
    10. '_,' → logprob: -14.750929832458496

Token 613: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.2729995988775045e-06
    2. ' x' → logprob: -12.000006675720215
    3. '	x' → logprob: -21.6250057220459
    4. 'cx' → logprob: -21.8750057220459
    5. '
' → logprob: -23.0000057220459
    6. 'nx' → logprob: -23.7500057220459
    7. '```' → logprob: -23.8750057220459
    8. 'qx' → logprob: -24.0000057220459
    9. '"x' → logprob: -24.1250057220459
    10. ''x' → logprob: -24.1250057220459

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. ' ,' → logprob: -10.500031471252441
    3. ',y' → logprob: -12.375031471252441
    4. ',
' → logprob: -18.875032424926758
    5. '_,' → logprob: -19.375032424926758
    6. 'y' → logprob: -20.250032424926758
    7. '   ' → logprob: -20.375032424926758
    8. ',next' → logprob: -20.375032424926758
    9. '‌,' → logprob: -20.750032424926758
    10. '       ' → logprob: -20.750032424926758

Token 615: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.107425062713446e-06
    2. ' y' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.75000762939453
    4. '       ' → logprob: -18.75000762939453
    5. '    ' → logprob: -19.87500762939453
    6. '	y' → logprob: -19.87500762939453
    7. '     ' → logprob: -20.62500762939453
    8. '           ' → logprob: -21.00000762939453
    9. '        ' → logprob: -21.37500762939453
    10. '      ' → logprob: -21.62500762939453

Token 616: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759557485580444
    2. ' =' → logprob: -0.8259557485580444
    3. '   ' → logprob: -11.450955390930176
    4. ')' → logprob: -13.200955390930176
    5. ',' → logprob: -13.700955390930176
    6. '=
' → logprob: -13.950955390930176
    7. ' =
' → logprob: -14.200955390930176
    8. '    ' → logprob: -14.825955390930176
    9. ' ' → logprob: -14.825955390930176
    10. '       ' → logprob: -15.825955390930176

Token 617: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.31326285004615784
    2. 'queue' → logprob: -1.3132628202438354
    3. '   ' → logprob: -14.813262939453125
    4. '	queue' → logprob: -14.813262939453125
    5. 'que' → logprob: -15.563262939453125
    6. '(queue' → logprob: -16.438262939453125
    7. '    ' → logprob: -17.813262939453125
    8. ' ' → logprob: -17.813262939453125
    9. '       ' → logprob: -18.188262939453125
    10. ' que' → logprob: -18.938262939453125

Token 618: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16062569618225098
    2. ' =' → logprob: -1.910625696182251
    3. '=
' → logprob: -8.660625457763672
    4. ' =
' → logprob: -9.285625457763672
    5. ',' → logprob: -10.160625457763672
    6. '   ' → logprob: -10.535625457763672
    7. ')' → logprob: -10.910625457763672
    8. ' ' → logprob: -12.160625457763672
    9. '+=' → logprob: -12.160625457763672
    10. ')=' → logprob: -12.410625457763672

Token 619: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0019430378451943398
    2. 'op' → logprob: -6.251943111419678
    3. 'ople' → logprob: -11.62694263458252
    4. 'opl' → logprob: -12.37694263458252
    5. 'p' → logprob: -14.25194263458252
    6. 'opup' → logprob: -15.62694263458252
    7. 'opt' → logprob: -16.251943588256836
    8. 'opped' → logprob: -16.376943588256836
    9. 'oplevel' → logprob: -16.376943588256836
    10. 'opy' → logprob: -16.626943588256836

Token 620: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1398702710866928
    2. '<|end|>' → logprob: -2.7648701667785645
    3. '       ' → logprob: -3.1398701667785645
    4. '        
' → logprob: -4.8898701667785645
    5. '<|end|>' → logprob: -5.3898701667785645
    6. '  
' → logprob: -5.6398701667785645
    7. ')' → logprob: -6.0148701667785645
    8. '    
' → logprob: -6.3898701667785645
    9. '   ' → logprob: -6.7648701667785645
    10. ',' → logprob: -7.0148701667785645

Token 621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020415056496858597
    2. 'if' → logprob: -4.52041482925415
    3. ' if' → logprob: -5.14541482925415
    4. '	' → logprob: -6.64541482925415
    5. '	if' → logprob: -7.52041482925415
    6. '<|end|>' → logprob: -7.52041482925415
    7. '        
' → logprob: -7.77041482925415
    8. '
' → logprob: -8.145415306091309
    9. '		
' → logprob: -9.645415306091309
    10. '	   ' → logprob: -9.770415306091309

Token 622: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00841078907251358
    2. '       ' → logprob: -5.008410930633545
    3. ' if' → logprob: -6.383410930633545
    4. '        
' → logprob: -13.383410453796387
    5. '
' → logprob: -13.508410453796387
    6. '	if' → logprob: -14.383410453796387
    7. '```' → logprob: -15.133410453796387
    8. '   ' → logprob: -15.508410453796387
    9. 'next' → logprob: -15.508410453796387
    10. '#' → logprob: -15.633410453796387

Token 623: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31326353549957275
    2. 'i' → logprob: -1.3132635354995728
    3. '   ' → logprob: -13.563263893127441
    4. ' ' → logprob: -15.813263893127441
    5. '	i' → logprob: -16.188262939453125
    6. '(i' → logprob: -16.188262939453125
    7. '       ' → logprob: -16.813262939453125
    8. ' ' → logprob: -16.813262939453125
    9. '    ' → logprob: -16.938262939453125
    10. '
' → logprob: -18.563262939453125

Token 624: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08084213733673096
    2. '+' → logprob: -3.5808420181274414
    3. '==' → logprob: -3.5808420181274414
    4. ' +' → logprob: -3.8308420181274414
    5. ' <' → logprob: -9.705842018127441
    6. ' ' → logprob: -10.080842018127441
    7. ' =' → logprob: -10.330842018127441
    8. '=' → logprob: -10.455842018127441
    9. '<|end|>' → logprob: -10.455842018127441
    10. ' +=' → logprob: -10.955842018127441

Token 625: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008046258008107543
    2. ' n' → logprob: -7.125804424285889
    3. '(n' → logprob: -16.375804901123047
    4. '#' → logprob: -17.375804901123047
    5. '	n' → logprob: -17.375804901123047
    6. ')n' → logprob: -17.875804901123047
    7. '   ' → logprob: -18.000804901123047
    8. '<|end|>' → logprob: -18.000804901123047
    9. '[n' → logprob: -18.375804901123047
    10. '       ' → logprob: -19.000804901123047

Token 626: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03804241120815277
    2. ' -' → logprob: -3.2880423069000244
    3. '   ' → logprob: -15.038042068481445
    4. '1' → logprob: -15.288042068481445
    5. ' ' → logprob: -16.038042068481445
    6. '       ' → logprob: -16.163042068481445
    7. '()-' → logprob: -17.413042068481445
    8. '
' → logprob: -17.413042068481445
    9. 'minus' → logprob: -17.538042068481445
    10. '```' → logprob: -17.538042068481445

Token 627: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.875001907348633
    4. '
' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '2' → logprob: -20.000001907348633
    7. '<|end|>' → logprob: -20.250001907348633
    8. '...' → logprob: -21.125001907348633
    9. ',' → logprob: -21.187501907348633
    10. '-' → logprob: -21.187501907348633

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '<|end|>' → logprob: -16.625
    4. '
' → logprob: -16.75
    5. '```' → logprob: -17.375
    6. '2' → logprob: -19.5
    7. '-' → logprob: -20.4375
    8. 'from' → logprob: -20.6875
    9. '...' → logprob: -20.6875
    10. '   ' → logprob: -20.8125

Token 629: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04700259491801262
    2. ':' → logprob: -3.1720025539398193
    3. '           ' → logprob: -5.672002792358398
    4. ':return' → logprob: -7.797002792358398
    5. '       ' → logprob: -9.172002792358398
    6. '):
' → logprob: -11.172002792358398
    7. ' and' → logprob: -11.672002792358398
    8. ':
' → logprob: -12.047002792358398
    9. '   ' → logprob: -12.172002792358398
    10. '():
' → logprob: -13.422002792358398

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008489366737194359
    2. ' return' → logprob: -8.000848770141602
    3. '       ' → logprob: -8.500848770141602
    4. '
' → logprob: -8.750848770141602
    5. 'return' → logprob: -9.375848770141602
    6. '               ' → logprob: -10.875848770141602
    7. ':' → logprob: -11.500848770141602
    8. ':
' → logprob: -11.625848770141602
    9. '		' → logprob: -12.000848770141602
    10. '<|end|>' → logprob: -12.250848770141602

Token 631: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22269408404827118
    2. ' return' → logprob: -1.9726940393447876
    3. '           ' → logprob: -2.847694158554077
    4. '
' → logprob: -6.847693920135498
    5. '       ' → logprob: -7.222693920135498
    6. 'print' → logprob: -7.847693920135498
    7. '               ' → logprob: -8.097694396972656
    8. '	return' → logprob: -10.097694396972656
    9. '   ' → logprob: -10.347694396972656
    10. '	       ' → logprob: -12.097694396972656

Token 632: ' Re' (ID: 907)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014327568002045155
    2. ' return' → logprob: -4.264327526092529
    3. '           ' → logprob: -9.014328002929688
    4. 'print' → logprob: -10.139328002929688
    5. '#' → logprob: -13.514328002929688
    6. '   ' → logprob: -14.389328002929688
    7. '       ' → logprob: -14.514328002929688
    8. '	return' → logprob: -15.514328002929688
    9. ' print' → logprob: -16.139328002929688
    10. '               ' → logprob: -16.389328002929688

Token 633: 'ached' (ID: 5908)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.7432603272027336e-06
    2. 'return' → logprob: -14.500001907348633
    3. 'turned' → logprob: -14.500001907348633
    4. '       ' → logprob: -15.625001907348633
    5. 'eturn' → logprob: -15.625001907348633
    6. '           ' → logprob: -16.000001907348633
    7. 't' → logprob: -16.000001907348633
    8. 'urn' → logprob: -17.250001907348633
    9. ' turn' → logprob: -17.375001907348633
    10. '
' → logprob: -17.750001907348633

Token 634: ' last' (ID: 2174)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5801126956939697
    2. 'True' → logprob: -0.8301126956939697
    3. '           ' → logprob: -6.455112457275391
    4. 'return' → logprob: -6.705112457275391
    5. '(True' → logprob: -7.080112457275391
    6. '
' → logprob: -7.830112457275391
    7. ' return' → logprob: -9.33011245727539
    8. 'true' → logprob: -11.70511245727539
    9. '       ' → logprob: -11.70511245727539
    10. '            
' → logprob: -12.70511245727539

Token 635: ' sprinkler' (ID: 181940)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.4413817524909973
    2. ' sprinkler' → logprob: -1.3163816928863525
    3. ' sprink' → logprob: -2.4413816928863525
    4. 's' → logprob: -7.191381931304932
    5. '       ' → logprob: -7.691381931304932
    6. '           ' → logprob: -8.566381454467773
    7. '   ' → logprob: -9.941381454467773
    8. '        
' → logprob: -10.191381454467773
    9. ' spr' → logprob: -10.316381454467773
    10. ' step' → logprob: -10.441381454467773

Token 636: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017204000614583492
    2. '
' → logprob: -7.001720428466797
    3. ' return' → logprob: -7.876720428466797
    4. 'return' → logprob: -8.251720428466797
    5. ',' → logprob: -9.751720428466797
    6. '		' → logprob: -10.001720428466797
    7. ' and' → logprob: -10.751720428466797
    8. ':
' → logprob: -11.501720428466797
    9. '               ' → logprob: -11.501720428466797
    10. '\n' → logprob: -12.001720428466797

Token 637: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.30514439940452576
    2. 'a' → logprob: -1.6801444292068481
    3. 'True' → logprob: -3.4301443099975586
    4. 'success' → logprob: -4.430144309997559
    5. 'water' → logprob: -5.180144309997559
    6. ' True' → logprob: -5.305144309997559
    7. ' valid' → logprob: -5.430144309997559
    8. 'possible' → logprob: -5.555144309997559
    9. 'successful' → logprob: -5.555144309997559
    10. ' a' → logprob: -5.805144309997559

Token 638: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.09808412194252014
    2. 'pos' → logprob: -3.2230842113494873
    3. 'coverage' → logprob: -3.7230842113494873
    4. ' position' → logprob: -4.223083972930908
    5. 'jump' → logprob: -4.723083972930908
    6. ' coverage' → logprob: -5.848083972930908
    7. 'water' → logprob: -6.348083972930908
    8. ' jump' → logprob: -7.973083972930908
    9. 'path' → logprob: -8.473084449768066
    10. ' water' → logprob: -9.348084449768066

Token 639: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005425465060397983
    2. '
' → logprob: -8.250542640686035
    3. 'return' → logprob: -8.875542640686035
    4. ' return' → logprob: -9.625542640686035
    5. '               ' → logprob: -10.375542640686035
    6. ',' → logprob: -11.250542640686035
    7. ':
' → logprob: -11.375542640686035
    8. '		' → logprob: -11.500542640686035
    9. '\n' → logprob: -13.125542640686035
    10. ',
' → logprob: -13.875542640686035

Token 640: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003212805895600468
    2. ' return' → logprob: -9.000321388244629
    3. 'return' → logprob: -9.125321388244629
    4. '               ' → logprob: -9.750321388244629
    5. '
' → logprob: -11.000321388244629
    6. '		' → logprob: -12.625321388244629
    7. '            
' → logprob: -12.875321388244629
    8. '       ' → logprob: -13.125321388244629
    9. '<|end|>' → logprob: -13.250321388244629
    10. '```' → logprob: -13.625321388244629

Token 641: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008253490086644888
    2. ' return' → logprob: -7.75082540512085
    3. '           ' → logprob: -8.000824928283691
    4. 'print' → logprob: -9.750824928283691
    5. '
' → logprob: -14.625824928283691
    6. '	return' → logprob: -14.625824928283691
    7. '               ' → logprob: -16.125825881958008
    8. '		' → logprob: -16.125825881958008
    9. '{return' → logprob: -17.125825881958008
    10. '   ' → logprob: -17.875825881958008

Token 642: ' "' (ID: 392)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2610284984111786
    2. '"' → logprob: -1.761028528213501
    3. ' True' → logprob: -2.886028528213501
    4. ''' → logprob: -6.386028289794922
    5. ' "' → logprob: -8.386028289794922
    6. '   ' → logprob: -9.011028289794922
    7. 'print' → logprob: -11.636028289794922
    8. ''T' → logprob: -11.761028289794922
    9. ' '' → logprob: -11.886028289794922
    10. '(True' → logprob: -12.386028289794922

Token 643: 'OK' (ID: 5175)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.10146664083003998
    2. 'YES' → logprob: -2.351466655731201
    3. 'Possible' → logprob: -7.601466655731201
    4. '"' → logprob: -8.101466178894043
    5. 'OK' → logprob: -8.476466178894043
    6. 'P' → logprob: -9.101466178894043
    7. 'True' → logprob: -10.351466178894043
    8. 'yes' → logprob: -10.351466178894043
    9. 'SUCCESS' → logprob: -11.226466178894043
    10. ' Yes' → logprob: -11.601466178894043

Token 644: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.024949070066213608
    2. '"' → logprob: -3.774949073791504
    3. '"

' → logprob: -6.649949073791504
    4. '\n' → logprob: -8.524949073791504
    5. '"
' → logprob: -8.524949073791504
    6. '   ' → logprob: -12.274949073791504
    7. '")' → logprob: -13.649949073791504
    8. '")
' → logprob: -13.899949073791504
    9. '"

' → logprob: -14.274949073791504
    10. ''
' → logprob: -14.399949073791504

Token 645: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05802125856280327
    2. '       ' → logprob: -3.558021306991577
    3. '    
' → logprob: -4.433021068572998
    4. '\n' → logprob: -5.183021068572998
    5. '        
' → logprob: -5.558021068572998
    6. '  
' → logprob: -5.808021068572998
    7. '   ' → logprob: -6.058021068572998
    8. '<|end|>' → logprob: -7.683021068572998
    9. '	
' → logprob: -8.808021545410156
    10. '		
' → logprob: -8.933021545410156

Token 646: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30330249667167664
    2. ' for' → logprob: -1.803302526473999
    3. '       ' → logprob: -2.928302526473999
    4. 'next' → logprob: -3.553302526473999
    5. '
' → logprob: -5.05330228805542
    6. ' next' → logprob: -5.92830228805542
    7. 'i' → logprob: -6.05330228805542
    8. '        
' → logprob: -6.17830228805542
    9. '   ' → logprob: -7.42830228805542
    10. ' i' → logprob: -8.678302764892578

Token 647: ' Next' (ID: 13886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26114004850387573
    2. 'next' → logprob: -1.5111401081085205
    3. '#' → logprob: -5.386139869689941
    4. 'i' → logprob: -6.136139869689941
    5. 'ni' → logprob: -6.761139869689941
    6. 'nx' → logprob: -7.011139869689941
    7. '   ' → logprob: -8.761139869689941
    8. 'Next' → logprob: -10.136139869689941
    9. '       ' → logprob: -10.511139869689941
    10. ' for' → logprob: -10.511139869689941

Token 648: ' sprinkler' (ID: 181940)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.08849484473466873
    2. '_s' → logprob: -2.5884947776794434
    3. 'i' → logprob: -5.213494777679443
    4. '_idx' → logprob: -6.463494777679443
    5. 'spr' → logprob: -6.588494777679443
    6. '_index' → logprob: -7.088494777679443
    7. '_' → logprob: -9.088495254516602
    8. '_pos' → logprob: -9.213495254516602
    9. '_ix' → logprob: -10.338495254516602
    10. 's' → logprob: -10.463495254516602

Token 649: ' index' (ID: 3472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4982728660106659
    2. '       ' → logprob: -1.3732728958129883
    3. '=' → logprob: -2.8732728958129883
    4. 'i' → logprob: -3.4982728958129883
    5. '   ' → logprob: -3.9982728958129883
    6. 'next' → logprob: -4.748272895812988
    7. ',' → logprob: -5.498272895812988
    8. ' next' → logprob: -5.498272895812988
    9. ' i' → logprob: -5.748272895812988
    10. 'n' → logprob: -6.248272895812988

Token 650: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2709525227546692
    2. '=' → logprob: -1.6459524631500244
    3. '       ' → logprob: -3.2709524631500244
    4. 'i' → logprob: -6.0209527015686035
    5. 'next' → logprob: -6.3959527015686035
    6. '=i' → logprob: -6.8959527015686035
    7. ' i' → logprob: -7.0209527015686035
    8. ' next' → logprob: -8.020952224731445
    9. ',' → logprob: -9.395952224731445
    10. 'n' → logprob: -10.395952224731445

Token 651: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043096594512462616
    2. '=' → logprob: -3.1680965423583984
    3. '   ' → logprob: -9.793096542358398
    4. '       ' → logprob: -11.168096542358398
    5. '=i' → logprob: -11.293096542358398
    6. ',' → logprob: -12.543096542358398
    7. 'next' → logprob: -12.668096542358398
    8. ' next' → logprob: -13.418096542358398
    9. '=
' → logprob: -13.543096542358398
    10. 'i' → logprob: -13.668096542358398

Token 652: ' ni' (ID: 2565)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08319322764873505
    2. 'next' → logprob: -2.958193302154541
    3. 'ni' (adapté à ' ni') → logprob: -4.083193302154541
    4. ' next' → logprob: -5.458193302154541
    5. ' i' → logprob: -5.583193302154541
    6. ' ni' → logprob: -6.708193302154541
    7. ' nxt' → logprob: -6.833193302154541
    8. 'n' → logprob: -7.458193302154541
    9. '```' → logprob: -9.583192825317383
    10. '   ' → logprob: -10.333192825317383

Token 653: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759422779083252
    2. '=' → logprob: -0.8259422779083252
    3. '=i' → logprob: -13.200942039489746
    4. ' =
' → logprob: -14.700942039489746
    5. '=
' → logprob: -14.950942039489746
    6. '+=' → logprob: -16.325942993164062
    7. '＝' → logprob: -16.575942993164062
    8. ' ' → logprob: -16.825942993164062
    9. ' +=' → logprob: -16.950942993164062
    10. '=int' → logprob: -17.825942993164062

Token 654: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014163628220558167
    2. ' i' → logprob: -4.264163494110107
    3. '	i' → logprob: -16.764163970947266
    4. '_i' → logprob: -18.389163970947266
    5. ')i' → logprob: -18.389163970947266
    6. '<|end|>' → logprob: -18.764163970947266
    7. '{i' → logprob: -18.889163970947266
    8. '(i' → logprob: -19.014163970947266
    9. '```' → logprob: -19.139163970947266
    10. 'n' → logprob: -19.389163970947266

Token 655: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.640601634979248
    2. '=' → logprob: -0.890601634979248
    3. ' +' → logprob: -3.515601634979248
    4. ' =' → logprob: -3.890601634979248
    5. '+=' → logprob: -4.515601634979248
    6. ' +=' → logprob: -6.515601634979248
    7. '+
' → logprob: -10.890602111816406
    8. ' ' → logprob: -12.140602111816406
    9. '<|end|>' → logprob: -13.140602111816406
    10. '
' → logprob: -13.265602111816406

Token 656: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -20.625
    4. '<|end|>' → logprob: -20.625
    5. '   ' → logprob: -21.625
    6. '
' → logprob: -22.75
    7. '۱' → logprob: -24.625
    8. '  ' → logprob: -24.625
    9. '+' → logprob: -24.75
    10. '``' → logprob: -24.875

Token 657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -19.75
    4. 'def' → logprob: -21.25
    5. '<|end|>' → logprob: -21.375
    6. 'from' → logprob: -21.625
    7. '   ' → logprob: -22.25
    8. '
' → logprob: -22.625
    9. 'import' → logprob: -23.0
    10. '``' → logprob: -23.0

Token 658: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030565110966563225
    2. 'for' → logprob: -4.15556526184082
    3. '
' → logprob: -4.65556526184082
    4. ' for' → logprob: -5.40556526184082
    5. '        
' → logprob: -8.90556526184082
    6. '   ' → logprob: -9.03056526184082
    7. '	for' → logprob: -9.78056526184082
    8. '	' → logprob: -10.40556526184082
    9. '  
' → logprob: -10.90556526184082
    10. '<|end|>' → logprob: -11.03056526184082

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06841719895601273
    2. 'for' → logprob: -3.0684173107147217
    3. ' for' → logprob: -3.9434173107147217
    4. '        
' → logprob: -9.3184175491333
    5. '	for' → logprob: -9.5684175491333
    6. '   ' → logprob: -9.9434175491333
    7. '	' → logprob: -11.1934175491333
    8. '<|end|>' → logprob: -11.8184175491333
    9. '           ' → logprob: -12.3184175491333
    10. '	   ' → logprob: -12.4434175491333

Token 660: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018526007188484073
    2. '       ' → logprob: -7.001852512359619
    3. 'found' → logprob: -7.251852512359619
    4. ' for' → logprob: -9.001852989196777
    5. 'next' → logprob: -10.001852989196777
    6. 'prev' → logprob: -10.251852989196777
    7. 'possible' → logprob: -11.376852989196777
    8. '#' (adapté à ' #') → logprob: -11.876852989196777
    9. 'previous' → logprob: -13.001852989196777
    10. '           ' → logprob: -13.126852989196777

Token 661: ' From' (ID: 7217)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006572907790541649
    2. 'found' → logprob: -5.756572723388672
    3. 'can' → logprob: -6.756572723388672
    4. 'possible' → logprob: -7.006572723388672
    5. 'next' → logprob: -7.131572723388672
    6. 'm' → logprob: -8.006572723388672
    7. 'reachable' → logprob: -9.506572723388672
    8. 'allowed' → logprob: -10.256572723388672
    9. 'For' → logprob: -10.631572723388672
    10. ' for' → logprob: -10.881572723388672

Token 662: ' current' (ID: 2208)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01096340175718069
    2. ' x' → logprob: -5.010963439941406
    3. '(x' → logprob: -5.760963439941406
    4. 'for' → logprob: -7.260963439941406
    5. ' (' → logprob: -9.135963439941406
    6. 'current' → logprob: -9.635963439941406
    7. 'nx' → logprob: -9.635963439941406
    8. ' for' → logprob: -10.385963439941406
    9. 'range' → logprob: -10.885963439941406
    10. '```' → logprob: -11.385963439941406

Token 663: ' position' (ID: 4010)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.017620321363210678
    2. 'pos' → logprob: -4.517620086669922
    3. ' x' → logprob: -5.517620086669922
    4. 'for' → logprob: -6.392620086669922
    5. 'position' → logprob: -7.517620086669922
    6. ' for' → logprob: -8.892620086669922
    7. ' pos' → logprob: -9.267620086669922
    8. ',' → logprob: -10.267620086669922
    9. ' position' → logprob: -10.267620086669922
    10. 'positions' → logprob: -12.142620086669922

Token 664: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9670253396034241
    2. ' for' → logprob: -0.9670253396034241
    3. 'for' → logprob: -1.5920252799987793
    4. ',' → logprob: -3.3420252799987793
    5. '	for' → logprob: -7.592025279998779
    6. '   ' → logprob: -9.342025756835938
    7. '           ' → logprob: -10.217025756835938
    8. ' ,' → logprob: -10.467025756835938
    9. '	' → logprob: -11.592025756835938
    10. '	   ' → logprob: -11.967025756835938

Token 665: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.12258882028982e-05
    2. ' x' → logprob: -9.75006103515625
    3. ',' → logprob: -13.37506103515625
    4. '
' → logprob: -14.87506103515625
    5. 'nx' → logprob: -15.12506103515625
    6. '),' → logprob: -15.62506103515625
    7. ')x' → logprob: -15.62506103515625
    8. ')' → logprob: -15.75006103515625
    9. '(x' → logprob: -15.87506103515625
    10. ',x' → logprob: -16.62506103515625

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021388400346040726
    2. ',y' → logprob: -6.252138614654541
    3. ' ,' → logprob: -8.6271390914917
    4. '),' → logprob: -11.0021390914917
    5. '+' → logprob: -12.5021390914917
    6. '       ' → logprob: -12.8771390914917
    7. ',
' → logprob: -13.1271390914917
    8. ',n' → logprob: -13.1271390914917
    9. ')' → logprob: -13.6271390914917
    10. '
' → logprob: -14.3771390914917

Token 667: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019289902411401272
    2. ' y' → logprob: -6.251928806304932
    3. ',' → logprob: -15.62692928314209
    4. ',y' → logprob: -16.501928329467773
    5. '       ' → logprob: -17.626928329467773
    6. '
' → logprob: -18.001928329467773
    7. '   ' → logprob: -18.001928329467773
    8. '	y' → logprob: -18.001928329467773
    9. ')y' → logprob: -19.626928329467773
    10. ' ' → logprob: -19.876928329467773

Token 668: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6383958458900452
    2. '),' → logprob: -0.7633958458900452
    3. '       ' → logprob: -5.5133957862854
    4. ')' → logprob: -6.7633957862854
    5. ' ,' → logprob: -7.8883957862854
    6. 'for' → logprob: -9.763396263122559
    7. '):
' → logprob: -10.138396263122559
    8. ' for' → logprob: -10.638396263122559
    9. '):' → logprob: -10.763396263122559
    10. ' ),' → logprob: -11.013396263122559

Token 669: ' P' (ID: 398)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2014407217502594
    2. ' for' → logprob: -1.701440691947937
    3. '       ' → logprob: -10.576440811157227
    4. 'found' → logprob: -13.826440811157227
    5. '
' → logprob: -15.326440811157227
    6. '        
' → logprob: -15.576440811157227
    7. ' found' → logprob: -15.701440811157227
    8. '	for' → logprob: -16.076440811157227
    9. '```' → logprob: -17.326440811157227
    10. 'For' → logprob: -17.451440811157227

Token 670: 'yon' (ID: 10033)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03656468167901039
    2. 'ython' → logprob: -3.911564588546753
    3. ' for' → logprob: -4.786564826965332
    4. 'y' → logprob: -5.911564826965332
    5. '#' → logprob: -6.911564826965332
    6. '_for' → logprob: -7.161564826965332
    7. '   ' → logprob: -7.411564826965332
    8. '       ' → logprob: -7.786564826965332
    9. 'x' → logprob: -7.911564826965332
    10. ',' → logprob: -7.911564826965332

Token 671: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001751103438436985
    2. '       ' → logprob: -7.251750946044922
    3. ' jumps' → logprob: -8.251750946044922
    4. 'kn' → logprob: -8.626750946044922
    5. ' can' → logprob: -9.376750946044922
    6. 'can' → logprob: -9.501750946044922
    7. 'x' → logprob: -9.626750946044922
    8. ',' → logprob: -9.751750946044922
    9. 'к' → logprob: -9.876750946044922
    10. '=' → logprob: -10.001750946044922

Token 672: 'ichi' (ID: 44252)
  Prédit: 'ichi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichi' → logprob: -0.7473992109298706
    2. '_moves' → logprob: -1.7473992109298706
    3. 'chi' → logprob: -1.9973992109298706
    4. 'ich' → logprob: -2.49739933013916
    5. 'moves' → logprob: -2.74739933013916
    6. '   ' → logprob: -3.74739933013916
    7. ' moves' → logprob: -4.74739933013916
    8. 'i' → logprob: -4.74739933013916
    9. 'ic' → logprob: -4.99739933013916
    10. '#' → logprob: -5.87239933013916

Token 673: ' can' (ID: 665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9796056151390076
    2. 'can' → logprob: -0.9796056151390076
    3. ' can' → logprob: -1.6046056747436523
    4. ' for' → logprob: -3.7296056747436523
    5. 'must' → logprob: -4.979605674743652
    6. 's' → logprob: -5.354605674743652
    7. '#' → logprob: -5.854605674743652
    8. ' must' → logprob: -6.354605674743652
    9. '   ' → logprob: -7.104605674743652
    10. 'j' → logprob: -7.229605674743652

Token 674: ' jump' (ID: 13843)
  Prédit: ' jump'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jump' → logprob: -0.5522303581237793
    2. 'jump' → logprob: -1.3022303581237793
    3. 'make' → logprob: -2.8022303581237793
    4. ' for' → logprob: -3.4272303581237793
    5. ' make' → logprob: -4.052230358123779
    6. 'for' → logprob: -4.177230358123779
    7. 'try' → logprob: -4.927230358123779
    8. ' try' → logprob: -5.052230358123779
    9. ' perform' → logprob: -5.802230358123779
    10. '   ' → logprob: -5.802230358123779

Token 675: ' once' (ID: 4730)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.776322066783905
    2. ' to' → logprob: -1.7763221263885498
    3. 'for' → logprob: -1.9013221263885498
    4. '       ' → logprob: -2.27632212638855
    5. ' in' → logprob: -3.02632212638855
    6. ' for' → logprob: -3.40132212638855
    7. ' through' → logprob: -4.526321887969971
    8. 'in' → logprob: -5.026321887969971
    9. 'through' → logprob: -5.526321887969971
    10. ',' → logprob: -5.776321887969971

Token 676: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012042404152452946
    2. 'for' → logprob: -4.88704252243042
    3. ' for' → logprob: -6.38704252243042
    4. ',' → logprob: -7.13704252243042
    5. ' to' → logprob: -7.38704252243042
    6. 'to' → logprob: -7.63704252243042
    7. '           ' → logprob: -7.88704252243042
    8. ' in' → logprob: -9.012042045593262
    9. ':' → logprob: -9.012042045593262
    10. '	' → logprob: -9.637042045593262

Token 677: ' pos' (ID: 1253)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.24428603053092957
    2. 'nx' → logprob: -2.744286060333252
    3. 'positions' → logprob: -2.994286060333252
    4. 'pos' → logprob: -3.369286060333252
    5. ' any' → logprob: -3.869286060333252
    6. 'some' → logprob: -4.119286060333252
    7. ' positions' → logprob: -5.244286060333252
    8. '(nx' → logprob: -5.369286060333252
    9. 'possible' → logprob: -5.494286060333252
    10. 'a' → logprob: -5.494286060333252

Token 678: ' inside' (ID: 6772)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.720176637172699
    2. ' in' → logprob: -0.720176637172699
    3. 's' → logprob: -3.9701766967773438
    4. 'for' → logprob: -5.595176696777344
    5. ',' → logprob: -5.845176696777344
    6. '           ' → logprob: -8.095176696777344
    7. '_in' → logprob: -8.970176696777344
    8. ' for' → logprob: -9.095176696777344
    9. '       ' → logprob: -9.220176696777344
    10. '(nx' → logprob: -9.470176696777344

Token 679: ' water' (ID: 3411)
  Prédit: 'water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'water' → logprob: -0.004100008402019739
    2. ' water' → logprob: -5.5040998458862305
    3. '   ' → logprob: -11.25409984588623
    4. '       ' → logprob: -12.75409984588623
    5. 'W' → logprob: -13.87909984588623
    6. '(w' → logprob: -14.12909984588623
    7. '```' → logprob: -14.12909984588623
    8. '           ' → logprob: -14.25409984588623
    9. 'the' → logprob: -14.25409984588623
    10. 'Water' → logprob: -14.37909984588623

Token 680: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.7133641196996905e-05
    2. 'areas' → logprob: -10.75002670288086
    3. '_area' → logprob: -13.12502670288086
    4. 'area' → logprob: -13.87502670288086
    5. '           ' → logprob: -14.00002670288086
    6. '   ' → logprob: -14.50002670288086
    7. '```' → logprob: -15.25002670288086
    8. '_positions' → logprob: -15.37502670288086
    9. '       ' → logprob: -15.62502670288086
    10. 'for' → logprob: -15.75002670288086

Token 681: 'areas' (ID: 69250)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.100216805934906
    2. 'areas' → logprob: -2.350216865539551
    3. 'area' → logprob: -11.85021686553955
    4. 'coverage' → logprob: -13.35021686553955
    5. 'Areas' → logprob: -13.85021686553955
    6. '```' → logprob: -16.225215911865234
    7. ' areas' → logprob: -16.475215911865234
    8. 'water' → logprob: -16.725215911865234
    9. '_area' → logprob: -16.725215911865234
    10. '(' → logprob: -17.350215911865234

Token 682: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009870948269963264
    2. '       ' → logprob: -5.259871006011963
    3. ' =' → logprob: -5.509871006011963
    4. '=' → logprob: -8.259870529174805
    5. '   ' → logprob: -8.509870529174805
    6. '           ' → logprob: -9.759870529174805
    7. '[next' → logprob: -11.009870529174805
    8. 's' → logprob: -11.259870529174805
    9. '```' → logprob: -11.634870529174805
    10. 'for' → logprob: -12.259870529174805

Token 683: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.07890146225690842
    2. '[' → logprob: -2.578901529312134
    3. ' ni' → logprob: -11.703901290893555
    4. '```' → logprob: -13.703901290893555
    5. '][' → logprob: -13.828901290893555
    6. ']' → logprob: -14.828901290893555
    7. '
' → logprob: -15.578901290893555
    8. 'n' → logprob: -15.703901290893555
    9. '-ni' → logprob: -15.703901290893555
    10. '[
' → logprob: -15.828901290893555

Token 684: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008375093340873718
    2. '       ' → logprob: -5.50837516784668
    3. '):
' → logprob: -6.75837516784668
    4. ']' → logprob: -7.00837516784668
    5. ')' → logprob: -7.50837516784668
    6. '   ' → logprob: -7.75837516784668
    7. '):' → logprob: -7.75837516784668
    8. '```' → logprob: -7.75837516784668
    9. '           ' → logprob: -9.00837516784668
    10. ']:
' → logprob: -9.88337516784668

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027394930366426706
    2. 'for' → logprob: -6.502739429473877
    3. ' for' → logprob: -6.752739429473877
    4. '        
' → logprob: -10.377739906311035
    5. '   ' → logprob: -11.627739906311035
    6. '<|end|>' → logprob: -11.627739906311035
    7. ',' → logprob: -12.377739906311035
    8. '
' → logprob: -12.377739906311035
    9. '	' → logprob: -13.127739906311035
    10. '	for' → logprob: -13.127739906311035

Token 686: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013739225687459111
    2. ' for' → logprob: -6.751373767852783
    3. '       ' → logprob: -8.501374244689941
    4. '	for' → logprob: -15.251374244689941
    5. '   ' → logprob: -15.626374244689941
    6. '           ' → logprob: -16.126373291015625
    7. '
' → logprob: -17.126373291015625
    8. '        
' → logprob: -17.751373291015625
    9. 'For' → logprob: -18.001373291015625
    10. '```' → logprob: -18.501373291015625

Token 687: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00034416402922943234
    2. ' dx' → logprob: -8.000344276428223
    3. '(dx' → logprob: -12.000344276428223
    4. '   ' → logprob: -13.500344276428223
    5. 'j' → logprob: -14.375344276428223
    6. 'J' → logprob: -16.000343322753906
    7. '```' → logprob: -16.125343322753906
    8. 'dd' → logprob: -16.250343322753906
    9. 'jx' → logprob: -16.250343322753906
    10. 'adx' → logprob: -16.625343322753906

Token 688: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022104429081082344
    2. ' ,' → logprob: -6.12721061706543
    3. ',n' → logprob: -11.12721061706543
    4. ',d' → logprob: -12.00221061706543
    5. ',y' → logprob: -13.62721061706543
    6. ',w' → logprob: -14.50221061706543
    7. ',
' → logprob: -14.75221061706543
    8. ',j' → logprob: -14.87721061706543
    9. ',next' → logprob: -15.00221061706543
    10. ' in' → logprob: -15.62721061706543

Token 689: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.01815006136894226
    2. ' dy' → logprob: -4.0181498527526855
    3. '.dy' → logprob: -16.518150329589844
    4. ',' → logprob: -16.643150329589844
    5. 'd' → logprob: -17.018150329589844
    6. 'Dy' → logprob: -18.268150329589844
    7. 'dym' → logprob: -19.143150329589844
    8. 'dx' → logprob: -20.393150329589844
    9. 'ay' → logprob: -20.768150329589844
    10. 'py' → logprob: -20.893150329589844

Token 690: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012516485527157784
    2. 'in' → logprob: -4.387516498565674
    3. '	in' → logprob: -12.512516021728516
    4. '<|end|>' → logprob: -13.637516021728516
    5. ' ' → logprob: -13.762516021728516
    6. ',' → logprob: -15.137516021728516
    7. '        ' → logprob: -15.887516021728516
    8. ' ,' → logprob: -16.012516021728516
    9. '       ' → logprob: -16.512516021728516
    10. 'In' → logprob: -16.950016021728516

Token 691: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0040799472481012344
    2. ' J' → logprob: -5.504079818725586
    3. '   ' → logprob: -13.504079818725586
    4. '	J' → logprob: -17.004079818725586
    5. '       ' → logprob: -17.129079818725586
    6. '[J' → logprob: -17.504079818725586
    7. '    ' → logprob: -18.004079818725586
    8. ' ' → logprob: -18.379079818725586
    9. '           ' → logprob: -18.379079818725586
    10. '        ' → logprob: -19.254079818725586

Token 692: 'UMP' (ID: 49053)
  Prédit: 'UMP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UMP' → logprob: -5.512236498361744e-07
    2. 'UM' → logprob: -15.000000953674316
    3. 'ump' → logprob: -16.5
    4. 'J' → logprob: -16.75
    5. 'U' → logprob: -18.25
    6. 'MP' → logprob: -18.375
    7. '(J' → logprob: -19.5
    8. 'UP' → logprob: -20.125
    9. '[' → logprob: -20.125
    10. 'AMP' → logprob: -20.125

Token 693: '_MOV' (ID: 96227)
  Prédit: '_MOV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOV' → logprob: -4.4849443838757e-06
    2. 'MOV' → logprob: -12.750004768371582
    3. '_MOD' → logprob: -14.250004768371582
    4. '_MOVE' → logprob: -14.750004768371582
    5. '_moves' → logprob: -15.125004768371582
    6. '_M' → logprob: -16.500003814697266
    7. 'Moves' → logprob: -16.625003814697266
    8. '```' → logprob: -17.625003814697266
    9. '_' → logprob: -18.125003814697266
    10. ' _' → logprob: -19.000003814697266

Token 694: 'ES' (ID: 1759)
  Prédit: 'ES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ES' → logprob: -0.00043591417488642037
    2. 'OV' → logprob: -8.375435829162598
    3. '_MOV' → logprob: -9.375435829162598
    4. 'MOV' → logprob: -9.500435829162598
    5. 'S' → logprob: -10.750435829162598
    6. '_moves' → logprob: -11.875435829162598
    7. 'E' → logprob: -12.375435829162598
    8. 'VES' → logprob: -12.750435829162598
    9. '_ES' → logprob: -13.125435829162598
    10. 'oves' → logprob: -13.625435829162598

Token 695: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3886784017086029
    2. ':' → logprob: -1.1386784315109253
    3. '   ' → logprob: -7.388678550720215
    4. '<|end|>' → logprob: -7.638678550720215
    5. '       ' → logprob: -7.763678550720215
    6. ',' → logprob: -9.763678550720215
    7. ':

' → logprob: -10.013678550720215
    8. '):
' → logprob: -10.263678550720215
    9. '           ' → logprob: -10.638678550720215
    10. '<|end|>' → logprob: -10.763678550720215

Token 696: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14492397010326385
    2. ' nx' → logprob: -2.1449239253997803
    3. '	       ' → logprob: -5.394924163818359
    4. '(nx' → logprob: -5.769924163818359
    5. '		' → logprob: -6.144924163818359
    6. 'x' → logprob: -6.394924163818359
    7. 'nx' → logprob: -6.394924163818359
    8. ' x' → logprob: -6.769924163818359
    9. ' ' → logprob: -7.269924163818359
    10. '        ' → logprob: -7.269924163818359

Token 697: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.03809565305709839
    2. ' nx' → logprob: -3.288095712661743
    3. '           ' → logprob: -10.413095474243164
    4. '(nx' → logprob: -11.163095474243164
    5. 'n' → logprob: -12.038095474243164
    6. '               ' → logprob: -12.913095474243164
    7. 'nn' → logprob: -15.163095474243164
    8. '   ' → logprob: -15.288095474243164
    9. '```' → logprob: -15.413095474243164
    10. 'tx' → logprob: -16.163095474243164

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041208078619092703
    2. ' ,' → logprob: -8.375411987304688
    3. '=' → logprob: -8.750411987304688
    4. ' =' → logprob: -11.625411987304688
    5. ',n' → logprob: -11.875411987304688
    6. '<|end|>' → logprob: -12.500411987304688
    7. '           ' → logprob: -14.000411987304688
    8. '```' → logprob: -14.250411987304688
    9. '_,' → logprob: -14.625411987304688
    10. ',
' → logprob: -15.375411987304688

Token 699: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.12698565423488617
    2. ' ny' → logprob: -2.126985549926758
    3. 'x' → logprob: -10.251985549926758
    4. ',' → logprob: -11.876985549926758
    5. 'y' → logprob: -12.001985549926758
    6. 'n' → logprob: -12.251985549926758
    7. 'py' → logprob: -13.626985549926758
    8. ' x' → logprob: -14.251985549926758
    9. 'nyi' → logprob: -14.626985549926758
    10. 'iny' → logprob: -15.126985549926758

Token 700: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326404213905334
    2. ' =' → logprob: -1.313264012336731
    3. ',' → logprob: -13.313263893127441
    4. '=
' → logprob: -15.438263893127441
    5. '=x' → logprob: -16.188264846801758
    6. ' =
' → logprob: -16.438264846801758
    7. ' ' → logprob: -16.563264846801758
    8. '	' → logprob: -16.938264846801758
    9. '＝' → logprob: -17.438264846801758
    10. ')' → logprob: -17.438264846801758

Token 701: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.474078506231308
    2. ' x' → logprob: -0.9740785360336304
    3. '(x' → logprob: -13.599078178405762
    4. '           ' → logprob: -16.474079132080078
    5. '	x' → logprob: -16.474079132080078
    6. '   ' → logprob: -16.724079132080078
    7. ' (' → logprob: -19.349079132080078
    8. ' ' → logprob: -19.599079132080078
    9. '               ' → logprob: -20.224079132080078
    10. '    ' → logprob: -20.349079132080078

Token 702: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04858827963471413
    2. '+' → logprob: -3.048588275909424
    3. ' ' → logprob: -15.173588752746582
    4. ',' → logprob: -15.673588752746582
    5. ' ' → logprob: -15.798588752746582
    6. '[' → logprob: -16.298587799072266
    7. ' +
' → logprob: -16.423587799072266
    8. '   ' → logprob: -17.423587799072266
    9. ' plus' → logprob: -17.548587799072266
    10. '+,' → logprob: -18.048587799072266

Token 703: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0002036595979006961
    2. ' dx' → logprob: -8.500204086303711
    3. '(dx' → logprob: -15.875204086303711
    4. '_dx' → logprob: -17.50020408630371
    5. ' ' → logprob: -18.50020408630371
    6. '.dx' → logprob: -18.50020408630371
    7. '   ' → logprob: -18.75020408630371
    8. '
' → logprob: -19.87520408630371
    9. 'd' → logprob: -20.00020408630371
    10. '  ' → logprob: -20.50020408630371

Token 704: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ' ,' → logprob: -11.625011444091797
    3. ',n' → logprob: -14.000011444091797
    4. '           ' → logprob: -14.375011444091797
    5. ',
' → logprob: -14.500011444091797
    6. ',y' → logprob: -15.500011444091797
    7. '<|end|>' → logprob: -15.750011444091797
    8. '‌,' → logprob: -16.750011444091797
    9. '```' → logprob: -18.500011444091797
    10. '(),' → logprob: -18.750011444091797

Token 705: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2014133334159851
    2. ' y' → logprob: -1.7014133930206299
    3. '	y' → logprob: -16.951414108276367
    4. ' ' → logprob: -17.826414108276367
    5. 'ny' → logprob: -19.201414108276367
    6. ''y' → logprob: -19.451414108276367
    7. '   ' → logprob: -20.076414108276367
    8. 'py' → logprob: -20.701414108276367
    9. '  ' → logprob: -20.826414108276367
    10. ' ny' → logprob: -20.951414108276367

Token 706: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22118082642555237
    2. '+' → logprob: -2.0961809158325195
    3. ' +' → logprob: -2.5961809158325195
    4. ' ,' → logprob: -7.0961809158325195
    5. '+,' → logprob: -9.47118091583252
    6. ',y' → logprob: -10.72118091583252
    7. '[' → logprob: -12.22118091583252
    8. ',
' → logprob: -12.34618091583252
    9. '<|end|>' → logprob: -12.84618091583252
    10. ' ' → logprob: -13.84618091583252

Token 707: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0011851112358272076
    2. ' dy' → logprob: -6.751184940338135
    3. 'y' → logprob: -11.126185417175293
    4. 'ny' → logprob: -15.751185417175293
    5. '.dy' → logprob: -18.251184463500977
    6. ' y' → logprob: -18.376184463500977
    7. 'py' → logprob: -19.001184463500977
    8. 'dx' → logprob: -19.126184463500977
    9. 'Dy' → logprob: -19.126184463500977
    10. 'd' → logprob: -20.251184463500977

Token 708: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01008516550064087
    2. '<|end|>' → logprob: -5.010085105895996
    3. '       ' → logprob: -7.385085105895996
    4. '		' → logprob: -7.510085105895996
    5. '            
' → logprob: -7.635085105895996
    6. '<|end|>' → logprob: -8.010085105895996
    7. '	       ' → logprob: -8.135085105895996
    8. '
' → logprob: -8.260085105895996
    9. '          ' → logprob: -8.885085105895996
    10. ',' → logprob: -8.885085105895996

Token 709: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016384923947043717
    2. '<|end|>' → logprob: -9.000164031982422
    3. '       ' → logprob: -11.750164031982422
    4. '```' → logprob: -11.750164031982422
    5. '          ' → logprob: -12.125164031982422
    6. '<|end|>' → logprob: -12.375164031982422
    7. '		' → logprob: -12.875164031982422
    8. '               ' → logprob: -12.875164031982422
    9. '	       ' → logprob: -13.125164031982422
    10. '            
' → logprob: -13.250164031982422

Token 710: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6415786147117615
    2. 'if' (adapté à ' if') → logprob: -0.7665786147117615
    3. '           ' → logprob: -4.766578674316406
    4. '```' → logprob: -8.516578674316406
    5. ' in' → logprob: -9.141578674316406
    6. '[' → logprob: -10.641578674316406
    7. 'If' → logprob: -10.766578674316406
    8. ' 
' → logprob: -11.266578674316406
    9. '            
' → logprob: -11.391578674316406
    10. 'in' → logprob: -11.516578674316406

Token 711: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016052667051553726
    2. 'in' → logprob: -4.141052722930908
    3. ' ' → logprob: -11.39105224609375
    4. '0' → logprob: -12.64105224609375
    5. ' ' → logprob: -13.26605224609375
    6. '(in' → logprob: -14.76605224609375
    7. '	in' → logprob: -15.01605224609375
    8. ' (' → logprob: -15.14105224609375
    9. 'In' → logprob: -15.14105224609375
    10. '_in' → logprob: -16.01605224609375

Token 712: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.961759259458631e-06
    2. 'in' → logprob: -12.875004768371582
    3. 'park' → logprob: -13.500004768371582
    4. ' _' → logprob: -15.000004768371582
    5. '_par' → logprob: -15.750004768371582
    6. '```' → logprob: -15.875004768371582
    7. ' in' → logprob: -16.2500057220459
    8. '_in' → logprob: -16.3750057220459
    9. '\' → logprob: -17.3750057220459
    10. '_p' → logprob: -17.3750057220459

Token 713: 'park' (ID: 11174)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34848934412002563
    2. 'park' → logprob: -1.2234892845153809
    3. 'in' → logprob: -11.223489761352539
    4. '```' → logprob: -11.973489761352539
    5. 'Park' → logprob: -12.098489761352539
    6. 'x' → logprob: -12.348489761352539
    7. ' park' → logprob: -12.848489761352539
    8. 'par' → logprob: -13.598489761352539
    9. '_par' → logprob: -13.973489761352539
    10. '
' → logprob: -13.973489761352539

Token 714: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -1.652451464906335e-05
    2. ' (' → logprob: -11.125016212463379
    3. '(' → logprob: -13.625016212463379
    4. '           ' → logprob: -16.125017166137695
    5. 'nx' → logprob: -16.125017166137695
    6. '(nn' → logprob: -16.250017166137695
    7. '
' → logprob: -17.000017166137695
    8. '               ' → logprob: -17.125017166137695
    9. '(
' → logprob: -17.125017166137695
    10. '                   ' → logprob: -17.875017166137695

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.52788148727268e-05
    2. ' ,' → logprob: -10.000064849853516
    3. ',n' → logprob: -10.875064849853516
    4. '           ' → logprob: -14.875064849853516
    5. ',
' → logprob: -15.375064849853516
    6. ',y' → logprob: -15.750064849853516
    7. '<|end|>' → logprob: -16.375064849853516
    8. '               ' → logprob: -17.125064849853516
    9. ',next' → logprob: -18.000064849853516
    10. '‌,' → logprob: -18.500064849853516

Token 716: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00861528143286705
    2. ' ny' → logprob: -4.758615493774414
    3. 'y' → logprob: -16.008615493774414
    4. 'n' → logprob: -16.258615493774414
    5. '   ' → logprob: -16.383615493774414
    6. 'nym' → logprob: -16.508615493774414
    7. '
' → logprob: -16.758615493774414
    8. 'nyi' → logprob: -16.758615493774414
    9. 'nx' → logprob: -16.758615493774414
    10. 'yn' → logprob: -17.008615493774414

Token 717: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0119846872985363
    2. 'and' → logprob: -4.511984825134277
    3. ')' → logprob: -7.011984825134277
    4. '           ' → logprob: -10.386984825134277
    5. '               ' → logprob: -13.386984825134277
    6. '            ' → logprob: -13.511984825134277
    7. ' )' → logprob: -14.011984825134277
    8. '          ' → logprob: -16.13698387145996
    9. '	and' → logprob: -16.26198387145996
    10. '             ' → logprob: -16.51198387145996

Token 718: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018171364441514015
    2. 'and' → logprob: -4.018171310424805
    3. '           ' → logprob: -10.893171310424805
    4. '<|end|>' → logprob: -13.518171310424805
    5. '            ' → logprob: -14.143171310424805
    6. '               ' → logprob: -14.768171310424805
    7. '          ' → logprob: -16.018171310424805
    8. '	and' → logprob: -16.518171310424805
    9. ',' → logprob: -17.143171310424805
    10. ' ' → logprob: -17.143171310424805

Token 719: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08513643592596054
    2. '(nx' → logprob: -2.5851364135742188
    3. '(n' → logprob: -5.085136413574219
    4. '           ' → logprob: -10.835136413574219
    5. '               ' → logprob: -12.585136413574219
    6. '            ' → logprob: -12.960136413574219
    7. '(nb' → logprob: -13.085136413574219
    8. '   ' → logprob: -13.460136413574219
    9. '                   ' → logprob: -13.710136413574219
    10. '(nn' → logprob: -13.710136413574219

Token 720: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00030185774085111916
    2. '(nx' → logprob: -8.1253023147583
    3. ' nx' → logprob: -12.5003023147583
    4. 'n' → logprob: -13.8753023147583
    5. 'ny' → logprob: -14.8753023147583
    6. '(n' → logprob: -15.7503023147583
    7. '
' → logprob: -15.8753023147583
    8. 'ni' → logprob: -16.250301361083984
    9. ' (' → logprob: -16.625301361083984
    10. '(' → logprob: -17.000301361083984

Token 721: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.23917081207037e-05
    2. ',n' → logprob: -10.625041961669922
    3. ' ,' → logprob: -11.000041961669922
    4. ',
' → logprob: -14.000041961669922
    5. ',y' → logprob: -14.875041961669922
    6. '_,' → logprob: -17.125041961669922
    7. '<|end|>' → logprob: -17.125041961669922
    8. '[' → logprob: -17.250041961669922
    9. '[n' → logprob: -17.375041961669922
    10. 'ny' → logprob: -17.375041961669922

Token 722: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0011449799640104175
    2. 'nx' → logprob: -7.001144886016846
    3. ' ny' → logprob: -9.001145362854004
    4. 'y' → logprob: -10.001145362854004
    5. '(nx' → logprob: -10.626145362854004
    6. '
' → logprob: -11.251145362854004
    7. '(n' → logprob: -11.626145362854004
    8. 'water' → logprob: -11.876145362854004
    9. 'ni' → logprob: -12.876145362854004
    10. '(' → logprob: -13.626145362854004

Token 723: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019531525671482086
    2. ' in' → logprob: -4.019531726837158
    3. 'in' → logprob: -6.644531726837158
    4. ' )' → logprob: -9.51953125
    5. 'In' → logprob: -13.14453125
    6. '[' → logprob: -14.01953125
    7. '_in' → logprob: -14.64453125
    8. '),' → logprob: -15.01953125
    9. ' ' → logprob: -15.14453125
    10. ')
' → logprob: -15.26953125

Token 724: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018150994554162025
    2. 'in' → logprob: -4.018150806427002
    3. 'In' → logprob: -15.14315128326416
    4. ' ' → logprob: -15.51815128326416
    5. '           ' → logprob: -15.76815128326416
    6. ')' → logprob: -15.76815128326416
    7. ' ' → logprob: -16.143150329589844
    8. ' not' → logprob: -16.518150329589844
    9. '```' → logprob: -16.893150329589844
    10. '               ' → logprob: -17.268150329589844

Token 725: ' water' (ID: 3411)
  Prédit: 'water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'water' → logprob: -0.006715370807796717
    2. ' water' → logprob: -5.006715297698975
    3. 'Water' → logprob: -17.131715774536133
    4. 'w' → logprob: -17.381715774536133
    5. 'W' → logprob: -17.631715774536133
    6. '```' → logprob: -18.256715774536133
    7. '_water' → logprob: -18.381715774536133
    8. '   ' → logprob: -18.631715774536133
    9. '水' → logprob: -18.756715774536133
    10. '.water' → logprob: -19.506715774536133

Token 726: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.190178904333152e-05
    2. 'areas' → logprob: -10.375031471252441
    3. 'Areas' → logprob: -15.625031471252441
    4. '[' → logprob: -16.000032424926758
    5. '   ' → logprob: -16.625032424926758
    6. 'water' → logprob: -16.875032424926758
    7. '_area' → logprob: -17.000032424926758
    8. '\' → logprob: -17.000032424926758
    9. '```' → logprob: -17.000032424926758
    10. '_water' → logprob: -17.375032424926758

Token 727: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.07010027021169662
    2. '_' → logprob: -2.6951003074645996
    3. 'coverage' → logprob: -8.945099830627441
    4. 'area' → logprob: -11.945099830627441
    5. 'cover' → logprob: -11.945099830627441
    6. 'Areas' → logprob: -12.195099830627441
    7. 'water' → logprob: -13.195099830627441
    8. '[' → logprob: -13.195099830627441
    9. ' areas' → logprob: -13.445099830627441
    10. '_cover' → logprob: -13.445099830627441

Token 728: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[n' → logprob: -17.625
    3. '       ' → logprob: -17.875
    4. '   ' → logprob: -18.0
    5. '[next' → logprob: -18.625
    6. '```' → logprob: -18.75
    7. ' [' → logprob: -19.125
    8. '           ' → logprob: -19.25
    9. '][' → logprob: -20.5
    10. '[
' → logprob: -20.875

Token 729: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -3.4881879400927573e-05
    2. '[' → logprob: -10.625035285949707
    3. ' ni' → logprob: -11.500035285949707
    4. '```' → logprob: -15.875035285949707
    5. 'n' → logprob: -16.25003433227539
    6. '   ' → logprob: -16.62503433227539
    7. '-ni' → logprob: -17.37503433227539
    8. '
' → logprob: -17.87503433227539
    9. 'Ni' → logprob: -18.25003433227539
    10. '       ' → logprob: -18.37503433227539

Token 730: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11137018352746964
    2. '):' → logprob: -3.111370086669922
    3. '           ' → logprob: -3.736370086669922
    4. ')' → logprob: -3.986370086669922
    5. ':
' → logprob: -5.111370086669922
    6. '[' → logprob: -5.611370086669922
    7. ']:
' → logprob: -5.861370086669922
    8. ':' → logprob: -6.736370086669922
    9. ' and' → logprob: -6.736370086669922
    10. '               ' → logprob: -7.236370086669922

Token 731: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.554343366995454e-05
    2. '           ' → logprob: -10.125085830688477
    3. '                   ' → logprob: -11.375085830688477
    4. '                
' → logprob: -11.750085830688477
    5. ' if' → logprob: -11.875085830688477
    6. '```' → logprob: -12.500085830688477
    7. '<|end|>' → logprob: -12.750085830688477
    8. ' and' → logprob: -13.125085830688477
    9. '	           ' → logprob: -13.125085830688477
    10. '              ' → logprob: -13.125085830688477

Token 732: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1283685863018036
    2. ' if' → logprob: -2.128368616104126
    3. '                   ' → logprob: -7.003368377685547
    4. '               ' → logprob: -8.128368377685547
    5. '   ' → logprob: -8.378368377685547
    6. '	if' → logprob: -13.003368377685547
    7. ' ' → logprob: -13.503368377685547
    8. '           ' → logprob: -13.878368377685547
    9. '                       ' → logprob: -14.253368377685547
    10. 'If' → logprob: -15.378368377685547

Token 733: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.28960371017456055
    2. ' (' → logprob: -1.4146037101745605
    3. '(n' → logprob: -4.7896037101745605
    4. '(' → logprob: -9.664604187011719
    5. ' nx' → logprob: -11.039604187011719
    6. '   ' → logprob: -11.789604187011719
    7. 'nx' → logprob: -12.414604187011719
    8. '                   ' → logprob: -13.414604187011719
    9. ' not' → logprob: -13.789604187011719
    10. ' ' → logprob: -13.789604187011719

Token 734: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0019361276645213366
    2. '(nx' → logprob: -6.251935958862305
    3. 'n' → logprob: -13.001935958862305
    4. '(n' → logprob: -13.126935958862305
    5. 'ni' → logprob: -13.251935958862305
    6. ' nx' → logprob: -13.626935958862305
    7. 'ny' → logprob: -15.626935958862305
    8. '(' → logprob: -15.751935958862305
    9. ' (' → logprob: -17.251935958862305
    10. '
' → logprob: -18.251935958862305

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.849109119386412e-06
    2. ' ,' → logprob: -12.500009536743164
    3. ',n' → logprob: -12.750009536743164
    4. 'not' → logprob: -13.750009536743164
    5. '[' → logprob: -14.500009536743164
    6. ' not' → logprob: -14.750009536743164
    7. '_,' → logprob: -15.250009536743164
    8. ',
' → logprob: -15.250009536743164
    9. '<|end|>' → logprob: -15.500009536743164
    10. '‌,' → logprob: -16.250009536743164

Token 736: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00023476807109545916
    2. ' ny' → logprob: -8.375234603881836
    3. 'nx' → logprob: -12.875234603881836
    4. 'n' → logprob: -14.125234603881836
    5. 'ni' → logprob: -14.500234603881836
    6. ',' → logprob: -15.125234603881836
    7. 'nyi' → logprob: -16.250234603881836
    8. 'Ny' → logprob: -16.625234603881836
    9. ''ny' → logprob: -17.875234603881836
    10. 'y' → logprob: -18.250234603881836

Token 737: ')' (ID: 8)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.030288180336356163
    2. ')' → logprob: -3.6552882194519043
    3. 'not' → logprob: -5.530288219451904
    4. ',' → logprob: -12.030287742614746
    5. ' )' → logprob: -12.030287742614746
    6. '	not' → logprob: -14.155287742614746
    7. ':not' → logprob: -14.405287742614746
    8. '(not' → logprob: -15.155287742614746
    9. '
' → logprob: -15.155287742614746
    10. '[' → logprob: -15.280287742614746

Token 738: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029750604182481766
    2. 'not' → logprob: -3.5297505855560303
    3. '	not' → logprob: -17.27975082397461
    4. ')' → logprob: -17.40475082397461
    5. '_not' → logprob: -18.02975082397461
    6. ':not' → logprob: -18.52975082397461
    7. 'and' → logprob: -19.65475082397461
    8. '(not' → logprob: -19.90475082397461
    9. 'Not' → logprob: -20.02975082397461
    10. ' in' → logprob: -20.52975082397461

Token 739: ' in' (ID: 306)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5806345343589783
    2. '[' → logprob: -1.330634593963623
    3. ' in' → logprob: -2.455634593963623
    4. 'in' → logprob: -3.080634593963623
    5. '               ' → logprob: -3.455634593963623
    6. '                   ' → logprob: -5.080634593963623
    7. '```' → logprob: -5.705634593963623
    8. '           ' → logprob: -7.455634593963623
    9. ' visited' → logprob: -7.455634593963623
    10. '=' → logprob: -7.580634593963623

Token 740: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.9146995327901095e-05
    2. ' visited' → logprob: -10.875019073486328
    3. '           ' → logprob: -16.625019073486328
    4. '   ' → logprob: -18.000019073486328
    5. '       ' → logprob: -18.250019073486328
    6. '               ' → logprob: -18.375019073486328
    7. '```' → logprob: -18.625019073486328
    8. '                   ' → logprob: -19.125019073486328
    9. 'visible' → logprob: -20.000019073486328
    10. '
' → logprob: -20.125019073486328

Token 741: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -17.875
    3. '       ' → logprob: -18.625
    4. 'ni' → logprob: -18.875
    5. '[n' → logprob: -18.875
    6. '[
' → logprob: -18.875
    7. '
' → logprob: -19.25
    8. '   ' → logprob: -19.75
    9. '           ' → logprob: -19.75
    10. '[next' → logprob: -20.125

Token 742: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -11.250015258789062
    3. ' ni' → logprob: -13.000015258789062
    4. '```' → logprob: -17.625015258789062
    5. '-ni' → logprob: -18.750015258789062
    6. '   ' → logprob: -19.625015258789062
    7. 'n' → logprob: -19.875015258789062
    8. '           ' → logprob: -20.000015258789062
    9. 'Ni' → logprob: -20.625015258789062
    10. '       ' → logprob: -21.250015258789062

Token 743: ']:
' (ID: 22152)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010300523601472378
    2. ':' → logprob: -5.760300636291504
    3. ':
' → logprob: -5.760300636291504
    4. '[i' → logprob: -6.510300636291504
    5. '):
' → logprob: -7.135300636291504
    6. ']:
' → logprob: -7.760300636291504
    7. '                   ' → logprob: -8.135300636291504
    8. '       ' → logprob: -8.885300636291504
    9. '   ' → logprob: -9.010300636291504
    10. '               ' → logprob: -9.135300636291504

Token 744: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005180051666684449
    2. '                       ' → logprob: -8.250517845153809
    3. '               ' → logprob: -8.750517845153809
    4. '```' → logprob: -9.875517845153809
    5. '                           ' → logprob: -11.625517845153809
    6. '           ' → logprob: -11.875517845153809
    7. '                    
' → logprob: -12.375517845153809
    8. '				' → logprob: -12.375517845153809
    9. '
' → logprob: -12.500517845153809
    10. '	               ' → logprob: -12.625517845153809

Token 745: ' visited' (ID: 18416)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5913032293319702
    2. '                       ' → logprob: -1.0913032293319702
    3. ' queue' → logprob: -2.7163033485412598
    4. 'queue' → logprob: -3.7163033485412598
    5. 'visited' (adapté à ' visited') → logprob: -4.21630334854126
    6. '       ' → logprob: -6.46630334854126
    7. ' visited' → logprob: -6.71630334854126
    8. '   ' → logprob: -7.09130334854126
    9. '```' → logprob: -7.09130334854126
    10. '               ' → logprob: -7.46630334854126

Token 746: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -18.125
    3. '
' → logprob: -19.625
    4. '                   ' → logprob: -19.875
    5. '[
' → logprob: -20.375
    6. ' [' → logprob: -20.625
    7. '[n' → logprob: -20.875
    8. '   ' → logprob: -21.125
    9. '<|end|>' → logprob: -21.125
    10. '][' → logprob: -21.5

Token 747: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.250000953674316
    3. ' ni' → logprob: -14.625000953674316
    4. '-ni' → logprob: -18.625001907348633
    5. 'n' → logprob: -19.500001907348633
    6. '0' → logprob: -19.625001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '```' → logprob: -20.375001907348633
    9. '(' → logprob: -21.000001907348633
    10. '{' → logprob: -21.125001907348633

Token 748: '].' (ID: 1651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.688212614681106e-05
    2. '].' → logprob: -11.875017166137695
    3. '.add' → logprob: -12.250017166137695
    4. '.' → logprob: -12.375017166137695
    5. '][' → logprob: -15.375017166137695
    6. ').' → logprob: -16.125017166137695
    7. '                   ' → logprob: -16.250017166137695
    8. '[i' → logprob: -16.250017166137695
    9. '{' → logprob: -16.625017166137695
    10. '   ' → logprob: -17.000017166137695

Token 749: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. ' add' → logprob: -18.75
    3. '.add' → logprob: -20.5
    4. 'append' → logprob: -21.125
    5. '_add' → logprob: -22.5
    6. '	add' → logprob: -22.5
    7. '(add' → logprob: -24.375
    8. ')add' → logprob: -24.5
    9. 'adde' → logprob: -24.75
    10. 'Add' → logprob: -24.875

Token 750: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. '(nx' → logprob: -15.250001907348633
    4. '(n' → logprob: -18.625001907348633
    5. '(((' → logprob: -18.750001907348633
    6. ' ((' → logprob: -18.875001907348633
    7. '(
' → logprob: -19.125001907348633
    8. ')((' → logprob: -20.875001907348633
    9. '>((' → logprob: -21.000001907348633
    10. '[(' → logprob: -21.125001907348633

Token 751: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0031825865153223276
    2. '(nx' → logprob: -5.753182411193848
    3. ' nx' → logprob: -12.253182411193848
    4. 'ny' → logprob: -17.503183364868164
    5. ' (' → logprob: -18.003183364868164
    6. '   ' → logprob: -18.003183364868164
    7. 'n' → logprob: -18.253183364868164
    8. '(n' → logprob: -18.503183364868164
    9. 'Nx' → logprob: -19.003183364868164
    10. '(' → logprob: -19.753183364868164

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3230270445346832
    2. '(nx' → logprob: -1.3230270147323608
    3. ',n' → logprob: -5.19802713394165
    4. '(n' → logprob: -5.94802713394165
    5. 'nx' → logprob: -6.69802713394165
    6. '(' → logprob: -8.948026657104492
    7. ' (' → logprob: -9.948026657104492
    8. '                   ' → logprob: -10.198026657104492
    9. 'ny' → logprob: -10.323026657104492
    10. ' nx' → logprob: -10.448026657104492

Token 753: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -6.611323624383658e-05
    2. ' ny' → logprob: -9.625065803527832
    3. 'nyi' → logprob: -17.37506675720215
    4. 'nyt' → logprob: -18.62506675720215
    5. '
' → logprob: -19.25006675720215
    6. 'nym' → logprob: -19.75006675720215
    7. 'nx' → logprob: -19.87506675720215
    8. 'ni' → logprob: -20.25006675720215
    9. 'Ny' → logprob: -20.50006675720215
    10. 'NY' → logprob: -20.75006675720215

Token 754: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3896997570991516
    2. '                   ' → logprob: -1.7646996974945068
    3. ')' → logprob: -1.8896996974945068
    4. ')
' → logprob: -8.514699935913086
    5. '               ' → logprob: -9.264699935913086
    6. '           ' → logprob: -11.014699935913086
    7. '```' → logprob: -11.014699935913086
    8. '                       ' → logprob: -11.264699935913086
    9. '):
' → logprob: -12.014699935913086
    10. '),' → logprob: -12.514699935913086

Token 755: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009056262206286192
    2. '```' → logprob: -7.625905513763428
    3. '               ' → logprob: -9.500905990600586
    4. '           ' → logprob: -9.500905990600586
    5. '                       ' → logprob: -9.625905990600586
    6. '		           ' → logprob: -9.875905990600586
    7. '<|end|>' → logprob: -10.375905990600586
    8. '				' → logprob: -10.750905990600586
    9. '                    
' → logprob: -10.875905990600586
    10. '       ' → logprob: -11.000905990600586

Token 756: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -7.159660890465602e-05
    2. ' queue' → logprob: -9.75007152557373
    3. '                   ' → logprob: -11.25007152557373
    4. '	queue' → logprob: -15.37507152557373
    5. '   ' → logprob: -17.250072479248047
    6. '           ' → logprob: -18.250072479248047
    7. '                       ' → logprob: -19.250072479248047
    8. '.queue' → logprob: -19.375072479248047
    9. '               ' → logprob: -19.500072479248047
    10. '       ' → logprob: -19.750072479248047

Token 757: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.074907287256792e-05
    2. '.' → logprob: -10.50006103515625
    3. '.enqueue' → logprob: -10.87506103515625
    4. '.extend' → logprob: -12.12506103515625
    5. '.app' → logprob: -12.37506103515625
    6. '.put' → logprob: -13.12506103515625
    7. ').' → logprob: -14.50006103515625
    8. '.Append' → logprob: -14.75006103515625
    9. '.p' → logprob: -15.50006103515625
    10. '.add' → logprob: -15.62506103515625

Token 758: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.474159300327301
    2. '((' → logprob: -0.974159300327301
    3. '(n' → logprob: -9.474159240722656
    4. ' (' → logprob: -12.599159240722656
    5. '(
' → logprob: -13.849159240722656
    6. '```' → logprob: -15.224159240722656
    7. '(nx' → logprob: -15.349159240722656
    8. '(nn' → logprob: -15.849159240722656
    9. '(i' → logprob: -16.349159240722656
    10. '(nd' → logprob: -16.849159240722656

Token 759: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -7.896309739408025e-07
    2. ' ni' → logprob: -14.375000953674316
    3. '(' → logprob: -15.875000953674316
    4. 'nii' → logprob: -19.875
    5. ')' → logprob: -20.125
    6. '(n' → logprob: -20.25
    7. 'ny' → logprob: -20.5
    8. '-ni' → logprob: -20.75
    9. 'n' → logprob: -21.375
    10. 'nx' → logprob: -21.75

Token 760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008255688473582268
    2. ',n' → logprob: -4.883255481719971
    3. '(n' → logprob: -8.133255958557129
    4. '(nx' → logprob: -8.383255958557129
    5. ' ,' → logprob: -9.383255958557129
    6. '(' → logprob: -11.008255958557129
    7. ',x' → logprob: -11.508255958557129
    8. ',(' → logprob: -11.883255958557129
    9. ',
' → logprob: -13.008255958557129
    10. ' (' → logprob: -13.258255958557129

Token 761: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.008618354797363281
    2. ' nx' → logprob: -4.758618354797363
    3. '(nx' → logprob: -12.508618354797363
    4. 'n' → logprob: -16.633617401123047
    5. 'ny' → logprob: -17.008617401123047
    6. 'Nx' → logprob: -18.133617401123047
    7. 'nn' → logprob: -19.258617401123047
    8. 'x' → logprob: -19.633617401123047
    9. 'xn' → logprob: -20.133617401123047
    10. 'nz' → logprob: -20.383617401123047

Token 762: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.523948907968588e-05
    2. ' ,' → logprob: -10.750035285949707
    3. '<|end|>' → logprob: -11.875035285949707
    4. ',n' → logprob: -12.625035285949707
    5. ',y' → logprob: -13.500035285949707
    6. ',
' → logprob: -13.625035285949707
    7. '‌,' → logprob: -14.750035285949707
    8. '`,' → logprob: -16.62503433227539
    9. ',user' → logprob: -16.87503433227539
    10. '‍,' → logprob: -16.87503433227539

Token 763: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0004306692280806601
    2. ' ny' → logprob: -7.750430583953857
    3. 'nyi' → logprob: -16.750431060791016
    4. 'nym' → logprob: -18.500431060791016
    5. 'n' → logprob: -18.625431060791016
    6. 'nyt' → logprob: -19.625431060791016
    7. 'nye' → logprob: -19.750431060791016
    8. ''ny' → logprob: -20.125431060791016
    9. 'Ny' → logprob: -20.125431060791016
    10. ' ' → logprob: -20.500431060791016

Token 764: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00017195509281009436
    2. ')' → logprob: -9.250171661376953
    3. '))
' → logprob: -9.500171661376953
    4. ')))' → logprob: -14.375171661376953
    5. '               ' → logprob: -16.625171661376953
    6. '   ' → logprob: -16.625171661376953
    7. '       ' → logprob: -16.625171661376953
    8. '                   ' → logprob: -16.750171661376953
    9. '           ' → logprob: -17.250171661376953
    10. ' ))' → logprob: -17.500171661376953

Token 765: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05008121207356453
    2. '
' → logprob: -3.050081253051758
    3. 'return' → logprob: -7.675081253051758
    4. '    
' → logprob: -7.675081253051758
    5. '<|end|>' → logprob: -8.425081253051758
    6. '```' → logprob: -8.800081253051758
    7. ')' → logprob: -9.425081253051758
    8. ' return' → logprob: -10.050081253051758
    9. '	return' → logprob: -10.300081253051758
    10. '       ' → logprob: -12.050081253051758

Token 766: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7019683122634888
    2. 'return' → logprob: -0.7019683122634888
    3. ' return' → logprob: -5.326968193054199
    4. '
' → logprob: -5.826968193054199
    5. '	return' → logprob: -7.451968193054199
    6. '    
' → logprob: -8.2019681930542
    7. '```' → logprob: -9.5769681930542
    8. '  
' → logprob: -11.8269681930542
    9. ':return' → logprob: -11.8269681930542
    10. '{return' → logprob: -12.0769681930542

Token 767: ' No' (ID: 3004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003270023735240102
    2. '   ' → logprob: -8.500327110290527
    3. ' return' → logprob: -9.000327110290527
    4. '	return' → logprob: -15.625327110290527
    5. '#' → logprob: -17.12532615661621
    6. 'Return' → logprob: -19.37532615661621
    7. '       ' → logprob: -19.50032615661621
    8. '    
' → logprob: -20.12532615661621
    9. '
' → logprob: -20.25032615661621
    10. ' ' → logprob: -20.50032615661621

Token 768: ' path' (ID: 3104)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5133734941482544
    2. ' "' → logprob: -1.8883734941482544
    3. ' OK' → logprob: -2.013373374938965
    4. 'OK' → logprob: -2.263373374938965
    5. ' return' → logprob: -4.763373374938965
    6. 'return' → logprob: -6.388373374938965
    7. '   ' → logprob: -6.763373374938965
    8. '_OK' → logprob: -7.763373374938965
    9. ' ' → logprob: -8.013373374938965
    10. ' possible' → logprob: -9.513373374938965

Token 769: ' found' (ID: 2491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6965150833129883
    2. 'return' → logprob: -0.9465150833129883
    3. ' return' → logprob: -2.1965150833129883
    4. '
' → logprob: -6.571515083312988
    5. '	return' → logprob: -7.446515083312988
    6. '    
' → logprob: -9.071515083312988
    7. '\n' → logprob: -9.446515083312988
    8. '"' → logprob: -9.446515083312988
    9. ':return' → logprob: -10.446515083312988
    10. '\' → logprob: -10.946515083312988

Token 770: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000830355507787317
    2. 'return' → logprob: -7.250830173492432
    3. ' return' → logprob: -9.12583065032959
    4. '	return' → logprob: -12.25083065032959
    5. '    
' → logprob: -12.62583065032959
    6. '
' → logprob: -12.87583065032959
    7. '```' → logprob: -14.37583065032959
    8. '       ' → logprob: -16.000829696655273
    9. '"' → logprob: -16.375829696655273
    10. ':return' → logprob: -17.125829696655273

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023457085713744164
    2. 'return' → logprob: -3.7734570503234863
    3. ' return' → logprob: -9.023457527160645
    4. '	return' → logprob: -9.398457527160645
    5. '    
' → logprob: -12.898457527160645
    6. '```' → logprob: -12.898457527160645
    7. '
' → logprob: -13.148457527160645
    8. '{return' → logprob: -14.398457527160645
    9. ':return' → logprob: -15.523457527160645
    10. '@return' → logprob: -16.398456573486328

Token 772: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005891331238672137
    2. ' return' → logprob: -7.750589370727539
    3. '   ' → logprob: -8.750589370727539
    4. '	return' → logprob: -16.62558937072754
    5. '
' → logprob: -19.50058937072754
    6. '```' → logprob: -20.62558937072754
    7. '  ' → logprob: -21.00058937072754
    8. 'eturn' → logprob: -21.62558937072754
    9. '    
' → logprob: -21.87558937072754
    10. ' ' → logprob: -21.87558937072754

Token 773: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.2014971524477005
    2. '"' → logprob: -1.701497197151184
    3. ''' → logprob: -9.951497077941895
    4. ' '' → logprob: -11.201497077941895
    5. '"No' → logprob: -11.201497077941895
    6. ' None' → logprob: -12.201497077941895
    7. 'None' → logprob: -13.201497077941895
    8. ' ' → logprob: -14.451497077941895
    9. ' ' → logprob: -15.076497077941895
    10. '`' → logprob: -15.451497077941895

Token 774: 'NA' (ID: 9555)
  Prédit: 'NG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NG' → logprob: -0.11563970148563385
    2. 'im' → logprob: -2.4906396865844727
    3. 'IMP' → logprob: -4.490639686584473
    4. 'FAIL' → logprob: -5.365639686584473
    5. 'NA' → logprob: -5.615639686584473
    6. 'ng' → logprob: -6.240639686584473
    7. 'NO' → logprob: -6.615639686584473
    8. 'Impossible' → logprob: -6.865639686584473
    9. 'No' → logprob: -7.365639686584473
    10. 'Fail' → logprob: -7.365639686584473

Token 775: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5968255996704102
    2. '<|end|>' → logprob: -0.8468255996704102
    3. '```' → logprob: -4.59682559967041
    4. 'if' → logprob: -5.34682559967041
    5. 'def' → logprob: -6.47182559967041
    6. 'n' → logprob: -7.22182559967041
    7. '
' → logprob: -7.34682559967041
    8. '<|end|>' → logprob: -7.47182559967041
    9. 'for' → logprob: -8.09682559967041
    10. 'px' → logprob: -8.09682559967041

Token 777: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00020258675795048475
    2. 'main' → logprob: -9.125202178955078
    3. '_main' → logprob: -9.625202178955078
    4. '_' → logprob: -11.000202178955078
    5. ' _' → logprob: -12.250202178955078
    6. ' ' → logprob: -13.125202178955078
    7. ' input' → logprob: -13.625202178955078
    8. ' __' → logprob: -13.750202178955078
    9. '_input' → logprob: -14.750202178955078
    10. ' solve' → logprob: -15.125202178955078

Token 778: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0017164701130241156
    2. '():
' → logprob: -6.376716613769531
    3. ' ():' → logprob: -11.376716613769531
    4. '_' → logprob: -13.876716613769531
    5. '()' → logprob: -13.876716613769531
    6. '():
' → logprob: -14.626716613769531
    7. '(' → logprob: -15.501716613769531
    8. '():

' → logprob: -15.501716613769531
    9. '(argv' → logprob: -17.25171661376953
    10. '().' → logprob: -18.87671661376953

Token 779: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19629856944084167
    2. ' line' → logprob: -2.821298599243164
    3. ' import' → logprob: -2.946298599243164
    4. ' input' → logprob: -3.446298599243164
    5. ' readline' → logprob: -3.946298599243164
    6. '```' → logprob: -5.071298599243164
    7. ' lines' → logprob: -5.696298599243164
    8. 'import' → logprob: -5.696298599243164
    9. '    
' → logprob: -8.071298599243164
    10. '	line' → logprob: -8.696298599243164

Token 780: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.39259108901023865
    2. 'n' → logprob: -1.642591118812561
    3. ' input' → logprob: -2.8925909996032715
    4. 'for' → logprob: -3.5175909996032715
    5. 't' → logprob: -3.6425909996032715
    6. ' n' → logprob: -4.8925909996032715
    7. 'import' → logprob: -5.3925909996032715
    8. '   ' → logprob: -5.8925909996032715
    9. ' for' → logprob: -6.1425909996032715
    10. 'T' → logprob: -6.2675909996032715

Token 781: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3226708173751831
    2. '_line' → logprob: -1.447670817375183
    3. '_data' → logprob: -3.5726709365844727
    4. '_' → logprob: -5.072670936584473
    5. '_lines' → logprob: -5.697670936584473
    6. ' =' → logprob: -6.697670936584473
    7. '_str' → logprob: -7.072670936584473
    8. '=' → logprob: -8.197670936584473
    9. 's' → logprob: -8.822670936584473
    10. '_text' → logprob: -9.072670936584473

Token 782: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.464935839176178
    2. '=' → logprob: -1.4649357795715332
    3. '()' → logprob: -1.9649357795715332
    4. '   ' → logprob: -8.339936256408691
    5. '=[]' → logprob: -8.964936256408691
    6. '[]' → logprob: -9.464936256408691
    7. '()[' → logprob: -10.839936256408691
    8. '=sys' → logprob: -11.089936256408691
    9. '()
' → logprob: -11.339936256408691
    10. '=[]
' → logprob: -11.464936256408691

Token 783: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004079589620232582
    2. ' sys' → logprob: -5.504079818725586
    3. '[' → logprob: -13.754079818725586
    4. '=sys' → logprob: -17.129079818725586
    5. ' [' → logprob: -17.629079818725586
    6. '(sys' → logprob: -17.879079818725586
    7. '	sys' → logprob: -18.129079818725586
    8. 'list' → logprob: -18.504079818725586
    9. '[s' → logprob: -21.129079818725586
    10. '```' → logprob: -21.254079818725586

Token 784: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.980854959692806e-05
    2. 'stdin' → logprob: -9.875069618225098
    3. '.' → logprob: -12.000069618225098
    4. '.readline' → logprob: -12.125069618225098
    5. '.stdout' → logprob: -12.375069618225098
    6. '(stdin' → logprob: -14.000069618225098
    7. '.argv' → logprob: -14.000069618225098
    8. '().' → logprob: -14.750069618225098
    9. ' stdin' → logprob: -15.625069618225098
    10. '.std' → logprob: -15.750069618225098

Token 785: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.021945273503661156
    2. 'read' → logprob: -4.021945476531982
    3. '.readlines' → logprob: -5.646945476531982
    4. '.' → logprob: -9.271944999694824
    5. '().' → logprob: -9.771944999694824
    6. '.read' → logprob: -10.021944999694824
    7. '_read' → logprob: -10.396944999694824
    8. ' readline' → logprob: -10.896944999694824
    9. '```' → logprob: -12.646944999694824
    10. 'buffer' → logprob: -12.646944999694824

Token 786: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0040818434208631516
    2. '()' → logprob: -5.504081726074219
    3. '(' → logprob: -13.504081726074219
    4. '()
' → logprob: -14.129081726074219
    5. 'lines' → logprob: -15.129081726074219
    6. '()

' → logprob: -15.879081726074219
    7. '()\' → logprob: -16.00408172607422
    8. '.split' → logprob: -16.25408172607422
    9. '())' → logprob: -16.37908172607422
    10. '()).' → logprob: -16.37908172607422

Token 787: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.27708956599235535
    2. 'split' → logprob: -1.5270895957946777
    3. 'read' → logprob: -3.7770895957946777
    4. 'decode' → logprob: -6.277089595794678
    5. 'rstrip' → logprob: -9.52708911895752
    6. 'lines' → logprob: -12.40208911895752
    7. 'replace' → logprob: -14.27708911895752
    8. 'str' → logprob: -15.52708911895752
    9. '(split' → logprob: -16.027090072631836
    10. 'trip' → logprob: -16.027090072631836

Token 788: '()
' (ID: 1234)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0028558745980262756
    2. '()' → logprob: -6.2528557777404785
    3. '('\' → logprob: -7.0028557777404785
    4. '()\' → logprob: -11.377856254577637
    5. '()
' → logprob: -12.377856254577637
    6. '("\' → logprob: -13.502856254577637
    7. '()[' → logprob: -14.877856254577637
    8. 'line' → logprob: -15.752856254577637
    9. '()

' → logprob: -17.50285530090332
    10. '()]' → logprob: -18.25285530090332

Token 789: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1633620709180832
    2. 'idx' → logprob: -2.9133620262145996
    3. 'n' → logprob: -3.1633620262145996
    4. 'i' → logprob: -4.5383620262146
    5. 'index' → logprob: -4.5383620262146
    6. ' n' → logprob: -4.6633620262146
    7. '```' → logprob: -5.0383620262146
    8. 'def' → logprob: -5.2883620262146
    9. '    
' → logprob: -6.1633620262146
    10. 'pos' → logprob: -6.5383620262146

Token 790: ' idx' (ID: 14016)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.017731819301843643
    2. ' t' → logprob: -4.267731666564941
    3. 'T' → logprob: -5.767731666564941
    4. 'idx' (adapté à ' idx') → logprob: -8.267731666564941
    5. ' T' → logprob: -9.392731666564941
    6. '   ' → logprob: -10.392731666564941
    7. 'tc' → logprob: -10.892731666564941
    8. 'i' → logprob: -11.017731666564941
    9. ' idx' → logprob: -11.517731666564941
    10. 'px' → logprob: -12.142731666564941

Token 791: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08913282305002213
    2. ' =' → logprob: -2.464132785797119
    3. '+=' → logprob: -9.464133262634277
    4. ' +=' → logprob: -10.339133262634277
    5. '   ' → logprob: -10.589133262634277
    6. '<|end|>' → logprob: -10.964133262634277
    7. '```' → logprob: -11.839133262634277
    8. '_' → logprob: -11.964133262634277
    9. '0' → logprob: -12.089133262634277
    10. ' ' → logprob: -12.714133262634277

Token 792: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '1' → logprob: -16.375051498413086
    4. '2' → logprob: -18.125051498413086
    5. '```' → logprob: -18.375051498413086
    6. '   ' → logprob: -19.125051498413086
    7. '[' → logprob: -20.062551498413086
    8. '۰' → logprob: -20.562551498413086
    9. '  ' → logprob: -21.125051498413086
    10. '=' → logprob: -21.312551498413086

Token 793: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '1' → logprob: -17.25
    4. '=' → logprob: -20.75
    5. '[' → logprob: -20.75
    6. '2' → logprob: -21.25
    7. '   ' → logprob: -21.5
    8. '```' → logprob: -22.125
    9. '۰' → logprob: -22.25
    10. '  ' → logprob: -23.4375

Token 794: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1906050443649292
    2. 't' → logprob: -2.9406051635742188
    3. ' n' → logprob: -3.1906051635742188
    4. 'while' → logprob: -3.1906051635742188
    5. '   ' → logprob: -4.065605163574219
    6. ' while' → logprob: -4.315605163574219
    7. ' t' → logprob: -5.565605163574219
    8. '
' → logprob: -6.315605163574219
    9. 'T' → logprob: -6.940605163574219
    10. ' T' → logprob: -7.190605163574219

Token 795: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8095590472221375
    2. 't' → logprob: -1.4345591068267822
    3. 'while' → logprob: -1.6845591068267822
    4. '   ' → logprob: -2.4345591068267822
    5. ' while' → logprob: -4.059558868408203
    6. ' t' → logprob: -4.309558868408203
    7. ' n' → logprob: -4.559558868408203
    8. 'T' → logprob: -6.934558868408203
    9. 'num' → logprob: -7.809558868408203
    10. ' T' → logprob: -7.934558868408203

Token 796: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2377796471118927
    2. 't' → logprob: -1.8627796173095703
    3. ' while' → logprob: -3.4877796173095703
    4. 'n' → logprob: -4.11277961730957
    5. 'T' → logprob: -5.11277961730957
    6. ' t' → logprob: -6.36277961730957
    7. '
' → logprob: -7.11277961730957
    8. ' T' → logprob: -8.11277961730957
    9. '   ' → logprob: -8.36277961730957
    10. ' n' → logprob: -8.86277961730957

Token 797: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.042281363159418106
    2. ' idx' → logprob: -3.29228138923645
    3. ' True' → logprob: -6.042281150817871
    4. 'True' → logprob: -6.292281150817871
    5. '	idx' → logprob: -12.917281150817871
    6. '(idx' → logprob: -13.917281150817871
    7. '   ' → logprob: -15.292281150817871
    8. 'int' → logprob: -15.542281150817871
    9. ' ' → logprob: -15.667281150817871
    10. '_idx' → logprob: -16.292282104492188

Token 798: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36037319898605347
    2. '   ' → logprob: -2.1103732585906982
    3. '       ' → logprob: -2.3603732585906982
    4. ':
' → logprob: -2.6103732585906982
    5. ',' → logprob: -4.735373020172119
    6. '<|end|>' → logprob: -6.235373020172119
    7. '[' → logprob: -7.360373020172119
    8. ' and' → logprob: -7.985373020172119
    9. '<|end|>' → logprob: -8.485373497009277
    10. '():' → logprob: -8.735373497009277

Token 799: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6427729725837708
    2. 'if' → logprob: -0.8927729725837708
    3. 'n' → logprob: -3.267772912979126
    4. ' if' → logprob: -3.767772912979126
    5. '       ' → logprob: -6.517773151397705
    6. ' n' → logprob: -7.017773151397705
    7. 'try' → logprob: -8.267772674560547
    8. 'line' → logprob: -8.392772674560547
    9. '```' → logprob: -8.517772674560547
    10. '	if' → logprob: -9.642772674560547

Token 800: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4810367226600647
    2. 'if' (adapté à ' if') → logprob: -0.9810367226600647
    3. ' if' → logprob: -5.10603666305542
    4. ' n' → logprob: -7.48103666305542
    5. '   ' → logprob: -8.356037139892578
    6. 'try' → logprob: -10.231037139892578
    7. 'N' → logprob: -10.356037139892578
    8. '	if' → logprob: -13.106037139892578
    9. '	n' → logprob: -13.481037139892578
    10. ' try' → logprob: -13.981037139892578

Token 801: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00027063372544944286
    2. ' idx' → logprob: -8.25027084350586
    3. '	idx' → logprob: -12.12527084350586
    4. '   ' → logprob: -12.75027084350586
    5. '_idx' → logprob: -14.50027084350586
    6. '(idx' → logprob: -15.37527084350586
    7. ' ' → logprob: -15.87527084350586
    8. '[idx' → logprob: -17.12527084350586
    9. 'index' → logprob: -17.50027084350586
    10. '  ' → logprob: -18.25027084350586

Token 802: ' +' (ID: 659)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0007741317385807633
    2. ' >=' → logprob: -7.625773906707764
    3. '+' → logprob: -8.250774383544922
    4. '==' → logprob: -11.000774383544922
    5. ']>=' → logprob: -12.000774383544922
    6. ')>=' → logprob: -13.750774383544922
    7. '```' → logprob: -14.875774383544922
    8. '=' → logprob: -15.250774383544922
    9. '≥' → logprob: -15.250774383544922
    10. '+=' → logprob: -16.000774383544922

Token 803: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8778833746910095
    2. '4' → logprob: -0.8778833746910095
    3. '5' → logprob: -2.6278834342956543
    4. '1' → logprob: -2.7528834342956543
    5. '2' → logprob: -3.5028834342956543
    6. '6' → logprob: -6.127883434295654
    7. '7' → logprob: -7.877883434295654
    8. '8' → logprob: -11.127882957458496
    9. '9' → logprob: -12.502882957458496
    10. '=' → logprob: -13.252882957458496

Token 804: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7778250575065613
    2. '4' → logprob: -0.9028250575065613
    3. '5' → logprob: -2.777825117111206
    4. '2' → logprob: -3.277825117111206
    5. '1' → logprob: -3.402825117111206
    6. '6' → logprob: -6.402824878692627
    7. '7' → logprob: -8.027825355529785
    8. '8' → logprob: -11.152825355529785
    9. '9' → logprob: -12.277825355529785
    10. '10' → logprob: -13.027825355529785

Token 805: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.013256695121526718
    2. ' >=' → logprob: -4.513256549835205
    3. '>' → logprob: -6.138256549835205
    4. ' >' → logprob: -11.138257026672363
    5. ']>=' → logprob: -11.388257026672363
    6. ')>=' → logprob: -11.513257026672363
    7. '```' → logprob: -12.263257026672363
    8. '+' → logprob: -12.513257026672363
    9. '==' → logprob: -13.763257026672363
    10. '   ' → logprob: -14.263257026672363

Token 806: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00043126524542458355
    2. ' len' → logprob: -7.750431060791016
    3. '(len' → logprob: -15.625431060791016
    4. '=len' → logprob: -16.250431060791016
    5. '<len' → logprob: -16.750431060791016
    6. 'input' → logprob: -16.750431060791016
    7. ' ' → logprob: -17.000431060791016
    8. '	len' → logprob: -17.375431060791016
    9. 'length' → logprob: -17.500431060791016
    10. '[len' → logprob: -17.625431060791016

Token 807: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012206579558551311
    2. '(input' → logprob: -4.512206554412842
    3. ' input' → logprob: -6.762206554412842
    4. '=input' → logprob: -14.51220703125
    5. '_input' → logprob: -15.26220703125
    6. ',input' → logprob: -15.38720703125
    7. '	input' → logprob: -15.88720703125
    8. '<input' → logprob: -16.13720703125
    9. '[input' → logprob: -16.76220703125
    10. ')' → logprob: -17.01220703125

Token 808: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.1328112632036209
    2. '):' → logprob: -2.5078113079071045
    3. '):
' → logprob: -3.2578113079071045
    4. ')' → logprob: -6.632811069488525
    5. '_' → logprob: -6.757811069488525
    6. '   ' → logprob: -7.132811069488525
    7. '(lines' → logprob: -8.132811546325684
    8. '_LINES' → logprob: -8.382811546325684
    9. 'Lines' → logprob: -8.507811546325684
    10. '```' → logprob: -9.882811546325684

Token 809: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3541739284992218
    2. ':
' → logprob: -1.6041738986968994
    3. ':' → logprob: -2.6041738986968994
    4. 'or' → logprob: -4.2291741371154785
    5. ' and' → logprob: -5.8541741371154785
    6. '):
' → logprob: -5.9791741371154785
    7. '):' → logprob: -6.7291741371154785
    8. ')' → logprob: -7.4791741371154785
    9. '   ' → logprob: -7.6041741371154785
    10. 'and' → logprob: -7.9791741371154785

Token 810: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.045396558940410614
    2. '       ' → logprob: -3.170396566390991
    3. ' break' → logprob: -6.545396327972412
    4. 'break' → logprob: -7.670396327972412
    5. '   ' → logprob: -8.42039680480957
    6. '```' → logprob: -8.79539680480957
    7. ',' → logprob: -10.17039680480957
    8. '<|end|>' → logprob: -10.92039680480957
    9. '	       ' → logprob: -11.92039680480957
    10. '               ' → logprob: -12.04539680480957

Token 811: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.542772114276886
    2. 'break' (adapté à ' break') → logprob: -1.1677720546722412
    3. '           ' → logprob: -2.667772054672241
    4. ' break' → logprob: -3.667772054672241
    5. 'return' → logprob: -5.16777229309082
    6. '   ' → logprob: -5.66777229309082
    7. '	break' → logprob: -5.79277229309082
    8. ' return' → logprob: -8.66777229309082
    9. '               ' → logprob: -9.04277229309082
    10. '	' → logprob: -9.16777229309082

Token 812: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008858248591423035
    2. '   ' → logprob: -5.2588582038879395
    3. '        
' → logprob: -6.7588582038879395
    4. '
' → logprob: -7.1338582038879395
    5. '```' → logprob: -7.3838582038879395
    6. ' ' → logprob: -8.883858680725098
    7. 'x' → logprob: -9.008858680725098
    8. '<|end|>' → logprob: -9.133858680725098
    9. ',' → logprob: -9.383858680725098
    10. '  
' → logprob: -9.758858680725098

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4417542815208435
    2. '   ' → logprob: -1.4417543411254883
    3. ' px' → logprob: -2.8167543411254883
    4. 'x' → logprob: -3.4417543411254883
    5. 'px' → logprob: -4.191754341125488
    6. '(px' → logprob: -5.316754341125488
    7. '        
' → logprob: -5.441754341125488
    8. ' x' → logprob: -7.191754341125488
    9. '    
' → logprob: -7.441754341125488
    10. 'n' → logprob: -7.441754341125488

Token 814: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' (adapté à ' px') → logprob: -0.026499314233660698
    2. ' px' → logprob: -3.7764992713928223
    3. '   ' → logprob: -6.651499271392822
    4. 'p' → logprob: -6.776499271392822
    5. 'x' → logprob: -7.651499271392822
    6. '       ' → logprob: -9.15149974822998
    7. '(px' → logprob: -9.40149974822998
    8. 'Px' → logprob: -10.27649974822998
    9. '_px' → logprob: -10.77649974822998
    10. 'py' → logprob: -11.02649974822998

Token 815: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08847618103027344
    2. '=' → logprob: -2.7134761810302734
    3. ' =' → logprob: -4.088476181030273
    4. ' ,' → logprob: -6.463476181030273
    5. ' ' → logprob: -11.588476181030273
    6. ',p' → logprob: -12.088476181030273
    7. '<|end|>' → logprob: -12.213476181030273
    8. ')' → logprob: -12.463476181030273
    9. '   ' → logprob: -12.838476181030273
    10. 'x' → logprob: -12.963476181030273

Token 816: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.941850526549388e-06
    2. ' int' → logprob: -11.750007629394531
    3. '[int' → logprob: -21.50000762939453
    4. '
' → logprob: -22.12500762939453
    5. '<int' → logprob: -22.12500762939453
    6. '(int' → logprob: -22.37500762939453
    7. '=int' → logprob: -22.50000762939453
    8. '   ' → logprob: -22.62500762939453
    9. ' ' → logprob: -22.75000762939453
    10. '  ' → logprob: -23.62500762939453

Token 817: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.7053759519476444e-05
    2. '(' → logprob: -10.250057220458984
    3. 'input' → logprob: -10.750057220458984
    4. ' (' → logprob: -16.125057220458984
    5. '[input' → logprob: -17.375057220458984
    6. '(
' → logprob: -17.625057220458984
    7. '=input' → logprob: -18.000057220458984
    8. ' input' → logprob: -18.500057220458984
    9. ',input' → logprob: -19.250057220458984
    10. '<input' → logprob: -19.625057220458984

Token 818: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.0280383548888494e-06
    2. '_tokens' → logprob: -14.000000953674316
    3. 'Lines' → logprob: -16.750001907348633
    4. '[_' → logprob: -17.250001907348633
    5. '_words' → logprob: -17.250001907348633
    6. 'lines' → logprob: -17.750001907348633
    7. '[' → logprob: -17.875001907348633
    8. '[idx' → logprob: -18.125001907348633
    9. '_strings' → logprob: -18.125001907348633
    10. '_inputs' → logprob: -18.250001907348633

Token 819: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. ' [' → logprob: -17.25
    4. 'idx' → logprob: -17.375
    5. '[
' → logprob: -19.5
    6. '[index' → logprob: -19.5
    7. '```' → logprob: -19.5
    8. '   ' → logprob: -19.75
    9. ' idx' → logprob: -19.75
    10. '	idx' → logprob: -20.125

Token 820: ']);' (ID: 34389)
  Prédit: '])
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.18537771701812744
    2. '])' → logprob: -2.185377597808838
    3. '+' → logprob: -3.185377597808838
    4. ']);' → logprob: -4.185377597808838
    5. ' +' → logprob: -8.935378074645996
    6. '])
' → logprob: -11.435378074645996
    7. '   ' → logprob: -11.560378074645996
    8. ' ])
' → logprob: -11.810378074645996
    9. 'idx' → logprob: -12.185378074645996
    10. ']);
' → logprob: -12.185378074645996

Token 821: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.4749194383621216
    2. ' py' → logprob: -0.9749194383621216
    3. 'idx' → logprob: -7.724919319152832
    4. ' idx' → logprob: -7.974919319152832
    5. 'px' → logprob: -10.599919319152832
    6. '_py' → logprob: -11.349919319152832
    7. '(py' → logprob: -11.849919319152832
    8. ' px' → logprob: -12.474919319152832
    9. '.py' → logprob: -12.474919319152832
    10. 'ppy' → logprob: -13.599919319152832

Token 822: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2524034082889557
    2. ' =' → logprob: -1.5024033784866333
    3. '=int' → logprob: -8.127403259277344
    4. '<|end|>' → logprob: -9.127403259277344
    5. ')' → logprob: -10.627403259277344
    6. '=
' → logprob: -10.877403259277344
    7. '<|end|>' → logprob: -12.002403259277344
    8. '=input' → logprob: -12.377403259277344
    9. '=index' → logprob: -13.252403259277344
    10. ' =
' → logprob: -13.252403259277344

Token 823: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. ' int' → logprob: -12.000006675720215
    3. '=int' → logprob: -16.7500057220459
    4. '[int' → logprob: -18.5000057220459
    5. '(int' → logprob: -18.8750057220459
    6. '<int' → logprob: -19.1250057220459
    7. '	int' → logprob: -21.8750057220459
    8. '
' → logprob: -21.8750057220459
    9. ':int' → logprob: -22.1250057220459
    10. ']int' → logprob: -22.1250057220459

Token 824: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00043472214019857347
    2. 'input' → logprob: -7.750434875488281
    3. '(' → logprob: -12.625434875488281
    4. ' input' → logprob: -14.500434875488281
    5. ' (' → logprob: -15.750434875488281
    6. '[input' → logprob: -16.00043487548828
    7. '=input' → logprob: -17.12543487548828
    8. ',input' → logprob: -17.12543487548828
    9. '<input' → logprob: -18.50043487548828
    10. '(
' → logprob: -18.62543487548828

Token 825: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00026050140149891376
    2. 'lines' → logprob: -8.875260353088379
    3. 'idx' → logprob: -9.750260353088379
    4. '[idx' → logprob: -10.000260353088379
    5. 'Lines' → logprob: -11.375260353088379
    6. '+' → logprob: -13.000260353088379
    7. 'input' → logprob: -13.750260353088379
    8. '_inputs' → logprob: -14.000260353088379
    9. '_tokens' → logprob: -15.000260353088379
    10. '```' → logprob: -15.375260353088379

Token 826: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.000577696890104562
    2. ']' → logprob: -8.375577926635742
    3. '+' → logprob: -8.750577926635742
    4. 'idx' → logprob: -8.875577926635742
    5. '])' → logprob: -10.750577926635742
    6. '][' → logprob: -12.500577926635742
    7. '_lines' → logprob: -12.625577926635742
    8. ')' → logprob: -12.875577926635742
    9. '[++' → logprob: -12.875577926635742
    10. '```' → logprob: -12.875577926635742

Token 827: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009201543871313334
    2. ' +' → logprob: -7.000920295715332
    3. '])' → logprob: -11.750920295715332
    4. ']);' → logprob: -15.250920295715332
    5. '+
' → logprob: -15.250920295715332
    6. '])
' → logprob: -16.375919342041016
    7. '＋' → logprob: -17.500919342041016
    8. '1' → logprob: -17.625919342041016
    9. '   ' → logprob: -18.000919342041016
    10. ']+' → logprob: -18.625919342041016

Token 828: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014190302230417728
    2. '2' → logprob: -4.264190196990967
    3. ' ' → logprob: -11.264190673828125
    4. '0' → logprob: -11.389190673828125
    5. '3' → logprob: -13.514190673828125
    6. '4' → logprob: -14.889190673828125
    7. '```' → logprob: -14.889190673828125
    8. '5' → logprob: -15.826690673828125
    9. '   ' → logprob: -16.326690673828125
    10. 'idx' → logprob: -16.701690673828125

Token 829: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13103064894676208
    2. ')
' → logprob: -2.131030559539795
    3. ');' → logprob: -5.506030559539795
    4. ');
' → logprob: -11.256031036376953
    5. '       ' → logprob: -11.756031036376953
    6. ')
' → logprob: -11.881031036376953
    7. ';' → logprob: -13.881031036376953
    8. '),' → logprob: -13.881031036376953
    9. ')

' → logprob: -14.881031036376953
    10. ').' → logprob: -15.256031036376953

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08661221712827682
    2. 'idx' → logprob: -2.9616122245788574
    3. '```' → logprob: -3.8366122245788574
    4. '<|end|>' → logprob: -5.961612224578857
    5. ' idx' → logprob: -6.086612224578857
    6. '[idx' → logprob: -6.836612224578857
    7. '	idx' → logprob: -6.961612224578857
    8. '   ' → logprob: -7.211612224578857
    9. '        
' → logprob: -7.836612224578857
    10. '
' → logprob: -8.0866117477417

Token 831: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.07084783166646957
    2. 'if' → logprob: -2.945847749710083
    3. 'n' → logprob: -4.195847988128662
    4. '       ' → logprob: -7.445847988128662
    5. ' idx' → logprob: -9.320847511291504
    6. '   ' → logprob: -10.445847511291504
    7. 'num' → logprob: -10.570847511291504
    8. 'k' → logprob: -10.945847511291504
    9. ' if' → logprob: -11.445847511291504
    10. 'count' → logprob: -12.070847511291504

Token 832: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04366149753332138
    2. ' +=' → logprob: -3.168661594390869
    3. '+' → logprob: -7.418661594390869
    4. '=' → logprob: -10.043661117553711
    5. ']+=' → logprob: -12.293661117553711
    6. '```' → logprob: -12.668661117553711
    7. '   ' → logprob: -12.793661117553711
    8. '<|end|>' → logprob: -12.918661117553711
    9. '+='' → logprob: -13.168661117553711
    10. '+="' → logprob: -13.793661117553711

Token 833: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '3' → logprob: -17.000003814697266
    4. '   ' → logprob: -17.375003814697266
    5. '```' → logprob: -18.000003814697266
    6. '２' → logprob: -19.187503814697266
    7. '  ' → logprob: -19.937503814697266
    8. '۲' → logprob: -20.187503814697266
    9. '
' → logprob: -20.625003814697266
    10. '`' → logprob: -20.750003814697266

Token 834: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '3' → logprob: -19.125
    4. '２' → logprob: -20.3125
    5. '   ' → logprob: -20.875
    6. '۲' → logprob: -21.1875
    7. '```' → logprob: -21.375
    8. '0' → logprob: -21.875
    9. '4' → logprob: -21.875
    10. '22' → logprob: -22.0

Token 835: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5203214883804321
    2. '       ' → logprob: -1.0203214883804321
    3. 'n' → logprob: -3.2703213691711426
    4. ' if' → logprob: -5.020321369171143
    5. '   ' → logprob: -8.6453218460083
    6. ' n' → logprob: -8.6453218460083
    7. '```' → logprob: -9.1453218460083
    8. '
' → logprob: -10.3953218460083
    9. '	if' → logprob: -10.3953218460083
    10. '        
' → logprob: -10.6453218460083

Token 836: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7561739683151245
    2. 'if' → logprob: -0.8811739683151245
    3. '       ' → logprob: -2.256174087524414
    4. ' if' → logprob: -4.506174087524414
    5. ' n' → logprob: -8.006174087524414
    6. '```' → logprob: -9.506174087524414
    7. '        
' → logprob: -11.131174087524414
    8. 'num' → logprob: -11.631174087524414
    9. '   ' → logprob: -11.756174087524414
    10. '	if' → logprob: -12.506174087524414

Token 837: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01252872496843338
    2. 'if' (adapté à ' if') → logprob: -4.387528896331787
    3. ' if' → logprob: -12.012528419494629
    4. '   ' → logprob: -12.262528419494629
    5. ' n' → logprob: -12.637528419494629
    6. 'm' → logprob: -13.262528419494629
    7. 's' → logprob: -13.887528419494629
    8. '```' → logprob: -13.887528419494629
    9. 'num' → logprob: -14.637528419494629
    10. 'k' → logprob: -15.512528419494629

Token 838: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.02813231758773327
    2. ' px' → logprob: -4.278132438659668
    3. '(px' → logprob: -4.278132438659668
    4. '_px' → logprob: -13.278132438659668
    5. '(' → logprob: -14.153132438659668
    6. 'n' → logprob: -15.278132438659668
    7. ':px' → logprob: -15.528132438659668
    8. 'Px' → logprob: -16.27813148498535
    9. 'py' → logprob: -16.40313148498535
    10. '(p' → logprob: -17.27813148498535

Token 839: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35148072242736816
    2. '==' → logprob: -1.2264807224273682
    3. '==-' → logprob: -6.476480484008789
    4. '=' → logprob: -7.851480484008789
    5. '<' → logprob: -8.101480484008789
    6. ' ' → logprob: -8.476480484008789
    7. '<|end|>' → logprob: -8.476480484008789
    8. ' <' → logprob: -9.601480484008789
    9. ',' → logprob: -9.726480484008789
    10. '[' → logprob: -9.851480484008789

Token 840: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002811199810821563
    2. '0' → logprob: -8.50028133392334
    3. ' -' → logprob: -9.50028133392334
    4. 'py' → logprob: -13.00028133392334
    5. ' ' → logprob: -15.25028133392334
    6. '```' → logprob: -16.375280380249023
    7. '
' → logprob: -17.000280380249023
    8. 'y' → logprob: -17.000280380249023
    9. '−' → logprob: -17.500280380249023
    10. ' py' → logprob: -17.500280380249023

Token 841: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.652451464906335e-05
    2. '0' → logprob: -11.250016212463379
    3. 'py' → logprob: -13.250016212463379
    4. ' -' → logprob: -13.875016212463379
    5. '99' → logprob: -14.500016212463379
    6. '9' → logprob: -16.625017166137695
    7. '999' → logprob: -17.000017166137695
    8. '−' → logprob: -18.500017166137695
    9. '10' → logprob: -18.625017166137695
    10. 'px' → logprob: -19.000017166137695

Token 842: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00976919662207365
    2. 'and' → logprob: -4.634768962860107
    3. ' ' → logprob: -11.259769439697266
    4. '0' → logprob: -16.134769439697266
    5. ' ' → logprob: -16.884769439697266
    6. 'x' → logprob: -17.259769439697266
    7. '	and' → logprob: -17.384769439697266
    8. ' и' → logprob: -17.509769439697266
    9. 'py' → logprob: -17.634769439697266
    10. ' py' → logprob: -18.384769439697266

Token 843: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.01815006136894226
    2. ' py' → logprob: -4.0181498527526855
    3. '(py' → logprob: -16.643150329589844
    4. 'px' → logprob: -17.018150329589844
    5. '_py' → logprob: -19.518150329589844
    6. '.py' → logprob: -19.768150329589844
    7. 'Py' → logprob: -21.268150329589844
    8. '
' → logprob: -21.893150329589844
    9. ' ' → logprob: -22.518150329589844
    10. ' px' → logprob: -23.143150329589844

Token 844: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4290388226509094
    2. '==' → logprob: -1.0540387630462646
    3. '=' → logprob: -8.929039001464844
    4. '<|end|>' → logprob: -9.679039001464844
    5. '==-' → logprob: -10.054039001464844
    6. '()==' → logprob: -10.304039001464844
    7. ' =' → logprob: -10.804039001464844
    8. '0' → logprob: -11.179039001464844
    9. ')==' → logprob: -11.929039001464844
    10. ']==' → logprob: -11.929039001464844

Token 845: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. 'and' → logprob: -19.12506675720215
    4. '
' → logprob: -19.75006675720215
    5. ' and' → logprob: -20.50006675720215
    6. '-' → logprob: -20.62506675720215
    7. '   ' → logprob: -21.00006675720215
    8. '```' → logprob: -21.12506675720215
    9. '۰' → logprob: -21.25006675720215
    10. '  ' → logprob: -21.37506675720215

Token 846: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '-' → logprob: -15.00000286102295
    4. ' -' → logprob: -17.125003814697266
    5. '<|end|>' → logprob: -19.000003814697266
    6. '۰' → logprob: -20.000003814697266
    7. '00' → logprob: -21.250003814697266
    8. '1' → logprob: -21.750003814697266
    9. 'end' → logprob: -21.875003814697266
    10. '<|end|>' → logprob: -22.000003814697266

Token 847: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04010951146483421
    2. '   ' → logprob: -4.165109634399414
    3. ':' → logprob: -4.415109634399414
    4. '           ' → logprob: -5.665109634399414
    5. '       ' → logprob: -5.790109634399414
    6. 'and' → logprob: -5.915109634399414
    7. ':
' → logprob: -6.040109634399414
    8. ' ' → logprob: -10.165109634399414
    9. '	and' → logprob: -10.665109634399414
    10. '  ' → logprob: -12.290109634399414

Token 848: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042523935437202454
    2. ' and' → logprob: -3.6675238609313965
    3. '   ' → logprob: -4.4175238609313965
    4. '       ' → logprob: -5.5425238609313965
    5. 'and' → logprob: -9.667524337768555
    6. ' ' → logprob: -10.417524337768555
    7. ':' → logprob: -12.542524337768555
    8. '  ' → logprob: -12.792524337768555
    9. ':
' → logprob: -13.042524337768555
    10. '          ' → logprob: -13.042524337768555

Token 849: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.25501808524131775
    2. '           ' → logprob: -1.5050181150436401
    3. ' break' → logprob: -6.13001823425293
    4. '	break' → logprob: -7.75501823425293
    5. '       ' → logprob: -8.00501823425293
    6. '		' → logprob: -9.50501823425293
    7. 'return' → logprob: -9.88001823425293
    8. '               ' → logprob: -11.38001823425293
    9. '	       ' → logprob: -12.25501823425293
    10. '   ' → logprob: -13.63001823425293

Token 850: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08975652605295181
    2. 'n' → logprob: -2.464756488800049
    3. ' n' → logprob: -8.339756965637207
    4. '   ' → logprob: -8.464756965637207
    5. '```' → logprob: -8.839756965637207
    6. '	n' → logprob: -9.089756965637207
    7. '        
' → logprob: -9.714756965637207
    8. '
' → logprob: -10.464756965637207
    9. ',n' → logprob: -12.089756965637207
    10. '	' → logprob: -12.464756965637207

Token 851: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030597023665905
    2. '       ' → logprob: -3.530596971511841
    3. ' n' → logprob: -7.53059720993042
    4. '   ' → logprob: -8.280596733093262
    5. '```' → logprob: -10.030596733093262
    6. '	n' → logprob: -12.405596733093262
    7. 'num' → logprob: -12.780596733093262
    8. '        
' → logprob: -13.280596733093262
    9. '``' → logprob: -14.780596733093262
    10. ' ' → logprob: -14.905596733093262

Token 852: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -7.52919222577475e-05
    2. '       ' → logprob: -9.875075340270996
    3. '   ' → logprob: -10.875075340270996
    4. ' n' → logprob: -12.500075340270996
    5. '```' → logprob: -14.000075340270996
    6. '        
' → logprob: -15.875075340270996
    7. '	n' → logprob: -16.37507438659668
    8. 'num' → logprob: -17.00007438659668
    9. '
' → logprob: -17.50007438659668
    10. '``' → logprob: -18.25007438659668

Token 853: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141421258449554
    2. ' =' → logprob: -1.7014142274856567
    3. '=int' → logprob: -14.701414108276367
    4. '   ' → logprob: -15.326414108276367
    5. '=n' → logprob: -15.701414108276367
    6. '＝' → logprob: -16.451414108276367
    7. ' ' → logprob: -16.701414108276367
    8. 'n' → logprob: -17.951414108276367
    9. ',' → logprob: -18.451414108276367
    10. '       ' → logprob: -18.826414108276367

Token 854: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '=int' → logprob: -17.250335693359375
    4. '	int' → logprob: -17.750335693359375
    5. '[int' → logprob: -18.750335693359375
    6. '<int' → logprob: -19.000335693359375
    7. ']int' → logprob: -19.250335693359375
    8. ':int' → logprob: -20.125335693359375
    9. '(int' → logprob: -20.250335693359375
    10. '   ' → logprob: -21.000335693359375

Token 855: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011048642918467522
    2. 'input' → logprob: -4.511048793792725
    3. ' input' → logprob: -14.386048316955566
    4. '[input' → logprob: -16.261049270629883
    5. '(' → logprob: -16.636049270629883
    6. '=input' → logprob: -17.511049270629883
    7. ' (' → logprob: -17.636049270629883
    8. ',input' → logprob: -18.136049270629883
    9. '<input' → logprob: -18.886049270629883
    10. '	input' → logprob: -19.636049270629883

Token 856: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -7.004696090007201e-05
    2. '[input' → logprob: -10.250069618225098
    3. '(input' → logprob: -11.000069618225098
    4. 'input' → logprob: -11.875069618225098
    5. 'lines' → logprob: -12.500069618225098
    6. '_inputs' → logprob: -12.625069618225098
    7. 'Lines' → logprob: -12.750069618225098
    8. '_strings' → logprob: -15.000069618225098
    9. '_input' → logprob: -15.250069618225098
    10. '```' → logprob: -16.500070571899414

Token 857: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.375000953674316
    3. '[input' → logprob: -15.625000953674316
    4. 'idx' → logprob: -16.0
    5. '(idx' → logprob: -17.125
    6. ')[' → logprob: -17.25
    7. ' [' → logprob: -17.625
    8. '```' → logprob: -17.75
    9. '   ' → logprob: -17.875
    10. '[index' → logprob: -18.125

Token 858: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07538338005542755
    2. ')
' → logprob: -2.825383424758911
    3. '])' → logprob: -5.075383186340332
    4. '[idx' → logprob: -5.700383186340332
    5. ');' → logprob: -5.950383186340332
    6. ']);' → logprob: -7.200383186340332
    7. '])
' → logprob: -8.700383186340332
    8. ']' → logprob: -9.825383186340332
    9. ')]' → logprob: -9.825383186340332
    10. ')])' → logprob: -10.325383186340332

Token 859: '       ' (ID: 309)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1405411809682846
    2. '[idx' → logprob: -3.0155410766601562
    3. ' idx' → logprob: -3.3905410766601562
    4. '```' → logprob: -4.265541076660156
    5. '(idx' → logprob: -4.265541076660156
    6. '<|end|>' → logprob: -4.890541076660156
    7. '	idx' → logprob: -5.015541076660156
    8. '       ' → logprob: -5.890541076660156
    9. '   ' → logprob: -6.765541076660156
    10. '<|end|>' → logprob: -7.765541076660156

Token 860: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0003476209531072527
    2. ' idx' → logprob: -8.250348091125488
    3. '	idx' → logprob: -10.500348091125488
    4. '```' → logprob: -10.875348091125488
    5. '[idx' → logprob: -11.000348091125488
    6. '       ' → logprob: -11.125348091125488
    7. '_idx' → logprob: -12.625348091125488
    8. '(idx' → logprob: -13.375348091125488
    9. '
' → logprob: -13.625348091125488
    10. '   ' → logprob: -13.750348091125488

Token 861: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06196970492601395
    2. ' +=' → logprob: -2.811969757080078
    3. ']+=' → logprob: -13.561969757080078
    4. '+' → logprob: -14.936969757080078
    5. '   ' → logprob: -15.436969757080078
    6. '```' → logprob: -15.436969757080078
    7. '       ' → logprob: -16.311969757080078
    8. '=' → logprob: -17.686969757080078
    9. '+="' → logprob: -18.561969757080078
    10. '+='' → logprob: -18.936969757080078

Token 862: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. 'n' → logprob: -20.25
    4. '```' → logprob: -20.875
    5. '１' → logprob: -21.375
    6. '(' → logprob: -21.375
    7. '
' → logprob: -21.625
    8. '+' → logprob: -21.875
    9. '(n' → logprob: -22.25
    10. '   ' → logprob: -22.25

Token 863: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '0' → logprob: -16.25
    4. 'n' → logprob: -18.625
    5. '3' → logprob: -19.125
    6. '
' → logprob: -19.375
    7. '```' → logprob: -19.9375
    8. '１' → logprob: -20.1875
    9. '+' → logprob: -20.375
    10. '   ' → logprob: -20.375

Token 864: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3239860236644745
    2. 'spr' → logprob: -1.3239860534667969
    3. 's' → logprob: -5.323986053466797
    4. '   ' → logprob: -5.948986053466797
    5. '```' → logprob: -5.948986053466797
    6. 'sprites' → logprob: -8.198986053466797
    7. '	s' → logprob: -9.073986053466797
    8. '        
' → logprob: -9.823986053466797
    9. '``' → logprob: -10.448986053466797
    10. ' sprink' → logprob: -11.198986053466797

Token 865: '       ' (ID: 309)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.15305984020233154
    2. '       ' → logprob: -2.028059959411621
    3. 's' → logprob: -5.028059959411621
    4. '   ' → logprob: -6.153059959411621
    5. '```' → logprob: -6.653059959411621
    6. 'sprites' → logprob: -8.653059959411621
    7. ' sprink' → logprob: -9.653059959411621
    8. 'scr' → logprob: -10.028059959411621
    9. '	s' → logprob: -10.403059959411621
    10. ' spr' → logprob: -11.153059959411621

Token 866: ' sprink' (ID: 80706)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -7.779520092299208e-05
    2. ' sprink' → logprob: -9.500078201293945
    3. '       ' → logprob: -13.500078201293945
    4. 'sprites' → logprob: -14.375078201293945
    5. 'spar' → logprob: -14.625078201293945
    6. '        
' → logprob: -15.250078201293945
    7. '```' → logprob: -15.625078201293945
    8. '   ' → logprob: -16.375078201293945
    9. 'spring' → logprob: -17.750078201293945
    10. 'spl' → logprob: -17.875078201293945

Token 867: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -8.180258191714529e-06
    2. 'ers' → logprob: -11.875008583068848
    3. 'ler' → logprob: -14.500008583068848
    4. 'l' → logprob: -14.750008583068848
    5. 'ulers' → logprob: -16.37500762939453
    6. '_l' → logprob: -16.37500762939453
    7. '[' → logprob: -18.00000762939453
    8. 'layers' → logprob: -18.12500762939453
    9. '[l' → logprob: -18.75000762939453
    10. '#' → logprob: -18.75000762939453

Token 868: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759600400924683
    2. ' =' → logprob: -0.8259600400924683
    3. '=[]' → logprob: -10.825960159301758
    4. '=[]
' → logprob: -14.825960159301758
    5. '[]' → logprob: -16.450960159301758
    6. '.append' → logprob: -16.700960159301758
    7. '   ' → logprob: -16.825960159301758
    8. '=[' → logprob: -17.200960159301758
    9. 's' → logprob: -17.575960159301758
    10. '＝' → logprob: -17.825960159301758

Token 869: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3285277783870697
    2. '[]
' → logprob: -2.0785276889801025
    3. '[(' → logprob: -2.5785276889801025
    4. '[' → logprob: -2.5785276889801025
    5. '[input' → logprob: -6.328527927398682
    6. '[int' → logprob: -7.078527927398682
    7. '[list' → logprob: -9.578527450561523
    8. '[str' → logprob: -9.703527450561523
    9. '[array' → logprob: -9.953527450561523
    10. '[next' → logprob: -10.578527450561523

Token 870: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5082529783248901
    2. 'for' → logprob: -1.5082529783248901
    3. ' for' → logprob: -1.7582529783248901
    4. '<|end|>' → logprob: -6.13325309753418
    5. '	for' → logprob: -6.50825309753418
    6. '   ' → logprob: -7.13325309753418
    7. '```' → logprob: -9.63325309753418
    8. '[' → logprob: -9.63325309753418
    9. 'while' → logprob: -9.88325309753418
    10. '	' → logprob: -10.38325309753418

Token 871: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001887591351987794
    2. ' for' → logprob: -8.750188827514648
    3. '       ' → logprob: -10.500188827514648
    4. '	for' → logprob: -13.000188827514648
    5. '   ' → logprob: -14.750188827514648
    6. '```' → logprob: -18.12518882751465
    7. 'while' → logprob: -18.12518882751465
    8. '
' → logprob: -19.75018882751465
    9. '	' → logprob: -20.50018882751465
    10. '        
' → logprob: -21.00018882751465

Token 872: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.8497312895488e-05
    2. ' _' → logprob: -9.750068664550781
    3. '_i' → logprob: -11.625068664550781
    4. '_in' → logprob: -14.375068664550781
    5. 'i' → logprob: -15.500068664550781
    6. '_s' → logprob: -15.875068664550781
    7. '_j' → logprob: -16.75006866455078
    8. ' in' → logprob: -17.00006866455078
    9. '_range' → logprob: -17.00006866455078
    10. '_n' → logprob: -18.12506866455078

Token 873: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.41491982340812683
    2. '_' → logprob: -1.1649198532104492
    3. ' in' → logprob: -3.789919853210449
    4. 'range' → logprob: -5.664919853210449
    5. 'i' → logprob: -6.914919853210449
    6. '_in' → logprob: -8.53991985321045
    7. ' range' → logprob: -8.78991985321045
    8. ' _' → logprob: -8.91491985321045
    9. '_i' → logprob: -9.78991985321045
    10. '_range' → logprob: -10.91491985321045

Token 874: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00019889144459739327
    2. ' range' → logprob: -9.000199317932129
    3. '_' → logprob: -9.500199317932129
    4. '_range' → logprob: -14.375199317932129
    5. 'in' → logprob: -17.500198364257812
    6. '	range' → logprob: -17.750198364257812
    7. '(range' → logprob: -18.375198364257812
    8. '
' → logprob: -18.750198364257812
    9. 'r' → logprob: -19.750198364257812
    10. '[' → logprob: -20.500198364257812

Token 875: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47424039244651794
    2. 'n' → logprob: -0.9742404222488403
    3. ' n' → logprob: -8.72424030303955
    4. '_n' → logprob: -15.47424030303955
    5. '	n' → logprob: -15.59924030303955
    6. 'range' → logprob: -15.97424030303955
    7. 'int' → logprob: -16.099241256713867
    8. '(' → logprob: -16.349241256713867
    9. '0' → logprob: -16.474241256713867
    10. '   ' → logprob: -16.974241256713867

Token 876: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4074893295764923
    2. ':
' → logprob: -1.53248929977417
    3. ':' → logprob: -2.78248929977417
    4. '):' → logprob: -3.28248929977417
    5. '       ' → logprob: -4.78248929977417
    6. '():
' → logprob: -5.15748929977417
    7. ',' → logprob: -5.90748929977417
    8. '   ' → logprob: -7.28248929977417
    9. '           ' → logprob: -7.40748929977417
    10. '<|end|>' → logprob: -7.90748929977417

Token 877: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2507973313331604
    2. '       ' → logprob: -2.7507972717285156
    3. '(' → logprob: -3.1257972717285156
    4. '(x' → logprob: -4.125797271728516
    5. '(s' → logprob: -4.125797271728516
    6. '   ' → logprob: -4.250797271728516
    7. '<|end|>' → logprob: -4.500797271728516
    8. ' (' → logprob: -4.625797271728516
    9. 'x' → logprob: -4.750797271728516
    10. 's' → logprob: -5.000797271728516

Token 878: ' x' (ID: 1215)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.03813857585191727
    2. 'x' (adapté à ' x') → logprob: -3.4131386280059814
    3. ' sx' → logprob: -5.788138389587402
    4. 's' → logprob: -6.788138389587402
    5. '           ' → logprob: -8.663138389587402
    6. '       ' → logprob: -10.538138389587402
    7. ' x' → logprob: -10.788138389587402
    8. '   ' → logprob: -10.913138389587402
    9. 'spr' → logprob: -11.163138389587402
    10. ' ' → logprob: -11.913138389587402

Token 879: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5461128950119019
    2. ' =' → logprob: -1.2961128950119019
    3. ',' → logprob: -1.9211128950119019
    4. '=int' → logprob: -8.046113014221191
    5. ',y' → logprob: -8.921113014221191
    6. 's' → logprob: -9.296113014221191
    7. ',s' → logprob: -9.796113014221191
    8. ' ,' → logprob: -9.921113014221191
    9. 'x' → logprob: -10.671113014221191
    10. ',x' → logprob: -10.671113014221191

Token 880: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. ' int' → logprob: -15.375
    3. '[int' → logprob: -18.5
    4. '(int' → logprob: -19.75
    5. '<int' → logprob: -19.875
    6. '	int' → logprob: -21.125
    7. ']int' → logprob: -22.375
    8. '=int' → logprob: -22.5
    9. 'ints' → logprob: -22.625
    10. 'intval' → logprob: -24.0

Token 881: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04862279072403908
    2. 'input' → logprob: -3.0486228466033936
    3. '[input' → logprob: -10.423623085021973
    4. ' input' → logprob: -12.673623085021973
    5. '=input' → logprob: -13.798623085021973
    6. '(' → logprob: -14.423623085021973
    7. '<input' → logprob: -14.548623085021973
    8. ',input' → logprob: -15.423623085021973
    9. '	input' → logprob: -16.673622131347656
    10. '(
' → logprob: -16.798622131347656

Token 882: '_lines' (ID: 42980)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9936212301254272
    2. '_lines' → logprob: -1.3686212301254272
    3. '[input' → logprob: -1.3686212301254272
    4. '(input' → logprob: -2.118621349334717
    5. 'Lines' → logprob: -8.618620872497559
    6. '_inputs' → logprob: -8.993620872497559
    7. '=input' → logprob: -9.368620872497559
    8. 'lines' → logprob: -9.493620872497559
    9. '<input' → logprob: -9.618620872497559
    10. 'inputs' → logprob: -10.118620872497559

Token 883: '[idx' (ID: 25582)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.01397543866187334
    2. 'input' → logprob: -4.763975620269775
    3. '(input' → logprob: -5.513975620269775
    4. '[idx' → logprob: -6.638975620269775
    5. ' input' → logprob: -12.388975143432617
    6. '<input' → logprob: -13.388975143432617
    7. '[index' → logprob: -14.763975143432617
    8. '=input' → logprob: -14.763975143432617
    9. '	input' → logprob: -14.888975143432617
    10. 'idx' → logprob: -14.888975143432617

Token 884: ']);' (ID: 34389)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.480014830827713
    2. ')' → logprob: -1.3550148010253906
    3. ');' → logprob: -2.1050148010253906
    4. '),' → logprob: -6.980014801025391
    5. '           ' → logprob: -8.48001480102539
    6. ';' → logprob: -9.10501480102539
    7. ')x' → logprob: -9.60501480102539
    8. ',' → logprob: -10.35501480102539
    9. ')
' → logprob: -10.60501480102539
    10. ');
' → logprob: -11.10501480102539

Token 885: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.39852020144462585
    2. ' y' → logprob: -1.1485202312469482
    3. 'idx' → logprob: -5.148519992828369
    4. ' idx' → logprob: -5.398519992828369
    5. '	y' → logprob: -7.023519992828369
    6. '	idx' → logprob: -8.773520469665527
    7. ' ' → logprob: -8.898520469665527
    8. ',y' → logprob: -11.648520469665527
    9. ' ' → logprob: -12.023520469665527
    10. ' ypos' → logprob: -12.023520469665527

Token 886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6331967711448669
    2. ' =' → logprob: -0.7581967711448669
    3. '[idx' → logprob: -7.883196830749512
    4. '=input' → logprob: -9.758196830749512
    5. '=
' → logprob: -10.008196830749512
    6. '<|end|>' → logprob: -10.258196830749512
    7. '=int' → logprob: -10.383196830749512
    8. '=user' → logprob: -10.883196830749512
    9. 's' → logprob: -12.008196830749512
    10. ')' → logprob: -12.883196830749512

Token 887: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003441722597926855
    2. 'input' → logprob: -5.75344181060791
    3. ' int' → logprob: -8.25344181060791
    4. ' input' → logprob: -12.75344181060791
    5. '=int' → logprob: -15.00344181060791
    6. '[int' → logprob: -15.12844181060791
    7. '(int' → logprob: -16.378440856933594
    8. '<int' → logprob: -17.128440856933594
    9. '=input' → logprob: -17.378440856933594
    10. '(input' → logprob: -17.628440856933594

Token 888: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7338523864746094
    2. '[input' → logprob: -0.7338523864746094
    3. '(input' → logprob: -3.2338523864746094
    4. '[int' → logprob: -8.10885238647461
    5. ' input' → logprob: -9.60885238647461
    6. 'int' → logprob: -10.10885238647461
    7. '<input' → logprob: -10.23385238647461
    8. '=input' → logprob: -10.35885238647461
    9. '[idx' → logprob: -12.73385238647461
    10. ',input' → logprob: -13.48385238647461

Token 889: '_lines' (ID: 42980)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.01913643255829811
    2. '_lines' → logprob: -4.144136428833008
    3. 'idx' → logprob: -5.894136428833008
    4. ']' → logprob: -9.519136428833008
    5. '[' → logprob: -9.644136428833008
    6. '[
' → logprob: -10.519136428833008
    7. '][' → logprob: -10.644136428833008
    8. 'lines' → logprob: -10.644136428833008
    9. '[user' → logprob: -11.019136428833008
    10. ' idx' → logprob: -11.269136428833008

Token 890: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.011321663856506348
    2. 'idx' → logprob: -4.636321544647217
    3. '+' → logprob: -6.511321544647217
    4. ']' → logprob: -10.386322021484375
    5. ' idx' → logprob: -12.011322021484375
    6. ']+' → logprob: -12.011322021484375
    7. '])
' → logprob: -12.386322021484375
    8. '(idx' → logprob: -12.636322021484375
    9. '	idx' → logprob: -12.886322021484375
    10. '```' → logprob: -13.011322021484375

Token 891: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012724967673420906
    2. '])' → logprob: -6.876272678375244
    3. ' +' → logprob: -8.751272201538086
    4. '])
' → logprob: -10.001272201538086
    5. ']);' → logprob: -10.501272201538086
    6. '+
' → logprob: -12.626272201538086
    7. 'idx' → logprob: -13.376272201538086
    8. '1' → logprob: -13.626272201538086
    9. ']+' → logprob: -14.751272201538086
    10. '+=' → logprob: -14.751272201538086

Token 892: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014489953173324466
    2. '2' → logprob: -8.875144958496094
    3. ' ' → logprob: -12.750144958496094
    4. '+' → logprob: -14.375144958496094
    5. 'idx' → logprob: -14.937644958496094
    6. '3' → logprob: -15.187644958496094
    7. '```' → logprob: -15.500144958496094
    8. '   ' → logprob: -15.750144958496094
    9. '0' → logprob: -16.437644958496094
    10. '])' → logprob: -17.125144958496094

Token 893: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5867313742637634
    2. ')
' → logprob: -0.8367313742637634
    3. '       ' → logprob: -4.961731433868408
    4. '           ' → logprob: -6.211731433868408
    5. ');' → logprob: -6.836731433868408
    6. '<|end|>' → logprob: -8.21173095703125
    7. ')
' → logprob: -9.21173095703125
    8. '),' → logprob: -10.21173095703125
    9. 'idx' → logprob: -10.33673095703125
    10. '')
' → logprob: -10.71173095703125

Token 894: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11377526819705963
    2. '           ' → logprob: -2.3637752532958984
    3. '   ' → logprob: -5.613775253295898
    4. '<|end|>' → logprob: -5.613775253295898
    5. 'idx' → logprob: -5.863775253295898
    6. '
' → logprob: -6.863775253295898
    7. '```' → logprob: -6.863775253295898
    8. '<|end|>' → logprob: -8.238775253295898
    9. '               ' → logprob: -8.363775253295898
    10. '	idx' → logprob: -9.363775253295898

Token 895: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.2307358831167221
    2. '           ' → logprob: -1.7307358980178833
    3. '       ' → logprob: -3.7307357788085938
    4. ' idx' → logprob: -5.605735778808594
    5. '	idx' → logprob: -7.355735778808594
    6. '   ' → logprob: -8.605735778808594
    7. '[idx' → logprob: -8.730735778808594
    8. '
' → logprob: -9.230735778808594
    9. '```' → logprob: -9.980735778808594
    10. 'index' → logprob: -10.730735778808594

Token 896: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6329809427261353
    2. ' +=' → logprob: -0.7579809427261353
    3. '   ' → logprob: -9.007981300354004
    4. '       ' → logprob: -9.632981300354004
    5. '```' → logprob: -9.757981300354004
    6. ']+=' → logprob: -9.882981300354004
    7. '+' → logprob: -10.507981300354004
    8. '<|end|>' → logprob: -11.507981300354004
    9. '=' → logprob: -11.882981300354004
    10. '.append' → logprob: -11.882981300354004

Token 897: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.62502670288086
    4. '۲' → logprob: -18.50002670288086
    5. '２' → logprob: -19.12502670288086
    6. '```' → logprob: -19.50002670288086
    7. '२' → logprob: -21.00002670288086
    8. '٢' → logprob: -21.12502670288086
    9. '  ' → logprob: -21.25002670288086
    10. '	' → logprob: -21.50002670288086

Token 898: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -17.375003814697266
    4. '   ' → logprob: -17.375003814697266
    5. '۲' → logprob: -17.500003814697266
    6. '1' → logprob: -17.625003814697266
    7. '２' → logprob: -18.125003814697266
    8. '```' → logprob: -18.750003814697266
    9. '२' → logprob: -19.437503814697266
    10. '٢' → logprob: -19.562503814697266

Token 899: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042268994729965925
    2. '       ' → logprob: -8.125422477722168
    3. '   ' → logprob: -9.625422477722168
    4. '<|end|>' → logprob: -10.750422477722168
    5. '```' → logprob: -10.875422477722168
    6. ',' → logprob: -12.375422477722168
    7. 's' → logprob: -12.500422477722168
    8. 'spr' → logprob: -13.375422477722168
    9. '          ' → logprob: -13.625422477722168
    10. '<|end|>' → logprob: -13.625422477722168

Token 900: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009972932748496532
    2. '       ' → logprob: -4.634973049163818
    3. '```' → logprob: -9.25997257232666
    4. '   ' → logprob: -9.63497257232666
    5. 'spr' → logprob: -10.50997257232666
    6. '<|end|>' → logprob: -11.00997257232666
    7. 's' → logprob: -12.25997257232666
    8. '               ' → logprob: -13.88497257232666
    9. '         ' → logprob: -14.00997257232666
    10. '<|end|>' → logprob: -14.00997257232666

Token 901: ' sprink' (ID: 80706)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01362154446542263
    2. 'spr' → logprob: -4.8886213302612305
    3. '       ' → logprob: -5.1386213302612305
    4. '   ' → logprob: -9.76362133026123
    5. 's' → logprob: -10.13862133026123
    6. ' sprink' → logprob: -10.51362133026123
    7. '         ' → logprob: -13.13862133026123
    8. '          ' → logprob: -13.76362133026123
    9. '               ' → logprob: -14.01362133026123
    10. '```' → logprob: -14.51362133026123

Token 902: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -9.639096970204264e-05
    2. 'ers' → logprob: -9.375096321105957
    3. 'l' → logprob: -11.625096321105957
    4. 'ler' → logprob: -13.125096321105957
    5. 'layers' → logprob: -14.750096321105957
    6. 'alers' → logprob: -16.500097274780273
    7. 'ulers' → logprob: -16.875097274780273
    8. 's' → logprob: -17.875097274780273
    9. 'ayers' → logprob: -18.125097274780273
    10. 'kers' → logprob: -18.375097274780273

Token 903: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.925185440806672e-05
    2. '.' → logprob: -9.250099182128906
    3. ' .' → logprob: -13.500099182128906
    4. 'append' → logprob: -13.875099182128906
    5. '.app' → logprob: -14.750099182128906
    6. ').' → logprob: -15.750099182128906
    7. '.Append' → logprob: -17.125099182128906
    8. '.ap' → logprob: -17.125099182128906
    9. '.extend' → logprob: -18.000099182128906
    10. '.
' → logprob: -18.375099182128906

Token 904: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005157403065823019
    2. '(' → logprob: -7.750515937805176
    3. '(x' → logprob: -9.375515937805176
    4. '(
' → logprob: -16.00051498413086
    5. '[(' → logprob: -17.62551498413086
    6. ' (' → logprob: -18.12551498413086
    7. ' ((' → logprob: -18.62551498413086
    8. '(y' → logprob: -19.75051498413086
    9. '(tuple' → logprob: -19.75051498413086
    10. '(("' → logprob: -20.62551498413086

Token 905: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ' x' → logprob: -14.125000953674316
    3. '(x' → logprob: -16.0
    4. ')x' → logprob: -17.625
    5. '	x' → logprob: -20.5
    6. '"x' → logprob: -21.0
    7. '0' → logprob: -21.5
    8. '
' → logprob: -21.625
    9. ',x' → logprob: -21.625
    10. '{x' → logprob: -21.875

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004168489249423146
    2. ',y' → logprob: -7.8754167556762695
    3. ' ,' → logprob: -10.25041675567627
    4. ',
' → logprob: -13.62541675567627
    5. ',user' → logprob: -16.625417709350586
    6. '<|end|>' → logprob: -18.000417709350586
    7. '```' → logprob: -18.375417709350586
    8. '‌,' → logprob: -18.625417709350586
    9. ',p' → logprob: -18.625417709350586
    10. '),' → logprob: -19.000417709350586

Token 907: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0031777136027812958
    2. ' y' → logprob: -5.753177642822266
    3. ' ' → logprob: -19.253177642822266
    4. '           ' → logprob: -19.378177642822266
    5. '	y' → logprob: -19.378177642822266
    6. '   ' → logprob: -19.753177642822266
    7. '       ' → logprob: -20.128177642822266
    8. '
' → logprob: -20.503177642822266
    9. ')y' → logprob: -20.503177642822266
    10. '    ' → logprob: -20.878177642822266

Token 908: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.253797709941864
    2. ')' → logprob: -1.5037977695465088
    3. '))
' → logprob: -6.37879753112793
    4. ')
' → logprob: -8.75379753112793
    5. '       ' → logprob: -12.00379753112793
    6. ')))' → logprob: -12.75379753112793
    7. '   ' → logprob: -13.00379753112793
    8. '))

' → logprob: -15.12879753112793
    9. '))
' → logprob: -16.37879753112793
    10. '));' → logprob: -16.62879753112793

Token 909: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13055068254470825
    2. 'result' → logprob: -2.2555506229400635
    3. '   ' → logprob: -4.755550861358643
    4. '```' → logprob: -5.380550861358643
    5. ' result' → logprob: -6.130550861358643
    6. '
' → logprob: -7.505550861358643
    7. '        
' → logprob: -7.630550861358643
    8. 'results' → logprob: -8.255550384521484
    9. '<|end|>' → logprob: -8.255550384521484
    10. 'print' → logprob: -8.380550384521484

Token 910: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5919685363769531
    2. 'result' → logprob: -0.8419685363769531
    3. '       ' → logprob: -4.466968536376953
    4. ' result' → logprob: -5.841968536376953
    5. 'res' → logprob: -7.216968536376953
    6. ' print' → logprob: -7.716968536376953
    7. '
' → logprob: -9.341968536376953
    8. '```' → logprob: -9.716968536376953
    9. '   ' → logprob: -9.841968536376953
    10. 'answer' → logprob: -10.216968536376953

Token 911: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0011974901426583529
    2. '(' → logprob: -6.751197338104248
    3. 'solve' → logprob: -10.626197814941406
    4. '(
' → logprob: -13.001197814941406
    5. ' solve' → logprob: -15.001197814941406
    6. '(resolve' → logprob: -16.001197814941406
    7. '(sol' → logprob: -16.251197814941406
    8. '(solution' → logprob: -16.376197814941406
    9. '()' → logprob: -17.001197814941406
    10. ' (' → logprob: -17.626197814941406

Token 912: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -9.088346359931165e-07
    2. 'solve' → logprob: -14.000000953674316
    3. 'olv' → logprob: -18.125
    4. 'ove' → logprob: -18.25
    5. 'OLVE' → logprob: -18.625
    6. '(' → logprob: -18.625
    7. 'ol' → logprob: -19.0
    8. 'olver' → logprob: -19.375
    9. 't' → logprob: -20.875
    10. '.solve' → logprob: -21.125

Token 913: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -5.5577775128767826e-06
    2. '(py' → logprob: -12.375005722045898
    3. '(' → logprob: -13.750005722045898
    4. ' (' → logprob: -16.3750057220459
    5. ')' → logprob: -17.0000057220459
    6. '(p' → logprob: -17.3750057220459
    7. '(
' → logprob: -17.5000057220459
    8. '(pc' → logprob: -18.0000057220459
    9. 'px' → logprob: -19.1250057220459
    10. ':px' → logprob: -19.5000057220459

Token 914: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010354319238103926
    2. ' ,' → logprob: -9.250103950500488
    3. '(py' → logprob: -12.250103950500488
    4. ',
' → logprob: -13.500103950500488
    5. 'py' → logprob: -14.375103950500488
    6. '.py' → logprob: -15.625103950500488
    7. '_py' → logprob: -15.625103950500488
    8. ',p' → logprob: -16.000102996826172
    9. '(Py' → logprob: -16.875102996826172
    10. 'Py' → logprob: -17.125102996826172

Token 915: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0001584850688232109
    2. ' py' → logprob: -8.750158309936523
    3. '(py' → logprob: -17.625158309936523
    4. '_py' → logprob: -18.875158309936523
    5. '.py' → logprob: -19.125158309936523
    6. 'ply' → logprob: -19.500158309936523
    7. '
' → logprob: -19.875158309936523
    8. 'px' → logprob: -19.875158309936523
    9. 'Py' → logprob: -20.500158309936523
    10. '   ' → logprob: -20.625158309936523

Token 916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002821928064804524
    2. ',n' → logprob: -8.375282287597656
    3. ' ,' → logprob: -9.875282287597656
    4. ',
' → logprob: -16.750282287597656
    5. '(n' → logprob: -17.625282287597656
    6. '   ' → logprob: -18.500282287597656
    7. '```' → logprob: -18.500282287597656
    8. 'n' → logprob: -18.500282287597656
    9. ',p' → logprob: -19.125282287597656
    10. '，' → logprob: -19.250282287597656

Token 917: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004309076175559312
    2. ' n' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.875431060791016
    4. '	n' → logprob: -17.000431060791016
    5. ')n' → logprob: -17.625431060791016
    6. '       ' → logprob: -17.625431060791016
    7. '(n' → logprob: -18.125431060791016
    8. '```' → logprob: -18.125431060791016
    9. ')' → logprob: -18.875431060791016
    10. '    ' → logprob: -19.250431060791016

Token 918: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ',s' → logprob: -11.625009536743164
    3. ' ,' → logprob: -15.500009536743164
    4. ',
' → logprob: -16.875009536743164
    5. '```' → logprob: -20.750009536743164
    6. '[' → logprob: -20.875009536743164
    7. ',p' → logprob: -21.000009536743164
    8. '
' → logprob: -21.875009536743164
    9. '،' → logprob: -22.125009536743164
    10. '   ' → logprob: -22.250009536743164

Token 919: ' sprink' (ID: 80706)
  Prédit: 'spr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spr' → logprob: -0.062018319964408875
    2. ' sprink' → logprob: -2.812018394470215
    3. ' sprinkler' → logprob: -10.437018394470215
    4. 's' → logprob: -11.812018394470215
    5. 'spar' → logprob: -12.687018394470215
    6. 'sprites' → logprob: -12.812018394470215
    7. 'spring' → logprob: -13.562018394470215
    8. 'watering' → logprob: -14.062018394470215
    9. 'spl' → logprob: -14.187018394470215
    10. '   ' → logprob: -14.312018394470215

Token 920: 'lers' (ID: 15137)
  Prédit: 'lers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lers' → logprob: -2.6537622034084052e-05
    2. 'l' → logprob: -11.12502670288086
    3. 'kers' → logprob: -12.12502670288086
    4. 'kl' → logprob: -12.25002670288086
    5. 'ers' → logprob: -14.25002670288086
    6. 'ler' → logprob: -15.37502670288086
    7. 'k' → logprob: -15.75002670288086
    8. 'ulers' → logprob: -15.87502670288086
    9. 'lk' → logprob: -16.37502670288086
    10. 'akers' → logprob: -17.25002670288086

Token 921: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0788951888680458
    2. ')' → logprob: -2.578895092010498
    3. ' ))' → logprob: -13.328895568847656
    4. '))
' → logprob: -13.828895568847656
    5. ')))' → logprob: -13.953895568847656
    6. '()))' → logprob: -14.578895568847656
    7. '(' → logprob: -14.578895568847656
    8. '   ' → logprob: -15.078895568847656
    9. '())' → logprob: -15.953895568847656
    10. ',' → logprob: -16.203895568847656

Token 922: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006881289882585406
    2. '```' → logprob: -7.375688076019287
    3. '
' → logprob: -10.000688552856445
    4. '<|end|>' → logprob: -11.750688552856445
    5. ' if' → logprob: -12.125688552856445
    6. '``' → logprob: -13.625688552856445
    7. 'for' → logprob: -14.875688552856445
    8. '#' → logprob: -14.875688552856445
    9. 'import' → logprob: -15.250688552856445
    10. 'main' → logprob: -16.125688552856445

Token 923: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5759504437446594
    2. ' __' → logprob: -0.8259504437446594
    3. '_' → logprob: -11.950950622558594
    4. 'name' → logprob: -13.825950622558594
    5. '_name' → logprob: -14.075950622558594
    6. '___' → logprob: -14.200950622558594
    7. ' ' → logprob: -14.825950622558594
    8. 'if' → logprob: -14.825950622558594
    9. '/__' → logprob: -14.825950622558594
    10. '```' → logprob: -15.075950622558594

Token 924: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10916624963283539
    2. ' ==' → logprob: -2.734166145324707
    3. '==' → logprob: -3.859166145324707
    4. '.__' → logprob: -4.484166145324707
    5. ' __' → logprob: -6.484166145324707
    6. 'name' → logprob: -6.859166145324707
    7. '__.__' → logprob: -7.359166145324707
    8. 'if' → logprob: -7.609166145324707
    9. '[' → logprob: -7.734166145324707
    10. '__.' → logprob: -8.109166145324707

Token 925: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002158146962756291
    2. '__.__' → logprob: -8.500215530395508
    3. '__.' → logprob: -12.250215530395508
    4. '```' → logprob: -13.375215530395508
    5. '__["' → logprob: -13.750215530395508
    6. '___' → logprob: -13.750215530395508
    7. '==' → logprob: -14.000215530395508
    8. '____' → logprob: -14.125215530395508
    9. '__[' → logprob: -14.250215530395508
    10. '__
' → logprob: -14.250215530395508

Token 926: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1905336081981659
    2. '==' → logprob: -1.8155336380004883
    3. '=="' → logprob: -5.065533638000488
    4. ' ==' → logprob: -6.065533638000488
    5. '=='' → logprob: -6.690533638000488
    6. '==
' → logprob: -8.565533638000488
    7. '__.__' → logprob: -8.815533638000488
    8. '[' → logprob: -9.190533638000488
    9. '===' → logprob: -9.940533638000488
    10. '__
' → logprob: -10.190533638000488

Token 927: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02326073683798313
    2. ''' → logprob: -3.7732608318328857
    3. '__' → logprob: -11.273261070251465
    4. ' "__' → logprob: -12.898261070251465
    5. ' '__' → logprob: -17.27326011657715
    6. '("__' → logprob: -17.52326011657715
    7. '"name' → logprob: -17.77326011657715
    8. ''"' → logprob: -18.14826011657715
    9. '   ' → logprob: -18.64826011657715
    10. '"'' → logprob: -18.89826011657715

Token 928: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12753282487392426
    2. '__' → logprob: -2.127532720565796
    3. 'name' → logprob: -7.877532958984375
    4. ''' → logprob: -8.877532958984375
    5. '"' → logprob: -9.502532958984375
    6. 'python' → logprob: -12.502532958984375
    7. '___' → logprob: -13.377532958984375
    8. '_main' → logprob: -13.627532958984375
    9. '__":
' → logprob: -13.752532958984375
    10. 'py' → logprob: -14.127532958984375

Token 929: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.027299558743834496
    2. '__' → logprob: -3.652299642562866
    3. '__':
' → logprob: -7.027299404144287
    4. '__.' → logprob: -10.152299880981445
    5. '__:' → logprob: -10.652299880981445
    6. '__["' → logprob: -10.777299880981445
    7. '__.__' → logprob: -11.027299880981445
    8. '__
' → logprob: -12.777299880981445
    9. '__
' → logprob: -13.152299880981445
    10. '__[' → logprob: -13.527299880981445

Token 930: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00011093381908722222
    2. ' main' → logprob: -9.500110626220703
    3. '	main' → logprob: -10.500110626220703
    4. '__' → logprob: -12.625110626220703
    5. '_main' → logprob: -13.250110626220703
    6. '   ' → logprob: -13.500110626220703
    7. 'run' → logprob: -14.500110626220703
    8. '```' → logprob: -14.500110626220703
    9. 'solve' → logprob: -15.000110626220703
    10. 'python' → logprob: -15.250110626220703

Token 931: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -21.75
    4. '   ' → logprob: -23.25
    5. '_main' → logprob: -25.75
    6. '.main' → logprob: -26.75
    7. '(main' → logprob: -27.625
    8. 'Main' → logprob: -29.0
    9. 'import' → logprob: -30.375
    10. '/main' → logprob: -31.0

Token 932: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 930
Tokens correctement prédits (1ère position, stricte): 369
Tokens correctement prédits (1ère position, avec adaptation): 398
Tokens correctement prédits (top 10): 733
Précision stricte (1ère position): 39.68%
Précision adaptée (1ère position): 42.80%
Précision (top 10): 78.82%
================================================================================
