================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

s = sys.stdin.readline().strip()
n = len(s)

from functools import lru_cache

@lru_cache(None)
def is_cat(l, r):
    if l > r:
        return True
    if r - l + 1 < 4:
        return False
    if s[l] != 'm' or s[r] != 'w':
        return False
    for mid1 in range(l+1, r-1):
        if s[mid1] == 'e':
            for mid2 in range(mid1+1, r):
                if is_cat(l+1, mid1-1) and is_cat(mid1+1, mid2-1) and s[mid2] == 'w':
                    if mid2 == r:
                        return True
    # The above loop checks possible split points where 'e' and 'w' fit cat structure
    # But as per definition last character has to be 'w', so let's adjust:
    # Actually, from BNF: 'm' + X + 'e' + Y + 'w'
    # So after 'm', X ends at position before 'e', then Y is between 'e'+1 and before last 'w'

    # So better to try all positions of 'e' and 'w' to split properly
    # Let's rewrite:

def is_cat_dp(l, r):
    if l > r:
        return True
    length = r - l + 1
    if length < 4:  # min length for 'm' + "" + 'e' + "" + 'w' is 4
        return False
    if s[l] != 'm' or s[r] != 'w':
        return False
    for e_pos in range(l+1, r-1):
        if s[e_pos] != 'e':
            continue
        # X = s[l+1:e_pos], Y = s[e_pos+1:r]
        if is_cat(l+1, e_pos-1) and is_cat(e_pos+1, r-1):
            return True
    return False

is_cat = lru_cache(None)(is_cat_dp)

print("Cat" if is_cat(0, n-1) else "Rabbit")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5776441097259521
    2. '_trace' → logprob: -1.3276441097259521
    3. ' _' → logprob: -2.702644109725952
    4. '_version' → logprob: -3.577644109725952
    5. '_soft' → logprob: -4.577644348144531
    6. '_exc' → logprob: -4.702644348144531
    7. '_encoding' → logprob: -5.702644348144531
    8. '_ex' → logprob: -5.702644348144531
    9. '_exception' → logprob: -5.702644348144531
    10. '_default' → logprob: -5.827644348144531

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037415295373648405
    2. 'ursive' → logprob: -6.37874174118042
    3. 'limit' → logprob: -7.00374174118042
    4. 'ur' → logprob: -7.50374174118042
    5. 'urse' → logprob: -9.253741264343262
    6. '_limit' → logprob: -9.628741264343262
    7. 'urs' → logprob: -9.628741264343262
    8. 'ut' → logprob: -9.753741264343262
    9. 'u' → logprob: -10.003741264343262
    10. 't' → logprob: -10.128741264343262

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 's' (ID: 82)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0465119332075119
    2. '
' → logprob: -3.5465118885040283
    3. '

' → logprob: -4.921512126922607
    4. '```' → logprob: -5.296512126922607
    5. '\' → logprob: -6.421512126922607
    6. '
' → logprob: -7.046512126922607
    7. 'class' → logprob: -7.546512126922607
    8. '\n' → logprob: -7.671512126922607
    9. 'import' → logprob: -8.04651165008545
    10. ')' → logprob: -8.92151165008545

Token 14: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0477544367313385
    2. '=' → logprob: -3.9227545261383057
    3. ' =' → logprob: -4.047754287719727
    4. '[' → logprob: -6.047754287719727
    5. 'tr' → logprob: -6.672754287719727
    6. 't' → logprob: -6.922754287719727
    7. ' .' → logprob: -7.297754287719727
    8. 'y' → logprob: -7.297754287719727
    9. 'um' → logprob: -7.547754287719727
    10. '[:]' → logprob: -7.672754287719727

Token 15: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4900796115398407
    2. 'input' → logprob: -0.9900796413421631
    3. ''' → logprob: -5.615079402923584
    4. '"' → logprob: -5.865079402923584
    5. ' "' → logprob: -6.115079402923584
    6. ' ' → logprob: -6.740079402923584
    7. ' ""' → logprob: -6.865079402923584
    8. '""' → logprob: -6.865079402923584
    9. ' '' → logprob: -6.990079402923584
    10. ' ''' → logprob: -6.990079402923584

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000659419281873852
    2. '.readline' → logprob: -8.375658988952637
    3. '.s' → logprob: -9.125658988952637
    4. '.stdin' → logprob: -9.500658988952637
    5. '.argv' → logprob: -9.875658988952637
    6. ' .' → logprob: -10.000658988952637
    7. '.import' → logprob: -10.125658988952637
    8. '.stdout' → logprob: -10.875658988952637
    9. '.exit' → logprob: -11.000658988952637
    10. '.setdefault' → logprob: -11.125658988952637

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.026982592418789864
    2. '.read' → logprob: -4.02698278427124
    3. '.' → logprob: -4.77698278427124
    4. '.readlines' → logprob: -8.401982307434082
    5. 'read' → logprob: -9.026982307434082
    6. '.Read' → logprob: -10.901982307434082
    7. '.buffer' → logprob: -11.901982307434082
    8. '.READ' → logprob: -15.026982307434082
    9. 'buffer' → logprob: -15.026982307434082
    10. '.write' → logprob: -15.276982307434082

Token 18: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10040194541215897
    2. '().' → logprob: -2.3504018783569336
    3. '(' → logprob: -9.100401878356934
    4. '())' → logprob: -10.350401878356934
    5. ' ()' → logprob: -11.350401878356934
    6. '()
' → logprob: -11.600401878356934
    7. '()\' → logprob: -11.850401878356934
    8. '()

' → logprob: -12.475401878356934
    9. '()(' → logprob: -12.475401878356934
    10. '()`' → logprob: -12.475401878356934

Token 19: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3132626414299011
    2. 'rstrip' → logprob: -1.313262701034546
    3. 'read' → logprob: -14.563262939453125
    4. 'rst' → logprob: -15.438262939453125
    5. 'replace' → logprob: -16.688262939453125
    6. ' strip' → logprob: -16.938262939453125
    7. 'rs' → logprob: -17.188262939453125
    8. 'split' → logprob: -17.438262939453125
    9. 'str' → logprob: -17.938262939453125
    10. '```' → logprob: -18.063262939453125

Token 20: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029884936287999153
    2. '(' → logprob: -3.5298850536346436
    3. ' ()' → logprob: -10.904885292053223
    4. '(
' → logprob: -11.029885292053223
    5. '())' → logprob: -11.279885292053223
    6. '()`' → logprob: -11.279885292053223
    7. ')' → logprob: -11.404885292053223
    8. '`()' → logprob: -11.779885292053223
    9. '()+' → logprob: -12.029885292053223
    10. '()
' → logprob: -12.029885292053223

Token 21: 'n' (ID: 77)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4062463641166687
    2. 'n' → logprob: -1.9062464237213135
    3. 'd' → logprob: -2.5312464237213135
    4. 'i' → logprob: -3.0312464237213135
    5. 'a' → logprob: -3.5312464237213135
    6. 'def' → logprob: -5.156246185302734
    7. 't' → logprob: -5.781246185302734
    8. 'm' → logprob: -6.156246185302734
    9. ' if' → logprob: -6.156246185302734
    10. 'count' → logprob: -6.281246185302734

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1752796322107315
    2. '=' → logprob: -1.9252796173095703
    3. ' ' → logprob: -4.55027961730957
    4. '_' → logprob: -5.67527961730957
    5. '=int' → logprob: -7.92527961730957
    6. 'um' → logprob: -8.92527961730957
    7. ',' → logprob: -9.55027961730957
    8. 'u' → logprob: -9.55027961730957
    9. 'a' → logprob: -10.05027961730957
    10. '.' → logprob: -10.17527961730957

Token 23: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6077292561531067
    2. ' int' → logprob: -0.8577292561531067
    3. 'len' → logprob: -4.107729434967041
    4. 'int' → logprob: -4.232729434967041
    5. ' ' → logprob: -8.107728958129883
    6. '0' → logprob: -11.607728958129883
    7. '10' → logprob: -12.232728958129883
    8. ' s' → logprob: -12.607728958129883
    9. '  ' → logprob: -12.732728958129883
    10. '1' → logprob: -12.982728958129883

Token 24: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005239683669060469
    2. '(' → logprob: -5.255239486694336
    3. 's' → logprob: -12.505239486694336
    4. '(n' → logprob: -13.505239486694336
    5. ' (' → logprob: -14.630239486694336
    6. '(
' → logprob: -15.505239486694336
    7. '(

' → logprob: -17.630239486694336
    8. '(t' → logprob: -17.755239486694336
    9. '(x' → logprob: -17.880239486694336
    10. ')' → logprob: -17.880239486694336

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -14.125003814697266
    3. '))' → logprob: -14.250003814697266
    4. ')n' → logprob: -14.375003814697266
    5. ' )' → logprob: -14.500003814697266
    6. ')s' → logprob: -15.250003814697266
    7. 's' → logprob: -15.500003814697266
    8. '')' → logprob: -15.875003814697266
    9. '#' → logprob: -16.125003814697266
    10. '[' → logprob: -16.125003814697266

Token 26: 'from' (ID: 2845)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4868525266647339
    2. 'd' → logprob: -1.2368525266647339
    3. 'a' → logprob: -3.1118526458740234
    4. ')' → logprob: -4.111852645874023
    5. 'def' → logprob: -5.236852645874023
    6. 'for' → logprob: -5.236852645874023
    7. 'count' → logprob: -5.611852645874023
    8. 'result' → logprob: -5.736852645874023
    9. 'if' → logprob: -5.861852645874023
    10. '#' → logprob: -5.861852645874023

Token 27: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.07273508608341217
    2. ' math' → logprob: -3.447735071182251
    3. 'collections' → logprob: -3.447735071182251
    4. ' itertools' → logprob: -5.07273530960083
    5. 'math' → logprob: -9.322734832763672
    6. ' sys' → logprob: -9.947734832763672
    7. ' functools' → logprob: -10.072734832763672
    8. '_' → logprob: -10.322734832763672
    9. ' bis' → logprob: -10.947734832763672
    10. ' heap' → logprob: -12.322734832763672

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5364373326301575
    2. 'import' → logprob: -0.9114373326301575
    3. '.' → logprob: -5.036437511444092
    4. '_import' → logprob: -5.661437511444092
    5. '_' → logprob: -6.286437511444092
    6. ' .' → logprob: -7.411437511444092
    7. '	import' → logprob: -7.661437511444092
    8. ' ' → logprob: -9.536437034606934
    9. '.import' → logprob: -9.786437034606934
    10. '<|end|>' → logprob: -10.036437034606934

Token 29: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.576042890548706
    2. 'l' → logprob: -0.826042890548706
    3. 'cache' → logprob: -9.576043128967285
    4. 'reduce' → logprob: -10.826043128967285
    5. ' cache' → logprob: -11.701043128967285
    6. 'cmp' → logprob: -13.201043128967285
    7. 'wrap' → logprob: -13.951043128967285
    8. ' reduce' → logprob: -13.951043128967285
    9. '	l' → logprob: -13.951043128967285
    10. 'cached' → logprob: -14.451043128967285

Token 30: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.0206720617134124e-05
    2. 'ruz' → logprob: -12.37501049041748
    3. 'r' → logprob: -12.62501049041748
    4. 'ruff' → logprob: -13.37501049041748
    5. 'ruh' → logprob: -15.50001049041748
    6. 'rup' → logprob: -16.000009536743164
    7. '32' → logprob: -16.125009536743164
    8. 'RU' → logprob: -16.125009536743164
    9. '_ru' → logprob: -16.125009536743164
    10. 'ruck' → logprob: -17.000009536743164

Token 31: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00015502817404922098
    2. 'cache' → logprob: -9.250155448913574
    3. '_c' → logprob: -10.250155448913574
    4. 'c' → logprob: -10.875155448913574
    5. '_cached' → logprob: -13.750155448913574
    6. 'Cache' → logprob: -14.250155448913574
    7. '_' → logprob: -14.375155448913574
    8. '-cache' → logprob: -14.500155448913574
    9. '_CACHE' → logprob: -14.875155448913574
    10. '_ca' → logprob: -15.125155448913574

Token 32: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.002991728251799941
    2. '
' → logprob: -6.752991676330566
    3. '@
' → logprob: -6.877991676330566
    4. '@n' → logprob: -7.877991676330566
    5. '@

' → logprob: -9.002991676330566
    6. '\n' → logprob: -9.502991676330566
    7. '@login' → logprob: -10.127991676330566
    8. '@s' → logprob: -10.502991676330566
    9. '

' → logprob: -10.752991676330566
    10. '@app' → logprob: -11.127991676330566

Token 33: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00017302791820839047
    2. '@
' → logprob: -9.25017261505127
    3. '@n' → logprob: -10.00017261505127
    4. '@

' → logprob: -11.50017261505127
    5. '
' → logprob: -11.87517261505127
    6. '@s' → logprob: -12.87517261505127
    7. '@index' → logprob: -13.00017261505127
    8. '@login' → logprob: -13.25017261505127
    9. '@\' → logprob: -13.75017261505127
    10. '```' → logprob: -13.87517261505127

Token 34: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -17.25
    3. '```' → logprob: -19.0
    4. 'staticmethod' → logprob: -20.0
    5. 'lr' → logprob: -20.5
    6. '@' → logprob: -20.875
    7. '	l' → logprob: -21.625
    8. 'classmethod' → logprob: -21.75
    9. 'fun' → logprob: -22.5
    10. '`' → logprob: -23.125

Token 35: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.10026684403419495
    2. 'r' → logprob: -2.350266933441162
    3. '@' → logprob: -10.350266456604004
    4. 'rc' → logprob: -11.600266456604004
    5. 'rl' → logprob: -11.600266456604004
    6. '```' → logprob: -13.100266456604004
    7. 'w' → logprob: -13.850266456604004
    8. 'cache' → logprob: -14.225266456604004
    9. 'def' → logprob: -14.475266456604004
    10. 'ruz' → logprob: -14.600266456604004

Token 36: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0003448792558629066
    2. '_cached' → logprob: -8.500345230102539
    3. '_' → logprob: -9.000345230102539
    4. '_c' → logprob: -12.250345230102539
    5. ' _' → logprob: -12.625345230102539
    6. 'cache' → logprob: -12.875345230102539
    7. '_ca' → logprob: -13.250345230102539
    8. '_cash' → logprob: -13.375345230102539
    9. '_CACHE' → logprob: -14.250345230102539
    10. '```' → logprob: -14.750345230102539

Token 37: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13420763611793518
    2. '(None' → logprob: -2.3842077255249023
    3. '
' → logprob: -4.259207725524902
    4. '()' → logprob: -4.759207725524902
    5. '()
' → logprob: -5.009207725524902
    6. '(' → logprob: -6.384207725524902
    7. 'None' → logprob: -6.884207725524902
    8. '(max' → logprob: -7.634207725524902
    9. '(def' → logprob: -8.009207725524902
    10. ' def' → logprob: -9.259207725524902

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020809760317206383
    2. ')
' → logprob: -3.8958096504211426
    3. 'def' → logprob: -8.2708101272583
    4. ')
' → logprob: -12.5208101272583
    5. '
' → logprob: -13.3958101272583
    6. '`)' → logprob: -13.5208101272583
    7. ' )' → logprob: -14.2708101272583
    8. '))' → logprob: -14.2708101272583
    9. ')return' → logprob: -14.5208101272583
    10. ')`' → logprob: -14.7708101272583

Token 39: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.051066520740278e-05
    2. '
' → logprob: -9.750060081481934
    3. ' def' → logprob: -13.625060081481934
    4. '(def' → logprob: -15.000060081481934
    5. 'de' → logprob: -15.125060081481934
    6. 'd' → logprob: -16.25006103515625
    7. '0' → logprob: -16.87506103515625
    8. '<|end|>' → logprob: -17.50006103515625
    9. ':def' → logprob: -17.50006103515625
    10. '\' → logprob: -17.87506103515625

Token 40: ' is' (ID: 382)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.056648530066013336
    2. ' dp' → logprob: -3.3066484928131104
    3. 'dfs' → logprob: -4.6816487312316895
    4. ' f' → logprob: -5.8066487312316895
    5. 'dp' → logprob: -5.9316487312316895
    6. ' solve' → logprob: -6.1816487312316895
    7. ' count' → logprob: -7.4316487312316895
    8. ' rec' → logprob: -8.556648254394531
    9. 'f' → logprob: -8.681648254394531
    10. ' func' → logprob: -9.056648254394531

Token 41: '_cat' (ID: 50384)
  Prédit: '_pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.012815221212804317
    2. '_bal' → logprob: -4.637814998626709
    3. '_valid' → logprob: -6.137814998626709
    4. 'pal' → logprob: -8.262815475463867
    5. '_sub' → logprob: -8.887815475463867
    6. 'Palindrome' → logprob: -9.387815475463867
    7. '_prime' → logprob: -9.512815475463867
    8. '_possible' → logprob: -9.762815475463867
    9. 'balanced' → logprob: -10.012815475463867
    10. '_p' → logprob: -10.262815475463867

Token 42: '(l' (ID: 4179)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.05872688069939613
    2. 's' → logprob: -3.5587267875671387
    3. 'eg' → logprob: -5.308726787567139
    4. '_sequence' → logprob: -5.683726787567139
    5. 'dog' → logprob: -6.433726787567139
    6. '(i' → logprob: -6.558726787567139
    7. 'ch' → logprob: -6.683726787567139
    8. '(' → logprob: -6.933726787567139
    9. '(name' → logprob: -7.183726787567139
    10. 'char' → logprob: -7.308726787567139

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024928493425250053
    2. ',r' → logprob: -4.149928569793701
    3. 'eft' → logprob: -4.899928569793701
    4. 'r' → logprob: -7.524928569793701
    5. ',right' → logprob: -8.149928092956543
    6. 'e' → logprob: -8.524928092956543
    7. ' ,' → logprob: -9.649928092956543
    8. 'ef' → logprob: -10.149928092956543
    9. 'ft' → logprob: -10.149928092956543
    10. ',l' → logprob: -10.274928092956543

Token 44: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001328095211647451
    2. ' r' → logprob: -6.626327991485596
    3. 'l' → logprob: -14.126328468322754
    4. 'm' → logprob: -14.126328468322754
    5. ' ' → logprob: -15.876328468322754
    6. '   ' → logprob: -16.001327514648438
    7. ')' → logprob: -16.376327514648438
    8. '```' → logprob: -16.751327514648438
    9. 'u' → logprob: -17.376327514648438
    10. 'c' → logprob: -17.751327514648438

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000954694114625454
    2. ')' → logprob: -7.125954627990723
    3. '):
' → logprob: -9.125954627990723
    4. ':' → logprob: -10.500954627990723
    5. ',' → logprob: -11.625954627990723
    6. '+' → logprob: -13.000954627990723
    7. '):
' → logprob: -14.000954627990723
    8. ' ):' → logprob: -14.375954627990723
    9. ')：' → logprob: -15.375954627990723
    10. '**' → logprob: -16.12595558166504

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0059022498317062855
    2. ' if' → logprob: -5.505902290344238
    3. '<|end|>' → logprob: -6.880902290344238
    4. 'if' → logprob: -7.880902290344238
    5. '    ' → logprob: -9.005902290344238
    6. ':' → logprob: -9.630902290344238
    7. '	if' → logprob: -9.755902290344238
    8. ' ' → logprob: -10.505902290344238
    9. ')' → logprob: -10.505902290344238
    10. '\t' → logprob: -10.880902290344238

Token 47: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39117521047592163
    2. ' if' → logprob: -1.2661752700805664
    3. '   ' → logprob: -3.8911752700805664
    4. ' ' → logprob: -4.391175270080566
    5. 'i' → logprob: -5.891175270080566
    6. '    ' → logprob: -7.016175270080566
    7. '#' → logprob: -7.141175270080566
    8. ' i' → logprob: -7.141175270080566
    9. ')' → logprob: -7.391175270080566
    10. '0' → logprob: -7.516175270080566

Token 48: ' l' (ID: 305)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3545542359352112
    2. 'r' → logprob: -1.3545541763305664
    3. ' l' → logprob: -3.6045541763305664
    4. 'l' → logprob: -4.854554176330566
    5. ' s' → logprob: -5.604554176330566
    6. 's' → logprob: -6.979554176330566
    7. ' (' → logprob: -7.854554176330566
    8. ' ' → logprob: -8.604554176330566
    9. '   ' → logprob: -8.854554176330566
    10. '(r' → logprob: -9.604554176330566

Token 49: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1457349061965942
    2. '+' → logprob: -1.2707349061965942
    3. '==' → logprob: -1.2707349061965942
    4. '>=' → logprob: -2.8957347869873047
    5. ' >' → logprob: -3.3957347869873047
    6. ' ==' → logprob: -4.145734786987305
    7. ' +' → logprob: -4.520734786987305
    8. ' >=' → logprob: -5.270734786987305
    9. '   ' → logprob: -10.020734786987305
    10. '=' → logprob: -10.895734786987305

Token 50: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004078997299075127
    2. ' r' → logprob: -5.5040788650512695
    3. ' ' → logprob: -14.75407886505127
    4. '   ' → logprob: -16.129079818725586
    5. '<|end|>' → logprob: -16.504079818725586
    6. '	r' → logprob: -18.379079818725586
    7. '
' → logprob: -18.504079818725586
    8. '_r' → logprob: -19.129079818725586
    9. '  ' → logprob: -19.379079818725586
    10. ')' → logprob: -19.504079818725586

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015339754521846771
    2. ':return' → logprob: -4.7653398513793945
    3. ':
' → logprob: -5.0153398513793945
    4. '):' → logprob: -10.890339851379395
    5. ' or' → logprob: -11.015339851379395
    6. '   ' → logprob: -11.265339851379395
    7. '       ' → logprob: -12.265339851379395
    8. ' :' → logprob: -12.265339851379395
    9. '):
' → logprob: -13.015339851379395
    10. ' return' → logprob: -13.265339851379395

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37500283122062683
    2. '   ' → logprob: -1.2500028610229492
    3. ' return' → logprob: -4.000002861022949
    4. ' False' → logprob: -5.250002861022949
    5. 'False' → logprob: -7.125002861022949
    6. 'return' → logprob: -7.125002861022949
    7. ' True' → logprob: -7.250002861022949
    8. '    ' → logprob: -9.75000286102295
    9. ' ' → logprob: -9.87500286102295
    10. ':return' → logprob: -10.37500286102295

Token 53: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6730944514274597
    2. 'return' (adapté à ' return') → logprob: -0.9230944514274597
    3. ' return' → logprob: -2.4230945110321045
    4. '   ' → logprob: -5.673094272613525
    5. '
' → logprob: -9.173094749450684
    6. 'False' → logprob: -9.173094749450684
    7. ':return' → logprob: -9.798094749450684
    8. '```' → logprob: -10.048094749450684
    9. ' True' → logprob: -10.423094749450684
    10. ' False' → logprob: -10.423094749450684

Token 54: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4163837730884552
    2. ' False' → logprob: -1.2913837432861328
    3. ' True' → logprob: -3.416383743286133
    4. 'True' → logprob: -3.416383743286133
    5. '0' → logprob: -11.666383743286133
    6. ' ' → logprob: -12.541383743286133
    7. '(False' → logprob: -12.916383743286133
    8. ' None' → logprob: -13.416383743286133
    9. 'None' → logprob: -13.416383743286133
    10. '1' → logprob: -13.916383743286133

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5169570446014404
    2. '\n' → logprob: -1.1419570446014404
    3. '<|end|>' → logprob: -3.1419570446014404
    4. '    
' → logprob: -4.1419572830200195
    5. '
' → logprob: -4.3919572830200195
    6. ' ' → logprob: -5.1419572830200195
    7. '  ' → logprob: -6.5169572830200195
    8. '  
' → logprob: -6.5169572830200195
    9. ' 
' → logprob: -7.3919572830200195
    10. 'n' → logprob: -7.6419572830200195

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019999155774712563
    2. '\n' → logprob: -4.644999027252197
    3. '    
' → logprob: -5.644999027252197
    4. '<|end|>' → logprob: -5.769999027252197
    5. ' ' → logprob: -6.269999027252197
    6. '  ' → logprob: -7.519999027252197
    7. '
' → logprob: -8.519999504089355
    8. '  
' → logprob: -8.769999504089355
    9. '   
' → logprob: -8.894999504089355
    10. '    ' → logprob: -9.269999504089355

Token 57: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03175704926252365
    2. ' if' → logprob: -4.03175687789917
    3. '   ' → logprob: -4.90675687789917
    4. 'i' → logprob: -6.28175687789917
    5. 'token' → logprob: -7.15675687789917
    6. 'elif' → logprob: -7.65675687789917
    7. ' ' → logprob: -8.156757354736328
    8. 'c' → logprob: -8.281757354736328
    9. '<|end|>' → logprob: -8.406757354736328
    10. 't' → logprob: -8.406757354736328

Token 58: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1011765003204346
    2. 's' → logprob: -1.2261765003204346
    3. ' s' → logprob: -1.3511765003204346
    4. ' r' → logprob: -2.3511765003204346
    5. 'l' → logprob: -4.9761762619018555
    6. ' l' → logprob: -5.4761762619018555
    7. ' (' → logprob: -5.4761762619018555
    8. '(r' → logprob: -6.1011762619018555
    9. '(s' → logprob: -6.4761762619018555
    10. '(l' → logprob: -8.351176261901855

Token 59: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6767573952674866
    2. ' -' → logprob: -0.8017573952674866
    3. '<' → logprob: -3.551757335662842
    4. ' <' → logprob: -4.426757335662842
    5. '-l' → logprob: -6.176757335662842
    6. '==' → logprob: -8.3017578125
    7. ' ==' → logprob: -9.4267578125
    8. '+' → logprob: -9.9267578125
    9. ' ' → logprob: -10.4267578125
    10. '>=' → logprob: -11.4267578125

Token 60: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002861104905605316
    2. ' l' → logprob: -5.877861022949219
    3. '<|end|>' → logprob: -10.377861022949219
    4. '=' → logprob: -12.127861022949219
    5. '=l' → logprob: -12.877861022949219
    6. ' ' → logprob: -12.877861022949219
    7. '+' → logprob: -13.002861022949219
    8. '1' → logprob: -13.127861022949219
    9. '+l' → logprob: -13.252861022949219
    10. 's' → logprob: -13.252861022949219

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.988903820514679
    2. ' +' → logprob: -1.1139037609100342
    3. ' <' → logprob: -1.9889037609100342
    4. '<' → logprob: -2.238903760910034
    5. '==' → logprob: -3.238903760910034
    6. ' ==' → logprob: -4.113903999328613
    7. '<=' → logprob: -8.488903999328613
    8. '1' → logprob: -8.738903999328613
    9. ' <=' → logprob: -9.488903999328613
    10. ' ' → logprob: -9.613903999328613

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07905711978673935
    2. ' ' → logprob: -2.579057216644287
    3. '<|end|>' → logprob: -9.329056739807129
    4. '2' → logprob: -9.954056739807129
    5. '=' → logprob: -11.454056739807129
    6. '<|end|>' → logprob: -11.829056739807129
    7. '0' → logprob: -12.454056739807129
    8. '  ' → logprob: -13.079056739807129
    9. '```' → logprob: -13.454056739807129
    10. '...' → logprob: -14.016556739807129

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024479322135448456
    2. '2' → logprob: -4.524479389190674
    3. '3' → logprob: -4.899479389190674
    4. '4' → logprob: -5.774479389190674
    5. '5' → logprob: -6.774479389190674
    6. '7' → logprob: -7.024479389190674
    7. '6' → logprob: -7.899479389190674
    8. ' ' → logprob: -8.149478912353516
    9. '8' → logprob: -10.274478912353516
    10. '0' → logprob: -11.024478912353516

Token 64: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7105752229690552
    2. '<' → logprob: -1.3355752229690552
    3. ' ==' → logprob: -1.8355752229690552
    4. '==' → logprob: -2.5855751037597656
    5. ' not' → logprob: -5.710575103759766
    6. ' ' → logprob: -5.835575103759766
    7. ')' → logprob: -6.585575103759766
    8. '>' → logprob: -6.960575103759766
    9. ' >' → logprob: -7.835575103759766
    10. '%' → logprob: -7.960575103759766

Token 65: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.024497471749782562
    2. '2' → logprob: -4.6494975090026855
    3. '4' → logprob: -5.1494975090026855
    4. '6' → logprob: -5.5244975090026855
    5. '5' → logprob: -5.6494975090026855
    6. ' ' → logprob: -7.5244975090026855
    7. '7' → logprob: -8.149497032165527
    8. '1' → logprob: -9.024497032165527
    9. '10' → logprob: -9.149497032165527
    10. '8' → logprob: -10.024497032165527

Token 66: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06785394996404648
    2. '2' → logprob: -3.8178539276123047
    3. '5' → logprob: -3.8178539276123047
    4. '4' → logprob: -4.567853927612305
    5. '6' → logprob: -4.692853927612305
    6. '7' → logprob: -7.067853927612305
    7. '1' → logprob: -7.942853927612305
    8. ' ' → logprob: -8.692853927612305
    9. '8' → logprob: -8.692853927612305
    10. '10' → logprob: -9.067853927612305

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005172681529074907
    2. ':
' → logprob: -5.5051727294921875
    3. ':return' → logprob: -6.8801727294921875
    4. ' or' → logprob: -10.255172729492188
    5. ' :' → logprob: -10.630172729492188
    6. ' and' → logprob: -12.505172729492188
    7. '   ' → logprob: -14.005172729492188
    8. '):' → logprob: -14.255172729492188
    9. ' :
' → logprob: -15.255172729492188
    10. ':
' → logprob: -15.380172729492188

Token 68: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3526114225387573
    2. '       ' → logprob: -1.3526114225387573
    3. ' return' → logprob: -3.727611541748047
    4. 'return' → logprob: -5.227611541748047
    5. ':return' → logprob: -5.602611541748047
    6. '    ' → logprob: -6.227611541748047
    7. '
' → logprob: -6.727611541748047
    8. ':' → logprob: -7.477611541748047
    9. ' ' → logprob: -7.602611541748047
    10. ' 
' → logprob: -8.102611541748047

Token 69: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4353415071964264
    2. ' return' → logprob: -1.310341477394104
    3. '       ' → logprob: -2.9353415966033936
    4. '   ' → logprob: -3.9353415966033936
    5. '
' → logprob: -4.6853413581848145
    6. '	return' → logprob: -7.5603413581848145
    7. ' 
' → logprob: -8.310341835021973
    8. ' ' → logprob: -8.935341835021973
    9. '    ' → logprob: -9.185341835021973
    10. '    
' → logprob: -9.185341835021973

Token 70: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.008615399710834026
    2. ' False' → logprob: -4.758615493774414
    3. 'True' → logprob: -14.508615493774414
    4. 'None' → logprob: -15.133615493774414
    5. 'F' → logprob: -18.133615493774414
    6. ' ' → logprob: -18.258615493774414
    7. ' True' → logprob: -18.508615493774414
    8. '0' → logprob: -18.508615493774414
    9. 'false' → logprob: -18.508615493774414
    10. '(False' → logprob: -18.633615493774414

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05232183635234833
    2. '<|end|>' → logprob: -3.3023219108581543
    3. ' ' → logprob: -5.177321910858154
    4. '  ' → logprob: -6.052321910858154
    5. ')' → logprob: -6.052321910858154
    6. '    ' → logprob: -7.052321910858154
    7. '...' → logprob: -7.302321910858154
    8. '
' → logprob: -7.927321910858154
    9. '    
' → logprob: -8.052321434020996
    10. '\n' → logprob: -8.302321434020996

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010908338241279125
    2. '<|end|>' → logprob: -5.510908126831055
    3. ' ' → logprob: -5.635908126831055
    4. '  ' → logprob: -7.135908126831055
    5. ')' → logprob: -7.260908126831055
    6. '    ' → logprob: -8.010908126831055
    7. '...' → logprob: -8.385908126831055
    8. ',' → logprob: -8.635908126831055
    9. 'if' → logprob: -8.635908126831055
    10. '    
' → logprob: -8.635908126831055

Token 73: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01342185027897358
    2. 'for' → logprob: -5.388422012329102
    3. '#' → logprob: -6.263422012329102
    4. 'token' → logprob: -7.013422012329102
    5. 'return' → logprob: -7.013422012329102
    6. 'i' → logprob: -7.263422012329102
    7. 't' → logprob: -7.513422012329102
    8. 'first' → logprob: -7.638422012329102
    9. '...' → logprob: -7.638422012329102
    10. 'res' → logprob: -7.638422012329102

Token 74: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.21906855702400208
    2. 's' → logprob: -1.8440685272216797
    3. ' is' → logprob: -3.4690685272216797
    4. 'is' → logprob: -5.71906852722168
    5. ' not' → logprob: -6.09406852722168
    6. ' (' → logprob: -6.96906852722168
    7. 'r' → logprob: -8.46906852722168
    8. '(s' → logprob: -8.46906852722168
    9. ' r' → logprob: -8.96906852722168
    10. ' l' → logprob: -9.09406852722168

Token 75: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0001307142956648022
    2. '[' → logprob: -9.000130653381348
    3. '[r' → logprob: -12.375130653381348
    4. '[i' → logprob: -13.625130653381348
    5. '[m' → logprob: -14.625130653381348
    6. '[s' → logprob: -15.500130653381348
    7. '[
' → logprob: -15.500130653381348
    8. 'l' → logprob: -15.625130653381348
    9. '[c' → logprob: -16.000131607055664
    10. ' [' → logprob: -16.250131607055664

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7612122297286987
    2. ':l' → logprob: -0.7612122297286987
    3. ':' → logprob: -2.8862123489379883
    4. ']==' → logprob: -5.136212348937988
    5. 'l' → logprob: -7.011212348937988
    6. '   ' → logprob: -7.386212348937988
    7. ']=='' → logprob: -7.511212348937988
    8. '+' → logprob: -7.636212348937988
    9. ':r' → logprob: -8.011212348937988
    10. ' ' → logprob: -8.261212348937988

Token 77: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7916401624679565
    2. '=' → logprob: -1.1666401624679565
    3. '!=' → logprob: -1.9166401624679565
    4. 's' → logprob: -3.666640281677246
    5. ' ==' → logprob: -4.291640281677246
    6. ''' → logprob: -4.416640281677246
    7. 'a' → logprob: -4.541640281677246
    8. ''s' → logprob: -4.666640281677246
    9. ''a' → logprob: -6.166640281677246
    10. '=='' → logprob: -6.291640281677246

Token 78: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9515702128410339
    2. ''C' → logprob: -1.7015702724456787
    3. ''' → logprob: -1.9515702724456787
    4. ''s' → logprob: -2.4515702724456787
    5. ''a' → logprob: -2.5765702724456787
    6. ''A' → logprob: -3.4515702724456787
    7. '"C' → logprob: -3.5765702724456787
    8. '"s' → logprob: -4.7015700340271
    9. 'c' → logprob: -4.8265700340271
    10. '"' → logprob: -4.9515700340271

Token 79: 'm' (ID: 76)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4140297770500183
    2. 'a' → logprob: -2.164029836654663
    3. 'm' → logprob: -2.664029836654663
    4. 'C' → logprob: -3.164029836654663
    5. 'A' → logprob: -3.289029836654663
    6. 'i' → logprob: -4.164029598236084
    7. 'j' → logprob: -4.414029598236084
    8. '('' → logprob: -4.664029598236084
    9. 'b' → logprob: -4.914029598236084
    10. 'k' → logprob: -5.164029598236084

Token 80: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16693292558193207
    2. 'a' → logprob: -2.1669328212738037
    3. 'm' → logprob: -4.166933059692383
    4. 'o' → logprob: -4.416933059692383
    5. 'i' → logprob: -5.416933059692383
    6. ''' → logprob: -5.666933059692383
    7. 'u' → logprob: -6.666933059692383
    8. ''a' → logprob: -7.291933059692383
    9. 'y' → logprob: -7.666933059692383
    10. ''e' → logprob: -7.791933059692383

Token 81: ' or' (ID: 503)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09829181432723999
    2. 'o' → logprob: -3.5982918739318848
    3. ' and' → logprob: -3.8482918739318848
    4. ' or' → logprob: -3.9732918739318848
    5. 'm' → logprob: -4.473291873931885
    6. 'i' → logprob: -5.348291873931885
    7. 'e' → logprob: -5.598291873931885
    8. 'and' → logprob: -5.973291873931885
    9. 'u' → logprob: -6.848291873931885
    10. ''a' → logprob: -7.223291873931885

Token 82: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11766787618398666
    2. ' s' → logprob: -2.6176679134368896
    3. ''s' → logprob: -3.9926679134368896
    4. 'a' → logprob: -4.9926676750183105
    5. 'm' → logprob: -6.1176676750183105
    6. 'o' → logprob: -6.2426676750183105
    7. ''' → logprob: -6.3676676750183105
    8. ' ' → logprob: -6.6176676750183105
    9. ' '' → logprob: -6.8676676750183105
    10. ''a' → logprob: -7.1176676750183105

Token 83: '[r' (ID: 33265)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0006476254784502089
    2. '[i' → logprob: -8.87564754486084
    3. '[r' → logprob: -8.87564754486084
    4. '[' → logprob: -9.25064754486084
    5. '[s' → logprob: -9.50064754486084
    6. 's' → logprob: -9.62564754486084
    7. '[a' → logprob: -10.50064754486084
    8. '+' → logprob: -11.00064754486084
    9. '[o' → logprob: -11.12564754486084
    10. '[(' → logprob: -11.50064754486084

Token 84: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10198564827442169
    2. '']' → logprob: -2.3519856929779053
    3. ']!=' → logprob: -6.476985454559326
    4. ']!='' → logprob: -9.226985931396484
    5. '`]' → logprob: -10.976985931396484
    6. '"]' → logprob: -10.976985931396484
    7. 'm' → logprob: -11.226985931396484
    8. ''' → logprob: -11.226985931396484
    9. ' !=' → logprob: -11.351985931396484
    10. 'u' → logprob: -11.351985931396484

Token 85: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2552374601364136
    2. '!=' → logprob: -1.5052374601364136
    3. '!='' → logprob: -6.505237579345703
    4. ''' → logprob: -7.255237579345703
    5. ' ' → logprob: -8.630237579345703
    6. ''s' → logprob: -9.005237579345703
    7. '!' → logprob: -9.130237579345703
    8. ' not' → logprob: -9.130237579345703
    9. ')' → logprob: -9.505237579345703
    10. ')!=' → logprob: -9.630237579345703

Token 86: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.3943557143211365
    2. ''o' → logprob: -2.2693557739257812
    3. ''e' → logprob: -2.6443557739257812
    4. ''' → logprob: -2.7693557739257812
    5. ''u' → logprob: -3.1443557739257812
    6. ''m' → logprob: -4.269355773925781
    7. ''w' → logprob: -4.519355773925781
    8. ''s' → logprob: -4.644355773925781
    9. ''i' → logprob: -5.644355773925781
    10. ''b' → logprob: -6.644355773925781

Token 87: 'w' (ID: 86)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.164523959159851
    2. 'e' → logprob: -1.664523959159851
    3. ''e' → logprob: -1.789523959159851
    4. ''a' → logprob: -2.6645240783691406
    5. 'a' → logprob: -2.7895240783691406
    6. ''w' → logprob: -3.0395240783691406
    7. ''m' → logprob: -3.6645240783691406
    8. 'w' → logprob: -3.7895240783691406
    9. ''o' → logprob: -4.164524078369141
    10. 'm' → logprob: -4.289524078369141

Token 88: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.711459219455719
    2. '':' → logprob: -0.711459219455719
    3. '':
' → logprob: -4.086459159851074
    4. ''):
' → logprob: -7.836459159851074
    5. ''):' → logprob: -7.836459159851074
    6. '')' → logprob: -8.086459159851074
    7. ':' → logprob: -8.711459159851074
    8. '':
' → logprob: -9.961459159851074
    9. ')' → logprob: -11.586459159851074
    10. ' '' → logprob: -11.961459159851074

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3492635190486908
    2. '   ' → logprob: -1.2242635488510132
    3. '
' → logprob: -8.599263191223145
    4. '```' → logprob: -8.974263191223145
    5. ':return' → logprob: -9.474263191223145
    6. '    
' → logprob: -9.724263191223145
    7. 'return' → logprob: -9.849263191223145
    8. '    ' → logprob: -9.849263191223145
    9. '	' → logprob: -9.974263191223145
    10. '	return' → logprob: -10.099263191223145

Token 90: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01861037313938141
    2. '       ' → logprob: -4.64361047744751
    3. ' return' → logprob: -5.01861047744751
    4. '    ' → logprob: -7.51861047744751
    5. 'return' (adapté à ' return') → logprob: -7.51861047744751
    6. ' ' → logprob: -8.018610000610352
    7. ' 
' → logprob: -8.393610000610352
    8. '```' → logprob: -8.393610000610352
    9. '	return' → logprob: -9.018610000610352
    10. '
' → logprob: -9.518610000610352

Token 91: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00026181264547631145
    2. ' False' → logprob: -8.250262260437012
    3. 'None' → logprob: -15.000262260437012
    4. 'F' → logprob: -16.500261306762695
    5. 'false' → logprob: -18.250261306762695
    6. 'True' → logprob: -18.250261306762695
    7. '(False' → logprob: -18.750261306762695
    8. '0' → logprob: -19.125261306762695
    9. 'Fa' → logprob: -19.500261306762695
    10. 'Fal' → logprob: -19.500261306762695

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14759781956672668
    2. '<|end|>' → logprob: -2.5225977897644043
    3. ')' → logprob: -4.272597789764404
    4. '\n' → logprob: -4.397597789764404
    5. 'n' → logprob: -4.647597789764404
    6. '```' → logprob: -5.022597789764404
    7. '    
' → logprob: -5.772597789764404
    8. '\' → logprob: -6.147597789764404
    9. ' ' → logprob: -6.647597789764404
    10. ':' → logprob: -6.897597789764404

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01650044694542885
    2. ')' → logprob: -5.391500473022461
    3. '<|end|>' → logprob: -5.641500473022461
    4. ' ' → logprob: -5.891500473022461
    5. '    
' → logprob: -6.641500473022461
    6. '  ' → logprob: -7.016500473022461
    7. 'n' → logprob: -7.391500473022461
    8. '
' → logprob: -7.766500473022461
    9. '```' → logprob: -7.891500473022461
    10. '    ' → logprob: -8.016500473022461

Token 94: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6602097153663635
    2. 'for' (adapté à ' for') → logprob: -1.2852096557617188
    3. 'm' → logprob: -2.1602096557617188
    4. '   ' → logprob: -3.6602096557617188
    5. 'i' → logprob: -3.6602096557617188
    6. 'mid' → logprob: -4.660209655761719
    7. ' for' → logprob: -4.910209655761719
    8. ' if' → logprob: -5.160209655761719
    9. ')' → logprob: -5.535209655761719
    10. ' ' → logprob: -6.410209655761719

Token 95: ' mid' (ID: 6959)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9737889766693115
    2. 'mid' → logprob: -1.2237889766693115
    3. 'm' → logprob: -1.8487889766693115
    4. ' mid' → logprob: -2.7237889766693115
    5. ' i' → logprob: -2.8487889766693115
    6. 'k' → logprob: -3.3487889766693115
    7. ' m' → logprob: -4.848789215087891
    8. ' k' → logprob: -6.473789215087891
    9. 'x' → logprob: -6.973789215087891
    10. '   ' → logprob: -7.348789215087891

Token 96: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005989470519125462
    2. 'in' → logprob: -5.1309895515441895
    3. ' ' → logprob: -10.255989074707031
    4. ',' → logprob: -11.880989074707031
    5. 's' → logprob: -12.255989074707031
    6. '	in' → logprob: -12.505989074707031
    7. '_in' → logprob: -13.380989074707031
    8. '  ' → logprob: -13.755989074707031
    9. '```' → logprob: -13.755989074707031
    10. 'n' → logprob: -14.005989074707031

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018182365223765373
    2. 'in' → logprob: -4.018182277679443
    3. ' ' → logprob: -11.018182754516602
    4. ',' → logprob: -12.518182754516602
    5. 's' → logprob: -12.768182754516602
    6. 'n' → logprob: -13.268182754516602
    7. '<|end|>' → logprob: -13.643182754516602
    8. '```' → logprob: -13.768182754516602
    9. 'range' → logprob: -13.893182754516602
    10. ')' → logprob: -14.643182754516602

Token 98: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.474077433347702
    2. 'range' → logprob: -0.9740774631500244
    3. '(range' → logprob: -14.849077224731445
    4. '	range' → logprob: -16.849077224731445
    5. ' xrange' → logprob: -18.474077224731445
    6. ' ' → logprob: -19.349077224731445
    7. '   ' → logprob: -19.724077224731445
    8. 'rang' → logprob: -20.099077224731445
    9. 'r' → logprob: -20.224077224731445
    10. '_range' → logprob: -20.849077224731445

Token 99: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.2521823048591614
    2. 'l' → logprob: -1.5021822452545166
    3. ' l' → logprob: -9.127182006835938
    4. '   ' → logprob: -9.377182006835938
    5. '(' → logprob: -10.502182006835938
    6. '	l' → logprob: -10.627182006835938
    7. ',l' → logprob: -13.002182006835938
    8. '(r' → logprob: -13.127182006835938
    9. '[l' → logprob: -13.877182006835938
    10. 'r' → logprob: -14.002182006835938

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02094145491719246
    2. ' +' → logprob: -4.270941257476807
    3. '+l' → logprob: -5.020941257476807
    4. 'l' → logprob: -8.895941734313965
    5. '   ' → logprob: -11.895941734313965
    6. ',l' → logprob: -12.395941734313965
    7. ',' → logprob: -13.145941734313965
    8. ' l' → logprob: -13.395941734313965
    9. '+n' → logprob: -13.895941734313965
    10. '+r' → logprob: -14.270941734313965

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13437232375144958
    2. '2' → logprob: -2.1343722343444824
    3. '3' → logprob: -5.009372234344482
    4. '4' → logprob: -7.509372234344482
    5. ' ' → logprob: -8.75937271118164
    6. '(' → logprob: -12.13437271118164
    7. '   ' → logprob: -12.25937271118164
    8. '```' → logprob: -12.50937271118164
    9. '
' → logprob: -12.57187271118164
    10. 'len' → logprob: -12.69687271118164

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02378692850470543
    2. ' ,' → logprob: -4.023787021636963
    3. ',r' → logprob: -5.398787021636963
    4. '+' → logprob: -7.148787021636963
    5. 'r' → logprob: -8.648786544799805
    6. ' +' → logprob: -10.023786544799805
    7. '+r' → logprob: -10.023786544799805
    8. ',n' → logprob: -10.273786544799805
    9. '+,' → logprob: -12.398786544799805
    10. ' r' → logprob: -13.023786544799805

Token 103: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0036014977376908064
    2. ' r' → logprob: -5.628601551055908
    3. 'min' → logprob: -14.25360107421875
    4. 'l' → logprob: -15.62860107421875
    5. 'n' → logprob: -15.75360107421875
    6. '[r' → logprob: -16.12860107421875
    7. '	r' → logprob: -16.25360107421875
    8. '   ' → logprob: -16.25360107421875
    9. ' min' → logprob: -17.00360107421875
    10. ' ' → logprob: -17.25360107421875

Token 104: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07497812807559967
    2. '-' → logprob: -2.6999781131744385
    3. '):
' → logprob: -5.449978351593018
    4. ' -' → logprob: -7.949978351593018
    5. ')' → logprob: -8.07497787475586
    6. '+' → logprob: -10.57497787475586
    7. '):

' → logprob: -10.82497787475586
    8. ':' → logprob: -12.69997787475586
    9. ' ):' → logprob: -12.94997787475586
    10. '-n' → logprob: -13.32497787475586

Token 105: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5012897253036499
    2. '1' → logprob: -1.25128972530365
    3. '3' → logprob: -2.2512898445129395
    4. '4' → logprob: -6.0012898445129395
    5. '0' → logprob: -8.751289367675781
    6. '5' → logprob: -8.876289367675781
    7. '```' → logprob: -10.688789367675781
    8. '``' → logprob: -11.126289367675781
    9. '6' → logprob: -11.688789367675781
    10. 'len' → logprob: -12.313789367675781

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00477899145334959
    2. '):
' → logprob: -5.379778861999512
    3. '+' → logprob: -9.129778861999512
    4. ' ):' → logprob: -10.879778861999512
    5. ')' → logprob: -11.004778861999512
    6. ':' → logprob: -11.504778861999512
    7. ',' → logprob: -12.879778861999512
    8. '):
' → logprob: -14.504778861999512
    9. '):

' → logprob: -15.004778861999512
    10. ' +' → logprob: -15.004778861999512

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028048165142536163
    2. ' if' → logprob: -3.903048276901245
    3. '<|end|>' → logprob: -5.403048038482666
    4. '   ' → logprob: -7.153048038482666
    5. 'if' → logprob: -7.153048038482666
    6. ' for' → logprob: -7.153048038482666
    7. ' ' → logprob: -8.028048515319824
    8. '<|end|>' → logprob: -9.278048515319824
    9. '    ' → logprob: -9.528048515319824
    10. 'for' → logprob: -10.153048515319824

Token 108: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0506560802459717
    2. 'for' → logprob: -1.4256560802459717
    3. ' for' → logprob: -1.6756560802459717
    4. '       ' → logprob: -2.0506560802459717
    5. ' if' → logprob: -2.4256560802459717
    6. '   ' → logprob: -5.300656318664551
    7. '<|end|>' → logprob: -8.30065631866455
    8. ' ' → logprob: -8.92565631866455
    9. '    ' → logprob: -8.92565631866455
    10. '           ' → logprob: -9.67565631866455

Token 109: ' s' (ID: 265)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.020994342863559723
    2. 'is' → logprob: -3.8959944248199463
    3. ' not' → logprob: -7.895994186401367
    4. 'not' → logprob: -10.520994186401367
    5. '(is' → logprob: -10.895994186401367
    6. ' (' → logprob: -11.395994186401367
    7. 's' → logprob: -11.395994186401367
    8. ' s' → logprob: -11.895994186401367
    9. ' all' → logprob: -13.270994186401367
    10. ' ' → logprob: -13.770994186401367

Token 110: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.003080267459154129
    2. '[l' → logprob: -6.128080368041992
    3. '[' → logprob: -7.128080368041992
    4. '==' → logprob: -11.128080368041992
    5. '[m' → logprob: -11.128080368041992
    6. 'mid' → logprob: -12.003080368041992
    7. '[s' → logprob: -12.003080368041992
    8. '[
' → logprob: -12.128080368041992
    9. '[left' → logprob: -12.253080368041992
    10. '```' → logprob: -12.440580368041992

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.047134305234067e-05
    2. ']' → logprob: -11.000030517578125
    3. ')' → logprob: -12.000030517578125
    4. '<|end|>' → logprob: -13.500030517578125
    5. '<|end|>' → logprob: -13.875030517578125
    6. ']==' → logprob: -13.875030517578125
    7. '])' → logprob: -14.250030517578125
    8. '```' → logprob: -14.625030517578125
    9. ' ' → logprob: -15.000030517578125
    10. ',' → logprob: -15.250030517578125

Token 112: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4375840723514557
    2. ']' → logprob: -1.9375840425491333
    3. ' ==' → logprob: -2.187584161758423
    4. ']==' → logprob: -2.562584161758423
    5. ' in' → logprob: -5.062583923339844
    6. ']=='' → logprob: -5.187583923339844
    7. '=='' → logprob: -5.437583923339844
    8. 'in' → logprob: -7.062583923339844
    9. 's' → logprob: -7.187583923339844
    10. '!=' → logprob: -7.687583923339844

Token 113: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4147081971168518
    2. ' ==' → logprob: -1.289708137512207
    3. '=='' → logprob: -2.789708137512207
    4. ' in' → logprob: -6.789708137512207
    5. '!=' → logprob: -7.914708137512207
    6. 'in' → logprob: -8.164708137512207
    7. ' =='' → logprob: -8.539708137512207
    8. '=' → logprob: -8.914708137512207
    9. ' !=' → logprob: -9.539708137512207
    10. ''' → logprob: -9.539708137512207

Token 114: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.44234031438827515
    2. ''' → logprob: -2.06734037399292
    3. ''m' → logprob: -2.44234037399292
    4. ''w' → logprob: -2.69234037399292
    5. ''o' → logprob: -3.19234037399292
    6. ''s' → logprob: -4.06734037399292
    7. ''e' → logprob: -5.31734037399292
    8. ''u' → logprob: -6.06734037399292
    9. ''n' → logprob: -6.19234037399292
    10. ''i' → logprob: -6.56734037399292

Token 115: 'e' (ID: 68)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5403712391853333
    2. 'c' → logprob: -2.0403711795806885
    3. 'm' → logprob: -2.1653711795806885
    4. 'e' → logprob: -2.5403711795806885
    5. 'u' → logprob: -3.2903711795806885
    6. 'w' → logprob: -3.7903711795806885
    7. 'o' → logprob: -4.665371417999268
    8. 'k' → logprob: -5.290371417999268
    9. 'n' → logprob: -5.415371417999268
    10. 'i' → logprob: -5.665371417999268

Token 116: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6266502141952515
    2. '':' → logprob: -1.3766502141952515
    3. '':
' → logprob: -2.376650333404541
    4. 'm' → logprob: -2.501650333404541
    5. 'a' → logprob: -4.001650333404541
    6. ''m' → logprob: -5.251650333404541
    7. 'n' → logprob: -6.251650333404541
    8. ''a' → logprob: -6.626650333404541
    9. ''s' → logprob: -6.626650333404541
    10. '':
' → logprob: -6.751650333404541

Token 117: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.543185293674469
    2. '           ' → logprob: -0.918185293674469
    3. 'and' → logprob: -4.793185234069824
    4. '<|end|>' → logprob: -4.918185234069824
    5. '
' → logprob: -6.793185234069824
    6. '<|end|>' → logprob: -7.043185234069824
    7. ':' → logprob: -7.293185234069824
    8. ':
' → logprob: -7.668185234069824
    9. '       ' → logprob: -8.418185234069824
    10. ' for' → logprob: -8.668185234069824

Token 118: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21954196691513062
    2. 'for' (adapté à ' for') → logprob: -1.9695420265197754
    3. ' if' → logprob: -3.5945420265197754
    4. '               ' → logprob: -4.094542026519775
    5. 'if' → logprob: -4.469542026519775
    6. '           ' → logprob: -7.094542026519775
    7. '<|end|>' → logprob: -7.344542026519775
    8. ' ' → logprob: -8.594541549682617
    9. '       ' → logprob: -8.844541549682617
    10. '<|end|>' → logprob: -9.969541549682617

Token 119: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.08897001296281815
    2. 'mid' → logprob: -2.4639699459075928
    3. ' ' → logprob: -10.838970184326172
    4. '(mid' → logprob: -12.713970184326172
    5. '[mid' → logprob: -13.088970184326172
    6. ' mids' → logprob: -13.213970184326172
    7. '_mid' → logprob: -14.213970184326172
    8. '
' → logprob: -14.338970184326172
    9. ' midpoint' → logprob: -14.588970184326172
    10. 'm' → logprob: -15.338970184326172

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018041854491457343
    2. ' in' → logprob: -8.8751802444458
    3. 'in' → logprob: -10.2501802444458
    4. '1' → logprob: -13.1251802444458
    5. ' ' → logprob: -14.0001802444458
    6. 'x' → logprob: -14.6251802444458
    7. 'token' → logprob: -15.0001802444458
    8. 'mid' → logprob: -15.1251802444458
    9. '```' → logprob: -15.2501802444458
    10. 'split' → logprob: -15.5001802444458

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013373857364058495
    2. 'in' → logprob: -6.62633752822876
    3. 'range' → logprob: -12.001337051391602
    4. ' ' → logprob: -12.376337051391602
    5. '<|end|>' → logprob: -14.751337051391602
    6. 'n' → logprob: -15.751337051391602
    7. 's' → logprob: -16.0013370513916
    8. ' range' → logprob: -16.3763370513916
    9. '```' → logprob: -17.1263370513916
    10. ',' → logprob: -17.2513370513916

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324594371020794
    2. ' range' → logprob: -3.7732460498809814
    3. '(range' → logprob: -14.773245811462402
    4. '	range' → logprob: -16.14824676513672
    5. 'rang' → logprob: -18.14824676513672
    6. ' ' → logprob: -18.14824676513672
    7. 'ange' → logprob: -18.64824676513672
    8. '.range' → logprob: -19.14824676513672
    9. ' xrange' → logprob: -19.27324676513672
    10. '   ' → logprob: -19.39824676513672

Token 123: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.026413388550281525
    2. 'mid' → logprob: -3.6514134407043457
    3. ' mid' → logprob: -9.651412963867188
    4. '[mid' → logprob: -11.276412963867188
    5. '(r' → logprob: -11.526412963867188
    6. 'r' → logprob: -11.776412963867188
    7. '(m' → logprob: -11.901412963867188
    8. '(l' → logprob: -12.401412963867188
    9. '(' → logprob: -13.026412963867188
    10. '   ' → logprob: -13.151412963867188

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018125296628568321
    2. '+' → logprob: -8.875181198120117
    3. '2' → logprob: -10.375181198120117
    4. 'mid' → logprob: -12.750181198120117
    5. ' ' → logprob: -13.750181198120117
    6. 'r' → logprob: -13.750181198120117
    7. '```' → logprob: -14.312681198120117
    8. ',' → logprob: -14.375181198120117
    9. 'range' → logprob: -14.875181198120117
    10. 'w' → logprob: -15.250181198120117

Token 125: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008781121578067541
    2. ' +' → logprob: -7.12587833404541
    3. ',' → logprob: -9.62587833404541
    4. '+,' → logprob: -12.12587833404541
    5. '+r' → logprob: -13.87587833404541
    6. '+l' → logprob: -13.87587833404541
    7. 'r' → logprob: -16.875877380371094
    8. ')+' → logprob: -17.500877380371094
    9. ' ,' → logprob: -17.875877380371094
    10. '1' → logprob: -18.000877380371094

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002560945285949856
    2. '2' → logprob: -8.375256538391113
    3. ' ' → logprob: -11.000256538391113
    4. ',' → logprob: -12.625256538391113
    5. '   ' → logprob: -13.750256538391113
    6. '+' → logprob: -13.750256538391113
    7. '```' → logprob: -14.000256538391113
    8. '0' → logprob: -14.187756538391113
    9. 'r' → logprob: -14.562756538391113
    10. '
' → logprob: -14.625256538391113

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008398807840421796
    2. ',r' → logprob: -7.125839710235596
    3. ' ,' → logprob: -10.500840187072754
    4. 'r' → logprob: -12.750840187072754
    5. ',n' → logprob: -13.125840187072754
    6. '+' → logprob: -13.250840187072754
    7. '1' → logprob: -15.250840187072754
    8. '+r' → logprob: -15.750840187072754
    9. ',m' → logprob: -15.875840187072754
    10. '```' → logprob: -16.250839233398438

Token 128: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008046258008107543
    2. ' r' → logprob: -7.125804424285889
    3. ' ' → logprob: -15.750804901123047
    4. '   ' → logprob: -17.500804901123047
    5. '```' → logprob: -18.000804901123047
    6. '	r' → logprob: -18.250804901123047
    7. '
' → logprob: -18.500804901123047
    8. '[r' → logprob: -18.875804901123047
    9. '(r' → logprob: -19.000804901123047
    10. ')' → logprob: -20.250804901123047

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15048713982105255
    2. '):
' → logprob: -2.400487184524536
    3. ')' → logprob: -4.025486946105957
    4. '-' → logprob: -4.400486946105957
    5. '<|end|>' → logprob: -4.650486946105957
    6. '0' → logprob: -5.775486946105957
    7. ':' → logprob: -6.525486946105957
    8. 'def' → logprob: -7.275486946105957
    9. ' ' → logprob: -7.775486946105957
    10. ',' → logprob: -7.900486946105957

Token 130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009384277276694775
    2. 'if' → logprob: -5.5093841552734375
    3. ' if' → logprob: -5.6343841552734375
    4. '<|end|>' → logprob: -6.8843841552734375
    5. '           ' → logprob: -8.134384155273438
    6. '       ' → logprob: -8.259384155273438
    7. '<|end|>' → logprob: -10.384384155273438
    8. '                   ' → logprob: -10.634384155273438
    9. '   ' → logprob: -10.884384155273438
    10. ' ' → logprob: -11.009384155273438

Token 131: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2705671489238739
    2. ' if' → logprob: -1.6455671787261963
    3. '               ' → logprob: -3.5205671787261963
    4. '                   ' → logprob: -4.270566940307617
    5. '                ' → logprob: -8.395566940307617
    6. '           ' → logprob: -8.770566940307617
    7. ' ' → logprob: -10.145566940307617
    8. '   ' → logprob: -10.270566940307617
    9. '<|end|>' → logprob: -10.270566940307617
    10. '                       ' → logprob: -10.520566940307617

Token 132: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0789862871170044
    2. ' s' → logprob: -2.578986167907715
    3. ' is' → logprob: -9.953986167907715
    4. 'is' → logprob: -10.453986167907715
    5. ' ' → logprob: -11.703986167907715
    6. '(s' → logprob: -12.578986167907715
    7. '_s' → logprob: -13.578986167907715
    8. '	s' → logprob: -14.141486167907715
    9. 'not' → logprob: -14.266486167907715
    10. ' ' → logprob: -14.391486167907715

Token 133: '_cat' (ID: 50384)
  Prédit: '_cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cat' → logprob: -5.512236498361744e-07
    2. 'cat' → logprob: -14.875000953674316
    3. 'Cat' → logprob: -17.0
    4. '_c' → logprob: -17.375
    5. '_CAT' → logprob: -18.375
    6. '_ca' → logprob: -18.375
    7. ' cat' → logprob: -18.5
    8. '-cat' → logprob: -19.625
    9. '_pet' → logprob: -19.625
    10. '```' → logprob: -19.75

Token 134: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.3869324028491974
    2. '(mid' → logprob: -1.136932373046875
    3. '(' → logprob: -10.636932373046875
    4. '(left' → logprob: -11.511932373046875
    5. 'mid' → logprob: -11.886932373046875
    6. '(m' → logprob: -12.011932373046875
    7. '[mid' → logprob: -13.011932373046875
    8. '((' → logprob: -13.386932373046875
    9. '```' → logprob: -13.386932373046875
    10. ' (' → logprob: -13.511932373046875

Token 135: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6711061596870422
    2. 'mid' → logprob: -1.0461061000823975
    3. '(mid' → logprob: -2.0461061000823975
    4. ' mid' → logprob: -5.421106338500977
    5. '+' → logprob: -5.796106338500977
    6. '[mid' → logprob: -7.546106338500977
    7. ',m' → logprob: -9.171106338500977
    8. ' ,' → logprob: -9.546106338500977
    9. '(' → logprob: -10.046106338500977
    10. '   ' → logprob: -11.421106338500977

Token 136: '1' (ID: 16)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.001298927003517747
    2. '1' → logprob: -7.251298904418945
    3. ' mid' → logprob: -7.751298904418945
    4. '(mid' → logprob: -9.501298904418945
    5. '[mid' → logprob: -10.251298904418945
    6. ' ' → logprob: -11.126298904418945
    7. '   ' → logprob: -11.251298904418945
    8. 'm' → logprob: -12.626298904418945
    9. '
' → logprob: -12.751298904418945
    10. '  ' → logprob: -13.001298904418945

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013577328063547611
    2. ',m' → logprob: -7.001357555389404
    3. '(mid' → logprob: -8.376358032226562
    4. 'mid' → logprob: -9.376358032226562
    5. ' ,' → logprob: -9.501358032226562
    6. '[mid' → logprob: -10.251358032226562
    7. ',
' → logprob: -11.751358032226562
    8. '(' → logprob: -12.626358032226562
    9. ',r' → logprob: -13.626358032226562
    10. ',b' → logprob: -13.626358032226562

Token 138: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -4.11996734328568e-05
    2. ' mid' → logprob: -10.125041007995605
    3. '[mid' → logprob: -14.125041007995605
    4. '   ' → logprob: -15.875041007995605
    5. '(mid' → logprob: -16.000041961669922
    6. ' ' → logprob: -17.250041961669922
    7. '           ' → logprob: -17.250041961669922
    8. '                   ' → logprob: -18.000041961669922
    9. '               ' → logprob: -18.625041961669922
    10. '
' → logprob: -19.500041961669922

Token 139: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003364158037584275
    2. '1' → logprob: -8.000336647033691
    3. '```' → logprob: -15.000336647033691
    4. ')' → logprob: -15.500336647033691
    5. '
' → logprob: -16.312835693359375
    6. 'w' → logprob: -17.312835693359375
    7. '₂' → logprob: -17.437835693359375
    8. ' ' → logprob: -17.437835693359375
    9. '۲' → logprob: -18.062835693359375
    10. '``' → logprob: -18.187835693359375

Token 140: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01331046037375927
    2. '-' → logprob: -4.388310432434082
    3. ' -' → logprob: -7.263310432434082
    4. ' )' → logprob: -9.763310432434082
    5. ')
' → logprob: -11.763310432434082
    6. '+' → logprob: -12.263310432434082
    7. '())' → logprob: -12.388310432434082
    8. '):
' → logprob: -12.513310432434082
    9. ')&&' → logprob: -12.513310432434082
    10. 'and' → logprob: -12.888310432434082

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.87501049041748
    3. ')' → logprob: -12.62501049041748
    4. '2' → logprob: -16.125011444091797
    5. '   ' → logprob: -16.250011444091797
    6. '```' → logprob: -16.625011444091797
    7. '0' → logprob: -17.250011444091797
    8. '
' → logprob: -17.750011444091797
    9. '),' → logprob: -17.750011444091797
    10. ')
' → logprob: -17.812511444091797

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20736251771450043
    2. ' and' → logprob: -1.9573625326156616
    3. 'and' → logprob: -3.082362413406372
    4. ' )' → logprob: -8.582362174987793
    5. ' ' → logprob: -13.832362174987793
    6. '                ' → logprob: -13.957362174987793
    7. '')' → logprob: -14.082362174987793
    8. '               ' → logprob: -14.332362174987793
    9. '")' → logprob: -14.582362174987793
    10. ',' → logprob: -14.582362174987793

Token 143: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25193002820014954
    2. 'and' → logprob: -1.5019299983978271
    3. '
' → logprob: -15.001930236816406
    4. ' ' → logprob: -15.126930236816406
    5. ')' → logprob: -16.126930236816406
    6. '&' → logprob: -17.126930236816406
    7. '()' → logprob: -17.126930236816406
    8. '```' → logprob: -17.126930236816406
    9. '    ' → logprob: -17.501930236816406
    10. '&&' → logprob: -17.751930236816406

Token 144: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.03804941102862358
    2. ' is' → logprob: -3.2880494594573975
    3. 's' → logprob: -12.788049697875977
    4. '(is' → logprob: -13.288049697875977
    5. '                   ' → logprob: -13.788049697875977
    6. '<|end|>' → logprob: -14.538049697875977
    7. ' ' → logprob: -14.663049697875977
    8. 'and' → logprob: -15.913049697875977
    9. '   ' → logprob: -15.913049697875977
    10. '  ' → logprob: -16.038049697875977

Token 145: '_cat' (ID: 50384)
  Prédit: '_cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cat' → logprob: -7.52919222577475e-05
    2. 'cat' → logprob: -9.500075340270996
    3. 'Cat' → logprob: -15.875075340270996
    4. '(cat' → logprob: -16.00007438659668
    5. ' cat' → logprob: -16.25007438659668
    6. '_c' → logprob: -17.75007438659668
    7. '_CAT' → logprob: -18.12507438659668
    8. '```' → logprob: -18.37507438659668
    9. '_pet' → logprob: -18.50007438659668
    10. '-cat' → logprob: -18.62507438659668

Token 146: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -12.250008583068848
    3. '((' → logprob: -13.500008583068848
    4. '(mi' → logprob: -14.000008583068848
    5. '(m' → logprob: -14.500008583068848
    6. ' (' → logprob: -14.875008583068848
    7. '[mid' → logprob: -15.625008583068848
    8. 'mid' → logprob: -16.12500762939453
    9. '(min' → logprob: -18.00000762939453
    10. '(M' → logprob: -18.87500762939453

Token 147: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.190178904333152e-05
    2. '1' → logprob: -10.375031471252441
    3. '+' → logprob: -15.250031471252441
    4. '```' → logprob: -15.875031471252441
    5. ')' → logprob: -16.000032424926758
    6. '
' → logprob: -17.562532424926758
    7. '₂' → logprob: -17.937532424926758
    8. ' ' → logprob: -18.000032424926758
    9. ',' → logprob: -18.062532424926758
    10. '۲' → logprob: -18.062532424926758

Token 148: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048693764954805374
    2. '2' → logprob: -3.0486936569213867
    3. ' +' → logprob: -10.048693656921387
    4. ',' → logprob: -10.298693656921387
    5. '1' → logprob: -10.673693656921387
    6. '()+' → logprob: -12.673693656921387
    7. '```' → logprob: -13.673693656921387
    8. '(' → logprob: -14.423693656921387
    9. ' ' → logprob: -14.923693656921387
    10. '(mid' → logprob: -15.048693656921387

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05488848686218262
    2. '2' → logprob: -2.9298884868621826
    3. ' ' → logprob: -12.804888725280762
    4. ',' → logprob: -14.242388725280762
    5. 'mid' → logprob: -14.304888725280762
    6. '11' → logprob: -14.867388725280762
    7. '
' → logprob: -15.492388725280762
    8. '```' → logprob: -15.679888725280762
    9. '12' → logprob: -16.179887771606445
    10. '3' → logprob: -16.242387771606445

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017179005080834031
    2. ',r' → logprob: -7.251718044281006
    3. ' ,' → logprob: -7.501718044281006
    4. '(mid' → logprob: -8.626717567443848
    5. '(' → logprob: -9.126717567443848
    6. '<|end|>' → logprob: -9.751717567443848
    7. '(r' → logprob: -9.876717567443848
    8. ',m' → logprob: -11.376717567443848
    9. ',n' → logprob: -11.626717567443848
    10. ',(' → logprob: -12.126717567443848

Token 151: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -4.572941179503687e-05
    2. ' mid' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.625045776367188
    4. 'r' → logprob: -17.375045776367188
    5. '(mid' → logprob: -17.625045776367188
    6. 'm' → logprob: -17.875045776367188
    7. '[mid' → logprob: -18.000045776367188
    8. ' ' → logprob: -18.750045776367188
    9. 'midt' → logprob: -19.375045776367188
    10. '
' → logprob: -19.500045776367188

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. '1' → logprob: -12.625003814697266
    3. '```' → logprob: -17.062503814697266
    4. 'mid' → logprob: -17.500003814697266
    5. '
' → logprob: -17.937503814697266
    6. 'r' → logprob: -18.000003814697266
    7. ' ' → logprob: -18.000003814697266
    8. ')' → logprob: -18.625003814697266
    9. '۲' → logprob: -18.625003814697266
    10. '+' → logprob: -18.687503814697266

Token 153: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003956343978643417
    2. ')' → logprob: -5.628956317901611
    3. 'r' → logprob: -8.62895679473877
    4. ' -' → logprob: -8.75395679473877
    5. '):
' → logprob: -12.25395679473877
    6. '-r' → logprob: -12.62895679473877
    7. '1' → logprob: -12.75395679473877
    8. '):' → logprob: -13.37895679473877
    9. '),' → logprob: -14.00395679473877
    10. '(r' → logprob: -14.12895679473877

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '2' → logprob: -14.125001907348633
    3. '11' → logprob: -14.500001907348633
    4. ' ' → logprob: -15.062501907348633
    5. '```' → logprob: -16.500001907348633
    6. '۱' → logprob: -16.625001907348633
    7. '-' → logprob: -16.687501907348633
    8. '<|end|>' → logprob: -17.125001907348633
    9. ')' → logprob: -18.312501907348633
    10. 'r' → logprob: -18.375001907348633

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011901873163878918
    2. '):' → logprob: -4.63690185546875
    3. 'and' → logprob: -6.76190185546875
    4. ' and' → logprob: -7.01190185546875
    5. '):
' → logprob: -9.63690185546875
    6. ' )' → logprob: -11.88690185546875
    7. ':' → logprob: -12.88690185546875
    8. ',' → logprob: -12.88690185546875
    9. '()' → logprob: -13.26190185546875
    10. '):

' → logprob: -13.26190185546875

Token 156: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012632899917662144
    2. 'and' → logprob: -4.387632846832275
    3. ':' → logprob: -9.762633323669434
    4. '<|end|>' → logprob: -10.137633323669434
    5. ')' → logprob: -11.762633323669434
    6. ':
' → logprob: -11.887633323669434
    7. '               ' → logprob: -12.762633323669434
    8. ' ' → logprob: -13.387633323669434
    9. '<|end|>' → logprob: -13.387633323669434
    10. '                   ' → logprob: -13.887633323669434

Token 157: ' s' (ID: 265)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0006285638664849102
    2. ' is' → logprob: -7.375628471374512
    3. 's' → logprob: -14.125628471374512
    4. ' ' → logprob: -15.250628471374512
    5. '(is' → logprob: -15.250628471374512
    6. '   ' → logprob: -15.625628471374512
    7. 'r' → logprob: -16.750629425048828
    8. '           ' → logprob: -16.750629425048828
    9. 'w' → logprob: -16.750629425048828
    10. '  ' → logprob: -17.250629425048828

Token 158: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.000580792548134923
    2. '[' → logprob: -7.500580787658691
    3. '[m' → logprob: -11.750580787658691
    4. '```' → logprob: -12.375580787658691
    5. '[mem' → logprob: -12.625580787658691
    6. '\[' → logprob: -12.875580787658691
    7. 'mid' → logprob: -12.875580787658691
    8. '[
' → logprob: -13.625580787658691
    9. '[s' → logprob: -14.000580787658691
    10. '(mid' → logprob: -14.125580787658691

Token 159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.372294698550832e-06
    2. '1' → logprob: -12.500009536743164
    3. 'w' → logprob: -13.250009536743164
    4. ' ' → logprob: -14.437509536743164
    5. 'token' → logprob: -14.812509536743164
    6. 'mid' → logprob: -14.812509536743164
    7. '```' → logprob: -15.062509536743164
    8. ']' → logprob: -15.250009536743164
    9. '[mid' → logprob: -15.250009536743164
    10. '[' → logprob: -15.437509536743164

Token 160: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4289521872997284
    2. ' ==' → logprob: -1.1789522171020508
    3. ']' → logprob: -3.428952217102051
    4. ']==' → logprob: -5.303952217102051
    5. '[' → logprob: -6.803952217102051
    6. ''' → logprob: -7.303952217102051
    7. '=' → logprob: -7.428952217102051
    8. '']' → logprob: -7.428952217102051
    9. '=='' → logprob: -7.928952217102051
    10. ')' → logprob: -9.67895221710205

Token 161: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0669143870472908
    2. ' ==' → logprob: -2.8169143199920654
    3. '=='' → logprob: -6.1919145584106445
    4. '=' → logprob: -6.6919145584106445
    5. ''' → logprob: -7.4419145584106445
    6. '[' → logprob: -7.6919145584106445
    7. ']' → logprob: -8.441914558410645
    8. ']==' → logprob: -8.566914558410645
    9. '']' → logprob: -10.191914558410645
    10. ')' → logprob: -11.441914558410645

Token 162: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.42517992854118347
    2. ''w' → logprob: -1.5501799583435059
    3. ''o' → logprob: -2.800179958343506
    4. ''e' → logprob: -3.800179958343506
    5. ''i' → logprob: -4.300179958343506
    6. ''' → logprob: -4.300179958343506
    7. ''t' → logprob: -4.925179958343506
    8. ''m' → logprob: -4.925179958343506
    9. ''s' → logprob: -5.925179958343506
    10. ''r' → logprob: -6.800179958343506

Token 163: 'w' (ID: 86)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9572181105613708
    2. 'o' → logprob: -0.9572181105613708
    3. 'w' → logprob: -2.3322181701660156
    4. ''a' → logprob: -3.5822181701660156
    5. 'e' → logprob: -3.8322181701660156
    6. ''o' → logprob: -4.082218170166016
    7. 't' → logprob: -4.207218170166016
    8. ''w' → logprob: -4.457218170166016
    9. ''s' → logprob: -4.832218170166016
    10. ''' → logprob: -5.457218170166016

Token 164: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.03585611656308174
    2. ''' → logprob: -3.910856008529663
    3. ':' → logprob: -5.160856246948242
    4. '':
' → logprob: -5.285856246948242
    5. ''):' → logprob: -6.660856246948242
    6. ' and' → logprob: -7.160856246948242
    7. '):' → logprob: -7.535856246948242
    8. '<|end|>' → logprob: -8.035856246948242
    9. ''):
' → logprob: -8.160856246948242
    10. '')' → logprob: -8.285856246948242

Token 165: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23106680810451508
    2. ':' → logprob: -2.2310667037963867
    3. ' and' → logprob: -3.1060667037963867
    4. ':return' → logprob: -3.7310667037963867
    5. ':
' → logprob: -4.481066703796387
    6. '                       ' → logprob: -4.856066703796387
    7. '               ' → logprob: -5.481066703796387
    8. '<|end|>' → logprob: -6.481066703796387
    9. '):' → logprob: -6.981066703796387
    10. ' :' → logprob: -7.481066703796387

Token 166: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014365517534315586
    2. ' return' → logprob: -4.2643656730651855
    3. '                       ' → logprob: -8.889365196228027
    4. '                   ' → logprob: -10.014365196228027
    5. 'if' (adapté à ' if') → logprob: -11.764365196228027
    6. '               ' → logprob: -13.014365196228027
    7. '   ' → logprob: -13.264365196228027
    8. '       ' → logprob: -13.264365196228027
    9. '
' → logprob: -13.639365196228027
    10. '	return' → logprob: -13.764365196228027

Token 167: ' mid' (ID: 6959)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2636656165122986
    2. 'is' → logprob: -1.5136656761169434
    3. ' s' → logprob: -5.263665676116943
    4. 's' → logprob: -6.138665676116943
    5. 'r' → logprob: -6.388665676116943
    6. ' mid' → logprob: -7.138665676116943
    7. ' r' → logprob: -7.388665676116943
    8. 'mid' → logprob: -7.388665676116943
    9. ' True' → logprob: -8.638665199279785
    10. 'True' → logprob: -8.763665199279785

Token 168: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005592276575043797
    2. '1' → logprob: -7.500559329986572
    3. '+' → logprob: -12.875558853149414
    4. '```' → logprob: -13.750558853149414
    5. ' ' → logprob: -15.063058853149414
    6. ')' → logprob: -15.500558853149414
    7. '₂' → logprob: -15.563058853149414
    8. '-' → logprob: -15.563058853149414
    9. '...' → logprob: -15.813058853149414
    10. '<|end|>' → logprob: -15.938058853149414

Token 169: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6740665435791016
    2. '==' → logprob: -0.7990665435791016
    3. '+' → logprob: -3.2990665435791016
    4. '<=' → logprob: -6.674066543579102
    5. ' <=' → logprob: -6.674066543579102
    6. ' +' → logprob: -6.924066543579102
    7. '<|end|>' → logprob: -9.299066543579102
    8. '>' → logprob: -10.674066543579102
    9. '>=' → logprob: -11.299066543579102
    10. ' >' → logprob: -11.549066543579102

Token 170: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0024768433067947626
    2. ' r' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.127476692199707
    4. ' ' → logprob: -15.502476692199707
    5. '(r' → logprob: -15.877476692199707
    6. '	r' → logprob: -17.002477645874023
    7. 'n' → logprob: -17.064977645874023
    8. 's' → logprob: -17.627477645874023
    9. '=r' → logprob: -17.814977645874023
    10. 'w' → logprob: -18.002477645874023

Token 171: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7859209775924683
    2. ':' → logprob: -0.9109209775924683
    3. '                       ' → logprob: -2.410921096801758
    4. ':return' → logprob: -3.035921096801758
    5. '                   ' → logprob: -6.910921096801758
    6. ' or' → logprob: -6.910921096801758
    7. '                           ' → logprob: -7.285921096801758
    8. ' and' → logprob: -7.410921096801758
    9. 'return' → logprob: -7.910921096801758
    10. '):
' → logprob: -9.035921096801758

Token 172: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.054110586643218994
    2. 'return' → logprob: -3.054110527038574
    3. ' return' → logprob: -5.304110527038574
    4. '                   ' → logprob: -7.929110527038574
    5. '               ' → logprob: -9.429110527038574
    6. '                           ' → logprob: -10.179110527038574
    7. '       ' → logprob: -10.679110527038574
    8. '           ' → logprob: -10.679110527038574
    9. '   ' → logprob: -12.304110527038574
    10. '                        
' → logprob: -13.304110527038574

Token 173: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.040315400809049606
    2. '                       ' → logprob: -3.2903153896331787
    3. ' return' → logprob: -6.165315628051758
    4. '                           ' → logprob: -9.665315628051758
    5. '
' → logprob: -10.165315628051758
    6. '                   ' → logprob: -10.540315628051758
    7. '   ' → logprob: -11.290315628051758
    8. '	return' → logprob: -11.665315628051758
    9. '                        
' → logprob: -12.040315628051758
    10. '               ' → logprob: -12.290315628051758

Token 174: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001234428636962548
    2. ' True' → logprob: -9.000123023986816
    3. '(True' → logprob: -18.875123977661133
    4. 'False' → logprob: -19.375123977661133
    5. '=True' → logprob: -20.750123977661133
    6. '   ' → logprob: -21.000123977661133
    7. 'true' → logprob: -22.250123977661133
    8. ' ' → logprob: -22.375123977661133
    9. '1' → logprob: -23.875123977661133
    10. 'Tr' → logprob: -24.000123977661133

Token 175: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9151463508605957
    2. '                   ' → logprob: -1.0401463508605957
    3. '           ' → logprob: -2.2901463508605957
    4. 'return' → logprob: -2.5401463508605957
    5. '               ' → logprob: -3.2901463508605957
    6. '       ' → logprob: -3.7901463508605957
    7. '
' → logprob: -5.790146350860596
    8. ' return' → logprob: -7.040146350860596
    9. '                       ' → logprob: -7.790146350860596
    10. '	return' → logprob: -8.165145874023438

Token 176: '   ' (ID: 271)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7631691694259644
    2. '       ' → logprob: -2.138169288635254
    3. '               ' → logprob: -2.138169288635254
    4. '   ' → logprob: -2.388169288635254
    5. '                       ' → logprob: -2.763169288635254
    6. '           ' → logprob: -3.138169288635254
    7. '<|end|>' → logprob: -4.138169288635254
    8. ' return' → logprob: -4.763169288635254
    9. ' ' → logprob: -4.763169288635254
    10. '    ' → logprob: -4.888169288635254

Token 177: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004987185820937157
    2. '   ' → logprob: -6.0049872398376465
    3. 'False' → logprob: -6.2549872398376465
    4. ' return' → logprob: -7.6299872398376465
    5. '	return' → logprob: -10.754986763000488
    6. 'eturn' → logprob: -11.254986763000488
    7. '       ' → logprob: -11.379986763000488
    8. 'None' → logprob: -11.379986763000488
    9. ':return' → logprob: -11.504986763000488
    10. '```' → logprob: -11.879986763000488

Token 178: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011293789139017463
    2. ' return' → logprob: -7.001129150390625
    3. '   ' → logprob: -8.501129150390625
    4. 'eturn' → logprob: -12.376129150390625
    5. 'for' → logprob: -12.626129150390625
    6. 'if' → logprob: -13.501129150390625
    7. '	return' → logprob: -13.501129150390625
    8. '```' → logprob: -13.876129150390625
    9. ' ' → logprob: -14.501129150390625
    10. 'Return' → logprob: -14.626129150390625

Token 179: ' above' (ID: 5151)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008638089522719383
    2. ' return' → logprob: -4.75863790512085
    3. '   ' → logprob: -11.758638381958008
    4. '#' → logprob: -11.883638381958008
    5. '```' → logprob: -13.258638381958008
    6. 'eturn' → logprob: -13.383638381958008
    7. ' ' → logprob: -13.633638381958008
    8. '
' → logprob: -13.883638381958008
    9. '	return' → logprob: -14.008638381958008
    10. 'False' → logprob: -14.508638381958008

Token 180: ' loop' (ID: 11453)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0488128624856472
    2. ' return' → logprob: -3.1738128662109375
    3. '   ' → logprob: -5.1738128662109375
    4. '
' → logprob: -9.548812866210938
    5. '	return' → logprob: -10.548812866210938
    6. ' ' → logprob: -11.423812866210938
    7. '```' → logprob: -11.923812866210938
    8. '    
' → logprob: -12.298812866210938
    9. '<|end|>' → logprob: -12.548812866210938
    10. 'eturn' → logprob: -12.923812866210938

Token 181: ' checks' (ID: 22097)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10285677760839462
    2. 'return' → logprob: -2.7278568744659424
    3. ' return' → logprob: -3.4778568744659424
    4. '       ' → logprob: -7.477856636047363
    5. '
' → logprob: -8.602856636047363
    6. ' ' → logprob: -8.852856636047363
    7. ' is' → logprob: -8.977856636047363
    8. ':return' → logprob: -9.352856636047363
    9. '           ' → logprob: -9.602856636047363
    10. '	return' → logprob: -9.727856636047363

Token 182: ' possible' (ID: 4149)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1611713320016861
    2. '   ' → logprob: -2.1611714363098145
    3. ' return' → logprob: -3.4111714363098145
    4. '       ' → logprob: -8.786170959472656
    5. ' ' → logprob: -8.911170959472656
    6. 'for' → logprob: -9.286170959472656
    7. ' for' → logprob: -9.536170959472656
    8. '	return' → logprob: -10.036170959472656
    9. '           ' → logprob: -10.286170959472656
    10. '```' → logprob: -10.286170959472656

Token 183: ' split' (ID: 12648)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05129779875278473
    2. ' return' → logprob: -3.176297903060913
    3. 'com' → logprob: -6.176297664642334
    4. '   ' → logprob: -6.426297664642334
    5. 'for' → logprob: -7.676297664642334
    6. 'sub' → logprob: -7.801297664642334
    7. 'segments' → logprob: -7.801297664642334
    8. 'returns' → logprob: -7.926297664642334
    9. 'spl' → logprob: -8.051298141479492
    10. 's' → logprob: -8.176298141479492

Token 184: ' points' (ID: 5571)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10722200572490692
    2. '   ' → logprob: -2.482222080230713
    3. ' return' → logprob: -4.107222080230713
    4. ' ' → logprob: -7.732222080230713
    5. ':return' → logprob: -7.857222080230713
    6. '       ' → logprob: -8.607221603393555
    7. '	return' → logprob: -8.607221603393555
    8. '
' → logprob: -9.232221603393555
    9. 'eturn' → logprob: -9.732221603393555
    10. ')' → logprob: -9.732221603393555

Token 185: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16379773616790771
    2. 'return' → logprob: -1.9137977361679077
    3. ' return' → logprob: -5.788797855377197
    4. '	return' → logprob: -9.163797378540039
    5. ':return' → logprob: -9.163797378540039
    6. '<|end|>' → logprob: -9.163797378540039
    7. '       ' → logprob: -9.913797378540039
    8. '    
' → logprob: -10.038797378540039
    9. '
' → logprob: -10.538797378540039
    10. ' ' → logprob: -10.663797378540039

Token 186: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6737266778945923
    2. 'the' → logprob: -1.0487266778945923
    3. ' the' → logprob: -3.2987265586853027
    4. 'is' → logprob: -3.4237265586853027
    5. 'if' → logprob: -4.298726558685303
    6. ' s' → logprob: -4.673726558685303
    7. 'return' → logprob: -4.798726558685303
    8. 'True' → logprob: -5.048726558685303
    9. 'next' → logprob: -5.173726558685303
    10. '<|end|>' → logprob: -5.423726558685303

Token 187: 'e' (ID: 68)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38318759202957153
    2. 'e' → logprob: -2.0081875324249268
    3. 'w' → logprob: -3.5081875324249268
    4. '<|end|>' → logprob: -3.6331875324249268
    5. ')' → logprob: -3.8831875324249268
    6. ''s' → logprob: -4.008187770843506
    7. '')' → logprob: -4.008187770843506
    8. 'm' → logprob: -4.383187770843506
    9. 'the' → logprob: -4.383187770843506
    10. 'mid' → logprob: -4.633187770843506

Token 188: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005761691834777594
    2. '')' → logprob: -6.005761623382568
    3. 'w' → logprob: -6.755761623382568
    4. ''s' → logprob: -7.130761623382568
    5. ' is' → logprob: -8.130762100219727
    6. ' and' → logprob: -8.380762100219727
    7. 's' → logprob: -8.755762100219727
    8. ' '' → logprob: -9.130762100219727
    9. ''w' → logprob: -9.380762100219727
    10. ')' → logprob: -9.880762100219727

Token 189: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1417977809906006
    2. '<|end|>' → logprob: -1.3917977809906006
    3. ' and' → logprob: -1.8917977809906006
    4. 'return' → logprob: -2.0167977809906006
    5. '       ' → logprob: -2.8917977809906006
    6. ' return' → logprob: -3.5167977809906006
    7. '           ' → logprob: -3.7667977809906006
    8. '               ' → logprob: -4.76679801940918
    9. ' ' → logprob: -4.76679801940918
    10. ':return' → logprob: -5.51679801940918

Token 190: ' '' (ID: 461)
  Prédit: ''w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''w' → logprob: -0.19839449226856232
    2. ''s' → logprob: -2.073394536972046
    3. ''' → logprob: -3.823394536972046
    4. 'w' → logprob: -3.948394536972046
    5. 's' → logprob: -5.198394298553467
    6. ' '' → logprob: -5.448394298553467
    7. ''m' → logprob: -7.073394298553467
    8. ' w' → logprob: -7.823394298553467
    9. '   ' → logprob: -8.198394775390625
    10. '`' → logprob: -8.198394775390625

Token 191: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6355934739112854
    2. ''w' → logprob: -0.7605934739112854
    3. ''s' → logprob: -7.010593414306641
    4. ''' → logprob: -7.260593414306641
    5. ' w' → logprob: -7.385593414306641
    6. ' '' → logprob: -8.88559341430664
    7. ''e' → logprob: -9.13559341430664
    8. ''m' → logprob: -9.38559341430664
    9. 's' → logprob: -9.51059341430664
    10. '`' → logprob: -9.63559341430664

Token 192: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.058355629444122314
    2. 'return' → logprob: -3.3083555698394775
    3. ' are' → logprob: -4.933355808258057
    4. ' return' → logprob: -5.058355808258057
    5. ' continue' → logprob: -6.808355808258057
    6. ')' → logprob: -6.933355808258057
    7. 'continue' → logprob: -7.058355808258057
    8. 's' → logprob: -7.433355808258057
    9. ''re' → logprob: -7.683355808258057
    10. ''s' → logprob: -7.933355808258057

Token 193: ' fit' (ID: 5769)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7762473225593567
    2. '<|end|>' → logprob: -1.151247262954712
    3. 'return' → logprob: -2.276247262954712
    4. ' return' → logprob: -3.026247262954712
    5. '
' → logprob: -3.151247262954712
    6. '	return' → logprob: -5.026247501373291
    7. ':return' → logprob: -5.151247501373291
    8. '       ' → logprob: -5.276247501373291
    9. ' ' → logprob: -5.401247501373291
    10. ')' → logprob: -6.401247501373291

Token 194: ' cat' (ID: 9059)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011721387505531311
    2. '<|end|>' → logprob: -5.136721611022949
    3. '       ' → logprob: -6.511721611022949
    4. 'return' → logprob: -6.761721611022949
    5. ')' → logprob: -7.261721611022949
    6. '	return' → logprob: -7.636721611022949
    7. ':return' → logprob: -7.761721611022949
    8. ' ' → logprob: -7.886721611022949
    9. ' return' → logprob: -8.38672161102295
    10. '
' → logprob: -8.38672161102295

Token 195: ' structure' (ID: 8866)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0069135758094489574
    2. '<|end|>' → logprob: -6.381913661956787
    3. '       ' → logprob: -6.631913661956787
    4. 'return' → logprob: -6.631913661956787
    5. ' ' → logprob: -7.381913661956787
    6. ':return' → logprob: -7.881913661956787
    7. '	return' → logprob: -8.006913185119629
    8. '    
' → logprob: -8.131913185119629
    9. ')' → logprob: -8.631913185119629
    10. ' return' → logprob: -8.756913185119629

Token 196: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21558527648448944
    2. '   ' → logprob: -1.7155852317810059
    3. ' return' → logprob: -4.340585231781006
    4. '	return' → logprob: -7.965585231781006
    5. ':return' → logprob: -8.590585708618164
    6. '<|end|>' → logprob: -8.715585708618164
    7. 'eturn' → logprob: -9.465585708618164
    8. '       ' → logprob: -9.465585708618164
    9. ' ' → logprob: -10.215585708618164
    10. '  ' → logprob: -10.965585708618164

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47716063261032104
    2. '<|end|>' → logprob: -1.8521606922149658
    3. ':' → logprob: -2.352160692214966
    4. ':return' → logprob: -2.602160692214966
    5. '       ' → logprob: -3.602160692214966
    6. ')' → logprob: -4.727160453796387
    7. ' return' → logprob: -5.352160453796387
    8. '	return' → logprob: -5.727160453796387
    9. ' ' → logprob: -5.977160453796387
    10. 'return' → logprob: -5.977160453796387

Token 198: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2571987211704254
    2. 'return' → logprob: -1.882198691368103
    3. '<|end|>' → logprob: -3.3821988105773926
    4. ' return' → logprob: -4.382198810577393
    5. '       ' → logprob: -4.382198810577393
    6. ':return' → logprob: -4.757198810577393
    7. '	return' → logprob: -5.757198810577393
    8. ')' → logprob: -7.257198810577393
    9. '.' → logprob: -7.257198810577393
    10. ' ' → logprob: -7.632198810577393

Token 199: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04625679552555084
    2. 'return' → logprob: -3.1712567806243896
    3. ' return' → logprob: -5.921257019042969
    4. '	return' → logprob: -8.171257019042969
    5. '<|end|>' → logprob: -8.796257019042969
    6. ' ' → logprob: -9.796257019042969
    7. '       ' → logprob: -10.546257019042969
    8. ':return' → logprob: -11.046257019042969
    9. '```' → logprob: -11.796257019042969
    10. ')' → logprob: -12.046257019042969

Token 200: ' as' (ID: 472)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.94296795129776
    2. '   ' → logprob: -1.1929678916931152
    3. ' return' → logprob: -1.1929678916931152
    4. ':return' → logprob: -6.817967891693115
    5. '       ' → logprob: -6.942967891693115
    6. '	return' → logprob: -7.942967891693115
    7. ' ' → logprob: -8.067968368530273
    8. '
' → logprob: -8.442968368530273
    9. '           ' → logprob: -8.942968368530273
    10. '    ' → logprob: -8.942968368530273

Token 201: ' per' (ID: 777)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6740003228187561
    2. ' written' → logprob: -1.4240002632141113
    3. ' it' → logprob: -2.1740002632141113
    4. ' is' → logprob: -3.5490002632141113
    5. 'the' → logprob: -4.049000263214111
    6. ' s' → logprob: -4.424000263214111
    7. ' r' → logprob: -4.799000263214111
    8. 's' → logprob: -4.924000263214111
    9. ' not' → logprob: -5.049000263214111
    10. ' currently' → logprob: -5.174000263214111

Token 202: ' definition' (ID: 16083)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.06784036010503769
    2. ' the' → logprob: -3.442840337753296
    3. 'problem' → logprob: -3.942840337753296
    4. 'Python' → logprob: -5.442840576171875
    5. ' problem' → logprob: -5.817840576171875
    6. 'your' → logprob: -6.192840576171875
    7. ' your' → logprob: -6.442840576171875
    8. ' indentation' → logprob: -6.817840576171875
    9. 'current' → logprob: -7.567840576171875
    10. 'given' → logprob: -8.567840576171875

Token 203: ' last' (ID: 2174)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015333651565015316
    2. '       ' → logprob: -4.765333652496338
    3. ',' → logprob: -5.640333652496338
    4. 'return' → logprob: -7.265333652496338
    5. ' return' → logprob: -7.390333652496338
    6. ':return' → logprob: -7.390333652496338
    7. '    
' → logprob: -8.01533317565918
    8. '    ' → logprob: -8.51533317565918
    9. '<|end|>' → logprob: -8.51533317565918
    10. '	return' → logprob: -9.01533317565918

Token 204: ' character' (ID: 5855)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1558123081922531
    2. ' return' → logprob: -2.6558122634887695
    3. 'return' → logprob: -3.2808122634887695
    4. 'w' → logprob: -4.1558122634887695
    5. ' ' → logprob: -5.0308122634887695
    6. '    ' → logprob: -5.7808122634887695
    7. '       ' → logprob: -5.9058122634887695
    8. ')' → logprob: -6.4058122634887695
    9. ' w' → logprob: -6.5308122634887695
    10. '  ' → logprob: -6.7808122634887695

Token 205: ' has' (ID: 853)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31110328435897827
    2. ':return' → logprob: -1.811103343963623
    3. ' return' → logprob: -3.061103343963623
    4. 'return' → logprob: -4.186103343963623
    5. ')' → logprob: -4.186103343963623
    6. '   ' → logprob: -4.936103343963623
    7. ':
' → logprob: -5.061103343963623
    8. '<|end|>' → logprob: -5.436103343963623
    9. ' is' → logprob: -5.936103343963623
    10. '):' → logprob: -6.811103343963623

Token 206: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6330713629722595
    2. ' to' → logprob: -0.7580713629722595
    3. ')' → logprob: -8.508070945739746
    4. '<|end|>' → logprob: -9.008070945739746
    5. ' be' → logprob: -9.758070945739746
    6. 't' → logprob: -10.508070945739746
    7. 'be' → logprob: -11.383070945739746
    8. '=' → logprob: -11.633070945739746
    9. 's' → logprob: -11.883070945739746
    10. 'return' → logprob: -12.633070945739746

Token 207: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.31366249918937683
    2. ' be' → logprob: -1.3136625289916992
    3. 'w' → logprob: -8.6886625289917
    4. 'return' → logprob: -9.0636625289917
    5. 'always' → logprob: -10.1886625289917
    6. '```' → logprob: -11.0636625289917
    7. 'b' → logprob: -11.1886625289917
    8. ' return' → logprob: -11.6886625289917
    9. ' always' → logprob: -11.6886625289917
    10. ')' → logprob: -11.8136625289917

Token 208: ' '' (ID: 461)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5822916030883789
    2. ''w' → logprob: -0.8322916030883789
    3. ' '' → logprob: -6.332291603088379
    4. '`' → logprob: -6.582291603088379
    5. ''' → logprob: -6.582291603088379
    6. '```' → logprob: -7.957291603088379
    7. ''m' → logprob: -8.082291603088379
    8. ' w' → logprob: -8.207291603088379
    9. ''s' → logprob: -8.707291603088379
    10. ''r' → logprob: -9.082291603088379

Token 209: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023817775771021843
    2. 'm' → logprob: -4.023817539215088
    3. ''' → logprob: -5.898817539215088
    4. ''w' → logprob: -7.023817539215088
    5. 's' → logprob: -8.148818016052246
    6. ')' → logprob: -8.398818016052246
    7. '"' → logprob: -8.648818016052246
    8. 'n' → logprob: -8.773818016052246
    9. ''m' → logprob: -8.898818016052246
    10. '')' → logprob: -9.023818016052246

Token 210: '',' (ID: 787)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04822244867682457
    2. 'return' → logprob: -3.173222541809082
    3. ' return' → logprob: -5.298222541809082
    4. '	return' → logprob: -9.298222541809082
    5. '       ' → logprob: -9.798222541809082
    6. ':return' → logprob: -10.798222541809082
    7. '<|end|>' → logprob: -11.298222541809082
    8. '
' → logprob: -12.048222541809082
    9. '    
' → logprob: -12.298222541809082
    10. '```' → logprob: -12.298222541809082

Token 212: ' let's' (ID: 35717)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.019226597622036934
    2. ' return' → logprob: -4.019226551055908
    3. '   ' → logprob: -7.019226551055908
    4. '           ' → logprob: -10.019227027893066
    5. '       ' → logprob: -10.019227027893066
    6. '               ' → logprob: -10.269227027893066
    7. '	return' → logprob: -10.519227027893066
    8. '                   ' → logprob: -11.644227027893066
    9. '
' → logprob: -12.269227027893066
    10. ':return' → logprob: -12.269227027893066

Token 213: ' adjust' (ID: 10266)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.039059583097696304
    2. ' return' → logprob: -3.289059638977051
    3. 'continue' → logprob: -7.664059638977051
    4. 'remove' → logprob: -8.28905963897705
    5. 'replace' → logprob: -9.28905963897705
    6. 'add' → logprob: -10.03905963897705
    7. '   ' → logprob: -10.16405963897705
    8. ' add' → logprob: -10.41405963897705
    9. ' continue' → logprob: -11.03905963897705
    10. '           ' → logprob: -11.03905963897705

Token 214: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04696290194988251
    2. '       ' → logprob: -3.7969629764556885
    3. '<|end|>' → logprob: -4.921962738037109
    4. '                   ' → logprob: -5.546962738037109
    5. '               ' → logprob: -5.921962738037109
    6. '           ' → logprob: -6.046962738037109
    7. ' ' → logprob: -6.921962738037109
    8. '    ' → logprob: -7.046962738037109
    9. '
' → logprob: -7.171962738037109
    10. '                       ' → logprob: -7.296962738037109

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2486201673746109
    2. '<|end|>' → logprob: -2.8736202716827393
    3. '       ' → logprob: -3.1236202716827393
    4. ' ' → logprob: -3.2486202716827393
    5. '    ' → logprob: -3.4986202716827393
    6. ' return' → logprob: -4.37362003326416
    7. '	return' → logprob: -4.49862003326416
    8. ' 
' → logprob: -4.62362003326416
    9. '    
' → logprob: -5.62362003326416
    10. '
' → logprob: -5.74862003326416

Token 216: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022152617573738098
    2. '       ' → logprob: -4.397152423858643
    3. ' return' → logprob: -5.522152423858643
    4. '<|end|>' → logprob: -6.272152423858643
    5. '    ' → logprob: -6.397152423858643
    6. '	return' → logprob: -7.272152423858643
    7. 'return' → logprob: -7.522152423858643
    8. '    
' → logprob: -8.6471529006958
    9. ' ' → logprob: -9.3971529006958
    10. '
' → logprob: -9.5221529006958

Token 217: ' Actually' (ID: 50557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02485848218202591
    2. ' return' → logprob: -4.399858474731445
    3. '       ' → logprob: -5.274858474731445
    4. '                   ' → logprob: -6.524858474731445
    5. 'return' → logprob: -6.524858474731445
    6. '               ' → logprob: -6.899858474731445
    7. '           ' → logprob: -7.149858474731445
    8. ' ' → logprob: -7.399858474731445
    9. '    ' → logprob: -7.399858474731445
    10. '	return' → logprob: -7.899858474731445

Token 218: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8318446278572083
    2. ' return' → logprob: -1.3318445682525635
    3. 'return' → logprob: -1.7068445682525635
    4. '    ' → logprob: -3.4568445682525635
    5. '               ' → logprob: -4.081844806671143
    6. '   ' → logprob: -4.081844806671143
    7. '                       ' → logprob: -4.456844806671143
    8. '        ' → logprob: -4.831844806671143
    9. ':return' → logprob: -5.206844806671143
    10. ' ' → logprob: -5.331844806671143

Token 219: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8847877383232117
    2. ' return' → logprob: -1.3847877979278564
    3. 'return' → logprob: -1.5097877979278564
    4. 'for' → logprob: -2.5097877979278564
    5. ' if' → logprob: -4.259787559509277
    6. '   ' → logprob: -4.509787559509277
    7. 'if' → logprob: -6.009787559509277
    8. '           ' → logprob: -6.759787559509277
    9. '    ' → logprob: -6.884787559509277
    10. '               ' → logprob: -7.009787559509277

Token 220: ' B' (ID: 418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9074772596359253
    2. 'range' → logprob: -1.9074772596359253
    3. 'the' → logprob: -2.032477378845215
    4. ' the' → logprob: -2.157477378845215
    5. ' l' → logprob: -2.282477378845215
    6. ' range' → logprob: -3.782477378845215
    7. 'mid' → logprob: -4.157477378845215
    8. 'r' → logprob: -4.282477378845215
    9. ' here' → logprob: -4.657477378845215
    10. ' mid' → logprob: -5.657477378845215

Token 221: 'NF' (ID: 64104)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4059705436229706
    2. '-' → logprob: -2.655970573425293
    3. '+' → logprob: -2.905970573425293
    4. ':' → logprob: -3.030970573425293
    5. 'r' → logprob: -3.405970573425293
    6. '<|end|>' → logprob: -3.405970573425293
    7. '[' → logprob: -4.280970573425293
    8. 'reak' → logprob: -4.530970573425293
    9. 'u' → logprob: -4.780970573425293
    10. ']' → logprob: -5.155970573425293

Token 222: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03144925460219383
    2. '<|end|>' → logprob: -4.781449317932129
    3. ':return' → logprob: -4.781449317932129
    4. '):' → logprob: -5.281449317932129
    5. ':
' → logprob: -5.406449317932129
    6. '   ' → logprob: -6.156449317932129
    7. ')' → logprob: -7.281449317932129
    8. '<|end|>' → logprob: -7.906449317932129
    9. ' ' → logprob: -8.406449317932129
    10. ' :' → logprob: -8.531449317932129

Token 223: ' '' (ID: 461)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: 'm' (ID: 76)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9376675486564636
    2. '')' → logprob: -1.8126676082611084
    3. 'm' → logprob: -2.1876676082611084
    4. ''' → logprob: -2.4376676082611084
    5. 's' → logprob: -2.6876676082611084
    6. 'w' → logprob: -3.5626676082611084
    7. 'n' → logprob: -3.5626676082611084
    8. ' ')' → logprob: -4.187667369842529
    9. 'e' → logprob: -4.437667369842529
    10. 'c' → logprob: -4.437667369842529

Token 225: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3600330948829651
    2. ''' → logprob: -1.8600330352783203
    3. ')' → logprob: -2.8600330352783203
    4. '[l' → logprob: -3.3600330352783203
    5. '[' → logprob: -3.7350330352783203
    6. ']' → logprob: -5.23503303527832
    7. '<|end|>' → logprob: -5.23503303527832
    8. ' ')' → logprob: -5.98503303527832
    9. '']' → logprob: -6.23503303527832
    10. 'w' → logprob: -6.36003303527832

Token 226: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' X' (ID: 2127)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1785801500082016
    2. ' is' → logprob: -2.6785800457000732
    3. ''s' → logprob: -3.1785800457000732
    4. 's' → logprob: -4.053580284118652
    5. ''' → logprob: -4.928580284118652
    6. ''is' → logprob: -5.428580284118652
    7. 'm' → logprob: -5.553580284118652
    8. '"' → logprob: -5.678580284118652
    9. '"is' → logprob: -6.303580284118652
    10. 'cat' → logprob: -6.303580284118652

Token 228: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.5353537797927856
    2. ')' → logprob: -1.6603537797927856
    3. '+' → logprob: -1.7853537797927856
    4. '<|end|>' → logprob: -2.160353660583496
    5. ':' → logprob: -2.410353660583496
    6. '   ' → logprob: -3.160353660583496
    7. ' +' → logprob: -3.285353660583496
    8. '):' → logprob: -3.910353660583496
    9. '[' → logprob: -4.035353660583496
    10. ',' → logprob: -4.535353660583496

Token 229: ' '' (ID: 461)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.23024927079677582
    2. ''w' → logprob: -2.8552491664886475
    3. ''s' → logprob: -3.4802491664886475
    4. ''' → logprob: -3.7302491664886475
    5. 's' → logprob: -3.7302491664886475
    6. 'X' → logprob: -3.8552491664886475
    7. 'r' → logprob: -4.605249404907227
    8. 'Y' → logprob: -5.105249404907227
    9. 'm' → logprob: -5.355249404907227
    10. '<|end|>' → logprob: -5.605249404907227

Token 230: 'e' (ID: 68)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6625785231590271
    2. 'e' → logprob: -0.7875785231590271
    3. ''e' → logprob: -4.662578582763672
    4. ''' → logprob: -5.037578582763672
    5. 'm' → logprob: -5.537578582763672
    6. 'cat' → logprob: -5.912578582763672
    7. 'ew' → logprob: -6.412578582763672
    8. ''w' → logprob: -6.662578582763672
    9. '')' → logprob: -7.662578582763672
    10. 'c' → logprob: -7.662578582763672

Token 231: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12396156042814255
    2. '')' → logprob: -2.9989614486694336
    3. ')' → logprob: -3.6239614486694336
    4. '+' → logprob: -4.123961448669434
    5. ' '' → logprob: -5.373961448669434
    6. 'w' → logprob: -5.498961448669434
    7. ' +' → logprob: -6.123961448669434
    8. ' and' → logprob: -6.123961448669434
    9. ''+' → logprob: -6.998961448669434
    10. '<|end|>' → logprob: -6.998961448669434

Token 232: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' Y' (ID: 865)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.44200992584228516
    2. 'X' → logprob: -2.317009925842285
    3. 'Y' → logprob: -2.317009925842285
    4. ''' → logprob: -3.192009925842285
    5. ' Y' → logprob: -3.817009925842285
    6. 's' → logprob: -3.942009925842285
    7. ' w' → logprob: -3.942009925842285
    8. ' X' → logprob: -4.317009925842285
    9. ' '' → logprob: -4.692009925842285
    10. ''w' → logprob: -4.817009925842285

Token 234: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' '' (ID: 461)
  Prédit: ''w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''w' → logprob: -0.08557524532079697
    2. 'w' → logprob: -2.7105753421783447
    3. ''' → logprob: -5.210575103759766
    4. ' '' → logprob: -5.335575103759766
    5. ''s' → logprob: -6.335575103759766
    6. ''r' → logprob: -6.335575103759766
    7. '`' → logprob: -8.210575103759766
    8. ' w' → logprob: -8.335575103759766
    9. ')' → logprob: -8.585575103759766
    10. '   ' → logprob: -8.835575103759766

Token 236: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.021980373188853264
    2. ''' → logprob: -4.021980285644531
    3. '')' → logprob: -6.271980285644531
    4. 'r' → logprob: -7.146980285644531
    5. ')' → logprob: -7.271980285644531
    6. ''w' → logprob: -9.146980285644531
    7. 'm' → logprob: -10.021980285644531
    8. '+' → logprob: -10.396980285644531
    9. ')'' → logprob: -10.646980285644531
    10. '```' → logprob: -10.771980285644531

Token 237: ''
' (ID: 2207)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17194828391075134
    2. '<|end|>' → logprob: -3.546948194503784
    3. ':return' → logprob: -3.546948194503784
    4. ':
' → logprob: -3.796948194503784
    5. '   ' → logprob: -3.921948194503784
    6. '       ' → logprob: -3.921948194503784
    7. '):' → logprob: -4.171948432922363
    8. ')' → logprob: -5.421948432922363
    9. ' ' → logprob: -5.546948432922363
    10. '<|end|>' → logprob: -6.046948432922363

Token 238: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.744483470916748
    2. '<|end|>' → logprob: -1.244483470916748
    3. '   ' → logprob: -1.994483470916748
    4. ':' → logprob: -3.119483470916748
    5. ' ' → logprob: -3.744483470916748
    6. ' return' → logprob: -4.369483470916748
    7. ':return' → logprob: -5.494483470916748
    8. ')' → logprob: -5.744483470916748
    9. ' 
' → logprob: -6.494483470916748
    10. '    ' → logprob: -6.494483470916748

Token 239: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015943922102451324
    2. '   ' → logprob: -5.140944004058838
    3. '<|end|>' → logprob: -5.765944004058838
    4. '                       ' → logprob: -6.015944004058838
    5. ' return' → logprob: -7.140944004058838
    6. ' ' → logprob: -7.265944004058838
    7. '               ' → logprob: -7.515944004058838
    8. '                   ' → logprob: -7.765944004058838
    9. ')' → logprob: -8.01594352722168
    10. ':' → logprob: -8.26594352722168

Token 240: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09720683842897415
    2. ' return' → logprob: -3.7222068309783936
    3. '                   ' → logprob: -3.8472068309783936
    4. '   ' → logprob: -4.097207069396973
    5. ' ' → logprob: -4.597207069396973
    6. '               ' → logprob: -4.847207069396973
    7. '                       ' → logprob: -5.222207069396973
    8. 'return' → logprob: -6.347207069396973
    9. '<|end|>' → logprob: -6.722207069396973
    10. '           ' → logprob: -6.722207069396973

Token 241: ' after' (ID: 1934)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1887916326522827
    2. '   ' → logprob: -1.5637916326522827
    3. '       ' → logprob: -1.5637916326522827
    4. 'return' → logprob: -1.6887916326522827
    5. ' for' → logprob: -2.8137917518615723
    6. ' if' → logprob: -4.688791751861572
    7. '    ' → logprob: -4.688791751861572
    8. 'for' → logprob: -5.063791751861572
    9. 'if' → logprob: -6.563791751861572
    10. '           ' → logprob: -6.813791751861572

Token 242: ' '' (ID: 461)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.39965054392814636
    2. 'r' → logprob: -1.7746505737304688
    3. 'l' → logprob: -2.1496505737304688
    4. ' mid' → logprob: -4.399650573730469
    5. 'for' → logprob: -4.899650573730469
    6. '   ' → logprob: -5.024650573730469
    7. 's' → logprob: -5.649650573730469
    8. 'range' → logprob: -5.774650573730469
    9. ' l' → logprob: -6.024650573730469
    10. 'def' → logprob: -6.524650573730469

Token 243: 'm' (ID: 76)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5962718725204468
    2. 'mid' → logprob: -0.8462718725204468
    3. 'e' → logprob: -5.346271991729736
    4. 'r' → logprob: -5.596271991729736
    5. 'm' → logprob: -6.346271991729736
    6. '+' → logprob: -6.596271991729736
    7. 's' → logprob: -6.721271991729736
    8. ' mid' → logprob: -6.721271991729736
    9. 'w' → logprob: -6.971271991729736
    10. '1' → logprob: -7.346271991729736

Token 244: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5991519689559937
    2. '+' → logprob: -1.2241519689559937
    3. '')' → logprob: -2.974152088165283
    4. ',' → logprob: -3.474152088165283
    5. ' +' → logprob: -3.974152088165283
    6. ')' → logprob: -4.099152088165283
    7. '+l' → logprob: -4.849152088165283
    8. ' '' → logprob: -5.349152088165283
    9. '',' → logprob: -5.474152088165283
    10. ''+' → logprob: -5.599152088165283

Token 245: ' X' (ID: 2127)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1114943027496338
    2. ' for' → logprob: -1.2364943027496338
    3. 'for' → logprob: -2.861494302749634
    4. ' mid' → logprob: -2.861494302749634
    5. 'r' → logprob: -3.111494302749634
    6. ' r' → logprob: -3.236494302749634
    7. 'mid' → logprob: -3.361494302749634
    8. 'l' → logprob: -3.486494302749634
    9. '<|end|>' → logprob: -3.861494302749634
    10. ' there' → logprob: -4.611494064331055

Token 246: ' ends' (ID: 17095)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' at' (ID: 540)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8173993229866028
    2. '<|end|>' → logprob: -1.192399263381958
    3. '<|end|>' → logprob: -2.567399263381958
    4. ')' → logprob: -2.942399263381958
    5. '+' → logprob: -3.942399263381958
    6. '=' → logprob: -4.192399501800537
    7. '...' → logprob: -4.192399501800537
    8. ':' → logprob: -4.317399501800537
    9. '   ' → logprob: -4.442399501800537
    10. ' at' → logprob: -4.567399501800537

Token 248: ' position' (ID: 4010)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.07892206311225891
    2. ' mid' → logprob: -2.5789220333099365
    3. '[mid' → logprob: -11.078922271728516
    4. '(mid' → logprob: -12.078922271728516
    5. '
' → logprob: -12.453922271728516
    6. ' ' → logprob: -13.703922271728516
    7. '   ' → logprob: -13.828922271728516
    8. '_mid' → logprob: -14.141422271728516
    9. '```' → logprob: -14.328922271728516
    10. 'midt' → logprob: -14.516422271728516

Token 249: ' before' (ID: 2254)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0067208209075033665
    2. ' mid' → logprob: -5.631721019744873
    3. 'r' → logprob: -6.131721019744873
    4. 'l' → logprob: -7.506721019744873
    5. '[mid' → logprob: -8.631720542907715
    6. '   ' → logprob: -9.506720542907715
    7. '(mid' → logprob: -9.881720542907715
    8. ' r' → logprob: -10.381720542907715
    9. ' l' → logprob: -10.881720542907715
    10. 's' → logprob: -12.256720542907715

Token 250: ' '' (ID: 461)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.02021319605410099
    2. 'r' → logprob: -4.3952131271362305
    3. ' mid' → logprob: -5.5202131271362305
    4. 'l' → logprob: -5.8952131271362305
    5. 'e' → logprob: -8.02021312713623
    6. '   ' → logprob: -8.14521312713623
    7. ' r' → logprob: -9.77021312713623
    8. 's' → logprob: -10.02021312713623
    9. '[mid' → logprob: -10.14521312713623
    10. ' l' → logprob: -10.27021312713623

Token 251: 'e' (ID: 68)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6721296310424805
    2. 'mid' → logprob: -1.2971296310424805
    3. 'l' → logprob: -1.6721296310424805
    4. ' mid' → logprob: -4.5471296310424805
    5. 'e' → logprob: -5.0471296310424805
    6. ' r' → logprob: -6.1721296310424805
    7. ' l' → logprob: -6.1721296310424805
    8. 'w' → logprob: -6.4221296310424805
    9. ''' → logprob: -6.4221296310424805
    10. 'm' → logprob: -7.4221296310424805

Token 252: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034485865384340286
    2. '):' → logprob: -3.9094858169555664
    3. ' :' → logprob: -5.534485816955566
    4. ')' → logprob: -5.909485816955566
    5. ':
' → logprob: -6.159485816955566
    6. '<|end|>' → logprob: -7.159485816955566
    7. ',' → logprob: -7.284485816955566
    8. '):
' → logprob: -7.284485816955566
    9. '+' → logprob: -7.284485816955566
    10. '':' → logprob: -7.409485816955566

Token 253: ' then' (ID: 1815)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4113059341907501
    2. '               ' → logprob: -2.6613059043884277
    3. '                       ' → logprob: -2.9113059043884277
    4. '       ' → logprob: -3.1613059043884277
    5. ' return' → logprob: -3.4113059043884277
    6. ' ' → logprob: -3.6613059043884277
    7. '           ' → logprob: -3.6613059043884277
    8. ' and' → logprob: -4.036305904388428
    9. '   ' → logprob: -4.411305904388428
    10. '                    ' → logprob: -4.661305904388428

Token 254: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.6895999908447266
    2. ' Y' → logprob: -2.3145999908447266
    3. ' for' → logprob: -3.0645999908447266
    4. '                   ' → logprob: -3.3145999908447266
    5. 'w' → logprob: -3.4395999908447266
    6. 'return' → logprob: -3.6895999908447266
    7. ' return' → logprob: -3.8145999908447266
    8. 'for' → logprob: -3.9395999908447266
    9. 'y' → logprob: -4.189599990844727
    10. ' y' → logprob: -4.314599990844727

Token 255: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05019266903400421
    2. '):' → logprob: -3.4251925945281982
    3. '<|end|>' → logprob: -5.175192832946777
    4. '   ' → logprob: -6.175192832946777
    5. '+' → logprob: -6.425192832946777
    6. ':return' → logprob: -6.550192832946777
    7. ')' → logprob: -6.675192832946777
    8. ' :' → logprob: -7.175192832946777
    9. ' ' → logprob: -7.675192832946777
    10. '():' → logprob: -7.800192832946777

Token 256: ' between' (ID: 2870)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.025929702445864677
    2. '(mid' → logprob: -3.7759296894073486
    3. 'range' → logprob: -7.025929927825928
    4. ' mid' → logprob: -7.150929927825928
    5. '[mid' → logprob: -7.525929927825928
    6. 'r' → logprob: -8.65092945098877
    7. 'from' → logprob: -8.65092945098877
    8. '   ' → logprob: -10.90092945098877
    9. 'between' → logprob: -11.15092945098877
    10. 's' → logprob: -11.65092945098877

Token 257: ' '' (ID: 461)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.004392378963530064
    2. ' mid' → logprob: -5.754392147064209
    3. 'r' → logprob: -7.129392147064209
    4. '   ' → logprob: -9.129392623901367
    5. '(mid' → logprob: -9.129392623901367
    6. '[mid' → logprob: -9.629392623901367
    7. 's' → logprob: -10.754392623901367
    8. 'e' → logprob: -11.254392623901367
    9. 'range' → logprob: -11.504392623901367
    10. ' r' → logprob: -11.629392623901367

Token 258: 'e' (ID: 68)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.004900465719401836
    2. 'e' → logprob: -5.3799004554748535
    3. ' mid' → logprob: -8.379900932312012
    4. ' e' → logprob: -11.504900932312012
    5. '[mid' → logprob: -11.629900932312012
    6. ''e' → logprob: -12.004900932312012
    7. '(mid' → logprob: -12.254900932312012
    8. '   ' → logprob: -12.754900932312012
    9. '`' → logprob: -12.879900932312012
    10. ''' → logprob: -12.879900932312012

Token 259: ''+' (ID: 16370)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010138398967683315
    2. ' +' → logprob: -4.635138511657715
    3. ''+' → logprob: -8.135138511657715
    4. ''' → logprob: -10.135138511657715
    5. ',' → logprob: -11.135138511657715
    6. '',' → logprob: -11.510138511657715
    7. '+'' → logprob: -11.760138511657715
    8. '+
' → logprob: -12.885138511657715
    9. '','' → logprob: -12.885138511657715
    10. ' ,' → logprob: -13.510138511657715

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. '2' → logprob: -11.125018119812012
    3. '+' → logprob: -13.375018119812012
    4. '
' → logprob: -14.375018119812012
    5. ' ' → logprob: -15.375018119812012
    6. 'mid' → logprob: -15.375018119812012
    7. '```' → logprob: -16.000017166137695
    8. '

' → logprob: -16.250017166137695
    9. '   ' → logprob: -17.500017166137695
    10. '0' → logprob: -17.875017166137695

Token 261: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04590298607945442
    2. '+' → logprob: -4.295903205871582
    3. ' :' → logprob: -4.670903205871582
    4. '):' → logprob: -5.045903205871582
    5. ' ' → logprob: -5.920903205871582
    6. ')' → logprob: -6.045903205871582
    7. '   ' → logprob: -6.045903205871582
    8. ':return' → logprob: -6.045903205871582
    9. '<|end|>' → logprob: -6.670903205871582
    10. ':
' → logprob: -6.795903205871582

Token 262: ' before' (ID: 2254)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.1383451372385025
    2. 'r' → logprob: -2.263345241546631
    3. ' mid' → logprob: -3.763345241546631
    4. ' r' → logprob: -6.263345241546631
    5. '   ' → logprob: -9.888344764709473
    6. ' ' → logprob: -11.888344764709473
    7. '(mid' → logprob: -12.263344764709473
    8. '[mid' → logprob: -12.513344764709473
    9. '    ' → logprob: -12.888344764709473
    10. '           ' → logprob: -12.888344764709473

Token 263: ' last' (ID: 2174)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0014801019569858909
    2. ' r' → logprob: -6.6264801025390625
    3. 'w' → logprob: -9.001480102539062
    4. '   ' → logprob: -11.501480102539062
    5. 'mid' → logprob: -12.251480102539062
    6. ''r' → logprob: -13.126480102539062
    7. ''' → logprob: -13.251480102539062
    8. ' w' → logprob: -13.501480102539062
    9. '
' → logprob: -13.626480102539062
    10. 'e' → logprob: -13.751480102539062

Token 264: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9564589262008667
    2. ':' → logprob: -1.5814589262008667
    3. '<|end|>' → logprob: -1.7064589262008667
    4. '   ' → logprob: -2.4564590454101562
    5. '       ' → logprob: -2.4564590454101562
    6. '    ' → logprob: -4.831459045410156
    7. ' :' → logprob: -4.956459045410156
    8. ')' → logprob: -4.956459045410156
    9. ' 
' → logprob: -5.206459045410156
    10. '  ' → logprob: -5.706459045410156

Token 265: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.36091405153274536
    2. 'r' → logprob: -1.3609139919281006
    3. ')' → logprob: -3.9859139919281006
    4. '')' → logprob: -4.11091423034668
    5. ''' → logprob: -4.61091423034668
    6. ''r' → logprob: -7.48591423034668
    7. ''w' → logprob: -8.48591423034668
    8. '']' → logprob: -8.61091423034668
    9. ''>' → logprob: -8.73591423034668
    10. 'token' → logprob: -9.11091423034668

Token 266: ''

' (ID: 7497)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7140559554100037
    2. '       ' → logprob: -1.9640560150146484
    3. '<|end|>' → logprob: -2.0890560150146484
    4. '   ' → logprob: -2.7140560150146484
    5. '                   ' → logprob: -3.8390560150146484
    6. ' ' → logprob: -3.8390560150146484
    7. '):' → logprob: -3.9640560150146484
    8. ')' → logprob: -4.089056015014648
    9. '               ' → logprob: -4.089056015014648
    10. ':
' → logprob: -4.464056015014648

Token 267: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0150724649429321
    2. '<|end|>' → logprob: -1.2650724649429321
    3. '   ' → logprob: -2.0150723457336426
    4. ' ' → logprob: -2.5150723457336426
    5. ':' → logprob: -2.6400723457336426
    6. ')' → logprob: -3.1400723457336426
    7. '    ' → logprob: -5.140072345733643
    8. '<|end|>' → logprob: -5.765072345733643
    9. '):' → logprob: -6.140072345733643
    10. '  ' → logprob: -6.265072345733643

Token 268: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.146236538887024
    2. '   ' → logprob: -1.396236538887024
    3. '       ' → logprob: -2.2712364196777344
    4. '<|end|>' → logprob: -2.2712364196777344
    5. '    ' → logprob: -2.5212364196777344
    6. ')' → logprob: -3.3962364196777344
    7. ' 
' → logprob: -3.7712364196777344
    8. ':' → logprob: -4.396236419677734
    9. ':return' → logprob: -5.021236419677734
    10. '  ' → logprob: -5.021236419677734

Token 269: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2550363540649414
    2. ' return' → logprob: -1.7550363540649414
    3. 'return' → logprob: -2.1300363540649414
    4. '<|end|>' → logprob: -2.3800363540649414
    5. ' for' → logprob: -3.0050363540649414
    6. ')' → logprob: -3.1300363540649414
    7. '       ' → logprob: -3.1300363540649414
    8. ' ' → logprob: -3.1300363540649414
    9. '    ' → logprob: -3.7550363540649414
    10. ':return' → logprob: -3.8800363540649414

Token 270: ' better' (ID: 3432)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1578887701034546
    2. ' for' → logprob: -1.2828887701034546
    3. 'return' → logprob: -1.5328887701034546
    4. '   ' → logprob: -2.032888889312744
    5. 'for' → logprob: -2.907888889312744
    6. '    ' → logprob: -6.032888889312744
    7. ' if' → logprob: -7.157888889312744
    8. ' continue' → logprob: -7.282888889312744
    9. '       ' → logprob: -7.532888889312744
    10. '	return' → logprob: -7.782888889312744

Token 271: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23008258640766144
    2. 'return' → logprob: -2.6050825119018555
    3. ' return' → logprob: -3.3550825119018555
    4. 'def' → logprob: -3.9800825119018555
    5. 'for' → logprob: -4.3550825119018555
    6. ' for' → logprob: -5.1050825119018555
    7. ':
' → logprob: -5.3550825119018555
    8. '):' → logprob: -5.3550825119018555
    9. ' to' → logprob: -5.4800825119018555
    10. 'token' → logprob: -5.4800825119018555

Token 272: ' try' (ID: 2075)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0453806072473526
    2. 'for' → logprob: -3.9203805923461914
    3. ' return' → logprob: -4.670380592346191
    4. 'rewrite' → logprob: -5.420380592346191
    5. 'replace' → logprob: -5.920380592346191
    6. 'continue' → logprob: -6.420380592346191
    7. ' for' → logprob: -6.545380592346191
    8. 'def' → logprob: -6.795380592346191
    9. 'range' → logprob: -7.170380592346191
    10. '   ' → logprob: -7.420380592346191

Token 273: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3054695129394531
    2. 'for' → logprob: -1.5554695129394531
    3. ' range' → logprob: -3.805469512939453
    4. '   ' → logprob: -4.055469512939453
    5. 'range' → logprob: -4.555469512939453
    6. ' l' → logprob: -7.305469512939453
    7. '       ' → logprob: -8.305469512939453
    8. '    ' → logprob: -8.305469512939453
    9. ' mid' → logprob: -8.930469512939453
    10. ' ranges' → logprob: -8.930469512939453

Token 274: ' positions' (ID: 15897)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9050443172454834
    2. 'for' → logprob: -1.4050443172454834
    3. ' l' → logprob: -2.1550443172454834
    4. '(l' → logprob: -3.1550443172454834
    5. 'range' → logprob: -3.2800443172454834
    6. '   ' → logprob: -3.6550443172454834
    7. ' range' → logprob: -4.0300445556640625
    8. ' in' → logprob: -4.6550445556640625
    9. 'mid' → logprob: -4.6550445556640625
    10. '(range' → logprob: -4.6550445556640625

Token 275: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9561284780502319
    2. '<|end|>' → logprob: -0.9561284780502319
    3. ' ' → logprob: -1.706128478050232
    4. '<|end|>' → logprob: -4.5811285972595215
    5. ' :' → logprob: -4.8311285972595215
    6. '   ' → logprob: -5.3311285972595215
    7. ' for' → logprob: -5.3311285972595215
    8. '):' → logprob: -5.4561285972595215
    9. ',' → logprob: -6.2061285972595215
    10. ')' → logprob: -6.2061285972595215

Token 276: ' '' (ID: 461)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.6478691697120667
    2. 'e' → logprob: -0.7728691697120667
    3. ' mid' → logprob: -5.022869110107422
    4. ''e' → logprob: -5.147869110107422
    5. ' e' → logprob: -6.897869110107422
    6. ''' → logprob: -7.022869110107422
    7. ''m' → logprob: -7.897869110107422
    8. 'r' → logprob: -8.397869110107422
    9. 'range' → logprob: -9.272869110107422
    10. '   ' → logprob: -9.897869110107422

Token 277: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.060438577085733414
    2. ' e' → logprob: -2.935438632965088
    3. ''e' → logprob: -6.185438632965088
    4. ''' → logprob: -6.560438632965088
    5. 'w' → logprob: -7.560438632965088
    6. ' mid' → logprob: -8.06043815612793
    7. 'mid' → logprob: -8.06043815612793
    8. ' '' → logprob: -8.31043815612793
    9. 'r' → logprob: -9.06043815612793
    10. '')' → logprob: -9.18543815612793

Token 278: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6123689413070679
    2. '):' → logprob: -1.9873689413070679
    3. '':' → logprob: -2.1123690605163574
    4. ':' → logprob: -2.7373690605163574
    5. ''):' → logprob: -3.1123690605163574
    6. ''' → logprob: -3.2373690605163574
    7. '',' → logprob: -3.7373690605163574
    8. ' '' → logprob: -4.862369060516357
    9. ')' → logprob: -4.987369060516357
    10. ' ,' → logprob: -6.237369060516357

Token 279: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.66318279504776
    2. '<|end|>' → logprob: -1.2881827354431152
    3. ' ' → logprob: -2.1631827354431152
    4. '   ' → logprob: -3.7881827354431152
    5. '<|end|>' → logprob: -4.538182735443115
    6. ' for' → logprob: -4.538182735443115
    7. ' :' → logprob: -4.663182735443115
    8. ':
' → logprob: -5.038182735443115
    9. ',' → logprob: -5.663182735443115
    10. ' 
' → logprob: -5.788182735443115

Token 280: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7291467189788818
    2. ' r' → logprob: -1.4791467189788818
    3. 'range' → logprob: -1.4791467189788818
    4. ' range' → logprob: -3.354146718978882
    5. ' for' → logprob: -4.729146957397461
    6. 'for' → logprob: -5.229146957397461
    7. ''' → logprob: -5.604146957397461
    8. 'mid' → logprob: -6.229146957397461
    9. ' mid' → logprob: -6.729146957397461
    10. 's' → logprob: -7.229146957397461

Token 281: 'w' (ID: 86)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.053345292806625366
    2. 'w' → logprob: -3.303345203399658
    3. ''' → logprob: -4.803345203399658
    4. '')' → logprob: -5.928345203399658
    5. 'e' → logprob: -6.303345203399658
    6. ')' → logprob: -7.678345203399658
    7. 'y' → logprob: -8.428345680236816
    8. 'mid' → logprob: -8.428345680236816
    9. ''r' → logprob: -8.553345680236816
    10. 'Y' → logprob: -8.553345680236816

Token 282: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3741377890110016
    2. '):' → logprob: -1.4991377592086792
    3. '<|end|>' → logprob: -2.9991378784179688
    4. ')' → logprob: -4.124137878417969
    5. '<|end|>' → logprob: -4.874137878417969
    6. '':' → logprob: -5.874137878417969
    7. '   ' → logprob: -6.249137878417969
    8. ',' → logprob: -6.624137878417969
    9. ' :' → logprob: -6.624137878417969
    10. ''):' → logprob: -6.874137878417969

Token 283: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47151851654052734
    2. '<|end|>' → logprob: -1.2215185165405273
    3. ' ' → logprob: -3.4715185165405273
    4. ')' → logprob: -4.221518516540527
    5. '   ' → logprob: -4.596518516540527
    6. '<|end|>' → logprob: -5.221518516540527
    7. ':return' → logprob: -5.346518516540527
    8. '):' → logprob: -5.471518516540527
    9. ' :' → logprob: -6.346518516540527
    10. ':
' → logprob: -6.471518516540527

Token 284: ' split' (ID: 12648)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.5520685911178589
    2. 'complete' → logprob: -2.0520687103271484
    3. 'try' → logprob: -2.1770687103271484
    4. 'find' → logprob: -2.4270687103271484
    5. 'check' → logprob: -2.6770687103271484
    6. 'range' → logprob: -2.8020687103271484
    7. '<|end|>' → logprob: -3.0520687103271484
    8. ' complete' → logprob: -3.1770687103271484
    9. 'return' → logprob: -3.3020687103271484
    10. '           ' → logprob: -3.6770687103271484

Token 285: ' properly' (ID: 13425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3483193814754486
    2. '<|end|>' → logprob: -1.723319411277771
    3. '   ' → logprob: -2.5983192920684814
    4. ' ' → logprob: -3.9733192920684814
    5. ')' → logprob: -5.0983195304870605
    6. '<|end|>' → logprob: -5.7233195304870605
    7. '):' → logprob: -6.4733195304870605
    8. '  ' → logprob: -6.5983195304870605
    9. ':return' → logprob: -6.7233195304870605
    10. ' :' → logprob: -6.8483195304870605

Token 287: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22676455974578857
    2. '<|end|>' → logprob: -1.8517645597457886
    3. '       ' → logprob: -4.226764678955078
    4. '    ' → logprob: -4.226764678955078
    5. ' ' → logprob: -5.226764678955078
    6. ')' → logprob: -5.726764678955078
    7. ':' → logprob: -5.976764678955078
    8. '<|end|>' → logprob: -6.976764678955078
    9. '  ' → logprob: -7.226764678955078
    10. ' for' → logprob: -7.601764678955078

Token 289: ' Let's' (ID: 41021)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1612013578414917
    2. '<|end|>' → logprob: -2.4112014770507812
    3. ' ' → logprob: -3.9112014770507812
    4. '       ' → logprob: -4.036201477050781
    5. '    ' → logprob: -4.661201477050781
    6. ')' → logprob: -5.411201477050781
    7. ' return' → logprob: -6.536201477050781
    8. '  ' → logprob: -7.036201477050781
    9. '<|end|>' → logprob: -7.536201477050781
    10. ':' → logprob: -7.661201477050781

Token 290: ' rewrite' (ID: 50059)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8520391583442688
    2. '   ' → logprob: -1.477039098739624
    3. 'continue' → logprob: -2.227039098739624
    4. ' return' → logprob: -2.602039098739624
    5. ' for' → logprob: -3.102039098739624
    6. 'for' → logprob: -3.227039098739624
    7. '       ' → logprob: -3.602039098739624
    8. ' continue' → logprob: -3.602039098739624
    9. 'try' → logprob: -5.102039337158203
    10. ' try' → logprob: -5.352039337158203

Token 291: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7317225337028503
    2. ')' → logprob: -1.7317225933074951
    3. '<|end|>' → logprob: -2.106722593307495
    4. 'def' → logprob: -2.606722593307495
    5. '(' → logprob: -2.731722593307495
    6. '#' → logprob: -3.856722593307495
    7. '   ' → logprob: -3.981722593307495
    8. '(
' → logprob: -4.731722354888916
    9. ' ' → logprob: -5.231722354888916
    10. '@' → logprob: -5.606722354888916

Token 292: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7592997550964355
    2. '<|end|>' → logprob: -2.1342997550964355
    3. ':' → logprob: -2.2592997550964355
    4. ' ' → logprob: -2.7592997550964355
    5. '    ' → logprob: -3.0092997550964355
    6. ')' → logprob: -3.0092997550964355
    7. 'def' → logprob: -3.0092997550964355
    8. '#' → logprob: -4.0092997550964355
    9. '(' → logprob: -5.0092997550964355
    10. 'r' → logprob: -5.2592997550964355

Token 293: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.08856575191020966
    2. ' is' → logprob: -2.5885658264160156
    3. 'cat' → logprob: -4.963565826416016
    4. 'solve' → logprob: -7.838565826416016
    5. 'split' → logprob: -7.963565826416016
    6. 'parse' → logprob: -8.088565826416016
    7. 's' → logprob: -8.213565826416016
    8. ' cat' → logprob: -8.338565826416016
    9. 'main' → logprob: -8.338565826416016
    10. 'find' → logprob: -9.088565826416016

Token 294: '_cat' (ID: 50384)
  Prédit: '_cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cat' → logprob: -0.007751675322651863
    2. '_' → logprob: -5.00775146484375
    3. '_c' → logprob: -7.75775146484375
    4. '<|end|>' → logprob: -8.25775146484375
    5. 'cat' → logprob: -8.63275146484375
    6. ' cat' → logprob: -9.75775146484375
    7. ' _' → logprob: -10.50775146484375
    8. 'Cat' → logprob: -10.63275146484375
    9. '_CAT' → logprob: -11.75775146484375
    10. '<|end|>' → logprob: -12.13275146484375

Token 295: '_dp' (ID: 133252)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.05550273135304451
    2. '(' → logprob: -2.9305026531219482
    3. ' (' → logprob: -7.930502891540527
    4. '(n' → logprob: -9.430502891540527
    5. ')' → logprob: -9.555502891540527
    6. ')(' → logprob: -10.805502891540527
    7. 'def' → logprob: -11.180502891540527
    8. '(
' → logprob: -11.555502891540527
    9. '_' → logprob: -11.930502891540527
    10. '(next' → logprob: -11.930502891540527

Token 296: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.004535861779004335
    2. '(' → logprob: -5.504535675048828
    3. '(n' → logprob: -8.129535675048828
    4. ' (' → logprob: -10.754535675048828
    5. '):' → logprob: -10.754535675048828
    6. '<|end|>' → logprob: -10.754535675048828
    7. '(s' → logprob: -11.379535675048828
    8. ':' → logprob: -11.629535675048828
    9. '(length' → logprob: -11.879535675048828
    10. ')' → logprob: -12.129535675048828

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033999193692579865
    2. ',r' → logprob: -8.125340461730957
    3. ' ,' → logprob: -10.125340461730957
    4. ',l' → logprob: -13.625340461730957
    5. 'r' → logprob: -14.125340461730957
    6. ',n' → logprob: -14.875340461730957
    7. ',
' → logprob: -15.375340461730957
    8. ',int' → logprob: -16.00033950805664
    9. ' ' → logprob: -16.12533950805664
    10. ':' → logprob: -16.25033950805664

Token 298: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0052414643578231335
    2. ' r' → logprob: -5.255241394042969
    3. ',' → logprob: -13.255241394042969
    4. ' ' → logprob: -13.380241394042969
    5. '<|end|>' → logprob: -13.380241394042969
    6. 'n' → logprob: -13.880241394042969
    7. '   ' → logprob: -14.505241394042969
    8. ')' → logprob: -14.880241394042969
    9. 'def' → logprob: -15.130241394042969
    10. '...' → logprob: -15.505241394042969

Token 299: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023727134976070374
    2. '):
' → logprob: -8.500237464904785
    3. ')' → logprob: -10.500237464904785
    4. ':' → logprob: -12.250237464904785
    5. ' ):' → logprob: -14.250237464904785
    6. '):
' → logprob: -14.625237464904785
    7. '):

' → logprob: -15.375237464904785
    8. ',' → logprob: -17.12523651123047
    9. '   ' → logprob: -17.25023651123047
    10. ')：' → logprob: -17.75023651123047

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11707106232643127
    2. ' ' → logprob: -2.7420711517333984
    3. '    ' → logprob: -3.7420711517333984
    4. '<|end|>' → logprob: -3.9920711517333984
    5. ' if' → logprob: -7.367071151733398
    6. '  ' → logprob: -7.367071151733398
    7. ' return' → logprob: -7.492071151733398
    8. ' pass' → logprob: -7.617071151733398
    9. '[' → logprob: -8.617071151733398
    10. '       ' → logprob: -8.742071151733398

Token 301: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5222381949424744
    2. ' ' → logprob: -1.7722382545471191
    3. '   ' → logprob: -2.272238254547119
    4. 'if' (adapté à ' if') → logprob: -3.022238254547119
    5. ' for' → logprob: -3.272238254547119
    6. '    ' → logprob: -3.397238254547119
    7. 'for' → logprob: -4.647238254547119
    8. ' return' → logprob: -7.272238254547119
    9. ' 
' → logprob: -7.272238254547119
    10. '<|end|>' → logprob: -7.772238254547119

Token 302: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.695977509021759
    2. ' l' → logprob: -0.695977509021759
    3. 'r' → logprob: -6.195977687835693
    4. ' r' → logprob: -7.445977687835693
    5. '   ' → logprob: -8.820977210998535
    6. '	l' → logprob: -10.820977210998535
    7. '    ' → logprob: -11.195977210998535
    8. ' ' → logprob: -12.070977210998535
    9. 'False' → logprob: -12.195977210998535
    10. 'True' → logprob: -13.383477210998535

Token 303: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6932248473167419
    2. ' >' → logprob: -0.6932248473167419
    3. ' ' → logprob: -10.818224906921387
    4. '==' → logprob: -11.068224906921387
    5. '>=' → logprob: -11.443224906921387
    6. '   ' → logprob: -11.568224906921387
    7. ' >=' → logprob: -12.443224906921387
    8. ' >
' → logprob: -12.943224906921387
    9. ' ==' → logprob: -13.068224906921387
    10. '>
' → logprob: -13.068224906921387

Token 304: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014168680645525455
    2. ' r' → logprob: -4.264168739318848
    3. '<|end|>' → logprob: -12.514168739318848
    4. '   ' → logprob: -14.389168739318848
    5. ' ' → logprob: -15.139168739318848
    6. '_r' → logprob: -15.389168739318848
    7. '<|end|>' → logprob: -15.764168739318848
    8. '	r' → logprob: -15.764168739318848
    9. '  ' → logprob: -16.88916778564453
    10. '[r' → logprob: -17.13916778564453

Token 305: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41219037771224976
    2. ':' → logprob: -1.1621904373168945
    3. '       ' → logprob: -3.9121904373168945
    4. '   ' → logprob: -6.1621904373168945
    5. ':return' → logprob: -6.2871904373168945
    6. '):
' → logprob: -7.0371904373168945
    7. '):' → logprob: -9.912190437316895
    8. ' or' → logprob: -10.537190437316895
    9. '<|end|>' → logprob: -10.787190437316895
    10. ' :
' → logprob: -11.662190437316895

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010877089807763696
    2. ' return' → logprob: -7.501087665557861
    3. '<|end|>' → logprob: -8.50108814239502
    4. '   ' → logprob: -8.75108814239502
    5. 'return' → logprob: -9.12608814239502
    6. '	' → logprob: -11.37608814239502
    7. '	return' → logprob: -11.50108814239502
    8. ' ' → logprob: -12.37608814239502
    9. ' ' → logprob: -12.50108814239502
    10. '
' → logprob: -12.62608814239502

Token 307: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2447177767753601
    2. 'True' → logprob: -1.8697178363800049
    3. ' return' → logprob: -3.119717836380005
    4. ' True' → logprob: -4.119717597961426
    5. '       ' → logprob: -6.244717597961426
    6. '   ' → logprob: -8.244717597961426
    7. 'False' → logprob: -8.494717597961426
    8. '    ' → logprob: -10.619717597961426
    9. '	return' → logprob: -10.994717597961426
    10. '
' → logprob: -11.244717597961426

Token 308: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07889363914728165
    2. ' True' → logprob: -2.5788936614990234
    3. 'False' → logprob: -12.578893661499023
    4. '(True' → logprob: -14.578893661499023
    5. ' False' → logprob: -16.953893661499023
    6. '1' → logprob: -18.578893661499023
    7. '=True' → logprob: -18.578893661499023
    8. '   ' → logprob: -19.828893661499023
    9. ' ' → logprob: -20.703893661499023
    10. '.True' → logprob: -21.578893661499023

Token 309: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009673687629401684
    2. '<|end|>' → logprob: -4.759673595428467
    3. ' ' → logprob: -7.509673595428467
    4. '    ' → logprob: -8.384674072265625
    5. '    
' → logprob: -9.759674072265625
    6. '  ' → logprob: -10.134674072265625
    7. '<|end|>' → logprob: -10.509674072265625
    8. ')' → logprob: -10.509674072265625
    9. ' 
' → logprob: -10.634674072265625
    10. '
' → logprob: -10.759674072265625

Token 311: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0382842980325222
    2. 'if' → logprob: -3.4132843017578125
    3. ' if' → logprob: -5.5382843017578125
    4. '<|end|>' → logprob: -8.163284301757812
    5. ' ' → logprob: -8.288284301757812
    6. '  ' → logprob: -10.038284301757812
    7. '       ' → logprob: -10.663284301757812
    8. '    ' → logprob: -10.788284301757812
    9. 'return' → logprob: -11.288284301757812
    10. 'def' → logprob: -11.663284301757812

Token 312: ' =' (ID: 314)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4526846706867218
    2. ' ==' → logprob: -1.4526846408843994
    3. '   ' → logprob: -2.4526846408843994
    4. '<' → logprob: -3.9526846408843994
    5. '==' → logprob: -4.7026848793029785
    6. ' <=' → logprob: -4.8276848793029785
    7. ' ' → logprob: -6.2026848793029785
    8. '=' → logprob: -6.9526848793029785
    9. ' =' → logprob: -7.2026848793029785
    10. '    ' → logprob: -7.2026848793029785

Token 313: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.023406540974974632
    2. ' r' → logprob: -3.773406505584717
    3. '   ' → logprob: -8.773406982421875
    4. '(r' → logprob: -12.398406982421875
    5. '0' → logprob: -14.023406982421875
    6. ' ' → logprob: -14.273406982421875
    7. '	r' → logprob: -15.523406982421875
    8. '  ' → logprob: -15.898406982421875
    9. '    ' → logprob: -15.898406982421875
    10. ' (' → logprob: -16.148406982421875

Token 314: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1602458506822586
    2. '-' → logprob: -1.9102458953857422
    3. '-l' → logprob: -11.160245895385742
    4. ' ' → logprob: -13.035245895385742
    5. '```' → logprob: -13.535245895385742
    6. '[' → logprob: -13.660245895385742
    7. '<|end|>' → logprob: -14.160245895385742
    8. ')' → logprob: -14.160245895385742
    9. '-token' → logprob: -14.910245895385742
    10. '   ' → logprob: -15.910245895385742

Token 315: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000912774819880724
    2. ' l' → logprob: -7.000912666320801
    3. '<|end|>' → logprob: -14.3759126663208
    4. '```' → logprob: -15.3759126663208
    5. '   ' → logprob: -15.7509126663208
    6. ' ' → logprob: -15.7509126663208
    7. '	l' → logprob: -17.000913619995117
    8. '_l' → logprob: -17.250913619995117
    9. '  ' → logprob: -17.750913619995117
    10. '+l' → logprob: -17.750913619995117

Token 316: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05879172310233116
    2. ' +' → logprob: -2.9337916374206543
    3. '1' → logprob: -5.558791637420654
    4. ' ' → logprob: -10.308792114257812
    5. '   ' → logprob: -11.683792114257812
    6. '+
' → logprob: -13.308792114257812
    7. '```' → logprob: -14.058792114257812
    8. ')' → logprob: -14.183792114257812
    9. '+l' → logprob: -14.558792114257812
    10. '[' → logprob: -14.683792114257812

Token 317: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -14.625019073486328
    4. '   ' → logprob: -18.375019073486328
    5. '`' → logprob: -20.000019073486328
    6. '<|end|>' → logprob: -20.625019073486328
    7. '  ' → logprob: -20.875019073486328
    8. '
' → logprob: -21.437519073486328
    9. '0' → logprob: -21.500019073486328
    10. '{' → logprob: -21.687519073486328

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.250003814697266
    4. '
' → logprob: -18.750003814697266
    5. '   ' → logprob: -19.000003814697266
    6. '0' → logprob: -19.500003814697266
    7. '１' → logprob: -19.937503814697266
    8. 'length' → logprob: -20.375003814697266
    9. '

' → logprob: -20.500003814697266
    10. ')' → logprob: -20.625003814697266

Token 319: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014771075919270515
    2. '<|end|>' → logprob: -4.639770984649658
    3. '
' → logprob: -5.514770984649658
    4. '    
' → logprob: -8.139771461486816
    5. '<|end|>' → logprob: -8.389771461486816
    6. ')' → logprob: -9.014771461486816
    7. ' if' → logprob: -9.139771461486816
    8. 'if' → logprob: -10.264771461486816
    9. ',' → logprob: -10.264771461486816
    10. ':' → logprob: -10.389771461486816

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006271334132179618
    2. '<|end|>' → logprob: -8.000627517700195
    3. ' if' → logprob: -8.500627517700195
    4. '    ' → logprob: -10.375627517700195
    5. 'if' → logprob: -10.625627517700195
    6. '    
' → logprob: -12.000627517700195
    7. ',' → logprob: -12.250627517700195
    8. ' ' → logprob: -12.500627517700195
    9. '<|end|>' → logprob: -12.750627517700195
    10. ')' → logprob: -12.875627517700195

Token 321: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07232865691184998
    2. ' if' → logprob: -2.947328567504883
    3. 'if' (adapté à ' if') → logprob: -4.072328567504883
    4. '    ' → logprob: -9.197328567504883
    5. ' ' → logprob: -9.697328567504883
    6. '    
' → logprob: -10.572328567504883
    7. '  ' → logprob: -11.072328567504883
    8. '       ' → logprob: -11.947328567504883
    9. '<|end|>' → logprob: -11.947328567504883
    10. ' 
' → logprob: -11.947328567504883

Token 322: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.014190888963639736
    2. ' length' → logprob: -4.264190673828125
    3. '4' → logprob: -10.764190673828125
    4. '   ' → logprob: -12.389190673828125
    5. ' ' → logprob: -14.014190673828125
    6. 'l' → logprob: -14.764190673828125
    7. '(length' → logprob: -15.264190673828125
    8. '3' → logprob: -15.264190673828125
    9. '	length' → logprob: -15.639190673828125
    10. '0' → logprob: -16.514190673828125

Token 323: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6326510310173035
    2. '<' → logprob: -0.7576510310173035
    3. ' ' → logprob: -11.132651329040527
    4. '   ' → logprob: -11.257651329040527
    5. '<|end|>' → logprob: -12.132651329040527
    6. '[' → logprob: -12.382651329040527
    7. ')' → logprob: -13.257651329040527
    8. '<int' → logprob: -13.757651329040527
    9. '<class' → logprob: -14.007651329040527
    10. '  ' → logprob: -14.132651329040527

Token 324: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.4418171455617994e-05
    2. ' ' → logprob: -10.125044822692871
    3. '```' → logprob: -13.500044822692871
    4. '5' → logprob: -13.937544822692871
    5. '3' → logprob: -14.812544822692871
    6. '   ' → logprob: -15.062544822692871
    7. '
' → logprob: -15.500044822692871
    8. '' → logprob: -15.812544822692871
    9. '1' → logprob: -16.187543869018555
    10. '٤' → logprob: -16.312543869018555

Token 325: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.25000286102295
    3. '5' → logprob: -14.37500286102295
    4. '```' → logprob: -15.18750286102295
    5. '3' → logprob: -15.31250286102295
    6. '４' → logprob: -16.437503814697266
    7. '7' → logprob: -16.437503814697266
    8. '
' → logprob: -16.687503814697266
    9. '1' → logprob: -16.812503814697266
    10. '

' → logprob: -17.125003814697266

Token 326: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06322985887527466
    2. ':
' → logprob: -2.81322979927063
    3. ':return' → logprob: -7.313230037689209
    4. '       ' → logprob: -7.813230037689209
    5. '   ' → logprob: -8.93822956085205
    6. ' or' → logprob: -10.06322956085205
    7. '):
' → logprob: -12.31322956085205
    8. '):' → logprob: -12.68822956085205
    9. ' and' → logprob: -13.18822956085205
    10. ',' → logprob: -13.31322956085205

Token 327: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00271856808103621
    2. 'return' → logprob: -6.752718448638916
    3. '   ' → logprob: -7.127718448638916
    4. ' return' → logprob: -7.252718448638916
    5. '<|end|>' → logprob: -11.502718925476074
    6. '	return' → logprob: -11.877718925476074
    7. ' ' → logprob: -12.752718925476074
    8. '
' → logprob: -12.752718925476074
    9. ',' → logprob: -13.002718925476074
    10. '        
' → logprob: -13.377718925476074

Token 328: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13662458956241608
    2. '   ' → logprob: -2.636624574661255
    3. '       ' → logprob: -2.886624574661255
    4. ' return' → logprob: -8.136624336242676
    5. '```' → logprob: -10.511624336242676
    6. '	return' → logprob: -11.886624336242676
    7. ':return' → logprob: -12.886624336242676
    8. '    ' → logprob: -13.136624336242676
    9. '  ' → logprob: -13.886624336242676
    10. '           ' → logprob: -14.136624336242676

Token 329: ' min' (ID: 1349)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4638381898403168
    2. '       ' → logprob: -1.5888382196426392
    3. '   ' → logprob: -1.8388382196426392
    4. ' return' → logprob: -4.83883810043335
    5. '	return' → logprob: -10.463838577270508
    6. ' ' → logprob: -12.338838577270508
    7. '    ' → logprob: -12.463838577270508
    8. '```' → logprob: -12.463838577270508
    9. '  ' → logprob: -13.088838577270508
    10. '           ' → logprob: -13.088838577270508

Token 330: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1988651603460312
    2. 'return' → logprob: -2.4488651752471924
    3. 'length' → logprob: -3.1988651752471924
    4. '```' → logprob: -4.198864936828613
    5. ' return' → logprob: -4.323864936828613
    6. ':' → logprob: -4.823864936828613
    7. '       ' → logprob: -5.323864936828613
    8. '    ' → logprob: -6.073864936828613
    9. ' ' → logprob: -6.323864936828613
    10. ':return' → logprob: -6.323864936828613

Token 331: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10306303948163986
    2. '   ' → logprob: -2.8530631065368652
    3. ':' → logprob: -3.2280631065368652
    4. ':return' → logprob: -7.978063106536865
    5. ':
' → logprob: -8.853062629699707
    6. ' return' → logprob: -10.603062629699707
    7. '	return' → logprob: -10.603062629699707
    8. ',' → logprob: -11.103062629699707
    9. '      ' → logprob: -11.478062629699707
    10. '<|end|>' → logprob: -11.603062629699707

Token 332: ' '' (ID: 461)
  Prédit: ''m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''m' → logprob: -1.1886857748031616
    2. ''s' → logprob: -1.6886857748031616
    3. 'm' → logprob: -1.9386857748031616
    4. ''' → logprob: -2.438685894012451
    5. 'is' → logprob: -2.563685894012451
    6. '"' → logprob: -2.563685894012451
    7. 'True' → logprob: -3.438685894012451
    8. 'cat' → logprob: -3.563685894012451
    9. ' '' → logprob: -4.063685894012451
    10. 's' → logprob: -4.313685894012451

Token 333: 'm' (ID: 76)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.36440950632095337
    2. 'm' → logprob: -1.2394094467163086
    3. ''' → logprob: -5.614409446716309
    4. 'c' → logprob: -5.739409446716309
    5. 'mc' → logprob: -5.864409446716309
    6. 'mw' → logprob: -6.364409446716309
    7. '"' → logprob: -7.114409446716309
    8. ' cat' → logprob: -7.114409446716309
    9. ''m' → logprob: -7.739409446716309
    10. ' m' → logprob: -7.989409446716309

Token 334: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7318820357322693
    2. 'e' → logprob: -1.981882095336914
    3. 'w' → logprob: -1.981882095336914
    4. '')' → logprob: -1.981882095336914
    5. '...' → logprob: -3.231882095336914
    6. '<|end|>' → logprob: -3.231882095336914
    7. '+' → logprob: -4.856882095336914
    8. ''+' → logprob: -6.231882095336914
    9. '...'' → logprob: -6.231882095336914
    10. ' +' → logprob: -6.356882095336914

Token 335: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1467334032058716
    2. ' or' → logprob: -1.7717334032058716
    3. '+' → logprob: -2.146733283996582
    4. ' and' → logprob: -2.146733283996582
    5. ' ' → logprob: -2.271733283996582
    6. ')' → logprob: -3.146733283996582
    7. '<|end|>' → logprob: -3.521733283996582
    8. ',' → logprob: -4.021733283996582
    9. '...' → logprob: -4.146733283996582
    10. '   ' → logprob: -4.146733283996582

Token 336: ' ""' (ID: 3216)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.0295714139938354
    2. ''s' → logprob: -1.5295714139938354
    3. '1' → logprob: -2.279571533203125
    4. 's' → logprob: -2.404571533203125
    5. ''' → logprob: -2.654571533203125
    6. 'x' → logprob: -3.029571533203125
    7. ''e' → logprob: -3.029571533203125
    8. 'e' → logprob: -3.779571533203125
    9. ' ' → logprob: -4.779571533203125
    10. '...' → logprob: -4.779571533203125

Token 337: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6937462687492371
    2. ' +' → logprob: -0.6937462687492371
    3. 'X' → logprob: -8.443746566772461
    4. ' ' → logprob: -9.193746566772461
    5. '""' → logprob: -9.568746566772461
    6. '+x' → logprob: -10.443746566772461
    7. 'x' → logprob: -10.568746566772461
    8. '"' → logprob: -11.068746566772461
    9. '   ' → logprob: -11.318746566772461
    10. ')' → logprob: -11.443746566772461

Token 338: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4499126374721527
    2. ''e' → logprob: -1.324912667274475
    3. ''w' → logprob: -2.5749125480651855
    4. 'e' → logprob: -4.4499125480651855
    5. 'w' → logprob: -5.1999125480651855
    6. ''' → logprob: -7.3249125480651855
    7. 'ew' → logprob: -7.3249125480651855
    8. ''s' → logprob: -7.4499125480651855
    9. ' ' → logprob: -7.9499125480651855
    10. '`' → logprob: -8.449913024902344

Token 339: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25303319096565247
    2. 'w' → logprob: -1.50303316116333
    3. ''' → logprob: -8.003033638000488
    4. ''e' → logprob: -8.378033638000488
    5. 's' → logprob: -8.878033638000488
    6. 'm' → logprob: -8.878033638000488
    7. 'ew' → logprob: -9.503033638000488
    8. '"' → logprob: -10.253033638000488
    9. ''w' → logprob: -10.503033638000488
    10. 'we' → logprob: -11.003033638000488

Token 340: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.34213021397590637
    2. ' +' → logprob: -1.717130184173584
    3. '+' → logprob: -2.467130184173584
    4. '"' → logprob: -4.217130184173584
    5. ''+' → logprob: -5.592130184173584
    6. '+'' → logprob: -6.717130184173584
    7. '''' → logprob: -6.967130184173584
    8. 'w' → logprob: -7.092130184173584
    9. '   ' → logprob: -7.092130184173584
    10. '"'' → logprob: -7.342130184173584

Token 341: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11488812416791916
    2. '+' → logprob: -2.2398881912231445
    3. '   ' → logprob: -6.6148881912231445
    4. 'def' → logprob: -7.9898881912231445
    5. ' ' → logprob: -9.864888191223145
    6. '    ' → logprob: -9.989888191223145
    7. '```' → logprob: -10.239888191223145
    8. '  ' → logprob: -10.739888191223145
    9. 'import' → logprob: -10.864888191223145
    10. ' +
' → logprob: -10.989888191223145

Token 342: ' ""' (ID: 3216)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.18363167345523834
    2. '"' → logprob: -1.8086316585540771
    3. '''' → logprob: -5.933631896972656
    4. ''w' → logprob: -7.433631896972656
    5. 'w' → logprob: -8.058631896972656
    6. ' ""' → logprob: -8.308631896972656
    7. ''' → logprob: -10.683631896972656
    8. ' ' → logprob: -11.308631896972656
    9. '"":' → logprob: -11.933631896972656
    10. '<w' → logprob: -12.058631896972656

Token 343: ' +' (ID: 659)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9723763465881348
    2. '   ' → logprob: -1.3473763465881348
    3. ':' → logprob: -1.7223763465881348
    4. '       ' → logprob: -1.8473763465881348
    5. ':return' → logprob: -5.097376346588135
    6. 'return' → logprob: -5.347376346588135
    7. ' or' → logprob: -5.347376346588135
    8. '+' → logprob: -5.722376346588135
    9. '```' → logprob: -6.597376346588135
    10. ' ' → logprob: -7.097376346588135

Token 344: ' '' (ID: 461)
  Prédit: ''w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''w' → logprob: -0.0299520343542099
    2. '"' → logprob: -3.654952049255371
    3. 'w' → logprob: -5.654952049255371
    4. '`' → logprob: -9.404952049255371
    5. '<w' → logprob: -11.154952049255371
    6. '
' → logprob: -11.654952049255371
    7. '   ' → logprob: -11.654952049255371
    8. ' '' → logprob: -12.154952049255371
    9. '’w' → logprob: -12.279952049255371
    10. ' ' → logprob: -12.654952049255371

Token 345: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00045033416245132685
    2. ''w' → logprob: -7.750450134277344
    3. '"' → logprob: -11.500450134277344
    4. ' w' → logprob: -12.750450134277344
    5. ''' → logprob: -13.250450134277344
    6. '
' → logprob: -13.375450134277344
    7. '```' → logprob: -14.625450134277344
    8. '

' → logprob: -15.000450134277344
    9. '''' → logprob: -15.125450134277344
    10. '`' → logprob: -15.250450134277344

Token 346: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2687384784221649
    2. '':' → logprob: -2.7687385082244873
    3. '   ' → logprob: -2.8937385082244873
    4. '):' → logprob: -3.1437385082244873
    5. ':
' → logprob: -4.143738269805908
    6. '):
' → logprob: -4.143738269805908
    7. ''):
' → logprob: -4.518738269805908
    8. ''' → logprob: -4.768738269805908
    9. ')' → logprob: -4.768738269805908
    10. ''):' → logprob: -5.018738269805908

Token 347: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.712823212146759
    2. '   ' → logprob: -0.837823212146759
    3. ':' → logprob: -2.5878231525421143
    4. ':return' → logprob: -6.712823390960693
    5. ':
' → logprob: -7.837823390960693
    6. ' ' → logprob: -10.087822914123535
    7. 'return' → logprob: -10.087822914123535
    8. '    ' → logprob: -10.462822914123535
    9. ' return' → logprob: -10.587822914123535
    10. ',' → logprob: -10.587822914123535

Token 348: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.125003814697266
    3. '5' → logprob: -14.250003814697266
    4. '```' → logprob: -14.875003814697266
    5. '   ' → logprob: -16.000003814697266
    6. 'True' → logprob: -16.375003814697266
    7. 'False' → logprob: -16.750003814697266
    8. '1' → logprob: -17.125003814697266
    9. '４' → logprob: -18.125003814697266
    10. 'def' → logprob: -18.375003814697266

Token 349: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.2723104848410003e-05
    2. '5' → logprob: -10.750022888183594
    3. '```' → logprob: -14.375022888183594
    4. ' ' → logprob: -15.875022888183594
    5. '0' → logprob: -16.250022888183594
    6. 'False' → logprob: -16.750022888183594
    7. '1' → logprob: -16.750022888183594
    8. 'True' → logprob: -17.375022888183594
    9. '４' → logprob: -17.625022888183594
    10. '3' → logprob: -17.750022888183594

Token 350: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8131201267242432
    2. '   ' → logprob: -1.0631201267242432
    3. ':' → logprob: -1.5631201267242432
    4. ':
' → logprob: -7.313119888305664
    5. ':return' → logprob: -7.938119888305664
    6. ',' → logprob: -8.188119888305664
    7. '.' → logprob: -9.688119888305664
    8. '<|end|>' → logprob: -9.813119888305664
    9. '):' → logprob: -10.313119888305664
    10. ' ' → logprob: -10.688119888305664

Token 351: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0099188769236207
    2. '       ' → logprob: -4.634918689727783
    3. ' if' → logprob: -9.884919166564941
    4. '<|end|>' → logprob: -10.009919166564941
    5. 'if' → logprob: -10.759919166564941
    6. '    ' → logprob: -11.509919166564941
    7. '```' → logprob: -11.759919166564941
    8. ',' → logprob: -11.759919166564941
    9. ' ' → logprob: -12.384919166564941
    10. '    
' → logprob: -12.884919166564941

Token 352: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002814775798469782
    2. '   ' → logprob: -8.87528133392334
    3. ' return' → logprob: -8.87528133392334
    4. '       ' → logprob: -14.12528133392334
    5. '
' → logprob: -15.00028133392334
    6. '	return' → logprob: -15.12528133392334
    7. '```' → logprob: -15.62528133392334
    8. 'False' → logprob: -15.75028133392334
    9. ' ' → logprob: -16.750282287597656
    10. '    ' → logprob: -17.625282287597656

Token 353: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. '(False' → logprob: -19.375036239624023
    4. 'false' → logprob: -20.500036239624023
    5. 'True' → logprob: -20.875036239624023
    6. '=False' → logprob: -21.250036239624023
    7. '_false' → logprob: -22.500036239624023
    8. 'Fal' → logprob: -22.500036239624023
    9. '```' → logprob: -23.375036239624023
    10. 'F' → logprob: -23.375036239624023

Token 354: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00722583569586277
    2. '<|end|>' → logprob: -5.00722599029541
    3. ')' → logprob: -9.38222599029541
    4. '    
' → logprob: -9.50722599029541
    5. '<|end|>' → logprob: -9.75722599029541
    6. ',' → logprob: -10.00722599029541
    7. '
' → logprob: -10.13222599029541
    8. '    ' → logprob: -10.13222599029541
    9. '  ' → logprob: -10.25722599029541
    10. ' ' → logprob: -10.25722599029541

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05994921922683716
    2. ' ' → logprob: -3.8099491596221924
    3. '<|end|>' → logprob: -3.8099491596221924
    4. '    ' → logprob: -5.5599493980407715
    5. ' 
' → logprob: -5.8099493980407715
    6. '    
' → logprob: -6.5599493980407715
    7. '  ' → logprob: -7.1849493980407715
    8. ':' → logprob: -7.1849493980407715
    9. ')' → logprob: -7.3099493980407715
    10. '
' → logprob: -7.4349493980407715

Token 356: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06161254644393921
    2. ' if' → logprob: -3.061612606048584
    3. 'if' (adapté à ' if') → logprob: -4.936612606048584
    4. ' ' → logprob: -5.811612606048584
    5. '    ' → logprob: -6.436612606048584
    6. ' 
' → logprob: -8.061612129211426
    7. '    
' → logprob: -8.311612129211426
    8. '  ' → logprob: -9.436612129211426
    9. ',' → logprob: -9.686612129211426
    10. 's' → logprob: -9.811612129211426

Token 357: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4740808606147766
    2. ' s' → logprob: -0.9740808606147766
    3. '(s' → logprob: -13.724081039428711
    4. ' ' → logprob: -14.224081039428711
    5. '   ' → logprob: -14.849081039428711
    6. ' ' → logprob: -14.974081039428711
    7. '_s' → logprob: -15.224081039428711
    8. '	s' → logprob: -15.474081039428711
    9. ' not' → logprob: -16.22408103942871
    10. '{s' → logprob: -16.47408103942871

Token 358: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.001035787514410913
    2. '[' → logprob: -6.876035690307617
    3. 'l' → logprob: -13.251035690307617
    4. '[
' → logprob: -14.626035690307617
    5. ' [' → logprob: -15.251035690307617
    6. '[s' → logprob: -16.001035690307617
    7. '   ' → logprob: -16.126035690307617
    8. '```' → logprob: -16.251035690307617
    9. '[L' → logprob: -17.001035690307617
    10. '[i' → logprob: -17.126035690307617

Token 359: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00852994155138731
    2. ']!=' → logprob: -4.883530139923096
    3. '']' → logprob: -7.758530139923096
    4. ' ]' → logprob: -8.633529663085938
    5. '!=' → logprob: -9.258529663085938
    6. '[l' → logprob: -9.508529663085938
    7. '[' → logprob: -9.508529663085938
    8. ']!='' → logprob: -10.383529663085938
    9. ' !=' → logprob: -11.383529663085938
    10. ']==' → logprob: -11.508529663085938

Token 360: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.387289434671402
    2. ' !=' → logprob: -1.1372894048690796
    3. ']!=' → logprob: -8.387289047241211
    4. '!='' → logprob: -9.512289047241211
    5. ')!=' → logprob: -9.762289047241211
    6. ']' → logprob: -11.137289047241211
    7. '()!=' → logprob: -11.512289047241211
    8. ' ' → logprob: -11.637289047241211
    9. ''' → logprob: -12.262289047241211
    10. ')' → logprob: -12.262289047241211

Token 361: ' '' (ID: 461)
  Prédit: ''m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''m' → logprob: -0.00018101456225849688
    2. 'm' → logprob: -8.875181198120117
    3. '"' → logprob: -10.250181198120117
    4. '`' → logprob: -12.250181198120117
    5. ' '' → logprob: -14.750181198120117
    6. ''' → logprob: -14.875181198120117
    7. '('' → logprob: -16.500181198120117
    8. '```' → logprob: -16.875181198120117
    9. ''s' → logprob: -17.000181198120117
    10. '	m' → logprob: -17.500181198120117

Token 362: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00043281487887725234
    2. ''m' → logprob: -7.750432968139648
    3. ''' → logprob: -13.500432968139648
    4. '"' → logprob: -14.500432968139648
    5. ' m' → logprob: -16.50043296813965
    6. '`' → logprob: -16.62543296813965
    7. 'м' → logprob: -17.50043296813965
    8. '	m' → logprob: -17.75043296813965
    9. ''''' → logprob: -18.12543296813965
    10. ')m' → logprob: -18.37543296813965

Token 363: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002728075487539172
    2. ' '' → logprob: -6.00272798538208
    3. ' or' → logprob: -8.877728462219238
    4. ''or' → logprob: -9.127728462219238
    5. '')' → logprob: -13.627728462219238
    6. ''s' → logprob: -14.252728462219238
    7. 'or' → logprob: -14.752728462219238
    8. ')' → logprob: -14.752728462219238
    9. '':' → logprob: -15.252728462219238
    10. '':
' → logprob: -15.377728462219238

Token 364: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0007724629249423742
    2. '       ' → logprob: -7.875772476196289
    3. ':' → logprob: -9.000772476196289
    4. 'or' → logprob: -9.000772476196289
    5. '   ' → logprob: -9.625772476196289
    6. ' and' → logprob: -10.375772476196289
    7. ' ' → logprob: -11.125772476196289
    8. '    ' → logprob: -11.750772476196289
    9. '	or' → logprob: -11.750772476196289
    10. ':
' → logprob: -12.250772476196289

Token 365: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0067154900170862675
    2. ' s' → logprob: -5.006715297698975
    3. '`s' → logprob: -16.756715774536133
    4. '_s' → logprob: -17.006715774536133
    5. '(s' → logprob: -18.256715774536133
    6. ''s' → logprob: -18.756715774536133
    7. '<|end|>' → logprob: -19.006715774536133
    8. '	s' → logprob: -19.131715774536133
    9. ' ' → logprob: -19.506715774536133
    10. 'w' → logprob: -19.631715774536133

Token 366: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00013560164370574057
    2. 'r' → logprob: -9.00013542175293
    3. '[' → logprob: -11.50013542175293
    4. '[l' → logprob: -14.25013542175293
    5. ' r' → logprob: -14.87513542175293
    6. ']' → logprob: -15.25013542175293
    7. '[
' → logprob: -15.50013542175293
    8. '	r' → logprob: -16.12513542175293
    9. '(r' → logprob: -16.37513542175293
    10. ' [' → logprob: -16.62513542175293

Token 367: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008769973181188107
    2. ']!=' → logprob: -5.008769989013672
    3. '']' → logprob: -6.383769989013672
    4. '!=' → logprob: -8.383769989013672
    5. ' ]' → logprob: -9.383769989013672
    6. ']!='' → logprob: -10.883769989013672
    7. ' !=' → logprob: -11.133769989013672
    8. '"]' → logprob: -11.883769989013672
    9. '`]' → logprob: -12.383769989013672
    10. '[' → logprob: -13.258769989013672

Token 368: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3165656328201294
    2. ' !=' → logprob: -1.3165656328201294
    3. '!='' → logprob: -6.06656551361084
    4. ']!=' → logprob: -7.31656551361084
    5. ''' → logprob: -8.56656551361084
    6. ')!=' → logprob: -9.81656551361084
    7. ']' → logprob: -10.56656551361084
    8. '```' → logprob: -11.56656551361084
    9. '()!=' → logprob: -12.06656551361084
    10. ' ' → logprob: -12.31656551361084

Token 369: ' '' (ID: 461)
  Prédit: ''w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''w' → logprob: -0.31365787982940674
    2. ''' → logprob: -1.3136578798294067
    3. ' '' → logprob: -8.063657760620117
    4. 'w' → logprob: -9.813657760620117
    5. '`' → logprob: -11.688657760620117
    6. '"' → logprob: -12.438657760620117
    7. '’w' → logprob: -12.813657760620117
    8. ''s' → logprob: -13.438657760620117
    9. '('' → logprob: -13.438657760620117
    10. '```' → logprob: -13.688657760620117

Token 370: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005298977252095938
    2. ''w' → logprob: -5.255299091339111
    3. ''' → logprob: -9.755298614501953
    4. ' w' → logprob: -12.005298614501953
    5. '"' → logprob: -14.630298614501953
    6. ''s' → logprob: -15.505298614501953
    7. '`' → logprob: -16.380298614501953
    8. ' '' → logprob: -16.630298614501953
    9. '	w' → logprob: -16.630298614501953
    10. '```' → logprob: -16.755298614501953

Token 371: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22548682987689972
    2. ':' → logprob: -1.7254868745803833
    3. '       ' → logprob: -4.350486755371094
    4. '):
' → logprob: -5.100486755371094
    5. '   ' → logprob: -6.475486755371094
    6. '':
' → logprob: -6.475486755371094
    7. '():
' → logprob: -7.475486755371094
    8. ':return' → logprob: -7.725486755371094
    9. '':' → logprob: -8.475486755371094
    10. ''):
' → logprob: -8.475486755371094

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11392994970083237
    2. '   ' → logprob: -2.2389299869537354
    3. '    ' → logprob: -8.113929748535156
    4. ' return' → logprob: -8.863929748535156
    5. '	' → logprob: -9.238929748535156
    6. '<|end|>' → logprob: -9.488929748535156
    7. '```' → logprob: -9.488929748535156
    8. '	return' → logprob: -9.738929748535156
    9. ' ' → logprob: -9.863929748535156
    10. '     ' → logprob: -10.113929748535156

Token 373: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08114016801118851
    2. ' return' → logprob: -2.8311402797698975
    3. '       ' → logprob: -4.331140041351318
    4. '   ' → logprob: -5.206140041351318
    5. '    ' → logprob: -9.081140518188477
    6. 'False' → logprob: -9.206140518188477
    7. '
' → logprob: -9.456140518188477
    8. '	return' → logprob: -10.831140518188477
    9. '```' → logprob: -11.581140518188477
    10. ':return' → logprob: -12.081140518188477

Token 374: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.1472419600977446e-06
    2. ' False' → logprob: -13.750000953674316
    3. '(False' → logprob: -20.125001907348633
    4. 'false' → logprob: -20.625001907348633
    5. '=False' → logprob: -22.125001907348633
    6. 'True' → logprob: -23.750001907348633
    7. '_false' → logprob: -23.875001907348633
    8. 'F' → logprob: -24.750001907348633
    9. 'FALSE' → logprob: -24.875001907348633
    10. 'Fal' → logprob: -24.875001907348633

Token 375: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10857854783535004
    2. '<|end|>' → logprob: -2.3585784435272217
    3. ' ' → logprob: -5.983578681945801
    4. ')' → logprob: -6.358578681945801
    5. ':' → logprob: -7.233578681945801
    6. '    
' → logprob: -7.483578681945801
    7. '\n' → logprob: -7.483578681945801
    8. '
' → logprob: -7.608578681945801
    9. '<|end|>' → logprob: -7.608578681945801
    10. '    ' → logprob: -8.2335786819458

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01635703817009926
    2. '<|end|>' → logprob: -4.391356945037842
    3. ' ' → logprob: -6.266356945037842
    4. '    ' → logprob: -6.641356945037842
    5. '    
' → logprob: -8.766357421875
    6. ')' → logprob: -9.516357421875
    7. '[' → logprob: -9.641357421875
    8. ' 
' → logprob: -9.641357421875
    9. '  ' → logprob: -9.766357421875
    10. '<|end|>' → logprob: -10.266357421875

Token 377: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14787505567073822
    2. ' for' → logprob: -2.2728750705718994
    3. 'for' (adapté à ' for') → logprob: -3.3978750705718994
    4. '    ' → logprob: -7.89787483215332
    5. '    
' → logprob: -7.89787483215332
    6. 'def' → logprob: -10.39787483215332
    7. ' ' → logprob: -10.39787483215332
    8. '
' → logprob: -10.64787483215332
    9. ' 
' → logprob: -10.64787483215332
    10. ',' → logprob: -10.89787483215332

Token 378: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07209309190511703
    2. 'mid' → logprob: -2.6970930099487305
    3. ' e' → logprob: -6.8220930099487305
    4. ' mid' → logprob: -7.0720930099487305
    5. '   ' → logprob: -9.57209300994873
    6. 'm' → logprob: -9.82209300994873
    7. 'i' → logprob: -9.82209300994873
    8. 'pos' → logprob: -11.69709300994873
    9. '```' → logprob: -11.82209300994873
    10. 'middle' → logprob: -11.82209300994873

Token 379: '_pos' (ID: 14692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3724902272224426
    2. ' in' → logprob: -1.2474901676177979
    3. 'mid' → logprob: -3.997490167617798
    4. 'i' → logprob: -5.372490406036377
    5. ' i' → logprob: -8.247489929199219
    6. ' mid' → logprob: -8.747489929199219
    7. '_' → logprob: -9.497489929199219
    8. 'idx' → logprob: -10.122489929199219
    9. '1' → logprob: -10.247489929199219
    10. '_mid' → logprob: -10.372489929199219

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038096800446510315
    2. 'in' → logprob: -3.2880969047546387
    3. ' ' → logprob: -9.91309642791748
    4. 'n' → logprob: -13.66309642791748
    5. 'In' → logprob: -14.41309642791748
    6. ',' → logprob: -14.53809642791748
    7. ' 
' → logprob: -14.78809642791748
    8. 'space' → logprob: -15.03809642791748
    9. '	in' → logprob: -15.16309642791748
    10. '  ' → logprob: -15.41309642791748

Token 381: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033832306507974863
    2. ' range' → logprob: -8.000338554382324
    3. '(range' → logprob: -12.750338554382324
    4. '	range' → logprob: -17.750337600708008
    5. '   ' → logprob: -18.375337600708008
    6. '
' → logprob: -20.625337600708008
    7. '.range' → logprob: -21.000337600708008
    8. 'rang' → logprob: -21.625337600708008
    9. '_range' → logprob: -22.500337600708008
    10. ' ' → logprob: -22.750337600708008

Token 382: '(l' (ID: 4179)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00043257648940198123
    2. '(l' → logprob: -7.75043249130249
    3. ' l' → logprob: -14.000432968139648
    4. '[l' → logprob: -14.750432968139648
    5. '	l' → logprob: -14.750432968139648
    6. '   ' → logprob: -15.750432968139648
    7. '_l' → logprob: -17.12543296813965
    8. ',l' → logprob: -17.25043296813965
    9. '$l' → logprob: -17.50043296813965
    10. '=l' → logprob: -19.00043296813965

Token 383: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013639278477057815
    2. ' +' → logprob: -6.626363754272461
    3. '1' → logprob: -10.251363754272461
    4. '2' → logprob: -13.251363754272461
    5. '+
' → logprob: -14.876363754272461
    6. '+l' → logprob: -15.501363754272461
    7. ' ' → logprob: -16.37636375427246
    8. ',' → logprob: -16.50136375427246
    9. '+,' → logprob: -16.87636375427246
    10. '   ' → logprob: -17.12636375427246

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017169468337669969
    2. '2' → logprob: -6.3767170906066895
    3. ' ' → logprob: -11.751716613769531
    4. 'r' → logprob: -12.876716613769531
    5. 'n' → logprob: -13.626716613769531
    6. '3' → logprob: -14.001716613769531
    7. 'l' → logprob: -14.626716613769531
    8. '+' → logprob: -14.876716613769531
    9. '
' → logprob: -15.126716613769531
    10. ',' → logprob: -15.376716613769531

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038336371653713286
    2. ',r' → logprob: -8.250383377075195
    3. ' ,' → logprob: -9.125383377075195
    4. 'r' → logprob: -11.250383377075195
    5. ' r' → logprob: -16.250383377075195
    6. '   ' → logprob: -16.375383377075195
    7. ',
' → logprob: -17.375383377075195
    8. '+' → logprob: -18.375383377075195
    9. '+r' → logprob: -19.500383377075195
    10. '```' → logprob: -19.625383377075195

Token 386: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.512236498361744e-07
    2. ' r' → logprob: -14.625000953674316
    3. '[r' → logprob: -19.375
    4. '	r' → logprob: -21.0
    5. '_r' → logprob: -21.75
    6. '$r' → logprob: -22.875
    7. ',r' → logprob: -22.875
    8. '   ' → logprob: -23.25
    9. '-r' → logprob: -23.25
    10. 'rstrip' → logprob: -23.25

Token 387: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011846343986690044
    2. '):
' → logprob: -6.751184463500977
    3. ')' → logprob: -12.251184463500977
    4. '):

' → logprob: -13.001184463500977
    5. '-' → logprob: -13.251184463500977
    6. '0' → logprob: -13.251184463500977
    7. ' ):' → logprob: -13.501184463500977
    8. '):
' → logprob: -14.126184463500977
    9. ''):' → logprob: -15.251184463500977
    10. '{' → logprob: -15.376184463500977

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008620720356702805
    2. '0' → logprob: -4.758620738983154
    3. ' ' → logprob: -12.758620262145996
    4. '<|end|>' → logprob: -13.883620262145996
    5. ')' → logprob: -14.133620262145996
    6. 'r' → logprob: -14.508620262145996
    7. '2' → logprob: -15.008620262145996
    8. '-' → logprob: -15.883620262145996
    9. '<|end|>' → logprob: -16.133621215820312
    10. 'index' → logprob: -16.383621215820312

Token 389: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3156668245792389
    2. '):
' → logprob: -1.3156667947769165
    3. ':' → logprob: -6.190666675567627
    4. '+' → logprob: -8.315667152404785
    5. '   ' → logprob: -10.565667152404785
    6. ':
' → logprob: -10.690667152404785
    7. ')' → logprob: -10.690667152404785
    8. '):
' → logprob: -11.065667152404785
    9. ' ):' → logprob: -12.065667152404785
    10. ',' → logprob: -12.565667152404785

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02137458510696888
    2. ' if' → logprob: -4.271374702453613
    3. '<|end|>' → logprob: -5.521374702453613
    4. ' ' → logprob: -6.521374702453613
    5. '   ' → logprob: -6.771374702453613
    6. 'if' → logprob: -8.646374702453613
    7. '        ' → logprob: -9.521374702453613
    8. '<|end|>' → logprob: -9.771374702453613
    9. '	if' → logprob: -9.896374702453613
    10. '    ' → logprob: -10.021374702453613

Token 391: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00696104671806097
    2. ' if' → logprob: -5.381960868835449
    3. '       ' → logprob: -6.131960868835449
    4. '   ' → logprob: -9.00696086883545
    5. '	if' → logprob: -10.88196086883545
    6. '<|end|>' → logprob: -10.88196086883545
    7. ' ' → logprob: -13.13196086883545
    8. '           ' → logprob: -14.13196086883545
    9. '```' → logprob: -14.13196086883545
    10. '    ' → logprob: -14.50696086883545

Token 392: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000553151941858232
    2. ' s' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.375553131103516
    4. ' ' → logprob: -18.000553131103516
    5. '           ' → logprob: -18.125553131103516
    6. '	s' → logprob: -18.125553131103516
    7. '       ' → logprob: -18.625553131103516
    8. '_s' → logprob: -19.625553131103516
    9. ' ' → logprob: -19.750553131103516
    10. '(s' → logprob: -19.875553131103516

Token 393: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -1.9862216504407115e-05
    2. 'e' → logprob: -10.875020027160645
    3. '[' → logprob: -14.125020027160645
    4. '[
' → logprob: -16.500019073486328
    5. ' [' → logprob: -16.625019073486328
    6. '```' → logprob: -18.750019073486328
    7. '%e' → logprob: -18.875019073486328
    8. '[i' → logprob: -19.250019073486328
    9. '[l' → logprob: -19.375019073486328
    10. ' e' → logprob: -19.500019073486328

Token 394: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.009596837684512138
    2. '[e' → logprob: -5.259596824645996
    3. 'e' → logprob: -6.134596824645996
    4. 'pos' → logprob: -6.134596824645996
    5. 'Pos' → logprob: -11.884596824645996
    6. '[pos' → logprob: -12.384596824645996
    7. 'p' → logprob: -12.884596824645996
    8. ' e' → logprob: -13.384596824645996
    9. '[' → logprob: -13.509596824645996
    10. '```' → logprob: -14.009596824645996

Token 395: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4009963274002075
    2. ' ==' → logprob: -1.1509963274002075
    3. '=='' → logprob: -4.275996208190918
    4. '=' → logprob: -9.650996208190918
    5. ''' → logprob: -10.525996208190918
    6. ' =='' → logprob: -11.150996208190918
    7. ']==' → logprob: -11.400996208190918
    8. '='' → logprob: -13.150996208190918
    9. ')==' → logprob: -13.775996208190918
    10. ']=='' → logprob: -13.900996208190918

Token 396: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06234050542116165
    2. ' ==' → logprob: -3.062340497970581
    3. '=='' → logprob: -4.31234073638916
    4. '=' → logprob: -8.43734073638916
    5. ''' → logprob: -11.06234073638916
    6. '!=' → logprob: -11.43734073638916
    7. '==
' → logprob: -11.93734073638916
    8. ''e' → logprob: -13.06234073638916
    9. ' =='' → logprob: -13.68734073638916
    10. '='' → logprob: -13.81234073638916

Token 397: ' '' (ID: 461)
  Prédit: ''e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''e' → logprob: -0.00031615851912647486
    2. 'e' → logprob: -8.125316619873047
    3. ' '' → logprob: -11.750316619873047
    4. ''' → logprob: -12.000316619873047
    5. ' e' → logprob: -13.250316619873047
    6. '"' → logprob: -13.250316619873047
    7. '`' → logprob: -13.750316619873047
    8. '’e' → logprob: -14.000316619873047
    9. ' ' → logprob: -14.750316619873047
    10. '	e' → logprob: -16.500316619873047

Token 398: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00976470671594143
    2. ''e' → logprob: -4.634764671325684
    3. ''' → logprob: -12.009764671325684
    4. ' e' → logprob: -13.259764671325684
    5. '`' → logprob: -15.134764671325684
    6. '"' → logprob: -15.634764671325684
    7. '’e' → logprob: -16.134765625
    8. ''s' → logprob: -16.134765625
    9. '```' → logprob: -16.509765625
    10. 'е' → logprob: -16.884765625

Token 399: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.9780077338218689
    2. ''):
' → logprob: -1.7280077934265137
    3. ''' → logprob: -1.9780077934265137
    4. '':
' → logprob: -2.3530077934265137
    5. ':' → logprob: -2.4780077934265137
    6. ':
' → logprob: -3.3530077934265137
    7. '):
' → logprob: -3.3530077934265137
    8. ''):' → logprob: -3.4780077934265137
    9. '):' → logprob: -4.103007793426514
    10. ' '' → logprob: -5.728007793426514

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08241695165634155
    2. ':' → logprob: -2.9574170112609863
    3. '       ' → logprob: -3.8324170112609863
    4. '<|end|>' → logprob: -6.457417011260986
    5. ':
' → logprob: -6.832417011260986
    6. ',' → logprob: -7.457417011260986
    7. ' and' → logprob: -7.707417011260986
    8. '	       ' → logprob: -7.957417011260986
    9. ' continue' → logprob: -8.082416534423828
    10. '   ' → logprob: -8.707416534423828

Token 401: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2588636577129364
    2. ' continue' → logprob: -1.5088636875152588
    3. '           ' → logprob: -5.50886344909668
    4. '               ' → logprob: -6.63386344909668
    5. '	continue' → logprob: -7.25886344909668
    6. '       ' → logprob: -7.38386344909668
    7. '   ' → logprob: -9.38386344909668
    8. 'contin' → logprob: -9.50886344909668
    9. '_continue' → logprob: -10.63386344909668
    10. ' continues' → logprob: -11.50886344909668

Token 402: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06778020411729813
    2. '<|end|>' → logprob: -2.8177802562713623
    3. '
' → logprob: -6.442780017852783
    4. '<|end|>' → logprob: -6.817780017852783
    5. '        
' → logprob: -7.192780017852783
    6. ' for' → logprob: -7.567780017852783
    7. '        ' → logprob: -7.817780017852783
    8. '   ' → logprob: -7.942780017852783
    9. ',' → logprob: -8.567780494689941
    10. ')' → logprob: -8.567780494689941

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005512045696377754
    2. '<|end|>' → logprob: -5.505512237548828
    3. ' for' → logprob: -7.755512237548828
    4. '   ' → logprob: -8.505512237548828
    5. '<|end|>' → logprob: -8.505512237548828
    6. ')' → logprob: -9.255512237548828
    7. '
' → logprob: -9.505512237548828
    8. 'for' → logprob: -9.630512237548828
    9. '	' → logprob: -9.630512237548828
    10. '```' → logprob: -10.005512237548828

Token 404: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30801382660865784
    2. '       ' → logprob: -1.5580137968063354
    3. ' for' → logprob: -2.933013916015625
    4. '   ' → logprob: -7.558013916015625
    5. 'if' → logprob: -7.808013916015625
    6. '```' → logprob: -9.433013916015625
    7. '           ' → logprob: -9.558013916015625
    8. '
' → logprob: -9.683013916015625
    9. '	for' → logprob: -10.183013916015625
    10. '        
' → logprob: -10.433013916015625

Token 405: ' X' (ID: 2127)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012760492041707039
    2. ' for' → logprob: -4.512760639190674
    3. 'if' → logprob: -7.137760639190674
    4. '       ' → logprob: -7.262760639190674
    5. '   ' → logprob: -8.637760162353516
    6. '```' → logprob: -11.887760162353516
    7. 'left' → logprob: -11.887760162353516
    8. '	for' → logprob: -12.137760162353516
    9. '           ' → logprob: -12.387760162353516
    10. ' if' → logprob: -12.762760162353516

Token 406: ' =' (ID: 314)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -1.0675462484359741
    2. ' =' → logprob: -1.4425462484359741
    3. 'for' → logprob: -1.5675462484359741
    4. '_len' → logprob: -2.6925463676452637
    5. '_length' → logprob: -3.4425463676452637
    6. '_start' → logprob: -3.8175463676452637
    7. ' for' → logprob: -4.442546367645264
    8. '=' → logprob: -4.442546367645264
    9. '_pos' → logprob: -4.567546367645264
    10. 'end' → logprob: -4.692546367645264

Token 407: ' s' (ID: 265)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4883461594581604
    2. 'l' → logprob: -1.4883460998535156
    3. 'is' → logprob: -2.1133460998535156
    4. 's' → logprob: -3.7383460998535156
    5. ' (' → logprob: -4.988346099853516
    6. '(s' → logprob: -5.113346099853516
    7. ' l' → logprob: -6.863346099853516
    8. '[l' → logprob: -7.363346099853516
    9. ' is' → logprob: -7.488346099853516
    10. 'range' → logprob: -8.738346099853516

Token 408: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.005201262887567282
    2. 'l' → logprob: -5.38020133972168
    3. '(l' → logprob: -8.25520133972168
    4. '[' → logprob: -8.25520133972168
    5. ',l' → logprob: -11.50520133972168
    6. '[
' → logprob: -11.75520133972168
    7. ' [' → logprob: -11.75520133972168
    8. '   ' → logprob: -12.00520133972168
    9. ',' → logprob: -12.13020133972168
    10. ' l' → logprob: -12.38020133972168

Token 409: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.281485836254433e-05
    2. ' +' → logprob: -9.625092506408691
    3. '+l' → logprob: -10.625092506408691
    4. '1' → logprob: -13.375092506408691
    5. ':l' → logprob: -15.125092506408691
    6. 'e' → logprob: -15.375092506408691
    7. 'l' → logprob: -15.625092506408691
    8. '(l' → logprob: -16.875093460083008
    9. ']+' → logprob: -17.000093460083008
    10. '   ' → logprob: -17.750093460083008

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007239687256515026
    2. '+' → logprob: -5.132239818572998
    3. 'l' → logprob: -6.757239818572998
    4. 'e' → logprob: -9.13223934173584
    5. '   ' → logprob: -11.38223934173584
    6. ' +' → logprob: -12.00723934173584
    7. '```' → logprob: -12.25723934173584
    8. '+l' → logprob: -12.38223934173584
    9. ' ' → logprob: -12.88223934173584
    10. ']' → logprob: -13.75723934173584

Token 411: ':e' (ID: 87596)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0965687707066536
    2. ',e' → logprob: -2.7215688228607178
    3. ':e' → logprob: -3.8465688228607178
    4. ' ,' → logprob: -5.596568584442139
    5. ':' → logprob: -7.721568584442139
    6. '],' → logprob: -7.971568584442139
    7. ']' → logprob: -8.471569061279297
    8. 'e' → logprob: -9.346569061279297
    9. ' e' → logprob: -9.846569061279297
    10. ';e' → logprob: -10.846569061279297

Token 412: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.03818034008145332
    2. 'pos' → logprob: -3.288180351257324
    3. 'p' → logprob: -8.913180351257324
    4. 'Pos' → logprob: -13.413180351257324
    5. 'e' → logprob: -14.163180351257324
    6. '+' → logprob: -14.788180351257324
    7. 'os' → logprob: -15.038180351257324
    8. '_p' → logprob: -15.538180351257324
    9. 's' → logprob: -15.788180351257324
    10. 'o' → logprob: -16.038179397583008

Token 413: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022883882746100426
    2. '],' → logprob: -3.897883892059326
    3. ']
' → logprob: -6.147883892059326
    4. '       ' → logprob: -10.022883415222168
    5. ' ]' → logprob: -10.022883415222168
    6. ',' → logprob: -10.522883415222168
    7. '+' → logprob: -10.647883415222168
    8. ']
' → logprob: -10.772883415222168
    9. ']

' → logprob: -11.397883415222168
    10. '   ' → logprob: -12.397883415222168

Token 414: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.3924311399459839
    2. ' if' → logprob: -1.6424311399459839
    3. '       ' → logprob: -1.7674311399459839
    4. 'if' → logprob: -1.8924311399459839
    5. ' Y' → logprob: -2.3924312591552734
    6. ' for' → logprob: -2.3924312591552734
    7. 'for' → logprob: -3.5174312591552734
    8. '        ' → logprob: -4.642431259155273
    9. ' y' → logprob: -5.517431259155273
    10. 'y' → logprob: -5.767431259155273

Token 415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693975865840912
    2. ' =' → logprob: -2.1269397735595703
    3. '=s' → logprob: -12.62693977355957
    4. ' ' → logprob: -12.75193977355957
    5. ',' → logprob: -13.87693977355957
    6. '   ' → logprob: -14.25193977355957
    7. 'for' → logprob: -14.50193977355957
    8. '<|end|>' → logprob: -14.50193977355957
    9. '=l' → logprob: -14.75193977355957
    10. 's' → logprob: -14.75193977355957

Token 416: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02571687661111355
    2. ' s' → logprob: -3.775716781616211
    3. 'range' → logprob: -6.400716781616211
    4. 'e' → logprob: -8.275716781616211
    5. ' range' → logprob: -8.525716781616211
    6. '   ' → logprob: -9.400716781616211
    7. 'r' → logprob: -9.525716781616211
    8. '(s' → logprob: -9.650716781616211
    9. ' e' → logprob: -10.525716781616211
    10. ' ' → logprob: -11.025716781616211

Token 417: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.04304863512516022
    2. 'e' → logprob: -3.168048620223999
    3. '(e' → logprob: -11.043048858642578
    4. ' e' → logprob: -11.668048858642578
    5. '+' → logprob: -11.793048858642578
    6. '{' → logprob: -12.543048858642578
    7. '[' → logprob: -12.793048858642578
    8. ':e' → logprob: -12.918048858642578
    9. '
' → logprob: -13.293048858642578
    10. '	e' → logprob: -13.668048858642578

Token 418: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.000145137935760431
    2. 'pos' → logprob: -9.000144958496094
    3. '+' → logprob: -10.750144958496094
    4. 'Pos' → logprob: -16.375144958496094
    5. '
' → logprob: -17.000144958496094
    6. '-pos' → logprob: -17.625144958496094
    7. '_p' → logprob: -17.875144958496094
    8. '_POS' → logprob: -18.125144958496094
    9. ']+' → logprob: -18.500144958496094
    10. 'p' → logprob: -18.500144958496094

Token 419: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.786196975852363e-05
    2. ' +' → logprob: -10.375038146972656
    3. '+r' → logprob: -12.250038146972656
    4. 'r' → logprob: -13.875038146972656
    5. ':r' → logprob: -15.250038146972656
    6. ']+' → logprob: -15.375038146972656
    7. '1' → logprob: -15.375038146972656
    8. '```' → logprob: -16.625038146972656
    9. '
' → logprob: -16.750038146972656
    10. '+
' → logprob: -17.125038146972656

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012536965310573578
    2. 'r' → logprob: -4.387537002563477
    3. ' ' → logprob: -11.387537002563477
    4. ' r' → logprob: -12.387537002563477
    5. '(r' → logprob: -12.762537002563477
    6. '2' → logprob: -12.887537002563477
    7. '+' → logprob: -12.887537002563477
    8. '   ' → logprob: -13.762537002563477
    9. '```' → logprob: -14.387537002563477
    10. '
' → logprob: -14.512537002563477

Token 421: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.013049405068159103
    2. ',' → logprob: -4.638049602508545
    3. ',r' → logprob: -6.263049602508545
    4. ' :' → logprob: -7.138049602508545
    5. ':' → logprob: -8.388049125671387
    6. 'r' → logprob: -8.638049125671387
    7. ' ,' → logprob: -9.013049125671387
    8. '+' → logprob: -11.513049125671387
    9. '   ' → logprob: -11.763049125671387
    10. '(r' → logprob: -12.638049125671387

Token 422: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014239257434383035
    2. '-' → logprob: -7.1264238357543945
    3. ' ]' → logprob: -8.251423835754395
    4. ']:' → logprob: -8.876423835754395
    5. ']
' → logprob: -8.876423835754395
    6. '+' → logprob: -10.376423835754395
    7. ']:
' → logprob: -10.751423835754395
    8. ')' → logprob: -11.751423835754395
    9. ']
' → logprob: -12.626423835754395
    10. '1' → logprob: -12.751423835754395

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015439033741131425
    2. '<|end|>' → logprob: -7.751543998718262
    3. '	' → logprob: -8.251543998718262
    4. '   ' → logprob: -8.751543998718262
    5. ' for' → logprob: -8.876543998718262
    6. '           ' → logprob: -9.001543998718262
    7. '<|end|>' → logprob: -9.751543998718262
    8. '        
' → logprob: -9.876543998718262
    9. ',' → logprob: -9.876543998718262
    10. '	   ' → logprob: -10.126543998718262

Token 424: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24261626601219177
    2. 'if' (adapté à ' if') → logprob: -2.1176161766052246
    3. ' if' → logprob: -2.3676161766052246
    4. '   ' → logprob: -7.367616176605225
    5. ' for' → logprob: -8.367616653442383
    6. '	if' → logprob: -9.242616653442383
    7. 'for' → logprob: -9.492616653442383
    8. '           ' → logprob: -9.492616653442383
    9. '<|end|>' → logprob: -9.492616653442383
    10. '    ' → logprob: -10.242616653442383

Token 425: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.12693072855472565
    2. ' is' → logprob: -2.1269307136535645
    3. '   ' → logprob: -13.251931190490723
    4. '(is' → logprob: -14.251931190490723
    5. ' ' → logprob: -16.001930236816406
    6. '  ' → logprob: -16.501930236816406
    7. '	is' → logprob: -16.626930236816406
    8. '    ' → logprob: -17.001930236816406
    9. '
' → logprob: -17.876930236816406
    10. ' ' → logprob: -18.126930236816406

Token 426: '_cat' (ID: 50384)
  Prédit: '_cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cat' → logprob: -3.893480243277736e-05
    2. 'cat' → logprob: -10.250039100646973
    3. 'is' → logprob: -13.125039100646973
    4. 'Cat' → logprob: -13.625039100646973
    5. '_is' → logprob: -16.250038146972656
    6. '_CAT' → logprob: -16.500038146972656
    7. ' cat' → logprob: -16.875038146972656
    8. '(cat' → logprob: -17.375038146972656
    9. '-cat' → logprob: -17.500038146972656
    10. 's' → logprob: -17.500038146972656

Token 427: '(l' (ID: 4179)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.04180335998535156
    2. 'dp' → logprob: -3.2918033599853516
    3. '(l' → logprob: -5.666803359985352
    4. 'DP' → logprob: -9.416803359985352
    5. '(dp' → logprob: -9.791803359985352
    6. 's' → logprob: -9.791803359985352
    7. '_dt' → logprob: -11.166803359985352
    8. '(' → logprob: -11.541803359985352
    9. 'd' → logprob: -11.541803359985352
    10. '(s' → logprob: -11.666803359985352

Token 428: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011436723871156573
    2. ' +' → logprob: -6.876143455505371
    3. '1' → logprob: -9.126143455505371
    4. '+l' → logprob: -14.251143455505371
    5. '   ' → logprob: -14.751143455505371
    6. ' ' → logprob: -14.751143455505371
    7. 'l' → logprob: -15.626143455505371
    8. ',' → logprob: -16.251144409179688
    9. '()+' → logprob: -16.501144409179688
    10. '＋' → logprob: -16.751144409179688

Token 429: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.035079147666692734
    2. 'pos' → logprob: -4.035079002380371
    3. '1' → logprob: -5.285079002380371
    4. '(e' → logprob: -5.660079002380371
    5. ' e' → logprob: -6.035079002380371
    6. 'r' → logprob: -6.910079002380371
    7. 's' → logprob: -7.160079002380371
    8. ')' → logprob: -7.660079002380371
    9. '_pos' → logprob: -7.660079002380371
    10. 'p' → logprob: -7.660079002380371

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004323302768170834
    2. ',e' → logprob: -5.504323482513428
    3. ' ,' → logprob: -8.37932300567627
    4. ',
' → logprob: -11.50432300567627
    5. 'e' → logprob: -12.50432300567627
    6. ',r' → logprob: -14.37932300567627
    7. ',

' → logprob: -16.254323959350586
    8. ',s' → logprob: -16.254323959350586
    9. ',
' → logprob: -16.254323959350586
    10. ')' → logprob: -16.379323959350586

Token 431: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0325924449716695e-05
    2. ' e' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.875009536743164
    4. ')e' → logprob: -18.500009536743164
    5. ' ' → logprob: -19.375009536743164
    6. '(e' → logprob: -19.750009536743164
    7. '	e' → logprob: -20.375009536743164
    8. ',e' → logprob: -20.750009536743164
    9. '{' → logprob: -20.875009536743164
    10. ',' → logprob: -20.875009536743164

Token 432: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.008618593215942383
    2. 'pos' → logprob: -4.758618354797363
    3. 'Pos' → logprob: -13.508618354797363
    4. 'p' → logprob: -14.258618354797363
    5. 'os' → logprob: -14.383618354797363
    6. 'e' → logprob: -14.883618354797363
    7. 's' → logprob: -14.883618354797363
    8. 'o' → logprob: -16.25861930847168
    9. 'npos' → logprob: -16.38361930847168
    10. '```' → logprob: -16.75861930847168

Token 433: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019438935443758965
    2. ')' → logprob: -4.644438743591309
    3. ' -' → logprob: -4.644438743591309
    4. '),' → logprob: -12.519438743591309
    5. '   ' → logprob: -12.769438743591309
    6. '```' → logprob: -12.894438743591309
    7. '1' → logprob: -13.019438743591309
    8. ' )' → logprob: -13.019438743591309
    9. '-)' → logprob: -13.894438743591309
    10. ',' → logprob: -14.019438743591309

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -15.750003814697266
    4. '```' → logprob: -17.250003814697266
    5. '   ' → logprob: -18.062503814697266
    6. ',' → logprob: -18.250003814697266
    7. '0' → logprob: -18.375003814697266
    8. '2' → logprob: -19.000003814697266
    9. 'def' → logprob: -19.000003814697266
    10. '<|end|>' → logprob: -19.312503814697266

Token 435: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005903251585550606
    2. ' and' → logprob: -7.8755903244018555
    3. 'and' → logprob: -9.000590324401855
    4. ' )' → logprob: -9.375590324401855
    5. '):' → logprob: -14.625590324401855
    6. '):
' → logprob: -14.750590324401855
    7. '   ' → logprob: -15.375590324401855
    8. '       ' → logprob: -15.375590324401855
    9. '`)' → logprob: -16.000591278076172
    10. ')
' → logprob: -16.250591278076172

Token 436: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008615515194833279
    2. 'and' → logprob: -4.758615493774414
    3. '<|end|>' → logprob: -14.633615493774414
    4. ' ' → logprob: -15.883615493774414
    5. '	and' → logprob: -15.883615493774414
    6. '    ' → logprob: -17.133615493774414
    7. '        ' → logprob: -17.258615493774414
    8. ' ' → logprob: -17.383615493774414
    9. '           ' → logprob: -17.383615493774414
    10. '<|end|>' → logprob: -17.758615493774414

Token 437: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.009758212603628635
    2. ' is' → logprob: -4.634757995605469
    3. '   ' → logprob: -13.634757995605469
    4. '       ' → logprob: -15.259757995605469
    5. '    ' → logprob: -15.384757995605469
    6. ' ' → logprob: -15.509757995605469
    7. '  ' → logprob: -16.00975799560547
    8. '     ' → logprob: -16.38475799560547
    9. '           ' → logprob: -16.63475799560547
    10. '        ' → logprob: -16.75975799560547

Token 438: '_cat' (ID: 50384)
  Prédit: '_cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cat' → logprob: -0.0003360582049936056
    2. 'cat' → logprob: -8.000335693359375
    3. 'Cat' → logprob: -14.500335693359375
    4. ' cat' → logprob: -17.750335693359375
    5. 's' → logprob: -17.875335693359375
    6. '(cat' → logprob: -17.875335693359375
    7. '_c' → logprob: -18.000335693359375
    8. '_CAT' → logprob: -18.375335693359375
    9. '```' → logprob: -18.625335693359375
    10. 'r' → logprob: -19.125335693359375

Token 439: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -4.4849443838757e-06
    2. 'e' → logprob: -13.125004768371582
    3. '(' → logprob: -13.375004768371582
    4. ' (' → logprob: -14.125004768371582
    5. ' ' → logprob: -16.250003814697266
    6. '(
' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.250003814697266
    8. ')e' → logprob: -18.250003814697266
    9. '((' → logprob: -18.375003814697266
    10. ' e' → logprob: -18.625003814697266

Token 440: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.001775618875399232
    2. 'pos' → logprob: -6.626775741577148
    3. '+' → logprob: -7.751775741577148
    4. 'Pos' → logprob: -11.626775741577148
    5. 'p' → logprob: -12.501775741577148
    6. 'e' → logprob: -12.751775741577148
    7. 'o' → logprob: -14.376775741577148
    8. '2' → logprob: -14.376775741577148
    9. 'os' → logprob: -14.501775741577148
    10. ')' → logprob: -15.251775741577148

Token 441: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.666993507067673e-05
    2. '+r' → logprob: -10.625036239624023
    3. ' +' → logprob: -11.375036239624023
    4. '()+' → logprob: -14.875036239624023
    5. 'r' → logprob: -15.000036239624023
    6. '1' → logprob: -15.625036239624023
    7. '+
' → logprob: -17.125036239624023
    8. '2' → logprob: -17.500036239624023
    9. '+,' → logprob: -18.750036239624023
    10. ''+' → logprob: -18.875036239624023

Token 442: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00019901065388694406
    2. ' r' → logprob: -9.250199317932129
    3. '1' → logprob: -9.625199317932129
    4. '(r' → logprob: -10.500199317932129
    5. ',' → logprob: -12.875199317932129
    6. '
' → logprob: -13.250199317932129
    7. ' ' → logprob: -13.875199317932129
    8. '[r' → logprob: -14.000199317932129
    9. '```' → logprob: -14.500199317932129
    10. '-' → logprob: -14.500199317932129

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005729686468839645
    2. ',r' → logprob: -5.255729675292969
    3. 'r' → logprob: -7.755729675292969
    4. '(r' → logprob: -10.255729675292969
    5. ' ,' → logprob: -10.380729675292969
    6. ' r' → logprob: -14.505729675292969
    7. '(' → logprob: -15.630729675292969
    8. ')' → logprob: -15.880729675292969
    9. 'def' → logprob: -16.13072967529297
    10. ',
' → logprob: -16.75572967529297

Token 444: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1517960956552997e-05
    2. ' r' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.500011444091797
    4. '	r' → logprob: -19.875011444091797
    5. '[r' → logprob: -20.250011444091797
    6. '(r' → logprob: -20.500011444091797
    7. ')' → logprob: -20.625011444091797
    8. ' ' → logprob: -20.875011444091797
    9. '
' → logprob: -21.000011444091797
    10. '_r' → logprob: -21.500011444091797

Token 445: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5776860184123507e-06
    2. ' -' → logprob: -12.87500286102295
    3. '```' → logprob: -20.750001907348633
    4. ')' → logprob: -22.000001907348633
    5. '−' → logprob: -22.375001907348633
    6. '2' → logprob: -23.125001907348633
    7. '–' → logprob: -23.125001907348633
    8. ')-' → logprob: -23.250001907348633
    9. '1' → logprob: -23.875001907348633
    10. '()-' → logprob: -24.000001907348633

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '2' → logprob: -12.500003814697266
    3. ' ' → logprob: -15.250003814697266
    4. '```' → logprob: -17.000003814697266
    5. '-' → logprob: -17.750003814697266
    6. ')' → logprob: -18.500003814697266
    7. '   ' → logprob: -19.625003814697266
    8. '6' → logprob: -20.562503814697266
    9. '<|end|>' → logprob: -20.625003814697266
    10. '0' → logprob: -20.687503814697266

Token 447: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10087408870458603
    2. '):
' → logprob: -2.350874185562134
    3. ')' → logprob: -7.350873947143555
    4. '):
' → logprob: -11.475873947143555
    5. ':' → logprob: -12.100873947143555
    6. '):

' → logprob: -12.475873947143555
    7. '   ' → logprob: -13.100873947143555
    8. '       ' → logprob: -13.475873947143555
    9. ' ):' → logprob: -15.100873947143555
    10. ':
' → logprob: -15.350873947143555

Token 448: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01438315212726593
    2. '               ' → logprob: -4.514383316040039
    3. ':' → logprob: -6.139383316040039
    4. '                       ' → logprob: -7.764383316040039
    5. ':return' → logprob: -7.889383316040039
    6. ':
' → logprob: -9.139383316040039
    7. '                   ' → logprob: -9.264383316040039
    8. 'return' → logprob: -9.639383316040039
    9. ' return' → logprob: -10.264383316040039
    10. '<|end|>' → logprob: -11.014383316040039

Token 449: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04190625250339508
    2. '               ' → logprob: -3.7919063568115234
    3. ' return' → logprob: -4.041906356811523
    4. '           ' → logprob: -7.166906356811523
    5. '       ' → logprob: -9.291906356811523
    6. '	return' → logprob: -10.291906356811523
    7. ':return' → logprob: -11.041906356811523
    8. '                   ' → logprob: -12.416906356811523
    9. '   ' → logprob: -12.916906356811523
    10. '
' → logprob: -13.916906356811523

Token 450: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.941850526549388e-06
    2. ' True' → logprob: -11.750007629394531
    3. '(True' → logprob: -20.37500762939453
    4. '=True' → logprob: -23.00000762939453
    5. '   ' → logprob: -23.37500762939453
    6. 'true' → logprob: -23.62500762939453
    7. '
' → logprob: -24.00000762939453
    8. 'False' → logprob: -24.50000762939453
    9. 'Tr' → logprob: -25.75000762939453
    10. 'TRUE' → logprob: -26.12500762939453

Token 451: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005035456269979477
    2. '<|end|>' → logprob: -5.880035400390625
    3. '    
' → logprob: -7.255035400390625
    4. '
' → logprob: -7.380035400390625
    5. '  
' → logprob: -8.255035400390625
    6. '       ' → logprob: -9.005035400390625
    7. ' 
' → logprob: -9.255035400390625
    8. '.' → logprob: -10.005035400390625
    9. ' ' → logprob: -10.005035400390625
    10. '<|end|>' → logprob: -10.005035400390625

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004081009421497583
    2. '<|end|>' → logprob: -6.504080772399902
    3. '    
' → logprob: -7.129080772399902
    4. '	return' → logprob: -8.004080772399902
    5. '  
' → logprob: -8.129080772399902
    6. 'return' → logprob: -8.254080772399902
    7. '
' → logprob: -8.379080772399902
    8. '       ' → logprob: -8.754080772399902
    9. ' return' → logprob: -9.004080772399902
    10. '\n' → logprob: -9.254080772399902

Token 453: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25250110030174255
    2. 'return' (adapté à ' return') → logprob: -1.502501130104065
    3. ' return' → logprob: -7.627501010894775
    4. ' ' → logprob: -10.127501487731934
    5. '	return' → logprob: -11.002501487731934
    6. '    
' → logprob: -11.252501487731934
    7. '  ' → logprob: -12.627501487731934
    8. '<|end|>' → logprob: -12.627501487731934
    9. ':return' → logprob: -13.752501487731934
    10. '  
' → logprob: -13.877501487731934

Token 454: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -21.50020408630371
    4. '=False' → logprob: -22.62520408630371
    5. 'false' → logprob: -22.75020408630371
    6. '_false' → logprob: -23.37520408630371
    7. 'True' → logprob: -23.75020408630371
    8. 'FALSE' → logprob: -25.87520408630371
    9. '.False' → logprob: -26.62520408630371
    10. 'F' → logprob: -26.75020408630371

Token 455: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: 'is' (ID: 276)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6691442131996155
    2. ')' → logprob: -0.9191442131996155
    3. '<|end|>' → logprob: -2.7941441535949707
    4. '@' → logprob: -4.919144153594971
    5. '\n' → logprob: -5.669144153594971
    6. '):' → logprob: -6.169144153594971
    7. '.' → logprob: -6.294144153594971
    8. '\' → logprob: -6.544144153594971
    9. '#' → logprob: -6.669144153594971
    10. '<|end|>' → logprob: -6.794144153594971

Token 457: '_cat' (ID: 50384)
  Prédit: '_cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cat' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -13.000004768371582
    3. 'Cat' → logprob: -14.250004768371582
    4. '_CAT' → logprob: -14.625004768371582
    5. '_c' → logprob: -14.875004768371582
    6. 'cat' → logprob: -14.875004768371582
    7. '._' → logprob: -15.500004768371582
    8. ')_' → logprob: -16.0000057220459
    9. ' Cat' → logprob: -16.5000057220459
    10. '_is' → logprob: -17.0000057220459

Token 458: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09691063314676285
    2. '<|end|>' → logprob: -2.8469107151031494
    3. '(l' → logprob: -3.4719107151031494
    4. '(
' → logprob: -6.97191047668457
    5. '('' → logprob: -7.47191047668457
    6. '<|end|>' → logprob: -8.09691047668457
    7. '(None' → logprob: -8.47191047668457
    8. ')' → logprob: -8.72191047668457
    9. '("("' → logprob: -8.84691047668457
    10. '(ls' → logprob: -9.47191047668457

Token 459: ' l' (ID: 305)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2014363408088684
    2. 'l' → logprob: -1.7014362812042236
    3. ' is' → logprob: -10.951436042785645
    4. ' l' → logprob: -12.701436042785645
    5. 'lambda' → logprob: -13.701436042785645
    6. '   ' → logprob: -15.451436042785645
    7. 'lr' → logprob: -15.826436042785645
    8. 'staticmethod' → logprob: -15.951436042785645
    9. 'lz' → logprob: -16.20143699645996
    10. 'static' → logprob: -16.32643699645996

Token 460: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.00308145210146904
    2. '_cat' → logprob: -6.128081321716309
    3. '_cache' → logprob: -7.378081321716309
    4. '_cached' → logprob: -9.128081321716309
    5. 'r' → logprob: -9.253081321716309
    6. '_ru' → logprob: -10.378081321716309
    7. 'is' → logprob: -11.253081321716309
    8. 'cat' → logprob: -11.753081321716309
    9. 'RU' → logprob: -12.878081321716309
    10. 'cached' → logprob: -13.378081321716309

Token 461: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00038837024476379156
    2. '_cached' → logprob: -7.875388145446777
    3. 'Cache' → logprob: -12.375388145446777
    4. '_cat' → logprob: -13.875388145446777
    5. '_CACHE' → logprob: -14.500388145446777
    6. '_c' → logprob: -14.750388145446777
    7. 'Cached' → logprob: -15.000388145446777
    8. 'cached' → logprob: -15.250388145446777
    9. '```' → logprob: -15.250388145446777
    10. '(_' → logprob: -15.625388145446777

Token 462: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.001933873863890767
    2. '(' → logprob: -6.751934051513672
    3. '(lambda' → logprob: -8.251934051513672
    4. '(max' → logprob: -8.626934051513672
    5. '()(' → logprob: -9.251934051513672
    6. '(<' → logprob: -9.376934051513672
    7. '(False' → logprob: -9.626934051513672
    8. '(True' → logprob: -10.876934051513672
    9. 'None' → logprob: -12.001934051513672
    10. '(_' → logprob: -12.001934051513672

Token 463: ')(' (ID: 4898)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.21922089159488678
    2. '(' → logprob: -2.2192208766937256
    3. ')' → logprob: -3.0942208766937256
    4. ')(' → logprob: -3.8442208766937256
    5. '()(' → logprob: -4.594221115112305
    6. '(lambda' → logprob: -5.469221115112305
    7. '())' → logprob: -5.594221115112305
    8. '()' → logprob: -6.594221115112305
    9. '(True' → logprob: -7.594221115112305
    10. '(()' → logprob: -7.969221115112305

Token 464: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.9361264946837764e-07
    2. ' is' → logprob: -16.25
    3. 'lambda' → logprob: -17.125
    4. ')' → logprob: -20.5
    5. 'def' → logprob: -21.5
    6. '```' → logprob: -21.875
    7. 'isat' → logprob: -22.75
    8. '   ' → logprob: -23.125
    9. ')is' → logprob: -23.375
    10. '[' → logprob: -23.5

Token 465: '_cat' (ID: 50384)
  Prédit: '_cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cat' → logprob: -7.896309739408025e-07
    2. 'cat' → logprob: -14.250000953674316
    3. 'Cat' → logprob: -16.75
    4. ')_' → logprob: -18.0
    5. '_CAT' → logprob: -18.125
    6. '_dp' → logprob: -18.5
    7. '_' → logprob: -18.625
    8. '_c' → logprob: -18.75
    9. ' cat' → logprob: -19.0
    10. ' _' → logprob: -19.25

Token 466: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.668304245569743e-05
    2. 'dp' → logprob: -10.000046730041504
    3. ')' → logprob: -13.875046730041504
    4. 'DP' → logprob: -15.625046730041504
    5. '(dp' → logprob: -16.875045776367188
    6. '))' → logprob: -16.875045776367188
    7. ')_' → logprob: -17.125045776367188
    8. '_dt' → logprob: -18.000045776367188
    9. '	dp' → logprob: -18.375045776367188
    10. '_df' → logprob: -18.625045776367188

Token 467: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.375001907348633
    3. '))' → logprob: -14.500001907348633
    4. ')
' → logprob: -16.125001907348633
    5. ')`' → logprob: -16.500001907348633
    6. '),' → logprob: -18.625001907348633
    7. '(' → logprob: -19.000001907348633
    8. ')return' → logprob: -19.250001907348633
    9. ')#' → logprob: -19.375001907348633
    10. ' ' → logprob: -19.625001907348633

Token 468: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: '("' (ID: 568)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.16844160854816437
    2. '("' → logprob: -1.918441653251648
    3. '(' → logprob: -5.2934417724609375
    4. '('' → logprob: -5.9184417724609375
    5. 'is' → logprob: -7.9184417724609375
    6. '(int' → logprob: -10.543441772460938
    7. '(bool' → logprob: -10.793441772460938
    8. '(True' → logprob: -10.918441772460938
    9. '("("' → logprob: -11.043441772460938
    10. '"is' → logprob: -11.668441772460938

Token 470: 'Cat' (ID: 23546)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.41742947697639465
    2. '"' → logprob: -1.2924294471740723
    3. 'YES' → logprob: -2.7924294471740723
    4. 'True' → logprob: -5.917429447174072
    5. ''' → logprob: -6.792429447174072
    6. '1' → logprob: -8.29242992401123
    7. 'is' → logprob: -8.29242992401123
    8. 'yes' → logprob: -8.54242992401123
    9. 'Possible' → logprob: -8.54242992401123
    10. '"is' → logprob: -9.16742992401123

Token 471: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.030768124386668205
    2. '"' → logprob: -3.7807681560516357
    3. 's' → logprob: -5.655767917633057
    4. '\n' → logprob: -5.905767917633057
    5. 'Yes' → logprob: -7.655767917633057
    6. '?' → logprob: -8.030768394470215
    7. '!")' → logprob: -8.155768394470215
    8. '")
' → logprob: -10.280768394470215
    9. '"s' → logprob: -10.280768394470215
    10. ':' → logprob: -11.280768394470215

Token 472: ' if' (ID: 538)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.45157942175865173
    2. '("' → logprob: -1.3265794515609741
    3. '())' → logprob: -2.5765793323516846
    4. '(' → logprob: -4.076579570770264
    5. '("("' → logprob: -6.576579570770264
    6. 'if' → logprob: -6.826579570770264
    7. '('' → logprob: -7.451579570770264
    8. '(True' → logprob: -7.701579570770264
    9. ')' → logprob: -7.826579570770264
    10. '")' → logprob: -8.451579093933105

Token 473: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -4.56102097814437e-05
    2. ' is' → logprob: -10.000045776367188
    3. '(is' → logprob: -16.625045776367188
    4. ')is' → logprob: -21.875045776367188
    5. '
' → logprob: -23.000045776367188
    6. ' ' → logprob: -23.125045776367188
    7. '   ' → logprob: -23.250045776367188
    8. ')' → logprob: -23.250045776367188
    9. ' ' → logprob: -23.500045776367188
    10. '	is' → logprob: -23.625045776367188

Token 474: '_cat' (ID: 50384)
  Prédit: '_cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cat' → logprob: -6.704273118884885e-07
    2. 'cat' → logprob: -14.625000953674316
    3. 'Cat' → logprob: -16.5
    4. '(cat' → logprob: -17.5
    5. '_CAT' → logprob: -17.75
    6. '_c' → logprob: -18.875
    7. '(_' → logprob: -18.875
    8. ' cat' → logprob: -19.75
    9. 'is' → logprob: -20.75
    10. '_' → logprob: -20.75

Token 475: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.511406809295295e-06
    2. '0' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.375006675720215
    4. '(
' → logprob: -19.2500057220459
    5. '
' → logprob: -21.5000057220459
    6. ')' → logprob: -21.7500057220459
    7. ' ' → logprob: -22.1250057220459
    8. '```' → logprob: -22.2500057220459
    9. '((' → logprob: -22.6250057220459
    10. '()' → logprob: -23.6250057220459

Token 476: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '(' → logprob: -20.75
    4. '00' → logprob: -22.75
    5. '012' → logprob: -24.125
    6. '۰' → logprob: -24.25
    7. '０' → logprob: -24.25
    8. '
' → logprob: -25.125
    9. '000' → logprob: -25.25
    10. ')' → logprob: -26.0

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027682865038514137
    2. ',n' → logprob: -8.375276565551758
    3. ' ,' → logprob: -10.250276565551758
    4. ',len' → logprob: -11.500276565551758
    5. ',
' → logprob: -14.250276565551758
    6. 'n' → logprob: -16.125276565551758
    7. ',length' → logprob: -17.875276565551758
    8. 'len' → logprob: -18.250276565551758
    9. ',l' → logprob: -18.500276565551758
    10. ')' → logprob: -19.250276565551758

Token 478: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.088346359931165e-07
    2. 'len' → logprob: -14.125000953674316
    3. ' n' → logprob: -16.125
    4. ')n' → logprob: -20.375
    5. '
' → logprob: -20.625
    6. '	n' → logprob: -21.75
    7. '(n' → logprob: -21.75
    8. '```' → logprob: -22.0
    9. '_n' → logprob: -22.875
    10. '   ' → logprob: -23.125

Token 479: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.130576806142926e-05
    2. ' -' → logprob: -10.375031471252441
    3. ')' → logprob: -18.875030517578125
    4. '−' → logprob: -19.500030517578125
    5. '()-' → logprob: -20.000030517578125
    6. '```' → logprob: -20.125030517578125
    7. '1' → logprob: -20.250030517578125
    8. '-)' → logprob: -20.875030517578125
    9. '–' → logprob: -21.125030517578125
    10. ')-' → logprob: -21.625030517578125

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.625000953674316
    3. ')' → logprob: -15.000000953674316
    4. '```' → logprob: -16.750001907348633
    5. 'print' → logprob: -17.125001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '
' → logprob: -19.250001907348633
    8. '2' → logprob: -20.000001907348633
    9. '``' → logprob: -20.000001907348633
    10. '0' → logprob: -20.312501907348633

Token 481: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.125000953674316
    3. 'else' → logprob: -16.25
    4. '))' → logprob: -16.25
    5. ')
' → logprob: -16.875
    6. '())' → logprob: -17.0
    7. ' else' → logprob: -17.25
    8. '")' → logprob: -17.75
    9. ')`' → logprob: -18.75
    10. '()' → logprob: -19.625

Token 482: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4120188355445862
    2. 'else' → logprob: -1.6620187759399414
    3. ' else' → logprob: -1.9120187759399414
    4. '==' → logprob: -8.912018775939941
    5. '()' → logprob: -11.662018775939941
    6. ' )' → logprob: -12.537018775939941
    7. ' ' → logprob: -13.412018775939941
    8. '   ' → logprob: -13.912018775939941
    9. '))' → logprob: -14.662018775939941
    10. '```' → logprob: -15.412018775939941

Token 483: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0011815387988463044
    2. '"No' → logprob: -7.501181602478027
    3. '"D' → logprob: -8.001181602478027
    4. ' "' → logprob: -8.501181602478027
    5. '"C' → logprob: -10.501181602478027
    6. '"H' → logprob: -11.126181602478027
    7. '
' → logprob: -11.251181602478027
    8. '   ' → logprob: -11.626181602478027
    9. '("' → logprob: -12.876181602478027
    10. ' ' → logprob: -13.001181602478027

Token 484: 'Rabbit' (ID: 154677)
  Prédit: 'Dog'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dog' → logprob: -0.08696120232343674
    2. '"' → logprob: -2.836961269378662
    3. 'Not' → logprob: -3.836961269378662
    4. 'Rabbit' → logprob: -7.086961269378662
    5. 'Mouse' → logprob: -7.711961269378662
    6. 'Wolf' → logprob: -7.836961269378662
    7. 'Non' → logprob: -8.211960792541504
    8. 'No' → logprob: -8.961960792541504
    9. 'Z' → logprob: -9.086960792541504
    10. 'dog' → logprob: -9.211960792541504

Token 485: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.3856492842023727e-06
    2. '")
' → logprob: -14.375000953674316
    3. ')")' → logprob: -14.625000953674316
    4. '!")' → logprob: -15.750000953674316
    5. ')' → logprob: -16.375001907348633
    6. '"' → logprob: -17.000001907348633
    7. '}")' → logprob: -17.125001907348633
    8. '')' → logprob: -18.000001907348633
    9. '"))' → logprob: -18.125001907348633
    10. '")

' → logprob: -18.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 483
Tokens correctement prédits (1ère position, stricte): 171
Tokens correctement prédits (1ère position, avec adaptation): 184
Tokens correctement prédits (top 10): 360
Précision stricte (1ère position): 35.40%
Précision adaptée (1ère position): 38.10%
Précision (top 10): 74.53%
================================================================================
