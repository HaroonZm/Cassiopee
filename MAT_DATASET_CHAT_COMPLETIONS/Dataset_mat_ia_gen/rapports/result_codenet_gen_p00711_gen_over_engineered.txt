================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Tile:
    def __init__(self, x: int, y: int, symbol: str):
        self.x = x
        self.y = y
        self.symbol = symbol

    def is_black(self) -> bool:
        return self.symbol in {'.', '@'}

    def is_start(self) -> bool:
        return self.symbol == '@'


class Grid:
    def __init__(self, width: int, height: int, lines: list[str]):
        self.width = width
        self.height = height
        self.tiles = [[Tile(x, y, lines[y][x]) for x in range(width)] for y in range(height)]

    def get_tile(self, x: int, y: int) -> Tile:
        return self.tiles[y][x]

    def neighbors(self, tile: Tile) -> list[Tile]:
        candidates = [
            (tile.x - 1, tile.y),
            (tile.x + 1, tile.y),
            (tile.x, tile.y - 1),
            (tile.x, tile.y + 1)
        ]
        valid_neighbors = []
        for nx, ny in candidates:
            if 0 <= nx < self.width and 0 <= ny < self.height:
                neighbor_tile = self.get_tile(nx, ny)
                if neighbor_tile.is_black():
                    valid_neighbors.append(neighbor_tile)
        return valid_neighbors

    def find_start(self) -> Tile:
        for y in range(self.height):
            for x in range(self.width):
                tile = self.tiles[y][x]
                if tile.is_start():
                    return tile
        raise ValueError("No starting tile '@' found in grid.")


class ReachabilityAnalyzer:
    def __init__(self, grid: Grid):
        self.grid = grid
        self.visited = set()

    def position_key(self, tile: Tile) -> tuple[int, int]:
        return (tile.x, tile.y)

    def dfs(self, tile: Tile) -> int:
        stack = [tile]
        count = 0
        while stack:
            current = stack.pop()
            pos = self.position_key(current)
            if pos not in self.visited:
                self.visited.add(pos)
                count += 1
                neighbors = self.grid.neighbors(current)
                for neighbor in neighbors:
                    if self.position_key(neighbor) not in self.visited:
                        stack.append(neighbor)
        return count


class InputReader:
    def __init__(self, input_lines: list[str]):
        self.lines = input_lines
        self.current_line = 0

    def has_next(self) -> bool:
        return self.current_line < len(self.lines)

    def next_line(self) -> str:
        line = self.lines[self.current_line]
        self.current_line += 1
        return line.strip()

    def read_dataset(self) -> tuple[int, int, list[str]] | None:
        while self.has_next():
            line = self.next_line()
            if not line:
                continue
            W, H = map(int, line.split())
            if W == 0 and H == 0:
                return None
            layout = [self.next_line() for _ in range(H)]
            return W, H, layout
        return None


class RedBlackSolver:
    def __init__(self, input_data: list[str]):
        self.input_reader = InputReader(input_data)

    def solve(self) -> list[int]:
        results = []
        while True:
            data = self.input_reader.read_dataset()
            if data is None:
                break
            W, H, layout = data
            grid = Grid(W, H, layout)
            start_tile = grid.find_start()
            analyzer = ReachabilityAnalyzer(grid)
            count = analyzer.dfs(start_tile)
            results.append(count)
        return results


def main():
    import sys
    input_data = [line.rstrip('\n') for line in sys.stdin]
    solver = RedBlackSolver(input_data)
    results = solver.solve()
    for res in results:
        print(res)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Tile' (ID: 35295)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5223234295845032
    2. '(' → logprob: -1.0223233699798584
    3. '   ' → logprob: -3.5223233699798584
    4. '```' → logprob: -5.0223236083984375
    5. ''' → logprob: -6.0223236083984375
    6. ' ' → logprob: -6.5223236083984375
    7. '.' → logprob: -6.5223236083984375
    8. '\' → logprob: -7.1473236083984375
    9. ':
' → logprob: -7.1473236083984375
    10. '(
' → logprob: -7.3973236083984375

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9558841586112976
    2. '(' → logprob: -1.4558842182159424
    3. '_' → logprob: -2.3308842182159424
    4. '```' → logprob: -2.5808842182159424
    5. ''' → logprob: -2.7058842182159424
    6. ' ' → logprob: -2.7058842182159424
    7. ':' → logprob: -4.330883979797363
    8. '    ' → logprob: -4.455883979797363
    9. '(space' → logprob: -4.455883979797363
    10. '`' → logprob: -5.205883979797363

Token 5: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18536019325256348
    2. '__' → logprob: -1.9353601932525635
    3. ' ' → logprob: -3.9353601932525635
    4. ' init' → logprob: -5.810359954833984
    5. ' ' → logprob: -6.810359954833984
    6. '_' → logprob: -8.685359954833984
    7. ' def' → logprob: -8.935359954833984
    8. '_init' → logprob: -9.060359954833984
    9. ' ___' → logprob: -9.560359954833984
    10. 'init' → logprob: -9.685359954833984

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.5690089639974758e-05
    2. ' init' → logprob: -11.250015258789062
    3. '_init' → logprob: -13.750015258789062
    4. 'ini' → logprob: -13.875015258789062
    5. 'i' → logprob: -15.125015258789062
    6. 'in' → logprob: -15.750015258789062
    7. '	init' → logprob: -16.500015258789062
    8. '_' → logprob: -17.375015258789062
    9. '_i' → logprob: -17.625015258789062
    10. 'inite' → logprob: -18.000015258789062

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.37579044699668884
    2. '__' → logprob: -1.6257904767990112
    3. '(' → logprob: -2.2507903575897217
    4. '_' → logprob: -4.875790596008301
    5. '__((' → logprob: -7.000790596008301
    6. '(self' → logprob: -7.000790596008301
    7. '__(
' → logprob: -7.375790596008301
    8. '_(' → logprob: -7.500790596008301
    9. '__('' → logprob: -8.7507905960083
    10. '```' → logprob: -9.5007905960083

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004789320519194007
    2. ' self' → logprob: -7.750478744506836
    3. '(self' → logprob: -10.625478744506836
    4. ')' → logprob: -10.875478744506836
    5. '_self' → logprob: -13.875478744506836
    6. '       ' → logprob: -14.250478744506836
    7. 'space' → logprob: -14.375478744506836
    8. 's' → logprob: -14.500478744506836
    9. ',self' → logprob: -14.875478744506836
    10. ' ' → logprob: -15.125478744506836

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.511784017086029
    2. ',' → logprob: -1.6367840766906738
    3. 'self' → logprob: -2.511784076690674
    4. '_' → logprob: -2.761784076690674
    5. '(' → logprob: -3.761784076690674
    6. ' )' → logprob: -4.261784076690674
    7. ' ' → logprob: -4.636784076690674
    8. '(self' → logprob: -6.011784076690674
    9. ' ,' → logprob: -6.386784076690674
    10. '<|end|>' → logprob: -6.386784076690674

Token 10: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2882712185382843
    2. ' self' → logprob: -1.413271188735962
    3. ' )' → logprob: -5.663271427154541
    4. ')' → logprob: -6.038271427154541
    5. 'position' → logprob: -8.288270950317383
    6. ' position' → logprob: -8.538270950317383
    7. 'data' → logprob: -9.413270950317383
    8. 's' → logprob: -9.538270950317383
    9. 'width' → logprob: -9.663270950317383
    10. 'space' → logprob: -9.788270950317383

Token 11: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013437613844871521
    2. ')' → logprob: -4.388437747955322
    3. '_' → logprob: -8.013437271118164
    4. ' ,' → logprob: -8.888437271118164
    5. '_,' → logprob: -9.388437271118164
    6. '=' → logprob: -9.638437271118164
    7. '):' → logprob: -9.638437271118164
    8. '<|end|>' → logprob: -9.638437271118164
    9. ',)' → logprob: -10.013437271118164
    10. ',x' → logprob: -10.263437271118164

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023514846339821815
    2. ' int' → logprob: -3.773514747619629
    3. ')' → logprob: -9.398514747619629
    4. '=int' → logprob: -9.898514747619629
    5. ':int' → logprob: -10.273514747619629
    6. ' )' → logprob: -10.648514747619629
    7. '<|end|>' → logprob: -11.148514747619629
    8. ',int' → logprob: -11.773514747619629
    9. 'i' → logprob: -11.773514747619629
    10. '(int' → logprob: -12.023514747619629

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004902362357825041
    2. ')' → logprob: -5.504902362823486
    3. '):' → logprob: -7.379902362823486
    4. ' ,' → logprob: -9.379901885986328
    5. ',
' → logprob: -10.879901885986328
    6. '   ' → logprob: -10.879901885986328
    7. '<|end|>' → logprob: -11.004901885986328
    8. ',int' → logprob: -11.254901885986328
    9. '),' → logprob: -11.754901885986328
    10. ')>' → logprob: -12.629901885986328

Token 14: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03094293549656868
    2. ' y' → logprob: -3.530942916870117
    3. ' ' → logprob: -7.030942916870117
    4. ')' → logprob: -9.155942916870117
    5. ' )' → logprob: -9.905942916870117
    6. ' ,' → logprob: -10.155942916870117
    7. ',' → logprob: -10.280942916870117
    8. '```' → logprob: -11.280942916870117
    9. 'x' → logprob: -11.530942916870117
    10. '`' → logprob: -11.780942916870117

Token 15: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6906356811523438
    2. ')' → logprob: -1.4406356811523438
    3. ',' → logprob: -1.4406356811523438
    4. ':' → logprob: -3.8156356811523438
    5. '=' → logprob: -7.065635681152344
    6. '):
' → logprob: -7.440635681152344
    7. '<|end|>' → logprob: -7.940635681152344
    8. ' ,' → logprob: -8.440635681152344
    9. '```' → logprob: -8.690635681152344
    10. '<|end|>' → logprob: -8.690635681152344

Token 16: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4747719168663025
    2. ' int' → logprob: -0.9747719168663025
    3. ':int' → logprob: -8.099771499633789
    4. ')' → logprob: -8.474771499633789
    5. '=int' → logprob: -9.599771499633789
    6. ' )' → logprob: -9.849771499633789
    7. ',int' → logprob: -11.099771499633789
    8. ' ' → logprob: -11.724771499633789
    9. '(int' → logprob: -11.724771499633789
    10. '<int' → logprob: -11.849771499633789

Token 17: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03980151191353798
    2. ')' → logprob: -3.414801597595215
    3. ',' → logprob: -5.164801597595215
    4. '):
' → logprob: -8.414801597595215
    5. ':' → logprob: -8.789801597595215
    6. '```' → logprob: -11.539801597595215
    7. '   ' → logprob: -11.664801597595215
    8. '),' → logprob: -11.664801597595215
    9. '):

' → logprob: -12.664801597595215
    10. ''):' → logprob: -12.914801597595215

Token 18: ' symbol' (ID: 10038)
  Prédit: ' type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.6406944394111633
    2. ' color' → logprob: -1.1406943798065186
    3. ' terrain' → logprob: -2.6406943798065186
    4. ' tile' → logprob: -3.8906943798065186
    5. ' pass' → logprob: -4.265694618225098
    6. ' width' → logprob: -4.390694618225098
    7. ' size' → logprob: -4.765694618225098
    8. ' value' → logprob: -5.140694618225098
    9. 'type' → logprob: -5.140694618225098
    10. ')' → logprob: -5.765694618225098

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.733418345451355
    2. '):' → logprob: -1.108418345451355
    3. ')' → logprob: -1.983418345451355
    4. '=' → logprob: -2.9834184646606445
    5. '):
' → logprob: -7.7334184646606445
    6. '=None' → logprob: -8.483418464660645
    7. ',' → logprob: -8.608418464660645
    8. ' ):' → logprob: -9.108418464660645
    9. '   ' → logprob: -9.483418464660645
    10. ' :' → logprob: -9.858418464660645

Token 20: ' str' (ID: 989)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5117479562759399
    2. ' str' → logprob: -1.38674795627594
    3. ' '' → logprob: -2.3867478370666504
    4. ')' → logprob: -3.2617478370666504
    5. 'str' → logprob: -4.51174783706665
    6. '"' → logprob: -5.26174783706665
    7. ' )' → logprob: -6.38674783706665
    8. ''s' → logprob: -7.01174783706665
    9. ' ' → logprob: -7.26174783706665
    10. ' "' → logprob: -8.136748313903809

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04321213439106941
    2. ')' → logprob: -3.1682121753692627
    3. ',' → logprob: -8.918211936950684
    4. ':' → logprob: -10.043211936950684
    5. '):
' → logprob: -10.668211936950684
    6. '   ' → logprob: -12.668211936950684
    7. ' ):' → logprob: -13.168211936950684
    8. '),' → logprob: -13.168211936950684
    9. ''):' → logprob: -14.168211936950684
    10. ')>' → logprob: -14.543211936950684

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012078325264155865
    2. '   ' → logprob: -4.887078285217285
    3. ':' → logprob: -6.137078285217285
    4. '```' → logprob: -7.512078285217285
    5. ')' → logprob: -8.012078285217285
    6. 'self' → logprob: -8.387078285217285
    7. '        
' → logprob: -8.387078285217285
    8. '<|end|>' → logprob: -8.512078285217285
    9. '    ' → logprob: -8.762078285217285
    10. '):' → logprob: -9.387078285217285

Token 23: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.016069795936346054
    2. '       ' → logprob: -4.2660698890686035
    3. ' self' → logprob: -6.5160698890686035
    4. '   ' → logprob: -8.891069412231445
    5. '```' → logprob: -9.391069412231445
    6. 's' → logprob: -9.641069412231445
    7. '        ' → logprob: -10.766069412231445
    8. '           ' → logprob: -10.766069412231445
    9. ' ' → logprob: -10.891069412231445
    10. '_self' → logprob: -11.141069412231445

Token 24: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002698951167985797
    2. ' .' → logprob: -6.00269889831543
    3. '.x' → logprob: -8.62769889831543
    4. ' ' → logprob: -11.87769889831543
    5. '.space' → logprob: -12.25269889831543
    6. '.s' → logprob: -12.75269889831543
    7. '.value' → logprob: -12.87769889831543
    8. '.tile' → logprob: -13.37769889831543
    9. '._' → logprob: -13.50269889831543
    10. '.is' → logprob: -13.50269889831543

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41758450865745544
    2. ',' → logprob: -1.7925845384597778
    3. '<|end|>' → logprob: -2.6675844192504883
    4. ')' → logprob: -2.7925844192504883
    5. '.' → logprob: -3.9175844192504883
    6. ' =' → logprob: -4.417584419250488
    7. '_' → logprob: -5.417584419250488
    8. '<|end|>' → logprob: -5.667584419250488
    9. ' ,' → logprob: -6.667584419250488
    10. '   ' → logprob: -7.417584419250488

Token 26: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1602243334054947
    2. ' x' → logprob: -1.9102243185043335
    3. '	x' → logprob: -16.03522491455078
    4. ')x' → logprob: -17.91022491455078
    5. '(x' → logprob: -19.41022491455078
    6. ' ' → logprob: -19.91022491455078
    7. '"x' → logprob: -19.91022491455078
    8. ' ' → logprob: -20.03522491455078
    9. '_x' → logprob: -20.41022491455078
    10. '```' → logprob: -20.66022491455078

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3366304337978363
    2. 'self' (adapté à ' self') → logprob: -1.3366304636001587
    3. ' self' → logprob: -3.836630344390869
    4. 'y' → logprob: -7.086630344390869
    5. ' y' → logprob: -8.211630821228027
    6. '        ' → logprob: -8.336630821228027
    7. ' ' → logprob: -9.711630821228027
    8. '```' → logprob: -10.836630821228027
    9. ',' → logprob: -10.961630821228027
    10. '   ' → logprob: -11.461630821228027

Token 30: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0025248879101127386
    2. '.y' → logprob: -6.1275248527526855
    3. '.x' → logprob: -8.127525329589844
    4. ' .' → logprob: -10.502525329589844
    5. '.s' → logprob: -12.502525329589844
    6. '.symbol' → logprob: -13.002525329589844
    7. ')' → logprob: -13.127525329589844
    8. '.value' → logprob: -13.627525329589844
    9. '<|end|>' → logprob: -13.877525329589844
    10. ').' → logprob: -14.002525329589844

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20887023210525513
    2. '=' → logprob: -1.8338701725006104
    3. '<|end|>' → logprob: -3.9588701725006104
    4. ' ' → logprob: -5.7088704109191895
    5. ')' → logprob: -5.7088704109191895
    6. '.' → logprob: -6.4588704109191895
    7. '<|end|>' → logprob: -7.0838704109191895
    8. ' ==' → logprob: -8.208869934082031
    9. ' )' → logprob: -9.833869934082031
    10. ' =
' → logprob: -9.958869934082031

Token 32: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.14267772436141968
    2. 'y' → logprob: -2.0176777839660645
    3. ' ' → logprob: -14.142677307128906
    4. '	y' → logprob: -14.517677307128906
    5. '<|end|>' → logprob: -14.892677307128906
    6. ')y' → logprob: -15.392677307128906
    7. ''y' → logprob: -15.767677307128906
    8. ')' → logprob: -16.330177307128906
    9. ' ' → logprob: -16.580177307128906
    10. '```' → logprob: -16.892677307128906

Token 33: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016195995267480612
    2. 'self' → logprob: -6.501619815826416
    3. ' self' → logprob: -10.126619338989258
    4. '<|end|>' → logprob: -10.876619338989258
    5. '```' → logprob: -11.001619338989258
    6. '
' → logprob: -11.251619338989258
    7. '   ' → logprob: -11.876619338989258
    8. '        
' → logprob: -12.376619338989258
    9. '      ' → logprob: -13.126619338989258
    10. ')' → logprob: -13.126619338989258

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010774685069918633
    2. 'self' → logprob: -7.001077651977539
    3. '        ' → logprob: -10.001077651977539
    4. ' self' → logprob: -10.001077651977539
    5. '```' → logprob: -10.876077651977539
    6. '   ' → logprob: -11.251077651977539
    7. '      ' → logprob: -11.876077651977539
    8. 'symbol' → logprob: -12.001077651977539
    9. '        
' → logprob: -12.126077651977539
    10. ' ' → logprob: -12.626077651977539

Token 35: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2073427438735962
    2. '       ' → logprob: -1.9573427438735962
    3. ' self' → logprob: -3.0823426246643066
    4. ' ' → logprob: -9.832343101501465
    5. 'symbol' → logprob: -10.082343101501465
    6. '   ' → logprob: -10.207343101501465
    7. 's' → logprob: -10.957343101501465
    8. ' ' → logprob: -11.582343101501465
    9. '        ' → logprob: -12.457343101501465
    10. ' symbol' → logprob: -13.082343101501465

Token 36: '.symbol' (ID: 70386)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.043133694678545
    2. '.symbol' → logprob: -3.1681337356567383
    3. '.s' → logprob: -9.293133735656738
    4. '.sym' → logprob: -11.293133735656738
    5. '.value' → logprob: -11.793133735656738
    6. '.tile' → logprob: -12.668133735656738
    7. ' .' → logprob: -12.668133735656738
    8. '.color' → logprob: -13.168133735656738
    9. 'symbol' → logprob: -13.168133735656738
    10. '.code' → logprob: -13.293133735656738

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2523179054260254
    2. ' =' → logprob: -1.5023179054260254
    3. '.' → logprob: -8.377317428588867
    4. ' ' → logprob: -9.002317428588867
    5. '<|end|>' → logprob: -11.627317428588867
    6. ' =
' → logprob: -12.002317428588867
    7. ')' → logprob: -12.002317428588867
    8. '_' → logprob: -12.627317428588867
    9. 's' → logprob: -13.252317428588867
    10. ',' → logprob: -13.502317428588867

Token 38: ' symbol' (ID: 10038)
  Prédit: ' symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbol' → logprob: -0.026320388540625572
    2. 'symbol' → logprob: -3.651320457458496
    3. ' symbole' → logprob: -12.026320457458496
    4. ' ' → logprob: -12.151320457458496
    5. '(symbol' → logprob: -12.651320457458496
    6. 'Symbol' → logprob: -14.026320457458496
    7. '_symbol' → logprob: -14.026320457458496
    8. ' символ' → logprob: -14.151320457458496
    9. ' simbol' → logprob: -14.276320457458496
    10. ' simb' → logprob: -14.401320457458496

Token 39: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6828556656837463
    2. '   ' → logprob: -1.4328556060791016
    3. '\' → logprob: -2.8078556060791016
    4. '```' → logprob: -2.8078556060791016
    5. '\n' → logprob: -2.9328556060791016
    6. '    
' → logprob: -4.057855606079102
    7. '<|end|>' → logprob: -4.057855606079102
    8. ''' → logprob: -5.057855606079102
    9. ' ' → logprob: -5.182855606079102
    10. ':' → logprob: -5.307855606079102

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08574528247117996
    2. '   ' → logprob: -3.210745334625244
    3. '    
' → logprob: -4.835745334625244
    4. '\n' → logprob: -4.835745334625244
    5. ' 
' → logprob: -5.085745334625244
    6. ' ' → logprob: -5.335745334625244
    7. '\' → logprob: -5.585745334625244
    8. '```' → logprob: -5.835745334625244
    9. '' → logprob: -6.335745334625244
    10. 'd' → logprob: -6.335745334625244

Token 41: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25236839056015015
    2. 'd' → logprob: -2.252368450164795
    3. '   ' → logprob: -2.252368450164795
    4. ' def' → logprob: -5.252368450164795
    5. ' ' → logprob: -6.002368450164795
    6. '@' → logprob: -6.502368450164795
    7. '```' → logprob: -6.627368450164795
    8. '@property' → logprob: -7.252368450164795
    9. '    
' → logprob: -7.877368450164795
    10. ' 
' → logprob: -8.377367973327637

Token 42: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004579415079206228
    2. '_' → logprob: -5.629579544067383
    3. ' space' → logprob: -8.129579544067383
    4. ' _' → logprob: -9.129579544067383
    5. ' __' → logprob: -9.129579544067383
    6. 's' → logprob: -9.629579544067383
    7. ' ‌' → logprob: -9.754579544067383
    8. ' ' → logprob: -10.004579544067383
    9. ' ```' → logprob: -10.129579544067383
    10. '_space' → logprob: -10.129579544067383

Token 43: '_black' (ID: 92024)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0035388940013945103
    2. ' _' → logprob: -6.003539085388184
    3. '_empty' → logprob: -8.003539085388184
    4. '_walk' → logprob: -8.128539085388184
    5. '_space' → logprob: -8.378539085388184
    6. '_pass' → logprob: -9.753539085388184
    7. '_s' → logprob: -10.128539085388184
    8. ' ' → logprob: -10.503539085388184
    9. '_valid' → logprob: -11.128539085388184
    10. '_a' → logprob: -11.128539085388184

Token 44: '(self' (ID: 2402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18546992540359497
    2. '(' → logprob: -2.06046986579895
    3. '()' → logprob: -3.43546986579895
    4. '(self' → logprob: -6.185470104217529
    5. '_space' → logprob: -6.810470104217529
    6. ')' → logprob: -6.810470104217529
    7. 'space' → logprob: -7.060470104217529
    8. '```' → logprob: -7.310470104217529
    9. '_tile' → logprob: -7.685470104217529
    10. '_b' → logprob: -7.685470104217529

Token 45: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1286918818950653
    2. ')' → logprob: -2.1286919116973877
    3. '):
' → logprob: -7.003691673278809
    4. '):

' → logprob: -8.378691673278809
    5. 'self' → logprob: -8.878691673278809
    6. '()' → logprob: -9.378691673278809
    7. '():' → logprob: -9.503691673278809
    8. '_' → logprob: -9.503691673278809
    9. ')_' → logprob: -9.628691673278809
    10. ' ):' → logprob: -10.253691673278809

Token 46: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38712847232818604
    2. '(self' → logprob: -1.262128472328186
    3. ':' → logprob: -3.5121283531188965
    4. '():' → logprob: -5.1371283531188965
    5. 'self' → logprob: -7.1371283531188965
    6. '(s' → logprob: -7.1371283531188965
    7. '(
' → logprob: -9.012128829956055
    8. ')' → logprob: -9.262128829956055
    9. 's' → logprob: -9.637128829956055
    10. ' (' → logprob: -9.887128829956055

Token 47: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.08390204608440399
    2. ' ' → logprob: -2.58390212059021
    3. 'bool' → logprob: -5.333901882171631
    4. ' True' → logprob: -9.708902359008789
    5. '  ' → logprob: -10.083902359008789
    6. ' ' → logprob: -10.833902359008789
    7. ' None' → logprob: -11.833902359008789
    8. ' "' → logprob: -12.208902359008789
    9. ' '' → logprob: -12.208902359008789
    10. '<bool' → logprob: -12.208902359008789

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021011266857385635
    2. '():' → logprob: -3.8960113525390625
    3. '(' → logprob: -8.396011352539062
    4. '):' → logprob: -9.146011352539062
    5. ' :' → logprob: -9.521011352539062
    6. ':return' → logprob: -10.396011352539062
    7. ':**' → logprob: -10.896011352539062
    8. ':
' → logprob: -12.521011352539062
    9. '```' → logprob: -13.396011352539062
    10. ' ():' → logprob: -13.521011352539062

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0212346650660038
    2. '   ' → logprob: -5.146234512329102
    3. '    ' → logprob: -5.271234512329102
    4. '(' → logprob: -5.771234512329102
    5. ' ' → logprob: -6.146234512329102
    6. ':' → logprob: -6.771234512329102
    7. ' return' → logprob: -7.396234512329102
    8. '<|end|>' → logprob: -7.396234512329102
    9. ':return' → logprob: -7.646234512329102
    10. ')' → logprob: -7.771234512329102

Token 50: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.771920919418335
    2. 'return' (adapté à ' return') → logprob: -0.771920919418335
    3. ' return' → logprob: -2.646920919418335
    4. 'r' → logprob: -6.271921157836914
    5. '   ' → logprob: -6.396921157836914
    6. ':return' → logprob: -8.396921157836914
    7. ' ' → logprob: -8.646921157836914
    8. '    ' → logprob: -8.771921157836914
    9. 'self' → logprob: -8.771921157836914
    10. '```' → logprob: -9.146921157836914

Token 51: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03000953048467636
    2. 'self' → logprob: -3.5300095081329346
    3. ' ' → logprob: -8.905009269714355
    4. ' ' → logprob: -9.280009269714355
    5. '(self' → logprob: -12.405009269714355
    6. ' s' → logprob: -12.405009269714355
    7. ' '' → logprob: -12.530009269714355
    8. ' (' → logprob: -12.530009269714355
    9. ' True' → logprob: -12.530009269714355
    10. '(' → logprob: -13.655009269714355

Token 52: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.021375872194767
    2. '.' → logprob: -3.896375894546509
    3. '.sym' → logprob: -7.77137565612793
    4. ' .' → logprob: -8.77137565612793
    5. '.s' → logprob: -9.02137565612793
    6. '.black' → logprob: -9.14637565612793
    7. '.x' → logprob: -12.27137565612793
    8. '.color' → logprob: -12.39637565612793
    9. 'symbol' → logprob: -12.39637565612793
    10. '.space' → logprob: -12.77137565612793

Token 53: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004032333847135305
    2. '==' → logprob: -6.129032135009766
    3. ' ' → logprob: -6.504032135009766
    4. '=' → logprob: -9.129032135009766
    5. ' =' → logprob: -9.629032135009766
    6. '[' → logprob: -10.129032135009766
    7. ' !=' → logprob: -10.254032135009766
    8. ' in' → logprob: -10.379032135009766
    9. '.' → logprob: -11.629032135009766
    10. ' =='' → logprob: -11.629032135009766

Token 54: ' {' (ID: 354)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.48955321311950684
    2. ' "' → logprob: -1.8645532131195068
    3. ' ['' → logprob: -1.8645532131195068
    4. '"' → logprob: -3.364553213119507
    5. ' {'' → logprob: -3.614553213119507
    6. ''' → logprob: -4.489553451538086
    7. ' ' → logprob: -6.239553451538086
    8. ' ('' → logprob: -6.739553451538086
    9. ' ["' → logprob: -7.614553451538086
    10. '['' → logprob: -7.989553451538086

Token 55: ''.' (ID: 6120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3314721882343292
    2. ''#' → logprob: -1.5814721584320068
    3. '{'' → logprob: -3.081472158432007
    4. '"' → logprob: -3.831472158432007
    5. '"#' → logprob: -5.456472396850586
    6. '{"' → logprob: -5.831472396850586
    7. ''b' → logprob: -7.581472396850586
    8. ''s' → logprob: -8.331472396850586
    9. ' '#'' → logprob: -8.581472396850586
    10. ''*' → logprob: -8.831472396850586

Token 56: '',' (ID: 787)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.5849893689155579
    2. ''' → logprob: -1.209989309310913
    3. ''}' → logprob: -2.834989309310913
    4. '#' → logprob: -3.084989309310913
    5. ''b' → logprob: -4.834989547729492
    6. ''.' → logprob: -4.959989547729492
    7. '',' → logprob: -5.084989547729492
    8. '','' → logprob: -5.459989547729492
    9. ''*' → logprob: -5.584989547729492
    10. '','#' → logprob: -5.709989547729492

Token 57: ' '@' (ID: 6565)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5205829739570618
    2. ''#' → logprob: -1.020582914352417
    3. ' '#' → logprob: -4.020583152770996
    4. ' '' → logprob: -4.270583152770996
    5. ' '#'' → logprob: -5.270583152770996
    6. ''*' → logprob: -6.020583152770996
    7. ''x' → logprob: -7.145583152770996
    8. ''w' → logprob: -7.645583152770996
    9. ''l' → logprob: -7.770583152770996
    10. ''b' → logprob: -7.770583152770996

Token 58: ''}

' (ID: 177722)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.2592090368270874
    2. '}' → logprob: -1.5092090368270874
    3. ' '}' → logprob: -5.259209156036377
    4. '',' → logprob: -7.134209156036377
    5. ''' → logprob: -7.759209156036377
    6. '}'' → logprob: -8.259208679199219
    7. ' }' → logprob: -8.634208679199219
    8. '#' → logprob: -8.884208679199219
    9. '"}' → logprob: -9.009208679199219
    10. '.'' → logprob: -10.634208679199219

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38614073395729065
    2. '<|end|>' → logprob: -2.386140823364258
    3. ' ' → logprob: -2.511140823364258
    4. '   ' → logprob: -2.511140823364258
    5. '.' → logprob: -4.636140823364258
    6. ' 
' → logprob: -5.011140823364258
    7. '\n' → logprob: -5.011140823364258
    8. 'n' → logprob: -5.136140823364258
    9. '

' → logprob: -5.136140823364258
    10. '    
' → logprob: -5.261140823364258

Token 60: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08462666720151901
    2. ' ' → logprob: -3.5846266746520996
    3. '<|end|>' → logprob: -3.7096266746520996
    4. '
' → logprob: -4.3346266746521
    5. 'def' (adapté à ' def') → logprob: -5.0846266746521
    6. '    
' → logprob: -6.0846266746521
    7. '    ' → logprob: -6.4596266746521
    8. ' 
' → logprob: -6.8346266746521
    9. '  ' → logprob: -6.9596266746521
    10. 'd' → logprob: -7.5846266746521

Token 61: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.022554799914360046
    2. 'is' → logprob: -4.522554874420166
    3. ' def' → logprob: -5.022554874420166
    4. ' __' → logprob: -6.397554874420166
    5. ' ' → logprob: -6.772554874420166
    6. 'def' → logprob: -7.397554874420166
    7. ' symbol' → logprob: -8.522554397583008
    8. 'symbol' → logprob: -8.522554397583008
    9. ' has' → logprob: -8.647554397583008
    10. '_' → logprob: -8.897554397583008

Token 62: '_start' (ID: 10949)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35749539732933044
    2. '_white' → logprob: -1.3574954271316528
    3. ' _' → logprob: -3.4824953079223633
    4. ' white' → logprob: -5.357495307922363
    5. '_black' → logprob: -5.482495307922363
    6. ' ' → logprob: -6.732495307922363
    7. '_wh' → logprob: -7.357495307922363
    8. '_blank' → logprob: -7.607495307922363
    9. '_space' → logprob: -8.107495307922363
    10. '_empty' → logprob: -9.482495307922363

Token 63: '(self' (ID: 2402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0159094333648682
    2. 'ing' → logprob: -1.1409094333648682
    3. '()' → logprob: -1.5159094333648682
    4. '(self' → logprob: -3.015909433364868
    5. '(' → logprob: -3.390909433364868
    6. '_tile' → logprob: -5.765909194946289
    7. '():' → logprob: -6.265909194946289
    8. ':' → logprob: -6.515909194946289
    9. '```' → logprob: -6.765909194946289
    10. 'ed' → logprob: -6.890909194946289

Token 64: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2854762375354767
    2. ')' → logprob: -1.4104762077331543
    3. '_' → logprob: -6.160476207733154
    4. ')_' → logprob: -6.660476207733154
    5. ' ):' → logprob: -8.535476684570312
    6. '):
' → logprob: -8.660476684570312
    7. ' ' → logprob: -9.535476684570312
    8. ' )' → logprob: -9.535476684570312
    9. '_tile' → logprob: -9.910476684570312
    10. '```' → logprob: -10.285476684570312

Token 65: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2847297489643097
    2. '(' → logprob: -2.6597297191619873
    3. ' ->' → logprob: -2.7847297191619873
    4. ':' → logprob: -2.7847297191619873
    5. ')' → logprob: -3.9097297191619873
    6. '->' → logprob: -4.284729957580566
    7. '():' → logprob: -4.909729957580566
    8. 'self' → logprob: -5.534729957580566
    9. '_' → logprob: -6.284729957580566
    10. 'def' → logprob: -6.409729957580566

Token 66: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.24436062574386597
    2. ' str' → logprob: -1.8693606853485107
    3. 'bool' → logprob: -3.2443606853485107
    4. ' ' → logprob: -3.9943606853485107
    5. 'str' → logprob: -6.369360446929932
    6. '  ' → logprob: -7.244360446929932
    7. ' (' → logprob: -7.494360446929932
    8. ' True' → logprob: -7.619360446929932
    9. 's' → logprob: -8.74436092376709
    10. '_' → logprob: -8.74436092376709

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07107436656951904
    2. '():' → logprob: -2.6960744857788086
    3. '):' → logprob: -7.446074485778809
    4. ' :' → logprob: -8.571074485778809
    5. '       ' → logprob: -9.071074485778809
    6. ':return' → logprob: -9.321074485778809
    7. ':
' → logprob: -10.071074485778809
    8. '<|end|>' → logprob: -10.196074485778809
    9. '   ' → logprob: -10.696074485778809
    10. '():
' → logprob: -11.446074485778809

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007477313745766878
    2. ' return' → logprob: -5.257477283477783
    3. 'return' → logprob: -6.382477283477783
    4. '   ' → logprob: -8.132477760314941
    5. ' ' → logprob: -9.382477760314941
    6. '    ' → logprob: -9.507477760314941
    7. '      ' → logprob: -10.632477760314941
    8. ' ' → logprob: -10.757477760314941
    9. '        ' → logprob: -11.382477760314941
    10. '     ' → logprob: -11.632477760314941

Token 69: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009913324378430843
    2. '       ' → logprob: -5.134913444519043
    3. 'self' → logprob: -6.009913444519043
    4. ' return' → logprob: -6.509913444519043
    5. '{return' → logprob: -11.134913444519043
    6. ' self' → logprob: -12.384913444519043
    7. 'r' → logprob: -12.759913444519043
    8. '   ' → logprob: -12.884913444519043
    9. ':return' → logprob: -13.009913444519043
    10. '```' → logprob: -13.759913444519043

Token 70: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.033664483577013016
    2. 'self' → logprob: -3.4086644649505615
    3. ' ' → logprob: -12.15866470336914
    4. '(self' → logprob: -12.65866470336914
    5. ' (' → logprob: -12.78366470336914
    6. '	self' → logprob: -13.40866470336914
    7. '    ' → logprob: -14.15866470336914
    8. '   ' → logprob: -14.15866470336914
    9. ' True' → logprob: -14.28366470336914
    10. ' s' → logprob: -14.28366470336914

Token 71: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.03849480301141739
    2. '.' → logprob: -3.288494825363159
    3. '.s' → logprob: -8.038495063781738
    4. '.sym' → logprob: -9.163495063781738
    5. ' .' → logprob: -10.913495063781738
    6. 'symbol' → logprob: -13.538495063781738
    7. '.code' → logprob: -13.913495063781738
    8. '.Symbol' → logprob: -14.038495063781738
    9. '.sy' → logprob: -14.288495063781738
    10. '.status' → logprob: -14.538495063781738

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.007932034321129322
    2. '==' → logprob: -4.882932186126709
    3. ' =' → logprob: -9.00793170928955
    4. '=' → logprob: -9.75793170928955
    5. '=='' → logprob: -10.00793170928955
    6. ' ' → logprob: -10.25793170928955
    7. '[' → logprob: -10.38293170928955
    8. ' =='' → logprob: -10.63293170928955
    9. ' in' → logprob: -13.63293170928955
    10. '  ' → logprob: -13.75793170928955

Token 73: ' '@' (ID: 6565)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28906115889549255
    2. ' '@' → logprob: -1.914061188697815
    3. ' '' → logprob: -2.4140610694885254
    4. ''S' → logprob: -4.539061069488525
    5. ''A' → logprob: -6.914061069488525
    6. ''s' → logprob: -7.039061069488525
    7. '"' → logprob: -8.039061546325684
    8. ''a' → logprob: -8.414061546325684
    9. ''^' → logprob: -8.664061546325684
    10. ''#' → logprob: -9.039061546325684

Token 74: ''


' (ID: 58266)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0029471551533788443
    2. '"' → logprob: -5.8779473304748535
    3. '"'' → logprob: -9.752946853637695
    4. ''"' → logprob: -10.127946853637695
    5. '}'' → logprob: -11.002946853637695
    6. ''}' → logprob: -11.502946853637695
    7. ''
' → logprob: -12.002946853637695
    8. ')'' → logprob: -12.627946853637695
    9. ' '' → logprob: -13.627946853637695
    10. '```' → logprob: -13.627946853637695

Token 75: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18595196306705475
    2. '<|end|>' → logprob: -2.1859519481658936
    3. '   ' → logprob: -3.5609519481658936
    4. ' ' → logprob: -5.185952186584473
    5. '

' → logprob: -5.560952186584473
    6. '<|end|>' → logprob: -5.685952186584473
    7. 'class' → logprob: -6.060952186584473
    8. '```' → logprob: -6.060952186584473
    9. '\n' → logprob: -6.185952186584473
    10. '    
' → logprob: -6.185952186584473

Token 76: ' Grid' (ID: 18087)
  Prédit: ' Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.7464303970336914
    2. ' Maze' → logprob: -1.3714303970336914
    3. ' Player' → logprob: -2.2464303970336914
    4. ' ' → logprob: -2.8714303970336914
    5. ' Tile' → logprob: -3.6214303970336914
    6. ' Map' → logprob: -3.6214303970336914
    7. ' Game' → logprob: -4.871430397033691
    8. ' Grid' → logprob: -4.996430397033691
    9. ' Path' → logprob: -5.371430397033691
    10. ' Solver' → logprob: -5.496430397033691

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.5120287066092715e-05
    2. ' :' → logprob: -10.750035285949707
    3. ':
' → logprob: -12.000035285949707
    4. '(' → logprob: -13.125035285949707
    5. '():' → logprob: -13.375035285949707
    6. '):' → logprob: -13.750035285949707
    7. '(object' → logprob: -14.125035285949707
    8. '<|end|>' → logprob: -14.125035285949707
    9. ':def' → logprob: -15.125035285949707
    10. ':**' → logprob: -15.250035285949707

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025647396221756935
    2. ' def' → logprob: -4.525647163391113
    3. '    
' → logprob: -4.900647163391113
    4. ' ' → logprob: -6.025647163391113
    5. '    ' → logprob: -6.400647163391113
    6. ' 
' → logprob: -7.025647163391113
    7. 'def' → logprob: -7.275647163391113
    8. '(' → logprob: -7.525647163391113
    9. '  ' → logprob: -8.775647163391113
    10. ' (' → logprob: -9.400647163391113

Token 79: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20170928537845612
    2. ' def' → logprob: -1.701709270477295
    3. '   ' → logprob: -8.201709747314453
    4. 'de' → logprob: -10.826709747314453
    5. '```' → logprob: -14.451709747314453
    6. ' de' → logprob: -14.701709747314453
    7. 'd' → logprob: -15.201709747314453
    8. ' ' → logprob: -15.326709747314453
    9. '	def' → logprob: -15.451709747314453
    10. 'class' → logprob: -15.826709747314453

Token 80: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5939656496047974
    2. ' __' → logprob: -1.0939656496047974
    3. ' ' → logprob: -2.593965530395508
    4. '_init' → logprob: -3.843965530395508
    5. ' _' → logprob: -4.843965530395508
    6. '__' → logprob: -5.218965530395508
    7. ' ' → logprob: -5.843965530395508
    8. ' init' → logprob: -7.968965530395508
    9. ' ‌' → logprob: -9.843965530395508
    10. ' ```' → logprob: -10.093965530395508

Token 81: 'init' (ID: 3287)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.23461775481700897
    2. 'init' → logprob: -1.7346177101135254
    3. 'def' → logprob: -4.234617710113525
    4. '_init' → logprob: -4.859617710113525
    5. '__
' → logprob: -5.859617710113525
    6. 'i' → logprob: -6.234617710113525
    7. '_' → logprob: -6.734617710113525
    8. ' __' → logprob: -6.859617710113525
    9. '```' → logprob: -6.984617710113525
    10. 'f' → logprob: -7.234617710113525

Token 82: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20015741884708405
    2. '(' → logprob: -2.450157403945923
    3. '(self' → logprob: -2.450157403945923
    4. ' (' → logprob: -5.700157642364502
    5. '_(' → logprob: -6.075157642364502
    6. '__(
' → logprob: -6.700157642364502
    7. '__' → logprob: -7.325157642364502
    8. '_' → logprob: -7.575157642364502
    9. '```' → logprob: -8.700157165527344
    10. ' ' → logprob: -8.700157165527344

Token 83: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001576521317474544
    2. ' self' → logprob: -6.5015764236450195
    3. ')' → logprob: -9.62657642364502
    4. ' ' → logprob: -12.62657642364502
    5. '
' → logprob: -13.12657642364502
    6. ' )' → logprob: -13.87657642364502
    7. '0' → logprob: -14.25157642364502
    8. '<|end|>' → logprob: -14.37657642364502
    9. 's' → logprob: -15.50157642364502
    10. '   ' → logprob: -15.62657642364502

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038433775305747986
    2. ' ,' → logprob: -3.288433790206909
    3. ' ' → logprob: -8.788434028625488
    4. 'self' → logprob: -9.038434028625488
    5. ' self' → logprob: -9.413434028625488
    6. ')' → logprob: -11.288434028625488
    7. ',self' → logprob: -11.663434028625488
    8. ' )' → logprob: -12.288434028625488
    9. '<|end|>' → logprob: -12.663434028625488
    10. ',
' → logprob: -13.038434028625488

Token 85: ' width' (ID: 4345)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8346952199935913
    2. 'self' → logprob: -0.9596952199935913
    3. ' width' → logprob: -1.8346952199935913
    4. 'width' → logprob: -3.959695339202881
    5. ' grid' → logprob: -6.209695339202881
    6. ' tiles' → logprob: -7.209695339202881
    7. '   ' → logprob: -7.459695339202881
    8. 'grid' → logprob: -8.459694862365723
    9. 'tiles' → logprob: -8.584694862365723
    10. ' data' → logprob: -9.084694862365723

Token 86: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006063651759177446
    2. ':' → logprob: -5.131063461303711
    3. '=' → logprob: -9.631063461303711
    4. ')' → logprob: -10.256063461303711
    5. ' ,' → logprob: -11.006063461303711
    6. '):' → logprob: -11.631063461303711
    7. ':int' → logprob: -12.006063461303711
    8. ':,' → logprob: -14.756063461303711
    9. ',)' → logprob: -15.006063461303711
    10. '<|end|>' → logprob: -15.131063461303711

Token 87: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47408589720726013
    2. 'int' → logprob: -0.9740859270095825
    3. ':int' → logprob: -12.724085807800293
    4. ' ' → logprob: -13.099085807800293
    5. '=int' → logprob: -13.849085807800293
    6. ',int' → logprob: -14.224085807800293
    7. '[int' → logprob: -14.724085807800293
    8. ')' → logprob: -14.724085807800293
    9. ']int' → logprob: -14.974085807800293
    10. ',' → logprob: -15.349085807800293

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.125006675720215
    3. '):' → logprob: -14.875006675720215
    4. '‌,' → logprob: -15.250006675720215
    5. ',int' → logprob: -15.750006675720215
    6. ',width' → logprob: -16.1250057220459
    7. ',
' → logprob: -16.1250057220459
    8. ')' → logprob: -16.8750057220459
    9. '<|end|>' → logprob: -17.8750057220459
    10. '   ' → logprob: -18.5000057220459

Token 89: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.04859906807541847
    2. 'height' → logprob: -3.0485990047454834
    3. '	height' → logprob: -11.923599243164062
    4. ' ' → logprob: -14.048599243164062
    5. ',height' → logprob: -14.173599243164062
    6. '<|end|>' → logprob: -14.173599243164062
    7. '_height' → logprob: -14.298599243164062
    8. ' altura' → logprob: -14.923599243164062
    9. '    ' → logprob: -15.423599243164062
    10. ';height' → logprob: -15.548599243164062

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043693460524082184
    2. '):' → logprob: -3.1686935424804688
    3. ')' → logprob: -7.418693542480469
    4. ':int' → logprob: -10.043693542480469
    5. ',' → logprob: -10.543693542480469
    6. ' :' → logprob: -11.668693542480469
    7. '):
' → logprob: -11.918693542480469
    8. ' ):' → logprob: -12.543693542480469
    9. '}:' → logprob: -12.918693542480469
    10. '>:' → logprob: -13.668693542480469

Token 91: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16024017333984375
    2. 'int' → logprob: -1.9102401733398438
    3. ')' → logprob: -12.910240173339844
    4. ' ' → logprob: -12.910240173339844
    5. ':int' → logprob: -13.035240173339844
    6. ']int' → logprob: -13.160240173339844
    7. ' )' → logprob: -13.410240173339844
    8. '[int' → logprob: -13.535240173339844
    9. '	int' → logprob: -14.035240173339844
    10. '=int' → logprob: -14.160240173339844

Token 92: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.056905776262283325
    2. ',' → logprob: -3.056905746459961
    3. ')' → logprob: -4.806905746459961
    4. ':' → logprob: -9.931905746459961
    5. '):
' → logprob: -10.556905746459961
    6. ' ):' → logprob: -10.556905746459961
    7. ' ,' → logprob: -12.806905746459961
    8. '),' → logprob: -13.431905746459961
    9. ' ' → logprob: -13.431905746459961
    10. ']:' → logprob: -14.556905746459961

Token 93: ' lines' (ID: 8698)
  Prédit: ' tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tiles' → logprob: -0.07996091991662979
    2. ' grid' → logprob: -2.704960823059082
    3. 'tiles' → logprob: -5.204960823059082
    4. ' data' → logprob: -6.079960823059082
    5. ' tile' → logprob: -7.454960823059082
    6. ' symbols' → logprob: -7.579960823059082
    7. 'grid' → logprob: -8.329960823059082
    8. ' lines' → logprob: -8.704960823059082
    9. ' symbol' → logprob: -9.079960823059082
    10. ')' → logprob: -9.204960823059082

Token 94: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12766242027282715
    2. '):' → logprob: -2.127662420272827
    3. '):
' → logprob: -8.127662658691406
    4. ')' → logprob: -8.252662658691406
    5. ' ):' → logprob: -9.002662658691406
    6. '=[]' → logprob: -11.127662658691406
    7. ':list' → logprob: -11.377662658691406
    8. '=None' → logprob: -11.502662658691406
    9. ' :' → logprob: -11.627662658691406
    10. '=' → logprob: -12.752662658691406

Token 95: ' list' (ID: 1562)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8280593156814575
    2. ' [])' → logprob: -1.7030593156814575
    3. '[])' → logprob: -2.578059196472168
    4. '[List' → logprob: -2.953059196472168
    5. '[]' → logprob: -3.328059196472168
    6. ' list' → logprob: -3.453059196472168
    7. 'List' → logprob: -3.578059196472168
    8. ' [' → logprob: -3.703059196472168
    9. '[list' → logprob: -3.703059196472168
    10. 'list' → logprob: -3.703059196472168

Token 96: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.011485015042126179
    2. '):' → logprob: -4.5114850997924805
    3. '):
' → logprob: -8.01148509979248
    4. ':' → logprob: -9.88648509979248
    5. '[' → logprob: -10.26148509979248
    6. ')' → logprob: -11.13648509979248
    7. '[int' → logprob: -13.01148509979248
    8. '[list' → logprob: -14.01148509979248
    9. '   ' → logprob: -15.01148509979248
    10. '):

' → logprob: -15.26148509979248

Token 97: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.16945654153823853
    2. '])' → logprob: -2.4194564819335938
    3. ']' → logprob: -2.7944564819335938
    4. ']):
' → logprob: -5.669456481933594
    5. ']:' → logprob: -6.294456481933594
    6. '[str' → logprob: -9.044456481933594
    7. '):' → logprob: -9.044456481933594
    8. ')' → logprob: -9.419456481933594
    9. ']
' → logprob: -9.669456481933594
    10. '],' → logprob: -10.044456481933594

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12789343297481537
    2. ':' → logprob: -2.2528934478759766
    3. '<|end|>' → logprob: -4.627893447875977
    4. ')' → logprob: -6.377893447875977
    5. ',' → logprob: -6.627893447875977
    6. '   ' → logprob: -7.002893447875977
    7. '):' → logprob: -7.877893447875977
    8. '
' → logprob: -8.377893447875977
    9. '<|end|>' → logprob: -8.877893447875977
    10. ':
' → logprob: -9.502893447875977

Token 99: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36914756894111633
    2. 'self' (adapté à ' self') → logprob: -1.869147539138794
    3. ' self' → logprob: -1.869147539138794
    4. '   ' → logprob: -8.869147300720215
    5. ' ' → logprob: -10.869147300720215
    6. '	self' → logprob: -12.994147300720215
    7. '      ' → logprob: -13.244147300720215
    8. '     ' → logprob: -13.619147300720215
    9. '    ' → logprob: -14.869147300720215
    10. '  ' → logprob: -15.369147300720215

Token 100: '.width' (ID: 11038)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008057624101638794
    2. '.width' → logprob: -4.883057594299316
    3. ' .' → logprob: -8.008057594299316
    4. '.grid' → logprob: -10.258057594299316
    5. '.w' → logprob: -10.383057594299316
    6. '.x' → logprob: -11.508057594299316
    7. '.data' → logprob: -11.883057594299316
    8. '.s' → logprob: -12.258057594299316
    9. ' ' → logprob: -12.883057594299316
    10. '.lines' → logprob: -13.008057594299316

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10422419756650925
    2. '=' → logprob: -2.35422420501709
    3. '<|end|>' → logprob: -5.85422420501709
    4. ' ' → logprob: -7.35422420501709
    5. ',' → logprob: -8.22922420501709
    6. ' =
' → logprob: -8.97922420501709
    7. ')' → logprob: -9.85422420501709
    8. ' ,' → logprob: -10.60422420501709
    9. '<|end|>' → logprob: -10.97922420501709
    10. ' =)' → logprob: -12.47922420501709

Token 102: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.0019287518225610256
    2. 'width' → logprob: -6.251928806304932
    3. '(width' → logprob: -16.126928329467773
    4. '	width' → logprob: -17.126928329467773
    5. ',width' → logprob: -18.626928329467773
    6. ';width' → logprob: -18.626928329467773
    7. ' w' → logprob: -19.126928329467773
    8. ' ' → logprob: -19.126928329467773
    9. '_width' → logprob: -19.126928329467773
    10. 'w' → logprob: -19.501928329467773

Token 103: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4465283751487732
    2. '<|end|>' → logprob: -1.071528434753418
    3. '
' → logprob: -4.321528434753418
    4. '<|end|>' → logprob: -6.071528434753418
    5. '        
' → logprob: -7.196528434753418
    6. ',' → logprob: -7.696528434753418
    7. '        ' → logprob: -8.946528434753418
    8. '  
' → logprob: -8.946528434753418
    9. '   ' → logprob: -9.071528434753418
    10. '```' → logprob: -9.196528434753418

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009973214473575354
    2. '<|end|>' → logprob: -7.000997543334961
    3. '
' → logprob: -10.375997543334961
    4. 'self' → logprob: -11.000997543334961
    5. '<|end|>' → logprob: -11.625997543334961
    6. ',' → logprob: -11.750997543334961
    7. '        
' → logprob: -12.125997543334961
    8. '   ' → logprob: -12.125997543334961
    9. '```' → logprob: -12.625997543334961
    10. ' ' → logprob: -13.750997543334961

Token 105: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3166552484035492
    2. ' self' → logprob: -1.3166552782058716
    3. '       ' → logprob: -5.691655158996582
    4. ' ' → logprob: -11.816655158996582
    5. '   ' → logprob: -12.941655158996582
    6. '	self' → logprob: -13.316655158996582
    7. ' ' → logprob: -14.066655158996582
    8. '
' → logprob: -15.191655158996582
    9. '(self' → logprob: -15.441655158996582
    10. '        ' → logprob: -15.441655158996582

Token 106: '.height' (ID: 11682)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2872580587863922
    2. '.height' → logprob: -1.4122580289840698
    3. '.lines' → logprob: -5.162258148193359
    4. ' .' → logprob: -9.03725814819336
    5. 'height' → logprob: -9.28725814819336
    6. '.grid' → logprob: -10.03725814819336
    7. ' ' → logprob: -10.66225814819336
    8. '.width' → logprob: -10.78725814819336
    9. '.rows' → logprob: -12.03725814819336
    10. ' lines' → logprob: -12.03725814819336

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19049568474292755
    2. '=' → logprob: -1.8154957294464111
    3. '<|end|>' → logprob: -4.565495491027832
    4. ' ' → logprob: -8.565495491027832
    5. '<|end|>' → logprob: -9.815495491027832
    6. ' =
' → logprob: -10.940495491027832
    7. ',' → logprob: -11.065495491027832
    8. ')' → logprob: -12.315495491027832
    9. '=
' → logprob: -13.690495491027832
    10. ' ,' → logprob: -14.315495491027832

Token 108: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.47407761216163635
    2. ' height' → logprob: -0.974077582359314
    3. '(height' → logprob: -14.849077224731445
    4. '	height' → logprob: -15.849077224731445
    5. '.height' → logprob: -16.974077224731445
    6. ';height' → logprob: -17.724077224731445
    7. '_height' → logprob: -17.849077224731445
    8. ' ' → logprob: -18.724077224731445
    9. 'width' → logprob: -18.849077224731445
    10. ',height' → logprob: -18.974077224731445

Token 109: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016219799872487783
    2. 'self' → logprob: -7.251622200012207
    3. '<|end|>' → logprob: -7.626622200012207
    4. '
' → logprob: -8.251622200012207
    5. ' self' → logprob: -9.626622200012207
    6. ',' → logprob: -10.501622200012207
    7. '```' → logprob: -11.376622200012207
    8. '        
' → logprob: -11.501622200012207
    9. '   ' → logprob: -11.501622200012207
    10. '<|end|>' → logprob: -11.626622200012207

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005631613312289119
    2. ' self' → logprob: -8.125563621520996
    3. 'self' → logprob: -8.375563621520996
    4. '   ' → logprob: -10.625563621520996
    5. '
' → logprob: -12.500563621520996
    6. '<|end|>' → logprob: -13.000563621520996
    7. ' ' → logprob: -13.375563621520996
    8. '```' → logprob: -13.625563621520996
    9. '        
' → logprob: -14.000563621520996
    10. '	self' → logprob: -14.000563621520996

Token 111: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02641548030078411
    2. ' self' → logprob: -3.6514155864715576
    3. '       ' → logprob: -9.151415824890137
    4. 'lines' → logprob: -12.401415824890137
    5. '   ' → logprob: -12.901415824890137
    6. ' lines' → logprob: -14.151415824890137
    7. ' ' → logprob: -14.776415824890137
    8. 's' → logprob: -15.026415824890137
    9. '	self' → logprob: -15.276415824890137
    10. '
' → logprob: -15.526415824890137

Token 112: '.tiles' (ID: 144726)
  Prédit: '.tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tiles' → logprob: -0.13787133991718292
    2. '.grid' → logprob: -2.887871265411377
    3. ' .' → logprob: -3.012871265411377
    4. '.' → logprob: -4.137871265411377
    5. '.lines' → logprob: -5.012871265411377
    6. '.rows' → logprob: -7.387871265411377
    7. '.cells' → logprob: -8.762871742248535
    8. '.tile' → logprob: -8.762871742248535
    9. '._' → logprob: -9.137871742248535
    10. '.tokens' → logprob: -9.762871742248535

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365664556622505
    2. '=' → logprob: -3.408656597137451
    3. '=[]' → logprob: -12.65865707397461
    4. ' ' → logprob: -12.78365707397461
    5. ' =[' → logprob: -13.65865707397461
    6. ' =
' → logprob: -13.78365707397461
    7. 's' → logprob: -14.40865707397461
    8. '<|end|>' → logprob: -14.90865707397461
    9. ']' → logprob: -15.03365707397461
    10. '[' → logprob: -15.15865707397461

Token 114: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1214433908462524
    2. '[]' → logprob: -1.1214433908462524
    3. '[[' → logprob: -2.121443271636963
    4. ' []' → logprob: -2.621443271636963
    5. '[
' → logprob: -2.871443271636963
    6. ' [' → logprob: -2.871443271636963
    7. ' [[' → logprob: -3.371443271636963
    8. ' [
' → logprob: -5.246443271636963
    9. '[]
' → logprob: -6.996443271636963
    10. '[list' → logprob: -7.621443271636963

Token 115: 'Tile' (ID: 17902)
  Prédit: 'Tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tile' → logprob: -0.0032032581511884928
    2. ' Tile' → logprob: -5.753203392028809
    3. 'None' → logprob: -10.878203392028809
    4. '(Tile' → logprob: -12.378203392028809
    5. '   ' → logprob: -14.628203392028809
    6. '           ' → logprob: -14.753203392028809
    7. '
' → logprob: -15.003203392028809
    8. '.Tile' → logprob: -15.128203392028809
    9. 'Tiles' → logprob: -15.253203392028809
    10. '       ' → logprob: -15.753203392028809

Token 116: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.17522642016410828
    2. '(' → logprob: -1.9252264499664307
    3. '(j' → logprob: -4.925226211547852
    4. '(i' → logprob: -5.425226211547852
    5. '(y' → logprob: -6.050226211547852
    6. '(
' → logprob: -7.925226211547852
    7. '(line' → logprob: -8.425226211547852
    8. '('' → logprob: -9.800226211547852
    9. '(row' → logprob: -9.800226211547852
    10. ')' → logprob: -10.425226211547852

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6895233531831764e-05
    2. ' ,' → logprob: -10.62502670288086
    3. '=' → logprob: -14.00002670288086
    4. ',
' → logprob: -14.37502670288086
    5. ')' → logprob: -15.00002670288086
    6. ',y' → logprob: -15.37502670288086
    7. '<|end|>' → logprob: -15.75002670288086
    8. 'y' → logprob: -16.00002670288086
    9. '   ' → logprob: -16.25002670288086
    10. ' ' → logprob: -16.87502670288086

Token 118: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759537816047668
    2. ' y' → logprob: -0.8259537816047668
    3. '0' → logprob: -12.450953483581543
    4. ')y' → logprob: -12.700953483581543
    5. ' ' → logprob: -12.950953483581543
    6. ')' → logprob: -13.325953483581543
    7. '<|end|>' → logprob: -13.450953483581543
    8. '	y' → logprob: -14.825953483581543
    9. 'x' → logprob: -15.200953483581543
    10. '
' → logprob: -15.575953483581543

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011558275582501665
    2. ' ,' → logprob: -9.125115394592285
    3. ',line' → logprob: -12.250115394592285
    4. ',
' → logprob: -14.000115394592285
    5. '           ' → logprob: -15.750115394592285
    6. '   ' → logprob: -16.1251163482666
    7. 'lines' → logprob: -16.5001163482666
    8. ',

' → logprob: -16.5001163482666
    9. '(lines' → logprob: -16.5001163482666
    10. ' lines' → logprob: -16.5001163482666

Token 120: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.07226411998271942
    2. 'lines' → logprob: -2.8222641944885254
    3. ' line' → logprob: -4.822264194488525
    4. 'line' → logprob: -6.197264194488525
    5. ' '' → logprob: -10.697263717651367
    6. ' c' → logprob: -10.822263717651367
    7. ' symbol' → logprob: -11.197263717651367
    8. ')' → logprob: -11.322263717651367
    9. ' char' → logprob: -11.322263717651367
    10. ' l' → logprob: -11.447263717651367

Token 121: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.5014188799541444e-05
    2. '[' → logprob: -10.375044822692871
    3. 'y' → logprob: -11.375044822692871
    4. ' [' → logprob: -14.375044822692871
    5. ' y' → logprob: -14.750044822692871
    6. '[
' → logprob: -14.875044822692871
    7. '```' → logprob: -15.250044822692871
    8. '   ' → logprob: -15.500044822692871
    9. '[x' → logprob: -15.500044822692871
    10. '][' → logprob: -16.250045776367188

Token 122: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004746406921185553
    2. ']' → logprob: -7.875474452972412
    3. ' ][' → logprob: -9.37547492980957
    4. '[' → logprob: -12.00047492980957
    5. '[x' → logprob: -13.12547492980957
    6. '   ' → logprob: -15.00047492980957
    7. ' ' → logprob: -15.25047492980957
    8. '])' → logprob: -15.37547492980957
    9. '"][' → logprob: -15.37547492980957
    10. ']
' → logprob: -16.00047492980957

Token 123: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9146995327901095e-05
    2. ' x' → logprob: -10.875019073486328
    3. ' ' → logprob: -16.000019073486328
    4. ']' → logprob: -19.250019073486328
    5. ')' → logprob: -19.250019073486328
    6. ')x' → logprob: -19.250019073486328
    7. '])' → logprob: -19.500019073486328
    8. '"x' → logprob: -19.625019073486328
    9. '   ' → logprob: -19.750019073486328
    10. '	x' → logprob: -20.125019073486328

Token 124: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.015051987022161484
    2. ')' → logprob: -4.26505184173584
    3. ' ])' → logprob: -7.51505184173584
    4. ' )' → logprob: -9.01505184173584
    5. ')])' → logprob: -9.89005184173584
    6. '])
' → logprob: -10.26505184173584
    7. '       ' → logprob: -10.64005184173584
    8. ' ' → logprob: -10.76505184173584
    9. '   ' → logprob: -10.89005184173584
    10. '])]' → logprob: -11.39005184173584

Token 125: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030495399609208107
    2. ' ' → logprob: -3.6554954051971436
    3. 'for' → logprob: -5.6554951667785645
    4. '        ' → logprob: -8.905495643615723
    5. '            ' → logprob: -9.030495643615723
    6. ')' → logprob: -9.655495643615723
    7. '	for' → logprob: -9.905495643615723
    8. '           ' → logprob: -10.030495643615723
    9. '<|end|>' → logprob: -10.030495643615723
    10. ' 
' → logprob: -10.280495643615723

Token 126: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0019115038448944688
    2. ' ' → logprob: -6.376911640167236
    3. ' range' → logprob: -9.126911163330078
    4. 'x' → logprob: -9.251911163330078
    5. ' xrange' → logprob: -12.876911163330078
    6. ' in' → logprob: -13.876911163330078
    7. '	x' → logprob: -15.001911163330078
    8. 'range' → logprob: -15.126911163330078
    9. '  ' → logprob: -15.501911163330078
    10. '<|end|>' → logprob: -15.501911163330078

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007459024200215936
    2. ' ' → logprob: -7.75074577331543
    3. 'in' → logprob: -8.50074577331543
    4. '<|end|>' → logprob: -9.12574577331543
    5. '	in' → logprob: -14.50074577331543
    6. ')' → logprob: -14.50074577331543
    7. ' )' → logprob: -14.87574577331543
    8. ' i' → logprob: -15.12574577331543
    9. ' range' → logprob: -15.37574577331543
    10. '<|end|>' → logprob: -15.75074577331543

Token 128: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009117019944824278
    2. 'range' → logprob: -7.000911712646484
    3. ' ' → logprob: -16.625911712646484
    4. '	range' → logprob: -16.750911712646484
    5. ' xrange' → logprob: -17.000911712646484
    6. '(range' → logprob: -17.250911712646484
    7. '.range' → logprob: -19.500911712646484
    8. '_range' → logprob: -19.625911712646484
    9. ')' → logprob: -20.000911712646484
    10. 'Range' → logprob: -21.375911712646484

Token 129: '(width' (ID: 32972)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018202507868409157
    2. '(width' → logprob: -4.268202304840088
    3. '(' → logprob: -5.518202304840088
    4. ' (' → logprob: -11.643202781677246
    5. '(s' → logprob: -12.268202781677246
    6. '(
' → logprob: -13.268202781677246
    7. 'self' → logprob: -14.018202781677246
    8. ')' → logprob: -14.393202781677246
    9. ' self' → logprob: -14.893202781677246
    10. '(w' → logprob: -15.393202781677246

Token 130: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018999939784407616
    2. ')' → logprob: -4.019000053405762
    3. ' )' → logprob: -7.394000053405762
    4. ']' → logprob: -8.519000053405762
    5. ' ]' → logprob: -11.019000053405762
    6. '   ' → logprob: -12.144000053405762
    7. '       ' → logprob: -12.269000053405762
    8. ' ' → logprob: -12.644000053405762
    9. ')}' → logprob: -13.394000053405762
    10. '))' → logprob: -13.894000053405762

Token 131: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005652290303260088
    2. '       ' → logprob: -6.00565242767334
    3. 'for' → logprob: -6.25565242767334
    4. ']' → logprob: -7.25565242767334
    5. '           ' → logprob: -8.63065242767334
    6. ' ]' → logprob: -9.00565242767334
    7. '   ' → logprob: -9.50565242767334
    8. ' ' → logprob: -9.50565242767334
    9. '        ' → logprob: -10.50565242767334
    10. ')' → logprob: -10.63065242767334

Token 132: ' y' (ID: 342)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004194863606244326
    2. 'range' → logprob: -5.504194736480713
    3. ' y' → logprob: -9.254195213317871
    4. ' ' → logprob: -11.504195213317871
    5. '(range' → logprob: -12.754195213317871
    6. ')' → logprob: -13.129195213317871
    7. ' xrange' → logprob: -13.129195213317871
    8. '	range' → logprob: -13.629195213317871
    9. 'y' → logprob: -14.129195213317871
    10. '    ' → logprob: -14.629195213317871

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01596914976835251
    2. '<|end|>' → logprob: -4.390969276428223
    3. 'in' → logprob: -5.765969276428223
    4. ' ' → logprob: -9.265969276428223
    5. '<|end|>' → logprob: -9.265969276428223
    6. 'range' → logprob: -9.515969276428223
    7. ')' → logprob: -10.390969276428223
    8. ' range' → logprob: -11.390969276428223
    9. '(range' → logprob: -12.640969276428223
    10. 'space' → logprob: -13.390969276428223

Token 134: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.024120844900608063
    2. ' height' → logprob: -4.399120807647705
    3. 'range' → logprob: -4.524120807647705
    4. 'height' → logprob: -7.274120807647705
    5. ' ' → logprob: -12.774121284484863
    6. ' self' → logprob: -13.149121284484863
    7. '(height' → logprob: -14.149121284484863
    8. '	range' → logprob: -15.274121284484863
    9. 'self' → logprob: -15.774121284484863
    10. '(range' → logprob: -16.024120330810547

Token 135: '(height' (ID: 44692)
  Prédit: '(height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(height' → logprob: -0.005695911590009928
    2. '(' → logprob: -5.255695819854736
    3. ' (' → logprob: -7.755695819854736
    4. '(self' → logprob: -11.005696296691895
    5. 'height' → logprob: -11.380696296691895
    6. ' height' → logprob: -12.880696296691895
    7. '(width' → logprob: -13.380696296691895
    8. '(
' → logprob: -13.880696296691895
    9. ')' → logprob: -15.755696296691895
    10. '(length' → logprob: -16.380695343017578

Token 136: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.013840360566973686
    2. ']' → logprob: -4.638840198516846
    3. ')' → logprob: -5.513840198516846
    4. '])' → logprob: -10.638840675354004
    5. ' )' → logprob: -12.013840675354004
    6. ' ]' → logprob: -12.388840675354004
    7. ')])' → logprob: -12.638840675354004
    8. '])]' → logprob: -12.638840675354004
    9. ')],' → logprob: -13.763840675354004
    10. ')}' → logprob: -14.013840675354004

Token 137: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.043377891182899475
    2. '   ' → logprob: -3.9183778762817383
    3. '<|end|>' → logprob: -3.9183778762817383
    4. '    
' → logprob: -7.168377876281738
    5. ' 
' → logprob: -7.793377876281738
    6. '

' → logprob: -7.793377876281738
    7. 'def' → logprob: -8.168377876281738
    8. ' ' → logprob: -8.543377876281738
    9. '<|end|>' → logprob: -8.918377876281738
    10. ' def' → logprob: -9.293377876281738

Token 138: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06896522641181946
    2. ' def' → logprob: -3.068965196609497
    3. '   ' → logprob: -3.943965196609497
    4. 'd' → logprob: -7.693965435028076
    5. ' ' → logprob: -8.068964958190918
    6. ' 
' → logprob: -11.568964958190918
    7. 'de' → logprob: -11.818964958190918
    8. '    
' → logprob: -12.068964958190918
    9. '
' → logprob: -13.068964958190918
    10. '  ' → logprob: -13.193964958190918

Token 139: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07848187536001205
    2. ' get' → logprob: -3.453481912612915
    3. '_' → logprob: -3.703481912612915
    4. ' _' → logprob: -4.203481674194336
    5. '_get' → logprob: -6.578481674194336
    6. ' tile' → logprob: -6.703481674194336
    7. '_tile' → logprob: -7.953481674194336
    8. '_space' → logprob: -8.078481674194336
    9. ' def' → logprob: -8.203481674194336
    10. ' space' → logprob: -8.703481674194336

Token 140: '_tile' (ID: 70473)
  Prédit: '_tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tile' → logprob: -0.001853792811743915
    2. '_' → logprob: -6.501853942871094
    3. '_neighbors' → logprob: -8.126853942871094
    4. '_neighbor' → logprob: -10.001853942871094
    5. '_tiles' → logprob: -12.251853942871094
    6. ' _' → logprob: -12.626853942871094
    7. '_adj' → logprob: -14.251853942871094
    8. '_token' → logprob: -14.501853942871094
    9. ' tile' → logprob: -14.501853942871094
    10. '_TILE' → logprob: -15.876853942871094

Token 141: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38704559206962585
    2. '(self' → logprob: -1.1370456218719482
    3. '(
' → logprob: -9.512045860290527
    4. '(s' → logprob: -9.637045860290527
    5. ' (' → logprob: -11.387045860290527
    6. '(x' → logprob: -11.637045860290527
    7. '<|end|>' → logprob: -12.637045860290527
    8. 'self' → logprob: -13.012045860290527
    9. '_by' → logprob: -13.137045860290527
    10. 's' → logprob: -13.137045860290527

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016293596709147096
    2. ' ,' → logprob: -6.75162935256958
    3. '(self' → logprob: -8.126629829406738
    4. 'self' → logprob: -9.251629829406738
    5. ',self' → logprob: -10.126629829406738
    6. 's' → logprob: -11.376629829406738
    7. ')' → logprob: -11.876629829406738
    8. ' self' → logprob: -12.501629829406738
    9. '<|end|>' → logprob: -13.626629829406738
    10. '(' → logprob: -13.876629829406738

Token 143: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18902161717414856
    2. ' self' → logprob: -1.9390215873718262
    3. 'x' → logprob: -3.689021587371826
    4. ' x' → logprob: -5.689021587371826
    5. ' ' → logprob: -12.814022064208984
    6. '(self' → logprob: -13.314022064208984
    7. 's' → logprob: -13.439022064208984
    8. '   ' → logprob: -14.814022064208984
    9. '	self' → logprob: -14.814022064208984
    10. ')' → logprob: -15.439022064208984

Token 144: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7848862373502925e-05
    2. ' ,' → logprob: -10.750027656555176
    3. ',y' → logprob: -12.250027656555176
    4. ':' → logprob: -14.625027656555176
    5. ',int' → logprob: -15.125027656555176
    6. ':int' → logprob: -15.250027656555176
    7. '‌,' → logprob: -15.750027656555176
    8. ',
' → logprob: -15.875027656555176
    9. ')' → logprob: -16.125028610229492
    10. '<|end|>' → logprob: -16.250028610229492

Token 145: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10054437071084976
    2. ' int' → logprob: -2.3505444526672363
    3. ',' → logprob: -8.850543975830078
    4. ':int' → logprob: -9.225543975830078
    5. ' ' → logprob: -10.225543975830078
    6. ' y' → logprob: -11.100543975830078
    7. ' ,' → logprob: -11.600543975830078
    8. 'y' → logprob: -11.850543975830078
    9. ',int' → logprob: -12.100543975830078
    10. ')' → logprob: -12.600543975830078

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.941850526549388e-06
    2. ' ,' → logprob: -11.875007629394531
    3. ',y' → logprob: -14.375007629394531
    4. '   ' → logprob: -16.37500762939453
    5. ':' → logprob: -16.50000762939453
    6. ',int' → logprob: -17.37500762939453
    7. ',
' → logprob: -18.00000762939453
    8. ')' → logprob: -18.12500762939453
    9. '‌,' → logprob: -18.12500762939453
    10. '
' → logprob: -18.87500762939453

Token 147: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931474208831787
    2. ' y' → logprob: -0.6931474208831787
    3. ' ' → logprob: -15.693147659301758
    4. ')' → logprob: -16.943147659301758
    5. '   ' → logprob: -17.818147659301758
    6. '	y' → logprob: -17.943147659301758
    7. ')y' → logprob: -18.568147659301758
    8. '  ' → logprob: -19.318147659301758
    9. ' ' → logprob: -19.443147659301758
    10. '    ' → logprob: -19.693147659301758

Token 148: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6352793574333191
    2. ')' → logprob: -0.7602793574333191
    3. '):
' → logprob: -6.135279178619385
    4. ':' → logprob: -7.760279178619385
    5. ' ):' → logprob: -10.510279655456543
    6. '   ' → logprob: -10.635279655456543
    7. ' )' → logprob: -11.260279655456543
    8. '):

' → logprob: -12.260279655456543
    9. ' ' → logprob: -12.635279655456543
    10. ')>' → logprob: -13.260279655456543

Token 149: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03735934942960739
    2. 'int' → logprob: -4.037359237670898
    3. '):' → logprob: -4.037359237670898
    4. '):
' → logprob: -7.037359237670898
    5. ' )' → logprob: -8.662359237670898
    6. '   ' → logprob: -9.162359237670898
    7. ' int' → logprob: -9.287359237670898
    8. ' ):' → logprob: -10.162359237670898
    9. ' ' → logprob: -10.537359237670898
    10. ':int' → logprob: -11.037359237670898

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008627460338175297
    2. '):' → logprob: -4.758627414703369
    3. '):
' → logprob: -11.508627891540527
    4. ' )' → logprob: -13.383627891540527
    5. ':' → logprob: -14.758627891540527
    6. ')->' → logprob: -15.258627891540527
    7. '')' → logprob: -15.633627891540527
    8. '`)' → logprob: -15.758627891540527
    9. ')
' → logprob: -16.13362693786621
    10. '   ' → logprob: -16.25862693786621

Token 151: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19061557948589325
    2. '):' → logprob: -2.065615653991699
    3. ':' → logprob: -3.315615653991699
    4. ' ->' → logprob: -4.940615653991699
    5. '->' → logprob: -6.315615653991699
    6. ')->' → logprob: -7.315615653991699
    7. '   ' → logprob: -7.940615653991699
    8. '):
' → logprob: -8.1906156539917
    9. '       ' → logprob: -8.9406156539917
    10. ']' → logprob: -10.8156156539917

Token 152: ' Tile' (ID: 35295)
  Prédit: ' Tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tile' → logprob: -0.0590132437646389
    2. 'Tile' → logprob: -3.0590131282806396
    3. ' Optional' → logprob: -4.934013366699219
    4. 'Optional' → logprob: -5.809013366699219
    5. ' '' → logprob: -9.184013366699219
    6. '(Tile' → logprob: -11.059013366699219
    7. ' tile' → logprob: -11.559013366699219
    8. ''' → logprob: -11.559013366699219
    9. '.Tile' → logprob: -11.559013366699219
    10. ' None' → logprob: -11.934013366699219

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004696407355368137
    2. '):' → logprob: -5.379696369171143
    3. ')' → logprob: -10.2546968460083
    4. ':
' → logprob: -10.6296968460083
    5. '():' → logprob: -12.5046968460083
    6. ',' → logprob: -13.0046968460083
    7. ':**' → logprob: -13.5046968460083
    8. ']:' → logprob: -13.6296968460083
    9. '<|end|>' → logprob: -13.6296968460083
    10. ':return' → logprob: -13.6296968460083

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007910385727882385
    2. '   ' → logprob: -5.632910251617432
    3. '<|end|>' → logprob: -6.632910251617432
    4. ' 
' → logprob: -7.507910251617432
    5. '
' → logprob: -7.632910251617432
    6. ':' → logprob: -7.757910251617432
    7. ' ' → logprob: -8.25791072845459
    8. ' return' → logprob: -8.38291072845459
    9. '#' → logprob: -8.75791072845459
    10. '    ' → logprob: -8.88291072845459

Token 155: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47809556126594543
    2. ' if' → logprob: -1.228095531463623
    3. 'if' → logprob: -2.478095531463623
    4. 'return' (adapté à ' return') → logprob: -6.228095531463623
    5. ' return' → logprob: -6.853095531463623
    6. ' i' → logprob: -9.353096008300781
    7. ' 
' → logprob: -9.603096008300781
    8. 'i' → logprob: -10.728096008300781
    9. '        ' → logprob: -11.103096008300781
    10. ' ' → logprob: -11.353096008300781

Token 156: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16028647124767303
    2. ' self' → logprob: -1.9102864265441895
    3. 'None' → logprob: -10.035286903381348
    4. ' None' → logprob: -10.910286903381348
    5. '(self' → logprob: -15.535286903381348
    6. ' ' → logprob: -17.41028594970703
    7. '	self' → logprob: -17.91028594970703
    8. '   ' → logprob: -18.53528594970703
    9. '       ' → logprob: -18.66028594970703
    10. '[self' → logprob: -19.16028594970703

Token 157: '.tiles' (ID: 144726)
  Prédit: '.tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tiles' → logprob: -0.00037323508877307177
    2. '.' → logprob: -8.500372886657715
    3. '.t' → logprob: -9.125372886657715
    4. ' .' → logprob: -10.500372886657715
    5. '.tokens' → logprob: -11.000372886657715
    6. 'tiles' → logprob: -11.750372886657715
    7. '.tile' → logprob: -12.500372886657715
    8. ').' → logprob: -13.375372886657715
    9. '.tasks' → logprob: -15.000372886657715
    10. '.cells' → logprob: -15.000372886657715

Token 158: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.500012397766113
    3. ' [' → logprob: -14.125012397766113
    4. 'y' → logprob: -14.500012397766113
    5. '[x' → logprob: -15.125012397766113
    6. '```' → logprob: -15.750012397766113
    7. '[
' → logprob: -16.000011444091797
    8. '[t' → logprob: -16.750011444091797
    9. '[max' → logprob: -17.125011444091797
    10. '[j' → logprob: -17.125011444091797

Token 159: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0031942317727953196
    2. ']' → logprob: -5.753194332122803
    3. ' ][' → logprob: -11.128193855285645
    4. '[' → logprob: -13.503193855285645
    5. '[x' → logprob: -15.503193855285645
    6. '][]' → logprob: -16.62819480895996
    7. '   ' → logprob: -17.37819480895996
    8. ' ]' → logprob: -17.62819480895996
    9. '"][' → logprob: -17.75319480895996
    10. ']
' → logprob: -18.12819480895996

Token 160: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6240566083070007e-06
    2. ' x' → logprob: -13.375001907348633
    3. '	x' → logprob: -20.875001907348633
    4. ' ' → logprob: -21.375001907348633
    5. ')x' → logprob: -21.875001907348633
    6. '"x' → logprob: -22.125001907348633
    7. '   ' → logprob: -22.500001907348633
    8. '```' → logprob: -23.125001907348633
    9. '
' → logprob: -23.375001907348633
    10. 'xref' → logprob: -23.625001907348633

Token 161: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5267109274864197
    2. ']' → logprob: -0.9017109274864197
    3. '}' → logprob: -5.6517109870910645
    4. '<|end|>' → logprob: -10.151710510253906
    5. ' ]' → logprob: -12.026710510253906
    6. ' )' → logprob: -12.401710510253906
    7. ')
' → logprob: -12.401710510253906
    8. ']
' → logprob: -12.526710510253906
    9. '）' → logprob: -12.901710510253906
    10. ' ' → logprob: -13.151710510253906

Token 162: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2940206527709961
    2. '   ' → logprob: -1.419020652770996
    3. '<|end|>' → logprob: -5.044020652770996
    4. '    
' → logprob: -6.044020652770996
    5. ' ' → logprob: -7.169020652770996
    6. 'def' → logprob: -7.294020652770996
    7. '```' → logprob: -7.294020652770996
    8. ' 
' → logprob: -7.669020652770996
    9. '

' → logprob: -7.794020652770996
    10. '<|end|>' → logprob: -7.919020652770996

Token 163: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1479893922805786
    2. '   ' → logprob: -2.147989273071289
    3. ' def' → logprob: -3.897989273071289
    4. '
' → logprob: -7.647989273071289
    5. '    
' → logprob: -10.272989273071289
    6. ' ' → logprob: -11.147989273071289
    7. '	def' → logprob: -11.147989273071289
    8. ' 
' → logprob: -11.772989273071289
    9. '```' → logprob: -12.897989273071289
    10. '  ' → logprob: -13.272989273071289

Token 164: ' neighbors' (ID: 31655)
  Prédit: ' neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.24007494747638702
    2. ' in' → logprob: -2.365074872970581
    3. 'neighbors' → logprob: -2.990074872970581
    4. ' get' → logprob: -3.490074872970581
    5. ' find' → logprob: -4.74007511138916
    6. '_neighbors' → logprob: -4.99007511138916
    7. ' def' → logprob: -5.36507511138916
    8. ' adjacent' → logprob: -5.86507511138916
    9. ' is' → logprob: -5.86507511138916
    10. 'in' → logprob: -5.99007511138916

Token 165: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04859384149312973
    2. '(' → logprob: -3.048593759536743
    3. '(
' → logprob: -12.298593521118164
    4. ' (' → logprob: -13.798593521118164
    5. 'self' → logprob: -15.298593521118164
    6. '(

' → logprob: -15.548593521118164
    7. '(s' → logprob: -15.923593521118164
    8. '_(' → logprob: -16.173593521118164
    9. '_' → logprob: -16.673593521118164
    10. '(x' → logprob: -16.923593521118164

Token 166: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004741145297884941
    2. ')' → logprob: -6.004741191864014
    3. ',' → logprob: -6.504741191864014
    4. ' (' → logprob: -7.629741191864014
    5. '(' → logprob: -9.129740715026855
    6. 'self' → logprob: -9.504740715026855
    7. ')(' → logprob: -10.254740715026855
    8. ' self' → logprob: -10.504740715026855
    9. ' )' → logprob: -11.754740715026855
    10. '   ' → logprob: -11.879740715026855

Token 167: ' tile' (ID: 17664)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37892740964889526
    2. ' self' → logprob: -1.62892746925354
    3. 'x' → logprob: -2.37892746925354
    4. ' x' → logprob: -3.62892746925354
    5. '   ' → logprob: -9.878927230834961
    6. ' ' → logprob: -11.753927230834961
    7. '       ' → logprob: -11.753927230834961
    8. ')' → logprob: -13.253927230834961
    9. '    ' → logprob: -14.628927230834961
    10. '	self' → logprob: -15.128927230834961

Token 168: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15115302801132202
    2. '(self' → logprob: -2.776153087615967
    3. ')' → logprob: -3.776153087615967
    4. 'self' → logprob: -3.776153087615967
    5. ':' → logprob: -3.901153087615967
    6. '):
' → logprob: -4.526153087615967
    7. '   ' → logprob: -7.651153087615967
    8. '       ' → logprob: -8.276152610778809
    9. ' ):' → logprob: -8.776152610778809
    10. ' self' → logprob: -9.151152610778809

Token 169: ' Tile' (ID: 35295)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3829517960548401
    2. ' self' → logprob: -1.3829517364501953
    3. ' tile' → logprob: -2.8829517364501953
    4. 'tile' → logprob: -4.882951736450195
    5. 'Tile' → logprob: -6.257951736450195
    6. ')' → logprob: -7.382951736450195
    7. ' Tile' → logprob: -7.632951736450195
    8. '   ' → logprob: -8.007951736450195
    9. ' ' → logprob: -9.382951736450195
    10. '(self' → logprob: -9.632951736450195

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06243794038891792
    2. '):' → logprob: -2.8124380111694336
    3. '):
' → logprob: -7.687438011169434
    4. '   ' → logprob: -12.437438011169434
    5. ' )' → logprob: -12.812438011169434
    6. '       ' → logprob: -13.687438011169434
    7. ')->' → logprob: -13.937438011169434
    8. ',' → logprob: -13.937438011169434
    9. ' ):' → logprob: -14.312438011169434
    10. '):
' → logprob: -14.562438011169434

Token 171: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7783448696136475
    2. ' ->' → logprob: -0.7783448696136475
    3. '(self' → logprob: -3.1533448696136475
    4. '->' → logprob: -3.9033448696136475
    5. '):' → logprob: -4.653345108032227
    6. ')' → logprob: -5.028345108032227
    7. '       ' → logprob: -7.028345108032227
    8. ',' → logprob: -7.653345108032227
    9. 'self' → logprob: -7.903345108032227
    10. ' :' → logprob: -8.278345108032227

Token 172: ' list' (ID: 1562)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.6810851693153381
    2. '[' → logprob: -1.6810851097106934
    3. ' [
' → logprob: -1.9310851097106934
    4. ' [' → logprob: -2.4310851097106934
    5. ' list' → logprob: -3.5560851097106934
    6. 'list' → logprob: -3.8060851097106934
    7. '[]' → logprob: -4.431085109710693
    8. '   ' → logprob: -5.306085109710693
    9. ' []' → logprob: -6.306085109710693
    10. '[list' → logprob: -6.306085109710693

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8193366486229934e-05
    2. '[int' → logprob: -11.875018119812012
    3. '[
' → logprob: -12.000018119812012
    4. '(Tile' → logprob: -12.625018119812012
    5. '```' → logprob: -15.000018119812012
    6. '   ' → logprob: -15.000018119812012
    7. ':' → logprob: -15.375018119812012
    8. '[List' → logprob: -15.875018119812012
    9. '[]' → logprob: -16.000019073486328
    10. 'Tile' → logprob: -16.375019073486328

Token 174: 'Tile' (ID: 17902)
  Prédit: 'Tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tile' → logprob: -0.0019286326132714748
    2. ' Tile' → logprob: -6.251928806304932
    3. '(Tile' → logprob: -17.376928329467773
    4. 'Tuple' → logprob: -17.751928329467773
    5. '   ' → logprob: -19.251928329467773
    6. '.Tile' → logprob: -19.376928329467773
    7. 'tile' → logprob: -19.626928329467773
    8. '_tile' → logprob: -19.876928329467773
    9. 'Tiles' → logprob: -20.626928329467773
    10. 'int' → logprob: -20.751928329467773

Token 175: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -8.458980300929397e-05
    2. ']:
' → logprob: -9.87508487701416
    3. ']' → logprob: -10.37508487701416
    4. ']:
' → logprob: -13.87508487701416
    5. '):' → logprob: -15.25008487701416
    6. '"]:' → logprob: -15.37508487701416
    7. ':' → logprob: -15.87508487701416
    8. '']:' → logprob: -15.87508487701416
    9. ']:

' → logprob: -15.87508487701416
    10. '[' → logprob: -16.625083923339844

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008371667005121708
    2. '[' → logprob: -5.008371829986572
    3. '[n' → logprob: -7.633371829986572
    4. '   ' → logprob: -7.758371829986572
    5. '[
' → logprob: -7.883371829986572
    6. '[]' → logprob: -9.008371353149414
    7. '[]
' → logprob: -10.258371353149414
    8. '
' → logprob: -10.508371353149414
    9. 'result' → logprob: -10.758371353149414
    10. '        
' → logprob: -11.008371353149414

Token 177: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3628784418106079
    2. ' neighbors' → logprob: -1.862878441810608
    3. ' result' → logprob: -2.7378783226013184
    4. 'neighbors' → logprob: -3.2378783226013184
    5. ' directions' → logprob: -4.237878322601318
    6. ' n' → logprob: -4.612878322601318
    7. 'result' → logprob: -4.612878322601318
    8. 'n' → logprob: -4.987878322601318
    9. ' neigh' → logprob: -7.237878322601318
    10. '   ' → logprob: -7.362878322601318

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001954087056219578
    2. '=' → logprob: -6.251954078674316
    3. ':' → logprob: -10.626954078674316
    4. ' ' → logprob: -14.501954078674316
    5. '=[]' → logprob: -15.376954078674316
    6. ' :' → logprob: -15.626954078674316
    7. ' =[' → logprob: -15.751954078674316
    8. ']' → logprob: -16.376955032348633
    9. '_' → logprob: -17.126955032348633
    10. ',' → logprob: -17.626955032348633

Token 179: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.3374979794025421
    2. ' [
' → logprob: -1.3374979496002197
    3. '[(' → logprob: -4.337498188018799
    4. '[' → logprob: -5.837498188018799
    5. '[]
' → logprob: -5.837498188018799
    6. ' [' → logprob: -6.087498188018799
    7. '[]' → logprob: -6.337498188018799
    8. ' [(' → logprob: -7.087498188018799
    9. ' []
' → logprob: -8.96249771118164
    10. ' []' → logprob: -10.33749771118164

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41320377588272095
    2. '(tile' → logprob: -1.4132037162780762
    3. ' (' → logprob: -2.413203716278076
    4. '(t' → logprob: -5.663203716278076
    5. '(x' → logprob: -6.538203716278076
    6. '   ' → logprob: -8.163204193115234
    7. '       ' → logprob: -8.913204193115234
    8. '(' → logprob: -9.163204193115234
    9. '(Tile' → logprob: -9.663204193115234
    10. '(self' → logprob: -10.163204193115234

Token 181: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0121670076623559
    2. 'self' → logprob: -5.137166976928711
    3. ' (' → logprob: -5.262166976928711
    4. ' self' → logprob: -7.262166976928711
    5. '   ' → logprob: -9.387166976928711
    6. '(x' → logprob: -9.512166976928711
    7. '(tile' → logprob: -9.887166976928711
    8. '       ' → logprob: -10.262166976928711
    9. '(Tile' → logprob: -10.387166976928711
    10. '(t' → logprob: -10.762166976928711

Token 182: 'tile' (ID: 44047)
  Prédit: 'tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tile' → logprob: -0.0072158994153141975
    2. ' tile' → logprob: -5.007215976715088
    3. '(tile' → logprob: -7.632215976715088
    4. '           ' → logprob: -12.13221549987793
    5. '   ' → logprob: -12.13221549987793
    6. 'til' → logprob: -14.00721549987793
    7. '0' → logprob: -14.50721549987793
    8. '    ' → logprob: -14.50721549987793
    9. '       ' → logprob: -14.63221549987793
    10. '.tile' → logprob: -14.63221549987793

Token 183: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -8.828512363834307e-05
    2. '.' → logprob: -9.375088691711426
    3. ' .' → logprob: -12.750088691711426
    4. 'x' → logprob: -14.875088691711426
    5. ',' → logprob: -17.00008773803711
    6. ' ' → logprob: -17.62508773803711
    7. '.
' → logprob: -17.75008773803711
    8. '.y' → logprob: -18.25008773803711
    9. ').' → logprob: -18.25008773803711
    10. '.width' → logprob: -18.37508773803711

Token 184: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5679550766944885
    2. ' -' → logprob: -1.0679550170898438
    3. '-' → logprob: -3.1929550170898438
    4. '   ' → logprob: -3.5679550170898438
    5. ' ,' → logprob: -4.067955017089844
    6. ' +' → logprob: -6.692955017089844
    7. ' ' → logprob: -6.942955017089844
    8. '+' → logprob: -7.067955017089844
    9. '  ' → logprob: -9.942955017089844
    10. '    ' → logprob: -10.817955017089844

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009120595059357584
    2. ' ' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.375911712646484
    4. '
' → logprob: -15.750911712646484
    5. ',' → logprob: -16.625911712646484
    6. '<|end|>' → logprob: -16.750911712646484
    7. '```' → logprob: -17.000911712646484
    8. '0' → logprob: -17.625911712646484
    9. '       ' → logprob: -18.000911712646484
    10. '           ' → logprob: -18.500911712646484

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.750041007995605
    4. '
' → logprob: -16.25004005432129
    5. '0' → logprob: -16.50004005432129
    6. '<|end|>' → logprob: -16.62504005432129
    7. ')' → logprob: -16.75004005432129
    8. '```' → logprob: -17.00004005432129
    9. ',' → logprob: -17.37504005432129
    10. '           ' → logprob: -17.93754005432129

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ',
' → logprob: -12.875004768371582
    3. ' ,' → logprob: -13.375004768371582
    4. ',t' → logprob: -15.000004768371582
    5. '<|end|>' → logprob: -15.000004768371582
    6. ',

' → logprob: -15.250004768371582
    7. '),' → logprob: -16.5000057220459
    8. '‌,' → logprob: -17.3750057220459
    9. ')' → logprob: -17.7500057220459
    10. '(tile' → logprob: -18.3750057220459

Token 188: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.023252815008163452
    2. 'tile' → logprob: -3.7732527256011963
    3. '(tile' → logprob: -12.273252487182617
    4. '.tile' → logprob: -13.523252487182617
    5. ' ' → logprob: -14.898252487182617
    6. '    ' → logprob: -15.523252487182617
    7. '_tile' → logprob: -15.773252487182617
    8. '0' → logprob: -16.273252487182617
    9. 'Tile' → logprob: -16.523252487182617
    10. '        ' → logprob: -16.898252487182617

Token 189: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0011726059019565582
    2. '.' → logprob: -6.8761725425720215
    3. ' .' → logprob: -9.12617301940918
    4. '.x' → logprob: -10.50117301940918
    5. ').' → logprob: -13.75117301940918
    6. '[' → logprob: -14.12617301940918
    7. '   ' → logprob: -14.62617301940918
    8. ')' → logprob: -14.87617301940918
    9. ' ' → logprob: -15.00117301940918
    10. 'y' → logprob: -15.37617301940918

Token 190: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5791274309158325
    2. '),
' → logprob: -0.8291274309158325
    3. '),

' → logprob: -6.454127311706543
    4. ')' → logprob: -6.579127311706543
    5. ' ),
' → logprob: -9.579127311706543
    6. '   ' → logprob: -9.829127311706543
    7. '       ' → logprob: -9.954127311706543
    8. ' ),' → logprob: -10.329127311706543
    9. '),(' → logprob: -12.079127311706543
    10. '),
' → logprob: -12.704127311706543

Token 191: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.44240421056747437
    2. '       ' → logprob: -1.0674042701721191
    3. '           ' → logprob: -4.817404270172119
    4. '(tile' → logprob: -5.317404270172119
    5. '(' → logprob: -7.942404270172119
    6. '(t' → logprob: -9.067403793334961
    7. '   ' → logprob: -10.067403793334961
    8. '        
' → logprob: -10.942403793334961
    9. ' (
' → logprob: -11.567403793334961
    10. '        ' → logprob: -11.692403793334961

Token 192: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03822119161486626
    2. '(tile' → logprob: -3.2882211208343506
    3. '           ' → logprob: -8.78822135925293
    4. '(t' → logprob: -11.03822135925293
    5. '(ticket' → logprob: -11.91322135925293
    6. '   ' → logprob: -13.41322135925293
    7. '(' (adapté à ' (') → logprob: -13.78822135925293
    8. '       ' → logprob: -14.66322135925293
    9. '            ' → logprob: -14.78822135925293
    10. '(Tile' → logprob: -15.03822135925293

Token 193: 'tile' (ID: 44047)
  Prédit: 'tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tile' → logprob: -0.2519807815551758
    2. ' tile' → logprob: -1.5019807815551758
    3. '(tile' → logprob: -10.626980781555176
    4. '           ' → logprob: -11.626980781555176
    5. '.tile' → logprob: -11.876980781555176
    6. '    ' → logprob: -12.876980781555176
    7. '   ' → logprob: -13.876980781555176
    8. '        ' → logprob: -14.001980781555176
    9. '            ' → logprob: -14.001980781555176
    10. ' ' → logprob: -14.001980781555176

Token 194: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.002229832811281085
    2. '.' → logprob: -6.127229690551758
    3. ' .' → logprob: -10.877229690551758
    4. '[' → logprob: -11.377229690551758
    5. ').' → logprob: -11.752229690551758
    6. ' ' → logprob: -13.002229690551758
    7. 'x' → logprob: -13.002229690551758
    8. ',' → logprob: -14.377229690551758
    9. '   ' → logprob: -15.127229690551758
    10. ')' → logprob: -15.252229690551758

Token 195: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047602420672774315
    2. '   ' → logprob: -6.004760265350342
    3. ' ,' → logprob: -6.129760265350342
    4. ' ' → logprob: -10.129759788513184
    5. ' -' → logprob: -10.504759788513184
    6. ' +' → logprob: -11.129759788513184
    7. '-' → logprob: -11.379759788513184
    8. '+' → logprob: -12.254759788513184
    9. '  ' → logprob: -13.254759788513184
    10. '    ' → logprob: -13.879759788513184

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815626211464405
    2. ' ' → logprob: -4.018156051635742
    3. '   ' → logprob: -13.143156051635742
    4. '<|end|>' → logprob: -13.518156051635742
    5. '           ' → logprob: -14.018156051635742
    6. '```' → logprob: -14.518156051635742
    7. '  ' → logprob: -15.143156051635742
    8. '
' → logprob: -15.393156051635742
    9. '    ' → logprob: -15.768156051635742
    10. '0' → logprob: -15.768156051635742

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001929228543303907
    2. ' ' → logprob: -6.25192928314209
    3. ')' → logprob: -15.87692928314209
    4. ',' → logprob: -16.251928329467773
    5. '```' → logprob: -16.251928329467773
    6. '0' → logprob: -16.376928329467773
    7. '   ' → logprob: -16.626928329467773
    8. '
' → logprob: -16.814428329467773
    9. '-' → logprob: -17.751928329467773
    10. '  ' → logprob: -17.814428329467773

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1186566047836095e-05
    2. ' ,' → logprob: -10.500031471252441
    3. ',
' → logprob: -12.750031471252441
    4. ',

' → logprob: -14.875031471252441
    5. '<|end|>' → logprob: -15.625031471252441
    6. '(tile' → logprob: -16.750030517578125
    7. ',t' → logprob: -16.875030517578125
    8. '),' → logprob: -16.875030517578125
    9. ')' → logprob: -17.000030517578125
    10. '',' → logprob: -17.500030517578125

Token 199: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.02785167656838894
    2. 'tile' → logprob: -3.7778515815734863
    3. '(tile' → logprob: -5.402851581573486
    4. ' ' → logprob: -10.152852058410645
    5. ' (' → logprob: -10.402852058410645
    6. '<|end|>' → logprob: -11.152852058410645
    7. '.tile' → logprob: -12.902852058410645
    8. ')' → logprob: -13.277852058410645
    9. ' ' → logprob: -14.527852058410645
    10. '_tile' → logprob: -14.527852058410645

Token 200: '.y' (ID: 4486)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000275040598353371
    2. '.tile' → logprob: -9.250274658203125
    3. ' ,' → logprob: -9.625274658203125
    4. ',y' → logprob: -9.875274658203125
    5. '),' → logprob: -10.500274658203125
    6. '.y' → logprob: -10.625274658203125
    7. 'tile' → logprob: -13.000274658203125
    8. ' tile' → logprob: -13.125274658203125
    9. ')' → logprob: -13.375274658203125
    10. ',
' → logprob: -13.875274658203125

Token 201: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3285468518733978
    2. '),
' → logprob: -1.5785468816757202
    3. ',' → logprob: -2.8285467624664307
    4. ')' → logprob: -4.45354700088501
    5. ',
' → logprob: -6.32854700088501
    6. '       ' → logprob: -7.57854700088501
    7. '           ' → logprob: -7.70354700088501
    8. '),

' → logprob: -8.578546524047852
    9. '   ' → logprob: -10.703546524047852
    10. '),
' → logprob: -11.578546524047852

Token 202: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16999827325344086
    2. '(tile' → logprob: -2.1699981689453125
    3. '           ' → logprob: -3.1699981689453125
    4. '       ' → logprob: -9.169998168945312
    5. '(t' → logprob: -10.919998168945312
    6. '   ' → logprob: -11.419998168945312
    7. '          ' → logprob: -12.044998168945312
    8. ' tile' → logprob: -12.669998168945312
    9. '(ticket' → logprob: -13.294998168945312
    10. '(Tile' → logprob: -13.419998168945312

Token 203: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.029788101091980934
    2. '(tile' → logprob: -3.529788017272949
    3. '(t' → logprob: -10.52978801727295
    4. '           ' → logprob: -11.65478801727295
    5. '(ticket' → logprob: -13.77978801727295
    6. '(' (adapté à ' (') → logprob: -14.27978801727295
    7. '   ' → logprob: -15.27978801727295
    8. ' tile' → logprob: -15.90478801727295
    9. '(Tile' → logprob: -15.90478801727295
    10. ' (
' → logprob: -17.029788970947266

Token 204: 'tile' (ID: 44047)
  Prédit: 'tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tile' → logprob: -0.5797250270843506
    2. ' tile' → logprob: -0.8297250270843506
    3. '(tile' → logprob: -5.57972526550293
    4. '.tile' → logprob: -13.45472526550293
    5. '           ' → logprob: -14.20472526550293
    6. 'til' → logprob: -14.95472526550293
    7. ' (' → logprob: -14.95472526550293
    8. 't' → logprob: -14.95472526550293
    9. '   ' → logprob: -15.32972526550293
    10. '(t' → logprob: -15.32972526550293

Token 205: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.5822400857578032e-05
    2. '.y' → logprob: -11.250025749206543
    3. '.' → logprob: -11.375025749206543
    4. ' .' → logprob: -14.500025749206543
    5. 'x' → logprob: -15.125025749206543
    6. '[' → logprob: -15.250025749206543
    7. ',' → logprob: -16.12502670288086
    8. ').' → logprob: -17.25002670288086
    9. '.tile' → logprob: -17.25002670288086
    10. '```' → logprob: -17.37502670288086

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002335804980248213
    2. ' ,' → logprob: -6.877336025238037
    3. '-' → logprob: -7.377336025238037
    4. ' -' → logprob: -7.502336025238037
    5. '   ' → logprob: -9.377335548400879
    6. ' ' → logprob: -11.002335548400879
    7. ',
' → logprob: -11.502335548400879
    8. '       ' → logprob: -12.252335548400879
    9. ')' → logprob: -13.752335548400879
    10. '           ' → logprob: -13.877335548400879

Token 207: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.03813581541180611
    2. 'tile' → logprob: -3.2881357669830322
    3. '(tile' → logprob: -9.288135528564453
    4. '.tile' → logprob: -14.163135528564453
    5. ' ' → logprob: -14.788135528564453
    6. '    ' → logprob: -15.413135528564453
    7. ' t' → logprob: -15.788135528564453
    8. ' (' → logprob: -15.913135528564453
    9. '   ' → logprob: -16.163135528564453
    10. 't' → logprob: -16.413135528564453

Token 208: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.11462155729532242
    2. '-' → logprob: -2.239621639251709
    3. 'y' → logprob: -7.239621639251709
    4. '.' → logprob: -7.239621639251709
    5. ' -' → logprob: -7.989621639251709
    6. ' ' → logprob: -12.36462116241455
    7. '+' → logprob: -12.48962116241455
    8. '   ' → logprob: -12.86462116241455
    9. '.py' → logprob: -12.98962116241455
    10. '[' → logprob: -13.23962116241455

Token 209: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026310397312045097
    2. '-' → logprob: -3.651310443878174
    3. ' ' → logprob: -12.026309967041016
    4. ')' → logprob: -12.651309967041016
    5. ' -
' → logprob: -14.401309967041016
    6. '   ' → logprob: -15.651309967041016
    7. '+' → logprob: -16.401309967041016
    8. ' ' → logprob: -16.526309967041016
    9. '1' → logprob: -16.776309967041016
    10. ' )' → logprob: -17.276309967041016

Token 210: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003380846756044775
    2. ' ' → logprob: -8.000338554382324
    3. ')' → logprob: -13.125338554382324
    4. '```' → logprob: -15.375338554382324
    5. '   ' → logprob: -16.375337600708008
    6. ' )' → logprob: -16.500337600708008
    7. '<|end|>' → logprob: -16.625337600708008
    8. '           ' → logprob: -16.875337600708008
    9. '),' → logprob: -17.312837600708008
    10. ')
' → logprob: -17.562837600708008

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. ')' → logprob: -16.250017166137695
    4. '```' → logprob: -17.375017166137695
    5. '   ' → logprob: -18.000017166137695
    6. '<|end|>' → logprob: -18.500017166137695
    7. ')
' → logprob: -19.250017166137695
    8. '
' → logprob: -19.250017166137695
    9. '),' → logprob: -20.000017166137695
    10. '       ' → logprob: -20.500017166137695

Token 212: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2079479992389679
    2. '),
' → logprob: -1.7079479694366455
    3. ')' → logprob: -5.207948207855225
    4. '       ' → logprob: -7.082948207855225
    5. '),

' → logprob: -9.207947731018066
    6. '           ' → logprob: -9.957947731018066
    7. '),
' → logprob: -10.457947731018066
    8. '   ' → logprob: -10.832947731018066
    9. ' ),' → logprob: -13.832947731018066
    10. '),(' → logprob: -14.082947731018066

Token 213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003312223358079791
    2. '(tile' → logprob: -5.753312110900879
    3. '(t' → logprob: -9.503312110900879
    4. ' (' → logprob: -10.003312110900879
    5. '       ' → logprob: -11.878312110900879
    6. '   ' → logprob: -13.253312110900879
    7. '          ' → logprob: -13.378312110900879
    8. '(' → logprob: -13.503312110900879
    9. '(ticket' → logprob: -13.878312110900879
    10. '		' → logprob: -14.378312110900879

Token 214: ' (' (ID: 350)
  Prédit: '(tile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tile' → logprob: -0.038109999150037766
    2. ' (' → logprob: -3.2881100177764893
    3. '(t' → logprob: -9.91310977935791
    4. '(' (adapté à ' (') → logprob: -11.28810977935791
    5. '(ticket' → logprob: -13.03810977935791
    6. ' tile' → logprob: -13.16310977935791
    7. 'tile' → logprob: -13.78810977935791
    8. '(Tile' → logprob: -14.41310977935791
    9. '(token' → logprob: -14.53810977935791
    10. '           ' → logprob: -15.16310977935791

Token 215: 'tile' (ID: 44047)
  Prédit: 'tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tile' → logprob: -0.3485822379589081
    2. ' tile' → logprob: -1.2235822677612305
    3. '(tile' → logprob: -9.22358226776123
    4. '           ' → logprob: -11.34858226776123
    5. '   ' → logprob: -12.47358226776123
    6. '.tile' → logprob: -12.59858226776123
    7. ' ' → logprob: -12.97358226776123
    8. '    ' → logprob: -13.22358226776123
    9. 't' → logprob: -13.22358226776123
    10. '       ' → logprob: -13.34858226776123

Token 216: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.000504658033605665
    2. '.' → logprob: -7.625504493713379
    3. '.y' → logprob: -11.375504493713379
    4. 'x' → logprob: -13.500504493713379
    5. ',' → logprob: -13.625504493713379
    6. ' .' → logprob: -13.625504493713379
    7. ').' → logprob: -14.375504493713379
    8. ')' → logprob: -15.375504493713379
    9. '.tile' → logprob: -16.125505447387695
    10. '.
' → logprob: -16.250505447387695

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8277379870414734
    2. ' +' → logprob: -0.8277379870414734
    3. '+' → logprob: -2.077738046646118
    4. ' ,' → logprob: -7.577737808227539
    5. ')' → logprob: -8.702737808227539
    6. ' ' → logprob: -11.577737808227539
    7. '),' → logprob: -11.952737808227539
    8. '+,' → logprob: -12.077737808227539
    9. ',
' → logprob: -12.327737808227539
    10. ' +
' → logprob: -13.077737808227539

Token 218: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.048789702355861664
    2. 'tile' → logprob: -3.0487897396087646
    3. '(tile' → logprob: -8.548789978027344
    4. '.tile' → logprob: -13.423789978027344
    5. ' (' → logprob: -13.798789978027344
    6. ')' → logprob: -13.798789978027344
    7. ' ' → logprob: -14.048789978027344
    8. ' t' → logprob: -14.048789978027344
    9. ' 
' → logprob: -14.298789978027344
    10. 't' → logprob: -14.423789978027344

Token 219: '.y' (ID: 4486)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5767285227775574
    2. ' +' → logprob: -0.8267285227775574
    3. ')' → logprob: -7.951728343963623
    4. ' -' → logprob: -8.576728820800781
    5. '-' → logprob: -9.076728820800781
    6. '.y' → logprob: -9.201728820800781
    7. ' ' → logprob: -11.201728820800781
    8. 'y' → logprob: -12.326728820800781
    9. '[' → logprob: -12.326728820800781
    10. '.' → logprob: -12.951728820800781

Token 220: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03392771631479263
    2. '+' → logprob: -3.4089276790618896
    3. ' -' → logprob: -8.908927917480469
    4. ')' → logprob: -9.033927917480469
    5. ' ' → logprob: -11.908927917480469
    6. '),' → logprob: -11.908927917480469
    7. '-' → logprob: -12.158927917480469
    8. ' +
' → logprob: -12.408927917480469
    9. '   ' → logprob: -13.533927917480469
    10. ' )' → logprob: -14.283927917480469

Token 221: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03805193677544594
    2. ' ' → logprob: -3.2880518436431885
    3. '   ' → logprob: -12.16305160522461
    4. ')' → logprob: -12.66305160522461
    5. '
' → logprob: -14.28805160522461
    6. '```' → logprob: -14.66305160522461
    7. '<|end|>' → logprob: -16.16305160522461
    8. '0' → logprob: -16.35055160522461
    9. '  ' → logprob: -16.35055160522461
    10. ' )' → logprob: -16.53805160522461

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. ' ' → logprob: -10.625025749206543
    3. ')' → logprob: -14.000025749206543
    4. '   ' → logprob: -16.500024795532227
    5. '```' → logprob: -17.125024795532227
    6. '
' → logprob: -17.500024795532227
    7. ')
' → logprob: -18.750024795532227
    8. '``' → logprob: -19.687524795532227
    9. '<|end|>' → logprob: -19.687524795532227
    10. '  ' → logprob: -19.875024795532227

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13427205383777618
    2. ')]' → logprob: -2.2592720985412598
    3. '       ' → logprob: -4.00927209854126
    4. '),' → logprob: -6.25927209854126
    5. ']' → logprob: -7.63427209854126
    6. ')
' → logprob: -7.88427209854126
    7. '   ' → logprob: -8.634271621704102
    8. ')])' → logprob: -10.759271621704102
    9. ' )' → logprob: -10.884271621704102
    10. ')],' → logprob: -10.884271621704102

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31438279151916504
    2. ']' → logprob: -1.314382791519165
    3. ')' → logprob: -6.939382553100586
    4. '   ' → logprob: -9.689382553100586
    5. ' ]' → logprob: -9.814382553100586
    6. ']
' → logprob: -10.939382553100586
    7. ',' → logprob: -12.189382553100586
    8. '<|end|>' → logprob: -12.564382553100586
    9. '])' → logprob: -13.314382553100586
    10. ')]' → logprob: -13.939382553100586

Token 225: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031116284430027008
    2. '       ' → logprob: -3.531116247177124
    3. ' ]' → logprob: -7.406116485595703
    4. ']
' (adapté à ' ]
') → logprob: -7.656116485595703
    5. ')' → logprob: -8.906116485595703
    6. '   ' → logprob: -9.156116485595703
    7. ']

' → logprob: -11.156116485595703
    8. '
' → logprob: -11.531116485595703
    9. '<|end|>' → logprob: -12.531116485595703
    10. '}' → logprob: -13.531116485595703

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00540616549551487
    2. 'result' → logprob: -5.630406379699707
    3. ' result' → logprob: -7.005406379699707
    4. 'neighbors' → logprob: -8.255406379699707
    5. 'return' → logprob: -8.380406379699707
    6. '   ' → logprob: -9.255406379699707
    7. ' valid' → logprob: -9.630406379699707
    8. '        
' → logprob: -9.880406379699707
    9. 'valid' → logprob: -10.005406379699707
    10. ' return' → logprob: -10.130406379699707

Token 227: ' valid' (ID: 4529)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6271330714225769
    2. 'return' → logprob: -1.3771331310272217
    3. 'valid' (adapté à ' valid') → logprob: -2.2521331310272217
    4. '       ' → logprob: -2.8771331310272217
    5. 'neighbors' → logprob: -3.0021331310272217
    6. 'results' → logprob: -6.502132892608643
    7. ' valid' → logprob: -8.1271333694458
    8. ' result' → logprob: -8.3771333694458
    9. ' return' → logprob: -8.8771333694458
    10. '        
' → logprob: -9.5021333694458

Token 228: '_neighbors' (ID: 142549)
  Prédit: '_tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -0.9599447250366211
    2. '_candidates' → logprob: -1.584944725036621
    3. '=' → logprob: -1.834944725036621
    4. ' =' → logprob: -1.834944725036621
    5. '_neighbors' → logprob: -3.084944725036621
    6. '_' → logprob: -3.584944725036621
    7. 's' → logprob: -4.584944725036621
    8. '_positions' → logprob: -5.584944725036621
    9. '_coords' → logprob: -5.834944725036621
    10. 'ed' → logprob: -6.834944725036621

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889584451913834
    2. '=' → logprob: -2.5788958072662354
    3. '=[]' → logprob: -12.328895568847656
    4. '=[]
' → logprob: -14.453895568847656
    5. '[]' → logprob: -14.828895568847656
    6. '=[' → logprob: -15.203895568847656
    7. '[' → logprob: -15.453895568847656
    8. ' =[' → logprob: -15.453895568847656
    9. ' ' → logprob: -16.703895568847656
    10. ':' → logprob: -16.953895568847656

Token 230: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.44949066638946533
    2. '[
' → logprob: -1.1994906663894653
    3. '[]' → logprob: -3.199490547180176
    4. '[' → logprob: -4.199490547180176
    5. '[t' → logprob: -5.449490547180176
    6. ' [
' → logprob: -8.699490547180176
    7. '[]

' → logprob: -8.949490547180176
    8. ' []
' → logprob: -8.949490547180176
    9. ' [' → logprob: -9.699490547180176
    10. '[(' → logprob: -10.199490547180176

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009451707825064659
    2. ' for' → logprob: -4.759451866149902
    3. 'for' → logprob: -7.134451866149902
    4. '<|end|>' → logprob: -11.634451866149902
    5. '        
' → logprob: -11.884451866149902
    6. '
' → logprob: -12.259451866149902
    7. '   ' → logprob: -12.259451866149902
    8. '	for' → logprob: -12.384451866149902
    9. ',' → logprob: -12.384451866149902
    10. '	' → logprob: -13.634451866149902

Token 232: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22782842814922333
    2. '       ' → logprob: -1.9778283834457397
    3. ' for' → logprob: -2.7278285026550293
    4. '	for' → logprob: -12.352828025817871
    5. '   ' → logprob: -13.227828025817871
    6. '
' → logprob: -13.477828025817871
    7. '        
' → logprob: -14.727828025817871
    8. '	' → logprob: -14.852828025817871
    9. ' ' → logprob: -15.727828025817871
    10. '```' → logprob: -16.602828979492188

Token 233: ' nx' (ID: 50118)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6429014801979065
    2. ' x' → logprob: -1.3929014205932617
    3. ' nx' → logprob: -1.6429014205932617
    4. 'nx' → logprob: -3.5179014205932617
    5. ' (' → logprob: -6.767901420593262
    6. '(nx' → logprob: -6.767901420593262
    7. '(x' → logprob: -8.142901420593262
    8. '   ' → logprob: -9.642901420593262
    9. '(' → logprob: -9.767901420593262
    10. ' ' → logprob: -10.767901420593262

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023810577113181353
    2. ',n' → logprob: -8.625238418579102
    3. ' ,' → logprob: -10.125238418579102
    4. ',
' → logprob: -11.875238418579102
    5. ',y' → logprob: -11.875238418579102
    6. 'n' → logprob: -13.500238418579102
    7. ',

' → logprob: -14.125238418579102
    8. ' in' → logprob: -14.250238418579102
    9. '_,' → logprob: -15.125238418579102
    10. '‌,' → logprob: -15.125238418579102

Token 235: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.014169150963425636
    2. ' ny' → logprob: -4.264169216156006
    3. 'nyi' → logprob: -12.639168739318848
    4. 'n' → logprob: -13.514168739318848
    5. '<|end|>' → logprob: -15.389168739318848
    6. 'nym' → logprob: -15.639168739318848
    7. 'nye' → logprob: -16.014169692993164
    8. '
' → logprob: -16.139169692993164
    9. 'Ny' → logprob: -16.514169692993164
    10. ' nny' → logprob: -16.639169692993164

Token 236: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008618827909231186
    2. 'in' → logprob: -4.7586188316345215
    3. ' ' → logprob: -12.758618354797363
    4. '	in' → logprob: -14.133618354797363
    5. ',' → logprob: -14.758618354797363
    6. 'import' → logprob: -16.00861930847168
    7. '   ' → logprob: -16.75861930847168
    8. ' ' → logprob: -17.00861930847168
    9. 'In' → logprob: -17.13361930847168
    10. '  ' → logprob: -17.50861930847168

Token 237: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018224159255623817
    2. ' candidates' → logprob: -4.018224239349365
    3. '[c' → logprob: -10.518223762512207
    4. '[(' → logprob: -11.268223762512207
    5. '   ' → logprob: -11.643223762512207
    6. '[' → logprob: -12.393223762512207
    7. ' ' → logprob: -12.518223762512207
    8. '[
' → logprob: -12.643223762512207
    9. 'candidate' → logprob: -12.893223762512207
    10. '	c' → logprob: -13.018223762512207

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04985123872756958
    2. ':
' → logprob: -3.049851179122925
    3. '       ' → logprob: -7.049851417541504
    4. ',' → logprob: -8.549851417541504
    5. '<|end|>' → logprob: -9.299851417541504
    6. '):
' → logprob: -9.924851417541504
    7. '<|end|>' → logprob: -11.299851417541504
    8. ' if' → logprob: -11.424851417541504
    9. '):' → logprob: -11.549851417541504
    10. '   ' → logprob: -12.049851417541504

Token 239: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026063041761517525
    2. '       ' → logprob: -3.7760629653930664
    3. '            
' → logprob: -7.401062965393066
    4. '
' → logprob: -7.526062965393066
    5. ' if' → logprob: -7.526062965393066
    6. '<|end|>' → logprob: -7.776062965393066
    7. ' 
' → logprob: -8.151062965393066
    8. '        
' → logprob: -8.901062965393066
    9. '    
' → logprob: -9.776062965393066
    10. '  
' → logprob: -9.901062965393066

Token 240: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21827153861522675
    2. '           ' → logprob: -1.7182714939117432
    3. 'if' (adapté à ' if') → logprob: -4.093271732330322
    4. '            
' → logprob: -11.093271255493164
    5. ' 
' → logprob: -11.593271255493164
    6. '            ' → logprob: -13.093271255493164
    7. '
' → logprob: -13.218271255493164
    8. '```' → logprob: -13.843271255493164
    9. '          ' → logprob: -14.468271255493164
    10. '       ' → logprob: -14.593271255493164

Token 241: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20144686102867126
    2. '0' → logprob: -1.7014468908309937
    3. ' nx' → logprob: -10.826446533203125
    4. ' ' → logprob: -12.451446533203125
    5. ' (' → logprob: -12.701446533203125
    6. 'nx' → logprob: -13.451446533203125
    7. '(nx' → logprob: -13.576446533203125
    8. ' self' → logprob: -13.826446533203125
    9. '   ' → logprob: -14.201446533203125
    10. ' ny' → logprob: -14.576446533203125

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '
' → logprob: -18.125003814697266
    4. '(' → logprob: -18.125003814697266
    5. '(nx' → logprob: -18.250003814697266
    6. 'nx' → logprob: -18.375003814697266
    7. '   ' → logprob: -18.875003814697266
    8. '           ' → logprob: -19.375003814697266
    9. '

' → logprob: -19.750003814697266
    10. '۰' → logprob: -19.875003814697266

Token 243: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01815790683031082
    2. '<=' → logprob: -4.018157958984375
    3. '<' → logprob: -12.393157958984375
    4. ' <' → logprob: -12.643157958984375
    5. ' ' → logprob: -14.643157958984375
    6. ')<=' → logprob: -17.768157958984375
    7. ' <=",' → logprob: -18.143157958984375
    8. '
' → logprob: -18.268157958984375
    9. ' ≤' → logprob: -18.393157958984375
    10. ',' → logprob: -18.393157958984375

Token 244: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.04871181771159172
    2. ' nx' → logprob: -3.0487117767333984
    3. 'ny' → logprob: -9.673711776733398
    4. '(nx' → logprob: -9.798711776733398
    5. ' ny' → logprob: -12.673711776733398
    6. '
' → logprob: -13.173711776733398
    7. 'n' → logprob: -15.048711776733398
    8. 'Nx' → logprob: -15.298711776733398
    9. 'x' → logprob: -15.798711776733398
    10. '```' → logprob: -16.2987117767334

Token 245: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.011334748938679695
    2. ' <' → logprob: -4.5113348960876465
    3. 'and' → logprob: -8.511334419250488
    4. ' and' → logprob: -9.386334419250488
    5. '<n' → logprob: -14.386334419250488
    6. '<len' → logprob: -14.886334419250488
    7. '<size' → logprob: -15.636334419250488
    8. '<
' → logprob: -15.761334419250488
    9. '[' → logprob: -16.011335372924805
    10. '           ' → logprob: -16.261335372924805

Token 246: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048054322600365
    2. ' self' → logprob: -4.511047840118408
    3. '
' → logprob: -16.38604736328125
    4. '           ' → logprob: -16.51104736328125
    5. '       ' → logprob: -16.76104736328125
    6. '(self' → logprob: -18.88604736328125
    7. '   ' → logprob: -19.13604736328125
    8. '=self' → logprob: -19.51104736328125
    9. '	self' → logprob: -19.63604736328125
    10. '               ' → logprob: -20.01104736328125

Token 247: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -1.7120533811976202e-05
    2. '.' → logprob: -11.500017166137695
    3. 'width' → logprob: -12.000017166137695
    4. ' .' → logprob: -14.375017166137695
    5. '.height' → logprob: -16.750017166137695
    6. ' width' → logprob: -17.750017166137695
    7. '   ' → logprob: -18.875017166137695
    8. '.w' → logprob: -19.000017166137695
    9. '	width' → logprob: -19.250017166137695
    10. '       ' → logprob: -20.000017166137695

Token 248: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01105442550033331
    2. 'and' → logprob: -4.511054515838623
    3. '           ' → logprob: -12.136054039001465
    4. ' ' → logprob: -13.886054039001465
    5. ')' → logprob: -15.261054039001465
    6. '       ' → logprob: -16.26105499267578
    7. ',' → logprob: -17.01105499267578
    8. '               ' → logprob: -17.38605499267578
    9. ' и' → logprob: -17.63605499267578
    10. '        ' → logprob: -17.63605499267578

Token 249: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759453773498535
    2. '0' → logprob: -0.8259453773498535
    3. ' ny' → logprob: -12.950944900512695
    4. '           ' → logprob: -13.575944900512695
    5. ' ' → logprob: -14.200944900512695
    6. 'ny' → logprob: -15.075944900512695
    7. '               ' → logprob: -15.200944900512695
    8. '            ' → logprob: -15.575944900512695
    9. '             ' → logprob: -15.700944900512695
    10. '   ' → logprob: -15.825944900512695

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00028374246903695166
    2. 'ny' → logprob: -8.750284194946289
    3. ' ' → logprob: -9.000284194946289
    4. ' ny' → logprob: -13.500284194946289
    5. '
' → logprob: -14.750284194946289
    6. '   ' → logprob: -16.75028419494629
    7. 'nx' → logprob: -17.87528419494629
    8. '

' → logprob: -18.12528419494629
    9. ' ' → logprob: -18.62528419494629
    10. '\
' → logprob: -18.62528419494629

Token 251: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1003190279006958
    2. '<' → logprob: -2.3503189086914062
    3. ' ' → logprob: -9.475318908691406
    4. ' <=' → logprob: -11.850318908691406
    5. '<n' → logprob: -12.600318908691406
    6. '<=' → logprob: -12.850318908691406
    7. '<|end|>' → logprob: -12.850318908691406
    8. '   ' → logprob: -13.350318908691406
    9. ' <
' → logprob: -13.475318908691406
    10. 'y' → logprob: -13.475318908691406

Token 252: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.1426837295293808
    2. ' ny' → logprob: -2.017683744430542
    3. '
' → logprob: -12.642683982849121
    4. 'self' → logprob: -12.767683982849121
    5. 'n' → logprob: -14.517683982849121
    6. 'y' → logprob: -14.767683982849121
    7. ' 
' → logprob: -15.517683982849121
    8. ' ' → logprob: -15.642683982849121
    9. ' self' → logprob: -15.767683982849121
    10. 'nyt' → logprob: -15.892683982849121

Token 253: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004622137639671564
    2. '<' → logprob: -5.379621982574463
    3. ' ' → logprob: -13.629622459411621
    4. ' <
' → logprob: -15.004622459411621
    5. '<|end|>' → logprob: -16.504621505737305
    6. 'self' → logprob: -16.629621505737305
    7. '<class' → logprob: -17.129621505737305
    8. '<int' → logprob: -17.129621505737305
    9. '<size' → logprob: -17.504621505737305
    10. '[' → logprob: -17.504621505737305

Token 254: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03364869952201843
    2. ' self' → logprob: -3.408648729324341
    3. '(self' → logprob: -13.783648490905762
    4. '=self' → logprob: -14.408648490905762
    5. '[self' → logprob: -15.033648490905762
    6. ' ' → logprob: -15.033648490905762
    7. '
' → logprob: -16.158649444580078
    8. '0' → logprob: -16.533649444580078
    9. '           ' → logprob: -16.533649444580078
    10. '       ' → logprob: -16.533649444580078

Token 255: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0052350712940096855
    2. 'height' → logprob: -5.255235195159912
    3. ' height' → logprob: -14.255234718322754
    4. '.' → logprob: -14.505234718322754
    5. ' .' → logprob: -16.63023567199707
    6. '.width' → logprob: -17.00523567199707
    7. '.he' → logprob: -18.13023567199707
    8. '	height' → logprob: -18.25523567199707
    9. 'self' → logprob: -18.50523567199707
    10. '_height' → logprob: -19.00523567199707

Token 256: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02574498951435089
    2. ':
' → logprob: -4.400744915008545
    3. ':' → logprob: -4.650744915008545
    4. 'and' → logprob: -6.275744915008545
    5. '           ' → logprob: -6.400744915008545
    6. '               ' → logprob: -10.650745391845703
    7. ',' → logprob: -11.525745391845703
    8. '       ' → logprob: -12.525745391845703
    9. '):
' → logprob: -12.775745391845703
    10. ' :
' → logprob: -12.775745391845703

Token 257: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004649661015719175
    2. ' and' → logprob: -6.129649639129639
    3. '           ' → logprob: -6.129649639129639
    4. ' valid' → logprob: -9.379650115966797
    5. '
' → logprob: -9.504650115966797
    6. ':
' → logprob: -10.379650115966797
    7. '                
' → logprob: -10.379650115966797
    8. 'valid' → logprob: -11.254650115966797
    9. '                   ' → logprob: -11.629650115966797
    10. ',' → logprob: -11.879650115966797

Token 258: ' neighbor' (ID: 13034)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.7410995364189148
    2. ' valid' → logprob: -0.7410995364189148
    3. '               ' → logprob: -3.3660995960235596
    4. '
' → logprob: -4.9910993576049805
    5. '                   ' → logprob: -5.6160993576049805
    6. '           ' → logprob: -6.6160993576049805
    7. '                
' → logprob: -8.86609935760498
    8. ' if' → logprob: -8.99109935760498
    9. '                    
' → logprob: -9.74109935760498
    10. ' 
' → logprob: -9.86609935760498

Token 259: '_tile' (ID: 70473)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011441766284406185
    2. '=' → logprob: -4.761441707611084
    3. 's' → logprob: -6.261441707611084
    4. '_' → logprob: -7.886441707611084
    5. 'valid' → logprob: -8.136442184448242
    6. '_tile' → logprob: -9.136442184448242
    7. '_valid' → logprob: -9.511442184448242
    8. 'tile' → logprob: -10.886442184448242
    9. '   ' → logprob: -11.761442184448242
    10. ' =
' → logprob: -12.136442184448242

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01416398212313652
    2. '=' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.014163970947266
    4. 's' → logprob: -16.389163970947266
    5. ')' → logprob: -17.639163970947266
    6. '.append' → logprob: -17.639163970947266
    7. ' =
' → logprob: -17.889163970947266
    8. '=self' → logprob: -18.264163970947266
    9. ':' → logprob: -18.514163970947266
    10. '.' → logprob: -18.639163970947266

Token 261: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4740813970565796
    2. ' self' → logprob: -0.9740813970565796
    3. '               ' → logprob: -12.724081039428711
    4. '(self' → logprob: -14.599081039428711
    5. '                   ' → logprob: -14.724081039428711
    6. '=self' → logprob: -15.974081039428711
    7. '                ' → logprob: -16.47408103942871
    8. '[self' → logprob: -16.84908103942871
    9. '	self' → logprob: -16.97408103942871
    10. '```' → logprob: -16.97408103942871

Token 262: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.007819194346666336
    2. '.' → logprob: -5.382819175720215
    3. '.tiles' → logprob: -5.757819175720215
    4. ' .' → logprob: -10.507819175720215
    5. '.grid' → logprob: -13.007819175720215
    6. '.g' → logprob: -13.382819175720215
    7. '.
' → logprob: -13.882819175720215
    8. 'get' → logprob: -14.257819175720215
    9. '.tokens' → logprob: -14.257819175720215
    10. '.ge' → logprob: -14.507819175720215

Token 263: '_tile' (ID: 70473)
  Prédit: '_tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tile' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -12.000014305114746
    3. '_token' → logprob: -12.250014305114746
    4. '_tiles' → logprob: -13.500014305114746
    5. '_t' → logprob: -14.375014305114746
    6. ' _' → logprob: -15.125014305114746
    7. '```' → logprob: -15.250014305114746
    8. '_TILE' → logprob: -16.00001335144043
    9. 'tile' → logprob: -16.37501335144043
    10. '_ticket' → logprob: -16.75001335144043

Token 264: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.023321183398365974
    2. '(' → logprob: -3.7733211517333984
    3. '(
' → logprob: -9.523321151733398
    4. ' (' → logprob: -13.898321151733398
    5. '(n' → logprob: -14.023321151733398
    6. '(

' → logprob: -14.648321151733398
    7. 'nx' → logprob: -16.3983211517334
    8. '(x' → logprob: -16.6483211517334
    9. '(nn' → logprob: -16.7733211517334
    10. '(
' → logprob: -17.2733211517334

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001366744691040367
    2. ' ,' → logprob: -9.000136375427246
    3. ',y' → logprob: -12.000136375427246
    4. ',
' → logprob: -12.500136375427246
    5. ',n' → logprob: -13.125136375427246
    6. '<|end|>' → logprob: -14.375136375427246
    7. '‌,' → logprob: -15.250136375427246
    8. ',

' → logprob: -16.375137329101562
    9. '```' → logprob: -16.875137329101562
    10. '`,' → logprob: -17.125137329101562

Token 266: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.061970487236976624
    2. ' ny' → logprob: -2.8119704723358154
    3. '
' → logprob: -13.811970710754395
    4. 'nyi' → logprob: -14.561970710754395
    5. '   ' → logprob: -15.061970710754395
    6. '    ' → logprob: -15.186970710754395
    7. ' ' → logprob: -15.186970710754395
    8. 'nyt' → logprob: -16.186969757080078
    9. 'n' → logprob: -16.561969757080078
    10. '     ' → logprob: -17.061969757080078

Token 267: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011078352108597755
    2. ')' → logprob: -4.511078357696533
    3. ')
' → logprob: -10.511077880859375
    4. '               ' → logprob: -13.136077880859375
    5. ')

' → logprob: -14.261077880859375
    6. '           ' → logprob: -14.511077880859375
    7. ' )
' → logprob: -16.261077880859375
    8. '                   ' → logprob: -17.261077880859375
    9. '       ' → logprob: -17.386077880859375
    10. ')`
' → logprob: -17.761077880859375

Token 268: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014348741387948394
    2. '           ' → logprob: -6.751434803009033
    3. '                
' → logprob: -8.376435279846191
    4. '            
' → logprob: -11.501435279846191
    5. '<|end|>' → logprob: -12.251435279846191
    6. '                   ' → logprob: -12.501435279846191
    7. '              ' → logprob: -12.751435279846191
    8. '                ' → logprob: -12.876435279846191
    9. ' if' → logprob: -13.001435279846191
    10. '       ' → logprob: -13.626435279846191

Token 269: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2899686098098755
    2. ' if' → logprob: -1.5399686098098755
    3. '               ' → logprob: -3.289968490600586
    4. '           ' → logprob: -10.039968490600586
    5. 'valid' → logprob: -11.164968490600586
    6. '
' → logprob: -11.914968490600586
    7. '                
' → logprob: -12.914968490600586
    8. ' valid' → logprob: -13.039968490600586
    9. '	if' → logprob: -15.539968490600586
    10. '```' → logprob: -15.789968490600586

Token 270: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.359600692987442
    2. 'not' → logprob: -1.9846006631851196
    3. ' neighbor' → logprob: -2.234600782394409
    4. ' not' → logprob: -2.859600782394409
    5. '   ' → logprob: -10.047101020812988
    6. 'ne' → logprob: -10.109601020812988
    7. ' ' → logprob: -10.422101020812988
    8. '	not' → logprob: -10.734601020812988
    9. '
' → logprob: -10.859601020812988
    10. 'n' → logprob: -11.547101020812988

Token 271: '_tile' (ID: 70473)
  Prédit: '_tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tile' → logprob: -1.9027791495318525e-05
    2. '_.' → logprob: -12.250019073486328
    3. '_' → logprob: -13.000019073486328
    4. 'tile' → logprob: -13.000019073486328
    5. '.tile' → logprob: -13.125019073486328
    6. '_t' → logprob: -13.250019073486328
    7. '.is' → logprob: -13.750019073486328
    8. '_neighbor' → logprob: -13.750019073486328
    9. '
' → logprob: -14.500019073486328
    10. '._' → logprob: -14.750019073486328

Token 272: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0008791850414127111
    2. '.' → logprob: -7.125879287719727
    3. '.symbol' → logprob: -9.625879287719727
    4. ' .' → logprob: -13.250879287719727
    5. 'is' → logprob: -13.375879287719727
    6. '.not' → logprob: -13.500879287719727
    7. '.isnan' → logprob: -13.750879287719727
    8. ').' → logprob: -14.250879287719727
    9. ' and' → logprob: -15.125879287719727
    10. '.has' → logprob: -15.375879287719727

Token 273: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -1.1472419600977446e-06
    2. 'black' → logprob: -14.250000953674316
    3. '_white' → logprob: -15.250000953674316
    4. '_start' → logprob: -15.750000953674316
    5. '_' → logprob: -16.750001907348633
    6. ' black' → logprob: -17.000001907348633
    7. '_blank' → logprob: -17.125001907348633
    8. '_b' → logprob: -18.500001907348633
    9. '_bl' → logprob: -18.625001907348633
    10. 'Black' → logprob: -19.125001907348633

Token 274: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08514463901519775
    2. '():
' → logprob: -2.585144519805908
    3. '()' → logprob: -5.085144519805908
    4. '()):
' → logprob: -10.460144996643066
    5. ' ():' → logprob: -12.085144996643066
    6. '():
' → logprob: -12.210144996643066
    7. '):' → logprob: -12.585144996643066
    8. '():

' → logprob: -13.210144996643066
    9. '()
' → logprob: -13.960144996643066
    10. '(' → logprob: -14.585144996643066

Token 275: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012272403575479984
    2. ':
' → logprob: -4.512272357940674
    3. '               ' → logprob: -7.637272357940674
    4. ':' → logprob: -8.137272834777832
    5. '):
' → logprob: -9.012272834777832
    6. ',' → logprob: -9.012272834777832
    7. '
' → logprob: -9.762272834777832
    8. '                       ' → logprob: -9.762272834777832
    9. ',
' → logprob: -10.512272834777832
    10. ' and' → logprob: -10.887272834777832

Token 276: ' valid' (ID: 4529)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03300923854112625
    2. '
' → logprob: -4.533009052276611
    3. ' valid' → logprob: -4.658009052276611
    4. '                       ' → logprob: -4.908009052276611
    5. 'valid' (adapté à ' valid') → logprob: -5.408009052276611
    6. '               ' → logprob: -8.90800952911377
    7. '(valid' → logprob: -9.28300952911377
    8. '                    
' → logprob: -9.40800952911377
    9. '           ' → logprob: -11.78300952911377
    10. ':
' → logprob: -12.03300952911377

Token 277: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -3.173704271830502e-06
    2. 'neighbors' → logprob: -12.87500286102295
    3. '_' → logprob: -15.37500286102295
    4. '_ne' → logprob: -16.625003814697266
    5. '_neighbor' → logprob: -16.625003814697266
    6. '```' → logprob: -17.250003814697266
    7. '_
' → logprob: -17.375003814697266
    8. 'Neighbors' → logprob: -17.750003814697266
    9. '_tiles' → logprob: -18.375003814697266
    10. '_n' → logprob: -19.000003814697266

Token 278: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001512004528194666
    2. '.' → logprob: -6.501512050628662
    3. ' .' → logprob: -11.751511573791504
    4. '               ' → logprob: -14.001511573791504
    5. '.add' → logprob: -15.001511573791504
    6. '           ' → logprob: -15.626511573791504
    7. '.
' → logprob: -15.626511573791504
    8. '.extend' → logprob: -16.12651252746582
    9. '                   ' → logprob: -16.75151252746582
    10. 'append' → logprob: -16.87651252746582

Token 279: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.875003814697266
    3. 'neighbor' → logprob: -14.375003814697266
    4. '(
' → logprob: -15.000003814697266
    5. ' (' → logprob: -16.125003814697266
    6. '(n' → logprob: -18.500003814697266
    7. ' neighbor' → logprob: -19.250003814697266
    8. 'ne' → logprob: -19.875003814697266
    9. '(

' → logprob: -20.500003814697266
    10. '(friend' → logprob: -20.875003814697266

Token 280: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.035338208079338074
    2. 'gh' → logprob: -3.7853381633758545
    3. 'bor' → logprob: -5.160338401794434
    4. 'or' → logprob: -5.160338401794434
    5. 'g' → logprob: -8.910338401794434
    6. 'ght' → logprob: -9.410338401794434
    7. 'igh' → logprob: -9.910338401794434
    8. 'r' → logprob: -10.035338401794434
    9. 'ight' → logprob: -10.285338401794434
    10. 'ar' → logprob: -10.410338401794434

Token 281: '_tile' (ID: 70473)
  Prédit: '_tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tile' → logprob: -0.0002314303710591048
    2. 'tile' → logprob: -8.625231742858887
    3. '_' → logprob: -12.000231742858887
    4. 'or' → logprob: -12.000231742858887
    5. 'Tile' → logprob: -12.000231742858887
    6. ')' → logprob: -12.500231742858887
    7. '_neighbor' → logprob: -12.875231742858887
    8. '_tiles' → logprob: -13.250231742858887
    9. '```' → logprob: -13.250231742858887
    10. 'e' → logprob: -13.250231742858887

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01899760402739048
    2. ')
' → logprob: -4.268997669219971
    3. '       ' → logprob: -5.393997669219971
    4. ')return' → logprob: -8.893997192382812
    5. '
' → logprob: -9.018997192382812
    6. '<|end|>' → logprob: -11.768997192382812
    7. '               ' → logprob: -13.393997192382812
    8. 'return' → logprob: -13.518997192382812
    9. '.' → logprob: -13.893997192382812
    10. ')
' → logprob: -14.018997192382812

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014025058771949261
    2. 'return' → logprob: -9.625140190124512
    3. '
' → logprob: -9.875140190124512
    4. ' return' → logprob: -11.250140190124512
    5. '	' → logprob: -12.250140190124512
    6. '        
' → logprob: -13.750140190124512
    7. '	return' → logprob: -14.000140190124512
    8. '```' → logprob: -14.375140190124512
    9. '   ' → logprob: -14.750140190124512
    10. '      ' → logprob: -14.875140190124512

Token 284: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2040555775165558
    2. 'return' (adapté à ' return') → logprob: -1.7040555477142334
    3. ' return' → logprob: -6.2040557861328125
    4. '   ' → logprob: -7.8290557861328125
    5. '
' → logprob: -8.579055786132812
    6. '	return' → logprob: -11.079055786132812
    7. '        
' → logprob: -11.829055786132812
    8. '```' → logprob: -13.329055786132812
    9. '	' → logprob: -13.579055786132812
    10. '    
' → logprob: -13.704055786132812

Token 285: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.20141352713108063
    2. 'valid' → logprob: -1.7014135122299194
    3. '(valid' → logprob: -15.32641315460205
    4. '	valid' → logprob: -16.451414108276367
    5. 'Valid' → logprob: -18.576414108276367
    6. '.valid' → logprob: -18.826414108276367
    7. '_valid' → logprob: -18.826414108276367
    8. ' ' → logprob: -24.076414108276367
    9. '-valid' → logprob: -24.076414108276367
    10. '```' → logprob: -24.076414108276367

Token 286: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -9.849109119386412e-06
    2. '_' → logprob: -12.375009536743164
    3. '_valid' → logprob: -12.500009536743164
    4. 'neighbors' → logprob: -14.375009536743164
    5. '_helpers' → logprob: -14.750009536743164
    6. '_candidates' → logprob: -15.750009536743164
    7. '_
' → logprob: -15.875009536743164
    8. ' _' → logprob: -16.250009536743164
    9. '```' → logprob: -16.750009536743164
    10. '_neighbor' → logprob: -16.875009536743164

Token 287: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7809720039367676
    2. '
' → logprob: -1.2809720039367676
    3. 'class' → logprob: -1.6559720039367676
    4. '<|end|>' → logprob: -3.1559720039367676
    5. 'def' → logprob: -3.6559720039367676
    6. '    
' → logprob: -6.530972003936768
    7. '```' → logprob: -6.780972003936768
    8. '<|end|>' → logprob: -7.530972003936768
    9. 'from' → logprob: -7.655972003936768
    10. ' class' → logprob: -8.03097152709961

Token 289: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006310554221272469
    2. '   ' → logprob: -5.38131046295166
    3. 'class' → logprob: -7.00631046295166
    4. 'from' → logprob: -7.50631046295166
    5. ' def' → logprob: -9.13131046295166
    6. '```' → logprob: -10.50631046295166
    7. 'import' → logprob: -10.63131046295166
    8. '
' → logprob: -11.13131046295166
    9. ')' → logprob: -11.13131046295166
    10. '	def' → logprob: -11.63131046295166

Token 290: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.6355251669883728
    2. 'find' → logprob: -0.7605251669883728
    3. 'start' → logprob: -6.260525226593018
    4. ' start' → logprob: -7.510525226593018
    5. '_find' → logprob: -8.88552474975586
    6. 'get' → logprob: -9.63552474975586
    7. 'def' → logprob: -9.76052474975586
    8. ' get' → logprob: -9.88552474975586
    9. '__' → logprob: -9.88552474975586
    10. ' ' → logprob: -10.51052474975586

Token 291: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.14335079491138458
    2. '_' → logprob: -2.018350839614868
    3. '_st' → logprob: -8.643350601196289
    4. 'start' → logprob: -9.018350601196289
    5. '_all' → logprob: -9.143350601196289
    6. '_tile' → logprob: -9.643350601196289
    7. '@' → logprob: -10.018350601196289
    8. '_path' → logprob: -10.393350601196289
    9. 's' → logprob: -10.518350601196289
    10. '_(' → logprob: -11.018350601196289

Token 292: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001088662538677454
    2. '(' → logprob: -6.876088619232178
    3. '_tile' → logprob: -10.626089096069336
    4. 'self' → logprob: -11.376089096069336
    5. '()' → logprob: -11.751089096069336
    6. '_' → logprob: -12.751089096069336
    7. '(
' → logprob: -13.251089096069336
    8. '_point' → logprob: -13.501089096069336
    9. '_position' → logprob: -13.501089096069336
    10. '(s' → logprob: -13.626089096069336

Token 293: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005830679554492235
    2. ')' → logprob: -5.505830764770508
    3. 'self' → logprob: -6.505830764770508
    4. '):
' → logprob: -9.130830764770508
    5. '):' → logprob: -9.880830764770508
    6. '(' → logprob: -10.505830764770508
    7. '   ' → logprob: -11.005830764770508
    8. ' self' → logprob: -11.005830764770508
    9. '
' → logprob: -11.630830764770508
    10. ' (' → logprob: -11.755830764770508

Token 294: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00040767391328699887
    2. '(' → logprob: -8.625407218933105
    3. 'self' → logprob: -9.375407218933105
    4. '   ' → logprob: -9.625407218933105
    5. '       ' → logprob: -9.875407218933105
    6. ' self' → logprob: -11.250407218933105
    7. '(
' → logprob: -11.875407218933105
    8. ':' → logprob: -12.750407218933105
    9. ' (' → logprob: -14.375407218933105
    10. ':
' → logprob: -14.750407218933105

Token 295: ' Tile' (ID: 35295)
  Prédit: ' Tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tile' → logprob: -0.6962785720825195
    2. 'Tile' → logprob: -1.0712785720825195
    3. 'Optional' → logprob: -2.0712785720825195
    4. ' Optional' → logprob: -3.5712785720825195
    5. 'None' → logprob: -6.0712785720825195
    6. ' None' → logprob: -6.5712785720825195
    7. '   ' → logprob: -8.19627857208252
    8. ' tuple' → logprob: -8.69627857208252
    9. '(Tile' → logprob: -9.07127857208252
    10. 'tuple' → logprob: -9.19627857208252

Token 296: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8516083359718323
    2. '(self' → logprob: -0.9766083359718323
    3. '(' → logprob: -2.3516082763671875
    4. ':
' → logprob: -3.1016082763671875
    5. '   ' → logprob: -3.6016082763671875
    6. ':' → logprob: -4.1016082763671875
    7. '(
' → logprob: -4.4766082763671875
    8. ')' → logprob: -8.726608276367188
    9. 'self' → logprob: -8.851608276367188
    10. ' for' → logprob: -9.351608276367188

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23430855572223663
    2. ' for' → logprob: -1.6093086004257202
    3. 'for' → logprob: -4.73430871963501
    4. '   ' → logprob: -10.109308242797852
    5. '```' → logprob: -11.609308242797852
    6. '
' → logprob: -11.734308242797852
    7. '           ' → logprob: -12.734308242797852
    8. '	for' → logprob: -13.234308242797852
    9. '        
' → logprob: -13.609308242797852
    10. '    
' → logprob: -14.109308242797852

Token 298: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.012072557583451271
    2. ' for' → logprob: -4.512072563171387
    3. '       ' → logprob: -6.887072563171387
    4. '   ' → logprob: -12.762072563171387
    5. '	for' → logprob: -15.262072563171387
    6. ' ' → logprob: -16.13707160949707
    7. '```' → logprob: -16.13707160949707
    8. '
' → logprob: -17.76207160949707
    9. '``' → logprob: -17.88707160949707
    10. '           ' → logprob: -18.88707160949707

Token 299: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.126996248960495
    2. ' y' → logprob: -2.1269962787628174
    3. 'row' → logprob: -10.001996040344238
    4. ' row' → logprob: -11.501996040344238
    5. '   ' → logprob: -11.751996040344238
    6. '	y' → logprob: -13.126996040344238
    7. ' ' → logprob: -14.001996040344238
    8. '```' → logprob: -14.376996040344238
    9. '
' → logprob: -15.126996040344238
    10. 'line' → logprob: -15.126996040344238

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021866646129637957
    2. 'in' → logprob: -6.1271867752075195
    3. '   ' → logprob: -14.62718677520752
    4. ' ' → logprob: -14.87718677520752
    5. ',' → logprob: -15.12718677520752
    6. 'range' → logprob: -16.377185821533203
    7. '<|end|>' → logprob: -16.502185821533203
    8. '	in' → logprob: -16.877185821533203
    9. '
' → logprob: -17.002185821533203
    10. 'import' → logprob: -17.002185821533203

Token 301: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0485873706638813
    2. ' range' → logprob: -3.0485873222351074
    3. '   ' → logprob: -17.548587799072266
    4. '	range' → logprob: -17.798587799072266
    5. '(range' → logprob: -18.798587799072266
    6. '
' → logprob: -18.923587799072266
    7. ' ' → logprob: -19.173587799072266
    8. '0' → logprob: -20.423587799072266
    9. '  ' → logprob: -20.673587799072266
    10. '```' → logprob: -21.798587799072266

Token 302: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024963486939668655
    2. 'self' → logprob: -6.002496242523193
    3. '(' → logprob: -11.002496719360352
    4. ' self' → logprob: -12.752496719360352
    5. '(
' → logprob: -14.127496719360352
    6. '(len' → logprob: -15.752496719360352
    7. '   ' → logprob: -16.87749671936035
    8. '0' → logprob: -17.25249671936035
    9. '       ' → logprob: -17.87749671936035
    10. '	self' → logprob: -18.62749671936035

Token 303: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0036862941924482584
    2. 'height' → logprob: -5.628686428070068
    3. 'self' → logprob: -9.50368595123291
    4. '.' → logprob: -12.37868595123291
    5. '   ' → logprob: -12.50368595123291
    6. ' height' → logprob: -13.25368595123291
    7. '.width' → logprob: -14.75368595123291
    8. ' .' → logprob: -15.12868595123291
    9. '       ' → logprob: -15.50368595123291
    10. ')' → logprob: -15.62868595123291

Token 304: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06199951097369194
    2. '):' → logprob: -2.811999559402466
    3. '   ' → logprob: -11.311999320983887
    4. '):
' → logprob: -11.561999320983887
    5. ':' → logprob: -12.811999320983887
    6. ':
' → logprob: -12.936999320983887
    7. '       ' → logprob: -13.561999320983887
    8. ')' → logprob: -13.686999320983887
    9. '):

' → logprob: -13.811999320983887
    10. ' ):
' → logprob: -13.811999320983887

Token 305: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4732295870780945
    2. '       ' → logprob: -1.0982296466827393
    3. '           ' → logprob: -3.2232296466827393
    4. '   ' → logprob: -6.09822940826416
    5. 'for' → logprob: -7.34822940826416
    6. '<|end|>' → logprob: -7.47322940826416
    7. ' ' → logprob: -9.34822940826416
    8. ',' → logprob: -10.34822940826416
    9. '    ' → logprob: -10.59822940826416
    10. '        ' → logprob: -10.72322940826416

Token 306: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07913663983345032
    2. ' for' → logprob: -2.579136610031128
    3. '   ' → logprob: -8.329136848449707
    4. '           ' → logprob: -12.704136848449707
    5. '       ' → logprob: -13.204136848449707
    6. '	for' → logprob: -15.079136848449707
    7. ' ' → logprob: -15.704136848449707
    8. '```' → logprob: -17.07913589477539
    9. 'x' → logprob: -17.82913589477539
    10. '
' → logprob: -18.45413589477539

Token 307: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0788901224732399
    2. ' x' → logprob: -2.578890085220337
    3. '   ' → logprob: -15.453889846801758
    4. '	x' → logprob: -16.203889846801758
    5. ' ' → logprob: -16.953889846801758
    6. '```' → logprob: -17.828889846801758
    7. ')x' → logprob: -18.328889846801758
    8. '0' → logprob: -18.703889846801758
    9. ',x' → logprob: -19.203889846801758
    10. '{x' → logprob: -19.328889846801758

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006717743817716837
    2. 'in' → logprob: -5.006717681884766
    3. '<|end|>' → logprob: -13.756717681884766
    4. ' ' → logprob: -14.631717681884766
    5. 'import' → logprob: -15.756717681884766
    6. '   ' → logprob: -15.881717681884766
    7. '```' → logprob: -16.256717681884766
    8. '0' → logprob: -16.506717681884766
    9. '    ' → logprob: -16.506717681884766
    10. 'In' → logprob: -16.631717681884766

Token 309: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07890631258487701
    2. ' range' → logprob: -2.578906297683716
    3. 'self' → logprob: -11.078906059265137
    4. '(range' → logprob: -14.328906059265137
    5. ' self' → logprob: -14.828906059265137
    6. '_range' → logprob: -17.578907012939453
    7. ' in' → logprob: -17.828907012939453
    8. '0' → logprob: -18.078907012939453
    9. '	range' → logprob: -18.203907012939453
    10. '.range' → logprob: -18.453907012939453

Token 310: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.85104202805087e-05
    2. '(' → logprob: -10.000078201293945
    3. '(range' → logprob: -10.750078201293945
    4. 'range' → logprob: -12.000078201293945
    5. 'self' → logprob: -12.750078201293945
    6. '(s' → logprob: -13.000078201293945
    7. ' range' → logprob: -15.875078201293945
    8. '(
' → logprob: -16.250078201293945
    9. ' (' → logprob: -16.750078201293945
    10. ' self' → logprob: -18.250078201293945

Token 311: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.00010282796574756503
    2. 'width' → logprob: -9.250102996826172
    3. '.' → logprob: -12.250102996826172
    4. '.height' → logprob: -14.500102996826172
    5. '   ' → logprob: -14.625102996826172
    6. ' .' → logprob: -14.875102996826172
    7. ' width' → logprob: -14.875102996826172
    8. ')' → logprob: -16.625102996826172
    9. '       ' → logprob: -17.000102996826172
    10. '	width' → logprob: -18.250102996826172

Token 312: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761734247207642
    2. '):' → logprob: -0.8261734247207642
    3. '       ' → logprob: -9.076173782348633
    4. ':' → logprob: -10.451173782348633
    5. '           ' → logprob: -10.576173782348633
    6. '):
' → logprob: -10.701173782348633
    7. '):

' → logprob: -10.951173782348633
    8. ')' → logprob: -11.576173782348633
    9. '   ' → logprob: -12.576173782348633
    10. ':
' → logprob: -12.701173782348633

Token 313: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5333057641983032
    2. '               ' → logprob: -0.9083057641983032
    3. ',' → logprob: -5.658305644989014
    4. ' if' → logprob: -6.033305644989014
    5. ':' → logprob: -6.533305644989014
    6. ':
' → logprob: -6.908305644989014
    7. ' tile' → logprob: -8.408306121826172
    8. '<|end|>' → logprob: -8.408306121826172
    9. '_tile' → logprob: -8.533306121826172
    10. '
' → logprob: -8.658306121826172

Token 314: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.21511411666870117
    2. 'tile' (adapté à ' tile') → logprob: -2.590114116668701
    3. ' if' → logprob: -2.715114116668701
    4. '                   ' → logprob: -3.090114116668701
    5. '               ' → logprob: -5.340114116668701
    6. 'if' → logprob: -6.465114116668701
    7. '           ' → logprob: -8.46511459350586
    8. '
' → logprob: -9.71511459350586
    9. '   ' → logprob: -9.96511459350586
    10. '(tile' → logprob: -10.09011459350586

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889816164970398
    2. '=' → logprob: -2.5788981914520264
    3. ' ' → logprob: -12.328898429870605
    4. ')' → logprob: -13.078898429870605
    5. '=self' → logprob: -14.703898429870605
    6. ' =
' → logprob: -14.953898429870605
    7. '        ' → logprob: -15.703898429870605
    8. '           ' → logprob: -15.828898429870605
    9. '    ' → logprob: -16.07889747619629
    10. '   ' → logprob: -16.07889747619629

Token 316: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931506395339966
    2. 'self' → logprob: -0.6931506395339966
    3. '(self' → logprob: -13.443150520324707
    4. '	self' → logprob: -13.818150520324707
    5. '               ' → logprob: -15.443150520324707
    6. '=self' → logprob: -15.568150520324707
    7. '[self' → logprob: -15.693150520324707
    8. '<|end|>' → logprob: -16.318151473999023
    9. '*self' → logprob: -16.693151473999023
    10. '```' → logprob: -16.818151473999023

Token 317: '.tiles' (ID: 144726)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0057475874200463295
    2. '.tiles' → logprob: -5.5057477951049805
    3. 'get' → logprob: -6.5057477951049805
    4. 'tiles' → logprob: -8.88074779510498
    5. '.' → logprob: -10.50574779510498
    6. ' .' → logprob: -13.50574779510498
    7. ' get' → logprob: -13.75574779510498
    8. ' tiles' → logprob: -13.88074779510498
    9. '   ' → logprob: -13.88074779510498
    10. '.grid' → logprob: -15.13074779510498

Token 318: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.3782830137643032e-05
    2. 'y' → logprob: -11.25001335144043
    3. '[' → logprob: -14.50001335144043
    4. '       ' → logprob: -16.50001335144043
    5. '           ' → logprob: -16.62501335144043
    6. ' [' → logprob: -17.50001335144043
    7. '	y' → logprob: -17.50001335144043
    8. '   ' → logprob: -17.75001335144043
    9. '[Y' → logprob: -17.75001335144043
    10. '[user' → logprob: -18.12501335144043

Token 319: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0486491397023201
    2. '[x' → logprob: -3.0486490726470947
    3. '[' → logprob: -10.798648834228516
    4. ']' → logprob: -11.423648834228516
    5. ')[' → logprob: -11.548648834228516
    6. '"][' → logprob: -12.173648834228516
    7. ' ][' → logprob: -12.298648834228516
    8. '}[' → logprob: -12.798648834228516
    9. ' [' → logprob: -12.798648834228516
    10. '[
' → logprob: -13.798648834228516

Token 320: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.981667537620524e-06
    2. ' x' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -17.125001907348633
    4. '	x' → logprob: -17.875001907348633
    5. '[x' → logprob: -18.875001907348633
    6. ')x' → logprob: -19.125001907348633
    7. '<x' → logprob: -19.500001907348633
    8. '"x' → logprob: -19.750001907348633
    9. '   ' → logprob: -19.875001907348633
    10. '```' → logprob: -20.000001907348633

Token 321: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.29154831171035767
    2. '               ' → logprob: -1.916548252105713
    3. ')' → logprob: -2.291548252105713
    4. '           ' → logprob: -5.791548252105713
    5. '                   ' → logprob: -7.291548252105713
    6. '
' → logprob: -7.416548252105713
    7. '):
' → logprob: -9.791548728942871
    8. ')
' → logprob: -9.916548728942871
    9. '       ' → logprob: -10.416548728942871
    10. '                
' → logprob: -10.416548728942871

Token 322: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015169414109550416
    2. 'if' → logprob: -10.000151634216309
    3. ' if' → logprob: -10.000151634216309
    4. '           ' → logprob: -10.125151634216309
    5. '                   ' → logprob: -11.250151634216309
    6. '       ' → logprob: -13.000151634216309
    7. '                
' → logprob: -13.625151634216309
    8. '```' → logprob: -13.750151634216309
    9. '              ' → logprob: -14.125151634216309
    10. 'If' → logprob: -14.250151634216309

Token 323: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0033415714278817177
    2. ' if' → logprob: -6.5033416748046875
    3. '               ' → logprob: -6.8783416748046875
    4. '           ' → logprob: -7.1283416748046875
    5. '                   ' → logprob: -12.378341674804688
    6. '   ' → logprob: -14.628341674804688
    7. '       ' → logprob: -14.753341674804688
    8. '	if' → logprob: -15.128341674804688
    9. 'If' → logprob: -15.753341674804688
    10. '
' → logprob: -17.003341674804688

Token 324: ' tile' (ID: 17664)
  Prédit: 'tile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tile' → logprob: -0.3868822753429413
    2. ' tile' → logprob: -1.1368823051452637
    3. '(tile' → logprob: -11.761881828308105
    4. '.tile' → logprob: -13.386881828308105
    5. '               ' → logprob: -14.011881828308105
    6. 'ticket' → logprob: -15.136881828308105
    7. 't' → logprob: -15.511881828308105
    8. 'token' → logprob: -15.761881828308105
    9. '           ' → logprob: -16.261882781982422
    10. '_tile' → logprob: -16.261882781982422

Token 325: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00043126524542458355
    2. '.' → logprob: -7.750431060791016
    3. ' .' → logprob: -15.750431060791016
    4. 'is' → logprob: -15.875431060791016
    5. '.has' → logprob: -16.625431060791016
    6. ').' → logprob: -16.875431060791016
    7. '.isnan' → logprob: -16.875431060791016
    8. '   ' → logprob: -17.125431060791016
    9. '.startswith' → logprob: -17.375431060791016
    10. '       ' → logprob: -18.250431060791016

Token 326: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.7372048862162046e-05
    2. 'start' → logprob: -10.625027656555176
    3. '_black' → logprob: -12.875027656555176
    4. '_' → logprob: -15.750027656555176
    5. 'Start' → logprob: -16.75002670288086
    6. ''_' → logprob: -17.12502670288086
    7. '_s' → logprob: -17.37502670288086
    8. '"_' → logprob: -17.50002670288086
    9. '_star' → logprob: -17.75002670288086
    10. '_START' → logprob: -17.87502670288086

Token 327: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007156249135732651
    2. '():
' → logprob: -5.2571563720703125
    3. '()' → logprob: -6.2571563720703125
    4. '():
' → logprob: -13.007156372070312
    5. '()):
' → logprob: -14.507156372070312
    6. '():

' → logprob: -14.757156372070312
    7. ' ():' → logprob: -15.007156372070312
    8. '()==' → logprob: -16.257156372070312
    9. '(' → logprob: -16.382156372070312
    10. '()>' → logprob: -16.882156372070312

Token 328: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0028395876288414
    2. '                       ' → logprob: -6.2528395652771
    3. ' return' → logprob: -8.002840042114258
    4. '               ' → logprob: -8.502840042114258
    5. 'return' → logprob: -8.752840042114258
    6. '                    
' → logprob: -9.252840042114258
    7. '                  ' → logprob: -10.752840042114258
    8. '           ' → logprob: -10.752840042114258
    9. '
' → logprob: -10.877840042114258
    10. '       ' → logprob: -11.127840042114258

Token 329: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07971041649580002
    2. ' return' → logprob: -2.8297104835510254
    3. '                   ' → logprob: -4.329710483551025
    4. '                       ' → logprob: -5.454710483551025
    5. '
' → logprob: -9.829710006713867
    6. '	return' → logprob: -10.329710006713867
    7. ':return' → logprob: -10.829710006713867
    8. '   ' → logprob: -11.954710006713867
    9. '{return' → logprob: -12.079710006713867
    10. '               ' → logprob: -12.454710006713867

Token 330: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.5759395360946655
    2. 'tile' → logprob: -0.8259395360946655
    3. '(tile' → logprob: -16.075939178466797
    4. 'token' → logprob: -18.575939178466797
    5. '.tile' → logprob: -18.825939178466797
    6. 'til' → logprob: -19.075939178466797
    7. 'ti' → logprob: -19.700939178466797
    8. 'ticket' → logprob: -19.700939178466797
    9. 'Tile' → logprob: -19.700939178466797
    10. 't' → logprob: -19.825939178466797

Token 331: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: ' raise' (ID: 9338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.007062727585434914
    2. 'Value' → logprob: -5.007062911987305
    3. ' Runtime' → logprob: -8.007062911987305
    4. ' Lookup' → logprob: -11.882062911987305
    5. 'Runtime' → logprob: -13.007062911987305
    6. ' Exception' → logprob: -13.007062911987305
    7. '(Value' → logprob: -13.382062911987305
    8. ' Stop' → logprob: -15.132062911987305
    9. '_value' → logprob: -15.507062911987305
    10. ' Val' → logprob: -15.882062911987305

Token 335: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.165027217415627e-05
    2. 'rror' → logprob: -10.750021934509277
    3. 'ror' → logprob: -16.37502098083496
    4. 'LError' → logprob: -17.62502098083496
    5. 'SError' → logprob: -17.87502098083496
    6. 'Er' → logprob: -18.00002098083496
    7. 'error' → logprob: -18.50002098083496
    8. 'Err' → logprob: -18.50002098083496
    9. '   ' → logprob: -19.12502098083496
    10. '```' → logprob: -19.50002098083496

Token 336: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002795703476294875
    2. '(' → logprob: -8.500279426574707
    3. '('' → logprob: -9.500279426574707
    4. '()' → logprob: -13.625279426574707
    5. '(
' → logprob: -17.250280380249023
    6. '("")' → logprob: -17.375280380249023
    7. '("'' → logprob: -19.250280380249023
    8. '"' → logprob: -19.625280380249023
    9. '(f' → logprob: -20.750280380249023
    10. '(("' → logprob: -21.000280380249023

Token 337: 'No' (ID: 3160)
  Prédit: 'Start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Start' → logprob: -0.031505391001701355
    2. 'No' → logprob: -3.5315053462982178
    3. '"' → logprob: -7.406505584716797
    4. ' Start' → logprob: -7.781505584716797
    5. ''' → logprob: -8.281505584716797
    6. '"No' → logprob: -8.281505584716797
    7. 'Starting' → logprob: -8.656505584716797
    8. 'start' → logprob: -11.406505584716797
    9. ' No' → logprob: -11.531505584716797
    10. 'Grid' → logprob: -12.281505584716797

Token 338: ' starting' (ID: 8601)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.026746779680252075
    2. ' starting' → logprob: -3.9017467498779297
    3. 'start' → logprob: -5.15174674987793
    4. '@' → logprob: -8.90174674987793
    5. ' valid' → logprob: -9.27674674987793
    6. '_start' → logprob: -9.40174674987793
    7. 'starting' → logprob: -10.65174674987793
    8. ' @' → logprob: -10.77674674987793
    9. ' ' → logprob: -11.65174674987793
    10. ' black' → logprob: -12.27674674987793

Token 339: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.03273273631930351
    2. ' point' → logprob: -3.5327327251434326
    3. ' position' → logprob: -6.532732963562012
    4. 'tile' → logprob: -6.782732963562012
    5. ' symbol' → logprob: -8.907732963562012
    6. '@' → logprob: -9.032732963562012
    7. 'point' → logprob: -9.657732963562012
    8. ' token' → logprob: -10.907732963562012
    9. 'position' → logprob: -11.407732963562012
    10. ' ' → logprob: -12.032732963562012

Token 340: ' '@' (ID: 6565)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.02788703702390194
    2. '")' → logprob: -3.7778871059417725
    3. ')")' → logprob: -6.027886867523193
    4. 'found' → logprob: -6.902886867523193
    5. ')' → logprob: -7.027886867523193
    6. '.")' → logprob: -8.902887344360352
    7. ' was' → logprob: -10.277887344360352
    8. ' provided' → logprob: -10.402887344360352
    9. ' in' → logprob: -10.402887344360352
    10. ' )' → logprob: -11.527887344360352

Token 341: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -9.17420256882906e-05
    2. ''"' → logprob: -9.875091552734375
    3. ''")
' → logprob: -11.000091552734375
    4. ' found' → logprob: -11.625091552734375
    5. ')'' → logprob: -11.875091552734375
    6. '}'' → logprob: -13.625091552734375
    7. '"'' → logprob: -13.875091552734375
    8. '@' → logprob: -14.125091552734375
    9. 'found' → logprob: -14.250091552734375
    10. '"' → logprob: -14.250091552734375

Token 342: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.024681836366653442
    2. ''' → logprob: -3.899681806564331
    3. 'found' → logprob: -6.02468204498291
    4. ' in' → logprob: -7.14968204498291
    5. '")' → logprob: -8.02468204498291
    6. ')' → logprob: -8.02468204498291
    7. '')' → logprob: -8.77468204498291
    8. '"' → logprob: -10.14968204498291
    9. ' was' → logprob: -11.27468204498291
    10. ''")
' → logprob: -11.77468204498291

Token 343: ' in' (ID: 306)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003118179738521576
    2. '.")' → logprob: -6.12811803817749
    3. ')")' → logprob: -7.25311803817749
    4. '')' → logprob: -9.503118515014648
    5. ')' → logprob: -10.128118515014648
    6. ''' → logprob: -10.378118515014648
    7. '!")' → logprob: -10.753118515014648
    8. '}")' → logprob: -10.753118515014648
    9. '\"' → logprob: -11.503118515014648
    10. '"' → logprob: -11.503118515014648

Token 344: ' grid' (ID: 10586)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3797610104084015
    2. ' grid' → logprob: -1.254760980606079
    3. 'the' → logprob: -3.879760980606079
    4. 'grid' → logprob: -5.379761219024658
    5. ' lines' → logprob: -5.504761219024658
    6. ' input' → logprob: -7.379761219024658
    7. 'lines' → logprob: -7.379761219024658
    8. ' map' → logprob: -9.6297607421875
    9. ' ' → logprob: -9.7547607421875
    10. ' maze' → logprob: -10.2547607421875

Token 345: '."' (ID: 3692)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.10176236182451248
    2. ')")' → logprob: -2.351762294769287
    3. '.")' → logprob: -6.976762294769287
    4. ')' → logprob: -7.601762294769287
    5. '}")' → logprob: -9.601762771606445
    6. '")
' → logprob: -10.726762771606445
    7. '!")' → logprob: -10.976762771606445
    8. ')")
' → logprob: -12.101762771606445
    9. ')"' → logprob: -12.601762771606445
    10. '')' → logprob: -12.851762771606445

Token 346: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000365259445970878
    2. '<|end|>' → logprob: -8.125365257263184
    3. ')
' → logprob: -10.000365257263184
    4. '
' → logprob: -11.750365257263184
    5. '   ' → logprob: -12.125365257263184
    6. '```' → logprob: -12.750365257263184
    7. '`)' → logprob: -13.125365257263184
    8. '")' → logprob: -13.750365257263184
    9. '<|end|>' → logprob: -14.000365257263184
    10. '}' → logprob: -14.375365257263184

Token 347: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5834556818008423
    2. 'from' → logprob: -1.3334556818008423
    3. '
' → logprob: -2.2084555625915527
    4. 'import' → logprob: -3.4584555625915527
    5. '   ' → logprob: -3.9584555625915527
    6. 'class' → logprob: -4.833455562591553
    7. '```' → logprob: -5.333455562591553
    8. ' from' → logprob: -5.833455562591553
    9. '    
' → logprob: -7.458455562591553
    10. '<|end|>' → logprob: -7.708455562591553

Token 348: ' Reach' (ID: 80172)
  Prédit: ' Maze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Maze' → logprob: -0.5026588439941406
    2. ' Path' → logprob: -2.0026588439941406
    3. ' Pathfinder' → logprob: -2.0026588439941406
    4. ' Solver' → logprob: -2.7526588439941406
    5. ' BFS' → logprob: -3.3776588439941406
    6. ' Graph' → logprob: -5.252658843994141
    7. 'Path' → logprob: -6.002658843994141
    8. ' Solution' → logprob: -6.252658843994141
    9. ' Grid' → logprob: -6.377658843994141
    10. ' Tile' → logprob: -6.377658843994141

Token 349: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.2544596195220947
    2. 'able' → logprob: -1.5044596195220947
    3. 'er' → logprob: -6.129459381103516
    4. 'Ability' → logprob: -8.879459381103516
    5. 'Tile' → logprob: -9.129459381103516
    6. '```' → logprob: -9.754459381103516
    7. 'Grid' → logprob: -10.879459381103516
    8. '(' → logprob: -12.754459381103516
    9. 'abil' → logprob: -13.379459381103516
    10. '(Tile' → logprob: -13.629459381103516

Token 350: 'Analyzer' (ID: 61604)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003784285159781575
    2. ':
' → logprob: -6.2537841796875
    3. 'Checker' → logprob: -6.5037841796875
    4. 'Analyzer' → logprob: -8.6287841796875
    5. 'Finder' → logprob: -9.3787841796875
    6. 'Solver' → logprob: -10.6287841796875
    7. 'Calculator' → logprob: -11.5037841796875
    8. 'Explorer' → logprob: -11.6287841796875
    9. 'Tester' → logprob: -11.7537841796875
    10. '():' → logprob: -12.1287841796875

Token 351: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007621295750141144
    2. ':
' → logprob: -4.8826212882995605
    3. ' :' → logprob: -11.382621765136719
    4. ':def' → logprob: -13.632621765136719
    5. ':

' → logprob: -13.882621765136719
    6. ' :
' → logprob: -14.882621765136719
    7. '():' → logprob: -15.132621765136719
    8. ':
' → logprob: -15.757621765136719
    9. '):' → logprob: -15.757621765136719
    10. '(' → logprob: -15.882621765136719

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030167778953909874
    2. ' def' → logprob: -3.530167818069458
    3. 'def' → logprob: -8.280167579650879
    4. '    
' → logprob: -9.280167579650879
    5. '
' → logprob: -10.280167579650879
    6. '	def' → logprob: -12.030167579650879
    7. '    ' → logprob: -12.280167579650879
    8. '```' → logprob: -12.405167579650879
    9. ' 
' → logprob: -12.905167579650879
    10. '  ' → logprob: -13.030167579650879

Token 353: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.02006259560585022
    2. 'def' (adapté à ' def') → logprob: -4.145062446594238
    3. '   ' → logprob: -5.520062446594238
    4. '    ' → logprob: -12.020062446594238
    5. ' ' → logprob: -12.145062446594238
    6. 'class' → logprob: -13.770062446594238
    7. '  ' → logprob: -14.770062446594238
    8. ' class' → logprob: -15.520062446594238
    9. ' ' → logprob: -15.520062446594238
    10. '	def' → logprob: -15.645062446594238

Token 354: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6583635807037354
    2. ' def' → logprob: -0.7833635807037354
    3. 'def' → logprob: -4.908363342285156
    4. '_init' → logprob: -5.158363342285156
    5. ' ' → logprob: -5.408363342285156
    6. 'init' → logprob: -5.658363342285156
    7. '__' → logprob: -6.533363342285156
    8. ' _' → logprob: -7.033363342285156
    9. ' init' → logprob: -7.033363342285156
    10. '_' → logprob: -8.408363342285156

Token 355: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. ' init' → logprob: -13.875000953674316
    3. 'def' → logprob: -17.625001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '```' → logprob: -18.125001907348633
    6. '(init' → logprob: -18.375001907348633
    7. '_init' → logprob: -19.000001907348633
    8. 'int' → logprob: -19.125001907348633
    9. 'ini' → logprob: -19.625001907348633
    10. 'nit' → logprob: -19.750001907348633

Token 356: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0006632337463088334
    2. '__' → logprob: -7.5006632804870605
    3. '__(
' → logprob: -9.500662803649902
    4. '(self' → logprob: -10.500662803649902
    5. '(' → logprob: -12.125662803649902
    6. '__((' → logprob: -13.500662803649902
    7. '_(' → logprob: -14.375662803649902
    8. '__('' → logprob: -15.250662803649902
    9. '__[' → logprob: -16.75066375732422
    10. ' (' → logprob: -17.00066375732422

Token 357: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015081972815096378
    2. ' self' → logprob: -6.5015082359313965
    3. ')' → logprob: -13.126507759094238
    4. '   ' → logprob: -13.376507759094238
    5. '
' → logprob: -13.501507759094238
    6. 'grid' → logprob: -14.626507759094238
    7. '       ' → logprob: -15.501507759094238
    8. ',' → logprob: -16.251508712768555
    9. 'def' → logprob: -16.751508712768555
    10. '(self' → logprob: -16.876508712768555

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05257715284824371
    2. 'self' → logprob: -3.177577257156372
    3. ' self' → logprob: -5.177577018737793
    4. '(self' → logprob: -6.052577018737793
    5. ' ,' → logprob: -6.677577018737793
    6. ' (' → logprob: -8.802577018737793
    7. ',self' → logprob: -9.677577018737793
    8. '__(' → logprob: -10.677577018737793
    9. '
' → logprob: -11.677577018737793
    10. ',
' → logprob: -11.802577018737793

Token 359: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.030229076743125916
    2. ' grid' → logprob: -3.530229091644287
    3. 'self' → logprob: -7.780229091644287
    4. ')' → logprob: -10.405228614807129
    5. ' self' → logprob: -11.530228614807129
    6. '   ' → logprob: -11.655228614807129
    7. 'graph' → logprob: -12.280228614807129
    8. '
' → logprob: -13.530228614807129
    9. '	grid' → logprob: -14.155228614807129
    10. 'gr' → logprob: -14.280228614807129

Token 360: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5240694284439087
    2. '):' → logprob: -0.8990694284439087
    3. '):
' → logprob: -7.899069309234619
    4. ' ):' → logprob: -8.274069786071777
    5. ')' → logprob: -9.024069786071777
    6. ' :' → logprob: -9.149069786071777
    7. ',' → logprob: -9.524069786071777
    8. '   ' → logprob: -11.649069786071777
    9. '}:' → logprob: -12.524069786071777
    10. ' ' → logprob: -13.399069786071777

Token 361: ' Grid' (ID: 18087)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.07890807837247849
    2. ' Grid' → logprob: -2.5789079666137695
    3. ')' → logprob: -12.07890796661377
    4. '	Grid' → logprob: -12.32890796661377
    5. ' grid' → logprob: -12.45390796661377
    6. '(Grid' → logprob: -13.57890796661377
    7. '.Grid' → logprob: -13.95390796661377
    8. '<Grid' → logprob: -13.95390796661377
    9. '   ' → logprob: -14.45390796661377
    10. 'grid' → logprob: -14.82890796661377

Token 362: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3870213031768799
    2. '):
' → logprob: -1.1370213031768799
    3. ')' → logprob: -8.8870210647583
    4. '   ' → logprob: -12.2620210647583
    5. '):
' → logprob: -12.2620210647583
    6. ' ):' → logprob: -14.0120210647583
    7. ',' → logprob: -14.3870210647583
    8. ':' → logprob: -14.5120210647583
    9. ' ):
' → logprob: -15.0120210647583
    10. '       ' → logprob: -15.3870210647583

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003974154591560364
    2. 'self' → logprob: -6.253973960876465
    3. '   ' → logprob: -6.378973960876465
    4. ' self' → logprob: -8.003973960876465
    5. ',' → logprob: -11.878973960876465
    6. ')' → logprob: -13.503973960876465
    7. '      ' → logprob: -14.128973960876465
    8. ' ' → logprob: -14.753973960876465
    9. ' ' → logprob: -14.878973960876465
    10. '     ' → logprob: -14.878973960876465

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.059126175940036774
    2. ' self' → logprob: -3.434126138687134
    3. '       ' → logprob: -3.684126138687134
    4. '   ' → logprob: -10.309125900268555
    5. 'import' → logprob: -13.059125900268555
    6. '	self' → logprob: -13.809125900268555
    7. ' ' → logprob: -14.309125900268555
    8. 's' → logprob: -14.684125900268555
    9. '
' → logprob: -14.809125900268555
    10. '(self' → logprob: -15.184125900268555

Token 365: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.000386105413781479
    2. '.' → logprob: -7.8753862380981445
    3. ' .' → logprob: -12.375386238098145
    4. 'grid' → logprob: -15.000386238098145
    5. '.Grid' → logprob: -15.250386238098145
    6. '.graph' → logprob: -15.500386238098145
    7. '.tile' → logprob: -15.625386238098145
    8. '	grid' → logprob: -16.125385284423828
    9. ':grid' → logprob: -16.500385284423828
    10. '.geometry' → logprob: -16.625385284423828

Token 366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3135494291782379
    2. '=' → logprob: -1.3135493993759155
    3. '   ' → logprob: -8.438549041748047
    4. ' ' → logprob: -9.938549041748047
    5. '    ' → logprob: -12.188549041748047
    6. '.' → logprob: -12.313549041748047
    7. '  ' → logprob: -12.563549041748047
    8. ',' → logprob: -12.563549041748047
    9. '=self' → logprob: -12.813549041748047
    10. ')' → logprob: -14.063549041748047

Token 367: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.10020699352025986
    2. ' grid' → logprob: -2.3502070903778076
    3. '	grid' → logprob: -15.975207328796387
    4. '(grid' → logprob: -16.60020637512207
    5. '.grid' → logprob: -16.72520637512207
    6. 'Grid' → logprob: -17.72520637512207
    7. '_grid' → logprob: -18.10020637512207
    8. ':grid' → logprob: -19.10020637512207
    9. '/grid' → logprob: -19.60020637512207
    10. '   ' → logprob: -19.60020637512207

Token 368: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022349290549755096
    2. '

' → logprob: -4.5223493576049805
    3. '<|end|>' → logprob: -5.0223493576049805
    4. '   ' → logprob: -6.2723493576049805
    5. 'def' → logprob: -6.5223493576049805
    6. ' def' → logprob: -8.02234935760498
    7. '<|end|>' → logprob: -8.39734935760498
    8. '    
' → logprob: -8.39734935760498
    9. '	def' → logprob: -9.02234935760498
    10. ' 
' → logprob: -9.14734935760498

Token 369: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005285934545099735
    2. '   ' → logprob: -5.880285739898682
    3. '       ' → logprob: -7.130285739898682
    4. '<|end|>' → logprob: -7.505285739898682
    5. '

' → logprob: -7.755285739898682
    6. '    
' → logprob: -8.25528621673584
    7. 'def' → logprob: -8.75528621673584
    8. '  
' → logprob: -9.38028621673584
    9. ' 
' → logprob: -9.63028621673584
    10. ',' → logprob: -10.00528621673584

Token 370: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0023347358219325542
    2. 'from' → logprob: -6.2523345947265625
    3. 'start' → logprob: -7.8773345947265625
    4. ' self' → logprob: -10.752334594726562
    5. 'import' → logprob: -12.377334594726562
    6. 'def' → logprob: -15.002334594726562
    7. '       ' → logprob: -15.627334594726562
    8. '   ' → logprob: -15.877334594726562
    9. '
' → logprob: -16.127334594726562
    10. 'visited' → logprob: -16.127334594726562

Token 371: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.019326934590935707
    2. '.re' → logprob: -4.019327163696289
    3. '.start' → logprob: -7.269327163696289
    4. '.queue' → logprob: -8.519327163696289
    5. '.' → logprob: -8.894327163696289
    6. '._' → logprob: -10.769327163696289
    7. '.dist' → logprob: -10.894327163696289
    8. '.visit' → logprob: -11.019327163696289
    9. ' .' → logprob: -11.519327163696289
    10. '.f' → logprob: -11.519327163696289

Token 372: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.5776860184123507e-06
    2. 'isted' → logprob: -14.12500286102295
    3. '_' → logprob: -14.25000286102295
    4. 'ible' → logprob: -14.62500286102295
    5. 'itable' → logprob: -15.37500286102295
    6. '```' → logprob: -16.000001907348633
    7. '
' → logprob: -16.875001907348633
    8. 'ITED' → logprob: -17.000001907348633
    9. 'ite' → logprob: -17.375001907348633
    10. '

' → logprob: -17.625001907348633

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0891398936510086
    2. '=' → logprob: -2.464139938354492
    3. ':' → logprob: -8.589139938354492
    4. ' ' → logprob: -11.839139938354492
    5. '=set' → logprob: -11.964139938354492
    6. ' :' → logprob: -15.589139938354492
    7. '  ' → logprob: -15.839139938354492
    8. ',' → logprob: -15.964139938354492
    9. '   ' → logprob: -15.964139938354492
    10. '	' → logprob: -16.214139938354492

Token 374: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.02985462173819542
    2. ' set' → logprob: -3.5298545360565186
    3. '{}' → logprob: -9.404854774475098
    4. '{' → logprob: -11.404854774475098
    5. '	set' → logprob: -12.279854774475098
    6. '=set' → logprob: -12.279854774475098
    7. '(set' → logprob: -14.529854774475098
    8. '   ' → logprob: -15.154854774475098
    9. ')set' → logprob: -15.154854774475098
    10. ' ' → logprob: -15.529854774475098

Token 375: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00198121415451169
    2. '()
' → logprob: -6.376981258392334
    3. '(' → logprob: -8.251980781555176
    4. '()

' → logprob: -11.126980781555176
    5. '()\' → logprob: -13.501980781555176
    6. '(),' → logprob: -14.751980781555176
    7. '(
' → logprob: -15.001980781555176
    8. '()
' → logprob: -15.501980781555176
    9. ' ()' → logprob: -15.501980781555176
    10. '())' → logprob: -15.626980781555176

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3493115305900574
    2. '
' → logprob: -1.2243115901947021
    3. '    
' → logprob: -7.849311351776123
    4. '<|end|>' → logprob: -8.599311828613281
    5. '```' → logprob: -9.349311828613281
    6. 'def' → logprob: -9.349311828613281
    7. ' def' → logprob: -9.974311828613281
    8. '

' → logprob: -10.974311828613281
    9. '(' → logprob: -11.474311828613281
    10. '	def' → logprob: -12.099311828613281

Token 377: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05236325040459633
    2. ' def' → logprob: -3.552363157272339
    3. '   ' → logprob: -3.802363157272339
    4. '
' → logprob: -10.427363395690918
    5. '	def' → logprob: -12.302363395690918
    6. '    
' → logprob: -12.552363395690918
    7. 'from' → logprob: -13.677363395690918
    8. ' ' → logprob: -14.052363395690918
    9. '  ' → logprob: -14.427363395690918
    10. '```' → logprob: -15.802363395690918

Token 378: ' position' (ID: 4010)
  Prédit: ' reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reachable' → logprob: -1.1107138395309448
    2. ' bfs' → logprob: -1.8607138395309448
    3. ' analyze' → logprob: -2.2357139587402344
    4. 'reachable' → logprob: -2.3607139587402344
    5. ' can' → logprob: -2.6107139587402344
    6. ' dfs' → logprob: -2.8607139587402344
    7. 'can' → logprob: -2.8607139587402344
    8. 'dfs' → logprob: -3.6107139587402344
    9. ' explore' → logprob: -3.7357139587402344
    10. ' is' → logprob: -3.9857139587402344

Token 379: '_key' (ID: 6724)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3049062490463257
    2. '(' → logprob: -1.4299062490463257
    3. ' (' → logprob: -4.929906368255615
    4. ')' → logprob: -5.304906368255615
    5. '_' → logprob: -5.554906368255615
    6. '(
' → logprob: -6.804906368255615
    7. 'self' → logprob: -6.804906368255615
    8. 's' → logprob: -7.179906368255615
    9. '   ' → logprob: -7.304906368255615
    10. '_at' → logprob: -7.429906368255615

Token 380: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008655584417283535
    2. '(' → logprob: -4.758655548095703
    3. '(tile' → logprob: -11.133655548095703
    4. '(
' → logprob: -11.758655548095703
    5. '(s' → logprob: -12.008655548095703
    6. ' (' → logprob: -12.008655548095703
    7. 'self' → logprob: -12.883655548095703
    8. '   ' → logprob: -13.758655548095703
    9. '<|end|>' → logprob: -14.008655548095703
    10. ' self' → logprob: -15.133655548095703

Token 381: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004852788057178259
    2. '(' → logprob: -5.504852771759033
    3. ' (' → logprob: -7.754852771759033
    4. ')' → logprob: -8.754853248596191
    5. '(tile' → logprob: -9.004853248596191
    6. '(
' → logprob: -11.004853248596191
    7. ')(' → logprob: -11.379853248596191
    8. 'self' → logprob: -11.504853248596191
    9. '(Tile' → logprob: -11.629853248596191
    10. '   ' → logprob: -12.754853248596191

Token 382: ' tile' (ID: 17664)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.015299136750400066
    2. 'tile' → logprob: -4.390299320220947
    3. 'x' → logprob: -6.140299320220947
    4. ' self' → logprob: -7.640299320220947
    5. ')' → logprob: -9.515298843383789
    6. ' tile' → logprob: -10.390298843383789
    7. '(self' → logprob: -10.515298843383789
    8. '   ' → logprob: -12.390298843383789
    9. '       ' → logprob: -12.765298843383789
    10. ' x' → logprob: -13.015298843383789

Token 383: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1896536499261856
    2. ':' → logprob: -2.4396536350250244
    3. '(tile' → logprob: -3.0646536350250244
    4. '):
' → logprob: -3.5646536350250244
    5. ')' → logprob: -4.8146538734436035
    6. '(self' → logprob: -7.8146538734436035
    7. 'self' → logprob: -7.8146538734436035
    8. ' tile' → logprob: -7.9396538734436035
    9. '.tile' → logprob: -7.9396538734436035
    10. '   ' → logprob: -8.314653396606445

Token 384: ' Tile' (ID: 35295)
  Prédit: 'Tile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tile' → logprob: -0.04114185646176338
    2. ' Tile' → logprob: -3.2911417484283447
    3. 'self' → logprob: -6.166141986846924
    4. ' tile' → logprob: -8.041141510009766
    5. 'tile' → logprob: -8.541141510009766
    6. ')' → logprob: -8.666141510009766
    7. '   ' → logprob: -8.791141510009766
    8. ' self' → logprob: -9.791141510009766
    9. '.Tile' → logprob: -10.291141510009766
    10. '_tile' → logprob: -10.666141510009766

Token 385: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40093204379081726
    2. ')' → logprob: -1.1509320735931396
    3. '):
' → logprob: -4.2759318351745605
    4. ')->' → logprob: -10.775932312011719
    5. ' ):' → logprob: -11.150932312011719
    6. ':' → logprob: -12.150932312011719
    7. '()' → logprob: -12.275932312011719
    8. '   ' → logprob: -12.400932312011719
    9. '():' → logprob: -12.525932312011719
    10. ' )' → logprob: -12.900932312011719

Token 386: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8647021651268005
    2. '(self' → logprob: -1.3647022247314453
    3. '(' → logprob: -1.4897022247314453
    4. '(tile' → logprob: -2.4897022247314453
    5. '):' → logprob: -5.614702224731445
    6. '():' → logprob: -5.864702224731445
    7. ' ->' → logprob: -5.989702224731445
    8. '->' → logprob: -6.114702224731445
    9. ')' → logprob: -6.614702224731445
    10. '(t' → logprob: -6.864702224731445

Token 387: ' tuple' (ID: 31311)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.15434829890727997
    2. 'tuple' → logprob: -3.029348373413086
    3. ' (' → logprob: -3.529348373413086
    4. '(' → logprob: -3.529348373413086
    5. '(str' → logprob: -4.154348373413086
    6. '(tile' → logprob: -4.279348373413086
    7. ' tuple' → logprob: -5.404348373413086
    8. '(int' → logprob: -7.154348373413086
    9. '(t' → logprob: -7.279348373413086
    10. 'Tuple' → logprob: -9.154348373413086

Token 388: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.4334889352321625
    2. '(tile' → logprob: -1.5584889650344849
    3. ':' → logprob: -2.8084888458251953
    4. '[' → logprob: -2.9334888458251953
    5. ':
' → logprob: -4.433488845825195
    6. '[t' → logprob: -4.933488845825195
    7. '(int' → logprob: -5.308488845825195
    8. '[
' → logprob: -6.558488845825195
    9. '(' → logprob: -7.308488845825195
    10. '(t' → logprob: -8.058488845825195

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002230905694887042
    2. ',int' → logprob: -6.127231121063232
    3. '[int' → logprob: -11.002230644226074
    4. ' ,' → logprob: -11.002230644226074
    5. ',
' → logprob: -12.252230644226074
    6. 'int' → logprob: -12.502230644226074
    7. ']int' → logprob: -13.752230644226074
    8. '   ' → logprob: -14.127230644226074
    9. '[' → logprob: -14.877230644226074
    10. ',bool' → logprob: -15.252230644226074

Token 390: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3306015716807451e-05
    2. ' int' → logprob: -11.25001335144043
    3. '[int' → logprob: -15.87501335144043
    4. '   ' → logprob: -16.50001335144043
    5. ']int' → logprob: -18.12501335144043
    6. '<int' → logprob: -18.25001335144043
    7. ':int' → logprob: -18.50001335144043
    8. '	int' → logprob: -18.87501335144043
    9. '...' → logprob: -20.62501335144043
    10. ' ' → logprob: -21.00001335144043

Token 391: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6635061502456665
    2. '):' → logprob: -1.0385061502456665
    3. '):
' → logprob: -2.663506031036377
    4. ']:
' → logprob: -3.038506031036377
    5. ']' → logprob: -4.538506031036377
    6. '>' → logprob: -7.413506031036377
    7. '>:' → logprob: -7.663506031036377
    8. ':' → logprob: -8.038506507873535
    9. '   ' → logprob: -8.288506507873535
    10. '       ' → logprob: -8.288506507873535

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6081896424293518
    2. '(' → logprob: -1.358189582824707
    3. '(tile' → logprob: -2.233189582824707
    4. ' return' → logprob: -3.233189582824707
    5. '(
' → logprob: -3.858189582824707
    6. '   ' → logprob: -4.108189582824707
    7. ' (' → logprob: -5.358189582824707
    8. 'return' → logprob: -5.358189582824707
    9. '(t' → logprob: -6.108189582824707
    10. '(return' → logprob: -6.983189582824707

Token 393: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04614035412669182
    2. '(' → logprob: -3.796140432357788
    3. ' return' → logprob: -4.421140193939209
    4. '       ' → logprob: -4.796140193939209
    5. '(tile' → logprob: -6.546140193939209
    6. '(
' → logprob: -7.671140193939209
    7. '(return' → logprob: -8.546140670776367
    8. '   ' → logprob: -9.296140670776367
    9. '(x' → logprob: -9.671140670776367
    10. '(t' → logprob: -9.796140670776367

Token 394: ' (' (ID: 350)
  Prédit: '(tile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tile' → logprob: -0.008631822653114796
    2. ' (' → logprob: -4.758631706237793
    3. 'tile' → logprob: -11.383631706237793
    4. ' tile' → logprob: -12.633631706237793
    5. '(ticket' → logprob: -12.883631706237793
    6. '(t' → logprob: -16.13363265991211
    7. '(token' → logprob: -16.63363265991211
    8. '   ' → logprob: -16.75863265991211
    9. '(Tile' → logprob: -17.38363265991211
    10. '(' → logprob: -17.88363265991211

Token 395: 'tile' (ID: 44047)
  Prédit: 'tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tile' → logprob: -3.7697225252486533e-06
    2. ' tile' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.250003814697266
    4. '(tile' → logprob: -19.125003814697266
    5. 'til' → logprob: -19.625003814697266
    6. '.tile' → logprob: -20.250003814697266
    7. 'ticket' → logprob: -21.000003814697266
    8. '       ' → logprob: -21.125003814697266
    9. 'ti' → logprob: -21.875003814697266
    10. 'token' → logprob: -22.000003814697266

Token 396: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0001114106344175525
    2. '.' → logprob: -9.12511157989502
    3. ' .' → logprob: -13.37511157989502
    4. ').' → logprob: -15.25011157989502
    5. 'x' → logprob: -15.25011157989502
    6. '.
' → logprob: -16.500110626220703
    7. '.y' → logprob: -16.750110626220703
    8. '.xlabel' → logprob: -16.875110626220703
    9. '`.' → logprob: -17.000110626220703
    10. '   ' → logprob: -17.500110626220703

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.931863051955588e-05
    2. ' ,' → logprob: -10.250059127807617
    3. ',
' → logprob: -10.875059127807617
    4. ',t' → logprob: -12.375059127807617
    5. '<|end|>' → logprob: -15.625059127807617
    6. '‌,' → logprob: -16.000059127807617
    7. ',\
' → logprob: -16.875059127807617
    8. ',y' → logprob: -16.875059127807617
    9. '       ' → logprob: -17.125059127807617
    10. '),' → logprob: -17.250059127807617

Token 398: ' tile' (ID: 17664)
  Prédit: 'tile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tile' → logprob: -0.22542136907577515
    2. ' tile' → logprob: -1.60042142868042
    3. '   ' → logprob: -13.225420951843262
    4. '(tile' → logprob: -13.475420951843262
    5. ' ' → logprob: -13.600420951843262
    6. '.tile' → logprob: -14.225420951843262
    7. 't' → logprob: -14.475420951843262
    8. '    ' → logprob: -14.600420951843262
    9. '       ' → logprob: -14.975420951843262
    10. '  ' → logprob: -15.100420951843262

Token 399: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -1.1637164789135568e-05
    2. 'y' → logprob: -11.750011444091797
    3. '.' → logprob: -12.750011444091797
    4. ')' → logprob: -14.125011444091797
    5. '.x' → logprob: -17.125011444091797
    6. '	y' → logprob: -18.125011444091797
    7. ').' → logprob: -18.500011444091797
    8. ' .' → logprob: -18.500011444091797
    9. ' y' → logprob: -19.125011444091797
    10. ' ' → logprob: -19.750011444091797

Token 400: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.250003814697266
    4. '       ' → logprob: -15.125003814697266
    5. '   ' → logprob: -16.500003814697266
    6. '<|end|>' → logprob: -16.500003814697266
    7. '}' → logprob: -16.875003814697266
    8. ')#' → logprob: -18.125003814697266
    9. ')

' → logprob: -18.375003814697266
    10. '),' → logprob: -18.750003814697266

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09943486750125885
    2. '
' → logprob: -2.4744348526000977
    3. 'def' → logprob: -5.724434852600098
    4. '```' → logprob: -5.724434852600098
    5. '    
' → logprob: -5.974434852600098
    6. ' def' → logprob: -7.349434852600098
    7. ' 
' → logprob: -8.099434852600098
    8. '<|end|>' → logprob: -8.599434852600098
    9. '  
' → logprob: -9.599434852600098
    10. ' ' → logprob: -10.474434852600098

Token 402: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09600339829921722
    2. ' def' → logprob: -2.596003293991089
    3. '   ' → logprob: -4.096003532409668
    4. '
' → logprob: -8.096003532409668
    5. '	def' → logprob: -11.096003532409668
    6. '    
' → logprob: -12.846003532409668
    7. '```' → logprob: -12.846003532409668
    8. ' ' → logprob: -13.346003532409668
    9. ' 
' → logprob: -14.096003532409668
    10. '

' → logprob: -14.596003532409668

Token 403: ' dfs' (ID: 51252)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.160396933555603
    2. 'def' → logprob: -1.535396933555603
    3. ' dfs' → logprob: -1.535396933555603
    4. ' bfs' → logprob: -2.1603970527648926
    5. 'dfs' → logprob: -2.6603970527648926
    6. ' can' → logprob: -3.6603970527648926
    7. ' reachable' → logprob: -3.7853970527648926
    8. 'can' → logprob: -4.660397052764893
    9. ' explore' → logprob: -5.660397052764893
    10. 'reachable' → logprob: -5.660397052764893

Token 404: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009999489411711693
    2. '(' → logprob: -4.6349992752075195
    3. ' (' → logprob: -8.50999927520752
    4. '(
' → logprob: -10.25999927520752
    5. '(s' → logprob: -13.00999927520752
    6. 'self' → logprob: -14.25999927520752
    7. '<|end|>' → logprob: -14.25999927520752
    8. ' ' → logprob: -14.38499927520752
    9. '(tile' → logprob: -14.63499927520752
    10. ' self' → logprob: -14.63499927520752

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009116152301430702
    2. '(self' → logprob: -4.884116172790527
    3. ' ,' → logprob: -7.384116172790527
    4. 'self' → logprob: -7.384116172790527
    5. ',self' → logprob: -9.384116172790527
    6. ')' → logprob: -9.634116172790527
    7. ')(' → logprob: -10.259116172790527
    8. '(tile' → logprob: -10.759116172790527
    9. '   ' → logprob: -11.009116172790527
    10. ' (' → logprob: -11.759116172790527

Token 406: ' tile' (ID: 17664)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46009352803230286
    2. 'tile' → logprob: -1.9600934982299805
    3. ' tile' → logprob: -2.0850934982299805
    4. ' self' → logprob: -2.3350934982299805
    5. '       ' → logprob: -5.5850934982299805
    6. '   ' → logprob: -6.0850934982299805
    7. 'start' → logprob: -7.7100934982299805
    8. ' start' → logprob: -8.96009349822998
    9. '(self' → logprob: -9.71009349822998
    10. ')' → logprob: -10.08509349822998

Token 407: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05770028382539749
    2. '):
' → logprob: -3.0577003955841064
    3. ':' → logprob: -5.057700157165527
    4. ')' → logprob: -6.182700157165527
    5. ' ):' → logprob: -7.807700157165527
    6. '   ' → logprob: -8.557700157165527
    7. '       ' → logprob: -11.057700157165527
    8. ' ' → logprob: -12.057700157165527
    9. ' ):
' → logprob: -12.307700157165527
    10. '):
' → logprob: -12.432700157165527

Token 408: ' Tile' (ID: 35295)
  Prédit: ' tile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.8256633281707764
    2. 'Tile' → logprob: -1.2006633281707764
    3. 'tile' → logprob: -1.8256633281707764
    4. ' Tile' → logprob: -2.3256633281707764
    5. 'self' → logprob: -7.0756635665893555
    6. ')' → logprob: -7.2006635665893555
    7. '):
' → logprob: -8.575663566589355
    8. '):' → logprob: -8.825663566589355
    9. '   ' → logprob: -9.325663566589355
    10. '_tile' → logprob: -9.450663566589355

Token 409: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04547640308737755
    2. ')' → logprob: -3.2954764366149902
    3. '):
' → logprob: -4.92047643661499
    4. ' ):' → logprob: -9.545475959777832
    5. '   ' → logprob: -11.295475959777832
    6. ':' → logprob: -11.420475959777832
    7. '):
' → logprob: -11.670475959777832
    8. ' )' → logprob: -12.545475959777832
    9. ',' → logprob: -13.545475959777832
    10. ')->' → logprob: -13.670475959777832

Token 410: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009218233171850443
    2. ':
' → logprob: -7.625921726226807
    3. '):' → logprob: -8.250922203063965
    4. ' :' → logprob: -9.000922203063965
    5. ' ->' → logprob: -10.500922203063965
    6. ')' → logprob: -12.125922203063965
    7. '->' → logprob: -12.125922203063965
    8. ',' → logprob: -12.625922203063965
    9. '):
' → logprob: -12.875922203063965
    10. '   ' → logprob: -13.375922203063965

Token 411: ' int' (ID: 677)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04460648074746132
    2. ' None' → logprob: -3.1696064472198486
    3. 'bool' → logprob: -6.919606685638428
    4. '   ' → logprob: -7.669606685638428
    5. ' bool' → logprob: -9.91960620880127
    6. 'list' → logprob: -10.29460620880127
    7. 'int' → logprob: -10.29460620880127
    8. 'set' → logprob: -11.91960620880127
    9. '[' → logprob: -12.04460620880127
    10. ' list' → logprob: -12.16960620880127

Token 412: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023327002301812172
    2. ':
' → logprob: -3.773327112197876
    3. '       ' → logprob: -10.023326873779297
    4. '   ' → logprob: -11.148326873779297
    5. '):
' → logprob: -12.273326873779297
    6. '):' → logprob: -12.398326873779297
    7. ' :' → logprob: -12.523326873779297
    8. ',' → logprob: -13.023326873779297
    9. '():' → logprob: -13.648326873779297
    10. ' :
' → logprob: -13.648326873779297

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004246862139552832
    2. '
' → logprob: -6.254246711730957
    3. '   ' → logprob: -7.004246711730957
    4. ' self' → logprob: -7.504246711730957
    5. ' if' → logprob: -8.254246711730957
    6. ' visited' → logprob: -8.379246711730957
    7. '        
' → logprob: -9.129246711730957
    8. 'visited' → logprob: -9.879246711730957
    9. 'self' → logprob: -9.879246711730957
    10. '    
' → logprob: -10.254246711730957

Token 414: ' stack' (ID: 10825)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6283127665519714
    2. 'if' → logprob: -1.7533128261566162
    3. 'key' → logprob: -1.8783128261566162
    4. 'stack' (adapté à ' stack') → logprob: -2.878312826156616
    5. 'count' → logprob: -3.128312826156616
    6. '       ' → logprob: -4.128312587738037
    7. ' if' → logprob: -4.503312587738037
    8. 'pos' → logprob: -5.128312587738037
    9. ' key' → logprob: -5.753312587738037
    10. ' self' → logprob: -6.003312587738037

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005238140933215618
    2. '=' → logprob: -5.255238056182861
    3. '.append' → logprob: -13.00523853302002
    4. '.push' → logprob: -14.25523853302002
    5. '=[]' → logprob: -14.88023853302002
    6. ' ' → logprob: -15.38023853302002
    7. ' =
' → logprob: -15.63023853302002
    8. ' =[' → logprob: -15.88023853302002
    9. '    ' → logprob: -16.005237579345703
    10. '   ' → logprob: -16.505237579345703

Token 416: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.16214266419410706
    2. ' [' → logprob: -1.9121426343917847
    3. '[' → logprob: -6.537142753601074
    4. '[token' → logprob: -7.912142753601074
    5. '[top' → logprob: -10.412142753601074
    6. '[(' → logprob: -11.162142753601074
    7. '[node' → logprob: -11.412142753601074
    8. '[tag' → logprob: -11.787142753601074
    9. '[cell' → logprob: -11.912142753601074
    10. '[self' → logprob: -12.162142753601074

Token 417: 'tile' (ID: 44047)
  Prédit: 'tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tile' → logprob: -9.627176768844947e-05
    2. 'self' → logprob: -10.125096321105957
    3. '(tile' → logprob: -10.625096321105957
    4. ' tile' → logprob: -10.750096321105957
    5. '   ' → logprob: -12.000096321105957
    6. 'token' → logprob: -13.875096321105957
    7. 'til' → logprob: -14.000096321105957
    8. 'ticket' → logprob: -14.625096321105957
    9. '```' → logprob: -15.250096321105957
    10. '           ' → logprob: -15.375096321105957

Token 418: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001418207655660808
    2. ']
' → logprob: -6.626418113708496
    3. ' ]' → logprob: -9.376418113708496
    4. ']

' → logprob: -11.876418113708496
    5. ']
' → logprob: -15.126418113708496
    6. ' ]
' → logprob: -15.251418113708496
    7. ')' → logprob: -16.751419067382812
    8. '
' → logprob: -17.876419067382812
    9. '()]' → logprob: -18.126419067382812
    10. '   ' → logprob: -18.251419067382812

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09624780714511871
    2. '
' → logprob: -2.471247911453247
    3. '   ' → logprob: -6.221247673034668
    4. '        
' → logprob: -6.596247673034668
    5. 'visited' → logprob: -6.846247673034668
    6. ' while' → logprob: -6.971247673034668
    7. '```' → logprob: -8.096247673034668
    8. 'while' → logprob: -8.221247673034668
    9. '<|end|>' → logprob: -8.346247673034668
    10. ' visited' → logprob: -8.471247673034668

Token 420: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.004780880641192198
    2. 'self' → logprob: -6.5047807693481445
    3. '       ' → logprob: -6.6297807693481445
    4. ' count' → logprob: -7.6297807693481445
    5. 'visited' → logprob: -7.7547807693481445
    6. 'result' → logprob: -7.8797807693481445
    7. 'reachable' → logprob: -8.004780769348145
    8. 'distance' → logprob: -9.129780769348145
    9. 'total' → logprob: -9.254780769348145
    10. 'reach' → logprob: -10.129780769348145

Token 421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004634353332221508
    2. '=' → logprob: -5.379634380340576
    3. ' ' → logprob: -11.254633903503418
    4. '_' → logprob: -15.004633903503418
    5. ' =
' → logprob: -15.504633903503418
    6. ':' → logprob: -15.754633903503418
    7. ',' → logprob: -15.879633903503418
    8. ')' → logprob: -16.504634857177734
    9. 'space' → logprob: -16.504634857177734
    10. '<|end|>' → logprob: -16.879634857177734

Token 422: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013348824577406049
    2. ' ' → logprob: -6.6263346672058105
    3. '1' → logprob: -11.626335144042969
    4. '   ' → logprob: -17.62633514404297
    5. '۰' → logprob: -18.00133514404297
    6. '```' → logprob: -18.68883514404297
    7. ' ' → logprob: -18.93883514404297
    8. '  ' → logprob: -20.06383514404297
    9. '`' → logprob: -20.25133514404297
    10. 'len' → logprob: -20.25133514404297

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013333676906768233
    2. '1' → logprob: -9.125133514404297
    3. ' ' → logprob: -10.625133514404297
    4. '   ' → logprob: -17.000133514404297
    5. '۰' → logprob: -18.062633514404297
    6. '```' → logprob: -18.812633514404297
    7. 'len' → logprob: -19.250133514404297
    8. '000' → logprob: -19.562633514404297
    9. '  ' → logprob: -20.000133514404297
    10. '０' → logprob: -20.062633514404297

Token 424: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02130596712231636
    2. '       ' → logprob: -4.396306037902832
    3. ' 
' → logprob: -5.271306037902832
    4. ' while' → logprob: -6.146306037902832
    5. '        
' → logprob: -7.146306037902832
    6. '  
' → logprob: -8.646306037902832
    7. '    
' → logprob: -8.896306037902832
    8. '<|end|>' → logprob: -9.396306037902832
    9. 'while' → logprob: -9.646306037902832
    10. ' ' → logprob: -9.771306037902832

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3963167369365692
    2. '
' → logprob: -1.2713167667388916
    3. ' while' → logprob: -4.0213165283203125
    4. '   ' → logprob: -4.2713165283203125
    5. '        
' → logprob: -5.0213165283203125
    6. ' 
' → logprob: -5.5213165283203125
    7. '    
' → logprob: -6.0213165283203125
    8. ' ' → logprob: -7.6463165283203125
    9. 'while' → logprob: -7.8963165283203125
    10. '	while' → logprob: -8.021316528320312

Token 426: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3970693051815033
    2. '       ' → logprob: -1.1470693349838257
    3. ' while' → logprob: -4.647069454193115
    4. 'self' → logprob: -8.022068977355957
    5. 'visited' → logprob: -9.022068977355957
    6. '	while' → logprob: -9.647068977355957
    7. '
' → logprob: -10.897068977355957
    8. '        
' → logprob: -11.397068977355957
    9. '   ' → logprob: -11.897068977355957
    10. ' self' → logprob: -12.772068977355957

Token 427: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.014164566993713379
    2. ' stack' → logprob: -4.264164447784424
    3. '	stack' → logprob: -14.514164924621582
    4. '   ' → logprob: -15.639164924621582
    5. '(stack' → logprob: -15.764164924621582
    6. 'len' → logprob: -15.764164924621582
    7. 'st' → logprob: -16.889163970947266
    8. 'Stack' → logprob: -18.139163970947266
    9. ' ' → logprob: -18.264163970947266
    10. '    ' → logprob: -18.764163970947266

Token 428: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004624153021723032
    2. ':
' → logprob: -5.379624366760254
    3. '):' → logprob: -13.879624366760254
    4. 'and' → logprob: -14.004624366760254
    5. ' and' → logprob: -14.254624366760254
    6. ' :' → logprob: -14.754624366760254
    7. '):
' → logprob: -15.379624366760254
    8. ':

' → logprob: -15.754624366760254
    9. '```' → logprob: -16.129623413085938
    10. '.pop' → logprob: -16.379623413085938

Token 429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028614625334739685
    2. 'tile' → logprob: -6.002861499786377
    3. 'current' → logprob: -8.502861022949219
    4. 't' → logprob: -9.752861022949219
    5. '```' → logprob: -10.002861022949219
    6. ' current' → logprob: -10.877861022949219
    7. ' tile' → logprob: -11.002861022949219
    8. '            
' → logprob: -11.377861022949219
    9. '       ' → logprob: -11.627861022949219
    10. '   ' → logprob: -11.752861022949219

Token 430: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.00864659808576107
    2. ' current' → logprob: -4.758646488189697
    3. 'curr' → logprob: -10.758646965026855
    4. '           ' → logprob: -12.258646965026855
    5. 'node' → logprob: -13.008646965026855
    6. 'cur' → logprob: -13.133646965026855
    7. '               ' → logprob: -14.133646965026855
    8. 'tile' → logprob: -14.633646965026855
    9. 't' → logprob: -15.133646965026855
    10. '.current' → logprob: -16.50864601135254

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040630463510751724
    2. '=' → logprob: -3.415630578994751
    3. '_tile' → logprob: -5.040630340576172
    4. '_' → logprob: -7.665630340576172
    5. '_token' → logprob: -11.290630340576172
    6. ' ' → logprob: -12.540630340576172
    7. ' _' → logprob: -13.665630340576172
    8. 'tile' → logprob: -13.790630340576172
    9. '_stack' → logprob: -14.040630340576172
    10. ')' → logprob: -14.665630340576172

Token 432: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.01814994215965271
    2. ' stack' → logprob: -4.0181498527526855
    3. '	stack' → logprob: -17.268150329589844
    4. '(stack' → logprob: -18.768150329589844
    5. '_stack' → logprob: -19.143150329589844
    6. '.stack' → logprob: -19.643150329589844
    7. 'Stack' → logprob: -20.518150329589844
    8. 'stackoverflow' → logprob: -22.018150329589844
    9. ' ' → logprob: -22.143150329589844
    10. '   ' → logprob: -22.393150329589844

Token 433: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.935296834039036e-06
    2. 'pop' → logprob: -13.25000286102295
    3. '.' → logprob: -13.75000286102295
    4. '[-' → logprob: -19.375003814697266
    5. '   ' → logprob: -19.750003814697266
    6. ' .' → logprob: -20.125003814697266
    7. '.p' → logprob: -21.750003814697266
    8. '	pop' → logprob: -21.875003814697266
    9. '.Pop' → logprob: -22.500003814697266
    10. '```' → logprob: -22.750003814697266

Token 434: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012451570364646614
    2. '()
' → logprob: -9.00012493133545
    3. '(' → logprob: -14.37512493133545
    4. '()

' → logprob: -14.75012493133545
    5. '()`' → logprob: -17.500123977661133
    6. ' ()' → logprob: -17.625123977661133
    7. '();' → logprob: -17.750123977661133
    8. '()
' → logprob: -17.875123977661133
    9. '())' → logprob: -18.000123977661133
    10. '()]' → logprob: -18.375123977661133

Token 435: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18093758821487427
    2. '           ' → logprob: -1.8059375286102295
    3. ' key' → logprob: -7.055937767028809
    4. ' if' → logprob: -8.805937767028809
    5. 'key' → logprob: -9.305937767028809
    6. '        
' → logprob: -10.305937767028809
    7. 'if' → logprob: -11.055937767028809
    8. 'pos' → logprob: -11.305937767028809
    9. '   ' → logprob: -12.680937767028809
    10. '            
' → logprob: -12.680937767028809

Token 436: ' pos' (ID: 1253)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.05066249519586563
    2. 'pos' (adapté à ' pos') → logprob: -3.0506625175476074
    3. 'if' → logprob: -6.300662517547607
    4. 'pk' → logprob: -9.42566204071045
    5. '       ' → logprob: -9.67566204071045
    6. ' key' → logprob: -9.92566204071045
    7. 'current' → logprob: -11.17566204071045
    8. '   ' → logprob: -11.30066204071045
    9. '           ' → logprob: -11.80066204071045
    10. 'ck' → logprob: -12.42566204071045

Token 437: ' =' (ID: 314)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.02008654922246933
    2. ' =' → logprob: -4.395086765289307
    3. '=' → logprob: -4.895086765289307
    4. 'key' → logprob: -10.020086288452148
    5. '_' → logprob: -12.270086288452148
    6. '=_' → logprob: -12.395086288452148
    7. '   ' → logprob: -12.895086288452148
    8. 'Key' → logprob: -13.020086288452148
    9. ' key' → logprob: -13.145086288452148
    10. 'ition' → logprob: -13.395086288452148

Token 438: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013671636581420898
    2. ' self' → logprob: -4.388671875
    3. '(self' → logprob: -6.763671875
    4. ' (' → logprob: -12.263671875
    5. '   ' → logprob: -13.888671875
    6. ' ' → logprob: -15.513671875
    7. '(' → logprob: -15.638671875
    8. 'current' → logprob: -15.888671875
    9. '	self' → logprob: -16.013671875
    10. '           ' → logprob: -17.013671875

Token 439: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -7.588793960167095e-05
    2. 'position' → logprob: -9.500076293945312
    3. '.' → logprob: -13.875076293945312
    4. ' .' → logprob: -16.875076293945312
    5. '[position' → logprob: -18.750076293945312
    6. ' position' → logprob: -19.250076293945312
    7. '	position' → logprob: -20.250076293945312
    8. 'osition' → logprob: -20.875076293945312
    9. ').' → logprob: -20.875076293945312
    10. '(position' → logprob: -21.000076293945312

Token 440: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -1.9361264946837764e-07
    2. 'key' → logprob: -16.75
    3. '_' → logprob: -18.0
    4. 'Key' → logprob: -19.0
    5. '_k' → logprob: -19.25
    6. ')_' → logprob: -19.625
    7. '_
' → logprob: -20.0
    8. '```' → logprob: -20.0
    9. ' _' → logprob: -20.375
    10. '_KEY' → logprob: -20.5

Token 441: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.6047699318733066e-05
    2. '(' → logprob: -11.125016212463379
    3. 'current' → logprob: -13.750016212463379
    4. '(cur' → logprob: -16.625015258789062
    5. '(
' → logprob: -16.750015258789062
    6. ' current' → logprob: -17.000015258789062
    7. '(curr' → logprob: -18.125015258789062
    8. ',current' → logprob: -19.375015258789062
    9. '[current' → logprob: -19.750015258789062
    10. '$current' → logprob: -19.875015258789062

Token 442: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10026232153177261
    2. ')
' → logprob: -2.350262403488159
    3. ' )' → logprob: -10.350262641906738
    4. ' )
' → logprob: -10.725262641906738
    5. ')
' → logprob: -13.850262641906738
    6. ')

' → logprob: -14.850262641906738
    7. '
' → logprob: -15.600262641906738
    8. ')`
' → logprob: -16.850261688232422
    9. ')`' → logprob: -17.100261688232422
    10. '))' → logprob: -18.100261688232422

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004364013671875
    2. '       ' → logprob: -5.629364013671875
    3. '<|end|>' → logprob: -8.254364013671875
    4. ' if' → logprob: -8.504364013671875
    5. '          ' → logprob: -9.754364013671875
    6. '            
' → logprob: -10.004364013671875
    7. '
' → logprob: -10.379364013671875
    8. '               ' → logprob: -10.504364013671875
    9. '   ' → logprob: -10.504364013671875
    10. ' ' → logprob: -10.754364013671875

Token 444: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6381913423538208
    2. ' if' → logprob: -1.1381913423538208
    3. '           ' → logprob: -1.8881913423538208
    4. '   ' → logprob: -12.388191223144531
    5. '       ' → logprob: -13.138191223144531
    6. '	if' → logprob: -13.513191223144531
    7. '
' → logprob: -14.513191223144531
    8. 'If' → logprob: -14.638191223144531
    9. '            
' → logprob: -14.638191223144531
    10. ' ' → logprob: -15.138191223144531

Token 445: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0788901224732399
    2. ' pos' → logprob: -2.578890085220337
    3. '           ' → logprob: -15.828889846801758
    4. '	pos' → logprob: -16.203889846801758
    5. '   ' → logprob: -16.828889846801758
    6. 'not' → logprob: -17.453889846801758
    7. ' not' → logprob: -18.078889846801758
    8. '(pos' → logprob: -18.453889846801758
    9. '
' → logprob: -18.578889846801758
    10. ' ' → logprob: -18.703889846801758

Token 446: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5795436501502991
    2. ' in' → logprob: -0.8295436501502991
    3. 'in' → logprob: -6.204543590545654
    4. 'not' → logprob: -6.454543590545654
    5. ' ' → logprob: -13.079544067382812
    6. ')' → logprob: -13.829544067382812
    7. '	not' → logprob: -14.954544067382812
    8. ' no' → logprob: -15.704544067382812
    9. '   ' → logprob: -15.954544067382812
    10. '
' → logprob: -16.079544067382812

Token 447: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4783289134502411
    2. 'in' → logprob: -0.9783289432525635
    3. '<|end|>' → logprob: -5.603328704833984
    4. '<|end|>' → logprob: -8.728328704833984
    5. 'self' → logprob: -8.978328704833984
    6. ')' → logprob: -9.228328704833984
    7. ' self' → logprob: -9.853328704833984
    8. '           ' → logprob: -9.978328704833984
    9. '(self' → logprob: -11.478328704833984
    10. 'to' → logprob: -11.978328704833984

Token 448: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020532844064291567
    2. ' self' → logprob: -8.500205039978027
    3. '           ' → logprob: -14.000205039978027
    4. '
' → logprob: -14.500205039978027
    5. '(self' → logprob: -15.375205039978027
    6. '       ' → logprob: -15.750205039978027
    7. '   ' → logprob: -17.375205993652344
    8. '[self' → logprob: -17.500205993652344
    9. '=self' → logprob: -17.750205993652344
    10. '	self' → logprob: -18.125205993652344

Token 449: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.00034118397161364555
    2. 'visited' → logprob: -8.000341415405273
    3. '.' → logprob: -12.500341415405273
    4. 'vis' → logprob: -14.375341415405273
    5. '.visit' → logprob: -15.125341415405273
    6. '.v' → logprob: -15.125341415405273
    7. ' .' → logprob: -15.125341415405273
    8. 'Visited' → logprob: -15.625341415405273
    9. '```' → logprob: -16.250341415405273
    10. 'isted' → logprob: -16.500341415405273

Token 450: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -8.180258191714529e-06
    2. 'isted' → logprob: -12.250008583068848
    3. 'it' → logprob: -14.250008583068848
    4. 'ite' → logprob: -14.500008583068848
    5. 'i' → logprob: -14.750008583068848
    6. '
' → logprob: -15.125008583068848
    7. 'ted' → logprob: -15.250008583068848
    8. 'ed' → logprob: -15.625008583068848
    9. '```' → logprob: -15.625008583068848
    10. '   ' → logprob: -15.875008583068848

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5760780572891235
    2. ':
' → logprob: -0.8260780572891235
    3. '):
' → logprob: -9.076078414916992
    4. '):' → logprob: -11.201078414916992
    5. ':
' → logprob: -12.451078414916992
    6. ':

' → logprob: -13.076078414916992
    7. ' :
' → logprob: -13.576078414916992
    8. '           ' → logprob: -14.326078414916992
    9. ')' → logprob: -14.576078414916992
    10. ' and' → logprob: -14.576078414916992

Token 452: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0303232129663229
    2. '           ' → logprob: -3.5303232669830322
    3. ':
' → logprob: -8.780323028564453
    4. ':' → logprob: -9.030323028564453
    5. '                
' → logprob: -9.655323028564453
    6. '                   ' → logprob: -9.905323028564453
    7. '            
' → logprob: -10.155323028564453
    8. '              ' → logprob: -10.530323028564453
    9. '<|end|>' → logprob: -10.655323028564453
    10. '):
' → logprob: -11.530323028564453

Token 453: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9813945889472961
    2. ' self' → logprob: -1.1063945293426514
    3. '                   ' → logprob: -1.4813945293426514
    4. 'self' (adapté à ' self') → logprob: -2.7313945293426514
    5. '           ' → logprob: -6.4813947677612305
    6. '                    
' → logprob: -8.85639476776123
    7. '   ' → logprob: -9.35639476776123
    8. '                
' → logprob: -9.60639476776123
    9. '                       ' → logprob: -10.10639476776123
    10. '```' → logprob: -10.35639476776123

Token 454: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -10.875022888183594
    3. 'visited' → logprob: -13.250022888183594
    4. '.visit' → logprob: -13.375022888183594
    5. ' .' → logprob: -14.125022888183594
    6. '.
' → logprob: -16.750022888183594
    7. '
' → logprob: -16.875022888183594
    8. '.vi' → logprob: -17.500022888183594
    9. '.v' → logprob: -17.625022888183594
    10. '           ' → logprob: -18.125022888183594

Token 455: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -5.5577775128767826e-06
    2. 'isted' → logprob: -12.375005722045898
    3. 'ite' → logprob: -14.625005722045898
    4. 'it' → logprob: -15.000005722045898
    5. 'ted' → logprob: -16.1250057220459
    6. '
' → logprob: -16.5000057220459
    7. '_' → logprob: -16.5000057220459
    8. 'ed' → logprob: -16.8750057220459
    9. '   ' → logprob: -17.2500057220459
    10. 'ITED' → logprob: -17.3750057220459

Token 456: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00247981958091259
    2. '.' → logprob: -6.0024800300598145
    3. 'add' → logprob: -12.752479553222656
    4. ' .' → logprob: -14.002479553222656
    5. '.update' → logprob: -16.002479553222656
    6. '.
' → logprob: -16.127479553222656
    7. '   ' → logprob: -16.877479553222656
    8. '
' → logprob: -17.002479553222656
    9. ' add' → logprob: -17.377479553222656
    10. '                   ' → logprob: -17.627479553222656

Token 457: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.500004768371582
    3. 'pos' → logprob: -14.500004768371582
    4. '(
' → logprob: -18.500003814697266
    5. '(position' → logprob: -19.375003814697266
    6. ' (' → logprob: -19.500003814697266
    7. ' pos' → logprob: -19.625003814697266
    8. ',pos' → logprob: -19.625003814697266
    9. '(p' → logprob: -19.750003814697266
    10. '(po' → logprob: -20.250003814697266

Token 458: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15984657406806946
    2. '               ' → logprob: -2.034846544265747
    3. ')
' → logprob: -4.159846782684326
    4. '<|end|>' → logprob: -7.159846782684326
    5. '                   ' → logprob: -8.284846305847168
    6. '
' → logprob: -8.784846305847168
    7. '                ' → logprob: -9.784846305847168
    8. '           ' → logprob: -9.909846305847168
    9. ',' → logprob: -10.784846305847168
    10. '                
' → logprob: -10.909846305847168

Token 459: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010427596978843212
    2. '
' → logprob: -4.760427474975586
    3. 'count' → logprob: -6.760427474975586
    4. '                   ' → logprob: -8.635427474975586
    5. ' count' → logprob: -8.635427474975586
    6. '                
' → logprob: -9.135427474975586
    7. '           ' → logprob: -9.510427474975586
    8. ' 
' → logprob: -10.635427474975586
    9. '                ' → logprob: -11.135427474975586
    10. '       ' → logprob: -11.385427474975586

Token 460: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -3.941161776310764e-05
    2. ' count' → logprob: -10.250039100646973
    3. '               ' → logprob: -12.500039100646973
    4. '           ' → logprob: -16.00004005432129
    5. '
' → logprob: -17.00004005432129
    6. '                   ' → logprob: -17.00004005432129
    7. '   ' → logprob: -17.25004005432129
    8. '	count' → logprob: -18.25004005432129
    9. 'if' → logprob: -19.62504005432129
    10. '                
' → logprob: -20.00004005432129

Token 461: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03804516792297363
    2. '+=' → logprob: -3.2880451679229736
    3. '+' → logprob: -13.663044929504395
    4. ' =' → logprob: -13.663044929504395
    5. '=' → logprob: -14.663044929504395
    6. ']+=' → logprob: -15.038044929504395
    7. ' ' → logprob: -15.663044929504395
    8. '<|end|>' → logprob: -15.913044929504395
    9. ' +' → logprob: -16.28804588317871
    10. '```' → logprob: -16.53804588317871

Token 462: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.377185821533203
    4. '```' → logprob: -18.377185821533203
    5. 'len' → logprob: -18.752185821533203
    6. '
' → logprob: -19.189685821533203
    7. '  ' → logprob: -19.252185821533203
    8. ' ' → logprob: -19.627185821533203
    9. 'current' → logprob: -20.314685821533203
    10. '           ' → logprob: -20.377185821533203

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -18.375
    4. 'len' → logprob: -18.625
    5. '   ' → logprob: -19.625
    6. 'current' → logprob: -19.875
    7. '```' → logprob: -21.625
    8. '           ' → logprob: -22.625
    9. '       ' → logprob: -23.25
    10. '  ' → logprob: -23.4375

Token 464: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22369055449962616
    2. '               ' → logprob: -1.7236905097961426
    3. ' for' → logprob: -4.723690509796143
    4. '                
' → logprob: -4.723690509796143
    5. 'for' → logprob: -6.223690509796143
    6. '           ' → logprob: -7.223690509796143
    7. '            
' → logprob: -8.2236909866333
    8. ' 
' → logprob: -8.2236909866333
    9. '                ' → logprob: -8.4736909866333
    10. '                   ' → logprob: -8.5986909866333

Token 465: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.156579852104187
    2. ' for' → logprob: -2.1565799713134766
    3. 'for' → logprob: -4.156579971313477
    4. '                
' → logprob: -4.906579971313477
    5. 'stack' → logprob: -6.281579971313477
    6. '           ' → logprob: -6.656579971313477
    7. '
' → logprob: -6.781579971313477
    8. '                   ' → logprob: -7.656579971313477
    9. ' stack' → logprob: -7.906579971313477
    10. 'neighbors' → logprob: -8.156579971313477

Token 466: ' neighbors' (ID: 31655)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030483035370707512
    2. ' for' → logprob: -3.5304830074310303
    3. 'stack' → logprob: -7.780483245849609
    4. 'neighbors' (adapté à ' neighbors') → logprob: -8.53048324584961
    5. '               ' → logprob: -9.28048324584961
    6. ' neighbors' → logprob: -11.15548324584961
    7. ' stack' → logprob: -11.65548324584961
    8. '                
' → logprob: -15.15548324584961
    9. '                   ' → logprob: -15.40548324584961
    10. '
' → logprob: -15.65548324584961

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3145725131034851
    2. '=' → logprob: -1.3145725727081299
    3. '_' → logprob: -6.814572334289551
    4. '.extend' → logprob: -9.06457233428955
    5. '_stack' → logprob: -10.18957233428955
    6. '_=' → logprob: -11.06457233428955
    7. '=current' → logprob: -12.18957233428955
    8. '_current' → logprob: -12.31457233428955
    9. '_to' → logprob: -12.31457233428955
    10. 's' → logprob: -12.56457233428955

Token 468: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004177410155534744
    2. ' self' → logprob: -5.504177570343018
    3. '[self' → logprob: -9.25417709350586
    4. '(self' → logprob: -13.12917709350586
    5. '   ' → logprob: -15.00417709350586
    6. '[' → logprob: -15.12917709350586
    7. '
' → logprob: -15.75417709350586
    8. '           ' → logprob: -15.75417709350586
    9. '=self' → logprob: -16.00417709350586
    10. '	self' → logprob: -16.00417709350586

Token 469: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.00861729308962822
    2. 'grid' → logprob: -4.758617401123047
    3. ' grid' → logprob: -13.633617401123047
    4. ' .' → logprob: -14.758617401123047
    5. '.' → logprob: -14.883617401123047
    6. 'neighbors' → logprob: -14.883617401123047
    7. '	grid' → logprob: -15.633617401123047
    8. '
' → logprob: -16.133617401123047
    9. '(grid' → logprob: -16.758617401123047
    10. '   ' → logprob: -17.133617401123047

Token 470: '.ne' (ID: 39319)
  Prédit: '.ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ne' → logprob: -1.0564331205387134e-05
    2. 'neighbors' → logprob: -11.50001049041748
    3. '.Ne' → logprob: -16.000011444091797
    4. ' .' → logprob: -16.250011444091797
    5. '.' → logprob: -16.625011444091797
    6. ' neighbors' → logprob: -18.625011444091797
    7. '.n' → logprob: -18.750011444091797
    8. '_neighbors' → logprob: -19.125011444091797
    9. '(ne' → logprob: -19.375011444091797
    10. 'Neighbors' → logprob: -19.375011444091797

Token 471: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -4.127333340875339e-06
    2. 'gh' → logprob: -13.375003814697266
    3. 'bors' → logprob: -13.625003814697266
    4. 'igh' → logprob: -14.375003814697266
    5. 'neighbors' → logprob: -14.500003814697266
    6. 'ighbor' → logprob: -16.000003814697266
    7. 'h' → logprob: -16.750003814697266
    8. 'ig' → logprob: -17.375003814697266
    9. 'ighbours' → logprob: -17.625003814697266
    10. 'g' → logprob: -17.625003814697266

Token 472: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.50001049041748
    3. 'current' → logprob: -14.62501049041748
    4. '(
' → logprob: -16.500011444091797
    5. '(cur' → logprob: -17.625011444091797
    6. '(curr' → logprob: -18.625011444091797
    7. ' current' → logprob: -19.250011444091797
    8. '((' → logprob: -19.250011444091797
    9. '(Current' → logprob: -19.375011444091797
    10. '[current' → logprob: -19.625011444091797

Token 473: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20146216452121735
    2. ')' → logprob: -1.7014621496200562
    3. '           ' → logprob: -10.951461791992188
    4. '               ' → logprob: -11.451461791992188
    5. ')
' → logprob: -11.451461791992188
    6. '       ' → logprob: -12.201461791992188
    7. ' )
' → logprob: -13.201461791992188
    8. '
' → logprob: -14.076461791992188
    9. ')

' → logprob: -14.201461791992188
    10. '   ' → logprob: -14.451461791992188

Token 474: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.6696149840718135e-05
    2. ' for' → logprob: -10.000056266784668
    3. 'for' → logprob: -12.375056266784668
    4. '           ' → logprob: -13.625056266784668
    5. '                
' → logprob: -13.750056266784668
    6. '       ' → logprob: -13.750056266784668
    7. 'stack' → logprob: -14.125056266784668
    8. '                   ' → logprob: -14.625056266784668
    9. '	           ' → logprob: -14.875056266784668
    10. '<|end|>' → logprob: -14.875056266784668

Token 475: ' for' (ID: 395)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0193092729896307
    2. 'for' (adapté à ' for') → logprob: -4.019309043884277
    3. '               ' → logprob: -7.019309043884277
    4. ' stack' → logprob: -8.769309043884277
    5. ' for' → logprob: -9.269309043884277
    6. '           ' → logprob: -11.894309043884277
    7. '	stack' → logprob: -12.644309043884277
    8. '                   ' → logprob: -13.019309043884277
    9. '   ' → logprob: -13.769309043884277
    10. '       ' → logprob: -14.394309043884277

Token 476: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.012010134756565094
    2. 'n' → logprob: -5.012010097503662
    3. ' neighbor' → logprob: -5.262010097503662
    4. 'nbr' → logprob: -9.38701057434082
    5. 'nei' → logprob: -12.51201057434082
    6. 'ne' → logprob: -12.88701057434082
    7. 'nb' → logprob: -12.88701057434082
    8. ' n' → logprob: -13.76201057434082
    9. 'next' → logprob: -14.26201057434082
    10. ' neigh' → logprob: -14.76201057434082

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014166101813316345
    2. 'in' → logprob: -4.264165878295898
    3. '	in' → logprob: -13.639165878295898
    4. ' ' → logprob: -14.514165878295898
    5. ' 
' → logprob: -15.139165878295898
    6. '
' → logprob: -15.889165878295898
    7. ',' → logprob: -16.3891658782959
    8. ' ' → logprob: -16.6391658782959
    9. '_in' → logprob: -16.6391658782959
    10. ')' → logprob: -16.7641658782959

Token 478: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.020559638738632202
    2. ' neighbors' → logprob: -3.895559549331665
    3. 'neighbor' → logprob: -11.520559310913086
    4. 'ne' → logprob: -12.520559310913086
    5. '_neighbors' → logprob: -13.270559310913086
    6. '(ne' → logprob: -14.270559310913086
    7. '   ' → logprob: -14.520559310913086
    8. '           ' → logprob: -14.645559310913086
    9. '               ' → logprob: -14.895559310913086
    10. '
' → logprob: -15.895559310913086

Token 479: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22625216841697693
    2. ':
' → logprob: -1.6012521982192993
    3. '                   ' → logprob: -7.60125207901001
    4. ' :' → logprob: -9.351252555847168
    5. '):
' → logprob: -9.476252555847168
    6. ' :
' → logprob: -9.726252555847168
    7. '               ' → logprob: -10.476252555847168
    8. '):' → logprob: -10.976252555847168
    9. ')' → logprob: -11.226252555847168
    10. '[::-' → logprob: -11.351252555847168

Token 480: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.037677861750125885
    2. 'stack' → logprob: -3.912677764892578
    3. ' stack' → logprob: -4.537677764892578
    4. ' if' → logprob: -5.162677764892578
    5. 'if' → logprob: -7.787677764892578
    6. '   ' → logprob: -9.412677764892578
    7. '                       ' → logprob: -11.287677764892578
    8. '                    ' → logprob: -11.412677764892578
    9. '    ' → logprob: -11.912677764892578
    10. '                ' → logprob: -12.037677764892578

Token 481: ' if' (ID: 538)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.05107206106185913
    2. 'if' (adapté à ' if') → logprob: -3.051072120666504
    3. ' stack' → logprob: -6.801072120666504
    4. ' if' → logprob: -7.426072120666504
    5. 'neighbor' → logprob: -7.676072120666504
    6. '                   ' → logprob: -8.926072120666504
    7. 'pos' → logprob: -8.926072120666504
    8. '   ' → logprob: -11.301072120666504
    9. '                       ' → logprob: -11.551072120666504
    10. '               ' → logprob: -12.051072120666504

Token 482: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008519167313352227
    2. ' self' → logprob: -7.750852108001709
    3. 'neighbor' → logprob: -7.875852108001709
    4. '(self' → logprob: -10.62585163116455
    5. '   ' → logprob: -11.75085163116455
    6. '                   ' → logprob: -12.50085163116455
    7. ' neighbor' → logprob: -13.75085163116455
    8. '
' → logprob: -13.87585163116455
    9. 'not' → logprob: -13.87585163116455
    10. ' ' → logprob: -14.12585163116455

Token 483: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.0001684981834841892
    2. 'position' → logprob: -8.750168800354004
    3. '.' → logprob: -11.750168800354004
    4. ' .' → logprob: -13.375168800354004
    5. ').' → logprob: -15.375168800354004
    6. '	position' → logprob: -17.000167846679688
    7. '   ' → logprob: -17.125167846679688
    8. ' position' → logprob: -17.500167846679688
    9. '[position' → logprob: -17.500167846679688
    10. '.grid' → logprob: -17.750167846679688

Token 484: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -1.9361264946837764e-07
    2. 'key' → logprob: -15.875
    3. '_' → logprob: -17.125
    4. 'Key' → logprob: -18.0
    5. '
' → logprob: -18.625
    6. '_KEY' → logprob: -19.375
    7. 's' → logprob: -19.75
    8. ' key' → logprob: -19.75
    9. ')_' → logprob: -19.75
    10. '_
' → logprob: -20.0

Token 485: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -4.723352049040841e-06
    2. 'neighbor' → logprob: -12.875004768371582
    3. '(' → logprob: -13.125004768371582
    4. ' (' → logprob: -16.875003814697266
    5. '(
' → logprob: -17.125003814697266
    6. '(n' → logprob: -17.625003814697266
    7. '
' → logprob: -17.625003814697266
    8. '(friend' → logprob: -18.000003814697266
    9. 'ne' → logprob: -19.375003814697266
    10. ' neighbor' → logprob: -19.750003814697266

Token 486: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -2.0339031834737398e-05
    2. 'igh' → logprob: -11.375020027160645
    3. 'ight' → logprob: -12.125020027160645
    4. 'gh' → logprob: -13.250020027160645
    5. 'ighbors' → logprob: -14.125020027160645
    6. 'neighbor' → logprob: -15.000020027160645
    7. 'ig' → logprob: -16.25002098083496
    8. 'ighborhood' → logprob: -16.37502098083496
    9. 'g' → logprob: -16.50002098083496
    10. '>' → logprob: -17.12502098083496

Token 487: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0056168390437960625
    2. ' not' → logprob: -5.630616664886475
    3. 'not' → logprob: -6.255616664886475
    4. ' )' → logprob: -9.505617141723633
    5. '()' → logprob: -11.130617141723633
    6. ')
' → logprob: -13.255617141723633
    7. '   ' → logprob: -13.505617141723633
    8. '
' → logprob: -14.255617141723633
    9. '())' → logprob: -14.630617141723633
    10. '	not' → logprob: -15.005617141723633

Token 488: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07954814285039902
    2. 'not' → logprob: -2.5795481204986572
    3. ')' → logprob: -7.329548358917236
    4. '()' → logprob: -13.829547882080078
    5. '	not' → logprob: -14.579547882080078
    6. ' no' → logprob: -14.954547882080078
    7. '
' → logprob: -15.579547882080078
    8. ' )' → logprob: -15.954547882080078
    9. 'no' → logprob: -17.079547882080078
    10. 'n' → logprob: -17.579547882080078

Token 489: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25194984674453735
    2. ' in' → logprob: -1.5019497871398926
    3. '                   ' → logprob: -11.62695026397705
    4. 'self' → logprob: -12.00195026397705
    5. '                       ' → logprob: -13.25195026397705
    6. '               ' → logprob: -13.62695026397705
    7. '
' → logprob: -14.87695026397705
    8. '   ' → logprob: -15.00195026397705
    9. '           ' → logprob: -15.00195026397705
    10. '<|end|>' → logprob: -15.12695026397705

Token 490: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005242533516138792
    2. ' self' → logprob: -5.255242347717285
    3. '
' → logprob: -12.630242347717285
    4. '           ' → logprob: -13.255242347717285
    5. '(self' → logprob: -13.755242347717285
    6. '                   ' → logprob: -14.130242347717285
    7. '               ' → logprob: -14.380242347717285
    8. '[self' → logprob: -14.880242347717285
    9. '	self' → logprob: -15.380242347717285
    10. '   ' → logprob: -15.505242347717285

Token 491: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.00026646157493814826
    2. 'visited' → logprob: -8.250266075134277
    3. '.' → logprob: -12.250266075134277
    4. ' .' → logprob: -15.375266075134277
    5. 'vis' → logprob: -17.125267028808594
    6. '.visible' → logprob: -17.375267028808594
    7. ' visited' → logprob: -17.750267028808594
    8. '```' → logprob: -17.875267028808594
    9. '.v' → logprob: -18.000267028808594
    10. '
' → logprob: -18.000267028808594

Token 492: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -5.512236498361744e-07
    2. 'isted' → logprob: -14.750000953674316
    3. '```' → logprob: -17.625
    4. '_' → logprob: -17.875
    5. 'ITED' → logprob: -18.0
    6. 'ite' → logprob: -18.125
    7. '
' → logprob: -18.25
    8. 'ted' → logprob: -18.375
    9. 'iting' → logprob: -18.75
    10. 'it' → logprob: -19.0

Token 493: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25627803802490234
    2. ':
' → logprob: -1.5062780380249023
    3. '                       ' → logprob: -5.631278038024902
    4. '):
' → logprob: -7.631278038024902
    5. '):' → logprob: -8.881278038024902
    6. '                   ' → logprob: -10.256278038024902
    7. ' and' → logprob: -11.006278038024902
    8. ')' → logprob: -11.006278038024902
    9. ' :
' → logprob: -11.006278038024902
    10. ':
' → logprob: -11.381278038024902

Token 494: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0009188431431539357
    2. ':
' → logprob: -8.2509183883667
    3. ' stack' → logprob: -8.2509183883667
    4. '                   ' → logprob: -9.1259183883667
    5. '                           ' → logprob: -9.6259183883667
    6. ':' → logprob: -9.8759183883667
    7. '                        
' → logprob: -10.2509183883667
    8. 'stack' → logprob: -10.3759183883667
    9. '(stack' → logprob: -11.2509183883667
    10. '               ' → logprob: -11.3759183883667

Token 495: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.3132999539375305
    2. ' stack' → logprob: -1.3132998943328857
    3. '                           ' → logprob: -10.438300132751465
    4. '	stack' → logprob: -12.188300132751465
    5. '                               ' → logprob: -13.813300132751465
    6. '                       ' → logprob: -13.813300132751465
    7. '(stack' → logprob: -14.688300132751465
    8. '   ' → logprob: -15.063300132751465
    9. '_stack' → logprob: -15.438300132751465
    10. ' ' → logprob: -15.563300132751465

Token 496: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015043864259496331
    2. '.' → logprob: -6.501504421234131
    3. '.extend' → logprob: -13.501503944396973
    4. '.push' → logprob: -14.876503944396973
    5. ' .' → logprob: -16.12650489807129
    6. '.app' → logprob: -16.12650489807129
    7. '.Append' → logprob: -17.75150489807129
    8. '.add' → logprob: -17.87650489807129
    9. 'append' → logprob: -18.37650489807129
    10. '.ap' → logprob: -19.00150489807129

Token 497: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.0004402055055834353
    2. '(' → logprob: -7.7504401206970215
    3. 'neighbor' → logprob: -11.87544059753418
    4. '(
' → logprob: -13.12544059753418
    5. ' (' → logprob: -15.62544059753418
    6. '(n' → logprob: -16.12544059753418
    7. 'ne' → logprob: -16.62544059753418
    8. ' neighbor' → logprob: -17.37544059753418
    9. '(friend' → logprob: -17.62544059753418
    10. '((' → logprob: -17.87544059753418

Token 498: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -8.180258191714529e-06
    2. 'gh' → logprob: -12.375008583068848
    3. 'igh' → logprob: -12.625008583068848
    4. 'ight' → logprob: -15.000008583068848
    5. 'ighbors' → logprob: -16.25000762939453
    6. 'g' → logprob: -17.62500762939453
    7. 'r' → logprob: -17.62500762939453
    8. ' ' → logprob: -17.87500762939453
    9. 'neighbor' → logprob: -17.87500762939453
    10. 'or' → logprob: -18.37500762939453

Token 499: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.534558552724775e-05
    2. '<|end|>' → logprob: -11.250025749206543
    3. ')
' → logprob: -11.750025749206543
    4. ')return' → logprob: -13.000025749206543
    5. ' )' → logprob: -14.375025749206543
    6. '                   ' → logprob: -15.250025749206543
    7. ')#' → logprob: -15.375025749206543
    8. ')}}' → logprob: -15.625025749206543
    9. '       ' → logprob: -15.875025749206543
    10. ')}' → logprob: -16.250024795532227

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.704065213445574e-05
    2. 'return' → logprob: -10.875046730041504
    3. '               ' → logprob: -12.125046730041504
    4. '   ' → logprob: -12.250046730041504
    5. '           ' → logprob: -12.375046730041504
    6. ')' → logprob: -12.750046730041504
    7. '<|end|>' → logprob: -12.750046730041504
    8. '```' → logprob: -13.125046730041504
    9. ' return' → logprob: -13.250046730041504
    10. '      ' → logprob: -13.375046730041504

Token 501: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024209641851484776
    2. 'return' (adapté à ' return') → logprob: -6.252420902252197
    3. ' return' → logprob: -7.752420902252197
    4. '   ' → logprob: -9.877421379089355
    5. '	return' → logprob: -12.502421379089355
    6. '               ' → logprob: -13.127421379089355
    7. '           ' → logprob: -13.502421379089355
    8. '	' → logprob: -14.127421379089355
    9. '      ' → logprob: -14.127421379089355
    10. '```' → logprob: -14.627421379089355

Token 502: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07888978719711304
    2. ' count' → logprob: -2.578889846801758
    3. '	count' → logprob: -17.953889846801758
    4. '(count' → logprob: -18.828889846801758
    5. '$count' → logprob: -21.078889846801758
    6. '[count' → logprob: -21.203889846801758
    7. '_count' → logprob: -21.828889846801758
    8. ' ' → logprob: -21.953889846801758
    9. '<count' → logprob: -21.953889846801758
    10. '
' → logprob: -22.328889846801758

Token 503: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2683876156806946
    2. '<|end|>' → logprob: -1.5183875560760498
    3. '   ' → logprob: -4.768387794494629
    4. 'def' → logprob: -5.643387794494629
    5. '<|end|>' → logprob: -6.268387794494629
    6. '

' → logprob: -6.893387794494629
    7. '    
' → logprob: -7.768387794494629
    8. '```' → logprob: -7.768387794494629
    9. '[' → logprob: -9.393387794494629
    10. '[
' → logprob: -9.893387794494629

Token 504: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00943115446716547
    2. 'class' → logprob: -5.1344313621521
    3. 'start' → logprob: -6.7594313621521
    4. '#' → logprob: -7.1344313621521
    5. '
' → logprob: -7.2594313621521
    6. 'grid' → logprob: -8.134430885314941
    7. '   ' → logprob: -8.884430885314941
    8. 'tile' → logprob: -9.134430885314941
    9. '```' → logprob: -9.509430885314941
    10. '@' → logprob: -9.759430885314941

Token 505: ' Input' (ID: 10090)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.6741033792495728
    2. 'Solution' → logprob: -1.2991033792495728
    3. 'Reach' → logprob: -2.424103260040283
    4. ' Path' → logprob: -3.424103260040283
    5. 'Maze' → logprob: -4.049103260040283
    6. 'Solver' → logprob: -4.299103260040283
    7. ' Maze' → logprob: -4.549103260040283
    8. ' Solution' → logprob: -4.799103260040283
    9. 'Grid' → logprob: -4.799103260040283
    10. 'Area' → logprob: -5.174103260040283

Token 506: 'Reader' (ID: 7171)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.8316051959991455
    2. 'Reader' → logprob: -1.3316051959991455
    3. 'Handler' → logprob: -1.7066051959991455
    4. 'Processor' → logprob: -2.5816051959991455
    5. 'Data' → logprob: -3.7066051959991455
    6. ':' → logprob: -4.456604957580566
    7. 'Provider' → logprob: -6.081604957580566
    8. ':
' → logprob: -6.831604957580566
    9. 'Output' → logprob: -7.206604957580566
    10. 'Manager' → logprob: -7.331604957580566

Token 507: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0619908832013607
    2. ':
' → logprob: -2.811990976333618
    3. ':

' → logprob: -11.561990737915039
    4. '<|end|>' → logprob: -12.186990737915039
    5. ':def' → logprob: -12.686990737915039
    6. ' :' → logprob: -12.936990737915039
    7. ':
' → logprob: -14.061990737915039
    8. '(object' → logprob: -14.811990737915039
    9. ' :
' → logprob: -15.061990737915039
    10. '):' → logprob: -15.311990737915039

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04888756200671196
    2. ' def' → logprob: -3.0488874912261963
    3. 'def' → logprob: -8.798887252807617
    4. '<|end|>' → logprob: -9.423887252807617
    5. ' import' → logprob: -10.673887252807617
    6. 'import' → logprob: -10.923887252807617
    7. '	def' → logprob: -11.548887252807617
    8. '```' → logprob: -12.298887252807617
    9. '<|end|>' → logprob: -12.673887252807617
    10. ',' → logprob: -13.298887252807617

Token 509: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6966868042945862
    2. 'def' (adapté à ' def') → logprob: -0.6966868042945862
    3. '@' → logprob: -5.946686744689941
    4. ' @' → logprob: -7.196686744689941
    5. '   ' → logprob: -8.696686744689941
    6. '
' → logprob: -13.946686744689941
    7. 'de' → logprob: -14.571686744689941
    8. 'staticmethod' → logprob: -14.946686744689941
    9. '```' → logprob: -15.321686744689941
    10. ' ' → logprob: -15.821686744689941

Token 510: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1919519305229187
    2. ' __' → logprob: -1.8169519901275635
    3. 'def' → logprob: -5.066951751708984
    4. ' static' → logprob: -6.191951751708984
    5. '__' → logprob: -6.316951751708984
    6. 'staticmethod' → logprob: -7.191951751708984
    7. ' read' → logprob: -8.191951751708984
    8. 'put' → logprob: -8.316951751708984
    9. ' init' → logprob: -8.316951751708984
    10. 'init' → logprob: -8.566951751708984

Token 511: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.8624639324116288e-06
    2. 'ini' → logprob: -14.375001907348633
    3. 'def' → logprob: -15.000001907348633
    4. 'new' → logprob: -15.250001907348633
    5. ' init' → logprob: -15.375001907348633
    6. 'next' → logprob: -16.375001907348633
    7. 'in' → logprob: -16.625001907348633
    8. 'int' → logprob: -17.000001907348633
    9. 'inite' → logprob: -17.750001907348633
    10. '_init' → logprob: -17.875001907348633

Token 512: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05975991114974022
    2. '(' → logprob: -3.0597598552703857
    3. ' (' → logprob: -4.559760093688965
    4. '__(' → logprob: -8.434760093688965
    5. '(
' → logprob: -8.559760093688965
    6. 'self' → logprob: -9.684760093688965
    7. '   ' → logprob: -10.059760093688965
    8. ')(' → logprob: -10.434760093688965
    9. ' ' → logprob: -10.934760093688965
    10. '<|end|>' → logprob: -11.059760093688965

Token 513: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023929782037157565
    2. ')' → logprob: -8.625239372253418
    3. '
' → logprob: -10.250239372253418
    4. ' self' → logprob: -11.250239372253418
    5. '):
' → logprob: -11.500239372253418
    6. '(self' → logprob: -15.500239372253418
    7. ')
' → logprob: -15.625239372253418
    8. '):' → logprob: -16.1252384185791
    9. '),' → logprob: -16.3752384185791
    10. 'input' → logprob: -16.3752384185791

Token 514: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15393905341625214
    2. ',' → logprob: -2.6539390087127686
    3. '):
' → logprob: -2.9039390087127686
    4. 'self' → logprob: -4.153939247131348
    5. ')' → logprob: -6.903939247131348
    6. '(self' → logprob: -8.278939247131348
    7. '   ' → logprob: -8.778939247131348
    8. ' self' → logprob: -9.278939247131348
    9. ' ):' → logprob: -9.403939247131348
    10. '
' → logprob: -10.028939247131348

Token 515: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.1773260831832886
    2. ' lines' → logprob: -1.4273260831832886
    3. 'input' → logprob: -1.5523260831832886
    4. ')' → logprob: -1.9273260831832886
    5. 'self' → logprob: -3.052326202392578
    6. ' input' → logprob: -3.927326202392578
    7. '):
' → logprob: -4.927326202392578
    8. 'data' → logprob: -5.302326202392578
    9. 'file' → logprob: -5.302326202392578
    10. ' self' → logprob: -5.802326202392578

Token 516: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.24250392615795135
    2. '_data' → logprob: -1.7425038814544678
    3. '_str' → logprob: -3.7425038814544678
    4. '_source' → logprob: -5.242504119873047
    5. '_text' → logprob: -5.742504119873047
    6. ':' → logprob: -5.992504119873047
    7. '_string' → logprob: -6.367504119873047
    8. '_' → logprob: -6.992504119873047
    9. '_name' → logprob: -7.242504119873047
    10. '_stream' → logprob: -7.492504119873047

Token 517: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1822921633720398
    2. '):' → logprob: -1.8072922229766846
    3. '):
' → logprob: -6.1822919845581055
    4. ')' → logprob: -8.807291984558105
    5. 'self' → logprob: -9.307291984558105
    6. ':list' → logprob: -9.807291984558105
    7. '=None' → logprob: -9.932291984558105
    8. '=' → logprob: -10.182291984558105
    9. ' :' → logprob: -10.432291984558105
    10. '   ' → logprob: -10.682291984558105

Token 518: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0007083826349116862
    2. ' list' → logprob: -7.50070858001709
    3. ')' → logprob: -9.37570858001709
    4. '[list' → logprob: -10.62570858001709
    5. 'self' → logprob: -10.75070858001709
    6. 'None' → logprob: -11.12570858001709
    7. '):
' → logprob: -13.00070858001709
    8. 'iter' → logprob: -13.25070858001709
    9. '```' → logprob: -13.62570858001709
    10. '):' → logprob: -13.75070858001709

Token 519: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -6.988221684878226e-06
    2. 'str' → logprob: -11.875006675720215
    3. ':str' → logprob: -16.75000762939453
    4. '=str' → logprob: -18.00000762939453
    5. '(str' → logprob: -18.12500762939453
    6. '	str' → logprob: -18.37500762939453
    7. '):' → logprob: -18.37500762939453
    8. ')' → logprob: -18.50000762939453
    9. '):
' → logprob: -18.75000762939453
    10. '
' → logprob: -19.25000762939453

Token 520: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.734881579875946
    2. '):' → logprob: -0.859881579875946
    3. ']):
' → logprob: -2.609881639480591
    4. '):
' → logprob: -3.859881639480591
    5. ')' → logprob: -6.859881401062012
    6. ']' → logprob: -7.234881401062012
    7. ']:' → logprob: -7.734881401062012
    8. '])' → logprob: -8.109881401062012
    9. ':' → logprob: -10.234881401062012
    10. '>):' → logprob: -10.984881401062012

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019257364328950644
    2. '   ' → logprob: -9.000192642211914
    3. 'self' → logprob: -10.250192642211914
    4. ' self' → logprob: -10.750192642211914
    5. '<|end|>' → logprob: -12.125192642211914
    6. ',' → logprob: -13.375192642211914
    7. '	self' → logprob: -13.875192642211914
    8. '      ' → logprob: -14.375192642211914
    9. ':' → logprob: -14.375192642211914
    10. '<|end|>' → logprob: -14.625192642211914

Token 522: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007667447789572179
    2. ' self' → logprob: -7.375766754150391
    3. '       ' → logprob: -8.87576675415039
    4. '   ' → logprob: -15.25076675415039
    5. 'lines' → logprob: -16.25076675415039
    6. '	self' → logprob: -16.75076675415039
    7. '
' → logprob: -17.62576675415039
    8. '```' → logprob: -18.00076675415039
    9. '        
' → logprob: -18.50076675415039
    10. ' ' → logprob: -18.75076675415039

Token 523: '.lines' (ID: 96601)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.5761266946792603
    2. '.lines' → logprob: -0.8261266946792603
    3. 'input' → logprob: -8.826127052307129
    4. 'lines' → logprob: -10.451127052307129
    5. '.' → logprob: -12.826127052307129
    6. '.raw' → logprob: -13.076127052307129
    7. '.line' → logprob: -13.201127052307129
    8. '	lines' → logprob: -13.451127052307129
    9. '.current' → logprob: -13.951127052307129
    10. '.inputs' → logprob: -14.451127052307129

Token 524: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022585332393646
    2. ' =' → logprob: -1.9102258682250977
    3. '   ' → logprob: -14.910225868225098
    4. ' ' → logprob: -14.910225868225098
    5. ' =
' → logprob: -15.285225868225098
    6. '=
' → logprob: -15.285225868225098
    7. '<|end|>' → logprob: -15.785225868225098
    8. '    ' → logprob: -15.910225868225098
    9. ')' → logprob: -16.28522491455078
    10. '
' → logprob: -17.16022491455078

Token 525: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004192248452454805
    2. ' input' → logprob: -6.004192352294922
    3. '[input' → logprob: -6.379192352294922
    4. '[' → logprob: -11.129192352294922
    5. ' [' → logprob: -13.004192352294922
    6. '   ' → logprob: -14.879192352294922
    7. '<input' → logprob: -15.004192352294922
    8. 'list' → logprob: -15.129192352294922
    9. '(input' → logprob: -15.504192352294922
    10. '[line' → logprob: -16.004192352294922

Token 526: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.1054253011243418e-05
    2. 'lines' → logprob: -10.875020980834961
    3. '_reader' → logprob: -13.875020980834961
    4. '_' → logprob: -15.000020980834961
    5. '_LINES' → logprob: -15.500020980834961
    6. 's' → logprob: -15.750020980834961
    7. '	lines' → logprob: -16.50002098083496
    8. '   ' → logprob: -16.62502098083496
    9. ' lines' → logprob: -17.00002098083496
    10. '[' → logprob: -17.12502098083496

Token 527: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08817356079816818
    2. '   ' → logprob: -2.5881736278533936
    3. 'def' → logprob: -5.7131733894348145
    4. '    
' → logprob: -6.0881733894348145
    5. '<|end|>' → logprob: -6.0881733894348145
    6. '

' → logprob: -7.4631733894348145
    7. ' def' → logprob: -7.9631733894348145
    8. '       ' → logprob: -8.713173866271973
    9. '	def' → logprob: -9.713173866271973
    10. ',' → logprob: -9.713173866271973

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2362317442893982
    2. '   ' → logprob: -2.236231803894043
    3. '
' → logprob: -2.361231803894043
    4. 'def' → logprob: -4.986231803894043
    5. '<|end|>' → logprob: -6.861231803894043
    6. '    
' → logprob: -7.486231803894043
    7. ' def' → logprob: -7.986231803894043
    8. '        
' → logprob: -8.736231803894043
    9. ',' → logprob: -9.361231803894043
    10. 'self' → logprob: -10.361231803894043

Token 529: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0010142299579456449
    2. '       ' → logprob: -7.626014232635498
    3. ' self' → logprob: -7.751014232635498
    4. '   ' → logprob: -10.12601375579834
    5. '
' → logprob: -10.37601375579834
    6. 'def' → logprob: -11.12601375579834
    7. '	self' → logprob: -12.75101375579834
    8. '@property' → logprob: -12.87601375579834
    9. '<|end|>' → logprob: -13.25101375579834
    10. '0' → logprob: -13.87601375579834

Token 530: '.current' (ID: 8357)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.05583174526691437
    2. 'current' → logprob: -3.6808316707611084
    3. '.index' → logprob: -3.9308316707611084
    4. ' index' → logprob: -5.6808319091796875
    5. '.current' → logprob: -5.6808319091796875
    6. '_index' → logprob: -6.4308319091796875
    7. ' current' → logprob: -7.4308319091796875
    8. 'pos' → logprob: -8.555831909179688
    9. '_current' → logprob: -9.930831909179688
    10. 'position' → logprob: -10.055831909179688

Token 531: '_line' (ID: 14418)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.04974178597331047
    2. '_line' → logprob: -3.049741744995117
    3. '=' → logprob: -7.424741744995117
    4. '_' → logprob: -8.424741744995117
    5. '_idx' → logprob: -8.424741744995117
    6. 'index' → logprob: -10.674741744995117
    7. ' =' → logprob: -10.799741744995117
    8. '_lineno' → logprob: -10.924741744995117
    9. 'Index' → logprob: -11.549741744995117
    10. 'line' → logprob: -11.549741744995117

Token 532: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3197968006134033
    2. ' =' → logprob: -1.3197968006134033
    3. '_index' → logprob: -5.069796562194824
    4. '_idx' → logprob: -8.569796562194824
    5. '_' → logprob: -10.444796562194824
    6. 'index' → logprob: -12.319796562194824
    7. ' ' → logprob: -13.569796562194824
    8. 'Index' → logprob: -13.944796562194824
    9. '=index' → logprob: -14.319796562194824
    10. ' =
' → logprob: -14.569796562194824

Token 533: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -18.750085830688477
    4. '۰' → logprob: -18.750085830688477
    5. '=' → logprob: -19.000085830688477
    6. '   ' → logprob: -20.187585830688477
    7. '<|end|>' → logprob: -20.375085830688477
    8. '```' → logprob: -20.437585830688477
    9. '000' → logprob: -20.562585830688477
    10. '100' → logprob: -20.687585830688477

Token 534: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '=' → logprob: -17.125045776367188
    4. '1' → logprob: -17.812545776367188
    5. '۰' → logprob: -17.937545776367188
    6. '```' → logprob: -18.500045776367188
    7. '<|end|>' → logprob: -19.000045776367188
    8. '[' → logprob: -19.125045776367188
    9. '   ' → logprob: -19.562545776367188
    10. '-' → logprob: -19.625045776367188

Token 535: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2800002098083496
    2. ' def' → logprob: -2.0300002098083496
    3. 'def' → logprob: -3.0300002098083496
    4. '   ' → logprob: -3.0300002098083496
    5. '    
' → logprob: -4.65500020980835
    6. '<|end|>' → logprob: -5.65500020980835
    7. '

' → logprob: -6.90500020980835
    8. '	def' → logprob: -7.03000020980835
    9. '  
' → logprob: -8.030000686645508
    10. '```' → logprob: -8.155000686645508

Token 536: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6169666051864624
    2. 'def' → logprob: -1.3669666051864624
    3. '   ' → logprob: -2.116966724395752
    4. ' def' → logprob: -2.616966724395752
    5. '    
' → logprob: -5.116966724395752
    6. '<|end|>' → logprob: -5.616966724395752
    7. '	def' → logprob: -7.116966724395752
    8. '

' → logprob: -7.991966724395752
    9. '<|end|>' → logprob: -8.241966247558594
    10. '```' → logprob: -8.366966247558594

Token 537: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006743439007550478
    2. ' def' → logprob: -5.006743431091309
    3. '   ' → logprob: -11.131743431091309
    4. '
' → logprob: -11.381743431091309
    5. '	def' → logprob: -14.131743431091309
    6. '```' → logprob: -14.256743431091309
    7. 'de' → logprob: -15.131743431091309
    8. '    
' → logprob: -15.881743431091309
    9. '

' → logprob: -16.381744384765625
    10. 'd' → logprob: -16.381744384765625

Token 538: ' has' (ID: 853)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0252622589468956
    2. 'has' → logprob: -3.7752623558044434
    3. ' read' → logprob: -7.025262355804443
    4. ' has' → logprob: -7.275262355804443
    5. ' readline' → logprob: -8.150261878967285
    6. 'next' → logprob: -9.025261878967285
    7. 'def' → logprob: -11.025261878967285
    8. 'get' → logprob: -12.900261878967285
    9. '	read' → logprob: -14.400261878967285
    10. 'peek' → logprob: -14.400261878967285

Token 539: '_next' (ID: 25436)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8122921586036682
    2. '_more' → logprob: -1.0622920989990234
    3. '_next' → logprob: -1.5622920989990234
    4. '_line' → logprob: -7.937292098999023
    5. '_lines' → logprob: -7.937292098999023
    6. ' _' → logprob: -10.812292098999023
    7. '_remaining' → logprob: -10.937292098999023
    8. '_current' → logprob: -11.187292098999023
    9. '_
' → logprob: -11.562292098999023
    10. '_token' → logprob: -11.687292098999023

Token 540: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16520999372005463
    2. '_line' → logprob: -1.9152100086212158
    3. '(' → logprob: -5.790209770202637
    4. '()' → logprob: -6.415209770202637
    5. 'line' → logprob: -8.790209770202637
    6. '_token' → logprob: -9.915209770202637
    7. 'self' → logprob: -10.165209770202637
    8. '_' → logprob: -11.165209770202637
    9. '(
' → logprob: -12.165209770202637
    10. '(line' → logprob: -12.790209770202637

Token 541: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011170192621648312
    2. '_line' → logprob: -5.136170387268066
    3. '(self' → logprob: -6.011170387268066
    4. 'self' → logprob: -6.761170387268066
    5. '):' → logprob: -7.136170387268066
    6. '):
' → logprob: -8.136170387268066
    7. '()' → logprob: -8.636170387268066
    8. '())' → logprob: -9.011170387268066
    9. 'line' → logprob: -9.636170387268066
    10. ' )' → logprob: -9.886170387268066

Token 542: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008717980235815048
    2. '(' → logprob: -7.250871658325195
    3. '_line' → logprob: -9.625871658325195
    4. '()' → logprob: -9.750871658325195
    5. 'self' → logprob: -10.375871658325195
    6. '(
' → logprob: -13.500871658325195
    7. ' self' → logprob: -14.375871658325195
    8. 'def' → logprob: -14.375871658325195
    9. 'line' → logprob: -14.500871658325195
    10. '():' → logprob: -14.625871658325195

Token 543: ' bool' (ID: 3792)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11569598317146301
    2. 'bool' → logprob: -2.7406959533691406
    3. ')' → logprob: -3.6156959533691406
    4. ' bool' → logprob: -4.365695953369141
    5. ' ()' → logprob: -6.365695953369141
    6. '():' → logprob: -7.240695953369141
    7. 'self' → logprob: -7.865695953369141
    8. 'int' → logprob: -7.865695953369141
    9. ' True' → logprob: -7.990695953369141
    10. ' ' → logprob: -8.11569595336914

Token 544: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05706633999943733
    2. '(' → logprob: -3.6820664405822754
    3. '():' → logprob: -3.9320664405822754
    4. '()' → logprob: -4.932066440582275
    5. ':' → logprob: -6.057066440582275
    6. 'self' → logprob: -7.057066440582275
    7. '():
' → logprob: -9.057065963745117
    8. '(
' → logprob: -9.307065963745117
    9. '->' → logprob: -10.307065963745117
    10. ')' → logprob: -11.307065963745117

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015491410158574581
    2. ' return' → logprob: -7.501549243927002
    3. 'return' → logprob: -8.376548767089844
    4. '
' → logprob: -8.501548767089844
    5. '<|end|>' → logprob: -8.501548767089844
    6. '   ' → logprob: -8.751548767089844
    7. '	' → logprob: -10.376548767089844
    8. '	return' → logprob: -10.626548767089844
    9. ':' → logprob: -10.876548767089844
    10. ' ' → logprob: -11.126548767089844

Token 546: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007156503852456808
    2. ' return' → logprob: -7.500715732574463
    3. '       ' → logprob: -8.750715255737305
    4. 'self' → logprob: -12.500715255737305
    5. '   ' → logprob: -14.750715255737305
    6. '	return' → logprob: -16.500715255737305
    7. '{return' → logprob: -18.000715255737305
    8. '```' → logprob: -18.000715255737305
    9. 'eturn' → logprob: -18.125715255737305
    10. ':return' → logprob: -18.500715255737305

Token 547: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858759790658951
    2. ' self' → logprob: -3.0485875606536865
    3. '	self' → logprob: -15.673587799072266
    4. '   ' → logprob: -16.798587799072266
    5. '(self' → logprob: -17.048587799072266
    6. '[self' → logprob: -18.673587799072266
    7. 'len' → logprob: -19.548587799072266
    8. '
' → logprob: -20.298587799072266
    9. '=self' → logprob: -20.423587799072266
    10. '_self' → logprob: -20.923587799072266

Token 548: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.00012451570364646614
    2. 'current' → logprob: -9.00012493133545
    3. '.' → logprob: -14.62512493133545
    4. ' current' → logprob: -14.87512493133545
    5. '.cur' → logprob: -16.250123977661133
    6. 'urrent' → logprob: -16.375123977661133
    7. '	current' → logprob: -18.125123977661133
    8. '.curr' → logprob: -18.500123977661133
    9. '_current' → logprob: -19.125123977661133
    10. '.
' → logprob: -19.375123977661133

Token 549: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.512236498361744e-07
    2. 'line' → logprob: -14.500000953674316
    3. '_' → logprob: -16.875
    4. '_lin' → logprob: -18.875
    5. '_LINE' → logprob: -19.0
    6. 'Line' → logprob: -19.875
    7. '_lines' → logprob: -20.5
    8. ' line' → logprob: -20.625
    9. '_li' → logprob: -20.75
    10. '
' → logprob: -20.875

Token 550: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16023407876491547
    2. '<' → logprob: -1.9102340936660767
    3. '<len' → logprob: -12.035234451293945
    4. ' ' → logprob: -13.035234451293945
    5. '<size' → logprob: -14.660234451293945
    6. '<int' → logprob: -14.910234451293945
    7. '[' → logprob: -15.285234451293945
    8. '<num' → logprob: -15.660234451293945
    9. '<class' → logprob: -15.910234451293945
    10. '<data' → logprob: -16.160234451293945

Token 551: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0024756586644798517
    2. ' len' → logprob: -6.002475738525391
    3. '(len' → logprob: -19.75247573852539
    4. '	len' → logprob: -19.75247573852539
    5. '<len' → logprob: -20.37747573852539
    6. '
' → logprob: -20.50247573852539
    7. '=len' → logprob: -20.62747573852539
    8. '[len' → logprob: -20.87747573852539
    9. 'length' → logprob: -21.25247573852539
    10. '   ' → logprob: -21.62747573852539

Token 552: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.250097274780273
    3. 'self' → logprob: -14.625097274780273
    4. '(
' → logprob: -15.000097274780273
    5. ' (' → logprob: -18.750097274780273
    6. ' self' → logprob: -19.000097274780273
    7. '(this' → logprob: -19.125097274780273
    8. '(s' → logprob: -19.375097274780273
    9. 's' → logprob: -20.000097274780273
    10. '(sel' → logprob: -20.625097274780273

Token 553: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -1.747814349073451e-05
    2. '.' → logprob: -11.000017166137695
    3. ' .' → logprob: -15.125017166137695
    4. '.line' → logprob: -16.000017166137695
    5. 'lines' → logprob: -17.125017166137695
    6. ').' → logprob: -17.250017166137695
    7. '.points' → logprob: -17.250017166137695
    8. '	lines' → logprob: -17.250017166137695
    9. '.l' → logprob: -17.375017166137695
    10. '.input' → logprob: -17.375017166137695

Token 554: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002153378736693412
    2. '   ' → logprob: -8.750215530395508
    3. ' )' → logprob: -10.250215530395508
    4. '<|end|>' → logprob: -11.250215530395508
    5. ' ' → logprob: -13.000215530395508
    6. 'def' → logprob: -13.625215530395508
    7. ')

' → logprob: -13.875215530395508
    8. ')return' → logprob: -14.125215530395508
    9. '<|end|>' → logprob: -14.250215530395508
    10. ')
' → logprob: -14.250215530395508

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37562835216522217
    2. 'def' → logprob: -1.7506283521652222
    3. ' def' → logprob: -2.2506284713745117
    4. '    
' → logprob: -3.6256284713745117
    5. '
' → logprob: -5.500628471374512
    6. '	def' → logprob: -6.875628471374512
    7. '<|end|>' → logprob: -7.250628471374512
    8. '```' → logprob: -7.750628471374512
    9. '  
' → logprob: -8.000628471374512
    10. ' 
' → logprob: -8.375628471374512

Token 556: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.643152740551159e-05
    2. ' def' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.125036239624023
    4. '    
' → logprob: -15.875036239624023
    5. '	def' → logprob: -16.500036239624023
    6. '
' → logprob: -16.750036239624023
    7. '```' → logprob: -17.750036239624023
    8. 'de' → logprob: -18.250036239624023
    9. '        
' → logprob: -18.625036239624023
    10. ':def' → logprob: -19.000036239624023

Token 557: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5592500567436218
    2. 'read' → logprob: -0.9342500567436218
    3. ' next' → logprob: -4.0592498779296875
    4. 'peek' → logprob: -4.6842498779296875
    5. ' read' → logprob: -5.1842498779296875
    6. 'def' → logprob: -5.9342498779296875
    7. 'get' → logprob: -8.684249877929688
    8. ' def' → logprob: -8.809249877929688
    9. ' peek' → logprob: -8.809249877929688
    10. ' readline' → logprob: -9.059249877929688

Token 558: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.008742804639041424
    2. '(self' → logprob: -5.383742809295654
    3. '()' → logprob: -6.008742809295654
    4. '_token' → logprob: -6.758742809295654
    5. 'line' → logprob: -8.383742332458496
    6. '(' → logprob: -8.508742332458496
    7. '_value' → logprob: -11.008742332458496
    8. '_' → logprob: -11.008742332458496
    9. '_tile' → logprob: -12.008742332458496
    10. '(line' → logprob: -12.508742332458496

Token 559: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4764026403427124
    2. '()' → logprob: -0.9764026403427124
    3. '(' → logprob: -6.101402759552002
    4. ' ()' → logprob: -9.976402282714844
    5. '():' → logprob: -10.601402282714844
    6. '()(' → logprob: -12.601402282714844
    7. ' (' → logprob: -13.226402282714844
    8. '()`' → logprob: -13.226402282714844
    9. 'self' → logprob: -13.601402282714844
    10. '(
' → logprob: -14.351402282714844

Token 560: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010230669751763344
    2. '):' → logprob: -4.635230541229248
    3. '):
' → logprob: -8.135231018066406
    4. '(self' → logprob: -9.385231018066406
    5. 'self' → logprob: -9.885231018066406
    6. ' )' → logprob: -10.260231018066406
    7. ')->' → logprob: -13.385231018066406
    8. ' ):' → logprob: -13.510231018066406
    9. '):

' → logprob: -13.510231018066406
    10. ')`' → logprob: -13.635231018066406

Token 561: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005152635276317596
    2. '()' → logprob: -8.00051498413086
    3. '(' → logprob: -8.75051498413086
    4. '():' → logprob: -11.00051498413086
    5. 'self' → logprob: -12.62551498413086
    6. '(
' → logprob: -14.62551498413086
    7. ' (' → logprob: -14.87551498413086
    8. '():
' → logprob: -15.37551498413086
    9. ' self' → logprob: -16.75051498413086
    10. ')' → logprob: -16.87551498413086

Token 562: ' str' (ID: 989)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2995142936706543
    2. ' self' → logprob: -1.7995142936706543
    3. 'str' → logprob: -2.7995142936706543
    4. ' str' → logprob: -3.4245142936706543
    5. 'lambda' → logprob: -11.549514770507812
    6. '(self' → logprob: -11.799514770507812
    7. ' lambda' → logprob: -11.924514770507812
    8. 'int' → logprob: -12.174514770507812
    9. '   ' → logprob: -13.174514770507812
    10. ' ' → logprob: -13.549514770507812

Token 563: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05923527479171753
    2. '():' → logprob: -3.3092353343963623
    3. '(' → logprob: -3.9342353343963623
    4. '()' → logprob: -6.809235095977783
    5. '():
' → logprob: -8.809235572814941
    6. ':' → logprob: -9.559235572814941
    7. '(
' → logprob: -9.934235572814941
    8. 'self' → logprob: -10.559235572814941
    9. ' (' → logprob: -11.934235572814941
    10. '   ' → logprob: -13.309235572814941

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009915214031934738
    2. ' line' → logprob: -4.634915351867676
    3. ' lines' → logprob: -10.509915351867676
    4. 'line' → logprob: -10.509915351867676
    5. ' result' → logprob: -10.759915351867676
    6. '#line' → logprob: -11.009915351867676
    7. '   ' → logprob: -11.509915351867676
    8. 'result' → logprob: -11.634915351867676
    9. '	line' → logprob: -11.634915351867676
    10. '```' → logprob: -12.009915351867676

Token 565: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.10020817816257477
    2. ' line' → logprob: -2.350208282470703
    3. ' if' → logprob: -14.975208282470703
    4. 'result' → logprob: -14.975208282470703
    5. '   ' → logprob: -15.100208282470703
    6. '	line' → logprob: -15.600208282470703
    7. 'if' → logprob: -15.975208282470703
    8. ' result' → logprob: -15.975208282470703
    9. 'l' → logprob: -15.975208282470703
    10. 'li' → logprob: -17.600208282470703

Token 566: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144686102867126
    2. '=' → logprob: -1.7014468908309937
    3. ' ' → logprob: -10.826446533203125
    4. '   ' → logprob: -12.451446533203125
    5. '=self' → logprob: -12.576446533203125
    6. '()' → logprob: -13.576446533203125
    7. ' =
' → logprob: -13.701446533203125
    8. '(self' → logprob: -14.576446533203125
    9. '=line' → logprob: -14.576446533203125
    10. '  ' → logprob: -15.076446533203125

Token 567: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416350994259119
    2. ' self' → logprob: -4.264163494110107
    3. '(self' → logprob: -20.389163970947266
    4. '	self' → logprob: -21.639163970947266
    5. '
' → logprob: -21.764163970947266
    6. '[self' → logprob: -22.889163970947266
    7. '   ' → logprob: -22.889163970947266
    8. '       ' → logprob: -22.889163970947266
    9. '=self' → logprob: -23.514163970947266
    10. ' ' → logprob: -25.389163970947266

Token 568: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -6.704273118884885e-07
    2. 'lines' → logprob: -14.875000953674316
    3. '	lines' → logprob: -16.25
    4. '.' → logprob: -16.25
    5. '(lines' → logprob: -18.375
    6. '.l' → logprob: -19.625
    7. ' lines' → logprob: -19.625
    8. '.readlines' → logprob: -20.0
    9. '.layers' → logprob: -20.375
    10. '.
' → logprob: -20.75

Token 569: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -4.692145012086257e-05
    2. 'self' → logprob: -10.125046730041504
    3. '[' → logprob: -12.000046730041504
    4. ' self' → logprob: -15.125046730041504
    5. '[
' → logprob: -15.750046730041504
    6. '
' → logprob: -16.00004768371582
    7. '(self' → logprob: -16.87504768371582
    8. ' [' → logprob: -17.75004768371582
    9. '   ' → logprob: -18.00004768371582
    10. '	self' → logprob: -18.87504768371582

Token 570: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -2.951771421066951e-05
    2. 'current' → logprob: -10.500029563903809
    3. '.' → logprob: -13.625029563903809
    4. '[current' → logprob: -15.125029563903809
    5. '.cur' → logprob: -15.875029563903809
    6. ' current' → logprob: -16.500028610229492
    7. '.user' → logprob: -16.750028610229492
    8. '.curr' → logprob: -17.250028610229492
    9. 'urrent' → logprob: -17.375028610229492
    10. '.next' → logprob: -18.125028610229492

Token 571: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0016613778425380588
    2. 'line' → logprob: -6.75166130065918
    3. 'self' → logprob: -7.87666130065918
    4. '[self' → logprob: -10.37666130065918
    5. 's' → logprob: -11.12666130065918
    6. '_lines' → logprob: -11.37666130065918
    7. 'l' → logprob: -11.62666130065918
    8. 'ine' → logprob: -12.12666130065918
    9. '[' → logprob: -12.37666130065918
    10. '```' → logprob: -12.75166130065918

Token 572: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0004587903094943613
    2. '<|end|>' → logprob: -7.750458717346191
    3. '<|end|>' → logprob: -11.500458717346191
    4. '
' → logprob: -11.875458717346191
    5. '.strip' → logprob: -13.000458717346191
    6. '.rstrip' → logprob: -13.125458717346191
    7. ']
' → logprob: -13.500458717346191
    8. 'self' → logprob: -14.250458717346191
    9. ')
' → logprob: -14.250458717346191
    10. '```' → logprob: -14.375458717346191

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013176199281588197
    2. 'self' → logprob: -6.876317501068115
    3. '
' → logprob: -8.501317977905273
    4. ' self' → logprob: -9.876317977905273
    5. '<|end|>' → logprob: -11.501317977905273
    6. '   ' → logprob: -12.501317977905273
    7. '```' → logprob: -12.876317977905273
    8. '	self' → logprob: -12.876317977905273
    9. '[self' → logprob: -13.001317977905273
    10. '        
' → logprob: -13.376317977905273

Token 574: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008625074988231063
    2. ' self' → logprob: -7.3758625984191895
    3. '       ' → logprob: -9.000862121582031
    4. '
' → logprob: -9.125862121582031
    5. '	self' → logprob: -13.250862121582031
    6. '[self' → logprob: -14.500862121582031
    7. '```' → logprob: -14.500862121582031
    8. '   ' → logprob: -15.125862121582031
    9. '        
' → logprob: -15.625862121582031
    10. '\' → logprob: -16.12586212158203

Token 575: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -1.9981420336989686e-05
    2. 'current' → logprob: -11.250020027160645
    3. '.' → logprob: -12.000020027160645
    4. '.
' → logprob: -14.375020027160645
    5. '
' → logprob: -17.000019073486328
    6. ' .' → logprob: -17.375019073486328
    7. '.user' → logprob: -17.750019073486328
    8. ' current' → logprob: -17.875019073486328
    9. '	current' → logprob: -19.000019073486328
    10. '.cur' → logprob: -19.000019073486328

Token 576: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.9361264946837764e-07
    2. 'line' → logprob: -16.0
    3. '_lin' → logprob: -19.625
    4. '_' → logprob: -21.0
    5. '_LINE' → logprob: -21.0
    6. '_l' → logprob: -22.0
    7. ' line' → logprob: -22.375
    8. '_Line' → logprob: -22.625
    9. '\' → logprob: -22.875
    10. '-line' → logprob: -23.25

Token 577: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0067161982879042625
    2. ' +=' → logprob: -5.006716251373291
    3. ']+=' → logprob: -14.256715774536133
    4. '+' → logprob: -15.631715774536133
    5. '=' → logprob: -17.381715774536133
    6. '+="' → logprob: -17.506715774536133
    7. '```' → logprob: -18.131715774536133
    8. '+='' → logprob: -18.631715774536133
    9. '+=(' → logprob: -18.756715774536133
    10. '   ' → logprob: -20.006715774536133

Token 578: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -22.000003814697266
    4. '
' → logprob: -22.375003814697266
    5. '   ' → logprob: -24.125003814697266
    6. '`' → logprob: -25.250003814697266
    7. '１' → logprob: -25.375003814697266
    8. '۱' → logprob: -26.500003814697266
    9. '0' → logprob: -27.125003814697266
    10. '' → logprob: -27.500003814697266

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '
' → logprob: -21.75
    4. '```' → logprob: -23.0
    5. '１' → logprob: -24.75
    6. '' → logprob: -25.0
    7. '۱' → logprob: -25.25
    8. '   ' → logprob: -25.375
    9. '১' → logprob: -26.0
    10. '१' → logprob: -26.125

Token 580: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17927420139312744
    2. 'return' → logprob: -2.304274082183838
    3. '
' → logprob: -2.804274082183838
    4. ' return' → logprob: -5.679274082183838
    5. '	return' → logprob: -9.179274559020996
    6. '        
' → logprob: -9.679274559020996
    7. '   ' → logprob: -9.929274559020996
    8. '<|end|>' → logprob: -10.429274559020996
    9. '  
' → logprob: -11.429274559020996
    10. '	' → logprob: -11.429274559020996

Token 581: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10399904102087021
    2. 'return' → logprob: -2.353999137878418
    3. ' return' → logprob: -5.603999137878418
    4. '   ' → logprob: -9.853999137878418
    5. '
' → logprob: -10.603999137878418
    6. '	return' → logprob: -10.853999137878418
    7. '	' → logprob: -13.103999137878418
    8. '{return' → logprob: -14.353999137878418
    9. '           ' → logprob: -14.603999137878418
    10. '```' → logprob: -14.603999137878418

Token 582: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.583550642360933e-05
    2. ' return' → logprob: -10.250036239624023
    3. '       ' → logprob: -14.875036239624023
    4. '
' → logprob: -18.375036239624023
    5. 'line' → logprob: -18.375036239624023
    6. '```' → logprob: -18.750036239624023
    7. '	return' → logprob: -20.000036239624023
    8. 'eturn' → logprob: -20.750036239624023
    9. ':return' → logprob: -21.125036239624023
    10. '{return' → logprob: -21.125036239624023

Token 583: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0019286326132714748
    2. ' line' → logprob: -6.251928806304932
    3. '(line' → logprob: -21.001928329467773
    4. '	line' → logprob: -22.126928329467773
    5. '[line' → logprob: -23.751928329467773
    6. '=line' → logprob: -24.126928329467773
    7. '#line' → logprob: -24.376928329467773
    8. 'Line' → logprob: -25.251928329467773
    9. 'lin' → logprob: -25.501928329467773
    10. '`' → logprob: -26.501928329467773

Token 584: '.strip' (ID: 40613)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0240187905728817
    2. '   ' → logprob: -4.89901876449585
    3. 'def' → logprob: -4.89901876449585
    4. 'class' → logprob: -5.02401876449585
    5. '<|end|>' → logprob: -6.39901876449585
    6. '    
' → logprob: -8.274019241333008
    7. '

' → logprob: -8.524019241333008
    8. '```' → logprob: -10.024019241333008
    9. '<|end|>' → logprob: -10.149019241333008
    10. '  
' → logprob: -11.149019241333008

Token 585: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.15441757265944e-05
    2. '()
' → logprob: -10.625031471252441
    3. '())' → logprob: -12.750031471252441
    4. '(' → logprob: -12.875031471252441
    5. ')' → logprob: -14.625031471252441
    6. '()`' → logprob: -14.750031471252441
    7. '()

' → logprob: -15.125031471252441
    8. ' ()' → logprob: -15.500031471252441
    9. '()"' → logprob: -15.875031471252441
    10. '()]' → logprob: -16.750032424926758

Token 586: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004250896628946066
    2. 'class' → logprob: -6.254251003265381
    3. 'if' → logprob: -7.129251003265381
    4. 'n' → logprob: -7.379251003265381
    5. 'd' → logprob: -7.504251003265381
    6. '```' → logprob: -8.629250526428223
    7. '#' → logprob: -10.254250526428223
    8. 'from' → logprob: -10.379250526428223
    9. 'width' → logprob: -11.254250526428223
    10. 't' → logprob: -11.254250526428223

Token 587: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009826334193348885
    2. 'class' → logprob: -4.634826183319092
    3. 'from' → logprob: -11.00982666015625
    4. 'grid' → logprob: -11.38482666015625
    5. 'n' → logprob: -11.63482666015625
    6. 'input' → logprob: -12.13482666015625
    7. 'if' → logprob: -12.13482666015625
    8. 'T' → logprob: -12.75982666015625
    9. 'width' → logprob: -12.75982666015625
    10. 'code' → logprob: -12.75982666015625

Token 588: ' read' (ID: 1729)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03259267285466194
    2. 'read' → logprob: -3.5325927734375
    3. ' next' → logprob: -6.4075927734375
    4. 'peek' → logprob: -7.2825927734375
    5. 'parse' → logprob: -7.9075927734375
    6. 'to' → logprob: -10.4075927734375
    7. 'has' → logprob: -10.6575927734375
    8. ' read' → logprob: -11.0325927734375
    9. 'reset' → logprob: -11.2825927734375
    10. '__' → logprob: -11.2825927734375

Token 589: '_dataset' (ID: 40568)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.05189251899719238
    2. '_line' → logprob: -3.9268925189971924
    3. '_' → logprob: -4.301892280578613
    4. 'int' → logprob: -4.301892280578613
    5. '_grid' → logprob: -7.176892280578613
    6. '_block' → logprob: -7.301892280578613
    7. '()' → logprob: -7.551892280578613
    8. '(self' → logprob: -8.176892280578613
    9. '_pair' → logprob: -8.301892280578613
    10. '_one' → logprob: -9.051892280578613

Token 590: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.56233171664644e-05
    2. '(' → logprob: -10.125055313110352
    3. 'self' → logprob: -12.250055313110352
    4. '(
' → logprob: -12.500055313110352
    5. '()' → logprob: -13.250055313110352
    6. ' (' → logprob: -13.500055313110352
    7. '   ' → logprob: -13.500055313110352
    8. 'def' → logprob: -14.250055313110352
    9. '(s' → logprob: -14.375055313110352
    10. 's' → logprob: -14.625055313110352

Token 591: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.8921695047756657e-05
    2. '(' → logprob: -11.500028610229492
    3. 'self' → logprob: -11.500028610229492
    4. ')' → logprob: -12.000028610229492
    5. '()' → logprob: -14.250028610229492
    6. '(
' → logprob: -14.875028610229492
    7. 's' → logprob: -15.125028610229492
    8. '   ' → logprob: -15.250028610229492
    9. ')(' → logprob: -15.500028610229492
    10. '(s' → logprob: -15.625028610229492

Token 592: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.179569077678025e-05
    2. '(' → logprob: -10.375041961669922
    3. ' (' → logprob: -12.375041961669922
    4. '   ' → logprob: -12.625041961669922
    5. 'self' → logprob: -13.500041961669922
    6. '(
' → logprob: -14.250041961669922
    7. ' self' → logprob: -14.875041961669922
    8. '       ' → logprob: -15.500041961669922
    9. '(s' → logprob: -15.875041961669922
    10. ' ' → logprob: -16.375041961669922

Token 593: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.001142241875641048
    2. ' tuple' → logprob: -7.3761420249938965
    3. 'int' → logprob: -8.626142501831055
    4. 'list' → logprob: -8.751142501831055
    5. '(tuple' → logprob: -9.126142501831055
    6. 'Optional' → logprob: -9.751142501831055
    7. '   ' → logprob: -12.876142501831055
    8. 'dict' → logprob: -13.001142501831055
    9. 'None' → logprob: -13.001142501831055
    10. 'optional' → logprob: -13.501142501831055

Token 594: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0003003081073984504
    2. '[' → logprob: -9.000300407409668
    3. ':
' → logprob: -9.625300407409668
    4. ':' → logprob: -10.250300407409668
    5. '(int' → logprob: -10.375300407409668
    6. '[
' → logprob: -10.500300407409668
    7. '[Int' → logprob: -11.875300407409668
    8. '|' → logprob: -12.375300407409668
    9. 'int' → logprob: -12.750300407409668
    10. '   ' → logprob: -13.625300407409668

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0060691023245453835
    2. ',int' → logprob: -5.131069183349609
    3. '[int' → logprob: -9.13106918334961
    4. ' ,' → logprob: -11.00606918334961
    5. 'int' → logprob: -11.25606918334961
    6. ',
' → logprob: -13.75606918334961
    7. ']int' → logprob: -14.00606918334961
    8. ',bool' → logprob: -15.25606918334961
    9. ',Integer' → logprob: -16.25606918334961
    10. ' int' → logprob: -16.63106918334961

Token 596: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00140511360950768
    2. 'list' → logprob: -6.751405239105225
    3. '[int' → logprob: -8.626404762268066
    4. '...' → logprob: -11.251404762268066
    5. 'str' → logprob: -11.501404762268066
    6. ' int' → logprob: -11.501404762268066
    7. 'List' → logprob: -12.001404762268066
    8. '   ' → logprob: -12.626404762268066
    9. ']int' → logprob: -12.751404762268066
    10. 'Grid' → logprob: -12.876404762268066

Token 597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.049755782238208e-05
    2. ',int' → logprob: -10.62505054473877
    3. ' ,' → logprob: -10.75005054473877
    4. ']' → logprob: -13.25005054473877
    5. ']:' → logprob: -14.12505054473877
    6. ',
' → logprob: -14.75005054473877
    7. '   ' → logprob: -14.87505054473877
    8. ',bool' → logprob: -15.25005054473877
    9. ']:
' → logprob: -15.75005054473877
    10. ',List' → logprob: -15.87505054473877

Token 598: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00016420685278717428
    2. ' list' → logprob: -8.875164031982422
    3. '[list' → logprob: -11.375164031982422
    4. 'str' → logprob: -12.000164031982422
    5. 'List' → logprob: -12.250164031982422
    6. 'int' → logprob: -13.875164031982422
    7. '   ' → logprob: -14.625164031982422
    8. 'Grid' → logprob: -16.375164031982422
    9. '```' → logprob: -16.500164031982422
    10. '(list' → logprob: -16.500164031982422

Token 599: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.9361264946837764e-07
    2. 'str' → logprob: -16.625
    3. '[
' → logprob: -18.125
    4. '[' → logprob: -18.875
    5. '[int' → logprob: -19.0
    6. ']' → logprob: -19.625
    7. '(str' → logprob: -20.25
    8. '	str' → logprob: -21.125
    9. ':str' → logprob: -21.5
    10. '```' → logprob: -21.75

Token 600: ']]' (ID: 8928)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1832236498594284
    2. ']:
' → logprob: -1.9332236051559448
    3. ']' → logprob: -3.8082237243652344
    4. ']:
' → logprob: -8.058223724365234
    5. ']>' → logprob: -9.433223724365234
    6. ']:

' → logprob: -9.433223724365234
    7. ']]:
' → logprob: -10.683223724365234
    8. '):' → logprob: -11.183223724365234
    9. ']:


' → logprob: -12.183223724365234
    10. '[' → logprob: -12.183223724365234

Token 601: ' |' (ID: 1022)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.054884087294340134
    2. '(' → logprob: -4.17988395690918
    3. '(
' → logprob: -4.55488395690918
    4. ':' → logprob: -4.55488395690918
    5. '   ' → logprob: -4.80488395690918
    6. '       ' → logprob: -5.42988395690918
    7. ':
' → logprob: -6.30488395690918
    8. '():
' → logprob: -6.67988395690918
    9. 'self' → logprob: -7.67988395690918
    10. '():' → logprob: -7.92988395690918

Token 602: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00020354038861114532
    2. ' None' → logprob: -8.500203132629395
    3. 'type' → logprob: -17.50020408630371
    4. '   ' → logprob: -17.50020408630371
    5. '_None' → logprob: -18.00020408630371
    6. '(None' → logprob: -18.75020408630371
    7. 'none' → logprob: -19.12520408630371
    8. 'tuple' → logprob: -19.62520408630371
    9. ' ' → logprob: -19.87520408630371
    10. '  ' → logprob: -20.50020408630371

Token 603: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0566391721367836
    2. ':
' → logprob: -3.1816391944885254
    3. '():' → logprob: -4.431639194488525
    4. '():
' → logprob: -6.806639194488525
    5. '       ' → logprob: -8.681638717651367
    6. '   ' → logprob: -9.056638717651367
    7. '(' → logprob: -9.306638717651367
    8. '):' → logprob: -9.806638717651367
    9. '(
' → logprob: -10.931638717651367
    10. ',' → logprob: -11.056638717651367

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014656837447546422
    2. '```' → logprob: -9.250146865844727
    3. ' line' → logprob: -10.375146865844727
    4. 'line' → logprob: -11.875146865844727
    5. '   ' → logprob: -13.125146865844727
    6. 'while' → logprob: -13.375146865844727
    7. '#line' → logprob: -13.500146865844727
    8. '{
' → logprob: -13.875146865844727
    9. ' while' → logprob: -13.875146865844727
    10. ',' → logprob: -14.250146865844727

Token 605: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00733613409101963
    2. 'line' → logprob: -5.507336139678955
    3. ' if' → logprob: -6.132336139678955
    4. 'while' (adapté à ' while') → logprob: -7.257336139678955
    5. '       ' → logprob: -8.382335662841797
    6. 'n' → logprob: -9.257335662841797
    7. 'w' → logprob: -10.757335662841797
    8. ' line' → logprob: -11.132335662841797
    9. 'try' → logprob: -12.132335662841797
    10. 'width' → logprob: -12.382335662841797

Token 606: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016294787637889385
    2. 'True' → logprob: -6.62662935256958
    3. ' self' → logprob: -8.126629829406738
    4. ' True' → logprob: -12.251629829406738
    5. 'not' → logprob: -13.876629829406738
    6. '       ' → logprob: -14.251629829406738
    7. '   ' → logprob: -14.501629829406738
    8. '(self' → logprob: -14.626629829406738
    9. '	self' → logprob: -14.751629829406738
    10. '           ' → logprob: -17.001628875732422

Token 607: '.has' (ID: 10752)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.08168434351682663
    2. 'current' → logprob: -2.5816843509674072
    3. '.has' → logprob: -5.956684112548828
    4. 'has' → logprob: -9.081684112548828
    5. '_current' → logprob: -10.706684112548828
    6. 'as' → logprob: -11.081684112548828
    7. '[current' → logprob: -11.206684112548828
    8. ' current' → logprob: -11.331684112548828
    9. '.' → logprob: -11.956684112548828
    10. ':' → logprob: -12.331684112548828

Token 608: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.006104996893554926
    2. '_' → logprob: -5.131104946136475
    3. 'next' → logprob: -9.131105422973633
    4. '_
' → logprob: -10.756105422973633
    5. ' _' → logprob: -12.131105422973633
    6. '_more' → logprob: -12.256105422973633
    7. '__' → logprob: -12.381105422973633
    8. ' next' → logprob: -12.631105422973633
    9. '_n' → logprob: -12.756105422973633
    10. '()' → logprob: -12.881105422973633

Token 609: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.594684362411499
    2. '():' → logprob: -0.844684362411499
    3. ':' → logprob: -4.344684600830078
    4. ':
' → logprob: -5.219684600830078
    5. '()' → logprob: -9.719684600830078
    6. ' ():' → logprob: -10.094684600830078
    7. ' and' → logprob: -10.469684600830078
    8. ' :
' → logprob: -10.969684600830078
    9. ' :' → logprob: -11.094684600830078
    10. '():
' → logprob: -11.594684600830078

Token 610: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03469359874725342
    2. '           ' → logprob: -4.159693717956543
    3. ':' → logprob: -4.284693717956543
    4. ' line' → logprob: -6.284693717956543
    5. ':
' → logprob: -6.409693717956543
    6. ' lines' → logprob: -7.534693717956543
    7. ',' → logprob: -8.409693717956543
    8. 'line' → logprob: -9.534693717956543
    9. ' and' → logprob: -9.659693717956543
    10. '(line' → logprob: -10.034693717956543

Token 611: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.09852603822946548
    2. 'dims' → logprob: -2.9735260009765625
    3. 'dimensions' → logprob: -4.4735260009765625
    4. ' line' → logprob: -5.0985260009765625
    5. 'header' → logprob: -5.3485260009765625
    6. '           ' → logprob: -5.4735260009765625
    7. 'size' → logprob: -5.5985260009765625
    8. 'dim' → logprob: -5.7235260009765625
    9. 'w' → logprob: -6.0985260009765625
    10. 'first' → logprob: -6.2235260009765625

Token 612: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742230474948883
    2. '=' → logprob: -0.9742230176925659
    3. '=line' → logprob: -8.849223136901855
    4. '=
' → logprob: -13.474223136901855
    5. ' =
' → logprob: -14.474223136901855
    6. ' ' → logprob: -15.474223136901855
    7. 'line' → logprob: -15.599223136901855
    8. 's' → logprob: -16.72422218322754
    9. '(line' → logprob: -16.84922218322754
    10. '_line' → logprob: -16.84922218322754

Token 613: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031812789384275675
    2. ' self' → logprob: -5.753181457519531
    3. '           ' → logprob: -13.128181457519531
    4. '(self' → logprob: -13.628181457519531
    5. '=self' → logprob: -16.62818145751953
    6. 's' → logprob: -17.00318145751953
    7. '[self' → logprob: -17.00318145751953
    8. 'this' → logprob: -17.37818145751953
    9. '`' → logprob: -17.37818145751953
    10. '	self' → logprob: -18.25318145751953

Token 614: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.3871401250362396
    2. 'next' → logprob: -1.137140154838562
    3. ' next' → logprob: -8.387140274047852
    4. 'lines' → logprob: -11.137140274047852
    5. '.lines' → logprob: -11.637140274047852
    6. '_next' → logprob: -11.887140274047852
    7. '	next' → logprob: -12.262140274047852
    8. '.' → logprob: -13.262140274047852
    9. '[next' → logprob: -13.887140274047852
    10. '_lines' → logprob: -14.387140274047852

Token 615: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0001584850688232109
    2. 'line' → logprob: -9.125158309936523
    3. '_' → logprob: -10.000158309936523
    4. '_
' → logprob: -14.125158309936523
    5. '_l' → logprob: -14.500158309936523
    6. ' line' → logprob: -14.875158309936523
    7. 'Line' → logprob: -15.000158309936523
    8. '_lin' → logprob: -15.000158309936523
    9. '_LINE' → logprob: -15.125158309936523
    10. '()' → logprob: -15.375158309936523

Token 616: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3338638246059418
    2. '()' → logprob: -1.3338638544082642
    3. '       ' → logprob: -4.458863735198975
    4. '           ' → logprob: -5.708863735198975
    5. '
' → logprob: -5.833863735198975
    6. '():
' → logprob: -7.208863735198975
    7. ':
' → logprob: -7.958863735198975
    8. '().' → logprob: -7.958863735198975
    9. '.strip' → logprob: -7.958863735198975
    10. ':' → logprob: -8.333864212036133

Token 617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010333087295293808
    2. ' if' → logprob: -5.135333061218262
    3. '       ' → logprob: -5.885333061218262
    4. 'if' → logprob: -7.385333061218262
    5. '        
' → logprob: -8.260333061218262
    6. '            
' → logprob: -8.510333061218262
    7. '<|end|>' → logprob: -8.635333061218262
    8. '          ' → logprob: -9.760333061218262
    9. '        ' → logprob: -9.885333061218262
    10. ',' → logprob: -10.135333061218262

Token 618: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -9.388769103679806e-05
    2. '           ' → logprob: -9.750093460083008
    3. ' if' → logprob: -10.250093460083008
    4. 'parts' → logprob: -15.875093460083008
    5. 'If' → logprob: -18.125093460083008
    6. 'try' → logprob: -18.625093460083008
    7. 'tokens' → logprob: -18.625093460083008
    8. '```' → logprob: -18.625093460083008
    9. '
' → logprob: -19.250093460083008
    10. '            
' → logprob: -19.375093460083008

Token 619: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.869850218296051
    2. 'not' → logprob: -1.1198501586914062
    3. 'line' → logprob: -1.4948501586914062
    4. ' line' → logprob: -3.4948501586914062
    5. 'len' → logprob: -12.119850158691406
    6. '(line' → logprob: -12.369850158691406
    7. '   ' → logprob: -12.494850158691406
    8. ' ' → logprob: -13.494850158691406
    9. '!' → logprob: -13.994850158691406
    10. '	line' → logprob: -13.994850158691406

Token 620: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00029613598599098623
    2. ' line' → logprob: -8.125296592712402
    3. '(line' → logprob: -17.750295639038086
    4. '	line' → logprob: -18.250295639038086
    5. '
' → logprob: -18.375295639038086
    6. 'lin' → logprob: -19.500295639038086
    7. '#line' → logprob: -20.250295639038086
    8. '=line' → logprob: -21.250295639038086
    9. 'li' → logprob: -21.375295639038086
    10. 'len' → logprob: -21.500295639038086

Token 621: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.499541312456131
    2. ':' → logprob: -1.3745412826538086
    3. ' or' → logprob: -1.9995412826538086
    4. 'or' → logprob: -5.374541282653809
    5. '.strip' → logprob: -9.374541282653809
    6. '.startswith' → logprob: -10.249541282653809
    7. ':return' → logprob: -10.249541282653809
    8. ':

' → logprob: -11.374541282653809
    9. '```' → logprob: -12.124541282653809
    10. '):
' → logprob: -12.374541282653809

Token 622: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4609343707561493
    2. '               ' → logprob: -1.5859344005584717
    3. ':' → logprob: -1.8359344005584717
    4. '           ' → logprob: -5.460934162139893
    5. ' or' → logprob: -8.21093463897705
    6. ':return' → logprob: -8.96093463897705
    7. ' :
' → logprob: -8.96093463897705
    8. ',' → logprob: -9.71093463897705
    9. ' :' → logprob: -10.08593463897705
    10. ' continue' → logprob: -10.58593463897705

Token 623: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.20415113866329193
    2. ' continue' → logprob: -1.7041511535644531
    3. 'return' → logprob: -6.079151153564453
    4. ' return' → logprob: -8.329151153564453
    5. '           ' → logprob: -9.329151153564453
    6. '
' → logprob: -10.579151153564453
    7. 'contin' → logprob: -10.704151153564453
    8. 'break' → logprob: -10.829151153564453
    9. '               ' → logprob: -11.204151153564453
    10. 'continu' → logprob: -11.454151153564453

Token 624: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005297990282997489
    2. '            
' → logprob: -8.000530242919922
    3. '
' → logprob: -8.625530242919922
    4. '          ' → logprob: -12.750530242919922
    5. '           
' → logprob: -12.750530242919922
    6. 'tokens' → logprob: -12.750530242919922
    7. '        
' → logprob: -14.000530242919922
    8. '    
' → logprob: -14.375530242919922
    9. '       ' → logprob: -14.375530242919922
    10. '<|end|>' → logprob: -14.750530242919922

Token 625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008717515505850315
    2. ' parts' → logprob: -5.7587175369262695
    3. 'tokens' → logprob: -5.8837175369262695
    4. 'parts' → logprob: -6.8837175369262695
    5. ' try' → logprob: -7.7587175369262695
    6. 'try' → logprob: -7.8837175369262695
    7. ' tokens' → logprob: -8.13371753692627
    8. '       ' → logprob: -8.25871753692627
    9. '            
' → logprob: -9.25871753692627
    10. ' if' → logprob: -9.88371753692627

Token 626: ' W' (ID: 486)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.5293211936950684
    2. 'w' → logprob: -1.4043211936950684
    3. 'width' → logprob: -2.2793211936950684
    4. 'try' → logprob: -3.4043211936950684
    5. ' parts' → logprob: -4.029321193695068
    6. '           ' → logprob: -5.529321193695068
    7. 'dims' → logprob: -6.029321193695068
    8. 'dimensions' → logprob: -6.154321193695068
    9. 'n' → logprob: -6.654321193695068
    10. 'W' (adapté à ' W') → logprob: -7.529321193695068

Token 627: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.692145012086257e-05
    2. ' ,' → logprob: -10.250046730041504
    3. ',W' → logprob: -12.375046730041504
    4. ',
' → logprob: -13.125046730041504
    5. '=' → logprob: -14.625046730041504
    6. '<|end|>' → logprob: -14.625046730041504
    7. ',\
' → logprob: -14.875046730041504
    8. ',int' → logprob: -15.000046730041504
    9. ',N' → logprob: -15.125046730041504
    10. ' ' → logprob: -15.125046730041504

Token 628: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00978973601013422
    2. ' H' → logprob: -4.634789943695068
    3. 'h' → logprob: -10.38478946685791
    4. 'rest' → logprob: -14.13478946685791
    5. ' ' → logprob: -14.38478946685791
    6. ' rest' → logprob: -14.75978946685791
    7. ' h' → logprob: -15.75978946685791
    8. ' 
' → logprob: -15.75978946685791
    9. 'space' → logprob: -15.75978946685791
    10. '`' → logprob: -16.134790420532227

Token 629: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030440818518400192
    2. ' =' → logprob: -3.5304408073425293
    3. ',' → logprob: -7.280440807342529
    4. '=
' → logprob: -14.530441284179688
    5. ' ' → logprob: -15.905441284179688
    6. '=

' → logprob: -16.030441284179688
    7. '=int' → logprob: -16.405441284179688
    8. ')' → logprob: -16.780441284179688
    9. '<|end|>' → logprob: -16.780441284179688
    10. ')=' → logprob: -17.030441284179688

Token 630: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4747585654258728
    2. ' map' → logprob: -0.9747585654258728
    3. 'line' → logprob: -7.599758625030518
    4. ' line' → logprob: -9.22475814819336
    5. '(map' → logprob: -9.72475814819336
    6. '[line' → logprob: -11.34975814819336
    7. '(line' → logprob: -12.09975814819336
    8. '[' → logprob: -13.22475814819336
    9. '
' → logprob: -13.22475814819336
    10. '	map' → logprob: -14.84975814819336

Token 631: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020067949662916362
    2. 'int' → logprob: -9.000200271606445
    3. '(' → logprob: -9.500200271606445
    4. '(
' → logprob: -14.250200271606445
    5. '(str' → logprob: -14.500200271606445
    6. '(lambda' → logprob: -14.625200271606445
    7. '<int' → logprob: -15.375200271606445
    8. '[int' → logprob: -15.375200271606445
    9. ' int' → logprob: -16.000200271606445
    10. ' (' → logprob: -17.000200271606445

Token 632: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0002802855451591313
    2. ')' → logprob: -8.750280380249023
    3. ',line' → logprob: -9.625280380249023
    4. '(' → logprob: -10.125280380249023
    5. '=line' → logprob: -12.250280380249023
    6. ' line' → logprob: -12.250280380249023
    7. '[line' → logprob: -13.250280380249023
    8. ',' → logprob: -13.750280380249023
    9. '#line' → logprob: -13.875280380249023
    10. 'line' → logprob: -13.875280380249023

Token 633: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015029559144750237
    2. ' line' → logprob: -6.501502990722656
    3. '(line' → logprob: -14.501502990722656
    4. ')' → logprob: -16.501502990722656
    5. '[line' → logprob: -16.751502990722656
    6. '	line' → logprob: -17.251502990722656
    7. '=line' → logprob: -17.376502990722656
    8. '#line' → logprob: -18.376502990722656
    9. ',line' → logprob: -18.626502990722656
    10. 'li' → logprob: -20.126502990722656

Token 634: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.08358924835920334
    2. '().' → logprob: -2.5835893154144287
    3. '.' → logprob: -5.58358907699585
    4. '.strip' → logprob: -7.45858907699585
    5. ' .' → logprob: -7.95858907699585
    6. '.rstrip' → logprob: -13.833589553833008
    7. '()' → logprob: -13.958589553833008
    8. '.readline' → logprob: -14.708589553833008
    9. 'split' → logprob: -14.833589553833008
    10. ')' → logprob: -15.833589553833008

Token 635: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013089175336062908
    2. '()' → logprob: -4.513089179992676
    3. '())
' → logprob: -6.763089179992676
    4. '('' → logprob: -7.388089179992676
    5. '(' → logprob: -8.888089179992676
    6. ')' → logprob: -9.263089179992676
    7. '()
' → logprob: -11.263089179992676
    8. '(','' → logprob: -12.263089179992676
    9. '())

' → logprob: -12.513089179992676
    10. '())
' → logprob: -13.263089179992676

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042054426739923656
    2. '            
' → logprob: -9.375420570373535
    3. ' if' → logprob: -9.500420570373535
    4. 'if' → logprob: -9.500420570373535
    5. ',' → logprob: -10.125420570373535
    6. '<|end|>' → logprob: -10.375420570373535
    7. 'return' → logprob: -10.500420570373535
    8. '               ' → logprob: -10.750420570373535
    9. '       ' → logprob: -11.125420570373535
    10. '		' → logprob: -11.375420570373535

Token 637: ' if' (ID: 538)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5647748708724976
    2. 'if' (adapté à ' if') → logprob: -0.9397748708724976
    3. '           ' → logprob: -3.814774990081787
    4. ' lines' → logprob: -4.564774990081787
    5. ' if' → logprob: -5.064774990081787
    6. 'grid' → logprob: -6.689774990081787
    7. 'rows' → logprob: -7.939774990081787
    8. 'break' → logprob: -8.689774513244629
    9. '	lines' → logprob: -10.064774513244629
    10. 'data' → logprob: -10.189774513244629

Token 638: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0020824549719691277
    2. ' W' → logprob: -6.377082347869873
    3. '(' → logprob: -8.502082824707031
    4. '(W' → logprob: -8.752082824707031
    5. ' (' → logprob: -11.002082824707031
    6. ' ' → logprob: -14.752082824707031
    7. '	W' → logprob: -14.877082824707031
    8. 'H' → logprob: -15.502082824707031
    9. '(w' → logprob: -15.502082824707031
    10. ' ' → logprob: -15.502082824707031

Token 639: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12703026831150055
    2. ' ==' → logprob: -2.127030372619629
    3. '=' → logprob: -9.752030372619629
    4. '0' → logprob: -10.877030372619629
    5. ' ' → logprob: -12.127030372619629
    6. '==
' → logprob: -12.252030372619629
    7. 'W' → logprob: -12.627030372619629
    8. '<=' → logprob: -12.752030372619629
    9. '===' → logprob: -13.377030372619629
    10. 'is' → logprob: -13.502030372619629

Token 640: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -16.875015258789062
    4. '
' → logprob: -18.250015258789062
    5. '０' → logprob: -18.375015258789062
    6. '   ' → logprob: -18.500015258789062
    7. '```' → logprob: -18.500015258789062
    8. '  ' → logprob: -19.750015258789062
    9. '০' → logprob: -19.812515258789062
    10. '_' → logprob: -20.125015258789062

Token 641: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.375000953674316
    3. '```' → logprob: -15.875000953674316
    4. '０' → logprob: -16.625
    5. '۰' → logprob: -17.0
    6. 'W' → logprob: -17.0
    7. '
' → logprob: -17.375
    8. 'H' → logprob: -17.5
    9. '``' → logprob: -17.9375
    10. '

' → logprob: -18.125

Token 642: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1269291490316391
    2. ' and' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.75192928314209
    4. 'a' → logprob: -15.50192928314209
    5. '0' → logprob: -15.87692928314209
    6. ' a' → logprob: -16.001928329467773
    7. '<|end|>' → logprob: -16.001928329467773
    8. ',' → logprob: -16.876928329467773
    9. '	and' → logprob: -17.626928329467773
    10. ':' → logprob: -17.626928329467773

Token 643: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03804263845086098
    2. ' H' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.538043022155762
    4. '   ' → logprob: -14.538043022155762
    5. '	H' → logprob: -15.913043022155762
    6. '  ' → logprob: -16.538042068481445
    7. ' ' → logprob: -18.288042068481445
    8. '
' → logprob: -18.788042068481445
    9. '    ' → logprob: -18.913042068481445
    10. '       ' → logprob: -19.788042068481445

Token 644: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16031774878501892
    2. ' ==' → logprob: -1.9103177785873413
    3. '0' → logprob: -9.910317420959473
    4. '<|end|>' → logprob: -11.035317420959473
    5. '=' → logprob: -11.285317420959473
    6. ' ' → logprob: -11.910317420959473
    7. '==
' → logprob: -12.285317420959473
    8. ')==' → logprob: -13.285317420959473
    9. ' =' → logprob: -14.660317420959473
    10. ']==' → logprob: -14.785317420959473

Token 645: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '<|end|>' → logprob: -16.629077911376953
    4. '
' → logprob: -18.629077911376953
    5. '۰' → logprob: -19.879077911376953
    6. '  ' → logprob: -19.879077911376953
    7. '<|end|>' → logprob: -21.004077911376953
    8. '   ' → logprob: -21.379077911376953
    9. ' 
' → logprob: -21.504077911376953
    10. ' ' → logprob: -21.566577911376953

Token 646: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '<|end|>' → logprob: -15.25048828125
    4. '۰' → logprob: -17.25048828125
    5. '  ' → logprob: -17.62548828125
    6. '<|end|>' → logprob: -18.06298828125
    7. '   ' → logprob: -18.56298828125
    8. '=' → logprob: -19.68798828125
    9. ')' → logprob: -19.75048828125
    10. '০' → logprob: -19.81298828125

Token 647: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16038629412651062
    2. ':
' → logprob: -1.910386323928833
    3. ':return' → logprob: -8.785386085510254
    4. ':

' → logprob: -13.285386085510254
    5. ':
' → logprob: -13.410386085510254
    6. '):
' → logprob: -13.785386085510254
    7. '           ' → logprob: -13.910386085510254
    8. '<|end|>' → logprob: -14.160386085510254
    9. '   ' → logprob: -14.285386085510254
    10. '       ' → logprob: -14.285386085510254

Token 648: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11386815458536148
    2. ':
' → logprob: -2.238868236541748
    3. ':' → logprob: -7.488868236541748
    4. '           ' → logprob: -7.988868236541748
    5. '                   ' → logprob: -9.73886775970459
    6. ':return' → logprob: -9.73886775970459
    7. '   ' → logprob: -11.86386775970459
    8. '              ' → logprob: -11.86386775970459
    9. 'return' → logprob: -12.61386775970459
    10. '       ' → logprob: -13.36386775970459

Token 649: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006199553608894348
    2. ' return' → logprob: -5.756199359893799
    3. '               ' → logprob: -6.256199359893799
    4. '                   ' → logprob: -7.006199359893799
    5. 'break' → logprob: -9.256199836730957
    6. '
' → logprob: -9.506199836730957
    7. '           ' → logprob: -11.256199836730957
    8. '	return' → logprob: -12.506199836730957
    9. '   ' → logprob: -12.631199836730957
    10. ' break' → logprob: -13.631199836730957

Token 650: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.553032628493384e-05
    2. ' None' → logprob: -9.500075340270996
    3. ',None' → logprob: -15.375075340270996
    4. '(None' → logprob: -15.750075340270996
    5. '
' → logprob: -16.125076293945312
    6. '_None' → logprob: -16.375076293945312
    7. '=None' → logprob: -17.250076293945312
    8. 'none' → logprob: -18.250076293945312
    9. '.None' → logprob: -20.000076293945312
    10. '_none' → logprob: -20.375076293945312

Token 651: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10574919730424881
    2. '           ' → logprob: -2.3557491302490234
    3. '       ' → logprob: -5.980749130249023
    4. '            
' → logprob: -6.230749130249023
    5. '    
' → logprob: -7.730749130249023
    6. '        
' → logprob: -8.480749130249023
    7. '		' → logprob: -9.480749130249023
    8. '  
' → logprob: -9.855749130249023
    9. '   ' → logprob: -10.355749130249023
    10. ',
' → logprob: -10.355749130249023

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010711929644457996
    2. '
' → logprob: -9.250106811523438
    3. '            
' → logprob: -11.875106811523438
    4. 'return' → logprob: -13.375106811523438
    5. '       ' → logprob: -14.125106811523438
    6. '          ' → logprob: -14.625106811523438
    7. '		' → logprob: -14.750106811523438
    8. '        
' → logprob: -15.625106811523438
    9. '    
' → logprob: -15.625106811523438
    10. '	       ' → logprob: -15.875106811523438

Token 653: ' layout' (ID: 10557)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.12807361781597137
    2. 'rows' → logprob: -3.0030736923217773
    3. 'data' → logprob: -3.5030736923217773
    4. 'grid' → logprob: -3.7530736923217773
    5. '           ' → logprob: -5.128073692321777
    6. 'map' → logprob: -5.503073692321777
    7. 'input' → logprob: -5.878073692321777
    8. 'dataset' → logprob: -6.628073692321777
    9. 'layout' (adapté à ' layout') → logprob: -7.628073692321777
    10. 'area' → logprob: -7.753073692321777

Token 654: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.036395151168107986
    2. '=' → logprob: -3.4113950729370117
    3. '_lines' → logprob: -5.911395072937012
    4. '_' → logprob: -11.786395072937012
    5. '=[]' → logprob: -11.786395072937012
    6. '=[]
' → logprob: -11.911395072937012
    7. ' ' → logprob: -12.786395072937012
    8. '_layout' → logprob: -13.036395072937012
    9. '   ' → logprob: -13.161395072937012
    10. 's' → logprob: -13.286395072937012

Token 655: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0024881421122699976
    2. '[' → logprob: -6.252488136291504
    3. '[]
' → logprob: -8.002488136291504
    4. ' [' → logprob: -8.752488136291504
    5. '[next' → logprob: -11.252488136291504
    6. '[this' → logprob: -11.252488136291504
    7. '[
' → logprob: -11.877488136291504
    8. '[input' → logprob: -11.877488136291504
    9. '[line' → logprob: -12.377488136291504
    10. '[]' → logprob: -12.752488136291504

Token 656: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011224505578866228
    2. ' self' → logprob: -9.125112533569336
    3. '
' → logprob: -13.125112533569336
    4. '           ' → logprob: -13.875112533569336
    5. '(self' → logprob: -16.250112533569336
    6. '[self' → logprob: -16.625112533569336
    7. '            
' → logprob: -17.250112533569336
    8. '   ' → logprob: -17.375112533569336
    9. '               ' → logprob: -17.500112533569336
    10. '	self' → logprob: -17.625112533569336

Token 657: '.next' (ID: 6689)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.25274214148521423
    2. '.next' → logprob: -1.5027421712875366
    3. ' next' → logprob: -7.127742290496826
    4. '	next' → logprob: -12.877741813659668
    5. '_next' → logprob: -13.127741813659668
    6. '[next' → logprob: -13.252741813659668
    7. '
' → logprob: -13.752741813659668
    8. '.' → logprob: -13.752741813659668
    9. '(next' → logprob: -14.752741813659668
    10. '.readline' → logprob: -15.002741813659668

Token 658: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0001720742875477299
    2. 'line' → logprob: -8.750171661376953
    3. 'Line' → logprob: -11.375171661376953
    4. '_' → logprob: -14.625171661376953
    5. '(line' → logprob: -15.125171661376953
    6. '_LINE' → logprob: -15.125171661376953
    7. ')' → logprob: -15.375171661376953
    8. ']' → logprob: -15.750171661376953
    9. '_reader' → logprob: -16.125171661376953
    10. '```' → logprob: -16.375171661376953

Token 659: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005626443307846785
    2. ' for' → logprob: -5.505626678466797
    3. 'for' → logprob: -6.505626678466797
    4. '().' → logprob: -10.755626678466797
    5. ' ()' → logprob: -10.880626678466797
    6. ')' → logprob: -12.505626678466797
    7. '()
' → logprob: -13.130626678466797
    8. '()]' → logprob: -13.505626678466797
    9. '(W' → logprob: -13.755626678466797
    10. '())' → logprob: -14.005626678466797

Token 660: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2578737735748291
    2. 'for' → logprob: -1.507873773574829
    3. '()' → logprob: -5.13287353515625
    4. '           ' → logprob: -11.13287353515625
    5. '	for' → logprob: -11.63287353515625
    6. '   ' → logprob: -13.38287353515625
    7. '               ' → logprob: -14.63287353515625
    8. ')' → logprob: -14.63287353515625
    9. '       ' → logprob: -15.00787353515625
    10. ' ' → logprob: -15.38287353515625

Token 661: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014513926580548286
    2. ' _' → logprob: -4.264513969421387
    3. '
' → logprob: -9.139513969421387
    4. '_h' → logprob: -9.389513969421387
    5. ' in' → logprob: -9.889513969421387
    6. '_
' → logprob: -10.139513969421387
    7. '_H' → logprob: -10.264513969421387
    8. '_in' → logprob: -11.264513969421387
    9. '_i' → logprob: -11.764513969421387
    10. ' ' → logprob: -12.514513969421387

Token 662: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005653114058077335
    2. 'range' → logprob: -5.630652904510498
    3. 'in' → logprob: -6.255652904510498
    4. ' range' → logprob: -9.005653381347656
    5. ' ' → logprob: -12.255653381347656
    6. '
' → logprob: -13.380653381347656
    7. '_' → logprob: -14.755653381347656
    8. '  ' → logprob: -14.880653381347656
    9. '   ' → logprob: -15.255653381347656
    10. 'i' → logprob: -15.255653381347656

Token 663: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324908785521984
    2. ' range' → logprob: -3.7732491493225098
    3. '_range' → logprob: -12.773248672485352
    4. '_' → logprob: -14.148248672485352
    5. '(range' → logprob: -16.89824867248535
    6. '	range' → logprob: -16.89824867248535
    7. '
' → logprob: -17.39824867248535
    8. ' in' → logprob: -17.52324867248535
    9. 'in' → logprob: -18.27324867248535
    10. '_h' → logprob: -18.52324867248535

Token 664: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.005235190503299236
    2. 'H' → logprob: -5.255235195159912
    3. ' H' → logprob: -14.630234718322754
    4. '(' → logprob: -14.630234718322754
    5. '   ' → logprob: -15.505234718322754
    6. '           ' → logprob: -16.13023567199707
    7. '(
' → logprob: -17.00523567199707
    8. '
' → logprob: -17.00523567199707
    9. ' (' → logprob: -17.00523567199707
    10. '       ' → logprob: -17.38023567199707

Token 665: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006725437473505735
    2. ']
' → logprob: -5.006725311279297
    3. ')]' → logprob: -12.256725311279297
    4. ')' → logprob: -13.256725311279297
    5. ']

' → logprob: -13.256725311279297
    6. ']
' → logprob: -14.006725311279297
    7. ' ]' → logprob: -14.381725311279297
    8. '()]' → logprob: -15.506725311279297
    9. '       ' → logprob: -15.881725311279297
    10. '])' → logprob: -17.131725311279297

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.764977686339989e-05
    2. 'return' → logprob: -10.125057220458984
    3. '       ' → logprob: -11.375057220458984
    4. ' return' → logprob: -12.500057220458984
    5. '            
' → logprob: -14.125057220458984
    6. '		' → logprob: -14.875057220458984
    7. '          ' → logprob: -15.000057220458984
    8. '               ' → logprob: -15.250057220458984
    9. '   ' → logprob: -15.375057220458984
    10. '	       ' → logprob: -16.000057220458984

Token 667: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01106998510658741
    2. '           ' → logprob: -4.7610697746276855
    3. ' return' → logprob: -6.0110697746276855
    4. '
' → logprob: -14.761070251464844
    5. '	return' → logprob: -15.136070251464844
    6. '       ' → logprob: -15.886070251464844
    7. '   ' → logprob: -17.011070251464844
    8. 'break' → logprob: -17.011070251464844
    9. '            
' → logprob: -17.511070251464844
    10. '{return' → logprob: -17.761070251464844

Token 668: ' W' (ID: 486)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.035801373422145844
    2. 'W' → logprob: -3.410801410675049
    3. ' (' → logprob: -6.160801410675049
    4. ' W' → logprob: -10.28580093383789
    5. '(' → logprob: -12.41080093383789
    6. '(w' → logprob: -13.16080093383789
    7. '   ' → logprob: -13.91080093383789
    8. '(
' → logprob: -13.91080093383789
    9. '(width' → logprob: -15.53580093383789
    10. '
' → logprob: -16.03580093383789

Token 669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002338144404347986
    2. ',H' → logprob: -8.37523365020752
    3. ' ,' → logprob: -13.12523365020752
    4. ',
' → logprob: -14.12523365020752
    5. ',W' → logprob: -14.75023365020752
    6. 'H' → logprob: -17.125234603881836
    7. ',h' → logprob: -17.250234603881836
    8. '‌,' → logprob: -19.125234603881836
    9. '```' → logprob: -19.125234603881836
    10. '   ' → logprob: -19.875234603881836

Token 670: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00861456897109747
    2. ' H' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.383615493774414
    4. ',H' → logprob: -18.883615493774414
    5. '       ' → logprob: -19.133615493774414
    6. '           ' → logprob: -19.258615493774414
    7. '
' → logprob: -19.633615493774414
    8. ' ' → logprob: -19.758615493774414
    9. ',' → logprob: -20.758615493774414
    10. '    ' → logprob: -21.008615493774414

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00427059642970562
    2. 'layout' → logprob: -5.504270553588867
    3. ' layout' → logprob: -8.629270553588867
    4. ' ,' → logprob: -12.004270553588867
    5. '(layout' → logprob: -12.629270553588867
    6. ',
' → logprob: -12.879270553588867
    7. '	layout' → logprob: -13.879270553588867
    8. '   ' → logprob: -16.004270553588867
    9. ',line' → logprob: -16.129270553588867
    10. '           ' → logprob: -16.379270553588867

Token 672: ' layout' (ID: 10557)
  Prédit: 'layout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layout' → logprob: -0.0011703446507453918
    2. ' layout' → logprob: -6.7511701583862305
    3. '	layout' → logprob: -16.501171112060547
    4. 'lay' → logprob: -18.001171112060547
    5. '(layout' → logprob: -18.126171112060547
    6. '   ' → logprob: -18.126171112060547
    7. 'layouts' → logprob: -18.501171112060547
    8. '.layout' → logprob: -18.751171112060547
    9. '
' → logprob: -19.376171112060547
    10. '_layout' → logprob: -19.751171112060547

Token 673: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 674: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23672519624233246
    2. 'class' → logprob: -1.6117252111434937
    3. '<|end|>' → logprob: -5.111725330352783
    4. '
' → logprob: -6.111725330352783
    5. 'from' → logprob: -6.361725330352783
    6. '```' → logprob: -7.236725330352783
    7. ')' → logprob: -8.486724853515625
    8. '<|end|>' → logprob: -8.736724853515625
    9. 'import' → logprob: -9.861724853515625
    10. '   ' → logprob: -10.111724853515625

Token 675: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 676: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.505351095460355e-05
    2. ' None' → logprob: -9.500075340270996
    3. '(None' → logprob: -16.37507438659668
    4. '_None' → logprob: -17.75007438659668
    5. ',None' → logprob: -17.87507438659668
    6. '
' → logprob: -18.62507438659668
    7. '=None' → logprob: -20.12507438659668
    8. 'none' → logprob: -21.25007438659668
    9. '.None' → logprob: -21.25007438659668
    10. '_none' → logprob: -21.62507438659668

Token 677: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003645210759714246
    2. 'if' → logprob: -6.003645420074463
    3. 'class' → logprob: -7.128645420074463
    4. '
' → logprob: -8.253644943237305
    5. '```' → logprob: -9.878644943237305
    6. '#' → logprob: -11.128644943237305
    7. 'import' → logprob: -11.253644943237305
    8. 'from' → logprob: -11.378644943237305
    9. '<|end|>' → logprob: -12.003644943237305
    10. 'W' → logprob: -12.253644943237305

Token 678: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023274015635252
    2. 'if' → logprob: -3.7732739448547363
    3. 'class' → logprob: -10.648274421691895
    4. 'from' → logprob: -13.523274421691895
    5. 'import' → logprob: -13.773274421691895
    6. '```' → logprob: -14.523274421691895
    7. 'input' → logprob: -14.648274421691895
    8. 'for' → logprob: -14.898274421691895
    9. '#' → logprob: -15.148274421691895
    10. 'W' → logprob: -15.398274421691895

Token 679: ' Red' (ID: 5952)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.6808265447616577
    2. 'Solver' → logprob: -1.6808265447616577
    3. 'Main' → logprob: -1.6808265447616577
    4. ' Solution' → logprob: -3.5558266639709473
    5. 'Output' → logprob: -3.9308266639709473
    6. ' Solver' → logprob: -3.9308266639709473
    7. 'Program' → logprob: -4.180826663970947
    8. 'Processor' → logprob: -5.055826663970947
    9. 'Runner' → logprob: -5.055826663970947
    10. 'main' → logprob: -5.430826663970947

Token 680: 'Black' (ID: 19473)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -1.2920260429382324
    2. 'emption' → logprob: -1.7920260429382324
    3. 'Solver' → logprob: -2.4170260429382324
    4. 'uction' → logprob: -2.6670260429382324
    5. 'Maze' → logprob: -2.6670260429382324
    6. 'ux' → logprob: -3.0420260429382324
    7. 'uctor' → logprob: -3.1670260429382324
    8. 'uce' → logprob: -3.9170260429382324
    9. 'uc' → logprob: -4.167026042938232
    10. 'Black' → logprob: -4.292026042938232

Token 681: 'Solver' (ID: 70484)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.022879227995872498
    2. 'Graph' → logprob: -5.022879123687744
    3. 'Solver' → logprob: -5.022879123687744
    4. 'Maze' → logprob: -6.022879123687744
    5. 'Trees' → logprob: -6.772879123687744
    6. 'Grid' → logprob: -7.522879123687744
    7. 'Tile' → logprob: -7.522879123687744
    8. 'Tiles' → logprob: -7.772879123687744
    9. ' Tree' → logprob: -7.897879123687744
    10. 'Chess' → logprob: -8.022879600524902

Token 682: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.078912153840065
    2. ':
' → logprob: -2.5789122581481934
    3. ':

' → logprob: -11.703911781311035
    4. ' :' → logprob: -12.203911781311035
    5. ':def' → logprob: -12.328911781311035
    6. ' :
' → logprob: -13.078911781311035
    7. ':
' → logprob: -14.328911781311035
    8. '(object' → logprob: -14.953911781311035
    9. '):' → logprob: -15.453911781311035
    10. '():
' → logprob: -15.453911781311035

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010135329328477383
    2. ' def' → logprob: -4.760135173797607
    3. 'def' → logprob: -6.510135173797607
    4. '	def' → logprob: -10.635135650634766
    5. ':' → logprob: -13.260135650634766
    6. '   ' → logprob: -13.885135650634766
    7. ' ' → logprob: -14.010135650634766
    8. 'class' → logprob: -14.385135650634766
    9. '```' → logprob: -14.510135650634766
    10. '
' → logprob: -14.510135650634766

Token 684: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20299537479877472
    2. ' def' → logprob: -1.7029954195022583
    3. '   ' → logprob: -6.452995300292969
    4. 'class' → logprob: -12.702995300292969
    5. 'de' → logprob: -14.452995300292969
    6. '```' → logprob: -14.952995300292969
    7. '	def' → logprob: -15.202995300292969
    8. '
' → logprob: -15.202995300292969
    9. '__' → logprob: -15.577995300292969
    10. ' ' → logprob: -15.827995300292969

Token 685: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04197700694203377
    2. '__' → logprob: -3.2919769287109375
    3. ' def' → logprob: -5.6669769287109375
    4. ' _' → logprob: -8.791976928710938
    5. '_init' → logprob: -9.041976928710938
    6. 'def' → logprob: -9.791976928710938
    7. '_' → logprob: -10.166976928710938
    8. ' init' → logprob: -10.291976928710938
    9. 'init' → logprob: -10.541976928710938
    10. ' solve' → logprob: -10.791976928710938

Token 686: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.125001907348633
    3. '
' → logprob: -14.375001907348633
    4. ' init' → logprob: -15.375001907348633
    5. ' ' → logprob: -17.000001907348633
    6. 'def' → logprob: -17.000001907348633
    7. '  ' → logprob: -17.750001907348633
    8. 'in' → logprob: -18.250001907348633
    9. 'i' → logprob: -18.500001907348633
    10. '    ' → logprob: -18.500001907348633

Token 687: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12802454829216003
    2. '(self' → logprob: -2.1280245780944824
    3. ' (' → logprob: -8.003024101257324
    4. '(' → logprob: -8.378024101257324
    5. '__' → logprob: -8.503024101257324
    6. '__(
' → logprob: -8.628024101257324
    7. 'self' → logprob: -9.503024101257324
    8. '   ' → logprob: -10.628024101257324
    9. ' ' → logprob: -10.878024101257324
    10. '
' → logprob: -11.628024101257324

Token 688: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.2378600735682994e-05
    2. '
' → logprob: -11.500032424926758
    3. '   ' → logprob: -11.500032424926758
    4. ')' → logprob: -12.125032424926758
    5. ' self' → logprob: -12.375032424926758
    6. '       ' → logprob: -13.125032424926758
    7. '):
' → logprob: -15.875032424926758
    8. '(self' → logprob: -16.375032424926758
    9. ')
' → logprob: -17.125032424926758
    10. '  ' → logprob: -17.875032424926758

Token 689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1635596752166748
    2. 'self' → logprob: -1.9135596752166748
    3. ' self' → logprob: -6.663559913635254
    4. '(self' → logprob: -7.163559913635254
    5. ' ,' → logprob: -7.788559913635254
    6. '   ' → logprob: -7.913559913635254
    7. ' (' → logprob: -8.663559913635254
    8. ')' → logprob: -9.163559913635254
    9. '
' → logprob: -9.663559913635254
    10. '       ' → logprob: -9.663559913635254

Token 690: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.40592485666275024
    2. 'self' → logprob: -1.5309247970581055
    3. ' input' → logprob: -2.5309247970581055
    4. ' self' → logprob: -4.4059247970581055
    5. ')' → logprob: -4.9059247970581055
    6. '):
' → logprob: -5.2809247970581055
    7. 'grid' → logprob: -5.4059247970581055
    8. 'lines' → logprob: -5.9059247970581055
    9. 'width' → logprob: -6.4059247970581055
    10. 'datasets' → logprob: -6.6559247970581055

Token 691: '_data' (ID: 3537)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.029775023460388184
    2. '_reader' → logprob: -3.5297751426696777
    3. '_data' → logprob: -11.15477466583252
    4. '_' → logprob: -12.15477466583252
    5. 'reader' → logprob: -13.65477466583252
    6. '_reads' → logprob: -14.02977466583252
    7. 'Reader' → logprob: -14.52977466583252
    8. '_list' → logprob: -14.90477466583252
    9. 'Lines' → logprob: -15.15477466583252
    10. ')_' → logprob: -15.27977466583252

Token 692: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05682457983493805
    2. '):
' → logprob: -3.4318246841430664
    3. '_lines' → logprob: -4.181824684143066
    4. '):' → logprob: -4.931824684143066
    5. ' :' → logprob: -8.931824684143066
    6. ')' → logprob: -9.431824684143066
    7. 'lines' → logprob: -10.056824684143066
    8. '   ' → logprob: -10.306824684143066
    9. '_:' → logprob: -10.681824684143066
    10. '```' → logprob: -10.931824684143066

Token 693: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00013250234769657254
    2. ' list' → logprob: -9.25013256072998
    3. ')' → logprob: -10.37513256072998
    4. '[list' → logprob: -13.00013256072998
    5. '   ' → logprob: -13.87513256072998
    6. '):
' → logprob: -14.12513256072998
    7. '
' → logprob: -15.25013256072998
    8. '```' → logprob: -15.62513256072998
    9. 'Input' → logprob: -15.75013256072998
    10. ':list' → logprob: -16.125131607055664

Token 694: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -6.704273118884885e-07
    2. 'str' → logprob: -14.250000953674316
    3. '[' → logprob: -18.0
    4. '[
' → logprob: -18.125
    5. ':str' → logprob: -18.75
    6. ')' → logprob: -20.0
    7. '   ' → logprob: -20.625
    8. '	str' → logprob: -21.125
    9. '(str' → logprob: -21.25
    10. '
' → logprob: -21.25

Token 695: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3136914372444153
    2. '):
' → logprob: -1.3136913776397705
    3. ')' → logprob: -8.563691139221191
    4. ']):' → logprob: -9.188691139221191
    5. ']):
' → logprob: -9.563691139221191
    6. '):
' → logprob: -10.438691139221191
    7. '   ' → logprob: -10.813691139221191
    8. '       ' → logprob: -12.188691139221191
    9. ']:' → logprob: -12.188691139221191
    10. ' ):' → logprob: -12.938691139221191

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010819212911883369
    2. 'self' → logprob: -9.750107765197754
    3. '   ' → logprob: -10.375107765197754
    4. ' self' → logprob: -11.500107765197754
    5. 'def' → logprob: -12.750107765197754
    6. '      ' → logprob: -13.125107765197754
    7. '<|end|>' → logprob: -14.250107765197754
    8. '
' → logprob: -14.500107765197754
    9. ',' → logprob: -14.625107765197754
    10. '        
' → logprob: -14.875107765197754

Token 697: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02997910976409912
    2. '       ' → logprob: -4.154979228973389
    3. ' self' → logprob: -4.279979228973389
    4. '   ' → logprob: -13.27997875213623
    5. ' ' → logprob: -14.15497875213623
    6. 'def' → logprob: -14.27997875213623
    7. '	self' → logprob: -14.52997875213623
    8. 'input' → logprob: -15.02997875213623
    9. '      ' → logprob: -15.90497875213623
    10. '
' → logprob: -15.90497875213623

Token 698: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.1235351711511612
    2. 'input' → logprob: -2.37353515625
    3. '.reader' → logprob: -4.12353515625
    4. '.lines' → logprob: -5.37353515625
    5. 'reader' → logprob: -6.49853515625
    6. ' input' → logprob: -8.49853515625
    7. '.grid' → logprob: -8.62353515625
    8. 'lines' → logprob: -8.87353515625
    9. '.data' → logprob: -9.87353515625
    10. '.' → logprob: -10.24853515625

Token 699: '_reader' (ID: 55777)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.6951444149017334
    2. '_data' → logprob: -0.9451444149017334
    3. '_reader' → logprob: -2.1951444149017334
    4. 'data' → logprob: -8.445144653320312
    5. '_index' → logprob: -8.820144653320312
    6. '_' → logprob: -8.820144653320312
    7. 'lines' → logprob: -8.820144653320312
    8. '   ' → logprob: -9.445144653320312
    9. 'Reader' → logprob: -9.695144653320312
    10. '=' → logprob: -9.820144653320312

Token 700: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '=
' → logprob: -16.078889846801758
    4. '   ' → logprob: -17.078889846801758
    5. ' ' → logprob: -17.578889846801758
    6. ' =
' → logprob: -18.328889846801758
    7. '  ' → logprob: -18.328889846801758
    8. '=

' → logprob: -18.453889846801758
    9. ':' → logprob: -19.078889846801758
    10. '＝' → logprob: -19.578889846801758

Token 701: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0002613358374219388
    2. ' Input' → logprob: -8.250261306762695
    3. 'input' → logprob: -21.750261306762695
    4. '	Input' → logprob: -21.875261306762695
    5. '_input' → logprob: -23.500261306762695
    6. '<Input' → logprob: -24.125261306762695
    7. ' input' → logprob: -24.750261306762695
    8. '_Input' → logprob: -25.000261306762695
    9. '\Input' → logprob: -25.250261306762695
    10. 'INPUT' → logprob: -25.750261306762695

Token 702: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -2.1008713702030946e-06
    2. '_reader' → logprob: -13.125001907348633
    3. ' Reader' → logprob: -17.875001907348633
    4. 'Writer' → logprob: -18.125001907348633
    5. '.Reader' → logprob: -18.750001907348633
    6. '_' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.875001907348633
    8. 'Readers' → logprob: -20.000001907348633
    9. 'Receiver' → logprob: -20.125001907348633
    10. 'Viewer' → logprob: -20.250001907348633

Token 703: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001983829541131854
    2. 'input' → logprob: -6.251983642578125
    3. '(' → logprob: -10.126983642578125
    4. '(
' → logprob: -12.126983642578125
    5. ' input' → logprob: -12.251983642578125
    6. ' (' → logprob: -12.626983642578125
    7. '
' → logprob: -13.501983642578125
    8. '=input' → logprob: -16.251983642578125
    9. ',input' → logprob: -16.251983642578125
    10. '[input' → logprob: -16.751983642578125

Token 704: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.27099974633893e-05
    2. 'data' → logprob: -12.250012397766113
    3. '_lines' → logprob: -12.500012397766113
    4. ')' → logprob: -13.625012397766113
    5. '_' → logprob: -14.125012397766113
    6. '
' → logprob: -14.250012397766113
    7. '   ' → logprob: -14.875012397766113
    8. 'lines' → logprob: -15.625012397766113
    9. '=' → logprob: -15.750012397766113
    10. '_d' → logprob: -16.25001335144043

Token 705: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0219828002154827e-05
    2. ')
' → logprob: -10.875020027160645
    3. ' )' → logprob: -14.500020027160645
    4. ')

' → logprob: -15.250020027160645
    5. '   ' → logprob: -15.500020027160645
    6. ' ' → logprob: -16.12502098083496
    7. '<|end|>' → logprob: -16.37502098083496
    8. '),' → logprob: -17.00002098083496
    9. '       ' → logprob: -17.25002098083496
    10. ')
' → logprob: -17.75002098083496

Token 706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11622443050146103
    2. 'def' → logprob: -2.741224527359009
    3. '
' → logprob: -3.116224527359009
    4. ' def' → logprob: -7.49122428894043
    5. '    
' → logprob: -8.74122428894043
    6. '       ' → logprob: -8.99122428894043
    7. 'self' → logprob: -10.49122428894043
    8. '```' → logprob: -11.36622428894043
    9. '        
' → logprob: -11.99122428894043
    10. '	def' → logprob: -12.11622428894043

Token 707: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.3425219549390022e-05
    2. ' def' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.25001335144043
    4. '	def' → logprob: -16.87501335144043
    5. 'de' → logprob: -17.50001335144043
    6. '
' → logprob: -19.62501335144043
    7. 'd' → logprob: -20.50001335144043
    8. '```' → logprob: -22.00001335144043
    9. ' ' → logprob: -22.50001335144043
    10. 'ndef' → logprob: -22.62501335144043

Token 708: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.8622057437896729
    2. ' solve' → logprob: -1.3622057437896729
    3. ' run' → logprob: -1.6122057437896729
    4. 'run' → logprob: -2.112205743789673
    5. ' def' → logprob: -7.612205505371094
    6. 'def' → logprob: -7.737205505371094
    7. 'process' → logprob: -8.487205505371094
    8. ' process' → logprob: -9.112205505371094
    9. 'execute' → logprob: -13.362205505371094
    10. 'read' → logprob: -13.737205505371094

Token 709: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014036978245712817
    2. '(' → logprob: -8.875140190124512
    3. 'self' → logprob: -15.000140190124512
    4. ' (' → logprob: -16.375141143798828
    5. '(sel' → logprob: -16.875141143798828
    6. '()' → logprob: -17.125141143798828
    7. '(
' → logprob: -17.500141143798828
    8. '(s' → logprob: -17.750141143798828
    9. '   ' → logprob: -18.625141143798828
    10. '_(' → logprob: -18.750141143798828

Token 710: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.194883793592453
    2. '):
' → logprob: -1.8198838233947754
    3. 'self' → logprob: -4.819883823394775
    4. ')' → logprob: -5.069883823394775
    5. ',' → logprob: -7.694883823394775
    6. '):
' → logprob: -9.694883346557617
    7. '       ' → logprob: -9.944883346557617
    8. '   ' → logprob: -10.069883346557617
    9. '(self' → logprob: -10.569883346557617
    10. ' self' → logprob: -11.694883346557617

Token 711: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006054567056708038
    2. '(' → logprob: -7.625605583190918
    3. 'self' → logprob: -10.000605583190918
    4. ':' → logprob: -10.125605583190918
    5. '():' → logprob: -10.875605583190918
    6. '():
' → logprob: -13.000605583190918
    7. '   ' → logprob: -13.125605583190918
    8. '_' → logprob: -13.875605583190918
    9. '       ' → logprob: -13.875605583190918
    10. '(
' → logprob: -13.875605583190918

Token 712: ' list' (ID: 1562)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07406631857156754
    2. 'list' → logprob: -2.824066400527954
    3. ' None' → logprob: -4.574066162109375
    4. 'int' → logprob: -6.574066162109375
    5. ' list' → logprob: -8.324066162109375
    6. 'str' → logprob: -9.699066162109375
    7. '   ' → logprob: -11.824066162109375
    8. 'none' → logprob: -14.074066162109375
    9. ' int' → logprob: -14.199066162109375
    10. ' ' → logprob: -14.699066162109375

Token 713: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.512236498361744e-07
    2. '[str' → logprob: -15.250000953674316
    3. 'int' → logprob: -16.125
    4. '[list' → logprob: -16.25
    5. '[' → logprob: -17.25
    6. '[Int' → logprob: -19.625
    7. '<int' → logprob: -19.875
    8. ':int' → logprob: -20.5
    9. '[List' → logprob: -20.625
    10. ' [' → logprob: -21.125

Token 714: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.11731524020433426
    2. '   ' → logprob: -3.2423152923583984
    3. '       ' → logprob: -3.4923152923583984
    4. ']:' → logprob: -3.8673152923583984
    5. '):
' → logprob: -4.242315292358398
    6. ':
' → logprob: -5.617315292358398
    7. ':' → logprob: -7.367315292358398
    8. ']:
' → logprob: -7.367315292358398
    9. ']' → logprob: -7.867315292358398
    10. '():
' → logprob: -8.492315292358398

Token 715: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018671216676011682
    2. 'results' → logprob: -6.751867294311523
    3. ' results' → logprob: -7.376867294311523
    4. 'result' → logprob: -10.001867294311523
    5. '   ' → logprob: -11.251867294311523
    6. ' result' → logprob: -12.251867294311523
    7. '	results' → logprob: -12.626867294311523
    8. 'outputs' → logprob: -12.751867294311523
    9. 'output' → logprob: -14.376867294311523
    10. ' output' → logprob: -15.501867294311523

Token 716: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.00012797261297237128
    2. '       ' → logprob: -9.250127792358398
    3. ' results' → logprob: -10.500127792358398
    4. 'result' → logprob: -12.500127792358398
    5. 'answers' → logprob: -15.000127792358398
    6. '	results' → logprob: -16.0001277923584
    7. 'outputs' → logprob: -18.2501277923584
    8. '_results' → logprob: -19.8751277923584
    9. 'solutions' → logprob: -20.0001277923584
    10. '   ' → logprob: -20.7501277923584

Token 717: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014181484468281269
    2. '=' → logprob: -4.264181613922119
    3. ':' → logprob: -11.014181137084961
    4. '=[]' → logprob: -13.889181137084961
    5. ' ' → logprob: -15.014181137084961
    6. '=[]
' → logprob: -16.01418113708496
    7. '   ' → logprob: -16.88918113708496
    8. '.append' → logprob: -17.01418113708496
    9. ' :' → logprob: -17.13918113708496
    10. '[]' → logprob: -17.26418113708496

Token 718: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018162114545702934
    2. '[]
' → logprob: -4.018162250518799
    3. '[' → logprob: -11.89316177368164
    4. '[]

' → logprob: -12.76816177368164
    5. ' []' → logprob: -13.01816177368164
    6. '[
' → logprob: -16.01816177368164
    7. '[]"' → logprob: -16.39316177368164
    8. ' []
' → logprob: -16.89316177368164
    9. '[]}' → logprob: -17.51816177368164
    10. '[])' → logprob: -17.89316177368164

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.729906196298543e-06
    2. ' while' → logprob: -12.000009536743164
    3. 'while' → logprob: -13.250009536743164
    4. '   ' → logprob: -14.125009536743164
    5. '        
' → logprob: -15.000009536743164
    6. '```' → logprob: -15.000009536743164
    7. '	' → logprob: -15.750009536743164
    8. ' ' → logprob: -16.625009536743164
    9. '	while' → logprob: -17.000009536743164
    10. '           ' → logprob: -17.250009536743164

Token 720: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06201821193099022
    2. '       ' → logprob: -2.8120181560516357
    3. 'dataset' → logprob: -10.187018394470215
    4. ' while' → logprob: -11.312018394470215
    5. 'data' → logprob: -14.937018394470215
    6. 'While' → logprob: -16.5620174407959
    7. '	while' → logprob: -16.5620174407959
    8. '```' → logprob: -16.6870174407959
    9. '   ' → logprob: -17.6870174407959
    10. 'for' → logprob: -17.9370174407959

Token 721: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.05240770801901817
    2. '(True' → logprob: -3.302407741546631
    3. ' True' → logprob: -5.052407741546631
    4. '   ' → logprob: -5.052407741546631
    5. 'dataset' → logprob: -6.927407741546631
    6. '       ' → logprob: -7.927407741546631
    7. 'data' → logprob: -9.552407264709473
    8. 'true' → logprob: -10.677407264709473
    9. '(' → logprob: -10.802407264709473
    10. ' (' → logprob: -12.177407264709473

Token 722: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16257154941558838
    2. ':
' → logprob: -2.287571430206299
    3. '           ' → logprob: -3.037571430206299
    4. ',' → logprob: -8.162571907043457
    5. '<|end|>' → logprob: -9.787571907043457
    6. ' and' → logprob: -9.912571907043457
    7. '<|end|>' → logprob: -10.162571907043457
    8. '[' → logprob: -10.787571907043457
    9. '{' → logprob: -10.787571907043457
    10. ' :' → logprob: -11.412571907043457

Token 723: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008002637885510921
    2. 'dataset' → logprob: -5.133002758026123
    3. 'data' → logprob: -6.383002758026123
    4. ' dataset' → logprob: -8.258002281188965
    5. ' data' → logprob: -9.258002281188965
    6. 'input' → logprob: -11.633002281188965
    7. 'code' → logprob: -12.258002281188965
    8. 'result' → logprob: -12.758002281188965
    9. 'd' → logprob: -12.883002281188965
    10. ' code' → logprob: -13.758002281188965

Token 724: ' data' (ID: 1238)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.41318246722221375
    2. '           ' → logprob: -1.1631824970245361
    3. 'data' (adapté à ' data') → logprob: -3.663182497024536
    4. ' dataset' → logprob: -8.788182258605957
    5. 'input' → logprob: -9.163182258605957
    6. '   ' → logprob: -11.413182258605957
    7. 'read' → logprob: -12.038182258605957
    8. 'datas' → logprob: -12.038182258605957
    9. 'd' → logprob: -12.163182258605957
    10. 'ds' → logprob: -12.288182258605957

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760363340377808
    2. ' =' → logprob: -0.8260363340377808
    3. '_data' → logprob: -9.82603645324707
    4. '           ' → logprob: -10.57603645324707
    5. 'data' → logprob: -11.45103645324707
    6. '_tuple' → logprob: -13.20103645324707
    7. '=data' → logprob: -13.57603645324707
    8. '   ' → logprob: -14.45103645324707
    9. ':=' → logprob: -14.70103645324707
    10. '=
' → logprob: -15.07603645324707

Token 726: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016259063268080354
    2. ' self' → logprob: -6.501626014709473
    3. '           ' → logprob: -9.001626014709473
    4. '               ' → logprob: -15.126626014709473
    5. '   ' → logprob: -17.751625061035156
    6. '(self' → logprob: -18.251625061035156
    7. '                   ' → logprob: -18.626625061035156
    8. '       ' → logprob: -18.626625061035156
    9. '          ' → logprob: -19.126625061035156
    10. '         ' → logprob: -19.376625061035156

Token 727: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.126930832862854
    2. 'input' → logprob: -2.1269307136535645
    3. ' input' → logprob: -14.001931190490723
    4. '.' → logprob: -14.001931190490723
    5. '=input' → logprob: -14.876931190490723
    6. '<input' → logprob: -15.626931190490723
    7. '(input' → logprob: -15.751931190490723
    8. '	input' → logprob: -15.876931190490723
    9. '_input' → logprob: -16.001930236816406
    10. '
' → logprob: -16.751930236816406

Token 728: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.0009508833172731102
    2. '_data' → logprob: -7.125950813293457
    3. 'reader' → logprob: -9.000950813293457
    4. 'data' → logprob: -11.125950813293457
    5. 'Reader' → logprob: -12.750950813293457
    6. '_read' → logprob: -13.125950813293457
    7. '   ' → logprob: -13.875950813293457
    8. '=' → logprob: -13.875950813293457
    9. '_line' → logprob: -15.250950813293457
    10. ' =' → logprob: -15.625950813293457

Token 729: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.5
    3. 'read' → logprob: -16.5
    4. '.readline' → logprob: -18.125
    5. ' .' → logprob: -18.75
    6. '   ' → logprob: -19.75
    7. '.next' → logprob: -20.875
    8. '.Read' → logprob: -21.0
    9. ' read' → logprob: -22.375
    10. '
' → logprob: -23.375

Token 730: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -4.320199877838604e-07
    2. '_data' → logprob: -16.125
    3. '_' → logprob: -16.25
    4. 'dataset' → logprob: -16.25
    5. 'ataset' → logprob: -17.5
    6. '_
' → logprob: -18.0
    7. '
' → logprob: -18.375
    8. '_d' → logprob: -19.375
    9. '_datas' → logprob: -19.5
    10. ' dataset' → logprob: -19.875

Token 731: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014177965931594372
    2. '()
' → logprob: -4.2641777992248535
    3. '()
' → logprob: -11.764178276062012
    4. '()

' → logprob: -13.389178276062012
    5. '():
' → logprob: -13.639178276062012
    6. '())' → logprob: -13.764178276062012
    7. '()\' → logprob: -14.139178276062012
    8. '();' → logprob: -14.264178276062012
    9. '()`' → logprob: -14.389178276062012
    10. '           ' → logprob: -15.389178276062012

Token 732: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.463036435074173e-05
    2. '<|end|>' → logprob: -11.500024795532227
    3. '       ' → logprob: -12.250024795532227
    4. '		' → logprob: -13.500024795532227
    5. ' if' → logprob: -13.500024795532227
    6. '          ' → logprob: -13.500024795532227
    7. '<|end|>' → logprob: -13.625024795532227
    8. ',' → logprob: -13.875024795532227
    9. '            
' → logprob: -14.125024795532227
    10. '	       ' → logprob: -14.500024795532227

Token 733: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31444624066352844
    2. 'if' (adapté à ' if') → logprob: -1.314446210861206
    3. ' if' → logprob: -6.814446449279785
    4. '   ' → logprob: -9.564446449279785
    5. '       ' → logprob: -11.189446449279785
    6. '		' → logprob: -14.064446449279785
    7. '               ' → logprob: -15.064446449279785
    8. '          ' → logprob: -15.564446449279785
    9. '
' → logprob: -15.689446449279785
    10. '	   ' → logprob: -15.814446449279785

Token 734: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.3132631182670593
    2. 'data' → logprob: -1.313263177871704
    3. ' not' → logprob: -13.563262939453125
    4. 'not' → logprob: -16.438262939453125
    5. '	data' → logprob: -18.313262939453125
    6. '   ' → logprob: -18.813262939453125
    7. 'Data' → logprob: -19.063262939453125
    8. ' dat' → logprob: -19.563262939453125
    9. '_data' → logprob: -19.813262939453125
    10. 'dat' → logprob: -20.063262939453125

Token 735: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00033558503491804004
    2. 'is' → logprob: -8.000335693359375
    3. ')' → logprob: -17.625335693359375
    4. '	is' → logprob: -18.000335693359375
    5. ' None' → logprob: -18.250335693359375
    6. ')is' → logprob: -18.250335693359375
    7. ' ==' → logprob: -18.750335693359375
    8. ' ' → logprob: -18.875335693359375
    9. '=None' → logprob: -19.250335693359375
    10. ' =' → logprob: -19.375335693359375

Token 736: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.47407761216163635
    2. ' None' → logprob: -0.974077582359314
    3. '_None' → logprob: -14.849077224731445
    4. '=None' → logprob: -17.099077224731445
    5. ' ' → logprob: -17.349077224731445
    6. 'N' → logprob: -17.599077224731445
    7. '(None' → logprob: -17.724077224731445
    8. '   ' → logprob: -19.599077224731445
    9. ' not' → logprob: -19.724077224731445
    10. '0' → logprob: -19.724077224731445

Token 737: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26334455609321594
    2. ':
' → logprob: -1.5133445262908936
    3. '               ' → logprob: -4.763344764709473
    4. '           ' → logprob: -5.888344764709473
    5. '                   ' → logprob: -11.013344764709473
    6. ':
' → logprob: -12.388344764709473
    7. '              ' → logprob: -12.638344764709473
    8. '       ' → logprob: -12.763344764709473
    9. '   ' → logprob: -12.888344764709473
    10. ',' → logprob: -12.888344764709473

Token 738: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.256334695033729e-05
    2. '           ' → logprob: -9.750082969665527
    3. '	           ' → logprob: -11.625082969665527
    4. '                   ' → logprob: -11.750082969665527
    5. '   ' → logprob: -12.750082969665527
    6. '              ' → logprob: -13.125082969665527
    7. '			' → logprob: -14.125082969665527
    8. 'break' → logprob: -14.875082969665527
    9. '			   ' → logprob: -15.125082969665527
    10. '	break' → logprob: -15.500082969665527

Token 739: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028416458517313004
    2. 'break' (adapté à ' break') → logprob: -4.028416633605957
    3. '           ' → logprob: -4.778416633605957
    4. '                   ' → logprob: -6.653416633605957
    5. '	break' → logprob: -8.528416633605957
    6. ' break' → logprob: -9.028416633605957
    7. '	           ' → logprob: -9.403416633605957
    8. '   ' → logprob: -9.653416633605957
    9. '			' → logprob: -10.153416633605957
    10. '       ' → logprob: -13.153416633605957

Token 740: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013073880225419998
    2. '
' → logprob: -4.388073921203613
    3. '            
' → logprob: -7.763073921203613
    4. ',' → logprob: -9.888073921203613
    5. '    
' → logprob: -10.763073921203613
    6. ',
' → logprob: -11.013073921203613
    7. '  
' → logprob: -11.513073921203613
    8. '          ' → logprob: -11.763073921203613
    9. '       ' → logprob: -12.013073921203613
    10. '<|end|>' → logprob: -12.013073921203613

Token 741: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006562606897205114
    2. '
' → logprob: -5.13156270980835
    3. '            
' → logprob: -7.75656270980835
    4. '    
' → logprob: -9.631562232971191
    5. '       ' → logprob: -9.756562232971191
    6. '        
' → logprob: -10.756562232971191
    7. '  
' → logprob: -11.131562232971191
    8. ',' → logprob: -11.256562232971191
    9. '          ' → logprob: -12.256562232971191
    10. '               ' → logprob: -12.256562232971191

Token 742: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -0.05470701679587364
    2. '           ' → logprob: -3.0547070503234863
    3. 'w' → logprob: -5.429707050323486
    4. 'width' → logprob: -6.554707050323486
    5. ' W' → logprob: -8.179706573486328
    6. ' width' → logprob: -12.679706573486328
    7. '               ' → logprob: -12.804706573486328
    8. '(W' → logprob: -12.804706573486328
    9. '       ' → logprob: -13.054706573486328
    10. ' w' → logprob: -14.179706573486328

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.292907877039397e-06
    2. ',H' → logprob: -12.75000286102295
    3. ' ,' → logprob: -15.12500286102295
    4. ',
' → logprob: -16.000003814697266
    5. ',W' → logprob: -17.125003814697266
    6. '‌,' → logprob: -19.125003814697266
    7. '_,' → logprob: -19.250003814697266
    8. ',h' → logprob: -19.625003814697266
    9. ',

' → logprob: -20.125003814697266
    10. '=' → logprob: -20.625003814697266

Token 744: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.17974810302257538
    2. ' H' → logprob: -1.8047480583190918
    3. ' ' → logprob: -13.67974853515625
    4. '   ' → logprob: -14.42974853515625
    5. '           ' → logprob: -14.80474853515625
    6. '       ' → logprob: -15.17974853515625
    7. '    ' → logprob: -15.55474853515625
    8. '  ' → logprob: -16.05474853515625
    9. '
' → logprob: -16.17974853515625
    10. '        ' → logprob: -16.17974853515625

Token 745: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -14.125001907348633
    3. ',
' → logprob: -14.750001907348633
    4. ',W' → logprob: -15.500001907348633
    5. ',H' → logprob: -15.625001907348633
    6. '<|end|>' → logprob: -17.000001907348633
    7. ',\
' → logprob: -17.625001907348633
    8. '=' → logprob: -17.625001907348633
    9. '‌,' → logprob: -18.000001907348633
    10. ',

' → logprob: -18.750001907348633

Token 746: ' layout' (ID: 10557)
  Prédit: 'layout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layout' → logprob: -0.007779233623296022
    2. ' layout' → logprob: -5.007779121398926
    3. 'lines' → logprob: -6.882779121398926
    4. ' lines' → logprob: -10.882779121398926
    5. 'grid' → logprob: -11.507779121398926
    6. '           ' → logprob: -12.882779121398926
    7. '	layout' → logprob: -13.382779121398926
    8. 'layouts' → logprob: -13.632779121398926
    9. 'lay' → logprob: -14.007779121398926
    10. '_layout' → logprob: -14.257779121398926

Token 747: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740793704986572
    2. '=' → logprob: -0.9740793704986572
    3. ')' → logprob: -13.974079132080078
    4. '           ' → logprob: -14.474079132080078
    5. '   ' → logprob: -14.974079132080078
    6. ' =
' → logprob: -15.974079132080078
    7. ' ' → logprob: -16.474079132080078
    8. ',' → logprob: -16.474079132080078
    9. '=
' → logprob: -16.474079132080078
    10. '       ' → logprob: -16.474079132080078

Token 748: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.005943967495113611
    2. ' data' → logprob: -5.130943775177002
    3. 'Grid' → logprob: -11.50594425201416
    4. 'W' → logprob: -13.88094425201416
    5. 'Data' → logprob: -14.00594425201416
    6. 'Red' → logprob: -14.13094425201416
    7. ' ' → logprob: -14.38094425201416
    8. '   ' → logprob: -14.50594425201416
    9. '
' → logprob: -14.88094425201416
    10. 'dat' → logprob: -15.00594425201416

Token 749: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02368040755391121
    2. '
' → logprob: -3.7736804485321045
    3. ',' → logprob: -7.898680210113525
    4. '            
' → logprob: -10.648680686950684
    5. ',
' → logprob: -11.398680686950684
    6. '       ' → logprob: -11.648680686950684
    7. '               ' → logprob: -12.398680686950684
    8. '
' → logprob: -12.773680686950684
    9. ':
' → logprob: -12.898680686950684
    10. '<|end|>' → logprob: -13.023680686950684

Token 750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026594845578074455
    2. '       ' → logprob: -3.651594877243042
    3. 'grid' → logprob: -8.526595115661621
    4. ' grid' → logprob: -9.901595115661621
    5. 'tile' → logprob: -11.026595115661621
    6. '
' → logprob: -11.276595115661621
    7. '   ' → logprob: -11.776595115661621
    8. '```' → logprob: -12.901595115661621
    9. '        
' → logprob: -13.151595115661621
    10. '               ' → logprob: -13.401595115661621

Token 751: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.0032027887646108866
    2. ' grid' → logprob: -5.75320291519165
    3. '           ' → logprob: -10.753202438354492
    4. '
' → logprob: -12.753202438354492
    5. 'g' → logprob: -15.503202438354492
    6. 'graph' → logprob: -15.753202438354492
    7. '	grid' → logprob: -16.378202438354492
    8. 'gr' → logprob: -16.628202438354492
    9. 'self' → logprob: -16.878202438354492
    10. '_grid' → logprob: -17.003202438354492

Token 752: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975071594119072
    2. '=' → logprob: -3.5297508239746094
    3. '   ' → logprob: -16.65475082397461
    4. ' =
' → logprob: -16.90475082397461
    5. ' ' → logprob: -16.90475082397461
    6. ':' → logprob: -17.90475082397461
    7. '=
' → logprob: -18.52975082397461
    8. '```' → logprob: -18.77975082397461
    9. '
' → logprob: -19.15475082397461
    10. '  ' → logprob: -19.40475082397461

Token 753: ' Grid' (ID: 18087)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.00861456897109747
    2. ' Grid' → logprob: -4.758614540100098
    3. '	Grid' → logprob: -17.258615493774414
    4. '(Grid' → logprob: -19.508615493774414
    5. '<Grid' → logprob: -21.758615493774414
    6. '.Grid' → logprob: -22.133615493774414
    7. '   ' → logprob: -22.383615493774414
    8. 'Gr' → logprob: -22.383615493774414
    9. '/Grid' → logprob: -23.008615493774414
    10. ' grid' → logprob: -23.508615493774414

Token 754: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: 0.0
    2. '(' → logprob: -18.125
    3. '(
' → logprob: -18.125
    4. '(w' → logprob: -19.125
    5. ' (' → logprob: -19.25
    6. '((' → logprob: -20.5
    7. '(H' → logprob: -21.0
    8. '(V' → logprob: -21.875
    9. 'W' → logprob: -22.0
    10. '   ' → logprob: -22.0

Token 755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2352385965641588e-05
    2. ',H' → logprob: -11.875012397766113
    3. ' ,' → logprob: -12.250012397766113
    4. ',
' → logprob: -14.625012397766113
    5. '           ' → logprob: -15.875012397766113
    6. '
' → logprob: -17.875011444091797
    7. ',W' → logprob: -18.000011444091797
    8. '   ' → logprob: -18.125011444091797
    9. '       ' → logprob: -18.125011444091797
    10. ')' → logprob: -18.250011444091797

Token 756: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0485873706638813
    2. ' H' → logprob: -3.0485873222351074
    3. ' ' → logprob: -17.923587799072266
    4. '   ' → logprob: -18.298587799072266
    5. '       ' → logprob: -18.548587799072266
    6. '           ' → logprob: -18.923587799072266
    7. ')' → logprob: -19.673587799072266
    8. '
' → logprob: -19.673587799072266
    9. '               ' → logprob: -20.423587799072266
    10. '```' → logprob: -20.423587799072266

Token 757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ',
' → logprob: -13.25000286102295
    3. ' ,' → logprob: -14.00000286102295
    4. '           ' → logprob: -17.000001907348633
    5. '
' → logprob: -17.125001907348633
    6. '```' → logprob: -18.000001907348633
    7. ')' → logprob: -18.125001907348633
    8. 'layout' → logprob: -19.250001907348633
    9. ',
' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.625001907348633

Token 758: ' layout' (ID: 10557)
  Prédit: 'layout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layout' → logprob: -0.002476135268807411
    2. ' layout' → logprob: -6.002476215362549
    3. '	layout' → logprob: -16.00247573852539
    4. '           ' → logprob: -16.12747573852539
    5. 'lay' → logprob: -16.87747573852539
    6. '   ' → logprob: -17.00247573852539
    7. '(layout' → logprob: -17.00247573852539
    8. '.layout' → logprob: -17.75247573852539
    9. ' ' → logprob: -18.12747573852539
    10. 'layouts' → logprob: -18.25247573852539

Token 759: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06208061799407005
    2. ')' → logprob: -2.8120806217193604
    3. '           ' → logprob: -9.312080383300781
    4. ')
' → logprob: -10.937080383300781
    5. ')

' → logprob: -12.812080383300781
    6. '       ' → logprob: -13.437080383300781
    7. ' )
' → logprob: -14.437080383300781
    8. ')`
' → logprob: -16.56208038330078
    9. '               ' → logprob: -17.06208038330078
    10. '
' → logprob: -17.56208038330078

Token 760: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03217281773686409
    2. 'start' → logprob: -3.532172918319702
    3. 'an' → logprob: -6.907172679901123
    4. '       ' → logprob: -7.157172679901123
    5. ' start' → logprob: -7.532172679901123
    6. '   ' → logprob: -10.532173156738281
    7. 'tile' → logprob: -11.032173156738281
    8. 'reach' → logprob: -11.157173156738281
    9. '
' → logprob: -11.282173156738281
    10. '            
' → logprob: -12.282173156738281

Token 761: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.0005625653429888189
    2. ' start' → logprob: -7.62556266784668
    3. '           ' → logprob: -9.62556266784668
    4. 'an' → logprob: -12.00056266784668
    5. 'starter' → logprob: -14.50056266784668
    6. '            
' → logprob: -14.87556266784668
    7. 'tile' → logprob: -15.75056266784668
    8. 'reach' → logprob: -15.87556266784668
    9. '	start' → logprob: -15.87556266784668
    10. 'root' → logprob: -16.00056266784668

Token 762: '_tile' (ID: 70473)
  Prédit: '_tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tile' → logprob: -0.09202639758586884
    2. ' =' → logprob: -2.592026472091675
    3. '=' → logprob: -4.342026233673096
    4. 'tile' → logprob: -10.717026710510254
    5. 'Tile' → logprob: -11.842026710510254
    6. '_' → logprob: -12.217026710510254
    7. '=_' → logprob: -13.592026710510254
    8. '   ' → logprob: -13.592026710510254
    9. '_TILE' → logprob: -14.092026710510254
    10. '
' → logprob: -14.467026710510254

Token 763: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804171830415726
    2. '=' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.288042068481445
    4. ':' → logprob: -17.538042068481445
    5. '   ' → logprob: -18.163042068481445
    6. '    ' → logprob: -18.288042068481445
    7. ')' → logprob: -18.413042068481445
    8. '       ' → logprob: -18.913042068481445
    9. '        ' → logprob: -19.163042068481445
    10. '=find' → logprob: -19.288042068481445

Token 764: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.04300536587834358
    2. ' grid' → logprob: -3.1680054664611816
    3. '           ' → logprob: -13.043004989624023
    4. '(grid' → logprob: -13.293004989624023
    5. 'next' → logprob: -14.293004989624023
    6. '	grid' → logprob: -14.668004989624023
    7. '   ' → logprob: -15.043004989624023
    8. '.grid' → logprob: -15.168004989624023
    9. ' next' → logprob: -15.168004989624023
    10. 'None' → logprob: -16.543004989624023

Token 765: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -7.994086627149954e-05
    2. '.' → logprob: -9.500080108642578
    3. 'find' → logprob: -12.250080108642578
    4. '.findall' → logprob: -15.875080108642578
    5. ' .' → logprob: -17.375080108642578
    6. '   ' → logprob: -17.875080108642578
    7. '=find' → logprob: -17.875080108642578
    8. ').' → logprob: -19.375080108642578
    9. '.get' → logprob: -19.625080108642578
    10. '```' → logprob: -19.625080108642578

Token 766: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.9361264946837764e-07
    2. 'start' → logprob: -16.5
    3. '_' → logprob: -18.0
    4. '(start' → logprob: -20.25
    5. '_
' → logprob: -20.5
    6. 'Start' → logprob: -20.5
    7. '```' → logprob: -20.875
    8. '_START' → logprob: -21.375
    9. '__' → logprob: -22.0
    10. '`' → logprob: -22.0

Token 767: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.182770773768425
    2. '()' → logprob: -1.9327707290649414
    3. '           ' → logprob: -3.8077707290649414
    4. '()
' → logprob: -10.182770729064941
    5. '
' → logprob: -10.432770729064941
    6. '()

' → logprob: -11.682770729064941
    7. '(),' → logprob: -12.057770729064941
    8. '       ' → logprob: -12.807770729064941
    9. '()\' → logprob: -13.182770729064941
    10. '())' → logprob: -13.432770729064941

Token 768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001352379797026515
    2. '       ' → logprob: -6.626352310180664
    3. 'reach' → logprob: -11.751352310180664
    4. 'an' → logprob: -12.126352310180664
    5. ' reach' → logprob: -12.251352310180664
    6. '   ' → logprob: -12.501352310180664
    7. ' analyzer' → logprob: -12.876352310180664
    8. 'ai' → logprob: -14.376352310180664
    9. '               ' → logprob: -14.876352310180664
    10. 'analysis' → logprob: -15.751352310180664

Token 769: ' analyzer' (ID: 107715)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.001711709308438003
    2. '           ' → logprob: -7.001711845397949
    3. ' analyzer' → logprob: -7.251711845397949
    4. 'reach' → logprob: -9.75171184539795
    5. 'analysis' → logprob: -10.87671184539795
    6. 'reachable' → logprob: -13.00171184539795
    7. 'anal' → logprob: -13.12671184539795
    8. 'ra' → logprob: -13.37671184539795
    9. '       ' → logprob: -13.62671184539795
    10. 'ana' → logprob: -13.75171184539795

Token 770: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. '.' → logprob: -14.100208282470703
    4. '   ' → logprob: -14.975208282470703
    5. ' ' → logprob: -15.225208282470703
    6. ')' → logprob: -17.100208282470703
    7. '  ' → logprob: -17.225208282470703
    8. ':' → logprob: -17.225208282470703
    9. ' ' → logprob: -17.225208282470703
    10. '.=' → logprob: -17.225208282470703

Token 771: ' Reach' (ID: 80172)
  Prédit: 'Reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reach' → logprob: -0.0019286326132714748
    2. ' Reach' → logprob: -6.251928806304932
    3. 'Reached' → logprob: -19.251928329467773
    4. ' ' → logprob: -21.251928329467773
    5. '   ' → logprob: -21.251928329467773
    6. 'Re' → logprob: -21.251928329467773
    7. 'Reveal' → logprob: -21.751928329467773
    8. 'reach' → logprob: -22.626928329467773
    9. '```' → logprob: -22.626928329467773
    10. ' reach' → logprob: -22.751928329467773

Token 772: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -4.320199877838604e-07
    2. 'Ability' → logprob: -15.125
    3. 'abil' → logprob: -16.25
    4. 'ABILITY' → logprob: -17.5
    5. 'a' → logprob: -18.5
    6. ' ability' → logprob: -18.625
    7. 'ailability' → logprob: -18.75
    8. 'abl' → logprob: -19.0
    9. 'ibility' → logprob: -19.25
    10. 'ach' → logprob: -19.5

Token 773: 'Analyzer' (ID: 61604)
  Prédit: 'Analyzer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -3.292907877039397e-06
    2. 'an' → logprob: -12.75000286102295
    3. 'Analy' → logprob: -15.00000286102295
    4. 'Analyze' → logprob: -18.000003814697266
    5. ' Analyzer' → logprob: -18.625003814697266
    6. '(an' → logprob: -19.000003814697266
    7. '```' → logprob: -19.500003814697266
    8. 'Animator' → logprob: -19.625003814697266
    9. '
' → logprob: -19.625003814697266
    10. 'A' → logprob: -19.875003814697266

Token 774: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -2.1008713702030946e-06
    2. 'grid' → logprob: -13.250001907348633
    3. '           ' → logprob: -15.750001907348633
    4. '(
' → logprob: -17.000001907348633
    5. '(Grid' → logprob: -17.125001907348633
    6. ' grid' → logprob: -18.125001907348633
    7. '(graph' → logprob: -18.750001907348633
    8. ' (' → logprob: -19.250001907348633
    9. '(gr' → logprob: -19.250001907348633
    10. '.grid' → logprob: -19.375001907348633

Token 775: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16071635484695435
    2. ')' → logprob: -1.9107162952423096
    3. '           ' → logprob: -7.660716533660889
    4. ')
' → logprob: -11.41071605682373
    5. '       ' → logprob: -12.53571605682373
    6. '          ' → logprob: -13.53571605682373
    7. ' )
' → logprob: -13.53571605682373
    8. ')

' → logprob: -14.03571605682373
    9. 'start' → logprob: -14.03571605682373
    10. ' ' → logprob: -14.53571605682373

Token 776: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007175663486123085
    2. 'count' → logprob: -5.007175445556641
    3. 'result' → logprob: -8.00717544555664
    4. 'results' → logprob: -9.63217544555664
    5. ' count' → logprob: -10.50717544555664
    6. '```' → logprob: -11.13217544555664
    7. '
' → logprob: -12.00717544555664
    8. ' result' → logprob: -12.25717544555664
    9. '   ' → logprob: -13.25717544555664
    10. 'answer' → logprob: -13.50717544555664

Token 777: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.03949662670493126
    2. 'reachable' → logprob: -3.789496660232544
    3. 'result' → logprob: -4.289496421813965
    4. 'results' → logprob: -6.539496421813965
    5. '           ' → logprob: -7.914496421813965
    6. 'reach' → logprob: -8.039496421813965
    7. ' reachable' → logprob: -9.164496421813965
    8. ' count' → logprob: -9.414496421813965
    9. 'area' → logprob: -10.914496421813965
    10. 'accessible' → logprob: -10.914496421813965

Token 778: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067154900170862675
    2. '=' → logprob: -5.006715297698975
    3. ' +=' → logprob: -17.006715774536133
    4. ' ' → logprob: -18.131715774536133
    5. '.append' → logprob: -19.006715774536133
    6. '=count' → logprob: -19.131715774536133
    7. ')' → logprob: -19.631715774536133
    8. '_' → logprob: -19.756715774536133
    9. ' ' → logprob: -19.756715774536133
    10. 's' → logprob: -20.131715774536133

Token 779: ' analyzer' (ID: 107715)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.029760213568806648
    2. ' analyzer' → logprob: -3.5297601222991943
    3. '	an' → logprob: -12.279760360717773
    4. ' analy' → logprob: -12.529760360717773
    5. 'Analyzer' → logprob: -14.529760360717773
    6. '           ' → logprob: -15.404760360717773
    7. '   ' → logprob: -15.529760360717773
    8. ' an' → logprob: -15.654760360717773
    9. 'analysis' → logprob: -15.779760360717773
    10. '_an' → logprob: -16.529760360717773

Token 780: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -2.069664333248511e-05
    2. '.' → logprob: -11.875020980834961
    3. 'dfs' → logprob: -12.125020980834961
    4. '
' → logprob: -12.750020980834961
    5. ' .' → logprob: -12.750020980834961
    6. '.df' → logprob: -14.500020980834961
    7. '.
' → logprob: -15.375020980834961
    8. '   ' → logprob: -15.375020980834961
    9. '```' → logprob: -15.625020980834961
    10. '..' → logprob: -15.625020980834961

Token 781: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -5.512236498361744e-07
    2. 'f' → logprob: -14.500000953674316
    3. 'sf' → logprob: -17.0
    4. ' fs' → logprob: -18.625
    5. 'dfs' → logprob: -18.625
    6. '(fs' → logprob: -19.125
    7. 'FS' → logprob: -19.75
    8. 'ps' → logprob: -19.875
    9. 'fsp' → logprob: -20.125
    10. 'fg' → logprob: -20.875

Token 782: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -5.991464786347933e-05
    2. '(' → logprob: -9.750060081481934
    3. '(
' → logprob: -13.875060081481934
    4. '(st' → logprob: -14.750060081481934
    5. 'start' → logprob: -17.500059127807617
    6. '((' → logprob: -17.625059127807617
    7. '[start' → logprob: -17.750059127807617
    8. '(end' → logprob: -17.875059127807617
    9. '(stat' → logprob: -18.125059127807617
    10. '(stop' → logprob: -18.875059127807617

Token 783: '_tile' (ID: 70473)
  Prédit: '_tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tile' → logprob: -2.339278580620885e-06
    2. 'tile' → logprob: -14.250001907348633
    3. '_' → logprob: -14.375001907348633
    4. '_t' → logprob: -14.625001907348633
    5. '_token' → logprob: -16.125001907348633
    6. '_start' → logprob: -16.250001907348633
    7. '_TILE' → logprob: -16.375001907348633
    8. 'start' → logprob: -16.875001907348633
    9. '_
' → logprob: -17.250001907348633
    10. 'Tile' → logprob: -17.625001907348633

Token 784: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1535661667585373
    2. '           ' → logprob: -2.0285661220550537
    3. ')
' → logprob: -4.528566360473633
    4. '
' → logprob: -11.653566360473633
    5. '               ' → logprob: -12.153566360473633
    6. '          ' → logprob: -12.403566360473633
    7. '<|end|>' → logprob: -12.653566360473633
    8. ')return' → logprob: -13.028566360473633
    9. '       ' → logprob: -13.153566360473633
    10. ')+' → logprob: -13.778566360473633

Token 785: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025526012177579105
    2. '       ' → logprob: -8.500255584716797
    3. 'results' → logprob: -10.875255584716797
    4. '   ' → logprob: -11.250255584716797
    5. '```' → logprob: -11.875255584716797
    6. '
' → logprob: -12.375255584716797
    7. '<|end|>' → logprob: -12.375255584716797
    8. '               ' → logprob: -13.625255584716797
    9. ' results' → logprob: -13.750255584716797
    10. '<|end|>' → logprob: -14.750255584716797

Token 786: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.000488811288960278
    2. ' results' → logprob: -8.000489234924316
    3. '       ' → logprob: -9.000489234924316
    4. '           ' → logprob: -10.500489234924316
    5. '	results' → logprob: -13.750489234924316
    6. '
' → logprob: -13.875489234924316
    7. '   ' → logprob: -15.125489234924316
    8. '            
' → logprob: -16.37548828125
    9. '_results' → logprob: -17.12548828125
    10. '.results' → logprob: -17.12548828125

Token 787: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009146820520982146
    2. '.' → logprob: -7.000914573669434
    3. '.app' → logprob: -13.125914573669434
    4. '.ap' → logprob: -14.000914573669434
    5. '.extend' → logprob: -16.37591552734375
    6. '.Append' → logprob: -16.37591552734375
    7. 'append' → logprob: -16.50091552734375
    8. '.push' → logprob: -17.37591552734375
    9. '.add' → logprob: -18.00091552734375
    10. '_append' → logprob: -18.75091552734375

Token 788: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.0206720617134124e-05
    2. 'count' → logprob: -11.50001049041748
    3. '(' → logprob: -16.875009536743164
    4. '(c' → logprob: -18.500009536743164
    5. ' count' → logprob: -19.375009536743164
    6. '(
' → logprob: -19.500009536743164
    7. '(len' → logprob: -19.625009536743164
    8. '[count' → logprob: -20.250009536743164
    9. '=count' → logprob: -20.750009536743164
    10. '(co' → logprob: -21.625009536743164

Token 789: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3261944651603699
    2. ')
' → logprob: -1.9511945247650146
    3. '
' → logprob: -2.0761945247650146
    4. '       ' → logprob: -4.5761942863464355
    5. ')return' → logprob: -8.576194763183594
    6. '<|end|>' → logprob: -8.826194763183594
    7. 'return' → logprob: -9.201194763183594
    8. '        
' → logprob: -10.201194763183594
    9. '```' → logprob: -11.201194763183594
    10. '
' → logprob: -11.451194763183594

Token 790: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0059690880589187145
    2. 'return' → logprob: -5.255969047546387
    3. '   ' → logprob: -7.755969047546387
    4. ' return' → logprob: -8.755969047546387
    5. '
' → logprob: -9.505969047546387
    6. '	return' → logprob: -10.255969047546387
    7. '	' → logprob: -10.380969047546387
    8. '```' → logprob: -12.505969047546387
    9. '<|end|>' → logprob: -13.880969047546387
    10. '        
' → logprob: -13.880969047546387

Token 791: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7343505620956421
    2. 'return' (adapté à ' return') → logprob: -0.7343505620956421
    3. '
' → logprob: -3.7343506813049316
    4. ' return' → logprob: -4.609350681304932
    5. '   ' → logprob: -5.734350681304932
    6. '	return' → logprob: -6.234350681304932
    7. '	' → logprob: -6.734350681304932
    8. '        
' → logprob: -10.234350204467773
    9. '```' → logprob: -10.609350204467773
    10. ' ' → logprob: -11.109350204467773

Token 792: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.029750484973192215
    2. ' results' → logprob: -3.5297505855560303
    3. '	results' → logprob: -18.02975082397461
    4. '(results' → logprob: -18.77975082397461
    5. '.results' → logprob: -21.27975082397461
    6. '[' → logprob: -21.77975082397461
    7. 'Results' → logprob: -23.27975082397461
    8. '_results' → logprob: -23.52975082397461
    9. '   ' → logprob: -24.02975082397461
    10. 'result' → logprob: -24.27975082397461

Token 793: '


' (ID: 2499)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0632018893957138
    2. '<|end|>' → logprob: -3.188201904296875
    3. 'def' → logprob: -5.188201904296875
    4. '
' → logprob: -5.438201904296875
    5. 'if' → logprob: -5.563201904296875
    6. '[' → logprob: -6.313201904296875
    7. '```' → logprob: -6.313201904296875
    8. '[
' → logprob: -7.688201904296875
    9. '.' → logprob: -8.063201904296875
    10. '<|end|>' → logprob: -8.313201904296875

Token 794: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21328690648078918
    2. '<|end|>' → logprob: -1.7132868766784668
    3. '```' → logprob: -4.838286876678467
    4. '[' → logprob: -6.713286876678467
    5. '
' → logprob: -7.338286876678467
    6. 'def' → logprob: -7.463286876678467
    7. 'r' → logprob: -7.588286876678467
    8. '<|end|>' → logprob: -8.088287353515625
    9. 'a' → logprob: -9.213287353515625
    10. ' ' → logprob: -9.838287353515625

Token 795: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20142318308353424
    2. 'main' → logprob: -1.701423168182373
    3. ' run' → logprob: -11.701423645019531
    4. 'run' → logprob: -13.576423645019531
    5. ' solve' → logprob: -15.201423645019531
    6. 'process' → logprob: -17.20142364501953
    7. '	main' → logprob: -17.32642364501953
    8. '_main' → logprob: -17.45142364501953
    9. 'solve' → logprob: -17.57642364501953
    10. ' read' → logprob: -17.70142364501953

Token 796: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.796184723294573e-06
    2. '():
' → logprob: -12.250005722045898
    3. '()' → logprob: -14.375005722045898
    4. ' ():' → logprob: -14.750005722045898
    5. '():
' → logprob: -18.2500057220459
    6. '_' → logprob: -19.8750057220459
    7. '(' → logprob: -19.8750057220459
    8. '().' → logprob: -20.0000057220459
    9. '()>' → logprob: -20.5000057220459
    10. ':' → logprob: -20.5000057220459

Token 797: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.33555135130882263
    2. '   ' → logprob: -1.835551381111145
    3. ' input' → logprob: -2.5855512619018555
    4. 'import' → logprob: -3.0855512619018555
    5. 'input' → logprob: -5.7105512619018555
    6. ' if' → logprob: -6.8355512619018555
    7. 'if' → logprob: -9.585551261901855
    8. ' lines' → logprob: -12.460551261901855
    9. '	import' → logprob: -12.835551261901855
    10. ' from' → logprob: -13.085551261901855

Token 798: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.07190951704978943
    2. ' import' → logprob: -2.8219094276428223
    3. 'input' → logprob: -5.071909427642822
    4. '   ' → logprob: -5.946909427642822
    5. ' input' → logprob: -6.946909427642822
    6. 'if' → logprob: -10.44690990447998
    7. 'data' → logprob: -11.82190990447998
    8. ' if' → logprob: -13.44690990447998
    9. ' data' → logprob: -13.69690990447998
    10. 'inputs' → logprob: -13.69690990447998

Token 799: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5759398937225342
    2. 'sys' → logprob: -0.8259398937225342
    3. '=sys' → logprob: -14.950940132141113
    4. '	sys' → logprob: -15.700940132141113
    5. '(sys' → logprob: -18.575939178466797
    6. '_sys' → logprob: -19.075939178466797
    7. '.sys' → logprob: -19.950939178466797
    8. '_' → logprob: -20.700939178466797
    9. ' ' → logprob: -20.950939178466797
    10. 'io' → logprob: -21.450939178466797

Token 800: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10173327475786209
    2. '
' → logprob: -2.9767332077026367
    3. 'input' → logprob: -3.3517332077026367
    4. '    
' → logprob: -4.976733207702637
    5. ' input' → logprob: -6.601733207702637
    6. '	input' → logprob: -7.226733207702637
    7. '_input' → logprob: -7.351733207702637
    8. 'data' → logprob: -8.226733207702637
    9. '	lines' → logprob: -8.976733207702637
    10. '   
' → logprob: -9.101733207702637

Token 801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10173176974058151
    2. 'input' → logprob: -2.976731777191162
    3. ' input' → logprob: -3.101731777191162
    4. ' lines' → logprob: -7.351731777191162
    5. 'data' → logprob: -10.101731300354004
    6. '_input' → logprob: -10.601731300354004
    7. 'lines' → logprob: -10.726731300354004
    8. '	input' → logprob: -10.726731300354004
    9. ' data' → logprob: -11.726731300354004
    10. '
' → logprob: -11.976731300354004

Token 802: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.0032646958716213703
    2. '   ' → logprob: -6.503264904022217
    3. ' input' → logprob: -6.753264904022217
    4. 'data' → logprob: -7.753264904022217
    5. 'lines' → logprob: -8.753264427185059
    6. ' lines' → logprob: -12.628264427185059
    7. 'inputs' → logprob: -13.128264427185059
    8. 'solver' → logprob: -14.378264427185059
    9. 'if' → logprob: -15.503264427185059
    10. ' data' → logprob: -16.253265380859375

Token 803: '_data' (ID: 3537)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.5931659936904907
    2. '_data' → logprob: -0.8431659936904907
    3. '_' → logprob: -4.093165874481201
    4. ' =' → logprob: -8.46816635131836
    5. '_=' → logprob: -9.46816635131836
    6. '=' → logprob: -10.09316635131836
    7. '=_' → logprob: -10.21816635131836
    8. 'data' → logprob: -10.96816635131836
    9. 'lines' → logprob: -13.09316635131836
    10. '_
' → logprob: -13.21816635131836

Token 804: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023257242515683174
    2. ' =' → logprob: -3.773257255554199
    3. '=sys' → logprob: -11.3982572555542
    4. '=[]' → logprob: -15.1482572555542
    5. '=

' → logprob: -16.648256301879883
    6. '=
' → logprob: -16.773256301879883
    7. '   ' → logprob: -17.398256301879883
    8. '=list' → logprob: -17.398256301879883
    9. '=line' → logprob: -17.523256301879883
    10. '=[]
' → logprob: -17.773256301879883

Token 805: ' [' (ID: 723)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02673332765698433
    2. ' sys' → logprob: -4.0267333984375
    3. '[' → logprob: -4.7767333984375
    4. ' [' → logprob: -9.0267333984375
    5. 'list' → logprob: -14.2767333984375
    6. '(sys' → logprob: -14.2767333984375
    7. '	sys' → logprob: -14.4017333984375
    8. '[s' → logprob: -14.5267333984375
    9. '=sys' → logprob: -14.7767333984375
    10. '[list' → logprob: -16.2767333984375

Token 806: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.9361264946837764e-07
    2. ' line' → logprob: -16.125
    3. 'l' → logprob: -19.875
    4. '```' → logprob: -20.0
    5. '(line' → logprob: -20.375
    6. '
' → logprob: -21.125
    7. '	line' → logprob: -21.25
    8. '

' → logprob: -21.625
    9. '=line' → logprob: -21.625
    10. '[line' → logprob: -21.75

Token 807: '.rstrip' (ID: 161629)
  Prédit: '.rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.1285896897315979
    2. ' for' → logprob: -2.378589630126953
    3. 'for' → logprob: -3.628589630126953
    4. 'rstrip' → logprob: -6.628589630126953
    5. '.strip' → logprob: -9.253589630126953
    6. '.' → logprob: -12.378589630126953
    7. '[:-' → logprob: -12.753589630126953
    8. '
' → logprob: -13.253589630126953
    9. '	for' → logprob: -13.753589630126953
    10. '.readline' → logprob: -13.878589630126953

Token 808: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.018184827640652657
    2. '()' → logprob: -4.018184661865234
    3. '("\' → logprob: -11.018184661865234
    4. ''\' → logprob: -11.018184661865234
    5. '()\' → logprob: -13.643184661865234
    6. '()
' → logprob: -14.268184661865234
    7. 'for' → logprob: -16.143184661865234
    8. '(' → logprob: -16.393184661865234
    9. '='\' → logprob: -17.268184661865234
    10. '\n' → logprob: -18.143184661865234

Token 809: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -14.75
    3. 'r' → logprob: -20.625
    4. 'newline' → logprob: -21.875
    5. '012' → logprob: -23.25
    6. ' n' → logprob: -23.375
    7. '\' → logprob: -24.375
    8. 't' → logprob: -24.75
    9. '	n' → logprob: -24.75
    10. 'f' → logprob: -24.875

Token 810: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -3.2378600735682994e-05
    2. ')' → logprob: -10.375032424926758
    3. '")' → logprob: -14.750032424926758
    4. '')
' → logprob: -14.875032424926758
    5. '\r' → logprob: -15.625032424926758
    6. ' ')' → logprob: -16.500032424926758
    7. ''' → logprob: -17.125032424926758
    8. '\n' → logprob: -17.250032424926758
    9. ''))' → logprob: -18.250032424926758
    10. '   ' → logprob: -18.875032424926758

Token 811: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10369209945201874
    2. 'for' → logprob: -2.353692054748535
    3. '   ' → logprob: -5.728692054748535
    4. '	for' → logprob: -8.478692054748535
    5. '    ' → logprob: -11.853692054748535
    6. '       ' → logprob: -12.228692054748535
    7. ')' → logprob: -12.978692054748535
    8. ' ' → logprob: -13.478692054748535
    9. '<|end|>' → logprob: -13.728692054748535
    10. '  ' → logprob: -14.353692054748535

Token 812: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3132631778717041
    2. ' line' → logprob: -1.313263177871704
    3. '	line' → logprob: -13.813262939453125
    4. '_line' → logprob: -14.938262939453125
    5. ' sys' → logprob: -17.063262939453125
    6. 'sys' → logprob: -17.188262939453125
    7. '(line' → logprob: -18.188262939453125
    8. '#line' → logprob: -18.313262939453125
    9. '=line' → logprob: -18.438262939453125
    10. '
' → logprob: -18.563262939453125

Token 813: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04300820827484131
    2. 'in' → logprob: -3.168008327484131
    3. 'import' → logprob: -11.793007850646973
    4. 'sys' → logprob: -15.043007850646973
    5. ' ' → logprob: -15.543007850646973
    6. '
' → logprob: -15.668007850646973
    7. 'line' → logprob: -16.04300880432129
    8. 'In' → logprob: -16.16800880432129
    9. '	in' → logprob: -16.54300880432129
    10. '   ' → logprob: -16.66800880432129

Token 814: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011048054322600365
    2. ' sys' → logprob: -4.511047840118408
    3. '	sys' → logprob: -16.63604736328125
    4. '=sys' → logprob: -16.76104736328125
    5. '(sys' → logprob: -18.01104736328125
    6. 'stdin' → logprob: -20.63604736328125
    7. '
' → logprob: -21.38604736328125
    8. ' ' → logprob: -21.63604736328125
    9. '   ' → logprob: -21.76104736328125
    10. '_sys' → logprob: -22.63604736328125

Token 815: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0008093867218121886
    2. 'in' → logprob: -7.250809192657471
    3. 'stdin' → logprob: -9.375809669494629
    4. '   ' → logprob: -11.875809669494629
    5. '.in' → logprob: -13.500809669494629
    6. '.argv' → logprob: -13.625809669494629
    7. '(stdin' → logprob: -13.750809669494629
    8. '.stdout' → logprob: -13.875809669494629
    9. '.' → logprob: -14.000809669494629
    10. 'import' → logprob: -14.250809669494629

Token 816: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.9160102712921798e-05
    2. '.readlines' → logprob: -10.625029563903809
    3. ']
' → logprob: -13.375029563903809
    4. '   ' → logprob: -13.500029563903809
    5. ' ]' → logprob: -14.000029563903809
    6. '()]' → logprob: -14.250029563903809
    7. '`]' → logprob: -16.250028610229492
    8. '.readline' → logprob: -16.375028610229492
    9. ']>' → logprob: -17.000028610229492
    10. ')]' → logprob: -17.500028610229492

Token 817: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4795559346675873
    2. 'solver' → logprob: -1.3545559644699097
    3. ' solver' → logprob: -2.10455584526062
    4. '
' → logprob: -7.729556083679199
    5. '_solver' → logprob: -8.4795560836792
    6. 's' → logprob: -8.9795560836792
    7. ' solution' → logprob: -9.7295560836792
    8. '	s' → logprob: -9.8545560836792
    9. 'solution' → logprob: -10.8545560836792
    10. '    
' → logprob: -11.1045560836792

Token 818: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.0009376663947477937
    2. ' solver' → logprob: -7.000937461853027
    3. 'results' → logprob: -11.375937461853027
    4. '   ' → logprob: -11.750937461853027
    5. 'solution' → logprob: -12.125937461853027
    6. '_solver' → logprob: -15.000937461853027
    7. '
' → logprob: -15.125937461853027
    8. 'sol' → logprob: -15.250937461853027
    9. 'result' → logprob: -15.750937461853027
    10. 's' → logprob: -16.000938415527344

Token 819: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0263022743165493
    2. '=' → logprob: -3.6513023376464844
    3. '.' → logprob: -13.526302337646484
    4. '.solve' → logprob: -14.901302337646484
    5. ' =
' → logprob: -16.776302337646484
    6. '	' → logprob: -17.026302337646484
    7. ' ' → logprob: -17.276302337646484
    8. ' ' → logprob: -17.276302337646484
    9. '<|end|>' → logprob: -17.276302337646484
    10. '(' → logprob: -17.276302337646484

Token 820: ' Red' (ID: 5952)
  Prédit: 'Red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Red' → logprob: -0.12692810595035553
    2. ' Red' → logprob: -2.1269280910491943
    3. ' red' → logprob: -18.626928329467773
    4. '.Red' → logprob: -20.376928329467773
    5. ' ' → logprob: -20.876928329467773
    6. '
' → logprob: -21.001928329467773
    7. ' ' → logprob: -21.376928329467773
    8. '   ' → logprob: -22.001928329467773
    9. '_red' → logprob: -22.001928329467773
    10. 'RED' → logprob: -23.001928329467773

Token 821: 'Black' (ID: 19473)
  Prédit: 'Black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Black' → logprob: -6.704273118884885e-07
    2. 'Blacklist' → logprob: -15.125000953674316
    3. 'Red' → logprob: -16.0
    4. '_black' → logprob: -17.125
    5. 'B' → logprob: -17.125
    6. 'black' → logprob: -17.25
    7. ' Black' → logprob: -17.75
    8. '.Black' → logprob: -17.75
    9. 'Block' → logprob: -18.25
    10. 'Back' → logprob: -19.0

Token 822: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -2.45848218582978e-06
    2. 'solver' → logprob: -13.25000286102295
    3. ' solver' → logprob: -15.37500286102295
    4. '_solver' → logprob: -15.87500286102295
    5. 'Solve' → logprob: -16.375001907348633
    6. ' Solver' → logprob: -16.500001907348633
    7. 'Sol' → logprob: -17.375001907348633
    8. 'olver' → logprob: -18.125001907348633
    9. 'Solved' → logprob: -21.000001907348633
    10. 'S' → logprob: -21.250001907348633

Token 823: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01980271190404892
    2. '(' → logprob: -4.019802570343018
    3. '(
' → logprob: -6.519802570343018
    4. 'solver' → logprob: -8.894803047180176
    5. '(s' → logprob: -10.519803047180176
    6. '(main' → logprob: -13.019803047180176
    7. '.solve' → logprob: -13.019803047180176
    8. 'input' → logprob: -13.019803047180176
    9. 'solve' → logprob: -13.644803047180176
    10. '_solver' → logprob: -13.769803047180176

Token 824: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.000001907348633
    3. ')' → logprob: -15.250001907348633
    4. 'data' → logprob: -15.375001907348633
    5. '._' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.250001907348633
    7. 'Data' → logprob: -16.750001907348633
    8. '.data' → logprob: -16.750001907348633
    9. '_dat' → logprob: -17.375001907348633
    10. '_DATA' → logprob: -17.500001907348633

Token 825: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037359268753789365
    2. ')
' → logprob: -8.000373840332031
    3. '   ' → logprob: -10.250373840332031
    4. ' )' → logprob: -13.375373840332031
    5. ' ' → logprob: -15.125373840332031
    6. ').' → logprob: -15.250373840332031
    7. '()' → logprob: -15.625373840332031
    8. '),' → logprob: -15.875373840332031
    9. '())' → logprob: -15.875373840332031
    10. ')
' → logprob: -16.37537384033203

Token 826: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21663662791252136
    2. 'results' → logprob: -1.7166366577148438
    3. ' results' → logprob: -4.216636657714844
    4. 'result' → logprob: -8.841636657714844
    5. 'for' → logprob: -8.966636657714844
    6. '	results' → logprob: -9.841636657714844
    7. ' for' → logprob: -11.091636657714844
    8. 'outputs' → logprob: -11.841636657714844
    9. '    
' → logprob: -12.841636657714844
    10. ' result' → logprob: -13.091636657714844

Token 827: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0005735247395932674
    2. ' results' → logprob: -7.500573635101318
    3. 'result' → logprob: -11.00057315826416
    4. 'for' → logprob: -13.37557315826416
    5. 'answers' → logprob: -13.50057315826416
    6. 'outputs' → logprob: -14.25057315826416
    7. '   ' → logprob: -16.000574111938477
    8. 'counts' → logprob: -16.125574111938477
    9. 'res' → logprob: -16.500574111938477
    10. '	results' → logprob: -17.125574111938477

Token 828: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02632921189069748
    2. '=' → logprob: -3.651329278945923
    3. ':' → logprob: -11.526329040527344
    4. '.' → logprob: -11.901329040527344
    5. ' =
' → logprob: -12.401329040527344
    6. ' ' → logprob: -12.901329040527344
    7. ')' → logprob: -13.276329040527344
    8. '.extend' → logprob: -13.651329040527344
    9. '   ' → logprob: -14.526329040527344
    10. '_' → logprob: -14.776329040527344

Token 829: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.0040785204619169235
    2. ' solver' → logprob: -5.504078388214111
    3. 'sol' → logprob: -15.87907886505127
    4. '_solver' → logprob: -19.754077911376953
    5. 'solve' → logprob: -20.879077911376953
    6. 'Solver' → logprob: -21.504077911376953
    7. 's' → logprob: -23.129077911376953
    8. ' ' → logprob: -23.254077911376953
    9. 'resolver' → logprob: -23.379077911376953
    10. 'scheduler' → logprob: -23.754077911376953

Token 830: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -4.6087021473795176e-05
    2. '.' → logprob: -10.000045776367188
    3. '.sol' → logprob: -15.250045776367188
    4. ' .' → logprob: -15.375045776367188
    5. 'solve' → logprob: -16.375045776367188
    6. '.
' → logprob: -16.875045776367188
    7. '.s' → logprob: -18.125045776367188
    8. '.run' → logprob: -19.000045776367188
    9. '.S' → logprob: -20.000045776367188
    10. '.save' → logprob: -20.000045776367188

Token 831: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02087794803082943
    2. '
' → logprob: -3.8958778381347656
    3. '    
' → logprob: -8.520877838134766
    4. 'for' → logprob: -9.270877838134766
    5. ' for' → logprob: -10.270877838134766
    6. '<|end|>' → logprob: -12.145877838134766
    7. '  
' → logprob: -14.270877838134766
    8. '	for' → logprob: -14.645877838134766
    9. '
' → logprob: -15.395877838134766
    10. '	
' → logprob: -15.520877838134766

Token 832: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07893066108226776
    2. 'for' → logprob: -2.578930616378784
    3. ' for' → logprob: -10.203930854797363
    4. '
' → logprob: -12.953930854797363
    5. '	for' → logprob: -13.578930854797363
    6. '    
' → logprob: -15.828930854797363
    7. '```' → logprob: -17.703929901123047
    8. '       ' → logprob: -18.703929901123047
    9. 'print' → logprob: -20.703929901123047
    10. '   ' → logprob: -20.953929901123047

Token 833: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005541055579669774
    2. '   ' → logprob: -7.500554084777832
    3. ' for' → logprob: -14.000554084777832
    4. '	for' → logprob: -15.750554084777832
    5. '
' → logprob: -16.12555503845215
    6. '```' → logprob: -20.62555503845215
    7. '    
' → logprob: -21.12555503845215
    8. ' ' → logprob: -22.37555503845215
    9. '       ' → logprob: -22.62555503845215
    10. '  ' → logprob: -22.87555503845215

Token 834: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3879244923591614
    2. 'res' → logprob: -1.1379244327545166
    3. 'count' → logprob: -7.637924671173096
    4. ' res' → logprob: -8.137924194335938
    5. ' result' → logprob: -8.387924194335938
    6. 'r' → logprob: -9.887924194335938
    7. ' count' → logprob: -14.637924194335938
    8. ' r' → logprob: -17.387924194335938
    9. '   ' → logprob: -17.387924194335938
    10. 'Result' → logprob: -18.262924194335938

Token 835: ' in' (ID: 306)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.050156496465206146
    2. 'ults' → logprob: -3.050156593322754
    3. 'ultat' → logprob: -7.050156593322754
    4. 'ault' → logprob: -8.050156593322754
    5. 'ut' → logprob: -9.175156593322754
    6. 'ulta' → logprob: -9.800156593322754
    7. ' in' → logprob: -9.925156593322754
    8. 'u' → logprob: -10.425156593322754
    9. 'ul' → logprob: -10.550156593322754
    10. 'ульт' → logprob: -11.050156593322754

Token 836: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -2.15310683415737e-05
    2. ' results' → logprob: -10.750021934509277
    3. '
' → logprob: -20.25002098083496
    4. '(results' → logprob: -20.50002098083496
    5. '	results' → logprob: -21.00002098083496
    6. 'Results' → logprob: -23.00002098083496
    7. '.results' → logprob: -23.12502098083496
    8. 'result' → logprob: -23.87502098083496
    9. '_results' → logprob: -24.25002098083496
    10. 'res' → logprob: -25.00002098083496

Token 837: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07014049589633942
    2. ':
' → logprob: -2.6951406002044678
    3. '   ' → logprob: -9.195140838623047
    4. 'print' → logprob: -9.445140838623047
    5. ',' → logprob: -11.695140838623047
    6. ' print' → logprob: -12.695140838623047
    7. '       ' → logprob: -12.695140838623047
    8. '```' → logprob: -13.570140838623047
    9. '
' → logprob: -13.695140838623047
    10. '.' → logprob: -13.695140838623047

Token 838: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.868328920158092e-05
    2. 'print' → logprob: -11.000028610229492
    3. ' print' → logprob: -11.375028610229492
    4. '   ' → logprob: -15.000028610229492
    5. '
' → logprob: -16.500028610229492
    6. '```' → logprob: -16.750028610229492
    7. '           ' → logprob: -17.875028610229492
    8. '      ' → logprob: -18.250028610229492
    9. '	   ' → logprob: -19.125028610229492
    10. '	print' → logprob: -19.375028610229492

Token 839: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.250001907348633
    4. '```' → logprob: -21.250001907348633
    5. '	print' → logprob: -22.250001907348633
    6. '
' → logprob: -22.875001907348633
    7. 'println' → logprob: -23.250001907348633
    8. 'printf' → logprob: -23.875001907348633
    9. '    
' → logprob: -24.625001907348633
    10. '_print' → logprob: -25.750001907348633

Token 840: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.696889623621246e-06
    2. 'res' → logprob: -13.25000286102295
    3. '(' → logprob: -14.00000286102295
    4. '(f' → logprob: -17.125001907348633
    5. '(
' → logprob: -18.500001907348633
    6. ' res' → logprob: -19.375001907348633
    7. '=res' → logprob: -20.250001907348633
    8. '(re' → logprob: -20.500001907348633
    9. ',res' → logprob: -21.125001907348633
    10. '	res' → logprob: -21.250001907348633

Token 841: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -17.0
    4. '())' → logprob: -18.0
    5. '()' → logprob: -19.25
    6. '))' → logprob: -20.0
    7. ')`' → logprob: -20.0
    8. '   ' → logprob: -20.375
    9. '),' → logprob: -20.5
    10. '}' → logprob: -21.25

Token 842: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0206720617134124e-05
    2. ' if' → logprob: -12.62501049041748
    3. 'main' → logprob: -12.75001049041748
    4. '```' → logprob: -13.37501049041748
    5. '
' → logprob: -13.75001049041748
    6. '#' → logprob: -13.87501049041748
    7. '<|end|>' → logprob: -15.87501049041748
    8. '__' → logprob: -16.625009536743164
    9. '[' → logprob: -16.875009536743164
    10. 'i' → logprob: -17.125009536743164

Token 843: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08288022130727768
    2. '__' → logprob: -2.5828802585601807
    3. '_name' → logprob: -5.957880020141602
    4. '_' → logprob: -6.707880020141602
    5. 'name' → logprob: -9.457880020141602
    6. ' ' → logprob: -9.707880020141602
    7. ' name' → logprob: -11.582880020141602
    8. '___' → logprob: -11.707880020141602
    9. ' ' → logprob: -12.332880020141602
    10. ' ' → logprob: -12.457880020141602

Token 844: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.27063003182411194
    2. ' ==' → logprob: -1.7706300020217896
    3. '==' → logprob: -2.770630121231079
    4. ' __' → logprob: -5.8956298828125
    5. '=="' → logprob: -7.0206298828125
    6. '=='' → logprob: -8.7706298828125
    7. '_' → logprob: -8.8956298828125
    8. 'name' → logprob: -9.3956298828125
    9. '.__' → logprob: -9.6456298828125
    10. '_name' → logprob: -10.6456298828125

Token 845: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.676981345459353e-06
    2. '==' → logprob: -12.750005722045898
    3. '__.__' → logprob: -13.000005722045898
    4. '__.' → logprob: -15.375005722045898
    5. '__
' → logprob: -15.875005722045898
    6. '___' → logprob: -17.1250057220459
    7. '____' → logprob: -17.3750057220459
    8. ' ==' → logprob: -18.1250057220459
    9. '__('' → logprob: -18.1250057220459
    10. '__
' → logprob: -18.5000057220459

Token 846: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5905085802078247
    2. '==' → logprob: -0.8405085802078247
    3. ' ==' → logprob: -4.340508460998535
    4. '=="' → logprob: -6.590508460998535
    5. '=='' → logprob: -10.465508460998535
    6. '_' → logprob: -11.590508460998535
    7. '=' → logprob: -11.715508460998535
    8. '==
' → logprob: -12.465508460998535
    9. '===' → logprob: -12.715508460998535
    10. '___' → logprob: -12.840508460998535

Token 847: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018157435581088066
    2. ''' → logprob: -4.018157482147217
    3. ' "__' → logprob: -12.018157005310059
    4. '__' → logprob: -13.768157005310059
    5. ''"' → logprob: -15.768157005310059
    6. ' '__' → logprob: -15.893157005310059
    7. '"name' → logprob: -17.018157958984375
    8. '"'' → logprob: -18.143157958984375
    9. '"user' → logprob: -18.143157958984375
    10. '"_' → logprob: -18.268157958984375

Token 848: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2523392140865326
    2. '__' → logprob: -1.502339243888855
    3. 'name' → logprob: -7.8773393630981445
    4. '"' → logprob: -11.002339363098145
    5. '_main' → logprob: -12.627339363098145
    6. ''' → logprob: -12.752339363098145
    7. ' main' → logprob: -13.377339363098145
    8. '__":
' → logprob: -14.127339363098145
    9. '```' → logprob: -14.127339363098145
    10. '_MAIN' → logprob: -14.377339363098145

Token 849: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.029850218445062637
    2. '__' → logprob: -3.5298502445220947
    3. '__':
' → logprob: -9.654850006103516
    4. '_' → logprob: -10.404850006103516
    5. '__["' → logprob: -13.529850006103516
    6. '__.__' → logprob: -13.654850006103516
    7. '__.' → logprob: -13.654850006103516
    8. '__:' → logprob: -13.904850006103516
    9. '__
' → logprob: -15.279850006103516
    10. '_"' → logprob: -15.529850006103516

Token 850: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.47974538803100586
    2. '__' → logprob: -1.2297453880310059
    3. '"' → logprob: -2.479745388031006
    4. ''' → logprob: -5.854745388031006
    5. '   ' → logprob: -7.104745388031006
    6. ' main' → logprob: -7.354745388031006
    7. '_main' → logprob: -8.354745864868164
    8. '__":
' → logprob: -8.854745864868164
    9. '__
' → logprob: -10.229745864868164
    10. '	main' → logprob: -10.354745864868164

Token 851: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '   ' → logprob: -18.25
    4. '	main' → logprob: -19.375
    5. 'import' → logprob: -21.125
    6. '.main' → logprob: -24.375
    7. '(main' → logprob: -24.375
    8. '_main' → logprob: -24.625
    9. 'mai' → logprob: -25.625
    10. 'ma' → logprob: -26.0

Token 852: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 850
Tokens correctement prédits (1ère position, stricte): 409
Tokens correctement prédits (1ère position, avec adaptation): 467
Tokens correctement prédits (top 10): 791
Précision stricte (1ère position): 48.12%
Précision adaptée (1ère position): 54.94%
Précision (top 10): 93.06%
================================================================================
