================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 18:48:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

# Lecture des données d'entrée
N, M, K = map(int, sys.stdin.readline().split())
A, B, C = map(int, sys.stdin.readline().split())
T = int(sys.stdin.readline())

# Lecture des stations où l'express s'arrête (triées)
S = [int(sys.stdin.readline()) for _ in range(M)]

# L'idée principale est d'utiliser une programmation dynamique sur les arrêts de semiexpress train.
# On sait que semiexpress doit s'arrêter sur toutes les stations d'express,
# et aussi à K stations au total (K >= M).
# Les arrêts de semiexpress sont un sous-ensemble de stations (numérotées entre 1 et N),
# contenant obligatoirement S_1,...,S_M, et de taille K.
#
# Nous devons choisir les K stations (avec les M stations fixes déjà choisies) pour minimiser
# les temps de trajet en utilisant une combinaison d'express, semiexpress et local,
# pour maximiser le nombre de stations accessibles dans T minutes.
#
# Le graphe est simple: stations numérotées en ordre croissant,
# voyages toujours dans le sens croissant de stations.
#
# Transferts sont possibles en stations d'arrêt communes.
#
# Les trains ont temps de parcours spécifiques par segment:
# local: A minutes / segment
# express: B minutes / segment
# semiexpress: C minutes / segment
#
# Trouver l'ensemble des arrêts du semiexpress implique de choisir (K - M) stations supplémentaires 
# entre les arrêts express pour que la durée la plus courte pour aller jusqu'à une station i soit <= T.
#
# On modélise ainsi:
# - On sépare la ligne en segments entre express stops S[i], S[i+1].
# - Dans chaque segment, on va choisir x arrêts de semiexpress en plus des 2 arrêts express (les extrémités du segment),
#   total des arrêts dans le segment = x + 2.
# - Le nombre total d'arrêts semiexpress sur toute la ligne est K.
# - Le nombre d'arrêts semiexpress imposées est M (les express stops).
# - Il faut donc ajouter (K - M) arrêts entre les segments.
# - Le voyage avec semiexpress s'effectue en segments entre arrêts semiexpress,
#   chaque segment a un coût en temps : 
#     segment_distance * C (temps semiexpress)
# - On peut faire aussi transfert à chaque arrêt : possibilité de changer de train.
#
# Le calcul du temps depuis la station 1 à une station i est donc la somme des temps 
# entre arrêts semiexpress sur le trajet, plus éventuellement du local à côté.
#
# Pour maximiser le nombre de stations accessibles, il faut maximiser la couverture (station reachable within T).
#
# On va donc considérer les arrêts semiexpress comme à répartir entre les M-1 intervalles entre arrêts express:
# Chaque intervalle [S[i], S[i+1]] comprend (S[i+1] - S[i]) stations.
#
# Si on divise cet intervalle en segments par arrêts semiexpress,
# l'intervalle est découpé en (number of semiexpress stops in interval - 1) segments,
# chaque segment a une longueur en stations.
#
# Par vide, choisir plus de stops = découper segments en parties plus petites,
# réduisant la somme des segments * C, donc le temps en semiexpress.
#
# Détaillons:
# - On fixe où choisir les arrêts semiexpress dans chaque intervalle.
# - Pour chaque intervalle, le temps minimum pour se rendre à une station dans l'intervalle dépend de la distance jusqu'à cette station,
#   des arrêts semiexpress (car on mesti voyager entre arrêts semiexpress par train semiexpress)
#   et de la possibilité de changer entre express et semiexpress.
#
# Simplification:
# Avec un nombre donné de stops dans un intervalle, on peut calculer la vitesse moyenne semiexpress efficace pour ce segment.
#
# L'approche efficace:
# - On note que sur le trajet 1->station i, on peut aussi passer par express train sur les arrêts fixes (coût B par segment entre S stops)
# - On inclut les arrêts semiexpress entre les arrêts express, ce qui permet de "couper" un segment long en plusieurs petits segments, chacun qui coûtent C par segment plus court.
#
# Ainsi, pour chaque intervalle entre S_i et S_{i+1}, de longueur d := S_{i+1} - S_i,
# on peut choisir x_i >= 1 arrêts semiexpress au total pour ce segment (car aux extrémités on a déjà les arrêts express, qui sont aussi stops semiexpress).
#
# Le total des arrêts semiexpress est K, donc la somme des x_i sur i = 0..M-2 est K.
#
# Le temps pour traverser ce segment entre deux arrêts semiexpress consécutifs est : (segment_length_part) * C.
#
# Pour accéder à une station située à une distance d' desde S_i, 
# on projette les stations comme divisées en (x_i - 1) segments égales (en nombre d'intervalles),
# chaque segment de longueur approx floor(d / (x_i - 1)) ou ceil(d / (x_i - 1)).
#
# Le temps minimum pour atteindre la station k dans ce interval dépend de la minimal segment qu'elle est dans + le minimal local train usage.
#
# On a aussi le train express avec vitesse B entre stops S_i.
#
# Pour les stations avant le premier semiexpress stop dans l'intervalle, on peut voyager local (coût A).
#
# L'objectif final est de calculer pour un choix donné de arrêts semiexpress par intervalle,
# combien de stations peuvent être atteintes sous le temps T.
#
# Cette solution est compliquée mais on peut faire une recherche binaire sur la distance atteignable avec un choix de arrêts semiexpress,
# car le temps minimal pour accéder à une station i est monotone croissant en station i.
#
# Solution détaillée dans l'éditorial du problème JOI 2016: 
# On fait une recherche binaire sur la station maximale atteignable i_max,
# et on vérifie si on peut choisir les arrêts semiexpress (respectant contraintes)
# telle que le temps pour atteindre la station i_max est ≤ T.
#
# Vérifier la condition est possible avec un DP en O(M*K), grâce à la taille limitée des arrêts express M <= K <= 3000.
#
# Comme N peut être très grand (jusqu'à 10^9), on fait binaire sur station reachable (entre 1 et N),
# pour trouver la plus grande station possible.
#
# Implementation en résumé:
# 1) Recherche binaire sur la station max à atteindre.
# 2) Pour une station x testée, on teste si temps minimal ≤ T possible en choisissant les arrêts semiexpress.
# 3) DP sur arrêts express et arrêts semiexpress.
#
# Les temps sur les intervalles sont calculés avec les segments coupés en stops semiexpress,
# le temps minimal pour aller jusqu'à un point est en simple formule.
#
# On code.

def can_reach(station_limit):
    # Vérifie si on peut atteindre la station station_limit en ≤ T minutes
    # en choisissant les arrêts semiexpress.
    #
    # DP sur arrêts express, où dp[i][j] = le temps minimal pour atteindre S[i]
    # en ayant utilisé j arrêts semiexpress jusqu'à S[i].
    #
    # Ici, les arrêts semiexpress choisis sont au minimum les M arrêts express fixes (incluant les extrêmes),
    # et on doit choisir (K - M) arrêts supplémentaires répartis sur intervalles.
    # On suppose un arrêt semiexpress aux points S[i], donc les arrêts supplémentaires dans chaque intervalle.

    # Notation:
    # intervals: segment i = [S[i], S[i+1]] de longueur d_i = S[i+1]-S[i]
    # pour chaque intervalle, on choisit x_i stops semiexpress (≥1), 
    # avec sum x_i = K

    # On trouve la position p du station_limit dans les arrêts express S par bisect:
    # station_limit peut être avant ou dans un intervalle, on va traiter jusqu'à intervalle contenant station_limit.

    # On effectue dp[i][j]: minimal temps pour atteindre S[i] en utilisant j arrêts semiexpress au total.
    # On construit dp sur i and j.

    # On modifie légèrement la méthode.

    # On va stocker un tableau expr[i]: stations S[i]
    # Et traiter en intervalles.

    # On prépare un tableau permettant d'avoir d_i = longeur des intervalles

    # max dp dimension: M x (K+1)

    # Le nombre total d'arrêts semiexpress = K, déjà M fixes, donc (K - M) supplémentaires à répartir

    # Préalable: on sait que les arrêts express sont aussi des arrêts semiexpress obligatoires:
    # Cela signifie que les arrêts semiexpress dans chaque intervalle i >= 1 (car 2 arrêts fixes aux extrémités),
    # nombre d'arrêts dans intervalle i ≥ 2 (minimale), puisque 2 arrêts fixes.

    # Correction sur notation: dans l’énoncé, M arrêts express (stations S1 to SM), 
    # ces stations sont arrêts de semiexpress.
    # Nombre total arrêts semiexpress K ≥ M.

    # Donc pour chaque intervalle i, nombre d’arrêts semiexpress dans intervalle i peut être >2 si on en rajoute.

    # On définit pour chaque intervalle le nombre de segments = nombre d’arrêts semiexpress dans intervalle i - 1

    # Pour un intervalle de distance d, coupé en s segments, le temps pour traverser un segment est ≤ segment_length * C

    # On veut minimiser le temps pour arriver à une station x ≤ station_limit.

    # On va approximer:
    # Dans l’intervalle on ne peut pas distinguer la position exacte de station_limit.

    # On ajoute dans le dernier intervalle le calcul spécial, car station_limit peut être à l’intérieur.

    # Implémentation du DP:

    # dp[i][j] = minimal total time pour atteindre S[i] en utilisant j arrêts semiexpress (parmi lesquels les i arrêts express fixes).

    # Base: dp[0][M] = 0 (car station 1, l’arrêt express de départ, déjà arrêts semiexpress minimum)

    # Pour i in range(M-1), on essaye toutes allocations x des arrêts semiexpress sur l’intervalle (x ≥ minimal 2)
    # On a (K - M) arrêts supplémentaires à répartir.

    # Mais pour optimiser, on fait dp[i+1][j+x-1] = min(
    #   dp[i][j] + cost(interval i, x arrêts semiexpress dans cet intervalle, station_limit?)
    # )

    # Définition de cost(interval, x, station_limit_in_interval):
    # Calcule le temps maximal nécessaire pour traverser l’intervalle i
    # jusqu'à la station station_limit si elle est dedans;
    # sinon temps total pour traverser l’intervalle.

    # On doit gérer le cas où station_limit est dans cet intervalle.

    # PSEUDO-CODE RAISONNEMENT:

    # Finalement le problème demande combien de stations i≥2 sont atteignables ≤ T.

    # On fait une recherche binaire sur le nombre de stations atteignables.

    # Enfin on code.

    # -----------------------------

    # Trouver l’intervalle où station_limit se trouve:
    idx = bisect.bisect_right(S, station_limit) -1
    # idx entre 0 et M-1 (segment contenant station_limit)
    # si station_limit == S[idx], la station est à l’arrêt express, donc on peut directement prendre semiexpress express.

    # On pré-calcul les distances d_i entre arrêts express
    intervals = [S[i+1] - S[i] for i in range(M-1)]

    # dp: taille M x (K+1), initialisé à grand nombre
    INF = 10**20
    dp = [[INF]*(K+1) for _ in range(M)]
    # A S[0] (station 1), on a déjà M arrêts semiexpress fixes,
    # donc dp[0][M] = 0
    dp[0][M] = 0

    # Fonction pour calculer temps sur un intervalle i en fonction du nombre d'arrêts semiexpress x
    # et la station limite dans cet intervalle (si dans intervalle)

    def cost(i, x, endpoint):
        """
        Calculate the minimal time to reach station endpoint in the i-th interval [S[i], S[i+1]] 
        given x semiexpress stops in this interval,
        including the fixed stops at S[i] and S[i+1].

        x >= 2 (because S[i], S[i+1] fixed), so number of segments = x-1
        segments are equally split intervals: length = intervals[i] / (x-1)

        endpoint: the position of station_limit if is > S[i] and ≤ S[i+1],
                  otherwise endpoint = None meaning full interval to S[i+1]

        Returns minimal time needed to reach endpoint from S[i] with stops semiexpress.

        The travel time is sum of segments * C

        However, to reach station inside the segment, we can combine semiexpress segments and local train.

        Local train cost per segment A > C > B.

        So the minimal time to reach station k is minimal over:
        - using semiexpress between semiexpress stops + local in last segment

        We approximate by:
        - Cutting interval i in segments of length segment_length = intervals[i] // (x-1)
        - station_offset = endpoint - S[i]

        We find in which segment station_offset falls:
        segment index s = (station_offset -1) // segment_length
        then distance from start of this segment to station_offset is:
        last_segment_length = station_offset - s*segment_length

        The time is:
        time to pass s segments with semiexpress = s * segment_length * C
        + time to pass last part by local = last_segment_length * A

        (car on last sub-segment on peut quitter semiexpress pour local)

        En cas où interval_length % (x-1) != 0, les segments ne sont pas égales,
        la division en floor ci-dessus reste une bonne approximation conservatrice.

        """
        d = intervals[i]
        segments = x -1
        segment_length_base = d // segments
        remainder = d % segments

        # Construction du tableau segment_lengths des segments:
        # Les premiers remainder segments ont 1 élément de plus
        segment_lengths = [segment_length_base+1 if j < remainder else segment_length_base for j in range(segments)]

        if endpoint is None:
            # On couvre tout l’intervalle, donc temps total = d * C (en semiexpress)
            return d*C

        # station_offset = endpoint - S[i]
        station_offset = endpoint - S[i]

        # Trouver dans quel segment la station_offset se trouve
        cumu = 0
        seg_idx = 0
        while seg_idx < segments and cumu + segment_lengths[seg_idx] < station_offset:
            cumu += segment_lengths[seg_idx]
            seg_idx +=1

        # seg_idx est le segment contenant station_offset
        # Longueur du dernier segment à parcourir en local:
        last_seg_local_len = station_offset - cumu

        # Time = temps semiexpress pour segments complètes + local sur dernier segment
        time = seg_idx * C * 0  # initialisation, on multiplie par 0 faute de relecture (corriger)
        # correction: temps pour segments complètes = somme longueur segments * C
        # segments complètes = cumu stations parcourues en semiexpress
        time = cumu * C + last_seg_local_len * A
        # On ajoute aussi les segments accèdant au segment: c'est cumu (nombre de stations dans segments complétés)

        return time

    # Dans DP, pour chaque intervalle on essaie de répartir arrêts semiexpress supplémentaires
    # x_i dans [2..interval_length+1], mais attention: x_i ≤ stations dans l’intervalle + 1

    # Or arrêts semiexpress maximum par intervalle ≤ stations dans cet intervalle +1

    # En pratique, l’intervalle entre S[i] et S[i+1] contient intervals[i] stations.

    # Le maximum de arrêts semiexpress dans un intervalle ne peut excéder intervals[i] +1.

    # On réalise que K ≤ 3000 donc on peut limiter x dans [2..intervals[i]+1], mais intervals[i] peut être grand.

    # Pour limiter, on fixe x dans [2..max_x], max_x = min(K, intervals[i]+1)

    # On implémente.

    for i in range(M-1):
        for used_stops in range(M, K+1):
            if dp[i][used_stops] == INF:
                continue
            # Max stops dans interval
            max_x = min(K - used_stops + 1 + 1, intervals[i] + 1)
            # x ≥ 2 minimum car on a S[i] et S[i+1]
            # On augmente de 0 à max_possible forcément
            for x in range(2, max_x+1):
                nxt_j = used_stops + x -1
                if nxt_j > K:
                    break
                # Calcul cout interval:
                # Si interval i == idx (où se trouve station_limit), on restreint à station_limit
                if i == idx:
                    costc = cost(i, x, min(station_limit, S[i+1]))
                elif i < idx:
                    costc = cost(i, x, None)
                else:
                    # Intervalle après station_limit, on pas besoin d’aller au delà
                    # On ne traite pas, mais pour la continuité on force gros cout
                    costc = INF

                val = dp[i][used_stops] + costc

                if val < dp[i+1][nxt_j]:
                    dp[i+1][nxt_j] = val

    # Maintenant à la fin, pour la dernière station S[M-1] = station N,
    # on cherche le minimum dp[M-1][j] où j en M..K et si S[M-1] ≥ station_limit

    # S[M-1] est station N, toujours ≥ station_limit (car station_limit ≤ N)

    for stops_used in range(M, K+1):
        if dp[M-1][stops_used] <= T:
            # Ici, station_limit coincide ou est au max possible
            return True
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2118348330259323
    2. '.' → logprob: -2.3368349075317383
    3. '<|end|>' → logprob: -2.8368349075317383
    4. '\' → logprob: -4.711834907531738
    5. 'newline' → logprob: -5.086834907531738
    6. 'import' → logprob: -5.086834907531738
    7. '
' → logprob: -5.711834907531738
    8. '' → logprob: -5.836834907531738
    9. '<|end|>' → logprob: -5.836834907531738
    10. '\r' → logprob: -6.336834907531738

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006277294596657157
    2. 'os' → logprob: -7.375627517700195
    3. ' math' → logprob: -14.500627517700195
    4. ' re' → logprob: -15.375627517700195
    5. '"os' → logprob: -15.625627517700195
    6. ' json' → logprob: -16.125627517700195
    7. '_os' → logprob: -17.000627517700195
    8. '	os' → logprob: -17.625627517700195
    9. ' io' → logprob: -18.125627517700195
    10. ' argparse' → logprob: -18.250627517700195

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.961759259458631e-06
    2. 't' → logprob: -12.875004768371582
    3. 'ec' → logprob: -13.875004768371582
    4. 'e' → logprob: -14.000004768371582
    5. 'ected' → logprob: -15.500004768371582
    6. 'ection' → logprob: -15.500004768371582
    7. 'ectl' → logprob: -17.1250057220459
    8. 'truct' → logprob: -17.2500057220459
    9. 'ector' → logprob: -17.6250057220459
    10. '```' → logprob: -17.7500057220459

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24884159862995148
    2. '<|end|>' → logprob: -2.9988415241241455
    3. '
' → logprob: -3.3738415241241455
    4. '\n' → logprob: -3.4988415241241455
    5. '\' → logprob: -3.7488415241241455
    6. '' → logprob: -3.8738415241241455
    7. '

' → logprob: -3.9988415241241455
    8. 'import' → logprob: -4.123841762542725
    9. 'newline' → logprob: -4.873841762542725
    10. '```' → logprob: -5.373841762542725

Token 7: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5989304184913635
    2. 'import' → logprob: -2.3489303588867188
    3. '

' → logprob: -2.5989303588867188
    4. '\' → logprob: -2.8489303588867188
    5. '```' → logprob: -3.0989303588867188
    6. '
' → logprob: -3.2239303588867188
    7. '.' → logprob: -3.4739303588867188
    8. 'from' → logprob: -3.7239303588867188
    9. '\n' → logprob: -3.9739303588867188
    10. '#' → logprob: -4.348930358886719

Token 8: ' Lecture' (ID: 106534)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -1.03200101852417
    2. 'def' → logprob: -1.40700101852417
    3. 'class' → logprob: -1.65700101852417
    4. ' def' → logprob: -3.15700101852417
    5. '#' → logprob: -3.40700101852417
    6. ' data' → logprob: -3.65700101852417
    7. 'data' → logprob: -3.65700101852417
    8. ' sorted' → logprob: -4.28200101852417
    9. 'sorted' → logprob: -5.03200101852417
    10. ' #' → logprob: -5.15700101852417

Token 9: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0440870523452759
    2. '_notes' → logprob: -1.5440870523452759
    3. '=' → logprob: -2.0440869331359863
    4. ':' → logprob: -2.4190869331359863
    5. ' =' → logprob: -2.9190869331359863
    6. ' ' → logprob: -3.0440869331359863
    7. '#' → logprob: -3.4190869331359863
    8. 'Notes' → logprob: -3.9190869331359863
    9. '.' → logprob: -4.669086933135986
    10. '_list' → logprob: -5.169086933135986

Token 10: ' données' (ID: 30580)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38056865334510803
    2. ' données' → logprob: -1.3805686235427856
    3. ' data' → logprob: -4.380568504333496
    4. 'd' → logprob: -4.505568504333496
    5. '_' → logprob: -4.630568504333496
    6. 'data' → logprob: -4.755568504333496
    7. 'don' → logprob: -5.130568504333496
    8. 'f' → logprob: -6.130568504333496
    9. ' d' → logprob: -6.380568504333496
    10. '  ' → logprob: -6.630568504333496

Token 11: ' d' (ID: 272)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2225292921066284
    2. '_' → logprob: -1.4725292921066284
    3. '\' → logprob: -2.097529411315918
    4. 's' → logprob: -2.222529411315918
    5. 'import' → logprob: -2.472529411315918
    6. 'd' → logprob: -3.097529411315918
    7. '\n' → logprob: -3.347529411315918
    8. '```' → logprob: -4.222529411315918
    9. '#' → logprob: -4.597529411315918
    10. '.' → logprob: -4.722529411315918

Token 12: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.1247420385479927
    2. 'e' → logprob: -2.249742031097412
    3. 'u' → logprob: -5.249742031097412
    4. 'es' → logprob: -6.249742031097412
    5. 'entrée' → logprob: -6.499742031097412
    6. '’entrée' → logprob: -7.249742031097412
    7. ''utilisateur' → logprob: -7.374742031097412
    8. ' entrée' → logprob: -7.874742031097412
    9. ''ent' → logprob: -7.874742031097412
    10. ''une' → logprob: -8.62474250793457

Token 13: '
' (ID: 198)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7008137106895447
    2. 'input' → logprob: -1.7008137702941895
    3. 's' → logprob: -2.5758137702941895
    4. ' ' → logprob: -2.9508137702941895
    5. 'n' → logprob: -3.3258137702941895
    6. ':' → logprob: -3.7008137702941895
    7. '_' → logprob: -3.8258137702941895
    8. ' data' → logprob: -4.0758137702941895
    9. ',' → logprob: -4.2008137702941895
    10. ' input' → logprob: -4.4508137702941895

Token 14: 'N' (ID: 45)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.15516790747642517
    2. 'input' → logprob: -2.030167818069458
    3. 'n' → logprob: -5.155168056488037
    4. 'don' → logprob: -5.905168056488037
    5. 'lines' → logprob: -7.155168056488037
    6. 'f' → logprob: -7.780168056488037
    7. 'd' → logprob: -7.780168056488037
    8. ' data' → logprob: -7.780168056488037
    9. 'datas' → logprob: -8.280167579650879
    10. 'in' → logprob: -8.280167579650879

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0751572698354721
    2. ',' → logprob: -3.0751571655273438
    3. '=' → logprob: -3.8251571655273438
    4. ' ' → logprob: -6.200157165527344
    5. ' ,' → logprob: -6.200157165527344
    6. '_' → logprob: -8.450157165527344
    7. '_space' → logprob: -10.700157165527344
    8. ')' → logprob: -10.825157165527344
    9. '=int' → logprob: -10.950157165527344
    10. '  ' → logprob: -10.950157165527344

Token 16: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3603365421295166
    2. ' M' → logprob: -1.6103365421295166
    3. ' K' → logprob: -2.6103365421295166
    4. ' =' → logprob: -4.6103363037109375
    5. 'M' → logprob: -5.1103363037109375
    6. 'K' → logprob: -6.2353363037109375
    7. 'space' → logprob: -6.3603363037109375
    8. '=' → logprob: -6.4853363037109375
    9. ' T' → logprob: -6.6103363037109375
    10. ' Q' → logprob: -6.8603363037109375

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012537673115730286
    2. '=' → logprob: -4.387537479400635
    3. ',' → logprob: -10.637537956237793
    4. ' ' → logprob: -13.512537956237793
    5. '=input' → logprob: -14.012537956237793
    6. ' ,' → logprob: -14.637537956237793
    7. ')' → logprob: -14.762537956237793
    8. ' =
' → logprob: -14.887537956237793
    9. '=int' → logprob: -15.887537956237793
    10. '<|end|>' → logprob: -16.262537002563477

Token 18: ' K' (ID: 658)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29868605732917786
    2. '=' → logprob: -1.7986860275268555
    3. ' ' → logprob: -2.4236860275268555
    4. ' L' → logprob: -6.6736860275268555
    5. ' K' → logprob: -7.0486860275268555
    6. '  ' → logprob: -7.9236860275268555
    7. 'L' → logprob: -8.048686027526855
    8. 'input' → logprob: -8.673686027526855
    9. 'K' → logprob: -9.173686027526855
    10. 'map' → logprob: -9.173686027526855

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197093799710274
    2. '=' → logprob: -2.8119709491729736
    3. '=input' → logprob: -13.186970710754395
    4. ',' → logprob: -14.311970710754395
    5. ' ' → logprob: -14.686970710754395
    6. '=int' → logprob: -15.561970710754395
    7. '=sys' → logprob: -16.06197166442871
    8. ' =
' → logprob: -17.81197166442871
    9. '=list' → logprob: -17.81197166442871
    10. ')' → logprob: -17.93697166442871

Token 20: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.002853021025657654
    2. 'map' → logprob: -5.877852916717529
    3. ' input' → logprob: -10.752853393554688
    4. ' ' → logprob: -11.252853393554688
    5. ' sys' → logprob: -11.752853393554688
    6. ' ' → logprob: -13.252853393554688
    7. ' [' → logprob: -13.752853393554688
    8. '	map' → logprob: -14.127853393554688
    9. ' list' → logprob: -14.252853393554688
    10. 'input' → logprob: -14.627853393554688

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2695292532444
    2. '(' → logprob: -1.5195292234420776
    3. '(str' → logprob: -4.269529342651367
    4. '(input' → logprob: -5.769529342651367
    5. '(lambda' → logprob: -8.894529342651367
    6. '(sys' → logprob: -9.519529342651367
    7. '(list' → logprob: -9.894529342651367
    8. '(
' → logprob: -10.269529342651367
    9. '(tuple' → logprob: -11.644529342651367
    10. '(eval' → logprob: -11.769529342651367

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2429501861333847
    2. '(' → logprob: -2.367950201034546
    3. '(sys' → logprob: -2.617950201034546
    4. ',' → logprob: -3.867950201034546
    5. ')' → logprob: -4.117949962615967
    6. 'input' → logprob: -4.742949962615967
    7. ',input' → logprob: -6.367949962615967
    8. '(int' → logprob: -7.492949962615967
    9. '(str' → logprob: -8.492950439453125
    10. '=input' → logprob: -9.242950439453125

Token 23: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8954899907112122
    2. ' input' → logprob: -1.1454899311065674
    3. ' sys' → logprob: -1.7704899311065674
    4. 'sys' → logprob: -2.2704899311065674
    5. ')' → logprob: -12.145489692687988
    6. '=sys' → logprob: -13.020489692687988
    7. '(sys' → logprob: -13.145489692687988
    8. ' ' → logprob: -13.520489692687988
    9. ' )' → logprob: -14.145489692687988
    10. '=input' → logprob: -15.020489692687988

Token 24: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.16217400133609772
    2. '.' → logprob: -1.9121739864349365
    3. '.argv' → logprob: -6.287174224853516
    4. ' .' → logprob: -10.912174224853516
    5. '.stdout' → logprob: -11.037174224853516
    6. '.readline' → logprob: -11.037174224853516
    7. '.std' → logprob: -11.287174224853516
    8. '.st' → logprob: -12.037174224853516
    9. '.input' → logprob: -12.037174224853516
    10. '<|end|>' → logprob: -13.287174224853516

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002648548223078251
    2. '.read' → logprob: -6.12764835357666
    3. '.' → logprob: -7.87764835357666
    4. '.stdin' → logprob: -9.75264835357666
    5. '.readlines' → logprob: -10.87764835357666
    6. ' .' → logprob: -13.75264835357666
    7. '.imread' → logprob: -13.87764835357666
    8. ').' → logprob: -13.87764835357666
    9. '.argv' → logprob: -14.00264835357666
    10. '.)' → logprob: -15.25264835357666

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.053595926612615585
    2. '())' → logprob: -3.053596019744873
    3. '()' → logprob: -5.303596019744873
    4. ')' → logprob: -12.053595542907715
    5. '()[' → logprob: -12.678595542907715
    6. '()))' → logprob: -12.803595542907715
    7. ' ())' → logprob: -13.178595542907715
    8. '(' → logprob: -13.303595542907715
    9. '()]' → logprob: -13.803595542907715
    10. '(),' → logprob: -14.178595542907715

Token 27: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.32140710949897766
    2. 'split' → logprob: -1.3214070796966553
    3. 'rstrip' → logprob: -4.821407318115234
    4. 'read' → logprob: -9.946407318115234
    5. ' strip' → logprob: -12.321407318115234
    6. ' split' → logprob: -12.821407318115234
    7. ')' → logprob: -13.821407318115234
    8. 'decode' → logprob: -15.196407318115234
    9. 'rs' → logprob: -15.571407318115234
    10. '```' → logprob: -16.196407318115234

Token 28: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035225894302129745
    2. '())' → logprob: -3.4102258682250977
    3. '()' → logprob: -6.660225868225098
    4. '))' → logprob: -8.285225868225098
    5. '('' → logprob: -11.410225868225098
    6. '(' → logprob: -11.535225868225098
    7. ')`' → logprob: -12.660225868225098
    8. '()))' → logprob: -12.785225868225098
    9. '`)' → logprob: -12.910225868225098
    10. '),' → logprob: -13.160225868225098

Token 29: 'A' (ID: 32)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5308775305747986
    2. 'data' → logprob: -2.9058775901794434
    3. 'numbers' → logprob: -3.2808775901794434
    4. '\n' → logprob: -3.4058775901794434
    5. '' → logprob: -3.4058775901794434
    6. 'a' → logprob: -4.155877590179443
    7. 'd' → logprob: -4.280877590179443
    8. '#' → logprob: -4.405877590179443
    9. '```' → logprob: -4.405877590179443
    10. 'arr' → logprob: -4.405877590179443

Token 30: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.060018934309482574
    2. '=' → logprob: -3.560019016265869
    3. ',' → logprob: -4.310019016265869
    4. '[' → logprob: -5.560019016265869
    5. '[:]' → logprob: -5.810019016265869
    6. 's' → logprob: -6.060019016265869
    7. '[]' → logprob: -6.310019016265869
    8. '.' → logprob: -6.435019016265869
    9. '_' → logprob: -6.685019016265869
    10. '.append' → logprob: -7.810019016265869

Token 31: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.24484238028526306
    2. 'B' → logprob: -1.6198424100875854
    3. ' ' → logprob: -4.244842529296875
    4. ' =' → logprob: -6.119842529296875
    5. '_' → logprob: -6.744842529296875
    6. '=' → logprob: -7.744842529296875
    7. 'Q' → logprob: -9.182342529296875
    8. ' _' → logprob: -9.807342529296875
    9. ' Q' → logprob: -9.807342529296875
    10. 'I' → logprob: -9.994842529296875

Token 32: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12742997705936432
    2. '=' → logprob: -2.127429962158203
    3. ',' → logprob: -7.627429962158203
    4. '_' → logprob: -12.752429962158203
    5. ' ' → logprob: -12.752429962158203
    6. 's' → logprob: -12.752429962158203
    7. ' ,' → logprob: -13.252429962158203
    8. ')' → logprob: -14.502429962158203
    9. ' ' → logprob: -14.502429962158203
    10. 'a' → logprob: -14.877429962158203

Token 33: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.1745116114616394
    2. 'C' → logprob: -1.9245116710662842
    3. ' =' → logprob: -4.549511432647705
    4. '=' → logprob: -6.174511432647705
    5. ' K' → logprob: -7.924511432647705
    6. ' ' → logprob: -8.049511909484863
    7. ' list' → logprob: -9.049511909484863
    8. ' and' → logprob: -9.362011909484863
    9. '_' → logprob: -9.549511909484863
    10. ' map' → logprob: -9.549511909484863

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07003758102655411
    2. '=' → logprob: -2.695037603378296
    3. ',' → logprob: -9.320037841796875
    4. 's' → logprob: -12.695037841796875
    5. ')' → logprob: -12.820037841796875
    6. '_' → logprob: -12.945037841796875
    7. ' ' → logprob: -13.445037841796875
    8. ' ,' → logprob: -15.320037841796875
    9. ' ' → logprob: -15.445037841796875
    10. '[' → logprob: -15.695037841796875

Token 35: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.46423837542533875
    2. ' [],' → logprob: -1.7142384052276611
    3. 'map' → logprob: -1.9642384052276611
    4. '[],' → logprob: -3.339238405227661
    5. '[' → logprob: -5.339238166809082
    6. ' [' → logprob: -5.464238166809082
    7. '[]' → logprob: -5.839238166809082
    8. ' list' → logprob: -6.464238166809082
    9. ' zip' → logprob: -7.214238166809082
    10. 'list' → logprob: -7.714238166809082

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016122346743941307
    2. '(' → logprob: -4.141122341156006
    3. '(str' → logprob: -9.766122817993164
    4. '<int' → logprob: -11.266122817993164
    5. '(s' → logprob: -12.641122817993164
    6. ' (' → logprob: -12.641122817993164
    7. '(
' → logprob: -13.016122817993164
    8. '(in' → logprob: -13.516122817993164
    9. '=int' → logprob: -13.766122817993164
    10. '[int' → logprob: -13.766122817993164

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022186534479260445
    2. ',int' → logprob: -6.127218723297119
    3. '(' → logprob: -10.752218246459961
    4. '(int' → logprob: -12.502218246459961
    5. '(),' → logprob: -12.752218246459961
    6. ' ,' → logprob: -13.002218246459961
    7. ',float' → logprob: -14.002218246459961
    8. ',bool' → logprob: -14.627218246459961
    9. ')' → logprob: -14.877218246459961
    10. ',(' → logprob: -14.877218246459961

Token 38: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.043183472007513046
    2. 'sys' → logprob: -3.1681835651397705
    3. '(sys' → logprob: -8.668183326721191
    4. 'int' → logprob: -11.793183326721191
    5. '=sys' → logprob: -13.418183326721191
    6. '	sys' → logprob: -13.668183326721191
    7. ' int' → logprob: -13.793183326721191
    8. ' ' → logprob: -14.918183326721191
    9. ' input' → logprob: -15.793183326721191
    10. ')' → logprob: -15.793183326721191

Token 39: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0026527056470513344
    2. '.stdout' → logprob: -6.002652645111084
    3. '.argv' → logprob: -9.752653121948242
    4. '.' → logprob: -9.877653121948242
    5. '.readline' → logprob: -10.377653121948242
    6. '.stderr' → logprob: -11.252653121948242
    7. '.std' → logprob: -11.502653121948242
    8. 'stdin' → logprob: -11.877653121948242
    9. ' .' → logprob: -12.627653121948242
    10. '(stdin' → logprob: -14.252653121948242

Token 40: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0015270020812749863
    2. '.' → logprob: -7.001526832580566
    3. '.stdin' → logprob: -7.626526832580566
    4. '.stdout' → logprob: -10.376526832580566
    5. ').' → logprob: -11.126526832580566
    6. ')' → logprob: -11.126526832580566
    7. '.readlines' → logprob: -11.251526832580566
    8. '().' → logprob: -11.626526832580566
    9. '```' → logprob: -12.126526832580566
    10. '.read' → logprob: -12.501526832580566

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004341261519584805
    2. '()' → logprob: -7.750433921813965
    3. ' ().' → logprob: -13.875433921813965
    4. '().__' → logprob: -14.750433921813965
    5. ')' → logprob: -14.875433921813965
    6. '()).' → logprob: -15.125433921813965
    7. '.readline' → logprob: -15.375433921813965
    8. '())' → logprob: -15.500433921813965
    9. '()-' → logprob: -15.500433921813965
    10. '().'' → logprob: -15.625433921813965

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0206720617134124e-05
    2. 'strip' → logprob: -12.12501049041748
    3. ' split' → logprob: -12.87501049041748
    4. 'rstrip' → logprob: -13.87501049041748
    5. '(split' → logprob: -14.37501049041748
    6. 'spl' → logprob: -14.62501049041748
    7. ')' → logprob: -15.50001049041748
    8. 'plit' → logprob: -18.250009536743164
    9. 's' → logprob: -18.250009536743164
    10. 'read' → logprob: -18.375009536743164

Token 43: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008668459951877594
    2. '())' → logprob: -5.008668422698975
    3. '()' → logprob: -6.258668422698975
    4. '))' → logprob: -10.383668899536133
    5. '`)' → logprob: -13.258668899536133
    6. ' )' → logprob: -13.383668899536133
    7. ')`' → logprob: -14.633668899536133
    8. '(' → logprob: -15.008668899536133
    9. '),' → logprob: -15.258668899536133
    10. ')")' → logprob: -15.258668899536133

Token 44: 'T' (ID: 51)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.5778387784957886
    2. 'data' → logprob: -2.202838897705078
    3. 'points' → logprob: -2.452838897705078
    4. '
' → logprob: -2.952838897705078
    5. 'positions' → logprob: -3.202838897705078
    6. 'numbers' → logprob: -3.202838897705078
    7. 'events' → logprob: -3.327838897705078
    8. 'arr' → logprob: -3.577838897705078
    9. 'prices' → logprob: -3.577838897705078
    10. 'd' → logprob: -3.577838897705078

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.644592821598053
    2. '=' → logprob: -0.894592821598053
    3. 's' → logprob: -3.144592761993408
    4. 'imes' → logprob: -4.019592761993408
    5. 'imestamps' → logprob: -6.769592761993408
    6. 'okens' → logprob: -6.769592761993408
    7. 'ime' → logprob: -7.394592761993408
    8. '=[]' → logprob: -7.894592761993408
    9. '_list' → logprob: -8.144593238830566
    10. ',' → logprob: -8.769593238830566

Token 46: ' int' (ID: 677)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4524921178817749
    2. ' []' → logprob: -1.702492117881775
    3. ' [' → logprob: -2.3274922370910645
    4. 'list' → logprob: -2.5774922370910645
    5. '[]' → logprob: -5.4524922370910645
    6. '[list' → logprob: -6.2024922370910645
    7. '[' → logprob: -6.9524922370910645
    8. '[int' → logprob: -7.2024922370910645
    9. ' [[]' → logprob: -9.827491760253906
    10. ' sys' → logprob: -9.827491760253906

Token 47: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.25196707248687744
    2. '(' → logprob: -1.5019670724868774
    3. ' (' → logprob: -11.251967430114746
    4. '(s' → logprob: -11.501967430114746
    5. '(Sys' → logprob: -12.876967430114746
    6. '()' → logprob: -13.126967430114746
    7. '(
' → logprob: -13.251967430114746
    8. '(input' → logprob: -13.376967430114746
    9. '(system' → logprob: -14.001967430114746
    10. '(S' → logprob: -14.251967430114746

Token 48: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00011832444579340518
    2. '.readline' → logprob: -9.250118255615234
    3. '.' → logprob: -11.500118255615234
    4. '.stdout' → logprob: -11.625118255615234
    5. '.argv' → logprob: -13.125118255615234
    6. 'stdin' → logprob: -14.375118255615234
    7. '.std' → logprob: -15.000118255615234
    8. '(stdin' → logprob: -16.375118255615234
    9. '.max' → logprob: -18.000118255615234
    10. '.stderr' → logprob: -18.000118255615234

Token 49: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.35837464465294e-05
    2. '.stdin' → logprob: -10.625043869018555
    3. '.' → logprob: -11.125043869018555
    4. '.read' → logprob: -13.000043869018555
    5. '.readlines' → logprob: -13.625043869018555
    6. '.Read' → logprob: -15.000043869018555
    7. '.stdout' → logprob: -15.500043869018555
    8. ').' → logprob: -16.625043869018555
    9. '().' → logprob: -16.750043869018555
    10. '.urlopen' → logprob: -16.875043869018555

Token 50: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06636612117290497
    2. '()' → logprob: -2.816366195678711
    3. ')' → logprob: -5.441366195678711
    4. '().' → logprob: -10.191366195678711
    5. '())
' → logprob: -12.066366195678711
    6. ' ())' → logprob: -12.191366195678711
    7. '();)' → logprob: -13.191366195678711
    8. '(' → logprob: -13.191366195678711
    9. '()
' → logprob: -13.941366195678711
    10. '())

' → logprob: -14.441366195678711

Token 51: '#' (ID: 2)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2155572175979614
    2. 'events' → logprob: -2.340557098388672
    3. 'A' → logprob: -2.715557098388672
    4. 'times' → logprob: -2.965557098388672
    5. 'points' → logprob: -3.090557098388672
    6. 'd' → logprob: -3.090557098388672
    7. 'arr' → logprob: -3.215557098388672
    8. 'dp' → logprob: -3.215557098388672
    9. 'timestamps' → logprob: -3.715557098388672
    10. '#' → logprob: -3.965557098388672

Token 52: ' Lecture' (ID: 106534)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -1.7674747705459595
    2. 'times' → logprob: -2.14247465133667
    3. ' data' → logprob: -2.89247465133667
    4. ' times' → logprob: -3.14247465133667
    5. 'data' → logprob: -3.39247465133667
    6. 'positions' → logprob: -3.51747465133667
    7. 'd' → logprob: -3.64247465133667
    8. 'A' → logprob: -3.76747465133667
    9. 'arr' → logprob: -3.89247465133667
    10. ' events' → logprob: -4.01747465133667

Token 53: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.5119197368621826
    2. ' des' → logprob: -1.0119197368621826
    3. 's' → logprob: -3.7619197368621826
    4. '_des' → logprob: -5.261919975280762
    5. 'de' → logprob: -6.886919975280762
    6. '()' → logprob: -7.136919975280762
    7. ' de' → logprob: -7.386919975280762
    8. '(' → logprob: -7.386919975280762
    9. 'data' → logprob: -7.511919975280762
    10. '_' → logprob: -7.636919975280762

Token 54: ' stations' (ID: 26061)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2192442417144775
    2. 'positions' → logprob: -1.8442442417144775
    3. 'temps' → logprob: -2.8442442417144775
    4. 'scores' → logprob: -3.2192442417144775
    5. 'tickets' → logprob: -3.5942442417144775
    6. 't' → logprob: -3.7192442417144775
    7. ' temps' → logprob: -3.7192442417144775
    8. 'points' → logprob: -3.8442442417144775
    9. 's' → logprob: -4.094244003295898
    10. 'capac' → logprob: -4.344244003295898

Token 55: ' où' (ID: 15113)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.012647143565118313
    2. 'st' → logprob: -4.5126471519470215
    3. 'positions' → logprob: -7.3876471519470215
    4. 'lines' → logprob: -8.262646675109863
    5. 'station' → logprob: -8.387646675109863
    6. 's' → logprob: -9.137646675109863
    7. ' stations' → logprob: -9.887646675109863
    8. '```' → logprob: -10.137646675109863
    9. 'points' → logprob: -10.387646675109863
    10. 'S' → logprob: -10.512646675109863

Token 56: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.4353275299072266
    2. 'pass' → logprob: -1.6853275299072266
    3. ' les' → logprob: -2.4353275299072266
    4. 'il' → logprob: -2.5603275299072266
    5. 's' → logprob: -2.9353275299072266
    6. 'l' → logprob: -3.0603275299072266
    7. ' il' → logprob: -3.5603275299072266
    8. 'des' → logprob: -3.5603275299072266
    9. 'le' → logprob: -3.5603275299072266
    10. 'un' → logprob: -3.8103275299072266

Token 57: ''ex' (ID: 23472)
  Prédit: ''on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.752875804901123
    2. 'on' → logprob: -1.627875804901123
    3. 'e' → logprob: -1.752875804901123
    4. 'es' → logprob: -2.377875804901123
    5. 'a' → logprob: -3.377875804901123
    6. ''utilisateur' → logprob: -4.502875804901123
    7. ' on' → logprob: -5.002875804901123
    8. ''arrêt' → logprob: -6.127875804901123
    9. ''arrive' → logprob: -6.627875804901123
    10. ''arrivée' → logprob: -7.252875804901123

Token 58: 'press' (ID: 2020)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.15087924897670746
    2. 'ist' → logprob: -2.900879144668579
    3. 'istent' → logprob: -3.275879144668579
    4. 'ister' → logprob: -4.025879383087158
    5. 'erce' → logprob: -4.400879383087158
    6. 'on' → logprob: -6.525879383087158
    7. 'é' → logprob: -6.775879383087158
    8. 'er' → logprob: -6.775879383087158
    9. 'i' → logprob: -7.088379383087158
    10. 'éc' → logprob: -7.400879383087158

Token 59: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43552887439727783
    2. ' s' → logprob: -1.6855288743972778
    3. ' passe' → logprob: -2.1855287551879883
    4. 'pass' → logprob: -3.4355287551879883
    5. 'part' → logprob: -5.185528755187988
    6. 'stop' → logprob: -5.935528755187988
    7. ' part' → logprob: -6.060528755187988
    8. 'p' → logprob: -6.310528755187988
    9. 'arr' → logprob: -6.310528755187988
    10. ' pass' → logprob: -7.060528755187988

Token 60: ''arr' (ID: 49695)
  Prédit: ''arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arr' → logprob: -0.06520304828882217
    2. 'arr' → logprob: -3.5652029514312744
    3. 'ar' → logprob: -4.5652031898498535
    4. ''arrêt' → logprob: -4.5652031898498535
    5. ''ar' → logprob: -4.9402031898498535
    6. '’arr' → logprob: -5.6902031898498535
    7. 'er' → logprob: -6.9402031898498535
    8. 'e' → logprob: -7.3152031898498535
    9. ''' → logprob: -8.190202713012695
    10. ''él' → logprob: -8.815202713012695

Token 61: 'ête' (ID: 16808)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.42123448848724365
    2. 'ête' → logprob: -1.7962344884872437
    3. 'ète' → logprob: -1.7962344884872437
    4. 'et' → logprob: -5.046234607696533
    5. 'ê' → logprob: -6.296234607696533
    6. 'èt' → logprob: -6.421234607696533
    7. 'ét' → logprob: -8.046234130859375
    8. 'ete' → logprob: -8.171234130859375
    9. 'ette' → logprob: -8.296234130859375
    10. 'é' → logprob: -8.671234130859375

Token 62: ' (' (ID: 350)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.5803634524345398
    2. 's' → logprob: -1.2053635120391846
    3. 'stations' → logprob: -2.3303635120391846
    4. ' stops' → logprob: -4.2053632736206055
    5. ' stations' → logprob: -4.9553632736206055
    6. ' express' → logprob: -5.2053632736206055
    7. 'station' → logprob: -5.5803632736206055
    8. 'S' → logprob: -5.7053632736206055
    9. 'st' → logprob: -6.4553632736206055
    10. 'e' → logprob: -6.9553632736206055

Token 63: 'tri' (ID: 22343)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4193946421146393
    2. 'express' → logprob: -1.169394612312317
    3. 'stations' → logprob: -4.419394493103027
    4. 's' → logprob: -5.169394493103027
    5. 'e' → logprob: -5.419394493103027
    6. ' express' → logprob: -6.419394493103027
    7. 'ex' → logprob: -6.544394493103027
    8. ' )' → logprob: -6.669394493103027
    9. '):' → logprob: -7.044394493103027
    10. 'exp' → logprob: -7.169394493103027

Token 64: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.1181765794754028
    2. ')' → logprob: -1.2431765794754028
    3. 'ées' → logprob: -1.2431765794754028
    4. 'e' → logprob: -2.8681764602661133
    5. 'ée' → logprob: -4.368176460266113
    6. 'es' → logprob: -4.743176460266113
    7. ' )' → logprob: -5.118176460266113
    8. 'ed' → logprob: -5.243176460266113
    9. 'er' → logprob: -5.993176460266113
    10. 'és' → logprob: -6.118176460266113

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007993297651410103
    2. ' )' → logprob: -4.882993221282959
    3. ',' → logprob: -8.382993698120117
    4. '())' → logprob: -10.007993698120117
    5. '):' → logprob: -10.507993698120117
    6. '()' → logprob: -10.507993698120117
    7. '(' → logprob: -11.257993698120117
    8. '),' → logprob: -11.382993698120117
    9. ' ' → logprob: -11.757993698120117
    10. ' ' → logprob: -12.632993698120117

Token 66: 'S' (ID: 50)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.24790070950984955
    2. 'stations' → logprob: -1.8729007244110107
    3. 'S' → logprob: -3.7479007244110107
    4. 'arr' → logprob: -4.372900485992432
    5. 'st' → logprob: -4.372900485992432
    6. 's' → logprob: -5.122900485992432
    7. 'E' → logprob: -6.122900485992432
    8. ' express' → logprob: -6.622900485992432
    9. 'expr' → logprob: -6.747900485992432
    10. 'station' → logprob: -6.997900485992432

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34853026270866394
    2. ' =' → logprob: -1.2235302925109863
    3. '=[]' → logprob: -9.598529815673828
    4. 's' → logprob: -12.598529815673828
    5. '=list' → logprob: -12.723529815673828
    6. ' ' → logprob: -13.473529815673828
    7. ',' → logprob: -13.473529815673828
    8. '=int' → logprob: -13.973529815673828
    9. '=sys' → logprob: -13.973529815673828
    10. '=[]
' → logprob: -14.098529815673828

Token 68: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2092946469783783
    2. 'list' → logprob: -1.7092946767807007
    3. ' sorted' → logprob: -5.08429479598999
    4. 'sorted' → logprob: -6.45929479598999
    5. ' [' → logprob: -10.584294319152832
    6. '[]' → logprob: -11.084294319152832
    7. ' []' → logprob: -11.209294319152832
    8. '[list' → logprob: -11.459294319152832
    9. '[' → logprob: -11.959294319152832
    10. ' ' → logprob: -12.334294319152832

Token 69: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012565418146550655
    2. '0' → logprob: -7.626256465911865
    3. '*' → logprob: -7.876256465911865
    4. ' int' → logprob: -8.501256942749023
    5. ']' → logprob: -9.501256942749023
    6. ']int' → logprob: -10.001256942749023
    7. ']*' → logprob: -10.126256942749023
    8. '```' → logprob: -11.501256942749023
    9. ' ' → logprob: -13.126256942749023
    10. ' ]' → logprob: -13.251256942749023

Token 70: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0011993973748758435
    2. '(x' → logprob: -7.001199245452881
    3. '(' → logprob: -8.376199722290039
    4. '()]' → logprob: -10.251199722290039
    5. '(input' → logprob: -11.626199722290039
    6. '()' → logprob: -12.251199722290039
    7. '(s' → logprob: -12.751199722290039
    8. '(i' → logprob: -13.376199722290039
    9. '(
' → logprob: -14.001199722290039
    10. 'sys' → logprob: -14.501199722290039

Token 71: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.028309861198067665
    2. '.readline' → logprob: -3.9033098220825195
    3. '.' → logprob: -4.9033098220825195
    4. '.sys' → logprob: -9.90330982208252
    5. '.stdout' → logprob: -10.02830982208252
    6. 'sys' → logprob: -10.15330982208252
    7. '=sys' → logprob: -10.15330982208252
    8. '().' → logprob: -10.40330982208252
    9. '(stdin' → logprob: -10.40330982208252
    10. ')' → logprob: -10.77830982208252

Token 72: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0006640645442530513
    2. '().' → logprob: -7.500664234161377
    3. 'sys' → logprob: -9.750663757324219
    4. 'read' → logprob: -10.375663757324219
    5. '())' → logprob: -12.375663757324219
    6. '.' → logprob: -12.750663757324219
    7. 'line' → logprob: -13.000663757324219
    8. '=sys' → logprob: -13.000663757324219
    9. ' readline' → logprob: -13.125663757324219
    10. '```' → logprob: -13.125663757324219

Token 73: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018320027738809586
    2. '().' → logprob: -4.018320083618164
    3. '()' → logprob: -8.768320083618164
    4. '())
' → logprob: -11.643320083618164
    5. ' ())' → logprob: -13.393320083618164
    6. ')' → logprob: -13.643320083618164
    7. '()]' → logprob: -13.643320083618164
    8. '()
' → logprob: -14.643320083618164
    9. '()))' → logprob: -15.018320083618164
    10. '(' → logprob: -15.393320083618164

Token 74: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8364108204841614
    2. ' for' → logprob: -0.9614108204841614
    3. 'for' → logprob: -1.8364107608795166
    4. '()' → logprob: -3.9614107608795166
    5. '.strip' → logprob: -5.836410999298096
    6. ']' → logprob: -6.961410999298096
    7. '	for' → logprob: -7.461410999298096
    8. '.rstrip' → logprob: -7.961410999298096
    9. '.readline' → logprob: -8.086410522460938
    10. ' ' → logprob: -8.586410522460938

Token 75: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02745300717651844
    2. ' range' → logprob: -4.2774529457092285
    3. ' _' → logprob: -4.4024529457092285
    4. ' in' → logprob: -7.6524529457092285
    5. 'range' → logprob: -8.027453422546387
    6. ' i' → logprob: -9.402453422546387
    7. ' ' → logprob: -10.027453422546387
    8. '_range' → logprob: -10.777453422546387
    9. 'i' → logprob: -12.777453422546387
    10. ' ' → logprob: -14.152453422546387

Token 76: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005727794487029314
    2. ' range' → logprob: -5.505727767944336
    3. ' in' → logprob: -7.005727767944336
    4. 'in' → logprob: -7.255727767944336
    5. '  ' → logprob: -11.880727767944336
    6. ' ' → logprob: -11.880727767944336
    7. '	range' → logprob: -12.005727767944336
    8. '(range' → logprob: -12.130727767944336
    9. ']' → logprob: -13.380727767944336
    10. '   ' → logprob: -13.630727767944336

Token 77: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012523093027994037
    2. ' range' → logprob: -9.00012493133545
    3. '(range' → logprob: -15.00012493133545
    4. 'rang' → logprob: -15.00012493133545
    5. '	range' → logprob: -15.37512493133545
    6. 'r' → logprob: -16.125125885009766
    7. '   ' → logprob: -16.125125885009766
    8. ']' → logprob: -16.125125885009766
    9. ' ' → logprob: -16.250125885009766
    10. '  ' → logprob: -16.500125885009766

Token 78: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0010891393758356571
    2. '(K' → logprob: -7.001089096069336
    3. '(' → logprob: -9.251089096069336
    4. '(N' → logprob: -9.626089096069336
    5. '(S' → logprob: -12.001089096069336
    6. 'M' → logprob: -12.126089096069336
    7. '(T' → logprob: -12.876089096069336
    8. '((' → logprob: -15.376089096069336
    9. ' (' → logprob: -15.501089096069336
    10. '(
' → logprob: -15.751089096069336

Token 79: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001143314759247005
    2. ']' → logprob: -6.876143455505371
    3. ')' → logprob: -9.126143455505371
    4. '])' → logprob: -15.126143455505371
    5. ')]
' → logprob: -15.126143455505371
    6. ' ]' → logprob: -15.501143455505371
    7. ' )' → logprob: -15.501143455505371
    8. '])]' → logprob: -15.876143455505371
    9. ')])' → logprob: -16.001142501831055
    10. '}]' → logprob: -16.126142501831055

Token 80: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2173755168914795
    2. 'dp' → logprob: -1.8423755168914795
    3. 'dist' → logprob: -2.2173755168914795
    4. 'd' → logprob: -2.3423755168914795
    5. 'D' → logprob: -2.4673755168914795
    6. 'positions' → logprob: -2.5923755168914795
    7. 'result' → logprob: -3.9673755168914795
    8. 'distance' → logprob: -4.467375755310059
    9. 'stations' → logprob: -4.467375755310059
    10. 'rest' → logprob: -4.842375755310059

Token 81: ' L' (ID: 451)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0812835693359375
    2. 'dp' → logprob: -1.3312835693359375
    3. 'stations' → logprob: -2.0812835693359375
    4. 'positions' → logprob: -2.7062835693359375
    5. 'def' → logprob: -3.0812835693359375
    6. 'D' → logprob: -3.2062835693359375
    7. 'dist' → logprob: -3.8312835693359375
    8. 'time' → logprob: -4.3312835693359375
    9. 'pos' → logprob: -4.3312835693359375
    10. 'arr' → logprob: -5.0812835693359375

Token 82: ''idée' (ID: 131945)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2983744144439697
    2. 'a' → logprob: -1.2983744144439697
    3. 'ast' → logprob: -1.4233744144439697
    4. 'e' → logprob: -2.5483744144439697
    5. 'es' → logprob: -3.4233744144439697
    6. 'ine' → logprob: -3.7983744144439697
    7. 'iste' → logprob: -4.048374176025391
    8. 'i' → logprob: -5.048374176025391
    9. 'og' → logprob: -5.173374176025391
    10. 'et' → logprob: -5.298374176025391

Token 83: ' principale' (ID: 68926)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.73619544506073
    2. ':' → logprob: -1.11119544506073
    3. ' est' → logprob: -2.2361955642700195
    4. '#' → logprob: -3.4861955642700195
    5. ' suivante' → logprob: -3.7361955642700195
    6. 's' → logprob: -5.3611955642700195
    7. 'de' → logprob: -5.4861955642700195
    8. ' is' → logprob: -5.4861955642700195
    9. ' :' → logprob: -5.7361955642700195
    10. '=' → logprob: -5.8611955642700195

Token 84: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08160864561796188
    2. '#' → logprob: -2.706608533859253
    3. 'est' → logprob: -4.706608772277832
    4. '=' → logprob: -6.831608772277832
    5. ' :' → logprob: -8.206608772277832
    6. 'de' → logprob: -8.206608772277832
    7. 'd' → logprob: -8.206608772277832
    8. ':
' → logprob: -8.956608772277832
    9. ' est' → logprob: -8.956608772277832
    10. 'is' → logprob: -9.581608772277832

Token 85: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5606399178504944
    2. 'd' → logprob: -0.9356399178504944
    3. ' de' → logprob: -3.9356398582458496
    4. 'de' → logprob: -4.18563985824585
    5. ' que' → logprob: -7.31063985824585
    6. '#' → logprob: -7.68563985824585
    7. ' ' → logprob: -8.810640335083008
    8. '<|end|>' → logprob: -9.060640335083008
    9. 's' → logprob: -9.185640335083008
    10. 'to' → logprob: -9.435640335083008

Token 86: ''utiliser' (ID: 133355)
  Prédit: ''utiliser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utiliser' → logprob: -0.5882004499435425
    2. 'e' → logprob: -1.0882004499435425
    3. ''' → logprob: -2.963200569152832
    4. ''ex' → logprob: -3.963200569152832
    5. ' utiliser' → logprob: -4.463200569152832
    6. ''améli' → logprob: -5.963200569152832
    7. 'a' → logprob: -6.213200569152832
    8. 'optim' → logprob: -6.213200569152832
    9. ''év' → logprob: -6.588200569152832
    10. 'ex' → logprob: -6.588200569152832

Token 87: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8815667033195496
    2. ' bis' → logprob: -0.8815667033195496
    3. ' une' → logprob: -2.8815667629241943
    4. 'la' → logprob: -3.2565667629241943
    5. 'bis' → logprob: -3.3815667629241943
    6. 'une' → logprob: -4.631566524505615
    7. ' un' → logprob: -4.881566524505615
    8. ' le' → logprob: -5.256566524505615
    9. 'l' → logprob: -5.631566524505615
    10. ' des' → logprob: -5.756566524505615

Token 88: ' programmation' (ID: 166376)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.802181601524353
    2. ' technique' → logprob: -2.0521817207336426
    3. 'structure' → logprob: -2.1771817207336426
    4. 'appro' → logprob: -2.6771817207336426
    5. ' recherche' → logprob: -2.8021817207336426
    6. 'fonction' → logprob: -2.9271817207336426
    7. 'mé' → logprob: -3.1771817207336426
    8. 'bis' → logprob: -3.3021817207336426
    9. ' approche' → logprob: -3.3021817207336426
    10. 'table' → logprob: -3.4271817207336426

Token 89: ' dynamique' (ID: 98708)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4664534628391266
    2. ' dynamique' → logprob: -2.2164535522460938
    3. 'dynamic' → logprob: -2.4664535522460938
    4. '_' → logprob: -2.8414535522460938
    5. ' dynamic' → logprob: -2.8414535522460938
    6. '_dynamic' → logprob: -2.9664535522460938
    7. '.' → logprob: -6.341453552246094
    8. ' dinámica' → logprob: -6.591453552246094
    9. '_dyn' → logprob: -6.966453552246094
    10. '<|end|>' → logprob: -6.966453552246094

Token 90: ' sur' (ID: 1512)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8379430770874023
    2. ',' → logprob: -0.9629430770874023
    3. '.' → logprob: -1.9629430770874023
    4. ':' → logprob: -3.8379430770874023
    5. '#' → logprob: -4.962943077087402
    6. ' dp' → logprob: -5.337943077087402
    7. 'd' → logprob: -6.337943077087402
    8. ' pour' → logprob: -7.087943077087402
    9. '<|end|>' → logprob: -7.087943077087402
    10. '(dp' → logprob: -7.087943077087402

Token 91: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6644598841667175
    2. 'les' → logprob: -1.6644599437713623
    3. 'l' → logprob: -2.6644599437713623
    4. ' la' → logprob: -2.7894599437713623
    5. 'la' → logprob: -3.0394599437713623
    6. ' chaque' → logprob: -3.4144599437713623
    7. ' l' → logprob: -3.5394599437713623
    8. ' le' → logprob: -3.9144599437713623
    9. 'le' → logprob: -4.039459705352783
    10. ' ' → logprob: -5.539459705352783

Token 92: ' arr' (ID: 1724)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stations' → logprob: -1.2196807861328125
    2. 'positions' → logprob: -1.3446807861328125
    3. ' stations' → logprob: -1.5946807861328125
    4. ' positions' → logprob: -3.0946807861328125
    5. ' distances' → logprob: -3.5946807861328125
    6. 's' → logprob: -3.7196807861328125
    7. ' indices' → logprob: -4.2821807861328125
    8. 'indices' → logprob: -4.4071807861328125
    9. 'temps' → logprob: -4.7821807861328125
    10. 't' → logprob: -4.9071807861328125

Token 93: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.026958467438817024
    2. 'ê' → logprob: -4.276958465576172
    3. 'êt' → logprob: -4.776958465576172
    4. 'iv' → logprob: -6.276958465576172
    5. 'i' → logprob: -7.401958465576172
    6. 'e' → logprob: -7.776958465576172
    7. 'î' → logprob: -8.276958465576172
    8. '\' → logprob: -8.776958465576172
    9. 'ë' → logprob: -9.026958465576172
    10. 'ivée' → logprob: -9.401958465576172

Token 94: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7117822766304016
    2. '.' → logprob: -0.8367822766304016
    3. ' ' → logprob: -3.836782217025757
    4. 'pour' → logprob: -4.461782455444336
    5. 's' → logprob: -4.586782455444336
    6. '#' → logprob: -4.586782455444336
    7. ':' → logprob: -5.461782455444336
    8. '<|end|>' → logprob: -6.086782455444336
    9. ' pour' → logprob: -6.336782455444336
    10. ' ,' → logprob: -6.461782455444336

Token 95: ' sem' (ID: 2743)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1495206207036972
    2. ' l' → logprob: -2.1495206356048584
    3. 'express' → logprob: -4.649520397186279
    4. 'S' → logprob: -5.524520397186279
    5. ' S' → logprob: -6.024520397186279
    6. ' train' → logprob: -6.399520397186279
    7. 's' → logprob: -6.774520397186279
    8. ' bus' → logprob: -7.274520397186279
    9. ' express' → logprob: -7.524520397186279
    10. 'train' → logprob: -7.649520397186279

Token 96: 'iexpress' (ID: 190732)
  Prédit: 'aines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aines' → logprob: -0.27564024925231934
    2. 'est' → logprob: -2.2756402492523193
    3. 'a' → logprob: -3.7756402492523193
    4. 'estres' → logprob: -4.525640487670898
    5. 'ap' → logprob: -4.650640487670898
    6. 'estre' → logprob: -4.775640487670898
    7. 'aine' → logprob: -5.025640487670898
    8. 'ain' → logprob: -5.088140487670898
    9. 'i' → logprob: -5.213140487670898
    10. 'p' → logprob: -5.275640487670898

Token 97: ' train' (ID: 8513)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9026901721954346
    2. '.' → logprob: -1.5276901721954346
    3. 'es' → logprob: -1.7776901721954346
    4. 'ession' → logprob: -3.1526901721954346
    5. ',' → logprob: -3.7776901721954346
    6. '...' → logprob: -3.9026901721954346
    7. 'e' → logprob: -4.1526899337768555
    8. 'ess' → logprob: -4.5276899337768555
    9. 'essions' → logprob: -4.5276899337768555
    10. 'ion' → logprob: -4.6526899337768555

Token 98: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7445720434188843
    2. 's' → logprob: -0.9945720434188843
    3. ',' → logprob: -2.119572162628174
    4. 'es' → logprob: -4.619572162628174
    5. 'express' → logprob: -5.244572162628174
    6. ':' → logprob: -5.619572162628174
    7. 'e' → logprob: -6.119572162628174
    8. ' ,' → logprob: -6.744572162628174
    9. ' ' → logprob: -6.744572162628174
    10. 'S' → logprob: -6.869572162628174

Token 99: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005285461433231831
    2. 'DP' → logprob: -6.005285263061523
    3. 'dist' → logprob: -6.380285263061523
    4. 'd' → logprob: -8.255285263061523
    5. '#' → logprob: -8.380285263061523
    6. 'distance' → logprob: -8.755285263061523
    7. 'D' → logprob: -8.880285263061523
    8. 'f' → logprob: -9.630285263061523
    9. 'time' → logprob: -9.880285263061523
    10. 'times' → logprob: -10.505285263061523

Token 100: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0029654575046151876
    2. 'dist' → logprob: -6.627965450286865
    3. 'DP' → logprob: -6.752965450286865
    4. '#' → logprob: -9.002965927124023
    5. 'D' → logprob: -9.377965927124023
    6. 'd' → logprob: -10.002965927124023
    7. 'distance' → logprob: -10.002965927124023
    8. 'f' → logprob: -10.252965927124023
    9. 'F' → logprob: -10.627965927124023
    10. ' dp' → logprob: -10.752965927124023

Token 101: ' sait' (ID: 52101)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5749311447143555
    2. ' va' → logprob: -1.6999311447143555
    3. ' dp' → logprob: -3.3249311447143555
    4. ' continue' → logprob: -3.3249311447143555
    5. 'continue' → logprob: -3.3249311447143555
    6. 'va' → logprob: -3.5749311447143555
    7. ' peut' → logprob: -3.9499311447143555
    8. ' cherche' → logprob: -4.3249311447143555
    9. ' veut' → logprob: -4.4499311447143555
    10. 'util' → logprob: -4.9499311447143555

Token 102: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.005933893844485283
    2. 'que' → logprob: -6.25593376159668
    3. ' qu' → logprob: -6.63093376159668
    4. ' maintenant' → logprob: -7.75593376159668
    5. ' pas' → logprob: -8.13093376159668
    6. ' ' → logprob: -8.50593376159668
    7. ' that' → logprob: -8.63093376159668
    8. '#' → logprob: -8.75593376159668
    9. ' aussi' → logprob: -9.25593376159668
    10. ' comment' → logprob: -9.25593376159668

Token 103: ' sem' (ID: 2743)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.3891265392303467
    2. 'S' → logprob: -1.8891265392303467
    3. ' les' → logprob: -1.8891265392303467
    4. 'le' → logprob: -2.2641265392303467
    5. 'les' → logprob: -2.3891265392303467
    6. ' le' → logprob: -2.3891265392303467
    7. ' la' → logprob: -3.2641265392303467
    8. ' l' → logprob: -3.6391265392303467
    9. ' chaque' → logprob: -4.014126777648926
    10. 'la' → logprob: -4.139126777648926

Token 104: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.4657982885837555
    2. 'i' → logprob: -1.090798258781433
    3. 'ip' → logprob: -4.340798377990723
    4. 'iex' → logprob: -4.840798377990723
    5. 'ie' → logprob: -5.215798377990723
    6. 'express' → logprob: -5.715798377990723
    7. 'e' → logprob: -6.715798377990723
    8. 'is' → logprob: -7.653298377990723
    9. '
' → logprob: -8.590798377990723
    10. '-' → logprob: -8.590798377990723

Token 105: ' doit' (ID: 21822)
  Prédit: ' train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' train' → logprob: -1.2620015144348145
    2. ' s' → logprob: -1.3870015144348145
    3. 's' → logprob: -1.8870015144348145
    4. 'train' → logprob: -1.8870015144348145
    5. ' trains' → logprob: -2.8870015144348145
    6. '_train' → logprob: -4.4495015144348145
    7. ' est' → logprob: -4.8870015144348145
    8. ' ' → logprob: -4.9495015144348145
    9. ' n' → logprob: -5.1995015144348145
    10. ' que' → logprob: -5.3870015144348145

Token 106: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2872118055820465
    2. 's' → logprob: -1.9122117757797241
    3. 'pass' → logprob: -3.0372118949890137
    4. 'arr' → logprob: -3.5372118949890137
    5. 'faire' → logprob: -5.787211894989014
    6. 'stop' → logprob: -5.912211894989014
    7. ' passer' → logprob: -5.912211894989014
    8. 'ob' → logprob: -6.287211894989014
    9. ' faire' → logprob: -6.912211894989014
    10. 'st' → logprob: -7.037211894989014

Token 107: ''arr' (ID: 49695)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.709032416343689
    2. ''arr' → logprob: -0.709032416343689
    3. 'ar' → logprob: -5.0840325355529785
    4. ''arrêt' → logprob: -5.4590325355529785
    5. ''ar' → logprob: -5.8340325355529785
    6. '’arr' → logprob: -6.9590325355529785
    7. 'arre' → logprob: -7.4590325355529785
    8. 'e' → logprob: -9.70903205871582
    9. 'errer' → logprob: -9.95903205871582
    10. 'er' → logprob: -9.95903205871582

Token 108: 'êter' (ID: 73125)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.08821603655815125
    2. 'êter' → logprob: -2.9632160663604736
    3. 'r' → logprob: -4.5882158279418945
    4. 'p' → logprob: -5.4632158279418945
    5. 'té' → logprob: -5.8382158279418945
    6. 'reter' → logprob: -5.9632158279418945
    7. 'tenir' → logprob: -5.9632158279418945
    8. 'tter' → logprob: -6.4632158279418945
    9. 'te' → logprob: -6.5882158279418945
    10. 'tir' → logprob: -6.8382158279418945

Token 109: ' sur' (ID: 1512)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aux' → logprob: -1.0426454544067383
    2. ' à' → logprob: -1.5426454544067383
    3. ' uniquement' → logprob: -2.2926454544067383
    4. 'aux' → logprob: -2.2926454544067383
    5. 'à' → logprob: -2.9176454544067383
    6. 'au' → logprob: -3.2926454544067383
    7. 'exact' → logprob: -3.4176454544067383
    8. ' au' → logprob: -3.4176454544067383
    9. 'sur' → logprob: -3.4176454544067383
    10. ' exactement' → logprob: -4.667645454406738

Token 110: ' toutes' (ID: 17502)
  Prédit: ' toutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.6265113949775696
    2. ' au' → logprob: -2.626511335372925
    3. ' chaque' → logprob: -3.001511335372925
    4. ' tous' → logprob: -3.126511335372925
    5. 'les' → logprob: -3.376511335372925
    6. ' les' → logprob: -3.376511335372925
    7. ' S' → logprob: -3.751511335372925
    8. 'au' → logprob: -3.876511335372925
    9. ' certaines' → logprob: -4.001511573791504
    10. 't' → logprob: -4.376511573791504

Token 111: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.43702295422554016
    2. ' les' → logprob: -1.0620229244232178
    3. 'stations' → logprob: -6.312023162841797
    4. ' stations' → logprob: -6.687023162841797
    5. ' ' → logprob: -6.812023162841797
    6. ' S' → logprob: -7.187023162841797
    7. 'S' → logprob: -7.312023162841797
    8. ' the' → logprob: -7.937023162841797
    9. 'ces' → logprob: -8.062023162841797
    10. ' ces' → logprob: -8.187023162841797

Token 112: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.27565816044807434
    2. ' stations' → logprob: -1.650658130645752
    3. ' ga' → logprob: -3.525658130645752
    4. 'ga' → logprob: -5.025658130645752
    5. 'station' → logprob: -6.400658130645752
    6. 'S' → logprob: -6.588158130645752
    7. ' lignes' → logprob: -6.650658130645752
    8. ' S' → logprob: -6.713158130645752
    9. 'st' → logprob: -7.088158130645752
    10. ' villes' → logprob: -7.213158130645752

Token 113: ' d' (ID: 272)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.5786340236663818
    2. 'entre' → logprob: -2.203634023666382
    3. 'où' → logprob: -2.203634023666382
    4. 'S' → logprob: -2.328634023666382
    5. 'import' → logprob: -3.078634023666382
    6. 'de' → logprob: -3.078634023666382
    7. 'dans' → logprob: -3.203634023666382
    8. 'express' → logprob: -3.328634023666382
    9. ' interm' → logprob: -3.328634023666382
    10. 's' → logprob: -3.453634023666382

Token 114: ''ex' (ID: 23472)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5204440355300903
    2. 'u' → logprob: -1.8954440355300903
    3. 'es' → logprob: -2.270443916320801
    4. 'ont' → logprob: -3.270443916320801
    5. 'ans' → logprob: -3.895443916320801
    6. 'eux' → logprob: -4.020443916320801
    7. ''arrêt' → logprob: -4.520443916320801
    8. 'ex' → logprob: -4.645443916320801
    9. 'S' → logprob: -5.020443916320801
    10. 'express' → logprob: -5.520443916320801

Token 115: 'press' (ID: 2020)
  Prédit: 'press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.020897099748253822
    2. 'p' → logprob: -4.770896911621094
    3. 'pres' → logprob: -6.020896911621094
    4. 'près' → logprob: -6.020896911621094
    5. 'ress' → logprob: -6.270896911621094
    6. 'pr' → logprob: -6.270896911621094
    7. 'prés' → logprob: -7.395896911621094
    8. 'pression' → logprob: -7.520896911621094
    9. 'pre' → logprob: -8.145896911621094
    10. 'rès' → logprob: -8.895896911621094

Token 116: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9509393572807312
    2. 's' → logprob: -1.825939416885376
    3. '.' → logprob: -2.075939416885376
    4. '#' → logprob: -3.325939416885376
    5. 'express' → logprob: -3.325939416885376
    6. 'S' → logprob: -3.450939416885376
    7. 'inter' → logprob: -3.575939416885376
    8. 'arr' → logprob: -4.075939178466797
    9. 'es' → logprob: -4.575939178466797
    10. 'et' → logprob: -4.575939178466797

Token 117: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.33696064352989197
    2. 'et' → logprob: -2.336960554122925
    3. 'mais' → logprob: -2.336960554122925
    4. ' mais' → logprob: -2.836960554122925
    5. ' et' → logprob: -4.461960792541504
    6. 'and' → logprob: -5.711960792541504
    7. 'but' → logprob: -5.711960792541504
    8. ' #' → logprob: -5.961960792541504
    9. 'y' → logprob: -6.086960792541504
    10. ' but' → logprob: -6.336960792541504

Token 118: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19306036829948425
    2. 'mais' → logprob: -2.4430603981018066
    3. 'et' → logprob: -2.5680603981018066
    4. ' mais' → logprob: -5.318060398101807
    5. ' et' → logprob: -6.193060398101807
    6. ' #' → logprob: -6.943060398101807
    7. 'and' → logprob: -7.443060398101807
    8. 'y' → logprob: -7.943060398101807
    9. 'don' → logprob: -8.068059921264648
    10. 'pas' → logprob: -8.193059921264648

Token 119: ' aussi' (ID: 9894)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.1055079698562622
    2. 'on' → logprob: -1.3555079698562622
    3. 'que' → logprob: -1.7305079698562622
    4. 'qu' → logprob: -3.1055078506469727
    5. ' que' → logprob: -3.1055078506469727
    6. 'a' → logprob: -3.4805078506469727
    7. '#' → logprob: -3.8555078506469727
    8. 'les' → logprob: -4.230507850646973
    9. ' qu' → logprob: -4.480507850646973
    10. 't' → logprob: -4.855507850646973

Token 120: ' à' (ID: 1221)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.15867498517036438
    2. ' sur' → logprob: -2.783674955368042
    3. 'que' → logprob: -4.158675193786621
    4. 'aux' → logprob: -4.658675193786621
    5. 't' → logprob: -4.908675193786621
    6. ' toutes' → logprob: -5.033675193786621
    7. ' celles' → logprob: -5.033675193786621
    8. 'les' → logprob: -5.158675193786621
    9. 'qu' → logprob: -5.533675193786621
    10. 'pe' → logprob: -5.533675193786621

Token 121: ' K' (ID: 658)
  Prédit: ' toutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.406544029712677
    2. ' celles' → logprob: -1.6565439701080322
    3. 'l' → logprob: -3.4065439701080322
    4. 'c' → logprob: -3.7815439701080322
    5. 't' → logprob: -4.156544208526611
    6. ' certaines' → logprob: -4.656544208526611
    7. 'au' → logprob: -4.656544208526611
    8. 'certain' → logprob: -4.906544208526611
    9. 'les' → logprob: -5.281544208526611
    10. ' chaque' → logprob: -5.406544208526611

Token 122: ' stations' (ID: 26061)
  Prédit: ' stations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.6303427219390869
    2. '-' → logprob: -2.130342721939087
    3. '<|end|>' → logprob: -2.130342721939087
    4. '+' → logprob: -3.380342721939087
    5. ' plus' → logprob: -3.880342721939087
    6. ' des' → logprob: -4.005342483520508
    7. 'stations' → logprob: -4.255342483520508
    8. 'plus' → logprob: -4.380342483520508
    9. ' station' → logprob: -4.630342483520508
    10. '...' → logprob: -4.755342483520508

Token 123: ' au' (ID: 2791)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.06395462900400162
    2. 'inter' → logprob: -4.438954830169678
    3. ' interm' → logprob: -4.938954830169678
    4. 'distinct' → logprob: -5.313954830169678
    5. 'import' → logprob: -5.813954830169678
    6. 'non' → logprob: -5.813954830169678
    7. ' restantes' → logprob: -5.813954830169678
    8. 'sup' → logprob: -6.188954830169678
    9. ' au' → logprob: -6.313954830169678
    10. 'd' → logprob: -6.563954830169678

Token 124: ' total' (ID: 3609)
  Prédit: 'mil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mil' → logprob: -0.5462540984153748
    2. 'minimum' → logprob: -2.1712541580200195
    3. 'total' → logprob: -2.2962541580200195
    4. 'cho' → logprob: -2.2962541580200195
    5. 'maximum' → logprob: -2.9212541580200195
    6. 'moins' → logprob: -3.9212541580200195
    7. 'del' → logprob: -4.2962541580200195
    8. 'plus' → logprob: -4.5462541580200195
    9. 'm' → logprob: -6.6712541580200195
    10. 'mill' → logprob: -6.7962541580200195

Token 125: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4813152253627777
    2. '.' → logprob: -1.1063152551651
    3. '#' → logprob: -3.9813151359558105
    4. ',
' → logprob: -4.8563151359558105
    5. '...' → logprob: -5.6063151359558105
    6. 'possible' → logprob: -5.6063151359558105
    7. 'stations' → logprob: -5.6063151359558105
    8. 's' → logprob: -6.2313151359558105
    9. 'for' → logprob: -6.6063151359558105
    10. 'import' → logprob: -7.3563151359558105

Token 126: 'K' (ID: 42)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.686011791229248
    2. ').' → logprob: -1.186011791229248
    3. 'minimum' → logprob: -2.186011791229248
    4. '),' → logprob: -3.311011791229248
    5. ' minimum' → logprob: -3.936011791229248
    6. ' au' → logprob: -4.811011791229248
    7. ',' → logprob: -4.936011791229248
    8. 'au' → logprob: -5.936011791229248
    9. ' supplémentaires' → logprob: -6.186011791229248
    10. 'pour' → logprob: -8.186012268066406

Token 127: ' >=' (ID: 5064)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7764602899551392
    2. '-' → logprob: -1.9014602899551392
    3. '+' → logprob: -2.1514601707458496
    4. ' )' → logprob: -2.2764601707458496
    5. '>' → logprob: -3.1514601707458496
    6. '>=' → logprob: -3.4014601707458496
    7. ' -' → logprob: -3.7764601707458496
    8. ' >=' → logprob: -3.9014601707458496
    9. ' plus' → logprob: -4.40146017074585
    10. ' >' → logprob: -4.77646017074585

Token 128: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.03397887572646141
    2. ' M' → logprob: -3.4089789390563965
    3. 'len' → logprob: -8.158978462219238
    4. ' len' → logprob: -10.158978462219238
    5. ' ' → logprob: -12.408978462219238
    6. 'N' → logprob: -14.158978462219238
    7. ' ' → logprob: -14.283978462219238
    8. '   ' → logprob: -14.658978462219238
    9. '0' → logprob: -14.846478462219238
    10. '1' → logprob: -15.096478462219238

Token 129: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02895568124949932
    2. ').' → logprob: -3.9039556980133057
    3. ' )' → logprob: -5.028955459594727
    4. '),' → logprob: -6.528955459594727
    5. ' ).' → logprob: -9.153955459594727
    6. ',' → logprob: -9.278955459594727
    7. '.' → logprob: -9.903955459594727
    8. '):' → logprob: -9.903955459594727
    9. ' ),' → logprob: -10.778955459594727
    10. '.)' → logprob: -11.403955459594727

Token 130: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04879799112677574
    2. 'DP' → logprob: -3.923798084259033
    3. '#' → logprob: -4.298798084259033
    4. '
' → logprob: -5.173798084259033
    5. 'stations' → logprob: -6.298798084259033
    6. ' dp' → logprob: -6.548798084259033
    7. ' stations' → logprob: -7.048798084259033
    8. 'positions' → logprob: -7.423798084259033
    9. 'possible' → logprob: -7.423798084259033
    10. ' DP' → logprob: -7.673798084259033

Token 131: ' Les' (ID: 7029)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007772132754325867
    2. 'DP' → logprob: -5.257771968841553
    3. ' dp' → logprob: -6.507771968841553
    4. '#' → logprob: -7.757771968841553
    5. '
' → logprob: -8.257772445678711
    6. 'dist' → logprob: -9.382772445678711
    7. ' DP' → logprob: -9.757772445678711
    8. 'd' → logprob: -10.382772445678711
    9. 'arr' → logprob: -10.382772445678711
    10. '_dp' → logprob: -10.632772445678711

Token 132: ' arr' (ID: 1724)
  Prédit: ' stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.6486186981201172
    2. 'dp' → logprob: -1.8986186981201172
    3. ' dp' → logprob: -2.273618698120117
    4. ' S' → logprob: -2.648618698120117
    5. ' positions' → logprob: -3.523618698120117
    6. '#' → logprob: -4.023618698120117
    7. ' indices' → logprob: -4.398618698120117
    8. ' #' → logprob: -4.523618698120117
    9. 'S' → logprob: -4.523618698120117
    10. 'stations' → logprob: -4.648618698120117

Token 133: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.0009086026693694293
    2. 'êt' → logprob: -7.375908374786377
    3. 'ê' → logprob: -9.000908851623535
    4. 'ets' → logprob: -9.375908851623535
    5. 'êtes' → logprob: -10.750908851623535
    6. '#' → logprob: -11.250908851623535
    7. 'ôts' → logprob: -11.375908851623535
    8. 'iv' → logprob: -12.000908851623535
    9. '^' → logprob: -12.250908851623535
    10. '[' → logprob: -12.625908851623535

Token 134: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5903574824333191
    2. ' suivants' → logprob: -1.9653575420379639
    3. ' supplémentaires' → logprob: -2.340357542037964
    4. '=' → logprob: -2.465357542037964
    5. ' possibles' → logprob: -2.715357542037964
    6. 'possible' → logprob: -4.965357303619385
    7. '_possible' → logprob: -4.965357303619385
    8. '_' → logprob: -5.215357303619385
    9. ' rest' → logprob: -5.215357303619385
    10. 'rest' → logprob: -5.590357303619385

Token 135: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.4030149281024933
    2. 'l' → logprob: -2.028014898300171
    3. ' l' → logprob: -2.153014898300171
    4. ' sem' → logprob: -3.153014898300171
    5. 'express' → logprob: -3.653014898300171
    6. ' express' → logprob: -4.90301513671875
    7. 's' → logprob: -6.40301513671875
    8. 'semi' → logprob: -6.71551513671875
    9. ' la' → logprob: -7.27801513671875
    10. ' semi' → logprob: -7.77801513671875

Token 136: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.41643691062927246
    2. 'express' → logprob: -1.1664369106292725
    3. '(express' → logprob: -4.541437149047852
    4. 'pr' → logprob: -5.916437149047852
    5. 'press' → logprob: -7.041437149047852
    6. 'pexpr' → logprob: -7.166437149047852
    7. '#' → logprob: -7.291437149047852
    8. 'prises' → logprob: -7.291437149047852
    9. '```' → logprob: -7.291437149047852
    10. ' expresses' → logprob: -7.291437149047852

Token 137: ' sont' (ID: 5242)
  Prédit: ' doivent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doivent' → logprob: -0.7534191608428955
    2. 's' → logprob: -1.3784191608428955
    3. ' sont' → logprob: -2.1284191608428955
    4. '#' → logprob: -4.003418922424316
    5. ' possibles' → logprob: -4.003418922424316
    6. ' devront' → logprob: -4.128418922424316
    7. 'S' → logprob: -4.628418922424316
    8. 'possible' → logprob: -4.628418922424316
    9. ' peuvent' → logprob: -4.753418922424316
    10. 'se' → logprob: -4.753418922424316

Token 138: ' un' (ID: 537)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tri' → logprob: -1.3080050945281982
    2. ' forcément' → logprob: -2.0580050945281982
    3. 'initial' → logprob: -2.5580050945281982
    4. ' une' → logprob: -2.6830050945281982
    5. ' initial' → logprob: -3.0580050945281982
    6. 'strict' → logprob: -3.3080050945281982
    7. ' un' → logprob: -3.3080050945281982
    8. ' dans' → logprob: -3.5580050945281982
    9. ' chois' → logprob: -3.8080050945281982
    10. 'dans' → logprob: -3.9330050945281982

Token 139: ' sous' (ID: 14487)
  Prédit: ' ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ensemble' → logprob: -0.9510931968688965
    2. 'e' → logprob: -1.0760931968688965
    3. 'ensemble' → logprob: -2.5760931968688965
    4. 's' → logprob: -3.0760931968688965
    5. ' set' → logprob: -3.0760931968688965
    6. 'set' → logprob: -3.8260931968688965
    7. 'sorted' → logprob: -4.0760931968688965
    8. ' sup' → logprob: -4.7010931968688965
    9. ' list' → logprob: -4.7010931968688965
    10. ' tableau' → logprob: -5.0760931968688965

Token 140: '-' (ID: 12)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.06522560119628906
    2. '-' → logprob: -3.065225601196289
    3. 'ense' → logprob: -4.190225601196289
    4. 's' → logprob: -8.065225601196289
    5. '_' → logprob: -8.190225601196289
    6. '```' → logprob: -8.440225601196289
    7. '' → logprob: -9.190225601196289
    8. 'set' → logprob: -9.565225601196289
    9. '__' → logprob: -10.065225601196289
    10. '
' → logprob: -10.190225601196289

Token 141: 'ensemble' (ID: 37301)
  Prédit: 'ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.0020383221562951803
    2. 'ense' → logprob: -6.252038478851318
    3. '-' → logprob: -10.75203800201416
    4. 'ens' → logprob: -11.00203800201416
    5. ''ensemble' → logprob: -11.00203800201416
    6. '```' → logprob: -11.62703800201416
    7. 'jeu' → logprob: -11.75203800201416
    8. 'insi' → logprob: -12.75203800201416
    9. 'es' → logprob: -12.87703800201416
    10. ' ensemble' → logprob: -12.87703800201416

Token 142: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.07064691931009293
    2. ' de' → logprob: -2.8206470012664795
    3. 'des' → logprob: -4.9456467628479
    4. 'de' → logprob: -7.3206467628479
    5. ' of' → logprob: -8.695647239685059
    6. ' d' → logprob: -8.945647239685059
    7. ' ' → logprob: -9.070647239685059
    8. ' du' → logprob: -9.195647239685059
    9. 'd' → logprob: -9.445647239685059
    10. '<|end|>' → logprob: -9.945647239685059

Token 143: ' stations' (ID: 26061)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.04342445731163025
    2. 'range' → logprob: -3.918424367904663
    3. ' S' → logprob: -5.168424606323242
    4. 'sorted' → logprob: -5.293424606323242
    5. ' range' → logprob: -5.793424606323242
    6. '[' → logprob: -6.668424606323242
    7. 'set' → logprob: -6.668424606323242
    8. '{' → logprob: -6.793424606323242
    9. 'stations' → logprob: -6.918424606323242
    10. 'la' → logprob: -7.043424606323242

Token 144: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6813406348228455
    2. '.' → logprob: -2.3063406944274902
    3. '[' → logprob: -2.8063406944274902
    4. '[]' → logprob: -3.0563406944274902
    5. 's' → logprob: -3.4313406944274902
    6. '{' → logprob: -3.6813406944274902
    7. 'de' → logprob: -4.05634069442749
    8. 'sorted' → logprob: -4.43134069442749
    9. 'range' → logprob: -4.43134069442749
    10. '<|end|>' → logprob: -4.43134069442749

Token 145: 'num' (ID: 4571)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4772043228149414
    2. 'range' → logprob: -1.7272043228149414
    3. ' range' → logprob: -2.9772043228149414
    4. '{' → logprob: -3.2272043228149414
    5. 'sorted' → logprob: -3.3522043228149414
    6. 'S' → logprob: -4.227204322814941
    7. '[' → logprob: -4.352204322814941
    8. ' sorted' → logprob: -4.852204322814941
    9. 'express' → logprob: -4.852204322814941
    10. 'de' → logprob: -5.227204322814941

Token 146: 'é' (ID: 377)
  Prédit: 'éros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.13208994269371033
    2. 'é' → logprob: -2.257089853286743
    3. 'éro' → logprob: -4.382090091705322
    4. ')' → logprob: -6.382090091705322
    5. 'range' → logprob: -6.507090091705322
    6. 'ériques' → logprob: -6.757090091705322
    7. 'éra' → logprob: -7.757090091705322
    8. ' range' → logprob: -8.007089614868164
    9. 'érées' → logprob: -8.007089614868164
    10. 'ranges' → logprob: -8.257089614868164

Token 147: 'rot' (ID: 8150)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.6412157416343689
    2. 'ros' → logprob: -0.7662157416343689
    3. 'rot' → logprob: -5.141215801239014
    4. 'rotation' → logprob: -7.266215801239014
    5. 'rots' → logprob: -7.391215801239014
    6. 'r' → logprob: -7.891215801239014
    7. 'rod' → logprob: -8.766215324401855
    8. 'éros' → logprob: -9.766215324401855
    9. 'rov' → logprob: -9.828715324401855
    10. 'rosis' → logprob: -10.016215324401855

Token 148: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0813196450471878
    2. 'és' → logprob: -3.581319570541382
    3. ')' → logprob: -4.331319808959961
    4. '=' → logprob: -4.831319808959961
    5. 'é' → logprob: -5.206319808959961
    6. 'es' → logprob: -5.331319808959961
    7. '1' → logprob: -5.706319808959961
    8. '0' → logprob: -5.706319808959961
    9. ' de' → logprob: -5.956319808959961
    10. ' ' → logprob: -6.206319808959961

Token 149: ' entre' (ID: 3853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0021244287490845
    2. ' de' → logprob: -1.0021244287490845
    3. 'de' → logprob: -2.127124309539795
    4. '1' → logprob: -2.752124309539795
    5. ' ' → logprob: -3.502124309539795
    6. 'from' → logprob: -4.002124309539795
    7. ' )' → logprob: -4.752124309539795
    8. ' from' → logprob: -5.502124309539795
    9. 'range' → logprob: -5.627124309539795
    10. ' jusqu' → logprob: -5.627124309539795

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.913265239447355e-05
    2. ' ' → logprob: -9.250099182128906
    3. '2' → logprob: -13.125099182128906
    4. '0' → logprob: -14.125099182128906
    5. ' ' → logprob: -16.375099182128906
    6. '```' → logprob: -16.875099182128906
    7. ')' → logprob: -18.500099182128906
    8. '   ' → logprob: -18.750099182128906
    9. '
' → logprob: -18.875099182128906
    10. '

' → logprob: -19.000099182128906

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0391463193809614e-05
    2. ' ' → logprob: -10.250060081481934
    3. '0' → logprob: -10.750060081481934
    4. '2' → logprob: -12.875060081481934
    5. 'S' → logprob: -13.875060081481934
    6. 'A' → logprob: -16.87506103515625
    7. 'N' → logprob: -18.00006103515625
    8. '[' → logprob: -18.37506103515625
    9. '```' → logprob: -18.50006103515625
    10. ')' → logprob: -19.00006103515625

Token 152: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5090978741645813
    2. ' et' → logprob: -1.7590978145599365
    3. ' and' → logprob: -2.2590978145599365
    4. 'et' → logprob: -2.3840978145599365
    5. 'and' → logprob: -3.8840978145599365
    6. ' ,' → logprob: -4.884098052978516
    7. ' ' → logprob: -7.384098052978516
    8. ')' → logprob: -7.384098052978516
    9. ' и' → logprob: -7.884098052978516
    10. '1' → logprob: -9.259098052978516

Token 153: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011058199219405651
    2. ' N' → logprob: -4.511058330535889
    3. 'C' → logprob: -12.01105785369873
    4. 'A' → logprob: -13.38605785369873
    5. ' ' → logprob: -13.63605785369873
    6. 'Q' → logprob: -14.63605785369873
    7. 'K' → logprob: -14.63605785369873
    8. 'B' → logprob: -15.76105785369873
    9. ' C' → logprob: -15.88605785369873
    10. '100' → logprob: -16.011058807373047

Token 154: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007763027213513851
    2. ' )' → logprob: -5.132762908935547
    3. '),' → logprob: -6.882762908935547
    4. ').' → logprob: -7.757762908935547
    5. ',' → logprob: -8.007762908935547
    6. '+' → logprob: -11.257762908935547
    7. ' ),' → logprob: -12.007762908935547
    8. ' ,' → logprob: -12.257762908935547
    9. ')...' → logprob: -12.507762908935547
    10. '.' → logprob: -12.507762908935547

Token 155: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3202874958515167
    2. ' #' → logprob: -2.4452874660491943
    3. ' ' → logprob: -3.0702874660491943
    4. ',' → logprob: -3.1952874660491943
    5. ' mais' → logprob: -4.195287704467773
    6. 's' → logprob: -4.570287704467773
    7. 'with' → logprob: -4.570287704467773
    8. ' avec' → logprob: -4.945287704467773
    9. ')' → logprob: -5.070287704467773
    10. '[' → logprob: -5.445287704467773

Token 156: ' contenant' (ID: 131049)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3387180268764496
    2. '#' → logprob: -1.338718056678772
    3. 'stations' → logprob: -4.963717937469482
    4. 'D' → logprob: -5.088717937469482
    5. 'DP' → logprob: -5.963717937469482
    6. 'S' → logprob: -6.463717937469482
    7. ' dp' → logprob: -6.463717937469482
    8. 'distance' → logprob: -6.713717937469482
    9. ' #' → logprob: -6.963717937469482
    10. 'dist' → logprob: -7.713717937469482

Token 157: ' oblig' (ID: 12894)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7313648462295532
    2. ' toutes' → logprob: -1.4813648462295532
    3. ' set' → logprob: -2.1063647270202637
    4. 'all' → logprob: -2.3563647270202637
    5. ' les' → logprob: -3.4813647270202637
    6. 'set' → logprob: -4.606364727020264
    7. ' celles' → logprob: -4.606364727020264
    8. 'les' → logprob: -5.106364727020264
    9. ' tous' → logprob: -5.231364727020264
    10. ' S' → logprob: -5.606364727020264

Token 158: 'ato' (ID: 2754)
  Prédit: 'ig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.4668935537338257
    2. 'ato' → logprob: -1.2168935537338257
    3. 'é' → logprob: -3.0918936729431152
    4. 'és' → logprob: -4.216893672943115
    5. 'atoires' → logprob: -5.466893672943115
    6. 'atoire' → logprob: -6.466893672943115
    7. 'at' → logprob: -6.591893672943115
    8. 'ément' → logprob: -6.716893672943115
    9. 'iga' → logprob: -6.966893672943115
    10. 'ativement' → logprob: -7.466893672943115

Token 159: 'irement' (ID: 19343)
  Prédit: 'irement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irement' → logprob: -0.00011319868644932285
    2. 'ire' → logprob: -9.875113487243652
    3. 'rement' → logprob: -10.000113487243652
    4. 'ires' → logprob: -12.125113487243652
    5. 'ir' → logprob: -12.500113487243652
    6. 'ri' → logprob: -13.375113487243652
    7. 'urement' → logprob: -13.625113487243652
    8. 're' → logprob: -14.500113487243652
    9. 'irem' → logprob: -14.750113487243652
    10. 't' → logprob: -14.750113487243652

Token 160: ' S' (ID: 336)
  Prédit: ' toutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.6764130592346191
    2. 'all' → logprob: -1.3014130592346191
    3. ' all' → logprob: -1.8014130592346191
    4. 'les' → logprob: -3.801413059234619
    5. ' les' → logprob: -4.301413059234619
    6. ' celles' → logprob: -5.051413059234619
    7. 't' → logprob: -5.176413059234619
    8. 'S' → logprob: -6.176413059234619
    9. ' S' → logprob: -6.426413059234619
    10. ' tous' → logprob: -7.301413059234619

Token 161: '_' (ID: 62)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8676987290382385
    2. '#' → logprob: -1.3676986694335938
    3. '
' → logprob: -2.1176986694335938
    4. ',' → logprob: -2.4926986694335938
    5. '.
' → logprob: -3.8676986694335938
    6. 'stations' → logprob: -3.8676986694335938
    7. '<|end|>' → logprob: -4.117698669433594
    8. '

' → logprob: -4.617698669433594
    9. ',
' → logprob: -4.742698669433594
    10. ' stations' → logprob: -4.867698669433594

Token 162: '1' (ID: 16)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.37966033816337585
    2. '<|end|>' → logprob: -2.2546603679656982
    3. '[:' → logprob: -2.3796603679656982
    4. '.' → logprob: -3.2546603679656982
    5. '[' → logprob: -3.6296603679656982
    6. 'et' → logprob: -4.254660129547119
    7. ']' → logprob: -4.504660129547119
    8. '[]' → logprob: -4.504660129547119
    9. '[i' → logprob: -5.504660129547119
    10. ',' → logprob: -6.379660129547119

Token 163: ',...' (ID: 35229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3637165427207947
    2. ']' → logprob: -2.6137166023254395
    3. '.' → logprob: -2.6137166023254395
    4. '<|end|>' → logprob: -2.8637166023254395
    5. ')' → logprob: -2.9887166023254395
    6. ' and' → logprob: -4.2387166023254395
    7. '[' → logprob: -4.8637166023254395
    8. 'and' → logprob: -5.4887166023254395
    9. ' =' → logprob: -5.8637166023254395
    10. ' ,' → logprob: -5.9887166023254395

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46452149748802185
    2. 'S' → logprob: -1.4645215272903442
    3. ',...' → logprob: -2.7145214080810547
    4. '...' → logprob: -3.0895214080810547
    5. ',S' → logprob: -4.839521408081055
    6. ' ,' → logprob: -4.839521408081055
    7. ',M' → logprob: -5.714521408081055
    8. ' S' → logprob: -6.589521408081055
    9. '[' → logprob: -6.714521408081055
    10. 'M' → logprob: -6.839521408081055

Token 165: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12702596187591553
    2. ' S' → logprob: -2.127026081085205
    3. ',' → logprob: -9.752025604248047
    4. '...' → logprob: -10.627025604248047
    5. ',S' → logprob: -11.877025604248047
    6. ' ' → logprob: -13.002025604248047
    7. '...,' → logprob: -13.252025604248047
    8. ' ' → logprob: -13.502025604248047
    9. ' ,' → logprob: -14.127025604248047
    10. '_S' → logprob: -14.377025604248047

Token 166: '_M' (ID: 2372)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.6099194884300232
    2. '[:]' → logprob: -1.609919548034668
    3. '[' → logprob: -2.734919548034668
    4. 'M' → logprob: -2.984919548034668
    5. ']' → logprob: -3.109919548034668
    6. '[M' → logprob: -3.359919548034668
    7. '.' → logprob: -3.859919548034668
    8. '<|end|>' → logprob: -4.234919548034668
    9. '[i' → logprob: -4.984919548034668
    10. ',M' → logprob: -5.859919548034668

Token 167: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3121483623981476
    2. '#' → logprob: -2.062148332595825
    3. '
' → logprob: -2.687148332595825
    4. 'arr' → logprob: -3.812148332595825
    5. 'stations' → logprob: -4.437148571014404
    6. ',
' → logprob: -5.062148571014404
    7. ',' → logprob: -5.187148571014404
    8. 'DP' → logprob: -5.312148571014404
    9. 'selected' → logprob: -5.937148571014404
    10. 'positions' → logprob: -6.062148571014404

Token 168: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7810559272766113
    2. '#' → logprob: -2.0310559272766113
    3. 'et' → logprob: -2.0310559272766113
    4. 'S' → logprob: -2.2810559272766113
    5. ' et' → logprob: -2.2810559272766113
    6. '...' → logprob: -2.2810559272766113
    7. ' ' → logprob: -2.9060559272766113
    8. ' S' → logprob: -3.4060559272766113
    9. 's' → logprob: -3.5310559272766113
    10. ' 
' → logprob: -3.9060559272766113

Token 169: ' de' (ID: 334)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.8584440350532532
    2. 'auc' → logprob: -2.4834439754486084
    3. 'tri' → logprob: -2.7334439754486084
    4. '#' → logprob: -3.2334439754486084
    5. 'pas' → logprob: -3.4834439754486084
    6. 'com' → logprob: -3.4834439754486084
    7. ' éventuellement' → logprob: -3.8584439754486084
    8. 'les' → logprob: -3.9834439754486084
    9. 'd' → logprob: -3.9834439754486084
    10. 'S' → logprob: -3.9834439754486084

Token 170: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.6549525856971741
    2. ' taille' → logprob: -1.1549525260925293
    3. 'plus' → logprob: -2.6549525260925293
    4. 'size' → logprob: -2.7799525260925293
    5. 'card' → logprob: -4.529952526092529
    6. ' size' → logprob: -5.404952526092529
    7. ' cardinal' → logprob: -5.529952526092529
    8. ' plus' → logprob: -5.529952526092529
    9. 'len' → logprob: -6.779952526092529
    10. 'la' → logprob: -6.779952526092529

Token 171: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.16025175154209137
    2. ' K' → logprob: -1.9102517366409302
    3. ' ' → logprob: -11.16025161743164
    4. ' ' → logprob: -12.41025161743164
    5. '   ' → logprob: -12.91025161743164
    6. 'exact' → logprob: -13.41025161743164
    7. '	K' → logprob: -14.03525161743164
    8. ' (' → logprob: -14.53525161743164
    9. '  ' → logprob: -14.66025161743164
    10. ' =' → logprob: -14.66025161743164

Token 172: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3230818212032318
    2. '#' → logprob: -2.0730817317962646
    3. '
' → logprob: -2.4480817317962646
    4. 'DP' → logprob: -3.6980817317962646
    5. 'arr' → logprob: -4.323081970214844
    6. 'stations' → logprob: -4.698081970214844
    7. ',
' → logprob: -5.573081970214844
    8. ',' → logprob: -6.323081970214844
    9. 'dist' → logprob: -6.573081970214844
    10. 'possible' → logprob: -6.698081970214844

Token 173: '#
' (ID: 11240)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10205948352813721
    2. '#' → logprob: -3.3520593643188477
    3. '
' → logprob: -3.4770593643188477
    4. 'DP' → logprob: -3.7270593643188477
    5. ' dp' → logprob: -6.852059364318848
    6. ' 
' → logprob: -6.977059364318848
    7. 'express' → logprob: -7.477059364318848
    8. 'arr' → logprob: -7.602059364318848
    9. ' DP' → logprob: -7.852059364318848
    10. '\n' → logprob: -8.102059364318848

Token 174: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09271245449781418
    2. '#' → logprob: -2.59271240234375
    3. 'stations' → logprob: -5.21771240234375
    4. 'DP' → logprob: -5.71771240234375
    5. 'arr' → logprob: -6.46771240234375
    6. 'def' → logprob: -7.34271240234375
    7. '
' → logprob: -7.59271240234375
    8. 'possible' → logprob: -7.96771240234375
    9. 'express' → logprob: -8.09271240234375
    10. 'positions' → logprob: -8.21771240234375

Token 175: ' Nous' (ID: 20193)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1814025491476059
    2. '#' → logprob: -2.0564024448394775
    3. 'stations' → logprob: -3.8064024448394775
    4. 'arr' → logprob: -5.306402683258057
    5. 'def' → logprob: -5.806402683258057
    6. 'express' → logprob: -6.556402683258057
    7. 'possible' → logprob: -6.681402683258057
    8. 'DP' → logprob: -6.806402683258057
    9. 'positions' → logprob: -7.181402683258057
    10. 'import' → logprob: -8.056402206420898

Token 176: ' devons' (ID: 140218)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0217020511627197
    2. ' allons' → logprob: -1.5217020511627197
    3. 'for' → logprob: -2.3967020511627197
    4. ' pouvons' → logprob: -3.0217020511627197
    5. ' devons' → logprob: -3.0217020511627197
    6. 'pens' → logprob: -3.1467020511627197
    7. ' voulons' → logprob: -3.3967020511627197
    8. ' #' → logprob: -4.271701812744141
    9. 'continu' → logprob: -4.396701812744141
    10. 'all' → logprob: -4.396701812744141

Token 177: ' choisir' (ID: 47004)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.7626705169677734
    2. 'aj' → logprob: -2.3876705169677734
    3. 'penser' → logprob: -2.5126705169677734
    4. '#' → logprob: -2.5126705169677734
    5. ' compléter' → logprob: -2.6376705169677734
    6. 'impl' → logprob: -2.7626705169677734
    7. ' déterminer' → logprob: -2.7626705169677734
    8. 'compl' → logprob: -3.0126705169677734
    9. ' continuer' → logprob: -3.2626705169677734
    10. ' trouver' → logprob: -3.3876705169677734

Token 178: ' les' (ID: 1341)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.39278948307037354
    2. 'K' → logprob: -2.142789363861084
    3. ' les' → logprob: -2.142789363861084
    4. 'les' → logprob: -3.017789363861084
    5. ' des' → logprob: -3.892789363861084
    6. 'des' → logprob: -4.892789363861084
    7. ' ' → logprob: -5.517789363861084
    8. 'le' → logprob: -6.267789363861084
    9. ' exactement' → logprob: -7.017789363861084
    10. 'exact' → logprob: -7.142789363861084

Token 179: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.42184871435165405
    2. ' K' → logprob: -2.046848773956299
    3. 'stations' → logprob: -2.421848773956299
    4. 'arr' → logprob: -2.671848773956299
    5. 'positions' → logprob: -3.921848773956299
    6. 'indices' → logprob: -4.671848773956299
    7. 'ar' → logprob: -4.796848773956299
    8. ' stations' → logprob: -5.796848773956299
    9. ' arr' → logprob: -5.921848773956299
    10. 'points' → logprob: -6.171848773956299

Token 180: ' stations' (ID: 26061)
  Prédit: ' stations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.7492191195487976
    2. 'stations' → logprob: -1.8742191791534424
    3. '-' → logprob: -1.9992191791534424
    4. ' arr' → logprob: -2.4992191791534424
    5. 'arr' → logprob: -2.9992191791534424
    6. ' prochaines' → logprob: -3.6242191791534424
    7. ' prochains' → logprob: -3.7492191791534424
    8. '<|end|>' → logprob: -4.749218940734863
    9. ' -' → logprob: -4.874218940734863
    10. ' meilleures' → logprob: -4.999218940734863

Token 181: ' (' (ID: 350)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.3256776034832001
    2. 'supp' → logprob: -1.9506776332855225
    3. ' restantes' → logprob: -3.7006776332855225
    4. ' suivantes' → logprob: -3.8256776332855225
    5. ' parmi' → logprob: -4.575677394866943
    6. 'additional' → logprob: -4.575677394866943
    7. 'de' → logprob: -4.825677394866943
    8. ',' → logprob: -4.950677394866943
    9. 'sur' → logprob: -4.950677394866943
    10. 'où' → logprob: -5.200677394866943

Token 182: 'avec' (ID: 64065)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0784963369369507
    2. ' supplémentaires' → logprob: -1.3284963369369507
    3. ' parmi' → logprob: -1.9534963369369507
    4. 'par' → logprob: -1.9534963369369507
    5. ' par' → logprob: -3.5784964561462402
    6. ' )' → logprob: -4.20349645614624
    7. ',' → logprob: -4.32849645614624
    8. 'dans' → logprob: -4.45349645614624
    9. 'supp' → logprob: -5.57849645614624
    10. 'qui' → logprob: -5.70349645614624

Token 183: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2497246265411377
    2. 'S' → logprob: -1.3747246265411377
    3. ' S' → logprob: -2.2497246265411377
    4. ' les' → logprob: -2.6247246265411377
    5. ' leurs' → logprob: -2.9997246265411377
    6. 'l' → logprob: -3.4997246265411377
    7. 'leurs' → logprob: -3.7497246265411377
    8. 'le' → logprob: -3.7497246265411377
    9. 'express' → logprob: -3.9997246265411377
    10. 'arr' → logprob: -4.499724388122559

Token 184: ' M' (ID: 391)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -1.5260469913482666
    2. 'S' → logprob: -1.6510469913482666
    3. 'arr' → logprob: -1.7760469913482666
    4. 'stations' → logprob: -2.4010469913482666
    5. ' S' → logprob: -3.2760469913482666
    6. 'import' → logprob: -3.4010469913482666
    7. 'positions' → logprob: -3.5260469913482666
    8. ' stops' → logprob: -3.5260469913482666
    9. 'ar' → logprob: -3.7760469913482666
    10. '#' → logprob: -3.7760469913482666

Token 185: ' stations' (ID: 26061)
  Prédit: ' stations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.8904842138290405
    2. ')' → logprob: -1.7654842138290405
    3. ' supplémentaires' → logprob: -2.39048433303833
    4. ' stops' → logprob: -2.39048433303833
    5. 'stations' → logprob: -3.39048433303833
    6. 'arr' → logprob: -3.89048433303833
    7. '#' → logprob: -3.89048433303833
    8. ' arr' → logprob: -4.01548433303833
    9. ' restantes' → logprob: -4.26548433303833
    10. ' )' → logprob: -4.39048433303833

Token 186: ' fixes' (ID: 60095)
  Prédit: ' oblig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' oblig' → logprob: -1.5484628677368164
    2. ' déjà' → logprob: -2.1734628677368164
    3. ' supplémentaires' → logprob: -2.1734628677368164
    4. 'de' → logprob: -2.5484628677368164
    5. 'd' → logprob: -2.6734628677368164
    6. 'dé' → logprob: -3.0484628677368164
    7. 's' → logprob: -3.2984628677368164
    8. ')' → logprob: -3.2984628677368164
    9. ' de' → logprob: -3.4234628677368164
    10. '#' → logprob: -3.5484628677368164

Token 187: ' déjà' (ID: 21229)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2626807987689972
    2. ' )' → logprob: -1.7626807689666748
    3. ',' → logprob: -3.012680768966675
    4. ' supplémentaires' → logprob: -5.762681007385254
    5. ' ,' → logprob: -6.012681007385254
    6. ' restantes' → logprob: -7.262681007385254
    7. ' ' → logprob: -7.387681007385254
    8. '),' → logprob: -7.387681007385254
    9. 's' → logprob: -7.762681007385254
    10. '#' → logprob: -8.137681007385254

Token 188: ' chois' (ID: 33475)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.17542479932308197
    2. 's' → logprob: -2.550424814224243
    3. 'cho' → logprob: -3.175424814224243
    4. ' chois' → logprob: -4.550424575805664
    5. ' s' → logprob: -5.175424575805664
    6. 'prés' → logprob: -5.550424575805664
    7. 'import' → logprob: -6.175424575805664
    8. 'chosen' → logprob: -6.300424575805664
    9. ' présentes' → logprob: -6.425424575805664
    10. ')' → logprob: -6.550424575805664

Token 189: 'ies' (ID: 566)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004719426389783621
    2. ' )' → logprob: -6.129719257354736
    3. '),' → logprob: -6.629719257354736
    4. ',' → logprob: -7.379719257354736
    5. ',)' → logprob: -9.129719734191895
    6. '=' → logprob: -9.254719734191895
    7. '[' → logprob: -9.879719734191895
    8. '])' → logprob: -10.129719734191895
    9. '[])' → logprob: -10.629719734191895
    10. 's' → logprob: -10.629719734191895

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006636978592723608
    2. ',' → logprob: -5.506637096405029
    3. ' )' → logprob: -6.006637096405029
    4. '),' → logprob: -10.631636619567871
    5. ')#' → logprob: -11.256636619567871
    6. 'et' → logprob: -11.756636619567871
    7. ' ' → logprob: -11.756636619567871
    8. ',)' → logprob: -12.006636619567871
    9. ' ,' → logprob: -12.131636619567871
    10. '#' → logprob: -12.381636619567871

Token 191: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5904123783111572
    2. '#' → logprob: -0.9654123783111572
    3. ' pour' → logprob: -4.090412139892578
    4. 'pour' → logprob: -4.215412139892578
    5. ' #' → logprob: -4.965412139892578
    6. 'en' → logprob: -5.465412139892578
    7. ' en' → logprob: -5.590412139892578
    8. ')' → logprob: -5.965412139892578
    9. ',
' → logprob: -6.215412139892578
    10. ' afin' → logprob: -6.590412139892578

Token 192: ' minim' (ID: 23874)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0967591404914856
    2. ' minim' → logprob: -2.471759080886841
    3. ' compléter' → logprob: -5.72175931930542
    4. ' min' → logprob: -6.97175931930542
    5. ' couvrir' → logprob: -7.72175931930542
    6. ' optimiser' → logprob: -7.72175931930542
    7. 'optim' → logprob: -7.84675931930542
    8. 'contin' → logprob: -7.97175931930542
    9. 'compl' → logprob: -8.096758842468262
    10. ' minimize' → logprob: -8.221758842468262

Token 193: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.8181696534156799
    2. 'iser' → logprob: -1.0681695938110352
    3. 'ser' → logprob: -2.193169593811035
    4. '_' → logprob: -3.693169593811035
    5. 'um' → logprob: -4.193169593811035
    6. 'user' → logprob: -4.818169593811035
    7. '#' → logprob: -5.443169593811035
    8. 'al' → logprob: -5.568169593811035
    9. ' ' → logprob: -5.568169593811035
    10. '```' → logprob: -5.818169593811035

Token 194: '
' (ID: 198)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.44118571281433105
    2. 'le' → logprob: -1.816185712814331
    3. ' la' → logprob: -1.941185712814331
    4. ' les' → logprob: -3.941185712814331
    5. 'la' → logprob: -4.56618595123291
    6. ' l' → logprob: -5.06618595123291
    7. 'les' → logprob: -5.19118595123291
    8. 'l' → logprob: -5.31618595123291
    9. ' ' → logprob: -6.69118595123291
    10. ' the' → logprob: -7.19118595123291

Token 195: '#' (ID: 2)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8711341023445129
    2. 'le' → logprob: -1.3711340427398682
    3. ' le' → logprob: -1.6211340427398682
    4. '#' → logprob: -2.496134042739868
    5. 'la' → logprob: -4.246134281158447
    6. ' les' → logprob: -4.496134281158447
    7. 'l' → logprob: -5.121134281158447
    8. ' l' → logprob: -5.496134281158447
    9. ' #' → logprob: -5.496134281158447
    10. ' the' → logprob: -5.996134281158447

Token 196: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.4767315983772278
    2. ' la' → logprob: -2.226731538772583
    3. 'la' → logprob: -2.226731538772583
    4. ' le' → logprob: -2.601731538772583
    5. 'l' → logprob: -2.601731538772583
    6. ' l' → logprob: -4.851731777191162
    7. 'les' → logprob: -5.976731777191162
    8. ' the' → logprob: -6.851731777191162
    9. 'the' → logprob: -7.101731777191162
    10. 'co' → logprob: -7.226731777191162

Token 197: ' temps' (ID: 11160)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.594562828540802
    2. ' coût' → logprob: -1.0945627689361572
    3. 'cout' → logprob: -2.7195627689361572
    4. ' cout' → logprob: -3.3445627689361572
    5. 'temps' → logprob: -5.844563007354736
    6. 'c' → logprob: -5.969563007354736
    7. 's' → logprob: -6.469563007354736
    8. ' temps' → logprob: -6.594563007354736
    9. ' co' → logprob: -7.344563007354736
    10. ' coûts' → logprob: -7.469563007354736

Token 198: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2531184256076813
    2. ' d' → logprob: -1.7531183958053589
    3. 'de' → logprob: -3.7531185150146484
    4. '_' → logprob: -4.628118515014648
    5. '_de' → logprob: -5.753118515014648
    6. ' tot' → logprob: -6.253118515014648
    7. '_total' → logprob: -6.628118515014648
    8. 'd' → logprob: -6.878118515014648
    9. ' ' → logprob: -7.128118515014648
    10. ' supplémentaires' → logprob: -7.253118515014648

Token 199: ' trajet' (ID: 110258)
  Prédit: ' trajet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trajet' → logprob: -0.7668428421020508
    2. 'traj' → logprob: -1.1418428421020508
    3. 'par' → logprob: -2.516842842102051
    4. ' parcours' → logprob: -2.516842842102051
    5. 'voy' → logprob: -3.891842842102051
    6. 'att' → logprob: -4.641842842102051
    7. 'tra' → logprob: -4.891842842102051
    8. ' traj' → logprob: -5.016842842102051
    9. ' voyage' → logprob: -6.266842842102051
    10. 'train' → logprob: -6.391842842102051

Token 200: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5886610150337219
    2. '.' → logprob: -1.2136609554290771
    3. ',
' → logprob: -2.963660955429077
    4. '#' → logprob: -3.588660955429077
    5. ' entre' → logprob: -3.963660955429077
    6. 'between' → logprob: -4.963661193847656
    7. '
' → logprob: -5.463661193847656
    8. ' ' → logprob: -5.588661193847656
    9. 's' → logprob: -5.588661193847656
    10. ' ,' → logprob: -5.838661193847656

Token 201: ' utilisant' (ID: 92474)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.1502513438463211
    2. 's' → logprob: -4.400251388549805
    3. 'util' → logprob: -4.525251388549805
    4. 'continu' → logprob: -4.650251388549805
    5. 'com' → logprob: -4.775251388549805
    6. 'continue' → logprob: -4.900251388549805
    7. 'c' → logprob: -5.025251388549805
    8. 'plus' → logprob: -5.275251388549805
    9. 'f' → logprob: -5.400251388549805
    10. 'inter' → logprob: -5.525251388549805

Token 202: ' une' (ID: 2463)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.360029935836792
    2. 'les' → logprob: -1.860029935836792
    3. 'le' → logprob: -2.360029935836792
    4. ' la' → logprob: -2.610029935836792
    5. ' des' → logprob: -2.610029935836792
    6. 'la' → logprob: -2.735029935836792
    7. 'une' → logprob: -2.735029935836792
    8. 'l' → logprob: -2.860029935836792
    9. ' le' → logprob: -3.235029935836792
    10. ' une' → logprob: -3.610029935836792

Token 203: ' combinaison' (ID: 165933)
  Prédit: ' combination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -2.1383635997772217
    2. 'dp' → logprob: -2.1383635997772217
    3. 'comb' → logprob: -2.2633635997772217
    4. ' combinaison' → logprob: -2.3883635997772217
    5. 'appro' → logprob: -2.7633635997772217
    6. ' dp' → logprob: -2.8883635997772217
    7. 'distance' → logprob: -3.0133635997772217
    8. ' DP' → logprob: -3.2633635997772217
    9. 'fonction' → logprob: -3.7633635997772217
    10. 'mult' → logprob: -4.013363838195801

Token 204: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.10741238296031952
    2. ' de' → logprob: -2.357412338256836
    3. ' d' → logprob: -5.482412338256836
    4. ' of' → logprob: -7.232412338256836
    5. ' optimale' → logprob: -7.482412338256836
    6. 'des' → logprob: -7.857412338256836
    7. 'de' → logprob: -8.232412338256836
    8. '<|end|>' → logprob: -8.607412338256836
    9. ' du' → logprob: -8.732412338256836
    10. ' continue' → logprob: -9.357412338256836

Token 205: ''ex' (ID: 23472)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.6377683877944946
    2. 'es' → logprob: -1.8877683877944946
    3. ' des' → logprob: -2.012768268585205
    4. ''' → logprob: -2.262768268585205
    5. 'e' → logprob: -2.387768268585205
    6. ''ex' → logprob: -2.887768268585205
    7. ' les' → logprob: -3.012768268585205
    8. ' '' → logprob: -3.512768268585205
    9. ' express' → logprob: -4.012768268585205
    10. 'de' → logprob: -4.137768268585205

Token 206: 'press' (ID: 2020)
  Prédit: 'press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.12284685671329498
    2. 'p' → logprob: -2.372846841812134
    3. 'pres' → logprob: -4.622847080230713
    4. 'pr' → logprob: -5.247847080230713
    5. 'pressions' → logprob: -6.122847080230713
    6. 'près' → logprob: -6.747847080230713
    7. 'pre' → logprob: -7.747847080230713
    8. 'prés' → logprob: -7.872847080230713
    9. 'plic' → logprob: -8.185346603393555
    10. 'pression' → logprob: -8.560346603393555

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5627543330192566
    2. ' et' → logprob: -1.4377543926239014
    3. ' ,' → logprob: -2.3127543926239014
    4. ' and' → logprob: -3.3127543926239014
    5. 'et' → logprob: -4.312754154205322
    6. ' ' → logprob: -4.812754154205322
    7. ''' → logprob: -5.687754154205322
    8. 's' → logprob: -5.687754154205322
    9. ')' → logprob: -5.687754154205322
    10. '<|end|>' → logprob: -5.812754154205322

Token 208: ' sem' (ID: 2743)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.9367888569831848
    2. 'sem' → logprob: -1.06178879737854
    3. ' local' → logprob: -2.06178879737854
    4. ' sem' → logprob: -3.06178879737854
    5. 'semi' → logprob: -3.31178879737854
    6. ' semi' → logprob: -3.93678879737854
    7. 'ter' → logprob: -5.686789035797119
    8. 'locale' → logprob: -6.061789035797119
    9. 'inter' → logprob: -6.061789035797119
    10. '#' → logprob: -6.186789035797119

Token 209: 'iexpress' (ID: 190732)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6075738668441772
    2. 'press' → logprob: -1.1075738668441772
    3. 'p' → logprob: -2.357573986053467
    4. 'pr' → logprob: -5.232573986053467
    5. '-p' → logprob: -5.357573986053467
    6. ' -' → logprob: -5.857573986053467
    7. '_' → logprob: -6.732573986053467
    8. ')' → logprob: -6.982573986053467
    9. '-pr' → logprob: -7.107573986053467
    10. 'pi' → logprob: -7.232573986053467

Token 210: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9502840042114258
    2. '#' → logprob: -1.4502840042114258
    3. ',
' → logprob: -1.9502840042114258
    4. '
' → logprob: -2.825284004211426
    5. 'dp' → logprob: -2.825284004211426
    6. 'def' → logprob: -3.450284004211426
    7. '.' → logprob: -4.575284004211426
    8. '\n' → logprob: -5.075284004211426
    9. 'for' → logprob: -5.200284004211426
    10. '\' → logprob: -5.450284004211426

Token 211: ' local' (ID: 2698)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.5174281597137451
    2. ' local' → logprob: -1.1424281597137451
    3. ' direct' → logprob: -3.767428159713745
    4. ' omnibus' → logprob: -4.642428398132324
    5. 'direct' → logprob: -5.267428398132324
    6. 'inter' → logprob: -5.267428398132324
    7. 'om' → logprob: -5.392428398132324
    8. 'normal' → logprob: -5.892428398132324
    9. ' normal' → logprob: -5.892428398132324
    10. 'sem' → logprob: -6.142428398132324

Token 212: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1324372291564941
    2. ',' → logprob: -1.2574372291564941
    3. ',
' → logprob: -1.6324372291564941
    4. '#' → logprob: -2.882437229156494
    5. '\n' → logprob: -2.882437229156494
    6. '

' → logprob: -4.007437229156494
    7. '.' → logprob: -4.632437229156494
    8. ' 
' → logprob: -4.757437229156494
    9. 'def' → logprob: -4.882437229156494
    10. '\' → logprob: -5.507437229156494

Token 213: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12846191227436066
    2. ',' → logprob: -2.8784618377685547
    3. ''' → logprob: -4.128461837768555
    4. ')' → logprob: -4.378461837768555
    5. ' ,' → logprob: -5.128461837768555
    6. '.' → logprob: -5.253461837768555
    7. '"' → logprob: -5.503461837768555
    8. '#' → logprob: -6.128461837768555
    9. ' =' → logprob: -6.253461837768555
    10. ' )' → logprob: -6.378461837768555

Token 214: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2324669063091278
    2. ' mais' → logprob: -3.48246693611145
    3. ' en' → logprob: -3.48246693611145
    4. ' #' → logprob: -3.73246693611145
    5. ' et' → logprob: -4.357466697692871
    6. ' ' → logprob: -4.357466697692871
    7. ',' → logprob: -4.482466697692871
    8. ')' → logprob: -4.607466697692871
    9. ' avec' → logprob: -4.732466697692871
    10. 'with' → logprob: -4.857466697692871

Token 215: ' maxim' (ID: 29045)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.527834415435791
    2. ' parcour' → logprob: -1.902834415435791
    3. 'aller' → logprob: -2.527834415435791
    4. 'les' → logprob: -2.527834415435791
    5. ' chaque' → logprob: -2.652834415435791
    6. ' aller' → logprob: -3.027834415435791
    7. 'par' → logprob: -3.152834415435791
    8. ' les' → logprob: -3.277834415435791
    9. ' minim' → logprob: -3.277834415435791
    10. 'atte' → logprob: -4.027834415435791

Token 216: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.010372377932071686
    2. '#' → logprob: -5.635372161865234
    3. 'er' → logprob: -6.260372161865234
    4. 'is' → logprob: -6.760372161865234
    5. '```' → logprob: -6.885372161865234
    6. 'izer' → logprob: -8.010372161865234
    7. 'al' → logprob: -8.010372161865234
    8. 'ize' → logprob: -8.760372161865234
    9. '_' → logprob: -8.760372161865234
    10. 'm' → logprob: -8.885372161865234

Token 217: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9215347170829773
    2. ' le' → logprob: -1.171534776687622
    3. ' l' → logprob: -1.921534776687622
    4. ' les' → logprob: -3.421534776687622
    5. 'le' → logprob: -3.546534776687622
    6. 'l' → logprob: -3.921534776687622
    7. '_' → logprob: -4.671534538269043
    8. 'la' → logprob: -4.671534538269043
    9. ' ' → logprob: -4.671534538269043
    10. 's' → logprob: -4.796534538269043

Token 218: ' nombre' (ID: 9733)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -1.0335768461227417
    2. ' temps' → logprob: -1.9085768461227417
    3. ' nombre' → logprob: -2.0335769653320312
    4. 'nombre' → logprob: -2.6585769653320312
    5. 'v' → logprob: -2.7835769653320312
    6. 's' → logprob: -2.9085769653320312
    7. ' confort' → logprob: -3.0335769653320312
    8. 'score' → logprob: -3.6585769653320312
    9. 'con' → logprob: -3.9085769653320312
    10. 'gain' → logprob: -4.158576965332031

Token 219: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6985222101211548
    2. ' des' → logprob: -1.3235222101211548
    3. ' d' → logprob: -1.6985222101211548
    4. '<|end|>' → logprob: -3.8235220909118652
    5. '_' → logprob: -4.573522090911865
    6. ' of' → logprob: -5.323522090911865
    7. ' ' → logprob: -5.698522090911865
    8. '_des' → logprob: -6.198522090911865
    9. 'des' → logprob: -6.323522090911865
    10. 'de' → logprob: -6.448522090911865

Token 220: ' stations' (ID: 26061)
  Prédit: ' stations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -1.231356143951416
    2. ' pass' → logprob: -2.106356143951416
    3. '\n' → logprob: -2.356356143951416
    4. 'stations' → logprob: -2.481356143951416
    5. ' traj' → logprob: -2.856356143951416
    6. ' lignes' → logprob: -2.981356143951416
    7. 'pass' → logprob: -3.231356143951416
    8. '\' → logprob: -4.168856143951416
    9. ' ar' → logprob: -4.293856143951416
    10. ' passages' → logprob: -4.418856143951416

Token 221: ' accessibles' (ID: 156723)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' T' (ID: 353)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0155260562896729
    2. 'la' → logprob: -1.8905260562896729
    3. 'l' → logprob: -2.140526056289673
    4. ' le' → logprob: -2.765526056289673
    5. ' la' → logprob: -2.765526056289673
    6. 'les' → logprob: -2.765526056289673
    7. 'une' → logprob: -3.140526056289673
    8. 'un' → logprob: -3.640526056289673
    9. ' l' → logprob: -4.015525817871094
    10. 'range' → logprob: -4.515525817871094

Token 224: ' minutes' (ID: 5438)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8484143614768982
    2. '#' → logprob: -0.9734143614768982
    3. ',' → logprob: -3.098414421081543
    4. ',
' → logprob: -3.473414421081543
    5. '<|end|>' → logprob: -4.098414421081543
    6. '.' → logprob: -4.348414421081543
    7. 'def' → logprob: -4.348414421081543
    8. ' 
' → logprob: -4.973414421081543
    9. '\n' → logprob: -5.223414421081543
    10. ' stations' → logprob: -5.223414421081543

Token 225: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3911549746990204
    2. '#' → logprob: -1.6411550045013428
    3. 'stations' → logprob: -2.7661550045013428
    4. 'DP' → logprob: -3.3911550045013428
    5. 'max' → logprob: -4.891154766082764
    6. 'accessible' → logprob: -5.516154766082764
    7. 'reachable' → logprob: -5.766154766082764
    8. 'def' → logprob: -5.891154766082764
    9. 'arr' → logprob: -6.016154766082764
    10. 'times' → logprob: -6.516154766082764

Token 226: '#
' (ID: 11240)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1004235744476318
    2. '
' → logprob: -1.6004235744476318
    3. ',' → logprob: -1.8504235744476318
    4. 'dp' → logprob: -2.975423574447632
    5. ' 
' → logprob: -3.350423574447632
    6. '.' → logprob: -3.475423574447632
    7. 'def' → logprob: -3.475423574447632
    8. 'max' → logprob: -3.975423574447632
    9. ',
' → logprob: -4.100423812866211
    10. 'A' → logprob: -4.475423812866211

Token 227: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.615272581577301
    2. '#' → logprob: -0.865272581577301
    3. 'max' → logprob: -4.365272521972656
    4. 'def' → logprob: -5.240272521972656
    5. 'stations' → logprob: -5.740272521972656
    6. ' 
' → logprob: -6.490272521972656
    7. 'DP' → logprob: -6.490272521972656
    8. 'possible' → logprob: -6.740272521972656
    9. ' stations' → logprob: -6.990272521972656
    10. 'distance' → logprob: -6.990272521972656

Token 228: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3141196668148041
    2. '#' → logprob: -1.4391196966171265
    3. 'DP' → logprob: -4.689119815826416
    4. 'max' → logprob: -5.064119815826416
    5. 'stations' → logprob: -5.189119815826416
    6. 'def' → logprob: -5.564119815826416
    7. 'reachable' → logprob: -6.689119815826416
    8. ' stations' → logprob: -7.439119815826416
    9. 'possible' → logprob: -7.564119815826416
    10. 'dist' → logprob: -7.564119815826416

Token 229: ' grap' (ID: 60955)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4811125993728638
    2. ' next' → logprob: -1.7311125993728638
    3. '#' → logprob: -1.8561125993728638
    4. ' rest' → logprob: -2.356112480163574
    5. 'dp' → logprob: -2.856112480163574
    6. ' code' → logprob: -3.106112480163574
    7. 'next' → logprob: -3.731112480163574
    8. ' remaining' → logprob: -3.981112480163574
    9. ' dp' → logprob: -4.106112480163574
    10. 'max' → logprob: -4.106112480163574

Token 230: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.830154299736023
    2. 'ph' → logprob: -1.455154299736023
    3. 'd' → logprob: -2.5801544189453125
    4. 'p' → logprob: -2.9551544189453125
    5. 'raph' → logprob: -3.3301544189453125
    6. 'aph' → logprob: -3.8301544189453125
    7. 'm' → logprob: -4.0801544189453125
    8. ' 
' → logprob: -4.2051544189453125
    9. ' ' → logprob: -4.4551544189453125
    10. 'n' → logprob: -4.5801544189453125

Token 231: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2116454690694809
    2. '<|end|>' → logprob: -2.3366453647613525
    3. '=' → logprob: -3.3366453647613525
    4. '#' → logprob: -3.3366453647613525
    5. ',' → logprob: -4.961645603179932
    6. ' des' → logprob: -6.086645603179932
    7. '.' → logprob: -6.086645603179932
    8. ' ' → logprob: -6.461645603179932
    9. '<|end|>' → logprob: -6.461645603179932
    10. ' is' → logprob: -6.586645603179932

Token 232: ' simple' (ID: 4705)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orient' → logprob: -1.188336730003357
    2. 'un' → logprob: -2.0633368492126465
    3. ' un' → logprob: -2.1883368492126465
    4. ' lin' → logprob: -2.5633368492126465
    5. 'lin' → logprob: -2.8133368492126465
    6. 'com' → logprob: -3.0633368492126465
    7. ' orient' → logprob: -3.4383368492126465
    8. 'une' → logprob: -3.8133368492126465
    9. ' complet' → logprob: -3.9383368492126465
    10. 'implicit' → logprob: -4.0633368492126465

Token 233: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' stations' (ID: 26061)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' num' (ID: 2269)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20152229070663452
    2. '=' → logprob: -2.2015223503112793
    3. ',' → logprob: -3.2015223503112793
    4. '<|end|>' → logprob: -5.076522350311279
    5. 's' → logprob: -5.701522350311279
    6. ')' → logprob: -5.951522350311279
    7. '1' → logprob: -6.076522350311279
    8. ' ' → logprob: -6.201522350311279
    9. ' des' → logprob: -6.451522350311279
    10. '_' → logprob: -6.951522350311279

Token 236: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.005341201089322567
    2. 'éro' → logprob: -5.505341053009033
    3. 'éros' → logprob: -6.755341053009033
    4. '#' → logprob: -10.630341529846191
    5. '__' → logprob: -11.005341529846191
    6. 'érique' → logprob: -11.255341529846191
    7. '=' → logprob: -11.255341529846191
    8. 'ériques' → logprob: -12.255341529846191
    9. 'è' → logprob: -12.380341529846191
    10. '_' → logprob: -12.380341529846191

Token 237: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.0006839605630375445
    2. 'r' → logprob: -7.375683784484863
    3. 'ro' → logprob: -11.125683784484863
    4. 't' → logprob: -11.375683784484863
    5. 'ros' → logprob: -11.625683784484863
    6. 'Rot' → logprob: -11.750683784484863
    7. ' rot' → logprob: -12.500683784484863
    8. 'rots' → logprob: -12.750683784484863
    9. '_rot' → logprob: -13.125683784484863
    10. 'rod' → logprob: -13.500683784484863

Token 238: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0182790607213974
    2. 'é' → logprob: -4.643279075622559
    3. 'és' → logprob: -5.393279075622559
    4. 'es' → logprob: -6.018279075622559
    5. ')' → logprob: -7.518279075622559
    6. '=' → logprob: -7.768279075622559
    7. 'ée' → logprob: -8.393279075622559
    8. ' ' → logprob: -9.143279075622559
    9. '```' → logprob: -10.268279075622559
    10. ',' → logprob: -10.643279075622559

Token 239: ' en' (ID: 469)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23825395107269287
    2. 'de' → logprob: -1.6132539510726929
    3. ' ' → logprob: -5.238254070281982
    4. '1' → logprob: -5.613254070281982
    5. 'from' → logprob: -6.113254070281982
    6. ',' → logprob: -7.738254070281982
    7. '```' → logprob: -8.113253593444824
    8. ' from' → logprob: -8.613253593444824
    9. 's' → logprob: -8.863253593444824
    10. ' ' → logprob: -9.113253593444824

Token 240: ' ordre' (ID: 103061)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04881308972835541
    2. 'range' → logprob: -3.6738131046295166
    3. ' ' → logprob: -5.2988128662109375
    4. '[' → logprob: -5.2988128662109375
    5. 'ordre' → logprob: -5.9238128662109375
    6. '0' → logprob: -5.9238128662109375
    7. 'chaine' → logprob: -6.6738128662109375
    8. 'contin' → logprob: -6.7988128662109375
    9. 'continu' → logprob: -6.9238128662109375
    10. 'une' → logprob: -7.1738128662109375

Token 241: ' cro' (ID: 11270)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.727963387966156
    2. ',' → logprob: -1.7279634475708008
    3. 's' → logprob: -2.102963447570801
    4. ' =' → logprob: -3.352963447570801
    5. '=' → logprob: -3.602963447570801
    6. ' ' → logprob: -3.977963447570801
    7. ' \' → logprob: -4.102963447570801
    8. '\' → logprob: -4.227963447570801
    9. '.' → logprob: -4.227963447570801
    10. ')' → logprob: -4.852963447570801

Token 242: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.43474578857421875
    2. 'ment' → logprob: -2.1847457885742188
    3. 'issante' → logprob: -2.1847457885742188
    4. 'd' → logprob: -3.6847457885742188
    5. 'issance' → logprob: -3.8097457885742188
    6. 'ce' → logprob: -4.309745788574219
    7. 'c' → logprob: -4.309745788574219
    8. 'ître' → logprob: -4.934745788574219
    9. 'issement' → logprob: -4.934745788574219
    10. '#' → logprob: -5.434745788574219

Token 243: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1778634786605835
    2. ':' → logprob: -1.6778634786605835
    3. '.' → logprob: -1.8028634786605835
    4. '<|end|>' → logprob: -2.177863597869873
    5. '\n' → logprob: -2.802863597869873
    6. '
' → logprob: -2.927863597869873
    7. '#' → logprob: -3.927863597869873
    8. ',
' → logprob: -3.927863597869873
    9. ' =' → logprob: -4.302863597869873
    10. '=' → logprob: -4.302863597869873

Token 244: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.098576545715332
    2. ' ' → logprob: -1.598576545715332
    3. '<|end|>' → logprob: -1.598576545715332
    4. ',' → logprob: -2.973576545715332
    5. '...' → logprob: -3.223576545715332
    6. '#' → logprob: -3.223576545715332
    7. ' )' → logprob: -3.348576545715332
    8. ' 
' → logprob: -3.973576545715332
    9. ' ,' → logprob: -4.723576545715332
    10. ' and' → logprob: -4.848576545715332

Token 245: ' voyages' (ID: 113716)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20599958300590515
    2. ' distances' → logprob: -2.8309996128082275
    3. 'distance' → logprob: -3.3309996128082275
    4. 'dist' → logprob: -3.8309996128082275
    5. ' #' → logprob: -4.205999374389648
    6. 'stations' → logprob: -4.580999374389648
    7. 'edges' → logprob: -4.705999374389648
    8. 'for' → logprob: -5.080999374389648
    9. '...' → logprob: -5.955999374389648
    10. 'temps' → logprob: -6.205999374389648

Token 246: ' toujours' (ID: 16867)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1491702795028687
    2. '_' → logprob: -1.5241702795028687
    3. ' between' → logprob: -1.7741702795028687
    4. ' entre' → logprob: -2.524170398712158
    5. 's' → logprob: -2.649170398712158
    6. ' ' → logprob: -3.024170398712158
    7. '_between' → logprob: -3.649170398712158
    8. '=' → logprob: -4.274170398712158
    9. ')' → logprob: -4.899170398712158
    10. '<|end|>' → logprob: -5.399170398712158

Token 247: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.8069177269935608
    2. 'entre' → logprob: -1.431917667388916
    3. 'possible' → logprob: -2.556917667388916
    4. ' entre' → logprob: -3.306917667388916
    5. ' possibles' → logprob: -3.431917667388916
    6. 'de' → logprob: -3.681917667388916
    7. 'en' → logprob: -3.806917667388916
    8. ' dans' → logprob: -3.931917667388916
    9. 's' → logprob: -4.556917667388916
    10. 'uni' → logprob: -4.556917667388916

Token 248: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.41968250274658203
    2. 'le' → logprob: -1.419682502746582
    3. 'une' → logprob: -3.294682502746582
    4. 'un' → logprob: -3.544682502746582
    5. ' l' → logprob: -4.294682502746582
    6. 'sens' → logprob: -4.669682502746582
    7. ' le' → logprob: -5.419682502746582
    8. 'la' → logprob: -5.544682502746582
    9. ' un' → logprob: -7.419682502746582
    10. ' une' → logprob: -7.669682502746582

Token 249: ' sens' (ID: 5050)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.059742506593465805
    2. ' sens' → logprob: -3.0597424507141113
    3. ' même' → logprob: -5.184742450714111
    4. 'm' → logprob: -5.434742450714111
    5. 'sent' → logprob: -8.05974292755127
    6. 'ordre' → logprob: -8.05974292755127
    7. 'same' → logprob: -9.18474292755127
    8. 'sen' → logprob: -9.43474292755127
    9. 'sense' → logprob: -9.43474292755127
    10. 's' → logprob: -9.55974292755127

Token 250: ' cro' (ID: 11270)
  Prédit: ' asc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' asc' → logprob: -0.6540461778640747
    2. ' cro' → logprob: -1.2790461778640747
    3. 'cro' → logprob: -1.9040461778640747
    4. 'asc' → logprob: -4.279046058654785
    5. ' des' → logprob: -4.654046058654785
    6. ' ' → logprob: -5.154046058654785
    7. ' de' → logprob: -5.154046058654785
    8. ' ascending' → logprob: -5.779046058654785
    9. ' d' → logprob: -6.154046058654785
    10. 'd' → logprob: -6.154046058654785

Token 251: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.001230826834216714
    2. 'issante' → logprob: -7.126230716705322
    3. '#' → logprob: -8.87623119354248
    4. 'issance' → logprob: -9.75123119354248
    5. 'iss' → logprob: -10.12623119354248
    6. 'ss' → logprob: -10.25123119354248
    7. '\' → logprob: -10.50123119354248
    8. '>' → logprob: -11.00123119354248
    9. 'issent' → logprob: -11.12623119354248
    10. 'i' → logprob: -11.12623119354248

Token 252: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41780829429626465
    2. '#' → logprob: -2.0428082942962646
    3. '.' → logprob: -2.5428082942962646
    4. ',
' → logprob: -3.0428082942962646
    5. 's' → logprob: -4.042808532714844
    6. ':' → logprob: -4.292808532714844
    7. ')' → logprob: -4.917808532714844
    8. '
' → logprob: -4.917808532714844
    9. '_' → logprob: -5.292808532714844
    10. '<|end|>' → logprob: -5.417808532714844

Token 253: ' stations' (ID: 26061)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8503020405769348
    2. 'l' → logprob: -2.10030198097229
    3. 'station' → logprob: -2.10030198097229
    4. 'la' → logprob: -2.10030198097229
    5. ' num' → logprob: -2.97530198097229
    6. ' station' → logprob: -3.22530198097229
    7. '1' → logprob: -3.47530198097229
    8. 's' → logprob: -4.475302219390869
    9. ' la' → logprob: -4.475302219390869
    10. ' ' → logprob: -4.600302219390869

Token 254: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.165568232536316
    2. '#' → logprob: -1.540568232536316
    3. ',' → logprob: -2.0405683517456055
    4. '\n' → logprob: -2.1655683517456055
    5. '<|end|>' → logprob: -2.2905683517456055
    6. '.' → logprob: -3.4155683517456055
    7. ',
' → logprob: -3.4155683517456055
    8. ' 
' → logprob: -4.7905683517456055
    9. '\' → logprob: -5.0405683517456055
    10. 'A' → logprob: -5.0405683517456055

Token 255: '#
' (ID: 11240)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15324854850769043
    2. '#' → logprob: -2.6532485485076904
    3. 'DP' → logprob: -3.0282485485076904
    4. 'stations' → logprob: -4.6532487869262695
    5. 'max' → logprob: -5.7782487869262695
    6. 'reachable' → logprob: -6.6532487869262695
    7. 'dist' → logprob: -6.7782487869262695
    8. 'distance' → logprob: -7.0282487869262695
    9. 'arr' → logprob: -7.0282487869262695
    10. 'D' → logprob: -7.0282487869262695

Token 256: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14298413693904877
    2. '#' → logprob: -2.51798415184021
    3. 'DP' → logprob: -3.51798415184021
    4. 'distance' → logprob: -5.142983913421631
    5. ' dp' → logprob: -5.767983913421631
    6. 'dist' → logprob: -6.267983913421631
    7. 'd' → logprob: -6.892983913421631
    8. ' stations' → logprob: -7.017983913421631
    9. 'stations' → logprob: -7.142983913421631
    10. ' DP' → logprob: -7.142983913421631

Token 257: ' Trans' (ID: 5515)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020976481959223747
    2. '#' → logprob: -4.645976543426514
    3. 'DP' → logprob: -5.145976543426514
    4. 'stations' → logprob: -6.645976543426514
    5. 'dist' → logprob: -6.895976543426514
    6. 'max' → logprob: -6.895976543426514
    7. 'distance' → logprob: -8.145976066589355
    8. 'def' → logprob: -8.270976066589355
    9. 'positions' → logprob: -8.645976066589355
    10. 'INF' → logprob: -9.020976066589355

Token 258: 'f' (ID: 69)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.36880525946617126
    2. 'it' → logprob: -1.4938052892684937
    3. 'ports' → logprob: -2.618805170059204
    4. 'ition' → logprob: -5.493805408477783
    5. 'itions' → logprob: -6.618805408477783
    6. 'actions' → logprob: -6.743805408477783
    7. '#' → logprob: -6.868805408477783
    8. 'mission' → logprob: -7.118805408477783
    9. '_' → logprob: -7.868805408477783
    10. 'action' → logprob: -8.243804931640625

Token 259: 'erts' (ID: 29860)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.10279031097888947
    2. 'er' → logprob: -3.227790355682373
    3. 'ort' → logprob: -3.477790355682373
    4. 'erts' → logprob: -3.852790355682373
    5. 'orts' → logprob: -5.727790355682373
    6. 'ers' → logprob: -7.102790355682373
    7. 'it' → logprob: -8.102789878845215
    8. 'fert' → logprob: -8.227789878845215
    9. ' ert' → logprob: -8.352789878845215
    10. 'port' → logprob: -9.102789878845215

Token 260: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023875050246715546
    2. '=' → logprob: -4.6488752365112305
    3. '<|end|>' → logprob: -5.0238752365112305
    4. ',' → logprob: -5.7738752365112305
    5. 's' → logprob: -6.5238752365112305
    6. '.' → logprob: -7.8988752365112305
    7. '<|end|>' → logprob: -8.02387523651123
    8. '#' → logprob: -8.27387523651123
    9. '_possible' → logprob: -8.27387523651123
    10. ':' → logprob: -8.39887523651123

Token 261: ' possibles' (ID: 97753)
  Prédit: ' possibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.06808226555585861
    2. ' possible' → logprob: -3.568082332611084
    3. ' autor' → logprob: -4.943082332611084
    4. ' toujours' → logprob: -5.193082332611084
    5. 'possible' → logprob: -5.443082332611084
    6. ' fréqu' → logprob: -6.068082332611084
    7. ' souvent' → logprob: -6.568082332611084
    8. ' effectu' → logprob: -6.568082332611084
    9. ' un' → logprob: -6.818082332611084
    10. ' interdit' → logprob: -7.193082332611084

Token 262: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.053755283355713
    2. '.' → logprob: -1.178755283355713
    3. ' =' → logprob: -1.678755283355713
    4. '=' → logprob: -2.803755283355713
    5. '#' → logprob: -3.803755283355713
    6. '<|end|>' → logprob: -4.178755283355713
    7. ',
' → logprob: -4.428755283355713
    8. '\n' → logprob: -4.553755283355713
    9. ' ,' → logprob: -5.053755283355713
    10. ':' → logprob: -5.178755283355713

Token 263: ' stations' (ID: 26061)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -1.260265588760376
    2. ' toute' → logprob: -1.635265588760376
    3. 'tout' → logprob: -2.135265588760376
    4. 'station' → logprob: -3.385265588760376
    5. ' toutes' → logprob: -3.635265588760376
    6. ' temps' → logprob: -3.760265588760376
    7. ' tout' → logprob: -3.885265588760376
    8. ' ' → logprob: -4.010265350341797
    9. ' gare' → logprob: -4.010265350341797
    10. 'any' → logprob: -4.010265350341797

Token 264: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.009717583656311
    2. ' où' → logprob: -1.634717583656311
    3. 'où' → logprob: -1.884717583656311
    4. '#' → logprob: -3.0097174644470215
    5. ' ,' → logprob: -3.2597174644470215
    6. '.' → logprob: -3.2597174644470215
    7. 's' → logprob: -3.3847174644470215
    8. ',
' → logprob: -4.2597174644470215
    9. ' suivantes' → logprob: -4.2597174644470215
    10. 'qui' → logprob: -5.3847174644470215

Token 265: ''arrêt' (ID: 186362)
  Prédit: ''arrêt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arrêt' → logprob: -0.0044843582436442375
    2. '’arrêt' → logprob: -6.379484176635742
    3. ''arr' → logprob: -6.629484176635742
    4. 'ar' → logprob: -7.754484176635742
    5. '```' → logprob: -8.254484176635742
    6. 'arr' → logprob: -8.504484176635742
    7. ' arrêt' → logprob: -8.754484176635742
    8. 'e' → logprob: -9.504484176635742
    9. ''ar' → logprob: -9.879484176635742
    10. 's' → logprob: -10.129484176635742

Token 266: ' communes' (ID: 93157)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1399790048599243
    2. '\n' → logprob: -1.5149790048599243
    3. '.' → logprob: -2.1399788856506348
    4. '<|end|>' → logprob: -2.2649788856506348
    5. ',' → logprob: -2.3899788856506348
    6. '
' → logprob: -2.7649788856506348
    7. '\' → logprob: -3.8899788856506348
    8. ':' → logprob: -4.639978885650635
    9. ',
' → logprob: -4.639978885650635
    10. ' ' → logprob: -4.764978885650635

Token 267: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.958453893661499
    2. '<|end|>' → logprob: -1.458453893661499
    3. '\n' → logprob: -2.458453893661499
    4. '#' → logprob: -2.583453893661499
    5. ',' → logprob: -2.708453893661499
    6. '.' → logprob: -3.333453893661499
    7. ' ' → logprob: -3.708453893661499
    8. ':' → logprob: -3.958453893661499
    9. ' 
' → logprob: -4.083454132080078
    10. ',
' → logprob: -4.333454132080078

Token 268: '#
' (ID: 11240)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2003885805606842
    2. '#' → logprob: -2.3253886699676514
    3. '
' → logprob: -3.8253886699676514
    4. ',
' → logprob: -4.575388431549072
    5. ' dp' → logprob: -4.575388431549072
    6. 'DP' → logprob: -5.075388431549072
    7. ' 
' → logprob: -5.075388431549072
    8. ',' → logprob: -5.325388431549072
    9. 'd' → logprob: -5.825388431549072
    10. 'def' → logprob: -6.200388431549072

Token 269: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6269323229789734
    2. 'dp' → logprob: -0.8769323229789734
    3. 'DP' → logprob: -4.126932144165039
    4. 'D' → logprob: -5.251932144165039
    5. 'd' → logprob: -5.501932144165039
    6. 'distance' → logprob: -5.501932144165039
    7. 'dist' → logprob: -6.001932144165039
    8. 'A' → logprob: -6.376932144165039
    9. 'import' → logprob: -6.501932144165039
    10. 'def' → logprob: -6.626932144165039

Token 270: ' Les' (ID: 7029)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011089558713138103
    2. '#' → logprob: -5.261089324951172
    3. 'DP' → logprob: -5.761089324951172
    4. 'dist' → logprob: -6.886089324951172
    5. 'stations' → logprob: -8.261089324951172
    6. 'max' → logprob: -8.386089324951172
    7. 'distance' → logprob: -8.636089324951172
    8. 'd' → logprob: -8.636089324951172
    9. 'express' → logprob: -8.886089324951172
    10. 'def' → logprob: -8.886089324951172

Token 271: ' trains' (ID: 46841)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3183797597885132
    2. ' stations' → logprob: -1.8183797597885132
    3. ' distances' → logprob: -1.9433797597885132
    4. ' #' → logprob: -2.0683798789978027
    5. ' temps' → logprob: -2.4433798789978027
    6. ' dp' → logprob: -3.0683798789978027
    7. 'dp' → logprob: -3.1933798789978027
    8. ' local' → logprob: -4.443379878997803
    9. ' times' → logprob: -4.943379878997803
    10. ' rest' → logprob: -5.068379878997803

Token 272: ' ont' (ID: 4930)
  Prédit: ' express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' express' → logprob: -0.45400962233543396
    2. ' locaux' → logprob: -2.329009532928467
    3. ' =' → logprob: -2.829009532928467
    4. ' local' → logprob: -2.954009532928467
    5. '_' → logprob: -3.204009532928467
    6. ' ' → logprob: -4.079009532928467
    7. '_local' → logprob: -4.079009532928467
    8. 'express' → logprob: -4.579009532928467
    9. 's' → logprob: -4.579009532928467
    10. '.' → logprob: -5.079009532928467

Token 273: ' temps' (ID: 11160)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.7159705758094788
    2. ' des' → logprob: -1.215970516204834
    3. ' trois' → logprob: -2.090970516204834
    4. 'un' → logprob: -3.840970516204834
    5. 'une' → logprob: -4.340970516204834
    6. ' un' → logprob: -4.590970516204834
    7. 'les' → logprob: -4.965970516204834
    8. 'diff' → logprob: -5.465970516204834
    9. ' les' → logprob: -5.715970516204834
    10. ' différents' → logprob: -5.715970516204834

Token 274: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1184252500534058
    2. '_de' → logprob: -1.4934252500534058
    3. ' de' → logprob: -1.4934252500534058
    4. 'de' → logprob: -2.4934253692626953
    5. '=' → logprob: -3.1184253692626953
    6. 's' → logprob: -3.6184253692626953
    7. ' =' → logprob: -3.8684253692626953
    8. '_d' → logprob: -4.743425369262695
    9. ' d' → logprob: -5.368425369262695
    10. '_tr' → logprob: -5.868425369262695

Token 275: ' parcours' (ID: 62625)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3671921491622925
    2. 'traj' → logprob: -1.3671921491622925
    3. 'voy' → logprob: -3.492192268371582
    4. ' trajet' → logprob: -4.117192268371582
    5. 'tra' → logprob: -5.867192268371582
    6. ' parcours' → logprob: -6.992192268371582
    7. 'station' → logprob: -7.742192268371582
    8. 'arr' → logprob: -8.117192268371582
    9. ' traj' → logprob: -8.367192268371582
    10. 'trav' → logprob: -9.117192268371582

Token 276: ' spécifiques' (ID: 110075)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6246643662452698
    2. ' =' → logprob: -1.374664306640625
    3. '=' → logprob: -2.374664306640625
    4. ',' → logprob: -3.124664306640625
    5. ' entre' → logprob: -3.999664306640625
    6. 's' → logprob: -4.499664306640625
    7. ' ' → logprob: -4.874664306640625
    8. ' de' → logprob: -4.999664306640625
    9. ' des' → logprob: -5.124664306640625
    10. ':' → logprob: -5.749664306640625

Token 277: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13912278413772583
    2. '=' → logprob: -3.139122724533081
    3. '.' → logprob: -3.889122724533081
    4. '_' → logprob: -3.889122724533081
    5. ')' → logprob: -4.26412296295166
    6. ',
' → logprob: -4.76412296295166
    7. '#' → logprob: -5.38912296295166
    8. ':' → logprob: -6.01412296295166
    9. ' =' → logprob: -6.01412296295166
    10. 'A' → logprob: -6.13912296295166

Token 278: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5668890476226807
    2. ' segment' → logprob: -1.5668890476226807
    3. ' km' → logprob: -2.8168890476226807
    4. ' station' → logprob: -3.3168890476226807
    5. ' trajet' → logprob: -3.4418890476226807
    6. 'station' → logprob: -3.9418890476226807
    7. 'km' → logprob: -4.441888809204102
    8. 'kil' → logprob: -4.941888809204102
    9. ' unité' → logprob: -5.066888809204102
    10. 'un' → logprob: -5.316888809204102

Token 279: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8289027810096741
    2. '
' → logprob: -1.7039027214050293
    3. ',
' → logprob: -2.5789027214050293
    4. '#' → logprob: -2.5789027214050293
    5. '_' → logprob: -3.3289027214050293
    6. '

' → logprob: -3.9539027214050293
    7. '\' → logprob: -3.9539027214050293
    8. '\n' → logprob: -4.078902721405029
    9. ' ' → logprob: -4.328902721405029
    10. 's' → logprob: -4.328902721405029

Token 280: '#' (ID: 2)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.0088740587234497
    2. 'A' → logprob: -2.38387393951416
    3. ' ' → logprob: -2.63387393951416
    4. ')' → logprob: -2.88387393951416
    5. '#' → logprob: -2.88387393951416
    6. ',' → logprob: -3.13387393951416
    7. ' express' → logprob: -3.25887393951416
    8. ' #' → logprob: -3.38387393951416
    9. ' )' → logprob: -3.63387393951416
    10. ' for' → logprob: -4.00887393951416

Token 281: ' local' (ID: 2698)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.433453768491745
    2. ' A' → logprob: -2.5584537982940674
    3. 'A' → logprob: -3.1834537982940674
    4. ' )' → logprob: -3.5584537982940674
    5. ')' → logprob: -3.6834537982940674
    6. ' =' → logprob: -4.058453559875488
    7. 'def' → logprob: -4.183453559875488
    8. '#' → logprob: -4.308453559875488
    9. ' for' → logprob: -4.308453559875488
    10. ' #' → logprob: -4.308453559875488

Token 282: ':' (ID: 25)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7255518436431885
    2. ',' → logprob: -1.1005518436431885
    3. ' =' → logprob: -2.1005518436431885
    4. '_local' → logprob: -4.600551605224609
    5. ' ,' → logprob: -4.725551605224609
    6. ' ' → logprob: -4.975551605224609
    7. 's' → logprob: -5.975551605224609
    8. '_times' → logprob: -5.975551605224609
    9. '_time' → logprob: -6.100551605224609
    10. ')' → logprob: -6.100551605224609

Token 283: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9632104635238647
    2. 'C' → logprob: -0.9632104635238647
    3. '1' → logprob: -2.2132105827331543
    4. '[' → logprob: -3.3382105827331543
    5. ' A' → logprob: -3.9632105827331543
    6. ' ' → logprob: -4.338210582733154
    7. ' C' → logprob: -4.463210582733154
    8. ' [' → logprob: -4.463210582733154
    9. 'B' → logprob: -4.838210582733154
    10. '[A' → logprob: -5.463210582733154

Token 284: ' minutes' (ID: 5438)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41129952669143677
    2. '+' → logprob: -2.286299467086792
    3. ' +' → logprob: -2.661299467086792
    4. ',
' → logprob: -2.911299467086792
    5. ' ,' → logprob: -3.036299467086792
    6. ')' → logprob: -3.286299467086792
    7. ' ,
' → logprob: -4.411299705505371
    8. '
' → logprob: -5.786299705505371
    9. ' )' → logprob: -5.786299705505371
    10. ' ' → logprob: -6.911299705505371

Token 285: ' /' (ID: 820)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.267042875289917
    2. '+' → logprob: -2.517042875289917
    3. '<|end|>' → logprob: -2.892042875289917
    4. ',
' → logprob: -3.142042875289917
    5. ' +' → logprob: -3.767042875289917
    6. ' ,' → logprob: -4.017043113708496
    7. ')' → logprob: -5.767043113708496
    8. ' ,
' → logprob: -6.017043113708496
    9. ' ' → logprob: -6.142043113708496
    10. '
' → logprob: -6.267043113708496

Token 286: ' segment' (ID: 14806)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5458711981773376
    2. 'station' → logprob: -2.1708712577819824
    3. ' ' → logprob: -2.5458712577819824
    4. ' ' → logprob: -3.1708712577819824
    5. '<|end|>' → logprob: -3.2958712577819824
    6. 'segment' → logprob: -3.5458712577819824
    7. ' )' → logprob: -3.9208712577819824
    8. ')' → logprob: -4.295871257781982
    9. 'distance' → logprob: -4.545871257781982
    10. ',' → logprob: -4.670871257781982

Token 287: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0829634964466095
    2. '<|end|>' → logprob: -3.582963466644287
    3. ',
' → logprob: -3.707963466644287
    4. ')' → logprob: -4.957963466644287
    5. '#' → logprob: -5.582963466644287
    6. ' ,' → logprob: -5.707963466644287
    7. 'local' → logprob: -6.457963466644287
    8. '.' → logprob: -6.457963466644287
    9. '\n' → logprob: -6.832963466644287
    10. '+' → logprob: -6.957963466644287

Token 288: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10782580077648163
    2. ',
' → logprob: -3.107825756072998
    3. ' ,' → logprob: -4.107825756072998
    4. ')' → logprob: -4.607825756072998
    5. 'local' → logprob: -4.732825756072998
    6. ' local' → logprob: -4.857825756072998
    7. '#' → logprob: -5.107825756072998
    8. '
' → logprob: -6.732825756072998
    9. ' ,
' → logprob: -6.857825756072998
    10. ' sem' → logprob: -7.357825756072998

Token 289: ' express' (ID: 6101)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -1.315098524093628
    2. ' express' → logprob: -1.440098524093628
    3. ' sem' → logprob: -1.565098524093628
    4. 'express' → logprob: -1.690098524093628
    5. 'semi' → logprob: -2.690098524093628
    6. ' semi' → logprob: -3.565098524093628
    7. ' expr' → logprob: -7.565098762512207
    8. 'expr' → logprob: -7.690098762512207
    9. 's' → logprob: -7.690098762512207
    10. ' expres' → logprob: -7.815098762512207

Token 290: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33535394072532654
    2. ' :' → logprob: -1.460353970527649
    3. ',' → logprob: -3.3353538513183594
    4. ' ,' → logprob: -4.710353851318359
    5. ' ' → logprob: -5.335353851318359
    6. ' /' → logprob: -6.835353851318359
    7. ' =' → logprob: -7.710353851318359
    8. ' +' → logprob: -7.960353851318359
    9. ' *' → logprob: -8.08535385131836
    10. ' ' → logprob: -8.71035385131836

Token 291: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.43063509464263916
    2. 'B' → logprob: -1.0556350946426392
    3. ' C' → logprob: -6.80563497543335
    4. 'C' → logprob: -7.18063497543335
    5. ' ' → logprob: -9.930635452270508
    6. ' A' → logprob: -12.555635452270508
    7. 'A' → logprob: -12.555635452270508
    8. '0' → logprob: -13.055635452270508
    9. '1' → logprob: -13.430635452270508
    10. '	B' → logprob: -13.930635452270508

Token 292: ' minutes' (ID: 5438)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.06783078610897064
    2. ' minutes' → logprob: -3.317830801010132
    3. '<|end|>' → logprob: -4.692830562591553
    4. ' ' → logprob: -4.942830562591553
    5. ' ' → logprob: -5.567830562591553
    6. '/' → logprob: -5.567830562591553
    7. ' )' → logprob: -6.317830562591553
    8. ' ,' → logprob: -6.817830562591553
    9. ')' → logprob: -7.442830562591553
    10. 'minutes' → logprob: -7.567830562591553

Token 293: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5573121905326843
    2. '/' → logprob: -1.432312250137329
    3. '<|end|>' → logprob: -1.932312250137329
    4. ')' → logprob: -4.30731201171875
    5. ' +' → logprob: -4.80731201171875
    6. ',' → logprob: -4.93231201171875
    7. '<|end|>' → logprob: -5.80731201171875
    8. '+' → logprob: -6.18231201171875
    9. '#' → logprob: -6.18231201171875
    10. ' ,' → logprob: -6.80731201171875

Token 294: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.3485424518585205
    2. ' segment' → logprob: -1.2235424518585205
    3. '(segment' → logprob: -9.848542213439941
    4. 'space' → logprob: -11.473542213439941
    5. 'seg' → logprob: -11.848542213439941
    6. '1' → logprob: -12.223542213439941
    7. ' ' → logprob: -12.473542213439941
    8. '_segment' → logprob: -12.848542213439941
    9. ' ' → logprob: -12.848542213439941
    10. '```' → logprob: -13.223542213439941

Token 295: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8934587836265564
    2. 'C' → logprob: -1.1434588432312012
    3. '<|end|>' → logprob: -2.768458843231201
    4. 'local' → logprob: -2.893458843231201
    5. ',' → logprob: -3.143458843231201
    6. ')' → logprob: -3.393458843231201
    7. '+' → logprob: -3.768458843231201
    8. ' local' → logprob: -4.643458843231201
    9. ' C' → logprob: -5.018458843231201
    10. ' ' → logprob: -5.393458843231201

Token 296: '#' (ID: 2)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.21248354017734528
    2. '#' → logprob: -3.2124836444854736
    3. 'local' → logprob: -3.2124836444854736
    4. ' C' → logprob: -3.3374836444854736
    5. 'express' → logprob: -4.3374834060668945
    6. ' local' → logprob: -4.3374834060668945
    7. ' express' → logprob: -4.4624834060668945
    8. ',' → logprob: -4.7124834060668945
    9. ' =' → logprob: -5.0874834060668945
    10. ' #' → logprob: -5.7124834060668945

Token 297: ' sem' (ID: 2743)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -1.1921489238739014
    2. 'C' → logprob: -1.3171489238739014
    3. ' local' → logprob: -1.9421489238739014
    4. ' express' → logprob: -2.1921489238739014
    5. ' C' → logprob: -2.4421489238739014
    6. 'express' → logprob: -3.0671489238739014
    7. ' sem' → logprob: -4.3171491622924805
    8. '#' → logprob: -4.9421491622924805
    9. 'sem' → logprob: -4.9421491622924805
    10. 'segment' → logprob: -6.6921491622924805

Token 298: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.23695820569992065
    2. 'express' → logprob: -1.8619582653045654
    3. 'i' → logprob: -3.8619582653045654
    4. 'ip' → logprob: -4.111958026885986
    5. 'iex' → logprob: -4.236958026885986
    6. ' express' → logprob: -7.236958026885986
    7. 'local' → logprob: -7.611958026885986
    8. 'icolon' → logprob: -8.111958503723145
    9. 'ipr' → logprob: -8.111958503723145
    10. 'is' → logprob: -8.611958503723145

Token 299: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03573650121688843
    2. ' :' → logprob: -3.535736560821533
    3. ' =' → logprob: -5.285736560821533
    4. '=' → logprob: -7.910736560821533
    5. ' ' → logprob: -8.535736083984375
    6. ',' → logprob: -8.785736083984375
    7. '<|end|>' → logprob: -9.160736083984375
    8. '*' → logprob: -11.035736083984375
    9. ' *' → logprob: -11.660736083984375
    10. ' ,' → logprob: -11.785736083984375

Token 300: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.14272290468215942
    2. 'C' → logprob: -2.0177228450775146
    3. ' ' → logprob: -10.142723083496094
    4. ' A' → logprob: -12.392723083496094
    5. 'A' → logprob: -13.642723083496094
    6. '	C' → logprob: -14.017723083496094
    7. ' ' → logprob: -14.142723083496094
    8. ' (' → logprob: -14.517723083496094
    9. '_C' → logprob: -15.392723083496094
    10. '(C' → logprob: -16.017723083496094

Token 301: ' minutes' (ID: 5438)
  Prédit: ' minutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minutes' → logprob: -0.1734142154455185
    2. 'minutes' → logprob: -2.9234142303466797
    3. '<|end|>' → logprob: -3.4234142303466797
    4. ' ' → logprob: -3.9234142303466797
    5. ' /' → logprob: -4.17341423034668
    6. ' )' → logprob: -4.17341423034668
    7. '_minutes' → logprob: -5.04841423034668
    8. ')' → logprob: -5.67341423034668
    9. ' ' → logprob: -5.92341423034668
    10. '(minutes' → logprob: -6.17341423034668

Token 302: ' /' (ID: 820)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7413259148597717
    2. '
' → logprob: -1.241325855255127
    3. '\n' → logprob: -2.741325855255127
    4. ',' → logprob: -3.491325855255127
    5. ',
' → logprob: -3.741325855255127
    6. ')' → logprob: -3.866325855255127
    7. '<|end|>' → logprob: -4.491325855255127
    8. '

' → logprob: -4.491325855255127
    9. '\' → logprob: -4.616325855255127
    10. 'def' → logprob: -4.866325855255127

Token 303: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.029767265543341637
    2. ' segment' → logprob: -3.5297672748565674
    3. '1' → logprob: -12.154767036437988
    4. 'seg' → logprob: -12.404767036437988
    5. '(segment' → logprob: -12.779767036437988
    6. ' ' → logprob: -13.529767036437988
    7. '_segment' → logprob: -13.654767036437988
    8. '.segment' → logprob: -14.154767036437988
    9. ' ' → logprob: -14.279767036437988
    10. 'token' → logprob: -16.279767990112305

Token 304: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3566044569015503
    2. '#' → logprob: -1.4816044569015503
    3. 'stations' → logprob: -3.85660457611084
    4. 'DP' → logprob: -4.48160457611084
    5. 'def' → logprob: -4.73160457611084
    6. 'S' → logprob: -5.48160457611084
    7. '
' → logprob: -5.85660457611084
    8. 'dist' → logprob: -6.35660457611084
    9. 'segments' → logprob: -6.48160457611084
    10. ' stations' → logprob: -6.48160457611084

Token 305: '#
' (ID: 11240)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0759487971663475
    2. '#' → logprob: -2.950948715209961
    3. 'DP' → logprob: -4.700948715209961
    4. 'stations' → logprob: -5.200948715209961
    5. 'def' → logprob: -7.075948715209961
    6. 'dist' → logprob: -7.450948715209961
    7. ' stations' → logprob: -7.450948715209961
    8. 'distance' → logprob: -7.450948715209961
    9. 'segments' → logprob: -7.450948715209961
    10. 'positions' → logprob: -7.825948715209961

Token 306: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06639847159385681
    2. '#' → logprob: -3.1913983821868896
    3. 'DP' → logprob: -4.941398620605469
    4. 'def' → logprob: -5.191398620605469
    5. 'stations' → logprob: -6.191398620605469
    6. 'dist' → logprob: -6.441398620605469
    7. 'distance' → logprob: -6.691398620605469
    8. 'positions' → logprob: -7.316398620605469
    9. 'for' → logprob: -7.566398620605469
    10. 'express' → logprob: -8.316398620605469

Token 307: ' Trou' (ID: 58947)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008516466245055199
    2. 'DP' → logprob: -5.258516311645508
    3. '#' → logprob: -5.883516311645508
    4. 'stations' → logprob: -9.008516311645508
    5. 'def' → logprob: -9.133516311645508
    6. 'positions' → logprob: -10.508516311645508
    7. ' dp' → logprob: -10.633516311645508
    8. 'dist' → logprob: -10.633516311645508
    9. 'D' → logprob: -11.008516311645508
    10. 'distance' → logprob: -11.258516311645508

Token 308: 'ver' (ID: 445)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8639075756072998
    2. 'x' → logprob: -2.2389075756073
    3. 'r' → logprob: -2.7389075756073
    4. ' #' → logprob: -2.8639075756073
    5. 'def' → logprob: -2.9889075756073
    6. 'p' → logprob: -3.6139075756073
    7. 't' → logprob: -4.113907814025879
    8. 've' → logprob: -4.238907814025879
    9. 'er' → logprob: -4.238907814025879
    10. 'v' → logprob: -4.238907814025879

Token 309: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3160870671272278
    2. 'la' → logprob: -2.191087007522583
    3. 'def' → logprob: -3.316087007522583
    4. 'une' → logprob: -3.816087007522583
    5. 'le' → logprob: -3.941087007522583
    6. ' le' → logprob: -4.066087245941162
    7. '#' → logprob: -4.316087245941162
    8. ' une' → logprob: -4.441087245941162
    9. ' l' → logprob: -4.691087245941162
    10. '_' → logprob: -4.816087245941162

Token 310: ''ensemble' (ID: 79341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.570107340812683
    2. ' ' → logprob: -1.570107340812683
    3. '#' → logprob: -2.3201074600219727
    4. 'def' → logprob: -2.6951074600219727
    5. ' #' → logprob: -2.6951074600219727
    6. ' code' → logprob: -3.1951074600219727
    7. ' def' → logprob: -3.4451074600219727
    8. '\n' → logprob: -3.5701074600219727
    9. '

' → logprob: -3.9451074600219727
    10. ' ' → logprob: -3.9451074600219727

Token 311: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5740901231765747
    2. ' des' → logprob: -1.4490901231765747
    3. '<|end|>' → logprob: -2.449090003967285
    4. ' ' → logprob: -2.574090003967285
    5. '_des' → logprob: -4.699090003967285
    6. '#' → logprob: -5.324090003967285
    7. ' de' → logprob: -5.324090003967285
    8. ' _' → logprob: -5.574090003967285
    9. 'des' → logprob: -5.824090003967285
    10. ')' → logprob: -5.949090003967285

Token 312: ' arr' (ID: 1724)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.6113584637641907
    2. ' stations' → logprob: -0.9863584637641907
    3. ' arr' → logprob: -3.236358404159546
    4. 'arr' → logprob: -3.611358404159546
    5. ' prochaines' → logprob: -5.736358642578125
    6. 'K' → logprob: -6.111358642578125
    7. ' K' → logprob: -6.236358642578125
    8. ' stops' → logprob: -6.611358642578125
    9. 'st' → logprob: -6.861358642578125
    10. ' prochains' → logprob: -6.986358642578125

Token 313: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00016897499153856188
    2. 'êt' → logprob: -9.125168800354004
    3. 'ê' → logprob: -10.000168800354004
    4. '#' → logprob: -12.500168800354004
    5. 'êtes' → logprob: -12.625168800354004
    6. '^' → logprob: -12.625168800354004
    7. 'ets' → logprob: -13.375168800354004
    8. 'ôts' → logprob: -14.000168800354004
    9. '[' → logprob: -14.875168800354004
    10. 'ë' → logprob: -15.125168800354004

Token 314: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.672829508781433
    2. ':' → logprob: -1.672829508781433
    3. '<|end|>' → logprob: -1.672829508781433
    4. ',' → logprob: -2.1728296279907227
    5. 's' → logprob: -2.7978296279907227
    6. '#' → logprob: -2.7978296279907227
    7. '_' → logprob: -2.9228296279907227
    8. ' ' → logprob: -3.4228296279907227
    9. 'S' → logprob: -3.5478296279907227
    10. ' =' → logprob: -4.047829627990723

Token 315: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.351413369178772
    2. 'semi' → logprob: -1.851413369178772
    3. ' sem' → logprob: -2.3514132499694824
    4. ' semi' → logprob: -3.2264132499694824
    5. 's' → logprob: -6.726413249969482
    6. ' train' → logprob: -7.226413249969482
    7. '#' → logprob: -7.913913249969482
    8. 'train' → logprob: -8.10141372680664
    9. 'semin' → logprob: -8.28891372680664
    10. 'se' → logprob: -8.53891372680664

Token 316: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.24882178008556366
    2. 'pexpr' → logprob: -2.49882173538208
    3. 'express' → logprob: -3.37382173538208
    4. 'e' → logprob: -4.87382173538208
    5. 'iex' → logprob: -4.87382173538208
    6. 'ex' → logprob: -4.87382173538208
    7. 'ip' → logprob: -5.18632173538208
    8. '_' → logprob: -5.24882173538208
    9. 'i' → logprob: -5.62382173538208
    10. 'm' → logprob: -5.74882173538208

Token 317: ' implique' (ID: 168269)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5171369314193726
    2. 'S' → logprob: -1.7671369314193726
    3. 'def' → logprob: -2.892137050628662
    4. '_' → logprob: -3.392137050628662
    5. 'stations' → logprob: -3.642137050628662
    6. ' stations' → logprob: -3.767137050628662
    7. ',' → logprob: -4.142137050628662
    8. ':' → logprob: -4.767137050628662
    9. 'dp' → logprob: -4.767137050628662
    10. '
' → logprob: -4.767137050628662

Token 318: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6550554633140564
    2. ' de' → logprob: -1.0300555229187012
    3. 'd' → logprob: -2.780055522918701
    4. ' d' → logprob: -3.405055522918701
    5. 'une' → logprob: -4.655055522918701
    6. ' une' → logprob: -5.530055522918701
    7. 'à' → logprob: -5.780055522918701
    8. '#' → logprob: -6.280055522918701
    9. 'un' → logprob: -6.280055522918701
    10. '...' → logprob: -6.530055522918701

Token 319: ' choisir' (ID: 47004)
  Prédit: ' choisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.6672075986862183
    2. 'min' → logprob: -1.0422075986862183
    3. 'cho' → logprob: -2.417207717895508
    4. 'tr' → logprob: -4.792207717895508
    5. 'import' → logprob: -4.792207717895508
    6. 'contin' → logprob: -5.292207717895508
    7. ' minim' → logprob: -5.792207717895508
    8. 'placer' → logprob: -5.917207717895508
    9. ' compléter' → logprob: -5.917207717895508
    10. ' trouver' → logprob: -6.417207717895508

Token 320: ' (' (ID: 350)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5316721796989441
    2. 'K' → logprob: -1.2816722393035889
    3. ' les' → logprob: -3.281672239303589
    4. '<|end|>' → logprob: -3.781672239303589
    5. 'les' → logprob: -3.906672239303589
    6. 'le' → logprob: -4.03167200088501
    7. ' des' → logprob: -4.78167200088501
    8. 'exact' → logprob: -4.90667200088501
    9. 'des' → logprob: -5.90667200088501
    10. ' la' → logprob: -6.03167200088501

Token 321: 'K' (ID: 42)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.10358313471078873
    2. 'K' → logprob: -2.4785830974578857
    3. ')' → logprob: -5.228583335876465
    4. ' les' → logprob: -5.853583335876465
    5. ' N' → logprob: -6.228583335876465
    6. ' ' → logprob: -6.978583335876465
    7. ' M' → logprob: -7.228583335876465
    8. 'les' → logprob: -7.728583335876465
    9. ' )' → logprob: -7.728583335876465
    10. 'N' → logprob: -7.853583335876465

Token 322: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9163616895675659
    2. ')' → logprob: -1.541361689567566
    3. ' )' → logprob: -1.541361689567566
    4. '-' → logprob: -1.916361689567566
    5. '+' → logprob: -4.1663618087768555
    6. ' +' → logprob: -5.4163618087768555
    7. ' ' → logprob: -6.4163618087768555
    8. ' stations' → logprob: -7.1663618087768555
    9. ',' → logprob: -7.5413618087768555
    10. '-)' → logprob: -8.166361808776855

Token 323: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5232896208763123
    2. ' M' → logprob: -0.8982896208763123
    3. ' len' → logprob: -9.523289680480957
    4. 'len' → logprob: -9.523289680480957
    5. '(M' → logprob: -12.148289680480957
    6. ' (' → logprob: -12.398289680480957
    7. ')' → logprob: -12.523289680480957
    8. ' ' → logprob: -13.148289680480957
    9. '(len' → logprob: -13.648289680480957
    10. 'import' → logprob: -14.085789680480957

Token 324: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048749614506959915
    2. ' )' → logprob: -3.0487496852874756
    3. '+' → logprob: -8.923749923706055
    4. ' +' → logprob: -11.798749923706055
    5. ' ' → logprob: -12.173749923706055
    6. ' stations' → logprob: -12.423749923706055
    7. ' ' → logprob: -12.673749923706055
    8. '-' → logprob: -12.923749923706055
    9. ')#' → logprob: -13.548749923706055
    10. ' -' → logprob: -13.798749923706055

Token 325: ' stations' (ID: 26061)
  Prédit: ' stations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.16033023595809937
    2. 'stations' → logprob: -2.035330295562744
    3. '<|end|>' → logprob: -5.160330295562744
    4. ' espaces' → logprob: -6.035330295562744
    5. ' ' → logprob: -6.285330295562744
    6. ' des' → logprob: -6.660330295562744
    7. ' ' → logprob: -6.660330295562744
    8. 'arr' → logprob: -6.910330295562744
    9. ' arr' → logprob: -7.410330295562744
    10. ')' → logprob: -7.410330295562744

Token 326: ' supplémentaires' (ID: 99346)
  Prédit: ' supplémentaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.2854505181312561
    2. ',' → logprob: -2.1604504585266113
    3. '<|end|>' → logprob: -3.0354504585266113
    4. ' parmi' → logprob: -4.035450458526611
    5. ' supplémentaire' → logprob: -5.035450458526611
    6. 'supp' → logprob: -5.035450458526611
    7. ' ' → logprob: -5.035450458526611
    8. ')' → logprob: -5.410450458526611
    9. 'not' → logprob: -5.410450458526611
    10. ' entre' → logprob: -5.535450458526611

Token 327: ' 
' (ID: 793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.324312299489975
    2. '<|end|>' → logprob: -1.6993123292922974
    3. '.' → logprob: -3.699312210083008
    4. ' supplémentaires' → logprob: -4.449312210083008
    5. ' ' → logprob: -4.824312210083008
    6. ' afin' → logprob: -4.824312210083008
    7. ' parmi' → logprob: -4.949312210083008
    8. ' pour' → logprob: -5.199312210083008
    9. ')' → logprob: -5.449312210083008
    10. 'pour' → logprob: -5.699312210083008

Token 328: '#' (ID: 2)
  Prédit: ' parmi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parmi' → logprob: -0.5024218559265137
    2. ',' → logprob: -1.8774218559265137
    3. ' par' → logprob: -2.3774218559265137
    4. 'par' → logprob: -2.7524218559265137
    5. ' supplémentaires' → logprob: -3.3774218559265137
    6. ' à' → logprob: -4.002421855926514
    7. ')' → logprob: -5.002421855926514
    8. ' pour' → logprob: -5.877421855926514
    9. 'import' → logprob: -6.002421855926514
    10. 'pour' → logprob: -6.127421855926514

Token 329: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09563436359167099
    2. ' parmi' → logprob: -3.5956344604492188
    3. '.' → logprob: -3.8456344604492188
    4. ' afin' → logprob: -4.970634460449219
    5. ' pour' → logprob: -5.095634460449219
    6. ' supplémentaires' → logprob: -5.220634460449219
    7. ')' → logprob: -5.720634460449219
    8. 'pour' → logprob: -5.720634460449219
    9. ' par' → logprob: -6.095634460449219
    10. ' ' → logprob: -6.220634460449219

Token 330: ' les' (ID: 1341)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6798391938209534
    2. 'les' → logprob: -1.0548391342163086
    3. '1' → logprob: -2.6798391342163086
    4. ' les' → logprob: -2.9298391342163086
    5. ' S' → logprob: -5.179839134216309
    6. '0' → logprob: -5.554839134216309
    7. 'the' → logprob: -5.679839134216309
    8. 'la' → logprob: -6.054839134216309
    9. 'le' → logprob: -6.304839134216309
    10. ' ' → logprob: -6.304839134216309

Token 331: ' arr' (ID: 1724)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.2428877353668213
    2. 'S' → logprob: -2.1178877353668213
    3. 'arr' → logprob: -3.3678877353668213
    4. ' stations' → logprob: -3.9928877353668213
    5. ' S' → logprob: -4.617887496948242
    6. '0' → logprob: -4.617887496948242
    7. '1' → logprob: -4.867887496948242
    8. 'express' → logprob: -5.117887496948242
    9. ' ' → logprob: -6.117887496948242
    10. ' arr' → logprob: -6.367887496948242

Token 332: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.0028602739330381155
    2. 'êtes' → logprob: -6.002860069274902
    3. 'êt' → logprob: -8.877860069274902
    4. 'ets' → logprob: -9.252860069274902
    5. 'ts' → logprob: -10.002860069274902
    6. '#' → logprob: -11.502860069274902
    7. 'g' → logprob: -11.502860069274902
    8. '^' → logprob: -11.627860069274902
    9. 'ê' → logprob: -11.752860069274902
    10. 't' → logprob: -12.002860069274902

Token 333: ' express' (ID: 6101)
  Prédit: '_rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rest' → logprob: -1.0552457571029663
    2. 'rest' → logprob: -1.5552457571029663
    3. '_' → logprob: -1.6802457571029663
    4. '_s' → logprob: -2.930245876312256
    5. ' rest' → logprob: -2.930245876312256
    6. ',' → logprob: -3.555245876312256
    7. 's' → logprob: -3.555245876312256
    8. 'supp' → logprob: -3.930245876312256
    9. ' suivants' → logprob: -4.805245876312256
    10. ' _' → logprob: -4.805245876312256

Token 334: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' que' (ID: 661)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.028043534606695175
    2. ' minim' → logprob: -4.403043746948242
    3. ' compléter' → logprob: -5.153043746948242
    4. 'com' → logprob: -6.153043746948242
    5. 'max' → logprob: -6.403043746948242
    6. 'optim' → logprob: -6.528043746948242
    7. 'compl' → logprob: -6.653043746948242
    8. ' maxim' → logprob: -7.278043746948242
    9. 'augment' → logprob: -7.903043746948242
    10. ' optimiser' → logprob: -8.028043746948242

Token 336: ' la' (ID: 557)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.4592442512512207
    2. ' chaque' → logprob: -1.4592442512512207
    3. ' les' → logprob: -2.3342442512512207
    4. ' maxim' → logprob: -2.4592442512512207
    5. 'S' → logprob: -2.5842442512512207
    6. ' le' → logprob: -3.2092442512512207
    7. 'min' → logprob: -3.3342442512512207
    8. ' la' → logprob: -3.3342442512512207
    9. ' couvrir' → logprob: -3.3342442512512207
    10. 'max' → logprob: -3.5842442512512207

Token 337: ' durée' (ID: 57595)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.7640984058380127
    2. 'sem' → logprob: -1.3890984058380127
    3. ' sem' → logprob: -1.7640984058380127
    4. ' temps' → logprob: -3.2640984058380127
    5. 'temps' → logprob: -3.5140984058380127
    6. ' trajet' → logprob: -5.139098167419434
    7. 'code' → logprob: -5.264098167419434
    8. ' solution' → logprob: -5.639098167419434
    9. 's' → logprob: -5.639098167419434
    10. ' #' → logprob: -5.764098167419434

Token 338: ' la' (ID: 557)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.5678712129592896
    2. ' d' → logprob: -1.6928712129592896
    3. ' maximale' → logprob: -1.8178712129592896
    4. ' de' → logprob: -2.19287109375
    5. ' soit' → logprob: -2.69287109375
    6. ' totale' → logprob: -2.69287109375
    7. ' du' → logprob: -3.06787109375
    8. ' optimale' → logprob: -3.31787109375
    9. 'max' → logprob: -3.44287109375
    10. ' max' → logprob: -3.69287109375

Token 339: ' plus' (ID: 2932)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.3284897804260254
    2. 's' → logprob: -2.5784897804260254
    3. '#' → logprob: -3.4534897804260254
    4. 'imité' → logprob: -3.8284897804260254
    5. 'imiter' → logprob: -4.453489780426025
    6. 'ine' → logprob: -4.453489780426025
    7. 'solution' → logprob: -4.703489780426025
    8. 'suite' → logprob: -4.828489780426025
    9. 'lim' → logprob: -5.078489780426025
    10. 'so' → logprob: -5.078489780426025

Token 340: ' courte' (ID: 130258)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.8029575943946838
    2. 'cour' → logprob: -1.427957534790039
    3. 'court' → logprob: -2.552957534790039
    4. ' courte' → logprob: -2.552957534790039
    5. 'pet' → logprob: -2.802957534790039
    6. 'gr' → logprob: -3.177957534790039
    7. ' longue' → logprob: -4.052957534790039
    8. 'short' → logprob: -4.677957534790039
    9. 'optim' → logprob: -4.677957534790039
    10. 'import' → logprob: -5.302957534790039

Token 341: ' pour' (ID: 1930)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.923008143901825
    2. 'so' → logprob: -1.7980082035064697
    3. 'de' → logprob: -2.7980082035064697
    4. 'du' → logprob: -3.0480082035064697
    5. 'des' → logprob: -3.1730082035064697
    6. ' soit' → logprob: -3.2980082035064697
    7. 'pour' → logprob: -3.5480082035064697
    8. ' du' → logprob: -3.6730082035064697
    9. '#' → logprob: -3.7980082035064697
    10. ' possible' → logprob: -4.048007965087891

Token 342: ' aller' (ID: 18383)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aller' → logprob: -1.416638731956482
    2. 'par' → logprob: -1.666638731956482
    3. 'atte' → logprob: -2.1666388511657715
    4. 're' → logprob: -2.5416388511657715
    5. ' aller' → logprob: -2.6666388511657715
    6. 'le' → logprob: -2.7916388511657715
    7. ' parcour' → logprob: -3.0416388511657715
    8. 'les' → logprob: -3.5416388511657715
    9. 'arr' → logprob: -3.7916388511657715
    10. ' atteindre' → logprob: -4.1666388511657715

Token 343: ' jusqu' (ID: 21961)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.30683550238609314
    2. ' de' → logprob: -2.181835412979126
    3. 'jus' → logprob: -3.181835412979126
    4. 'à' → logprob: -3.431835412979126
    5. 'from' → logprob: -4.056835651397705
    6. ' jusqu' → logprob: -4.306835651397705
    7. 'd' → logprob: -4.556835651397705
    8. ' d' → logprob: -4.931835651397705
    9. ' à' → logprob: -4.931835651397705
    10. 'au' → logprob: -5.181835651397705

Token 344: ''à' (ID: 33688)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.3999127745628357
    2. ''à' → logprob: -1.6499128341674805
    3. 'au' → logprob: -2.2749128341674805
    4. ''au' → logprob: -4.2749128341674805
    5. ' à' → logprob: -4.3999128341674805
    6. '’à' → logprob: -5.7749128341674805
    7. 'aux' → logprob: -6.0249128341674805
    8. 'a' → logprob: -6.3999128341674805
    9. ' au' → logprob: -7.2749128341674805
    10. '#' → logprob: -8.77491283416748

Token 345: ' une' (ID: 2463)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.899776816368103
    2. 'la' → logprob: -1.149776816368103
    3. 'station' → logprob: -2.6497769355773926
    4. ' la' → logprob: -2.7747769355773926
    5. ' N' → logprob: -3.2747769355773926
    6. ' station' → logprob: -3.3997769355773926
    7. 'n' → logprob: -3.8997769355773926
    8. 'S' → logprob: -4.274776935577393
    9. ' n' → logprob: -5.274776935577393
    10. ' chaque' → logprob: -5.274776935577393

Token 346: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.167303204536438
    2. ' station' → logprob: -1.917303204536438
    3. 'certain' → logprob: -5.542303085327148
    4. 'cert' → logprob: -7.042303085327148
    5. 'destination' → logprob: -7.417303085327148
    6. 'given' → logprob: -8.417303085327148
    7. 'st' → logprob: -8.417303085327148
    8. 'gare' → logprob: -8.542303085327148
    9. ' certaine' → logprob: -8.792303085327148
    10. ' given' → logprob: -9.292303085327148

Token 347: ' i' (ID: 575)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.27961552143096924
    2. 'so' → logprob: -2.5296154022216797
    3. ' suivante' → logprob: -2.5296154022216797
    4. 'possible' → logprob: -3.4046154022216797
    5. 'vo' → logprob: -4.90461540222168
    6. 'accessible' → logprob: -5.02961540222168
    7. 'sup' → logprob: -5.15461540222168
    8. 'max' → logprob: -5.52961540222168
    9. 'd' → logprob: -5.77961540222168
    10. 's' → logprob: -5.90461540222168

Token 348: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.07277167588472366
    2. ' ' → logprob: -3.9477717876434326
    3. ' s' → logprob: -4.3227715492248535
    4. 's' → logprob: -4.4477715492248535
    5. '_' → logprob: -5.0727715492248535
    6. ' puisse' → logprob: -5.0727715492248535
    7. ' so' → logprob: -5.9477715492248535
    8. 'so' → logprob: -6.0727715492248535
    9. ' soient' → logprob: -6.5727715492248535
    10. ',' → logprob: -6.8227715492248535

Token 349: ' <=' (ID: 5017)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014277982525527477
    2. 'optim' → logprob: -5.264277935028076
    3. 'max' → logprob: -6.389277935028076
    4. ' minimale' → logprob: -6.514277935028076
    5. 'calcul' → logprob: -7.014277935028076
    6. 'au' → logprob: -7.014277935028076
    7. ' minim' → logprob: -7.139277935028076
    8. ' min' → logprob: -7.264277935028076
    9. 'la' → logprob: -7.639277935028076
    10. ' optimale' → logprob: -8.264278411865234

Token 350: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.3877107799053192
    2. ' T' → logprob: -1.1377108097076416
    3. ' ' → logprob: -7.5127105712890625
    4. ' ' → logprob: -8.262710571289062
    5. ''' → logprob: -11.012710571289062
    6. ' '' → logprob: -12.262710571289062
    7. '`' → logprob: -12.762710571289062
    8. '"' → logprob: -13.387710571289062
    9. ''T' → logprob: -13.762710571289062
    10. '  ' → logprob: -13.887710571289062

Token 351: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7412242889404297
    2. '#' → logprob: -1.1162242889404297
    3. ',
' → logprob: -2.8662242889404297
    4. ',' → logprob: -3.2412242889404297
    5. 'def' → logprob: -4.11622428894043
    6. 'S' → logprob: -4.74122428894043
    7. '\n' → logprob: -4.74122428894043
    8. '.' → logprob: -4.86622428894043
    9. 'for' → logprob: -4.99122428894043
    10. '

' → logprob: -5.24122428894043

Token 352: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6486120223999023
    2. ',' → logprob: -1.7736120223999023
    3. '[' → logprob: -1.8986120223999023
    4. '#' → logprob: -2.3986120223999023
    5. ':' → logprob: -2.6486120223999023
    6. 'S' → logprob: -2.7736120223999023
    7. ']' → logprob: -3.0236120223999023
    8. '.' → logprob: -3.0236120223999023
    9. '=' → logprob: -3.2736120223999023
    10. ')' → logprob: -3.6486120223999023

Token 353: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.739747166633606
    2. 'dp' → logprob: -1.989747166633606
    3. 'for' → logprob: -2.4897470474243164
    4. '
' → logprob: -2.6147470474243164
    5. 'S' → logprob: -2.7397470474243164
    6. ',' → logprob: -2.7397470474243164
    7. '_' → logprob: -2.9897470474243164
    8. ' ' → logprob: -3.2397470474243164
    9. ':' → logprob: -3.2397470474243164
    10. '.' → logprob: -3.2397470474243164

Token 354: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01765194907784462
    2. '#' → logprob: -4.8926520347595215
    3. 'DP' → logprob: -5.1426520347595215
    4. 'dist' → logprob: -6.1426520347595215
    5. 'def' → logprob: -7.6426520347595215
    6. 'distance' → logprob: -8.142651557922363
    7. 'stations' → logprob: -8.142651557922363
    8. 'arr' → logprob: -8.767651557922363
    9. 'visited' → logprob: -9.392651557922363
    10. 'possible' → logprob: -9.642651557922363

Token 355: ' mod' (ID: 1812)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21158267557621002
    2. ' =' → logprob: -2.586582660675049
    3. 'def' → logprob: -2.586582660675049
    4. '=' → logprob: -4.461582660675049
    5. ' _' → logprob: -4.961582660675049
    6. ' def' → logprob: -5.586582660675049
    7. '#' → logprob: -5.711582660675049
    8. 'for' → logprob: -6.336582660675049
    9. 'continue' → logprob: -6.461582660675049
    10. 'max' → logprob: -6.586582660675049

Token 356: 'él' (ID: 6778)
  Prédit: 'èle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èle' → logprob: -0.9828060269355774
    2. 'é' → logprob: -1.2328059673309326
    3. 'ifié' → logprob: -1.7328059673309326
    4. 'if' → logprob: -3.2328059673309326
    5. 'el' → logprob: -3.7328059673309326
    6. 'ifie' → logprob: -3.7328059673309326
    7. 'ule' → logprob: -3.9828059673309326
    8. 'ifier' → logprob: -4.107806205749512
    9. 'e' → logprob: -4.857806205749512
    10. 'él' → logprob: -4.857806205749512

Token 357: 'ise' (ID: 1096)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7059216499328613
    2. 'él' → logprob: -1.5809216499328613
    3. 'èle' → logprob: -1.9559216499328613
    4. 'e' → logprob: -2.0809216499328613
    5. 'è' → logprob: -4.205921649932861
    6. '#' → logprob: -5.330921649932861
    7. 'el' → logprob: -6.080921649932861
    8. ' =' → logprob: -6.205921649932861
    9. '```' → logprob: -6.330921649932861
    10. 'eled' → logprob: -6.455921649932861

Token 358: ' ainsi' (ID: 16371)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5751904845237732
    2. ' le' → logprob: -2.325190544128418
    3. ' une' → logprob: -2.575190544128418
    4. ' ' → logprob: -2.825190544128418
    5. ' l' → logprob: -2.825190544128418
    6. '_' → logprob: -3.450190544128418
    7. ' ' → logprob: -3.700190544128418
    8. ' un' → logprob: -4.200190544128418
    9. ',' → logprob: -4.325190544128418
    10. ' les' → logprob: -4.575190544128418

Token 359: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09654474258422852
    2. ' dp' → logprob: -2.4715447425842285
    3. '#' → logprob: -6.4715447425842285
    4. 'dist' → logprob: -6.5965447425842285
    5. ' la' → logprob: -7.5965447425842285
    6. 'def' → logprob: -7.7215447425842285
    7. ' distances' → logprob: -7.7215447425842285
    8. '_dp' → logprob: -7.9715447425842285
    9. 'distance' → logprob: -8.09654426574707
    10. 'DP' → logprob: -8.09654426574707

Token 360: '#' (ID: 2)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.7230908274650574
    2. 'dp' → logprob: -1.4730908870697021
    3. '#' → logprob: -1.8480908870697021
    4. 'arr' → logprob: -2.723090887069702
    5. 'import' → logprob: -4.973090648651123
    6. 'positions' → logprob: -5.098090648651123
    7. 'def' → logprob: -5.098090648651123
    8. 'express' → logprob: -5.348090648651123
    9. 'dist' → logprob: -5.473090648651123
    10. 'pass' → logprob: -5.723090648651123

Token 361: ' -' (ID: 533)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.3962562680244446
    2. '#' → logprob: -2.1462562084198
    3. 'arr' → logprob: -2.6462562084198
    4. 'st' → logprob: -2.8962562084198
    5. 'def' → logprob: -3.5212562084198
    6. 'dp' → logprob: -4.146256446838379
    7. 'all' → logprob: -4.396256446838379
    8. 'express' → logprob: -5.896256446838379
    9. 'stop' → logprob: -5.896256446838379
    10. 'import' → logprob: -5.896256446838379

Token 362: ' On' (ID: 2160)
  Prédit: ' stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.8107643723487854
    2. 'stations' → logprob: -1.5607643127441406
    3. '#' → logprob: -2.4357643127441406
    4. 'def' → logprob: -3.3107643127441406
    5. 'S' → logprob: -3.3107643127441406
    6. 'import' → logprob: -3.4357643127441406
    7. 'segments' → logprob: -3.9357643127441406
    8. ' S' → logprob: -3.9357643127441406
    9. 'positions' → logprob: -4.310764312744141
    10. 'dp' → logprob: -4.685764312744141

Token 363: ' sé' (ID: 7462)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9291151165962219
    2. 'continue' → logprob: -2.429115056991577
    3. 'def' → logprob: -2.929115056991577
    4. ']' → logprob: -3.054115056991577
    5. 's' → logprob: -3.304115056991577
    6. '_' → logprob: -3.304115056991577
    7. 'for' → logprob: -3.429115056991577
    8. ' peux' → logprob: -3.554115056991577
    9. ' def' → logprob: -3.679115056991577
    10. ' #' → logprob: -3.679115056991577

Token 364: 'pare' (ID: 6900)
  Prédit: 'lection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lection' → logprob: -0.5007985830307007
    2. 'lect' → logprob: -2.0007987022399902
    3. 'quences' → logprob: -2.6257987022399902
    4. 'ries' → logprob: -3.0007987022399902
    5. 'lected' → logprob: -3.2507987022399902
    6. 'quence' → logprob: -3.7507987022399902
    7. 'r' → logprob: -4.25079870223999
    8. 'lections' → logprob: -4.87579870223999
    9. 'le' → logprob: -5.25079870223999
    10. 'lec' → logprob: -5.25079870223999

Token 365: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.2784123718738556
    2. ' les' → logprob: -1.5284123420715332
    3. 'le' → logprob: -4.403412342071533
    4. 'en' → logprob: -5.903412342071533
    5. 'la' → logprob: -6.278412342071533
    6. '#' → logprob: -6.403412342071533
    7. 'l' → logprob: -6.653412342071533
    8. ' le' → logprob: -6.778412342071533
    9. ' la' → logprob: -6.903412342071533
    10. 'the' → logprob: -7.528412342071533

Token 366: ' ligne' (ID: 19583)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.0946109294891357
    2. 'stations' → logprob: -1.5946109294891357
    3. ' stations' → logprob: -1.8446109294891357
    4. ' segments' → logprob: -1.9696109294891357
    5. ' lignes' → logprob: -4.219611167907715
    6. 'tr' → logprob: -4.469611167907715
    7. '```' → logprob: -4.719611167907715
    8. 'liste' → logprob: -4.719611167907715
    9. 'pl' → logprob: -4.844611167907715
    10. 'S' → logprob: -4.969611167907715

Token 367: ' en' (ID: 469)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0861915349960327
    2. 'de' → logprob: -1.3361915349960327
    3. '#' → logprob: -2.3361916542053223
    4. '_' → logprob: -2.3361916542053223
    5. ' en' → logprob: -2.4611916542053223
    6. ' des' → logprob: -3.5861916542053223
    7. 'en' → logprob: -3.8361916542053223
    8. '-' → logprob: -4.336191654205322
    9. ' ' → logprob: -4.461191654205322
    10. 's' → logprob: -4.586191654205322

Token 368: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.13497985899448395
    2. ' segments' → logprob: -2.8849799633026123
    3. 'inter' → logprob: -3.8849799633026123
    4. 'interval' → logprob: -4.634979724884033
    5. 'M' → logprob: -5.009979724884033
    6. ' interv' → logprob: -5.259979724884033
    7. 'stations' → logprob: -5.509979724884033
    8. 'tr' → logprob: -5.509979724884033
    9. 'les' → logprob: -5.884979724884033
    10. 'tron' → logprob: -6.009979724884033

Token 369: ' entre' (ID: 3853)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -1.335802435874939
    2. ' entre' → logprob: -1.835802435874939
    3. ',' → logprob: -2.0858025550842285
    4. ' between' → logprob: -2.0858025550842285
    5. 's' → logprob: -2.9608025550842285
    6. '[
' → logprob: -2.9608025550842285
    7. 'de' → logprob: -3.3358025550842285
    8. '[' → logprob: -3.3358025550842285
    9. '.' → logprob: -3.7108025550842285
    10. ' de' → logprob: -3.9608025550842285

Token 370: ' express' (ID: 6101)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.13571596145629883
    2. 'stations' → logprob: -3.260715961456299
    3. 'S' → logprob: -3.635715961456299
    4. 'arr' → logprob: -3.760715961456299
    5. ' les' → logprob: -3.760715961456299
    6. 'express' → logprob: -4.885715961456299
    7. 'l' → logprob: -6.260715961456299
    8. ' stations' → logprob: -6.885715961456299
    9. 'la' → logprob: -7.260715961456299
    10. 's' → logprob: -7.510715961456299

Token 371: ' stops' (ID: 29924)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7725467681884766
    2. 'stations' → logprob: -1.5225467681884766
    3. '_' → logprob: -2.7725467681884766
    4. ',' → logprob: -2.7725467681884766
    5. 'ions' → logprob: -2.8975467681884766
    6. 'es' → logprob: -3.5225467681884766
    7. 'st' → logprob: -4.022546768188477
    8. '_st' → logprob: -4.397546768188477
    9. ' stops' → logprob: -4.397546768188477
    10. 'S' → logprob: -4.647546768188477

Token 372: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8427354693412781
    2. ',' → logprob: -1.3427355289459229
    3. '.' → logprob: -1.5927355289459229
    4. ',
' → logprob: -3.217735528945923
    5. '#' → logprob: -4.092735290527344
    6. ':' → logprob: -4.592735290527344
    7. '[' → logprob: -4.967735290527344
    8. '<|end|>' → logprob: -5.342735290527344
    9. 'S' → logprob: -5.717735290527344
    10. '
' → logprob: -5.842735290527344

Token 373: '[i' (ID: 1768)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7454995512962341
    2. ',' → logprob: -1.870499610900879
    3. 's' → logprob: -2.245499610900879
    4. '[' → logprob: -2.620499610900879
    5. ')' → logprob: -3.370499610900879
    6. '#' → logprob: -3.495499610900879
    7. 'S' → logprob: -3.745499610900879
    8. ',
' → logprob: -3.870499610900879
    9. '.' → logprob: -3.995499610900879
    10. '_' → logprob: -4.245499610900879

Token 374: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06549851596355438
    2. '[i' → logprob: -3.6904985904693604
    3. '],' → logprob: -3.8154985904693604
    4. ']+' → logprob: -4.315498352050781
    5. '-' → logprob: -6.565498352050781
    6. '+' → logprob: -7.440498352050781
    7. ']-' → logprob: -8.315498352050781
    8. '[' → logprob: -8.565498352050781
    9. 'i' → logprob: -8.690498352050781
    10. ' ]' → logprob: -9.190498352050781

Token 375: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.20354783535003662
    2. ' S' → logprob: -2.203547954559326
    3. 'i' → logprob: -4.078547954559326
    4. 's' → logprob: -4.203547954559326
    5. ' i' → logprob: -4.578547954559326
    6. ',' → logprob: -5.078547954559326
    7. ' et' → logprob: -5.203547954559326
    8. '0' → logprob: -5.453547954559326
    9. 'et' → logprob: -5.828547954559326
    10. '#' → logprob: -6.078547954559326

Token 376: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000618792837485671
    2. '[' → logprob: -7.875618934631348
    3. ']' → logprob: -9.375618934631348
    4. '[j' → logprob: -9.875618934631348
    5. '][' → logprob: -10.375618934631348
    6. 'i' → logprob: -10.625618934631348
    7. '[
' → logprob: -10.750618934631348
    8. '+' → logprob: -12.875618934631348
    9. '[I' → logprob: -13.000618934631348
    10. '```' → logprob: -13.000618934631348

Token 377: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7708479166030884
    2. ']' → logprob: -0.7708479166030884
    3. ']+' → logprob: -2.645847797393799
    4. '],' → logprob: -6.645847797393799
    5. '-' → logprob: -6.895847797393799
    6. ' +' → logprob: -7.020847797393799
    7. ']-' → logprob: -8.895848274230957
    8. '   ' → logprob: -9.520848274230957
    9. '[i' → logprob: -9.770848274230957
    10. ' ]' → logprob: -9.770848274230957

Token 378: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07615726441144943
    2. '1' → logprob: -3.326157331466675
    3. ']+' → logprob: -3.326157331466675
    4. '+' → logprob: -6.701157093048096
    5. 'i' → logprob: -8.701157569885254
    6. ']-' → logprob: -11.326157569885254
    7. ']_' → logprob: -11.451157569885254
    8. '
' → logprob: -11.826157569885254
    9. ']
' → logprob: -12.201157569885254
    10. ' ]' → logprob: -12.326157569885254

Token 379: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026486532762646675
    2. '+' → logprob: -4.526486396789551
    3. ']+' → logprob: -4.651486396789551
    4. '])' → logprob: -5.901486396789551
    5. '],' → logprob: -6.276486396789551
    6. '-' → logprob: -8.15148639678955
    7. ')' → logprob: -8.52648639678955
    8. ' ]' → logprob: -9.02648639678955
    9. ']
' → logprob: -9.15148639678955
    10. ' +' → logprob: -9.90148639678955

Token 380: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6780389547348022
    2. ',' → logprob: -1.9280389547348022
    3. ']' → logprob: -2.303039073944092
    4. '[' → logprob: -2.428039073944092
    5. '[i' → logprob: -2.553039073944092
    6. ',
' → logprob: -2.803039073944092
    7. ' =' → logprob: -2.803039073944092
    8. 'for' → logprob: -2.928039073944092
    9. '.' → logprob: -3.428039073944092
    10. ')' → logprob: -3.553039073944092

Token 381: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6058909893035889
    2. '#' → logprob: -1.4808909893035889
    3. ' for' → logprob: -3.105890989303589
    4. ',' → logprob: -3.355890989303589
    5. ']' → logprob: -3.480890989303589
    6. 'i' → logprob: -3.980890989303589
    7. 's' → logprob: -4.355891227722168
    8. '[' → logprob: -4.480891227722168
    9. ' ' → logprob: -4.605891227722168
    10. ')' → logprob: -4.605891227722168

Token 382: ' Dans' (ID: 22082)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2815150320529938
    2. '#' → logprob: -1.9065150022506714
    3. ' for' → logprob: -2.781515121459961
    4. ' #' → logprob: -5.281515121459961
    5. 'segments' → logprob: -5.281515121459961
    6. 'prev' → logprob: -5.531515121459961
    7. 'max' → logprob: -5.656515121459961
    8. 'def' → logprob: -6.406515121459961
    9. 'stations' → logprob: -6.406515121459961
    10. 'segment' → logprob: -6.656515121459961

Token 383: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.7143796682357788
    2. 'S' → logprob: -2.0893797874450684
    3. 'range' → logprob: -2.0893797874450684
    4. 'each' → logprob: -2.3393797874450684
    5. ' each' → logprob: -3.0893797874450684
    6. '#' → logprob: -3.9643797874450684
    7. ' range' → logprob: -3.9643797874450684
    8. 'les' → logprob: -4.214379787445068
    9. ' S' → logprob: -4.464379787445068
    10. ' ces' → logprob: -4.589379787445068

Token 384: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.23764966428279877
    2. ' segment' → logprob: -1.61264967918396
    3. 'interval' → logprob: -5.112649440765381
    4. 'range' → logprob: -6.362649440765381
    5. ' interval' → logprob: -6.987649440765381
    6. '#' → logprob: -6.987649440765381
    7. ' #' → logprob: -7.487649440765381
    8. 'seg' → logprob: -7.612649440765381
    9. 'for' → logprob: -8.487649917602539
    10. ' range' → logprob: -8.612649917602539

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08590172976255417
    2. ' ,' → logprob: -3.5859017372131348
    3. '[i' → logprob: -3.9609017372131348
    4. ':' → logprob: -4.210901737213135
    5. ' =' → logprob: -5.460901737213135
    6. '#' → logprob: -5.585901737213135
    7. '[' → logprob: -5.585901737213135
    8. '[]' → logprob: -6.085901737213135
    9. '<|end|>' → logprob: -6.835901737213135
    10. ',
' → logprob: -6.835901737213135

Token 386: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2695242464542389
    2. 'on' → logprob: -1.5195242166519165
    3. '#' → logprob: -4.394524097442627
    4. ' #' → logprob: -6.644524097442627
    5. 'possible' → logprob: -7.394524097442627
    6. ' we' → logprob: -7.644524097442627
    7. ' nous' → logprob: -7.769524097442627
    8. 'we' → logprob: -7.894524097442627
    9. ' il' → logprob: -8.019524574279785
    10. ' possible' → logprob: -8.394524574279785

Token 387: ' va' (ID: 3423)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.47769150137901306
    2. 'cho' → logprob: -1.3526915311813354
    3. ' chois' → logprob: -3.852691411972046
    4. 'for' → logprob: -4.102691650390625
    5. 'pour' → logprob: -4.352691650390625
    6. 'aj' → logprob: -4.602691650390625
    7. ' peux' → logprob: -4.852691650390625
    8. '#' → logprob: -5.102691650390625
    9. 'cherche' → logprob: -5.102691650390625
    10. 'do' → logprob: -5.477691650390625

Token 388: ' choisir' (ID: 47004)
  Prédit: ' choisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.18449440598487854
    2. ' ' → logprob: -2.9344944953918457
    3. ' continuer' → logprob: -3.6844944953918457
    4. ' utiliser' → logprob: -4.059494495391846
    5. ' ajouter' → logprob: -4.184494495391846
    6. ' sélectionner' → logprob: -4.184494495391846
    7. ' calcul' → logprob: -5.434494495391846
    8. ' pouvoir' → logprob: -5.559494495391846
    9. ' chercher' → logprob: -5.809494495391846
    10. 'cho' → logprob: -5.809494495391846

Token 389: ' x' (ID: 1215)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.729948103427887
    2. 'des' → logprob: -1.6049480438232422
    3. ' les' → logprob: -1.8549480438232422
    4. 'les' → logprob: -2.854948043823242
    5. ' quelques' → logprob: -3.979948043823242
    6. ' certaines' → logprob: -4.104948043823242
    7. ' ' → logprob: -4.729948043823242
    8. 'certain' → logprob: -4.729948043823242
    9. 'some' → logprob: -4.854948043823242
    10. ' certains' → logprob: -5.229948043823242

Token 390: ' arr' (ID: 1724)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6909733414649963
    2. ' =' → logprob: -1.6909732818603516
    3. '_' → logprob: -2.3159732818603516
    4. '<|end|>' → logprob: -2.9409732818603516
    5. ' _' → logprob: -3.3159732818603516
    6. ' stations' → logprob: -3.6909732818603516
    7. ' supplémentaires' → logprob: -4.940973281860352
    8. '_s' → logprob: -4.940973281860352
    9. ',' → logprob: -4.940973281860352
    10. '_tokens' → logprob: -5.065973281860352

Token 391: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00031162876985035837
    2. 'ê' → logprob: -8.500311851501465
    3. 'êt' → logprob: -9.375311851501465
    4. '^' → logprob: -12.000311851501465
    5. 'êtes' → logprob: -12.375311851501465
    6. '[' → logprob: -13.000311851501465
    7. '_' → logprob: -13.875311851501465
    8. '\' → logprob: -14.000311851501465
    9. 'ôts' → logprob: -14.000311851501465
    10. ' ' → logprob: -14.125311851501465

Token 392: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.27946004271507263
    2. ' sem' → logprob: -2.1544599533081055
    3. 'plus' → logprob: -3.2794599533081055
    4. ' stations' → logprob: -3.5294599533081055
    5. 'stations' → logprob: -3.7794599533081055
    6. ' plus' → logprob: -4.7794599533081055
    7. ' la' → logprob: -5.1544599533081055
    8. ' K' → logprob: -5.7794599533081055
    9. '+' → logprob: -5.9044599533081055
    10. 's' → logprob: -6.0294599533081055

Token 394: 'iexpress' (ID: 190732)
  Prédit: 'êts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.04432906210422516
    2. 'êt' → logprob: -3.2943291664123535
    3. 'ê' → logprob: -5.6693291664123535
    4. '^' → logprob: -6.0443291664123535
    5. '[' → logprob: -9.669328689575195
    6. '#' → logprob: -9.669328689575195
    7. '\' → logprob: -9.794328689575195
    8. 'êtes' → logprob: -10.169328689575195
    9. '^\' → logprob: -10.294328689575195
    10. '[]' → logprob: -10.419328689575195

Token 395: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4500289559364319
    2. ']' → logprob: -2.200028896331787
    3. '<|end|>' → logprob: -2.325028896331787
    4. ')' → logprob: -2.825028896331787
    5. ',' → logprob: -2.950028896331787
    6. ' =' → logprob: -5.200028896331787
    7. '[' → logprob: -5.325028896331787
    8. '#' → logprob: -5.700028896331787
    9. '[i' → logprob: -5.700028896331787
    10. 's' → logprob: -5.825028896331787

Token 396: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3196656405925751
    2. ' plus' → logprob: -1.8196656703948975
    3. 'range' → logprob: -2.8196656703948975
    4. 'inter' → logprob: -4.819665431976318
    5. '```' → logprob: -5.069665431976318
    6. '+' → logprob: -5.194665431976318
    7. ' range' → logprob: -5.319665431976318
    8. '[i' → logprob: -6.194665431976318
    9. 'i' → logprob: -6.319665431976318
    10. 'interval' → logprob: -6.319665431976318

Token 397: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.20925353467464447
    2. ' S' → logprob: -2.5842535495758057
    3. 'express' → logprob: -2.8342535495758057
    4. 'de' → logprob: -4.334253311157227
    5. 'born' → logprob: -4.834253311157227
    6. 'stations' → logprob: -5.084253311157227
    7. ' ' → logprob: -5.459253311157227
    8. ' deux' → logprob: -5.834253311157227
    9. 's' → logprob: -6.084253311157227
    10. 'x' → logprob: -6.084253311157227

Token 399: '2' (ID: 17)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8114861249923706
    2. 'express' → logprob: -1.1864861249923706
    3. ' S' → logprob: -2.43648624420166
    4. 'arr' → logprob: -3.06148624420166
    5. 'stations' → logprob: -3.43648624420166
    6. 'born' → logprob: -3.93648624420166
    7. ' stops' → logprob: -4.31148624420166
    8. 's' → logprob: -5.18648624420166
    9. ' stations' → logprob: -5.43648624420166
    10. ' express' → logprob: -5.43648624420166

Token 400: ' arr' (ID: 1724)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -7.100059156073257e-05
    2. 'êt' → logprob: -10.250070571899414
    3. 'êtes' → logprob: -10.750070571899414
    4. 'ôts' → logprob: -11.625070571899414
    5. 'ets' → logprob: -13.250070571899414
    6. 'ots' → logprob: -13.750070571899414
    7. 'ê' → logprob: -14.125070571899414
    8. 'étés' → logprob: -14.750070571899414
    9. 'uts' → logprob: -15.250070571899414
    10. 'iv' → logprob: -15.500070571899414

Token 402: ' express' (ID: 6101)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5028645992279053
    2. ']' → logprob: -1.5028645992279053
    3. '[i' → logprob: -1.6278645992279053
    4. ',' → logprob: -2.5028645992279053
    5. 's' → logprob: -2.5028645992279053
    6. '.' → logprob: -2.5028645992279053
    7. '#' → logprob: -3.2528645992279053
    8. '(s' → logprob: -4.752864837646484
    9. ' (' → logprob: -4.752864837646484
    10. '[' → logprob: -5.002864837646484

Token 404: 'les' (ID: 1032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15842889249324799
    2. ' )' → logprob: -2.533428907394409
    3. ').' → logprob: -3.283428907394409
    4. '),' → logprob: -3.908428907394409
    5. ',' → logprob: -5.78342866897583
    6. ' ),' → logprob: -6.65842866897583
    7. '#' → logprob: -6.78342866897583
    8. ' ).' → logprob: -7.15842866897583
    9. 's' → logprob: -7.78342866897583
    10. ' et' → logprob: -8.283429145812988

Token 405: ' extr' (ID: 15674)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.888104796409607
    2. 'S' → logprob: -2.1381049156188965
    3. ' S' → logprob: -2.1381049156188965
    4. ' )' → logprob: -2.8881049156188965
    5. 'segments' → logprob: -3.0131049156188965
    6. ' x' → logprob: -3.2631049156188965
    7. ' segments' → logprob: -3.2631049156188965
    8. ')' → logprob: -3.2631049156188965
    9. ' espaces' → logprob: -3.3881049156188965
    10. '#' → logprob: -3.5131049156188965

Token 406: 'é' (ID: 377)
  Prédit: 'êmes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êmes' → logprob: -0.3268318176269531
    2. 'é' → logprob: -1.4518318176269531
    3. 'emes' → logprob: -3.701831817626953
    4. 'èmes' → logprob: -4.451831817626953
    5. 'ê' → logprob: -5.701831817626953
    6. '#' → logprob: -6.326831817626953
    7. 'êts' → logprob: -7.701831817626953
    8. 'ém' → logprob: -7.951831817626953
    9. '[' → logprob: -8.201831817626953
    10. '\' → logprob: -8.326831817626953

Token 407: 'mit' (ID: 2765)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0310224462300539
    2. 'mes' → logprob: -4.531022548675537
    3. 'mites' → logprob: -5.281022548675537
    4. 'mit' → logprob: -5.281022548675537
    5. 'mie' → logprob: -5.781022548675537
    6. '```' → logprob: -7.031022548675537
    7. 'mits' → logprob: -7.031022548675537
    8. 'me' → logprob: -7.281022548675537
    9. 'miques' → logprob: -7.406022548675537
    10. 'ms' → logprob: -7.656022548675537

Token 408: 'és' (ID: 1756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5252328515052795
    2. 'és' → logprob: -1.0252327919006348
    3. 'es' → logprob: -3.0252327919006348
    4. 'é' → logprob: -7.150232791900635
    5. 'mes' → logprob: -9.275233268737793
    6. 'x' → logprob: -9.650233268737793
    7. 'm' → logprob: -9.775233268737793
    8. 'ms' → logprob: -9.900233268737793
    9. 'aux' → logprob: -10.525233268737793
    10. 'stations' → logprob: -10.650233268737793

Token 409: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1814679503440857
    2. ' )' → logprob: -1.8064680099487305
    3. '),' → logprob: -7.6814680099487305
    4. ').' → logprob: -8.93146800994873
    5. ',' → logprob: -9.05646800994873
    6. '])' → logprob: -9.05646800994873
    7. '#' → logprob: -9.05646800994873
    8. ' ' → logprob: -9.18146800994873
    9. ' ),' → logprob: -9.30646800994873
    10. ' de' → logprob: -9.43146800994873

Token 410: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.12775148451328278
    2. ' segment' → logprob: -2.127751588821411
    3. 'interval' → logprob: -7.252751350402832
    4. ' interval' → logprob: -9.627751350402832
    5. 'segments' → logprob: -11.377751350402832
    6. 'seg' → logprob: -11.752751350402832
    7. '_segment' → logprob: -12.377751350402832
    8. 's' → logprob: -12.627751350402832
    9. ' segmento' → logprob: -12.627751350402832
    10. ' сег' → logprob: -12.877751350402832

Token 411: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01840381883084774
    2. ' )' → logprob: -4.393404006958008
    3. ').' → logprob: -5.768404006958008
    4. '),' → logprob: -6.268404006958008
    5. '#' → logprob: -8.643404006958008
    6. '):' → logprob: -8.643404006958008
    7. ',' → logprob: -8.893404006958008
    8. '])' → logprob: -9.643404006958008
    9. ' et' → logprob: -9.643404006958008
    10. ']' → logprob: -10.518404006958008

Token 412: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4380212724208832
    2. ')' → logprob: -1.3130213022232056
    3. ']' → logprob: -3.938021183013916
    4. '...' → logprob: -4.563021183013916
    5. ' #' → logprob: -4.563021183013916
    6. '   ' → logprob: -4.688021183013916
    7. ',' → logprob: -4.938021183013916
    8. 'x' → logprob: -4.938021183013916
    9. ' )' → logprob: -5.438021183013916
    10. ' ' → logprob: -5.438021183013916

Token 413: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.012145807966589928
    2. ' #' → logprob: -5.13714599609375
    3. ')' → logprob: -6.26214599609375
    4. '...' → logprob: -6.88714599609375
    5. ',' → logprob: -7.13714599609375
    6. ' ' → logprob: -7.38714599609375
    7. 'x' → logprob: -7.63714599609375
    8. '.' → logprob: -8.38714599609375
    9. '<|end|>' → logprob: -9.13714599609375
    10. ' x' → logprob: -9.26214599609375

Token 414: ' total' (ID: 3609)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28993308544158936
    2. ')' → logprob: -1.6649330854415894
    3. ' ' → logprob: -4.664933204650879
    4. ' )' → logprob: -4.664933204650879
    5. ',' → logprob: -4.789933204650879
    6. ' #' → logprob: -4.914933204650879
    7. '   ' → logprob: -5.164933204650879
    8. '...' → logprob: -5.164933204650879
    9. '.' → logprob: -5.914933204650879
    10. ' afin' → logprob: -6.539933204650879

Token 415: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21555161476135254
    2. ' des' → logprob: -2.7155516147613525
    3. '=' → logprob: -2.8405516147613525
    4. ' K' → logprob: -3.8405516147613525
    5. ' de' → logprob: -4.215551376342773
    6. ')' → logprob: -4.840551376342773
    7. ' )' → logprob: -5.215551376342773
    8. ' +=' → logprob: -5.715551376342773
    9. ' of' → logprob: -6.215551376342773
    10. '_' → logprob: -6.340551376342773

Token 416: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.918387234210968
    2. 'arr' → logprob: -1.1683871746063232
    3. ' x' → logprob: -2.5433871746063232
    4. 'x' → logprob: -2.6683871746063232
    5. 'stations' → logprob: -3.0433871746063232
    6. ' stations' → logprob: -3.2933871746063232
    7. ' stops' → logprob: -4.168387413024902
    8. 'segments' → logprob: -4.668387413024902
    9. ' K' → logprob: -5.043387413024902
    10. 'K' → logprob: -5.418387413024902

Token 417: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00035786881926469505
    2. 'êt' → logprob: -8.250357627868652
    3. 'ets' → logprob: -9.625357627868652
    4. 'ê' → logprob: -11.125357627868652
    5. 'ôts' → logprob: -12.000357627868652
    6. 'rets' → logprob: -12.375357627868652
    7. 'êtes' → logprob: -13.000357627868652
    8. '^' → logprob: -13.750357627868652
    9. 'âts' → logprob: -14.250357627868652
    10. 'ë' → logprob: -15.750357627868652

Token 418: ' dans' (ID: 2671)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.300915002822876
    2. ' =' → logprob: -2.300915002822876
    3. ',' → logprob: -3.800915002822876
    4. 's' → logprob: -3.925915002822876
    5. ')' → logprob: -4.175914764404297
    6. ' chois' → logprob: -4.300914764404297
    7. ' supplémentaire' → logprob: -4.675914764404297
    8. '_s' → logprob: -4.800914764404297
    9. ' ' → logprob: -5.175914764404297
    10. '  ' → logprob: -5.175914764404297

Token 419: ' le' (ID: 505)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.7010491490364075
    2. ' le' → logprob: -1.5760490894317627
    3. ' la' → logprob: -2.0760490894317627
    4. 'le' → logprob: -3.4510490894317627
    5. ' cette' → logprob: -3.5760490894317627
    6. ' S' → logprob: -3.7010490894317627
    7. ' ' → logprob: -4.451049327850342
    8. 'segment' → logprob: -4.451049327850342
    9. ' chaque' → logprob: -4.451049327850342
    10. 'ce' → logprob: -4.576049327850342

Token 420: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.1328972727060318
    2. ' segment' → logprob: -2.13289737701416
    3. 'segments' → logprob: -5.38289737701416
    4. ' segments' → logprob: -7.50789737701416
    5. 'interval' → logprob: -7.63289737701416
    6. 'seg' → logprob: -9.00789737701416
    7. ' interval' → logprob: -10.00789737701416
    8. 's' → logprob: -10.13289737701416
    9. '_segment' → logprob: -10.50789737701416
    10. '```' → logprob: -11.50789737701416

Token 421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2789795398712158
    2. ')' → logprob: -2.528979539871216
    3. '=' → logprob: -2.903979539871216
    4. ',' → logprob: -3.403979539871216
    5. ' supplémentaires' → logprob: -3.653979539871216
    6. 's' → logprob: -4.153979301452637
    7. '.' → logprob: -4.903979301452637
    8. ' entre' → logprob: -5.403979301452637
    9. ' )' → logprob: -6.278979301452637
    10. ']' → logprob: -6.403979301452637

Token 422: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3869186341762543
    2. ' x' → logprob: -1.2619186639785767
    3. 'K' → logprob: -4.011918544769287
    4. ' K' → logprob: -4.136918544769287
    5. ' (' → logprob: -6.761918544769287
    6. ' ' → logprob: -7.136918544769287
    7. '(x' → logprob: -7.261918544769287
    8. '1' → logprob: -7.886918544769287
    9. 'C' → logprob: -8.761919021606445
    10. '(K' → logprob: -9.261919021606445

Token 423: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8878486156463623
    2. '<|end|>' → logprob: -1.5128486156463623
    3. ' +' → logprob: -2.2628486156463623
    4. '<|end|>' → logprob: -3.0128486156463623
    5. '.' → logprob: -3.1378486156463623
    6. ',' → logprob: -3.3878486156463623
    7. ')' → logprob: -3.3878486156463623
    8. ' =' → logprob: -3.6378486156463623
    9. 's' → logprob: -3.7628486156463623
    10. '#' → logprob: -5.012848854064941

Token 424: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01263266522437334
    2. ' ' → logprob: -4.387632846832275
    3. '1' → logprob: -9.012632369995117
    4. '3' → logprob: -14.262632369995117
    5. '   ' → logprob: -16.387632369995117
    6. '```' → logprob: -16.575132369995117
    7. ' ' → logprob: -16.637632369995117
    8. '  ' → logprob: -16.950132369995117
    9. '۲' → logprob: -17.012632369995117
    10. '0' → logprob: -17.200132369995117

Token 425: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038777425652369857
    2. '1' → logprob: -8.000388145446777
    3. ' ' → logprob: -9.875388145446777
    4. '3' → logprob: -15.000388145446777
    5. '۲' → logprob: -15.625388145446777
    6. '   ' → logprob: -16.62538719177246
    7. '```' → logprob: -16.87538719177246
    8. '２' → logprob: -17.31288719177246
    9. '٢' → logprob: -17.50038719177246
    10. '0' → logprob: -18.00038719177246

Token 426: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6750438809394836
    2. '#' → logprob: -1.4250438213348389
    3. ',' → logprob: -3.175043821334839
    4. '.' → logprob: -3.300043821334839
    5. 'x' → logprob: -3.300043821334839
    6. ',
' → logprob: -3.675043821334839
    7. ')' → logprob: -4.175044059753418
    8. ' ' → logprob: -4.300044059753418
    9. 'for' → logprob: -4.550044059753418
    10. ' 
' → logprob: -4.550044059753418

Token 427: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3082028925418854
    2. '
' → logprob: -2.0582029819488525
    3. ',
' → logprob: -3.9332029819488525
    4. '.' → logprob: -4.308202743530273
    5. ',' → logprob: -4.558202743530273
    6. 'for' → logprob: -4.683202743530273
    7. 'dp' → logprob: -4.683202743530273
    8. 'x' → logprob: -4.808202743530273
    9. '\n' → logprob: -4.808202743530273
    10. 'segments' → logprob: -4.933202743530273

Token 428: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16645674407482147
    2. '
' → logprob: -2.666456699371338
    3. 'dp' → logprob: -4.041456699371338
    4. 'for' → logprob: -4.166456699371338
    5. 'x' → logprob: -4.291456699371338
    6. 'def' → logprob: -4.416456699371338
    7. 'max' → logprob: -6.041456699371338
    8. 'import' → logprob: -6.041456699371338
    9. '#
' → logprob: -6.041456699371338
    10. ')' → logprob: -6.291456699371338

Token 429: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4162207841873169
    2. 'dp' → logprob: -1.416220784187317
    3. 'def' → logprob: -2.6662206649780273
    4. 'for' → logprob: -4.166220664978027
    5. 'pass' → logprob: -6.041220664978027
    6. 'from' → logprob: -6.166220664978027
    7. ' #' → logprob: -6.291220664978027
    8. ' dp' → logprob: -6.916220664978027
    9. 'import' → logprob: -7.041220664978027
    10. ' for' → logprob: -7.291220664978027

Token 430: ' nombre' (ID: 9733)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9987020492553711
    2. ' #' → logprob: -2.498702049255371
    3. ' code' → logprob: -2.498702049255371
    4. 'dp' → logprob: -2.498702049255371
    5. 'def' → logprob: -2.748702049255371
    6. ' segment' → logprob: -3.123702049255371
    7. ' next' → logprob: -3.248702049255371
    8. ' dp' → logprob: -3.748702049255371
    9. ' total' → logprob: -4.248702049255371
    10. ' def' → logprob: -4.373702049255371

Token 431: ' total' (ID: 3609)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0504953861236572
    2. '<|end|>' → logprob: -1.6754953861236572
    3. ' de' → logprob: -1.9254953861236572
    4. '<|end|>' → logprob: -2.9254953861236572
    5. ' d' → logprob: -3.0504953861236572
    6. ' of' → logprob: -3.5504953861236572
    7. ' ' → logprob: -3.9254953861236572
    8. '_' → logprob: -3.9254953861236572
    9. '_total' → logprob: -4.050495147705078
    10. '#' → logprob: -4.050495147705078

Token 432: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2752411961555481
    2. 'des' → logprob: -2.0252411365509033
    3. ' d' → logprob: -3.5252411365509033
    4. ' de' → logprob: -3.5252411365509033
    5. '#' → logprob: -4.275241374969482
    6. 'd' → logprob: -4.900241374969482
    7. '_des' → logprob: -5.400241374969482
    8. 'de' → logprob: -5.525241374969482
    9. ' of' → logprob: -5.650241374969482
    10. ')' → logprob: -6.275241374969482

Token 433: ''arr' (ID: 49695)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3292395770549774
    2. '_segments' → logprob: -3.2042396068573
    3. ' segments' → logprob: -3.3292396068573
    4. ' tokens' → logprob: -3.5792396068573
    5. 'arr' → logprob: -3.8292396068573
    6. '_tokens' → logprob: -3.9542396068573
    7. '_s' → logprob: -4.204239368438721
    8. ' arr' → logprob: -4.204239368438721
    9. ' _' → logprob: -4.329239368438721
    10. '_arr' → logprob: -4.704239368438721

Token 434: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.000158842682139948
    2. 'êt' → logprob: -8.87515926361084
    3. 'ê' → logprob: -11.37515926361084
    4. 'ôts' → logprob: -12.75015926361084
    5. 'ets' → logprob: -13.37515926361084
    6. '\' → logprob: -14.00015926361084
    7. '^' → logprob: -14.62515926361084
    8. 'êtes' → logprob: -14.75015926361084
    9. '#' → logprob: -15.12515926361084
    10. '[' → logprob: -16.000158309936523

Token 435: ' sem' (ID: 2743)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.3268480598926544
    2. ' supplémentaire' → logprob: -2.076848030090332
    3. ' ' → logprob: -2.951848030090332
    4. '<|end|>' → logprob: -4.076848030090332
    5. ' rest' → logprob: -4.326848030090332
    6. ' chois' → logprob: -4.576848030090332
    7. ' restantes' → logprob: -4.826848030090332
    8. ' à' → logprob: -5.326848030090332
    9. ' =' → logprob: -5.326848030090332
    10. ' restante' → logprob: -5.326848030090332

Token 436: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.042641256004571915
    2. 'express' → logprob: -4.2926411628723145
    3. 'ieux' → logprob: -5.7926411628723145
    4. 'i' → logprob: -6.0426411628723145
    5. 'is' → logprob: -6.2926411628723145
    6. '_i' → logprob: -6.4176411628723145
    7. '(express' → logprob: -6.4176411628723145
    8. '#' → logprob: -6.4176411628723145
    9. 'pexpr' → logprob: -6.6676411628723145
    10. ' expresses' → logprob: -6.9176411628723145

Token 437: ' sur' (ID: 1512)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.40320244431495667
    2. '<|end|>' → logprob: -1.9032024145126343
    3. ' supplémentaire' → logprob: -3.153202533721924
    4. ' =' → logprob: -3.653202533721924
    5. ' +=' → logprob: -4.528202533721924
    6. ' ' → logprob: -4.528202533721924
    7. ' restantes' → logprob: -4.528202533721924
    8. ' chois' → logprob: -4.903202533721924
    9. ' à' → logprob: -5.028202533721924
    10. ' rest' → logprob: -5.028202533721924

Token 438: ' toute' (ID: 16825)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4628945589065552
    2. ' la' → logprob: -1.2128945589065552
    3. 'l' → logprob: -3.7128944396972656
    4. 'S' → logprob: -4.837894439697266
    5. 'les' → logprob: -5.212894439697266
    6. 't' → logprob: -5.212894439697266
    7. ' toutes' → logprob: -5.212894439697266
    8. 'segments' → logprob: -5.712894439697266
    9. ' chaque' → logprob: -5.712894439697266
    10. 'une' → logprob: -5.962894439697266

Token 439: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.08004774153232574
    2. ' la' → logprob: -2.580047845840454
    3. 'l' → logprob: -6.830047607421875
    4. '#' → logprob: -10.580047607421875
    5. 'ligne' → logprob: -10.830047607421875
    6. ' ' → logprob: -11.455047607421875
    7. 'le' → logprob: -12.205047607421875
    8. '_la' → logprob: -12.955047607421875
    9. '   ' → logprob: -13.080047607421875
    10. ' ' → logprob: -13.080047607421875

Token 440: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.00422940868884325
    2. ' ligne' → logprob: -5.629229545593262
    3. '#' → logprob: -8.129229545593262
    4. 'voie' → logprob: -8.879229545593262
    5. 'line' → logprob: -10.129229545593262
    6. 'l' → logprob: -10.254229545593262
    7. 'lig' → logprob: -10.754229545593262
    8. 'distance' → logprob: -11.129229545593262
    9. ' ' → logprob: -11.129229545593262
    10. ' #' → logprob: -11.254229545593262

Token 441: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5789728760719299
    2. ' est' → logprob: -1.4539728164672852
    3. '=' → logprob: -2.078972816467285
    4. ',' → logprob: -3.203972816467285
    5. ' entre' → logprob: -5.328972816467285
    6. '.' → logprob: -5.453972816467285
    7. '#' → logprob: -5.578972816467285
    8. ' s' → logprob: -6.078972816467285
    9. '<|end|>' → logprob: -6.078972816467285
    10. ')' → logprob: -6.203972816467285

Token 442: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.018154039978981018
    2. ' K' → logprob: -4.018154144287109
    3. 'M' → logprob: -13.39315414428711
    4. ' ' → logprob: -13.64315414428711
    5. '	K' → logprob: -15.26815414428711
    6. 'k' → logprob: -15.51815414428711
    7. ' =' → logprob: -15.76815414428711
    8. '=' → logprob: -16.39315414428711
    9. '```' → logprob: -16.51815414428711
    10. '   ' → logprob: -16.64315414428711

Token 443: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4148685932159424
    2. '#' → logprob: -2.5398685932159424
    3. '<|end|>' → logprob: -2.5398685932159424
    4. ']' → logprob: -3.1648685932159424
    5. ',' → logprob: -4.039868354797363
    6. ')' → logprob: -4.039868354797363
    7. '.' → logprob: -4.289868354797363
    8. ',
' → logprob: -4.414868354797363
    9. ' 
' → logprob: -4.664868354797363
    10. 'dp' → logprob: -4.789868354797363

Token 444: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10426468402147293
    2. '#' → logprob: -3.104264736175537
    3. '
' → logprob: -3.104264736175537
    4. 'DP' → logprob: -6.479264736175537
    5. 'import' → logprob: -6.979264736175537
    6. 'max' → logprob: -7.229264736175537
    7. ',
' → logprob: -7.354264736175537
    8. 'segments' → logprob: -7.854264736175537
    9. 'possible' → logprob: -8.104264259338379
    10. ' dp' → logprob: -8.104264259338379

Token 445: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6724700331687927
    2. '#' → logprob: -1.0474700927734375
    3. '
' → logprob: -2.6724700927734375
    4. ',
' → logprob: -4.7974700927734375
    5. 'def' → logprob: -5.0474700927734375
    6. 'DP' → logprob: -5.2974700927734375
    7. ']' → logprob: -5.5474700927734375
    8. ')' → logprob: -5.5474700927734375
    9. '#
' → logprob: -5.5474700927734375
    10. 'import' → logprob: -5.6724700927734375

Token 446: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02048863284289837
    2. '#' → logprob: -4.020488739013672
    3. 'DP' → logprob: -6.645488739013672
    4. ' dp' → logprob: -8.020488739013672
    5. 'def' → logprob: -8.895488739013672
    6. 'from' → logprob: -8.895488739013672
    7. 'max' → logprob: -9.645488739013672
    8. 'import' → logprob: -9.645488739013672
    9. 'possible' → logprob: -9.770488739013672
    10. 'd' → logprob: -10.395488739013672

Token 447: ' nombre' (ID: 9733)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4233807623386383
    2. ' next' → logprob: -1.923380732536316
    3. 'def' → logprob: -2.5483808517456055
    4. 'dp' → logprob: -3.5483808517456055
    5. 'next' → logprob: -4.5483808517456055
    6. ' rest' → logprob: -4.5483808517456055
    7. ' #' → logprob: -4.6733808517456055
    8. ' remaining' → logprob: -4.9233808517456055
    9. ' dp' → logprob: -4.9233808517456055
    10. 'remaining' → logprob: -5.0483808517456055

Token 448: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: ''arr' (ID: 49695)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33217477798461914
    2. '_segments' → logprob: -2.582174777984619
    3. 'e' → logprob: -2.957174777984619
    4. ' =' → logprob: -3.457174777984619
    5. '_total' → logprob: -4.207174777984619
    6. 'é' → logprob: -4.457174777984619
    7. 'ext' → logprob: -4.582174777984619
    8. '=' → logprob: -4.707174777984619
    9. '_choices' → logprob: -4.832174777984619
    10. ')' → logprob: -5.207174777984619

Token 450: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.04892684146761894
    2. 'êt' → logprob: -3.048926830291748
    3. 'êtes' → logprob: -8.923927307128906
    4. '^' → logprob: -9.673927307128906
    5. 'ê' → logprob: -9.923927307128906
    6. '\' → logprob: -10.673927307128906
    7. '#' → logprob: -11.048927307128906
    8. 'ets' → logprob: -11.548927307128906
    9. '_' → logprob: -12.298927307128906
    10. '>' → logprob: -12.548927307128906

Token 451: ' sem' (ID: 2743)
  Prédit: ' sem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sem' → logprob: -0.5737975835800171
    2. ' supplémentaires' → logprob: -1.198797583580017
    3. ' rest' → logprob: -2.8237977027893066
    4. 'sem' → logprob: -3.4487977027893066
    5. 'rest' → logprob: -4.323797702789307
    6. ' par' → logprob: -4.573797702789307
    7. ' restantes' → logprob: -5.698797702789307
    8. ' supplémentaire' → logprob: -5.948797702789307
    9. ' dans' → logprob: -6.823797702789307
    10. ' de' → logprob: -7.073797702789307

Token 452: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.005219175014644861
    2. 'express' → logprob: -6.755218982696533
    3. 'ieuses' → logprob: -8.005219459533691
    4. '_i' → logprob: -8.005219459533691
    5. 'ie' → logprob: -8.380219459533691
    6. 'pexpr' → logprob: -8.505219459533691
    7. '[i' → logprob: -8.755219459533691
    8. 'iex' → logprob: -8.755219459533691
    9. '_ie' → logprob: -8.755219459533691
    10. '(express' → logprob: -9.005219459533691

Token 453: ' impos' (ID: 12130)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.3786667287349701
    2. '<|end|>' → logprob: -2.503666639328003
    3. ' restantes' → logprob: -3.253666639328003
    4. ' supplémentaire' → logprob: -3.253666639328003
    5. ' par' → logprob: -3.628666639328003
    6. 'sur' → logprob: -4.253666877746582
    7. 'rest' → logprob: -4.753666877746582
    8. ' rest' → logprob: -5.128666877746582
    9. ' à' → logprob: -5.128666877746582
    10. 'possible' → logprob: -5.128666877746582

Token 454: 'ées' (ID: 5161)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.13187088072299957
    2. 'ites' → logprob: -3.631870985031128
    3. 'itif' → logprob: -4.131870746612549
    4. 'é' → logprob: -4.506870746612549
    5. 'ér' → logprob: -4.881870746612549
    6. 's' → logprob: -4.881870746612549
    7. 'atifs' → logprob: -4.881870746612549
    8. 'ément' → logprob: -5.006870746612549
    9. 'ur' → logprob: -5.381870746612549
    10. 'ées' → logprob: -5.381870746612549

Token 455: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21606530249118805
    2. '=' → logprob: -1.9660652875900269
    3. ',' → logprob: -4.091065406799316
    4. ' supplémentaires' → logprob: -5.216065406799316
    5. ' restantes' → logprob: -5.466065406799316
    6. '<|end|>' → logprob: -5.591065406799316
    7. ')' → logprob: -5.716065406799316
    8. ' ' → logprob: -6.091065406799316
    9. '#' → logprob: -6.341065406799316
    10. ' >=' → logprob: -6.591065406799316

Token 456: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00043460296001285315
    2. ' M' → logprob: -7.750434398651123
    3. 'len' → logprob: -13.125434875488281
    4. '0' → logprob: -14.250434875488281
    5. ' ' → logprob: -15.250434875488281
    6. '#' → logprob: -15.750434875488281
    7. 'import' → logprob: -16.25043487548828
    8. 'K' → logprob: -16.50043487548828
    9. ' ' → logprob: -16.50043487548828
    10. '(M' → logprob: -16.56293487548828

Token 457: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23449207842350006
    2. '#' → logprob: -2.609492063522339
    3. '<|end|>' → logprob: -2.609492063522339
    4. '

' → logprob: -4.109492301940918
    5. ',
' → logprob: -4.609492301940918
    6. ')' → logprob: -4.984492301940918
    7. ',' → logprob: -5.109492301940918
    8. '<|end|>' → logprob: -5.984492301940918
    9. ']' → logprob: -6.109492301940918
    10. '.' → logprob: -6.109492301940918

Token 458: 'les' (ID: 1032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025739187374711037
    2. ' )' → logprob: -4.5257391929626465
    3. '+' → logprob: -4.9007391929626465
    4. '#' → logprob: -5.5257391929626465
    5. ' +' → logprob: -7.1507391929626465
    6. '<|end|>' → logprob: -7.5257391929626465
    7. ',' → logprob: -8.150738716125488
    8. ':' → logprob: -8.775738716125488
    9. ').' → logprob: -8.775738716125488
    10. '),' → logprob: -8.775738716125488

Token 459: ' express' (ID: 6101)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2285317182540894
    2. 'express' → logprob: -2.103531837463379
    3. ' stops' → logprob: -2.353531837463379
    4. ' stations' → logprob: -2.978531837463379
    5. 'K' → logprob: -3.103531837463379
    6. ' )' → logprob: -3.353531837463379
    7. ' S' → logprob: -3.478531837463379
    8. 'stations' → logprob: -3.478531837463379
    9. 'M' → logprob: -3.603531837463379
    10. 'arr' → logprob: -3.728531837463379

Token 460: ' stops' (ID: 29924)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32495346665382385
    2. 'st' → logprob: -1.8249534368515015
    3. 'stations' → logprob: -2.699953556060791
    4. ' stops' → logprob: -3.824953556060791
    5. 'arr' → logprob: -4.699953556060791
    6. ' )' → logprob: -5.699953556060791
    7. '_st' → logprob: -6.449953556060791
    8. ' ' → logprob: -6.449953556060791
    9. '#' → logprob: -6.449953556060791
    10. '),' → logprob: -6.699953556060791

Token 461: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044759128242731094
    2. '),' → logprob: -4.044759273529053
    3. '#' → logprob: -4.169759273529053
    4. ').' → logprob: -5.294759273529053
    5. ' )' → logprob: -6.169759273529053
    6. ')#' → logprob: -6.919759273529053
    7. ')
' → logprob: -7.169759273529053
    8. ' sont' → logprob: -7.419759273529053
    9. ',' → logprob: -8.044758796691895
    10. ')

' → logprob: -8.794758796691895

Token 462: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32923710346221924
    2. 'dp' → logprob: -2.4542369842529297
    3. '
' → logprob: -2.7042369842529297
    4. ')' → logprob: -3.9542369842529297
    5. ',
' → logprob: -4.20423698425293
    6. '<|end|>' → logprob: -4.32923698425293
    7. '.' → logprob: -4.57923698425293
    8. 'def' → logprob: -4.70423698425293
    9. 'max' → logprob: -4.95423698425293
    10. ',' → logprob: -5.07923698425293

Token 463: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09752295911312103
    2. '#' → logprob: -2.5975229740142822
    3. 'DP' → logprob: -5.847522735595703
    4. 'stations' → logprob: -6.097522735595703
    5. 'import' → logprob: -6.472522735595703
    6. 'possible' → logprob: -6.722522735595703
    7. 'def' → logprob: -6.847522735595703
    8. 'max' → logprob: -6.972522735595703
    9. 'segments' → logprob: -6.972522735595703
    10. '
' → logprob: -7.097522735595703

Token 464: ' Il' (ID: 5329)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06881066411733627
    2. '#' → logprob: -2.8188107013702393
    3. 'DP' → logprob: -5.44381046295166
    4. 'pass' → logprob: -7.44381046295166
    5. 'remaining' → logprob: -7.81881046295166
    6. 'total' → logprob: -8.44381046295166
    7. 'from' → logprob: -8.94381046295166
    8. 'for' → logprob: -9.19381046295166
    9. 'additional' → logprob: -9.31881046295166
    10. 'max' → logprob: -9.44381046295166

Token 465: ' faut' (ID: 17821)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.221265196800232
    2. ' =' → logprob: -1.221265196800232
    3. '=' → logprob: -1.596265196800232
    4. ' is' → logprob: -3.3462653160095215
    5. ' reste' → logprob: -3.3462653160095215
    6. ' remains' → logprob: -3.8462653160095215
    7. 's' → logprob: -4.0962653160095215
    8. ')' → logprob: -4.0962653160095215
    9. ' faut' → logprob: -4.8462653160095215
    10. ' possible' → logprob: -5.0962653160095215

Token 466: ' donc' (ID: 14206)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.26896095275878906
    2. ' continuer' → logprob: -3.643960952758789
    3. ' trouver' → logprob: -3.768960952758789
    4. ' aussi' → logprob: -4.018960952758789
    5. 'contin' → logprob: -4.143960952758789
    6. ' compléter' → logprob: -4.268960952758789
    7. ' déterminer' → logprob: -4.518960952758789
    8. 'égal' → logprob: -4.518960952758789
    9. ' optimiser' → logprob: -4.518960952758789
    10. 'max' → logprob: -4.893960952758789

Token 467: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.34596580266952515
    2. 'cho' → logprob: -1.59596586227417
    3. ' choisir' → logprob: -3.22096586227417
    4. ' ajouter' → logprob: -3.97096586227417
    5. 'sé' → logprob: -5.34596586227417
    6. ' compléter' → logprob: -5.34596586227417
    7. 'placer' → logprob: -5.84596586227417
    8. 'penser' → logprob: -6.09596586227417
    9. ' sélectionner' → logprob: -6.22096586227417
    10. ' répart' → logprob: -6.34596586227417

Token 468: ' (' (ID: 350)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.09650177508592606
    2. 'K' → logprob: -2.5965018272399902
    3. ' (' → logprob: -4.09650182723999
    4. '(K' → logprob: -7.72150182723999
    5. '(' → logprob: -8.096501350402832
    6. ' ' → logprob: -9.721501350402832
    7. ' ' → logprob: -11.971501350402832
    8. ' des' → logprob: -13.096501350402832
    9. ' une' → logprob: -13.471501350402832
    10. '(s' → logprob: -14.221501350402832

Token 469: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.008623320609331131
    2. ' K' → logprob: -4.758623123168945
    3. ')' → logprob: -12.508623123168945
    4. '(K' → logprob: -13.008623123168945
    5. ' (' → logprob: -13.633623123168945
    6. ' ' → logprob: -14.383623123168945
    7. '(' → logprob: -15.008623123168945
    8. ' )' → logprob: -16.008623123168945
    9. '
' → logprob: -16.008623123168945
    10. 'k' → logprob: -16.133623123168945

Token 470: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04860077425837517
    2. '-' → logprob: -3.048600673675537
    3. '-M' → logprob: -11.423601150512695
    4. ')' → logprob: -13.923601150512695
    5. ' ' → logprob: -14.048601150512695
    6. ' ' → logprob: -15.173601150512695
    7. ' minus' → logprob: -15.673601150512695
    8. ',' → logprob: -16.048601150512695
    9. ' –' → logprob: -17.298601150512695
    10. '#' → logprob: -17.298601150512695

Token 471: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00861468818038702
    2. ' M' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.508615493774414
    4. '	M' → logprob: -18.008615493774414
    5. '   ' → logprob: -18.758615493774414
    6. ')' → logprob: -19.008615493774414
    7. '>M' → logprob: -19.633615493774414
    8. '  ' → logprob: -19.883615493774414
    9. 'import' → logprob: -20.008615493774414
    10. ' ' → logprob: -20.133615493774414

Token 472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012439649435691535
    2. ' )' → logprob: -9.000123977661133
    3. '-' → logprob: -15.500123977661133
    4. '+' → logprob: -15.750123977661133
    5. ' -' → logprob: -16.125123977661133
    6. '))' → logprob: -16.375123977661133
    7. ')#' → logprob: -16.375123977661133
    8. ')
' → logprob: -16.625123977661133
    9. '#' → logprob: -17.125123977661133
    10. ' ' → logprob: -17.375123977661133

Token 473: ' arr' (ID: 1724)
  Prédit: ' stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stations' → logprob: -0.0787520706653595
    2. 'stations' → logprob: -2.953752040863037
    3. ' arr' → logprob: -4.578752040863037
    4. 'arr' → logprob: -5.453752040863037
    5. ' stops' → logprob: -5.828752040863037
    6. ' supplémentaires' → logprob: -5.953752040863037
    7. '<|end|>' → logprob: -6.828752040863037
    8. ' )' → logprob: -7.203752040863037
    9. ')' → logprob: -8.203752517700195
    10. ' ' → logprob: -8.453752517700195

Token 474: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.001966223819181323
    2. 'êt' → logprob: -6.2519659996032715
    3. 'ê' → logprob: -10.62696647644043
    4. 'êtes' → logprob: -11.50196647644043
    5. '^' → logprob: -14.12696647644043
    6. 'êter' → logprob: -14.37696647644043
    7. 'ets' → logprob: -14.75196647644043
    8. '\' → logprob: -15.12696647644043
    9. '[' → logprob: -15.62696647644043
    10. 'ôts' → logprob: -16.00196647644043

Token 475: ' entre' (ID: 3853)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.0926707312464714
    2. 'sup' → logprob: -3.7176706790924072
    3. 'supp' → logprob: -4.217670917510986
    4. ' supplémentaire' → logprob: -4.342670917510986
    5. ' supplementary' → logprob: -4.592670917510986
    6. '<|end|>' → logprob: -5.217670917510986
    7. ' supl' → logprob: -5.342670917510986
    8. ' suppl' → logprob: -5.717670917510986
    9. ',' → logprob: -5.967670917510986
    10. '.' → logprob: -6.092670917510986

Token 476: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.004544049967080355
    2. 'express' → logprob: -6.129544258117676
    3. 'S' → logprob: -7.004544258117676
    4. ' les' → logprob: -7.254544258117676
    5. 'l' → logprob: -7.879544258117676
    6. 'ces' → logprob: -9.629544258117676
    7. 'eux' → logprob: -9.879544258117676
    8. 'stations' → logprob: -10.129544258117676
    9. 'lac' → logprob: -10.379544258117676
    10. 'arr' → logprob: -10.629544258117676

Token 477: ' segments' (ID: 33749)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5497028231620789
    2. 'express' → logprob: -1.4247028827667236
    3. 'stations' → logprob: -1.9247028827667236
    4. 'S' → logprob: -3.6747028827667236
    5. ' stations' → logprob: -6.2997026443481445
    6. ' S' → logprob: -6.5497026443481445
    7. 'ar' → logprob: -6.5497026443481445
    8. ' arr' → logprob: -6.6747026443481445
    9. ' stops' → logprob: -6.9247026443481445
    10. ' express' → logprob: -6.9247026443481445

Token 478: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6444895267486572
    2. '.' → logprob: -1.3944895267486572
    3. ',' → logprob: -2.2694895267486572
    4. 'segments' → logprob: -2.7694895267486572
    5. ')' → logprob: -4.769489288330078
    6. ',
' → logprob: -5.519489288330078
    7. '
' → logprob: -5.519489288330078
    8. 'rest' → logprob: -5.644489288330078
    9. 'for' → logprob: -5.769489288330078
    10. 's' → logprob: -5.769489288330078

Token 479: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5706462860107422
    2. '
' → logprob: -1.3206462860107422
    3. 'stations' → logprob: -3.070646286010742
    4. 'dp' → logprob: -3.820646286010742
    5. '

' → logprob: -4.070646286010742
    6. 'def' → logprob: -4.320646286010742
    7. 'segments' → logprob: -4.820646286010742
    8. 'possible' → logprob: -4.945646286010742
    9. 'import' → logprob: -5.070646286010742
    10. 'positions' → logprob: -5.570646286010742

Token 480: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.703762412071228
    2. '#' → logprob: -0.953762412071228
    3. 'def' → logprob: -3.7037625312805176
    4. '
' → logprob: -4.578762531280518
    5. 'segments' → logprob: -4.578762531280518
    6. 'max' → logprob: -4.828762531280518
    7. 'remaining' → logprob: -4.953762531280518
    8. 'DP' → logprob: -5.578762531280518
    9. 'possible' → logprob: -5.578762531280518
    10. 'selected' → logprob: -5.703762531280518

Token 481: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6263031363487244
    2. 'dp' → logprob: -0.8763031363487244
    3. 'def' → logprob: -4.001303195953369
    4. 'possible' → logprob: -4.876303195953369
    5. 'positions' → logprob: -5.751303195953369
    6. 'max' → logprob: -6.501303195953369
    7. 'segments' → logprob: -6.626303195953369
    8. 'total' → logprob: -6.751303195953369
    9. 'from' → logprob: -6.751303195953369
    10. 'import' → logprob: -6.751303195953369

Token 482: ' voyage' (ID: 35454)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1308128833770752
    2. 'def' → logprob: -1.5058128833770752
    3. 'for' → logprob: -2.255812883377075
    4. 'remaining' → logprob: -2.380812883377075
    5. ' code' → logprob: -2.880812883377075
    6. ' remaining' → logprob: -3.630812883377075
    7. 'next' → logprob: -3.880812883377075
    8. ' next' → logprob: -4.005812644958496
    9. 'rest' → logprob: -4.505812644958496
    10. 'segments' → logprob: -4.630812644958496

Token 483: ' avec' (ID: 3937)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10699719190597534
    2. ' s' → logprob: -4.231997013092041
    3. ' ' → logprob: -4.731997013092041
    4. ' des' → logprob: -4.856997013092041
    5. '#' → logprob: -4.981997013092041
    6. ',' → logprob: -4.981997013092041
    7. '_' → logprob: -5.106997013092041
    8. ' complet' → logprob: -5.106997013092041
    9. ' =' → logprob: -5.606997013092041
    10. ')' → logprob: -5.731997013092041

Token 484: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sem' → logprob: -1.0500189065933228
    2. 'le' → logprob: -1.1750189065933228
    3. 'les' → logprob: -2.675018787384033
    4. ' le' → logprob: -3.050018787384033
    5. 'local' → logprob: -3.050018787384033
    6. 'l' → logprob: -3.175018787384033
    7. 'express' → logprob: -3.550018787384033
    8. '#' → logprob: -4.050018787384033
    9. 'des' → logprob: -4.175018787384033
    10. 'un' → logprob: -4.550018787384033

Token 485: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.008052303455770016
    2. 'i' → logprob: -5.883052349090576
    3. '-' → logprob: -7.008052349090576
    4. 'express' → logprob: -7.133052349090576
    5. 'ip' → logprob: -7.258052349090576
    6. '_i' → logprob: -7.633052349090576
    7. '[i' → logprob: -8.383051872253418
    8. '(express' → logprob: -8.758051872253418
    9. 'I' → logprob: -8.883051872253418
    10. 'iex' → logprob: -9.133051872253418

Token 486: ' s' (ID: 265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: ''effect' (ID: 198544)
  Prédit: ''arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arr' → logprob: -1.3216345310211182
    2. 'e' → logprob: -1.5716345310211182
    3. ''agit' → logprob: -2.196634531021118
    4. ''effect' → logprob: -2.696634531021118
    5. 't' → logprob: -3.071634531021118
    6. '')' → logprob: -3.196634531021118
    7. ''' → logprob: -3.321634531021118
    8. 'ur' → logprob: -3.446634531021118
    9. 'u' → logprob: -3.696634531021118
    10. '_' → logprob: -3.946634531021118

Token 488: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0023284326307475567
    2. 'u' → logprob: -7.127328395843506
    3. 'uant' → logprob: -7.377328395843506
    4. 'uer' → logprob: -7.752328395843506
    5. 'uera' → logprob: -8.252328872680664
    6. 'ué' → logprob: -9.377328872680664
    7. 'uent' → logprob: -10.002328872680664
    8. '#' → logprob: -11.002328872680664
    9. 'uate' → logprob: -11.252328872680664
    10. 'uée' → logprob: -11.752328872680664

Token 489: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6193826198577881
    2. ' sur' → logprob: -1.494382619857788
    3. ' uniquement' → logprob: -2.994382619857788
    4. ' par' → logprob: -3.119382619857788
    5. ' via' → logprob: -3.494382619857788
    6. ' entre' → logprob: -3.869382619857788
    7. ' à' → logprob: -3.994382619857788
    8. 'sur' → logprob: -4.369382858276367
    9. ' au' → logprob: -4.619382858276367
    10. ' essentiellement' → logprob: -4.619382858276367

Token 490: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8017016053199768
    2. ' segments' → logprob: -1.551701545715332
    3. 'sem' → logprob: -1.676701545715332
    4. 'mode' → logprob: -3.176701545715332
    5. 'segment' → logprob: -3.301701545715332
    6. ' mode' → logprob: -4.051701545715332
    7. 'C' → logprob: -4.676701545715332
    8. ' C' → logprob: -4.801701545715332
    9. 'temps' → logprob: -5.176701545715332
    10. 's' → logprob: -5.301701545715332

Token 491: ' entre' (ID: 3853)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0769503116607666
    2. ' local' → logprob: -2.0769503116607666
    3. 'local' → logprob: -2.2019503116607666
    4. ',' → logprob: -2.7019503116607666
    5. ' locaux' → logprob: -3.0769503116607666
    6. 's' → logprob: -3.2019503116607666
    7. 'de' → logprob: -3.2019503116607666
    8. ' sem' → logprob: -3.4519503116607666
    9. ' supplémentaires' → logprob: -3.7019503116607666
    10. '.' → logprob: -3.8269503116607666

Token 492: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.29235249757766724
    2. 'stations' → logprob: -2.1673524379730225
    3. 'les' → logprob: -2.7923524379730225
    4. 'S' → logprob: -3.2923524379730225
    5. 'ar' → logprob: -3.7923524379730225
    6. 'ces' → logprob: -6.042352676391602
    7. 'de' → logprob: -6.292352676391602
    8. 'ga' → logprob: -6.292352676391602
    9. ' arr' → logprob: -6.417352676391602
    10. ' les' → logprob: -7.167352676391602

Token 493: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.0005062076961621642
    2. 'ê' → logprob: -8.375506401062012
    3. 'êt' → logprob: -8.625506401062012
    4. 'ôts' → logprob: -10.375506401062012
    5. 'ets' → logprob: -11.250506401062012
    6. '[' → logprob: -11.250506401062012
    7. 'êtes' → logprob: -11.375506401062012
    8. '#' → logprob: -12.250506401062012
    9. '\' → logprob: -12.375506401062012
    10. '^' → logprob: -12.875506401062012

Token 494: ' sem' (ID: 2743)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.3134578466415405
    2. 's' → logprob: -1.5634578466415405
    3. ',' → logprob: -1.6884578466415405
    4. 'sem' → logprob: -2.31345796585083
    5. ' de' → logprob: -3.06345796585083
    6. 'express' → logprob: -3.18845796585083
    7. '.' → logprob: -4.06345796585083
    8. 'd' → logprob: -4.18845796585083
    9. ' sem' → logprob: -4.18845796585083
    10. '_s' → logprob: -4.31345796585083

Token 495: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.051376957446336746
    2. 'op' → logprob: -5.051376819610596
    3. 'express' → logprob: -5.426376819610596
    4. 'iem' → logprob: -5.801376819610596
    5. '_op' → logprob: -5.988876819610596
    6. '```' → logprob: -6.488876819610596
    7. '#' → logprob: -6.738876819610596
    8. 'ippines' → logprob: -6.926376819610596
    9. 'ormais' → logprob: -7.113876819610596
    10. 'pexpr' → logprob: -7.238876819610596

Token 496: ',
' (ID: 412)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0255368947982788
    2. '.' → logprob: -1.1505368947982788
    3. ')' → logprob: -2.1505370140075684
    4. ',' → logprob: -2.5255370140075684
    5. ']' → logprob: -3.1505370140075684
    6. ':' → logprob: -4.150537014007568
    7. '[' → logprob: -4.650537014007568
    8. '[i' → logprob: -4.775537014007568
    9. 'for' → logprob: -5.025537014007568
    10. 'def' → logprob: -5.150537014007568

Token 497: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18761594593524933
    2. ',' → logprob: -3.1876158714294434
    3. '.' → logprob: -3.3126158714294434
    4. ')' → logprob: -3.5626158714294434
    5. ' #' → logprob: -3.9376158714294434
    6. '...' → logprob: -4.312615871429443
    7. ''' → logprob: -4.937615871429443
    8. ' ' → logprob: -5.562615871429443
    9. '   ' → logprob: -5.687615871429443
    10. '\n' → logprob: -6.312615871429443

Token 498: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.032686468213796616
    2. ' #' → logprob: -4.282686233520508
    3. '.' → logprob: -5.407686233520508
    4. ')' → logprob: -5.407686233520508
    5. ' ' → logprob: -5.782686233520508
    6. ',' → logprob: -6.282686233520508
    7. '...' → logprob: -6.907686233520508
    8. '\n' → logprob: -7.782686233520508
    9. ' mais' → logprob: -8.032686233520508
    10. ''' → logprob: -8.032686233520508

Token 499: ' chaque' (ID: 21194)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.015085804276168346
    2. ' ' → logprob: -5.390085697174072
    3. '.' → logprob: -5.890085697174072
    4. ' #' → logprob: -6.015085697174072
    5. '...' → logprob: -6.515085697174072
    6. ',' → logprob: -7.140085697174072
    7. ')' → logprob: -7.765085697174072
    8. '   ' → logprob: -8.14008617401123
    9. 'et' → logprob: -8.14008617401123
    10. 'mais' → logprob: -8.51508617401123

Token 500: ' segment' (ID: 14806)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3120398223400116
    2. ' segment' → logprob: -2.062039852142334
    3. ')' → logprob: -3.437039852142334
    4. 'segment' → logprob: -3.687039852142334
    5. '_segment' → logprob: -4.562039852142334
    6. '.' → logprob: -4.937039852142334
    7. ' =' → logprob: -4.937039852142334
    8. ' ' → logprob: -5.062039852142334
    9. '\' → logprob: -5.062039852142334
    10. ',' → logprob: -5.062039852142334

Token 501: ' a' (ID: 261)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6507295370101929
    2. ' se' → logprob: -2.2757296562194824
    3. ' de' → logprob: -2.5257296562194824
    4. ' a' → logprob: -2.6507296562194824
    5. ' =' → logprob: -3.1507296562194824
    6. '#' → logprob: -3.2757296562194824
    7. 's' → logprob: -3.2757296562194824
    8. '=' → logprob: -4.400729656219482
    9. ' peut' → logprob: -4.900729656219482
    10. ' étant' → logprob: -4.900729656219482

Token 502: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9344154000282288
    2. 'une' → logprob: -1.934415340423584
    3. 'length' → logprob: -1.934415340423584
    4. ' length' → logprob: -2.184415340423584
    5. 'C' → logprob: -2.309415340423584
    6. ' C' → logprob: -3.309415340423584
    7. ' un' → logprob: -3.684415340423584
    8. ' longueur' → logprob: -4.684415340423584
    9. 'long' → logprob: -4.809415340423584
    10. 'un' → logprob: -4.934415340423584

Token 503: ' coût' (ID: 73109)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.6318800449371338
    2. 'co' → logprob: -1.3818800449371338
    3. 'cout' → logprob: -2.506880044937134
    4. ' temps' → logprob: -3.631880044937134
    5. 'long' → logprob: -3.631880044937134
    6. ' coût' → logprob: -3.756880044937134
    7. 'C' → logprob: -3.881880044937134
    8. 'maximum' → logprob: -4.756879806518555
    9. ' cout' → logprob: -5.131879806518555
    10. 'length' → logprob: -5.256879806518555

Token 504: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7186863422393799
    2. ' de' → logprob: -1.4686863422393799
    3. ' C' → logprob: -2.09368634223938
    4. '=' → logprob: -2.84368634223938
    5. ' d' → logprob: -2.96868634223938
    6. '_' → logprob: -4.343686103820801
    7. ' ' → logprob: -4.593686103820801
    8. ' equal' → logprob: -4.968686103820801
    9. ' égal' → logprob: -5.968686103820801
    10. 'C' → logprob: -5.968686103820801

Token 505: ' temps' (ID: 11160)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.018266061320900917
    2. ' C' → logprob: -5.018266201019287
    3. 'sem' → logprob: -5.143266201019287
    4. 'minutes' → logprob: -5.768266201019287
    5. 'temps' → logprob: -6.893266201019287
    6. 'segments' → logprob: -8.143265724182129
    7. ' minutes' → logprob: -9.268265724182129
    8. 'min' → logprob: -9.393265724182129
    9. ' ' → logprob: -9.393265724182129
    10. 'c' → logprob: -9.393265724182129

Token 506: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1193737983703613
    2. ' =' → logprob: -1.2443737983703613
    3. ')' → logprob: -1.8693737983703613
    4. ',' → logprob: -2.2443737983703613
    5. ':' → logprob: -3.7443737983703613
    6. '.' → logprob: -4.119373798370361
    7. 's' → logprob: -4.244373798370361
    8. ' )' → logprob: -4.244373798370361
    9. '_' → logprob: -4.619373798370361
    10. ' de' → logprob: -4.744373798370361

Token 507: ' 
' (ID: 793)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4540610909461975
    2. ' C' → logprob: -1.0790610313415527
    3. ''' → logprob: -4.329061031341553
    4. ' (' → logprob: -5.454061031341553
    5. '"' → logprob: -5.954061031341553
    6. ' '' → logprob: -7.204061031341553
    7. '(' → logprob: -7.204061031341553
    8. '(C' → logprob: -7.329061031341553
    9. '"C' → logprob: -7.954061031341553
    10. '`' → logprob: -8.454061508178711

Token 508: '#' (ID: 2)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.4346754848957062
    2. 'C' → logprob: -1.0596754550933838
    3. ' +' → logprob: -6.684675693511963
    4. ' =' → logprob: -6.809675693511963
    5. ' ' → logprob: -7.559675693511963
    6. ')' → logprob: -7.559675693511963
    7. ' (' → logprob: -7.934675693511963
    8. '+' → logprob: -7.934675693511963
    9. ' B' → logprob: -8.309675216674805
    10. 'B' → logprob: -8.559675216674805

Token 509: '    ' (ID: 257)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5410279631614685
    2. ' C' → logprob: -0.9160279631614685
    3. ' (' → logprob: -5.791028022766113
    4. ''' → logprob: -6.166028022766113
    5. ' ' → logprob: -6.416028022766113
    6. ' =' → logprob: -6.791028022766113
    7. ')' → logprob: -7.041028022766113
    8. '(' → logprob: -7.166028022766113
    9. 'B' → logprob: -7.166028022766113
    10. '1' → logprob: -7.416028022766113

Token 510: ' segment' (ID: 14806)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.022784849628806114
    2. '(C' → logprob: -4.77278470993042
    3. ' C' → logprob: -5.52278470993042
    4. 'def' → logprob: -6.39778470993042
    5. ' (' → logprob: -6.52278470993042
    6. '(x' → logprob: -6.77278470993042
    7. '(' → logprob: -7.52278470993042
    8. 'lambda' → logprob: -7.77278470993042
    9. 'max' → logprob: -7.77278470993042
    10. '(s' → logprob: -7.89778470993042

Token 511: '_distance' (ID: 45537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3128417432308197
    2. ' *' → logprob: -1.562841773033142
    3. '=' → logprob: -3.6878416538238525
    4. '*' → logprob: -3.9378416538238525
    5. ' ' → logprob: -5.687841892242432
    6. '_' → logprob: -6.062841892242432
    7. 's' → logprob: -6.312841892242432
    8. '   ' → logprob: -6.562841892242432
    9. ' +' → logprob: -6.937841892242432
    10. '_cost' → logprob: -6.937841892242432

Token 512: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014544107019901276
    2. '*' → logprob: -4.3895440101623535
    3. ' =' → logprob: -7.5145440101623535
    4. ' ' → logprob: -7.8895440101623535
    5. '=' → logprob: -8.264544486999512
    6. ' //' → logprob: -8.639544486999512
    7. 's' → logprob: -9.139544486999512
    8. '   ' → logprob: -9.139544486999512
    9. ' /' → logprob: -9.889544486999512
    10. ' #' → logprob: -9.889544486999512

Token 513: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0011708177626132965
    2. ' C' → logprob: -6.751170635223389
    3. '1' → logprob: -15.251171112060547
    4. '	C' → logprob: -16.251171112060547
    5. ' ' → logprob: -16.626171112060547
    6. '(C' → logprob: -17.001171112060547
    7. '   ' → logprob: -17.376171112060547
    8. '*C' → logprob: -17.376171112060547
    9. ' ' → logprob: -18.001171112060547
    10. '```' → logprob: -18.001171112060547

Token 514: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46878787875175476
    2. ')' → logprob: -2.093787908554077
    3. '#' → logprob: -2.843787908554077
    4. ']' → logprob: -3.343787908554077
    5. '<|end|>' → logprob: -3.343787908554077
    6. ',
' → logprob: -4.343787670135498
    7. ',' → logprob: -4.468787670135498
    8. '+' → logprob: -4.593787670135498
    9. 'def' → logprob: -4.593787670135498
    10. ':' → logprob: -4.718787670135498

Token 515: 'temps' (ID: 42511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018386796582490206
    2. ' )' → logprob: -6.626838684082031
    3. '+' → logprob: -9.251838684082031
    4. ')
' → logprob: -9.501838684082031
    5. ').' → logprob: -9.751838684082031
    6. ' +' → logprob: -9.751838684082031
    7. '#' → logprob: -9.751838684082031
    8. ')
' → logprob: -10.501838684082031
    9. '*' → logprob: -10.626838684082031
    10. '\n' → logprob: -11.251838684082031

Token 516: ' sem' (ID: 2743)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08158645033836365
    2. ' )' → logprob: -2.8315863609313965
    3. ' +' → logprob: -5.2065863609313965
    4. ' /' → logprob: -5.2065863609313965
    5. '+' → logprob: -5.9565863609313965
    6. '/' → logprob: -6.5815863609313965
    7. ' ' → logprob: -7.3315863609313965
    8. '=' → logprob: -7.8315863609313965
    9. ' =' → logprob: -8.206586837768555
    10. ' per' → logprob: -8.456586837768555

Token 517: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.7304348349571228
    2. ')' → logprob: -1.4804348945617676
    3. 'express' → logprob: -1.8554348945617676
    4. 'icolon' → logprob: -3.4804348945617676
    5. '_' → logprob: -4.605434894561768
    6. '))' → logprob: -4.855434894561768
    7. 'ip' → logprob: -4.980434894561768
    8. 'i' → logprob: -4.980434894561768
    9. '_segments' → logprob: -5.355434894561768
    10. 'Express' → logprob: -5.355434894561768

Token 518: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03415723517537117
    2. ' )' → logprob: -3.4091572761535645
    3. ' +' → logprob: -8.909156799316406
    4. ')
' → logprob: -9.409156799316406
    5. '+' → logprob: -10.034156799316406
    6. '*' → logprob: -10.284156799316406
    7. ' *' → logprob: -10.784156799316406
    8. '#' → logprob: -10.784156799316406
    9. ' )
' → logprob: -11.034156799316406
    10. '```' → logprob: -11.159156799316406

Token 519: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2893873453140259
    2. '
' → logprob: -1.5393873453140259
    3. '#' → logprob: -1.7893873453140259
    4. '.' → logprob: -2.4143872261047363
    5. ',' → logprob: -2.5393872261047363
    6. ',
' → logprob: -3.6643872261047363
    7. '\n' → logprob: -3.6643872261047363
    8. ']' → logprob: -4.039387226104736
    9. '<|end|>' → logprob: -4.039387226104736
    10. ' ' → logprob: -4.039387226104736

Token 520: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48256799578666687
    2. ')' → logprob: -1.7325680255889893
    3. '<|end|>' → logprob: -3.2325680255889893
    4. 'for' → logprob: -3.3575680255889893
    5. 'import' → logprob: -3.9825680255889893
    6. '...' → logprob: -4.10756778717041
    7. ']' → logprob: -4.35756778717041
    8. '.' → logprob: -4.48256778717041
    9. '
' → logprob: -4.48256778717041
    10. '+' → logprob: -4.60756778717041

Token 521: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5489908456802368
    2. 'dp' → logprob: -1.1739908456802368
    3. 'distance' → logprob: -3.0489907264709473
    4. 'def' → logprob: -4.423990726470947
    5. 'for' → logprob: -4.673990726470947
    6. 'import' → logprob: -4.923990726470947
    7. 'local' → logprob: -5.173990726470947
    8. 'dist' → logprob: -5.298990726470947
    9. 'segments' → logprob: -5.423990726470947
    10. 'segment' → logprob: -5.548990726470947

Token 522: ' peut' (ID: 9216)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7137024402618408
    2. ' continue' → logprob: -1.4637024402618408
    3. '#' → logprob: -2.713702440261841
    4. ' =' → logprob: -3.088702440261841
    5. ' #' → logprob: -4.088702201843262
    6. '=' → logprob: -4.463702201843262
    7. ' _' → logprob: -4.713702201843262
    8. '.' → logprob: -4.713702201843262
    9. ' continuer' → logprob: -4.838702201843262
    10. ',' → logprob: -4.963702201843262

Token 523: ' faire' (ID: 8119)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.6875362396240234
    2. 'contin' → logprob: -2.0625362396240234
    3. ' utiliser' → logprob: -2.6875362396240234
    4. ' continuer' → logprob: -2.9375362396240234
    5. 'aj' → logprob: -3.0625362396240234
    6. 'penser' → logprob: -3.0625362396240234
    7. 'faire' → logprob: -3.6875362396240234
    8. 'pass' → logprob: -4.062536239624023
    9. '#' → logprob: -4.187536239624023
    10. ' choisir' → logprob: -4.187536239624023

Token 524: ' aussi' (ID: 9894)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.5459927320480347
    2. 'une' → logprob: -1.6709927320480347
    3. 'un' → logprob: -1.7959927320480347
    4. 'appel' → logprob: -2.295992851257324
    5. ' des' → logprob: -2.420992851257324
    6. ' une' → logprob: -3.545992851257324
    7. 'def' → logprob: -3.670992851257324
    8. ' appel' → logprob: -3.920992851257324
    9. 'import' → logprob: -4.045992851257324
    10. ' un' → logprob: -4.045992851257324

Token 525: ' transfert' (ID: 127549)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -1.3623042106628418
    2. 'appel' → logprob: -1.6123042106628418
    3. 'des' → logprob: -1.7373042106628418
    4. ' des' → logprob: -2.487304210662842
    5. 'a' → logprob: -3.237304210662842
    6. 'un' → logprob: -3.487304210662842
    7. ' du' → logprob: -3.612304210662842
    8. ' appel' → logprob: -3.737304210662842
    9. 'import' → logprob: -3.987304210662842
    10. 'trans' → logprob: -4.112304210662842

Token 526: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07834432274103165
    2. ' ' → logprob: -4.203344345092773
    3. ' à' → logprob: -4.328344345092773
    4. ' en' → logprob: -4.453344345092773
    5. ' aux' → logprob: -4.578344345092773
    6. ',' → logprob: -5.328344345092773
    7. ' s' → logprob: -5.328344345092773
    8. '<|end|>' → logprob: -5.703344345092773
    9. ' de' → logprob: -5.828344345092773
    10. ' au' → logprob: -6.578344345092773

Token 527: ' chaque' (ID: 21194)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.3578437268733978
    2. ' une' → logprob: -2.1078436374664307
    3. 'n' → logprob: -3.2328436374664307
    4. 'l' → logprob: -3.7328436374664307
    5. 'la' → logprob: -3.7328436374664307
    6. 'express' → logprob: -3.8578436374664307
    7. 'station' → logprob: -3.9828436374664307
    8. ' n' → logprob: -4.48284387588501
    9. ' chaque' → logprob: -4.73284387588501
    10. 'un' → logprob: -4.85784387588501

Token 528: ' arrêt' (ID: 77403)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.25124019384384155
    2. ' station' → logprob: -1.8762402534484863
    3. 'arr' → logprob: -3.2512402534484863
    4. ' arrêt' → logprob: -4.626240253448486
    5. 's' → logprob: -5.501240253448486
    6. 'S' → logprob: -5.751240253448486
    7. 'ar' → logprob: -6.251240253448486
    8. ' S' → logprob: -6.501240253448486
    9. 'stop' → logprob: -6.751240253448486
    10. ' arr' → logprob: -7.251240253448486

Token 529: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: ' possibilité' (ID: 58463)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23341836035251617
    2. '<|end|>' → logprob: -2.2334184646606445
    3. ' ' → logprob: -2.9834184646606445
    4. ' #' → logprob: -4.2334184646606445
    5. '...' → logprob: -5.3584184646606445
    6. ',' → logprob: -5.8584184646606445
    7. 'import' → logprob: -5.8584184646606445
    8. ' 
' → logprob: -5.9834184646606445
    9. 'pass' → logprob: -5.9834184646606445
    10. 'def' → logprob: -6.2334184646606445

Token 531: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.565069854259491
    2. ' d' → logprob: -1.1900699138641357
    3. 'de' → logprob: -3.0650699138641357
    4. 'd' → logprob: -3.0650699138641357
    5. ' of' → logprob: -4.690069675445557
    6. ' to' → logprob: -5.065069675445557
    7. ' ' → logprob: -5.315069675445557
    8. '#' → logprob: -5.565069675445557
    9. '=' → logprob: -5.940069675445557
    10. ',' → logprob: -6.440069675445557

Token 532: ' changer' (ID: 47099)
  Prédit: ' prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prendre' → logprob: -1.3485240936279297
    2. ' utiliser' → logprob: -1.3485240936279297
    3. ' changer' → logprob: -1.5985240936279297
    4. 'prendre' → logprob: -2.2235240936279297
    5. 'util' → logprob: -3.5985240936279297
    6. ' continuer' → logprob: -3.7235240936279297
    7. 'changer' → logprob: -3.8485240936279297
    8. ' local' → logprob: -3.9735240936279297
    9. ' voyager' → logprob: -4.72352409362793
    10. 'pass' → logprob: -5.22352409362793

Token 533: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1458677351474762
    2. 'de' → logprob: -2.0208678245544434
    3. 'd' → logprob: -7.145867824554443
    4. '_de' → logprob: -7.520867824554443
    5. ' ' → logprob: -8.270867347717285
    6. 's' → logprob: -8.395867347717285
    7. ' ' → logprob: -8.520867347717285
    8. ' d' → logprob: -8.520867347717285
    9. '
' → logprob: -9.020867347717285
    10. 'train' → logprob: -9.145867347717285

Token 534: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.054424140602350235
    2. ' train' → logprob: -3.3044240474700928
    3. 'ligne' → logprob: -4.804424285888672
    4. 'mode' → logprob: -5.054424285888672
    5. ' mode' → logprob: -7.304424285888672
    6. 'voie' → logprob: -8.554424285888672
    7. '```' → logprob: -8.554424285888672
    8. 'tr' → logprob: -9.179424285888672
    9. ' ligne' → logprob: -9.179424285888672
    10. 'type' → logprob: -9.304424285888672

Token 535: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.8475782871246338
    2. '#' → logprob: -2.097578287124634
    3. ',' → logprob: -2.097578287124634
    4. ' ' → logprob: -2.347578287124634
    5. ')' → logprob: -2.722578287124634
    6. ':' → logprob: -2.722578287124634
    7. '<|end|>' → logprob: -2.722578287124634
    8. '=' → logprob: -2.972578287124634
    9. ']' → logprob: -2.972578287124634
    10. 'def' → logprob: -3.222578287124634

Token 536: '#
' (ID: 11240)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.055248498916626
    2. '#' → logprob: -1.180248498916626
    3. ',
' → logprob: -2.930248498916626
    4. 'for' → logprob: -3.055248498916626
    5. ',' → logprob: -3.430248498916626
    6. '
' → logprob: -3.555248498916626
    7. '\' → logprob: -3.555248498916626
    8. 'segments' → logprob: -3.680248498916626
    9. '[
' → logprob: -3.680248498916626
    10. '[' → logprob: -4.055248260498047

Token 537: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28001463413238525
    2. '#' → logprob: -2.1550145149230957
    3. 'def' → logprob: -2.6550145149230957
    4. 'segments' → logprob: -3.5300145149230957
    5. 'for' → logprob: -4.905014514923096
    6. 'segment' → logprob: -5.905014514923096
    7. 'positions' → logprob: -6.155014514923096
    8. 'i' → logprob: -6.280014514923096
    9. 'd' → logprob: -6.780014514923096
    10. 'max' → logprob: -6.780014514923096

Token 538: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.057273730635643005
    2. 'def' → logprob: -4.307273864746094
    3. '#' → logprob: -4.682273864746094
    4. 'i' → logprob: -4.807273864746094
    5. 'd' → logprob: -5.432273864746094
    6. 'for' → logprob: -5.807273864746094
    7. 'segments' → logprob: -6.182273864746094
    8. 'DP' → logprob: -6.432273864746094
    9. 'distance' → logprob: -6.432273864746094
    10. 'x' → logprob: -6.682273864746094

Token 539: ' calcul' (ID: 7559)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4523189961910248
    2. '_' → logprob: -1.0773190259933472
    3. ' _' → logprob: -5.327319145202637
    4. ' \' → logprob: -5.452319145202637
    5. '#' → logprob: -5.827319145202637
    6. ' ' → logprob: -5.952319145202637
    7. '=' → logprob: -6.827319145202637
    8. 's' → logprob: -7.202319145202637
    9. '[' → logprob: -7.202319145202637
    10. 'n' → logprob: -7.202319145202637

Token 540: ' du' (ID: 1462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2961207628250122
    2. ' de' → logprob: -1.9211207628250122
    3. 's' → logprob: -2.5461206436157227
    4. ' des' → logprob: -4.296120643615723
    5. '#' → logprob: -5.546120643615723
    6. ' s' → logprob: -5.921120643615723
    7. 'des' → logprob: -6.046120643615723
    8. ' of' → logprob: -6.421120643615723
    9. ' ' → logprob: -6.921120643615723
    10. '_final' → logprob: -7.296120643615723

Token 541: ' temps' (ID: 11160)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.323718547821045
    2. 'nombre' → logprob: -1.823718547821045
    3. 'temps' → logprob: -1.948718547821045
    4. 'plus' → logprob: -1.948718547821045
    5. ' temps' → logprob: -2.948718547821045
    6. 'dp' → logprob: -3.573718547821045
    7. 'minimum' → logprob: -3.698718547821045
    8. 'min' → logprob: -3.823718547821045
    9. '#' → logprob: -4.073718547821045
    10. ' minimum' → logprob: -4.198718547821045

Token 542: ' depuis' (ID: 16277)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2844903767108917
    2. '_min' → logprob: -2.4094903469085693
    3. 's' → logprob: -2.7844903469085693
    4. 'minimum' → logprob: -4.159490585327148
    5. '#' → logprob: -4.409490585327148
    6. 'des' → logprob: -5.034490585327148
    7. '_final' → logprob: -5.159490585327148
    8. '=' → logprob: -5.159490585327148
    9. '_des' → logprob: -5.409490585327148
    10. 'final' → logprob: -5.534490585327148

Token 543: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8126296997070312
    2. 'l' → logprob: -1.4376296997070312
    3. '0' → logprob: -2.3126296997070312
    4. 'le' → logprob: -2.6876296997070312
    5. ' la' → logprob: -2.8126296997070312
    6. 'S' → logprob: -3.4376296997070312
    7. 'station' → logprob: -4.687629699707031
    8. 'les' → logprob: -4.937629699707031
    9. ' S' → logprob: -5.187629699707031
    10. ' l' → logprob: -5.187629699707031

Token 544: ' station' (ID: 11538)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -1.222761631011963
    2. 'dé' → logprob: -1.472761631011963
    3. 'der' → logprob: -1.972761631011963
    4. 'station' → logprob: -2.222761631011963
    5. 'dern' → logprob: -2.972761631011963
    6. 'gare' → logprob: -3.222761631011963
    7. ' dernière' → logprob: -3.347761631011963
    8. 'fin' → logprob: -3.597761631011963
    9. 'ligne' → logprob: -3.722761631011963
    10. 'S' → logprob: -4.097761631011963

Token 545: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0289134979248047
    2. ' ' → logprob: -2.1539134979248047
    3. ' suivante' → logprob: -2.6539134979248047
    4. ' s' → logprob: -2.7789134979248047
    5. ' i' → logprob: -2.9039134979248047
    6. '_' → logprob: -3.1539134979248047
    7. ' de' → logprob: -3.2789134979248047
    8. ' #' → logprob: -3.6539134979248047
    9. ' =' → logprob: -3.6539134979248047
    10. '1' → logprob: -3.7789134979248047

Token 546: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7247189283370972
    2. 's' → logprob: -2.0997190475463867
    3. '1' → logprob: -2.2247190475463867
    4. ' i' → logprob: -3.0997190475463867
    5. '_' → logprob: -3.2247190475463867
    6. '_i' → logprob: -3.2247190475463867
    7. 'S' → logprob: -3.4747190475463867
    8. '0' → logprob: -4.099719047546387
    9. ' ' → logprob: -4.099719047546387
    10. '#' → logprob: -4.349719047546387

Token 547: ' à' (ID: 1221)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.3615507483482361
    2. ':' → logprob: -3.111550807952881
    3. '=' → logprob: -3.111550807952881
    4. ',' → logprob: -3.361550807952881
    5. ' ' → logprob: -3.611550807952881
    6. ')' → logprob: -3.861550807952881
    7. ' =' → logprob: -3.986550807952881
    8. '_' → logprob: -4.111550807952881
    9. ' up' → logprob: -4.111550807952881
    10. ' est' → logprob: -4.236550807952881

Token 548: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.037738561630249
    2. 'i' → logprob: -1.787738561630249
    3. 'la' → logprob: -2.037738561630249
    4. ' chaque' → logprob: -2.537738561630249
    5. ' S' → logprob: -2.662738561630249
    6. ' i' → logprob: -2.912738561630249
    7. 'S' → logprob: -3.037738561630249
    8. ' ' → logprob: -3.912738561630249
    9. ' une' → logprob: -4.037738800048828
    10. 'une' → logprob: -4.162738800048828

Token 549: ' station' (ID: 11538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5672606825828552
    2. ')' → logprob: -1.9422607421875
    3. '[i' → logprob: -3.0672607421875
    4. ']' → logprob: -3.0672607421875
    5. 'station' → logprob: -3.4422607421875
    6. '_' → logprob: -3.6922607421875
    7. ' i' → logprob: -3.9422607421875
    8. ' station' → logprob: -4.1922607421875
    9. '[' → logprob: -4.3172607421875
    10. ':' → logprob: -4.5672607421875

Token 550: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2779713571071625
    2. ' ' → logprob: -2.9029712677001953
    3. ' i' → logprob: -2.9029712677001953
    4. ' _' → logprob: -3.4029712677001953
    5. '_i' → logprob: -3.6529712677001953
    6. 'i' → logprob: -3.7779712677001953
    7. ',' → logprob: -5.027971267700195
    8. ' =' → logprob: -5.152971267700195
    9. ' suivante' → logprob: -5.277971267700195
    10. '```' → logprob: -5.277971267700195

Token 551: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7508412003517151
    2. ':' → logprob: -2.1258411407470703
    3. ' ' → logprob: -2.5008411407470703
    4. ')' → logprob: -3.0008411407470703
    5. '=' → logprob: -3.2508411407470703
    6. 's' → logprob: -3.3758411407470703
    7. ',' → logprob: -3.5008411407470703
    8. '#' → logprob: -3.5008411407470703
    9. '.' → logprob: -3.5008411407470703
    10. ' =' → logprob: -4.00084114074707

Token 552: ' donc' (ID: 14206)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.0292580127716064
    2. ' lambda' → logprob: -2.0292580127716064
    3. ' ' → logprob: -2.2792580127716064
    4. ' sys' → logprob: -2.2792580127716064
    5. ' calcul' → logprob: -2.4042580127716064
    6. ' toujours' → logprob: -3.2792580127716064
    7. ' =' → logprob: -3.5292580127716064
    8. 's' → logprob: -3.7792580127716064
    9. '[' → logprob: -3.9042580127716064
    10. ':' → logprob: -3.9042580127716064

Token 553: ' la' (ID: 557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.7741893529891968
    2. ':' → logprob: -2.2741894721984863
    3. '=' → logprob: -2.6491894721984863
    4. '...' → logprob: -3.0241894721984863
    5. 'def' → logprob: -3.1491894721984863
    6. ' i' → logprob: -3.3991894721984863
    7. ' ' → logprob: -3.3991894721984863
    8. ' not' → logprob: -3.6491894721984863
    9. 'not' → logprob: -3.6491894721984863
    10. 's' → logprob: -3.7741894721984863

Token 554: ' somme' (ID: 64484)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -1.3351868391036987
    2. ' suivante' → logprob: -1.5851868391036987
    3. ' minimum' → logprob: -2.5851869583129883
    4. ' suivant' → logprob: -2.7101869583129883
    5. ' meilleure' → logprob: -3.0851869583129883
    6. ' somme' → logprob: -3.3351869583129883
    7. '_' → logprob: -3.5851869583129883
    8. ' plus' → logprob: -3.8351869583129883
    9. ' ' → logprob: -3.9601869583129883
    10. 's' → logprob: -3.9601869583129883

Token 555: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6297622919082642
    2. ' de' → logprob: -1.6297622919082642
    3. ')' → logprob: -2.3797621726989746
    4. '_' → logprob: -3.1297621726989746
    5. ' d' → logprob: -3.1297621726989746
    6. ' ' → logprob: -3.8797621726989746
    7. '+' → logprob: -4.004762172698975
    8. ' )' → logprob: -4.004762172698975
    9. ' +' → logprob: -4.379762172698975
    10. ' of' → logprob: -4.879762172698975

Token 556: ' temps' (ID: 11160)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.0884534120559692
    2. ' segments' → logprob: -1.2134534120559692
    3. ' temps' → logprob: -2.5884532928466797
    4. '_' → logprob: -3.0884532928466797
    5. 'temps' → logprob: -3.0884532928466797
    6. 'sem' → logprob: -3.3384532928466797
    7. ' sem' → logprob: -3.4634532928466797
    8. 'arr' → logprob: -3.5884532928466797
    9. '_segments' → logprob: -3.8384532928466797
    10. ' arr' → logprob: -3.8384532928466797

Token 557: ' 
' (ID: 793)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3839942216873169
    2. ' de' → logprob: -2.1339941024780273
    3. ' +' → logprob: -2.7589941024780273
    4. '+' → logprob: -3.0089941024780273
    5. ' ' → logprob: -4.133994102478027
    6. ' d' → logprob: -4.758994102478027
    7. ',' → logprob: -4.883994102478027
    8. ')' → logprob: -4.883994102478027
    9. ' _' → logprob: -4.883994102478027
    10. ' des' → logprob: -5.508994102478027

Token 558: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9348539710044861
    2. '+' → logprob: -1.9348540306091309
    3. ' de' → logprob: -2.434854030609131
    4. ')' → logprob: -2.684854030609131
    5. ' +' → logprob: -2.809854030609131
    6. ',' → logprob: -3.059854030609131
    7. ' des' → logprob: -3.184854030609131
    8. ' ' → logprob: -3.434854030609131
    9. ' jusqu' → logprob: -4.184854030609131
    10. '=' → logprob: -4.434854030609131

Token 559: ' entre' (ID: 3853)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2047280073165894
    2. ' des' → logprob: -1.8297280073165894
    3. ' +' → logprob: -2.579728126525879
    4. ',' → logprob: -2.954728126525879
    5. 'des' → logprob: -3.079728126525879
    6. ' nécessaires' → logprob: -3.329728126525879
    7. ' ' → logprob: -3.454728126525879
    8. '_' → logprob: -3.454728126525879
    9. ' de' → logprob: -3.579728126525879
    10. ' jusqu' → logprob: -3.829728126525879

Token 560: ' arr' (ID: 1724)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -1.4876424074172974
    2. ' stations' → logprob: -1.9876424074172974
    3. 'arr' → logprob: -2.362642288208008
    4. 'les' → logprob: -2.487642288208008
    5. 'segments' → logprob: -2.862642288208008
    6. ' les' → logprob: -2.862642288208008
    7. ' arr' → logprob: -2.987642288208008
    8. ' segments' → logprob: -3.112642288208008
    9. '_' → logprob: -3.362642288208008
    10. 's' → logprob: -3.612642288208008

Token 561: 'êts' (ID: 56582)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.4476618468761444
    2. 'êts' → logprob: -1.0726618766784668
    3. 'ê' → logprob: -4.447661876678467
    4. 'ivée' → logprob: -5.697661876678467
    5. 'î' → logprob: -7.447661876678467
    6. '^' → logprob: -8.072661399841309
    7. 'iv' → logprob: -8.197661399841309
    8. 'ête' → logprob: -8.322661399841309
    9. 'et' → logprob: -8.572661399841309
    10. 'êtes' → logprob: -8.572661399841309

Token 562: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01940467394888401
    2. ',' → logprob: -5.019404888153076
    3. '[' → logprob: -5.144404888153076
    4. ')' → logprob: -6.894404888153076
    5. ' _' → logprob: -7.019404888153076
    6. 's' → logprob: -7.019404888153076
    7. ']' → logprob: -7.269404888153076
    8. '_
' → logprob: -7.519404888153076
    9. '+' → logprob: -7.894404888153076
    10. ' ' → logprob: -8.144404411315918

Token 563: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.0339641273021698
    2. 'ie' → logprob: -4.658964157104492
    3. 'express' → logprob: -5.658964157104492
    4. 'ieux' → logprob: -6.033964157104492
    5. 'iem' → logprob: -6.408964157104492
    6. 'iex' → logprob: -6.533964157104492
    7. 'i' → logprob: -6.533964157104492
    8. 'ieuses' → logprob: -6.658964157104492
    9. 'ieurs' → logprob: -7.158964157104492
    10. 'issippi' → logprob: -7.158964157104492

Token 564: ' sur' (ID: 1512)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11980463564395905
    2. ',' → logprob: -3.494804620742798
    3. '[' → logprob: -3.494804620742798
    4. '.' → logprob: -4.869804859161377
    5. ')' → logprob: -5.119804859161377
    6. '_segments' → logprob: -5.244804859161377
    7. 's' → logprob: -5.619804859161377
    8. ']' → logprob: -5.619804859161377
    9. ':' → logprob: -5.744804859161377
    10. '[i' → logprob: -5.869804859161377

Token 565: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8702802062034607
    2. ' la' → logprob: -1.2452802658081055
    3. ' lesquels' → logprob: -2.6202802658081055
    4. 'l' → logprob: -2.7452802658081055
    5. 'le' → logprob: -3.2452802658081055
    6. 'les' → logprob: -4.1202802658081055
    7. ' les' → logprob: -4.1202802658081055
    8. 'une' → logprob: -4.3702802658081055
    9. ' le' → logprob: -4.6202802658081055
    10. ' lesquelles' → logprob: -4.8702802658081055

Token 566: ' trajet' (ID: 110258)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.6411430835723877
    2. 'segments' → logprob: -1.0161430835723877
    3. ' segment' → logprob: -3.7661430835723877
    4. 'segment' → logprob: -3.8911430835723877
    5. '_' → logprob: -4.266142845153809
    6. 'ligne' → logprob: -4.641142845153809
    7. ' même' → logprob: -4.766142845153809
    8. '#' → logprob: -5.391142845153809
    9. ' lignes' → logprob: -5.766142845153809
    10. 'm' → logprob: -5.891142845153809

Token 567: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1141258478164673
    2. '=' → logprob: -2.1141257286071777
    3. ',' → logprob: -2.3641257286071777
    4. 's' → logprob: -2.3641257286071777
    5. '_' → logprob: -2.4891257286071777
    6. ' =' → logprob: -2.8641257286071777
    7. '[' → logprob: -3.1141257286071777
    8. '.' → logprob: -3.1141257286071777
    9. ')' → logprob: -3.7391257286071777
    10. ' ' → logprob: -3.8641257286071777

Token 568: ' plus' (ID: 2932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2076328992843628
    2. ')' → logprob: -1.7076328992843628
    3. '#' → logprob: -2.2076330184936523
    4. '<|end|>' → logprob: -2.4576330184936523
    5. ',' → logprob: -2.9576330184936523
    6. ' #' → logprob: -3.4576330184936523
    7. ' plus' → logprob: -3.4576330184936523
    8. '.' → logprob: -3.4576330184936523
    9. '
' → logprob: -4.082633018493652
    10. ' i' → logprob: -4.207633018493652

Token 569: ' éventuellement' (ID: 185668)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0783278942108154
    2. 'le' → logprob: -1.7033278942108154
    3. ' la' → logprob: -1.7033278942108154
    4. 'les' → logprob: -2.2033278942108154
    5. ' le' → logprob: -2.4533278942108154
    6. ' l' → logprob: -3.3283278942108154
    7. 'la' → logprob: -4.2033281326293945
    8. ' des' → logprob: -4.4533281326293945
    9. ' possible' → logprob: -5.2033281326293945
    10. 'l' → logprob: -5.3283281326293945

Token 570: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1345150470733643
    2. 'le' → logprob: -2.0095150470733643
    3. 'les' → logprob: -2.1345150470733643
    4. 'des' → logprob: -2.2595150470733643
    5. ' les' → logprob: -2.3845150470733643
    6. ' l' → logprob: -2.6345150470733643
    7. ' la' → logprob: -3.1345150470733643
    8. ' le' → logprob: -3.2595150470733643
    9. ' un' → logprob: -4.384514808654785
    10. 'l' → logprob: -4.509514808654785

Token 571: ' local' (ID: 2698)
  Prédit: ' local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' local' → logprob: -0.39237022399902344
    2. 's' → logprob: -2.1423702239990234
    3. ' temps' → logprob: -2.5173702239990234
    4. 'local' → logprob: -3.0173702239990234
    5. ' transfert' → logprob: -3.6423702239990234
    6. ' transport' → logprob: -4.767370223999023
    7. ' code' → logprob: -4.892370223999023
    8. 'es' → logprob: -5.017370223999023
    9. ' transfer' → logprob: -5.517370223999023
    10. '\n' → logprob: -5.517370223999023

Token 572: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4949743449687958
    2. '_' → logprob: -1.8699743747711182
    3. ' \' → logprob: -2.869974374771118
    4. '\n' → logprob: -3.494974374771118
    5. '\' → logprob: -3.619974374771118
    6. ' =' → logprob: -3.744974374771118
    7. ' _' → logprob: -4.244974136352539
    8. ' ,' → logprob: -4.494974136352539
    9. ',' → logprob: -4.494974136352539
    10. 'def' → logprob: -4.744974136352539

Token 573: ' côté' (ID: 33533)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.21478593349456787
    2. ' la' → logprob: -2.5897860527038574
    3. 'l' → logprob: -3.3397860527038574
    4. 'une' → logprob: -3.5897860527038574
    5. ' chaque' → logprob: -4.214786052703857
    6. 'station' → logprob: -4.589786052703857
    7. ' une' → logprob: -4.714786052703857
    8. 'i' → logprob: -5.714786052703857
    9. ' station' → logprob: -5.714786052703857
    10. '<|end|>' → logprob: -5.839786052703857

Token 574: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2598199844360352
    2. ' =' → logprob: -1.3848199844360352
    3. '_' → logprob: -1.6348199844360352
    4. ' ' → logprob: -2.509819984436035
    5. ')' → logprob: -2.759819984436035
    6. ',' → logprob: -3.634819984436035
    7. ':' → logprob: -4.009819984436035
    8. '.' → logprob: -4.259819984436035
    9. '#' → logprob: -4.384819984436035
    10. '[' → logprob: -4.384819984436035

Token 575: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.144279956817627
    2. '<|end|>' → logprob: -1.144279956817627
    3. '
' → logprob: -2.144279956817627
    4. '#' → logprob: -2.644279956817627
    5. ',' → logprob: -3.519279956817627
    6. '=' → logprob: -3.894279956817627
    7. ']' → logprob: -3.894279956817627
    8. ':' → logprob: -4.144279956817627
    9. '[' → logprob: -4.269279956817627
    10. ')' → logprob: -4.269279956817627

Token 576: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0400828123092651
    2. 'def' → logprob: -1.7900828123092651
    3. ',' → logprob: -2.7900829315185547
    4. ':' → logprob: -2.7900829315185547
    5. '
' → logprob: -2.9150829315185547
    6. ']' → logprob: -3.4150829315185547
    7. 'for' → logprob: -3.5400829315185547
    8. 'S' → logprob: -3.5400829315185547
    9. ',
' → logprob: -3.6650829315185547
    10. '_' → logprob: -3.7900829315185547

Token 577: ' Pour' (ID: 13931)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6259883046150208
    2. 'def' → logprob: -1.250988245010376
    3. 'segments' → logprob: -2.750988245010376
    4. '#' → logprob: -2.875988245010376
    5. 'segment' → logprob: -4.375988483428955
    6. 'for' → logprob: -4.875988483428955
    7. '.' → logprob: -4.875988483428955
    8. ')' → logprob: -5.375988483428955
    9. 'from' → logprob: -5.625988483428955
    10. ']' → logprob: -5.750988483428955

Token 578: ' maxim' (ID: 29045)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5984101891517639
    2. ' i' → logprob: -0.8484101891517639
    3. '_' → logprob: -4.598410129547119
    4. ' _' → logprob: -5.223410129547119
    5. ' segment' → logprob: -5.723410129547119
    6. ' station' → logprob: -6.848410129547119
    7. 'segment' → logprob: -7.098410129547119
    8. ' j' → logprob: -7.473410129547119
    9. '_i' → logprob: -8.598410606384277
    10. ' l' → logprob: -8.848410606384277

Token 579: 'iser' (ID: 7466)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.008822206407785416
    2. 'l' → logprob: -4.883822441101074
    3. '#' → logprob: -8.008822441101074
    4. 'um' → logprob: -8.008822441101074
    5. '_' → logprob: -8.758822441101074
    6. 'ize' → logprob: -9.758822441101074
    7. '```' → logprob: -9.758822441101074
    8. 'n' → logprob: -10.133822441101074
    9. 'ze' → logprob: -10.133822441101074
    10. 'u' → logprob: -10.133822441101074

Token 580: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30726101994514465
    2. 'le' → logprob: -1.8072609901428223
    3. 'l' → logprob: -3.3072609901428223
    4. ' le' → logprob: -4.182260990142822
    5. ' l' → logprob: -4.682260990142822
    6. ' la' → logprob: -4.932260990142822
    7. ',' → logprob: -5.307260990142822
    8. 'la' → logprob: -5.307260990142822
    9. '_l' → logprob: -5.307260990142822
    10. '_le' → logprob: -5.432260990142822

Token 581: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6973997950553894
    2. 'nombre' → logprob: -1.3223998546600342
    3. '_' → logprob: -3.322399854660034
    4. 'stations' → logprob: -3.697399854660034
    5. 'max' → logprob: -3.822399854660034
    6. '#' → logprob: -3.947399854660034
    7. 'i' → logprob: -4.322399616241455
    8. ' number' → logprob: -4.447399616241455
    9. 'distance' → logprob: -4.572399616241455
    10. 's' → logprob: -4.822399616241455

Token 582: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3836216926574707
    2. ' of' → logprob: -2.0086216926574707
    3. ')' → logprob: -2.1336216926574707
    4. ' des' → logprob: -4.258621692657471
    5. '[' → logprob: -5.008621692657471
    6. ' de' → logprob: -5.133621692657471
    7. '(' → logprob: -5.383621692657471
    8. 'of' → logprob: -5.508621692657471
    9. ' _' → logprob: -5.758621692657471
    10. '\' → logprob: -5.758621692657471

Token 583: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.25265955924987793
    2. ' stations' → logprob: -1.627659559249878
    3. '_' → logprob: -4.002659797668457
    4. 'arr' → logprob: -6.377659797668457
    5. 'st' → logprob: -6.502659797668457
    6. 'l' → logprob: -6.877659797668457
    7. 's' → logprob: -7.627659797668457
    8. ' arr' → logprob: -7.752659797668457
    9. 'station' → logprob: -8.127659797668457
    10. '\n' → logprob: -8.377659797668457

Token 584: ' accessibles' (ID: 156723)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24397869408130646
    2. '_access' → logprob: -2.11897873878479
    3. 'accessible' → logprob: -2.86897873878479
    4. ' accessible' → logprob: -3.74397873878479
    5. 'reachable' → logprob: -5.618978500366211
    6. ')' → logprob: -6.368978500366211
    7. 'access' → logprob: -6.493978500366211
    8. ',' → logprob: -6.743978500366211
    9. ' accessibles' → logprob: -6.743978500366211
    10. '_possible' → logprob: -6.868978500366211

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.091768778860569
    2. ':' → logprob: -4.091768741607666
    3. '_' → logprob: -4.341768741607666
    4. '(' → logprob: -4.716768741607666
    5. ')' → logprob: -4.716768741607666
    6. ' ' → logprob: -5.091768741607666
    7. '<|end|>' → logprob: -5.216768741607666
    8. '.' → logprob: -5.466768741607666
    9. '=' → logprob: -5.466768741607666
    10. 'en' → logprob: -5.966768741607666

Token 586: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8671334981918335
    2. 'for' → logprob: -1.4921334981918335
    3. ' on' → logprob: -1.8671334981918335
    4. ' for' → logprob: -3.242133617401123
    5. ' il' → logprob: -3.742133617401123
    6. ' #' → logprob: -3.742133617401123
    7. 'pass' → logprob: -3.992133617401123
    8. ' we' → logprob: -4.117133617401123
    9. 'def' → logprob: -4.117133617401123
    10. ' ' → logprob: -4.867133617401123

Token 587: ' faut' (ID: 17821)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43100404739379883
    2. ' =' → logprob: -1.6810040473937988
    3. '_' → logprob: -3.181004047393799
    4. ' faut' → logprob: -3.431004047393799
    5. ' faudra' → logprob: -3.556004047393799
    6. ')' → logprob: -4.306004047393799
    7. '#' → logprob: -4.431004047393799
    8. ' is' → logprob: -4.681004047393799
    9. ''' → logprob: -5.681004047393799
    10. ' possible' → logprob: -6.306004047393799

Token 588: ' maxim' (ID: 29045)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.5804784893989563
    2. 'contin' → logprob: -1.3304784297943115
    3. ' continuer' → logprob: -1.9554784297943115
    4. 'cho' → logprob: -5.205478668212891
    5. '#' → logprob: -5.705478668212891
    6. ' ' → logprob: -5.830478668212891
    7. 'continue' → logprob: -6.205478668212891
    8. ' chois' → logprob: -6.580478668212891
    9. 'optim' → logprob: -6.580478668212891
    10. 'max' → logprob: -6.705478668212891

Token 589: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.34675028920173645
    2. 'iser' → logprob: -2.596750259399414
    3. 'izer' → logprob: -2.846750259399414
    4. 'er' → logprob: -2.846750259399414
    5. 'al' → logprob: -3.096750259399414
    6. '_' → logprob: -3.221750259399414
    7. 'e' → logprob: -4.846750259399414
    8. 'um' → logprob: -4.971750259399414
    9. 'is' → logprob: -7.971750259399414
    10. 'a' → logprob: -8.096750259399414

Token 590: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3037230372428894
    2. 'le' → logprob: -2.803723096847534
    3. '_le' → logprob: -2.928723096847534
    4. ' le' → logprob: -3.053723096847534
    5. ' l' → logprob: -3.553723096847534
    6. ' ' → logprob: -3.803723096847534
    7. 'l' → logprob: -3.928723096847534
    8. '<|end|>' → logprob: -4.928722858428955
    9. '_l' → logprob: -5.178722858428955
    10. ' la' → logprob: -5.428722858428955

Token 591: ' couverture' (ID: 97460)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42627614736557007
    2. '\n' → logprob: -2.176276206970215
    3. 'max' → logprob: -2.926276206970215
    4. ' _' → logprob: -3.676276206970215
    5. 'coverage' → logprob: -4.051276206970215
    6. ')' → logprob: -4.301276206970215
    7. ' \' → logprob: -4.301276206970215
    8. '_stop' → logprob: -4.676276206970215
    9. ' coverage' → logprob: -4.801276206970215
    10. 'range' → logprob: -4.926276206970215

Token 592: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5080811381340027
    2. ',' → logprob: -2.6330811977386475
    3. '.' → logprob: -2.6330811977386475
    4. '<|end|>' → logprob: -2.6330811977386475
    5. '[' → logprob: -3.2580811977386475
    6. ']' → logprob: -3.8830811977386475
    7. 'def' → logprob: -4.133080959320068
    8. ')' → logprob: -4.258080959320068
    9. ' ' → logprob: -4.258080959320068
    10. '#' → logprob: -4.258080959320068

Token 593: 'station' (ID: 27999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0636368840932846
    2. ' )' → logprob: -3.0636367797851562
    3. ' ' → logprob: -5.438636779785156
    4. ',' → logprob: -5.813636779785156
    5. '_' → logprob: -6.813636779785156
    6. ':' → logprob: -7.438636779785156
    7. '=' → logprob: -7.563636779785156
    8. '.' → logprob: -7.688636779785156
    9. ' =' → logprob: -7.938636779785156
    10. '(' → logprob: -7.938636779785156

Token 594: ' reachable' (ID: 143580)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7191071510314941
    2. '_' → logprob: -1.3441071510314941
    3. 's' → logprob: -1.4691071510314941
    4. ' s' → logprob: -5.344107151031494
    5. ' _' → logprob: -5.969107151031494
    6. ' )' → logprob: -6.094107151031494
    7. ' ' → logprob: -6.344107151031494
    8. '[' → logprob: -6.594107151031494
    9. ',' → logprob: -6.594107151031494
    10. '+' → logprob: -6.719107151031494

Token 595: ' within' (ID: 3518)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17509806156158447
    2. '_' → logprob: -2.300097942352295
    3. 's' → logprob: -3.675097942352295
    4. '[' → logprob: -4.425097942352295
    5. ' ' → logprob: -5.050097942352295
    6. ',' → logprob: -5.675097942352295
    7. '=' → logprob: -6.050097942352295
    8. '+' → logprob: -6.175097942352295
    9. ']' → logprob: -6.550097942352295
    10. ' )' → logprob: -7.050097942352295

Token 596: ' T' (ID: 353)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8124285340309143
    2. ')' → logprob: -1.0624284744262695
    3. ' )' → logprob: -2.4374284744262695
    4. ' a' → logprob: -2.9374284744262695
    5. '1' → logprob: -3.8124284744262695
    6. ''' → logprob: -4.3124284744262695
    7. ' the' → logprob: -4.6874284744262695
    8. '_' → logprob: -5.1874284744262695
    9. ' T' → logprob: -5.3124284744262695
    10. ' ' → logprob: -6.1874284744262695

Token 597: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04280836135149002
    2. '+' → logprob: -3.4178082942962646
    3. ' )' → logprob: -5.667808532714844
    4. ' ' → logprob: -6.542808532714844
    5. '_' → logprob: -6.667808532714844
    6. '):' → logprob: -7.417808532714844
    7. '[' → logprob: -7.667808532714844
    8. ',' → logprob: -7.917808532714844
    9. ' +' → logprob: -8.292808532714844
    10. ']' → logprob: -8.542808532714844

Token 598: '#
' (ID: 11240)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5975635051727295
    2. '
' → logprob: -1.9725635051727295
    3. ']' → logprob: -2.2225635051727295
    4. ',' → logprob: -2.2225635051727295
    5. ':' → logprob: -2.4725635051727295
    6. ')' → logprob: -2.8475635051727295
    7. '[' → logprob: -2.8475635051727295
    8. '<|end|>' → logprob: -2.8475635051727295
    9. '=' → logprob: -3.5975635051727295
    10. ',
' → logprob: -3.9725635051727295

Token 599: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05087766796350479
    2. 'def' → logprob: -3.550877571105957
    3. '#' → logprob: -4.300877571105957
    4. 'segments' → logprob: -5.800877571105957
    5. 'DP' → logprob: -6.175877571105957
    6. 'from' → logprob: -8.175877571105957
    7. 'for' → logprob: -8.300877571105957
    8. 'res' → logprob: -8.425877571105957
    9. 'segment' → logprob: -8.675877571105957
    10. 'stations' → logprob: -8.800877571105957

Token 600: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5583674907684326
    2. 'def' → logprob: -1.6833674907684326
    3. '#' → logprob: -1.8083674907684326
    4. 'segments' → logprob: -3.9333674907684326
    5. 'pos' → logprob: -4.683367729187012
    6. 'positions' → logprob: -4.808367729187012
    7. 'dist' → logprob: -4.933367729187012
    8. 'segment' → logprob: -4.933367729187012
    9. 'distance' → logprob: -5.558367729187012
    10. 'express' → logprob: -5.808367729187012

Token 601: ' va' (ID: 3423)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03352547436952591
    2. '=' → logprob: -4.283525466918945
    3. '[' → logprob: -5.158525466918945
    4. 'def' → logprob: -5.408525466918945
    5. '.' → logprob: -6.033525466918945
    6. '#' → logprob: -6.408525466918945
    7. ' =' → logprob: -7.158525466918945
    8. 's' → logprob: -7.283525466918945
    9. ' _' → logprob: -7.408525466918945
    10. '_
' → logprob: -7.533525466918945

Token 602: ' donc' (ID: 14206)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.008951187133789
    2. 'contin' → logprob: -1.258951187133789
    3. 'def' → logprob: -2.008951187133789
    4. '_' → logprob: -3.258951187133789
    5. ' utiliser' → logprob: -3.258951187133789
    6. ' calcul' → logprob: -4.133951187133789
    7. ' choisir' → logprob: -4.258951187133789
    8. 'optim' → logprob: -4.258951187133789
    9. '#' → logprob: -4.508951187133789
    10. 'import' → logprob: -4.633951187133789

Token 603: ' considérer' (ID: 172894)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5799964070320129
    2. 'contin' → logprob: -2.204996347427368
    3. '#' → logprob: -2.454996347427368
    4. 'continue' → logprob: -2.704996347427368
    5. 'import' → logprob: -3.579996347427368
    6. 'optim' → logprob: -3.579996347427368
    7. ' continuer' → logprob: -4.329996585845947
    8. '...' → logprob: -4.579996585845947
    9. ' choisir' → logprob: -4.704996585845947
    10. 'calcul' → logprob: -4.829996585845947

Token 604: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0476300716400146
    2. ' les' → logprob: -1.6726300716400146
    3. ' l' → logprob: -2.5476300716400146
    4. 'les' → logprob: -2.6726300716400146
    5. ' ' → logprob: -2.9226300716400146
    6. ' d' → logprob: -3.2976300716400146
    7. 'la' → logprob: -3.6726300716400146
    8. 'le' → logprob: -3.6726300716400146
    9. 'une' → logprob: -3.6726300716400146
    10. ' une' → logprob: -4.047630310058594

Token 605: ' arr' (ID: 1724)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6740825772285461
    2. ' segments' → logprob: -1.4240825176239014
    3. 'dp' → logprob: -3.1740825176239014
    4. 'stations' → logprob: -3.7990825176239014
    5. ' stops' → logprob: -4.2990827560424805
    6. '#' → logprob: -4.2990827560424805
    7. ' stations' → logprob: -4.4240827560424805
    8. 'possible' → logprob: -4.4240827560424805
    9. 'def' → logprob: -4.4240827560424805
    10. ' distances' → logprob: -4.6740827560424805

Token 606: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.01481863483786583
    2. 'êt' → logprob: -5.0148186683654785
    3. 'ê' → logprob: -5.2648186683654785
    4. '^' → logprob: -6.1398186683654785
    5. '[' → logprob: -8.38981819152832
    6. '#' → logprob: -8.76481819152832
    7. ']' → logprob: -9.63981819152832
    8. '_' → logprob: -10.01481819152832
    9. 't' → logprob: -10.26481819152832
    10. 'r' → logprob: -10.38981819152832

Token 607: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.4235331416130066
    2. 'de' → logprob: -2.2985332012176514
    3. '_' → logprob: -3.4235332012176514
    4. '_sem' → logprob: -3.4235332012176514
    5. 'express' → logprob: -3.5485332012176514
    6. ' sem' → logprob: -3.7985332012176514
    7. 's' → logprob: -3.7985332012176514
    8. '_s' → logprob: -4.048532962799072
    9. 'import' → logprob: -4.298532962799072
    10. 'rest' → logprob: -4.923532962799072

Token 608: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.5772753953933716
    2. 'express' → logprob: -1.5772753953933716
    3. 'pexpr' → logprob: -3.452275276184082
    4. 'e' → logprob: -3.952275276184082
    5. '[]' → logprob: -4.639775276184082
    6. '_' → logprob: -4.702275276184082
    7. 'ieux' → logprob: -4.889775276184082
    8. '[i' → logprob: -5.014775276184082
    9. 'Express' → logprob: -5.077275276184082
    10. '(express' → logprob: -5.077275276184082

Token 609: ' comme' (ID: 7971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11525245755910873
    2. ',' → logprob: -3.7402524948120117
    3. '[' → logprob: -4.115252494812012
    4. ']' → logprob: -4.115252494812012
    5. 's' → logprob: -4.865252494812012
    6. '_possible' → logprob: -4.865252494812012
    7. '_stop' → logprob: -5.115252494812012
    8. '_s' → logprob: -5.365252494812012
    9. '#' → logprob: -5.990252494812012
    10. '<|end|>' → logprob: -6.115252494812012

Token 610: ' à' (ID: 1221)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1593987941741943
    2. 'des' → logprob: -1.2843987941741943
    3. 'un' → logprob: -1.4093987941741943
    4. 'les' → logprob: -2.4093987941741943
    5. ' des' → logprob: -3.5343987941741943
    6. 'points' → logprob: -4.159399032592773
    7. 'stations' → logprob: -5.284399032592773
    8. ' une' → logprob: -5.409399032592773
    9. 'positions' → logprob: -5.909399032592773
    10. 'le' → logprob: -6.284399032592773

Token 611: ' répart' (ID: 147636)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.8579200506210327
    2. 'cho' → logprob: -2.1079201698303223
    3. 'positions' → logprob: -2.3579201698303223
    4. 'part' → logprob: -2.4829201698303223
    5. '#' → logprob: -2.6079201698303223
    6. 'l' → logprob: -2.8579201698303223
    7. ' choisir' → logprob: -2.8579201698303223
    8. 's' → logprob: -3.6079201698303223
    9. 'interval' → logprob: -3.8579201698303223
    10. 'position' → logprob: -3.9829201698303223

Token 612: 'ir' (ID: 380)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.012633368372917175
    2. 'ir' → logprob: -4.637633323669434
    3. 'ies' → logprob: -6.637633323669434
    4. 'issant' → logprob: -7.512633323669434
    5. 'us' → logprob: -9.012633323669434
    6. 'i' → logprob: -9.012633323669434
    7. '   ' → logprob: -9.137633323669434
    8. '-' → logprob: -9.137633323669434
    9. 'ie' → logprob: -9.887633323669434
    10. '"' → logprob: -10.012633323669434

Token 613: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3035959005355835
    2. ' entre' → logprob: -1.3035959005355835
    3. 'sur' → logprob: -2.053596019744873
    4. ' ' → logprob: -3.178596019744873
    5. ' des' → logprob: -3.178596019744873
    6. ' sur' → logprob: -3.303596019744873
    7. '.' → logprob: -3.428596019744873
    8. 'entre' → logprob: -3.553596019744873
    9. 'des' → logprob: -3.803596019744873
    10. '<|end|>' → logprob: -4.053596019744873

Token 614: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.11011757701635361
    2. 'segments' → logprob: -2.7351176738739014
    3. ' les' → logprob: -3.7351176738739014
    4. 'S' → logprob: -4.610117435455322
    5. ' segments' → logprob: -6.735117435455322
    6. 'l' → logprob: -6.860117435455322
    7. 'express' → logprob: -7.485117435455322
    8. ' S' → logprob: -7.610117435455322
    9. 'the' → logprob: -7.735117435455322
    10. 'la' → logprob: -7.860117435455322

Token 615: ' M' (ID: 391)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.3221476674079895
    2. ' segments' → logprob: -1.4471476078033447
    3. 'express' → logprob: -3.6971476078033447
    4. ' S' → logprob: -5.197147846221924
    5. 'S' → logprob: -5.322147846221924
    6. 'interval' → logprob: -6.947147846221924
    7. ' express' → logprob: -7.447147846221924
    8. 'M' → logprob: -7.447147846221924
    9. 'segment' → logprob: -7.572147846221924
    10. 'inter' → logprob: -8.072147369384766

Token 616: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17838448286056519
    2. ' -' → logprob: -1.92838454246521
    3. 'stations' → logprob: -5.178384304046631
    4. 'segments' → logprob: -5.678384304046631
    5. ' stations' → logprob: -6.303384304046631
    6. ' segments' → logprob: -6.303384304046631
    7. ' stops' → logprob: -6.553384304046631
    8. 'express' → logprob: -7.178384304046631
    9. '+' → logprob: -7.178384304046631
    10. ' ' → logprob: -7.303384304046631

Token 617: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002625278721097857
    2. ' ' → logprob: -8.625262260437012
    3. '-' → logprob: -10.375262260437012
    4. ')' → logprob: -11.000262260437012
    5. '#' → logprob: -12.250262260437012
    6. 's' → logprob: -12.687762260437012
    7. '+' → logprob: -12.750262260437012
    8. 'S' → logprob: -13.062762260437012
    9. ']' → logprob: -13.062762260437012
    10. '0' → logprob: -13.125262260437012

Token 618: ' interv' (ID: 37413)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.298374742269516
    2. 'segments' → logprob: -1.4233747720718384
    3. ' intervals' → logprob: -5.048374652862549
    4. 'interval' → logprob: -5.423374652862549
    5. ' ' → logprob: -6.423374652862549
    6. ' interv' → logprob: -6.548374652862549
    7. ' ' → logprob: -6.923374652862549
    8. 'inter' → logprob: -8.048375129699707
    9. '_segments' → logprob: -8.048375129699707
    10. 's' → logprob: -8.298375129699707

Token 619: 'alles' (ID: 28825)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.37693941593170166
    2. 'al' → logprob: -1.6269394159317017
    3. 'alles' → logprob: -2.251939296722412
    4. 'ales' → logprob: -5.251939296722412
    5. '```' → logprob: -6.376939296722412
    6. 'aux' → logprob: -6.751939296722412
    7. 'alls' → logprob: -7.626939296722412
    8. ']' → logprob: -7.751939296722412
    9. '   ' → logprob: -7.876939296722412
    10. 'vals' → logprob: -8.75193977355957

Token 620: ' entre' (ID: 3853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45515885949134827
    2. ',' → logprob: -2.0801589488983154
    3. ']' → logprob: -2.3301589488983154
    4. 's' → logprob: -2.4551589488983154
    5. '[' → logprob: -4.205158710479736
    6. '_between' → logprob: -4.955158710479736
    7. '#' → logprob: -5.205158710479736
    8. '=' → logprob: -5.580158710479736
    9. ')' → logprob: -5.705158710479736
    10. '.' → logprob: -5.705158710479736

Token 621: ' arr' (ID: 1724)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2687971591949463
    2. 'les' → logprob: -1.8937971591949463
    3. 'express' → logprob: -2.6437971591949463
    4. ' S' → logprob: -5.268796920776367
    5. ' les' → logprob: -5.518796920776367
    6. 'stations' → logprob: -5.893796920776367
    7. 'the' → logprob: -7.393796920776367
    8. 's' → logprob: -8.018796920776367
    9. ' express' → logprob: -8.268796920776367
    10. 'l' → logprob: -9.268796920776367

Token 622: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00036953974631614983
    2. 'ets' → logprob: -8.50036907196045
    3. 'êt' → logprob: -9.62536907196045
    4. 'ê' → logprob: -10.12536907196045
    5. 'ôts' → logprob: -10.75036907196045
    6. 'êtes' → logprob: -10.87536907196045
    7. 'ots' → logprob: -12.12536907196045
    8. 'rets' → logprob: -12.37536907196045
    9. ' stops' → logprob: -12.87536907196045
    10. 'Ê' → logprob: -13.37536907196045

Token 623: ' express' (ID: 6101)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08621902763843536
    2. 's' → logprob: -3.461219072341919
    3. '_s' → logprob: -3.711219072341919
    4. 'express' → logprob: -4.96121883392334
    5. ']' → logprob: -5.21121883392334
    6. '_sem' → logprob: -5.46121883392334
    7. '_ex' → logprob: -5.83621883392334
    8. '[' → logprob: -7.08621883392334
    9. '_]' → logprob: -7.21121883392334
    10. '_expr' → logprob: -7.33621883392334

Token 624: ':
' (ID: 734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13056166470050812
    2. '[' → logprob: -3.005561590194702
    3. ',' → logprob: -3.880561590194702
    4. ']' → logprob: -4.505561828613281
    5. ':' → logprob: -5.005561828613281
    6. '[
' → logprob: -5.380561828613281
    7. '_
' → logprob: -5.505561828613281
    8. '#' → logprob: -5.630561828613281
    9. '=' → logprob: -5.755561828613281
    10. '
' → logprob: -5.880561828613281

Token 625: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41108816862106323
    2. '_' → logprob: -2.036088228225708
    3. ',' → logprob: -2.411088228225708
    4. '.' → logprob: -3.661088228225708
    5. '[
' → logprob: -4.161087989807129
    6. ']' → logprob: -4.286087989807129
    7. ' =' → logprob: -4.536087989807129
    8. ':' → logprob: -4.661087989807129
    9. '#' → logprob: -4.661087989807129
    10. '=' → logprob: -5.411087989807129

Token 626: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7225555181503296
    2. 'for' → logprob: -1.4725555181503296
    3. ' for' → logprob: -2.847555637359619
    4. 'x' → logprob: -2.972555637359619
    5. ',' → logprob: -3.847555637359619
    6. ' ' → logprob: -3.972555637359619
    7. '[' → logprob: -4.222555637359619
    8. ' #' → logprob: -4.222555637359619
    9. '.' → logprob: -4.847555637359619
    10. 'dp' → logprob: -4.847555637359619

Token 627: ' interval' (ID: 17116)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40631717443466187
    2. ' _' → logprob: -1.1563172340393066
    3. ' segment' → logprob: -5.531317234039307
    4. 'interval' → logprob: -5.656317234039307
    5. ' interval' → logprob: -6.281317234039307
    6. ' ' → logprob: -6.531317234039307
    7. '_inter' → logprob: -6.781317234039307
    8. ' i' → logprob: -7.031317234039307
    9. 'segment' → logprob: -7.031317234039307
    10. '_interval' → logprob: -7.531317234039307

Token 628: 'le' (ID: 282)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.061565469950437546
    2. 'val' → logprob: -3.686565399169922
    3. ']' → logprob: -4.186565399169922
    4. 'le' → logprob: -5.436565399169922
    5. 'e' → logprob: -6.061565399169922
    6. '#' → logprob: -6.186565399169922
    7. 'u' → logprob: -6.561565399169922
    8. '[' → logprob: -6.561565399169922
    9. 's' → logprob: -6.936565399169922
    10. '=' → logprob: -7.061565399169922

Token 629: ' [' (ID: 723)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4540467858314514
    2. ' _' → logprob: -2.7040467262268066
    3. ' =' → logprob: -2.7040467262268066
    4. 's' → logprob: -3.0790467262268066
    5. '[' → logprob: -3.3290467262268066
    6. ',' → logprob: -3.7040467262268066
    7. '[i' → logprob: -3.7040467262268066
    8. ' s' → logprob: -3.9540467262268066
    9. '_length' → logprob: -4.704046726226807
    10. ']' → logprob: -4.704046726226807

Token 630: 'S' (ID: 50)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11511136591434479
    2. 'M' → logprob: -3.2401113510131836
    3. ']' → logprob: -3.2401113510131836
    4. 'S' → logprob: -4.615111351013184
    5. '_i' → logprob: -4.865111351013184
    6. ' i' → logprob: -5.990111351013184
    7. '_' → logprob: -6.240111351013184
    8. ' _' → logprob: -6.865111351013184
    9. '_]' → logprob: -6.865111351013184
    10. '   ' → logprob: -6.865111351013184

Token 631: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.024892324581742287
    2. '[' → logprob: -4.524892330169678
    3. ']' → logprob: -4.899892330169678
    4. 'i' → logprob: -5.649892330169678
    5. '_i' → logprob: -7.524892330169678
    6. '[
' → logprob: -7.524892330169678
    7. '[j' → logprob: -8.27489185333252
    8. '_idx' → logprob: -8.39989185333252
    9. '[I' → logprob: -8.39989185333252
    10. '_]' → logprob: -8.52489185333252

Token 632: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.07682138681411743
    2. ']' → logprob: -3.4518213272094727
    3. ']+' → logprob: -3.7018213272094727
    4. '+' → logprob: -4.326821327209473
    5. '[i' → logprob: -6.451821327209473
    6. ']]' → logprob: -6.826821327209473
    7. 'i' → logprob: -7.201821327209473
    8. ']],' → logprob: -8.326821327209473
    9. '],
' → logprob: -8.451821327209473
    10. '   ' → logprob: -9.076821327209473

Token 633: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.029780801385641098
    2. ' S' → logprob: -3.529780864715576
    3. 'i' → logprob: -10.779780387878418
    4. ' i' → logprob: -12.029780387878418
    5. '   ' → logprob: -14.154780387878418
    6. ' ' → logprob: -14.154780387878418
    7. ' ' → logprob: -14.279780387878418
    8. '[i' → logprob: -14.404780387878418
    9. ']' → logprob: -14.779780387878418
    10. ',' → logprob: -16.154781341552734

Token 634: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.19688470661640167
    2. '+' → logprob: -2.0718846321105957
    3. 'i' → logprob: -3.4468846321105957
    4. ']' → logprob: -3.9468846321105957
    5. ']+' → logprob: -7.696884632110596
    6. '],' → logprob: -7.696884632110596
    7. '+i' → logprob: -8.946885108947754
    8. '[' → logprob: -9.321885108947754
    9. '_i' → logprob: -9.446885108947754
    10. '   ' → logprob: -9.446885108947754

Token 635: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008543179370462894
    2. ']+' → logprob: -5.258543014526367
    3. ']' → logprob: -5.758543014526367
    4. ' +' → logprob: -9.508543014526367
    5. '],' → logprob: -10.508543014526367
    6. '[i' → logprob: -11.258543014526367
    7. ']]' → logprob: -11.758543014526367
    8. '+i' → logprob: -12.008543014526367
    9. '+]' → logprob: -12.008543014526367
    10. '[' → logprob: -12.758543014526367

Token 636: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5285052061080933
    2. 'i' → logprob: -1.0285052061080933
    3. '1' → logprob: -3.528505325317383
    4. ']+' → logprob: -4.278505325317383
    5. ']' → logprob: -4.653505325317383
    6. ' i' → logprob: -10.153505325317383
    7. '[i' → logprob: -10.278505325317383
    8. ' +' → logprob: -10.528505325317383
    9. '
' → logprob: -10.528505325317383
    10. '   ' → logprob: -10.903505325317383

Token 637: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.45773521065711975
    2. '+' → logprob: -1.3327351808547974
    3. ']' → logprob: -2.457735300064087
    4. ']+' → logprob: -4.332735061645508
    5. '],' → logprob: -6.082735061645508
    6. '])' → logprob: -6.832735061645508
    7. ' +' → logprob: -7.957735061645508
    8. ']],' → logprob: -8.457735061645508
    9. ')]' → logprob: -8.582735061645508
    10. ']])' → logprob: -8.957735061645508

Token 638: ' comprend' (ID: 53093)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05776982754468918
    2. '[i' → logprob: -4.432769775390625
    3. ':' → logprob: -4.807769775390625
    4. '#' → logprob: -4.932769775390625
    5. ',' → logprob: -5.432769775390625
    6. '[' → logprob: -5.682769775390625
    7. '.' → logprob: -5.932769775390625
    8. '],' → logprob: -6.182769775390625
    9. ']:' → logprob: -6.307769775390625
    10. 's' → logprob: -6.307769775390625

Token 639: ' (' (ID: 350)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2910066545009613
    2. ' S' → logprob: -1.5410066843032837
    3. ' (' → logprob: -4.166006565093994
    4. ' ' → logprob: -4.416006565093994
    5. '(S' → logprob: -5.791006565093994
    6. 's' → logprob: -7.041006565093994
    7. ')' → logprob: -7.666006565093994
    8. '(' → logprob: -7.791006565093994
    9. ' ' → logprob: -7.916006565093994
    10. '1' → logprob: -7.916006565093994

Token 640: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.46723902225494385
    2. ')' → logprob: -2.4672389030456543
    3. 'K' → logprob: -2.8422389030456543
    4. '0' → logprob: -3.2172389030456543
    5. '1' → logprob: -3.3422389030456543
    6. ' S' → logprob: -3.7172389030456543
    7. ']' → logprob: -3.7172389030456543
    8. 'x' → logprob: -3.8422389030456543
    9. ' (' → logprob: -4.342238903045654
    10. '(S' → logprob: -4.592238903045654

Token 641: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010591294849291444
    2. 'i' → logprob: -8.376059532165527
    3. '[' → logprob: -8.501059532165527
    4. ']' → logprob: -9.001059532165527
    5. '   ' → logprob: -9.001059532165527
    6. '][' → logprob: -9.501059532165527
    7. '[j' → logprob: -9.751059532165527
    8. ' [' → logprob: -10.251059532165527
    9. '
' → logprob: -10.751059532165527
    10. '```' → logprob: -11.001059532165527

Token 642: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5415118336677551
    2. ']' → logprob: -1.2915117740631104
    3. '[i' → logprob: -2.4165117740631104
    4. ']+' → logprob: -3.0415117740631104
    5. 'i' → logprob: -6.6665120124816895
    6. '+i' → logprob: -6.7915120124816895
    7. '])' → logprob: -7.2915120124816895
    8. ']-' → logprob: -7.5415120124816895
    9. '   ' → logprob: -7.9165120124816895
    10. ' +' → logprob: -7.9165120124816895

Token 643: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5274352431297302
    2. ']' → logprob: -1.027435302734375
    3. ']+' → logprob: -3.652435302734375
    4. 'i' → logprob: -3.777435302734375
    5. '[i' → logprob: -6.777435302734375
    6. '   ' → logprob: -7.652435302734375
    7. ' +' → logprob: -8.277435302734375
    8. '+]' → logprob: -8.402435302734375
    9. '])' → logprob: -8.652435302734375
    10. ' ' → logprob: -8.652435302734375

Token 644: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029981883242726326
    2. ']-' → logprob: -4.404982089996338
    3. ']+' → logprob: -4.654982089996338
    4. '[i' → logprob: -5.904982089996338
    5. '+' → logprob: -6.154982089996338
    6. '])' → logprob: -6.904982089996338
    7. '-' → logprob: -7.404982089996338
    8. ' ]' → logprob: -8.15498161315918
    9. ' -' → logprob: -8.15498161315918
    10. '[' → logprob: -8.27998161315918

Token 645: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2750159204006195
    2. ']+' → logprob: -2.2750158309936523
    3. '+' → logprob: -2.9000158309936523
    4. '-' → logprob: -3.5250158309936523
    5. ' -' → logprob: -3.9000158309936523
    6. '[i' → logprob: -4.400015830993652
    7. ']-' → logprob: -4.525015830993652
    8. ' +' → logprob: -5.900015830993652
    9. '])' → logprob: -6.525015830993652
    10. '[' → logprob: -6.650015830993652

Token 646: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01850365474820137
    2. ' S' → logprob: -4.018503665924072
    3. '1' → logprob: -8.018503189086914
    4. ' ' → logprob: -11.143503189086914
    5. 'i' → logprob: -12.643503189086914
    6. '   ' → logprob: -13.018503189086914
    7. ')' → logprob: -13.643503189086914
    8. ' i' → logprob: -14.643503189086914
    9. '	S' → logprob: -14.643503189086914
    10. '  ' → logprob: -14.768503189086914

Token 647: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0030217990279197693
    2. ']' → logprob: -6.628021717071533
    3. '])' → logprob: -6.753021717071533
    4. '[' → logprob: -8.753022193908691
    5. 'i' → logprob: -9.128022193908691
    6. ')' → logprob: -9.878022193908691
    7. ']-' → logprob: -10.003022193908691
    8. '-' → logprob: -10.753022193908691
    9. '   ' → logprob: -10.878022193908691
    10. ']+' → logprob: -11.253022193908691

Token 648: '])' (ID: 4636)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0287891626358032
    2. ']' → logprob: -1.1537891626358032
    3. '])' → logprob: -1.1537891626358032
    4. ']-' → logprob: -5.278789043426514
    5. '1' → logprob: -5.903789043426514
    6. ' -' → logprob: -6.153789043426514
    7. '+' → logprob: -7.528789043426514
    8. '[' → logprob: -7.778789043426514
    9. '])-' → logprob: -8.403789520263672
    10. '[i' → logprob: -8.778789520263672

Token 649: ' stations' (ID: 26061)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5418546199798584
    2. '-' → logprob: -1.2918546199798584
    3. ')' → logprob: -2.5418546199798584
    4. '+' → logprob: -3.1668546199798584
    5. ' +' → logprob: -4.5418548583984375
    6. '<|end|>' → logprob: -5.4168548583984375
    7. ' )' → logprob: -6.7918548583984375
    8. 'tokens' → logprob: -6.7918548583984375
    9. 'segments' → logprob: -6.7918548583984375
    10. ' segments' → logprob: -7.0418548583984375

Token 650: '.
' (ID: 558)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6677974462509155
    2. ',' → logprob: -1.6677974462509155
    3. ')' → logprob: -2.167797565460205
    4. '.' → logprob: -2.167797565460205
    5. ':' → logprob: -2.667797565460205
    6. ']' → logprob: -2.667797565460205
    7. '[i' → logprob: -3.042797565460205
    8. '#' → logprob: -3.042797565460205
    9. '<|end|>' → logprob: -3.917797565460205
    10. '[' → logprob: -4.417797565460205

Token 651: '#
' (ID: 11240)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5283067226409912
    2. '.' → logprob: -2.153306722640991
    3. 'for' → logprob: -2.403306722640991
    4. ',' → logprob: -2.903306722640991
    5. 'x' → logprob: -3.528306722640991
    6. ']' → logprob: -3.903306722640991
    7. '+' → logprob: -4.15330696105957
    8. ')' → logprob: -4.15330696105957
    9. 'max' → logprob: -4.77830696105957
    10. ',
' → logprob: -5.15330696105957

Token 652: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3439643681049347
    2. 'dp' → logprob: -2.0939643383026123
    3. 'for' → logprob: -2.3439643383026123
    4. 'x' → logprob: -4.468964576721191
    5. '+' → logprob: -4.593964576721191
    6. 'max' → logprob: -4.843964576721191
    7. ',' → logprob: -5.468964576721191
    8. 'def' → logprob: -5.593964576721191
    9. 'interval' → logprob: -5.593964576721191
    10. 'segments' → logprob: -5.593964576721191

Token 653: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28326675295829773
    2. '#' → logprob: -2.03326678276062
    3. 'x' → logprob: -3.78326678276062
    4. 'for' → logprob: -4.033266544342041
    5. 'def' → logprob: -4.158266544342041
    6. 'possible' → logprob: -4.283266544342041
    7. 'max' → logprob: -5.033266544342041
    8. 'positions' → logprob: -5.283266544342041
    9. 'segments' → logprob: -5.408266544342041
    10. 'segment' → logprob: -5.783266544342041

Token 654: ' on' (ID: 402)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.34500253200531
    2. 'i' → logprob: -1.72000253200531
    3. ' S' → logprob: -1.84500253200531
    4. ' i' → logprob: -1.84500253200531
    5. ' (' → logprob: -2.5950026512145996
    6. ' on' → logprob: -3.7200026512145996
    7. ' len' → logprob: -3.8450026512145996
    8. '(' → logprob: -3.9700026512145996
    9. 'len' → logprob: -4.0950026512146
    10. '(i' → logprob: -4.4700026512146

Token 655: ' div' (ID: 4223)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1400235891342163
    2. '_' → logprob: -1.6400235891342163
    3. 've' → logprob: -1.6400235891342163
    4. 'veux' → logprob: -2.640023708343506
    5. 'pe' → logprob: -2.890023708343506
    6. 's' → logprob: -3.265023708343506
    7. 'cho' → logprob: -4.015023708343506
    8. ' veut' → logprob: -4.140023708343506
    9. 'a' → logprob: -4.515023708343506
    10. 'contin' → logprob: -4.640023708343506

Token 656: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.06613919138908386
    2. 'ide' → logprob: -2.8161392211914062
    3. 'iser' → logprob: -5.691139221191406
    4. 'ize' → logprob: -8.816139221191406
    5. 'er' → logprob: -8.941139221191406
    6. 'isez' → logprob: -9.066139221191406
    7. 'ert' → logprob: -9.566139221191406
    8. 'isé' → logprob: -9.941139221191406
    9. 'e' → logprob: -10.441139221191406
    10. '#' → logprob: -10.441139221191406

Token 657: ' cet' (ID: 19505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.4267451763153076
    2. ' le' → logprob: -2.0517451763153076
    3. 'l' → logprob: -2.1767451763153076
    4. 'les' → logprob: -2.3017451763153076
    5. ' S' → logprob: -2.4267451763153076
    6. 'le' → logprob: -2.5517451763153076
    7. ' les' → logprob: -2.9267451763153076
    8. ' chaque' → logprob: -3.3017451763153076
    9. ' la' → logprob: -3.5517451763153076
    10. ' par' → logprob: -3.8017451763153076

Token 658: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.189371258020401
    2. 'interval' → logprob: -1.8143712282180786
    3. 'e' → logprob: -5.564371109008789
    4. ' espace' → logprob: -6.314371109008789
    5. ' interv' → logprob: -6.689371109008789
    6. 'es' → logprob: -6.814371109008789
    7. ' segment' → logprob: -7.439371109008789
    8. 'er' → logprob: -8.189371109008789
    9. '(interval' → logprob: -9.064371109008789
    10. '_interval' → logprob: -9.064371109008789

Token 659: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03632180765271187
    2. '_' → logprob: -4.911321640014648
    3. '#' → logprob: -5.286321640014648
    4. '=' → logprob: -5.536321640014648
    5. 'le' → logprob: -5.661321640014648
    6. '+' → logprob: -5.911321640014648
    7. 's' → logprob: -6.036321640014648
    8. 'S' → logprob: -6.286321640014648
    9. ']' → logprob: -6.286321640014648
    10. 'es' → logprob: -6.661321640014648

Token 660: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.21366871893405914
    2. 'en' → logprob: -2.5886688232421875
    3. '_' → logprob: -3.3386688232421875
    4. ' par' → logprob: -3.5886688232421875
    5. ' entre' → logprob: -4.8386688232421875
    6. ',' → logprob: -5.0886688232421875
    7. '_en' → logprob: -5.0886688232421875
    8. '```' → logprob: -5.3386688232421875
    9. ' ' → logprob: -5.5886688232421875
    10. 's' → logprob: -5.5886688232421875

Token 661: ' segments' (ID: 33749)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5872139930725098
    2. 'segments' → logprob: -1.8372139930725098
    3. 'k' → logprob: -1.9622139930725098
    4. 'p' → logprob: -3.9622139930725098
    5. ' x' → logprob: -4.08721399307251
    6. '(x' → logprob: -4.08721399307251
    7. 'j' → logprob: -4.46221399307251
    8. 'parts' → logprob: -4.58721399307251
    9. 'K' → logprob: -4.71221399307251
    10. ' segments' → logprob: -4.71221399307251

Token 662: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.386130928993225
    2. ' =' → logprob: -1.386130928993225
    3. ' par' → logprob: -1.886130928993225
    4. ' de' → logprob: -2.7611308097839355
    5. ',' → logprob: -3.0111308097839355
    6. '+' → logprob: -3.0111308097839355
    7. ' ég' → logprob: -3.0111308097839355
    8. 'de' → logprob: -3.2611308097839355
    9. ' (' → logprob: -4.0111308097839355
    10. 'by' → logprob: -5.0111308097839355

Token 663: ' arr' (ID: 1724)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7003203630447388
    2. 'des' → logprob: -1.9503203630447388
    3. 'x' → logprob: -2.075320243835449
    4. 'cho' → logprob: -2.825320243835449
    5. 'arr' → logprob: -3.700320243835449
    6. 'les' → logprob: -3.825320243835449
    7. 'K' → logprob: -3.950320243835449
    8. ' K' → logprob: -4.200320243835449
    9. ' les' → logprob: -4.325320243835449
    10. '(x' → logprob: -4.575320243835449

Token 664: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.015424746088683605
    2. 'êt' → logprob: -4.265424728393555
    3. 'ê' → logprob: -7.265424728393555
    4. '^' → logprob: -8.265424728393555
    5. 'êtes' → logprob: -9.265424728393555
    6. 'ets' → logprob: -10.390424728393555
    7. 'r' → logprob: -10.390424728393555
    8. 'ête' → logprob: -11.015424728393555
    9. '[' → logprob: -11.265424728393555
    10. ']' → logprob: -11.390424728393555

Token 665: ' sem' (ID: 2743)
  Prédit: ' sem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sem' → logprob: -0.5824088454246521
    2. '_' → logprob: -1.5824089050292969
    3. '_sem' → logprob: -2.832408905029297
    4. ' supplémentaires' → logprob: -2.957408905029297
    5. ' de' → logprob: -3.082408905029297
    6. 'sem' → logprob: -3.207408905029297
    7. '_s' → logprob: -4.457408905029297
    8. 'de' → logprob: -4.832408905029297
    9. '_se' → logprob: -5.457408905029297
    10. 'semicolon' → logprob: -5.832408905029297

Token 666: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.0901830643415451
    2. 'ê' → logprob: -3.9651830196380615
    3. 'express' → logprob: -4.215183258056641
    4. 'î' → logprob: -4.590183258056641
    5. 'êts' → logprob: -5.965183258056641
    6. 'ie' → logprob: -5.965183258056641
    7. 'ieux' → logprob: -6.090183258056641
    8. '^\' → logprob: -6.090183258056641
    9. 'iex' → logprob: -6.090183258056641
    10. ')' → logprob: -6.465183258056641

Token 667: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1398450881242752
    2. ' supplémentaires' → logprob: -2.264845132827759
    3. 's' → logprob: -4.63984489440918
    4. ' ,' → logprob: -5.63984489440918
    5. 'supp' → logprob: -6.76484489440918
    6. ' (' → logprob: -6.88984489440918
    7. ' chois' → logprob: -7.01484489440918
    8. ':' → logprob: -7.01484489440918
    9. '.' → logprob: -7.38984489440918
    10. '<|end|>' → logprob: -7.51484489440918

Token 668: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.012855833396315575
    2. ' #' → logprob: -4.7628560066223145
    3. ',' → logprob: -6.2628560066223145
    4. '   ' → logprob: -7.6378560066223145
    5. ' on' → logprob: -7.7628560066223145
    6. ' ' → logprob: -8.512855529785156
    7. ' S' → logprob: -8.762855529785156
    8. 'le' → logprob: -9.262855529785156
    9. ' il' → logprob: -9.512855529785156
    10. ' ' → logprob: -9.637855529785156

Token 669: ' l' (ID: 305)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.280916690826416
    2. ' on' → logprob: -2.155916690826416
    3. ' #' → logprob: -2.905916690826416
    4. ' chaque' → logprob: -3.530916690826416
    5. 'on' → logprob: -4.530916690826416
    6. 'ces' → logprob: -5.405916690826416
    7. ' ' → logprob: -5.780916690826416
    8. ',' → logprob: -5.905916690826416
    9. 'each' → logprob: -6.030916690826416
    10. ' each' → logprob: -6.405916690826416

Token 670: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0875110626220703
    2. 'e' → logprob: -1.7125110626220703
    3. 'es' → logprob: -2.5875110626220703
    4. 'ength' → logprob: -3.0875110626220703
    5. 's' → logprob: -3.0875110626220703
    6. ''é' → logprob: -3.3375110626220703
    7. ''espace' → logprob: -3.3375110626220703
    8. 'i' → logprob: -3.8375110626220703
    9. '+' → logprob: -3.8375110626220703
    10. '_' → logprob: -4.58751106262207

Token 671: 'interval' (ID: 37558)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.7297519445419312
    2. 'segments' → logprob: -1.8547519445419312
    3. '_' → logprob: -3.3547520637512207
    4. 'e' → logprob: -3.4797520637512207
    5. ' S' → logprob: -3.8547520637512207
    6. ' length' → logprob: -3.8547520637512207
    7. ' segment' → logprob: -4.104752063751221
    8. ' ' → logprob: -4.604752063751221
    9. ' s' → logprob: -4.729752063751221
    10. 's' → logprob: -4.729752063751221

Token 672: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.41141992807388306
    2. 'e' → logprob: -1.2864198684692383
    3. 'val' → logprob: -3.1614198684692383
    4. 'al' → logprob: -4.786419868469238
    5. 'es' → logprob: -5.786419868469238
    6. 'v' → logprob: -6.536419868469238
    7. ']' → logprob: -6.661419868469238
    8. '_' → logprob: -6.786419868469238
    9. '[' → logprob: -7.286419868469238
    10. '=' → logprob: -8.161419868469238

Token 673: ' est' (ID: 893)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.603259801864624
    2. ' est' → logprob: -1.978259801864624
    3. 's' → logprob: -2.103259801864624
    4. 'length' → logprob: -3.103259801864624
    5. ' length' → logprob: -3.478259801864624
    6. '_len' → logprob: -3.853259801864624
    7. 'len' → logprob: -4.353260040283203
    8. '[' → logprob: -4.728260040283203
    9. '_s' → logprob: -4.853260040283203
    10. 'est' → logprob: -4.978260040283203

Token 674: ' déc' (ID: 8498)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.504482626914978
    2. ' div' → logprob: -1.754482626914978
    3. ' subdiv' → logprob: -2.1294827461242676
    4. ' déc' → logprob: -2.8794827461242676
    5. 'd' → logprob: -4.629482746124268
    6. ' coup' → logprob: -4.754482746124268
    7. 'segment' → logprob: -4.754482746124268
    8. ' divis' → logprob: -5.379482746124268
    9. 'sc' → logprob: -6.254482746124268
    10. 'partition' → logprob: -6.629482746124268

Token 675: 'oup' (ID: 9999)
  Prédit: 'oup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oup' → logprob: -0.010241996496915817
    2. 'ou' → logprob: -4.885241985321045
    3. 'om' → logprob: -7.010241985321045
    4. 'omp' → logprob: -7.260241985321045
    5. 'oupe' → logprob: -7.760241985321045
    6. 'u' → logprob: -8.385242462158203
    7. 'ont' → logprob: -8.635242462158203
    8. 'up' → logprob: -9.635242462158203
    9. '...' → logprob: -11.135242462158203
    10. 'ro' → logprob: -11.385242462158203

Token 676: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2819916605949402
    2. 'ée' → logprob: -1.406991720199585
    3. 'ed' → logprob: -8.156991958618164
    4. '#' → logprob: -9.031991958618164
    5. '```' → logprob: -9.156991958618164
    6. 'e' → logprob: -9.406991958618164
    7. 'É' → logprob: -10.156991958618164
    8. 't' → logprob: -10.406991958618164
    9. 'és' → logprob: -10.406991958618164
    10. 'ant' → logprob: -10.906991958618164

Token 677: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.2547387182712555
    2. ' en' → logprob: -1.504738688468933
    3. ',' → logprob: -6.629738807678223
    4. '```' → logprob: -8.004738807678223
    5. '.' → logprob: -8.129738807678223
    6. ' par' → logprob: -8.379738807678223
    7. ')' → logprob: -9.004738807678223
    8. 'par' → logprob: -9.629738807678223
    9. 's' → logprob: -9.754738807678223
    10. ' into' → logprob: -10.004738807678223

Token 678: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22144116461277008
    2. ' (' → logprob: -2.9714412689208984
    3. '(x' → logprob: -3.0964412689208984
    4. 'segments' → logprob: -3.0964412689208984
    5. ' x' → logprob: -3.8464412689208984
    6. 'K' → logprob: -4.221441268920898
    7. ' K' → logprob: -5.596441268920898
    8. '(K' → logprob: -5.846441268920898
    9. '(' → logprob: -6.096441268920898
    10. '(S' → logprob: -6.096441268920898

Token 679: 'number' (ID: 8096)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17069892585277557
    2. 'K' → logprob: -2.420698881149292
    3. 'segments' → logprob: -4.170699119567871
    4. 'S' → logprob: -4.420699119567871
    5. ' x' → logprob: -4.545699119567871
    6. ')' → logprob: -4.670699119567871
    7. '(x' → logprob: -5.420699119567871
    8. ' (' → logprob: -5.420699119567871
    9. 'M' → logprob: -6.170699119567871
    10. '(' → logprob: -6.420699119567871

Token 680: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08187273889780045
    2. '_segments' → logprob: -3.5818727016448975
    3. ' _' → logprob: -4.331872940063477
    4. 's' → logprob: -4.456872940063477
    5. '_s' → logprob: -5.081872940063477
    6. '_of' → logprob: -5.081872940063477
    7. '+' → logprob: -5.706872940063477
    8. ' +' → logprob: -5.956872940063477
    9. ' de' → logprob: -6.331872940063477
    10. ')' → logprob: -7.081872940063477

Token 681: ' sem' (ID: 2743)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.11216524988412857
    2. ' segments' → logprob: -2.8621652126312256
    3. '_segments' → logprob: -3.3621652126312256
    4. 'st' → logprob: -5.612165451049805
    5. ' stops' → logprob: -5.737165451049805
    6. 'arr' → logprob: -5.862165451049805
    7. 's' → logprob: -7.737165451049805
    8. 'stations' → logprob: -7.737165451049805
    9. 'ar' → logprob: -7.862165451049805
    10. '_s' → logprob: -7.987165451049805

Token 682: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.03435847908258438
    2. 'i' → logprob: -3.784358501434326
    3. '_i' → logprob: -5.909358501434326
    4. 'express' → logprob: -6.159358501434326
    5. 'iex' → logprob: -6.409358501434326
    6. 'ip' → logprob: -6.534358501434326
    7. 'pexpr' → logprob: -7.034358501434326
    8. 'I' → logprob: -7.534358501434326
    9. 'is' → logprob: -8.534358024597168
    10. '_' → logprob: -9.034358024597168

Token 683: ' stops' (ID: 29924)
  Prédit: ' stops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.905576765537262
    2. '_st' → logprob: -1.2805767059326172
    3. '_' → logprob: -2.280576705932617
    4. 'st' → logprob: -2.280576705932617
    5. '_segments' → logprob: -2.905576705932617
    6. '_stop' → logprob: -4.280576705932617
    7. ' segments' → logprob: -4.655576705932617
    8. ')' → logprob: -5.030576705932617
    9. '_arr' → logprob: -5.280576705932617
    10. ' -' → logprob: -5.280576705932617

Token 684: ' in' (ID: 306)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3711221516132355
    2. ' -' → logprob: -1.621122121810913
    3. '+' → logprob: -2.746122121810913
    4. ')' → logprob: -3.496122121810913
    5. '-' → logprob: -4.371122360229492
    6. '_between' → logprob: -6.621122360229492
    7. ')+' → logprob: -7.121122360229492
    8. ' ' → logprob: -7.371122360229492
    9. 's' → logprob: -7.621122360229492
    10. ' plus' → logprob: -7.746122360229492

Token 685: ' interval' (ID: 17116)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1276533603668213
    2. 'the' → logprob: -1.5026533603668213
    3. ' this' → logprob: -2.3776533603668213
    4. 'between' → logprob: -2.3776533603668213
    5. ')' → logprob: -2.7526533603668213
    6. 'segment' → logprob: -3.3776533603668213
    7. ' between' → logprob: -3.6276533603668213
    8. ' segment' → logprob: -3.7526533603668213
    9. ' ' → logprob: -3.7526533603668213
    10. 'this' → logprob: -4.252653121948242

Token 686: ' -' (ID: 533)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5697969794273376
    2. ')' → logprob: -1.4447970390319824
    3. ' +' → logprob: -1.8197970390319824
    4. '+' → logprob: -4.444797039031982
    5. ']' → logprob: -5.069797039031982
    6. ' -' → logprob: -5.569797039031982
    7. ' s' → logprob: -6.319797039031982
    8. ')+' → logprob: -6.444797039031982
    9. '_s' → logprob: -6.569797039031982
    10. ' )' → logprob: -6.569797039031982

Token 687: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. ')' → logprob: -15.625066757202148
    4. '```' → logprob: -15.625066757202148
    5. ' ' → logprob: -17.25006675720215
    6. '-' → logprob: -17.37506675720215
    7. '+' → logprob: -17.75006675720215
    8. '   ' → logprob: -17.87506675720215
    9. '
' → logprob: -18.25006675720215
    10. '#' → logprob: -18.50006675720215

Token 688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -16.8750057220459
    4. '+' → logprob: -17.5000057220459
    5. ')' → logprob: -17.6250057220459
    6. '１' → logprob: -18.2500057220459
    7. '   ' → logprob: -18.4375057220459
    8. '...' → logprob: -18.5625057220459
    9. '' → logprob: -18.7500057220459
    10. '#' → logprob: -18.7500057220459

Token 689: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004971289541572332
    2. ' +' → logprob: -6.129971504211426
    3. ' )' → logprob: -6.254971504211426
    4. ')+' → logprob: -7.754971504211426
    5. '+' → logprob: -7.879971504211426
    6. 'segments' → logprob: -11.379971504211426
    7. ' segments' → logprob: -12.004971504211426
    8. ')*' → logprob: -12.129971504211426
    9. '+)' → logprob: -12.129971504211426
    10. 's' → logprob: -12.254971504211426

Token 690: ' segments' (ID: 33749)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4438377916812897
    2. ' +' → logprob: -2.068837881088257
    3. ' segments' → logprob: -2.318837881088257
    4. 'segments' → logprob: -3.193837881088257
    5. '+' → logprob: -3.693837881088257
    6. ' tokens' → logprob: -4.318837642669678
    7. '<|end|>' → logprob: -4.318837642669678
    8. 'tokens' → logprob: -4.443837642669678
    9. ' )' → logprob: -5.193837642669678
    10. '_segments' → logprob: -5.193837642669678

Token 691: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1652799844741821
    2. '<|end|>' → logprob: -1.1652799844741821
    3. '.' → logprob: -1.7902799844741821
    4. ')' → logprob: -3.4152798652648926
    5. '#' → logprob: -3.9152798652648926
    6. ' =' → logprob: -3.9152798652648926
    7. '+' → logprob: -3.9152798652648926
    8. '[' → logprob: -4.040279865264893
    9. '<|end|>' → logprob: -4.415279865264893
    10. 's' → logprob: -4.415279865264893

Token 692: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 693: ' chaque' (ID: 21194)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2478286176919937
    2. '<|end|>' → logprob: -2.497828722000122
    3. '+' → logprob: -3.247828722000122
    4. ')' → logprob: -3.872828722000122
    5. '...' → logprob: -4.247828483581543
    6. '.' → logprob: -4.247828483581543
    7. 'and' → logprob: -4.997828483581543
    8. ',' → logprob: -4.997828483581543
    9. ' and' → logprob: -5.372828483581543
    10. ' #' → logprob: -5.372828483581543

Token 694: ' segment' (ID: 14806)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1161620244383812
    2. ' _' → logprob: -2.491162061691284
    3. ' segment' → logprob: -4.491161823272705
    4. 'segment' → logprob: -5.991161823272705
    5. '_segment' → logprob: -6.491161823272705
    6. ')' → logprob: -6.991161823272705
    7. ',' → logprob: -6.991161823272705
    8. '#' → logprob: -6.991161823272705
    9. '_stop' → logprob: -6.991161823272705
    10. ' =' → logprob: -7.116161823272705

Token 695: ' a' (ID: 261)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.21205635368824005
    2. '_len' → logprob: -3.2120563983917236
    3. 'length' → logprob: -3.7120563983917236
    4. ' a' → logprob: -3.7120563983917236
    5. ' =' → logprob: -4.2120561599731445
    6. '_' → logprob: -4.2120561599731445
    7. ' has' → logprob: -4.5870561599731445
    8. ' length' → logprob: -4.8370561599731445
    9. ' _' → logprob: -5.0870561599731445
    10. 's' → logprob: -5.7120561599731445

Token 696: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8093851804733276
    2. ' une' → logprob: -0.8093851804733276
    3. 'une' → logprob: -3.184385299682617
    4. 'un' → logprob: -3.434385299682617
    5. 'length' → logprob: -4.434385299682617
    6. ' length' → logprob: -4.434385299682617
    7. '_length' → logprob: -6.059385299682617
    8. ' au' → logprob: -6.184385299682617
    9. 'len' → logprob: -6.559385299682617
    10. '_' → logprob: -6.559385299682617

Token 697: ' longueur' (ID: 104613)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.2200278788805008
    2. 'length' → logprob: -2.7200279235839844
    3. ' _' → logprob: -2.9700279235839844
    4. '_' → logprob: -3.5950279235839844
    5. '_length' → logprob: -3.9700279235839844
    6. ' max' → logprob: -4.720027923583984
    7. ' longueur' → logprob: -5.345027923583984
    8. ' ' → logprob: -5.720027923583984
    9. ' space' → logprob: -6.470027923583984
    10. ' distance' → logprob: -6.470027923583984

Token 698: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47008126974105835
    2. ' +' → logprob: -1.9700813293457031
    3. '=' → logprob: -2.220081329345703
    4. '+' → logprob: -3.345081329345703
    5. '_' → logprob: -3.345081329345703
    6. ' ' → logprob: -4.095081329345703
    7. ' of' → logprob: -5.470081329345703
    8. ' -' → logprob: -5.470081329345703
    9. ' +=' → logprob: -5.720081329345703
    10. ',' → logprob: -6.095081329345703

Token 699: ' stations' (ID: 26061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7079893350601196
    2. 'stations' → logprob: -1.3329893350601196
    3. ' stations' → logprob: -2.70798921585083
    4. '+' → logprob: -3.08298921585083
    5. ' ' → logprob: -3.33298921585083
    6. 'segments' → logprob: -3.58298921585083
    7. ' segments' → logprob: -4.45798921585083
    8. ' _' → logprob: -4.58298921585083
    9. 'station' → logprob: -5.08298921585083
    10. ' +' → logprob: -5.33298921585083

Token 700: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 701: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1164995431900024
    2. '#' → logprob: -1.4914995431900024
    3. '[' → logprob: -2.116499423980713
    4. ',' → logprob: -2.616499423980713
    5. ']' → logprob: -2.741499423980713
    6. '=' → logprob: -2.866499423980713
    7. ')' → logprob: -3.241499423980713
    8. ':' → logprob: -4.241499423980713
    9. '.' → logprob: -4.366499423980713
    10. ' =' → logprob: -4.366499423980713

Token 702: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4978551864624023
    2. '_' → logprob: -1.4978551864624023
    3. ')' → logprob: -1.8728551864624023
    4. ']' → logprob: -1.9978551864624023
    5. ',' → logprob: -2.7478551864624023
    6. '[' → logprob: -3.3728551864624023
    7. 'x' → logprob: -3.4978551864624023
    8. '.' → logprob: -3.6228551864624023
    9. 's' → logprob: -4.372855186462402
    10. 'def' → logprob: -4.372855186462402

Token 703: ' Par' (ID: 3371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5707520842552185
    2. 'dp' → logprob: -1.6957521438598633
    3. 'def' → logprob: -2.0707521438598633
    4. 'for' → logprob: -3.1957521438598633
    5. ']' → logprob: -4.070752143859863
    6. 'x' → logprob: -4.195752143859863
    7. 'max' → logprob: -4.695752143859863
    8. '_' → logprob: -5.570752143859863
    9. ')' → logprob: -5.695752143859863
    10. 'segments' → logprob: -5.695752143859863

Token 704: ' vide' (ID: 21835)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.48188939690589905
    2. 'ts' → logprob: -1.3568893671035767
    3. '#' → logprob: -2.856889486312866
    4. 'def' → logprob: -4.606889247894287
    5. 's' → logprob: -4.856889247894287
    6. '_' → logprob: -5.606889247894287
    7. 'ce' → logprob: -5.731889247894287
    8. ' conséquent' → logprob: -5.731889247894287
    9. 'd' → logprob: -5.856889247894287
    10. '```' → logprob: -5.981889247894287

Token 705: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.094773530960083
    2. 'space' → logprob: -1.719773530960083
    3. 'l' → logprob: -2.594773530960083
    4. 'n' → logprob: -2.969773530960083
    5. 'line' → logprob: -3.094773530960083
    6. ')' → logprob: -3.344773530960083
    7. '[' → logprob: -3.344773530960083
    8. 'u' → logprob: -3.719773530960083
    9. 'e' → logprob: -4.219773292541504
    10. '[n' → logprob: -4.344773292541504

Token 706: ' choisir' (ID: 47004)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13455843925476074
    2. '<|end|>' → logprob: -2.3845584392547607
    3. '#' → logprob: -4.13455867767334
    4. '_' → logprob: -5.63455867767334
    5. '=' → logprob: -5.88455867767334
    6. '<|end|>' → logprob: -6.25955867767334
    7. ' 
' → logprob: -6.63455867767334
    8. '
' → logprob: -6.63455867767334
    9. ')' → logprob: -7.00955867767334
    10. '[' → logprob: -7.25955867767334

Token 707: ' plus' (ID: 2932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.445199191570282
    2. '0' → logprob: -1.1951992511749268
    3. '1' → logprob: -4.070199012756348
    4. ' (' → logprob: -4.695199012756348
    5. ' K' → logprob: -4.945199012756348
    6. ' une' → logprob: -5.070199012756348
    7. ' un' → logprob: -5.445199012756348
    8. ' des' → logprob: -6.445199012756348
    9. ' au' → logprob: -6.695199012756348
    10. ' la' → logprob: -6.695199012756348

Token 708: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.495140016078949
    2. ' d' → logprob: -1.6201400756835938
    3. ' de' → logprob: -1.8701400756835938
    4. ' ' → logprob: -4.745140075683594
    5. ' _' → logprob: -4.870140075683594
    6. 'd' → logprob: -4.995140075683594
    7. 'de' → logprob: -5.245140075683594
    8. 'ieurs' → logprob: -5.620140075683594
    9. '_de' → logprob: -6.870140075683594
    10. '<|end|>' → logprob: -7.370140075683594

Token 709: ' stops' (ID: 29924)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.9452417492866516
    2. 'stations' → logprob: -1.5702416896820068
    3. 'arr' → logprob: -1.6952416896820068
    4. ' stations' → logprob: -2.195241689682007
    5. 'ar' → logprob: -3.445241689682007
    6. ' stops' → logprob: -3.695241689682007
    7. ' ar' → logprob: -4.820241928100586
    8. ' sem' → logprob: -4.945241928100586
    9. ' espaces' → logprob: -4.945241928100586
    10. ' ' → logprob: -5.445241928100586

Token 710: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 711: ' décou' (ID: 68302)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9139444231987
    2. ' plus' → logprob: -1.2889444828033447
    3. ' better' → logprob: -2.2889444828033447
    4. ' more' → logprob: -3.2889444828033447
    5. ' mieux' → logprob: -3.2889444828033447
    6. ' meilleur' → logprob: -3.7889444828033447
    7. ' meilleure' → logprob: -4.163944244384766
    8. ' meilleures' → logprob: -4.288944244384766
    9. ' une' → logprob: -5.038944244384766
    10. ' meilleurs' → logprob: -5.038944244384766

Token 712: 'per' (ID: 543)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.024575060233473778
    2. 'p' → logprob: -4.149575233459473
    3. 'per' → logprob: -5.274575233459473
    4. 'pe' → logprob: -6.399575233459473
    5. 'pé' → logprob: -6.649575233459473
    6. 'Page' → logprob: -9.149575233459473
    7. 'pl' → logprob: -9.774575233459473
    8. 'pages' → logprob: -10.399575233459473
    9. '#' → logprob: -10.899575233459473
    10. 'vert' → logprob: -11.024575233459473

Token 713: ' segments' (ID: 33749)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 714: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 715: ' parties' (ID: 13531)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.1367986500263214
    2. 'plus' → logprob: -2.636798620223999
    3. ' segments' → logprob: -3.886798620223999
    4. 'sm' → logprob: -4.761798858642578
    5. 'moins' → logprob: -5.011798858642578
    6. 'm' → logprob: -5.636798858642578
    7. ' plus' → logprob: -5.761798858642578
    8. '+' → logprob: -5.886798858642578
    9. 'segment' → logprob: -6.386798858642578
    10. ' morceaux' → logprob: -6.636798858642578

Token 716: ' plus' (ID: 2932)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 717: ' petites' (ID: 55617)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.5132339000701904
    2. 'pet' → logprob: -1.0132339000701904
    3. 'fin' → logprob: -3.8882339000701904
    4. 'f' → logprob: -4.3882341384887695
    5. 'fine' → logprob: -6.5132341384887695
    6. ' petites' → logprob: -6.5132341384887695
    7. 'court' → logprob: -6.7632341384887695
    8. 'small' → logprob: -7.6382341384887695
    9. 'c' → logprob: -8.13823413848877
    10. 'uniform' → logprob: -9.13823413848877

Token 718: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 719: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.619912326335907
    2. '<|end|>' → logprob: -1.1199123859405518
    3. ',' → logprob: -3.1199123859405518
    4. ' #' → logprob: -3.2449123859405518
    5. '...' → logprob: -3.8699123859405518
    6. ' ' → logprob: -4.244912147521973
    7. '.' → logprob: -4.994912147521973
    8. '<|end|>' → logprob: -6.244912147521973
    9. ')' → logprob: -6.744912147521973
    10. ' ,' → logprob: -7.244912147521973

Token 720: ' rédu' (ID: 42105)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.5686238408088684
    2. '#' → logprob: -0.9436238408088684
    3. 'ce' → logprob: -4.443624019622803
    4. ' donc' → logprob: -5.068624019622803
    5. ' #' → logprob: -5.193624019622803
    6. ' which' → logprob: -5.693624019622803
    7. 'which' → logprob: -5.818624019622803
    8. ' mais' → logprob: -6.068624019622803
    9. ' permettant' → logprob: -6.068624019622803
    10. ' thus' → logprob: -6.568624019622803

Token 721: 'isant' (ID: 56111)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.21053242683410645
    2. 'fin' → logprob: -3.3355324268341064
    3. 'uire' → logprob: -3.9605324268341064
    4. 'def' → logprob: -4.335532188415527
    5. 'p' → logprob: -4.585532188415527
    6. '#' → logprob: -4.710532188415527
    7. 'er' → logprob: -5.085532188415527
    8. 'per' → logprob: -5.085532188415527
    9. 'pl' → logprob: -5.210532188415527
    10. 'pond' → logprob: -5.210532188415527

Token 722: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.1955106556415558
    2. ' les' → logprob: -2.3205106258392334
    3. ' l' → logprob: -3.4455106258392334
    4. 'le' → logprob: -3.9455106258392334
    5. ' leur' → logprob: -4.6955108642578125
    6. ' la' → logprob: -4.6955108642578125
    7. '_le' → logprob: -5.6955108642578125
    8. ' leurs' → logprob: -6.5705108642578125
    9. ' ' → logprob: -6.8205108642578125
    10. 'leur' → logprob: -7.1955108642578125

Token 723: ' somme' (ID: 64484)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.5924263596534729
    2. ' temps' → logprob: -1.0924263000488281
    3. ' cout' → logprob: -3.342426300048828
    4. 'cout' → logprob: -4.342426300048828
    5. '\n' → logprob: -4.967426300048828
    6. ' max' → logprob: -5.217426300048828
    7. ' time' → logprob: -5.217426300048828
    8. 'distance' → logprob: -5.342426300048828
    9. ' distance' → logprob: -5.342426300048828
    10. 'co' → logprob: -5.717426300048828

Token 724: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.04078313335776329
    2. ' de' → logprob: -3.915783166885376
    3. 'des' → logprob: -5.415782928466797
    4. '_' → logprob: -5.540782928466797
    5. ' d' → logprob: -5.665782928466797
    6. '_des' → logprob: -5.790782928466797
    7. ')' → logprob: -6.540782928466797
    8. ' _' → logprob: -6.915782928466797
    9. ' of' → logprob: -7.415782928466797
    10. '<|end|>' → logprob: -8.290782928466797

Token 725: ' segments' (ID: 33749)
  Prédit: ' temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.8208308815956116
    2. 'temps' → logprob: -0.8208308815956116
    3. ' segments' → logprob: -2.695830821990967
    4. 'segments' → logprob: -4.570830821990967
    5. ' distances' → logprob: -4.695830821990967
    6. ' coûts' → logprob: -4.945830821990967
    7. ' segment' → logprob: -5.195830821990967
    8. 'long' → logprob: -5.820830821990967
    9. ' cout' → logprob: -5.820830821990967
    10. 'cout' → logprob: -5.945830821990967

Token 726: ' *' (ID: 425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6712092161178589
    2. ')' → logprob: -1.1712092161178589
    3. ',' → logprob: -3.1712093353271484
    4. '<|end|>' → logprob: -3.5462093353271484
    5. 's' → logprob: -3.6712093353271484
    6. ']' → logprob: -4.046209335327148
    7. ' _' → logprob: -4.296209335327148
    8. '[' → logprob: -4.421209335327148
    9. '.' → logprob: -5.546209335327148
    10. '<|end|>' → logprob: -5.796209335327148

Token 727: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.20155668258666992
    2. ' C' → logprob: -1.70155668258667
    3. ' ' → logprob: -9.826557159423828
    4. ' ' → logprob: -10.576557159423828
    5. ''' → logprob: -11.076557159423828
    6. '```' → logprob: -12.076557159423828
    7. 'length' → logprob: -12.201557159423828
    8. '<|end|>' → logprob: -12.326557159423828
    9. ' (' → logprob: -12.514057159423828
    10. 'time' → logprob: -12.701557159423828

Token 728: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.489938348531723
    2. '[' → logprob: -2.614938259124756
    3. '+' → logprob: -3.114938259124756
    4. ']' → logprob: -3.114938259124756
    5. '<|end|>' → logprob: -3.239938259124756
    6. ',' → logprob: -3.614938259124756
    7. '_' → logprob: -3.864938259124756
    8. '#' → logprob: -3.989938259124756
    9. '
' → logprob: -4.114938259124756
    10. '[
' → logprob: -4.239938259124756

Token 729: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25911033153533936
    2. ' ' → logprob: -2.259110450744629
    3. '<|end|>' → logprob: -3.134110450744629
    4. ' #' → logprob: -3.509110450744629
    5. ' mais' → logprob: -4.509110450744629
    6. ' but' → logprob: -5.009110450744629
    7. '...' → logprob: -5.259110450744629
    8. ')' → logprob: -5.509110450744629
    9. '+' → logprob: -5.634110450744629
    10. ',' → logprob: -5.759110450744629

Token 730: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5162359476089478
    2. '<|end|>' → logprob: -1.7662359476089478
    3. ' #' → logprob: -2.641235828399658
    4. '...' → logprob: -3.266235828399658
    5. ' ' → logprob: -3.641235828399658
    6. ' ' → logprob: -4.266235828399658
    7. 'max' → logprob: -4.891235828399658
    8. '<|end|>' → logprob: -5.516235828399658
    9. '.' → logprob: -5.766235828399658
    10. 'plus' → logprob: -5.766235828399658

Token 731: ' temps' (ID: 11160)
  Prédit: ' temps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.4291822612285614
    2. 'temps' → logprob: -1.5541822910308838
    3. ' coût' → logprob: -3.304182291030884
    4. ' local' → logprob: -3.679182291030884
    5. 'co' → logprob: -4.554182052612305
    6. ' time' → logprob: -4.679182052612305
    7. ' gain' → logprob: -4.804182052612305
    8. ' cost' → logprob: -5.054182052612305
    9. '\n' → logprob: -5.179182052612305
    10. ' meilleur' → logprob: -5.304182052612305

Token 732: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3902369737625122
    2. ',' → logprob: -2.3902368545532227
    3. '.' → logprob: -3.0152368545532227
    4. '+' → logprob: -3.3902368545532227
    5. '<|end|>' → logprob: -3.3902368545532227
    6. 's' → logprob: -3.7652368545532227
    7. '#' → logprob: -4.265236854553223
    8. '
' → logprob: -4.390236854553223
    9. ']' → logprob: -4.515236854553223
    10. '[' → logprob: -5.015236854553223

Token 733: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.3712306320667267
    2. 'temps' → logprob: -2.4962306022644043
    3. 'segments' → logprob: -2.6212306022644043
    4. 'segment' → logprob: -3.4962306022644043
    5. 'plus' → logprob: -3.4962306022644043
    6. 'stations' → logprob: -3.9962306022644043
    7. 'minutes' → logprob: -4.496230602264404
    8. 'train' → logprob: -4.621230602264404
    9. 'express' → logprob: -4.746230602264404
    10. 'moins' → logprob: -4.746230602264404

Token 734: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.03699524328112602
    2. 'i' → logprob: -4.2869954109191895
    3. 'ip' → logprob: -4.6619954109191895
    4. 'I' → logprob: -6.4119954109191895
    5. '```' → logprob: -6.5369954109191895
    6. 'express' → logprob: -6.7869954109191895
    7. '_i' → logprob: -6.7869954109191895
    8. 'pexpr' → logprob: -6.9119954109191895
    9. 'ipr' → logprob: -7.7869954109191895
    10. 'op' → logprob: -8.286994934082031

Token 735: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7156534194946289
    2. ',' → logprob: -1.965653419494629
    3. '<|end|>' → logprob: -2.590653419494629
    4. ':' → logprob: -2.715653419494629
    5. ']' → logprob: -3.090653419494629
    6. '
' → logprob: -3.340653419494629
    7. '[' → logprob: -3.715653419494629
    8. '#' → logprob: -3.715653419494629
    9. '.' → logprob: -4.090653419494629
    10. ',
' → logprob: -4.465653419494629

Token 736: '#
' (ID: 11240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8130450248718262
    2. '#' → logprob: -1.6880450248718262
    3. '
' → logprob: -1.9380450248718262
    4. ']' → logprob: -2.563045024871826
    5. ',' → logprob: -3.188045024871826
    6. ',
' → logprob: -3.688045024871826
    7. '[' → logprob: -3.813045024871826
    8. 'def' → logprob: -4.438045024871826
    9. '[
' → logprob: -4.813045024871826
    10. '_' → logprob: -5.438045024871826

Token 737: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7503068447113037
    2. 'def' → logprob: -1.6253068447113037
    3. ')' → logprob: -3.0003068447113037
    4. 'for' → logprob: -3.1253068447113037
    5. 'x' → logprob: -3.2503068447113037
    6. '[' → logprob: -3.3753068447113037
    7. ']' → logprob: -3.7503068447113037
    8. ',' → logprob: -3.8753068447113037
    9. '(' → logprob: -4.125307083129883
    10. '\' → logprob: -4.625307083129883

Token 738: ' Dé' (ID: 27247)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19264839589595795
    2. '#' → logprob: -2.317648410797119
    3. 'def' → logprob: -3.067648410797119
    4. 'for' → logprob: -5.692648410797119
    5. 'DP' → logprob: -5.692648410797119
    6. 'res' → logprob: -6.067648410797119
    7. 'arr' → logprob: -6.192648410797119
    8. 'selected' → logprob: -6.192648410797119
    9. 'remaining' → logprob: -6.317648410797119
    10. 'max' → logprob: -6.442648410797119

Token 739: 'ta' (ID: 1524)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.794061770662665e-05
    2. '...' → logprob: -10.75009822845459
    3. 'r' → logprob: -10.75009822845459
    4. '#' → logprob: -10.87509822845459
    5. '
' → logprob: -11.50009822845459
    6. '```' → logprob: -12.37509822845459
    7. 'def' → logprob: -12.50009822845459
    8. 'ф' → logprob: -13.37509822845459
    9. 'fen' → logprob: -13.50009822845459
    10. 'v' → logprob: -13.50009822845459

Token 740: 'illons' (ID: 97340)
  Prédit: 'il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'il' → logprob: -1.7961699962615967
    2. 't' → logprob: -1.9211699962615967
    3. 'tail' → logprob: -1.9211699962615967
    4. 'tails' → logprob: -2.0461699962615967
    5. 'l' → logprob: -2.5461699962615967
    6. 'r' → logprob: -2.7961699962615967
    7. '...' → logprob: -2.9211699962615967
    8. 'f' → logprob: -3.5461699962615967
    9. 'u' → logprob: -3.7961699962615967
    10. 'fin' → logprob: -4.046170234680176

Token 741: ':
' (ID: 734)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19907726347446442
    2. '...' → logprob: -2.8240773677825928
    3. 'for' → logprob: -3.4490773677825928
    4. 'def' → logprob: -3.5740773677825928
    5. 'interval' → logprob: -3.9490773677825928
    6. ':' → logprob: -4.449077129364014
    7. 'dp' → logprob: -5.074077129364014
    8. 'import' → logprob: -5.949077129364014
    9. ' for' → logprob: -6.199077129364014
    10. 'from' → logprob: -6.199077129364014

Token 742: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.45612919330596924
    2. '#' → logprob: -1.7061291933059692
    3. 'for' → logprob: -3.0811290740966797
    4. 'def' → logprob: -3.2061290740966797
    5. 'from' → logprob: -3.7061290740966797
    6. 'segments' → logprob: -4.58112907409668
    7. 'segment' → logprob: -4.58112907409668
    8. 'interval' → logprob: -4.83112907409668
    9. 'stop' → logprob: -5.20612907409668
    10. 'max' → logprob: -5.58112907409668

Token 743: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6246770024299622
    2. '#' → logprob: -1.3746769428253174
    3. 'def' → logprob: -2.7496769428253174
    4. 'for' → logprob: -2.8746769428253174
    5. 'interval' → logprob: -4.1246771812438965
    6. 'segment' → logprob: -4.3746771812438965
    7. 'from' → logprob: -4.4996771812438965
    8. 'pass' → logprob: -5.2496771812438965
    9. 'segments' → logprob: -5.2496771812438965
    10. 'total' → logprob: -5.6246771812438965

Token 744: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3196006119251251
    2. '#' → logprob: -1.8196005821228027
    3. 'segments' → logprob: -3.5696005821228027
    4. 'def' → logprob: -4.069600582122803
    5. 'from' → logprob: -4.194600582122803
    6. 'interval' → logprob: -4.444600582122803
    7. 'dist' → logprob: -5.069600582122803
    8. 'length' → logprob: -5.194600582122803
    9. 'segment' → logprob: -5.444600582122803
    10. 'arr' → logprob: -5.569600582122803

Token 745: ' fixe' (ID: 111690)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.2658326625823975
    2. ' vais' → logprob: -1.5158326625823975
    3. '_' → logprob: -2.2658326625823975
    4. ' va' → logprob: -2.6408326625823975
    5. ' =' → logprob: -3.0158326625823975
    6. ' peux' → logprob: -3.1408326625823975
    7. 'continue' → logprob: -3.5158326625823975
    8. ' #' → logprob: -4.265832901000977
    9. '#' → logprob: -4.265832901000977
    10. '=' → logprob: -4.515832901000977

Token 746: ' où' (ID: 15113)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45880740880966187
    2. ' ' → logprob: -1.4588074684143066
    3. '#' → logprob: -4.083807468414307
    4. ',' → logprob: -4.583807468414307
    5. 'le' → logprob: -4.583807468414307
    6. ' le' → logprob: -4.708807468414307
    7. ' =' → logprob: -4.833807468414307
    8. 's' → logprob: -4.833807468414307
    9. '  ' → logprob: -4.833807468414307
    10. ' l' → logprob: -5.208807468414307

Token 747: ' choisir' (ID: 47004)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4636019170284271
    2. 's' → logprob: -1.7136019468307495
    3. ' les' → logprob: -2.96360182762146
    4. 'arr' → logprob: -3.33860182762146
    5. 'placer' → logprob: -4.338602066040039
    6. '#' → logprob: -4.463602066040039
    7. 'les' → logprob: -4.838602066040039
    8. ' arrêter' → logprob: -4.838602066040039
    9. ' continuer' → logprob: -5.088602066040039
    10. 'contin' → logprob: -5.213602066040039

Token 748: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5951066613197327
    2. ' des' → logprob: -1.845106601715088
    3. ' ' → logprob: -2.345106601715088
    4. 'les' → logprob: -2.720106601715088
    5. '<|end|>' → logprob: -2.720106601715088
    6. 'des' → logprob: -4.095106601715088
    7. ',' → logprob: -4.470106601715088
    8. '_' → logprob: -5.470106601715088
    9. 's' → logprob: -5.720106601715088
    10. ' =' → logprob: -5.845106601715088

Token 749: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6150522828102112
    2. ' stops' → logprob: -1.8650522232055664
    3. ' arr' → logprob: -2.1150522232055664
    4. 'ar' → logprob: -3.1150522232055664
    5. 'sem' → logprob: -3.1150522232055664
    6. ' K' → logprob: -3.6150522232055664
    7. ' sem' → logprob: -3.7400522232055664
    8. 'K' → logprob: -4.615052223205566
    9. ' ar' → logprob: -4.740052223205566
    10. 'stations' → logprob: -4.740052223205566

Token 750: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00018280261429026723
    2. 'êt' → logprob: -9.00018310546875
    3. 'êtes' → logprob: -10.12518310546875
    4. '^' → logprob: -12.00018310546875
    5. '#' → logprob: -12.75018310546875
    6. 'ets' → logprob: -12.87518310546875
    7. 'ôts' → logprob: -13.25018310546875
    8. 'ê' → logprob: -13.37518310546875
    9. 'rets' → logprob: -14.00018310546875
    10. '\' → logprob: -14.25018310546875

Token 751: ' sem' (ID: 2743)
  Prédit: ' sem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sem' → logprob: -1.0144331455230713
    2. ' supplémentaires' → logprob: -1.0144331455230713
    3. 'sem' → logprob: -1.7644331455230713
    4. '#' → logprob: -3.8894331455230713
    5. 'supp' → logprob: -3.8894331455230713
    6. 's' → logprob: -4.139432907104492
    7. ';' → logprob: -4.889432907104492
    8. ',' → logprob: -5.389432907104492
    9. 'semicolon' → logprob: -5.389432907104492
    10. ' supplémentaire' → logprob: -5.514432907104492

Token 752: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.0016968417912721634
    2. 'i' → logprob: -7.626697063446045
    3. '_i' → logprob: -8.501696586608887
    4. 'iex' → logprob: -9.251696586608887
    5. 'ip' → logprob: -9.626696586608887
    6. 'I' → logprob: -9.751696586608887
    7. 'ippines' → logprob: -9.876696586608887
    8. 'express' → logprob: -9.876696586608887
    9. 'î' → logprob: -10.126696586608887
    10. 'idepress' → logprob: -10.501696586608887

Token 753: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0356196165084839
    2. '<|end|>' → logprob: -2.2856197357177734
    3. ' supplémentaires' → logprob: -2.2856197357177734
    4. '_' → logprob: -2.5356197357177734
    5. ' =' → logprob: -2.6606197357177734
    6. '[' → logprob: -3.0356197357177734
    7. 's' → logprob: -3.2856197357177734
    8. '#' → logprob: -3.4106197357177734
    9. '.' → logprob: -3.5356197357177734
    10. ' supplémentaire' → logprob: -3.9106197357177734

Token 754: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.19368967413902283
    2. 'l' → logprob: -2.8186895847320557
    3. ' l' → logprob: -3.8186895847320557
    4. 'les' → logprob: -4.068689823150635
    5. ' la' → logprob: -4.443689823150635
    6. 'la' → logprob: -4.693689823150635
    7. '#' → logprob: -4.693689823150635
    8. ' les' → logprob: -4.693689823150635
    9. ' le' → logprob: -5.068689823150635
    10. 'le' → logprob: -5.193689823150635

Token 755: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.7357858419418335
    2. ' segment' → logprob: -1.2357858419418335
    3. 'interval' → logprob: -1.6107858419418335
    4. 'segment' → logprob: -3.735785961151123
    5. ' #' → logprob: -6.610785961151123
    6. ' ' → logprob: -6.985785961151123
    7. ' ' → logprob: -7.485785961151123
    8. 'inter' → logprob: -7.610785961151123
    9. '_interval' → logprob: -7.985785961151123
    10. ' intervalo' → logprob: -8.235785484313965

Token 756: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05990588665008545
    2. 'v' → logprob: -3.809906005859375
    3. 'al' → logprob: -3.809906005859375
    4. 'vale' → logprob: -5.559906005859375
    5. ']' → logprob: -5.934906005859375
    6. '#' → logprob: -6.434906005859375
    7. 'vel' → logprob: -7.059906005859375
    8. '_' → logprob: -7.809906005859375
    9. 'ale' → logprob: -8.059906005859375
    10. 'vals' → logprob: -8.184906005859375

Token 757: '.
' (ID: 558)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.045692801475525
    2. '#' → logprob: -1.170692801475525
    3. ',' → logprob: -1.795692801475525
    4. ':' → logprob: -3.4206929206848145
    5. '[' → logprob: -3.4206929206848145
    6. 'for' → logprob: -3.7956929206848145
    7. '.' → logprob: -4.1706929206848145
    8. ' =' → logprob: -4.5456929206848145
    9. ' #' → logprob: -4.6706929206848145
    10. 'i' → logprob: -5.1706929206848145

Token 758: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6778913736343384
    2. '[' → logprob: -1.6778913736343384
    3. ',' → logprob: -3.427891254425049
    4. ')' → logprob: -3.427891254425049
    5. '=' → logprob: -3.427891254425049
    6. ' =' → logprob: -3.677891254425049
    7. 'x' → logprob: -3.677891254425049
    8. ']' → logprob: -3.927891254425049
    9. '\' → logprob: -4.177891254425049
    10. ':' → logprob: -4.302891254425049

Token 759: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8601794242858887
    2. ']' → logprob: -2.2351794242858887
    3. ',' → logprob: -2.4851794242858887
    4. ')' → logprob: -2.4851794242858887
    5. 'x' → logprob: -2.4851794242858887
    6. 'for' → logprob: -2.6101794242858887
    7. '[' → logprob: -3.7351794242858887
    8. 'def' → logprob: -4.110179424285889
    9. ',
' → logprob: -4.235179424285889
    10. ' =' → logprob: -4.610179424285889

Token 760: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2974279820919037
    2. 'dp' → logprob: -1.672428011894226
    3. 'for' → logprob: -3.2974278926849365
    4. 'pass' → logprob: -4.422428131103516
    5. 'def' → logprob: -4.672428131103516
    6. ' #' → logprob: -5.547428131103516
    7. 'continue' → logprob: -6.922428131103516
    8. 'import' → logprob: -7.172428131103516
    9. ' for' → logprob: -7.297428131103516
    10. ' dp' → logprob: -7.547428131103516

Token 761: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36164817214012146
    2. ' i' → logprob: -1.2366482019424438
    3. '_' → logprob: -5.111648082733154
    4. ' chaque' → logprob: -6.236648082733154
    5. 'interval' → logprob: -6.486648082733154
    6. ' interval' → logprob: -6.736648082733154
    7. ' _' → logprob: -6.736648082733154
    8. '_i' → logprob: -7.611648082733154
    9. 'each' → logprob: -8.736648559570312
    10. 's' → logprob: -9.736648559570312

Token 762: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.11363524943590164
    2. ' interval' → logprob: -3.238635301589966
    3. ' i' → logprob: -3.738635301589966
    4. 'i' → logprob: -3.988635301589966
    5. 'inter' → logprob: -4.988635063171387
    6. ']' → logprob: -5.738635063171387
    7. '_interval' → logprob: -6.113635063171387
    8. ')' → logprob: -6.363635063171387
    9. 'indice' → logprob: -6.613635063171387
    10. 'segment' → logprob: -6.988635063171387

Token 763: 'le' (ID: 282)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8482900261878967
    2. ']' → logprob: -0.9732900261878967
    3. '_' → logprob: -3.223289966583252
    4. ')' → logprob: -3.223289966583252
    5. '[i' → logprob: -3.223289966583252
    6. '=' → logprob: -4.473289966583252
    7. '[
' → logprob: -4.473289966583252
    8. 'n' → logprob: -4.723289966583252
    9. '#' → logprob: -4.723289966583252
    10. 'e' → logprob: -5.223289966583252

Token 764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5816891193389893
    2. '[i' → logprob: -1.0816891193389893
    3. '[' → logprob: -2.7066891193389893
    4. '_' → logprob: -4.45668888092041
    5. ':' → logprob: -4.95668888092041
    6. '#' → logprob: -5.45668888092041
    7. ']' → logprob: -6.08168888092041
    8. ' =' → logprob: -6.45668888092041
    9. ' ,' → logprob: -6.83168888092041
    10. '_i' → logprob: -6.95668888092041

Token 765: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3249861001968384
    2. '#' → logprob: -2.074985980987549
    3. 'on' → logprob: -2.324985980987549
    4. ' #' → logprob: -3.824985980987549
    5. 'for' → logprob: -3.949985980987549
    6. ' for' → logprob: -4.949985980987549
    7. ' ' → logprob: -7.324985980987549
    8. 'import' → logprob: -7.574985980987549
    9. '...' → logprob: -7.574985980987549
    10. 'n' → logprob: -7.949985980987549

Token 766: ' temps' (ID: 11160)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8188647627830505
    2. ' next' → logprob: -1.9438648223876953
    3. 'nombre' → logprob: -2.0688648223876953
    4. 'possible' → logprob: -2.8188648223876953
    5. 'next' → logprob: -3.5688648223876953
    6. '#' → logprob: -3.9438648223876953
    7. ' possible' → logprob: -3.9438648223876953
    8. 'def' → logprob: -4.068864822387695
    9. ' code' → logprob: -4.318864822387695
    10. 'remaining' → logprob: -4.568864822387695

Token 767: ' minimum' (ID: 11085)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4776815176010132
    2. 's' → logprob: -1.7276815176010132
    3. ' s' → logprob: -2.3526816368103027
    4. '#' → logprob: -2.4776816368103027
    5. ' =' → logprob: -2.4776816368103027
    6. ' ' → logprob: -2.8526816368103027
    7. '=' → logprob: -3.3526816368103027
    8. ')' → logprob: -3.3526816368103027
    9. ',' → logprob: -3.4776816368103027
    10. ' de' → logprob: -3.8526816368103027

Token 768: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5984839797019958
    2. 's' → logprob: -2.7234840393066406
    3. '=' → logprob: -2.9734840393066406
    4. '_' → logprob: -3.2234840393066406
    5. ',' → logprob: -3.3484840393066406
    6. ' s' → logprob: -3.5984840393066406
    7. ' )' → logprob: -3.5984840393066406
    8. ' ' → logprob: -3.7234840393066406
    9. '#' → logprob: -3.8484840393066406
    10. ' =' → logprob: -3.9734840393066406

Token 769: ' se' (ID: 458)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aller' → logprob: -1.158990502357483
    2. 'atte' → logprob: -1.658990502357483
    3. ' aller' → logprob: -1.658990502357483
    4. ' atteindre' → logprob: -2.0339903831481934
    5. ' parcour' → logprob: -3.0339903831481934
    6. 're' → logprob: -3.6589903831481934
    7. 'arr' → logprob: -3.7839903831481934
    8. ' arriver' → logprob: -4.658990383148193
    9. ' couvrir' → logprob: -4.783990383148193
    10. ' rejoindre' → logprob: -4.908990383148193

Token 770: ' rendre' (ID: 44629)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07144381105899811
    2. 'dé' → logprob: -4.446444034576416
    3. ' rendre' → logprob: -4.571444034576416
    4. 'par' → logprob: -4.946444034576416
    5. 'd' → logprob: -5.071444034576416
    6. 'ré' → logprob: -5.321444034576416
    7. '_' → logprob: -5.696444034576416
    8. 'ar' → logprob: -5.821444034576416
    9. 'rait' → logprob: -6.071444034576416
    10. ' déplacer' → logprob: -6.071444034576416

Token 771: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8570352792739868
    2. 'au' → logprob: -1.3570352792739868
    3. ' à' → logprob: -1.6070352792739868
    4. ' au' → logprob: -3.3570351600646973
    5. 'jus' → logprob: -3.4820351600646973
    6. ' jusqu' → logprob: -3.7320351600646973
    7. 'aux' → logprob: -4.357035160064697
    8. ' aux' → logprob: -5.107035160064697
    9. ' jusque' → logprob: -5.607035160064697
    10. ' ' → logprob: -5.982035160064697

Token 772: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5699845552444458
    2. 'S' → logprob: -1.1949845552444458
    3. 'une' → logprob: -2.8199844360351562
    4. ' la' → logprob: -3.4449844360351562
    5. ' S' → logprob: -4.319984436035156
    6. 'l' → logprob: -4.569984436035156
    7. 'station' → logprob: -4.694984436035156
    8. ' une' → logprob: -5.944984436035156
    9. ' station' → logprob: -6.819984436035156
    10. 'i' → logprob: -7.069984436035156

Token 773: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.5568690299987793
    2. ' station' → logprob: -0.9318690299987793
    3. 'arr' → logprob: -4.681869029998779
    4. 'segment' → logprob: -4.681869029998779
    5. 'stop' → logprob: -5.306869029998779
    6. 'S' → logprob: -5.931869029998779
    7. ' S' → logprob: -6.306869029998779
    8. ' segment' → logprob: -6.931869029998779
    9. 'interval' → logprob: -7.056869029998779
    10. ' stop' → logprob: -7.806869029998779

Token 774: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10504799336194992
    2. ',' → logprob: -3.9800479412078857
    3. '[i' → logprob: -3.9800479412078857
    4. ' _' → logprob: -4.105048179626465
    5. '[' → logprob: -4.355048179626465
    6. '<|end|>' → logprob: -5.230048179626465
    7. 'i' → logprob: -5.355048179626465
    8. ')' → logprob: -5.480048179626465
    9. ' i' → logprob: -5.980048179626465
    10. '_i' → logprob: -5.980048179626465

Token 775: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0731979608535767
    2. ' l' → logprob: -1.6981979608535767
    3. 'interval' → logprob: -1.8231979608535767
    4. 'S' → logprob: -3.323197841644287
    5. '[i' → logprob: -3.323197841644287
    6. ' la' → logprob: -3.448197841644287
    7. ' S' → logprob: -3.698197841644287
    8. 'i' → logprob: -3.948197841644287
    9. ' interval' → logprob: -4.323197841644287
    10. 'la' → logprob: -4.323197841644287

Token 776: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1832990646362305
    2. ']' → logprob: -1.6832990646362305
    3. '#' → logprob: -1.8082990646362305
    4. '[i' → logprob: -2.4332990646362305
    5. '[' → logprob: -2.6832990646362305
    6. 'i' → logprob: -3.0582990646362305
    7. 'e' → logprob: -3.1832990646362305
    8. ''' → logprob: -3.9332990646362305
    9. '[
' → logprob: -4.5582990646362305
    10. '[]' → logprob: -5.0582990646362305

Token 777: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.12083937227725983
    2. '[i' → logprob: -3.6208393573760986
    3. 'i' → logprob: -3.7458393573760986
    4. ']' → logprob: -4.120839595794678
    5. '[' → logprob: -4.995839595794678
    6. ' interval' → logprob: -4.995839595794678
    7. 'segment' → logprob: -5.370839595794678
    8. 'inter' → logprob: -5.495839595794678
    9. '
' → logprob: -5.620839595794678
    10. '`' → logprob: -5.745839595794678

Token 778: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0999041274189949
    2. ']' → logprob: -3.5999040603637695
    3. 'aire' → logprob: -3.9749040603637695
    4. '#' → logprob: -4.2249040603637695
    5. 'ale' → logprob: -4.4749040603637695
    6. 'al' → logprob: -5.0999040603637695
    7. 'e' → logprob: -5.2249040603637695
    8. 'val' → logprob: -5.3499040603637695
    9. ')' → logprob: -6.4749040603637695
    10. '[' → logprob: -7.2249040603637695

Token 779: ' dépend' (ID: 68660)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.041490077972412
    2. ')' → logprob: -2.166490077972412
    3. '[' → logprob: -2.416490077972412
    4. ',' → logprob: -2.416490077972412
    5. '<|end|>' → logprob: -2.666490077972412
    6. ']' → logprob: -2.791490077972412
    7. 's' → logprob: -3.291490077972412
    8. '=' → logprob: -3.416490077972412
    9. ' =' → logprob: -3.541490077972412
    10. '#' → logprob: -3.666490077972412

Token 780: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5859009027481079
    2. ')' → logprob: -1.460900902748108
    3. ' =' → logprob: -1.960900902748108
    4. ' des' → logprob: -4.085900783538818
    5. '<|end|>' → logprob: -4.460900783538818
    6. ' on' → logprob: -5.085900783538818
    7. 'on' → logprob: -5.585900783538818
    8. 's' → logprob: -5.710900783538818
    9. ' ' → logprob: -5.960900783538818
    10. ']' → logprob: -6.085900783538818

Token 781: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1369205713272095
    2. 'l' → logprob: -1.6369205713272095
    3. 'la' → logprob: -1.7619205713272095
    4. ' l' → logprob: -2.13692045211792
    5. 'the' → logprob: -2.51192045211792
    6. 'le' → logprob: -3.01192045211792
    7. ' the' → logprob: -4.76192045211792
    8. 'len' → logprob: -4.88692045211792
    9. ' le' → logprob: -5.38692045211792
    10. ' ' → logprob: -5.38692045211792

Token 782: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.4645723104476929
    2. 'position' → logprob: -1.7145723104476929
    3. 'nombre' → logprob: -1.7145723104476929
    4. '#' → logprob: -3.2145724296569824
    5. 'segment' → logprob: -3.5895724296569824
    6. 'station' → logprob: -3.8395724296569824
    7. '+' → logprob: -3.8395724296569824
    8. 'len' → logprob: -3.9645724296569824
    9. ' nombre' → logprob: -4.089572429656982
    10. 'partition' → logprob: -4.089572429656982

Token 783: ' jusqu' (ID: 21961)
  Prédit: '_between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.9501380920410156
    2. ' between' → logprob: -1.5751380920410156
    3. 'between' → logprob: -1.5751380920410156
    4. '_' → logprob: -2.7001380920410156
    5. ' entre' → logprob: -2.8251380920410156
    6. 'entre' → logprob: -3.5751380920410156
    7. '+' → logprob: -4.575138092041016
    8. ',' → logprob: -4.700138092041016
    9. ' +' → logprob: -5.700138092041016
    10. ')' → logprob: -5.825138092041016

Token 784: ''à' (ID: 33688)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9798593521118164
    2. ''' → logprob: -1.4798593521118164
    3. ''à' → logprob: -1.7298593521118164
    4. ']' → logprob: -3.2298593521118164
    5. '+' → logprob: -3.2298593521118164
    6. ')' → logprob: -3.8548593521118164
    7. '']' → logprob: -4.354859352111816
    8. ',' → logprob: -4.354859352111816
    9. ''au' → logprob: -4.354859352111816
    10. ''une' → logprob: -4.479859352111816

Token 785: ' cette' (ID: 7696)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23656319081783295
    2. 'S' → logprob: -1.9865632057189941
    3. 'la' → logprob: -2.861563205718994
    4. ' l' → logprob: -5.111563205718994
    5. ' S' → logprob: -5.361563205718994
    6. ' la' → logprob: -6.111563205718994
    7. 'le' → logprob: -7.611563205718994
    8. 'i' → logprob: -7.861563205718994
    9. 'the' → logprob: -7.861563205718994
    10. 'arr' → logprob: -8.361562728881836

Token 786: ' station' (ID: 11538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.763588547706604
    2. '_' → logprob: -1.513588547706604
    3. ' station' → logprob: -1.763588547706604
    4. 'station' → logprob: -3.1385884284973145
    5. ')' → logprob: -3.6385884284973145
    6. 's' → logprob: -4.8885884284973145
    7. '_station' → logprob: -5.0135884284973145
    8. ' ' → logprob: -5.1385884284973145
    9. '+' → logprob: -5.2635884284973145
    10. '   ' → logprob: -5.3885884284973145

Token 787: ',
' (ID: 412)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.114628553390503
    2. ',' → logprob: -1.989628553390503
    3. ')' → logprob: -2.114628553390503
    4. '[' → logprob: -2.364628553390503
    5. ']' → logprob: -2.989628553390503
    6. '+' → logprob: -3.114628553390503
    7. 's' → logprob: -3.239628553390503
    8. '=' → logprob: -3.364628553390503
    9. ''' → logprob: -3.989628553390503
    10. '<|end|>' → logprob: -3.989628553390503

Token 788: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.819596529006958
    2. ',' → logprob: -1.944596529006958
    3. '+' → logprob: -2.194596529006958
    4. ')' → logprob: -2.444596529006958
    5. '=' → logprob: -3.569596529006958
    6. '.' → logprob: -3.819596529006958
    7. '[' → logprob: -3.819596529006958
    8. ' ' → logprob: -3.819596529006958
    9. ' #' → logprob: -4.069596290588379
    10. '...' → logprob: -4.319596290588379

Token 789: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21496038138866425
    2. ')' → logprob: -2.8399603366851807
    3. ' #' → logprob: -3.3399603366851807
    4. ',' → logprob: -3.5899603366851807
    5. '...' → logprob: -4.71496057510376
    6. '=' → logprob: -4.83996057510376
    7. ' =' → logprob: -4.96496057510376
    8. 'et' → logprob: -5.33996057510376
    9. ' et' → logprob: -5.33996057510376
    10. ''' → logprob: -5.46496057510376

Token 790: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02133304439485073
    2. 'et' → logprob: -5.02133321762085
    3. '...' → logprob: -5.39633321762085
    4. ' #' → logprob: -5.64633321762085
    5. ' et' → logprob: -6.39633321762085
    6. ' ' → logprob: -7.52133321762085
    7. 'and' → logprob: -7.77133321762085
    8. 'mais' → logprob: -7.77133321762085
    9. '   ' → logprob: -8.021332740783691
    10. ' and' → logprob: -8.271332740783691

Token 791: ' arr' (ID: 1724)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5185140371322632
    2. ' stops' → logprob: -1.5185140371322632
    3. ' segments' → logprob: -2.1435141563415527
    4. 'segments' → logprob: -2.5185141563415527
    5. '\n' → logprob: -2.6435141563415527
    6. 'arr' → logprob: -3.6435141563415527
    7. ')' → logprob: -3.6435141563415527
    8. ' ' → logprob: -3.7685141563415527
    9. ' #' → logprob: -3.8935141563415527
    10. 'nombre' → logprob: -4.268514156341553

Token 792: 'êts' (ID: 56582)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6983170509338379
    2. 'r' → logprob: -0.8233170509338379
    3. 'êt' → logprob: -3.323317050933838
    4. 't' → logprob: -4.698317050933838
    5. 'êts' → logprob: -5.073317050933838
    6. ']' → logprob: -5.823317050933838
    7. '=' → logprob: -6.948317050933838
    8. '[' → logprob: -7.198317050933838
    9. ')' → logprob: -7.198317050933838
    10. 'ête' → logprob: -7.198317050933838

Token 793: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7385584712028503
    2. ' sem' → logprob: -1.3635585308074951
    3. '_sem' → logprob: -2.363558530807495
    4. 's' → logprob: -3.363558530807495
    5. '_s' → logprob: -3.488558530807495
    6. ',' → logprob: -4.363558292388916
    7. 'sem' → logprob: -4.488558292388916
    8. ' _' → logprob: -4.738558292388916
    9. ')' → logprob: -4.863558292388916
    10. ' suivants' → logprob: -4.863558292388916

Token 794: 'iexpress' (ID: 190732)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2483457326889038
    2. 'op' → logprob: -1.3733457326889038
    3. 'import' → logprob: -2.9983458518981934
    4. 't' → logprob: -3.4983458518981934
    5. 'iexpress' → logprob: -3.4983458518981934
    6. '_points' → logprob: -3.8733458518981934
    7. 'express' → logprob: -3.8733458518981934
    8. '_op' → logprob: -3.9983458518981934
    9. '```' → logprob: -3.9983458518981934
    10. 'top' → logprob: -3.9983458518981934

Token 795: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9177249670028687
    2. ')' → logprob: -1.6677249670028687
    3. 's' → logprob: -1.6677249670028687
    4. '_' → logprob: -2.792725086212158
    5. '#' → logprob: -3.167725086212158
    6. ' supplémentaires' → logprob: -3.667725086212158
    7. ' suivants' → logprob: -4.417725086212158
    8. '),' → logprob: -4.542725086212158
    9. 'import' → logprob: -4.667725086212158
    10. ']' → logprob: -4.792725086212158

Token 796: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09624574333429337
    2. '),' → logprob: -2.846245765686035
    3. ',' → logprob: -4.721245765686035
    4. ' )' → logprob: -4.971245765686035
    5. 's' → logprob: -6.096245765686035
    6. '#' → logprob: -6.221245765686035
    7. ' dans' → logprob: -6.596245765686035
    8. ' ' → logprob: -6.971245765686035
    9. ' supplémentaires' → logprob: -6.971245765686035
    10. ' ),' → logprob: -7.221245765686035

Token 797: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.2941410541534424
    2. ' ils' → logprob: -1.9191410541534424
    3. 'on' → logprob: -2.4191410541534424
    4. '#' → logprob: -2.4191410541534424
    5. 'le' → logprob: -2.6691410541534424
    6. 'les' → logprob: -2.7941410541534424
    7. ' les' → logprob: -3.2941410541534424
    8. 'ils' → logprob: -3.5441410541534424
    9. ' le' → logprob: -3.7941410541534424
    10. ')' → logprob: -3.7941410541534424

Token 798: ' mesti' (ID: 158955)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.6580506563186646
    2. ' peut' → logprob: -1.9080506563186646
    3. ' doit' → logprob: -2.158050537109375
    4. ' chois' → logprob: -2.283050537109375
    5. ')' → logprob: -2.783050537109375
    6. '#' → logprob: -3.033050537109375
    7. ' peux' → logprob: -3.533050537109375
    8. ' continue' → logprob: -3.533050537109375
    9. 'n' → logprob: -3.658050537109375
    10. ' #' → logprob: -4.033050537109375

Token 799: ' voyager' (ID: 173077)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7800413370132446
    2. 'n' → logprob: -1.5300413370132446
    3. 't' → logprob: -3.280041217803955
    4. 'nt' → logprob: -3.405041217803955
    5. 'z' → logprob: -3.405041217803955
    6. '```' → logprob: -3.780041217803955
    7. 'u' → logprob: -3.905041217803955
    8. '_' → logprob: -3.905041217803955
    9. 's' → logprob: -4.280041217803955
    10. 'o' → logprob: -4.530041217803955

Token 800: ' entre' (ID: 3853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45645391941070557
    2. ')' → logprob: -1.7064539194107056
    3. ' entre' → logprob: -2.956453800201416
    4. ' en' → logprob: -3.456453800201416
    5. ' jusqu' → logprob: -4.081453800201416
    6. 's' → logprob: -4.081453800201416
    7. ' _' → logprob: -4.331453800201416
    8. ' sur' → logprob: -4.956453800201416
    9. '_s' → logprob: -5.456453800201416
    10. '_sur' → logprob: -5.456453800201416

Token 801: ' arr' (ID: 1724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1382259577512741
    2. ' ' → logprob: -3.13822603225708
    3. ')' → logprob: -3.88822603225708
    4. 's' → logprob: -3.88822603225708
    5. ' _' → logprob: -4.01322603225708
    6. ' les' → logprob: -5.51322603225708
    7. '_s' → logprob: -5.51322603225708
    8. 'S' → logprob: -5.88822603225708
    9. ' des' → logprob: -6.38822603225708
    10. ' S' → logprob: -6.51322603225708

Token 802: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.02362033538520336
    2. 'êt' → logprob: -3.773620367050171
    3. 'êtes' → logprob: -8.77362060546875
    4. 'ête' → logprob: -10.14862060546875
    5. 'r' → logprob: -10.27362060546875
    6. 'ê' → logprob: -10.39862060546875
    7. '^' → logprob: -10.52362060546875
    8. '[' → logprob: -11.02362060546875
    9. ']' → logprob: -11.27362060546875
    10. 'rets' → logprob: -11.77362060546875

Token 803: ' sem' (ID: 2743)
  Prédit: ' sem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sem' → logprob: -0.8950103521347046
    2. '_' → logprob: -1.0200103521347046
    3. ' _' → logprob: -2.270010471343994
    4. ')' → logprob: -3.520010471343994
    5. '_sem' → logprob: -3.895010471343994
    6. 's' → logprob: -4.020010471343994
    7. ' )' → logprob: -4.145010471343994
    8. 'sem' → logprob: -4.270010471343994
    9. '_s' → logprob: -5.020010471343994
    10. ' ' → logprob: -5.395010471343994

Token 804: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.010703258216381073
    2. 'express' → logprob: -6.135703086853027
    3. 'ieux' → logprob: -6.760703086853027
    4. 'iex' → logprob: -7.010703086853027
    5. 'ieuses' → logprob: -7.260703086853027
    6. '_i' → logprob: -7.510703086853027
    7. 'ie' → logprob: -8.010703086853027
    8. 'ieces' → logprob: -8.010703086853027
    9. 'ieuse' → logprob: -8.260703086853027
    10. ')' → logprob: -8.260703086853027

Token 805: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5271240472793579
    2. 's' → logprob: -1.902124047279358
    3. '),' → logprob: -1.902124047279358
    4. ' stops' → logprob: -3.2771239280700684
    5. ',' → logprob: -3.4021239280700684
    6. ' )' → logprob: -4.902123928070068
    7. '_' → logprob: -4.902123928070068
    8. ' s' → logprob: -5.902123928070068
    9. ' ),' → logprob: -5.902123928070068
    10. '_stop' → logprob: -6.277123928070068

Token 806: ' train' (ID: 8513)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.2147873044013977
    2. 'segment' → logprob: -1.964787244796753
    3. ' segments' → logprob: -3.714787244796753
    4. 'sem' → logprob: -3.839787244796753
    5. ' segment' → logprob: -6.339787483215332
    6. 's' → logprob: -6.839787483215332
    7. 'seg' → logprob: -7.089787483215332
    8. 'express' → logprob: -7.214787483215332
    9. 'train' → logprob: -7.839787483215332
    10. 'C' → logprob: -8.714787483215332

Token 807: ' sem' (ID: 2743)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.880748987197876
    2. 's' → logprob: -1.005748987197876
    3. '_' → logprob: -2.005748987197876
    4. '),' → logprob: -4.630748748779297
    5. '_sem' → logprob: -4.630748748779297
    6. ',' → logprob: -4.880748748779297
    7. 'express' → logprob: -4.880748748779297
    8. '_stop' → logprob: -4.880748748779297
    9. '_s' → logprob: -5.005748748779297
    10. ' s' → logprob: -5.005748748779297

Token 808: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.004402344115078449
    2. 'express' → logprob: -6.004402160644531
    3. 'pexpr' → logprob: -7.379402160644531
    4. ')' → logprob: -9.129402160644531
    5. 'iex' → logprob: -9.129402160644531
    6. 'i' → logprob: -9.379402160644531
    7. 'ip' → logprob: -9.504402160644531
    8. '#' → logprob: -9.629402160644531
    9. '\' → logprob: -9.754402160644531
    10. '```' → logprob: -9.879402160644531

Token 809: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025309108197689056
    2. ' )' → logprob: -4.025309085845947
    3. '),' → logprob: -5.775309085845947
    4. ',' → logprob: -6.275309085845947
    5. 's' → logprob: -7.025309085845947
    6. ' stops' → logprob: -8.025309562683105
    7. '[' → logprob: -9.025309562683105
    8. ' ),' → logprob: -9.025309562683105
    9. '#' → logprob: -9.150309562683105
    10. ' ' → logprob: -9.775309562683105

Token 810: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9320879578590393
    2. ',' → logprob: -1.5570878982543945
    3. ')' → logprob: -1.8070878982543945
    4. ',
' → logprob: -2.9320878982543945
    5. ']' → logprob: -3.4320878982543945
    6. '...' → logprob: -3.9320878982543945
    7. '[' → logprob: -4.0570878982543945
    8. '[i' → logprob: -4.0570878982543945
    9. 's' → logprob: -4.1820878982543945
    10. '.' → logprob: -4.3070878982543945

Token 811: '  ' (ID: 256)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0777678489685059
    2. '[' → logprob: -1.7027678489685059
    3. '#' → logprob: -1.8277678489685059
    4. ')' → logprob: -1.9527678489685059
    5. ',' → logprob: -2.827767848968506
    6. ']' → logprob: -3.827767848968506
    7. '+' → logprob: -4.202767848968506
    8. '<|end|>' → logprob: -4.452767848968506
    9. '.' → logprob: -4.577767848968506
    10. '[
' → logprob: -5.202767848968506

Token 812: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5026603937149048
    2. '+' → logprob: -2.2526602745056152
    3. '#' → logprob: -2.7526602745056152
    4. ',' → logprob: -3.1276602745056152
    5. '[' → logprob: -3.2526602745056152
    6. ' ' → logprob: -3.3776602745056152
    7. '<|end|>' → logprob: -4.002660274505615
    8. '.' → logprob: -4.127660274505615
    9. '=' → logprob: -4.627660274505615
    10. ']' → logprob: -4.752660274505615

Token 813: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8751687407493591
    2. ' des' → logprob: -1.625168800354004
    3. ' du' → logprob: -2.125168800354004
    4. ' de' → logprob: -2.375168800354004
    5. 'des' → logprob: -2.375168800354004
    6. 'de' → logprob: -4.000168800354004
    7. 'local' → logprob: -4.000168800354004
    8. 'du' → logprob: -4.000168800354004
    9. ' local' → logprob: -4.750168800354004
    10. ' #' → logprob: -5.375168800354004

Token 814: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5700770020484924
    2. 'la' → logprob: -1.5700769424438477
    3. 'l' → logprob: -2.3200769424438477
    4. ' l' → logprob: -2.6950769424438477
    5. 'local' → logprob: -3.4450769424438477
    6. ' local' → logprob: -4.320076942443848
    7. ' des' → logprob: -5.820076942443848
    8. 'le' → logprob: -6.445076942443848
    9. ' ' → logprob: -6.445076942443848
    10. 'les' → logprob: -6.695076942443848

Token 815: ' possibilité' (ID: 58463)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.7313647866249084
    2. ' local' → logprob: -0.8563647866249084
    3. ' possibilité' → logprob: -3.3563647270202637
    4. 'poss' → logprob: -3.7313647270202637
    5. 'distance' → logprob: -4.231364727020264
    6. ' distance' → logprob: -5.231364727020264
    7. 'possible' → logprob: -5.981364727020264
    8. ' station' → logprob: -6.606364727020264
    9. ' possible' → logprob: -6.731364727020264
    10. ' ' → logprob: -7.231364727020264

Token 816: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6479327082633972
    2. ' d' → logprob: -0.7729327082633972
    3. 'd' → logprob: -5.272932529449463
    4. 'de' → logprob: -5.272932529449463
    5. ' ' → logprob: -7.022932529449463
    6. '#' → logprob: -7.022932529449463
    7. ' to' → logprob: -7.147932529449463
    8. ' of' → logprob: -7.772932529449463
    9. '_de' → logprob: -7.897932529449463
    10. ' des' → logprob: -8.147933006286621

Token 817: ' changer' (ID: 47099)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.84086012840271
    2. 'faire' → logprob: -1.59086012840271
    3. 'prendre' → logprob: -2.34086012840271
    4. 'pass' → logprob: -2.34086012840271
    5. 'contin' → logprob: -3.21586012840271
    6. 'changer' → logprob: -3.59086012840271
    7. 're' → logprob: -4.090860366821289
    8. ' utiliser' → logprob: -4.215860366821289
    9. 'local' → logprob: -4.590860366821289
    10. 'repr' → logprob: -4.965860366821289

Token 818: ' entre' (ID: 3853)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.212266743183136
    2. 'de' → logprob: -1.7122666835784912
    3. '_de' → logprob: -4.83726692199707
    4. 's' → logprob: -6.96226692199707
    5. '_' → logprob: -7.96226692199707
    6. 'd' → logprob: -8.08726692199707
    7. ',' → logprob: -8.96226692199707
    8. ' ' → logprob: -9.08726692199707
    9. 'def' → logprob: -9.21226692199707
    10. '#' → logprob: -9.46226692199707

Token 819: ' express' (ID: 6101)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.9322765469551086
    2. ' local' → logprob: -1.9322764873504639
    3. 'express' → logprob: -1.9322764873504639
    4. 'sem' → logprob: -2.557276487350464
    5. 'les' → logprob: -2.682276487350464
    6. ' trains' → logprob: -3.307276487350464
    7. ' les' → logprob: -3.682276487350464
    8. ' express' → logprob: -3.932276487350464
    9. 'train' → logprob: -4.057276725769043
    10. ' train' → logprob: -4.432276725769043

Token 820: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8128965497016907
    2. '_' → logprob: -1.062896490097046
    3. ',' → logprob: -2.437896490097046
    4. '[' → logprob: -3.062896490097046
    5. '[i' → logprob: -3.937896490097046
    6. ']' → logprob: -4.187896728515625
    7. '.' → logprob: -4.812896728515625
    8. '#' → logprob: -4.937896728515625
    9. '<|end|>' → logprob: -5.062896728515625
    10. 's' → logprob: -5.312896728515625

Token 821: ' sem' (ID: 2743)
  Prédit: ' sem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sem' → logprob: -0.817840576171875
    2. ' local' → logprob: -1.192840576171875
    3. 'local' → logprob: -1.692840576171875
    4. 'sem' → logprob: -2.817840576171875
    5. ' semi' → logprob: -5.192840576171875
    6. 'semi' → logprob: -5.442840576171875
    7. ' ' → logprob: -7.817840576171875
    8. ' ' → logprob: -7.817840576171875
    9. 'semicolon' → logprob: -9.505340576171875
    10. 's' → logprob: -9.505340576171875

Token 822: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.00699608912691474
    2. 'ip' → logprob: -6.381996154785156
    3. '```' → logprob: -7.631996154785156
    4. 'i' → logprob: -7.631996154785156
    5. 'express' → logprob: -7.756996154785156
    6. '[i' → logprob: -8.006996154785156
    7. 'ipients' → logprob: -8.006996154785156
    8. '_i' → logprob: -8.131996154785156
    9. 'pexpr' → logprob: -8.756996154785156
    10. 'ippines' → logprob: -8.944496154785156

Token 823: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3621093034744263
    2. ']' → logprob: -1.7371093034744263
    3. '#' → logprob: -1.8621093034744263
    4. ',' → logprob: -2.3621091842651367
    5. '[' → logprob: -2.3621091842651367
    6. '<|end|>' → logprob: -3.3621091842651367
    7. ')' → logprob: -3.4871091842651367
    8. 'def' → logprob: -3.7371091842651367
    9. ':' → logprob: -4.362109184265137
    10. '=' → logprob: -4.487109184265137

Token 824: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12648144364356995
    2. ']' → logprob: -3.126481533050537
    3. '[' → logprob: -3.376481533050537
    4. '#' → logprob: -4.626481533050537
    5. '_
' → logprob: -5.001481533050537
    6. ')' → logprob: -5.251481533050537
    7. '[
' → logprob: -5.376481533050537
    8. ',' → logprob: -6.001481533050537
    9. '
' → logprob: -6.376481533050537
    10. '[i' → logprob: -6.376481533050537

Token 825: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.119444727897644
    2. '[' → logprob: -1.494444727897644
    3. ']' → logprob: -2.3694448471069336
    4. ',' → logprob: -2.6194448471069336
    5. ')' → logprob: -3.1194448471069336
    6. 'def' → logprob: -3.2444448471069336
    7. 'x' → logprob: -3.4944448471069336
    8. '_' → logprob: -3.9944448471069336
    9. '\' → logprob: -3.9944448471069336
    10. '[
' → logprob: -4.244444847106934

Token 826: ' Simpl' (ID: 92258)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8195153474807739
    2. 'dp' → logprob: -1.319515347480774
    3. '#' → logprob: -1.569515347480774
    4. 'for' → logprob: -3.6945152282714844
    5. 'segments' → logprob: -4.319515228271484
    6. ')' → logprob: -5.194515228271484
    7. 'i' → logprob: -5.569515228271484
    8. 'x' → logprob: -5.569515228271484
    9. ']' → logprob: -5.944515228271484
    10. 'import' → logprob: -6.069515228271484

Token 827: 'ification' (ID: 3166)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6351589560508728
    2. 'e' → logprob: -1.2601590156555176
    3. '_' → logprob: -1.8851590156555176
    4. ')' → logprob: -4.510159015655518
    5. '.' → logprob: -5.510159015655518
    6. '__' → logprob: -5.760159015655518
    7. '#
' → logprob: -5.885159015655518
    8. ' =' → logprob: -6.260159015655518
    9. 'ified' → logprob: -6.510159015655518
    10. ':' → logprob: -6.885159015655518

Token 828: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9465479254722595
    2. '<|end|>' → logprob: -1.1965479850769043
    3. ' =' → logprob: -2.0715479850769043
    4. '#' → logprob: -3.3215479850769043
    5. '=' → logprob: -3.5715479850769043
    6. '_' → logprob: -3.6965479850769043
    7. '<|end|>' → logprob: -3.8215479850769043
    8. ',' → logprob: -3.9465479850769043
    9. '
' → logprob: -4.446547985076904
    10. 'def' → logprob: -4.821547985076904

Token 829: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1509203463792801
    2. 'def' → logprob: -2.7759203910827637
    3. '<|end|>' → logprob: -3.2759203910827637
    4. 'pass' → logprob: -4.775920391082764
    5. '
' → logprob: -4.900920391082764
    6. '...' → logprob: -5.275920391082764
    7. 'import' → logprob: -5.900920391082764
    8. ' ' → logprob: -6.275920391082764
    9. 'x' → logprob: -6.275920391082764
    10. 'for' → logprob: -6.400920391082764

Token 830: ' Avec' (ID: 38862)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4276931881904602
    2. 'def' → logprob: -1.8026931285858154
    3. 'pass' → logprob: -3.0526931285858154
    4. 'dp' → logprob: -3.1776931285858154
    5. 'interval' → logprob: -4.4276933670043945
    6. 'from' → logprob: -4.5526933670043945
    7. 'import' → logprob: -4.6776933670043945
    8. ' #' → logprob: -4.8026933670043945
    9. 'total' → logprob: -4.9276933670043945
    10. 'distance' → logprob: -4.9276933670043945

Token 831: ' un' (ID: 537)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.1886309385299683
    2. 'K' → logprob: -2.563631057739258
    3. ' des' → logprob: -2.563631057739258
    4. '#' → logprob: -2.813631057739258
    5. 'une' → logprob: -2.813631057739258
    6. 'les' → logprob: -3.188631057739258
    7. ' l' → logprob: -3.313631057739258
    8. 'un' → logprob: -3.438631057739258
    9. ' la' → logprob: -3.438631057739258
    10. ' un' → logprob: -3.438631057739258

Token 832: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.110874891281128
    2. 'n' → logprob: -2.485874891281128
    3. '
' → logprob: -2.610874891281128
    4. ' max' → logprob: -2.610874891281128
    5. ' ' → logprob: -2.860874891281128
    6. ' \' → logprob: -2.860874891281128
    7. ' #' → logprob: -2.985874891281128
    8. ' space' → logprob: -3.610874891281128
    9. '\n' → logprob: -3.860874891281128
    10. ' def' → logprob: -3.985874891281128

Token 833: ' donné' (ID: 52079)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1633751392364502
    2. '=' → logprob: -2.41337513923645
    3. ' =' → logprob: -3.91337513923645
    4. ' de' → logprob: -4.038374900817871
    5. ' d' → logprob: -5.038374900817871
    6. ' _' → logprob: -5.538374900817871
    7. ' ' → logprob: -6.038374900817871
    8. ')' → logprob: -6.413374900817871
    9. '_s' → logprob: -6.788374900817871
    10. 'de' → logprob: -6.913374900817871

Token 834: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16321444511413574
    2. ' d' → logprob: -2.6632144451141357
    3. ' ' → logprob: -3.2882144451141357
    4. ' de' → logprob: -3.9132144451141357
    5. ' _' → logprob: -4.538214683532715
    6. 'de' → logprob: -5.163214683532715
    7. '_de' → logprob: -6.663214683532715
    8. ',' → logprob: -6.788214683532715
    9. 'd' → logprob: -7.038214683532715
    10. ' ' → logprob: -7.413214683532715

Token 835: ' stops' (ID: 29924)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.2025551795959473
    2. ' stops' → logprob: -1.3275551795959473
    3. 'segments' → logprob: -1.9525551795959473
    4. 'sem' → logprob: -2.7025551795959473
    5. ' sem' → logprob: -2.7025551795959473
    6. ' arr' → logprob: -2.8275551795959473
    7. 'stations' → logprob: -3.5775551795959473
    8. ' segments' → logprob: -3.8275551795959473
    9. 'ar' → logprob: -4.452555179595947
    10. 's' → logprob: -4.452555179595947

Token 836: ' dans' (ID: 2671)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.5950719118118286
    2. ' supplémentaire' → logprob: -1.4700719118118286
    3. '_' → logprob: -3.220071792602539
    4. 's' → logprob: -3.470071792602539
    5. '<|end|>' → logprob: -3.595071792602539
    6. ' par' → logprob: -4.220071792602539
    7. ' sem' → logprob: -4.220071792602539
    8. ',' → logprob: -4.345071792602539
    9. ' de' → logprob: -4.470071792602539
    10. ' supplementary' → logprob: -4.970071792602539

Token 837: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0254555940628052
    2. ' l' → logprob: -1.1504555940628052
    3. ' chaque' → logprob: -1.2754555940628052
    4. '_' → logprob: -4.400455474853516
    5. 'interval' → logprob: -4.650455474853516
    6. 'each' → logprob: -5.400455474853516
    7. '_interval' → logprob: -5.525455474853516
    8. ' each' → logprob: -5.525455474853516
    9. ' interval' → logprob: -6.275455474853516
    10. '_l' → logprob: -6.525455474853516

Token 838: ' interval' (ID: 17116)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25871098041534424
    2. '_interval' → logprob: -2.3837108612060547
    3. 'interval' → logprob: -2.7587108612060547
    4. ' _' → logprob: -3.8837108612060547
    5. 'segment' → logprob: -4.383710861206055
    6. '_segment' → logprob: -4.508710861206055
    7. '_inter' → logprob: -4.883710861206055
    8. ' segment' → logprob: -5.258710861206055
    9. ' interval' → logprob: -5.383710861206055
    10. ' ' → logprob: -5.633710861206055

Token 839: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.23362036049365997
    2. 'al' → logprob: -2.2336204051971436
    3. 'ale' → logprob: -4.1086201667785645
    4. 'v' → logprob: -4.1086201667785645
    5. 'le' → logprob: -4.3586201667785645
    6. 'aire' → logprob: -4.4836201667785645
    7. 'vale' → logprob: -4.6086201667785645
    8. '#' → logprob: -5.1086201667785645
    9. '_' → logprob: -5.1086201667785645
    10. ']' → logprob: -5.2336201667785645

Token 840: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8839588761329651
    2. '_' → logprob: -0.8839588761329651
    3. '<|end|>' → logprob: -2.8839588165283203
    4. ' =' → logprob: -3.5089588165283203
    5. '=' → logprob: -4.13395881652832
    6. ' ,' → logprob: -4.25895881652832
    7. ')' → logprob: -4.25895881652832
    8. '[' → logprob: -5.25895881652832
    9. ':' → logprob: -5.38395881652832
    10. 's' → logprob: -5.63395881652832

Token 841: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.04587019234895706
    2. 'on' → logprob: -4.670870304107666
    3. ' le' → logprob: -4.670870304107666
    4. ' ' → logprob: -5.295870304107666
    5. ' ' → logprob: -5.295870304107666
    6. ' l' → logprob: -5.420870304107666
    7. ' la' → logprob: -5.545870304107666
    8. ' il' → logprob: -6.545870304107666
    9. '<|end|>' → logprob: -6.795870304107666
    10. ' chaque' → logprob: -7.170870304107666

Token 842: ' peut' (ID: 9216)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21519707143306732
    2. '<|end|>' → logprob: -2.8401970863342285
    3. ' peut' → logprob: -3.4651970863342285
    4. ' ' → logprob: -4.0901970863342285
    5. ' peux' → logprob: -4.2151970863342285
    6. ' _' → logprob: -4.7151970863342285
    7. '<|end|>' → logprob: -4.9651970863342285
    8. ' pourra' → logprob: -5.0901970863342285
    9. ' can' → logprob: -5.0901970863342285
    10. '#' → logprob: -5.2151970863342285

Token 843: ' calcul' (ID: 7559)
  Prédit: ' prec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prec' → logprob: -0.8361504077911377
    2. 'pré' → logprob: -1.2111504077911377
    3. ' pré' → logprob: -2.8361504077911377
    4. 'pre' → logprob: -2.9611504077911377
    5. ' calcul' → logprob: -3.3361504077911377
    6. ' pre' → logprob: -3.5861504077911377
    7. 'calcul' → logprob: -4.211150169372559
    8. 'prec' → logprob: -4.211150169372559
    9. 'compute' → logprob: -4.586150169372559
    10. 'calculate' → logprob: -4.711150169372559

Token 844: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.04024830088019371
    2. 'ate' → logprob: -3.415248394012451
    3. 'e' → logprob: -5.040248394012451
    4. '```' → logprob: -10.290247917175293
    5. '#' → logprob: -10.540247917175293
    6. 'r' → logprob: -11.165247917175293
    7. 'ier' → logprob: -12.790247917175293
    8. 'culate' → logprob: -12.915247917175293
    9. '_' → logprob: -13.040247917175293
    10. 'late' → logprob: -13.040247917175293

Token 845: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9251484274864197
    2. ' la' → logprob: -1.4251484870910645
    3. ' le' → logprob: -1.4251484870910645
    4. 'la' → logprob: -3.1751484870910645
    5. ',' → logprob: -4.1751484870910645
    6. ' l' → logprob: -4.6751484870910645
    7. '_le' → logprob: -4.8001484870910645
    8. '_' → logprob: -5.0501484870910645
    9. 'l' → logprob: -5.3001484870910645
    10. 'exact' → logprob: -5.3001484870910645

Token 846: ' vitesse' (ID: 71752)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.4851936399936676
    2. 'next' → logprob: -1.6101936101913452
    3. 'minimum' → logprob: -3.8601937294006348
    4. 'best' → logprob: -3.9851937294006348
    5. 'time' → logprob: -4.360193729400635
    6. 'nombre' → logprob: -4.485193729400635
    7. 'distance' → logprob: -4.610193729400635
    8. 'cost' → logprob: -4.735193729400635
    9. ' minimal' → logprob: -4.985193729400635
    10. 'possible' → logprob: -5.235193729400635

Token 847: ' moyenne' (ID: 57480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21381966769695282
    2. ')' → logprob: -2.213819742202759
    3. ' )' → logprob: -3.588819742202759
    4. ' _' → logprob: -4.33881950378418
    5. '<|end|>' → logprob: -4.96381950378418
    6. ' ' → logprob: -4.96381950378418
    7. ' de' → logprob: -5.33881950378418
    8. ',' → logprob: -5.71381950378418
    9. '#' → logprob: -6.58881950378418
    10. 's' → logprob: -6.71381950378418

Token 848: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05995875597000122
    2. ')' → logprob: -3.3099586963653564
    3. '<|end|>' → logprob: -4.9349589347839355
    4. ' _' → logprob: -5.1849589347839355
    5. ' ' → logprob: -6.3099589347839355
    6. ',' → logprob: -6.3099589347839355
    7. '/' → logprob: -6.5599589347839355
    8. ' )' → logprob: -7.0599589347839355
    9. '#' → logprob: -7.4349589347839355
    10. '_)' → logprob: -8.184958457946777

Token 849: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.05938243865966797
    2. 'express' → logprob: -4.184382438659668
    3. 'pexpr' → logprob: -4.559382438659668
    4. 'itesse' → logprob: -6.059382438659668
    5. 'ormais' → logprob: -6.371882438659668
    6. 'import' → logprob: -6.496882438659668
    7. 'expr' → logprob: -6.621882438659668
    8. 'i' → logprob: -6.809382438659668
    9. 'im' → logprob: -6.809382438659668
    10. 'iem' → logprob: -7.121882438659668

Token 850: ' efficace' (ID: 54338)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14819982647895813
    2. '<|end|>' → logprob: -3.1481997966766357
    3. ')' → logprob: -3.2731997966766357
    4. ',' → logprob: -4.148200035095215
    5. '#' → logprob: -4.773200035095215
    6. ' _' → logprob: -5.773200035095215
    7. '[' → logprob: -5.773200035095215
    8. ' =' → logprob: -5.898200035095215
    9. '.' → logprob: -6.023200035095215
    10. ']' → logprob: -6.148200035095215

Token 851: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08918526023626328
    2. ',' → logprob: -3.4641852378845215
    3. ')' → logprob: -3.8391852378845215
    4. '#' → logprob: -4.7141852378845215
    5. '<|end|>' → logprob: -5.3391852378845215
    6. ':' → logprob: -5.4641852378845215
    7. '.' → logprob: -6.3391852378845215
    8. ' _' → logprob: -6.4641852378845215
    9. '/' → logprob: -6.5891852378845215
    10. ' ' → logprob: -6.7141852378845215

Token 852: ' ce' (ID: 2357)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.4438245296478271
    2. 'c' → logprob: -1.5688245296478271
    3. 'cet' → logprob: -1.9438245296478271
    4. 'le' → logprob: -2.193824529647827
    5. 'ce' → logprob: -2.318824529647827
    6. 'segment' → logprob: -2.943824529647827
    7. ' div' → logprob: -3.693824529647827
    8. ' ce' → logprob: -3.693824529647827
    9. 'l' → logprob: -4.568824768066406
    10. 'fraction' → logprob: -4.693824768066406

Token 853: ' segment' (ID: 14806)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.49324652552604675
    2. ' segment' → logprob: -1.7432465553283691
    3. ' interval' → logprob: -2.243246555328369
    4. 'segment' → logprob: -2.493246555328369
    5. 'inter' → logprob: -5.368246555328369
    6. '_' → logprob: -5.743246555328369
    7. ' morceau' → logprob: -6.368246555328369
    8. '#' → logprob: -6.368246555328369
    9. ' #' → logprob: -6.618246555328369
    10. '_interval' → logprob: -7.118246555328369

Token 854: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 855: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32857534289360046
    2. ')' → logprob: -3.203575372695923
    3. '[' → logprob: -3.203575372695923
    4. ':' → logprob: -3.203575372695923
    5. ',' → logprob: -3.328575372695923
    6. '#' → logprob: -3.453575372695923
    7. '<|end|>' → logprob: -3.453575372695923
    8. ']' → logprob: -4.328575134277344
    9. '
' → logprob: -4.453575134277344
    10. '\' → logprob: -5.328575134277344

Token 856: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3165607452392578
    2. 'def' → logprob: -1.3165607452392578
    3. '_' → logprob: -2.316560745239258
    4. ',' → logprob: -2.816560745239258
    5. ']' → logprob: -3.066560745239258
    6. ',
' → logprob: -3.316560745239258
    7. ')' → logprob: -3.691560745239258
    8. 'for' → logprob: -3.691560745239258
    9. '(
' → logprob: -4.191560745239258
    10. '[' → logprob: -4.191560745239258

Token 857: ' L' (ID: 451)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7112091779708862
    2. 'def' → logprob: -1.0862091779708862
    3. '#' → logprob: -2.586209297180176
    4. '+' → logprob: -4.086209297180176
    5. 'max' → logprob: -4.086209297180176
    6. ']' → logprob: -4.586209297180176
    7. ')' → logprob: -5.086209297180176
    8. 'x' → logprob: -5.086209297180176
    9. '[' → logprob: -5.711209297180176
    10. '(' → logprob: -5.711209297180176

Token 858: ''appro' (ID: 134343)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3163862228393555
    2. 'ength' → logprob: -1.6913862228393555
    3. 'ine' → logprob: -1.6913862228393555
    4. 'en' → logprob: -2.1913862228393555
    5. 'e' → logprob: -2.3163862228393555
    6. '#' → logprob: -3.3163862228393555
    7. 'n' → logprob: -3.5663862228393555
    8. 'i' → logprob: -3.6913862228393555
    9. '=' → logprob: -4.1913862228393555
    10. 'S' → logprob: -5.1913862228393555

Token 859: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.013156818225979805
    2. 'x' → logprob: -5.263156890869141
    3. 'fond' → logprob: -5.388156890869141
    4. 'ch' → logprob: -6.513156890869141
    5. 'f' → logprob: -7.513156890869141
    6. 'ches' → logprob: -7.888156890869141
    7. 'xi' → logprob: -8.51315689086914
    8. 'xim' → logprob: -8.76315689086914
    9. '#' → logprob: -8.76315689086914
    10. 'ché' → logprob: -9.76315689086914

Token 860: ' efficace' (ID: 54338)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2889004945755005
    2. ':' → logprob: -1.4139004945755005
    3. ' =' → logprob: -1.5389004945755005
    4. '=' → logprob: -1.6639004945755005
    5. '[' → logprob: -3.913900375366211
    6. '.' → logprob: -4.163900375366211
    7. ' ' → logprob: -4.413900375366211
    8. '#' → logprob: -5.288900375366211
    9. ' :' → logprob: -5.663900375366211
    10. 's' → logprob: -5.788900375366211

Token 861: ':
' (ID: 734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3717190027236938
    2. ':' → logprob: -1.6217190027236938
    3. '=' → logprob: -1.7467190027236938
    4. ' =' → logprob: -1.9967190027236938
    5. '[' → logprob: -2.4967188835144043
    6. ')' → logprob: -3.4967188835144043
    7. '#' → logprob: -3.6217188835144043
    8. '<|end|>' → logprob: -3.6217188835144043
    9. ' ' → logprob: -3.7467188835144043
    10. 's' → logprob: -4.496718883514404

Token 862: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15514974296092987
    2. '#' → logprob: -2.2801496982574463
    3. 'from' → logprob: -4.530149936676025
    4. ' dp' → logprob: -5.030149936676025
    5. 'import' → logprob: -5.280149936676025
    6. 'def' → logprob: -5.405149936676025
    7. 'pass' → logprob: -5.780149936676025
    8. ' stops' → logprob: -5.780149936676025
    9. 'for' → logprob: -6.280149936676025
    10. 'max' → logprob: -6.780149936676025

Token 863: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2191736102104187
    2. '#' → logprob: -2.2191736698150635
    3. 'from' → logprob: -3.0941736698150635
    4. 'def' → logprob: -4.344173431396484
    5. ' dp' → logprob: -5.094173431396484
    6. 'import' → logprob: -5.094173431396484
    7. 'continue' → logprob: -5.844173431396484
    8. 'pass' → logprob: -5.844173431396484
    9. 'max' → logprob: -5.969173431396484
    10. 'interval' → logprob: -6.969173431396484

Token 864: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0577994585037231
    2. 'from' → logprob: -1.1827994585037231
    3. 'dp' → logprob: -1.9327994585037231
    4. '#' → logprob: -2.1827993392944336
    5. 'import' → logprob: -2.5577993392944336
    6. 'for' → logprob: -5.557799339294434
    7. ' dp' → logprob: -6.307799339294434
    8. 'max' → logprob: -6.807799339294434
    9. '[]' → logprob: -6.932799339294434
    10. ' from' → logprob: -7.682799339294434

Token 865: ' note' (ID: 7477)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04212798923254013
    2. 'n' → logprob: -3.917128086090088
    3. 's' → logprob: -5.167128086090088
    4. ' _' → logprob: -5.167128086090088
    5. ' ' → logprob: -6.042128086090088
    6. '#' → logprob: -6.667128086090088
    7. ',' → logprob: -6.792128086090088
    8. '.' → logprob: -7.292128086090088
    9. ')' → logprob: -7.292128086090088
    10. '=' → logprob: -7.417128086090088

Token 866: ' que' (ID: 661)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9578182697296143
    2. ' ' → logprob: -2.2078182697296143
    3. '#' → logprob: -2.5828182697296143
    4. ' #' → logprob: -3.2078182697296143
    5. '[' → logprob: -3.5828182697296143
    6. ',' → logprob: -3.7078182697296143
    7. 'dp' → logprob: -3.7078182697296143
    8. ' dp' → logprob: -3.7078182697296143
    9. ' (' → logprob: -3.8328182697296143
    10. '(' → logprob: -3.8328182697296143

Token 867: ' sur' (ID: 1512)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.8454784154891968
    2. ' K' → logprob: -1.8454784154891968
    3. ' les' → logprob: -2.4704785346984863
    4. ' la' → logprob: -2.4704785346984863
    5. ' M' → logprob: -2.8454785346984863
    6. ' #' → logprob: -3.0954785346984863
    7. ' ' → logprob: -3.0954785346984863
    8. '#' → logprob: -3.3454785346984863
    9. ' (' → logprob: -3.3454785346984863
    10. ' S' → logprob: -3.5954785346984863

Token 868: ' le' (ID: 505)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.0686865746974945
    2. ' la' → logprob: -3.4436864852905273
    3. ' les' → logprob: -4.818686485290527
    4. ' l' → logprob: -5.068686485290527
    5. ' cette' → logprob: -5.443686485290527
    6. 'la' → logprob: -5.818686485290527
    7. ' chacune' → logprob: -6.318686485290527
    8. ' une' → logprob: -6.318686485290527
    9. 'les' → logprob: -6.943686485290527
    10. 'cha' → logprob: -6.943686485290527

Token 869: ' trajet' (ID: 110258)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7363701462745667
    2. 'line' → logprob: -1.6113700866699219
    3. '_' → logprob: -2.861370086669922
    4. 'segments' → logprob: -2.861370086669922
    5. ' segment' → logprob: -3.486370086669922
    6. ' segments' → logprob: -3.611370086669922
    7. ' next' → logprob: -4.361370086669922
    8. ' même' → logprob: -4.361370086669922
    9. 'interval' → logprob: -4.361370086669922
    10. 'segment' → logprob: -4.736370086669922

Token 870: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6742596626281738
    2. ',' → logprob: -1.4242596626281738
    3. ' ' → logprob: -2.924259662628174
    4. ' entre' → logprob: -2.924259662628174
    5. ' ,' → logprob: -3.549259662628174
    6. ' _' → logprob: -4.549259662628174
    7. ' =' → logprob: -4.674259662628174
    8. ' suivant' → logprob: -4.674259662628174
    9. ' complet' → logprob: -4.924259662628174
    10. ' s' → logprob: -4.924259662628174

Token 871: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18620681762695312
    2. ',' → logprob: -3.061206817626953
    3. ' ' → logprob: -3.061206817626953
    4. ':' → logprob: -4.311206817626953
    5. '=' → logprob: -4.311206817626953
    6. '[' → logprob: -4.436206817626953
    7. '+' → logprob: -5.061206817626953
    8. 's' → logprob: -5.186206817626953
    9. '.' → logprob: -5.936206817626953
    10. '#' → logprob: -5.936206817626953

Token 872: '->' (ID: 609)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1552770137786865
    2. '-' → logprob: -1.5302770137786865
    3. ' ' → logprob: -1.6552770137786865
    4. ' -' → logprob: -2.4052770137786865
    5. ')' → logprob: -3.5302770137786865
    6. ',' → logprob: -3.7802770137786865
    7. '#' → logprob: -4.280277252197266
    8. ']' → logprob: -4.405277252197266
    9. '_' → logprob: -4.530277252197266
    10. '+' → logprob: -4.530277252197266

Token 873: 'station' (ID: 27999)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6372264623641968
    2. ' S' → logprob: -1.0122264623641968
    3. ' ' → logprob: -2.6372265815734863
    4. '#' → logprob: -5.262226581573486
    5. '0' → logprob: -5.512226581573486
    6. ']' → logprob: -5.637226581573486
    7. '...' → logprob: -5.637226581573486
    8. ')' → logprob: -6.387226581573486
    9. ' #' → logprob: -6.512226581573486
    10. '-' → logprob: -6.512226581573486

Token 874: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2584362328052521
    2. 's' → logprob: -1.8834362030029297
    3. ' s' → logprob: -3.7584362030029297
    4. ' _' → logprob: -3.7584362030029297
    5. ',' → logprob: -5.38343620300293
    6. '[' → logprob: -5.38343620300293
    7. '1' → logprob: -5.88343620300293
    8. ']' → logprob: -5.88343620300293
    9. ' ' → logprob: -5.88343620300293
    10. '_s' → logprob: -6.25843620300293

Token 875: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46009865403175354
    2. '[' → logprob: -1.7100986242294312
    3. ']' → logprob: -2.5850987434387207
    4. '[i' → logprob: -3.4600987434387207
    5. ',' → logprob: -3.9600987434387207
    6. '#' → logprob: -4.710098743438721
    7. ':' → logprob: -4.960098743438721
    8. '+' → logprob: -5.085098743438721
    9. ')' → logprob: -5.085098743438721
    10. '.' → logprob: -5.335098743438721

Token 876: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5530277490615845
    2. ' il' → logprob: -2.053027629852295
    3. ' ' → logprob: -2.303027629852295
    4. ' ' → logprob: -2.428027629852295
    5. ',' → logprob: -3.428027629852295
    6. ' le' → logprob: -4.553027629852295
    7. ' S' → logprob: -4.678027629852295
    8. '_' → logprob: -4.928027629852295
    9. ' les' → logprob: -5.553027629852295
    10. ' la' → logprob: -5.553027629852295

Token 877: ' peut' (ID: 9216)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33592134714126587
    2. ' continue' → logprob: -2.835921287536621
    3. '.' → logprob: -3.085921287536621
    4. '+' → logprob: -3.460921287536621
    5. ' peut' → logprob: -3.710921287536621
    6. '[' → logprob: -3.835921287536621
    7. '#' → logprob: -4.585921287536621
    8. ' peux' → logprob: -5.085921287536621
    9. ' _' → logprob: -5.210921287536621
    10. ' continues' → logprob: -5.210921287536621

Token 878: ' aussi' (ID: 9894)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.7375717163085938
    2. ' choisir' → logprob: -2.2375717163085938
    3. ' utiliser' → logprob: -2.4875717163085938
    4. '_' → logprob: -2.7375717163085938
    5. 'contin' → logprob: -3.1125717163085938
    6. 'util' → logprob: -3.4875717163085938
    7. ' continue' → logprob: -3.6125717163085938
    8. ' répart' → logprob: -4.487571716308594
    9. ''utiliser' → logprob: -4.487571716308594
    10. '[' → logprob: -4.612571716308594

Token 879: ' passer' (ID: 27727)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8918044567108154
    2. 'contin' → logprob: -1.5168044567108154
    3. ' utiliser' → logprob: -2.0168044567108154
    4. 'pass' → logprob: -3.1418044567108154
    5. ' choisir' → logprob: -3.3918044567108154
    6. 'prendre' → logprob: -3.7668044567108154
    7. 'aller' → logprob: -3.8918044567108154
    8. ' continuer' → logprob: -4.0168046951293945
    9. ' voyager' → logprob: -4.2668046951293945
    10. 'faire' → logprob: -4.3918046951293945

Token 880: ' par' (ID: 686)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34103289246559143
    2. ' par' → logprob: -1.591032862663269
    3. ' ' → logprob: -3.2160329818725586
    4. ')' → logprob: -4.341032981872559
    5. 'par' → logprob: -4.341032981872559
    6. ' _' → logprob: -5.341032981872559
    7. ' à' → logprob: -5.341032981872559
    8. ' through' → logprob: -6.216032981872559
    9. ',' → logprob: -6.716032981872559
    10. ' au' → logprob: -6.966032981872559

Token 881: ' express' (ID: 6101)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0955767631530762
    2. ' l' → logprob: -2.345576763153076
    3. 'le' → logprob: -2.345576763153076
    4. ' des' → logprob: -2.595576763153076
    5. 'local' → logprob: -2.845576763153076
    6. 'une' → logprob: -2.970576763153076
    7. 'un' → logprob: -3.345576763153076
    8. 'la' → logprob: -3.345576763153076
    9. ' la' → logprob: -3.470576763153076
    10. 'les' → logprob: -3.470576763153076

Token 882: ' train' (ID: 8513)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 883: ' sur' (ID: 1512)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7412681579589844
    2. ' les' → logprob: -1.9912681579589844
    3. 'S' → logprob: -2.3662681579589844
    4. 'l' → logprob: -2.7412681579589844
    5. 'le' → logprob: -3.2412681579589844
    6. 'segments' → logprob: -3.3662681579589844
    7. 'la' → logprob: -3.4912681579589844
    8. ' S' → logprob: -3.6162681579589844
    9. 'certain' → logprob: -4.116268157958984
    10. 'des' → logprob: -4.616268157958984

Token 885: ' arr' (ID: 1724)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4463036060333252
    2. 'arr' → logprob: -1.9463036060333252
    3. ' segments' → logprob: -1.9463036060333252
    4. 'ar' → logprob: -4.321303367614746
    5. 'stations' → logprob: -4.321303367614746
    6. ' arr' → logprob: -4.446303367614746
    7. 'inter' → logprob: -4.946303367614746
    8. 'express' → logprob: -5.196303367614746
    9. ' tron' → logprob: -5.696303367614746
    10. 'interval' → logprob: -5.821303367614746

Token 886: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.003532605478540063
    2. 'êt' → logprob: -5.753532409667969
    3. 'ê' → logprob: -8.628532409667969
    4. '^' → logprob: -9.128532409667969
    5. 'êtes' → logprob: -10.628532409667969
    6. 'r' → logprob: -12.003532409667969
    7. '#' → logprob: -12.253532409667969
    8. '[' → logprob: -12.378532409667969
    9. ']' → logprob: -12.378532409667969
    10. 'rets' → logprob: -12.753532409667969

Token 887: ' fixes' (ID: 60095)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5920423865318298
    2. 'sem' → logprob: -2.3420424461364746
    3. ' suivants' → logprob: -2.3420424461364746
    4. ' sem' → logprob: -3.0920424461364746
    5. 'express' → logprob: -3.0920424461364746
    6. '_s' → logprob: -3.3420424461364746
    7. 's' → logprob: -3.7170424461364746
    8. ',' → logprob: -4.342042446136475
    9. '_ex' → logprob: -4.592042446136475
    10. 'S' → logprob: -4.717042446136475

Token 888: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5297051072120667
    2. ',' → logprob: -1.1547050476074219
    3. ')' → logprob: -3.154705047607422
    4. '#' → logprob: -4.654705047607422
    5. '.' → logprob: -4.654705047607422
    6. 'express' → logprob: -4.904705047607422
    7. 's' → logprob: -5.904705047607422
    8. '...' → logprob: -5.904705047607422
    9. '_,' → logprob: -5.904705047607422
    10. ' express' → logprob: -6.154705047607422

Token 889: 'co' (ID: 1191)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.217922329902649
    2. '),' → logprob: -1.467922329902649
    3. ',' → logprob: -2.0929222106933594
    4. ' )' → logprob: -2.7179222106933594
    5. 'S' → logprob: -2.8429222106933594
    6. ' S' → logprob: -3.2179222106933594
    7. ' ),' → logprob: -3.3429222106933594
    8. 'express' → logprob: -3.5929222106933594
    9. '#' → logprob: -3.9679222106933594
    10. ' et' → logprob: -3.9679222106933594

Token 890: 'ût' (ID: 24581)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -1.146466612815857
    2. 'n' → logprob: -1.521466612815857
    3. 'nst' → logprob: -2.1464667320251465
    4. 'm' → logprob: -2.2714667320251465
    5. 'mp' → logprob: -2.7714667320251465
    6. '#' → logprob: -3.2714667320251465
    7. 'unts' → logprob: -3.5214667320251465
    8. 'u' → logprob: -3.6464667320251465
    9. 'de' → logprob: -4.0214667320251465
    10. 'ut' → logprob: -4.6464667320251465

Token 891: ' B' (ID: 418)
  Prédit: ' local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' local' → logprob: -0.8501760959625244
    2. ' en' → logprob: -2.4751760959625244
    3. ')' → logprob: -2.6001760959625244
    4. ' sem' → logprob: -2.7251760959625244
    5. ' de' → logprob: -2.8501760959625244
    6. ' par' → logprob: -3.1001760959625244
    7. ' )' → logprob: -3.3501760959625244
    8. 'local' → logprob: -3.4751760959625244
    9. ' =' → logprob: -3.8501760959625244
    10. ' locaux' → logprob: -4.100175857543945

Token 892: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19902285933494568
    2. ' )' → logprob: -1.824022889137268
    3. ' /' → logprob: -4.8240227699279785
    4. '/' → logprob: -5.9490227699279785
    5. '),' → logprob: -6.4490227699279785
    6. ' *' → logprob: -6.8240227699279785
    7. ' +' → logprob: -6.9490227699279785
    8. ' ' → logprob: -7.5740227699279785
    9. ' ),' → logprob: -7.5740227699279785
    10. ',' → logprob: -7.6990227699279785

Token 893: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.26936644315719604
    2. 'segment' → logprob: -1.5193665027618408
    3. '_' → logprob: -4.269366264343262
    4. '_segment' → logprob: -6.269366264343262
    5. ' segments' → logprob: -8.019366264343262
    6. ' ' → logprob: -8.144366264343262
    7. 'segments' → logprob: -8.769366264343262
    8. ' segmento' → logprob: -9.019366264343262
    9. ' _' → logprob: -9.269366264343262
    10. ' station' → logprob: -9.769366264343262

Token 894: ' entre' (ID: 3853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050539758056402206
    2. ' )' → logprob: -3.05053973197937
    3. '),' → logprob: -7.050539970397949
    4. ',' → logprob: -8.17553997039795
    5. 's' → logprob: -8.67553997039795
    6. ' ),' → logprob: -9.30053997039795
    7. ' ' → logprob: -9.80053997039795
    8. ')
' → logprob: -9.92553997039795
    9. '+' → logprob: -10.30053997039795
    10. '...' → logprob: -10.30053997039795

Token 895: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0580414533615112
    2. 'express' → logprob: -1.4330414533615112
    3. ' S' → logprob: -1.6830414533615112
    4. 'stations' → logprob: -2.683041572570801
    5. ' stations' → logprob: -3.558041572570801
    6. ' express' → logprob: -3.683041572570801
    7. 'les' → logprob: -3.808041572570801
    8. ' eux' → logprob: -3.933041572570801
    9. ' les' → logprob: -3.933041572570801
    10. 'arr' → logprob: -5.058041572570801

Token 896: ' stops' (ID: 29924)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38973549008369446
    2. '[' → logprob: -1.139735460281372
    3. '[s' → logprob: -7.639735698699951
    4. '[j' → logprob: -7.764735698699951
    5. ']' → logprob: -8.264735221862793
    6. ')' → logprob: -8.639735221862793
    7. '[
' → logprob: -8.764735221862793
    8. '[m' → logprob: -8.889735221862793
    9. '[I' → logprob: -8.889735221862793
    10. '[_' → logprob: -9.264735221862793

Token 897: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1320970505475998
    2. '])' → logprob: -2.507097005844116
    3. '[i' → logprob: -4.507097244262695
    4. ']' → logprob: -4.882097244262695
    5. '[' → logprob: -5.382097244262695
    6. '),' → logprob: -5.382097244262695
    7. 's' → logprob: -5.757097244262695
    8. ',' → logprob: -6.257097244262695
    9. ' )' → logprob: -6.757097244262695
    10. '_)' → logprob: -6.757097244262695

Token 898: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21874436736106873
    2. '#' → logprob: -3.2187442779541016
    3. ',' → logprob: -3.2187442779541016
    4. '_' → logprob: -3.2187442779541016
    5. '[' → logprob: -3.7187442779541016
    6. '+' → logprob: -4.468744277954102
    7. '[i' → logprob: -4.468744277954102
    8. ']' → logprob: -4.468744277954102
    9. '.' → logprob: -5.468744277954102
    10. '...' → logprob: -5.968744277954102

Token 899: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4608529508113861
    2. ',' → logprob: -1.8358529806137085
    3. '#' → logprob: -2.335852861404419
    4. '...' → logprob: -3.210852861404419
    5. '.' → logprob: -4.210853099822998
    6. '+' → logprob: -4.210853099822998
    7. ',
' → logprob: -4.835853099822998
    8. '<|end|>' → logprob: -4.960853099822998
    9. ' )' → logprob: -5.335853099822998
    10. '[' → logprob: -5.960853099822998

Token 900: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.635876476764679
    2. 'local' → logprob: -1.8858764171600342
    3. ' local' → logprob: -2.385876417160034
    4. '+' → logprob: -2.385876417160034
    5. ' ' → logprob: -4.010876655578613
    6. ' #' → logprob: -4.010876655578613
    7. '_' → logprob: -4.260876655578613
    8. 'express' → logprob: -4.260876655578613
    9. '\n' → logprob: -4.885876655578613
    10. '=' → logprob: -5.135876655578613

Token 901: ' incl' (ID: 11368)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.000794768333435
    2. '=' → logprob: -1.250794768333435
    3. 'continue' → logprob: -2.6257948875427246
    4. ' continue' → logprob: -3.1257948875427246
    5. '.' → logprob: -3.2507948875427246
    6. '.append' → logprob: -3.3757948875427246
    7. '[' → logprob: -3.3757948875427246
    8. '+' → logprob: -3.6257948875427246
    9. ' can' → logprob: -4.500794887542725
    10. 'append' → logprob: -4.875794887542725

Token 902: 'ut' (ID: 339)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3955734968185425
    2. 'ément' → logprob: -1.8955734968185425
    3. 'import' → logprob: -2.020573616027832
    4. 'ues' → logprob: -2.770573616027832
    5. 'ude' → logprob: -3.020573616027832
    6. 'imité' → logprob: -3.145573616027832
    7. 'u' → logprob: -3.270573616027832
    8. 'ustr' → logprob: -3.520573616027832
    9. 'clude' → logprob: -3.645573616027832
    10. 'imit' → logprob: -3.895573616027832

Token 903: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5544949769973755
    2. ' les' → logprob: -1.5544949769973755
    3. ' une' → logprob: -2.679494857788086
    4. ' la' → logprob: -2.679494857788086
    5. ' le' → logprob: -3.054494857788086
    6. 'le' → logprob: -3.179494857788086
    7. 'les' → logprob: -3.179494857788086
    8. 'import' → logprob: -3.429494857788086
    9. ' ' → logprob: -3.554494857788086
    10. ' un' → logprob: -3.679494857788086

Token 904: ' arr' (ID: 1724)
  Prédit: ' local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' local' → logprob: -1.8968706130981445
    2. '\n' → logprob: -2.0218706130981445
    3. 'local' → logprob: -2.1468706130981445
    4. 'express' → logprob: -2.1468706130981445
    5. ' stops' → logprob: -2.5218706130981445
    6. '#' → logprob: -2.7718706130981445
    7. ' express' → logprob: -2.7718706130981445
    8. ' sem' → logprob: -3.2718706130981445
    9. ' S' → logprob: -3.7718706130981445
    10. 'import' → logprob: -3.8968706130981445

Token 905: 'êts' (ID: 56582)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9828612804412842
    2. 'port' → logprob: -1.9828612804412842
    3. ']' → logprob: -2.107861280441284
    4. '[' → logprob: -2.857861280441284
    5. '#' → logprob: -3.732861280441284
    6. 'g' → logprob: -3.732861280441284
    7. 'import' → logprob: -3.982861280441284
    8. 'e' → logprob: -4.107861518859863
    9. 'ge' → logprob: -4.232861518859863
    10. 'ort' → logprob: -4.482861518859863

Token 906: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8582273721694946
    2. ' sem' → logprob: -1.1082273721694946
    3. ' express' → logprob: -2.733227252960205
    4. ' de' → logprob: -3.233227252960205
    5. '_s' → logprob: -3.358227252960205
    6. '_sem' → logprob: -3.483227252960205
    7. 's' → logprob: -4.233227252960205
    8. ')' → logprob: -4.858227252960205
    9. ' supplémentaires' → logprob: -4.983227252960205
    10. ' s' → logprob: -5.358227252960205

Token 907: 'iexpress' (ID: 190732)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.07260340452194214
    2. 'iexpress' → logprob: -4.322603225708008
    3. '`' → logprob: -4.572603225708008
    4. '```' → logprob: -5.197603225708008
    5. ''' → logprob: -5.447603225708008
    6. '
' → logprob: -5.697603225708008
    7. '['' → logprob: -6.197603225708008
    8. 'import' → logprob: -6.197603225708008
    9. ')' → logprob: -6.447603225708008
    10. '[' → logprob: -6.447603225708008

Token 908: ' entre' (ID: 3853)
  Prédit: ' stops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.7492096424102783
    2. ',' → logprob: -1.6242096424102783
    3. '_' → logprob: -2.6242096424102783
    4. '<|end|>' → logprob: -3.3742096424102783
    5. '#' → logprob: -3.4992096424102783
    6. ')' → logprob: -3.6242096424102783
    7. '.' → logprob: -3.7492096424102783
    8. 's' → logprob: -3.7492096424102783
    9. ' sem' → logprob: -4.374209403991699
    10. '_s' → logprob: -4.499209403991699

Token 909: ' les' (ID: 1341)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05648675933480263
    2. 'les' → logprob: -3.9314868450164795
    3. 'express' → logprob: -4.0564866065979
    4. 'stations' → logprob: -5.3064866065979
    5. ']' → logprob: -5.8064866065979
    6. 'the' → logprob: -6.4314866065979
    7. ')' → logprob: -6.5564866065979
    8. 'segments' → logprob: -6.8064866065979
    9. ' S' → logprob: -6.9314866065979
    10. ' les' → logprob: -7.4314866065979

Token 910: ' arr' (ID: 1724)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16478867828845978
    2. 'stations' → logprob: -2.6647887229919434
    3. 'express' → logprob: -3.1647887229919434
    4. 'arr' → logprob: -4.539788722991943
    5. 'l' → logprob: -5.039788722991943
    6. 'segments' → logprob: -5.289788722991943
    7. ' S' → logprob: -5.539788722991943
    8. 's' → logprob: -5.664788722991943
    9. ' stops' → logprob: -5.789788722991943
    10. ']' → logprob: -7.414788722991943

Token 911: 'êts' (ID: 56582)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1635050773620605
    2. 'S' → logprob: -2.2885050773620605
    3. '#' → logprob: -2.4135050773620605
    4. ']' → logprob: -2.7885050773620605
    5. '##' → logprob: -2.7885050773620605
    6. 'ss' → logprob: -2.7885050773620605
    7. 's' → logprob: -2.9135050773620605
    8. 'près' → logprob: -3.4135050773620605
    9. 'stations' → logprob: -3.4135050773620605
    10. 'press' → logprob: -3.7885050773620605

Token 912: ' express' (ID: 6101)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17586693167686462
    2. 'express' → logprob: -2.9258668422698975
    3. ' express' → logprob: -3.1758668422698975
    4. ' _' → logprob: -3.6758668422698975
    5. '_s' → logprob: -4.050867080688477
    6. '[' → logprob: -5.425867080688477
    7. 's' → logprob: -5.425867080688477
    8. '_ex' → logprob: -5.800867080688477
    9. ' sem' → logprob: -6.175867080688477
    10. '_sem' → logprob: -6.800867080688477

Token 913: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9269998669624329
    2. ',' → logprob: -1.551999807357788
    3. '[' → logprob: -2.301999807357788
    4. ']' → logprob: -3.176999807357788
    5. ')' → logprob: -3.301999807357788
    6. '#' → logprob: -3.676999807357788
    7. ':' → logprob: -3.676999807357788
    8. '.' → logprob: -3.676999807357788
    9. '
' → logprob: -3.676999807357788
    10. '<|end|>' → logprob: -3.926999807357788

Token 914: ' ce' (ID: 2357)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0850632190704346
    2. ')' → logprob: -1.2100632190704346
    3. '#' → logprob: -2.5850632190704346
    4. '.' → logprob: -3.4600632190704346
    5. '<|end|>' → logprob: -3.4600632190704346
    6. ' ' → logprob: -3.5850632190704346
    7. '_' → logprob: -3.7100632190704346
    8. '[' → logprob: -3.8350632190704346
    9. 'def' → logprob: -3.8350632190704346
    10. '...' → logprob: -4.2100629806518555

Token 915: ' qui' (ID: 2780)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08465229719877243
    2. '+' → logprob: -3.4596521854400635
    3. ')' → logprob: -4.084652423858643
    4. '[' → logprob: -5.084652423858643
    5. ''' → logprob: -5.209652423858643
    6. '#' → logprob: -5.334652423858643
    7. 's' → logprob: -6.209652423858643
    8. '=' → logprob: -6.209652423858643
    9. ',' → logprob: -6.584652423858643
    10. 'n' → logprob: -7.084652423858643

Token 916: ' permet' (ID: 11798)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.7775671482086182
    2. ' permet' → logprob: -2.152567148208618
    3. ' reste' → logprob: -2.527567148208618
    4. ' completes' → logprob: -2.527567148208618
    5. ' n' → logprob: -2.652567148208618
    6. ' complet' → logprob: -2.777567148208618
    7. 'n' → logprob: -3.027567148208618
    8. 'contin' → logprob: -3.152567148208618
    9. ' est' → logprob: -3.277567148208618
    10. ' complète' → logprob: -3.402567148208618

Token 917: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9469649195671082
    2. 'd' → logprob: -1.196964979171753
    3. 'de' → logprob: -1.821964979171753
    4. ' de' → logprob: -1.946964979171753
    5. '_' → logprob: -6.446964740753174
    6. '#' → logprob: -6.946964740753174
    7. '_d' → logprob: -7.071964740753174
    8. 'aux' → logprob: -7.446964740753174
    9. 'def' → logprob: -8.696965217590332
    10. 'une' → logprob: -8.696965217590332

Token 918: ' "' (ID: 392)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.7841086983680725
    2. 'div' → logprob: -1.5341086387634277
    3. 'd' → logprob: -2.5341086387634277
    4. 'cho' → logprob: -3.0341086387634277
    5. 'b' → logprob: -3.1591086387634277
    6. ' réduire' → logprob: -3.5341086387634277
    7. 're' → logprob: -3.7841086387634277
    8. 'min' → logprob: -4.284108638763428
    9. ' choisir' → logprob: -4.784108638763428
    10. 'r' → logprob: -4.909108638763428

Token 919: 'cou' (ID: 79019)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.6901095509529114
    2. 'd' → logprob: -2.5651094913482666
    3. 'min' → logprob: -2.6901094913482666
    4. 'cho' → logprob: -2.9401094913482666
    5. 'div' → logprob: -3.3151094913482666
    6. 'placer' → logprob: -3.4401094913482666
    7. 'prendre' → logprob: -3.6901094913482666
    8. 'faire' → logprob: -3.9401094913482666
    9. ' réduire' → logprob: -4.065109729766846
    10. 'r' → logprob: -4.065109729766846

Token 920: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6096723079681396
    2. 'vr' → logprob: -0.8596723079681396
    3. 'p' → logprob: -4.234672546386719
    4. 'vir' → logprob: -4.359672546386719
    5. 'pler' → logprob: -6.359672546386719
    6. 'vrt' → logprob: -7.234672546386719
    7. 'pier' → logprob: -7.234672546386719
    8. 'pper' → logprob: -7.484672546386719
    9. 'v' → logprob: -7.609672546386719
    10. 'r' → logprob: -8.359672546386719

Token 921: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.384572982788086
    2. ' en' → logprob: -1.384572982788086
    3. ' les' → logprob: -1.384572982788086
    4. ' le' → logprob: -2.759572982788086
    5. ' la' → logprob: -3.134572982788086
    6. 'les' → logprob: -3.509572982788086
    7. 's' → logprob: -4.259572982788086
    8. '"' → logprob: -4.259572982788086
    9. ' _' → logprob: -4.384572982788086
    10. 'le' → logprob: -5.009572982788086

Token 922: ' un' (ID: 537)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0130140781402588
    2. 'les' → logprob: -1.1380140781402588
    3. 'le' → logprob: -2.263014078140259
    4. ' le' → logprob: -2.638014078140259
    5. ' la' → logprob: -3.888014078140259
    6. ' en' → logprob: -4.01301383972168
    7. 'en' → logprob: -4.13801383972168
    8. '_' → logprob: -4.13801383972168
    9. 'l' → logprob: -4.51301383972168
    10. 'the' → logprob: -4.76301383972168

Token 923: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.17092612385749817
    2. '_' → logprob: -2.545926094055176
    3. 'segment' → logprob: -3.045926094055176
    4. ' segments' → logprob: -4.920926094055176
    5. ' morceau' → logprob: -5.045926094055176
    6. 'segments' → logprob: -5.670926094055176
    7. ' _' → logprob: -5.795926094055176
    8. ' ' → logprob: -5.795926094055176
    9. '_segment' → logprob: -5.920926094055176
    10. '_segments' → logprob: -6.670926094055176

Token 924: ' long' (ID: 1701)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18608054518699646
    2. '<|end|>' → logprob: -2.4360804557800293
    3. 's' → logprob: -3.6860804557800293
    4. ')' → logprob: -4.436080455780029
    5. ' _' → logprob: -4.686080455780029
    6. ',' → logprob: -4.936080455780029
    7. ' ' → logprob: -5.061080455780029
    8. '_s' → logprob: -6.061080455780029
    9. ' de' → logprob: -6.186080455780029
    10. '[' → logprob: -6.311080455780029

Token 925: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12111759930849075
    2. ',' → logprob: -3.12111759185791
    3. ')' → logprob: -3.37111759185791
    4. 's' → logprob: -4.62111759185791
    5. ']' → logprob: -5.49611759185791
    6. '.' → logprob: -6.37111759185791
    7. ' _' → logprob: -6.37111759185791
    8. ' ' → logprob: -6.37111759185791
    9. ' en' → logprob: -6.37111759185791
    10. '#' → logprob: -6.62111759185791

Token 926: ' plusieurs' (ID: 20875)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.44453051686286926
    2. 'segments' → logprob: -1.5695304870605469
    3. 'part' → logprob: -2.069530487060547
    4. 'parts' → logprob: -4.569530487060547
    5. ' segments' → logprob: -5.694530487060547
    6. ' plus' → logprob: -5.819530487060547
    7. 'sm' → logprob: -6.694530487060547
    8. 'm' → logprob: -6.819530487060547
    9. 'pet' → logprob: -7.069530487060547
    10. '+' → logprob: -7.319530487060547

Token 927: ' petits' (ID: 38141)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.2533723711967468
    2. ' segments' → logprob: -1.8783724308013916
    3. '_' → logprob: -3.2533724308013916
    4. ' morceaux' → logprob: -3.7533724308013916
    5. ',' → logprob: -6.3783721923828125
    6. ' _' → logprob: -6.5033721923828125
    7. '_segments' → logprob: -6.6283721923828125
    8. 'arr' → logprob: -7.3783721923828125
    9. 'segment' → logprob: -7.5033721923828125
    10. 'parts' → logprob: -7.8783721923828125

Token 928: ' segments' (ID: 33749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2032991349697113
    2. 'segments' → logprob: -2.203299045562744
    3. '_segments' → logprob: -3.578299045562744
    4. ' segments' → logprob: -3.828299045562744
    5. '-' → logprob: -5.578299045562744
    6. 's' → logprob: -5.703299045562744
    7. 'arr' → logprob: -5.828299045562744
    8. ')' → logprob: -6.078299045562744
    9. ' _' → logprob: -6.328299045562744
    10. ',' → logprob: -6.703299045562744

Token 929: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5600770711898804
    2. ',' → logprob: -1.5600770711898804
    3. '#' → logprob: -2.68507719039917
    4. ')' → logprob: -3.06007719039917
    5. ']' → logprob: -3.68507719039917
    6. '.' → logprob: -4.18507719039917
    7. '+' → logprob: -4.18507719039917
    8. '[' → logprob: -4.81007719039917
    9. 'def' → logprob: -5.43507719039917
    10. ',
' → logprob: -5.68507719039917

Token 930: ' chacun' (ID: 52136)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32827919721603394
    2. ',' → logprob: -2.5782792568206787
    3. '<|end|>' → logprob: -2.8282792568206787
    4. '.' → logprob: -3.5782792568206787
    5. '[' → logprob: -3.7032792568206787
    6. '#' → logprob: -4.2032790184021
    7. ' ' → logprob: -4.3282790184021
    8. '=' → logprob: -4.3282790184021
    9. ':' → logprob: -4.5782790184021
    10. '_' → logprob: -4.7032790184021

Token 931: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2020772397518158
    2. '=' → logprob: -3.5770771503448486
    3. '.' → logprob: -4.077077388763428
    4. '+' → logprob: -4.077077388763428
    5. '_' → logprob: -4.202077388763428
    6. ' de' → logprob: -4.202077388763428
    7. '<|end|>' → logprob: -4.327077388763428
    8. ',' → logprob: -4.702077388763428
    9. ' est' → logprob: -4.827077388763428
    10. ' )' → logprob: -4.952077388763428

Token 932: ' coût' (ID: 73109)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.818864643573761
    2. 's' → logprob: -2.068864583969116
    3. '<|end|>' → logprob: -2.443864583969116
    4. 'contin' → logprob: -3.193864583969116
    5. ' continue' → logprob: -3.318864583969116
    6. '+' → logprob: -3.443864583969116
    7. '.' → logprob: -3.943864583969116
    8. ' s' → logprob: -3.943864583969116
    9. '#' → logprob: -4.068864822387695
    10. 'a' → logprob: -4.443864822387695

Token 933: 'ent' (ID: 299)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.021184127777814865
    2. ')' → logprob: -4.771183967590332
    3. '=' → logprob: -5.896183967590332
    4. 'u' → logprob: -6.021183967590332
    5. '_' → logprob: -6.271183967590332
    6. ' e' → logprob: -6.521183967590332
    7. 'a' → logprob: -7.646183967590332
    8. 's' → logprob: -7.771183967590332
    9. ' )' → logprob: -8.271183967590332
    10. 'ent' → logprob: -8.271183967590332

Token 934: ' C' (ID: 363)
  Prédit: ' moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moins' → logprob: -0.08947208523750305
    2. 'moins' → logprob: -2.5894720554351807
    3. ' less' → logprob: -5.21447229385376
    4. ' C' → logprob: -5.71447229385376
    5. 'C' → logprob: -6.83947229385376
    6. ' plus' → logprob: -7.83947229385376
    7. 'plus' → logprob: -9.464471817016602
    8. ' ' → logprob: -9.714471817016602
    9. ' peu' → logprob: -10.339471817016602
    10. ' menos' → logprob: -10.589471817016602

Token 935: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 936: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.1494937241077423
    2. ' segment' → logprob: -2.02449369430542
    3. 'station' → logprob: -6.39949369430542
    4. 'segments' → logprob: -6.39949369430542
    5. '```' → logprob: -6.64949369430542
    6. ' station' → logprob: -7.39949369430542
    7. ' ' → logprob: -7.77449369430542
    8. ' ' → logprob: -8.649494171142578
    9. ' segments' → logprob: -8.899494171142578
    10. 's' → logprob: -9.149494171142578

Token 937: ' plus' (ID: 2932)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06436583399772644
    2. ',' → logprob: -3.814365863800049
    3. ')' → logprob: -4.064365863800049
    4. '#' → logprob: -5.189365863800049
    5. ']' → logprob: -5.689365863800049
    6. '[' → logprob: -5.814365863800049
    7. '+' → logprob: -6.189365863800049
    8. '<|end|>' → logprob: -6.439365863800049
    9. '*' → logprob: -7.064365863800049
    10. '.' → logprob: -7.189365863800049

Token 938: ' court' (ID: 10314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6443803310394287
    2. '...' → logprob: -2.2693803310394287
    3. '\n' → logprob: -2.7693803310394287
    4. 'une' → logprob: -3.0193803310394287
    5. ' ' → logprob: -3.1443803310394287
    6. ' une' → logprob: -3.3943803310394287
    7. 'moins' → logprob: -3.3943803310394287
    8. '```' → logprob: -4.144380569458008
    9. 'un' → logprob: -4.769380569458008
    10. 'import' → logprob: -4.769380569458008

Token 939: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4179390668869019
    2. '_' → logprob: -1.4179390668869019
    3. ',' → logprob: -2.1679391860961914
    4. '<|end|>' → logprob: -2.1679391860961914
    5. '
' → logprob: -2.6679391860961914
    6. '[' → logprob: -3.4179391860961914
    7. '#' → logprob: -3.6679391860961914
    8. '\' → logprob: -3.7929391860961914
    9. '\n' → logprob: -3.7929391860961914
    10. '+' → logprob: -4.042939186096191

Token 940: '#
' (ID: 11240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0960954427719116
    2. ')' → logprob: -1.5960954427719116
    3. ' ' → logprob: -2.221095561981201
    4. '
' → logprob: -2.596095561981201
    5. '\n' → logprob: -2.846095561981201
    6. '#' → logprob: -2.971095561981201
    7. '\' → logprob: -3.471095561981201
    8. '_' → logprob: -3.596095561981201
    9. ',' → logprob: -3.971095561981201
    10. '+' → logprob: -4.096095561981201

Token 941: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6260685920715332
    2. ')' → logprob: -2.126068592071533
    3. 'def' → logprob: -2.501068592071533
    4. 'for' → logprob: -2.501068592071533
    5. '[' → logprob: -2.626068592071533
    6. '+' → logprob: -3.126068592071533
    7. 'dp' → logprob: -3.126068592071533
    8. ']' → logprob: -3.376068592071533
    9. ',' → logprob: -3.376068592071533
    10. '\n' → logprob: -3.501068592071533

Token 942: ' Ainsi' (ID: 65093)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.75733882188797
    2. 'def' → logprob: -1.5073387622833252
    3. ']' → logprob: -3.132338762283325
    4. 'dp' → logprob: -3.382338762283325
    5. ')' → logprob: -3.507338762283325
    6. 'i' → logprob: -3.632338762283325
    7. ',' → logprob: -4.007339000701904
    8. 'd' → logprob: -4.007339000701904
    9. '[' → logprob: -4.007339000701904
    10. '_' → logprob: -4.132339000701904

Token 943: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4082726836204529
    2. '[' → logprob: -1.6582727432250977
    3. ',' → logprob: -2.7832727432250977
    4. ':' → logprob: -3.4082727432250977
    5. '#' → logprob: -4.033272743225098
    6. '.' → logprob: -5.033272743225098
    7. ')' → logprob: -5.658272743225098
    8. '[
' → logprob: -6.033272743225098
    9. 'def' → logprob: -6.033272743225098
    10. '=' → logprob: -6.158272743225098

Token 944: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0096102952957153
    2. ')' → logprob: -1.1346102952957153
    3. ']' → logprob: -2.884610176086426
    4. 'def' → logprob: -3.134610176086426
    5. ' ' → logprob: -3.509610176086426
    6. '(' → logprob: -3.759610176086426
    7. '[' → logprob: -3.759610176086426
    8. ' #' → logprob: -4.134610176086426
    9. '.' → logprob: -4.634610176086426
    10. '_' → logprob: -4.634610176086426

Token 945: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11536898463964462
    2. ' i' → logprob: -2.4903690814971924
    3. ' chaque' → logprob: -4.490368843078613
    4. '_' → logprob: -4.865368843078613
    5. 'each' → logprob: -6.365368843078613
    6. 'interval' → logprob: -6.490368843078613
    7. ' _' → logprob: -7.615368843078613
    8. '_i' → logprob: -7.740368843078613
    9. ' interval' → logprob: -7.865368843078613
    10. ' each' → logprob: -8.240368843078613

Token 946: ' interval' (ID: 17116)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4610649049282074
    2. 'interval' → logprob: -1.4610649347305298
    3. '_' → logprob: -3.3360648155212402
    4. ' i' → logprob: -3.5860648155212402
    5. 'segment' → logprob: -3.8360648155212402
    6. ']' → logprob: -3.9610648155212402
    7. 'inter' → logprob: -4.08606481552124
    8. ' interval' → logprob: -5.96106481552124
    9. ')' → logprob: -6.33606481552124
    10. ' ]' → logprob: -6.46106481552124

Token 947: 'le' (ID: 282)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0339146852493286
    2. '#' → logprob: -1.1589146852493286
    3. ']' → logprob: -1.5339146852493286
    4. '[i' → logprob: -3.033914566040039
    5. '_' → logprob: -3.783914566040039
    6. 'e' → logprob: -4.033914566040039
    7. 'le' → logprob: -5.158914566040039
    8. '[
' → logprob: -5.658914566040039
    9. '[n' → logprob: -5.783914566040039
    10. 'n' → logprob: -5.908914566040039

Token 948: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8823876976966858
    2. '[' → logprob: -1.257387638092041
    3. '[i' → logprob: -1.257387638092041
    4. ':' → logprob: -4.632387638092041
    5. '_' → logprob: -5.632387638092041
    6. '[
' → logprob: -7.007387638092041
    7. '#' → logprob: -7.507387638092041
    8. ']' → logprob: -7.882387638092041
    9. '\[' → logprob: -8.1323881149292
    10. '[]' → logprob: -8.2573881149292

Token 949: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0895286500453949
    2. 'express' → logprob: -3.0895285606384277
    3. 'arr' → logprob: -3.7145285606384277
    4. 'les' → logprob: -4.464528560638428
    5. ' S' → logprob: -6.964528560638428
    6. 'de' → logprob: -7.339528560638428
    7. 'i' → logprob: -7.464528560638428
    8. 'stations' → logprob: -7.964528560638428
    9. ' stops' → logprob: -8.339529037475586
    10. 'l' → logprob: -8.589529037475586

Token 950: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010200592689216137
    2. '[' → logprob: -4.635200500488281
    3. '[j' → logprob: -8.885200500488281
    4. '\[' → logprob: -9.260200500488281
    5. '[
' → logprob: -10.385200500488281
    6. '[I' → logprob: -10.510200500488281
    7. '[_' → logprob: -11.135200500488281
    8. ''s' → logprob: -11.510200500488281
    9. '```' → logprob: -11.635200500488281
    10. 's' → logprob: -11.635200500488281

Token 951: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26174095273017883
    2. '[i' → logprob: -1.5117409229278564
    3. '[
' → logprob: -5.5117411613464355
    4. '[j' → logprob: -6.0117411613464355
    5. '\[' → logprob: -7.2617411613464355
    6. ']' → logprob: -7.3867411613464355
    7. '+' → logprob: -8.011740684509277
    8. 's' → logprob: -8.386740684509277
    9. '[I' → logprob: -8.636740684509277
    10. '[s' → logprob: -8.761740684509277

Token 952: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.002503601834177971
    2. ' S' → logprob: -6.002503395080566
    3. 'i' → logprob: -10.627503395080566
    4. '[i' → logprob: -13.002503395080566
    5. 's' → logprob: -15.127503395080566
    6. ' i' → logprob: -15.377503395080566
    7. ' ' → logprob: -15.502503395080566
    8. ' ' → logprob: -15.752503395080566
    9. '
' → logprob: -16.127504348754883
    10. '_S' → logprob: -16.252504348754883

Token 953: '_{' (ID: 22305)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014789171982556581
    2. '_i' → logprob: -7.126479148864746
    3. 'i' → logprob: -8.251479148864746
    4. '[' → logprob: -8.626479148864746
    5. '[j' → logprob: -9.126479148864746
    6. '[
' → logprob: -10.376479148864746
    7. '\[' → logprob: -10.876479148864746
    8. '[_' → logprob: -11.001479148864746
    9. '```' → logprob: -11.126479148864746
    10. '_[' → logprob: -11.626479148864746

Token 954: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009801707929000258
    2. '_i' → logprob: -7.500980377197266
    3. '[i' → logprob: -8.250980377197266
    4. ' i' → logprob: -9.750980377197266
    5. '0' → logprob: -10.000980377197266
    6. 'M' → logprob: -10.750980377197266
    7. ']' → logprob: -11.625980377197266
    8. '1' → logprob: -12.000980377197266
    9. '_' → logprob: -12.375980377197266
    10. '+' → logprob: -12.625980377197266

Token 955: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009832354262471199
    2. '[i' → logprob: -5.384832382202148
    3. ']' → logprob: -5.759832382202148
    4. '[' → logprob: -6.884832382202148
    5. '[
' → logprob: -8.009832382202148
    6. '+]' → logprob: -8.259832382202148
    7. '+
' → logprob: -8.884832382202148
    8. ']+' → logprob: -9.134832382202148
    9. '+i' → logprob: -10.384832382202148
    10. ' +' → logprob: -10.509832382202148

Token 956: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017721399664878845
    2. 'i' → logprob: -4.142721176147461
    3. '+' → logprob: -6.517721176147461
    4. '_i' → logprob: -9.517721176147461
    5. '[i' → logprob: -9.767721176147461
    6. '_' → logprob: -10.142721176147461
    7. '(i' → logprob: -11.517721176147461
    8. ']' → logprob: -12.142721176147461
    9. '_plus' → logprob: -12.142721176147461
    10. 'plus' → logprob: -12.767721176147461

Token 957: '},' (ID: 4180)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.48992466926574707
    2. ']' → logprob: -1.114924669265747
    3. ']:
' → logprob: -3.864924669265747
    4. '[i' → logprob: -4.114924430847168
    5. ']:' → logprob: -4.239924430847168
    6. '+' → logprob: -5.864924430847168
    7. ']+' → logprob: -6.364924430847168
    8. '],
' → logprob: -6.614924430847168
    9. '[' → logprob: -8.114924430847168
    10. ']:

' → logprob: -8.364924430847168

Token 958: ' de' (ID: 334)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5245622396469116
    2. '#' → logprob: -1.2745622396469116
    3. 'on' → logprob: -2.149562358856201
    4. ' #' → logprob: -5.399562358856201
    5. ' il' → logprob: -7.024562358856201
    6. ' ' → logprob: -7.149562358856201
    7. 'for' → logprob: -7.149562358856201
    8. 'length' → logprob: -7.149562358856201
    9. ',' → logprob: -7.774562358856201
    10. 'n' → logprob: -8.024561882019043

Token 959: ' longueur' (ID: 104613)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -1.6452548503875732
    2. 'plus' → logprob: -1.8952548503875732
    3. 'long' → logprob: -2.6452548503875732
    4. '#' → logprob: -2.6452548503875732
    5. 'length' → logprob: -3.0202548503875732
    6. 'range' → logprob: -3.1452548503875732
    7. 's' → logprob: -3.1452548503875732
    8. ')' → logprob: -3.2702548503875732
    9. 'tail' → logprob: -3.2702548503875732
    10. 'stations' → logprob: -3.2702548503875732

Token 960: ' d' (ID: 272)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.33813396096229553
    2. '[i' → logprob: -2.7131340503692627
    3. '-' → logprob: -2.9631340503692627
    4. '_' → logprob: -2.9631340503692627
    5. ' =' → logprob: -3.8381340503692627
    6. '[' → logprob: -3.9631340503692627
    7. ' (' → logprob: -4.088133811950684
    8. ' ' → logprob: -4.213133811950684
    9. ' _' → logprob: -5.213133811950684
    10. '=' → logprob: -5.463133811950684

Token 961: ' :=' (ID: 3405)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3471380472183228
    2. ''' → logprob: -1.5971380472183228
    3. 'istance' → logprob: -2.472137928009033
    4. '+' → logprob: -2.722137928009033
    5. ''arrêt' → logprob: -2.972137928009033
    6. 'S' → logprob: -3.347137928009033
    7. 'i' → logprob: -3.347137928009033
    8. 'ist' → logprob: -3.597137928009033
    9. '_' → logprob: -3.597137928009033
    10. '1' → logprob: -3.722137928009033

Token 962: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09895231574773788
    2. ' S' → logprob: -2.848952293395996
    3. '(S' → logprob: -3.348952293395996
    4. ' (' → logprob: -6.848952293395996
    5. '(' → logprob: -9.348952293395996
    6. ' ' → logprob: -10.973952293395996
    7. ' ' → logprob: -11.848952293395996
    8. '   ' → logprob: -12.098952293395996
    9. '`' → logprob: -12.848952293395996
    10. '(s' → logprob: -13.348952293395996

Token 963: '_{' (ID: 22305)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019245444855187088
    2. '[' → logprob: -8.625192642211914
    3. ' [' → logprob: -12.500192642211914
    4. '```' → logprob: -13.250192642211914
    5. '[I' → logprob: -13.250192642211914
    6. '[j' → logprob: -13.375192642211914
    7. '   ' → logprob: -13.750192642211914
    8. '\[' → logprob: -14.625192642211914
    9. '[-' → logprob: -14.875192642211914
    10. '[idx' → logprob: -14.875192642211914

Token 964: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02400260791182518
    2. '[i' → logprob: -3.7740025520324707
    3. ' i' → logprob: -7.524002552032471
    4. ']' → logprob: -9.149003028869629
    5. '_i' → logprob: -9.524003028869629
    6. '   ' → logprob: -11.649003028869629
    7. '(i' → logprob: -12.274003028869629
    8. '```' → logprob: -12.399003028869629
    9. '`' → logprob: -13.274003028869629
    10. ')' → logprob: -13.274003028869629

Token 965: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6719033122062683
    2. '[i' → logprob: -0.7969033122062683
    3. '[' → logprob: -3.671903371810913
    4. ']' → logprob: -4.671903133392334
    5. '[
' → logprob: -6.796903133392334
    6. '   ' → logprob: -7.796903133392334
    7. '+]' → logprob: -7.921903133392334
    8. '+i' → logprob: -8.046903610229492
    9. '+
' → logprob: -8.171903610229492
    10. ']+' → logprob: -8.546903610229492

Token 966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. '[i' → logprob: -12.750012397766113
    3. ' ' → logprob: -13.000012397766113
    4. 'i' → logprob: -13.125012397766113
    5. '   ' → logprob: -13.375012397766113
    6. '+' → logprob: -13.375012397766113
    7. ']' → logprob: -14.625012397766113
    8. '-' → logprob: -14.875012397766113
    9. '```' → logprob: -15.000012397766113
    10. '0' → logprob: -15.125012397766113

Token 967: '}' (ID: 92)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.45207875967025757
    2. ']' → logprob: -1.0770788192749023
    3. '-' → logprob: -4.952078819274902
    4. ']+' → logprob: -5.327078819274902
    5. '[' → logprob: -5.952078819274902
    6. ']-' → logprob: -6.202078819274902
    7. '}' → logprob: -6.327078819274902
    8. ' -' → logprob: -6.452078819274902
    9. '```' → logprob: -7.327078819274902
    10. '],' → logprob: -7.577078819274902

Token 968: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.640006422996521
    2. '[i' → logprob: -1.015006422996521
    3. ' -' → logprob: -2.7650065422058105
    4. '-' → logprob: -3.7650065422058105
    5. '[' → logprob: -4.3900065422058105
    6. ']' → logprob: -5.3900065422058105
    7. '```' → logprob: -6.7650065422058105
    8. ')' → logprob: -7.1400065422058105
    9. ' +' → logprob: -7.3900065422058105
    10. '`' → logprob: -7.5150065422058105

Token 969: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07895588129758835
    2. ' S' → logprob: -2.578955888748169
    3. '[i' → logprob: -10.57895565032959
    4. 'i' → logprob: -10.95395565032959
    5. ' ' → logprob: -11.70395565032959
    6. ' i' → logprob: -12.07895565032959
    7. '1' → logprob: -12.70395565032959
    8. '   ' → logprob: -13.07895565032959
    9. '`' → logprob: -13.57895565032959
    10. '  ' → logprob: -14.70395565032959

Token 970: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.250017166137695
    3. 'i' → logprob: -13.500017166137695
    4. ' [' → logprob: -14.125017166137695
    5. '[
' → logprob: -14.500017166137695
    6. '[I' → logprob: -14.625017166137695
    7. '\[' → logprob: -15.125017166137695
    8. '```' → logprob: -15.250017166137695
    9. '_i' → logprob: -15.500017166137695
    10. ']' → logprob: -16.000017166137695

Token 971: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6382088661193848
    2. '+' → logprob: -1.3882088661193848
    3. '
' → logprob: -2.2632088661193848
    4. ')' → logprob: -3.6382088661193848
    5. ',
' → logprob: -3.7632088661193848
    6. ' +' → logprob: -4.013208866119385
    7. ':' → logprob: -4.138208866119385
    8. '#' → logprob: -4.888208866119385
    9. '-' → logprob: -5.138208866119385
    10. '),' → logprob: -5.263208866119385

Token 972: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18172185122966766
    2. ',' → logprob: -2.4317219257354736
    3. ')' → logprob: -3.4317219257354736
    4. ' on' → logprob: -4.1817216873168945
    5. ' #' → logprob: -5.3067216873168945
    6. ' =' → logprob: -5.4317216873168945
    7. '=' → logprob: -5.8067216873168945
    8. 's' → logprob: -6.6817216873168945
    9. 'on' → logprob: -6.6817216873168945
    10. 'x' → logprob: -6.8067216873168945

Token 973: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.35538771748542786
    2. '#' → logprob: -1.9803876876831055
    3. 'on' → logprob: -2.4803876876831055
    4. 'for' → logprob: -3.8553876876831055
    5. ' #' → logprob: -4.2303876876831055
    6. ' for' → logprob: -4.4803876876831055
    7. ',' → logprob: -5.7303876876831055
    8. 'max' → logprob: -5.9803876876831055
    9. 'possible' → logprob: -6.1053876876831055
    10. 'x' → logprob: -6.3553876876831055

Token 974: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peux' → logprob: -1.1379542350769043
    2. 'pe' → logprob: -1.8879542350769043
    3. 'vais' → logprob: -2.5129542350769043
    4. ' calc' → logprob: -2.6379542350769043
    5. 'continue' → logprob: -2.8879542350769043
    6. ' vais' → logprob: -3.1379542350769043
    7. 's' → logprob: -3.5129542350769043
    8. '#' → logprob: -4.012954235076904
    9. ' continue' → logprob: -4.012954235076904
    10. 'calc' → logprob: -4.012954235076904

Token 975: ' choisir' (ID: 47004)
  Prédit: 'pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pré' → logprob: -1.096034049987793
    2. 'calcul' → logprob: -1.471034049987793
    3. 'penser' → logprob: -2.846034049987793
    4. 'cho' → logprob: -3.096034049987793
    5. 'repr' → logprob: -3.096034049987793
    6. ' calcul' → logprob: -3.096034049987793
    7. ' choisir' → logprob: -3.346034049987793
    8. 'div' → logprob: -3.846034049987793
    9. 'form' → logprob: -4.221034049987793
    10. 'prendre' → logprob: -4.221034049987793

Token 976: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1760616898536682
    2. 'x' → logprob: -2.5510616302490234
    3. ' d' → logprob: -3.9260616302490234
    4. ' ' → logprob: -4.301061630249023
    5. ' j' → logprob: -4.801061630249023
    6. ' de' → logprob: -4.801061630249023
    7. ' nombre' → logprob: -5.176061630249023
    8. ' s' → logprob: -5.426061630249023
    9. '0' → logprob: -5.551061630249023
    10. ' k' → logprob: -6.051061630249023

Token 977: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1022375077009201
    2. ' +' → logprob: -3.4772374629974365
    3. '=' → logprob: -3.9772374629974365
    4. '+' → logprob: -4.352237701416016
    5. ' +=' → logprob: -4.602237701416016
    6. '_' → logprob: -4.977237701416016
    7. ' ' → logprob: -5.352237701416016
    8. ')' → logprob: -6.102237701416016
    9. ' _' → logprob: -6.227237701416016
    10. ' stops' → logprob: -6.227237701416016

Token 978: ' >=' (ID: 5064)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028728103265166283
    2. '=' → logprob: -4.653728008270264
    3. '_' → logprob: -4.903728008270264
    4. ' ' → logprob: -5.653728008270264
    5. ')' → logprob: -6.278728008270264
    6. ',' → logprob: -6.903728008270264
    7. '+' → logprob: -7.278728008270264
    8. 's' → logprob: -7.403728008270264
    9. ' _' → logprob: -7.403728008270264
    10. ' +' → logprob: -7.778728008270264

Token 979: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049062713980674744
    2. '0' → logprob: -3.049062728881836
    3. ' ' → logprob: -7.674062728881836
    4. '2' → logprob: -12.299062728881836
    5. 'max' → logprob: -13.799062728881836
    6. '(' → logprob: -13.799062728881836
    7. 'M' → logprob: -14.049062728881836
    8. '(M' → logprob: -14.174062728881836
    9. 'x' → logprob: -14.611562728881836
    10. '   ' → logprob: -15.049062728881836

Token 980: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3492344319820404
    2. '0' → logprob: -1.2242344617843628
    3. '(M' → logprob: -8.099234580993652
    4. 'M' → logprob: -8.474234580993652
    5. 'max' → logprob: -9.474234580993652
    6. '(' → logprob: -9.599234580993652
    7. ' ' → logprob: -9.724234580993652
    8. 'K' → logprob: -11.349234580993652
    9. '(max' → logprob: -11.349234580993652
    10. ' (' → logprob: -11.974234580993652

Token 981: ' arr' (ID: 1724)
  Prédit: ' stops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.42797890305519104
    2. ' (' → logprob: -2.802978992462158
    3. ' ' → logprob: -2.927978992462158
    4. ')' → logprob: -3.427978992462158
    5. ',' → logprob: -3.552978992462158
    6. '<|end|>' → logprob: -3.552978992462158
    7. ' +' → logprob: -3.802978992462158
    8. '+' → logprob: -4.052978992462158
    9. ' )' → logprob: -4.552978992462158
    10. ' stopping' → logprob: -4.552978992462158

Token 982: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.12278380244970322
    2. 'êt' → logprob: -2.372783899307251
    3. 'r' → logprob: -3.997783899307251
    4. '_' → logprob: -5.872783660888672
    5. '^' → logprob: -7.372783660888672
    6. 'êtes' → logprob: -8.872783660888672
    7. '[' → logprob: -9.497783660888672
    8. 'ê' → logprob: -9.747783660888672
    9. '=' → logprob: -10.122783660888672
    10. 'ête' → logprob: -10.247783660888672

Token 983: ' sem' (ID: 2743)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -1.4335572719573975
    2. ' sem' → logprob: -1.6835572719573975
    3. ' supplémentaire' → logprob: -1.6835572719573975
    4. '_sem' → logprob: -1.9335572719573975
    5. ' de' → logprob: -3.0585572719573975
    6. 's' → logprob: -3.0585572719573975
    7. '_' → logprob: -3.1835572719573975
    8. 'sem' → logprob: -3.5585572719573975
    9. '_s' → logprob: -4.183557510375977
    10. '<|end|>' → logprob: -4.308557510375977

Token 984: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.005986862350255251
    2. 'express' → logprob: -6.13098669052124
    3. '_i' → logprob: -6.88098669052124
    4. 'i' → logprob: -7.00598669052124
    5. 'pexpr' → logprob: -8.755987167358398
    6. 'iex' → logprob: -8.880987167358398
    7. 'op' → logprob: -9.130987167358398
    8. '[i' → logprob: -9.380987167358398
    9. 'ieux' → logprob: -9.505987167358398
    10. 'issez' → logprob: -9.630987167358398

Token 985: ' au' (ID: 2791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 986: ' total' (ID: 3609)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.20578639209270477
    2. 'moins' → logprob: -1.7057863473892212
    3. 'total' → logprob: -6.580786228179932
    4. 'min' → logprob: -6.955786228179932
    5. 'plus' → logprob: -7.955786228179932
    6. 'pas' → logprob: -8.45578670501709
    7. 'mil' → logprob: -8.70578670501709
    8. ' minimum' → logprob: -8.95578670501709
    9. ' moins' → logprob: -9.33078670501709
    10. 'm' → logprob: -9.70578670501709

Token 987: ' pour' (ID: 1930)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18773235380649567
    2. '<|end|>' → logprob: -2.687732458114624
    3. ',' → logprob: -2.812732458114624
    4. ' dans' → logprob: -4.562732219696045
    5. ')' → logprob: -5.062732219696045
    6. ' ' → logprob: -5.437732219696045
    7. ' entre' → logprob: -5.687732219696045
    8. '(s' → logprob: -5.812732219696045
    9. '.' → logprob: -6.062732219696045
    10. '(' → logprob: -6.562732219696045

Token 988: ' ce' (ID: 2357)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9575274586677551
    2. 'cet' → logprob: -1.3325273990631104
    3. 'segment' → logprob: -2.7075273990631104
    4. 'ce' → logprob: -2.9575273990631104
    5. 'div' → logprob: -3.0825273990631104
    6. 'l' → logprob: -3.7075273990631104
    7. ' décou' → logprob: -3.8325273990631104
    8. 'le' → logprob: -3.8325273990631104
    9. ' couvrir' → logprob: -3.8325273990631104
    10. ' cet' → logprob: -4.3325276374816895

Token 989: ' segment' (ID: 14806)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.45607128739356995
    2. ' segment' → logprob: -2.206071376800537
    3. ' interval' → logprob: -2.331071376800537
    4. 'segment' → logprob: -2.581071376800537
    5. '_' → logprob: -2.831071376800537
    6. ' _' → logprob: -4.956071376800537
    7. '_interval' → logprob: -5.331071376800537
    8. 'i' → logprob: -5.956071376800537
    9. 'n' → logprob: -6.581071376800537
    10. 'inter' → logprob: -6.581071376800537

Token 990: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 991: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3370463252067566
    2. ',' → logprob: -2.4620463848114014
    3. ' )' → logprob: -2.7120463848114014
    4. ' (' → logprob: -3.0870463848114014
    5. '),' → logprob: -3.3370463848114014
    6. ' ,' → logprob: -3.8370463848114014
    7. ' ),' → logprob: -5.462046146392822
    8. '+' → logprob: -5.462046146392822
    9. ' entre' → logprob: -5.962046146392822
    10. ' ' → logprob: -6.087046146392822

Token 992: ' aux' (ID: 5850)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.309090495109558
    2. ' les' → logprob: -1.809090495109558
    3. ' x' → logprob: -1.934090495109558
    4. ' ils' → logprob: -1.934090495109558
    5. ' il' → logprob: -2.6840906143188477
    6. 'x' → logprob: -2.9340906143188477
    7. 'les' → logprob: -3.6840906143188477
    8. ' ces' → logprob: -3.9340906143188477
    9. 'il' → logprob: -4.059090614318848
    10. ' au' → logprob: -4.184090614318848

Token 993: ' extr' (ID: 15674)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.03530644252896309
    2. 'minimum' → logprob: -3.535306453704834
    3. 'least' → logprob: -5.910306453704834
    4. 'mo' → logprob: -6.660306453704834
    5. ' moins' → logprob: -7.285306453704834
    6. 'plus' → logprob: -8.035305976867676
    7. 'extr' → logprob: -9.535305976867676
    8. ' minimum' → logprob: -9.660305976867676
    9. 'x' → logprob: -10.285305976867676
    10. 'm' → logprob: -10.535305976867676

Token 994: 'é' (ID: 377)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3221086263656616
    2. 'êts' → logprob: -3.072108745574951
    3. 'érieur' → logprob: -3.197108745574951
    4. 'rès' → logprob: -3.447108745574951
    5. 'êmes' → logprob: -3.572108745574951
    6. 'ême' → logprob: -3.947108745574951
    7. 'é' → logprob: -4.072108745574951
    8. ' arrêt' → logprob: -4.447108745574951
    9. 'ié' → logprob: -4.572108745574951
    10. 'ré' → logprob: -4.947108745574951

Token 995: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.1339714080095291
    2. 'mits' → logprob: -3.0089714527130127
    3. 'mites' → logprob: -3.5089714527130127
    4. 'm' → logprob: -3.6339714527130127
    5. 'mé' → logprob: -5.133971214294434
    6. 'r' → logprob: -6.383971214294434
    7. 'ieurs' → logprob: -6.383971214294434
    8. 'ts' → logprob: -6.883971214294434
    9. 'mes' → logprob: -7.258971214294434
    10. 'ités' → logprob: -7.383971214294434

Token 996: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3282267451286316
    2. 'és' → logprob: -1.3282268047332764
    3. 'ié' → logprob: -4.328226566314697
    4. 'es' → logprob: -7.453226566314697
    5. 'e' → logprob: -7.953226566314697
    6. 'ies' → logprob: -8.328227043151855
    7. 'i' → logprob: -8.578227043151855
    8. 's' → logprob: -9.828227043151855
    9. 'iers' → logprob: -10.078227043151855
    10. '```' → logprob: -10.203227043151855

Token 997: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6854848861694336
    2. ')' → logprob: -2.0604848861694336
    3. ' _' → logprob: -2.6854848861694336
    4. ' ,' → logprob: -2.8104848861694336
    5. '_' → logprob: -3.0604848861694336
    6. ' au' → logprob: -3.6854848861694336
    7. ' )' → logprob: -3.9354848861694336
    8. ' des' → logprob: -4.310484886169434
    9. ' =' → logprob: -4.435484886169434
    10. ' de' → logprob: -4.685484886169434

Token 998: ' a' (ID: 261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22262300550937653
    2. ' _' → logprob: -1.9726229906082153
    3. 's' → logprob: -4.097622871398926
    4. '_i' → logprob: -4.597622871398926
    5. ' s' → logprob: -4.847622871398926
    6. '=' → logprob: -5.472622871398926
    7. '_s' → logprob: -5.597622871398926
    8. ' =' → logprob: -6.097622871398926
    9. '+' → logprob: -6.347622871398926
    10. ')' → logprob: -6.347622871398926

Token 999: ' déjà' (ID: 21229)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.2074222564697266
    2. 'les' → logprob: -1.9574222564697266
    3. ' S' → logprob: -1.9574222564697266
    4. '1' → logprob: -2.2074222564697266
    5. ' les' → logprob: -2.3324222564697266
    6. ' des' → logprob: -3.3324222564697266
    7. 'l' → logprob: -3.4574222564697266
    8. ' ' → logprob: -3.7074222564697266
    9. ' au' → logprob: -3.7074222564697266
    10. '2' → logprob: -3.8324222564697266

Token 1000: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6778540015220642
    2. 'S' → logprob: -2.052854061126709
    3. 'arr' → logprob: -2.802854061126709
    4. '1' → logprob: -2.802854061126709
    5. 'des' → logprob: -3.302854061126709
    6. 'dé' → logprob: -3.302854061126709
    7. ' S' → logprob: -3.427854061126709
    8. 'au' → logprob: -3.677854061126709
    9. 's' → logprob: -4.427854061126709
    10. ' les' → logprob: -4.552854061126709

Token 1001: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.27411115169525146
    2. 'st' → logprob: -2.149111270904541
    3. ' stops' → logprob: -3.149111270904541
    4. 'S' → logprob: -3.899111270904541
    5. 'express' → logprob: -4.149111270904541
    6. ' arr' → logprob: -4.274111270904541
    7. '2' → logprob: -5.149111270904541
    8. 'sem' → logprob: -5.274111270904541
    9. 'ar' → logprob: -5.399111270904541
    10. 'stations' → logprob: -5.649111270904541

Token 1002: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.0067287529818713665
    2. 'êt' → logprob: -5.256728649139404
    3. 'rets' → logprob: -7.506728649139404
    4. 'r' → logprob: -7.631728649139404
    5. 'êtes' → logprob: -8.381729125976562
    6. '^' → logprob: -9.006729125976562
    7. ' stops' → logprob: -10.756729125976562
    8. 'rests' → logprob: -11.256729125976562
    9. 'ôts' → logprob: -11.256729125976562
    10. 'ê' → logprob: -11.506729125976562

Token 1003: ' express' (ID: 6101)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.5742266178131104
    2. '_sem' → logprob: -1.8242266178131104
    3. ' sem' → logprob: -1.8242266178131104
    4. '_' → logprob: -2.5742266178131104
    5. '_s' → logprob: -3.9492266178131104
    6. ' _' → logprob: -5.574226379394531
    7. 's' → logprob: -5.824226379394531
    8. '_se' → logprob: -6.199226379394531
    9. 'semi' → logprob: -6.824226379394531
    10. 'semicolon' → logprob: -6.824226379394531

Token 1004: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3831096589565277
    2. ')' → logprob: -2.0081095695495605
    3. ' stops' → logprob: -2.5081095695495605
    4. '_stop' → logprob: -4.0081095695495605
    5. 's' → logprob: -4.2581095695495605
    6. '_i' → logprob: -4.2581095695495605
    7. ' _' → logprob: -4.5081095695495605
    8. '),' → logprob: -4.7581095695495605
    9. ')_' → logprob: -4.8831095695495605
    10. ',' → logprob: -4.8831095695495605

Token 1005: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6065359711647034
    2. '<|end|>' → logprob: -0.9815359711647034
    3. ' )' → logprob: -3.8565359115600586
    4. ',' → logprob: -4.106535911560059
    5. '<|end|>' → logprob: -5.231535911560059
    6. ' donc' → logprob: -5.356535911560059
    7. ' et' → logprob: -5.856535911560059
    8. '),' → logprob: -6.106535911560059
    9. ' ' → logprob: -6.106535911560059
    10. ' 
' → logprob: -6.106535911560059

Token 1006: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.29113852977752686
    2. 's' → logprob: -2.1661386489868164
    3. ' are' → logprob: -2.7911386489868164
    4. ')' → logprob: -3.4161386489868164
    5. '<|end|>' → logprob: -5.041138648986816
    6. ' permettent' → logprob: -5.416138648986816
    7. ' vont' → logprob: -5.416138648986816
    8. ' doivent' → logprob: -5.541138648986816
    9. ' seront' → logprob: -5.791138648986816
    10. '#' → logprob: -5.916138648986816

Token 1007: ' aussi' (ID: 9894)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8530114889144897
    2. 'in' → logprob: -2.2280116081237793
    3. 'ob' → logprob: -2.2280116081237793
    4. 'incl' → logprob: -2.7280116081237793
    5. ' inclus' → logprob: -2.9780116081237793
    6. 'arr' → logprob: -3.4780116081237793
    7. 'égal' → logprob: -3.4780116081237793
    8. 'a' → logprob: -3.4780116081237793
    9. 'dé' → logprob: -3.8530116081237793
    10. 'les' → logprob: -4.103011608123779

Token 1008: ' stops' (ID: 29924)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.8634166121482849
    2. 'arr' → logprob: -1.6134166717529297
    3. ' des' → logprob: -1.7384166717529297
    4. ' stops' → logprob: -2.4884166717529297
    5. ' sem' → logprob: -3.4884166717529297
    6. 'des' → logprob: -3.6134166717529297
    7. 's' → logprob: -4.36341667175293
    8. 'égal' → logprob: -4.61341667175293
    9. ' arr' → logprob: -5.48841667175293
    10. 'consider' → logprob: -5.73841667175293

Token 1009: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.392760157585144
    2. ' sem' → logprob: -1.392760157585144
    3. '_sem' → logprob: -1.517760157585144
    4. 'sem' → logprob: -2.6427602767944336
    5. ')' → logprob: -2.7677602767944336
    6. '_s' → logprob: -3.3927602767944336
    7. 's' → logprob: -3.7677602767944336
    8. ',' → logprob: -4.017760276794434
    9. ' supplémentaires' → logprob: -4.267760276794434
    10. ' de' → logprob: -4.892760276794434

Token 1010: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.032431118190288544
    2. 'i' → logprob: -4.782431125640869
    3. 'express' → logprob: -4.782431125640869
    4. '_i' → logprob: -4.907431125640869
    5. '[i' → logprob: -6.907431125640869
    6. 'iex' → logprob: -7.032431125640869
    7. '```' → logprob: -7.407431125640869
    8. 'ip' → logprob: -7.907431125640869
    9. 'pexpr' → logprob: -7.907431125640869
    10. '\' → logprob: -8.282430648803711

Token 1011: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07981288433074951
    2. ',' → logprob: -3.704813003540039
    3. '),' → logprob: -3.954813003540039
    4. '_' → logprob: -4.579813003540039
    5. 's' → logprob: -5.704813003540039
    6. ' )' → logprob: -5.704813003540039
    7. '_i' → logprob: -5.829813003540039
    8. '```' → logprob: -6.079813003540039
    9. '_)' → logprob: -6.079813003540039
    10. ')_' → logprob: -7.079813003540039

Token 1012: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2784924507141113
    2. '#' → logprob: -1.5284924507141113
    3. ',' → logprob: -2.1534924507141113
    4. ')' → logprob: -2.9034924507141113
    5. ',
' → logprob: -2.9034924507141113
    6. 'x' → logprob: -3.0284924507141113
    7. ']' → logprob: -3.1534924507141113
    8. '+' → logprob: -3.1534924507141113
    9. '.' → logprob: -3.4034924507141113
    10. '=' → logprob: -4.028492450714111

Token 1013: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09171483665704727
    2. 'x' → logprob: -3.216714859008789
    3. 'for' → logprob: -4.091714859008789
    4. ',' → logprob: -5.341714859008789
    5. 'def' → logprob: -5.341714859008789
    6. '#
' → logprob: -5.841714859008789
    7. '_' → logprob: -6.216714859008789
    8. ',
' → logprob: -6.216714859008789
    9. '.' → logprob: -6.341714859008789
    10. 'i' → logprob: -6.716714859008789

Token 1014: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03758268430829048
    2. '#' → logprob: -3.7875826358795166
    3. 'def' → logprob: -5.412582874298096
    4. 'x' → logprob: -6.162582874298096
    5. 'max' → logprob: -6.162582874298096
    6. 'DP' → logprob: -7.037582874298096
    7. 'for' → logprob: -7.162582874298096
    8. 'segments' → logprob: -7.537582874298096
    9. 'rest' → logprob: -7.787582874298096
    10. 'possible' → logprob: -8.037582397460938

Token 1015: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3542064428329468
    2. '#' → logprob: -1.8542064428329468
    3. 'total' → logprob: -2.6042065620422363
    4. 'x' → logprob: -2.7292065620422363
    5. 'dp' → logprob: -2.8542065620422363
    6. 'remaining' → logprob: -2.8542065620422363
    7. 'max' → logprob: -3.1042065620422363
    8. 'def' → logprob: -3.1042065620422363
    9. 'i' → logprob: -3.2292065620422363
    10. 's' → logprob: -3.2292065620422363

Token 1016: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09795939177274704
    2. ' of' → logprob: -3.722959280014038
    3. '=' → logprob: -3.972959280014038
    4. 'of' → logprob: -4.972959518432617
    5. '+' → logprob: -5.222959518432617
    6. ' =' → logprob: -5.347959518432617
    7. ' des' → logprob: -5.597959518432617
    8. ' _' → logprob: -5.847959518432617
    9. ' +=' → logprob: -6.097959518432617
    10. 'x' → logprob: -6.097959518432617

Token 1017: ' arr' (ID: 1724)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1883251965045929
    2. 'arr' → logprob: -2.5633251667022705
    3. ' x' → logprob: -3.1883251667022705
    4. 'st' → logprob: -3.8133251667022705
    5. ' stops' → logprob: -4.43832540512085
    6. 'sem' → logprob: -5.06332540512085
    7. 's' → logprob: -5.56332540512085
    8. '_x' → logprob: -6.18832540512085
    9. '_' → logprob: -6.31332540512085
    10. ')' → logprob: -7.18832540512085

Token 1018: 'êts' (ID: 56582)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4342000484466553
    2. 'êts' → logprob: -1.6842000484466553
    3. ']' → logprob: -1.9342000484466553
    4. 'i' → logprob: -2.6842000484466553
    5. 'ots' → logprob: -3.1842000484466553
    6. '_' → logprob: -3.3092000484466553
    7. 's' → logprob: -3.4342000484466553
    8. '_i' → logprob: -3.4342000484466553
    9. ' stops' → logprob: -3.6842000484466553
    10. 'g' → logprob: -3.8092000484466553

Token 1019: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1056242510676384
    2. '_s' → logprob: -3.855624198913574
    3. ' _' → logprob: -3.980624198913574
    4. '_sem' → logprob: -4.105624198913574
    5. ')' → logprob: -4.480624198913574
    6. ' sem' → logprob: -5.105624198913574
    7. 's' → logprob: -5.230624198913574
    8. '[' → logprob: -5.480624198913574
    9. ']' → logprob: -6.480624198913574
    10. ',' → logprob: -6.480624198913574

Token 1020: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.2921052575111389
    2. 'express' → logprob: -2.792105197906494
    3. 'op' → logprob: -3.542105197906494
    4. '```' → logprob: -3.917105197906494
    5. 'i' → logprob: -4.042105197906494
    6. '[i' → logprob: -4.417105197906494
    7. '`' → logprob: -4.667105197906494
    8. '_i' → logprob: -4.917105197906494
    9. ')' → logprob: -5.167105197906494
    10. 's' → logprob: -5.292105197906494

Token 1021: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7866566181182861
    2. '[' → logprob: -1.9116566181182861
    3. ')' → logprob: -2.036656618118286
    4. '<|end|>' → logprob: -3.161656618118286
    5. ',' → logprob: -3.286656618118286
    6. '_in' → logprob: -3.536656618118286
    7. '[i' → logprob: -4.036656379699707
    8. ' _' → logprob: -4.161656379699707
    9. '_rest' → logprob: -4.161656379699707
    10. 's' → logprob: -4.286656379699707

Token 1022: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.14424505829811096
    2. 'K' → logprob: -2.019245147705078
    3. ' ' → logprob: -7.019245147705078
    4. ' x' → logprob: -8.019245147705078
    5. ' =' → logprob: -9.394245147705078
    6. ' ' → logprob: -9.519245147705078
    7. 'x' → logprob: -9.769245147705078
    8. '=' → logprob: -9.894245147705078
    9. '_' → logprob: -11.394245147705078
    10. ' (' → logprob: -11.644245147705078

Token 1023: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.41838935017585754
    2. ' -' → logprob: -1.7933893203735352
    3. '_' → logprob: -2.168389320373535
    4. ',' → logprob: -4.168389320373535
    5. '[' → logprob: -4.793389320373535
    6. ')' → logprob: -4.918389320373535
    7. '=' → logprob: -5.168389320373535
    8. '[i' → logprob: -5.543389320373535
    9. '#' → logprob: -5.668389320373535
    10. '.' → logprob: -5.668389320373535

Token 1024: ' donc' (ID: 14206)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.3734865188598633
    2. '#' → logprob: -1.4984865188598633
    3. '-' → logprob: -1.9984865188598633
    4. 'x' → logprob: -2.4984865188598633
    5. ')' → logprob: -2.6234865188598633
    6. ',' → logprob: -3.2484865188598633
    7. 'i' → logprob: -3.3734865188598633
    8. ' =' → logprob: -3.8734865188598633
    9. '
' → logprob: -3.9984865188598633
    10. ' #' → logprob: -3.9984865188598633

Token 1025: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28204813599586487
    2. ' x' → logprob: -2.032048225402832
    3. 'sum' → logprob: -2.907048225402832
    4. '#' → logprob: -4.532048225402832
    5. '0' → logprob: -4.782048225402832
    6. ' on' → logprob: -5.032048225402832
    7. ' M' → logprob: -5.407048225402832
    8. 'i' → logprob: -5.907048225402832
    9. ' sum' → logprob: -5.907048225402832
    10. 'M' → logprob: -6.157048225402832

Token 1026: ' somme' (ID: 64484)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.9325405359268188
    2. 'total' → logprob: -1.0575405359268188
    3. 'remaining' → logprob: -2.1825404167175293
    4. ' remaining' → logprob: -2.8075404167175293
    5. ' rest' → logprob: -3.8075404167175293
    6. 'x' → logprob: -4.682540416717529
    7. ' next' → logprob: -4.807540416717529
    8. 'rest' → logprob: -4.807540416717529
    9. 'sum' → logprob: -5.057540416717529
    10. ' x' → logprob: -5.307540416717529

Token 1027: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6239449977874756
    2. ' +=' → logprob: -1.3739449977874756
    3. ' des' → logprob: -1.9989449977874756
    4. ' ' → logprob: -4.123945236206055
    5. '+=' → logprob: -4.498945236206055
    6. ' =' → logprob: -4.623945236206055
    7. '=' → logprob: -4.873945236206055
    8. '_des' → logprob: -5.498945236206055
    9. ' of' → logprob: -5.623945236206055
    10. ' _' → logprob: -5.623945236206055

Token 1028: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03843950852751732
    2. ' x' → logprob: -3.2884395122528076
    3. '_x' → logprob: -8.413439750671387
    4. 'xi' → logprob: -9.038439750671387
    5. '_' → logprob: -11.288439750671387
    6. ' ' → logprob: -11.538439750671387
    7. ' _' → logprob: -11.663439750671387
    8. '```' → logprob: -12.163439750671387
    9. ' xi' → logprob: -12.288439750671387
    10. '`' → logprob: -12.663439750671387

Token 1029: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2821100950241089
    2. '_i' → logprob: -1.4071100950241089
    3. 's' → logprob: -7.657110214233398
    4. ' _' → logprob: -8.282110214233398
    5. '_s' → logprob: -9.657110214233398
    6. '[i' → logprob: -10.032110214233398
    7. '_x' → logprob: -10.907110214233398
    8. '_
' → logprob: -11.157110214233398
    9. 'i' → logprob: -11.407110214233398
    10. ''_' → logprob: -11.657110214233398

Token 1030: ' sur' (ID: 1512)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3105592727661133
    2. '_i' → logprob: -2.3105592727661133
    3. '_' → logprob: -3.3105592727661133
    4. '<|end|>' → logprob: -3.4355592727661133
    5. '+=' → logprob: -3.4355592727661133
    6. ' >=' → logprob: -4.435559272766113
    7. '[i' → logprob: -4.560559272766113
    8. ' =' → logprob: -5.060559272766113
    9. ' +' → logprob: -5.060559272766113
    10. '+' → logprob: -5.310559272766113

Token 1031: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08009307831525803
    2. ' i' → logprob: -2.5800931453704834
    3. 'range' → logprob: -7.455092906951904
    4. '_i' → logprob: -8.205093383789062
    5. ' range' → logprob: -8.205093383789062
    6. '0' → logprob: -10.205093383789062
    7. '_' → logprob: -11.330093383789062
    8. '   ' → logprob: -12.080093383789062
    9. ' ' → logprob: -12.580093383789062
    10. '```' → logprob: -12.580093383789062

Token 1032: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7466161847114563
    2. '+' → logprob: -0.9966161847114563
    3. ' +=' → logprob: -2.2466161251068115
    4. '_' → logprob: -4.746616363525391
    5. 's' → logprob: -5.121616363525391
    6. '_i' → logprob: -5.371616363525391
    7. '+=' → logprob: -5.496616363525391
    8. '[i' → logprob: -5.621616363525391
    9. ']+' → logprob: -5.871616363525391
    10. ')+' → logprob: -6.121616363525391

Token 1033: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04516665264964104
    2. ' ' → logprob: -3.7951667308807373
    3. ' M' → logprob: -4.545166492462158
    4. 'M' → logprob: -5.545166492462158
    5. ' i' → logprob: -6.170166492462158
    6. 'range' → logprob: -6.420166492462158
    7. 'i' → logprob: -6.545166492462158
    8. ' range' → logprob: -6.670166492462158
    9. ' len' → logprob: -8.295166969299316
    10. '=' → logprob: -9.045166969299316

Token 1034: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22041580080986023
    2. 'M' → logprob: -1.9704158306121826
    3. ' M' → logprob: -3.2204158306121826
    4. 'i' → logprob: -4.8454155921936035
    5. ' ' → logprob: -5.0954155921936035
    6. 'range' → logprob: -6.4704155921936035
    7. ' i' → logprob: -6.5954155921936035
    8. 'len' → logprob: -7.4704155921936035
    9. ' range' → logprob: -8.720416069030762
    10. '(M' → logprob: -8.845416069030762

Token 1035: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3775696754455566
    2. '...' → logprob: -1.3775696754455566
    3. '..' → logprob: -1.7525696754455566
    4. '=' → logprob: -1.8775696754455566
    5. '+' → logprob: -3.2525696754455566
    6. ' =' → logprob: -3.5025696754455566
    7. ' +' → logprob: -3.5025696754455566
    8. ' <=' → logprob: -4.127569675445557
    9. '<=' → logprob: -4.252569675445557
    10. ' ...' → logprob: -4.752569675445557

Token 1036: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0017455116612836719
    2. '(M' → logprob: -6.626745700836182
    3. ' M' → logprob: -7.876745700836182
    4. ' (' → logprob: -10.876745223999023
    5. 'len' → logprob: -11.501745223999023
    6. '(' → logprob: -12.626745223999023
    7. '
' → logprob: -13.001745223999023
    8. '(len' → logprob: -13.626745223999023
    9. '```' → logprob: -13.751745223999023
    10. '`' → logprob: -14.251745223999023

Token 1037: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005952260922640562
    2. ' -' → logprob: -5.13095235824585
    3. '−' → logprob: -12.505951881408691
    4. '–' → logprob: -12.630951881408691
    5. '```' → logprob: -13.005951881408691
    6. '<|end|>' → logprob: -13.255951881408691
    7. '+' → logprob: -13.380951881408691
    8. '[' → logprob: -13.505951881408691
    9. '[i' → logprob: -13.630951881408691
    10. ')' → logprob: -13.880951881408691

Token 1038: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011433162726461887
    2. '-' → logprob: -4.511433124542236
    3. '2' → logprob: -8.261433601379395
    4. '```' → logprob: -9.136433601379395
    5. ' -' → logprob: -12.261433601379395
    6. '`' → logprob: -12.386433601379395
    7. '#' → logprob: -13.386433601379395
    8. '``' → logprob: -13.886433601379395
    9. ' ' → logprob: -13.886433601379395
    10. 'minus' → logprob: -14.136433601379395

Token 1039: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0034018754959106
    2. '+' → logprob: -1.2534018754959106
    3. '=' → logprob: -2.128401756286621
    4. ')' → logprob: -2.628401756286621
    5. ' +' → logprob: -2.878401756286621
    6. ' plus' → logprob: -3.378401756286621
    7. ' +=' → logprob: -4.253401756286621
    8. '```' → logprob: -5.253401756286621
    9. ' equals' → logprob: -5.253401756286621
    10. '+=' → logprob: -5.253401756286621

Token 1040: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.17995475232601166
    2. 'K' → logprob: -1.8049547672271729
    3. ' =' → logprob: -9.179954528808594
    4. '=' → logprob: -9.554954528808594
    5. ' ' → logprob: -11.804954528808594
    6. '`' → logprob: -12.054954528808594
    7. ' exactly' → logprob: -12.054954528808594
    8. ' \(' → logprob: -12.804954528808594
    9. '```' → logprob: -12.804954528808594
    10. ' `' → logprob: -13.554954528808594

Token 1041: '.
' (ID: 558)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33078399300575256
    2. ' -' → logprob: -1.3307839632034302
    3. '<|end|>' → logprob: -4.830783843994141
    4. '_i' → logprob: -6.205783843994141
    5. '[' → logprob: -6.705783843994141
    6. '[i' → logprob: -6.955783843994141
    7. '<|end|>' → logprob: -7.080783843994141
    8. ')' → logprob: -7.080783843994141
    9. '+' → logprob: -7.705783843994141
    10. '#' → logprob: -7.830783843994141

Token 1042: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0576990842819214
    2. '[' → logprob: -1.5576990842819214
    3. ':' → logprob: -2.307699203491211
    4. ']' → logprob: -2.557699203491211
    5. ',' → logprob: -2.932699203491211
    6. '[i' → logprob: -2.932699203491211
    7. '=' → logprob: -3.057699203491211
    8. '#' → logprob: -3.932699203491211
    9. '_
' → logprob: -4.057699203491211
    10. '.' → logprob: -4.557699203491211

Token 1043: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9208160638809204
    2. 'x' → logprob: -1.9208160638809204
    3. '_' → logprob: -2.045815944671631
    4. ':' → logprob: -2.670815944671631
    5. ',' → logprob: -2.920815944671631
    6. 'def' → logprob: -3.670815944671631
    7. ']' → logprob: -3.670815944671631
    8. ',
' → logprob: -3.795815944671631
    9. ')' → logprob: -3.920815944671631
    10. 'dp' → logprob: -4.295815944671631

Token 1044: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.037123553454875946
    2. '#' → logprob: -4.162123680114746
    3. 'def' → logprob: -4.912123680114746
    4. 'x' → logprob: -5.287123680114746
    5. 'DP' → logprob: -6.287123680114746
    6. ':' → logprob: -6.787123680114746
    7. ';' → logprob: -7.162123680114746
    8. ',' → logprob: -7.412123680114746
    9. '.' → logprob: -7.412123680114746
    10. ']' → logprob: -7.537123680114746

Token 1045: ' temps' (ID: 11160)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3010771572589874
    2. '[' → logprob: -1.926077127456665
    3. ')' → logprob: -3.801077127456665
    4. '=' → logprob: -4.051077365875244
    5. ',' → logprob: -4.301077365875244
    6. 'x' → logprob: -4.551077365875244
    7. 'i' → logprob: -4.551077365875244
    8. 's' → logprob: -4.801077365875244
    9. '#' → logprob: -5.176077365875244
    10. ' ' → logprob: -5.301077365875244

Token 1046: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8821473121643066
    2. '=' → logprob: -1.2571473121643066
    3. '[' → logprob: -1.2571473121643066
    4. '+' → logprob: -5.132147312164307
    5. ':' → logprob: -6.632147312164307
    6. '#' → logprob: -6.882147312164307
    7. ',' → logprob: -6.882147312164307
    8. ')' → logprob: -7.007147312164307
    9. '[i' → logprob: -7.007147312164307
    10. '[
' → logprob: -7.132147312164307

Token 1047: ' travers' (ID: 26957)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43330031633377075
    2. 'calcul' → logprob: -2.308300256729126
    3. ' i' → logprob: -3.058300256729126
    4. '_' → logprob: -3.058300256729126
    5. 'segment' → logprob: -3.183300256729126
    6. ' parcour' → logprob: -4.058300495147705
    7. 'aller' → logprob: -4.308300495147705
    8. 're' → logprob: -4.308300495147705
    9. ' aller' → logprob: -4.433300495147705
    10. '_i' → logprob: -4.433300495147705

Token 1048: 'er' (ID: 259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4554445445537567
    2. 'er' → logprob: -1.080444574356079
    3. '_' → logprob: -4.3304443359375
    4. 'a' → logprob: -6.2054443359375
    5. '=' → logprob: -6.4554443359375
    6. '-' → logprob: -6.4554443359375
    7. ',' → logprob: -6.4554443359375
    8. ')' → logprob: -7.0804443359375
    9. '#' → logprob: -7.0804443359375
    10. 'i' → logprob: -7.3304443359375

Token 1049: ' ce' (ID: 2357)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7938498258590698
    2. ' l' → logprob: -1.7938498258590698
    3. '_' → logprob: -2.2938499450683594
    4. 'le' → logprob: -2.9188499450683594
    5. 'un' → logprob: -2.9188499450683594
    6. ' ce' → logprob: -3.2938499450683594
    7. ' un' → logprob: -3.4188499450683594
    8. ' le' → logprob: -3.6688499450683594
    9. ' chaque' → logprob: -3.9188499450683594
    10. 'ce' → logprob: -4.668849945068359

Token 1050: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.4268694818019867
    2. '_' → logprob: -1.301869511604309
    3. 'segment' → logprob: -3.3018693923950195
    4. ' ' → logprob: -4.3018693923950195
    5. '_segment' → logprob: -4.8018693923950195
    6. ' _' → logprob: -5.0518693923950195
    7. '-' → logprob: -6.5518693923950195
    8. '[' → logprob: -6.6768693923950195
    9. ' ]' → logprob: -6.8018693923950195
    10. ']' → logprob: -7.3018693923950195

Token 1051: ' entre' (ID: 3853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33299344778060913
    2. ' =' → logprob: -2.957993507385254
    3. '=' → logprob: -3.082993507385254
    4. ' entre' → logprob: -3.332993507385254
    5. ')' → logprob: -3.457993507385254
    6. '_i' → logprob: -3.957993507385254
    7. '#' → logprob: -4.082993507385254
    8. '[i' → logprob: -4.207993507385254
    9. '[' → logprob: -4.457993507385254
    10. ' between' → logprob: -4.957993507385254

Token 1052: ' deux' (ID: 10301)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0030449775513261557
    2. 'les' → logprob: -5.878045082092285
    3. 'i' → logprob: -9.628045082092285
    4. ' S' → logprob: -9.878045082092285
    5. 'stations' → logprob: -10.378045082092285
    6. 'arr' → logprob: -11.003045082092285
    7. 'express' → logprob: -11.003045082092285
    8. 'l' → logprob: -11.503045082092285
    9. ' les' → logprob: -11.878045082092285
    10. '```' → logprob: -12.003045082092285

Token 1053: ' arr' (ID: 1724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15408354997634888
    2. 's' → logprob: -2.654083490371704
    3. 'S' → logprob: -3.279083490371704
    4. 'i' → logprob: -4.654083728790283
    5. '[i' → logprob: -4.904083728790283
    6. '_i' → logprob: -6.029083728790283
    7. ']' → logprob: -6.154083728790283
    8. '_s' → logprob: -6.529083728790283
    9. '[' → logprob: -6.529083728790283
    10. ' S' → logprob: -6.654083728790283

Token 1054: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.18904905021190643
    2. 'êt' → logprob: -2.439049005508423
    3. 'r' → logprob: -2.939049005508423
    4. '^' → logprob: -4.939049243927002
    5. 'rets' → logprob: -5.689049243927002
    6. '[
' → logprob: -5.814049243927002
    7. 't' → logprob: -5.939049243927002
    8. 'ê' → logprob: -5.939049243927002
    9. '[' → logprob: -6.064049243927002
    10. ']' → logprob: -6.064049243927002

Token 1055: ' sem' (ID: 2743)
  Prédit: ' sem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sem' → logprob: -0.20976407825946808
    2. '_' → logprob: -2.209764003753662
    3. '_sem' → logprob: -3.584764003753662
    4. 'sem' → logprob: -4.084764003753662
    5. ' _' → logprob: -4.209764003753662
    6. 's' → logprob: -4.834764003753662
    7. '_s' → logprob: -5.209764003753662
    8. 'semicolon' → logprob: -6.584764003753662
    9. ' express' → logprob: -6.959764003753662
    10. 'express' → logprob: -6.959764003753662

Token 1056: 'iexpress' (ID: 190732)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4118584394454956
    2. '#' → logprob: -2.661858558654785
    3. 'express' → logprob: -2.661858558654785
    4. 'op' → logprob: -2.661858558654785
    5. '_' → logprob: -3.036858558654785
    6. 's' → logprob: -3.161858558654785
    7. 'ops' → logprob: -3.286858558654785
    8. '`' → logprob: -3.411858558654785
    9. '_op' → logprob: -3.411858558654785
    10. '_i' → logprob: -3.536858558654785

Token 1057: ' cons' (ID: 1473)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2648785710334778
    2. 's' → logprob: -2.639878511428833
    3. ' s' → logprob: -3.764878511428833
    4. ' =' → logprob: -3.764878511428833
    5. 'i' → logprob: -3.889878511428833
    6. '_' → logprob: -4.139878749847412
    7. 'est' → logprob: -4.264878749847412
    8. '=' → logprob: -4.764878749847412
    9. '[i' → logprob: -4.764878749847412
    10. ',' → logprob: -4.889878749847412

Token 1058: 'écut' (ID: 96392)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13784226775169373
    2. '=' → logprob: -3.6378421783447266
    3. '_' → logprob: -4.512842178344727
    4. 'egment' → logprob: -4.637842178344727
    5. 's' → logprob: -4.762842178344727
    6. 'train' → logprob: -4.762842178344727
    7. '#' → logprob: -4.762842178344727
    8. 'truct' → logprob: -4.887842178344727
    9. 'ists' → logprob: -5.012842178344727
    10. '```' → logprob: -5.512842178344727

Token 1059: 'ifs' (ID: 14119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.649535059928894
    2. 'quent' → logprob: -2.3995351791381836
    3. ' est' → logprob: -2.8995351791381836
    4. 'écut' → logprob: -2.8995351791381836
    5. 's' → logprob: -3.5245351791381836
    6. 'e' → logprob: -3.8995351791381836
    7. '#' → logprob: -3.8995351791381836
    8. '=' → logprob: -4.149535179138184
    9. 'é' → logprob: -4.149535179138184
    10. 'ecut' → logprob: -4.649535179138184

Token 1060: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.06682127714157104
    2. '=' → logprob: -3.566821336746216
    3. ' =' → logprob: -4.316821098327637
    4. 'est' → logprob: -5.191821098327637
    5. ' (' → logprob: -5.441821098327637
    6. ',' → logprob: -5.941821098327637
    7. ' is' → logprob: -6.191821098327637
    8. ')' → logprob: -6.316821098327637
    9. '#' → logprob: -7.316821098327637
    10. '_' → logprob: -7.691821098327637

Token 1061: ' :' (ID: 712)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4172171354293823
    2. 'C' → logprob: -2.667217254638672
    3. ' d' → logprob: -2.667217254638672
    4. ' C' → logprob: -2.792217254638672
    5. '(S' → logprob: -2.917217254638672
    6. 'd' → logprob: -3.542217254638672
    7. ' S' → logprob: -3.542217254638672
    8. ' ' → logprob: -4.417217254638672
    9. '(' → logprob: -5.417217254638672
    10. 'S' → logprob: -5.667217254638672

Token 1062: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.49778586626052856
    2. '(S' → logprob: -1.7477858066558838
    3. 'C' → logprob: -2.372785806655884
    4. 'd' → logprob: -3.247785806655884
    5. ' d' → logprob: -3.872785806655884
    6. ' C' → logprob: -3.997785806655884
    7. '(' → logprob: -4.372786045074463
    8. '((' → logprob: -5.372786045074463
    9. '(C' → logprob: -5.372786045074463
    10. ' ((' → logprob: -5.747786045074463

Token 1063: 'segment' (ID: 45362)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1617519855499268
    2. 'd' → logprob: -1.1617519855499268
    3. '(S' → logprob: -1.2867519855499268
    4. '1' → logprob: -3.2867519855499268
    5. ' (' → logprob: -3.5367519855499268
    6. 'C' → logprob: -4.286751747131348
    7. '(' → logprob: -5.661751747131348
    8. '(C' → logprob: -6.036751747131348
    9. '(
' → logprob: -6.411751747131348
    10. ' S' → logprob: -6.411751747131348

Token 1064: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.6456480026245117
    2. '_' → logprob: -0.7706480026245117
    3. '_distance' → logprob: -4.520648002624512
    4. '_lengths' → logprob: -7.895648002624512
    5. '_size' → logprob: -8.145648002624512
    6. '_dist' → logprob: -8.270648002624512
    7. ' _' → logprob: -8.395648002624512
    8. 's' → logprob: -8.770648002624512
    9. ')_' → logprob: -8.895648002624512
    10. '_len' → logprob: -9.020648002624512

Token 1065: '_part' (ID: 24053)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.44060608744621277
    2. ')' → logprob: -2.190606117248535
    3. '//' → logprob: -2.690606117248535
    4. ' +' → logprob: -3.190606117248535
    5. '+' → logprob: -3.440606117248535
    6. ' ' → logprob: -3.565606117248535
    7. ' -' → logprob: -4.065606117248535
    8. '_' → logprob: -4.440606117248535
    9. '```' → logprob: -4.440606117248535
    10. '-' → logprob: -5.065606117248535

Token 1066: ')' (ID: 8)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6447682976722717
    2. 's' → logprob: -1.769768238067627
    3. '=' → logprob: -2.269768238067627
    4. ')' → logprob: -2.644768238067627
    5. '```' → logprob: -3.769768238067627
    6. 'e' → logprob: -4.019768238067627
    7. 'ation' → logprob: -4.394768238067627
    8. ' =' → logprob: -4.769768238067627
    9. 'ion' → logprob: -4.769768238067627
    10. '[' → logprob: -5.019768238067627

Token 1067: ' *' (ID: 425)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.7802703976631165
    2. ' /' → logprob: -1.5302703380584717
    3. '//' → logprob: -1.7802703380584717
    4. '/' → logprob: -3.1552703380584717
    5. '_' → logprob: -3.1552703380584717
    6. 's' → logprob: -3.2802703380584717
    7. '#' → logprob: -4.780270576477051
    8. '=' → logprob: -5.030270576477051
    9. ' *' → logprob: -5.280270576477051
    10. '*' → logprob: -5.655270576477051

Token 1068: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01954473927617073
    2. ' C' → logprob: -4.14454460144043
    3. ''' → logprob: -6.89454460144043
    4. ' (' → logprob: -7.26954460144043
    5. '`' → logprob: -7.64454460144043
    6. '"' → logprob: -8.64454460144043
    7. '```' → logprob: -8.89454460144043
    8. '(' → logprob: -9.01954460144043
    9. '(C' → logprob: -9.14454460144043
    10. ''C' → logprob: -9.39454460144043

Token 1069: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6989634037017822
    2. '+' → logprob: -1.9489634037017822
    3. ' +' → logprob: -2.0739634037017822
    4. ',' → logprob: -3.4489634037017822
    5. '.' → logprob: -3.6989634037017822
    6. '#' → logprob: -3.8239634037017822
    7. '_' → logprob: -4.073963165283203
    8. '*' → logprob: -4.823963165283203
    9. '   ' → logprob: -4.948963165283203
    10. '<|end|>' → logprob: -4.948963165283203

Token 1070: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47528722882270813
    2. ')' → logprob: -2.4752871990203857
    3. '[' → logprob: -2.4752871990203857
    4. ']' → logprob: -2.8502871990203857
    5. ',' → logprob: -3.4752871990203857
    6. '+' → logprob: -3.7252871990203857
    7. '#' → logprob: -3.9752871990203857
    8. 'x' → logprob: -4.100287437438965
    9. '[i' → logprob: -4.475287437438965
    10. '[
' → logprob: -4.600287437438965

Token 1071: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5196564197540283
    2. '#' → logprob: -1.7696564197540283
    3. '[' → logprob: -2.0196564197540283
    4. 'x' → logprob: -2.1446564197540283
    5. ']' → logprob: -2.5196564197540283
    6. '
' → logprob: -3.0196564197540283
    7. '=' → logprob: -3.1446564197540283
    8. ',' → logprob: -3.1446564197540283
    9. '+' → logprob: -3.7696564197540283
    10. '_' → logprob: -3.8946564197540283

Token 1072: ' Pour' (ID: 13931)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7500808835029602
    2. '#' → logprob: -2.2500808238983154
    3. '[' → logprob: -2.2500808238983154
    4. ')' → logprob: -2.8750808238983154
    5. '=' → logprob: -3.0000808238983154
    6. ',' → logprob: -3.1250808238983154
    7. ':' → logprob: -3.8750808238983154
    8. '[
' → logprob: -4.0000810623168945
    9. '[i' → logprob: -4.2500810623168945
    10. '
' → logprob: -4.3750810623168945

Token 1073: ' accéder' (ID: 120555)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10262969881296158
    2. ' i' → logprob: -2.7276296615600586
    3. '_' → logprob: -3.6026296615600586
    4. '_i' → logprob: -6.227629661560059
    5. ' _' → logprob: -6.727629661560059
    6. 'x' → logprob: -7.977629661560059
    7. ' ' → logprob: -7.977629661560059
    8. ')' → logprob: -8.352629661560059
    9. ' segment' → logprob: -8.352629661560059
    10. ' x' → logprob: -9.352629661560059

Token 1074: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03436804190278053
    2. '[' → logprob: -3.7843680381774902
    3. ')' → logprob: -5.78436803817749
    4. '(' → logprob: -6.15936803817749
    5. 'à' → logprob: -6.90936803817749
    6. ',' → logprob: -7.28436803817749
    7. 'aux' → logprob: -7.40936803817749
    8. '=' → logprob: -7.53436803817749
    9. 'e' → logprob: -8.159368515014648
    10. ']' → logprob: -8.284368515014648

Token 1075: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14076562225818634
    2. 'une' → logprob: -3.26576566696167
    3. 'S' → logprob: -3.76576566696167
    4. 'l' → logprob: -3.89076566696167
    5. 'i' → logprob: -4.51576566696167
    6. 'the' → logprob: -4.64076566696167
    7. '_' → logprob: -5.26576566696167
    8. ' la' → logprob: -5.76576566696167
    9. ' chaque' → logprob: -6.14076566696167
    10. 'each' → logprob: -6.14076566696167

Token 1076: ' station' (ID: 11538)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7656494975090027
    2. 'station' → logprob: -1.0156495571136475
    3. 'i' → logprob: -3.0156495571136475
    4. ')' → logprob: -3.2656495571136475
    5. 'n' → logprob: -4.015649318695068
    6. ' station' → logprob: -4.515649318695068
    7. 's' → logprob: -5.265649318695068
    8. ':' → logprob: -5.265649318695068
    9. '#' → logprob: -5.390649318695068
    10. ',' → logprob: -5.515649318695068

Token 1077: ' située' (ID: 95008)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.062089357525110245
    2. '[' → logprob: -4.187089443206787
    3. '[i' → logprob: -4.437089443206787
    4. '_i' → logprob: -4.812089443206787
    5. ',' → logprob: -5.187089443206787
    6. 'i' → logprob: -5.687089443206787
    7. '```' → logprob: -5.937089443206787
    8. '=' → logprob: -6.187089443206787
    9. ' _' → logprob: -6.312089443206787
    10. '_in' → logprob: -6.687089443206787

Token 1078: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32638147473335266
    2. '[' → logprob: -2.0763814449310303
    3. '[i' → logprob: -3.2013814449310303
    4. '=' → logprob: -3.4513814449310303
    5. ',' → logprob: -3.7013814449310303
    6. '```' → logprob: -4.826381683349609
    7. 'dans' → logprob: -5.326381683349609
    8. 'i' → logprob: -5.326381683349609
    9. 'au' → logprob: -5.576381683349609
    10. '_i' → logprob: -5.576381683349609

Token 1079: ' une' (ID: 2463)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2982558608055115
    2. 'l' → logprob: -2.7982559204101562
    3. 'position' → logprob: -2.7982559204101562
    4. 'i' → logprob: -2.9232559204101562
    5. 'distance' → logprob: -4.298255920410156
    6. 'une' → logprob: -4.298255920410156
    7. 'la' → logprob: -4.423255920410156
    8. 'index' → logprob: -4.548255920410156
    9. '```' → logprob: -4.798255920410156
    10. ' S' → logprob: -4.923255920410156

Token 1080: ' distance' (ID: 9324)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.667485773563385
    2. ' \' → logprob: -2.7924857139587402
    3. ' ' → logprob: -2.7924857139587402
    4. ' station' → logprob: -3.1674857139587402
    5. ' (' → logprob: -3.5424857139587402
    6. 'space' → logprob: -3.6674857139587402
    7. ':' → logprob: -3.6674857139587402
    8. '[' → logprob: -3.7924857139587402
    9. ' ' → logprob: -3.7924857139587402
    10. ''' → logprob: -3.9174857139587402

Token 1081: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5966237783432007
    2. ',' → logprob: -1.9716237783432007
    3. '```' → logprob: -1.9716237783432007
    4. 'from' → logprob: -2.5966238975524902
    5. ' (' → logprob: -2.7216238975524902
    6. '=' → logprob: -3.0966238975524902
    7. '_' → logprob: -3.0966238975524902
    8. '.' → logprob: -3.4716238975524902
    9. 'au' → logprob: -3.7216238975524902
    10. '+' → logprob: -3.7216238975524902

Token 1082: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5611469745635986
    2. 'u' → logprob: -1.0611469745635986
    3. '_' → logprob: -3.0611469745635986
    4. 'i' → logprob: -5.0611467361450195
    5. ''' → logprob: -5.1861467361450195
    6. '+' → logprob: -5.3111467361450195
    7. ''entre' → logprob: -5.5611467361450195
    8. ''u' → logprob: -5.9361467361450195
    9. '=' → logprob: -6.4361467361450195
    10. ''après' → logprob: -6.6861467361450195

Token 1083: ' desde' (ID: 8859)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1114167869091034
    2. 'u' → logprob: -3.611416816711426
    3. ''' → logprob: -4.236416816711426
    4. '+' → logprob: -4.361416816711426
    5. '_' → logprob: -4.486416816711426
    6. 'ans' → logprob: -5.111416816711426
    7. '_i' → logprob: -5.486416816711426
    8. ''entre' → logprob: -5.861416816711426
    9. 'i' → logprob: -5.986416816711426
    10. '`' → logprob: -6.111416816711426

Token 1084: ' S' (ID: 336)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1664259433746338
    2. 'e' → logprob: -1.2914259433746338
    3. ')' → logprob: -1.6664259433746338
    4. '_' → logprob: -2.541425943374634
    5. ''' → logprob: -3.666425943374634
    6. '=' → logprob: -3.916425943374634
    7. ']' → logprob: -4.166425704956055
    8. '1' → logprob: -4.541425704956055
    9. '[' → logprob: -4.666425704956055
    10. 'n' → logprob: -5.166425704956055

Token 1085: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09718768298625946
    2. '[' → logprob: -2.5971877574920654
    3. '_' → logprob: -4.472187519073486
    4. '_i' → logprob: -5.847187519073486
    5. ']' → logprob: -6.722187519073486
    6. '[
' → logprob: -7.222187519073486
    7. 'i' → logprob: -7.597187519073486
    8. '[_' → logprob: -8.222187995910645
    9. '[u' → logprob: -9.222187995910645
    10. '`' → logprob: -9.347187995910645

Token 1086: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.674359142780304
    2. '+' → logprob: -1.4243590831756592
    3. '[i' → logprob: -2.299359083175659
    4. '_' → logprob: -3.674359083175659
    5. 'u' → logprob: -3.924359083175659
    6. 'e' → logprob: -4.049359321594238
    7. ',' → logprob: -4.174359321594238
    8. '[
' → logprob: -4.424359321594238
    9. '[u' → logprob: -5.174359321594238
    10. ']' → logprob: -5.174359321594238

Token 1087: ' 
' (ID: 793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2825419902801514
    2. ''' → logprob: -1.6575419902801514
    3. ' ' → logprob: -2.1575419902801514
    4. ',' → logprob: -2.6575419902801514
    5. '=' → logprob: -2.9075419902801514
    6. '#' → logprob: -3.1575419902801514
    7. ':' → logprob: -3.5325419902801514
    8. '_' → logprob: -3.5325419902801514
    9. '+' → logprob: -3.9075419902801514
    10. ' )' → logprob: -4.0325422286987305

Token 1088: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0769634246826172
    2. ',' → logprob: -2.201963424682617
    3. ':' → logprob: -2.451963424682617
    4. '=' → logprob: -2.451963424682617
    5. ' ' → logprob: -2.576963424682617
    6. ')' → logprob: -2.576963424682617
    7. ' #' → logprob: -3.326963424682617
    8. '*' → logprob: -3.701963424682617
    9. '.' → logprob: -3.701963424682617
    10. '_' → logprob: -4.076963424682617

Token 1089: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.33366060256958
    2. ')' → logprob: -1.95866060256958
    3. ' on' → logprob: -2.20866060256958
    4. ' #' → logprob: -2.95866060256958
    5. ' ' → logprob: -3.08366060256958
    6. ''' → logprob: -3.20866060256958
    7. ' il' → logprob: -3.45866060256958
    8. ',' → logprob: -3.58366060256958
    9. ' (' → logprob: -3.70866060256958
    10. ' i' → logprob: -3.70866060256958

Token 1090: ' proj' (ID: 16022)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.7222152948379517
    2. '_' → logprob: -1.3472152948379517
    3. ' peux' → logprob: -1.7222152948379517
    4. '*' → logprob: -4.472215175628662
    5. '_pe' → logprob: -4.472215175628662
    6. ' peut' → logprob: -5.222215175628662
    7. 'pour' → logprob: -5.472215175628662
    8. '+' → logprob: -5.472215175628662
    9. '=' → logprob: -5.847215175628662
    10. 's' → logprob: -5.847215175628662

Token 1091: 'ette' (ID: 3769)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5723440647125244
    2. 'c' → logprob: -2.1973440647125244
    3. ')' → logprob: -2.4473440647125244
    4. 'r' → logprob: -3.3223440647125244
    5. 's' → logprob: -3.4473440647125244
    6. 'ct' → logprob: -3.5723440647125244
    7. 'u' → logprob: -3.8223440647125244
    8. 'ction' → logprob: -3.8223440647125244
    9. '[' → logprob: -4.072343826293945
    10. '```' → logprob: -4.572343826293945

Token 1092: ' les' (ID: 1341)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4339181184768677
    2. ')' → logprob: -1.6839181184768677
    3. ' =' → logprob: -2.308917999267578
    4. ' ' → logprob: -2.808917999267578
    5. ' d' → logprob: -3.183917999267578
    6. ' la' → logprob: -3.308917999267578
    7. 'd' → logprob: -3.683917999267578
    8. ' (' → logprob: -3.808917999267578
    9. ',' → logprob: -3.933917999267578
    10. 's' → logprob: -4.183917999267578

Token 1093: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -1.4868130683898926
    2. ')' → logprob: -1.9868130683898926
    3. 'station' → logprob: -2.3618130683898926
    4. 'arr' → logprob: -2.4868130683898926
    5. 'segments' → logprob: -2.4868130683898926
    6. '_' → logprob: -3.1118130683898926
    7. 's' → logprob: -3.2368130683898926
    8. 'segment' → logprob: -3.4868130683898926
    9. 'ar' → logprob: -3.9868130683898926
    10. ' stations' → logprob: -4.361813068389893

Token 1094: ' comme' (ID: 7971)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2203445434570312
    2. '_' → logprob: -1.3453445434570312
    3. '[' → logprob: -2.0953445434570312
    4. '[i' → logprob: -2.4703445434570312
    5. 'sur' → logprob: -3.4703445434570312
    6. 's' → logprob: -4.095344543457031
    7. '_sur' → logprob: -4.220344543457031
    8. 'dans' → logprob: -4.345344543457031
    9. ',' → logprob: -4.345344543457031
    10. ')' → logprob: -4.345344543457031

Token 1095: ' divis' (ID: 37826)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.8601359128952026
    2. 'S' → logprob: -2.110136032104492
    3. ' des' → logprob: -2.735136032104492
    4. 'arr' → logprob: -2.735136032104492
    5. 'segment' → logprob: -2.860136032104492
    6. 'un' → logprob: -3.235136032104492
    7. 'segments' → logprob: -3.235136032104492
    8. ' une' → logprob: -3.235136032104492
    9. 'int' → logprob: -3.360136032104492
    10. 'une' → logprob: -3.485136032104492

Token 1096: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.40306511521339417
    2. 'és' → logprob: -1.2780650854110718
    3. 'ée' → logprob: -3.7780652046203613
    4. ')' → logprob: -5.028065204620361
    5. 'e' → logprob: -5.153065204620361
    6. 'ed' → logprob: -5.403065204620361
    7. ']' → logprob: -5.528065204620361
    8. 'ées' → logprob: -6.153065204620361
    9. '=' → logprob: -6.903065204620361
    10. 'ition' → logprob: -7.153065204620361

Token 1097: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.11195562034845352
    2. '```' → logprob: -3.2369556427001953
    3. '[' → logprob: -4.236955642700195
    4. ' en' → logprob: -4.361955642700195
    5. 'par' → logprob: -5.111955642700195
    6. 'de' → logprob: -5.361955642700195
    7. '_' → logprob: -5.736955642700195
    8. ')' → logprob: -5.986955642700195
    9. ',' → logprob: -6.111955642700195
    10. 'd' → logprob: -6.236955642700195

Token 1098: ' (' (ID: 350)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.1267016977071762
    2. ' segments' → logprob: -2.876701593399048
    3. 'parts' → logprob: -3.876701593399048
    4. ' parts' → logprob: -4.751701831817627
    5. 'part' → logprob: -5.126701831817627
    6. ' x' → logprob: -5.126701831817627
    7. ' K' → logprob: -5.501701831817627
    8. 'x' → logprob: -5.501701831817627
    9. 'segment' → logprob: -6.001701831817627
    10. '```' → logprob: -6.501701831817627

Token 1099: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08963010460138321
    2. 'segments' → logprob: -2.589630126953125
    3. ' x' → logprob: -5.589630126953125
    4. 'K' → logprob: -6.714630126953125
    5. ')' → logprob: -6.714630126953125
    6. '(x' → logprob: -6.839630126953125
    7. ' segments' → logprob: -7.589630126953125
    8. ' (' → logprob: -7.589630126953125
    9. '```' → logprob: -7.964630126953125
    10. ' K' → logprob: -8.464630126953125

Token 1100: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.011402051895856857
    2. '_' → logprob: -4.761402130126953
    3. '[i' → logprob: -6.386402130126953
    4. ')' → logprob: -8.261402130126953
    5. '[' → logprob: -8.386402130126953
    6. '[_' → logprob: -9.011402130126953
    7. '_)' → logprob: -9.261402130126953
    8. 'i' → logprob: -9.386402130126953
    9. '_
' → logprob: -9.386402130126953
    10. ')_' → logprob: -10.261402130126953

Token 1101: ' -' (ID: 533)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0347741842269897
    2. '-' → logprob: -1.1597741842269897
    3. ')' → logprob: -2.5347743034362793
    4. '+' → logprob: -2.6597743034362793
    5. ' -' → logprob: -2.6597743034362793
    6. '[i' → logprob: -3.9097743034362793
    7. '_)' → logprob: -4.034774303436279
    8. '[' → logprob: -4.159774303436279
    9. ' +' → logprob: -4.284774303436279
    10. '_i' → logprob: -4.659774303436279

Token 1102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01441276166588068
    2. ')' → logprob: -4.389412879943848
    3. ' ' → logprob: -6.389412879943848
    4. ' )' → logprob: -8.639412879943848
    5. ' ' → logprob: -11.139412879943848
    6. '```' → logprob: -11.889412879943848
    7. '   ' → logprob: -12.389412879943848
    8. '0' → logprob: -12.639412879943848
    9. '2' → logprob: -13.139412879943848
    10. ' -' → logprob: -13.264412879943848

Token 1103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010342398309148848
    2. ' ' → logprob: -9.250102996826172
    3. ')' → logprob: -12.250102996826172
    4. '```' → logprob: -13.250102996826172
    5. '0' → logprob: -15.250102996826172
    6. '2' → logprob: -16.250102996826172
    7. '`' → logprob: -16.500102996826172
    8. '   ' → logprob: -16.500102996826172
    9. ' )' → logprob: -17.125102996826172
    10. '#' → logprob: -17.250102996826172

Token 1104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016469255089759827
    2. ')_' → logprob: -4.266469478607178
    3. '_' → logprob: -7.516469478607178
    4. '+' → logprob: -7.516469478607178
    5. 'segments' → logprob: -8.14146900177002
    6. ')
' → logprob: -8.26646900177002
    7. ' segments' → logprob: -9.01646900177002
    8. '_segments' → logprob: -9.01646900177002
    9. ')+' → logprob: -9.51646900177002
    10. '_i' → logprob: -9.64146900177002

Token 1105: ' segments' (ID: 33749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.449102520942688
    2. '_segments' → logprob: -2.1991024017333984
    3. 'segments' → logprob: -2.4491024017333984
    4. '_parts' → logprob: -3.0741024017333984
    5. ' segments' → logprob: -3.5741024017333984
    6. ')' → logprob: -3.5741024017333984
    7. ' _' → logprob: -4.699102401733398
    8. ' parts' → logprob: -4.949102401733398
    9. 'parts' → logprob: -4.949102401733398
    10. ' stops' → logprob: -4.949102401733398

Token 1106: ' ég' (ID: 33150)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5756258368492126
    2. ']' → logprob: -2.0756258964538574
    3. ')' → logprob: -2.3256258964538574
    4. '[' → logprob: -2.3256258964538574
    5. ',' → logprob: -3.9506258964538574
    6. '[
' → logprob: -4.200625896453857
    7. ':' → logprob: -4.450625896453857
    8. '[i' → logprob: -4.825625896453857
    9. '=' → logprob: -4.950625896453857
    10. 's' → logprob: -5.075625896453857

Token 1107: 'ales' (ID: 3459)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5866193175315857
    2. 'a' → logprob: -1.4616193771362305
    3. 'ale' → logprob: -1.5866193771362305
    4. 'ales' → logprob: -6.3366193771362305
    5. '#' → logprob: -6.9616193771362305
    6. '```' → logprob: -7.0866193771362305
    7. 'aux' → logprob: -7.5866193771362305
    8. 'alez' → logprob: -8.33661937713623
    9. 'alité' → logprob: -8.46161937713623
    10. '##' → logprob: -8.58661937713623

Token 1108: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7238233089447021
    2. '=' → logprob: -2.098823308944702
    3. ']' → logprob: -2.473823308944702
    4. '/' → logprob: -3.223823308944702
    5. '.' → logprob: -3.223823308944702
    6. '[
' → logprob: -3.348823308944702
    7. '```' → logprob: -3.598823308944702
    8. ',' → logprob: -3.848823308944702
    9. '[' → logprob: -3.848823308944702
    10. '_' → logprob: -4.223823547363281

Token 1109: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09860782325267792
    2. ']' → logprob: -2.9736077785491943
    3. '+' → logprob: -4.598608016967773
    4. '_' → logprob: -4.848608016967773
    5. ',' → logprob: -5.223608016967773
    6. '=' → logprob: -5.348608016967773
    7. '[' → logprob: -5.723608016967773
    8. '-' → logprob: -6.348608016967773
    9. '])' → logprob: -6.973608016967773
    10. '```' → logprob: -6.973608016967773

Token 1110: ' nombre' (ID: 9733)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.5852550268173218
    2. 'stations' → logprob: -1.9602550268173218
    3. 'length' → logprob: -2.0852551460266113
    4. 'long' → logprob: -2.2102551460266113
    5. 'segment' → logprob: -2.8352551460266113
    6. 'parts' → logprob: -2.9602551460266113
    7. '#' → logprob: -3.0852551460266113
    8. 'nombre' → logprob: -3.3352551460266113
    9. 'tail' → logprob: -3.4602551460266113
    10. 'part' → logprob: -3.5852551460266113

Token 1111: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4742480218410492
    2. ')' → logprob: -1.2242480516433716
    3. '_de' → logprob: -3.724247932434082
    4. ' de' → logprob: -3.849247932434082
    5. 'de' → logprob: -4.474247932434082
    6. '_of' → logprob: -4.974247932434082
    7. '=' → logprob: -5.099247932434082
    8. '_des' → logprob: -6.099247932434082
    9. '_d' → logprob: -6.224247932434082
    10. 'of' → logprob: -6.724247932434082

Token 1112: ''inter' (ID: 55731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30934327840805054
    2. 'stations' → logprob: -2.6843433380126953
    3. ')' → logprob: -3.1843433380126953
    4. '_s' → logprob: -3.9343433380126953
    5. '```' → logprob: -3.9343433380126953
    6. 'es' → logprob: -4.434343338012695
    7. ']' → logprob: -4.559343338012695
    8. 's' → logprob: -4.559343338012695
    9. '_b' → logprob: -5.059343338012695
    10. '_d' → logprob: -5.309343338012695

Token 1113: 'v' (ID: 85)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05833111330866814
    2. 'v' → logprob: -3.05833101272583
    3. 'vals' → logprob: -4.80833101272583
    4. 'stations' → logprob: -7.93333101272583
    5. 'valo' → logprob: -8.058331489562988
    6. '```' → logprob: -8.808331489562988
    7. 'vale' → logprob: -8.808331489562988
    8. 'vall' → logprob: -9.183331489562988
    9. 'vel' → logprob: -9.308331489562988
    10. '_val' → logprob: -9.308331489562988

Token 1114: 'alles' (ID: 28825)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4968711733818054
    2. 'v' → logprob: -1.1218712329864502
    3. 'vale' → logprob: -3.99687123298645
    4. ')' → logprob: -4.996870994567871
    5. 'al' → logprob: -5.121870994567871
    6. '```' → logprob: -5.246870994567871
    7. 'vals' → logprob: -5.809370994567871
    8. 'va' → logprob: -5.871870994567871
    9. ']' → logprob: -6.246870994567871
    10. '>' → logprob: -6.246870994567871

Token 1115: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08840274810791016
    2. 's' → logprob: -3.71340274810791
    3. '_' → logprob: -3.96340274810791
    4. '```' → logprob: -5.33840274810791
    5. ')_' → logprob: -5.58840274810791
    6. '=' → logprob: -5.58840274810791
    7. '),' → logprob: -5.71340274810791
    8. ']' → logprob: -5.83840274810791
    9. ',' → logprob: -6.08840274810791
    10. ' entre' → logprob: -6.21340274810791

Token 1116: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2846041917800903
    2. '_' → logprob: -1.5346041917800903
    3. '=' → logprob: -2.534604072570801
    4. ',' → logprob: -2.534604072570801
    5. '#' → logprob: -3.284604072570801
    6. 'x' → logprob: -3.409604072570801
    7. '_i' → logprob: -3.409604072570801
    8. 's' → logprob: -3.659604072570801
    9. ' =' → logprob: -3.784604072570801
    10. '[' → logprob: -3.909604072570801

Token 1117: ' chaque' (ID: 21194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1709280014038086
    2. '_' → logprob: -1.6709280014038086
    3. '[' → logprob: -2.4209280014038086
    4. ',' → logprob: -2.5459280014038086
    5. '+' → logprob: -3.0459280014038086
    6. '=' → logprob: -3.1709280014038086
    7. ']' → logprob: -3.2959280014038086
    8. 'x' → logprob: -3.7959280014038086
    9. ''' → logprob: -4.295928001403809
    10. '"' → logprob: -4.420928001403809

Token 1118: ' segment' (ID: 14806)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007602838799357414
    2. ' _' → logprob: -6.257602691650391
    3. '_segment' → logprob: -6.382602691650391
    4. '_i' → logprob: -6.757602691650391
    5. ')' → logprob: -7.257602691650391
    6. ')_' → logprob: -8.00760269165039
    7. '_token' → logprob: -8.38260269165039
    8. 'segment' → logprob: -8.38260269165039
    9. ' segment' → logprob: -8.75760269165039
    10. ',' → logprob: -9.13260269165039

Token 1119: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16391430795192719
    2. '_length' → logprob: -1.9139143228530884
    3. '_len' → logprob: -7.288914203643799
    4. '_
' → logprob: -7.538914203643799
    5. '=' → logprob: -7.788914203643799
    6. ' _' → logprob: -7.913914203643799
    7. 's' → logprob: -8.288914680480957
    8. '_size' → logprob: -8.663914680480957
    9. '_count' → logprob: -8.663914680480957
    10. ')' → logprob: -9.288914680480957

Token 1120: ' longueur' (ID: 104613)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8397116661071777
    2. 'length' → logprob: -1.0897116661071777
    3. '_length' → logprob: -2.3397116661071777
    4. ')' → logprob: -3.4647116661071777
    5. 'long' → logprob: -4.089711666107178
    6. ''' → logprob: -4.714711666107178
    7. '```' → logprob: -5.214711666107178
    8. 'size' → logprob: -5.339711666107178
    9. 'l' → logprob: -5.339711666107178
    10. '_size' → logprob: -5.464711666107178

Token 1121: ' approx' (ID: 33956)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9440268874168396
    2. ' =' → logprob: -1.0690269470214844
    3. '(S' → logprob: -3.0690269470214844
    4. '_part' → logprob: -3.0690269470214844
    5. '=' → logprob: -3.5690269470214844
    6. ' d' → logprob: -3.6940269470214844
    7. 'd' → logprob: -3.9440269470214844
    8. 'part' → logprob: -4.319026947021484
    9. '_' → logprob: -4.569026947021484
    10. ' _' → logprob: -4.569026947021484

Token 1122: ' floor' (ID: 8350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1307356357574463
    2. '=' → logprob: -1.2557356357574463
    3. 'u' → logprob: -1.2557356357574463
    4. '_' → logprob: -3.2557356357574463
    5. '+' → logprob: -4.255735397338867
    6. ''' → logprob: -4.880735397338867
    7. ' =' → logprob: -5.380735397338867
    8. 'é' → logprob: -5.380735397338867
    9. '```' → logprob: -5.505735397338867
    10. '*' → logprob: -5.630735397338867

Token 1123: '(d' (ID: 2572)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.37160754203796387
    2. '(' → logprob: -1.3716075420379639
    3. '(S' → logprob: -3.871607542037964
    4. ' (' → logprob: -4.246607780456543
    5. '_div' → logprob: -5.371607780456543
    6. 'div' → logprob: -5.621607780456543
    7. '(
' → logprob: -5.996607780456543
    8. 'd' → logprob: -6.121607780456543
    9. '(s' → logprob: -6.496607780456543
    10. '_d' → logprob: -6.871607780456543

Token 1124: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.9842028617858887
    2. '_' → logprob: -1.4842028617858887
    3. '//' → logprob: -1.9842028617858887
    4. ')' → logprob: -2.2342028617858887
    5. '+' → logprob: -2.3592028617858887
    6. '[' → logprob: -4.109202861785889
    7. '/d' → logprob: -4.859202861785889
    8. ' //' → logprob: -4.984202861785889
    9. ' /' → logprob: -5.609202861785889
    10. 'd' → logprob: -5.609202861785889

Token 1125: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.031550437211990356
    2. ' x' → logprob: -3.906550407409668
    3. '(x' → logprob: -4.781550407409668
    4. ' (' → logprob: -6.156550407409668
    5. '(' → logprob: -7.906550407409668
    6. ' ' → logprob: -11.781550407409668
    7. ')' → logprob: -12.156550407409668
    8. '`' → logprob: -12.219050407409668
    9. ')x' → logprob: -12.281550407409668
    10. '1' → logprob: -12.406550407409668

Token 1126: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011087673716247082
    2. ' x' → logprob: -5.136087894439697
    3. '(x' → logprob: -5.386087894439697
    4. ' (' → logprob: -7.636087894439697
    5. '(' → logprob: -10.011087417602539
    6. ')' → logprob: -11.511087417602539
    7. ')x' → logprob: -11.761087417602539
    8. '(
' → logprob: -12.636087417602539
    9. ' ' → logprob: -12.761087417602539
    10. '   ' → logprob: -13.261087417602539

Token 1127: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0003607296966947615
    2. '_' → logprob: -8.750360488891602
    3. '[i' → logprob: -9.375360488891602
    4. ')_' → logprob: -9.500360488891602
    5. 'i' → logprob: -11.000360488891602
    6. '[' → logprob: -11.500360488891602
    7. '[_' → logprob: -12.125360488891602
    8. ')' → logprob: -13.125360488891602
    9. '+' → logprob: -13.250360488891602
    10. '_j' → logprob: -14.000360488891602

Token 1128: ' -' (ID: 533)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28855255246162415
    2. '-' → logprob: -2.0385525226593018
    3. '_i' → logprob: -2.5385525226593018
    4. ')' → logprob: -3.4135525226593018
    5. '_)' → logprob: -5.788552761077881
    6. '))' → logprob: -6.413552761077881
    7. '_-' → logprob: -7.413552761077881
    8. '[' → logprob: -7.538552761077881
    9. ')_' → logprob: -7.788552761077881
    10. '[-' → logprob: -8.288552284240723

Token 1129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005455024540424347
    2. ' ' → logprob: -5.255455017089844
    3. '2' → logprob: -9.005455017089844
    4. ')' → logprob: -9.505455017089844
    5. '```' → logprob: -11.380455017089844
    6. '`' → logprob: -12.380455017089844
    7. '   ' → logprob: -12.880455017089844
    8. '``' → logprob: -13.880455017089844
    9. 'i' → logprob: -14.005455017089844
    10. '_i' → logprob: -14.380455017089844

Token 1130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.750059127807617
    3. ')' → logprob: -14.250059127807617
    4. '   ' → logprob: -15.750059127807617
    5. '2' → logprob: -16.000059127807617
    6. '```' → logprob: -16.000059127807617
    7. '`' → logprob: -17.750059127807617
    8. '0' → logprob: -18.500059127807617
    9. '
' → logprob: -18.625059127807617
    10. ' ' → logprob: -18.750059127807617

Token 1131: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03691895306110382
    2. '))' → logprob: -3.661918878555298
    3. '+' → logprob: -4.661919116973877
    4. ')+' → logprob: -7.161919116973877
    5. ')))' → logprob: -9.036918640136719
    6. ' +' → logprob: -9.911918640136719
    7. '+)' → logprob: -10.036918640136719
    8. ')
' → logprob: -11.161918640136719
    9. '))+' → logprob: -11.161918640136719
    10. ' )' → logprob: -11.411918640136719

Token 1132: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34603697061538696
    2. ']' → logprob: -1.7210369110107422
    3. '[' → logprob: -2.971036911010742
    4. '+' → logprob: -4.096036911010742
    5. '_' → logprob: -4.346036911010742
    6. ':' → logprob: -4.971036911010742
    7. '```' → logprob: -5.721036911010742
    8. '[i' → logprob: -5.846036911010742
    9. '[
' → logprob: -6.096036911010742
    10. '=' → logprob: -6.221036911010742

Token 1133: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.22670546174049377
    2. '(x' → logprob: -2.476705551147461
    3. ' (' → logprob: -3.226705551147461
    4. ' ceil' → logprob: -3.226705551147461
    5. '(d' → logprob: -4.351705551147461
    6. '1' → logprob: -4.726705551147461
    7. '((' → logprob: -4.976705551147461
    8. '(s' → logprob: -5.976705551147461
    9. 'x' → logprob: -6.101705551147461
    10. 'ce' → logprob: -6.351705551147461

Token 1134: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5263428092002869
    2. '(' → logprob: -0.9013428092002869
    3. 'd' → logprob: -6.651342868804932
    4. 's' → logprob: -7.401342868804932
    5. '(
' → logprob: -7.901342868804932
    6. '((' → logprob: -8.151342391967773
    7. '(x' → logprob: -8.401342391967773
    8. 'x' → logprob: -9.026342391967773
    9. ')' → logprob: -10.026342391967773
    10. ' (' → logprob: -10.401342391967773

Token 1135: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.34937816858291626
    2. ' /' → logprob: -1.2243781089782715
    3. '/d' → logprob: -8.22437858581543
    4. ')' → logprob: -8.34937858581543
    5. '(d' → logprob: -8.34937858581543
    6. 'd' → logprob: -9.72437858581543
    7. '_' → logprob: -10.47437858581543
    8. '/(' → logprob: -10.84937858581543
    9. '(x' → logprob: -11.59937858581543
    10. 's' → logprob: -11.59937858581543

Token 1136: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0019618207588791847
    2. ' (' → logprob: -6.251961708068848
    3. '(' → logprob: -10.376961708068848
    4. '(
' → logprob: -14.876961708068848
    5. '`' → logprob: -15.001961708068848
    6. '(i' → logprob: -15.001961708068848
    7. '2' → logprob: -15.501961708068848
    8. '```' → logprob: -15.501961708068848
    9. 'x' → logprob: -15.751961708068848
    10. '((' → logprob: -15.876961708068848

Token 1137: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03842804208397865
    2. 'x' → logprob: -3.2884280681610107
    3. ' (' → logprob: -8.16342830657959
    4. '(' → logprob: -9.78842830657959
    5. '(
' → logprob: -11.78842830657959
    6. ')' → logprob: -12.03842830657959
    7. '(S' → logprob: -12.16342830657959
    8. '#' → logprob: -12.66342830657959
    9. ' x' → logprob: -12.78842830657959
    10. 'S' → logprob: -13.03842830657959

Token 1138: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0018806851003319025
    2. '_' → logprob: -6.376880645751953
    3. ')' → logprob: -9.751880645751953
    4. '_)' → logprob: -9.751880645751953
    5. ')_' → logprob: -10.126880645751953
    6. 'i' → logprob: -12.001880645751953
    7. '_x' → logprob: -13.001880645751953
    8. ''_' → logprob: -13.001880645751953
    9. ' _' → logprob: -13.126880645751953
    10. '_j' → logprob: -13.376880645751953

Token 1139: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5972086787223816
    2. ' -' → logprob: -0.9722086787223816
    3. ')' → logprob: -3.2222087383270264
    4. '+' → logprob: -3.7222087383270264
    5. '[' → logprob: -5.597208499908447
    6. ' +' → logprob: -6.847208499908447
    7. ' _' → logprob: -7.472208499908447
    8. ' ' → logprob: -7.847208499908447
    9. '[-' → logprob: -7.847208499908447
    10. '_i' → logprob: -8.097208976745605

Token 1140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002964935847558081
    2. ' ' → logprob: -8.125296592712402
    3. ')' → logprob: -16.000295639038086
    4. '2' → logprob: -16.625295639038086
    5. '0' → logprob: -16.625295639038086
    6. '```' → logprob: -18.000295639038086
    7. '
' → logprob: -18.125295639038086
    8. '-' → logprob: -18.250295639038086
    9. '#' → logprob: -18.687795639038086
    10. '１' → logprob: -18.750295639038086

Token 1141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.456358823925257e-05
    2. ' ' → logprob: -9.875064849853516
    3. '0' → logprob: -11.500064849853516
    4. ')' → logprob: -13.375064849853516
    5. '-' → logprob: -14.125064849853516
    6. '
' → logprob: -15.750064849853516
    7. '2' → logprob: -16.125064849853516
    8. 'i' → logprob: -16.500064849853516
    9. '])' → logprob: -17.375064849853516
    10. '')' → logprob: -17.500064849853516

Token 1142: ')).
' (ID: 82227)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07986506074666977
    2. ')' → logprob: -2.579864978790283
    3. ')))' → logprob: -7.204864978790283
    4. '))
' → logprob: -8.829865455627441
    5. '])' → logprob: -11.204865455627441
    6. ' ))' → logprob: -11.704865455627441
    7. ')
' → logprob: -11.704865455627441
    8. ')")' → logprob: -11.704865455627441
    9. '))))' → logprob: -11.954865455627441
    10. '+' → logprob: -12.204865455627441

Token 1143: '#
' (ID: 11240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9666961431503296
    2. '_' → logprob: -1.2166961431503296
    3. ']' → logprob: -2.091696262359619
    4. ')' → logprob: -2.341696262359619
    5. ',' → logprob: -3.466696262359619
    6. '+' → logprob: -4.341696262359619
    7. ':' → logprob: -4.466696262359619
    8. '=' → logprob: -4.591696262359619
    9. '(' → logprob: -4.966696262359619
    10. '#' → logprob: -5.591696262359619

Token 1144: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1845893859863281
    2. ']' → logprob: -1.3095893859863281
    3. '[' → logprob: -1.8095893859863281
    4. '_' → logprob: -2.309589385986328
    5. ' ' → logprob: -3.184589385986328
    6. ',' → logprob: -3.684589385986328
    7. '[
' → logprob: -3.809589385986328
    8. '+' → logprob: -4.434589385986328
    9. 'x' → logprob: -4.559589385986328
    10. '=' → logprob: -4.684589385986328

Token 1145: ' Le' (ID: 2018)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2359342575073242
    2. ')' → logprob: -1.3609342575073242
    3. '[' → logprob: -2.360934257507324
    4. 'x' → logprob: -2.485934257507324
    5. '_' → logprob: -2.985934257507324
    6. '+' → logprob: -2.985934257507324
    7. '
' → logprob: -3.610934257507324
    8. '[
' → logprob: -3.610934257507324
    9. '[i' → logprob: -3.985934257507324
    10. '#' → logprob: -3.985934257507324

Token 1146: ' temps' (ID: 11160)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1611515283584595
    2. ')' → logprob: -1.4111515283584595
    3. '#' → logprob: -2.41115140914917
    4. '(' → logprob: -3.03615140914917
    5. '+' → logprob: -3.03615140914917
    6. '=' → logprob: -3.41115140914917
    7. '[' → logprob: -3.53615140914917
    8. ']' → logprob: -3.53615140914917
    9. 's' → logprob: -3.78615140914917
    10. ',' → logprob: -3.91115140914917

Token 1147: ' minimum' (ID: 11085)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5899249911308289
    2. '=' → logprob: -0.9649249911308289
    3. '+' → logprob: -3.8399250507354736
    4. ')' → logprob: -4.0899248123168945
    5. '#' → logprob: -4.7149248123168945
    6. '[' → logprob: -5.2149248123168945
    7. ' =' → logprob: -5.9649248123168945
    8. ':' → logprob: -5.9649248123168945
    9. ' ' → logprob: -7.0899248123168945
    10. '(' → logprob: -7.3399248123168945

Token 1148: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5995398163795471
    2. ')' → logprob: -1.7245397567749023
    3. '_' → logprob: -1.7245397567749023
    4. '+' → logprob: -3.0995397567749023
    5. ' =' → logprob: -5.349539756774902
    6. ',' → logprob: -5.474539756774902
    7. '(' → logprob: -5.599539756774902
    8. '[' → logprob: -5.849539756774902
    9. 'de' → logprob: -5.974539756774902
    10. 'pour' → logprob: -5.974539756774902

Token 1149: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.950992226600647
    2. 'aller' → logprob: -1.325992226600647
    3. 'se' → logprob: -1.950992226600647
    4. 're' → logprob: -2.4509921073913574
    5. 'arr' → logprob: -3.2009921073913574
    6. 'station' → logprob: -4.825992107391357
    7. 'i' → logprob: -4.825992107391357
    8. 'acc' → logprob: -4.825992107391357
    9. 'calcul' → logprob: -4.825992107391357
    10. 'une' → logprob: -5.200992107391357

Token 1150: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5440281629562378
    2. '_' → logprob: -1.5440281629562378
    3. ')' → logprob: -1.9190281629562378
    4. ''' → logprob: -4.919028282165527
    5. '  ' → logprob: -5.169028282165527
    6. ' (' → logprob: -5.169028282165527
    7. '[' → logprob: -5.169028282165527
    8. '(' → logprob: -5.294028282165527
    9. ',' → logprob: -5.419028282165527
    10. ' la' → logprob: -5.794028282165527

Token 1151: ' station' (ID: 11538)
  Prédit: ' station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' station' → logprob: -0.5532333254814148
    2. 'station' → logprob: -1.1782333850860596
    3. '_' → logprob: -3.0532333850860596
    4. 'i' → logprob: -3.6782333850860596
    5. ')' → logprob: -5.0532331466674805
    6. ' ' → logprob: -5.1782331466674805
    7. 's' → logprob: -5.3032331466674805
    8. 'prem' → logprob: -5.5532331466674805
    9. ' i' → logprob: -6.0532331466674805
    10. '+' → logprob: -6.4282331466674805

Token 1152: ' k' (ID: 372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05933244526386261
    2. ' ' → logprob: -3.8093323707580566
    3. '+' → logprob: -4.309332370758057
    4. ')' → logprob: -5.684332370758057
    5. 's' → logprob: -5.809332370758057
    6. '=' → logprob: -5.934332370758057
    7. '[' → logprob: -6.059332370758057
    8. ',' → logprob: -6.059332370758057
    9. ' _' → logprob: -6.184332370758057
    10. ' (' → logprob: -7.309332370758057

Token 1153: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3992692530155182
    2. ')' → logprob: -2.0242693424224854
    3. ' ' → logprob: -2.3992693424224854
    4. '[' → logprob: -3.8992693424224854
    5. 'u' → logprob: -4.149269104003906
    6. '=' → logprob: -4.149269104003906
    7. '+' → logprob: -4.274269104003906
    8. '[i' → logprob: -5.274269104003906
    9. ']' → logprob: -5.399269104003906
    10. ' )' → logprob: -5.524269104003906

Token 1154: ' ce' (ID: 2357)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1146838515996933
    2. ' range' → logprob: -2.4896838665008545
    3. ' S' → logprob: -5.114683628082275
    4. ' la' → logprob: -5.364683628082275
    5. ' ' → logprob: -5.614683628082275
    6. 'S' → logprob: -6.114683628082275
    7. 'la' → logprob: -6.489683628082275
    8. '   ' → logprob: -7.114683628082275
    9. '
' → logprob: -7.114683628082275
    10. '_' → logprob: -7.239683628082275

Token 1155: ' interval' (ID: 17116)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12152337282896042
    2. ''' → logprob: -3.746523380279541
    3. ' segment' → logprob: -4.121523380279541
    4. ' _' → logprob: -4.621523380279541
    5. ' line' → logprob: -4.871523380279541
    6. ']' → logprob: -5.121523380279541
    7. ')' → logprob: -5.246523380279541
    8. 'interval' → logprob: -5.246523380279541
    9. '"' → logprob: -5.621523380279541
    10. '`' → logprob: -5.621523380279541

Token 1156: ' dépend' (ID: 68660)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6528835892677307
    2. 'al' → logprob: -1.277883529663086
    3. ']' → logprob: -2.027883529663086
    4. '_' → logprob: -3.402883529663086
    5. 'v' → logprob: -4.402883529663086
    6. ')' → logprob: -4.527883529663086
    7. '#' → logprob: -6.527883529663086
    8. '[
' → logprob: -6.652883529663086
    9. '[' → logprob: -6.777883529663086
    10. 'a' → logprob: -7.027883529663086

Token 1157: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4478456974029541
    2. '=' → logprob: -2.072845697402954
    3. ')' → logprob: -2.697845697402954
    4. '[' → logprob: -3.447845697402954
    5. ']' → logprob: -3.697845697402954
    6. ' =' → logprob: -3.947845697402954
    7. 's' → logprob: -4.197845458984375
    8. ' de' → logprob: -4.447845458984375
    9. ' _' → logprob: -4.572845458984375
    10. '+' → logprob: -5.197845458984375

Token 1158: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.030003309249878
    2. ')' → logprob: -1.530003309249878
    3. ''' → logprob: -1.655003309249878
    4. ' ' → logprob: -3.530003309249878
    5. '(' → logprob: -3.655003309249878
    6. 's' → logprob: -4.030003547668457
    7. '+' → logprob: -4.405003547668457
    8. 'S' → logprob: -4.530003547668457
    9. 'x' → logprob: -4.530003547668457
    10. 'k' → logprob: -4.530003547668457

Token 1159: ' minimal' (ID: 19957)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.25095704197883606
    2. 'distance' → logprob: -1.7509570121765137
    3. 'station' → logprob: -4.125957012176514
    4. 'pos' → logprob: -5.375957012176514
    5. ' position' → logprob: -5.625957012176514
    6. 'next' → logprob: -5.750957012176514
    7. 'segment' → logprob: -5.875957012176514
    8. '#' → logprob: -6.250957012176514
    9. 'code' → logprob: -6.375957012176514
    10. 'k' → logprob: -6.500957012176514

Token 1160: ' segment' (ID: 14806)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8969992995262146
    2. ']' → logprob: -1.3969993591308594
    3. '_' → logprob: -2.7719993591308594
    4. '+' → logprob: -2.7719993591308594
    5. ',' → logprob: -3.8969993591308594
    6. 'e' → logprob: -4.021999359130859
    7. '=' → logprob: -4.146999359130859
    8. '[' → logprob: -4.396999359130859
    9. 's' → logprob: -4.521999359130859
    10. ')
' → logprob: -4.896999359130859

Token 1161: ' qu' (ID: 474)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07157554477453232
    2. '_length' → logprob: -3.32157564163208
    3. ')' → logprob: -4.19657564163208
    4. ']' → logprob: -4.94657564163208
    5. 's' → logprob: -5.69657564163208
    6. '\' → logprob: -6.69657564163208
    7. '_
' → logprob: -6.69657564163208
    8. ' _' → logprob: -7.07157564163208
    9. '[' → logprob: -7.57157564163208
    10. '_lengths' → logprob: -7.69657564163208

Token 1162: ''elle' (ID: 36421)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09116577357053757
    2. ']' → logprob: -3.341165781021118
    3. '_' → logprob: -3.591165781021118
    4. 'n' → logprob: -4.466165542602539
    5. '=' → logprob: -6.216165542602539
    6. ')' → logprob: -6.466165542602539
    7. 'i' → logprob: -6.591165542602539
    8. '[' → logprob: -7.216165542602539
    9. 'е' → logprob: -7.216165542602539
    10. ',' → logprob: -7.341165542602539

Token 1163: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19683192670345306
    2. ')' → logprob: -2.3218319416046143
    3. '[' → logprob: -3.6968319416046143
    4. '+' → logprob: -3.9468319416046143
    5. ']' → logprob: -4.321831703186035
    6. '=' → logprob: -4.696831703186035
    7. 's' → logprob: -5.821831703186035
    8. ''' → logprob: -6.321831703186035
    9. 'e' → logprob: -6.446831703186035
    10. ' ' → logprob: -6.571831703186035

Token 1164: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.055395595729351044
    2. ')' → logprob: -4.180395603179932
    3. 's' → logprob: -4.930395603179932
    4. ' _' → logprob: -5.055395603179932
    5. ''' → logprob: -5.180395603179932
    6. '+' → logprob: -6.055395603179932
    7. '\' → logprob: -6.055395603179932
    8. '```' → logprob: -6.305395603179932
    9. ']' → logprob: -6.430395603179932
    10. 'e' → logprob: -6.805395603179932

Token 1165: ' +' (ID: 659)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13671879470348358
    2. ']' → logprob: -2.51171875
    3. ')' → logprob: -4.13671875
    4. ' _' → logprob: -4.88671875
    5. '[' → logprob: -5.13671875
    6. ',' → logprob: -5.51171875
    7. ''' → logprob: -6.38671875
    8. '=' → logprob: -6.63671875
    9. '```' → logprob: -6.76171875
    10. '\' → logprob: -7.01171875

Token 1166: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03545142710208893
    2. ' ' → logprob: -4.535451412200928
    3. ']' → logprob: -4.910451412200928
    4. ')' → logprob: -5.160451412200928
    5. '...' → logprob: -5.410451412200928
    6. '(' → logprob: -7.160451412200928
    7. 'S' → logprob: -7.285451412200928
    8. '```' → logprob: -7.660451412200928
    9. 'x' → logprob: -7.785451412200928
    10. '0' → logprob: -7.910451412200928

Token 1167: ' minimal' (ID: 19957)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9480878114700317
    2. '...' → logprob: -2.323087692260742
    3. ' (' → logprob: -2.823087692260742
    4. '1' → logprob: -2.823087692260742
    5. ' segment' → logprob: -2.823087692260742
    6. '
' → logprob: -3.198087692260742
    7. ' next' → logprob: -3.323087692260742
    8. ' x' → logprob: -3.448087692260742
    9. 'distance' → logprob: -3.448087692260742
    10. 's' → logprob: -3.448087692260742

Token 1168: ' local' (ID: 2698)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2909826934337616
    2. ' _' → logprob: -1.790982723236084
    3. ')' → logprob: -4.165982723236084
    4. '_segment' → logprob: -4.165982723236084
    5. ' segment' → logprob: -5.040982723236084
    6. ']' → logprob: -5.040982723236084
    7. '```' → logprob: -5.040982723236084
    8. 'segment' → logprob: -5.790982723236084
    9. '`' → logprob: -5.790982723236084
    10. '_distance' → logprob: -5.915982723236084

Token 1169: ' train' (ID: 8513)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023955948650836945
    2. ')' → logprob: -5.398955821990967
    3. ']' → logprob: -5.398955821990967
    4. '[' → logprob: -5.773955821990967
    5. '_
' → logprob: -6.023955821990967
    6. ' _' → logprob: -6.273955821990967
    7. '```' → logprob: -6.898955821990967
    8. '\' → logprob: -7.023955821990967
    9. 'def' → logprob: -7.148955821990967
    10. ',' → logprob: -7.523955821990967

Token 1170: ' usage' (ID: 16622)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1053667962551117
    2. ']' → logprob: -3.7303667068481445
    3. ')' → logprob: -4.1053667068481445
    4. '[' → logprob: -4.3553667068481445
    5. ',' → logprob: -4.6053667068481445
    6. '_
' → logprob: -4.8553667068481445
    7. '=' → logprob: -5.8553667068481445
    8. '[
' → logprob: -5.9803667068481445
    9. 'def' → logprob: -6.1053667068481445
    10. '```' → logprob: -6.2303667068481445

Token 1171: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35179582238197327
    2. ']' → logprob: -2.2267959117889404
    3. ')' → logprob: -2.9767959117889404
    4. '[' → logprob: -3.3517959117889404
    5. ',' → logprob: -3.9767959117889404
    6. '=' → logprob: -4.351795673370361
    7. ':' → logprob: -4.726795673370361
    8. '[
' → logprob: -4.851795673370361
    9. '_
' → logprob: -4.976795673370361
    10. 'def' → logprob: -5.101795673370361

Token 1172: '#
' (ID: 11240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1867021322250366
    2. ']' → logprob: -1.5617021322250366
    3. '[' → logprob: -1.6867021322250366
    4. ')' → logprob: -1.8117021322250366
    5. '[
' → logprob: -3.686702251434326
    6. 'def' → logprob: -3.811702251434326
    7. ',' → logprob: -4.186702251434326
    8. '=' → logprob: -4.311702251434326
    9. '+' → logprob: -4.811702251434326
    10. ':
' → logprob: -4.936702251434326

Token 1173: '#' (ID: 2)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2868417501449585
    2. ')' → logprob: -1.4118417501449585
    3. ':' → logprob: -1.6618417501449585
    4. '=' → logprob: -2.536841869354248
    5. '[' → logprob: -2.911841869354248
    6. '+' → logprob: -3.161841869354248
    7. '_' → logprob: -3.911841869354248
    8. '[i' → logprob: -4.036841869354248
    9. 'def' → logprob: -4.536841869354248
    10. '(' → logprob: -4.661841869354248

Token 1174: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3172417879104614
    2. ']' → logprob: -1.4422417879104614
    3. 'def' → logprob: -1.8172417879104614
    4. ')' → logprob: -2.442241668701172
    5. ':' → logprob: -2.817241668701172
    6. '#' → logprob: -3.192241668701172
    7. 'from' → logprob: -3.942241668701172
    8. 'max' → logprob: -3.942241668701172
    9. ',' → logprob: -4.317241668701172
    10. '(' → logprob: -4.442241668701172

Token 1175: ' a' (ID: 261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03939967229962349
    2. '[' → logprob: -4.03939962387085
    3. '=' → logprob: -4.16439962387085
    4. 'def' → logprob: -7.16439962387085
    5. ']' → logprob: -7.28939962387085
    6. '[
' → logprob: -7.41439962387085
    7. '#' → logprob: -7.66439962387085
    8. ':' → logprob: -7.78939962387085
    9. ')' → logprob: -8.164400100708008
    10. '_
' → logprob: -8.289400100708008

Token 1176: ' aussi' (ID: 9894)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6957564353942871
    2. ' ' → logprob: -2.320756435394287
    3. '[' → logprob: -2.570756435394287
    4. '(' → logprob: -2.695756435394287
    5. ''' → logprob: -3.195756435394287
    6. ')' → logprob: -3.570756435394287
    7. ']' → logprob: -3.820756435394287
    8. ',' → logprob: -3.945756435394287
    9. ' _' → logprob: -3.945756435394287
    10. '=' → logprob: -4.070756435394287

Token 1177: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3810586631298065
    2. '[' → logprob: -1.756058692932129
    3. '[
' → logprob: -3.131058692932129
    4. ''' → logprob: -3.881058692932129
    5. '=' → logprob: -4.756058692932129
    6. ',' → logprob: -4.881058692932129
    7. '(' → logprob: -5.131058692932129
    8. ')' → logprob: -5.131058692932129
    9. '[]' → logprob: -5.256058692932129
    10. '\n' → logprob: -5.256058692932129

Token 1178: ' train' (ID: 8513)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13268955051898956
    2. ')' → logprob: -4.007689476013184
    3. '

' → logprob: -4.382689476013184
    4. ' ' → logprob: -4.882689476013184
    5. '#' → logprob: -5.007689476013184
    6. '\n' → logprob: -5.007689476013184
    7. '[' → logprob: -5.132689476013184
    8. ',' → logprob: -5.132689476013184
    9. ''' → logprob: -5.257689476013184
    10. '
' → logprob: -5.382689476013184

Token 1179: ' express' (ID: 6101)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31224745512008667
    2. '[' → logprob: -2.8122475147247314
    3. ''' → logprob: -3.3122475147247314
    4. ')' → logprob: -3.8122475147247314
    5. ' ' → logprob: -3.8122475147247314
    6. 's' → logprob: -4.062247276306152
    7. ' =' → logprob: -4.062247276306152
    8. '_train' → logprob: -4.687247276306152
    9. 'local' → logprob: -4.812247276306152
    10. ' _' → logprob: -4.812247276306152

Token 1180: ' avec' (ID: 3937)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0726771131157875
    2. '[' → logprob: -3.0726771354675293
    3. '_
' → logprob: -5.197677135467529
    4. ')' → logprob: -5.572677135467529
    5. '[
' → logprob: -5.572677135467529
    6. '.' → logprob: -6.072677135467529
    7. ']' → logprob: -6.322677135467529
    8. '=' → logprob: -6.572677135467529
    9. ' _' → logprob: -7.322677135467529
    10. ',' → logprob: -7.447677135467529

Token 1181: ' vitesse' (ID: 71752)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0635267496109009
    2. ''' → logprob: -2.0635266304016113
    3. 'C' → logprob: -2.6885266304016113
    4. 'local' → logprob: -2.9385266304016113
    5. '.' → logprob: -3.4385266304016113
    6. 'express' → logprob: -3.5635266304016113
    7. 'S' → logprob: -3.6885266304016113
    8. ' local' → logprob: -4.188526630401611
    9. ' ' → logprob: -4.188526630401611
    10. '_' → logprob: -4.313526630401611

Token 1182: ' B' (ID: 418)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1780541092157364
    2. ')' → logprob: -2.178054094314575
    3. ''' → logprob: -4.303054332733154
    4. '=' → logprob: -4.928054332733154
    5. ',' → logprob: -5.428054332733154
    6. '#' → logprob: -5.803054332733154
    7. ']' → logprob: -6.303054332733154
    8. '.' → logprob: -6.678054332733154
    9. '```' → logprob: -6.678054332733154
    10. '-' → logprob: -6.803054332733154

Token 1183: ' entre' (ID: 3853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8716694712638855
    2. '[' → logprob: -0.9966694712638855
    3. ')' → logprob: -3.1216695308685303
    4. ''' → logprob: -3.3716695308685303
    5. ',' → logprob: -3.4966695308685303
    6. '#' → logprob: -4.121669292449951
    7. '<|end|>' → logprob: -4.496669292449951
    8. '=' → logprob: -4.621669292449951
    9. '```' → logprob: -4.746669292449951
    10. '(' → logprob: -4.871669292449951

Token 1184: ' stops' (ID: 29924)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05598720908164978
    2. ')' → logprob: -3.9309871196746826
    3. '_' → logprob: -4.430987358093262
    4. ']' → logprob: -5.305987358093262
    5. ' S' → logprob: -5.305987358093262
    6. '_S' → logprob: -5.680987358093262
    7. 's' → logprob: -6.680987358093262
    8. 'stations' → logprob: -6.805987358093262
    9. 'segments' → logprob: -6.805987358093262
    10. ',' → logprob: -6.930987358093262

Token 1185: ' S' (ID: 336)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13228902220726013
    2. '[' → logprob: -2.632288932800293
    3. '=' → logprob: -4.632288932800293
    4. '#' → logprob: -5.007288932800293
    5. '[
' → logprob: -5.007288932800293
    6. ',' → logprob: -5.132288932800293
    7. ']' → logprob: -5.257288932800293
    8. '_
' → logprob: -5.382288932800293
    9. ')' → logprob: -5.757288932800293
    10. ':' → logprob: -6.007288932800293

Token 1186: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0529661551117897
    2. '[' → logprob: -3.3029661178588867
    3. ']' → logprob: -4.927966117858887
    4. '_
' → logprob: -6.052966117858887
    5. ')' → logprob: -7.052966117858887
    6. '[
' → logprob: -7.052966117858887
    7. '#' → logprob: -7.177966117858887
    8. ',' → logprob: -8.052966117858887
    9. ' _' → logprob: -8.052966117858887
    10. '\' → logprob: -8.552966117858887

Token 1187: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8780713677406311
    2. ']' → logprob: -1.8780713081359863
    3. '_' → logprob: -2.2530713081359863
    4. '[
' → logprob: -2.2530713081359863
    5. '[i' → logprob: -2.8780713081359863
    6. ')' → logprob: -3.1280713081359863
    7. '=' → logprob: -3.1280713081359863
    8. ':' → logprob: -4.253071308135986
    9. '+' → logprob: -4.253071308135986
    10. ',' → logprob: -4.753071308135986

Token 1188: '#
' (ID: 11240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5196430683135986
    2. '_' → logprob: -1.1446430683135986
    3. '#' → logprob: -4.1446428298950195
    4. '[
' → logprob: -4.2696428298950195
    5. ',' → logprob: -4.5196428298950195
    6. ']' → logprob: -4.6446428298950195
    7. ')' → logprob: -5.0196428298950195
    8. ':' → logprob: -5.3946428298950195
    9. ''' → logprob: -5.5196428298950195
    10. '=' → logprob: -5.6446428298950195

Token 1189: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.232479453086853
    2. ')' → logprob: -1.857479453086853
    3. '_' → logprob: -2.2324795722961426
    4. ' ' → logprob: -2.3574795722961426
    5. ']' → logprob: -2.7324795722961426
    6. '=' → logprob: -2.7324795722961426
    7. '#' → logprob: -2.9824795722961426
    8. ':' → logprob: -3.2324795722961426
    9. 'x' → logprob: -3.6074795722961426
    10. ',' → logprob: -3.7324795722961426

Token 1190: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4607574939727783
    2. ']' → logprob: -2.0857574939727783
    3. ',' → logprob: -2.2107574939727783
    4. '[' → logprob: -2.3357574939727783
    5. ':' → logprob: -2.5857574939727783
    6. ')' → logprob: -2.8357574939727783
    7. 'x' → logprob: -2.9607574939727783
    8. '[
' → logprob: -3.3357574939727783
    9. '(' → logprob: -3.4607574939727783
    10. ',
' → logprob: -3.5857574939727783

Token 1191: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39289185404777527
    2. ' i' → logprob: -2.0178918838500977
    3. '_' → logprob: -2.1428918838500977
    4. ' ' → logprob: -3.0178918838500977
    5. ' _' → logprob: -4.517891883850098
    6. ')' → logprob: -5.892891883850098
    7. 'x' → logprob: -6.017891883850098
    8. ' station' → logprob: -6.767891883850098
    9. 's' → logprob: -6.892891883850098
    10. '_i' → logprob: -7.017891883850098

Token 1192: ' stations' (ID: 26061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1369813084602356
    2. '[' → logprob: -3.136981248855591
    3. ']' → logprob: -3.261981248855591
    4. ')' → logprob: -4.38698148727417
    5. 'i' → logprob: -4.51198148727417
    6. ',' → logprob: -5.88698148727417
    7. '[
' → logprob: -5.88698148727417
    8. '=' → logprob: -6.01198148727417
    9. '_
' → logprob: -6.13698148727417
    10. '#' → logprob: -6.13698148727417

Token 1193: ' avant' (ID: 13339)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2514919936656952
    2. '[' → logprob: -2.2514920234680176
    3. ',' → logprob: -3.3764920234680176
    4. '[i' → logprob: -4.001492023468018
    5. ' _' → logprob: -4.501492023468018
    6. ':' → logprob: -4.751492023468018
    7. ']' → logprob: -5.001492023468018
    8. ')' → logprob: -5.001492023468018
    9. '=' → logprob: -5.501492023468018
    10. '_i' → logprob: -5.626492023468018

Token 1194: ' le' (ID: 505)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008865930140018463
    2. '=' → logprob: -6.633865833282471
    3. '_' → logprob: -6.758865833282471
    4. ' S' → logprob: -6.883865833282471
    5. 'le' → logprob: -6.883865833282471
    6. '_S' → logprob: -7.508865833282471
    7. ':' → logprob: -7.758865833282471
    8. ',' → logprob: -7.883865833282471
    9. '=S' → logprob: -7.883865833282471
    10. ')' → logprob: -8.258866310119629

Token 1195: ' premier' (ID: 15506)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09221599996089935
    2. 'prem' → logprob: -4.5922160148620605
    3. '_' → logprob: -4.7172160148620605
    4. '=' → logprob: -4.8422160148620605
    5. 'station' → logprob: -4.8422160148620605
    6. 'i' → logprob: -4.8422160148620605
    7. 'first' → logprob: -4.9672160148620605
    8. 's' → logprob: -5.0922160148620605
    9. '1' → logprob: -5.2172160148620605
    10. '-' → logprob: -5.5922160148620605

Token 1196: ' sem' (ID: 2743)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.31287476420402527
    2. '_' → logprob: -1.4378747940063477
    3. '=' → logprob: -4.187874794006348
    4. ')' → logprob: -5.437874794006348
    5. 's' → logprob: -5.687874794006348
    6. ']' → logprob: -6.437874794006348
    7. ' =' → logprob: -6.937874794006348
    8. 'stop' → logprob: -7.187874794006348
    9. '_S' → logprob: -7.312874794006348
    10. 'station' → logprob: -7.437874794006348

Token 1197: 'iexpress' (ID: 190732)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5597484707832336
    2. 'S' → logprob: -2.184748411178589
    3. 'm' → logprob: -3.059748411178589
    4. '```' → logprob: -3.934748411178589
    5. '_stop' → logprob: -4.184748649597168
    6. '-' → logprob: -4.184748649597168
    7. ']' → logprob: -4.434748649597168
    8. '#' → logprob: -4.434748649597168
    9. 's' → logprob: -4.559748649597168
    10. 'station' → logprob: -4.684748649597168

Token 1198: ' stop' (ID: 5666)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14037999510765076
    2. ']' → logprob: -3.5153799057006836
    3. '_stop' → logprob: -4.015379905700684
    4. ')' → logprob: -4.140379905700684
    5. 'stop' → logprob: -4.515379905700684
    6. '```' → logprob: -4.640379905700684
    7. 'S' → logprob: -4.765379905700684
    8. '[' → logprob: -4.890379905700684
    9. '-' → logprob: -5.015379905700684
    10. ',' → logprob: -5.390379905700684

Token 1199: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10658997297286987
    2. '[' → logprob: -3.6065900325775146
    3. ']' → logprob: -3.6065900325775146
    4. ')' → logprob: -4.2315897941589355
    5. ',' → logprob: -4.7315897941589355
    6. '```' → logprob: -5.1065897941589355
    7. ':' → logprob: -5.3565897941589355
    8. ' =' → logprob: -6.7315897941589355
    9. 's' → logprob: -6.7315897941589355
    10. '.' → logprob: -6.8565897941589355

Token 1200: ' l' (ID: 305)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.319845050573349
    2. 'la' → logprob: -2.069844961166382
    3. 'l' → logprob: -2.819844961166382
    4. 'le' → logprob: -3.319844961166382
    5. 'range' → logprob: -4.194845199584961
    6. '#' → logprob: -5.194845199584961
    7. ' la' → logprob: -5.319845199584961
    8. '_' → logprob: -5.694845199584961
    9. 'line' → logprob: -5.694845199584961
    10. ' S' → logprob: -5.944845199584961

Token 1201: ''' (ID: 6)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.02068030834198
    2. 'n' → logprob: -1.39568030834198
    3. ']' → logprob: -2.3956804275512695
    4. '[' → logprob: -2.7706804275512695
    5. ']
' → logprob: -3.3956804275512695
    6. 'e' → logprob: -3.8956804275512695
    7. 'r' → logprob: -4.1456804275512695
    8. 'p' → logprob: -4.2706804275512695
    9. '#
' → logprob: -4.5206804275512695
    10. '_' → logprob: -4.6456804275512695

Token 1202: 'interval' (ID: 37558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.7209876775741577
    2. '[
' → logprob: -1.7209876775741577
    3. 'S' → logprob: -1.8459876775741577
    4. '#
' → logprob: -2.4709877967834473
    5. '[' → logprob: -2.8459877967834473
    6. ']
' → logprob: -2.8459877967834473
    7. '#' → logprob: -3.0959877967834473
    8. 'e' → logprob: -4.220987796783447
    9. 'n' → logprob: -4.345987796783447
    10. ')' → logprob: -4.470987796783447

Token 1203: 'le' (ID: 282)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2855839431285858
    2. '[
' → logprob: -2.660583972930908
    3. '_' → logprob: -2.910583972930908
    4. '[' → logprob: -3.035583972930908
    5. 'ation' → logprob: -4.160583972930908
    6. ')' → logprob: -4.910583972930908
    7. '#' → logprob: -4.910583972930908
    8. 'r' → logprob: -5.160583972930908
    9. 't' → logprob: -5.160583972930908
    10. 'n' → logprob: -5.285583972930908

Token 1204: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1401526927947998
    2. ':' → logprob: -1.5151526927947998
    3. ',' → logprob: -1.8901526927947998
    4. '_' → logprob: -1.8901526927947998
    5. ']' → logprob: -2.8901526927948
    6. '[i' → logprob: -3.5151526927948
    7. ' =' → logprob: -4.390152931213379
    8. '[
' → logprob: -4.640152931213379
    9. '=' → logprob: -4.765152931213379
    10. '```' → logprob: -5.515152931213379

Token 1205: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8492280840873718
    2. ',' → logprob: -1.7242281436920166
    3. '_' → logprob: -2.4742281436920166
    4. ')' → logprob: -2.9742281436920166
    5. ':' → logprob: -3.0992281436920166
    6. ''' → logprob: -3.0992281436920166
    7. '#' → logprob: -3.0992281436920166
    8. ' ,' → logprob: -3.3492281436920166
    9. ' #' → logprob: -4.0992279052734375
    10. ' ' → logprob: -4.5992279052734375

Token 1206: ' peut' (ID: 9216)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30083346366882324
    2. ''' → logprob: -2.0508334636688232
    3. ' continue' → logprob: -3.6758334636688232
    4. 's' → logprob: -3.6758334636688232
    5. ' peux' → logprob: -3.9258334636688232
    6. 'n' → logprob: -4.300833702087402
    7. '.' → logprob: -5.675833702087402
    8. ')' → logprob: -5.800833702087402
    9. '#' → logprob: -6.175833702087402
    10. ',' → logprob: -6.175833702087402

Token 1207: ' voyager' (ID: 173077)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.362791895866394
    2. ' utiliser' → logprob: -1.862791895866394
    3. 'pass' → logprob: -2.1127920150756836
    4. ' accéder' → logprob: -2.6127920150756836
    5. ''utiliser' → logprob: -3.6127920150756836
    6. ' aller' → logprob: -3.6127920150756836
    7. ' possible' → logprob: -3.6127920150756836
    8. 'util' → logprob: -3.7377920150756836
    9. 'possible' → logprob: -3.8627920150756836
    10. 'pas' → logprob: -3.8627920150756836

Token 1208: ' local' (ID: 2698)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.060799047350883484
    2. ' ' → logprob: -4.8107991218566895
    3. ' jusqu' → logprob: -4.9357991218566895
    4. ')' → logprob: -5.0607991218566895
    5. '```' → logprob: -5.1857991218566895
    6. '=' → logprob: -5.5607991218566895
    7. 'à' → logprob: -5.6857991218566895
    8. 'jus' → logprob: -5.8107991218566895
    9. 'au' → logprob: -5.9357991218566895
    10. ',' → logprob: -6.1857991218566895

Token 1209: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19261448085308075
    2. ')' → logprob: -2.6926145553588867
    3. '[' → logprob: -3.1926145553588867
    4. ' ' → logprob: -4.567614555358887
    5. ' =' → logprob: -4.692614555358887
    6. ']' → logprob: -4.942614555358887
    7. '=' → logprob: -5.067614555358887
    8. '```' → logprob: -5.192614555358887
    9. '_
' → logprob: -5.567614555358887
    10. '[
' → logprob: -5.692614555358887

Token 1210: 'co' (ID: 1191)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047515515238046646
    2. '_' → logprob: -3.422515630722046
    3. ',' → logprob: -5.422515392303467
    4. '=' → logprob: -6.172515392303467
    5. ' )' → logprob: -6.547515392303467
    6. '+' → logprob: -7.047515392303467
    7. '#' → logprob: -7.172515392303467
    8. '[' → logprob: -7.172515392303467
    9. ' ' → logprob: -7.172515392303467
    10. 's' → logprob: -7.922515392303467

Token 1211: 'ût' (ID: 24581)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3811964988708496
    2. 'n' → logprob: -1.3811964988708496
    3. 'de' → logprob: -1.7561964988708496
    4. 'nt' → logprob: -2.1311964988708496
    5. 'mp' → logprob: -2.8811964988708496
    6. 'nst' → logprob: -2.8811964988708496
    7. ')' → logprob: -3.1311964988708496
    8. 'mm' → logprob: -4.25619649887085
    9. '#' → logprob: -4.88119649887085
    10. 'mpl' → logprob: -5.50619649887085

Token 1212: ' A' (ID: 355)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1144714504480362
    2. '_' → logprob: -3.114471435546875
    3. ' ' → logprob: -3.989471435546875
    4. ' par' → logprob: -4.114471435546875
    5. '=' → logprob: -5.114471435546875
    6. '*' → logprob: -5.739471435546875
    7. 'e' → logprob: -5.989471435546875
    8. ' )' → logprob: -6.114471435546875
    9. '+' → logprob: -6.239471435546875
    10. ' =' → logprob: -6.614471435546875

Token 1213: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026324795559048653
    2. ' )' → logprob: -4.02632474899292
    3. '_' → logprob: -5.77632474899292
    4. '+' → logprob: -6.27632474899292
    5. ' ' → logprob: -7.27632474899292
    6. '*' → logprob: -7.27632474899292
    7. ' ' → logprob: -7.40132474899292
    8. ' *' → logprob: -8.776325225830078
    9. ',' → logprob: -9.026325225830078
    10. '=' → logprob: -9.276325225830078

Token 1214: '#
' (ID: 11240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4446214735507965
    2. '_' → logprob: -1.6946214437484741
    3. ']' → logprob: -3.3196215629577637
    4. ')' → logprob: -3.5696215629577637
    5. '=' → logprob: -3.5696215629577637
    6. ':' → logprob: -3.6946215629577637
    7. '[
' → logprob: -4.069621562957764
    8. ' ' → logprob: -4.444621562957764
    9. ',' → logprob: -5.194621562957764
    10. '\' → logprob: -5.569621562957764

Token 1215: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.195479154586792
    2. ')' → logprob: -2.070479154586792
    3. '[' → logprob: -2.070479154586792
    4. '=' → logprob: -2.320479154586792
    5. ' ' → logprob: -2.320479154586792
    6. ']' → logprob: -2.820479154586792
    7. ':' → logprob: -2.945479154586792
    8. '#' → logprob: -3.070479154586792
    9. 'x' → logprob: -3.695479154586792
    10. ',' → logprob: -3.820479154586792

Token 1216: ' L' (ID: 451)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.527960181236267
    2. ']' → logprob: -1.652960181236267
    3. 'x' → logprob: -2.1529603004455566
    4. ')' → logprob: -2.1529603004455566
    5. '#' → logprob: -2.9029603004455566
    6. '[' → logprob: -3.0279603004455566
    7. 'def' → logprob: -3.2779603004455566
    8. '(' → logprob: -3.4029603004455566
    9. ',' → logprob: -3.5279603004455566
    10. 'for' → logprob: -3.5279603004455566

Token 1217: ''objectif' (ID: 194227)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1451330184936523
    2. ')' → logprob: -1.8951330184936523
    3. ']' → logprob: -2.0201330184936523
    4. '=' → logprob: -2.2701330184936523
    5. 'n' → logprob: -2.6451330184936523
    6. '[
' → logprob: -3.2701330184936523
    7. '[' → logprob: -3.6451330184936523
    8. 'i' → logprob: -3.7701330184936523
    9. 'x' → logprob: -3.8951330184936523
    10. '+' → logprob: -4.645133018493652

Token 1218: ' final' (ID: 1721)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.598507821559906
    2. '=' → logprob: -1.4735078811645508
    3. ':' → logprob: -2.348507881164551
    4. '[' → logprob: -3.098507881164551
    5. ' ' → logprob: -3.598507881164551
    6. ')' → logprob: -4.348507881164551
    7. ' =' → logprob: -4.473507881164551
    8. ',' → logprob: -5.223507881164551
    9. '
' → logprob: -5.848507881164551
    10. '(' → logprob: -6.098507881164551

Token 1219: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.579495906829834
    2. '=' → logprob: -1.579495906829834
    3. ':' → logprob: -2.954495906829834
    4. ' ' → logprob: -3.079495906829834
    5. ')' → logprob: -3.454495906829834
    6. '#' → logprob: -3.954495906829834
    7. ',' → logprob: -4.079495906829834
    8. '[' → logprob: -4.079495906829834
    9. '<|end|>' → logprob: -4.454495906829834
    10. ' =' → logprob: -4.954495906829834

Token 1220: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9051519632339478
    2. ' max' → logprob: -1.5301519632339478
    3. 'max' → logprob: -1.6551519632339478
    4. ' ' → logprob: -3.155151844024658
    5. ' to' → logprob: -3.405151844024658
    6. ' de' → logprob: -4.030151844024658
    7. '=' → logprob: -4.155151844024658
    8. ':' → logprob: -4.655151844024658
    9. ' d' → logprob: -4.905151844024658
    10. ' _' → logprob: -4.905151844024658

Token 1221: ' calcul' (ID: 7559)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2901212275028229
    2. 'maximize' → logprob: -1.6651211977005005
    3. '_' → logprob: -4.790121078491211
    4. ' maximize' → logprob: -5.165121078491211
    5. 'calcul' → logprob: -5.415121078491211
    6. ']' → logprob: -5.415121078491211
    7. 's' → logprob: -5.665121078491211
    8. ' maxim' → logprob: -6.165121078491211
    9. '#' → logprob: -6.165121078491211
    10. 'find' → logprob: -6.165121078491211

Token 1222: 'er' (ID: 259)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5399526357650757
    2. 'r' → logprob: -2.0399527549743652
    3. 'm' → logprob: -2.9149527549743652
    4. 'n' → logprob: -2.9149527549743652
    5. ')' → logprob: -3.1649527549743652
    6. '_' → logprob: -4.164952754974365
    7. '=' → logprob: -4.164952754974365
    8. 'a' → logprob: -4.164952754974365
    9. 'ation' → logprob: -4.164952754974365
    10. 'tion' → logprob: -4.289952754974365

Token 1223: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3335857391357422
    2. 'max' → logprob: -1.3335857391357422
    3. ''' → logprob: -1.7085857391357422
    4. ')' → logprob: -2.583585739135742
    5. '"' → logprob: -3.208585739135742
    6. '[]' → logprob: -3.583585739135742
    7. ' max' → logprob: -4.333585739135742
    8. 'le' → logprob: -4.583585739135742
    9. ' ' → logprob: -4.583585739135742
    10. ' K' → logprob: -4.833585739135742

Token 1224: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7041515707969666
    2. ' i' → logprob: -1.4541516304016113
    3. ' ' → logprob: -2.3291516304016113
    4. '_' → logprob: -2.4541516304016113
    5. ' station' → logprob: -2.7041516304016113
    6. ')' → logprob: -5.079151630401611
    7. 'station' → logprob: -5.454151630401611
    8. ' _' → logprob: -5.954151630401611
    9. '  ' → logprob: -6.579151630401611
    10. 's' → logprob: -6.829151630401611

Token 1225: ' choix' (ID: 28642)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9627275466918945
    2. ')' → logprob: -1.4627275466918945
    3. 'i' → logprob: -1.7127275466918945
    4. 'n' → logprob: -2.9627275466918945
    5. 'station' → logprob: -3.8377275466918945
    6. '
' → logprob: -4.3377275466918945
    7. 'def' → logprob: -4.5877275466918945
    8. ' ' → logprob: -4.7127275466918945
    9. 'r' → logprob: -4.7127275466918945
    10. ']' → logprob: -4.7127275466918945

Token 1226: ' donné' (ID: 52079)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13168646395206451
    2. '=' → logprob: -3.1316864490509033
    3. ' ' → logprob: -3.7566864490509033
    4. '[' → logprob: -4.131686687469482
    5. ')' → logprob: -5.131686687469482
    6. '(' → logprob: -5.256686687469482
    7. ',' → logprob: -5.256686687469482
    8. ':' → logprob: -5.631686687469482
    9. '
' → logprob: -5.756686687469482
    10. ' _' → logprob: -5.756686687469482

Token 1227: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06071256101131439
    2. '[' → logprob: -3.6857125759124756
    3. '(' → logprob: -4.4357123374938965
    4. ''' → logprob: -5.1857123374938965
    5. ')' → logprob: -5.5607123374938965
    6. ' ' → logprob: -6.0607123374938965
    7. '=' → logprob: -6.0607123374938965
    8. ':' → logprob: -6.5607123374938965
    9. ',' → logprob: -6.6857123374938965
    10. ' (' → logprob: -6.9357123374938965

Token 1228: ' arr' (ID: 1724)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7366185784339905
    2. 'arr' → logprob: -1.3616185188293457
    3. 'allocation' → logprob: -1.9866185188293457
    4. 'ré' → logprob: -3.2366185188293457
    5. 'la' → logprob: -3.4866185188293457
    6. 'l' → logprob: -4.736618518829346
    7. 'distribution' → logprob: -4.736618518829346
    8. 'K' → logprob: -4.736618518829346
    9. ' x' → logprob: -5.111618518829346
    10. 'alloc' → logprob: -5.361618518829346

Token 1229: 'êts' (ID: 56582)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9115936756134033
    2. '_' → logprob: -1.6615936756134033
    3. 'g' → logprob: -2.0365936756134033
    4. '[' → logprob: -2.2865936756134033
    5. '[
' → logprob: -2.4115936756134033
    6. ']' → logprob: -3.7865936756134033
    7. '=' → logprob: -4.036593437194824
    8. 't' → logprob: -4.661593437194824
    9. ' =' → logprob: -5.161593437194824
    10. 's' → logprob: -5.286593437194824

Token 1230: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05888770893216133
    2. 's' → logprob: -3.6838877201080322
    3. ')' → logprob: -4.308887481689453
    4. '[' → logprob: -5.183887481689453
    5. ']' → logprob: -6.308887481689453
    6. ',' → logprob: -6.308887481689453
    7. '=' → logprob: -6.433887481689453
    8. '<|end|>' → logprob: -7.058887481689453
    9. ' ' → logprob: -7.308887481689453
    10. '_s' → logprob: -7.433887481689453

Token 1231: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -1.187705397605896
    2. ')' → logprob: -2.6877055168151855
    3. '_' → logprob: -2.6877055168151855
    4. 'êts' → logprob: -2.8127055168151855
    5. 's' → logprob: -2.9377055168151855
    6. ']' → logprob: -3.1877055168151855
    7. '[
' → logprob: -3.3127055168151855
    8. '```' → logprob: -3.5627055168151855
    9. 't' → logprob: -3.6877055168151855
    10. 'pexpr' → logprob: -3.6877055168151855

Token 1232: ' par' (ID: 686)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03109525330364704
    2. '[' → logprob: -4.406095027923584
    3. ',' → logprob: -5.156095027923584
    4. ' _' → logprob: -5.656095027923584
    5. ':' → logprob: -6.656095027923584
    6. ' ' → logprob: -6.781095027923584
    7. ')' → logprob: -6.906095027923584
    8. 's' → logprob: -7.031095027923584
    9. ']' → logprob: -7.531095027923584
    10. '```' → logprob: -7.531095027923584

Token 1233: ' interval' (ID: 17116)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3625103235244751
    2. 'interval' → logprob: -2.1125102043151855
    3. 'segment' → logprob: -2.7375102043151855
    4. 'i' → logprob: -3.3625102043151855
    5. 'inter' → logprob: -3.9875102043151855
    6. ''' → logprob: -4.1125102043151855
    7. ')' → logprob: -4.8625102043151855
    8. '```' → logprob: -5.2375102043151855
    9. '#' → logprob: -5.9875102043151855
    10. 'une' → logprob: -6.1125102043151855

Token 1234: 'le' (ID: 282)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8741092085838318
    2. 'val' → logprob: -0.9991092085838318
    3. ']' → logprob: -1.9991092681884766
    4. 'v' → logprob: -3.2491092681884766
    5. '[' → logprob: -4.374109268188477
    6. '#' → logprob: -5.124109268188477
    7. 'al' → logprob: -5.249109268188477
    8. '[
' → logprob: -5.249109268188477
    9. '[]' → logprob: -6.249109268188477
    10. 'vals' → logprob: -6.499109268188477

Token 1235: ',
' (ID: 412)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1853146255016327
    2. '[' → logprob: -2.060314655303955
    3. ',' → logprob: -4.435314655303955
    4. ' _' → logprob: -5.560314655303955
    5. '```' → logprob: -5.685314655303955
    6. '[i' → logprob: -6.060314655303955
    7. ']' → logprob: -6.060314655303955
    8. ':' → logprob: -6.060314655303955
    9. '[
' → logprob: -6.310314655303955
    10. '\' → logprob: -6.435314655303955

Token 1236: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9785419702529907
    2. '_' → logprob: -1.3535419702529907
    3. '[' → logprob: -2.478541851043701
    4. ')' → logprob: -3.228541851043701
    5. ':' → logprob: -3.478541851043701
    6. '#' → logprob: -3.603541851043701
    7. ''' → logprob: -3.728541851043701
    8. ' x' → logprob: -3.728541851043701
    9. '   ' → logprob: -4.228541851043701
    10. ',' → logprob: -4.353541851043701

Token 1237: ' combien' (ID: 106648)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1238: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5248785018920898
    2. '_' → logprob: -1.7748785018920898
    3. ')' → logprob: -2.52487850189209
    4. '=' → logprob: -3.02487850189209
    5. ']' → logprob: -3.89987850189209
    6. '#' → logprob: -4.27487850189209
    7. ':' → logprob: -4.64987850189209
    8. '+' → logprob: -4.64987850189209
    9. '(' → logprob: -4.89987850189209
    10. 's' → logprob: -5.02487850189209

Token 1239: ' stations' (ID: 26061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36176562309265137
    2. ')' → logprob: -1.3617656230926514
    3. ' stations' → logprob: -4.7367658615112305
    4. ']' → logprob: -4.9867658615112305
    5. ' _' → logprob: -5.3617658615112305
    6. ''' → logprob: -5.3617658615112305
    7. ' segments' → logprob: -5.7367658615112305
    8. ',' → logprob: -5.9867658615112305
    9. ' stops' → logprob: -6.7367658615112305
    10. 's' → logprob: -6.8617658615112305

Token 1240: ' peuvent' (ID: 21321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04269013926386833
    2. '[' → logprob: -3.5426900386810303
    3. '=' → logprob: -5.667690277099609
    4. ',' → logprob: -5.917690277099609
    5. ')' → logprob: -6.542690277099609
    6. 's' → logprob: -6.792690277099609
    7. ']' → logprob: -7.542690277099609
    8. ' _' → logprob: -7.542690277099609
    9. '+' → logprob: -7.792690277099609
    10. '_i' → logprob: -8.04269027709961

Token 1241: ' être' (ID: 9104)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010226419195532799
    2. 'être' → logprob: -4.885226249694824
    3. ' _' → logprob: -7.010226249694824
    4. '_access' → logprob: -8.385226249694824
    5. ' être' → logprob: -8.760226249694824
    6. 'êtres' → logprob: -8.885226249694824
    7. ' ' → logprob: -9.010226249694824
    8. ')' → logprob: -9.010226249694824
    9. '=' → logprob: -9.010226249694824
    10. ' be' → logprob: -9.385226249694824

Token 1242: ' atte' (ID: 43312)
  Prédit: ' accessible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accessible' → logprob: -0.7316386103630066
    2. '_' → logprob: -2.1066386699676514
    3. 'accessible' → logprob: -2.1066386699676514
    4. ')' → logprob: -2.7316386699676514
    5. ''' → logprob: -2.8566386699676514
    6. ' reachable' → logprob: -3.4816386699676514
    7. 'access' → logprob: -3.9816386699676514
    8. ',' → logprob: -4.106638431549072
    9. ' accessibles' → logprob: -4.231638431549072
    10. ']' → logprob: -4.231638431549072

Token 1243: 'intes' (ID: 72455)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7468820214271545
    2. 'ign' → logprob: -1.1218819618225098
    3. 'ints' → logprob: -2.7468819618225098
    4. 'r' → logprob: -2.9968819618225098
    5. 'n' → logprob: -3.7468819618225098
    6. 'd' → logprob: -4.74688196182251
    7. '+' → logprob: -4.87188196182251
    8. 'ind' → logprob: -4.99688196182251
    9. '#' → logprob: -5.12188196182251
    10. ')' → logprob: -5.74688196182251

Token 1244: ' sous' (ID: 14487)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01806413009762764
    2. '[' → logprob: -4.393064022064209
    3. ',' → logprob: -6.518064022064209
    4. '+' → logprob: -7.268064022064209
    5. '_
' → logprob: -7.268064022064209
    6. ')' → logprob: -7.768064022064209
    7. '```' → logprob: -7.893064022064209
    8. '=' → logprob: -8.018064498901367
    9. ' _' → logprob: -8.143064498901367
    10. ']' → logprob: -8.643064498901367

Token 1245: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1220405101776123
    2. ' la' → logprob: -1.3720405101776123
    3. 'la' → logprob: -2.8720405101776123
    4. '```' → logprob: -2.8720405101776123
    5. 'le' → logprob: -3.1220405101776123
    6. '_e' → logprob: -3.4970405101776123
    7. '_T' → logprob: -3.6220405101776123
    8. '`' → logprob: -3.7470405101776123
    9. '_le' → logprob: -4.122040748596191
    10. 'une' → logprob: -4.247040748596191

Token 1246: ' temps' (ID: 11160)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.383593887090683
    2. 'constraint' → logprob: -2.508593797683716
    3. '#' → logprob: -3.383593797683716
    4. '```' → logprob: -3.383593797683716
    5. '
' → logprob: -3.508593797683716
    6. ' T' → logprob: -3.633593797683716
    7. 'time' → logprob: -4.383594036102295
    8. 'temps' → logprob: -4.508594036102295
    9. '_' → logprob: -4.508594036102295
    10. 'limit' → logprob: -4.883594036102295

Token 1247: ' T' (ID: 353)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3988628387451172
    2. ')' → logprob: -2.023862838745117
    3. '[' → logprob: -2.523862838745117
    4. '=' → logprob: -3.398862838745117
    5. '+' → logprob: -4.148862838745117
    6. ''' → logprob: -4.773862838745117
    7. ' ' → logprob: -5.023862838745117
    8. ' _' → logprob: -5.023862838745117
    9. ' =' → logprob: -5.148862838745117
    10. ']' → logprob: -5.273862838745117

Token 1248: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4565075635910034
    2. ':' → logprob: -1.5815075635910034
    3. '[' → logprob: -2.081507682800293
    4. ']' → logprob: -2.456507682800293
    5. ',' → logprob: -2.581507682800293
    6. '#' → logprob: -2.956507682800293
    7. ')' → logprob: -2.956507682800293
    8. 'def' → logprob: -2.956507682800293
    9. '=' → logprob: -3.706507682800293
    10. '[
' → logprob: -4.206507682800293

Token 1249: '#
' (ID: 11240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6333216428756714
    2. '_' → logprob: -2.508321762084961
    3. ']' → logprob: -2.633321762084961
    4. '[
' → logprob: -2.758321762084961
    5. ')' → logprob: -3.008321762084961
    6. 'x' → logprob: -3.258321762084961
    7. ':' → logprob: -3.383321762084961
    8. ',' → logprob: -3.383321762084961
    9. '#' → logprob: -4.008321762084961
    10. '(' → logprob: -4.383321762084961

Token 1250: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9575586915016174
    2. ':' → logprob: -2.4575586318969727
    3. 'x' → logprob: -2.4575586318969727
    4. ' ' → logprob: -2.7075586318969727
    5. '_' → logprob: -2.8325586318969727
    6. '<|end|>' → logprob: -2.8325586318969727
    7. ',' → logprob: -2.9575586318969727
    8. ')' → logprob: -2.9575586318969727
    9. '#' → logprob: -3.2075586318969727
    10. '
' → logprob: -3.5825586318969727

Token 1251: ' Cette' (ID: 27383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9344569444656372
    2. '#' → logprob: -1.9344569444656372
    3. 'dp' → logprob: -2.3094568252563477
    4. '
' → logprob: -3.1844568252563477
    5. 'for' → logprob: -3.4344568252563477
    6. ':' → logprob: -3.4344568252563477
    7. ')' → logprob: -3.8094568252563477
    8. '(
' → logprob: -3.8094568252563477
    9. 'i' → logprob: -3.9344568252563477
    10. '\' → logprob: -3.9344568252563477

Token 1252: ' solution' (ID: 7578)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09253988415002823
    2. '=' → logprob: -3.7175397872924805
    3. '#' → logprob: -4.0925397872924805
    4. ' ' → logprob: -4.2175397872924805
    5. ':' → logprob: -4.4675397872924805
    6. '[' → logprob: -5.2175397872924805
    7. ' =' → logprob: -5.9675397872924805
    8. 'def' → logprob: -5.9675397872924805
    9. ' _' → logprob: -6.2175397872924805
    10. ''' → logprob: -6.3425397872924805

Token 1253: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8491408228874207
    2. ':' → logprob: -1.3491408824920654
    3. ' ' → logprob: -2.9741408824920654
    4. '#' → logprob: -3.0991408824920654
    5. '=' → logprob: -3.2241408824920654
    6. ' =' → logprob: -3.2241408824920654
    7. 's' → logprob: -3.4741408824920654
    8. ',' → logprob: -3.8491408824920654
    9. '
' → logprob: -4.349140644073486
    10. 'def' → logprob: -4.474140644073486

Token 1254: ' compli' (ID: 51016)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5257784724235535
    2. 'import' → logprob: -1.2757785320281982
    3. 'def' → logprob: -3.2757785320281982
    4. 'possible' → logprob: -4.150778293609619
    5. '...' → logprob: -4.275778293609619
    6. '```' → logprob: -4.400778293609619
    7. 'not' → logprob: -4.650778293609619
    8. ' #' → logprob: -4.900778293609619
    9. 'compl' → logprob: -5.150778293609619
    10. 'à' → logprob: -5.900778293609619

Token 1255: 'quée' (ID: 63772)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5257452130317688
    2. ' ' → logprob: -1.900745153427124
    3. '#' → logprob: -2.400745153427124
    4. '<|end|>' → logprob: -3.150745153427124
    5. ')' → logprob: -3.400745153427124
    6. '=' → logprob: -3.650745153427124
    7. '\' → logprob: -5.025745391845703
    8. ' 
' → logprob: -5.025745391845703
    9. ' _' → logprob: -5.025745391845703
    10. '<|end|>' → logprob: -5.400745391845703

Token 1256: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1257: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5617198348045349
    2. '#' → logprob: -1.6867198944091797
    3. 'def' → logprob: -2.8117198944091797
    4. '...' → logprob: -3.1867198944091797
    5. '<|end|>' → logprob: -3.3117198944091797
    6. ' ...' → logprob: -3.5617198944091797
    7. ' #' → logprob: -4.68671989440918
    8. '_' → logprob: -4.68671989440918
    9. ' def' → logprob: -4.93671989440918
    10. ':' → logprob: -5.06171989440918

Token 1258: ' peut' (ID: 9216)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43784549832344055
    2. '=' → logprob: -2.312845468521118
    3. '[' → logprob: -2.562845468521118
    4. ' ' → logprob: -3.187845468521118
    5. '#' → logprob: -3.437845468521118
    6. ':' → logprob: -3.687845468521118
    7. 'def' → logprob: -3.687845468521118
    8. '

' → logprob: -4.437845706939697
    9. '.' → logprob: -4.937845706939697
    10. '
' → logprob: -5.062845706939697

Token 1259: ' faire' (ID: 8119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9452266693115234
    2. 'def' → logprob: -1.0702266693115234
    3. ' continue' → logprob: -2.4452266693115234
    4. '#' → logprob: -2.6952266693115234
    5. 'continue' → logprob: -3.0702266693115234
    6. 'import' → logprob: -4.820226669311523
    7. ')' → logprob: -5.320226669311523
    8. '[' → logprob: -5.320226669311523
    9. ']' → logprob: -5.445226669311523
    10. ':' → logprob: -5.445226669311523

Token 1260: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017655815929174423
    2. 'pass' → logprob: -4.142655849456787
    3. 'import' → logprob: -7.517655849456787
    4. '```' → logprob: -8.517655372619629
    5. 'une' → logprob: -8.892655372619629
    6. '#' → logprob: -9.017655372619629
    7. '   ' → logprob: -9.142655372619629
    8. '_' → logprob: -9.517655372619629
    9. ':' → logprob: -9.767655372619629
    10. '[]' → logprob: -10.017655372619629

Token 1261: ' recherche' (ID: 24975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007118722423911095
    2. '#' → logprob: -5.5071187019348145
    3. 'pass' → logprob: -7.0071187019348145
    4. '
' → logprob: -8.132119178771973
    5. 'for' → logprob: -8.507119178771973
    6. ')' → logprob: -8.632119178771973
    7. '```' → logprob: -8.757119178771973
    8. 'dp' → logprob: -9.132119178771973
    9. 'plan' → logprob: -9.507119178771973
    10. ']' → logprob: -9.757119178771973

Token 1262: ' b' (ID: 287)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009816769510507584
    2. ' ' → logprob: -5.634816646575928
    3. ' _' → logprob: -5.884816646575928
    4. '[' → logprob: -7.009816646575928
    5. ''' → logprob: -7.634816646575928
    6. '=' → logprob: -7.884816646575928
    7. '(' → logprob: -7.884816646575928
    8. ')' → logprob: -8.384817123413086
    9. '.' → logprob: -9.259817123413086
    10. '

' → logprob: -9.384817123413086

Token 1263: 'inaire' (ID: 41465)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4621264934539795
    2. 'space' → logprob: -1.4621264934539795
    3. 'r' → logprob: -1.8371264934539795
    4. '_' → logprob: -2.7121264934539795
    5. 'y' → logprob: -2.7121264934539795
    6. '[' → logprob: -3.0871264934539795
    7. 's' → logprob: -3.7121264934539795
    8. 'a' → logprob: -3.8371264934539795
    9. 'i' → logprob: -3.9621264934539795
    10. 'k' → logprob: -4.087126731872559

Token 1264: ' sur' (ID: 1512)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4560258090496063
    2. '[' → logprob: -2.5810258388519287
    3. ')' → logprob: -2.8310258388519287
    4. 'def' → logprob: -2.8310258388519287
    5. '_' → logprob: -2.8310258388519287
    6. '=' → logprob: -3.7060258388519287
    7. ']' → logprob: -4.20602560043335
    8. '(' → logprob: -4.58102560043335
    9. '(
' → logprob: -5.08102560043335
    10. '\' → logprob: -5.20602560043335

Token 1265: ' la' (ID: 557)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.3860308825969696
    2. 'K' → logprob: -2.011030912399292
    3. ' le' → logprob: -2.136030912399292
    4. 'le' → logprob: -3.636030912399292
    5. ' la' → logprob: -3.886030912399292
    6. ' l' → logprob: -5.761030673980713
    7. 'the' → logprob: -5.761030673980713
    8. 'l' → logprob: -6.011030673980713
    9. ' un' → logprob: -6.261030673980713
    10. ' the' → logprob: -6.636030673980713

Token 1266: ' distance' (ID: 9324)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7455915808677673
    2. ' nombre' → logprob: -1.120591640472412
    3. 'K' → logprob: -2.245591640472412
    4. ' K' → logprob: -2.870591640472412
    5. 'temps' → logprob: -4.370591640472412
    6. 'total' → logprob: -6.120591640472412
    7. 'possible' → logprob: -6.120591640472412
    8. ' \' → logprob: -6.620591640472412
    9. ' number' → logprob: -6.620591640472412
    10. ' ' → logprob: -6.620591640472412

Token 1267: ' atte' (ID: 43312)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06369683891534805
    2. '[' → logprob: -3.93869686126709
    3. ' ' → logprob: -4.56369686126709
    4. '=' → logprob: -4.81369686126709
    5. ')' → logprob: -5.56369686126709
    6. '#' → logprob: -5.68869686126709
    7. ''' → logprob: -6.18869686126709
    8. '(' → logprob: -6.31369686126709
    9. ':' → logprob: -6.56369686126709
    10. ',' → logprob: -6.56369686126709

Token 1268: 'ign' (ID: 733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9375325441360474
    2. 'n' → logprob: -1.4375325441360474
    3. 'ction' → logprob: -1.9375325441360474
    4. ' ' → logprob: -2.562532424926758
    5. 'c' → logprob: -3.687532424926758
    6. 'r' → logprob: -4.187532424926758
    7. 'd' → logprob: -4.312532424926758
    8. ')' → logprob: -4.687532424926758
    9. 't' → logprob: -4.687532424926758
    10. ''' → logprob: -4.812532424926758

Token 1269: 'able' (ID: 562)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07538460195064545
    2. ')' → logprob: -3.0753846168518066
    3. '_' → logprob: -4.450384616851807
    4. 'é' → logprob: -4.825384616851807
    5. 'd' → logprob: -6.700384616851807
    6. 'able' → logprob: -7.325384616851807
    7. 'a' → logprob: -7.325384616851807
    8. 'u' → logprob: -7.450384616851807
    9. ' )' → logprob: -7.450384616851807
    10. ']' → logprob: -7.950384616851807

Token 1270: ' avec' (ID: 3937)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5372432470321655
    2. '_' → logprob: -1.7872432470321655
    3. ')' → logprob: -1.9122432470321655
    4. '(' → logprob: -2.787243366241455
    5. '#' → logprob: -3.037243366241455
    6. ']' → logprob: -3.287243366241455
    7. 'def' → logprob: -3.287243366241455
    8. '[
' → logprob: -3.287243366241455
    9. '=' → logprob: -3.412243366241455
    10. 'x' → logprob: -3.537243366241455

Token 1271: ' un' (ID: 537)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20916156470775604
    2. 'un' → logprob: -3.7091615200042725
    3. 'K' → logprob: -3.9591615200042725
    4. ')' → logprob: -4.084161758422852
    5. ' ' → logprob: -4.209161758422852
    6. ',' → logprob: -4.334161758422852
    7. 'une' → logprob: -4.834161758422852
    8. '\n' → logprob: -4.959161758422852
    9. '```' → logprob: -5.084161758422852
    10. '_' → logprob: -5.084161758422852

Token 1272: ' choix' (ID: 28642)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8419737219810486
    2. ':' → logprob: -2.0919737815856934
    3. 'max' → logprob: -2.3419737815856934
    4. '\n' → logprob: -3.0919737815856934
    5. 'space' → logprob: -3.0919737815856934
    6. 'b' → logprob: -3.4669737815856934
    7. 'def' → logprob: -3.4669737815856934
    8. '_' → logprob: -3.7169737815856934
    9. 'n' → logprob: -3.9669737815856934
    10. '\' → logprob: -4.341973781585693

Token 1273: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0734071359038353
    2. '[' → logprob: -3.6984071731567383
    3. '=' → logprob: -4.698407173156738
    4. ')' → logprob: -4.948407173156738
    5. '(' → logprob: -5.198407173156738
    6. ' ' → logprob: -5.573407173156738
    7. ''' → logprob: -5.698407173156738
    8. ',' → logprob: -5.823407173156738
    9. ':' → logprob: -5.948407173156738
    10. '<|end|>' → logprob: -6.448407173156738

Token 1274: ' arr' (ID: 1724)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7258910536766052
    2. 'x' → logprob: -1.22589111328125
    3. 'arr' → logprob: -2.22589111328125
    4. ' K' → logprob: -3.72589111328125
    5. ' stops' → logprob: -3.85089111328125
    6. ')' → logprob: -4.22589111328125
    7. '_' → logprob: -4.35089111328125
    8. ']' → logprob: -5.47589111328125
    9. 'stations' → logprob: -5.60089111328125
    10. ' x' → logprob: -5.72589111328125

Token 1275: 'êts' (ID: 56582)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.29521051049232483
    2. 'êts' → logprob: -2.420210599899292
    3. 'ête' → logprob: -2.920210599899292
    4. ']' → logprob: -3.045210599899292
    5. ')' → logprob: -3.545210599899292
    6. 'ivée' → logprob: -4.920210361480713
    7. '[' → logprob: -5.295210361480713
    8. 'ay' → logprob: -5.795210361480713
    9. 't' → logprob: -5.920210361480713
    10. 'ival' → logprob: -6.295210361480713

Token 1276: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43721550703048706
    2. '[' → logprob: -1.5622155666351318
    3. ')' → logprob: -2.937215566635132
    4. ':' → logprob: -3.312215566635132
    5. '<|end|>' → logprob: -4.312215328216553
    6. ']' → logprob: -5.062215328216553
    7. '=' → logprob: -5.062215328216553
    8. '#' → logprob: -5.437215328216553
    9. '[
' → logprob: -5.687215328216553
    10. ' ' → logprob: -5.937215328216553

Token 1277: 'iexpress' (ID: 190732)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4429846704006195
    2. 'm' → logprob: -2.0679845809936523
    3. 'x' → logprob: -3.1929845809936523
    4. 'mi' → logprob: -3.6929845809936523
    5. 'pexpr' → logprob: -3.6929845809936523
    6. '#' → logprob: -4.192984580993652
    7. '```' → logprob: -4.192984580993652
    8. ']' → logprob: -4.817984580993652
    9. '']' → logprob: -5.067984580993652
    10. 'l' → logprob: -5.067984580993652

Token 1278: ',
' (ID: 412)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8767236471176147
    2. ':' → logprob: -1.5017236471176147
    3. '<|end|>' → logprob: -1.6267236471176147
    4. ')' → logprob: -3.6267237663269043
    5. '<|end|>' → logprob: -4.126723766326904
    6. 'def' → logprob: -4.126723766326904
    7. '=' → logprob: -4.376723766326904
    8. '#' → logprob: -4.501723766326904
    9. '_' → logprob: -4.626723766326904
    10. ',' → logprob: -4.626723766326904

Token 1279: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1280: ' car' (ID: 1669)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7397966384887695
    2. ')' → logprob: -2.2397966384887695
    3. ':' → logprob: -2.3647966384887695
    4. '#' → logprob: -2.6147966384887695
    5. '[' → logprob: -2.9897966384887695
    6. ',' → logprob: -3.3647966384887695
    7. ']' → logprob: -3.3647966384887695
    8. ' ' → logprob: -3.7397966384887695
    9. '<|end|>' → logprob: -3.7397966384887695
    10. '=' → logprob: -3.8647966384887695

Token 1281: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3422993421554565
    2. ' le' → logprob: -1.4672993421554565
    3. ' on' → logprob: -1.9672993421554565
    4. '#' → logprob: -2.092299461364746
    5. ' il' → logprob: -2.717299461364746
    6. ' K' → logprob: -3.217299461364746
    7. 'le' → logprob: -3.342299461364746
    8. ' les' → logprob: -3.467299461364746
    9. ' #' → logprob: -3.842299461364746
    10. 'la' → logprob: -4.717299461364746

Token 1282: ' temps' (ID: 11160)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.952890157699585
    2. ' code' → logprob: -1.577890157699585
    3. ' next' → logprob: -2.327890157699585
    4. '#' → logprob: -2.827890157699585
    5. ')' → logprob: -2.827890157699585
    6. 'K' → logprob: -3.202890157699585
    7. 's' → logprob: -4.577890396118164
    8. 'max' → logprob: -4.827890396118164
    9. 'next' → logprob: -4.827890396118164
    10. '=' → logprob: -4.952890396118164

Token 1283: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5790482759475708
    2. ')' → logprob: -1.3290482759475708
    3. '=' → logprob: -2.4540481567382812
    4. '[' → logprob: -3.8290481567382812
    5. '#' → logprob: -4.454048156738281
    6. 'def' → logprob: -5.329048156738281
    7. ']' → logprob: -5.579048156738281
    8. ':' → logprob: -5.579048156738281
    9. ' needed' → logprob: -5.829048156738281
    10. ' ' → logprob: -5.954048156738281

Token 1284: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.450482577085495
    2. '_' → logprob: -1.3254826068878174
    3. '=' → logprob: -2.9504826068878174
    4. '<=' → logprob: -4.825482368469238
    5. '#' → logprob: -5.325482368469238
    6. '+' → logprob: -5.575482368469238
    7. 'needed' → logprob: -5.825482368469238
    8. ' needed' → logprob: -6.325482368469238
    9. ',' → logprob: -6.450482368469238
    10. '_required' → logprob: -6.700482368469238

Token 1285: ' accéder' (ID: 120555)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.18981140851974487
    2. 'aller' → logprob: -2.9398114681243896
    3. 'par' → logprob: -3.0648114681243896
    4. ' atteindre' → logprob: -3.8148114681243896
    5. 'arr' → logprob: -4.1898112297058105
    6. ' parcour' → logprob: -4.5648112297058105
    7. ' aller' → logprob: -5.1898112297058105
    8. 'une' → logprob: -5.6898112297058105
    9. 'être' → logprob: -5.6898112297058105
    10. 'le' → logprob: -6.5648112297058105

Token 1286: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.41984331607818604
    2. 'à' → logprob: -2.0448431968688965
    3. '_' → logprob: -2.1698431968688965
    4. ')' → logprob: -3.0448431968688965
    5. ' aux' → logprob: -3.6698431968688965
    6. ' au' → logprob: -4.5448431968688965
    7. ' ' → logprob: -5.0448431968688965
    8. '=' → logprob: -6.4198431968688965
    9. ' to' → logprob: -6.6698431968688965
    10. 'au' → logprob: -6.6698431968688965

Token 1287: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.26752716302871704
    2. ' une' → logprob: -1.5175271034240723
    3. 'la' → logprob: -4.642527103424072
    4. ' la' → logprob: -5.642527103424072
    5. 'a' → logprob: -7.267527103424072
    6. ' chaque' → logprob: -8.14252758026123
    7. ' station' → logprob: -8.51752758026123
    8. 'station' → logprob: -8.64252758026123
    9. '```' → logprob: -9.01752758026123
    10. ' a' → logprob: -9.14252758026123

Token 1288: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.18634375929832458
    2. ' station' → logprob: -1.811343789100647
    3. 'segment' → logprob: -6.061343669891357
    4. '```' → logprob: -6.561343669891357
    5. 's' → logprob: -7.936343669891357
    6. 'sta' → logprob: -8.061344146728516
    7. 'certain' → logprob: -8.061344146728516
    8. 'i' → logprob: -8.061344146728516
    9. 'token' → logprob: -8.186344146728516
    10. '#' → logprob: -8.936344146728516

Token 1289: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05518770590424538
    2. 'i' → logprob: -3.805187702178955
    3. '[' → logprob: -4.680187702178955
    4. ')' → logprob: -5.180187702178955
    5. ',' → logprob: -5.555187702178955
    6. ' ' → logprob: -5.805187702178955
    7. '=' → logprob: -6.430187702178955
    8. '[i' → logprob: -6.805187702178955
    9. ' i' → logprob: -6.805187702178955
    10. '.' → logprob: -6.930187702178955

Token 1290: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4571402370929718
    2. '_' → logprob: -1.3321402072906494
    3. ',' → logprob: -3.8321402072906494
    4. '=' → logprob: -4.3321404457092285
    5. ' ' → logprob: -4.7071404457092285
    6. '[' → logprob: -4.7071404457092285
    7. '<|end|>' → logprob: -4.9571404457092285
    8. ' est' → logprob: -5.3321404457092285
    9. 'i' → logprob: -5.8321404457092285
    10. ' )' → logprob: -5.8321404457092285

Token 1291: ' monot' (ID: 138920)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.1518868207931519
    2. ' calcul' → logprob: -1.9018868207931519
    3. ' <=' → logprob: -2.4018869400024414
    4. 'i' → logprob: -2.9018869400024414
    5. 'le' → logprob: -3.1518869400024414
    6. 'min' → logprob: -3.4018869400024414
    7. '...' → logprob: -3.5268869400024414
    8. '```' → logprob: -3.5268869400024414
    9. ' le' → logprob: -3.6518869400024414
    10. '#' → logprob: -4.026886940002441

Token 1292: 'one' (ID: 690)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -1.121113657951355
    2. 'oton' → logprob: -1.496113657951355
    3. '#' → logprob: -2.4961137771606445
    4. ')' → logprob: -3.1211137771606445
    5. '__' → logprob: -3.2461137771606445
    6. '}' → logprob: -3.6211137771606445
    7. '-' → logprob: -4.1211137771606445
    8. 'ote' → logprob: -4.2461137771606445
    9. ')
' → logprob: -4.2461137771606445
    10. 'o' → logprob: -4.2461137771606445

Token 1293: ' cro' (ID: 11270)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7323706150054932
    2. '<|end|>' → logprob: -1.4823706150054932
    3. '[' → logprob: -2.732370615005493
    4. ')' → logprob: -2.732370615005493
    5. ':' → logprob: -2.732370615005493
    6. '=' → logprob: -4.482370376586914
    7. '<|end|>' → logprob: -4.482370376586914
    8. '#' → logprob: -4.607370376586914
    9. ',' → logprob: -4.607370376586914
    10. '.' → logprob: -4.857370376586914

Token 1294: 'issant' (ID: 31359)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3052104711532593
    2. 'mp' → logprob: -2.305210590362549
    3. 'nt' → logprob: -3.430210590362549
    4. 'm' → logprob: -3.930210590362549
    5. 'p' → logprob: -3.930210590362549
    6. 'de' → logprob: -4.180210590362549
    7. 'ad' → logprob: -4.555210590362549
    8. 'e' → logprob: -5.180210590362549
    9. 'up' → logprob: -5.680210590362549
    10. 'ss' → logprob: -5.680210590362549

Token 1295: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7260375022888184
    2. '[' → logprob: -1.6010375022888184
    3. ':' → logprob: -2.1010375022888184
    4. ')' → logprob: -3.1010375022888184
    5. '<|end|>' → logprob: -3.1010375022888184
    6. ']' → logprob: -3.6010375022888184
    7. '#' → logprob: -3.8510375022888184
    8. ',' → logprob: -4.226037502288818
    9. '=' → logprob: -5.101037502288818
    10. '.' → logprob: -5.226037502288818

Token 1296: ' station' (ID: 11538)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.3643676042556763
    2. ' i' → logprob: -1.4893676042556763
    3. 'nombre' → logprob: -1.7393676042556763
    4. 'i' → logprob: -2.1143674850463867
    5. 'distance' → logprob: -2.2393674850463867
    6. 'fonction' → logprob: -3.7393674850463867
    7. ' distance' → logprob: -3.8643674850463867
    8. ' la' → logprob: -4.489367485046387
    9. 'temps' → logprob: -4.614367485046387
    10. 'la' → logprob: -4.989367485046387

Token 1297: ' i' (ID: 575)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9181352257728577
    2. ')' → logprob: -1.793135166168213
    3. '_' → logprob: -1.918135166168213
    4. '#' → logprob: -3.168135166168213
    5. ' ' → logprob: -3.168135166168213
    6. '=' → logprob: -3.293135166168213
    7. ':' → logprob: -3.543135166168213
    8. ']' → logprob: -3.543135166168213
    9. '[
' → logprob: -3.918135166168213
    10. '<|end|>' → logprob: -4.043135166168213

Token 1298: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.409364104270935
    2. '[' → logprob: -1.534364104270935
    3. '_' → logprob: -1.909364104270935
    4. ')' → logprob: -2.1593642234802246
    5. ']' → logprob: -2.6593642234802246
    6. 'def' → logprob: -3.0343642234802246
    7. '=' → logprob: -3.4093642234802246
    8. '.' → logprob: -3.7843642234802246
    9. '#' → logprob: -3.7843642234802246
    10. ',' → logprob: -4.034364223480225

Token 1299: '#
' (ID: 11240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1142116785049438
    2. ')' → logprob: -1.9892116785049438
    3. '#' → logprob: -2.2392115592956543
    4. ',' → logprob: -2.3642115592956543
    5. '_' → logprob: -2.4892115592956543
    6. '[' → logprob: -2.6142115592956543
    7. ']' → logprob: -2.8642115592956543
    8. '=' → logprob: -3.8642115592956543
    9. 'def' → logprob: -4.114211559295654
    10. '
' → logprob: -4.489211559295654

Token 1300: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9995177388191223
    2. 'def' → logprob: -1.2495176792144775
    3. ')' → logprob: -2.4995176792144775
    4. 'x' → logprob: -3.2495176792144775
    5. 'dp' → logprob: -3.6245176792144775
    6. '_' → logprob: -3.7495176792144775
    7. ',' → logprob: -3.8745176792144775
    8. ']' → logprob: -3.8745176792144775
    9. '[' → logprob: -4.124517917633057
    10. 'for' → logprob: -4.249517917633057

Token 1301: ' Solution' (ID: 20858)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5717306137084961
    2. 'def' → logprob: -0.9467306137084961
    3. '#' → logprob: -3.196730613708496
    4. 'from' → logprob: -5.946730613708496
    5. 'max' → logprob: -7.071730613708496
    6. 'DP' → logprob: -7.821730613708496
    7. 'import' → logprob: -7.946730613708496
    8. 'dist' → logprob: -8.071730613708496
    9. 'distance' → logprob: -8.071730613708496
    10. 'x' → logprob: -8.321730613708496

Token 1302: ' déta' (ID: 99673)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38998687267303467
    2. 'dp' → logprob: -1.8899868726730347
    3. '#' → logprob: -2.014986991882324
    4. 'import' → logprob: -4.014986991882324
    5. 'from' → logprob: -5.014986991882324
    6. 'max' → logprob: -5.639986991882324
    7. ':' → logprob: -6.389986991882324
    8. '.' → logprob: -6.639986991882324
    9. '
' → logprob: -6.889986991882324
    10. '=' → logprob: -7.764986991882324

Token 1303: 'illée' (ID: 102272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5689797401428223
    2. 'def' → logprob: -1.9439797401428223
    3. '=' → logprob: -2.0689797401428223
    4. '#' → logprob: -2.8189797401428223
    5. '.' → logprob: -3.4439797401428223
    6. ' =' → logprob: -3.9439797401428223
    7. '_' → logprob: -4.318979740142822
    8. '()' → logprob: -4.943979740142822
    9. '\' → logprob: -5.443979740142822
    10. 'ation' → logprob: -5.818979740142822

Token 1304: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6952499151229858
    2. 'def' → logprob: -1.0702499151229858
    3. '#' → logprob: -2.3202500343322754
    4. 'import' → logprob: -4.195250034332275
    5. ')' → logprob: -5.195250034332275
    6. ']' → logprob: -5.195250034332275
    7. ':
' → logprob: -5.445250034332275
    8. ',' → logprob: -5.445250034332275
    9. '.' → logprob: -5.570250034332275
    10. '
' → logprob: -5.695250034332275

Token 1305: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9992175102233887
    2. 'def' → logprob: -1.4992175102233887
    3. '#' → logprob: -1.8742175102233887
    4. '```' → logprob: -2.8742175102233887
    5. 'the' → logprob: -3.1242175102233887
    6. 'le' → logprob: -3.2492175102233887
    7. 'range' → logprob: -3.8742175102233887
    8. ' la' → logprob: -3.9992175102233887
    9. 'pass' → logprob: -4.249217510223389
    10. '...' → logprob: -4.749217510223389

Token 1306: ''é' (ID: 12728)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.7367793917655945
    2. 'e' → logprob: -1.3617794513702393
    3. '#' → logprob: -1.9867794513702393
    4. '```' → logprob: -3.4867794513702393
    5. 'def' → logprob: -3.9867794513702393
    6. 'ines' → logprob: -5.11177921295166
    7. 't' → logprob: -5.36177921295166
    8. 'ength' → logprob: -5.48677921295166
    9. 'n' → logprob: -5.48677921295166
    10. ''' → logprob: -5.73677921295166

Token 1307: 'dit' (ID: 2180)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7771867513656616
    2. '#' → logprob: -1.7771867513656616
    3. 't' → logprob: -3.027186870574951
    4. '_' → logprob: -3.152186870574951
    5. '...' → logprob: -3.402186870574951
    6. 'nd' → logprob: -3.402186870574951
    7. 'n' → logprob: -3.777186870574951
    8. 'rror' → logprob: -3.777186870574951
    9. ')' → logprob: -3.902186870574951
    10. ']' → logprob: -4.027186870574951

Token 1308: 'orial' (ID: 9466)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.09898427873849869
    2. 'or' → logprob: -2.8489842414855957
    3. 'e' → logprob: -3.9739842414855957
    4. 'ed' → logprob: -4.723984241485596
    5. '...' → logprob: -5.973984241485596
    6. '```' → logprob: -6.223984241485596
    7. ']' → logprob: -7.223984241485596
    8. 'it' → logprob: -7.473984241485596
    9. '#' → logprob: -7.848984241485596
    10. ':' → logprob: -7.973984241485596

Token 1309: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2553369998931885
    2. '#' → logprob: -1.5053369998931885
    3. 'def' → logprob: -2.1303369998931885
    4. '[' → logprob: -2.2553369998931885
    5. ']' → logprob: -2.6303369998931885
    6. '
' → logprob: -3.2553369998931885
    7. ')' → logprob: -3.5053369998931885
    8. '_' → logprob: -3.5053369998931885
    9. ',' → logprob: -4.255336761474609
    10. 'for' → logprob: -4.380336761474609

Token 1310: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2787128984928131
    2. 'conc' → logprob: -2.4037129878997803
    3. 'problem' → logprob: -2.6537129878997803
    4. 'proble' → logprob: -3.5287129878997803
    5. 'contest' → logprob: -3.6537129878997803
    6. 'jour' → logprob: -4.778712749481201
    7. '#' → logprob: -4.778712749481201
    8. 'code' → logprob: -5.403712749481201
    9. 'challenge' → logprob: -6.028712749481201
    10. 'comp' → logprob: -7.653712749481201

Token 1311: ' JO' (ID: 72685)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5533600449562073
    2. '[' → logprob: -2.1783599853515625
    3. '#' → logprob: -2.4283599853515625
    4. 'def' → logprob: -3.0533599853515625
    5. '[]' → logprob: -4.3033599853515625
    6. '=' → logprob: -4.3033599853515625
    7. ')' → logprob: -4.4283599853515625
    8. ']' → logprob: -4.4283599853515625
    9. '\' → logprob: -4.4283599853515625
    10. '<|end|>' → logprob: -4.4283599853515625

Token 1312: 'I' (ID: 40)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1340670585632324
    2. '[' → logprob: -1.6340670585632324
    3. '_' → logprob: -2.1340670585632324
    4. ':' → logprob: -2.3840670585632324
    5. 'def' → logprob: -3.2590670585632324
    6. '#' → logprob: -3.3840670585632324
    7. ')' → logprob: -3.3840670585632324
    8. '[
' → logprob: -3.3840670585632324
    9. '\' → logprob: -4.009067058563232
    10. '=' → logprob: -4.134067058563232

Token 1313: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.58604097366333
    2. ':' → logprob: -1.71104097366333
    3. '[' → logprob: -1.83604097366333
    4. '#' → logprob: -2.08604097366333
    5. 'for' → logprob: -2.46104097366333
    6. '[
' → logprob: -3.33604097366333
    7. ']' → logprob: -3.46104097366333
    8. '(
' → logprob: -3.96104097366333
    9. '[i' → logprob: -3.96104097366333
    10. '(' → logprob: -4.08604097366333

Token 1314: '201' (ID: 667)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4912912845611572
    2. '[' → logprob: -1.6162912845611572
    3. ':' → logprob: -1.9912912845611572
    4. '#' → logprob: -2.2412912845611572
    5. '.' → logprob: -2.6162912845611572
    6. '[
' → logprob: -3.1162912845611572
    7. ')' → logprob: -3.3662912845611572
    8. ']' → logprob: -3.3662912845611572
    9. '[]' → logprob: -3.4912912845611572
    10. 'def' → logprob: -3.4912912845611572

Token 1315: '6' (ID: 21)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.45924583077430725
    2. '\' → logprob: -3.0842459201812744
    3. 'def' → logprob: -3.4592459201812744
    4. '#' → logprob: -3.5842459201812744
    5. ':' → logprob: -3.5842459201812744
    6. ')' → logprob: -3.5842459201812744
    7. '
' → logprob: -3.7092459201812744
    8. '[
' → logprob: -3.8342459201812744
    9. '[i' → logprob: -3.8342459201812744
    10. ']' → logprob: -4.334245681762695

Token 1316: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8717877268791199
    2. '<|end|>' → logprob: -1.6217877864837646
    3. '#' → logprob: -1.9967877864837646
    4. '_' → logprob: -2.8717877864837646
    5. 'def' → logprob: -3.2467877864837646
    6. '
' → logprob: -3.2467877864837646
    7. '[' → logprob: -3.4967877864837646
    8. ')' → logprob: -3.9967877864837646
    9. ',' → logprob: -4.6217875480651855
    10. '.' → logprob: -4.6217875480651855

Token 1317: ' 
' (ID: 793)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.068695306777954
    2. 'def' → logprob: -1.568695306777954
    3. ')' → logprob: -2.693695306777954
    4. ']' → logprob: -2.943695306777954
    5. ':
' → logprob: -3.068695306777954
    6. '\n' → logprob: -3.443695306777954
    7. 'for' → logprob: -3.443695306777954
    8. '#' → logprob: -3.568695306777954
    9. '
' → logprob: -3.693695306777954
    10. '):' → logprob: -4.068695068359375

Token 1318: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40175774693489075
    2. '#' → logprob: -1.5267577171325684
    3. 'import' → logprob: -3.0267577171325684
    4. '...' → logprob: -4.526757717132568
    5. '.' → logprob: -5.026757717132568
    6. 'pass' → logprob: -5.276757717132568
    7. ')' → logprob: -5.401757717132568
    8. '
' → logprob: -5.776757717132568
    9. '#
' → logprob: -6.026757717132568
    10. 'for' → logprob: -6.026757717132568

Token 1319: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5953212380409241
    2. '#' → logprob: -1.5953211784362793
    3. 'pass' → logprob: -1.7203211784362793
    4. 'import' → logprob: -3.0953211784362793
    5. 'from' → logprob: -4.470321178436279
    6. 'for' → logprob: -6.595321178436279
    7. 'class' → logprob: -6.970321178436279
    8. '```' → logprob: -6.970321178436279
    9. 'continue' → logprob: -7.220321178436279
    10. '...' → logprob: -7.345321178436279

Token 1320: ' fait' (ID: 7473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1408899873495102
    2. '#' → logprob: -2.765889883041382
    3. ' def' → logprob: -4.265890121459961
    4. 'continue' → logprob: -4.515890121459961
    5. '.' → logprob: -4.640890121459961
    6. '=' → logprob: -5.265890121459961
    7. '...' → logprob: -5.765890121459961
    8. ' =' → logprob: -5.890890121459961
    9. ')' → logprob: -6.015890121459961
    10. ' .' → logprob: -6.140890121459961

Token 1321: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.1068478673696518
    2. 'un' → logprob: -2.4818477630615234
    3. 'def' → logprob: -5.106847763061523
    4. 'la' → logprob: -5.481847763061523
    5. '#' → logprob: -6.606847763061523
    6. 'le' → logprob: -6.731847763061523
    7. 'l' → logprob: -6.981847763061523
    8. 'ens' → logprob: -7.106847763061523
    9. ' une' → logprob: -7.231847763061523
    10. 'contin' → logprob: -7.856847763061523

Token 1322: ' recherche' (ID: 24975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10646587610244751
    2. '#' → logprob: -2.6064658164978027
    3. 'binary' → logprob: -4.356465816497803
    4. 'dp' → logprob: -5.731465816497803
    5. 'for' → logprob: -5.731465816497803
    6. 'b' → logprob: -6.231465816497803
    7. 'dynamic' → logprob: -6.481465816497803
    8. 'bis' → logprob: -6.481465816497803
    9. 'from' → logprob: -6.981465816497803
    10. 'import' → logprob: -7.231465816497803

Token 1323: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20817813277244568
    2. '#' → logprob: -2.9581780433654785
    3. 'binary' → logprob: -2.9581780433654785
    4. ' b' → logprob: -3.4581780433654785
    5. 'bis' → logprob: -4.8331780433654785
    6. ' par' → logprob: -5.0831780433654785
    7. 'continue' → logprob: -5.2081780433654785
    8. 'de' → logprob: -5.4581780433654785
    9. 'par' → logprob: -5.8331780433654785
    10. 'à' → logprob: -5.8331780433654785

Token 1324: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.5400894284248352
    2. 'in' → logprob: -1.4150893688201904
    3. 'inary' → logprob: -2.1650893688201904
    4. '```' → logprob: -4.0400896072387695
    5. 'search' → logprob: -4.2900896072387695
    6. 'r' → logprob: -5.2900896072387695
    7. 'ou' → logprob: -5.5400896072387695
    8. 'orne' → logprob: -6.2900896072387695
    9. 'y' → logprob: -6.4150896072387695
    10. 'inar' → logprob: -6.5400896072387695

Token 1325: ' sur' (ID: 1512)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.124210000038147
    2. ':' → logprob: -1.499210000038147
    3. '_' → logprob: -1.999210000038147
    4. '(' → logprob: -2.3742098808288574
    5. '(
' → logprob: -2.8742098808288574
    6. ')' → logprob: -3.2492098808288574
    7. ',' → logprob: -3.7492098808288574
    8. '#' → logprob: -3.9992098808288574
    9. 'def' → logprob: -4.249209880828857
    10. '_range' → logprob: -4.624209880828857

Token 1326: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6578701138496399
    2. 'le' → logprob: -0.7828701138496399
    3. 'l' → logprob: -4.407870292663574
    4. 'max' → logprob: -5.407870292663574
    5. 'temps' → logprob: -6.032870292663574
    6. 'distance' → logprob: -6.407870292663574
    7. 'possible' → logprob: -6.532870292663574
    8. ' la' → logprob: -7.407870292663574
    9. ' le' → logprob: -7.657870292663574
    10. 'une' → logprob: -7.782870292663574

Token 1327: ' station' (ID: 11538)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.2731424868106842
    2. 'distance' → logprob: -2.0231425762176514
    3. 'nombre' → logprob: -3.2731425762176514
    4. 'max' → logprob: -3.3981425762176514
    5. 'maximum' → logprob: -3.6481425762176514
    6. 'station' → logprob: -5.648142337799072
    7. 'time' → logprob: -6.773142337799072
    8. 'd' → logprob: -6.898142337799072
    9. ' temps' → logprob: -7.648142337799072
    10. 'position' → logprob: -7.648142337799072

Token 1328: ' maximale' (ID: 76380)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0789719671010971
    2. '+' → logprob: -3.8289718627929688
    3. ')' → logprob: -4.078971862792969
    4. ' _' → logprob: -4.453971862792969
    5. ']' → logprob: -5.453971862792969
    6. ',' → logprob: -6.078971862792969
    7. '.' → logprob: -6.203971862792969
    8. '_range' → logprob: -6.203971862792969
    9. '#' → logprob: -6.453971862792969
    10. '[' → logprob: -6.578971862792969

Token 1329: ' atte' (ID: 43312)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7148137092590332
    2. ')' → logprob: -1.7148137092590332
    3. '=' → logprob: -2.089813709259033
    4. '.' → logprob: -2.339813709259033
    5. ',' → logprob: -3.714813709259033
    6. ' =' → logprob: -4.089813709259033
    7. ']' → logprob: -4.714813709259033
    8. '[' → logprob: -4.839813709259033
    9. '#' → logprob: -4.964813709259033
    10. '_
' → logprob: -5.089813709259033

Token 1330: 'ign' (ID: 733)
  Prédit: 'ign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.0452982559800148
    2. 'inte' → logprob: -3.2952983379364014
    3. 'achable' → logprob: -6.920298099517822
    4. 'n' → logprob: -8.04529857635498
    5. 'ch' → logprob: -8.17029857635498
    6. 'ç' → logprob: -8.17029857635498
    7. '#' → logprob: -8.17029857635498
    8. 'ignée' → logprob: -8.29529857635498
    9. ']' → logprob: -8.35779857635498
    10. 'm' → logprob: -8.48279857635498

Token 1331: 'able' (ID: 562)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.3150198757648468
    2. 'inte' → logprob: -1.3150198459625244
    3. 'gn' → logprob: -8.440019607543945
    4. 'igne' → logprob: -8.815019607543945
    5. 'ind' → logprob: -8.940019607543945
    6. 'te' → logprob: -9.065019607543945
    7. 'int' → logprob: -9.065019607543945
    8. 'able' → logprob: -9.190019607543945
    9. 'g' → logprob: -9.440019607543945
    10. 'ing' → logprob: -9.565019607543945

Token 1332: ' i' (ID: 575)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1238374710083008
    2. ':' → logprob: -1.2488374710083008
    3. '[' → logprob: -2.498837471008301
    4. 'def' → logprob: -2.873837471008301
    5. '#' → logprob: -3.123837471008301
    6. ']' → logprob: -3.248837471008301
    7. '[
' → logprob: -3.373837471008301
    8. ':
' → logprob: -3.998837471008301
    9. ')' → logprob: -4.123837471008301
    10. '.' → logprob: -4.248837471008301

Token 1333: '_max' (ID: 13731)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9496281743049622
    2. ')' → logprob: -1.0746281147003174
    3. '_' → logprob: -1.9496281147003174
    4. ':' → logprob: -3.0746281147003174
    5. '.' → logprob: -3.5746281147003174
    6. ']' → logprob: -3.6996281147003174
    7. '#' → logprob: -4.8246283531188965
    8. ',' → logprob: -5.0746283531188965
    9. '>' → logprob: -5.3246283531188965
    10. '=' → logprob: -5.4496283531188965

Token 1334: ',
' (ID: 412)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3911246061325073
    2. ':' → logprob: -1.5161246061325073
    3. '_' → logprob: -1.8911246061325073
    4. '[' → logprob: -2.391124725341797
    5. ')' → logprob: -2.766124725341797
    6. '[i' → logprob: -3.016124725341797
    7. ']' → logprob: -3.516124725341797
    8. '[
' → logprob: -3.766124725341797
    9. '+
' → logprob: -3.766124725341797
    10. '=' → logprob: -4.016124725341797

Token 1335: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3116578161716461
    2. '.' → logprob: -3.1866579055786133
    3. ' #' → logprob: -3.3116579055786133
    4. ',' → logprob: -3.4366579055786133
    5. 'i' → logprob: -3.5616579055786133
    6. 'en' → logprob: -3.9366579055786133
    7. '=' → logprob: -3.9366579055786133
    8. ' i' → logprob: -4.061657905578613
    9. ':' → logprob: -4.311657905578613
    10. ' en' → logprob: -4.936657905578613

Token 1336: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13828285038471222
    2. 'et' → logprob: -2.8882827758789062
    3. 'en' → logprob: -3.6382827758789062
    4. ' en' → logprob: -4.263282775878906
    5. ' et' → logprob: -5.013282775878906
    6. ' #' → logprob: -5.013282775878906
    7. ',' → logprob: -5.513282775878906
    8. 'def' → logprob: -5.763282775878906
    9. 'i' → logprob: -6.513282775878906
    10. 'pour' → logprob: -7.013282775878906

Token 1337: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5439364314079285
    2. 'def' → logprob: -1.4189364910125732
    3. 'on' → logprob: -2.5439364910125732
    4. ' on' → logprob: -3.5439364910125732
    5. ' #' → logprob: -3.6689364910125732
    6. 'for' → logprob: -3.7939364910125732
    7. 'while' → logprob: -4.418936252593994
    8. 'pour' → logprob: -6.043936252593994
    9. 'if' → logprob: -6.793936252593994
    10. ' for' → logprob: -6.793936252593994

Token 1338: ' vér' (ID: 42524)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6048207879066467
    2. ' continue' → logprob: -1.854820728302002
    3. '#' → logprob: -2.479820728302002
    4. ' peux' → logprob: -2.479820728302002
    5. 'pe' → logprob: -3.479820728302002
    6. 'v' → logprob: -4.104820728302002
    7. ' vér' → logprob: -4.479820728302002
    8. 'contin' → logprob: -4.729820728302002
    9. 'vais' → logprob: -4.729820728302002
    10. 'check' → logprob: -5.229820728302002

Token 1339: 'ifie' (ID: 46409)
  Prédit: 'rif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rif' → logprob: -0.0017988269682973623
    2. 'ifie' → logprob: -6.626798629760742
    3. 'f' → logprob: -8.626798629760742
    4. 'if' → logprob: -9.001798629760742
    5. 'r' → logprob: -9.001798629760742
    6. 'ra' → logprob: -10.876798629760742
    7. 'fic' → logprob: -11.751798629760742
    8. 'fy' → logprob: -12.876798629760742
    9. 'ifier' → logprob: -13.001798629760742
    10. 'fit' → logprob: -13.251798629760742

Token 1340: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.11190306395292282
    2. 'si' → logprob: -2.736902952194214
    3. ' if' → logprob: -3.236902952194214
    4. 'if' → logprob: -6.611903190612793
    5. ' ' → logprob: -8.611903190612793
    6. ' s' → logprob: -9.361903190612793
    7. 's' → logprob: -10.111903190612793
    8. '_si' → logprob: -10.111903190612793
    9. '```' → logprob: -10.486903190612793
    10. ' ' → logprob: -10.611903190612793

Token 1341: ' on' (ID: 402)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.391655832529068
    2. 'i' → logprob: -1.1416558027267456
    3. ' on' → logprob: -6.266655921936035
    4. ' la' → logprob: -7.016655921936035
    5. ' ' → logprob: -7.516655921936035
    6. ' le' → logprob: -8.016655921936035
    7. 'le' → logprob: -8.266655921936035
    8. 'on' → logprob: -8.516655921936035
    9. 'la' → logprob: -8.516655921936035
    10. 'l' → logprob: -9.141655921936035

Token 1342: ' peut' (ID: 9216)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.9671141505241394
    2. ' est' → logprob: -1.8421142101287842
    3. 'pe' → logprob: -2.217114210128784
    4. ' peut' → logprob: -2.217114210128784
    5. '_possible' → logprob: -2.842114210128784
    6. ' peux' → logprob: -2.967114210128784
    7. '_' → logprob: -3.342114210128784
    8. '_est' → logprob: -3.717114210128784
    9. '_max' → logprob: -3.842114210128784
    10. 'possible' → logprob: -4.092113971710205

Token 1343: ' choisir' (ID: 47004)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.052351027727127075
    2. ' atteindre' → logprob: -3.6773509979248047
    3. 'aller' → logprob: -4.302350997924805
    4. 'arr' → logprob: -4.927350997924805
    5. 'faire' → logprob: -7.552350997924805
    6. 'l' → logprob: -7.552350997924805
    7. ' atte' → logprob: -7.927350997924805
    8. ' aller' → logprob: -8.177350997924805
    9. 'contin' → logprob: -8.177350997924805
    10. ' continuer' → logprob: -8.302350997924805

Token 1344: ' les' (ID: 1341)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.8878737092018127
    2. ' des' → logprob: -2.512873649597168
    3. ' i' → logprob: -2.637873649597168
    4. 'i' → logprob: -2.762873649597168
    5. 'une' → logprob: -2.762873649597168
    6. 'un' → logprob: -3.012873649597168
    7. 'les' → logprob: -3.262873649597168
    8. ' les' → logprob: -3.387873649597168
    9. 'des' → logprob: -3.637873649597168
    10. '```' → logprob: -3.637873649597168

Token 1345: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.561806857585907
    2. ' stops' → logprob: -1.1868069171905518
    3. ' arr' → logprob: -2.5618069171905518
    4. 'ar' → logprob: -3.6868069171905518
    5. 'st' → logprob: -4.936806678771973
    6. 'stations' → logprob: -5.686806678771973
    7. ' ar' → logprob: -5.811806678771973
    8. 'sem' → logprob: -6.436806678771973
    9. ' sem' → logprob: -6.561806678771973
    10. ' K' → logprob: -6.811806678771973

Token 1346: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00037466554204002023
    2. 'ê' → logprob: -8.250374794006348
    3. 'êt' → logprob: -10.125374794006348
    4. '^' → logprob: -10.750374794006348
    5. '#' → logprob: -11.250374794006348
    6. 'êtes' → logprob: -11.875374794006348
    7. '[' → logprob: -12.000374794006348
    8. 'ë' → logprob: -12.500374794006348
    9. '[i' → logprob: -12.875374794006348
    10. ']' → logprob: -13.125374794006348

Token 1347: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4125833511352539
    2. '_sem' → logprob: -1.662583351135254
    3. '_possible' → logprob: -2.912583351135254
    4. 'sem' → logprob: -3.912583351135254
    5. 's' → logprob: -3.912583351135254
    6. ' sem' → logprob: -4.287583351135254
    7. '_s' → logprob: -4.537583351135254
    8. '_sup' → logprob: -4.912583351135254
    9. ' supplémentaires' → logprob: -5.287583351135254
    10. '_stop' → logprob: -5.912583351135254

Token 1348: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.45218366384506226
    2. '[i' → logprob: -2.827183723449707
    3. 'express' → logprob: -2.952183723449707
    4. '_i' → logprob: -3.327183723449707
    5. 'ieurs' → logprob: -4.077183723449707
    6. ')' → logprob: -4.077183723449707
    7. ']' → logprob: -4.202183723449707
    8. '[' → logprob: -4.452183723449707
    9. '[
' → logprob: -4.702183723449707
    10. 'i' → logprob: -4.702183723449707

Token 1349: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44479095935821533
    2. ')' → logprob: -1.6947909593582153
    3. ':' → logprob: -2.694790840148926
    4. '.' → logprob: -4.194790840148926
    5. '#' → logprob: -4.319790840148926
    6. ',' → logprob: -4.444790840148926
    7. '_max' → logprob: -4.694790840148926
    8. '=' → logprob: -4.819790840148926
    9. ']' → logprob: -4.819790840148926
    10. '_stop' → logprob: -5.069790840148926

Token 1350: 'respect' (ID: 83438)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025708507746458054
    2. 'pour' → logprob: -4.6507086753845215
    3. ',' → logprob: -4.9007086753845215
    4. 'dans' → logprob: -5.9007086753845215
    5. '#' → logprob: -6.6507086753845215
    6. 'sur' → logprob: -7.4007086753845215
    7. ' pour' → logprob: -8.275708198547363
    8. '```' → logprob: -8.400708198547363
    9. 's' → logprob: -8.525708198547363
    10. ' supplémentaires' → logprob: -8.525708198547363

Token 1351: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.008057031780481339
    2. 'er' → logprob: -5.633057117462158
    3. 'eux' → logprob: -7.133057117462158
    4. ')' → logprob: -7.383057117462158
    5. ',' → logprob: -7.633057117462158
    6. ' des' → logprob: -7.758057117462158
    7. '=' → logprob: -7.758057117462158
    8. ' aux' → logprob: -8.008056640625
    9. 'e' → logprob: -8.133056640625
    10. '   ' → logprob: -8.758056640625

Token 1352: ' contraintes' (ID: 167366)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.42777228355407715
    2. 'la' → logprob: -1.6777722835540771
    3. ' la' → logprob: -2.552772283554077
    4. 'le' → logprob: -2.927772283554077
    5. ' les' → logprob: -3.552772283554077
    6. 'l' → logprob: -8.052772521972656
    7. ' le' → logprob: -8.302772521972656
    8. 'constraints' → logprob: -8.427772521972656
    9. 'K' → logprob: -9.302772521972656
    10. ' constraints' → logprob: -9.802772521972656

Token 1353: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0364658385515213
    2. '_' → logprob: -3.911465883255005
    3. ',' → logprob: -4.911465644836426
    4. '_)' → logprob: -5.911465644836426
    5. '_sur' → logprob: -7.286465644836426
    6. 'de' → logprob: -7.536465644836426
    7. '#' → logprob: -7.786465644836426
    8. 'sur' → logprob: -7.911465644836426
    9. '   ' → logprob: -8.036465644836426
    10. 'possible' → logprob: -8.161465644836426

Token 1354: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9907042980194092
    2. '_' → logprob: -1.4907042980194092
    3. ':' → logprob: -2.115704298019409
    4. '#' → logprob: -2.615704298019409
    5. ',' → logprob: -3.115704298019409
    6. '.' → logprob: -3.240704298019409
    7. ')' → logprob: -3.240704298019409
    8. '=' → logprob: -3.615704298019409
    9. ']' → logprob: -3.740704298019409
    10. ' def' → logprob: -4.365704536437988

Token 1355: ' telle' (ID: 70904)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07914038747549057
    2. ':
' → logprob: -3.7041404247283936
    3. '[' → logprob: -4.3291401863098145
    4. ')' → logprob: -4.7041401863098145
    5. 'def' → logprob: -4.9541401863098145
    6. '
' → logprob: -5.7041401863098145
    7. ']' → logprob: -5.8291401863098145
    8. '=' → logprob: -5.8291401863098145
    9. '#' → logprob: -5.9541401863098145
    10. ',' → logprob: -6.2041401863098145

Token 1356: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.02017500251531601
    2. 'que' → logprob: -4.020174980163574
    3. ' qu' → logprob: -7.270174980163574
    4. '=' → logprob: -7.770174980163574
    5. '_' → logprob: -8.020174980163574
    6. 'qu' → logprob: -9.270174980163574
    7. ' that' → logprob: -9.395174980163574
    8. '#' → logprob: -9.645174980163574
    9. ' ' → logprob: -10.020174980163574
    10. '```' → logprob: -10.020174980163574

Token 1357: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6989144086837769
    2. 'la' → logprob: -1.5739144086837769
    3. 'le' → logprob: -1.6989144086837769
    4. ' la' → logprob: -3.1989145278930664
    5. ' i' → logprob: -3.1989145278930664
    6. 'l' → logprob: -4.073914527893066
    7. ' le' → logprob: -4.823914527893066
    8. 'on' → logprob: -5.823914527893066
    9. '```' → logprob: -6.698914527893066
    10. ' on' → logprob: -7.198914527893066

Token 1358: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.8049468994140625
    2. 'i' → logprob: -1.1799468994140625
    3. 'code' → logprob: -2.5549468994140625
    4. ' code' → logprob: -3.3049468994140625
    5. 'max' → logprob: -3.3049468994140625
    6. 'station' → logprob: -4.1799468994140625
    7. ' i' → logprob: -4.3049468994140625
    8. 'next' → logprob: -4.5549468994140625
    9. ' station' → logprob: -4.8049468994140625
    10. 'distance' → logprob: -5.4299468994140625

Token 1359: ' pour' (ID: 1930)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.8891162872314453
    2. '_' → logprob: -1.0141162872314453
    3. ' de' → logprob: -3.1391162872314453
    4. 'max' → logprob: -3.3891162872314453
    5. '<=' → logprob: -3.6391162872314453
    6. 'est' → logprob: -3.7641162872314453
    7. ' d' → logprob: -4.139116287231445
    8. ')' → logprob: -4.139116287231445
    9. '_est' → logprob: -4.514116287231445
    10. '<' → logprob: -4.889116287231445

Token 1360: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.4639008343219757
    2. 'arr' → logprob: -1.7139008045196533
    3. 'aller' → logprob: -1.9639008045196533
    4. 're' → logprob: -3.3389008045196533
    5. 'être' → logprob: -4.838901042938232
    6. 'all' → logprob: -6.838901042938232
    7. 'par' → logprob: -6.963901042938232
    8. '#' → logprob: -6.963901042938232
    9. '_' → logprob: -7.213901042938232
    10. 'd' → logprob: -7.713901042938232

Token 1361: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04724254086613655
    2. 'la' → logprob: -3.5472426414489746
    3. ' i' → logprob: -4.422242641448975
    4. ' la' → logprob: -6.047242641448975
    5. '```' → logprob: -6.797242641448975
    6. ' cette' → logprob: -7.297242641448975
    7. 'une' → logprob: -8.297242164611816
    8. 'le' → logprob: -8.422242164611816
    9. 'station' → logprob: -9.047242164611816
    10. 'l' → logprob: -9.047242164611816

Token 1362: ' station' (ID: 11538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31693193316459656
    2. 'station' → logprob: -1.816931962966919
    3. ' station' → logprob: -2.816931962966919
    4. ' i' → logprob: -3.066931962966919
    5. 'max' → logprob: -7.69193172454834
    6. '```' → logprob: -7.81693172454834
    7. '_station' → logprob: -8.06693172454834
    8. 'stop' → logprob: -8.81693172454834
    9. '
' → logprob: -8.81693172454834
    10. 'token' → logprob: -8.94193172454834

Token 1363: ' i' (ID: 575)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.6122496724128723
    2. '_' → logprob: -0.8622496724128723
    3. ' _' → logprob: -4.862249851226807
    4. ' ' → logprob: -5.112249851226807
    5. 'max' → logprob: -5.112249851226807
    6. ' i' → logprob: -5.862249851226807
    7. ' max' → logprob: -6.112249851226807
    8. 'i' → logprob: -6.362249851226807
    9. ' suivante' → logprob: -6.362249851226807
    10. '_i' → logprob: -6.862249851226807

Token 1364: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.002541655208915472
    2. '+' → logprob: -6.627541542053223
    3. '_' → logprob: -6.877541542053223
    4. 'max' → logprob: -9.002541542053223
    5. '_MAX' → logprob: -11.627541542053223
    6. ' _' → logprob: -11.627541542053223
    7. '#' → logprob: -11.877541542053223
    8. '_
' → logprob: -12.002541542053223
    9. '```' → logprob: -12.002541542053223
    10. '\' → logprob: -12.502541542053223

Token 1365: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8636282682418823
    2. '+' → logprob: -0.8636282682418823
    3. '<=' → logprob: -2.613628387451172
    4. '_' → logprob: -3.238628387451172
    5. ' <=' → logprob: -4.613628387451172
    6. '.' → logprob: -5.238628387451172
    7. '#' → logprob: -5.488628387451172
    8. ']' → logprob: -5.738628387451172
    9. '```' → logprob: -5.738628387451172
    10. ')<=' → logprob: -5.988628387451172

Token 1366: ' ≤' (ID: 72554)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.017548400908708572
    2. ' <=' → logprob: -4.142548561096191
    3. '≤' → logprob: -7.267548561096191
    4. 'inf' → logprob: -7.642548561096191
    5. '```' → logprob: -8.642548561096191
    6. 'acceptable' → logprob: -10.267548561096191
    7. '\' → logprob: -10.892548561096191
    8. 'le' → logprob: -11.017548561096191
    9. ' inférieur' → logprob: -11.267548561096191
    10. 'infer' → logprob: -11.642548561096191

Token 1367: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.10020774602890015
    2. ' T' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.350207328796387
    4. ' ' → logprob: -14.350207328796387
    5. '	T' → logprob: -18.600208282470703
    6. '   ' → logprob: -18.600208282470703
    7. '  ' → logprob: -18.850208282470703
    8. '_T' → logprob: -19.100208282470703
    9. 't' → logprob: -19.225208282470703
    10. '`' → logprob: -19.975208282470703

Token 1368: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6445423364639282
    2. '[' → logprob: -1.5195423364639282
    3. 'def' → logprob: -2.5195422172546387
    4. '#' → logprob: -3.5195422172546387
    5. '=' → logprob: -3.7695422172546387
    6. '.' → logprob: -3.8945422172546387
    7. ']' → logprob: -4.144542217254639
    8. '(' → logprob: -4.394542217254639
    9. 'for' → logprob: -4.644542217254639
    10. '[]' → logprob: -4.644542217254639

Token 1369: '#
' (ID: 11240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.063001275062561
    2. 'def' → logprob: -2.0630011558532715
    3. '#' → logprob: -2.1880011558532715
    4. '[' → logprob: -2.3130011558532715
    5. ']' → logprob: -2.6880011558532715
    6. ')' → logprob: -3.3130011558532715
    7. 'for' → logprob: -3.5630011558532715
    8. ',' → logprob: -3.6880011558532715
    9. ':
' → logprob: -3.6880011558532715
    10. '[
' → logprob: -4.0630011558532715

Token 1370: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26958632469177246
    2. ':' → logprob: -2.0195863246917725
    3. '#' → logprob: -2.8945863246917725
    4. ':
' → logprob: -4.769586563110352
    5. ')' → logprob: -4.894586563110352
    6. ']' → logprob: -5.019586563110352
    7. 'i' → logprob: -5.269586563110352
    8. 'max' → logprob: -5.519586563110352
    9. '
' → logprob: -5.769586563110352
    10. '.' → logprob: -5.894586563110352

Token 1371: ' Vér' (ID: 159169)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10305056720972061
    2. '#' → logprob: -2.853050470352173
    3. 'low' → logprob: -4.228050708770752
    4. 'left' → logprob: -5.228050708770752
    5. 'max' → logprob: -5.603050708770752
    6. 'dp' → logprob: -5.728050708770752
    7. 'i' → logprob: -5.853050708770752
    8. 'import' → logprob: -6.228050708770752
    9. ')' → logprob: -6.728050708770752
    10. 'l' → logprob: -6.853050708770752

Token 1372: 'ifier' (ID: 4550)
  Prédit: 'ification'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.0072176759131252766
    2. 'ifier' → logprob: -5.132217884063721
    3. 'if' → logprob: -7.132217884063721
    4. '#' → logprob: -9.132217407226562
    5. '
' → logprob: -9.757217407226562
    6. '```' → logprob: -9.757217407226562
    7. 'f' → logprob: -10.132217407226562
    8. '=' → logprob: -10.257217407226562
    9. 'fic' → logprob: -10.507217407226562
    10. 'er' → logprob: -11.007217407226562

Token 1373: ' la' (ID: 557)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.9108273983001709
    2. 'if' → logprob: -1.160827398300171
    3. '_' → logprob: -1.910827398300171
    4. '(' → logprob: -3.660827398300171
    5. 'le' → logprob: -3.785827398300171
    6. 'def' → logprob: -3.910827398300171
    7. '_si' → logprob: -4.16082763671875
    8. 'que' → logprob: -4.41082763671875
    9. ' si' → logprob: -5.28582763671875
    10. '(len' → logprob: -5.53582763671875

Token 1374: ' condition' (ID: 7060)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.3685005009174347
    2. 'poss' → logprob: -2.2435004711151123
    3. ' station' → logprob: -2.3685004711151123
    4. 'suite' → logprob: -3.4935004711151123
    5. 'condition' → logprob: -3.6185004711151123
    6. 'possible' → logprob: -4.368500709533691
    7. 'next' → logprob: -4.993500709533691
    8. 'position' → logprob: -5.493500709533691
    9. 'solution' → logprob: -5.493500709533691
    10. 'su' → logprob: -5.743500709533691

Token 1375: ' est' (ID: 893)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3672235608100891
    2. ':' → logprob: -1.2422235012054443
    3. ':
' → logprob: -5.742223739624023
    4. ' def' → logprob: -5.867223739624023
    5. '=' → logprob: -5.992223739624023
    6. 'max' → logprob: -6.492223739624023
    7. ' =' → logprob: -6.617223739624023
    8. '#' → logprob: -6.992223739624023
    9. 'i' → logprob: -7.367223739624023
    10. '(' → logprob: -7.367223739624023

Token 1376: ' possible' (ID: 4149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1538699865341187
    2. '_' → logprob: -1.6538699865341187
    3. ' possible' → logprob: -2.153870105743408
    4. ' def' → logprob: -2.653870105743408
    5. '_possible' → logprob: -2.778870105743408
    6. ':' → logprob: -3.403870105743408
    7. 'possible' → logprob: -3.528870105743408
    8. ' lambda' → logprob: -3.778870105743408
    9. ' =' → logprob: -3.778870105743408
    10. '_ok' → logprob: -3.903870105743408

Token 1377: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23291511833667755
    2. ':' → logprob: -1.7329151630401611
    3. '(' → logprob: -3.982915163040161
    4. '#' → logprob: -5.732914924621582
    5. ' def' → logprob: -5.982914924621582
    6. ')' → logprob: -6.232914924621582
    7. '.' → logprob: -6.357914924621582
    8. '_' → logprob: -7.482914924621582
    9. ',' → logprob: -7.607914924621582
    10. ':def' → logprob: -7.982914924621582

Token 1378: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.01708456315100193
    2. 'un' → logprob: -4.76708459854126
    3. 'la' → logprob: -5.01708459854126
    4. ' une' → logprob: -7.39208459854126
    5. 'def' → logprob: -8.142084121704102
    6. 'dynamic' → logprob: -8.517084121704102
    7. '```' → logprob: -8.517084121704102
    8. 'dp' → logprob: -8.767084121704102
    9. '#' → logprob: -9.392084121704102
    10. 'fonction' → logprob: -10.142084121704102

Token 1379: ' DP' (ID: 51992)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7267096042633057
    2. 'dp' → logprob: -1.9767096042633057
    3. '#' → logprob: -2.1017096042633057
    4. ' tableau' → logprob: -2.8517096042633057
    5. 'table' → logprob: -2.9767096042633057
    6. 'fonction' → logprob: -3.3517096042633057
    7. 'programme' → logprob: -3.9767096042633057
    8. 'DP' → logprob: -4.351709365844727
    9. '
' → logprob: -4.976709365844727
    10. '```' → logprob: -4.976709365844727

Token 1380: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1281406879425049
    2. '[
' → logprob: -1.1281406879425049
    3. '[' → logprob: -2.253140687942505
    4. ':
' → logprob: -2.878140687942505
    5. '_' → logprob: -3.003140687942505
    6. 'dp' → logprob: -3.503140687942505
    7. '=' → logprob: -3.878140687942505
    8. '_
' → logprob: -3.878140687942505
    9. '=
' → logprob: -4.378140449523926
    10. 'def' → logprob: -4.378140449523926

Token 1381: ' O' (ID: 532)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.43515175580978394
    2. 'O' → logprob: -2.5601518154144287
    3. 'M' → logprob: -3.1851518154144287
    4. 'temps' → logprob: -3.3101518154144287
    5. 'stations' → logprob: -3.6851518154144287
    6. 'python' → logprob: -3.8101518154144287
    7. 'fonction' → logprob: -3.8101518154144287
    8. 'interval' → logprob: -4.18515157699585
    9. 'nombre' → logprob: -4.18515157699585
    10. 's' → logprob: -4.43515157699585

Token 1382: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.08526275306940079
    2. '(M' → logprob: -2.7102627754211426
    3. '(K' → logprob: -4.835262775421143
    4. '((' → logprob: -5.710262775421143
    5. '(' → logprob: -6.085262775421143
    6. 'log' → logprob: -7.460262775421143
    7. '(log' → logprob: -7.460262775421143
    8. '(T' → logprob: -9.210262298583984
    9. '(n' → logprob: -9.585262298583984
    10. 'K' → logprob: -10.210262298583984

Token 1383: '*K' (ID: 167586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5917391777038574
    2. '*' → logprob: -0.9667391777038574
    3. '^' → logprob: -2.9667391777038574
    4. ' *' → logprob: -5.091739177703857
    5. '*)' → logprob: -6.341739177703857
    6. '2' → logprob: -6.341739177703857
    7. '²' → logprob: -6.591739177703857
    8. '**' → logprob: -6.716739177703857
    9. '
' → logprob: -7.966739177703857
    10. '[' → logprob: -8.091739654541016

Token 1384: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009130131802521646
    2. '):' → logprob: -7.750913143157959
    3. '+' → logprob: -8.5009126663208
    4. ')
' → logprob: -9.6259126663208
    5. '[' → logprob: -9.8759126663208
    6. ' )' → logprob: -10.6259126663208
    7. ']' → logprob: -11.1259126663208
    8. ').' → logprob: -11.2509126663208
    9. '//' → logprob: -11.2509126663208
    10. '*' → logprob: -11.3759126663208

Token 1385: ' grâce' (ID: 31589)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6488665342330933
    2. 'def' → logprob: -1.2738665342330933
    3. '#' → logprob: -3.023866653442383
    4. ':
' → logprob: -3.523866653442383
    5. ']' → logprob: -3.523866653442383
    6. 'dp' → logprob: -4.398866653442383
    7. '[' → logprob: -4.523866653442383
    8. 'import' → logprob: -4.648866653442383
    9. '(' → logprob: -4.898866653442383
    10. '(
' → logprob: -5.023866653442383

Token 1386: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.24469435214996338
    2. ' à' → logprob: -1.8696943521499634
    3. '#' → logprob: -3.369694232940674
    4. 'aux' → logprob: -4.244694232940674
    5. 'au' → logprob: -5.244694232940674
    6. ' aux' → logprob: -5.744694232940674
    7. ''à' → logprob: -6.244694232940674
    8. 'import' → logprob: -6.494694232940674
    9. ' au' → logprob: -7.119694232940674
    10. '```' → logprob: -7.744694232940674

Token 1387: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.06508833169937134
    2. 'les' → logprob: -3.5650882720947266
    3. 'l' → logprob: -4.190088272094727
    4. '#' → logprob: -4.815088272094727
    5. 'le' → logprob: -5.565088272094727
    6. 'bis' → logprob: -5.940088272094727
    7. ' la' → logprob: -6.565088272094727
    8. 'une' → logprob: -7.565088272094727
    9. 'prefix' → logprob: -7.815088272094727
    10. 'len' → logprob: -7.940088272094727

Token 1388: ' taille' (ID: 41644)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4737319350242615
    2. 'def' → logprob: -1.9737319946289062
    3. 'dp' → logprob: -2.7237319946289062
    4. 'import' → logprob: -3.3487319946289062
    5. 'prefix' → logprob: -3.8487319946289062
    6. 'range' → logprob: -4.223731994628906
    7. 'for' → logprob: -4.223731994628906
    8. 'station' → logprob: -4.848731994628906
    9. '
' → logprob: -5.223731994628906
    10. '```' → logprob: -5.223731994628906

Token 1389: ' limitée' (ID: 173749)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4456418454647064
    2. ']' → logprob: -2.3206417560577393
    3. '=' → logprob: -2.4456417560577393
    4. '_' → logprob: -3.1956417560577393
    5. 'of' → logprob: -4.320641994476318
    6. 'max' → logprob: -4.320641994476318
    7. 'def' → logprob: -4.445641994476318
    8. 'de' → logprob: -4.570641994476318
    9. ',' → logprob: -4.570641994476318
    10. '+' → logprob: -4.820641994476318

Token 1390: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5186012983322144
    2. ']' → logprob: -1.6436012983322144
    3. ')' → logprob: -2.518601417541504
    4. '[' → logprob: -3.268601417541504
    5. '=' → logprob: -3.768601417541504
    6. 'import' → logprob: -4.518601417541504
    7. '_' → logprob: -4.893601417541504
    8. ',' → logprob: -5.018601417541504
    9. '[
' → logprob: -5.393601417541504
    10. '```' → logprob: -5.393601417541504

Token 1391: ' arr' (ID: 1724)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.22151538729667664
    2. 'interval' → logprob: -3.221515417098999
    3. 'arr' → logprob: -3.221515417098999
    4. 'segments' → logprob: -3.846515417098999
    5. 'stations' → logprob: -3.846515417098999
    6. 'K' → logprob: -3.971515417098999
    7. 'N' → logprob: -4.47151517868042
    8. 'M' → logprob: -4.59651517868042
    9. 'ranges' → logprob: -4.84651517868042
    10. '#' → logprob: -4.84651517868042

Token 1392: 'êts' (ID: 56582)
  Prédit: 'ays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ays' → logprob: -0.16219021379947662
    2. 'êts' → logprob: -2.1621901988983154
    3. 'ay' → logprob: -4.4121904373168945
    4. '```' → logprob: -5.0371904373168945
    5. ']' → logprob: -5.1621904373168945
    6. '[' → logprob: -5.1621904373168945
    7. '[]' → logprob: -6.7871904373168945
    8. '#' → logprob: -8.287190437316895
    9. '[
' → logprob: -8.412190437316895
    10. 'ayes' → logprob: -8.537190437316895

Token 1393: ' express' (ID: 6101)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.878687858581543
    2. '[' → logprob: -1.378687858581543
    3. '_' → logprob: -2.253687858581543
    4. '[
' → logprob: -2.753687858581543
    5. 'def' → logprob: -3.628687858581543
    6. '=' → logprob: -4.003687858581543
    7. '.' → logprob: -4.128687858581543
    8. '#' → logprob: -4.128687858581543
    9. ']' → logprob: -4.253687858581543
    10. ',' → logprob: -4.753687858581543

Token 1394: ' M' (ID: 391)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8890017867088318
    2. '#' → logprob: -1.5140018463134766
    3. 'dp' → logprob: -1.7640018463134766
    4. ':' → logprob: -3.1390018463134766
    5. ']' → logprob: -3.3890018463134766
    6. ')' → logprob: -3.6390018463134766
    7. '
' → logprob: -4.014001846313477
    8. ':
' → logprob: -4.389001846313477
    9. 'import' → logprob: -4.639001846313477
    10. '.' → logprob: -4.639001846313477

Token 1395: ' <=' (ID: 5017)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23943985998630524
    2. ':' → logprob: -3.3644399642944336
    3. ':
' → logprob: -3.3644399642944336
    4. 'def' → logprob: -4.114439964294434
    5. '[
' → logprob: -4.114439964294434
    6. '=
' → logprob: -4.239439964294434
    7. '=' → logprob: -4.614439964294434
    8. '_dp' → logprob: -4.614439964294434
    9. '#' → logprob: -4.864439964294434
    10. ']' → logprob: -5.114439964294434

Token 1396: ' K' (ID: 658)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5379916429519653
    2. '200' → logprob: -1.9129916429519653
    3. '50' → logprob: -2.287991523742676
    4. '20' → logprob: -3.162991523742676
    5. '500' → logprob: -3.287991523742676
    6. '300' → logprob: -3.662991523742676
    7. '10' → logprob: -3.912991523742676
    8. '30' → logprob: -4.662991523742676
    9. '40' → logprob: -4.912991523742676
    10. '150' → logprob: -4.912991523742676

Token 1397: ' <=' (ID: 5017)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.052919235080480576
    2. '#' → logprob: -4.302919387817383
    3. ':
' → logprob: -4.302919387817383
    4. 'def' → logprob: -4.302919387817383
    5. ':' → logprob: -5.927919387817383
    6. 'import' → logprob: -6.677919387817383
    7. 'DP' → logprob: -7.302919387817383
    8. 'max' → logprob: -7.302919387817383
    9. '#
' → logprob: -7.552919387817383
    10. '=
' → logprob: -7.802919387817383

Token 1398: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.27983731031417847
    2. '200' → logprob: -2.1548373699188232
    3. '500' → logprob: -3.0298373699188232
    4. '10' → logprob: -3.6548373699188232
    5. '50' → logprob: -4.029837131500244
    6. '300' → logprob: -4.279837131500244
    7. '20' → logprob: -4.654837131500244
    8. '150' → logprob: -5.404837131500244
    9. '400' → logprob: -5.779837131500244
    10. '250' → logprob: -6.154837131500244

Token 1399: '300' (ID: 4095)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9131140112876892
    2. '100' → logprob: -1.038114070892334
    3. '200' → logprob: -1.788114070892334
    4. '500' → logprob: -3.288114070892334
    5. '300' → logprob: -3.538114070892334
    6. '150' → logprob: -5.538114070892334
    7. '400' → logprob: -5.663114070892334
    8. '250' → logprob: -7.163114070892334
    9. '20' → logprob: -7.413114070892334
    10. '2' → logprob: -7.413114070892334

Token 1400: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1571485549211502
    2. 'def' → logprob: -3.532148599624634
    3. ':
' → logprob: -3.657148599624634
    4. '[' → logprob: -4.032148361206055
    5. 'dp' → logprob: -4.282148361206055
    6. '#' → logprob: -4.532148361206055
    7. '
' → logprob: -4.782148361206055
    8. 'import' → logprob: -5.532148361206055
    9. '[
' → logprob: -5.532148361206055
    10. '=' → logprob: -5.782148361206055

Token 1401: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.017536340281367302
    2. 'def' → logprob: -4.517536163330078
    3. '#' → logprob: -5.517536163330078
    4. 'DP' → logprob: -7.267536163330078
    5. 'max' → logprob: -8.017536163330078
    6. 'import' → logprob: -8.142536163330078
    7. 'i' → logprob: -8.517536163330078
    8. ':
' → logprob: -9.267536163330078
    9. 'for' → logprob: -9.392536163330078
    10. 'from' → logprob: -9.517536163330078

Token 1402: '#
' (ID: 11240)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.030111676082015038
    2. 'def' → logprob: -4.655111789703369
    3. '#' → logprob: -5.030111789703369
    4. ':' → logprob: -5.405111789703369
    5. 'i' → logprob: -6.030111789703369
    6. 'max' → logprob: -7.280111789703369
    7. 'DP' → logprob: -7.280111789703369
    8. ':
' → logprob: -7.405111789703369
    9. 'for' → logprob: -7.655111789703369
    10. 'from' → logprob: -7.655111789703369

Token 1403: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03421540930867195
    2. 'def' → logprob: -3.6592154502868652
    3. '#' → logprob: -5.034215450286865
    4. 'DP' → logprob: -7.659215450286865
    5. 'import' → logprob: -8.409214973449707
    6. 'INF' → logprob: -8.659214973449707
    7. '
' → logprob: -9.159214973449707
    8. 'max' → logprob: -9.159214973449707
    9. 'dist' → logprob: -9.159214973449707
    10. 'inf' → logprob: -10.409214973449707

Token 1404: ' Comme' (ID: 53252)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010938282124698162
    2. 'def' → logprob: -4.8859381675720215
    3. '#' → logprob: -6.3859381675720215
    4. 'DP' → logprob: -6.6359381675720215
    5. 'INF' → logprob: -8.88593864440918
    6. 'import' → logprob: -9.76093864440918
    7. 'dist' → logprob: -10.63593864440918
    8. 'from' → logprob: -10.76093864440918
    9. 'max' → logprob: -10.88593864440918
    10. 'inf' → logprob: -11.63593864440918

Token 1405: ' N' (ID: 478)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.9946759939193726
    2. ' on' → logprob: -2.119676113128662
    3. ' sys' → logprob: -2.244676113128662
    4. 'le' → logprob: -2.494676113128662
    5. ' la' → logprob: -2.619676113128662
    6. 'la' → logprob: -2.869676113128662
    7. ' le' → logprob: -2.869676113128662
    8. 'on' → logprob: -3.244676113128662
    9. '```' → logprob: -3.244676113128662
    10. '#' → logprob: -3.369676113128662

Token 1406: ' peut' (ID: 9216)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7582473754882812
    2. '<=' → logprob: -1.5082473754882812
    3. '=' → logprob: -1.8832473754882812
    4. ' =' → logprob: -2.2582473754882812
    5. '>' → logprob: -4.258247375488281
    6. '#' → logprob: -4.633247375488281
    7. ' >' → logprob: -4.883247375488281
    8. ',' → logprob: -5.008247375488281
    9. ')' → logprob: -5.508247375488281
    10. ' <' → logprob: -6.133247375488281

Token 1407: ' être' (ID: 9104)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.26520681381225586
    2. '>' → logprob: -2.390206813812256
    3. '=' → logprob: -3.265206813812256
    4. '<=' → logprob: -3.390206813812256
    5. 'be' → logprob: -4.015206813812256
    6. ' être' → logprob: -4.140206813812256
    7. 'être' → logprob: -4.390206813812256
    8. ' <=' → logprob: -4.765206813812256
    9. ''être' → logprob: -5.140206813812256
    10. ' >' → logprob: -6.390206813812256

Token 1408: ' très' (ID: 9412)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.3168579339981079
    2. 'up' → logprob: -2.1918578147888184
    3. 'grand' → logprob: -2.6918578147888184
    4. '```' → logprob: -3.4418578147888184
    5. '>' → logprob: -4.191857814788818
    6. 'jus' → logprob: -4.941857814788818
    7. 'very' → logprob: -5.066857814788818
    8. '
' → logprob: -5.066857814788818
    9. ' très' → logprob: -5.566857814788818
    10. 'plus' → logprob: -5.566857814788818

Token 1409: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.003778816433623433
    2. 'large' → logprob: -6.50377893447876
    3. ' grand' → logprob: -7.12877893447876
    4. 'gr' → logprob: -7.62877893447876
    5. '```' → logprob: -8.003778457641602
    6. 'long' → logprob: -8.003778457641602
    7. 'important' → logprob: -9.253778457641602
    8. '
' → logprob: -9.628778457641602
    9. 'import' → logprob: -10.003778457641602
    10. 'g' → logprob: -10.253778457641602

Token 1410: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8424414992332458
    2. ',' → logprob: -0.9674414992332458
    3. '```' → logprob: -3.3424415588378906
    4. ':
' → logprob: -3.8424415588378906
    5. '<|end|>' → logprob: -3.9674415588378906
    6. '[' → logprob: -4.092441558837891
    7. '#' → logprob: -4.217441558837891
    8. '
' → logprob: -4.217441558837891
    9. ',
' → logprob: -4.842441558837891
    10. ')' → logprob: -4.967441558837891

Token 1411: 'jus' (ID: 56271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20396606624126434
    2. '#' → logprob: -3.3289661407470703
    3. '):' → logprob: -3.9539661407470703
    4. '   ' → logprob: -4.07896614074707
    5. '```' → logprob: -4.20396614074707
    6. '),' → logprob: -4.70396614074707
    7. '+' → logprob: -4.82896614074707
    8. ' ' → logprob: -4.82896614074707
    9. '0' → logprob: -4.82896614074707
    10. ']' → logprob: -4.95396614074707

Token 1412: 'qu' (ID: 351)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5647549629211426
    2. ')' → logprob: -2.1897549629211426
    3. '\' → logprob: -3.0647549629211426
    4. '\n' → logprob: -3.1897549629211426
    5. '#' → logprob: -3.5647549629211426
    6. 'm' → logprob: -3.6897549629211426
    7. '_
' → logprob: -4.189754962921143
    8. '   ' → logprob: -4.314754962921143
    9. 'n' → logprob: -4.439754962921143
    10. 'r' → logprob: -4.439754962921143

Token 1413: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03965761512517929
    2. ')' → logprob: -4.7896575927734375
    3. ' =' → logprob: -4.7896575927734375
    4. '-' → logprob: -5.4146575927734375
    5. '```' → logprob: -5.6646575927734375
    6. '+' → logprob: -5.9146575927734375
    7. 'def' → logprob: -6.2896575927734375
    8. '=int' → logprob: -6.7896575927734375
    9. '#' → logprob: -7.1646575927734375
    10. ''à' → logprob: -7.1646575927734375

Token 1414: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0018305847188457847
    2. '300' → logprob: -6.876830577850342
    3. ' ' → logprob: -7.876830577850342
    4. '100' → logprob: -8.7518310546875
    5. '```' → logprob: -9.1268310546875
    6. '3' → logprob: -9.3768310546875
    7. 'int' → logprob: -10.8768310546875
    8. '`' → logprob: -11.7518310546875
    9. '
' → logprob: -11.8768310546875
    10. '1' → logprob: -11.8768310546875

Token 1415: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000305310997646302
    2. '300' → logprob: -8.87530517578125
    3. '100' → logprob: -9.25030517578125
    4. '```' → logprob: -10.25030517578125
    5. '3' → logprob: -11.50030517578125
    6. ' ' → logprob: -12.12530517578125
    7. '1' → logprob: -12.25030517578125
    8. '2' → logprob: -12.25030517578125
    9. 'int' → logprob: -12.75030517578125
    10. '200' → logprob: -13.87530517578125

Token 1416: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.15647351741790771
    2. '7' → logprob: -2.1564736366271973
    3. '8' → logprob: -4.906473636627197
    4. ' **' → logprob: -4.906473636627197
    5. '9' → logprob: -5.156473636627197
    6. '000' → logprob: -5.406473636627197
    7. '6' → logprob: -6.281473636627197
    8. '^' → logprob: -7.156473636627197
    9. '0' → logprob: -8.031473159790039
    10. '```' → logprob: -8.406473159790039

Token 1417: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.14598189294338226
    2. '7' → logprob: -2.145981788635254
    3. '6' → logprob: -5.020981788635254
    4. '8' → logprob: -5.145981788635254
    5. '**' → logprob: -5.645981788635254
    6. ' ' → logprob: -6.270981788635254
    7. '^' → logprob: -7.270981788635254
    8. '```' → logprob: -8.395981788635254
    9. ' **' → logprob: -10.520981788635254
    10. ')' → logprob: -11.020981788635254

Token 1418: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31753209233283997
    2. '):' → logprob: -2.1925320625305176
    3. ':' → logprob: -3.1925320625305176
    4. ',' → logprob: -3.3175320625305176
    5. '+' → logprob: -4.192532062530518
    6. '
' → logprob: -4.317532062530518
    7. '):
' → logprob: -4.317532062530518
    8. '[' → logprob: -4.942532062530518
    9. '<|end|>' → logprob: -5.317532062530518
    10. '```' → logprob: -5.442532062530518

Token 1419: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4976607859134674
    2. ':' → logprob: -1.747660756111145
    3. '#' → logprob: -2.1226608753204346
    4. '[' → logprob: -4.2476606369018555
    5. ',' → logprob: -4.4976606369018555
    6. 'def' → logprob: -4.7476606369018555
    7. '   ' → logprob: -4.7476606369018555
    8. '
' → logprob: -5.2476606369018555
    9. ' ' → logprob: -5.2476606369018555
    10. ' :' → logprob: -5.7476606369018555

Token 1420: ' fait' (ID: 7473)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.345670461654663
    2. '#' → logprob: -1.595670461654663
    3. 'contin' → logprob: -1.720670461654663
    4. ' continue' → logprob: -2.720670461654663
    5. 'def' → logprob: -3.095670461654663
    6. ' continues' → logprob: -3.220670461654663
    7. ' n' → logprob: -3.345670461654663
    8. 'n' → logprob: -3.470670461654663
    9. 'import' → logprob: -4.095670700073242
    10. '_' → logprob: -4.595670700073242

Token 1421: ' b' (ID: 287)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.02035640925168991
    2. 'un' → logprob: -4.270356178283691
    3. '#' → logprob: -6.270356178283691
    4. '```' → logprob: -6.895356178283691
    5. 'contin' → logprob: -7.270356178283691
    6. 'import' → logprob: -7.645356178283691
    7. 'la' → logprob: -7.770356178283691
    8. ' une' → logprob: -8.020356178283691
    9. 'ens' → logprob: -8.770356178283691
    10. '
' → logprob: -8.770356178283691

Token 1422: 'inaire' (ID: 41465)
  Prédit: 'inary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inary' → logprob: -0.34404677152633667
    2. 'in' → logprob: -1.3440468311309814
    3. '#' → logprob: -4.719046592712402
    4. 'n' → logprob: -4.969046592712402
    5. 'inaire' → logprob: -5.344046592712402
    6. 'inar' → logprob: -6.219046592712402
    7. 'search' → logprob: -6.594046592712402
    8. '```' → logprob: -6.719046592712402
    9. 'is' → logprob: -7.094046592712402
    10. 'i' → logprob: -7.344046592712402

Token 1423: ' sur' (ID: 1512)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.6598056554794312
    2. ' search' → logprob: -0.9098056554794312
    3. 'search' → logprob: -2.6598057746887207
    4. '_' → logprob: -5.159805774688721
    5. ' ' → logprob: -6.409805774688721
    6. ' _' → logprob: -7.159805774688721
    7. ')' → logprob: -7.284805774688721
    8. '_space' → logprob: -8.034805297851562
    9. ''' → logprob: -8.534805297851562
    10. 'space' → logprob: -8.784805297851562

Token 1424: ' station' (ID: 11538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1913963556289673
    2. 'la' → logprob: -1.1913963556289673
    3. 'i' → logprob: -1.4413963556289673
    4. 'N' → logprob: -3.1913962364196777
    5. ' la' → logprob: -3.1913962364196777
    6. 'le' → logprob: -3.5663962364196777
    7. ' i' → logprob: -4.691396236419678
    8. 'the' → logprob: -5.066396236419678
    9. 'stations' → logprob: -5.316396236419678
    10. 'int' → logprob: -5.566396236419678

Token 1425: ' reachable' (ID: 143580)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.516133725643158
    2. '_max' → logprob: -1.7661337852478027
    3. '_' → logprob: -2.3911337852478027
    4. ')' → logprob: -2.7661337852478027
    5. 'max' → logprob: -4.016133785247803
    6. '_search' → logprob: -4.766133785247803
    7. '_bound' → logprob: -4.891133785247803
    8. '#' → logprob: -5.891133785247803
    9. 's' → logprob: -6.141133785247803
    10. '_bounds' → logprob: -6.141133785247803

Token 1426: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8059800267219543
    2. ')' → logprob: -1.6809799671173096
    3. '.' → logprob: -2.6809799671173096
    4. ':' → logprob: -2.6809799671173096
    5. 'def' → logprob: -3.5559799671173096
    6. ',' → logprob: -3.5559799671173096
    7. '(' → logprob: -3.6809799671173096
    8. '_' → logprob: -3.8059799671173096
    9. 'max' → logprob: -3.8059799671173096
    10. '[' → logprob: -4.555980205535889

Token 1427: 'entre' (ID: 17935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03197181969881058
    2. '=' → logprob: -4.5319719314575195
    3. '<=' → logprob: -4.9069719314575195
    4. 'i' → logprob: -5.5319719314575195
    5. ',' → logprob: -5.7819719314575195
    6. 'max' → logprob: -6.0319719314575195
    7. ')
' → logprob: -7.0319719314575195
    8. '_' → logprob: -7.6569719314575195
    9. '`)' → logprob: -7.9069719314575195
    10. ' <=' → logprob: -8.28197193145752

Token 1428: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002160018077120185
    2. '0' → logprob: -6.87716007232666
    3. ' ' → logprob: -7.37716007232666
    4. 'S' → logprob: -7.87716007232666
    5. '```' → logprob: -10.12716007232666
    6. 'N' → logprob: -10.37716007232666
    7. '   ' → logprob: -12.00216007232666
    8. ' S' → logprob: -12.37716007232666
    9. 'max' → logprob: -12.50216007232666
    10. '2' → logprob: -12.87716007232666

Token 1429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13060832023620605
    2. 'S' → logprob: -2.130608320236206
    3. '0' → logprob: -5.630608558654785
    4. 'N' → logprob: -10.755608558654785
    5. '```' → logprob: -10.755608558654785
    6. '2' → logprob: -11.880608558654785
    7. ' ' → logprob: -12.130608558654785
    8. ' S' → logprob: -12.255608558654785
    9. '(S' → logprob: -12.755608558654785
    10. '`' → logprob: -12.755608558654785

Token 1430: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037959229666739702
    2. ' ,' → logprob: -6.128796100616455
    3. ' and' → logprob: -7.753796100616455
    4. '..' → logprob: -8.003795623779297
    5. 'and' → logprob: -8.253795623779297
    6. ')' → logprob: -8.753795623779297
    7. 'et' → logprob: -9.003795623779297
    8. ' et' → logprob: -9.128795623779297
    9. '...' → logprob: -9.753795623779297
    10. ',
' → logprob: -10.253795623779297

Token 1431: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005278345663100481
    2. ' N' → logprob: -5.25527811050415
    3. '10' → logprob: -10.130278587341309
    4. ' ' → logprob: -12.755278587341309
    5. ' ' → logprob: -13.630278587341309
    6. '`' → logprob: -15.755278587341309
    7. '1' → logprob: -15.880278587341309
    8. '100' → logprob: -16.505277633666992
    9. '```' → logprob: -17.005277633666992
    10. '	N' → logprob: -17.505277633666992

Token 1432: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14152783155441284
    2. '+' → logprob: -2.1415278911590576
    3. '...' → logprob: -5.7665276527404785
    4. '-' → logprob: -6.1415276527404785
    5. ',' → logprob: -6.2665276527404785
    6. '.' → logprob: -6.3915276527404785
    7. '#' → logprob: -6.5165276527404785
    8. ')...' → logprob: -7.1415276527404785
    9. ' +' → logprob: -7.2665276527404785
    10. ').' → logprob: -7.3915276527404785

Token 1433: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6002162098884583
    2. ')' → logprob: -0.9752162098884583
    3. '#' → logprob: -3.9752161502838135
    4. '):' → logprob: -4.100216388702393
    5. ',' → logprob: -4.475216388702393
    6. '=' → logprob: -4.475216388702393
    7. '_' → logprob: -5.475216388702393
    8. '.' → logprob: -5.475216388702393
    9. 'def' → logprob: -6.225216388702393
    10. '```' → logprob: -7.350216388702393

Token 1434: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.530616819858551
    2. '#' → logprob: -2.0306167602539062
    3. ')' → logprob: -2.5306167602539062
    4. 'def' → logprob: -2.5306167602539062
    5. 'max' → logprob: -3.4056167602539062
    6. '=' → logprob: -3.9056167602539062
    7. 'lower' → logprob: -4.280616760253906
    8. 'while' → logprob: -4.530616760253906
    9. ',' → logprob: -5.030616760253906
    10. '.' → logprob: -5.155616760253906

Token 1435: ' trouver' (ID: 23195)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9596093893051147
    2. 'le' → logprob: -1.5846093893051147
    3. 'max' → logprob: -2.0846095085144043
    4. '_' → logprob: -2.4596095085144043
    5. 'l' → logprob: -3.2096095085144043
    6. 'i' → logprob: -3.2096095085144043
    7. 'val' → logprob: -4.084609508514404
    8. 'v' → logprob: -4.334609508514404
    9. 'mid' → logprob: -4.334609508514404
    10. 'determ' → logprob: -4.709609508514404

Token 1436: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2938153147697449
    2. 'le' → logprob: -1.7938153743743896
    3. 'l' → logprob: -2.6688153743743896
    4. '```' → logprob: -4.4188151359558105
    5. 'une' → logprob: -5.9188151359558105
    6. ' la' → logprob: -6.4188151359558105
    7. 'max' → logprob: -7.4188151359558105
    8. '   ' → logprob: -7.5438151359558105
    9. ' ' → logprob: -7.9188151359558105
    10. '`' → logprob: -8.043815612792969

Token 1437: ' plus' (ID: 2932)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.07774009555578232
    2. 'max' → logprob: -2.82774019241333
    3. 'station' → logprob: -4.82774019241333
    4. 'best' → logprob: -5.82774019241333
    5. 'point' → logprob: -6.82774019241333
    6. 'possible' → logprob: -7.32774019241333
    7. 'm' → logprob: -7.45274019241333
    8. '
' → logprob: -7.95274019241333
    9. 'answer' → logprob: -7.95274019241333
    10. 'position' → logprob: -8.452739715576172

Token 1438: ' grande' (ID: 10094)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.3631361126899719
    2. 'gr' → logprob: -1.3631360530853271
    3. 'grand' → logprob: -3.863136053085327
    4. 'import' → logprob: -4.488136291503906
    5. '```' → logprob: -4.988136291503906
    6. 'long' → logprob: -5.738136291503906
    7. 'large' → logprob: -6.363136291503906
    8. 'prox' → logprob: -6.863136291503906
    9. 'loin' → logprob: -7.113136291503906
    10. '_pro' → logprob: -7.738136291503906

Token 1439: ' station' (ID: 11538)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22564703226089478
    2. '_station' → logprob: -2.47564697265625
    3. ')' → logprob: -3.72564697265625
    4. 'i' → logprob: -4.10064697265625
    5. 'station' → logprob: -4.35064697265625
    6. '_bound' → logprob: -4.47564697265625
    7. '#' → logprob: -4.60064697265625
    8. '_i' → logprob: -5.10064697265625
    9. '_possible' → logprob: -5.10064697265625
    10. 'possible' → logprob: -5.60064697265625

Token 1440: ' possible' (ID: 4149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.094196081161499
    2. '=' → logprob: -1.719196081161499
    3. '.' → logprob: -1.844196081161499
    4. '_' → logprob: -1.844196081161499
    5. ')' → logprob: -2.969196081161499
    6. 'def' → logprob: -3.094196081161499
    7. '#' → logprob: -3.594196081161499
    8. ',' → logprob: -4.469196319580078
    9. '\' → logprob: -5.219196319580078
    10. ':
' → logprob: -5.469196319580078

Token 1441: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11220595240592957
    2. 'def' → logprob: -2.612205982208252
    3. ':
' → logprob: -4.237205982208252
    4. '.' → logprob: -5.737205982208252
    5. '=' → logprob: -5.862205982208252
    6. '_' → logprob: -5.987205982208252
    7. ')' → logprob: -5.987205982208252
    8. '#' → logprob: -6.112205982208252
    9. ',' → logprob: -6.612205982208252
    10. 'import' → logprob: -7.862205982208252

Token 1442: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16244611144065857
    2. '#' → logprob: -3.6624460220336914
    3. ':' → logprob: -3.6624460220336914
    4. 'max' → logprob: -3.6624460220336914
    5. ')' → logprob: -4.037446022033691
    6. 'for' → logprob: -4.537446022033691
    7. ':
' → logprob: -5.037446022033691
    8. 'while' → logprob: -5.662446022033691
    9. '[' → logprob: -5.912446022033691
    10. '```' → logprob: -6.037446022033691

Token 1443: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1020786315202713
    2. 'low' → logprob: -2.602078676223755
    3. 'left' → logprob: -4.227078437805176
    4. 'lo' → logprob: -5.227078437805176
    5. 'l' → logprob: -6.352078437805176
    6. '#' → logprob: -7.477078437805176
    7. ':' → logprob: -8.727078437805176
    8. 'lower' → logprob: -8.852078437805176
    9. 'max' → logprob: -9.227078437805176
    10. 'L' → logprob: -9.602078437805176

Token 1444: ' Implementation' (ID: 60216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0435633547604084
    2. 'low' → logprob: -3.5435633659362793
    3. '#' → logprob: -5.418563365936279
    4. 'max' → logprob: -5.793563365936279
    5. 'left' → logprob: -6.293563365936279
    6. 'lo' → logprob: -6.418563365936279
    7. 'l' → logprob: -7.543563365936279
    8. ':' → logprob: -7.543563365936279
    9. 'mid' → logprob: -7.918563365936279
    10. 'lower' → logprob: -8.543562889099121

Token 1445: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019087657565250993
    2. '#' → logprob: -7.501908779144287
    3. 'import' → logprob: -7.751908779144287
    4. 'max' → logprob: -8.001908302307129
    5. ':' → logprob: -8.626908302307129
    6. '
' → logprob: -9.251908302307129
    7. 'low' → logprob: -9.751908302307129
    8. 'MAX' → logprob: -9.751908302307129
    9. 'class' → logprob: -10.001908302307129
    10. 'INF' → logprob: -10.626908302307129

Token 1446: ' résumé' (ID: 140184)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.05110219493508339
    2. 'Python' → logprob: -3.8011021614074707
    3. 'C' → logprob: -4.176102161407471
    4. 'cours' → logprob: -5.676102161407471
    5. '```' → logprob: -6.176102161407471
    6. 'def' → logprob: -6.551102161407471
    7. 'py' → logprob: -6.676102161407471
    8. 'suite' → logprob: -7.051102161407471
    9. 'ython' → logprob: -7.301102161407471
    10. 'cpp' → logprob: -7.426102161407471

Token 1447: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06092434749007225
    2. 'left' → logprob: -3.4359242916107178
    3. '#' → logprob: -4.560924530029297
    4. 'low' → logprob: -4.685924530029297
    5. 'dp' → logprob: -5.560924530029297
    6. 'lo' → logprob: -6.685924530029297
    7. '
' → logprob: -7.810924530029297
    8. 'l' → logprob: -7.810924530029297
    9. 'INF' → logprob: -7.935924530029297
    10. 'max' → logprob: -8.185924530029297

Token 1448: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4053948223590851
    2. 'low' → logprob: -1.4053947925567627
    3. 'left' → logprob: -2.6553947925567627
    4. 'lo' → logprob: -4.655395030975342
    5. '
' → logprob: -5.780395030975342
    6. '```' → logprob: -6.530395030975342
    7. '#' → logprob: -6.655395030975342
    8. 'l' → logprob: -6.905395030975342
    9. 'max' → logprob: -7.280395030975342
    10. 'lower' → logprob: -8.780394554138184

Token 1449: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003986862022429705
    2. 'low' → logprob: -6.128986835479736
    3. 'left' → logprob: -7.503986835479736
    4. 'INF' → logprob: -7.628986835479736
    5. '```' → logprob: -8.378987312316895
    6. '
' → logprob: -8.378987312316895
    7. 'lo' → logprob: -9.378987312316895
    8. '#' → logprob: -9.378987312316895
    9. 'LOW' → logprob: -10.003987312316895
    10. 'import' → logprob: -10.628987312316895

Token 1450: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0036922397557646036
    2. '#' → logprob: -6.878692150115967
    3. 'low' → logprob: -7.003692150115967
    4. 'left' → logprob: -7.253692150115967
    5. '
' → logprob: -7.503692150115967
    6. '```' → logprob: -8.753692626953125
    7. 'lo' → logprob: -9.128692626953125
    8. 'INF' → logprob: -9.753692626953125
    9. 'l' → logprob: -10.128692626953125
    10. 'import' → logprob: -10.628692626953125

Token 1451: ')' (ID: 8)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015068775974214077
    2. '#' → logprob: -5.015069007873535
    3. '=' → logprob: -5.640069007873535
    4. ' =' → logprob: -6.390069007873535
    5. ' def' → logprob: -6.515069007873535
    6. '_' → logprob: -7.640069007873535
    7. ')' → logprob: -8.015069007873535
    8. ':' → logprob: -9.140069007873535
    9. 'b' → logprob: -9.140069007873535
    10. 'for' → logprob: -9.265069007873535

Token 1452: ' Recherche' (ID: 114815)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010428416542708874
    2. '#' → logprob: -4.760428428649902
    3. 'bis' → logprob: -7.635428428649902
    4. 'import' → logprob: -8.135428428649902
    5. 'b' → logprob: -8.260428428649902
    6. 'max' → logprob: -8.510428428649902
    7. 'binary' → logprob: -8.760428428649902
    8. 'define' → logprob: -9.385428428649902
    9. 'for' → logprob: -9.510428428649902
    10. 'from' → logprob: -9.635428428649902

Token 1453: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.45653992891311646
    2. '_' → logprob: -1.4565398693084717
    3. '_binary' → logprob: -2.9565398693084717
    4. '_b' → logprob: -3.2065398693084717
    5. 'binary' → logprob: -4.206540107727051
    6. ')' → logprob: -4.831540107727051
    7. ' b' → logprob: -4.956540107727051
    8. ' _' → logprob: -5.956540107727051
    9. '```' → logprob: -6.206540107727051
    10. 'bis' → logprob: -6.956540107727051

Token 1454: 'inaire' (ID: 41465)
  Prédit: 'inary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inary' → logprob: -0.5063091516494751
    2. 'in' → logprob: -1.506309151649475
    3. 'i' → logprob: -2.2563090324401855
    4. 'n' → logprob: -2.7563090324401855
    5. 'y' → logprob: -6.5063090324401855
    6. 'inar' → logprob: -7.1313090324401855
    7. ')' → logprob: -7.2563090324401855
    8. '_in' → logprob: -7.6313090324401855
    9. '_binary' → logprob: -7.6313090324401855
    10. 'inaire' → logprob: -7.7563090324401855

Token 1455: ' sur' (ID: 1512)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.7639991044998169
    2. '_lower' → logprob: -2.8889989852905273
    3. '_' → logprob: -3.2639989852905273
    4. '(' → logprob: -3.2639989852905273
    5. 'for' → logprob: -3.2639989852905273
    6. '(
' → logprob: -3.3889989852905273
    7. 'def' → logprob: -3.5139989852905273
    8. '_low' → logprob: -3.6389989852905273
    9. 'low' → logprob: -3.6389989852905273
    10. 'lower' → logprob: -3.8889989852905273

Token 1456: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7500399351119995
    2. 'low' → logprob: -1.8750399351119995
    3. 'mid' → logprob: -2.625040054321289
    4. 'station' → logprob: -2.625040054321289
    5. 'lo' → logprob: -3.125040054321289
    6. 'le' → logprob: -3.250040054321289
    7. 'left' → logprob: -3.250040054321289
    8. ' la' → logprob: -3.500040054321289
    9. 'l' → logprob: -3.875040054321289
    10. 'i' → logprob: -4.250040054321289

Token 1457: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.01997940056025982
    2. 'position' → logprob: -5.019979476928711
    3. 'max' → logprob: -5.144979476928711
    4. 'borne' → logprob: -6.019979476928711
    5. 'pos' → logprob: -6.769979476928711
    6. 'possible' → logprob: -7.144979476928711
    7. 'i' → logprob: -7.519979476928711
    8. 'distance' → logprob: -8.144979476928711
    9. 'maximum' → logprob: -8.144979476928711
    10. 'right' → logprob: -8.144979476928711

Token 1458: ' max' (ID: 2999)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.1456290483474731
    2. '_low' → logprob: -1.2706290483474731
    3. 'max' → logprob: -1.5206290483474731
    4. '_' → logprob: -2.7706289291381836
    5. 'low' → logprob: -3.1456289291381836
    6. '_lo' → logprob: -3.8956289291381836
    7. '_left' → logprob: -4.395628929138184
    8. '_possible' → logprob: -4.895628929138184
    9. '_lower' → logprob: -5.270628929138184
    10. '```' → logprob: -5.270628929138184

Token 1459: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020291827619075775
    2. '_max' → logprob: -4.645291805267334
    3. '_bound' → logprob: -6.270291805267334
    4. 'max' → logprob: -6.270291805267334
    5. '_low' → logprob: -6.770291805267334
    6. '=' → logprob: -7.395291805267334
    7. '_possible' → logprob: -7.395291805267334
    8. '_lower' → logprob: -7.645291805267334
    9. ' _' → logprob: -7.895291805267334
    10. ')' → logprob: -8.020292282104492

Token 1460: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.0011639113072305918
    2. 'arr' → logprob: -7.751163959503174
    3. 'tester' → logprob: -8.751163482666016
    4. '
' → logprob: -8.876163482666016
    5. '_' → logprob: -9.626163482666016
    6. '```' → logprob: -9.751163482666016
    7. 'reachable' → logprob: -10.001163482666016
    8. 'at' → logprob: -10.126163482666016
    9. 'chercher' → logprob: -10.251163482666016
    10. '_at' → logprob: -10.376163482666016

Token 1461: '.
' (ID: 558)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.2808474898338318
    2. 'left' → logprob: -1.7808475494384766
    3. 'lo' → logprob: -3.2808475494384766
    4. 'l' → logprob: -3.4058475494384766
    5. 'def' → logprob: -5.655847549438477
    6. 'lower' → logprob: -8.155847549438477
    7. 'mid' → logprob: -8.280847549438477
    8. ':' → logprob: -8.530847549438477
    9. '#' → logprob: -8.905847549438477
    10. ',' → logprob: -8.905847549438477

Token 1462: '#' (ID: 2)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.7082470655441284
    2. 'def' → logprob: -0.9582470655441284
    3. 'left' → logprob: -2.208247184753418
    4. 'lo' → logprob: -4.833247184753418
    5. 'l' → logprob: -5.708247184753418
    6. 'mid' → logprob: -6.958247184753418
    7. '#' → logprob: -7.708247184753418
    8. ')' → logprob: -8.458247184753418
    9. '```' → logprob: -8.583247184753418
    10. '
' → logprob: -8.708247184753418

Token 1463: ' ' (ID: 220)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.23933157324790955
    2. 'left' → logprob: -1.739331603050232
    3. 'lo' → logprob: -3.7393314838409424
    4. 'def' → logprob: -4.3643317222595215
    5. 'l' → logprob: -7.4893317222595215
    6. 'L' → logprob: -10.614331245422363
    7. '```' → logprob: -10.614331245422363
    8. '
' → logprob: -10.864331245422363
    9. 'mid' → logprob: -10.864331245422363
    10. '#' → logprob: -10.989331245422363

Token 1464: '2' (ID: 17)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.24811643362045288
    2. 'left' → logprob: -1.7481164932250977
    3. 'lo' → logprob: -3.7481164932250977
    4. 'def' → logprob: -4.123116493225098
    5. 'l' → logprob: -5.498116493225098
    6. '#' → logprob: -6.623116493225098
    7. 'mid' → logprob: -9.123116493225098
    8. 'L' → logprob: -9.623116493225098
    9. 'lower' → logprob: -9.873116493225098
    10. ')' → logprob: -10.248116493225098

Token 1465: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025639608502388
    2. 'def' → logprob: -4.025639533996582
    3. ')
' → logprob: -5.025639533996582
    4. '#' → logprob: -7.650639533996582
    5. ' def' → logprob: -8.150639533996582
    6. ' )' → logprob: -9.775639533996582
    7. '(
' → logprob: -11.275639533996582
    8. ')#' → logprob: -11.525639533996582
    9. 'for' → logprob: -12.150639533996582
    10. ')`' → logprob: -12.275639533996582

Token 1466: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7944812774658203
    2. 'low' → logprob: -0.7944812774658203
    3. 'left' → logprob: -3.0444812774658203
    4. 'lo' → logprob: -3.2944812774658203
    5. '#' → logprob: -4.54448127746582
    6. 'l' → logprob: -7.91948127746582
    7. '
' → logprob: -8.29448127746582
    8. 'possible' → logprob: -9.54448127746582
    9. 'mid' → logprob: -9.79448127746582
    10. 'L' → logprob: -10.04448127746582

Token 1467: ' une' (ID: 2463)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.6468631029129028
    2. 'i' → logprob: -2.5218629837036133
    3. '_check' → logprob: -2.5218629837036133
    4. '_' → logprob: -3.1468629837036133
    5. 'l' → logprob: -3.3968629837036133
    6. 'each' → logprob: -3.3968629837036133
    7. 'la' → logprob: -3.5218629837036133
    8. ' i' → logprob: -3.8968629837036133
    9. 'mid' → logprob: -3.8968629837036133
    10. ' la' → logprob: -4.021862983703613

Token 1468: ' station' (ID: 11538)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.06459305435419083
    2. ')' → logprob: -4.0645928382873535
    3. ' given' → logprob: -4.9395928382873535
    4. ' donnée' → logprob: -5.0645928382873535
    5. 'fonction' → logprob: -5.3145928382873535
    6. 'candidate' → logprob: -5.6895928382873535
    7. 'v' → logprob: -5.8145928382873535
    8. 'test' → logprob: -5.9395928382873535
    9. 'cho' → logprob: -6.0645928382873535
    10. 'd' → logprob: -6.3145928382873535

Token 1469: ' x' (ID: 1215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16848230361938477
    2. '_max' → logprob: -2.2934823036193848
    3. 'max' → logprob: -3.7934823036193848
    4. ')' → logprob: -4.418482303619385
    5. '=' → logprob: -4.793482303619385
    6. '<=' → logprob: -5.293482303619385
    7. ' _' → logprob: -6.293482303619385
    8. '_to' → logprob: -6.918482303619385
    9. ' <=' → logprob: -7.043482303619385
    10. ' =' → logprob: -8.293481826782227

Token 1470: ' test' (ID: 1746)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0018460750579834
    2. ')' → logprob: -1.3768460750579834
    3. '<=' → logprob: -2.0018460750579834
    4. ' =' → logprob: -2.7518460750579834
    5. ':' → logprob: -2.8768460750579834
    6. '):' → logprob: -3.6268460750579834
    7. '
' → logprob: -3.6268460750579834
    8. '):
' → logprob: -3.7518460750579834
    9. ' <=' → logprob: -3.8768460750579834
    10. ':
' → logprob: -4.8768463134765625

Token 1471: 'ée' (ID: 2894)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18256142735481262
    2. ' ' → logprob: -2.8075613975524902
    3. '=' → logprob: -3.0575613975524902
    4. ':' → logprob: -4.43256139755249
    5. '_' → logprob: -4.43256139755249
    6. '):' → logprob: -5.18256139755249
    7. ']' → logprob: -5.30756139755249
    8. ' )' → logprob: -5.43256139755249
    9. ',' → logprob: -5.80756139755249
    10. '   ' → logprob: -5.93256139755249

Token 1472: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4179207980632782
    2. '=' → logprob: -1.4179208278656006
    3. '<=' → logprob: -2.7929208278656006
    4. ':
' → logprob: -3.9179208278656006
    5. ',' → logprob: -4.5429205894470215
    6. ' =' → logprob: -5.9179205894470215
    7. ' <=' → logprob: -6.5429205894470215
    8. '==' → logprob: -7.1679205894470215
    9. '>=' → logprob: -7.1679205894470215
    10. ' on' → logprob: -8.16792106628418

Token 1473: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8183277249336243
    2. '#' → logprob: -1.0683276653289795
    3. 'def' → logprob: -2.0683276653289795
    4. ' on' → logprob: -3.5683276653289795
    5. '   ' → logprob: -4.193327903747559
    6. 'possible' → logprob: -4.443327903747559
    7. 'faire' → logprob: -4.568327903747559
    8. 'for' → logprob: -5.318327903747559
    9. ' #' → logprob: -5.693327903747559
    10. 'calcul' → logprob: -6.693327903747559

Token 1474: ' teste' (ID: 62670)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.286990761756897
    2. 'pe' → logprob: -1.911990761756897
    3. 'fait' → logprob: -2.1619906425476074
    4. '#' → logprob: -2.2869906425476074
    5. 'def' → logprob: -3.0369906425476074
    6. '<=' → logprob: -3.1619906425476074
    7. 'v' → logprob: -3.5369906425476074
    8. 'do' → logprob: -3.9119906425476074
    9. 'est' → logprob: -4.161990642547607
    10. 'contin' → logprob: -4.286990642547607

Token 1475: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.5392142534255981
    2. 'si' → logprob: -1.5392142534255981
    3. ' if' → logprob: -2.4142141342163086
    4. 'if' → logprob: -2.7892141342163086
    5. 'la' → logprob: -3.6642141342163086
    6. ' la' → logprob: -4.539214134216309
    7. '   ' → logprob: -4.914214134216309
    8. 'le' → logprob: -6.414214134216309
    9. ' ' → logprob: -6.914214134216309
    10. 's' → logprob: -7.289214134216309

Token 1476: ' temps' (ID: 11160)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33599478006362915
    2. ' x' → logprob: -1.3359947204589844
    3. ' on' → logprob: -4.210994720458984
    4. 'on' → logprob: -5.085994720458984
    5. 'possible' → logprob: -7.585994720458984
    6. ' la' → logprob: -8.335994720458984
    7. '```' → logprob: -8.460994720458984
    8. ' possible' → logprob: -8.710994720458984
    9. 'la' → logprob: -9.585994720458984
    10. 'le' → logprob: -9.960994720458984

Token 1477: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.032586097717285156
    2. '<=' → logprob: -4.282586097717285
    3. '_est' → logprob: -5.032586097717285
    4. '_max' → logprob: -5.157586097717285
    5. '_to' → logprob: -6.532586097717285
    6. 'est' → logprob: -6.657586097717285
    7. '_possible' → logprob: -7.782586097717285
    8. 'max' → logprob: -8.282586097717285
    9. 'de' → logprob: -8.532586097717285
    10. '=' → logprob: -8.782586097717285

Token 1478: ' ≤' (ID: 72554)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12217894196510315
    2. '<=' → logprob: -2.9971790313720703
    3. 'est' → logprob: -3.4971790313720703
    4. '_est' → logprob: -4.49717903137207
    5. 'pour' → logprob: -4.99717903137207
    6. 'de' → logprob: -5.74717903137207
    7. '_possible' → logprob: -5.87217903137207
    8. '_p' → logprob: -6.24717903137207
    9. 'd' → logprob: -6.87217903137207
    10. '=' → logprob: -6.99717903137207

Token 1479: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.07055005431175232
    2. 'x' → logprob: -2.695549964904785
    3. ' T' → logprob: -7.570549964904785
    4. ' x' → logprob: -9.445549964904785
    5. '```' → logprob: -11.195549964904785
    6. ' ' → logprob: -13.820549964904785
    7. '`' → logprob: -13.820549964904785
    8. ' ' → logprob: -14.070549964904785
    9. '_T' → logprob: -14.195549964904785
    10. '
' → logprob: -14.820549964904785

Token 1480: ' possible' (ID: 4149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04321065545082092
    2. ':' → logprob: -3.293210744857788
    3. ':
' → logprob: -5.668210506439209
    4. '#' → logprob: -7.168210506439209
    5. 'while' → logprob: -8.418210983276367
    6. ']' → logprob: -8.918210983276367
    7. 'low' → logprob: -9.168210983276367
    8. 'if' → logprob: -9.418210983276367
    9. ',' → logprob: -9.793210983276367
    10. ')' → logprob: -9.918210983276367

Token 1481: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03610992431640625
    2. '(' → logprob: -4.286109924316406
    3. 'def' → logprob: -4.411109924316406
    4. '[' → logprob: -6.411109924316406
    5. ':
' → logprob: -6.661109924316406
    6. '.' → logprob: -6.661109924316406
    7. ')' → logprob: -7.161109924316406
    8. ',' → logprob: -7.286109924316406
    9. '():' → logprob: -7.411109924316406
    10. '=' → logprob: -7.786109924316406

Token 1482: ' chois' (ID: 33475)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.26933175325393677
    2. 'cho' → logprob: -2.519331693649292
    3. 'calcul' → logprob: -2.644331693649292
    4. 'all' → logprob: -3.519331693649292
    5. 'dp' → logprob: -4.269331932067871
    6. ' utilisant' → logprob: -5.644331932067871
    7. 'continu' → logprob: -5.894331932067871
    8. 'effect' → logprob: -5.894331932067871
    9. 'respect' → logprob: -5.894331932067871
    10. 'plac' → logprob: -6.144331932067871

Token 1483: 'issant' (ID: 31359)
  Prédit: 'ction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ction' → logprob: -0.27288392186164856
    2. 'ant' → logprob: -2.647883892059326
    3. 'ignant' → logprob: -2.647883892059326
    4. 'vant' → logprob: -4.022883892059326
    5. 'quence' → logprob: -4.397883892059326
    6. 'ving' → logprob: -4.522883892059326
    7. 'pt' → logprob: -4.647883892059326
    8. 'çant' → logprob: -4.647883892059326
    9. 'nant' → logprob: -5.397883892059326
    10. 'ption' → logprob: -5.647883892059326

Token 1484: ' les' (ID: 1341)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6394113898277283
    2. 'les' → logprob: -2.389411449432373
    3. ' les' → logprob: -2.764411449432373
    4. 'le' → logprob: -3.139411449432373
    5. ' des' → logprob: -3.264411449432373
    6. 'arr' → logprob: -3.764411449432373
    7. ' ' → logprob: -3.764411449432373
    8. '_' → logprob: -3.764411449432373
    9. '`' → logprob: -3.764411449432373
    10. 'un' → logprob: -4.139411449432373

Token 1485: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.12136024981737137
    2. ' stops' → logprob: -2.4963603019714355
    3. ' arr' → logprob: -4.3713603019714355
    4. 'st' → logprob: -4.4963603019714355
    5. 'sem' → logprob: -5.3713603019714355
    6. 'ar' → logprob: -7.3713603019714355
    7. 'stations' → logprob: -7.4963603019714355
    8. 'x' → logprob: -7.7463603019714355
    9. ' sem' → logprob: -7.8713603019714355
    10. ' ' → logprob: -8.371359825134277

Token 1486: 'êts' (ID: 56582)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7718918323516846
    2. ' stops' → logprob: -0.8968918323516846
    3. 'ts' → logprob: -2.8968918323516846
    4. ']' → logprob: -3.8968918323516846
    5. '#' → logprob: -4.2718915939331055
    6. 'êts' → logprob: -4.7718915939331055
    7. 'Stops' → logprob: -5.5218915939331055
    8. '[' → logprob: -5.6468915939331055
    9. ' ]' → logprob: -5.7718915939331055
    10. 's' → logprob: -5.8968915939331055

Token 1487: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8055508732795715
    2. '_sem' → logprob: -1.1805508136749268
    3. '_max' → logprob: -2.8055508136749268
    4. 'sem' → logprob: -3.0555508136749268
    5. '_stop' → logprob: -3.0555508136749268
    6. '_possible' → logprob: -3.3055508136749268
    7. '_s' → logprob: -4.805551052093506
    8. ' sem' → logprob: -5.055551052093506
    9. ')' → logprob: -5.180551052093506
    10. '_se' → logprob: -5.305551052093506

Token 1488: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.5414361953735352
    2. 'express' → logprob: -2.041436195373535
    3. 'op' → logprob: -3.541436195373535
    4. 'e' → logprob: -3.791436195373535
    5. 'ormais' → logprob: -4.041436195373535
    6. 'i' → logprob: -4.291436195373535
    7. 'top' → logprob: -4.541436195373535
    8. '```' → logprob: -4.666436195373535
    9. ')' → logprob: -4.916436195373535
    10. 'em' → logprob: -4.978936195373535

Token 1489: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02016168087720871
    2. ':' → logprob: -5.3951616287231445
    3. ')' → logprob: -5.7701616287231445
    4. '```' → logprob: -5.8951616287231445
    5. '.' → logprob: -6.7701616287231445
    6. '_stop' → logprob: -7.0201616287231445
    7. '_token' → logprob: -7.1451616287231445
    8. ' _' → logprob: -7.1451616287231445
    9. '#' → logprob: -7.5201616287231445
    10. '[' → logprob: -7.5201616287231445

Token 1490: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.239964097738266
    2. 'def' → logprob: -1.6149641275405884
    3. '[' → logprob: -5.489964008331299
    4. ':
' → logprob: -5.739964008331299
    5. '#' → logprob: -6.239964008331299
    6. ')' → logprob: -6.989964008331299
    7. ' def' → logprob: -7.489964008331299
    8. '.' → logprob: -7.739964008331299
    9. ']' → logprob: -7.739964008331299
    10. '(' → logprob: -7.739964008331299

Token 1491: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01165293250232935
    2. ':' → logprob: -5.011652946472168
    3. ':
' → logprob: -5.636652946472168
    4. '#' → logprob: -7.886652946472168
    5. ')' → logprob: -9.011652946472168
    6. '(
' → logprob: -9.136652946472168
    7. ']' → logprob: -9.136652946472168
    8. 'import' → logprob: -9.386652946472168
    9. ' def' → logprob: -9.761652946472168
    10. 'while' → logprob: -9.886652946472168

Token 1492: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0049194470047950745
    2. 'low' → logprob: -5.879919528961182
    3. 'left' → logprob: -6.504919528961182
    4. '#' → logprob: -7.879919528961182
    5. 'lo' → logprob: -8.754919052124023
    6. 'l' → logprob: -10.254919052124023
    7. ')' → logprob: -11.379919052124023
    8. '
' → logprob: -12.254919052124023
    9. 'max' → logprob: -12.379919052124023
    10. 'import' → logprob: -13.004919052124023

Token 1493: ')' (ID: 8)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025224594399333
    2. '#' → logprob: -4.150224685668945
    3. ')' → logprob: -5.275224685668945
    4. ' def' → logprob: -6.775224685668945
    5. '
' → logprob: -7.275224685668945
    6. ':
' → logprob: -7.775224685668945
    7. ')
' → logprob: -7.900224685668945
    8. ':' → logprob: -8.150224685668945
    9. 'for' → logprob: -8.400224685668945
    10. '=' → logprob: -8.775224685668945

Token 1494: ' DP' (ID: 51992)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23377792537212372
    2. 'low' → logprob: -2.1087779998779297
    3. 'left' → logprob: -2.9837779998779297
    4. 'lo' → logprob: -4.23377799987793
    5. 'dp' → logprob: -4.73377799987793
    6. '#' → logprob: -4.85877799987793
    7. 'l' → logprob: -5.48377799987793
    8. 'from' → logprob: -7.60877799987793
    9. '
' → logprob: -8.10877799987793
    10. 'import' → logprob: -9.23377799987793

Token 1495: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.709004819393158
    2. ':' → logprob: -1.0840048789978027
    3. 'dp' → logprob: -2.5840048789978027
    4. ']' → logprob: -3.5840048789978027
    5. ':
' → logprob: -4.334004878997803
    6. '#' → logprob: -4.959004878997803
    7. '[' → logprob: -5.209004878997803
    8. ')' → logprob: -5.584004878997803
    9. '=' → logprob: -5.709004878997803
    10. ',' → logprob: -5.709004878997803

Token 1496: ' arr' (ID: 1724)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03650549054145813
    2. 'M' → logprob: -4.411505699157715
    3. ' i' → logprob: -5.036505699157715
    4. 'interval' → logprob: -5.411505699157715
    5. 'l' → logprob: -5.661505699157715
    6. 'm' → logprob: -6.411505699157715
    7. 'S' → logprob: -6.911505699157715
    8. 'j' → logprob: -7.036505699157715
    9. 'the' → logprob: -7.161505699157715
    10. 'les' → logprob: -7.411505699157715

Token 1497: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.2478625774383545
    2. 'êt' → logprob: -2.2478625774383545
    3. 'ê' → logprob: -3.4978625774383545
    4. '_' → logprob: -3.6228625774383545
    5. '_i' → logprob: -3.8728625774383545
    6. 'ivée' → logprob: -4.747862815856934
    7. '[i' → logprob: -5.122862815856934
    8. 'ête' → logprob: -5.372862815856934
    9. '[' → logprob: -5.622862815856934
    10. ']' → logprob: -5.747862815856934

Token 1498: ' express' (ID: 6101)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5324003100395203
    2. ':' → logprob: -1.532400369644165
    3. 'def' → logprob: -2.157400369644165
    4. ')' → logprob: -3.782400369644165
    5. '[' → logprob: -4.157400131225586
    6. '=' → logprob: -4.532400131225586
    7. ']:' → logprob: -5.657400131225586
    8. ',' → logprob: -5.782400131225586
    9. 'for' → logprob: -5.782400131225586
    10. '.' → logprob: -6.032400131225586

Token 1499: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5738869309425354
    2. 'def' → logprob: -0.9488869309425354
    3. ':
' → logprob: -3.1988868713378906
    4. '
' → logprob: -6.448886871337891
    5. ')' → logprob: -6.573886871337891
    6. ':def' → logprob: -7.073886871337891
    7. '#' → logprob: -7.573886871337891
    8. ',' → logprob: -7.573886871337891
    9. '):' → logprob: -7.698886871337891
    10. ']' → logprob: -7.698886871337891

Token 1500: ' arr' (ID: 1724)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.849829912185669
    2. 'stations' → logprob: -0.974829912185669
    3. ' K' → logprob: -3.224829912185669
    4. 'st' → logprob: -3.349829912185669
    5. 'arr' → logprob: -3.474829912185669
    6. ' stops' → logprob: -3.724829912185669
    7. 'segments' → logprob: -3.974829912185669
    8. 'x' → logprob: -4.59982967376709
    9. 'local' → logprob: -5.22482967376709
    10. 'sem' → logprob: -5.22482967376709

Token 1501: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.04695107042789459
    2. 'êt' → logprob: -3.4219510555267334
    3. 'ê' → logprob: -4.7969512939453125
    4. '^' → logprob: -5.5469512939453125
    5. '_' → logprob: -7.7969512939453125
    6. '[
' → logprob: -9.046951293945312
    7. '[' → logprob: -9.296951293945312
    8. '#' → logprob: -9.671951293945312
    9. '[i' → logprob: -9.921951293945312
    10. '__' → logprob: -9.921951293945312

Token 1502: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.21410754323005676
    2. 'semi' → logprob: -2.9641075134277344
    3. 's' → logprob: -3.0891075134277344
    4. '_sem' → logprob: -3.5891075134277344
    5. ' sem' → logprob: -3.9641075134277344
    6. 'se' → logprob: -4.714107513427734
    7. 'semp' → logprob: -4.964107513427734
    8. '_se' → logprob: -4.964107513427734
    9. 'semicolon' → logprob: -4.964107513427734
    10. 'import' → logprob: -5.589107513427734

Token 1503: 'iexpress' (ID: 190732)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.748805046081543
    2. 'iexpress' → logprob: -0.748805046081543
    3. '_op' → logprob: -3.998805046081543
    4. 'i' → logprob: -4.998805046081543
    5. 'oppins' → logprob: -6.373805046081543
    6. '[i' → logprob: -6.373805046081543
    7. '```' → logprob: -6.498805046081543
    8. 'ip' → logprob: -6.498805046081543
    9. 'I' → logprob: -6.748805046081543
    10. '#' → logprob: -6.936305046081543

Token 1504: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5251916646957397
    2. 'def' → logprob: -1.1501916646957397
    3. ':
' → logprob: -3.7751917839050293
    4. '[' → logprob: -3.9001917839050293
    5. ']' → logprob: -5.025191783905029
    6. ')' → logprob: -5.150191783905029
    7. '[]' → logprob: -5.650191783905029
    8. ',' → logprob: -5.650191783905029
    9. '(' → logprob: -5.900191783905029
    10. '#' → logprob: -6.025191783905029

Token 1505: '#
' (ID: 11240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3961154520511627
    2. 'def' → logprob: -1.1461154222488403
    3. ':
' → logprob: -5.896115303039551
    4. ']' → logprob: -6.271115303039551
    5. ')' → logprob: -6.771115303039551
    6. '):' → logprob: -7.271115303039551
    7. '[' → logprob: -7.646115303039551
    8. ':def' → logprob: -7.646115303039551
    9. ']:' → logprob: -7.771115303039551
    10. '#' → logprob: -8.02111530303955

Token 1506: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006083175539970398
    2. 'dp' → logprob: -8.125608444213867
    3. '#' → logprob: -9.000608444213867
    4. 'left' → logprob: -9.500608444213867
    5. 'low' → logprob: -9.875608444213867
    6. ')' → logprob: -10.875608444213867
    7. 'max' → logprob: -11.375608444213867
    8. 'pos' → logprob: -11.750608444213867
    9. 'i' → logprob: -12.250608444213867
    10. 'l' → logprob: -12.875608444213867

Token 1507: ' Les' (ID: 7029)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00044592362246476114
    2. 'low' → logprob: -8.750446319580078
    3. 'left' → logprob: -9.000446319580078
    4. '
' → logprob: -9.750446319580078
    5. '#' → logprob: -9.875446319580078
    6. 'dp' → logprob: -11.625446319580078
    7. 'lo' → logprob: -11.625446319580078
    8. 'import' → logprob: -11.875446319580078
    9. 'INF' → logprob: -12.000446319580078
    10. '```' → logprob: -12.000446319580078

Token 1508: ' temps' (ID: 11160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12733520567417145
    2. 'dp' → logprob: -2.7523353099823
    3. 'max' → logprob: -3.7523353099823
    4. '#' → logprob: -4.002335071563721
    5. '_' → logprob: -5.377335071563721
    6. 'K' → logprob: -6.627335071563721
    7. 'remaining' → logprob: -6.752335071563721
    8. 'for' → logprob: -7.002335071563721
    9. '```' → logprob: -7.127335071563721
    10. 'MAX' → logprob: -7.252335071563721

Token 1509: ' sur' (ID: 1512)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3461860716342926
    2. '_' → logprob: -1.9711860418319702
    3. '#' → logprob: -2.3461861610412598
    4. ':' → logprob: -4.47118616104126
    5. 'def' → logprob: -4.72118616104126
    6. ' =' → logprob: -5.34618616104126
    7. 'for' → logprob: -5.34618616104126
    8. 'max' → logprob: -5.34618616104126
    9. ')' → logprob: -5.47118616104126
    10. '_max' → logprob: -5.72118616104126

Token 1510: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9314327239990234
    2. 'segments' → logprob: -1.0564327239990234
    3. 'segment' → logprob: -2.4314327239990234
    4. 'stations' → logprob: -2.8064327239990234
    5. 'la' → logprob: -3.6814327239990234
    6. 'l' → logprob: -3.8064327239990234
    7. 'local' → logprob: -4.431432723999023
    8. 'le' → logprob: -4.556432723999023
    9. 'une' → logprob: -4.931432723999023
    10. 'station' → logprob: -5.056432723999023

Token 1511: ' interv' (ID: 37413)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.15003539621829987
    2. 'sem' → logprob: -2.4000353813171387
    3. '#' → logprob: -3.6500353813171387
    4. 'segment' → logprob: -5.400035381317139
    5. ' segments' → logprob: -5.525035381317139
    6. 'arr' → logprob: -6.525035381317139
    7. 'stations' → logprob: -6.525035381317139
    8. 's' → logprob: -6.650035381317139
    9. 'S' → logprob: -6.650035381317139
    10. 'express' → logprob: -6.775035381317139

Token 1512: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.6594451069831848
    2. 'als' → logprob: -0.7844451069831848
    3. 'vals' → logprob: -4.159445285797119
    4. 'val' → logprob: -5.659445285797119
    5. 'alles' → logprob: -5.909445285797119
    6. '#' → logprob: -6.784445285797119
    7. ']' → logprob: -7.534445285797119
    8. 'ale' → logprob: -7.909445285797119
    9. '```' → logprob: -8.034444808959961
    10. 'ales' → logprob: -8.284444808959961

Token 1513: ' sont' (ID: 5242)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0522246360778809
    2. '=' → logprob: -1.5522246360778809
    3. 's' → logprob: -2.052224636077881
    4. '[i' → logprob: -2.427224636077881
    5. ' =' → logprob: -2.802224636077881
    6. 'between' → logprob: -3.177224636077881
    7. '[' → logprob: -3.677224636077881
    8. 'entre' → logprob: -4.427224636077881
    9. '_between' → logprob: -4.677224636077881
    10. '_' → logprob: -4.802224636077881

Token 1514: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.16488179564476013
    2. '[' → logprob: -2.414881706237793
    3. '#' → logprob: -3.539881706237793
    4. ' calcul' → logprob: -4.414881706237793
    5. '=' → logprob: -5.414881706237793
    6. '[]' → logprob: -5.914881706237793
    7. 'min' → logprob: -5.914881706237793
    8. ' =' → logprob: -6.039881706237793
    9. 'calc' → logprob: -6.539881706237793
    10. '[
' → logprob: -6.664881706237793

Token 1515: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.021956590935587883
    2. 'ées' → logprob: -5.271956443786621
    3. 'aires' → logprob: -5.521956443786621
    4. '#' → logprob: -6.271956443786621
    5. '_' → logprob: -6.521956443786621
    6. 'ations' → logprob: -6.646956443786621
    7. '=' → logprob: -6.896956443786621
    8. 's' → logprob: -6.896956443786621
    9. 'é' → logprob: -7.146956443786621
    10. 'es' → logprob: -7.146956443786621

Token 1516: ' avec' (ID: 3937)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.199724793434143
    2. 'sur' → logprob: -2.1997246742248535
    3. 'en' → logprob: -2.3247246742248535
    4. 'dans' → logprob: -2.5747246742248535
    5. '[' → logprob: -2.8247246742248535
    6. 'comme' → logprob: -2.9497246742248535
    7. 'def' → logprob: -3.1997246742248535
    8. 'pour' → logprob: -3.3247246742248535
    9. '=' → logprob: -3.4497246742248535
    10. 'à' → logprob: -3.5747246742248535

Token 1517: ' les' (ID: 1341)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7105944156646729
    2. 'des' → logprob: -1.3355944156646729
    3. 'la' → logprob: -2.210594415664673
    4. 'un' → logprob: -3.460594415664673
    5. '```' → logprob: -3.835594415664673
    6. 'les' → logprob: -4.085594177246094
    7. 'dp' → logprob: -4.210594177246094
    8. 'l' → logprob: -4.960594177246094
    9. ' une' → logprob: -5.085594177246094
    10. '#' → logprob: -5.085594177246094

Token 1518: ' segments' (ID: 33749)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8251254558563232
    2. 'dp' → logprob: -1.0751254558563232
    3. '#' → logprob: -2.2001254558563232
    4. 'prefix' → logprob: -3.8251254558563232
    5. 'import' → logprob: -4.075125694274902
    6. '```' → logprob: -4.575125694274902
    7. 'DP' → logprob: -5.200125694274902
    8. 'pr' → logprob: -5.450125694274902
    9. 'segment' → logprob: -5.575125694274902
    10. ']' → logprob: -6.075125694274902

Token 1519: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3849709033966064
    2. '=' → logprob: -1.5099709033966064
    3. '[' → logprob: -1.7599709033966064
    4. 'def' → logprob: -3.0099709033966064
    5. ']' → logprob: -3.0099709033966064
    6. ')' → logprob: -3.1349709033966064
    7. '#' → logprob: -4.134970664978027
    8. '[
' → logprob: -4.134970664978027
    9. 's' → logprob: -4.259970664978027
    10. '.' → logprob: -4.259970664978027

Token 1520: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3962211608886719
    2. 'és' → logprob: -2.521221160888672
    3. 'e' → logprob: -3.021221160888672
    4. ')' → logprob: -3.271221160888672
    5. ']' → logprob: -3.396221160888672
    6. 'u' → logprob: -3.771221160888672
    7. '-' → logprob: -4.646221160888672
    8. 'd' → logprob: -4.771221160888672
    9. '_' → logprob: -4.771221160888672
    10. '#' → logprob: -5.021221160888672

Token 1521: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9050920605659485
    2. '[' → logprob: -1.9050920009613037
    3. '=' → logprob: -2.4050920009613037
    4. ')' → logprob: -2.6550920009613037
    5. ']' → logprob: -2.6550920009613037
    6. ',' → logprob: -2.9050920009613037
    7. '(' → logprob: -3.4050920009613037
    8. ':' → logprob: -4.155092239379883
    9. '.' → logprob: -4.280092239379883
    10. '#' → logprob: -4.530092239379883

Token 1522: ' stops' (ID: 29924)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0575120449066162
    2. 'parts' → logprob: -1.3075120449066162
    3. '```' → logprob: -2.182512044906616
    4. 'segments' → logprob: -2.307512044906616
    5. 'part' → logprob: -2.932512044906616
    6. '(x' → logprob: -3.682512044906616
    7. 'arr' → logprob: -4.182512283325195
    8. 'plus' → logprob: -4.307512283325195
    9. 'nombre' → logprob: -5.057512283325195
    10. 'au' → logprob: -5.057512283325195

Token 1523: ' sem' (ID: 2743)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9636917114257812
    2. '_' → logprob: -1.7136917114257812
    3. '[' → logprob: -1.8386917114257812
    4. 'def' → logprob: -1.9636917114257812
    5. '=' → logprob: -2.9636917114257812
    6. ')' → logprob: -4.088691711425781
    7. ',' → logprob: -4.338691711425781
    8. '[
' → logprob: -4.338691711425781
    9. ':' → logprob: -4.588691711425781
    10. '[i' → logprob: -5.213691711425781

Token 1524: 'iexpress' (ID: 190732)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.7292206287384033
    2. 'iexpress' → logprob: -2.3542206287384033
    3. '#' → logprob: -2.6042206287384033
    4. '```' → logprob: -2.8542206287384033
    5. '_op' → logprob: -3.6042206287384033
    6. 'pexpr' → logprob: -3.7292206287384033
    7. 't' → logprob: -3.7292206287384033
    8. 'p' → logprob: -4.104220390319824
    9. 's' → logprob: -4.354220390319824
    10. ')' → logprob: -4.729220390319824

Token 1525: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6543569564819336
    2. '_' → logprob: -1.7793569564819336
    3. ':' → logprob: -2.4043569564819336
    4. '[' → logprob: -2.6543569564819336
    5. ')' → logprob: -3.4043569564819336
    6. '
' → logprob: -3.6543569564819336
    7. ',' → logprob: -4.029356956481934
    8. ']' → logprob: -4.154356956481934
    9. '(' → logprob: -4.779356956481934
    10. '[
' → logprob: -5.154356956481934

Token 1526: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9602646827697754
    2. ''' → logprob: -1.4602646827697754
    3. '=' → logprob: -2.3352646827697754
    4. '#' → logprob: -2.8352646827697754
    5. '_' → logprob: -2.9602646827697754
    6. ',' → logprob: -3.4602646827697754
    7. '   ' → logprob: -3.8352646827697754
    8. ']' → logprob: -4.210264682769775
    9. ' ' → logprob: -4.210264682769775
    10. '[' → logprob: -4.460264682769775

Token 1527: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40852099657058716
    2. '_' → logprob: -2.6585209369659424
    3. '=' → logprob: -2.7835209369659424
    4. '#' → logprob: -3.0335209369659424
    5. '[' → logprob: -3.5335209369659424
    6. ']' → logprob: -3.6585209369659424
    7. ':' → logprob: -4.0335211753845215
    8. ',' → logprob: -4.5335211753845215
    9. '(' → logprob: -4.6585211753845215
    10. 'x' → logprob: -4.9085211753845215

Token 1528: ' temps' (ID: 11160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8898221850395203
    2. 'def' → logprob: -1.764822244644165
    3. 'max' → logprob: -2.639822244644165
    4. '+' → logprob: -3.514822244644165
    5. ')' → logprob: -3.764822244644165
    6. 's' → logprob: -3.764822244644165
    7. '_' → logprob: -3.889822244644165
    8. 'temps' → logprob: -3.889822244644165
    9. ']' → logprob: -4.014822006225586
    10. 'i' → logprob: -4.139822006225586

Token 1529: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6597029566764832
    2. '=' → logprob: -1.409703016281128
    3. 'def' → logprob: -3.409703016281128
    4. '_max' → logprob: -3.909703016281128
    5. 'pour' → logprob: -3.909703016281128
    6. 's' → logprob: -4.159702777862549
    7. '#' → logprob: -4.159702777862549
    8. ')' → logprob: -4.284702777862549
    9. '_required' → logprob: -4.409702777862549
    10. ' =' → logprob: -4.409702777862549

Token 1530: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24886316061019897
    2. 'pour' → logprob: -2.9988632202148438
    3. '[' → logprob: -3.6238632202148438
    4. '+' → logprob: -3.8738632202148438
    5. '_' → logprob: -3.8738632202148438
    6. ')' → logprob: -4.623863220214844
    7. 'for' → logprob: -4.623863220214844
    8. '#' → logprob: -4.623863220214844
    9. 'max' → logprob: -4.998863220214844
    10. '_max' → logprob: -5.123863220214844

Token 1531: ' aller' (ID: 18383)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.03176848590373993
    2. 're' → logprob: -4.531768321990967
    3. 'calcul' → logprob: -5.156768321990967
    4. 'aller' → logprob: -5.656768321990967
    5. 'arr' → logprob: -5.656768321990967
    6. 'se' → logprob: -6.656768321990967
    7. 'acc' → logprob: -6.781768321990967
    8. 'i' → logprob: -7.156768321990967
    9. 'par' → logprob: -7.281768321990967
    10. '_' → logprob: -7.406768321990967

Token 1532: ' jusqu' (ID: 21961)
  Prédit: 'jus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jus' → logprob: -0.02686028555035591
    2. 'à' → logprob: -4.651860237121582
    3. 'au' → logprob: -5.151860237121582
    4. ' jusqu' → logprob: -5.276860237121582
    5. '_' → logprob: -6.526860237121582
    6. 'aux' → logprob: -6.901860237121582
    7. '#' → logprob: -6.901860237121582
    8. 'sur' → logprob: -7.526860237121582
    9. '```' → logprob: -7.901860237121582
    10. ' ' → logprob: -8.276860237121582

Token 1533: ''à' (ID: 33688)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.24224628508090973
    2. ''à' → logprob: -3.367246389389038
    3. '#' → logprob: -3.492246389389038
    4. 'au' → logprob: -3.742246389389038
    5. '```' → logprob: -3.742246389389038
    6. 'jus' → logprob: -3.867246389389038
    7. ' à' → logprob: -3.867246389389038
    8. 'e' → logprob: -4.242246150970459
    9. '=' → logprob: -4.617246150970459
    10. ')' → logprob: -4.742246150970459

Token 1534: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4578622877597809
    2. 'la' → logprob: -1.2078622579574585
    3. 'x' → logprob: -3.957862377166748
    4. 'l' → logprob: -4.207862377166748
    5. 'une' → logprob: -4.457862377166748
    6. 'à' → logprob: -4.957862377166748
    7. 'S' → logprob: -5.207862377166748
    8. 'station' → logprob: -5.957862377166748
    9. ' ' → logprob: -6.707862377166748
    10. 'c' → logprob: -6.832862377166748

Token 1535: ' point' (ID: 2438)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8100916743278503
    2. 'S' → logprob: -1.4350917339324951
    3. '_' → logprob: -2.185091733932495
    4. '_i' → logprob: -3.310091733932495
    5. 'station' → logprob: -3.310091733932495
    6. 'arr' → logprob: -3.810091733932495
    7. 'segment' → logprob: -3.935091733932495
    8. '
' → logprob: -3.935091733932495
    9. 'stop' → logprob: -4.435091495513916
    10. ' S' → logprob: -4.935091495513916

Token 1536: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0577767975628376
    2. ')' → logprob: -4.432776927947998
    3. '```' → logprob: -4.557776927947998
    4. ' ' → logprob: -4.932776927947998
    5. ',' → logprob: -5.307776927947998
    6. '(' → logprob: -5.557776927947998
    7. ' _' → logprob: -5.932776927947998
    8. '_max' → logprob: -6.057776927947998
    9. ':' → logprob: -6.682776927947998
    10. '=' → logprob: -6.807776927947998

Token 1537: ' en' (ID: 469)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2595607042312622
    2. ' =' → logprob: -2.0095605850219727
    3. 'calcul' → logprob: -2.0095605850219727
    4. '=' → logprob: -2.5095605850219727
    5. ' calcul' → logprob: -3.0095605850219727
    6. '   ' → logprob: -3.3845605850219727
    7. 'min' → logprob: -3.5095605850219727
    8. '(' → logprob: -3.5095605850219727
    9. ' max' → logprob: -3.8845605850219727
    10. '```' → logprob: -3.8845605850219727

Token 1538: ' simple' (ID: 4705)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.32938551902771
    2. '
' → logprob: -2.82938551902771
    3. 'stations' → logprob: -2.82938551902771
    4. 'position' → logprob: -2.95438551902771
    5. 'station' → logprob: -3.20438551902771
    6. 'temps' → logprob: -3.32938551902771
    7. 'points' → logprob: -3.45438551902771
    8. 'fonction' → logprob: -3.57938551902771
    9. 'arr' → logprob: -4.079385757446289
    10. 'multip' → logprob: -4.204385757446289

Token 1539: ' formule' (ID: 84316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40492260456085205
    2. '+' → logprob: -3.0299224853515625
    3. 'pas' → logprob: -3.5299224853515625
    4. ' def' → logprob: -3.6549224853515625
    5. '+
' → logprob: -4.0299224853515625
    6. ' pas' → logprob: -4.1549224853515625
    7. ')' → logprob: -4.2799224853515625
    8. 'pass' → logprob: -4.2799224853515625
    9. 'e' → logprob: -4.5299224853515625
    10. '#' → logprob: -4.6549224853515625

Token 1540: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9778770804405212
    2. 'def' → logprob: -1.477877140045166
    3. '[' → logprob: -1.852877140045166
    4. ')' → logprob: -2.227877140045166
    5. ':' → logprob: -3.227877140045166
    6. '(
' → logprob: -4.477877140045166
    7. '=' → logprob: -4.727877140045166
    8. ']' → logprob: -4.727877140045166
    9. '#' → logprob: -4.852877140045166
    10. '```' → logprob: -4.852877140045166

Token 1541: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40658238530158997
    2. ':' → logprob: -1.1565823554992676
    3. ')' → logprob: -4.906582355499268
    4. ']' → logprob: -5.281582355499268
    5. ':
' → logprob: -6.156582355499268
    6. '):' → logprob: -6.906582355499268
    7. ':def' → logprob: -7.281582355499268
    8. '[' → logprob: -7.406582355499268
    9. '#' → logprob: -7.656582355499268
    10. ' def' → logprob: -8.281582832336426

Token 1542: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028469599783420563
    2. ':' → logprob: -6.877847194671631
    3. ':
' → logprob: -7.627847194671631
    4. 'i' → logprob: -7.752847194671631
    5. '#' → logprob: -8.127846717834473
    6. '
' → logprob: -9.252846717834473
    7. 'dp' → logprob: -9.252846717834473
    8. 'low' → logprob: -9.752846717834473
    9. 'max' → logprob: -10.002846717834473
    10. ')' → logprob: -10.252846717834473

Token 1543: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12862712144851685
    2. ':' → logprob: -2.628627061843872
    3. ')' → logprob: -3.503627061843872
    4. 'dp' → logprob: -5.753627300262451
    5. ':
' → logprob: -6.003627300262451
    6. '(
' → logprob: -6.253627300262451
    7. '#' → logprob: -6.503627300262451
    8. 'for' → logprob: -6.753627300262451
    9. 'd' → logprob: -6.753627300262451
    10. '(' → logprob: -7.128627300262451

Token 1544: ' code' (ID: 3490)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11351244896650314
    2. '_' → logprob: -2.6135125160217285
    3. '[' → logprob: -4.8635125160217285
    4. 'max' → logprob: -5.6135125160217285
    5. '_max' → logprob: -5.7385125160217285
    6. '[
' → logprob: -5.8635125160217285
    7. '#' → logprob: -6.1135125160217285
    8. ']' → logprob: -6.1135125160217285
    9. ')' → logprob: -6.4885125160217285
    10. '=' → logprob: -6.6135125160217285

Token 1545: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03213968127965927
    2. ' def' → logprob: -4.407139778137207
    3. '_' → logprob: -5.157139778137207
    4. ')' → logprob: -6.032139778137207
    5. '(
' → logprob: -6.157139778137207
    6. '=' → logprob: -6.282139778137207
    7. '#' → logprob: -6.657139778137207
    8. ':' → logprob: -7.157139778137207
    9. '[
' → logprob: -7.282139778137207
    10. ' =' → logprob: -7.407139778137207

Token 1546: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004126369021832943
    2. '#' → logprob: -6.75412654876709
    3. ':' → logprob: -6.75412654876709
    4. 'max' → logprob: -8.00412654876709
    5. '```' → logprob: -8.25412654876709
    6. 'low' → logprob: -8.62912654876709
    7. 'while' → logprob: -8.75412654876709
    8. ':
' → logprob: -8.87912654876709
    9. 'dp' → logprob: -8.87912654876709
    10. 'import' → logprob: -8.87912654876709

Token 1547: ' can' (ID: 665)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5822125673294067
    2. ' can' → logprob: -1.3322125673294067
    3. ' solve' → logprob: -2.707212448120117
    4. ' binary' → logprob: -3.207212448120117
    5. ' possible' → logprob: -4.207212448120117
    6. 'main' → logprob: -4.832212448120117
    7. ' feasible' → logprob: -4.832212448120117
    8. 'solve' → logprob: -4.832212448120117
    9. ' max' → logprob: -4.957212448120117
    10. ' check' → logprob: -5.082212448120117

Token 1548: '_re' (ID: 3067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03200669214129448
    2. '_re' → logprob: -4.157006740570068
    3. ' _' → logprob: -4.907006740570068
    4. '_access' → logprob: -5.032006740570068
    5. '_accept' → logprob: -6.532006740570068
    6. '_continue' → logprob: -9.40700626373291
    7. '_choose' → logprob: -9.40700626373291
    8. '_ac' → logprob: -10.03200626373291
    9. '_
' → logprob: -10.40700626373291
    10. '_take' → logprob: -10.65700626373291

Token 1549: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -8.180258191714529e-06
    2. 'ad' → logprob: -12.375008583068848
    3. '_' → logprob: -13.625008583068848
    4. 'a' → logprob: -13.625008583068848
    5. 'Ach' → logprob: -14.125008583068848
    6. 'achable' → logprob: -15.000008583068848
    7. '
' → logprob: -16.00000762939453
    8. 'acht' → logprob: -17.00000762939453
    9. 'each' → logprob: -17.75000762939453
    10. ' ach' → logprob: -17.87500762939453

Token 1550: '(st' (ID: 4065)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08240851014852524
    2. '_' → logprob: -2.9574084281921387
    3. '_station' → logprob: -4.332408428192139
    4. '(i' → logprob: -5.207408428192139
    5. '(max' → logprob: -6.082408428192139
    6. '_max' → logprob: -6.707408428192139
    7. '(x' → logprob: -6.707408428192139
    8. '(_' → logprob: -6.832408428192139
    9. '(st' → logprob: -7.332408428192139
    10. '_(' → logprob: -7.457408428192139

Token 1551: 'ation' (ID: 387)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5619065165519714
    2. 'ation' → logprob: -1.0619065761566162
    3. 'a' → logprob: -3.311906576156616
    4. 'at' → logprob: -4.061906337738037
    5. '_op' → logprob: -4.061906337738037
    6. '_' → logprob: -5.436906337738037
    7. '_at' → logprob: -6.436906337738037
    8. 'ati' → logprob: -6.436906337738037
    9. 'atio' → logprob: -6.686906337738037
    10. '_a' → logprob: -6.811906337738037

Token 1552: '_limit' (ID: 34361)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10413696616888046
    2. ',' → logprob: -2.9791369438171387
    3. '_' → logprob: -3.6041369438171387
    4. '):
' → logprob: -4.604136943817139
    5. ')' → logprob: -5.229136943817139
    6. ' ):' → logprob: -6.979136943817139
    7. '_next' → logprob: -7.104136943817139
    8. '_max' → logprob: -7.354136943817139
    9. '   ' → logprob: -7.979136943817139
    10. '_i' → logprob: -8.104137420654297

Token 1553: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4335494935512543
    2. ',' → logprob: -1.0585495233535767
    3. '):
' → logprob: -5.683549404144287
    4. ')' → logprob: -7.433549404144287
    5. '   ' → logprob: -7.933549404144287
    6. ':' → logprob: -8.433549880981445
    7. ' ,' → logprob: -9.558549880981445
    8. ',
' → logprob: -9.808549880981445
    9. ' ):' → logprob: -9.808549880981445
    10. '```' → logprob: -11.058549880981445

Token 1554: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03468208387494087
    2. ':
' → logprob: -4.034682273864746
    3. '   ' → logprob: -4.409682273864746
    4. '```' → logprob: -6.034682273864746
    5. '(' → logprob: -7.409682273864746
    6. ' :' → logprob: -8.034682273864746
    7. '():' → logprob: -8.409682273864746
    8. '(
' → logprob: -9.159682273864746
    9. '    ' → logprob: -9.409682273864746
    10. ':return' → logprob: -9.659682273864746

Token 1555: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04717455059289932
    2. 'dp' → logprob: -4.047174453735352
    3. ':' → logprob: -4.422174453735352
    4. 'max' → logprob: -4.922174453735352
    5. 'time' → logprob: -6.172174453735352
    6. '
' → logprob: -6.422174453735352
    7. 'pos' → logprob: -7.172174453735352
    8. '    
' → logprob: -7.547174453735352
    9. '#' (adapté à ' #') → logprob: -7.797174453735352
    10. ' dp' → logprob: -8.047174453735352

Token 1556: ' Vér' (ID: 159169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8479302525520325
    2. 'dp' → logprob: -0.8479302525520325
    3. 'def' → logprob: -2.7229301929473877
    4. 'indent' → logprob: -3.4729301929473877
    5. 'pos' → logprob: -4.347930431365967
    6. 'if' → logprob: -4.722930431365967
    7. ' dp' → logprob: -5.847930431365967
    8. ' if' → logprob: -5.972930431365967
    9. 'res' → logprob: -6.097930431365967
    10. 'time' → logprob: -6.597930431365967

Token 1557: 'ifie' (ID: 46409)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.01151260081678629
    2. 'if' → logprob: -4.761512756347656
    3. 'ifie' → logprob: -6.386512756347656
    4. '   ' → logprob: -7.386512756347656
    5. 'ifiez' → logprob: -8.261512756347656
    6. 'er' → logprob: -9.386512756347656
    7. 'ify' → logprob: -10.011512756347656
    8. 'f' → logprob: -10.011512756347656
    9. 'ification' → logprob: -10.136512756347656
    10. '#' → logprob: -10.636512756347656

Token 1558: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0422571897506714
    2. ' si' → logprob: -1.4172571897506714
    3. ' ' → logprob: -2.042257308959961
    4. ' ' → logprob: -2.042257308959961
    5. '_' → logprob: -2.792257308959961
    6. '   ' → logprob: -3.417257308959961
    7. ' whether' → logprob: -4.167257308959961
    8. '  ' → logprob: -4.667257308959961
    9. '    ' → logprob: -5.417257308959961
    10. 'si' → logprob: -5.917257308959961

Token 1559: ' on' (ID: 402)
  Prédit: ' station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' station' → logprob: -0.573665201663971
    2. 'station' → logprob: -1.0736651420593262
    3. ' ' → logprob: -3.323665142059326
    4. ' True' → logprob: -3.698665142059326
    5. '   ' → logprob: -4.448665142059326
    6. 'True' → logprob: -5.323665142059326
    7. ' on' → logprob: -5.573665142059326
    8. 'on' → logprob: -6.073665142059326
    9. ' la' → logprob: -6.073665142059326
    10. 'possible' → logprob: -6.448665142059326

Token 1560: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.40544164180755615
    2. ' peux' → logprob: -1.4054416418075562
    3. '_' → logprob: -3.5304417610168457
    4. '_possible' → logprob: -4.030441761016846
    5. '_pe' → logprob: -4.405441761016846
    6. 'pe' → logprob: -5.030441761016846
    7. ' possible' → logprob: -5.405441761016846
    8. ' est' → logprob: -5.780441761016846
    9. ' ' → logprob: -6.030441761016846
    10. 'est' → logprob: -6.155441761016846

Token 1561: ' atteindre' (ID: 95734)
  Prédit: ' atteindre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' atteindre' → logprob: -0.889828622341156
    2. '_re' → logprob: -1.7648286819458008
    3. ' choisir' → logprob: -2.264828681945801
    4. '   ' → logprob: -2.764828681945801
    5. '_' → logprob: -3.014828681945801
    6. 'arr' → logprob: -3.514828681945801
    7. 'atte' → logprob: -3.764828681945801
    8. ' parcour' → logprob: -4.139828681945801
    9. ' ' → logprob: -4.389828681945801
    10. 'cho' → logprob: -4.389828681945801

Token 1562: ' la' (ID: 557)
  Prédit: ' station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' station' → logprob: -0.06081206351518631
    2. 'station' → logprob: -3.060811996459961
    3. ' la' → logprob: -4.810811996459961
    4. ' ' → logprob: -6.185811996459961
    5. ' une' → logprob: -7.435811996459961
    6. 'st' → logprob: -8.185811996459961
    7. ' True' → logprob: -8.310811996459961
    8. ' st' → logprob: -8.560811996459961
    9. ' ' → logprob: -8.810811996459961
    10. '```' → logprob: -9.185811996459961

Token 1563: ' station' (ID: 11538)
  Prédit: ' station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' station' → logprob: -0.07152815163135529
    2. 'station' → logprob: -2.696528196334839
    3. ' next' → logprob: -7.32152795791626
    4. ' given' → logprob: -7.69652795791626
    5. ' ' → logprob: -9.196528434753418
    6. 'prem' → logprob: -9.946528434753418
    7. ' ' → logprob: -10.071528434753418
    8. ' prochain' → logprob: -10.196528434753418
    9. ' max' → logprob: -10.446528434753418
    10. '_station' → logprob: -10.571528434753418

Token 1564: ' station' (ID: 11538)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.025639379397034645
    2. '_' → logprob: -3.900639295578003
    3. '_max' → logprob: -5.900639533996582
    4. '_lim' → logprob: -7.025639533996582
    5. '_possible' → logprob: -7.525639533996582
    6. '```' → logprob: -8.400639533996582
    7. ' _' → logprob: -8.650639533996582
    8. ')' → logprob: -9.150639533996582
    9. '_limits' → logprob: -9.400639533996582
    10. ''_' → logprob: -10.025639533996582

Token 1565: '_limit' (ID: 34361)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10168331116437912
    2. '_limit' → logprob: -2.3516833782196045
    3. '_lim' → logprob: -7.351683139801025
    4. ' _' → logprob: -7.601683139801025
    5. '_limits' → logprob: -8.726683616638184
    6. ')' → logprob: -9.851683616638184
    7. '_max' → logprob: -9.976683616638184
    8. '_
' → logprob: -10.601683616638184
    9. ')_' → logprob: -11.476683616638184
    10. '_)' → logprob: -11.851683616638184

Token 1566: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6047703623771667
    2. '   ' → logprob: -1.7297704219818115
    3. '(' → logprob: -2.9797704219818115
    4. ' (' → logprob: -3.2297704219818115
    5. ',' → logprob: -3.3547704219818115
    6. '):' → logprob: -3.7297704219818115
    7. 'with' → logprob: -3.7297704219818115
    8. '```' → logprob: -3.7297704219818115
    9. ' with' → logprob: -4.104770183563232
    10. ' :' → logprob: -4.354770183563232

Token 1567: ' ≤' (ID: 72554)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.05381635203957558
    2. '<=' → logprob: -4.303816318511963
    3. 'respect' → logprob: -4.553816318511963
    4. 'station' → logprob: -4.678816318511963
    5. 'K' → logprob: -5.428816318511963
    6. 'time' → logprob: -5.553816318511963
    7. 'arr' → logprob: -6.053816318511963
    8. 'moins' → logprob: -6.803816318511963
    9. 'stations' → logprob: -6.803816318511963
    10. 'util' → logprob: -7.053816318511963

Token 1568: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.10026630759239197
    2. ' T' → logprob: -2.350266218185425
    3. 'temps' → logprob: -10.100266456604004
    4. ' temps' → logprob: -11.350266456604004
    5. 'time' → logprob: -13.100266456604004
    6. ' ' → logprob: -13.100266456604004
    7. ' time' → logprob: -13.975266456604004
    8. 'Temps' → logprob: -14.600266456604004
    9. ' ' → logprob: -14.975266456604004
    10. '_T' → logprob: -14.975266456604004

Token 1569: ' minutes' (ID: 5438)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9734968543052673
    2. '(' → logprob: -1.098496913909912
    3. '(st' → logprob: -1.723496913909912
    4. '```' → logprob: -2.848496913909912
    5. '):' → logprob: -4.348496913909912
    6. '.' → logprob: -4.598496913909912
    7. ',' → logprob: -4.848496913909912
    8. ' (' → logprob: -5.598496913909912
    9. '`' → logprob: -5.973496913909912
    10. ')' → logprob: -5.973496913909912

Token 1570: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29691222310066223
    2. '(' → logprob: -1.4219121932983398
    3. ' (' → logprob: -5.42191219329834
    4. ' :' → logprob: -5.54691219329834
    5. '   ' → logprob: -6.04691219329834
    6. '():' → logprob: -6.54691219329834
    7. '(
' → logprob: -6.67191219329834
    8. ',' → logprob: -7.54691219329834
    9. '):' → logprob: -7.92191219329834
    10. '[' → logprob: -8.54691219329834

Token 1571: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13408182561397552
    2. '   ' → logprob: -2.5090818405151367
    3. '(' → logprob: -3.5090818405151367
    4. '):' → logprob: -5.509081840515137
    5. '(st' → logprob: -6.009081840515137
    6. ' :' → logprob: -6.009081840515137
    7. '(
' → logprob: -6.509081840515137
    8. ':
' → logprob: -6.759081840515137
    9. '():' → logprob: -7.134081840515137
    10. 'def' → logprob: -8.134081840515137

Token 1572: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11703447252511978
    2. '(' → logprob: -2.992034435272217
    3. ' :' → logprob: -3.867034435272217
    4. '   ' → logprob: -4.242034435272217
    5. '):' → logprob: -4.242034435272217
    6. '():' → logprob: -5.492034435272217
    7. ' (' → logprob: -6.367034435272217
    8. 'def' → logprob: -6.492034435272217
    9. '(
' → logprob: -7.117034435272217
    10. ' ):' → logprob: -7.867034435272217

Token 1573: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011037450283765793
    2. 'def' → logprob: -5.261037349700928
    3. '
' → logprob: -6.511037349700928
    4. ':' → logprob: -6.761037349700928
    5. '    ' → logprob: -6.886037349700928
    6. ' :' → logprob: -7.011037349700928
    7. '    
' → logprob: -7.761037349700928
    8. ')' → logprob: -8.886037826538086
    9. '):' → logprob: -9.011037826538086
    10. '\t' → logprob: -9.261037826538086

Token 1574: ' chois' (ID: 33475)
  Prédit: ' respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' respect' → logprob: -0.536397397518158
    2. 'cho' → logprob: -2.1613974571228027
    3. 'util' → logprob: -2.5363974571228027
    4. ' utilisant' → logprob: -2.5363974571228027
    5. 'respect' → logprob: -2.7863974571228027
    6. ' chois' → logprob: -4.036397457122803
    7. '   ' → logprob: -4.536397457122803
    8. ' suivant' → logprob: -4.661397457122803
    9. ' continu' → logprob: -4.911397457122803
    10. ' ' → logprob: -5.286397457122803

Token 1575: 'issant' (ID: 31359)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5923282504081726
    2. 'ss' → logprob: -0.8423282504081726
    3. 'si' → logprob: -4.967328071594238
    4. 'vant' → logprob: -5.967328071594238
    5. 'sis' → logprob: -6.592328071594238
    6. 'issant' → logprob: -7.717328071594238
    7. 'sage' → logprob: -7.842328071594238
    8. 'sig' → logprob: -7.842328071594238
    9. 'sy' → logprob: -7.967328071594238
    10. 'sir' → logprob: -8.092328071594238

Token 1576: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5869181156158447
    2. ' jud' → logprob: -1.9619181156158447
    3. 'les' → logprob: -2.3369181156158447
    4. ' le' → logprob: -3.0869181156158447
    5. 'une' → logprob: -3.0869181156158447
    6. 'la' → logprob: -3.4619181156158447
    7. ' les' → logprob: -4.086917877197266
    8. ' la' → logprob: -4.461917877197266
    9. '   ' → logprob: -4.836917877197266
    10. 'correct' → logprob: -5.086917877197266

Token 1577: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.217850461602211
    2. ' arr' → logprob: -1.7178504467010498
    3. ' stops' → logprob: -4.717850685119629
    4. 'ar' → logprob: -5.092850685119629
    5. ' ar' → logprob: -7.467850685119629
    6. '#' → logprob: -8.467850685119629
    7. 'nombre' → logprob: -8.967850685119629
    8. ' arrêt' → logprob: -9.342850685119629
    9. 'sem' → logprob: -10.467850685119629
    10. ' nombre' → logprob: -10.717850685119629

Token 1578: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -8.315936429426074e-05
    2. '^' → logprob: -10.250082969665527
    3. 'êt' → logprob: -11.000082969665527
    4. 'ôts' → logprob: -11.625082969665527
    5. 'êtes' → logprob: -12.125082969665527
    6. 'ê' → logprob: -12.625082969665527
    7. '^\' → logprob: -12.875082969665527
    8. '_' → logprob: -13.625082969665527
    9. '\' → logprob: -13.750082969665527
    10. '\x' → logprob: -13.875082969665527

Token 1579: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8779385685920715
    2. '_sem' → logprob: -1.3779385089874268
    3. ' sem' → logprob: -1.5029385089874268
    4. ' _' → logprob: -2.8779385089874268
    5. ' de' → logprob: -4.252938747406006
    6. 'sem' → logprob: -4.752938747406006
    7. '_s' → logprob: -4.877938747406006
    8. ' ' → logprob: -5.877938747406006
    9. ')' → logprob: -5.877938747406006
    10. '_de' → logprob: -6.002938747406006

Token 1580: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.018854662775993347
    2. 'express' → logprob: -4.64385461807251
    3. 'pexpr' → logprob: -6.76885461807251
    4. 'ormais' → logprob: -7.01885461807251
    5. 'ivesse' → logprob: -7.64385461807251
    6. '_op' → logprob: -7.70635461807251
    7. '(express' → logprob: -7.76885461807251
    8. 'esseurs' → logprob: -8.018855094909668
    9. 'op' → logprob: -8.081355094909668
    10. ' expresses' → logprob: -8.206355094909668

Token 1581: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4220657348632812
    2. '_stop' → logprob: -1.6720657348632812
    3. '_' → logprob: -1.9220657348632812
    4. '_st' → logprob: -2.0470657348632812
    5. '):' → logprob: -2.1720657348632812
    6. '_sur' → logprob: -3.2970657348632812
    7. ')' → logprob: -3.6720657348632812
    8. '_s' → logprob: -3.9220657348632812
    9. ':' → logprob: -4.047065734863281
    10. ' stops' → logprob: -4.422065734863281

Token 1582: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6391284465789795
    2. ':' → logprob: -1.3891284465789795
    3. '(' → logprob: -1.6391284465789795
    4. '():' → logprob: -4.139128684997559
    5. ' :' → logprob: -5.514128684997559
    6. '):' → logprob: -5.514128684997559
    7. '(
' → logprob: -6.264128684997559
    8. ' (' → logprob: -7.514128684997559
    9. 'def' → logprob: -7.639128684997559
    10. '       ' → logprob: -7.639128684997559

Token 1583: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04097172990441322
    2. '
' → logprob: -3.6659717559814453
    3. 'dp' → logprob: -4.415971755981445
    4. '    
' → logprob: -6.540971755981445
    5. ' dp' → logprob: -8.290971755981445
    6. 'indent' → logprob: -8.415971755981445
    7. 'def' → logprob: -9.040971755981445
    8. ' 
' → logprob: -9.540971755981445
    9. 'DP' → logprob: -10.040971755981445
    10. '    ' → logprob: -10.165971755981445

Token 1584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001035787514410913
    2. 'if' → logprob: -8.001035690307617
    3. 'indent' → logprob: -8.501035690307617
    4. 'def' → logprob: -8.876035690307617
    5. 'i' → logprob: -9.376035690307617
    6. ' if' → logprob: -9.626035690307617
    7. '
' → logprob: -10.376035690307617
    8. 'n' → logprob: -10.626035690307617
    9. ' indent' → logprob: -10.626035690307617
    10. 'for' → logprob: -11.001035690307617

Token 1585: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.371227741241455
    2. '   ' → logprob: -1.496227741241455
    3. 'if' → logprob: -1.746227741241455
    4. '#' (adapté à ' #') → logprob: -1.996227741241455
    5. 'dp' → logprob: -2.121227741241455
    6. 'time' → logprob: -4.246227741241455
    7. 'current' → logprob: -4.371227741241455
    8. 'res' → logprob: -4.621227741241455
    9. 'interval' → logprob: -4.621227741241455
    10. 'segments' → logprob: -4.996227741241455

Token 1586: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007739243097603321
    2. '   ' → logprob: -5.507739067077637
    3. '#' → logprob: -6.132739067077637
    4. 'if' → logprob: -8.132739067077637
    5. 'DP' → logprob: -8.757739067077637
    6. 'time' → logprob: -8.882739067077637
    7. 'arr' → logprob: -9.007739067077637
    8. 'interval' → logprob: -9.007739067077637
    9. ' dp' → logprob: -9.132739067077637
    10. 'stop' → logprob: -9.257739067077637

Token 1587: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008250013925135136
    2. '=' → logprob: -5.2582502365112305
    3. '   ' → logprob: -6.1332502365112305
    4. 'def' → logprob: -8.13325023651123
    5. ':' → logprob: -9.00825023651123
    6. ')' → logprob: -9.13325023651123
    7. '[' → logprob: -10.25825023651123
    8. '
' → logprob: -10.38325023651123
    9. '):' → logprob: -10.50825023651123
    10. '=[' → logprob: -10.50825023651123

Token 1588: ' arr' (ID: 1724)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4013129770755768
    2. ' i' → logprob: -1.6513129472732544
    3. 'M' → logprob: -2.401313066482544
    4. ' M' → logprob: -4.026312828063965
    5. 'range' → logprob: -4.276312828063965
    6. ' range' → logprob: -5.276312828063965
    7. 'interval' → logprob: -5.526312828063965
    8. '   ' → logprob: -6.776312828063965
    9. 'express' → logprob: -6.901312828063965
    10. ' la' → logprob: -7.151312828063965

Token 1589: 'êts' (ID: 56582)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5111559629440308
    2. 'êts' → logprob: -1.6361559629440308
    3. ' stops' → logprob: -2.0111560821533203
    4. 'ange' → logprob: -2.7611560821533203
    5. '[' → logprob: -3.0111560821533203
    6. 'st' → logprob: -3.5111560821533203
    7. '_stop' → logprob: -3.8861560821533203
    8. 'rets' → logprob: -4.01115608215332
    9. 'express' → logprob: -4.01115608215332
    10. 'est' → logprob: -4.26115608215332

Token 1590: ' express' (ID: 6101)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.1495191752910614
    2. ' express' → logprob: -2.149519205093384
    3. '   ' → logprob: -5.024518966674805
    4. '_ex' → logprob: -5.149518966674805
    5. 'sem' → logprob: -5.649518966674805
    6. ' sem' → logprob: -6.524518966674805
    7. ' ' → logprob: -6.774518966674805
    8. 's' → logprob: -7.399518966674805
    9. '_' → logprob: -7.399518966674805
    10. ' stops' → logprob: -7.649518966674805

Token 1591: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3013303279876709
    2. ' stops' → logprob: -2.301330327987671
    3. ':' → logprob: -2.926330327987671
    4. '[i' → logprob: -3.676330327987671
    5. '):' → logprob: -3.926330327987671
    6. ',' → logprob: -4.80133056640625
    7. '_stop' → logprob: -4.80133056640625
    8. ' =' → logprob: -4.92633056640625
    9. 's' → logprob: -5.17633056640625
    10. 'Stops' → logprob: -5.55133056640625

Token 1592: ' où' (ID: 15113)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22368130087852478
    2. '   ' → logprob: -2.5986812114715576
    3. ' #' → logprob: -3.8486812114715576
    4. ' stops' → logprob: -3.8486812114715576
    5. 'def' → logprob: -4.098681449890137
    6. 'stations' → logprob: -4.098681449890137
    7. 'st' → logprob: -4.473681449890137
    8. 'interval' → logprob: -5.348681449890137
    9. 'arr' → logprob: -5.848681449890137
    10. 'pos' → logprob: -5.848681449890137

Token 1593: ' dp' (ID: 21546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7681867480278015
    2. ' i' → logprob: -1.3931868076324463
    3. '   ' → logprob: -1.7681868076324463
    4. ' stops' → logprob: -3.6431868076324463
    5. 'j' → logprob: -4.518186569213867
    6. ' j' → logprob: -4.768186569213867
    7. '#' → logprob: -4.768186569213867
    8. 'arr' → logprob: -5.018186569213867
    9. 'for' → logprob: -5.018186569213867
    10. 'dp' → logprob: -5.268186569213867

Token 1594: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4874909520149231
    2. '[i' → logprob: -1.1124908924102783
    3. '[' → logprob: -3.1124908924102783
    4. '=' → logprob: -4.987491130828857
    5. '```' → logprob: -6.362491130828857
    6. '   ' → logprob: -7.862491130828857
    7. ')' → logprob: -7.862491130828857
    8. ']' → logprob: -7.987491130828857
    9. '[j' → logprob: -8.1124906539917
    10. '=[' → logprob: -8.3624906539917

Token 1595: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.15387068688869476
    2. ']' → logprob: -2.0288705825805664
    3. '[i' → logprob: -4.778870582580566
    4. ']=' → logprob: -6.903870582580566
    5. ' ][' → logprob: -7.403870582580566
    6. '   ' → logprob: -7.903870582580566
    7. 'i' → logprob: -9.153870582580566
    8. '][]' → logprob: -9.528870582580566
    9. '[' → logprob: -9.653870582580566
    10. '```' → logprob: -9.903870582580566

Token 1596: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.24222643673419952
    2. 'k' → logprob: -1.617226481437683
    3. 'x' → logprob: -5.242226600646973
    4. ']' → logprob: -5.617226600646973
    5. ' ]' → logprob: -6.617226600646973
    6. 's' → logprob: -6.742226600646973
    7. '0' → logprob: -6.992226600646973
    8. '][' → logprob: -7.117226600646973
    9. ' stops' → logprob: -7.367226600646973
    10. '   ' → logprob: -7.617226600646973

Token 1597: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005300042685121298
    2. ' ]' → logprob: -5.630300045013428
    3. ']=' → logprob: -6.880300045013428
    4. '][' → logprob: -8.38029956817627
    5. '   ' → logprob: -8.88029956817627
    6. '[i' → logprob: -9.00529956817627
    7. '[' → logprob: -10.38029956817627
    8. ']
' → logprob: -10.63029956817627
    9. ']:
' → logprob: -11.13029956817627
    10. 'i' → logprob: -11.38029956817627

Token 1598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2964500188827515
    2. ']' → logprob: -1.4214500188827515
    3. ' =' → logprob: -1.7964500188827515
    4. '[i' → logprob: -1.7964500188827515
    5. '[' → logprob: -2.296450138092041
    6. ']=' → logprob: -3.546450138092041
    7. '   ' → logprob: -5.171450138092041
    8. '][' → logprob: -5.546450138092041
    9. '[j' → logprob: -6.421450138092041
    10. ' ' → logprob: -6.546450138092041

Token 1599: ' le' (ID: 505)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.8100582361221313
    2. '0' → logprob: -1.4350582361221313
    3. 'inf' → logprob: -1.9350582361221313
    4. ' float' → logprob: -3.185058116912842
    5. 'INF' → logprob: -3.810058116912842
    6. ' le' → logprob: -4.435058116912842
    7. 'temps' → logprob: -4.435058116912842
    8. 'le' → logprob: -4.435058116912842
    9. 'min' → logprob: -4.810058116912842
    10. '[' → logprob: -5.060058116912842

Token 1600: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.7422383427619934
    2. ' nombre' → logprob: -1.4922382831573486
    3. ' temps' → logprob: -1.4922382831573486
    4. 'nombre' → logprob: -2.8672382831573486
    5. 'co' → logprob: -5.492238521575928
    6. ' coût' → logprob: -6.367238521575928
    7. ' minimum' → logprob: -6.617238521575928
    8. ' time' → logprob: -6.617238521575928
    9. 'minimum' → logprob: -6.617238521575928
    10. ' ' → logprob: -6.742238521575928

Token 1601: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7041752338409424
    2. '[' → logprob: -1.5791752338409424
    3. ' ' → logprob: -2.2041752338409424
    4. '=' → logprob: -2.9541752338409424
    5. ')' → logprob: -3.8291752338409424
    6. ' =' → logprob: -4.079174995422363
    7. 'max' → logprob: -4.329174995422363
    8. '  ' → logprob: -4.579174995422363
    9. ' max' → logprob: -4.954174995422363
    10. ' minimal' → logprob: -4.954174995422363

Token 1602: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -1.1423366069793701
    2. 'pour' → logprob: -1.5173366069793701
    3. '[' → logprob: -1.7673366069793701
    4. ' ' → logprob: -2.64233660697937
    5. ')' → logprob: -2.64233660697937
    6. '=' → logprob: -3.01733660697937
    7. ' =' → logprob: -4.017336845397949
    8. '[i' → logprob: -4.017336845397949
    9. '  ' → logprob: -4.517336845397949
    10. '_' → logprob: -5.017336845397949

Token 1603: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.7047702074050903
    2. 'arr' → logprob: -1.2047702074050903
    3. ' s' → logprob: -2.829770088195801
    4. ' atteindre' → logprob: -2.829770088195801
    5. 'aller' → logprob: -3.329770088195801
    6. ' i' → logprob: -4.454770088195801
    7. ' aller' → logprob: -4.454770088195801
    8. 'i' → logprob: -4.954770088195801
    9. 's' → logprob: -5.329770088195801
    10. 're' → logprob: -6.079770088195801

Token 1604: ' S' (ID: 336)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1171427965164185
    2. ' i' → logprob: -1.4921427965164185
    3. 'i' → logprob: -1.6171427965164185
    4. 'la' → logprob: -2.867142677307129
    5. ' S' → logprob: -3.117142677307129
    6. 'l' → logprob: -3.117142677307129
    7. 'S' → logprob: -3.492142677307129
    8. 'le' → logprob: -3.867142677307129
    9. '   ' → logprob: -3.992142677307129
    10. ' l' → logprob: -4.242142677307129

Token 1605: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009230116847902536
    2. '[' → logprob: -7.125923156738281
    3. '_[' → logprob: -10.375923156738281
    4. '_' → logprob: -10.625923156738281
    5. '_i' → logprob: -11.000923156738281
    6. '[_' → logprob: -11.250923156738281
    7. '```' → logprob: -12.125923156738281
    8. '][' → logprob: -12.125923156738281
    9. ' [' → logprob: -12.250923156738281
    10. '[j' → logprob: -12.375923156738281

Token 1606: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018720004707574844
    2. ']' → logprob: -4.3937201499938965
    3. ']][' → logprob: -5.3937201499938965
    4. '[i' → logprob: -7.0187201499938965
    5. ' ][' → logprob: -8.768719673156738
    6. '   ' → logprob: -9.268719673156738
    7. '],' → logprob: -9.393719673156738
    8. ',' → logprob: -9.393719673156738
    9. ')][' → logprob: -9.518719673156738
    10. ''][' → logprob: -10.018719673156738

Token 1607: '   ' (ID: 271)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.23874565958976746
    2. '[i' → logprob: -1.7387456893920898
    3. '[' → logprob: -4.11374568939209
    4. '[j' → logprob: -4.86374568939209
    5. '   ' → logprob: -5.23874568939209
    6. ']' → logprob: -5.73874568939209
    7. ')[' → logprob: -6.98874568939209
    8. ' ][' → logprob: -7.11374568939209
    9. '```' → logprob: -8.23874568939209
    10. '
' → logprob: -8.61374568939209

Token 1608: ' #' (ID: 1069)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11118193715810776
    2. '[i' → logprob: -2.3611819744110107
    3. '[j' → logprob: -5.486181735992432
    4. ']' → logprob: -6.111181735992432
    5. '[' → logprob: -6.236181735992432
    6. '   ' → logprob: -6.736181735992432
    7. ' ][' → logprob: -7.236181735992432
    8. ',' → logprob: -9.61118221282959
    9. '```' → logprob: -9.61118221282959
    10. '[
' → logprob: -9.86118221282959

Token 1609: ' en' (ID: 469)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.42295366525650024
    2. '][' → logprob: -1.1729536056518555
    3. '[' → logprob: -4.0479536056518555
    4. ']' → logprob: -4.9229536056518555
    5. '[j' → logprob: -5.4229536056518555
    6. '   ' → logprob: -6.0479536056518555
    7. ' [' → logprob: -7.2979536056518555
    8. ' ' → logprob: -7.4229536056518555
    9. ' ][' → logprob: -7.5479536056518555
    10. '```' → logprob: -8.297953605651855

Token 1610: ' ayant' (ID: 45436)
  Prédit: ' chois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chois' → logprob: -0.10016115009784698
    2. ' ' → logprob: -3.100161075592041
    3. ' j' → logprob: -4.225161075592041
    4. 'cho' → logprob: -4.725161075592041
    5. ' utilisant' → logprob: -4.850161075592041
    6. ' ajout' → logprob: -6.225161075592041
    7. '   ' → logprob: -6.225161075592041
    8. ' respect' → logprob: -6.475161075592041
    9. '         ' → logprob: -6.850161075592041
    10. ' cho' → logprob: -6.975161075592041

Token 1611: ' utilisé' (ID: 53138)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.10653125494718552
    2. ' choisi' → logprob: -3.1065311431884766
    3. 'cho' → logprob: -3.2315311431884766
    4. 'j' → logprob: -5.231531143188477
    5. ' arr' → logprob: -5.481531143188477
    6. 'ar' → logprob: -6.231531143188477
    7. 's' → logprob: -6.856531143188477
    8. ' ' → logprob: -7.106531143188477
    9. ' j' → logprob: -8.106531143188477
    10. 'stop' → logprob: -8.231531143188477

Token 1612: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.11296925693750381
    2. 'j' → logprob: -2.237969160079956
    3. '   ' → logprob: -9.612969398498535
    4. ' ' → logprob: -10.737969398498535
    5. '    ' → logprob: -10.737969398498535
    6. '  ' → logprob: -12.362969398498535
    7. ' ' → logprob: -12.362969398498535
    8. ' i' → logprob: -12.612969398498535
    9. '     ' → logprob: -12.862969398498535
    10. '[j' → logprob: -12.862969398498535

Token 1613: ' arr' (ID: 1724)
  Prédit: ' stops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.2130979299545288
    2. ' sem' → logprob: -2.0880980491638184
    3. ' arr' → logprob: -3.4630980491638184
    4. '_' → logprob: -4.588098049163818
    5. '_sem' → logprob: -4.838098049163818
    6. ' ar' → logprob: -5.213098049163818
    7. '_st' → logprob: -5.338098049163818
    8. '_arr' → logprob: -6.088098049163818
    9. 'arr' → logprob: -6.463098049163818
    10. 'st' → logprob: -6.963098049163818

Token 1614: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.0014145197346806526
    2. 'êt' → logprob: -6.7514142990112305
    3. 'ê' → logprob: -9.25141429901123
    4. 'êtes' → logprob: -9.50141429901123
    5. '^' → logprob: -11.12641429901123
    6. ' stops' → logprob: -11.12641429901123
    7. 'ôts' → logprob: -11.37641429901123
    8. 'êtres' → logprob: -11.62641429901123
    9. 'î' → logprob: -12.75141429901123
    10. '_' → logprob: -12.75141429901123

Token 1615: ' sem' (ID: 2743)
  Prédit: '_sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sem' → logprob: -0.37130314111709595
    2. '_' → logprob: -1.8713030815124512
    3. ' sem' → logprob: -2.871303081512451
    4. ' _' → logprob: -2.996303081512451
    5. 'sem' → logprob: -4.121303081512451
    6. '_s' → logprob: -4.496303081512451
    7. '_se' → logprob: -4.621303081512451
    8. 's' → logprob: -6.246303081512451
    9. ' ' → logprob: -6.871303081512451
    10. 'semicolon' → logprob: -6.996303081512451

Token 1616: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.004901180975139141
    2. 'ip' → logprob: -6.50490140914917
    3. 'i' → logprob: -7.12990140914917
    4. 'express' → logprob: -7.25490140914917
    5. 'pexpr' → logprob: -8.379900932312012
    6. '[i' → logprob: -9.004900932312012
    7. '_i' → logprob: -9.504900932312012
    8. 'import' → logprob: -9.567400932312012
    9. 'ipients' → logprob: -9.567400932312012
    10. 'ormais' → logprob: -9.754900932312012

Token 1617: ' jusqu' (ID: 21961)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.016372799873352
    2. '][' → logprob: -1.516372799873352
    3. '   ' → logprob: -1.641372799873352
    4. '[i' → logprob: -1.891372799873352
    5. '[' → logprob: -4.0163726806640625
    6. '_' → logprob: -4.7663726806640625
    7. ']_' → logprob: -5.1413726806640625
    8. ' ]' → logprob: -5.5163726806640625
    9. '```' → logprob: -5.6413726806640625
    10. '_s' → logprob: -5.7663726806640625

Token 1618: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.5979214310646057
    2. '[i' → logprob: -0.8479214310646057
    3. 'à' → logprob: -5.347921371459961
    4. ''ici' → logprob: -5.347921371459961
    5. '   ' → logprob: -5.472921371459961
    6. '’à' → logprob: -5.597921371459961
    7. ''au' → logprob: -6.472921371459961
    8. ''' → logprob: -7.847921371459961
    9. '['' → logprob: -7.972921371459961
    10. ''i' → logprob: -8.347921371459961

Token 1619: ' S' (ID: 336)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7307159900665283
    2. 'S' → logprob: -1.4807159900665283
    3. ' S' → logprob: -1.8557159900665283
    4. ' i' → logprob: -2.1057159900665283
    5. ' station' → logprob: -6.105715751647949
    6. 'l' → logprob: -6.230715751647949
    7. ' ' → logprob: -6.230715751647949
    8. '   ' → logprob: -6.605715751647949
    9. 'station' → logprob: -6.980715751647949
    10. 'ici' → logprob: -7.355715751647949

Token 1620: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001879731542430818
    2. '[' → logprob: -6.751879692077637
    3. '][' → logprob: -8.251879692077637
    4. ']' → logprob: -8.376879692077637
    5. '_i' → logprob: -8.876879692077637
    6. 'i' → logprob: -10.501879692077637
    7. '[
' → logprob: -10.751879692077637
    8. '   ' → logprob: -11.751879692077637
    9. ' [' → logprob: -12.251879692077637
    10. '[j' → logprob: -12.376879692077637

Token 1621: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014092041179537773
    2. '][' → logprob: -4.764091968536377
    3. ']]' → logprob: -6.264091968536377
    4. ']
' → logprob: -7.014091968536377
    5. '],' → logprob: -7.139091968536377
    6. ']]
' → logprob: -7.889091968536377
    7. '   ' → logprob: -8.139092445373535
    8. ']][' → logprob: -8.139092445373535
    9. ']:
' → logprob: -8.389092445373535
    10. ')]' → logprob: -8.639092445373535

Token 1622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7072641849517822
    2. '[' → logprob: -1.0822641849517822
    3. ':' → logprob: -2.0822641849517822
    4. 'def' → logprob: -4.832263946533203
    5. '[
' → logprob: -5.207263946533203
    6. '[i' → logprob: -5.332263946533203
    7. '):' → logprob: -5.457263946533203
    8. ' :' → logprob: -5.457263946533203
    9. ' =' → logprob: -5.707263946533203
    10. '[]' → logprob: -5.957263946533203

Token 1623: ' #
' (ID: 21888)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6163688898086548
    2. '   ' → logprob: -1.1163688898086548
    3. '[' → logprob: -2.4913687705993652
    4. ' :' → logprob: -3.7413687705993652
    5. '):' → logprob: -4.366368770599365
    6. 'def' → logprob: -5.616368770599365
    7. '       ' → logprob: -6.491368770599365
    8. '(' → logprob: -6.991368770599365
    9. ')' → logprob: -7.241368770599365
    10. ',' → logprob: -7.366368770599365

Token 1624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005799858830869198
    2. 'def' → logprob: -6.255799770355225
    3. '):' → logprob: -6.630799770355225
    4. '
' → logprob: -7.255799770355225
    5. '    ' → logprob: -7.380799770355225
    6. ')' → logprob: -7.880799770355225
    7. ':' → logprob: -8.505800247192383
    8. '    
' → logprob: -9.130800247192383
    9. ' :' → logprob: -9.380800247192383
    10. '       ' → logprob: -9.380800247192383

Token 1625: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.404941588640213
    2. '   ' → logprob: -1.1549415588378906
    3. ' dp' → logprob: -4.404941558837891
    4. 'def' → logprob: -5.779941558837891
    5. 'for' → logprob: -6.529941558837891
    6. ' for' → logprob: -8.27994155883789
    7. ' ' → logprob: -8.65494155883789
    8. '	dp' → logprob: -8.65494155883789
    9. '#' (adapté à ' #') → logprob: -9.40494155883789
    10. 'indent' → logprob: -9.65494155883789

Token 1626: ' Ici' (ID: 145754)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10073300451040268
    2. '   ' → logprob: -2.4757330417633057
    3. 'def' → logprob: -4.600732803344727
    4. ' dp' → logprob: -6.725732803344727
    5. 'for' → logprob: -8.850732803344727
    6. ' ' → logprob: -9.850732803344727
    7. ')' → logprob: -9.850732803344727
    8. '
' → logprob: -10.475732803344727
    9. '#' → logprob: -10.475732803344727
    10. ' ' → logprob: -10.600732803344727

Token 1627: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5197923183441162
    2. '   ' → logprob: -1.0197923183441162
    3. ':' → logprob: -3.894792318344116
    4. ' def' → logprob: -4.144792556762695
    5. ' ' → logprob: -6.269792556762695
    6. ')' → logprob: -6.519792556762695
    7. ' =' → logprob: -6.644792556762695
    8. '[' → logprob: -7.394792556762695
    9. '  ' → logprob: -7.769792556762695
    10. ' :' → logprob: -7.894792556762695

Token 1628: ' les' (ID: 1341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.524397611618042
    2. 'i' → logprob: -1.899397611618042
    3. 'pass' → logprob: -2.024397611618042
    4. '   ' → logprob: -2.024397611618042
    5. 'dp' → logprob: -2.274397611618042
    6. ' i' → logprob: -3.024397611618042
    7. 'for' → logprob: -3.149397611618042
    8. ' on' → logprob: -3.774397611618042
    9. 'indent' → logprob: -3.774397611618042
    10. '#' → logprob: -4.149397850036621

Token 1629: ' arr' (ID: 1724)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1807985007762909
    2. 'i' → logprob: -3.1807985305786133
    3. '[i' → logprob: -4.055798530578613
    4. 'interval' → logprob: -4.055798530578613
    5. ' stops' → logprob: -4.055798530578613
    6. 'stations' → logprob: -4.680798530578613
    7. 'def' → logprob: -4.680798530578613
    8. ' dp' → logprob: -4.805798530578613
    9. 'S' → logprob: -5.055798530578613
    10. 'for' → logprob: -5.430798530578613

Token 1630: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.0022000980097800493
    2. '[i' → logprob: -7.377200126647949
    3. ' stops' → logprob: -7.627200126647949
    4. 'êt' → logprob: -7.752200126647949
    5. 'ê' → logprob: -8.87720012664795
    6. 'êtes' → logprob: -9.50220012664795
    7. '[' → logprob: -9.50220012664795
    8. 'ts' → logprob: -9.87720012664795
    9. '[
' → logprob: -10.00220012664795
    10. ']' → logprob: -10.37720012664795

Token 1631: ' sem' (ID: 2743)
  Prédit: ' sem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sem' → logprob: -0.7623138427734375
    2. '_' → logprob: -1.6373138427734375
    3. '_sem' → logprob: -1.7623138427734375
    4. 'sem' → logprob: -2.8873138427734375
    5. ' _' → logprob: -2.8873138427734375
    6. '_s' → logprob: -4.1373138427734375
    7. 's' → logprob: -4.8873138427734375
    8. '_se' → logprob: -5.3873138427734375
    9. '_stop' → logprob: -5.6373138427734375
    10. ' s' → logprob: -5.8873138427734375

Token 1632: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.4328104853630066
    2. 'express' → logprob: -1.1828105449676514
    3. 'op' → logprob: -4.057810306549072
    4. 'pexpr' → logprob: -5.807810306549072
    5. '(express' → logprob: -5.932810306549072
    6. 'pr' → logprob: -6.182810306549072
    7. 'i' → logprob: -6.557810306549072
    8. 'ormais' → logprob: -6.557810306549072
    9. 'import' → logprob: -6.682810306549072
    10. '_op' → logprob: -7.120310306549072

Token 1633: ' cho' (ID: 2552)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8324618935585022
    2. '[' → logprob: -1.5824618339538574
    3. ')' → logprob: -1.8324618339538574
    4. 's' → logprob: -3.5824618339538574
    5. ' )' → logprob: -4.207461833953857
    6. ']' → logprob: -4.207461833953857
    7. ' ' → logprob: -4.332461833953857
    8. ' =' → logprob: -4.582461833953857
    9. '   ' → logprob: -4.582461833953857
    10. ' sont' → logprob: -4.582461833953857

Token 1634: 'isis' (ID: 11352)
  Prédit: 'isis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isis' → logprob: -0.587507426738739
    2. 'is' → logprob: -1.4625074863433838
    3. 's' → logprob: -2.587507486343384
    4. 'isent' → logprob: -2.837507486343384
    5. 'isir' → logprob: -3.837507486343384
    6. 'sis' → logprob: -4.212507247924805
    7. 'isi' → logprob: -4.337507247924805
    8. 'isie' → logprob: -5.087507247924805
    9. 'ix' → logprob: -5.712507247924805
    10. 'i' → logprob: -5.962507247924805

Token 1635: ' sont' (ID: 5242)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8041286468505859
    2. '[' → logprob: -1.429128646850586
    3. ')' → logprob: -2.554128646850586
    4. ' sont' → logprob: -2.929128646850586
    5. ' =' → logprob: -3.054128646850586
    6. '   ' → logprob: -3.804128646850586
    7. '```' → logprob: -3.929128646850586
    8. '_' → logprob: -4.429128646850586
    9. 's' → logprob: -4.679128646850586
    10. ',' → logprob: -4.929128646850586

Token 1636: ' au' (ID: 2791)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.986678123474121
    2. '   ' → logprob: -2.486678123474121
    3. ' soit' → logprob: -2.486678123474121
    4. '[i' → logprob: -2.736678123474121
    5. ' toujours' → logprob: -2.736678123474121
    6. ' uniquement' → logprob: -3.236678123474121
    7. ' des' → logprob: -3.236678123474121
    8. 'strict' → logprob: -3.486678123474121
    9. ' forcément' → logprob: -3.736678123474121
    10. 'des' → logprob: -3.861678123474121

Token 1637: ' minimum' (ID: 11085)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.7713208198547363
    2. 'S' → logprob: -2.3963208198547363
    3. 'minimum' → logprob: -2.6463208198547363
    4. 'niveau' → logprob: -3.1463208198547363
    5. 'dé' → logprob: -3.2713208198547363
    6. 'dp' → logprob: -3.3963208198547363
    7. 'i' → logprob: -3.5213208198547363
    8. '[i' → logprob: -3.7713208198547363
    9. 's' → logprob: -3.8963208198547363
    10. 'plus' → logprob: -4.021320819854736

Token 1638: ' les' (ID: 1341)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.789958655834198
    2. '[' → logprob: -1.9149587154388428
    3. ' +' → logprob: -1.9149587154388428
    4. '+' → logprob: -2.6649587154388428
    5. '_' → logprob: -3.2899587154388428
    6. '1' → logprob: -3.2899587154388428
    7. '[j' → logprob: -3.9149587154388428
    8. '=' → logprob: -4.289958477020264
    9. ' =' → logprob: -4.289958477020264
    10. ' ' → logprob: -4.414958477020264

Token 1639: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.16255170106887817
    2. 'j' → logprob: -2.6625516414642334
    3. 'express' → logprob: -3.2875516414642334
    4. 'i' → logprob: -3.7875516414642334
    5. 'S' → logprob: -5.4125518798828125
    6. ' M' → logprob: -5.6625518798828125
    7. 'stations' → logprob: -6.1625518798828125
    8. ' stops' → logprob: -6.2875518798828125
    9. ' j' → logprob: -6.5375518798828125
    10. 'arr' → logprob: -6.6625518798828125

Token 1640: ' arr' (ID: 1724)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5064703822135925
    2. '[i' → logprob: -1.3814704418182373
    3. ' -' → logprob: -3.2564704418182373
    4. '[' → logprob: -3.7564704418182373
    5. '][' → logprob: -3.8814704418182373
    6. ')' → logprob: -4.006470203399658
    7. ')[' → logprob: -5.131470203399658
    8. ' stops' → logprob: -5.131470203399658
    9. '
' → logprob: -5.506470203399658
    10. ',' → logprob: -5.631470203399658

Token 1641: 'êts' (ID: 56582)
  Prédit: ' stops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.8700985312461853
    2. 'êts' → logprob: -1.49509859085083
    3. 'express' → logprob: -2.37009859085083
    4. 'r' → logprob: -3.12009859085083
    5. '[' → logprob: -3.24509859085083
    6. '['' → logprob: -3.62009859085083
    7. 'stop' → logprob: -3.74509859085083
    8. 'Stops' → logprob: -3.87009859085083
    9. '_stop' → logprob: -4.24509859085083
    10. ']' → logprob: -4.49509859085083

Token 1642: ' express' (ID: 6101)
  Prédit: '_sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sem' → logprob: -0.16428498923778534
    2. '_' → logprob: -3.1642849445343018
    3. 'sem' → logprob: -3.1642849445343018
    4. '_se' → logprob: -4.039285182952881
    5. '_stop' → logprob: -4.414285182952881
    6. '_s' → logprob: -4.789285182952881
    7. ' sem' → logprob: -5.164285182952881
    8. '_ex' → logprob: -5.789285182952881
    9. 'def' → logprob: -6.039285182952881
    10. '[i' → logprob: -6.039285182952881

Token 1643: ' fixes' (ID: 60095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36452507972717285
    2. ']' → logprob: -2.364525079727173
    3. '[i' → logprob: -3.114525079727173
    4. '   ' → logprob: -3.364525079727173
    5. '):' → logprob: -3.364525079727173
    6. ']:' → logprob: -3.489525079727173
    7. ':' → logprob: -3.739525079727173
    8. '):
' → logprob: -3.989525079727173
    9. 'def' → logprob: -5.364524841308594
    10. ')' → logprob: -5.864524841308594

Token 1644: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0474131107330322
    2. ':' → logprob: -1.7974131107330322
    3. '):' → logprob: -2.1724131107330322
    4. ']:' → logprob: -2.1724131107330322
    5. '[i' → logprob: -2.2974131107330322
    6. ']' → logprob: -2.5474131107330322
    7. '[' → logprob: -3.9224131107330322
    8. 'def' → logprob: -4.297412872314453
    9. ' =' → logprob: -4.422412872314453
    10. ',' → logprob: -5.047412872314453

Token 1645: 'incl' (ID: 103424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6115722060203552
    2. ',' → logprob: -2.361572265625
    3. ' +' → logprob: -2.736572265625
    4. '),' → logprob: -2.736572265625
    5. '+' → logprob: -3.361572265625
    6. ' )' → logprob: -3.611572265625
    7. ')
' → logprob: -3.986572265625
    8. '=' → logprob: -4.611572265625
    9. ')]' → logprob: -4.611572265625
    10. 'M' → logprob: -4.736572265625

Token 1646: 'uant' (ID: 44411)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.6377991437911987
    2. 'u' → logprob: -1.0127991437911987
    3. 'uded' → logprob: -3.1377992630004883
    4. 'uant' → logprob: -3.2627992630004883
    5. 'ud' → logprob: -5.137799263000488
    6. 'uding' → logprob: -5.137799263000488
    7. 'usive' → logprob: -5.887799263000488
    8. 'udent' → logprob: -6.887799263000488
    9. 'uyendo' → logprob: -6.887799263000488
    10. 'uindo' → logprob: -7.137799263000488

Token 1647: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0103164911270142
    2. 'les' → logprob: -2.2603163719177246
    3. ' _' → logprob: -2.5103163719177246
    4. '_' → logprob: -2.6353163719177246
    5. 'S' → logprob: -2.8853163719177246
    6. ' S' → logprob: -3.1353163719177246
    7. ')' → logprob: -3.1353163719177246
    8. 'express' → logprob: -3.1353163719177246
    9. ' ' → logprob: -3.2603163719177246
    10. ' ' → logprob: -3.2603163719177246

Token 1648: ' extr' (ID: 15674)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31840673089027405
    2. 'express' → logprob: -2.693406820297241
    3. 'S' → logprob: -2.818406820297241
    4. '[i' → logprob: -3.318406820297241
    5. 'stations' → logprob: -3.443406820297241
    6. 'j' → logprob: -3.693406820297241
    7. 'station' → logprob: -4.443406581878662
    8. ' i' → logprob: -4.943406581878662
    9. 'arr' → logprob: -5.818406581878662
    10. ' stops' → logprob: -5.943406581878662

Token 1649: 'êmes' (ID: 49694)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.2379910945892334
    2. ' stops' → logprob: -2.1129910945892334
    3. 'êmes' → logprob: -2.3629910945892334
    4. 'êts' → logprob: -2.4879910945892334
    5. 'ess' → logprob: -2.6129910945892334
    6. 'éments' → logprob: -2.7379910945892334
    7. '_' → logprob: -3.3629910945892334
    8. 'ê' → logprob: -3.3629910945892334
    9. '```' → logprob: -3.8629910945892334
    10. 'ément' → logprob: -4.1129913330078125

Token 1650: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.323708176612854
    2. ',' → logprob: -2.5737080574035645
    3. '_' → logprob: -3.0737080574035645
    4. ')]' → logprob: -3.5737080574035645
    5. '[' → logprob: -4.0737080574035645
    6. ')])' → logprob: -4.0737080574035645
    7. '])' → logprob: -4.3237080574035645
    8. '),' → logprob: -4.6987080574035645
    9. '+' → logprob: -4.8237080574035645
    10. ']' → logprob: -4.9487080574035645

Token 1651: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12313231080770493
    2. '#' → logprob: -2.3731322288513184
    3. ' et' → logprob: -4.498132228851318
    4. ',' → logprob: -5.873132228851318
    5. ' #' → logprob: -5.873132228851318
    6. 'et' → logprob: -6.248132228851318
    7. ')' → logprob: -7.498132228851318
    8. ' donc' → logprob: -7.498132228851318
    9. ' mais' → logprob: -7.623132228851318
    10. 'def' → logprob: -7.623132228851318

Token 1652: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3745018243789673
    2. '#' (adapté à ' #') → logprob: -1.7495018243789673
    3. ',' → logprob: -2.9995017051696777
    4. ' #' → logprob: -3.3745017051696777
    5. ')' → logprob: -3.7495017051696777
    6. ' et' → logprob: -4.124501705169678
    7. ' ' → logprob: -5.874501705169678
    8. 'et' → logprob: -6.124501705169678
    9. '    ' → logprob: -6.249501705169678
    10. ' donc' → logprob: -6.874501705169678

Token 1653: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09854721277952194
    2. '   ' → logprob: -3.0985472202301025
    3. 'et' → logprob: -3.9735472202301025
    4. ' #' → logprob: -4.348546981811523
    5. ' et' → logprob: -4.848546981811523
    6. 'don' → logprob: -5.473546981811523
    7. ' donc' → logprob: -5.973546981811523
    8. 'mais' → logprob: -7.473546981811523
    9. 'ains' → logprob: -8.348546981811523
    10. ',' → logprob: -8.598546981811523

Token 1654: ' on' (ID: 402)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.354404479265213
    2. ' on' → logprob: -2.8544044494628906
    3. 'les' → logprob: -2.9794044494628906
    4. ' donc' → logprob: -3.4794044494628906
    5. ' ' → logprob: -3.6044044494628906
    6. ' ' → logprob: -3.8544044494628906
    7. ' au' → logprob: -3.8544044494628906
    8. 'on' → logprob: -4.354404449462891
    9. ' aussi' → logprob: -4.729404449462891
    10. '   ' → logprob: -5.104404449462891

Token 1655: ' doit' (ID: 21822)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.3307703733444214
    2. 'continue' → logprob: -1.8307703733444214
    3. ' doit' → logprob: -2.580770492553711
    4. ' ajoute' → logprob: -2.580770492553711
    5. 'aj' → logprob: -2.830770492553711
    6. 'do' → logprob: -2.830770492553711
    7. ' initialise' → logprob: -3.330770492553711
    8. ' complète' → logprob: -3.455770492553711
    9. ' utilise' → logprob: -3.580770492553711
    10. 'pe' → logprob: -3.580770492553711

Token 1656: ' choisir' (ID: 47004)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.4624775648117065
    2. ' choisir' → logprob: -1.8374775648117065
    3. 'cho' → logprob: -1.9624775648117065
    4. 'contin' → logprob: -1.9624775648117065
    5. 'aj' → logprob: -2.337477684020996
    6. ' compléter' → logprob: -2.587477684020996
    7. ' ajouter' → logprob: -3.462477684020996
    8. '#' → logprob: -3.462477684020996
    9. ' ' → logprob: -3.587477684020996
    10. ' remplir' → logprob: -4.587477684020996

Token 1657: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1320379376411438
    2. ' K' → logprob: -2.382037878036499
    3. '(K' → logprob: -4.257038116455078
    4. 'K' → logprob: -5.507038116455078
    5. ' j' → logprob: -5.757038116455078
    6. ' ' → logprob: -7.007038116455078
    7. '(' → logprob: -7.007038116455078
    8. ' des' → logprob: -7.007038116455078
    9. ' supplémentaires' → logprob: -7.132038116455078
    10. ' ' → logprob: -7.382038116455078

Token 1658: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4755559265613556
    2. ' K' → logprob: -0.9755558967590332
    3. ' (' → logprob: -6.725555896759033
    4. ')' → logprob: -9.225556373596191
    5. '(K' → logprob: -9.725556373596191
    6. ' ' → logprob: -10.350556373596191
    7. ' )' → logprob: -10.725556373596191
    8. '(' → logprob: -10.850556373596191
    9. ' ' → logprob: -10.850556373596191
    10. '0' → logprob: -12.225556373596191

Token 1659: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014619889669120312
    2. '-' → logprob: -4.264619827270508
    3. '-M' → logprob: -8.014619827270508
    4. ')' → logprob: -9.639619827270508
    5. ' ' → logprob: -10.514619827270508
    6. '-K' → logprob: -11.514619827270508
    7. '   ' → logprob: -11.764619827270508
    8. '+' → logprob: -12.514619827270508
    9. '  ' → logprob: -13.139619827270508
    10. ' ' → logprob: -13.264619827270508

Token 1660: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014164329506456852
    2. ' M' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.264163970947266
    4. '	M' → logprob: -15.889163970947266
    5. ' ' → logprob: -16.889163970947266
    6. 'B' → logprob: -16.889163970947266
    7. ' ' → logprob: -17.389163970947266
    8. ')' → logprob: -18.639163970947266
    9. 'm' → logprob: -18.764163970947266
    10. 'import' → logprob: -18.889163970947266

Token 1661: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001242772996192798
    2. ' )' → logprob: -9.875123977661133
    3. '+' → logprob: -10.125123977661133
    4. ' +' → logprob: -11.125123977661133
    5. ')+' → logprob: -11.625123977661133
    6. ' stops' → logprob: -12.750123977661133
    7. 'arr' → logprob: -13.500123977661133
    8. ')
' → logprob: -13.875123977661133
    9. ')`' → logprob: -14.750123977661133
    10. ' supplémentaires' → logprob: -14.875123977661133

Token 1662: ' arr' (ID: 1724)
  Prédit: ' supplémentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -1.1129487752914429
    2. ' stops' → logprob: -1.2379487752914429
    3. ' arr' → logprob: -1.7379487752914429
    4. 'arr' → logprob: -1.8629487752914429
    5. ')' → logprob: -3.7379488945007324
    6. '+' → logprob: -5.112948894500732
    7. ' ' → logprob: -5.862948894500732
    8. ' additional' → logprob: -5.987948894500732
    9. ' tokens' → logprob: -6.112948894500732
    10. ' plus' → logprob: -6.237948894500732

Token 1663: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.16532002389431
    2. ' stops' → logprob: -2.0403199195861816
    3. '_stop' → logprob: -5.540319919586182
    4. '_points' → logprob: -6.540319919586182
    5. '_expr' → logprob: -6.665319919586182
    6. 'êt' → logprob: -6.665319919586182
    7. ' ' → logprob: -6.790319919586182
    8. 'êtres' → logprob: -6.915319919586182
    9. 'êmes' → logprob: -7.040319919586182
    10. '_' → logprob: -7.040319919586182

Token 1664: ' supplémentaires' (ID: 99346)
  Prédit: ' supplémentaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supplémentaires' → logprob: -0.3017216622829437
    2. '_sup' → logprob: -2.4267215728759766
    3. ' supplémentaire' → logprob: -3.3017215728759766
    4. '_' → logprob: -3.6767215728759766
    5. ' _' → logprob: -3.6767215728759766
    6. '_s' → logprob: -3.8017215728759766
    7. '_sem' → logprob: -4.176721572875977
    8. ' sem' → logprob: -4.801721572875977
    9. '_add' → logprob: -5.176721572875977
    10. ')' → logprob: -5.676721572875977

Token 1665: ' répart' (ID: 147636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5862788558006287
    2. ')' → logprob: -1.7112789154052734
    3. ' supplémentaires' → logprob: -2.5862789154052734
    4. ' entre' → logprob: -2.9612789154052734
    5. ' à' → logprob: -3.2112789154052734
    6. ',' → logprob: -3.3362789154052734
    7. ' ' → logprob: -4.711278915405273
    8. '.' → logprob: -5.086278915405273
    9. '```' → logprob: -5.711278915405273
    10. '_' → logprob: -5.961278915405273

Token 1666: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8798050880432129
    2. 'sur' → logprob: -1.004805088043213
    3. 'us' → logprob: -2.879805088043213
    4. 'dus' → logprob: -3.129805088043213
    5. 'rés' → logprob: -3.504805088043213
    6. ' entre' → logprob: -3.629805088043213
    7. 'itus' → logprob: -4.754805088043213
    8. 'entre' → logprob: -4.754805088043213
    9. 'u' → logprob: -4.879805088043213
    10. 'tis' → logprob: -5.504805088043213

Token 1667: ' sur' (ID: 1512)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.6713740229606628
    2. 'entre' → logprob: -1.2963740825653076
    3. 'sur' → logprob: -1.6713740825653076
    4. ' sur' → logprob: -4.1713738441467285
    5. 'dans' → logprob: -5.2963738441467285
    6. 'between' → logprob: -6.4213738441467285
    7. ' ' → logprob: -6.5463738441467285
    8. ' between' → logprob: -7.2963738441467285
    9. '   ' → logprob: -7.5463738441467285
    10. '_sur' → logprob: -7.6713738441467285

Token 1668: ' interv' (ID: 37413)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5883796215057373
    2. ' les' → logprob: -1.3383796215057373
    3. ' intervals' → logprob: -3.0883796215057373
    4. 'interval' → logprob: -3.4633796215057373
    5. ' M' → logprob: -3.7133796215057373
    6. 'segments' → logprob: -3.9633796215057373
    7. 'l' → logprob: -4.088379859924316
    8. ' l' → logprob: -4.838379859924316
    9. 'the' → logprob: -4.963379859924316
    10. ' the' → logprob: -5.088379859924316

Token 1669: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.01769726537168026
    2. 'al' → logprob: -4.642697334289551
    3. 'als' → logprob: -5.892697334289551
    4. 'ales' → logprob: -6.392697334289551
    5. 'a' → logprob: -7.517697334289551
    6. '```' → logprob: -7.830197334289551
    7. 'aux' → logprob: -7.892697334289551
    8. 'all' → logprob: -8.45519733428955
    9. '#' → logprob: -8.51769733428955
    10. '   ' → logprob: -8.89269733428955

Token 1670: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5728431940078735
    2. ')' → logprob: -1.9478431940078735
    3. '[i' → logprob: -2.697843074798584
    4. ' entre' → logprob: -3.197843074798584
    5. ']' → logprob: -3.572843074798584
    6. '.' → logprob: -3.822843074798584
    7. '):' → logprob: -3.822843074798584
    8. ',' → logprob: -3.947843074798584
    9. '):
' → logprob: -4.322843074798584
    10. '
' → logprob: -4.447843074798584

Token 1671: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3139348030090332
    2. ':' → logprob: -1.4389348030090332
    3. '):' → logprob: -4.563934803009033
    4. '[' → logprob: -5.063934803009033
    5. ':
' → logprob: -5.063934803009033
    6. ' :' → logprob: -6.063934803009033
    7. ')' → logprob: -6.563934803009033
    8. '):
' → logprob: -7.313934803009033
    9. '[i' → logprob: -7.438934803009033
    10. '\t' → logprob: -7.688934803009033

Token 1672: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1237175390124321
    2. ':' → logprob: -2.2487175464630127
    3. '\t' → logprob: -5.998717308044434
    4. '):' → logprob: -6.123717308044434
    5. '
' → logprob: -6.373717308044434
    6. ':
' → logprob: -6.623717308044434
    7. ' :' → logprob: -6.873717308044434
    8. '```' → logprob: -7.623717308044434
    9. '	' → logprob: -7.873717308044434
    10. '    
' → logprob: -8.248717308044434

Token 1673: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005567178595811129
    2. 'dp' → logprob: -5.7555670738220215
    3. '
' → logprob: -6.8805670738220215
    4. '    
' → logprob: -8.13056755065918
    5. ':' → logprob: -8.38056755065918
    6. ')' → logprob: -8.75556755065918
    7. 'def' → logprob: -9.25556755065918
    8. '  
' → logprob: -9.38056755065918
    9. ' ' → logprob: -10.00556755065918
    10. ' dp' → logprob: -10.13056755065918

Token 1674: ' suppose' (ID: 35968)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34711265563964844
    2. 'continue' → logprob: -2.5971126556396484
    3. ' peux' → logprob: -2.7221126556396484
    4. 's' → logprob: -2.8471126556396484
    5. ' continue' → logprob: -3.9721126556396484
    6. 'n' → logprob: -4.097112655639648
    7. 'contin' → logprob: -4.972112655639648
    8. 'do' → logprob: -5.097112655639648
    9. 'vais' → logprob: -5.097112655639648
    10. 'dé' → logprob: -5.472112655639648

Token 1675: ' un' (ID: 537)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.9907243251800537
    2. 'que' → logprob: -0.9907243251800537
    3. '   ' → logprob: -1.7407243251800537
    4. 'd' → logprob: -3.9907243251800537
    5. ' ' → logprob: -4.490724563598633
    6. 'qu' → logprob: -5.365724563598633
    7. ' M' → logprob: -5.490724563598633
    8. 'M' → logprob: -5.740724563598633
    9. '    ' → logprob: -5.740724563598633
    10. 'import' → logprob: -5.740724563598633

Token 1676: ' arrêt' (ID: 77403)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.831965446472168
    2. 'minimum' → logprob: -2.831965446472168
    3. 's' → logprob: -3.206965446472168
    4. '=' → logprob: -3.581965446472168
    5. 'e' → logprob: -3.831965446472168
    6. '[' → logprob: -3.956965446472168
    7. 'r' → logprob: -3.956965446472168
    8. '_' → logprob: -4.081965446472168
    9. '[
' → logprob: -4.081965446472168
    10. 'possible' → logprob: -4.206965446472168

Token 1677: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16149179637432098
    2. 's' → logprob: -3.161491870880127
    3. ' _' → logprob: -3.786491870880127
    4. ' de' → logprob: -4.036491870880127
    5. ' sem' → logprob: -4.036491870880127
    6. ' supplémentaire' → logprob: -4.286491870880127
    7. '_s' → logprob: -5.036491870880127
    8. '_sem' → logprob: -5.161491870880127
    9. 'sem' → logprob: -5.286491870880127
    10. 'de' → logprob: -6.411491870880127

Token 1678: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.3561161458492279
    2. 'express' → logprob: -1.6061161756515503
    3. 'r' → logprob: -4.73111629486084
    4. 'op' → logprob: -4.85611629486084
    5. 'pexpr' → logprob: -4.98111629486084
    6. '```' → logprob: -4.98111629486084
    7. 'pr' → logprob: -5.10611629486084
    8. ' ' → logprob: -5.35611629486084
    9. 'i' → logprob: -5.73111629486084
    10. '[i' → logprob: -5.98111629486084

Token 1679: ' aux' (ID: 5850)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31170654296875
    2. ' _' → logprob: -2.43670654296875
    3. 's' → logprob: -2.56170654296875
    4. ' supplémentaire' → logprob: -2.81170654296875
    5. ' ' → logprob: -5.18670654296875
    6. '_choices' → logprob: -5.18670654296875
    7. '_s' → logprob: -5.31170654296875
    8. '   ' → logprob: -6.06170654296875
    9. ')' → logprob: -6.06170654296875
    10. ' de' → logprob: -6.18670654296875

Token 1680: ' points' (ID: 5571)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.17025157809257507
    2. ' S' → logprob: -2.6702516078948975
    3. 'extr' → logprob: -3.2952516078948975
    4. 'i' → logprob: -4.420251369476318
    5. 's' → logprob: -5.170251369476318
    6. 'express' → logprob: -5.295251369476318
    7. 'stations' → logprob: -5.420251369476318
    8. 'indices' → logprob: -5.670251369476318
    9. 'dé' → logprob: -6.170251369476318
    10. '[i' → logprob: -6.295251369476318

Token 1681: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1277831643819809
    2. '[i' → logprob: -3.3777830600738525
    3. 'i' → logprob: -3.6277830600738525
    4. 'd' → logprob: -4.252783298492432
    5. 'express' → logprob: -4.627783298492432
    6. ' S' → logprob: -4.752783298492432
    7. '0' → logprob: -5.002783298492432
    8. 's' → logprob: -5.752783298492432
    9. '_i' → logprob: -6.002783298492432
    10. '   ' → logprob: -6.252783298492432

Token 1682: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4084446132183075
    2. '[i' → logprob: -1.1584446430206299
    3. ']' → logprob: -4.783444404602051
    4. '_' → logprob: -6.283444404602051
    5. '[
' → logprob: -6.408444404602051
    6. 'def' → logprob: -6.783444404602051
    7. '][' → logprob: -7.033444404602051
    8. '_i' → logprob: -7.033444404602051
    9. ' =' → logprob: -7.158444404602051
    10. '0' → logprob: -7.408444404602051

Token 1683: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1277802288532257
    2. '],' → logprob: -2.5027801990509033
    3. '+' → logprob: -4.252780437469482
    4. '])' → logprob: -4.627780437469482
    5. '[i' → logprob: -4.877780437469482
    6. ']+' → logprob: -5.502780437469482
    7. ']
' → logprob: -7.627780437469482
    8. '][' → logprob: -8.002779960632324
    9. '],
' → logprob: -8.502779960632324
    10. '[' → logprob: -8.502779960632324

Token 1684: ' donc' (ID: 14206)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.341375470161438
    2. ',' → logprob: -1.466375470161438
    3. 'i' → logprob: -1.966375470161438
    4. 'S' → logprob: -2.3413753509521484
    5. ' S' → logprob: -2.5913753509521484
    6. '   ' → logprob: -2.9663753509521484
    7. ' i' → logprob: -3.2163753509521484
    8. '    
' → logprob: -3.8413753509521484
    9. ' et' → logprob: -4.466375350952148
    10. ' 
' → logprob: -4.466375350952148

Token 1685: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0798537731170654
    2. ' on' → logprob: -2.3298537731170654
    3. 'les' → logprob: -2.8298537731170654
    4. ' dp' → logprob: -2.9548537731170654
    5. '   ' → logprob: -3.0798537731170654
    6. 'S' → logprob: -3.2048537731170654
    7. 'i' → logprob: -3.3298537731170654
    8. ' S' → logprob: -3.3298537731170654
    9. 'on' → logprob: -3.4548537731170654
    10. 'j' → logprob: -3.4548537731170654

Token 1686: ' arr' (ID: 1724)
  Prédit: ' interv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interv' → logprob: -0.7537218332290649
    2. ' intervals' → logprob: -2.2537217140197754
    3. 'interval' → logprob: -2.3787217140197754
    4. ' segments' → logprob: -2.8787217140197754
    5. ' espaces' → logprob: -2.8787217140197754
    6. '[i' → logprob: -3.3787217140197754
    7. '_' → logprob: -3.7537217140197754
    8. ' ' → logprob: -3.8787217140197754
    9. ' _' → logprob: -4.253721714019775
    10. ' ' → logprob: -4.378721714019775

Token 1687: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.5592113733291626
    2. '[i' → logprob: -1.9342113733291626
    3. ' stops' → logprob: -2.059211254119873
    4. '[' → logprob: -3.434211254119873
    5. 'rets' → logprob: -3.934211254119873
    6. 'Stops' → logprob: -3.934211254119873
    7. 'êt' → logprob: -4.934211254119873
    8. ']' → logprob: -5.184211254119873
    9. 't' → logprob: -5.434211254119873
    10. '```' → logprob: -5.684211254119873

Token 1688: ' supplémentaires' (ID: 99346)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8636810779571533
    2. 'sem' → logprob: -0.9886810779571533
    3. ' sem' → logprob: -2.2386810779571533
    4. '_sem' → logprob: -3.1136810779571533
    5. 's' → logprob: -3.8636810779571533
    6. '_s' → logprob: -4.988680839538574
    7. '_' → logprob: -5.113680839538574
    8. '[' → logprob: -5.488680839538574
    9. '_se' → logprob: -5.738680839538574
    10. ' [' → logprob: -5.738680839538574

Token 1689: ' dans' (ID: 2671)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.41216450929641724
    2. 's' → logprob: -2.6621644496917725
    3. ' supplémentaires' → logprob: -2.9121644496917725
    4. ' =' → logprob: -3.2871644496917725
    5. ' doivent' → logprob: -3.6621644496917725
    6. ' à' → logprob: -3.7871644496917725
    7. '[i' → logprob: -3.9121644496917725
    8. ' entre' → logprob: -4.287164688110352
    9. '_s' → logprob: -4.412164688110352
    10. ',' → logprob: -4.787164688110352

Token 1690: ' chaque' (ID: 21194)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5422790050506592
    2. 'l' → logprob: -1.4172790050506592
    3. ' chaque' → logprob: -2.292279005050659
    4. 'les' → logprob: -3.542279005050659
    5. ' les' → logprob: -4.167279243469238
    6. ' ' → logprob: -4.917279243469238
    7. ' ' → logprob: -5.167279243469238
    8. 'interval' → logprob: -5.417279243469238
    9. '[i' → logprob: -6.542279243469238
    10. 'cha' → logprob: -6.542279243469238

Token 1691: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.17036518454551697
    2. ' interval' → logprob: -2.04536509513855
    3. '_interval' → logprob: -4.170365333557129
    4. '_' → logprob: -5.045365333557129
    5. '_inter' → logprob: -6.795365333557129
    6. 'inter' → logprob: -7.045365333557129
    7. 'segment' → logprob: -7.420365333557129
    8. ' segment' → logprob: -7.420365333557129
    9. ' _' → logprob: -7.670365333557129
    10. '[' → logprob: -7.670365333557129

Token 1692: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.06450185924768448
    2. 'e' → logprob: -3.8145017623901367
    3. '_' → logprob: -4.314501762390137
    4. 'val' → logprob: -4.439501762390137
    5. 'aire' → logprob: -4.814501762390137
    6. '[' → logprob: -5.939501762390137
    7. 'v' → logprob: -6.689501762390137
    8. '#' → logprob: -7.314501762390137
    9. ']' → logprob: -7.564501762390137
    10. 'vale' → logprob: -8.314501762390137

Token 1693: '.

' (ID: 364)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6344550848007202
    2. ' sont' → logprob: -1.8844550848007202
    3. ' =' → logprob: -2.3844552040100098
    4. 's' → logprob: -2.8844552040100098
    5. '_' → logprob: -3.5094552040100098
    6. ',' → logprob: -3.8844552040100098
    7. '=' → logprob: -4.25945520401001
    8. '[' → logprob: -4.25945520401001
    9. '```' → logprob: -4.50945520401001
    10. ' entre' → logprob: -4.63445520401001

Token 1694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03481253981590271
    2. ':' → logprob: -3.5348124504089355
    3. 'def' → logprob: -6.7848124504089355
    4. ':
' → logprob: -6.9098124504089355
    5. '
' → logprob: -7.6598124504089355
    6. ' :' → logprob: -7.6598124504089355
    7. '):' → logprob: -7.7848124504089355
    8. '[i' → logprob: -8.159812927246094
    9. '    
' → logprob: -8.159812927246094
    10. '[' → logprob: -8.659812927246094

Token 1695: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0536605641245842
    2. ':' → logprob: -3.4286606311798096
    3. 'dp' → logprob: -4.6786603927612305
    4. '
' → logprob: -5.4286603927612305
    5. ':
' → logprob: -5.6786603927612305
    6. '\t' → logprob: -7.1786603927612305
    7. ' :' → logprob: -7.8036603927612305
    8. '```' → logprob: -8.17866039276123
    9. '    
' → logprob: -8.42866039276123
    10. '	dp' → logprob: -8.67866039276123

Token 1696: ' Not' (ID: 4037)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3142762780189514
    2. '   ' → logprob: -1.5642762184143066
    3. ' dp' → logprob: -2.8142762184143066
    4. '
' → logprob: -9.189276695251465
    5. ' ' → logprob: -9.689276695251465
    6. 'def' → logprob: -9.689276695251465
    7. '    
' → logprob: -9.939276695251465
    8. '  ' → logprob: -10.064276695251465
    9. '    ' → logprob: -10.189276695251465
    10. '	dp' → logprob: -10.314276695251465

Token 1697: 'ation' (ID: 387)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7824124097824097
    2. '   ' → logprob: -1.7824124097824097
    3. 'def' → logprob: -2.782412528991699
    4. 'dp' → logprob: -3.157412528991699
    5. 'Implemented' → logprob: -3.407412528991699
    6. '_initialized' → logprob: -3.782412528991699
    7. ' =' → logprob: -4.032412528991699
    8. 'ec' → logprob: -4.157412528991699
    9. 'es' → logprob: -4.157412528991699
    10. 'ed' → logprob: -4.282412528991699

Token 1698: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3148198425769806
    2. ' =' → logprob: -1.9398198127746582
    3. ' dp' → logprob: -2.314819812774658
    4. '   ' → logprob: -4.814819812774658
    5. '=' → logprob: -4.939819812774658
    6. ':' → logprob: -5.189819812774658
    7. '_dp' → logprob: -6.689819812774658
    8. '[i' → logprob: -6.939819812774658
    9. ' ' → logprob: -7.064819812774658
    10. '[' → logprob: -7.064819812774658

Token 1699: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.8731011152267456
    2. 'dp' → logprob: -1.1231011152267456
    3. '   ' → logprob: -1.4981011152267456
    4. ' n' → logprob: -4.248101234436035
    5. '```' → logprob: -4.998101234436035
    6. 'n' → logprob: -5.248101234436035
    7. '    
' → logprob: -6.623101234436035
    8. ' i' → logprob: -6.748101234436035
    9. '    ' → logprob: -7.123101234436035
    10. ' for' → logprob: -7.873101234436035

Token 1700: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22042804956436157
    2. ' dp' → logprob: -2.220427989959717
    3. '   ' → logprob: -2.720427989959717
    4. 'i' → logprob: -5.220427989959717
    5. 'n' → logprob: -5.220427989959717
    6. ' i' → logprob: -6.220427989959717
    7. ' n' → logprob: -6.345427989959717
    8. ' ' → logprob: -6.470427989959717
    9. 'M' → logprob: -6.720427989959717
    10. '```' → logprob: -7.095427989959717

Token 1701: ' intervals' (ID: 49900)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.046259187161922455
    2. '   ' → logprob: -4.04625940322876
    3. ' dp' → logprob: -4.04625940322876
    4. 'i' → logprob: -5.04625940322876
    5. 'M' → logprob: -6.17125940322876
    6. 'n' → logprob: -7.67125940322876
    7. ' i' → logprob: -8.671258926391602
    8. ' M' → logprob: -9.046258926391602
    9. '#' → logprob: -9.171258926391602
    10. ' ' → logprob: -9.296258926391602

Token 1702: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2703096568584442
    2. '_' → logprob: -2.2703096866607666
    3. '_count' → logprob: -2.7703096866607666
    4. '=' → logprob: -3.6453096866607666
    5. '_len' → logprob: -3.7703096866607666
    6. 's' → logprob: -4.5203094482421875
    7. '_length' → logprob: -5.6453094482421875
    8. '_num' → logprob: -6.0203094482421875
    9. '_lengths' → logprob: -7.3953094482421875
    10. '_between' → logprob: -7.5203094482421875

Token 1703: ' segment' (ID: 14806)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.089631088078022
    2. ' M' → logprob: -3.7146310806274414
    3. 'M' → logprob: -4.464631080627441
    4. '[i' → logprob: -4.589631080627441
    5. '=' → logprob: -5.089631080627441
    6. 'interval' → logprob: -5.214631080627441
    7. ' intervals' → logprob: -5.589631080627441
    8. '[' → logprob: -5.839631080627441
    9. ' i' → logprob: -5.964631080627441
    10. 'i' → logprob: -6.589631080627441

Token 1704: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2640064060688019
    2. '_' → logprob: -2.1390063762664795
    3. ' =' → logprob: -3.0140063762664795
    4. '_length' → logprob: -3.3890063762664795
    5. '_count' → logprob: -4.389006614685059
    6. '_len' → logprob: -5.889006614685059
    7. '=' → logprob: -5.889006614685059
    8. '_between' → logprob: -6.014006614685059
    9. '_s' → logprob: -6.264006614685059
    10. '[' → logprob: -6.389006614685059

Token 1705: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9103584885597229
    2. '_len' → logprob: -1.6603584289550781
    3. '_count' → logprob: -2.035358428955078
    4. '_length' → logprob: -2.160358428955078
    5. '_s' → logprob: -3.035358428955078
    6. ' =' → logprob: -3.035358428955078
    7. '_' → logprob: -3.785358428955078
    8. '_lengths' → logprob: -3.785358428955078
    9. '_l' → logprob: -4.785358428955078
    10. '=' → logprob: -5.910358428955078

Token 1706: ' [' (ID: 723)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9637759923934937
    2. 'i' → logprob: -1.5887759923934937
    3. '(S' → logprob: -2.463776111602783
    4. ' i' → logprob: -2.588776111602783
    5. ' (' → logprob: -2.713776111602783
    6. '[i' → logprob: -2.838776111602783
    7. ' S' → logprob: -2.963776111602783
    8. '(i' → logprob: -3.838776111602783
    9. 'M' → logprob: -3.838776111602783
    10. ' M' → logprob: -4.713776111602783

Token 1707: 'S' (ID: 50)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4363853931427002
    2. 'S' → logprob: -1.0613853931427002
    3. ' i' → logprob: -5.436385154724121
    4. ']' → logprob: -6.686385154724121
    5. ' S' → logprob: -7.061385154724121
    6. '   ' → logprob: -7.811385154724121
    7. '[i' → logprob: -8.561385154724121
    8. '0' → logprob: -8.936385154724121
    9. '`' → logprob: -9.436385154724121
    10. '(i' → logprob: -9.936385154724121

Token 1708: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010759611177491024
    2. '[' → logprob: -9.750107765197754
    3. '][' → logprob: -11.500107765197754
    4. '_i' → logprob: -11.750107765197754
    5. '[_' → logprob: -12.000107765197754
    6. 'i' → logprob: -12.250107765197754
    7. '   ' → logprob: -12.375107765197754
    8. ' [' → logprob: -12.375107765197754
    9. ']' → logprob: -12.500107765197754
    10. '\[' → logprob: -13.500107765197754

Token 1709: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5108907222747803
    2. ']' → logprob: -1.0108907222747803
    3. ']+' → logprob: -3.6358907222747803
    4. '+' → logprob: -5.010890960693359
    5. '[i' → logprob: -6.885890960693359
    6. '   ' → logprob: -7.135890960693359
    7. ']]' → logprob: -7.635890960693359
    8. ']][' → logprob: -7.635890960693359
    9. '][' → logprob: -9.13589096069336
    10. ' +' → logprob: -9.51089096069336

Token 1710: ' S' (ID: 336)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09866116940975189
    2. 'S' → logprob: -2.598661184310913
    3. ' i' → logprob: -3.973661184310913
    4. ' S' → logprob: -7.473660945892334
    5. '[i' → logprob: -9.598661422729492
    6. '   ' → logprob: -10.098661422729492
    7. ']' → logprob: -10.098661422729492
    8. ' ' → logprob: -10.973661422729492
    9. '(i' → logprob: -12.348661422729492
    10. '  ' → logprob: -12.473661422729492

Token 1711: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006260562222450972
    2. ']' → logprob: -5.756260395050049
    3. '+' → logprob: -6.131260395050049
    4. '],' → logprob: -7.756260395050049
    5. 'i' → logprob: -8.631260871887207
    6. ']+' → logprob: -8.881260871887207
    7. '[' → logprob: -9.881260871887207
    8. '+i' → logprob: -10.631260871887207
    9. '(i' → logprob: -10.756260871887207
    10. '   ' → logprob: -10.881260871887207

Token 1712: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03256751969456673
    2. ']+' → logprob: -4.032567501068115
    3. ']' → logprob: -4.407567501068115
    4. '[i' → logprob: -7.032567501068115
    5. ' +' → logprob: -7.532567501068115
    6. '],' → logprob: -8.032567977905273
    7. '+
' → logprob: -9.032567977905273
    8. ']]' → logprob: -9.782567977905273
    9. '+i' → logprob: -10.157567977905273
    10. '   ' → logprob: -10.282567977905273

Token 1713: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12988132238388062
    2. '+' → logprob: -2.5048813819885254
    3. '1' → logprob: -3.3798813819885254
    4. ']' → logprob: -5.504881381988525
    5. ']+' → logprob: -6.379881381988525
    6. ' i' → logprob: -8.629880905151367
    7. '_i' → logprob: -9.629880905151367
    8. '[i' → logprob: -11.504880905151367
    9. '_plus' → logprob: -11.629880905151367
    10. '   ' → logprob: -12.004880905151367

Token 1714: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24172170460224152
    2. '+' → logprob: -1.991721749305725
    3. ']+' → logprob: -3.4917216300964355
    4. '],' → logprob: -3.7417216300964355
    5. ']]' → logprob: -4.7417216300964355
    6. '])' → logprob: -5.2417216300964355
    7. ']]
' → logprob: -6.2417216300964355
    8. ']
' → logprob: -6.2417216300964355
    9. ' +' → logprob: -6.3667216300964355
    10. '[i' → logprob: -6.6167216300964355

Token 1715: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0263882875442505
    2. '[i' → logprob: -1.2763882875442505
    3. ']' → logprob: -2.026388168334961
    4. '_' → logprob: -3.026388168334961
    5. '   ' → logprob: -3.151388168334961
    6. '[' → logprob: -3.526388168334961
    7. ':' → logprob: -3.776388168334961
    8. '```' → logprob: -4.026388168334961
    9. 'def' → logprob: -4.526388168334961
    10. '=' → logprob: -4.526388168334961

Token 1716: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6720640659332275
    2. ']' → logprob: -2.5470640659332275
    3. 'distance' → logprob: -2.5470640659332275
    4. 'i' → logprob: -2.7970640659332275
    5. 'tail' → logprob: -3.0470640659332275
    6. 'N' → logprob: -3.2970640659332275
    7. 'long' → logprob: -3.6720640659332275
    8. 'stations' → logprob: -3.9220640659332275
    9. '1' → logprob: -4.047063827514648
    10. ' length' → logprob: -4.422063827514648

Token 1717: ' d' (ID: 272)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.053668245673179626
    2. ' =' → logprob: -4.553668022155762
    3. ' i' → logprob: -5.178668022155762
    4. '_' → logprob: -5.303668022155762
    5. '_i' → logprob: -5.303668022155762
    6. 'i' → logprob: -5.553668022155762
    7. '```' → logprob: -5.678668022155762
    8. ' _' → logprob: -5.678668022155762
    9. '[' → logprob: -6.428668022155762
    10. '   ' → logprob: -6.553668022155762

Token 1718: '_i' (ID: 10853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5945072770118713
    2. '[i' → logprob: -0.9695072770118713
    3. ' =' → logprob: -3.2195072174072266
    4. '_i' → logprob: -4.469507217407227
    5. 'i' → logprob: -5.094507217407227
    6. '=' → logprob: -5.469507217407227
    7. ']' → logprob: -5.844507217407227
    8. '```' → logprob: -6.844507217407227
    9. '   ' → logprob: -7.719507217407227
    10. '_s' → logprob: -7.719507217407227

Token 1719: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17674081027507782
    2. 's' → logprob: -2.676740884780884
    3. ']' → logprob: -3.301740884780884
    4. '=' → logprob: -4.051740646362305
    5. '[i' → logprob: -4.176740646362305
    6. '   ' → logprob: -5.551740646362305
    7. '_i' → logprob: -5.551740646362305
    8. ')' → logprob: -5.926740646362305
    9. '_' → logprob: -6.301740646362305
    10. ' +' → logprob: -6.676740646362305

Token 1720: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2962598502635956
    2. ' S' → logprob: -1.421259880065918
    3. '(S' → logprob: -4.421259880065918
    4. ' (' → logprob: -6.046259880065918
    5. '   ' → logprob: -8.546259880065918
    6. ' ' → logprob: -8.671259880065918
    7. '`' → logprob: -9.296259880065918
    8. '(' → logprob: -9.921259880065918
    9. '  ' → logprob: -10.671259880065918
    10. ' `' → logprob: -11.296259880065918

Token 1721: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002447234932333231
    2. '[' → logprob: -6.627447128295898
    3. '_i' → logprob: -8.752447128295898
    4. '   ' → logprob: -8.752447128295898
    5. ' [' → logprob: -8.752447128295898
    6. '_[' → logprob: -8.752447128295898
    7. '[_' → logprob: -9.127447128295898
    8. ' _' → logprob: -9.627447128295898
    9. '_' → logprob: -10.127447128295898
    10. '```' → logprob: -10.377447128295898

Token 1722: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19717298448085785
    2. ']' → logprob: -1.947172999382019
    3. ']+' → logprob: -3.6971728801727295
    4. '[i' → logprob: -5.072173118591309
    5. ' +' → logprob: -6.697173118591309
    6. '+]' → logprob: -6.947173118591309
    7. '+
' → logprob: -7.197173118591309
    8. '+i' → logprob: -7.572173118591309
    9. '```' → logprob: -8.072173118591309
    10. '],' → logprob: -8.197173118591309

Token 1723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035512709291651845
    2. '+' → logprob: -8.250354766845703
    3. 'i' → logprob: -9.375354766845703
    4. ']' → logprob: -12.250354766845703
    5. '   ' → logprob: -13.750354766845703
    6. '[i' → logprob: -14.000354766845703
    7. ' ' → logprob: -14.250354766845703
    8. '(i' → logprob: -14.500354766845703
    9. '
' → logprob: -14.875354766845703
    10. '```' → logprob: -15.625354766845703

Token 1724: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13591474294662476
    2. '+' → logprob: -2.1359148025512695
    3. ']-' → logprob: -5.2609148025512695
    4. '-' → logprob: -6.7609148025512695
    5. ']+' → logprob: -7.3859148025512695
    6. '[i' → logprob: -7.3859148025512695
    7. ' -' → logprob: -7.8859148025512695
    8. ' +' → logprob: -8.51091480255127
    9. '+]' → logprob: -8.51091480255127
    10. '[' → logprob: -8.63591480255127

Token 1725: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001654348336160183
    2. ' S' → logprob: -7.001654148101807
    3. 'i' → logprob: -7.251654148101807
    4. '[i' → logprob: -11.501654624938965
    5. ' i' → logprob: -11.501654624938965
    6. '   ' → logprob: -11.876654624938965
    7. ']' → logprob: -12.501654624938965
    8. ' ' → logprob: -13.626654624938965
    9. '`' → logprob: -14.751654624938965
    10. '(i' → logprob: -15.376654624938965

Token 1726: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006195080350153148
    2. '_i' → logprob: -8.000619888305664
    3. ']' → logprob: -9.250619888305664
    4. 'i' → logprob: -9.500619888305664
    5. '[' → logprob: -9.625619888305664
    6. '[
' → logprob: -11.500619888305664
    7. '```' → logprob: -11.875619888305664
    8. '   ' → logprob: -12.250619888305664
    9. 's' → logprob: -12.375619888305664
    10. '[_' → logprob: -12.750619888305664

Token 1727: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1303890347480774
    2. ']
' → logprob: -2.7553889751434326
    3. '])' → logprob: -3.8803889751434326
    4. ')' → logprob: -4.380389213562012
    5. '   ' → logprob: -4.630389213562012
    6. '[i' → logprob: -5.380389213562012
    7. ')]' → logprob: -5.880389213562012
    8. '+' → logprob: -6.130389213562012
    9. ']
' → logprob: -6.880389213562012
    10. '])
' → logprob: -6.880389213562012

Token 1728: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042951651848852634
    2. '[i' → logprob: -7.004295349121094
    3. '
' → logprob: -7.379295349121094
    4. '    
' → logprob: -7.379295349121094
    5. 'd' → logprob: -8.129295349121094
    6. ']' → logprob: -8.129295349121094
    7. '  
' → logprob: -8.504295349121094
    8. 'def' → logprob: -8.629295349121094
    9. '#' → logprob: -8.629295349121094
    10. '```' → logprob: -8.754295349121094

Token 1729: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009805909357964993
    2. '
' → logprob: -5.009805679321289
    3. '    
' → logprob: -7.009805679321289
    4. 'def' → logprob: -7.759805679321289
    5. '[i' → logprob: -8.009805679321289
    6. '#' (adapté à ' #') → logprob: -8.634805679321289
    7. ',' → logprob: -8.759805679321289
    8. ')' → logprob: -8.759805679321289
    9. ' =' → logprob: -9.009805679321289
    10. ':' → logprob: -9.134805679321289

Token 1730: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4501885175704956
    2. '   ' → logprob: -1.0751885175704956
    3. 'M' → logprob: -5.325188636779785
    4. 'd' → logprob: -5.825188636779785
    5. 'for' → logprob: -5.950188636779785
    6. 'interval' → logprob: -6.075188636779785
    7. '#' → logprob: -6.200188636779785
    8. '
' → logprob: -6.825188636779785
    9. 'if' → logprob: -6.950188636779785
    10. 'length' → logprob: -7.200188636779785

Token 1731: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.025061270222067833
    2. ' i' → logprob: -3.7750613689422607
    3. 'interval' → logprob: -6.525061130523682
    4. ' interval' → logprob: -9.27506160736084
    5. '0' → logprob: -10.15006160736084
    6. '_i' → logprob: -10.40006160736084
    7. 'j' → logprob: -10.77506160736084
    8. '   ' → logprob: -10.77506160736084
    9. ' ' → logprob: -10.90006160736084
    10. '_interval' → logprob: -11.52506160736084

Token 1732: ' interval' (ID: 17116)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07302767783403397
    2. 'interval' → logprob: -2.8230276107788086
    3. ' i' → logprob: -5.448027610778809
    4. '_' → logprob: -6.323027610778809
    5. 'segment' → logprob: -6.823027610778809
    6. '_i' → logprob: -7.323027610778809
    7. ']' → logprob: -7.448027610778809
    8. 'inter' → logprob: -7.448027610778809
    9. ')' → logprob: -7.698027610778809
    10. ' interval' → logprob: -8.073027610778809

Token 1733: 'le' (ID: 282)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.35998860001564026
    2. 'e' → logprob: -1.6099885702133179
    3. 'i' → logprob: -3.4849886894226074
    4. '[' → logprob: -3.4849886894226074
    5. 'aire' → logprob: -4.859988689422607
    6. '[
' → logprob: -4.984988689422607
    7. '=' → logprob: -5.359988689422607
    8. '_' → logprob: -5.484988689422607
    9. '_i' → logprob: -5.484988689422607
    10. ' i' → logprob: -5.859988689422607

Token 1734: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0234005451202393
    2. '[i' → logprob: -1.7734005451202393
    3. '_i' → logprob: -2.0234005451202393
    4. '[' → logprob: -2.1484005451202393
    5. ' =' → logprob: -2.3984005451202393
    6. ',' → logprob: -3.5234005451202393
    7. ':' → logprob: -3.5234005451202393
    8. '=' → logprob: -4.02340030670166
    9. '   ' → logprob: -4.27340030670166
    10. 'i' → logprob: -4.64840030670166

Token 1735: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0693373680114746
    2. 'x' → logprob: -1.5693373680114746
    3. ' x' → logprob: -1.5693373680114746
    4. ' i' → logprob: -2.5693373680114746
    5. ' for' → logprob: -3.3193373680114746
    6. 'i' → logprob: -3.4443373680114746
    7. '   ' → logprob: -4.444337368011475
    8. 'on' → logprob: -4.569337368011475
    9. 'for' → logprob: -4.694337368011475
    10. ' #' → logprob: -5.069337368011475

Token 1736: ' chois' (ID: 33475)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.5880818963050842
    2. 'do' → logprob: -2.4630818367004395
    3. 'cho' → logprob: -2.7130818367004395
    4. '=' → logprob: -2.8380818367004395
    5. 'va' → logprob: -3.4630818367004395
    6. 'calc' → logprob: -3.8380818367004395
    7. 's' → logprob: -3.9630818367004395
    8. ' =' → logprob: -4.2130818367004395
    9. 'continue' → logprob: -4.2130818367004395
    10. ' calc' → logprob: -4.4630818367004395

Token 1737: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03961751610040665
    2. 'it' → logprob: -3.2896175384521484
    3. 'd' → logprob: -7.914617538452148
    4. '_t' → logprob: -7.914617538452148
    5. '#' → logprob: -8.664617538452148
    6. '[t' → logprob: -9.539617538452148
    7. 'def' → logprob: -10.039617538452148
    8. 'r' → logprob: -10.164617538452148
    9. '[
' → logprob: -10.164617538452148
    10. 'ira' → logprob: -10.164617538452148

Token 1738: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4854154586791992
    2. 'x' → logprob: -0.9854154586791992
    3. '0' → logprob: -5.485415458679199
    4. ' j' → logprob: -5.985415458679199
    5. ' ' → logprob: -6.110415458679199
    6. 'j' → logprob: -7.235415458679199
    7. 'i' → logprob: -8.7354154586792
    8. ' i' → logprob: -8.8604154586792
    9. '   ' → logprob: -8.8604154586792
    10. 'k' → logprob: -8.9854154586792

Token 1739: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5524582266807556
    2. '[i' → logprob: -1.3024582862854004
    3. '_' → logprob: -2.0524582862854004
    4. '[' → logprob: -5.0524582862854
    5. '[_' → logprob: -5.1774582862854
    6. 's' → logprob: -5.5524582862854
    7. ' _' → logprob: -6.4274582862854
    8. '_[' → logprob: -6.5524582862854
    9. '```' → logprob: -6.9274582862854
    10. '   ' → logprob: -7.1774582862854

Token 1740: ' stops' (ID: 29924)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7510573863983154
    2. ' =' → logprob: -1.3760573863983154
    3. '_i' → logprob: -2.3760573863983154
    4. '[' → logprob: -2.8760573863983154
    5. '_' → logprob: -3.1260573863983154
    6. 's' → logprob: -3.2510573863983154
    7. '   ' → logprob: -4.2510576248168945
    8. '=' → logprob: -4.8760576248168945
    9. ')' → logprob: -5.7510576248168945
    10. '```' → logprob: -6.0010576248168945

Token 1741: ' sem' (ID: 2743)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6896271109580994
    2. '[i' → logprob: -1.5646271705627441
    3. '_i' → logprob: -2.564627170562744
    4. '_' → logprob: -2.939627170562744
    5. '   ' → logprob: -2.939627170562744
    6. 's' → logprob: -2.939627170562744
    7. '=' → logprob: -4.439627170562744
    8. '[' → logprob: -4.564627170562744
    9. ']' → logprob: -5.064627170562744
    10. ')' → logprob: -5.564627170562744

Token 1742: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.008053723722696304
    2. '_i' → logprob: -5.758053779602051
    3. 'express' → logprob: -6.383053779602051
    4. 'i' → logprob: -7.258053779602051
    5. '[i' → logprob: -7.633053779602051
    6. 'ip' → logprob: -8.88305377960205
    7. 'import' → logprob: -9.00805377960205
    8. 'pexpr' → logprob: -9.13305377960205
    9. ' expresses' → logprob: -9.25805377960205
    10. 'I' → logprob: -9.38305377960205

Token 1743: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3574008047580719
    2. '[' → logprob: -2.357400894165039
    3. '_' → logprob: -2.732400894165039
    4. '```' → logprob: -3.607400894165039
    5. '_i' → logprob: -3.607400894165039
    6. '   ' → logprob: -3.732400894165039
    7. ' =' → logprob: -3.982400894165039
    8. ',' → logprob: -4.857400894165039
    9. ']' → logprob: -4.982400894165039
    10. 's' → logprob: -5.357400894165039

Token 1744: '≥' (ID: 87319)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0132746696472168
    2. ' >=' → logprob: -1.5132746696472168
    3. ' =' → logprob: -1.6382746696472168
    4. '>=' → logprob: -2.388274669647217
    5. '=' → logprob: -3.513274669647217
    6. ' -' → logprob: -3.638274669647217
    7. '-' → logprob: -4.388274669647217
    8. '_i' → logprob: -4.513274669647217
    9. ',' → logprob: -5.138274669647217
    10. '[i' → logprob: -5.263274669647217

Token 1745: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3886335492134094
    2. '1' → logprob: -1.1386334896087646
    3. ' ' → logprob: -6.638633728027344
    4. '   ' → logprob: -8.013633728027344
    5. '```' → logprob: -9.513633728027344
    6. ')' → logprob: -11.451133728027344
    7. 'import' → logprob: -12.201133728027344
    8. '
' → logprob: -12.451133728027344
    9. 'def' → logprob: -12.451133728027344
    10. '  ' → logprob: -12.763633728027344

Token 1746: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11386463791131973
    2. ')
' → logprob: -3.9888646602630615
    3. '[i' → logprob: -4.113864421844482
    4. ',' → logprob: -4.113864421844482
    5. '):
' → logprob: -4.238864421844482
    6. '+' → logprob: -4.613864421844482
    7. '_i' → logprob: -5.113864421844482
    8. '),' → logprob: -5.363864421844482
    9. ' +' → logprob: -5.363864421844482
    10. '   ' → logprob: -5.363864421844482

Token 1747: ' 
' (ID: 793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22882530093193054
    2. ' #' → logprob: -2.478825330734253
    3. '   ' → logprob: -3.728825330734253
    4. ' =' → logprob: -3.728825330734253
    5. ' ' → logprob: -3.853825330734253
    6. ' x' → logprob: -4.353825092315674
    7. '=' → logprob: -4.853825092315674
    8. ',' → logprob: -5.603825092315674
    9. 'x' → logprob: -5.603825092315674
    10. ')' → logprob: -5.603825092315674

Token 1748: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14249612390995026
    2. ' #' → logprob: -2.767496109008789
    3. '=' → logprob: -3.267496109008789
    4. ' =' → logprob: -4.142496109008789
    5. '   ' → logprob: -4.892496109008789
    6. ',' → logprob: -6.267496109008789
    7. ')' → logprob: -6.642496109008789
    8. ' ' → logprob: -7.017496109008789
    9. ' i' → logprob: -7.142496109008789
    10. '
' → logprob: -7.517496109008789

Token 1749: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.19989265501499176
    2. ' #' → logprob: -2.07489275932312
    3. '   ' → logprob: -4.074892520904541
    4. '=' → logprob: -4.449892520904541
    5. ' x' → logprob: -5.324892520904541
    6. ' =' → logprob: -5.449892520904541
    7. ' i' → logprob: -5.699892520904541
    8. 'x' → logprob: -5.824892520904541
    9. ' ' → logprob: -6.199892520904541
    10. ')' → logprob: -6.449892520904541

Token 1750: ' avec' (ID: 3937)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04031151533126831
    2. '   ' → logprob: -4.290311336517334
    3. ' #' → logprob: -4.665311336517334
    4. 'x' → logprob: -5.290311336517334
    5. 'i' → logprob: -6.165311336517334
    6. '
' → logprob: -7.165311336517334
    7. 'et' → logprob: -7.290311336517334
    8. 'for' → logprob: -7.415311336517334
    9. '=' → logprob: -7.665311336517334
    10. 'K' → logprob: -7.915311336517334

Token 1751: ' sum' (ID: 4215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7219285368919373
    2. ' la' → logprob: -1.596928596496582
    3. ' x' → logprob: -2.221928596496582
    4. 'la' → logprob: -2.346928596496582
    5. 'sum' → logprob: -2.971928596496582
    6. '   ' → logprob: -4.346928596496582
    7. 'l' → logprob: -5.096928596496582
    8. 'K' → logprob: -5.221928596496582
    9. 's' → logprob: -5.346928596496582
    10. ' K' → logprob: -5.721928596496582

Token 1752: ' x' (ID: 1215)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.325675368309021
    2. '_' → logprob: -1.575675368309021
    3. '_x' → logprob: -2.9506754875183105
    4. '[i' → logprob: -4.5756754875183105
    5. ' _' → logprob: -5.8256754875183105
    6. '(i' → logprob: -7.3256754875183105
    7. 'x' → logprob: -7.7006754875183105
    8. ' =' → logprob: -8.075675010681152
    9. '(x' → logprob: -8.075675010681152
    10. '```' → logprob: -8.200675010681152

Token 1753: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.284201443195343
    2. '_' → logprob: -1.4092013835906982
    3. '[i' → logprob: -6.284201622009277
    4. '_[' → logprob: -7.659201622009277
    5. '[' → logprob: -8.284201622009277
    6. '[_' → logprob: -9.159201622009277
    7. ' _' → logprob: -9.659201622009277
    8. '_
' → logprob: -9.784201622009277
    9. 's' → logprob: -10.034201622009277
    10. '_)' → logprob: -10.659201622009277

Token 1754: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3101855516433716
    2. '_' → logprob: -1.4351855516433716
    3. '=' → logprob: -1.6851855516433716
    4. ' =' → logprob: -2.310185432434082
    5. '[' → logprob: -2.435185432434082
    6. '_i' → logprob: -2.685185432434082
    7. ')' → logprob: -4.185185432434082
    8. '+' → logprob: -5.060185432434082
    9. '[
' → logprob: -5.185185432434082
    10. '   ' → logprob: -5.560185432434082

Token 1755: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02325223572552204
    2. ' K' → logprob: -3.773252248764038
    3. '   ' → logprob: -13.523252487182617
    4. '```' → logprob: -13.898252487182617
    5. '
' → logprob: -14.023252487182617
    6. ' ' → logprob: -14.273252487182617
    7. '	K' → logprob: -14.898252487182617
    8. ',K' → logprob: -15.148252487182617
    9. ' =' → logprob: -15.273252487182617
    10. 'k' → logprob: -15.273252487182617

Token 1756: '

' (ID: 279)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6778313517570496
    2. '   ' → logprob: -1.5528314113616943
    3. '_i' → logprob: -3.0528314113616943
    4. ')' → logprob: -3.5528314113616943
    5. '-' → logprob: -3.8028314113616943
    6. '+' → logprob: -3.8028314113616943
    7. '[' → logprob: -4.052831172943115
    8. '
' → logprob: -4.177831172943115
    9. '```' → logprob: -4.177831172943115
    10. '_' → logprob: -4.177831172943115

Token 1757: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4787047803401947
    2. '   ' → logprob: -1.103704810142517
    3. '
' → logprob: -3.8537046909332275
    4. ' dp' → logprob: -3.9787046909332275
    5. '#' → logprob: -5.603704929351807
    6. '    
' → logprob: -6.978704929351807
    7. '  
' → logprob: -7.103704929351807
    8. ' ' → logprob: -7.853704929351807
    9. '\' → logprob: -8.353704452514648
    10. ',' → logprob: -8.353704452514648

Token 1758: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1325342059135437
    2. 'dp' → logprob: -2.1325342655181885
    3. ' dp' → logprob: -5.507534027099609
    4. '
' → logprob: -7.382534027099609
    5. '    
' → logprob: -7.757534027099609
    6. 'n' → logprob: -9.63253402709961
    7. '#' (adapté à ' #') → logprob: -9.63253402709961
    8. '	dp' → logprob: -9.75753402709961
    9. '       ' → logprob: -10.25753402709961
    10. 'def' → logprob: -10.25753402709961

Token 1759: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6343463063240051
    2. 'dp' → logprob: -0.8843463063240051
    3. ':' → logprob: -4.1343464851379395
    4. 'def' → logprob: -4.6343464851379395
    5. ' dp' → logprob: -4.6343464851379395
    6. '
' → logprob: -5.7593464851379395
    7. '[' → logprob: -6.0093464851379395
    8. ')' → logprob: -6.1343464851379395
    9. '    
' → logprob: -6.2593464851379395
    10. ']' → logprob: -6.2593464851379395

Token 1760: ' trouve' (ID: 30913)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8001853823661804
    2. '=' → logprob: -1.0501854419708252
    3. '[' → logprob: -2.175185441970825
    4. 'def' → logprob: -3.050185441970825
    5. '_' → logprob: -4.175185203552246
    6. '[i' → logprob: -5.425185203552246
    7. ']' → logprob: -5.425185203552246
    8. '   ' → logprob: -5.800185203552246
    9. ')' → logprob: -6.175185203552246
    10. '#' → logprob: -6.675185203552246

Token 1761: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4874062538146973
    2. ' dp' → logprob: -1.9874062538146973
    3. 'x' → logprob: -2.2374062538146973
    4. ' =' → logprob: -2.4874062538146973
    5. ' x' → logprob: -2.8624062538146973
    6. ' i' → logprob: -3.2374062538146973
    7. 'dp' → logprob: -3.3624062538146973
    8. '=' → logprob: -3.3624062538146973
    9. ' #' → logprob: -3.6124062538146973
    10. ')' → logprob: -3.9874062538146973

Token 1762: ' position' (ID: 4010)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2998709678649902
    2. 'max' → logprob: -1.4248709678649902
    3. 'x' → logprob: -2.7998709678649902
    4. 'best' → logprob: -2.7998709678649902
    5. ' dp' → logprob: -2.7998709678649902
    6. 'def' → logprob: -2.9248709678649902
    7. ' next' → logprob: -3.5498709678649902
    8. 'next' → logprob: -3.5498709678649902
    9. ' max' → logprob: -4.04987096786499
    10. 'position' → logprob: -4.42487096786499

Token 1763: ' p' (ID: 275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8810624480247498
    2. '_i' → logprob: -1.5060625076293945
    3. ' =' → logprob: -1.8810625076293945
    4. '=' → logprob: -2.5060625076293945
    5. 'i' → logprob: -3.1310625076293945
    6. '_of' → logprob: -4.2560625076293945
    7. 'of' → logprob: -4.3810625076293945
    8. 's' → logprob: -4.7560625076293945
    9. '_in' → logprob: -4.8810625076293945
    10. '_s' → logprob: -5.0060625076293945

Token 1764: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24983488023281097
    2. 'os' → logprob: -2.1248347759246826
    3. '=' → logprob: -2.4998347759246826
    4. 'osition' → logprob: -5.874835014343262
    5. 'oint' → logprob: -6.249835014343262
    6. '_' → logprob: -6.249835014343262
    7. '_s' → logprob: -6.374835014343262
    8. 'r' → logprob: -6.499835014343262
    9. 'ointer' → logprob: -6.499835014343262
    10. '_p' → logprob: -6.749835014343262

Token 1765: ' station' (ID: 11538)
  Prédit: ' station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' station' → logprob: -0.9934306740760803
    2. 'S' → logprob: -1.3684306144714355
    3. 'station' → logprob: -1.3684306144714355
    4. 'bis' → logprob: -2.9934306144714355
    5. ' S' → logprob: -3.1184306144714355
    6. ' bis' → logprob: -4.7434306144714355
    7. 'b' → logprob: -5.8684306144714355
    8. ' next' → logprob: -6.1184306144714355
    9. ' ' → logprob: -6.2434306144714355
    10. 'next' → logprob: -6.3684306144714355

Token 1766: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.03290104120969772
    2. '_' → logprob: -3.7829010486602783
    3. '_to' → logprob: -6.032900810241699
    4. '_lim' → logprob: -6.157900810241699
    5. ' =' → logprob: -6.532900810241699
    6. '_index' → logprob: -7.032900810241699
    7. '_s' → logprob: -7.657900810241699
    8. '=_' → logprob: -8.0329008102417
    9. '_idx' → logprob: -8.1579008102417
    10. '_cut' → logprob: -8.1579008102417

Token 1767: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009771554730832577
    2. ' =' → logprob: -4.634771347045898
    3. '=
' → logprob: -12.009771347045898
    4. 'in' → logprob: -12.884771347045898
    5. 'bis' → logprob: -13.509771347045898
    6. '   ' → logprob: -14.259771347045898
    7. ' ' → logprob: -14.384771347045898
    8. '_=' → logprob: -14.384771347045898
    9. '_' → logprob: -14.759771347045898
    10. ')' → logprob: -15.009771347045898

Token 1768: ' les' (ID: 1341)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.13245244324207306
    2. 'bis' → logprob: -2.1324524879455566
    3. '   ' → logprob: -5.507452487945557
    4. ' S' → logprob: -7.382452487945557
    5. 'import' → logprob: -8.507452011108398
    6. ' bis' → logprob: -8.632452011108398
    7. ' ' → logprob: -9.007452011108398
    8. '[' → logprob: -9.132452011108398
    9. '
' → logprob: -10.007452011108398
    10. '[S' → logprob: -10.257452011108398

Token 1769: ' arr' (ID: 1724)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12675777077674866
    2. ' S' → logprob: -2.251757860183716
    3. 'bis' → logprob: -4.626757621765137
    4. ' bis' → logprob: -5.876757621765137
    5. ' ' → logprob: -7.501757621765137
    6. 'import' → logprob: -8.251757621765137
    7. '   ' → logprob: -8.501757621765137
    8. '[' → logprob: -10.126757621765137
    9. 'b' → logprob: -10.751757621765137
    10. '  ' → logprob: -11.001757621765137

Token 1770: 'êts' (ID: 56582)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.5178053379058838
    2. 'êts' → logprob: -1.3928053379058838
    3. ']' → logprob: -3.142805337905884
    4. '_' → logprob: -4.017805099487305
    5. 'ays' → logprob: -4.142805099487305
    6. '[' → logprob: -4.892805099487305
    7. 'S' → logprob: -5.142805099487305
    8. 'ivée' → logprob: -5.267805099487305
    9. 'ay' → logprob: -5.517805099487305
    10. 'val' → logprob: -5.517805099487305

Token 1771: ' express' (ID: 6101)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.4680635929107666
    2. '_' → logprob: -1.4680635929107666
    3. ' =' → logprob: -1.9680635929107666
    4. '_s' → logprob: -1.9680635929107666
    5. 'express' → logprob: -2.7180635929107666
    6. '=' → logprob: -3.3430635929107666
    7. '_ex' → logprob: -4.0930633544921875
    8. '_loc' → logprob: -4.2180633544921875
    9. '_limit' → logprob: -4.3430633544921875
    10. 'bis' → logprob: -4.4680633544921875

Token 1772: ' S' (ID: 336)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5915501713752747
    2. '=' → logprob: -0.8415501713752747
    3. 'pos' → logprob: -5.216550350189209
    4. 'p' → logprob: -5.591550350189209
    5. '_pos' → logprob: -5.841550350189209
    6. 'bis' → logprob: -6.841550350189209
    7. '_p' → logprob: -6.966550350189209
    8. 'idx' → logprob: -7.591550350189209
    9. '
' → logprob: -8.84154987335205
    10. '_idx' → logprob: -9.09154987335205

Token 1773: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5839748978614807
    2. '=' → logprob: -1.083974838256836
    3. 'pos' → logprob: -2.833974838256836
    4. '_pos' → logprob: -3.458974838256836
    5. 'p' → logprob: -5.833974838256836
    6. 'idx' → logprob: -5.958974838256836
    7. '_p' → logprob: -6.208974838256836
    8. '_' → logprob: -6.583974838256836
    9. '_idx' → logprob: -7.083974838256836
    10. 'bis' → logprob: -7.208974838256836

Token 1774: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0019065011292696
    2. 'pos' → logprob: -6.751906394958496
    3. 'S' → logprob: -7.876906394958496
    4. ' bis' → logprob: -9.251906394958496
    5. 'idx' → logprob: -9.876906394958496
    6. 'p' → logprob: -10.001906394958496
    7. ')' → logprob: -10.126906394958496
    8. '
' → logprob: -10.251906394958496
    9. 'position' → logprob: -10.751906394958496
    10. 'b' → logprob: -11.501906394958496

Token 1775: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00025978617486543953
    2. 'e' → logprob: -8.750259399414062
    3. 'sect' → logprob: -9.375259399414062
    4. 'ectl' → logprob: -11.875259399414062
    5. 'ec' → logprob: -12.750259399414062
    6. 'ected' → logprob: -13.625259399414062
    7. '```' → logprob: -14.000259399414062
    8. 'ects' → logprob: -14.250259399414062
    9. 'ection' → logprob: -14.750259399414062
    10. 'left' → logprob: -14.875259399414062

Token 1776: ':
' (ID: 734)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.17168274521827698
    2. '_right' → logprob: -2.171682834625244
    3. '_left' → logprob: -3.171682834625244
    4. '.' → logprob: -6.921682834625244
    5. 'Right' → logprob: -9.046682357788086
    6. '_pos' → logprob: -9.046682357788086
    7. '._' → logprob: -9.171682357788086
    8. 'right' → logprob: -9.296682357788086
    9. '=' → logprob: -9.546682357788086
    10. ' =' → logprob: -9.796682357788086

Token 1777: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.41307151317596436
    2. 'pos' → logprob: -1.4130715131759644
    3. '   ' → logprob: -2.413071632385254
    4. ' p' → logprob: -5.663071632385254
    5. ' pos' → logprob: -6.288071632385254
    6. 'position' → logprob: -9.788071632385254
    7. 'idx' → logprob: -10.663071632385254
    8. ' ' → logprob: -11.163071632385254
    9. '```' → logprob: -11.913071632385254
    10. '	p' → logprob: -12.413071632385254

Token 1778: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.22112929821014404
    2. '   ' → logprob: -1.971129298210144
    3. 'pos' → logprob: -2.9711294174194336
    4. ' p' → logprob: -4.971129417419434
    5. ' pos' → logprob: -8.221129417419434
    6. ' ' → logprob: -8.346129417419434
    7. 'bis' → logprob: -9.721129417419434
    8. '	p' → logprob: -9.971129417419434
    9. '```' → logprob: -9.971129417419434
    10. '=' → logprob: -9.971129417419434

Token 1779: ' station' (ID: 11538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2876870334148407
    2. '=' → logprob: -2.162687063217163
    3. 'pos' → logprob: -2.287687063217163
    4. ' =' → logprob: -3.537687063217163
    5. ' p' → logprob: -5.787686824798584
    6. '   ' → logprob: -7.787686824798584
    7. ' pos' → logprob: -8.162687301635742
    8. '_p' → logprob: -8.662687301635742
    9. '_pos' → logprob: -8.912687301635742
    10. '=p' → logprob: -10.037687301635742

Token 1780: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.6285811066627502
    2. '_pos' → logprob: -0.8785811066627502
    3. '_p' → logprob: -4.0035810470581055
    4. 'pos' → logprob: -4.7535810470581055
    5. '_index' → logprob: -4.7535810470581055
    6. '_' → logprob: -5.3785810470581055
    7. '_lim' → logprob: -5.5035810470581055
    8. '_position' → logprob: -6.0035810470581055
    9. '_idx' → logprob: -6.8785810470581055
    10. 'limit' → logprob: -6.8785810470581055

Token 1781: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02093503624200821
    2. ' =' → logprob: -4.14593505859375
    3. '_pos' → logprob: -5.52093505859375
    4. 'pos' → logprob: -7.64593505859375
    5. '_idx' → logprob: -9.27093505859375
    6. '=
' → logprob: -9.64593505859375
    7. '_index' → logprob: -9.77093505859375
    8. ')' → logprob: -10.02093505859375
    9. '_position' → logprob: -10.02093505859375
    10. '_p' → logprob: -10.77093505859375

Token 1782: ' être' (ID: 9104)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.9978610277175903
    2. '=' → logprob: -1.9978610277175903
    3. '_' → logprob: -1.9978610277175903
    4. ' be' → logprob: -2.247860908508301
    5. '_be' → logprob: -2.622860908508301
    6. ' =' → logprob: -2.747860908508301
    7. '_stop' → logprob: -3.372860908508301
    8. 'pos' → logprob: -3.747860908508301
    9. '_position' → logprob: -3.747860908508301
    10. '_idx' → logprob: -4.872860908508301

Token 1783: ' avant' (ID: 13339)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5485228896141052
    2. 'found' → logprob: -1.67352294921875
    3. '-' → logprob: -3.17352294921875
    4. 'S' → logprob: -3.42352294921875
    5. '0' → logprob: -3.54852294921875
    6. 'station' → logprob: -4.04852294921875
    7. 'pos' → logprob: -4.29852294921875
    8. 'None' → logprob: -4.67352294921875
    9. 'located' → logprob: -4.79852294921875
    10. 'less' → logprob: -4.92352294921875

Token 1784: ' ou' (ID: 2031)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6028908491134644
    2. 'bis' → logprob: -1.4778908491134644
    3. '=' → logprob: -2.227890968322754
    4. ')' → logprob: -3.102890968322754
    5. '_left' → logprob: -4.102890968322754
    6. 'left' → logprob: -4.602890968322754
    7. '0' → logprob: -4.727890968322754
    8. 'p' → logprob: -5.102890968322754
    9. 'find' → logprob: -5.227890968322754
    10. '_right' → logprob: -5.227890968322754

Token 1785: ' dans' (ID: 2671)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.7234097719192505
    2. 'after' → logprob: -0.7234097719192505
    3. 'equal' → logprob: -4.598409652709961
    4. 'à' → logprob: -5.098409652709961
    5. 'dans' → logprob: -5.473409652709961
    6. 'égal' → logprob: -5.598409652709961
    7. 'bis' → logprob: -6.598409652709961
    8. 'au' → logprob: -6.848409652709961
    9. '=' → logprob: -7.223409652709961
    10. 'entre' → logprob: -7.598409652709961

Token 1786: ' un' (ID: 537)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.019461501389741898
    2. ' S' → logprob: -4.019461631774902
    3. 'the' → logprob: -7.394461631774902
    4. '_S' → logprob: -8.394461631774902
    5. ' the' → logprob: -8.894461631774902
    6. '_' → logprob: -9.019461631774902
    7. ')' → logprob: -9.269461631774902
    8. 'bis' → logprob: -10.769461631774902
    9. 'pos' → logprob: -10.894461631774902
    10. 'p' → logprob: -11.019461631774902

Token 1787: ' interval' (ID: 17116)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6349771022796631
    2. 'segment' → logprob: -1.634977102279663
    3. ' segment' → logprob: -1.884977102279663
    4. '[' → logprob: -3.759977102279663
    5. 'interval' → logprob: -4.259977340698242
    6. ' S' → logprob: -4.509977340698242
    7. ')' → logprob: -4.509977340698242
    8. 'S' → logprob: -4.634977340698242
    9. '_segment' → logprob: -5.259977340698242
    10. ' ' → logprob: -5.509977340698242

Token 1788: 'le' (ID: 282)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7903335094451904
    2. ']' → logprob: -1.2903335094451904
    3. '[
' → logprob: -2.1653335094451904
    4. ')' → logprob: -2.7903335094451904
    5. '_' → logprob: -3.9153335094451904
    6. '=' → logprob: -4.1653337478637695
    7. ' =' → logprob: -4.9153337478637695
    8. '```' → logprob: -5.1653337478637695
    9. ')]' → logprob: -5.2903337478637695
    10. 't' → logprob: -5.6653337478637695

Token 1789: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010135329328477383
    2. ' =' → logprob: -4.885135173797607
    3. '=
' → logprob: -7.010135173797607
    4. 'pos' → logprob: -7.385135173797607
    5. '_pos' → logprob: -7.510135173797607
    6. 'p' → logprob: -8.885135650634766
    7. '_' → logprob: -8.885135650634766
    8. ')' → logprob: -10.135135650634766
    9. '_p' → logprob: -10.510135650634766
    10. '_=' → logprob: -10.885135650634766

Token 1790: ' on' (ID: 402)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3152129650115967
    2. 'p' → logprob: -1.3152129650115967
    3. ' pos' → logprob: -6.565213203430176
    4. ' p' → logprob: -7.815213203430176
    5. 'position' → logprob: -9.690213203430176
    6. 'idx' → logprob: -10.440213203430176
    7. ')' → logprob: -10.940213203430176
    8. '   ' → logprob: -11.565213203430176
    9. 'bis' → logprob: -12.065213203430176
    10. ')
' → logprob: -12.315213203430176

Token 1791: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5452753305435181
    2. '=' → logprob: -1.170275330543518
    3. '_' → logprob: -3.0452752113342285
    4. '_pos' → logprob: -3.9202752113342285
    5. 'pos' → logprob: -5.2952752113342285
    6. ')' → logprob: -5.2952752113342285
    7. '_position' → logprob: -5.4202752113342285
    8. ' ' → logprob: -5.5452752113342285
    9. ':' → logprob: -6.1702752113342285
    10. '_index' → logprob: -6.5452752113342285

Token 1792: ' traiter' (ID: 105852)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.017364496365189552
    2. 'p' → logprob: -4.892364501953125
    3. 'bis' → logprob: -5.642364501953125
    4. 'idx' → logprob: -6.642364501953125
    5. 'import' → logprob: -6.767364501953125
    6. ' pos' → logprob: -7.267364501953125
    7. 'i' → logprob: -7.517364501953125
    8. '   ' → logprob: -7.642364501953125
    9. '_pos' → logprob: -8.017364501953125
    10. 'position' → logprob: -8.142364501953125

Token 1793: ' jusqu' (ID: 21961)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0673469305038452
    2. 'pos' → logprob: -1.3173469305038452
    3. ')' → logprob: -2.0673470497131348
    4. 'bis' → logprob: -2.3173470497131348
    5. ' =' → logprob: -3.4423470497131348
    6. '_' → logprob: -3.5673470497131348
    7. '0' → logprob: -3.9423470497131348
    8. '(' → logprob: -4.192347049713135
    9. '_pos' → logprob: -4.192347049713135
    10. 'p' → logprob: -4.567347049713135

Token 1794: ''à' (ID: 33688)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5003780722618103
    2. 'à' → logprob: -2.375378131866455
    3. ')' → logprob: -2.625378131866455
    4. '=' → logprob: -2.750378131866455
    5. 'p' → logprob: -3.375378131866455
    6. '   ' → logprob: -3.875378131866455
    7. ']' → logprob: -4.250378131866455
    8. '```' → logprob: -4.750378131866455
    9. 'la' → logprob: -4.750378131866455
    10. '(p' → logprob: -4.875378131866455

Token 1795: ' interval' (ID: 17116)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05107387900352478
    2. 'M' → logprob: -3.4260737895965576
    3. ' p' → logprob: -4.676074028015137
    4. 'bis' → logprob: -5.926074028015137
    5. 'S' → logprob: -6.301074028015137
    6. 'pos' → logprob: -6.551074028015137
    7. ' M' → logprob: -6.801074028015137
    8. 'i' → logprob: -8.676074028015137
    9. ' bis' → logprob: -9.051074028015137
    10. ')' → logprob: -9.176074028015137

Token 1796: 'le' (ID: 282)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8539033532142639
    2. ']' → logprob: -1.4789032936096191
    3. '[' → logprob: -1.7289032936096191
    4. '[
' → logprob: -3.353903293609619
    5. '_index' → logprob: -3.478903293609619
    6. '0' → logprob: -4.353903293609619
    7. '[i' → logprob: -4.853903293609619
    8. 's' → logprob: -4.978903293609619
    9. '_idx' → logprob: -5.103903293609619
    10. '_[' → logprob: -5.103903293609619

Token 1797: ' contenant' (ID: 131049)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269254833459854
    2. ' =' → logprob: -2.626925468444824
    3. '_' → logprob: -3.876925468444824
    4. '_pos' → logprob: -4.876925468444824
    5. 'pos' → logprob: -5.001925468444824
    6. ')' → logprob: -5.751925468444824
    7. '```' → logprob: -6.751925468444824
    8. '_index' → logprob: -6.876925468444824
    9. '_idx' → logprob: -6.876925468444824
    10. ']' → logprob: -6.876925468444824

Token 1798: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.6241486668586731
    2. 'S' → logprob: -1.2491486072540283
    3. ')' → logprob: -2.4991486072540283
    4. 'p' → logprob: -3.7491486072540283
    5. '=' → logprob: -3.9991486072540283
    6. '_' → logprob: -4.124148845672607
    7. ' station' → logprob: -4.874148845672607
    8. 'pos' → logprob: -5.374148845672607
    9. 'position' → logprob: -5.749148845672607
    10. '`' → logprob: -5.749148845672607

Token 1799: '_limit' (ID: 34361)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.96897953748703
    2. '_index' → logprob: -1.5939795970916748
    3. ' =' → logprob: -1.7189795970916748
    4. '_' → logprob: -2.468979597091675
    5. '_idx' → logprob: -2.593979597091675
    6. '=' → logprob: -3.593979597091675
    7. 'pos' → logprob: -4.718979358673096
    8. '_point' → logprob: -5.093979358673096
    9. '_loc' → logprob: -5.218979358673096
    10. ')' → logprob: -5.343979358673096

Token 1800: '.

' (ID: 364)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0663035437464714
    2. '=' → logprob: -3.3163034915924072
    3. ' =' → logprob: -4.066303730010986
    4. 'p' → logprob: -4.691303730010986
    5. '=
' → logprob: -7.316303730010986
    6. '_pos' → logprob: -7.691303730010986
    7. 'idx' → logprob: -8.566303253173828
    8. '   ' → logprob: -9.566303253173828
    9. 'position' → logprob: -9.941303253173828
    10. ' =
' → logprob: -10.441303253173828

Token 1801: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5816080570220947
    2. 'p' → logprob: -1.0816080570220947
    3. '   ' → logprob: -2.3316080570220947
    4. ' pos' → logprob: -6.081607818603516
    5. ' p' → logprob: -6.331607818603516
    6. 'idx' → logprob: -8.581607818603516
    7. ' ' → logprob: -9.206607818603516
    8. 'position' → logprob: -9.331607818603516
    9. '    
' → logprob: -9.581607818603516
    10. 'i' → logprob: -9.956607818603516

Token 1802: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6212189793586731
    2. 'p' → logprob: -0.8712189793586731
    3. '   ' → logprob: -3.1212189197540283
    4. '=' → logprob: -9.87121868133545
    5. 'position' → logprob: -10.74621868133545
    6. ' pos' → logprob: -10.87121868133545
    7. ' =' → logprob: -11.12121868133545
    8. ' p' → logprob: -11.24621868133545
    9. 'idx' → logprob: -11.74621868133545
    10. ':' → logprob: -12.12121868133545

Token 1803: ' On' (ID: 2160)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.08486476540565491
    2. 'p' → logprob: -3.584864854812622
    3. ' =' → logprob: -4.459864616394043
    4. '=' → logprob: -4.459864616394043
    5. '   ' → logprob: -4.584864616394043
    6. ':' → logprob: -4.709864616394043
    7. ' pos' → logprob: -6.459864616394043
    8. '0' → logprob: -6.459864616394043
    9. 'def' → logprob: -6.709864616394043
    10. 'idx' → logprob: -6.709864616394043

Token 1804: ' effect' (ID: 3159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8954197764396667
    2. 'pos' → logprob: -1.0204198360443115
    3. 'def' → logprob: -2.1454198360443115
    4. 'import' → logprob: -3.6454198360443115
    5. 'position' → logprob: -4.020419597625732
    6. ' =' → logprob: -4.395419597625732
    7. 'continue' → logprob: -4.395419597625732
    8. '#' → logprob: -4.520419597625732
    9. 'p' → logprob: -5.020419597625732
    10. '_pos' → logprob: -5.270419597625732

Token 1805: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0666099488735199
    2. 'u' → logprob: -3.4416098594665527
    3. 'uer' → logprob: -4.191609859466553
    4. 'ute' → logprob: -4.691609859466553
    5. 'ues' → logprob: -5.441609859466553
    6. 'uate' → logprob: -5.816609859466553
    7. 'uez' → logprob: -8.191610336303711
    8. 'utes' → logprob: -8.316610336303711
    9. 'uera' → logprob: -9.941610336303711
    10. '#
' → logprob: -10.316610336303711

Token 1806: ' dp' (ID: 21546)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2688315212726593
    2. '   ' → logprob: -1.768831491470337
    3. 'p' → logprob: -2.893831491470337
    4. 'i' → logprob: -5.518831729888916
    5. ' p' → logprob: -6.518831729888916
    6. '0' → logprob: -6.768831729888916
    7. ' pos' → logprob: -6.893831729888916
    8. 'position' → logprob: -7.268831729888916
    9. 'def' → logprob: -8.518831253051758
    10. '```' → logprob: -8.518831253051758

Token 1807: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022087199613451958
    2. '=' → logprob: -3.8970870971679688
    3. '=[' → logprob: -6.772087097167969
    4. '   ' → logprob: -8.397087097167969
    5. '[' → logprob: -10.022087097167969
    6. '[i' → logprob: -10.147087097167969
    7. '=[[' → logprob: -10.772087097167969
    8. 'def' → logprob: -11.647087097167969
    9. ' ' → logprob: -11.897087097167969
    10. '  ' → logprob: -12.272087097167969

Token 1808: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7270961999893188
    2. ']' → logprob: -0.9770961999893188
    3. '[i' → logprob: -2.2270960807800293
    4. '   ' → logprob: -3.9770960807800293
    5. ' =' → logprob: -5.477096080780029
    6. ']=' → logprob: -5.602096080780029
    7. '=' → logprob: -6.727096080780029
    8. ' ][' → logprob: -6.727096080780029
    9. '
' → logprob: -6.977096080780029
    10. '[' → logprob: -7.602096080780029

Token 1809: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007178849074989557
    2. 'k' → logprob: -6.007178783416748
    3. '0' → logprob: -6.257178783416748
    4. ']' → logprob: -6.757178783416748
    5. ' j' → logprob: -7.882178783416748
    6. 'x' → logprob: -8.007179260253906
    7. '   ' → logprob: -8.757179260253906
    8. '][' → logprob: -9.132179260253906
    9. ' ' → logprob: -9.632179260253906
    10. 'used' → logprob: -9.757179260253906

Token 1810: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42450201511383057
    2. '][' → logprob: -2.174501895904541
    3. '[i' → logprob: -2.299501895904541
    4. '[' → logprob: -2.299501895904541
    5. '   ' → logprob: -3.799501895904541
    6. '[
' → logprob: -6.174501895904541
    7. ']=' → logprob: -6.549501895904541
    8. '][]' → logprob: -6.674501895904541
    9. '[]' → logprob: -6.924501895904541
    10. '=' → logprob: -7.174501895904541

Token 1811: ' minimal' (ID: 19957)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.724910318851471
    2. '[[' → logprob: -0.849910318851471
    3. '0' → logprob: -3.349910259246826
    4. '[
' → logprob: -3.849910259246826
    5. ' [[' → logprob: -4.599910259246826
    6. ' [' → logprob: -4.974910259246826
    7. ' =' → logprob: -5.224910259246826
    8. '=' → logprob: -5.974910259246826
    9. '   ' → logprob: -5.974910259246826
    10. ' ' → logprob: -6.349910259246826

Token 1812: ' temps' (ID: 11160)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.82326740026474
    2. '_' → logprob: -1.1982674598693848
    3. '[' → logprob: -1.8232674598693848
    4. '[i' → logprob: -3.6982674598693848
    5. ']' → logprob: -4.698267459869385
    6. '_cost' → logprob: -4.823267459869385
    7. ' _' → logprob: -4.948267459869385
    8. ')' → logprob: -5.323267459869385
    9. 'time' → logprob: -5.323267459869385
    10. '[
' → logprob: -5.323267459869385

Token 1813: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3180248439311981
    2. '[i' → logprob: -2.1930248737335205
    3. '=' → logprob: -2.8180248737335205
    4. '   ' → logprob: -3.3180248737335205
    5. ' =' → logprob: -3.6930248737335205
    6. '_' → logprob: -4.318024635314941
    7. ' ' → logprob: -4.818024635314941
    8. '[
' → logprob: -5.193024635314941
    9. ']' → logprob: -5.818024635314941
    10. '```' → logprob: -6.693024635314941

Token 1814: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.7965090870857239
    2. 'i' → logprob: -0.9215090870857239
    3. 'arr' → logprob: -2.921509027481079
    4. ' i' → logprob: -3.671509027481079
    5. '   ' → logprob: -3.796509027481079
    6. ' ' → logprob: -3.921509027481079
    7. ' atteindre' → logprob: -4.296509265899658
    8. 're' → logprob: -5.796509265899658
    9. '[i' → logprob: -5.921509265899658
    10. '  ' → logprob: -6.421509265899658

Token 1815: ' S' (ID: 336)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.484407514333725
    2. '[i' → logprob: -0.9844075441360474
    3. ' i' → logprob: -4.984407424926758
    4. 'S' → logprob: -5.984407424926758
    5. '   ' → logprob: -8.234407424926758
    6. ' [' → logprob: -8.359407424926758
    7. '[' → logprob: -9.109407424926758
    8. ' ' → logprob: -9.234407424926758
    9. '
' → logprob: -9.859407424926758
    10. ' S' → logprob: -10.359407424926758

Token 1816: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07272711396217346
    2. '[' → logprob: -2.8227272033691406
    3. '][' → logprob: -5.072727203369141
    4. ']' → logprob: -6.072727203369141
    5. '[
' → logprob: -7.447727203369141
    6. '
' → logprob: -8.32272720336914
    7. ' [' → logprob: -8.44772720336914
    8. '[p' → logprob: -8.69772720336914
    9. '\[' → logprob: -8.82272720336914
    10. '   ' → logprob: -9.07272720336914

Token 1817: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003053884720429778
    2. ']' → logprob: -6.128053665161133
    3. '   ' → logprob: -7.628053665161133
    4. '[i' → logprob: -8.628053665161133
    5. ' ][' → logprob: -9.253053665161133
    6. '][]' → logprob: -11.003053665161133
    7. ']
' → logprob: -11.503053665161133
    8. ']][' → logprob: -11.503053665161133
    9. '       ' → logprob: -11.878053665161133
    10. ' ' → logprob: -12.003053665161133

Token 1818: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6338632106781006
    2. ' =' → logprob: -0.7588632106781006
    3. '   ' → logprob: -7.50886344909668
    4. '=[' → logprob: -8.25886344909668
    5. '[i' → logprob: -8.38386344909668
    6. '[' → logprob: -9.50886344909668
    7. '=
' → logprob: -10.00886344909668
    8. ']' → logprob: -10.63386344909668
    9. ',' → logprob: -11.13386344909668
    10. 'import' → logprob: -11.75886344909668

Token 1819: ' utilisant' (ID: 92474)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.19539789855480194
    2. ' i' → logprob: -3.3203978538513184
    3. ' range' → logprob: -3.4453978538513184
    4. ' ' → logprob: -3.5703978538513184
    5. 'range' → logprob: -3.5703978538513184
    6. 'j' → logprob: -4.320397853851318
    7. '[j' → logprob: -4.820397853851318
    8. ' [' → logprob: -5.070397853851318
    9. '    ' → logprob: -5.070397853851318
    10. '[i' → logprob: -5.320397853851318

Token 1820: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3893354833126068
    2. ' j' → logprob: -1.1393355131149292
    3. ' i' → logprob: -6.764335632324219
    4. 'i' → logprob: -7.139335632324219
    5. '   ' → logprob: -8.139335632324219
    6. ' ' → logprob: -9.514335632324219
    7. '    ' → logprob: -9.889335632324219
    8. '[j' → logprob: -10.639335632324219
    9. '  ' → logprob: -11.514335632324219
    10. '	j' → logprob: -11.639335632324219

Token 1821: ' arr' (ID: 1724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29545557498931885
    2. '_sem' → logprob: -1.6704555749893188
    3. ' _' → logprob: -4.170455455780029
    4. '_stop' → logprob: -4.420455455780029
    5. '_s' → logprob: -4.920455455780029
    6. ']' → logprob: -5.045455455780029
    7. '_arr' → logprob: -5.545455455780029
    8. ')' → logprob: -5.670455455780029
    9. '_]' → logprob: -5.670455455780029
    10. '[' → logprob: -5.795455455780029

Token 1822: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.008713611401617527
    2. ' stops' → logprob: -5.008713722229004
    3. 'êt' → logprob: -6.633713722229004
    4. '_stop' → logprob: -7.883713722229004
    5. 'Stops' → logprob: -8.883713722229004
    6. 'rets' → logprob: -10.633713722229004
    7. 'êtes' → logprob: -10.758713722229004
    8. 'ôts' → logprob: -11.258713722229004
    9. ' Stops' → logprob: -11.383713722229004
    10. 'êtres' → logprob: -11.508713722229004

Token 1823: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9160462021827698
    2. '[i' → logprob: -1.166046142578125
    3. '[' → logprob: -2.541046142578125
    4. '_sem' → logprob: -2.541046142578125
    5. ']' → logprob: -3.416046142578125
    6. '][' → logprob: -3.791046142578125
    7. '```' → logprob: -4.166046142578125
    8. '_s' → logprob: -4.541046142578125
    9. '_i' → logprob: -5.541046142578125
    10. ')' → logprob: -5.541046142578125

Token 1824: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.02009390853345394
    2. '[i' → logprob: -5.27009391784668
    3. '[' → logprob: -6.14509391784668
    4. 'pexpr' → logprob: -6.39509391784668
    5. 'express' → logprob: -6.77009391784668
    6. 'ip' → logprob: -7.02009391784668
    7. 'ormais' → logprob: -7.14509391784668
    8. 'i' → logprob: -7.27009391784668
    9. '_i' → logprob: -7.27009391784668
    10. '_' → logprob: -7.39509391784668

Token 1825: ' au' (ID: 2791)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4753943979740143
    2. '=' → logprob: -1.100394368171692
    3. '   ' → logprob: -4.100394248962402
    4. '[i' → logprob: -4.350394248962402
    5. '[' → logprob: -4.850394248962402
    6. '=[' → logprob: -5.975394248962402
    7. 'def' → logprob: -6.225394248962402
    8. '_' → logprob: -6.725394248962402
    9. ' ' → logprob: -6.975394248962402
    10. '=
' → logprob: -7.475394248962402

Token 1826: ' total' (ID: 3609)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9066895246505737
    2. ' station' → logprob: -1.5316895246505737
    3. ')' → logprob: -2.2816896438598633
    4. ' ]' → logprob: -2.5316896438598633
    5. ' next' → logprob: -3.4066896438598633
    6. 'i' → logprob: -3.5316896438598633
    7. 'station' → logprob: -4.156689643859863
    8. ' )' → logprob: -4.156689643859863
    9. ' i' → logprob: -4.281689643859863
    10. '+' → logprob: -4.281689643859863

Token 1827: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1637481451034546
    2. '=' → logprob: -3.038748264312744
    3. ' =' → logprob: -3.163748264312744
    4. '[i' → logprob: -3.163748264312744
    5. '   ' → logprob: -4.788748264312744
    6. ' ' → logprob: -6.288748264312744
    7. ':' → logprob: -6.413748264312744
    8. ',' → logprob: -6.788748264312744
    9. '[
' → logprob: -6.788748264312744
    10. '```' → logprob: -7.163748264312744

Token 1828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5448693037033081
    2. ':' → logprob: -1.419869303703308
    3. '[' → logprob: -2.6698694229125977
    4. ' =' → logprob: -2.7948694229125977
    5. ':
' → logprob: -4.169869422912598
    6. ' ' → logprob: -4.669869422912598
    7. '[
' → logprob: -5.294869422912598
    8. '=' → logprob: -5.669869422912598
    9. '\t' → logprob: -6.169869422912598
    10. ' :' → logprob: -6.169869422912598

Token 1829: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3545115292072296
    2. ' =' → logprob: -1.4795114994049072
    3. ':' → logprob: -3.6045114994049072
    4. '[' → logprob: -4.104511737823486
    5. '=' → logprob: -4.354511737823486
    6. ':
' → logprob: -5.854511737823486
    7. '
' → logprob: -6.104511737823486
    8. 'dp' → logprob: -6.604511737823486
    9. ' ' → logprob: -6.729511737823486
    10. ' :' → logprob: -7.229511737823486

Token 1830: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03855547681450844
    2. ' =' → logprob: -3.538555383682251
    3. '=' → logprob: -6.16355562210083
    4. ']' → logprob: -6.16355562210083
    5. '
' → logprob: -6.53855562210083
    6. '][' → logprob: -7.53855562210083
    7. '=
' → logprob: -7.53855562210083
    8. '```' → logprob: -7.66355562210083
    9. '   ' → logprob: -7.78855562210083
    10. 'import' → logprob: -8.413555145263672

Token 1831: ' construit' (ID: 119882)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1256054937839508
    2. ' =' → logprob: -2.250605583190918
    3. 'def' → logprob: -5.250605583190918
    4. '[' → logprob: -6.000605583190918
    5. '   ' → logprob: -6.875605583190918
    6. '=
' → logprob: -7.125605583190918
    7. 'import' → logprob: -7.750605583190918
    8. '.append' → logprob: -8.125605583190918
    9. ' ' → logprob: -8.250605583190918
    10. '_' → logprob: -8.500605583190918

Token 1832: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3554624319076538
    2. '[
' → logprob: -2.2304625511169434
    3. '```' → logprob: -3.2304625511169434
    4. '   ' → logprob: -3.2304625511169434
    5. '[i' → logprob: -3.4804625511169434
    6. '[' → logprob: -3.9804625511169434
    7. '
' → logprob: -3.9804625511169434
    8. ' =' → logprob: -4.355462551116943
    9. 'i' → logprob: -4.605462551116943
    10. ' dp' → logprob: -5.105462551116943

Token 1833: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02442825958132744
    2. '=' → logprob: -3.774428367614746
    3. '=[' → logprob: -7.399428367614746
    4. '[' → logprob: -8.649428367614746
    5. '   ' → logprob: -9.274428367614746
    6. '[i' → logprob: -9.899428367614746
    7. '=
' → logprob: -9.899428367614746
    8. '=[[' → logprob: -10.649428367614746
    9. '_' → logprob: -10.899428367614746
    10. 'def' → logprob: -10.899428367614746

Token 1834: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5399525761604309
    2. 'M' → logprob: -1.4149525165557861
    3. ' range' → logprob: -2.664952516555786
    4. 'i' → logprob: -2.914952516555786
    5. 'S' → logprob: -3.539952516555786
    6. '   ' → logprob: -4.664952754974365
    7. ' M' → logprob: -5.664952754974365
    8. ' i' → logprob: -6.289952754974365
    9. 'p' → logprob: -6.539952754974365
    10. ' ' → logprob: -7.039952754974365

Token 1835: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8971655964851379
    2. '[' → logprob: -1.0221655368804932
    3. ' =' → logprob: -1.8971655368804932
    4. '[i' → logprob: -2.647165536880493
    5. '   ' → logprob: -5.522165775299072
    6. '=[' → logprob: -6.147165775299072
    7. '0' → logprob: -7.022165775299072
    8. ' ' → logprob: -7.397165775299072
    9. '_' → logprob: -7.522165775299072
    10. ':' → logprob: -7.647165775299072

Token 1836: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.43214738368988037
    2. 'j' → logprob: -1.0571473836898804
    3. ' M' → logprob: -7.05714750289917
    4. 'M' → logprob: -7.43214750289917
    5. 'i' → logprob: -7.93214750289917
    6. '   ' → logprob: -8.307147026062012
    7. ' i' → logprob: -8.682147026062012
    8. 'range' → logprob: -8.807147026062012
    9. 'S' → logprob: -8.932147026062012
    10. ' K' → logprob: -9.057147026062012

Token 1837: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9202368259429932
    2. ' =' → logprob: -1.0452368259429932
    3. '=' → logprob: -2.545236825942993
    4. '[i' → logprob: -2.670236825942993
    5. '   ' → logprob: -2.920236825942993
    6. '[
' → logprob: -4.045236587524414
    7. '```' → logprob: -4.670236587524414
    8. ':' → logprob: -4.795236587524414
    9. ' ' → logprob: -6.045236587524414
    10. ',' → logprob: -6.545236587524414

Token 1838: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0735939741134644
    2. ':' → logprob: -1.1985939741134644
    3. ':
' → logprob: -1.5735939741134644
    4. ' =' → logprob: -2.198594093322754
    5. '[' → logprob: -4.323594093322754
    6. '[i' → logprob: -5.198594093322754
    7. '
' → logprob: -5.823594093322754
    8. ' :
' → logprob: -5.823594093322754
    9. ' :' → logprob: -5.948594093322754
    10. '=' → logprob: -6.198594093322754

Token 1839: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1535307765007019
    2. '   ' → logprob: -2.1535308361053467
    3. ':
' → logprob: -4.403530597686768
    4. '[' → logprob: -5.528530597686768
    5. ' =' → logprob: -5.653530597686768
    6. 'dp' → logprob: -5.653530597686768
    7. '=' → logprob: -7.153530597686768
    8. ' ' → logprob: -7.403530597686768
    9. ' :' → logprob: -7.528530597686768
    10. 'def' → logprob: -8.403531074523926

Token 1840: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32924437522888184
    2. '   ' → logprob: -1.7042443752288818
    3. 'M' → logprob: -2.954244375228882
    4. ' dp' → logprob: -3.829244375228882
    5. ' M' → logprob: -4.579244613647461
    6. '0' → logprob: -5.704244613647461
    7. '
' → logprob: -6.454244613647461
    8. 'import' → logprob: -6.454244613647461
    9. '[' → logprob: -6.704244613647461
    10. ' ' → logprob: -6.704244613647461

Token 1841: ' mod' (ID: 1812)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5791217684745789
    2. '=' → logprob: -0.8291217684745789
    3. 'def' → logprob: -6.8291215896606445
    4. 'import' → logprob: -6.9541215896606445
    5. '=
' → logprob: -8.079121589660645
    6. '=[' → logprob: -9.329121589660645
    7. '   ' → logprob: -9.454121589660645
    8. '[' → logprob: -9.454121589660645
    9. 'n' → logprob: -9.579121589660645
    10. ' ' → logprob: -9.954121589660645

Token 1842: 'ifie' (ID: 46409)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8893625140190125
    2. 'ule' → logprob: -1.2643625736236572
    3. ' =' → logprob: -1.6393625736236572
    4. 'if' → logprob: -3.1393625736236572
    5. '.append' → logprob: -4.014362335205078
    6. '=' → logprob: -4.514362335205078
    7. 'ify' → logprob: -4.764362335205078
    8. 'èle' → logprob: -5.264362335205078
    9. '[' → logprob: -5.514362335205078
    10. 'ifie' → logprob: -5.764362335205078

Token 1843: ' légèrement' (ID: 111419)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1556587219238281
    2. '   ' → logprob: -1.2806587219238281
    3. ':' → logprob: -1.4056587219238281
    4. '[' → logprob: -2.780658721923828
    5. 'import' → logprob: -3.905658721923828
    6. 'def' → logprob: -3.905658721923828
    7. '=' → logprob: -4.530658721923828
    8. '_' → logprob: -4.655658721923828
    9. ' ' → logprob: -5.405658721923828
    10. 'dp' → logprob: -5.530658721923828

Token 1844: ' la' (ID: 557)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7748827934265137
    2. ' =' → logprob: -0.7748827934265137
    3. '=' → logprob: -3.5248827934265137
    4. '[' → logprob: -3.8998827934265137
    5. 'def' → logprob: -4.149882793426514
    6. ' :' → logprob: -5.149882793426514
    7. ' ' → logprob: -6.524882793426514
    8. '   ' → logprob: -6.649882793426514
    9. ':
' → logprob: -7.524882793426514
    10. '[
' → logprob: -7.899882793426514

Token 1845: ' méthode' (ID: 71490)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4676855504512787
    2. 'def' → logprob: -2.3426854610443115
    3. 'dp' → logprob: -2.5926854610443115
    4. ' ' → logprob: -2.9676854610443115
    5. '[' → logprob: -3.2176854610443115
    6. '\n' → logprob: -3.8426854610443115
    7. ':' → logprob: -4.217685699462891
    8. ' code' → logprob: -4.467685699462891
    9. 'n' → logprob: -4.842685699462891
    10. ')' → logprob: -5.092685699462891

Token 1846: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01545831747353077
    2. ':
' → logprob: -4.890458106994629
    3. '[' → logprob: -5.765458106994629
    4. ' =' → logprob: -6.515458106994629
    5. ' :' → logprob: -7.265458106994629
    6. 'def' → logprob: -7.265458106994629
    7. '   ' → logprob: -7.265458106994629
    8. '
' → logprob: -8.390458106994629
    9. '=' → logprob: -9.140458106994629
    10. ' ' → logprob: -9.140458106994629

Token 1847: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6365783214569092
    2. 'dp' → logprob: -0.7615783214569092
    3. ' dp' → logprob: -6.386578559875488
    4. '
' → logprob: -6.636578559875488
    5. ' ' → logprob: -8.261578559875488
    6. ':' → logprob: -8.386578559875488
    7. '    
' → logprob: -8.761578559875488
    8. '	dp' → logprob: -9.761578559875488
    9. ':
' → logprob: -10.011578559875488
    10. '```' → logprob: -10.261578559875488

Token 1848: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13443975150585175
    2. ':' → logprob: -2.384439706802368
    3. 'dp' → logprob: -3.509439706802368
    4. ':
' → logprob: -6.634439945220947
    5. 'def' → logprob: -7.384439945220947
    6. ' ' → logprob: -7.384439945220947
    7. ' :' → logprob: -8.134439468383789
    8. '
' → logprob: -8.884439468383789
    9. '[' → logprob: -9.634439468383789
    10. '\t' → logprob: -9.884439468383789

Token 1849: ' On' (ID: 2160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03680865839123726
    2. '[' → logprob: -4.411808490753174
    3. ':
' → logprob: -5.161808490753174
    4. '0' → logprob: -5.786808490753174
    5. 'def' → logprob: -5.911808490753174
    6. '   ' → logprob: -6.286808490753174
    7. ' =' → logprob: -6.536808490753174
    8. '=' → logprob: -6.661808490753174
    9. ']:' → logprob: -6.661808490753174
    10. 'dp' → logprob: -6.661808490753174

Token 1850: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.324653297662735
    2. '=' → logprob: -1.3246532678604126
    3. 'def' → logprob: -5.074653148651123
    4. ' ' → logprob: -6.949653148651123
    5. '
' → logprob: -6.949653148651123
    6. '   ' → logprob: -6.949653148651123
    7. 'n' → logprob: -8.074653625488281
    8. '_tab' → logprob: -8.324653625488281
    9. '[' → logprob: -8.449653625488281
    10. '=
' → logprob: -8.699653625488281

Token 1851: ' stock' (ID: 6546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2635338008403778
    2. '[' → logprob: -3.1385338306427
    3. ' ' → logprob: -3.3885338306427
    4. ':' → logprob: -3.7635338306427
    5. 'initialize' → logprob: -3.8885338306427
    6. '[]' → logprob: -4.638533592224121
    7. 'initial' → logprob: -4.763533592224121
    8. 'def' → logprob: -4.763533592224121
    9. 'indent' → logprob: -5.138533592224121
    10. 'calcul' → logprob: -5.138533592224121

Token 1852: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.14859095215797424
    2. '=' → logprob: -2.8985910415649414
    3. ' =' → logprob: -3.6485910415649414
    4. '[
' → logprob: -3.8985910415649414
    5. '   ' → logprob: -4.148591041564941
    6. 'e' → logprob: -4.898591041564941
    7. '[' → logprob: -4.898591041564941
    8. '=
' → logprob: -7.148591041564941
    9. '  ' → logprob: -7.273591041564941
    10. '[]' → logprob: -7.398591041564941

Token 1853: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01752392388880253
    2. ' dp' → logprob: -4.267523765563965
    3. '   ' → logprob: -6.267523765563965
    4. '[' → logprob: -6.767523765563965
    5. '[
' → logprob: -8.892523765563965
    6. ' [' → logprob: -10.017523765563965
    7. '	dp' → logprob: -10.142523765563965
    8. ' ' → logprob: -10.517523765563965
    9. '  ' → logprob: -11.642523765563965
    10. '```' → logprob: -12.017523765563965

Token 1854: ' tableau' (ID: 67053)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6270414590835571
    2. '[' → logprob: -1.8770414590835571
    3. 'dp' → logprob: -1.8770414590835571
    4. '=' → logprob: -2.3770413398742676
    5. ' ' → logprob: -2.5020413398742676
    6. '[
' → logprob: -2.7520413398742676
    7. ']' → logprob: -3.1270413398742676
    8. 'def' → logprob: -3.2520413398742676
    9. '[]' → logprob: -3.3770413398742676
    10. ' dp' → logprob: -3.6270413398742676

Token 1855: ' expr' (ID: 30206)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09358271956443787
    2. ' =' → logprob: -2.9685826301574707
    3. '_dp' → logprob: -3.9685826301574707
    4. ' dp' → logprob: -4.218582630157471
    5. '=' → logprob: -6.718582630157471
    6. '_' → logprob: -6.843582630157471
    7. ' of' → logprob: -7.343582630157471
    8. '[' → logprob: -7.593582630157471
    9. 'de' → logprob: -8.593583106994629
    10. '[
' → logprob: -8.968583106994629

Token 1856: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.526447594165802
    2. 'ess' → logprob: -1.7764475345611572
    3. 'ession' → logprob: -2.1514475345611572
    4. '=' → logprob: -3.2764475345611572
    5. '```' → logprob: -4.276447772979736
    6. ' =' → logprob: -4.526447772979736
    7. '[i' → logprob: -4.651447772979736
    8. '[
' → logprob: -4.901447772979736
    9. 'essions' → logprob: -5.026447772979736
    10. '[]' → logprob: -5.151447772979736

Token 1857: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09550510346889496
    2. '][' → logprob: -4.345505237579346
    3. '_len' → logprob: -4.345505237579346
    4. '_pos' → logprob: -4.345505237579346
    5. '_]' → logprob: -5.220505237579346
    6. 'dp' → logprob: -5.470505237579346
    7. ']_' → logprob: -5.595505237579346
    8. '_' → logprob: -5.595505237579346
    9. '[]' → logprob: -5.720505237579346
    10. '_positions' → logprob: -6.220505237579346

Token 1858: ' stations' (ID: 26061)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03038671240210533
    2. '[i' → logprob: -4.405386924743652
    3. '[]' → logprob: -4.530386924743652
    4. 'expr' → logprob: -5.905386924743652
    5. ' [' → logprob: -6.655386924743652
    6. '0' → logprob: -7.530386924743652
    7. 'dp' → logprob: -7.655386924743652
    8. '[int' → logprob: -7.780386924743652
    9. '[N' → logprob: -8.030386924743652
    10. '   ' → logprob: -8.655386924743652

Token 1859: ' S' (ID: 336)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15344294905662537
    2. '_pos' → logprob: -3.403442859649658
    3. 'pos' → logprob: -3.903442859649658
    4. '_re' → logprob: -4.278442859649658
    5. ' =' → logprob: -4.278442859649658
    6. '_positions' → logprob: -4.528442859649658
    7. 'reachable' → logprob: -5.028442859649658
    8. '_' → logprob: -5.528442859649658
    9. 'expr' → logprob: -5.653442859649658
    10. '=[]' → logprob: -5.653442859649658

Token 1860: '[i' (ID: 1768)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.355749249458313
    2. ' =' → logprob: -1.480749249458313
    3. '=' → logprob: -2.1057491302490234
    4. ')' → logprob: -2.7307491302490234
    5. '_pos' → logprob: -2.7307491302490234
    6. '_' → logprob: -3.1057491302490234
    7. 's' → logprob: -3.3557491302490234
    8. '_positions' → logprob: -3.4807491302490234
    9. '_expr' → logprob: -3.4807491302490234
    10. 'S' → logprob: -3.7307491302490234

Token 1861: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03653537854552269
    2. '[i' → logprob: -5.161535263061523
    3. ']+' → logprob: -5.411535263061523
    4. '[' → logprob: -5.661535263061523
    5. ']_' → logprob: -5.786535263061523
    6. '][' → logprob: -6.286535263061523
    7. '+' → logprob: -6.286535263061523
    8. '[]' → logprob: -6.286535263061523
    9. ']
' → logprob: -6.411535263061523
    10. '],' → logprob: -6.661535263061523

Token 1862: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1666927933692932
    2. '=' → logprob: -2.6666927337646484
    3. ']' → logprob: -3.1666927337646484
    4. '[' → logprob: -4.041692733764648
    5. '_' → logprob: -5.291692733764648
    6. '   ' → logprob: -5.791692733764648
    7. '```' → logprob: -5.791692733764648
    8. '[i' → logprob: -6.041692733764648
    9. ',' → logprob: -6.416692733764648
    10. ' ' → logprob: -6.666692733764648

Token 1863: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3710792064666748
    2. '=' → logprob: -1.2460792064666748
    3. '=
' → logprob: -5.246079444885254
    4. '   ' → logprob: -5.371079444885254
    5. ']' → logprob: -5.621079444885254
    6. '[' → logprob: -6.371079444885254
    7. ' =
' → logprob: -6.621079444885254
    8. ',' → logprob: -7.121079444885254
    9. '[i' → logprob: -7.246079444885254
    10. '
' → logprob: -7.496079444885254

Token 1864: ' Et' (ID: 10007)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7003071904182434
    2. ':' → logprob: -2.3253071308135986
    3. '[' → logprob: -2.3253071308135986
    4. '=' → logprob: -2.5753071308135986
    5. '   ' → logprob: -3.0753071308135986
    6. '[i' → logprob: -3.3253071308135986
    7. '
' → logprob: -3.4503071308135986
    8. ']' → logprob: -3.5753071308135986
    9. ':
' → logprob: -4.200307369232178
    10. 'dp' → logprob: -4.200307369232178

Token 1865: ' traiter' (ID: 105852)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8735160827636719
    2. ' dp' → logprob: -1.4985160827636719
    3. 'def' → logprob: -2.498516082763672
    4. 'i' → logprob: -2.873516082763672
    5. ' i' → logprob: -3.248516082763672
    6. ' for' → logprob: -3.623516082763672
    7. '   ' → logprob: -3.998516082763672
    8. '#' → logprob: -4.248516082763672
    9. 'for' → logprob: -4.248516082763672
    10. 'S' → logprob: -4.873516082763672

Token 1866: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.388534426689148
    2. '[' → logprob: -1.638534426689148
    3. '[i' → logprob: -2.2635345458984375
    4. 'i' → logprob: -2.2635345458984375
    5. ':' → logprob: -2.5135345458984375
    6. ']' → logprob: -2.8885345458984375
    7. '```' → logprob: -3.6385345458984375
    8. ' ' → logprob: -3.7635345458984375
    9. 'S' → logprob: -3.7635345458984375
    10. '0' → logprob: -3.7635345458984375

Token 1867: ' interv' (ID: 37413)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3705591559410095
    2. '```' → logprob: -1.8705592155456543
    3. ' range' → logprob: -3.1205592155456543
    4. 'dp' → logprob: -3.8705592155456543
    5. '[i' → logprob: -4.495559215545654
    6. 'i' → logprob: -4.745559215545654
    7. 'def' → logprob: -4.870559215545654
    8. 'S' → logprob: -4.870559215545654
    9. 'for' → logprob: -4.870559215545654
    10. ']' → logprob: -5.370559215545654

Token 1868: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0023455615155398846
    2. 'als' → logprob: -7.002345561981201
    3. 'ale' → logprob: -7.002345561981201
    4. 'alue' → logprob: -8.877345085144043
    5. 'alu' → logprob: -9.252345085144043
    6. '[' → logprob: -9.627345085144043
    7. '```' → logprob: -10.127345085144043
    8. '[
' → logprob: -10.502345085144043
    9. '   ' → logprob: -10.752345085144043
    10. 'er' → logprob: -10.752345085144043

Token 1869: '.

' (ID: 364)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6982992887496948
    2. '=' → logprob: -1.3232992887496948
    3. ':' → logprob: -1.5732992887496948
    4. ':
' → logprob: -5.073299407958984
    5. '[' → logprob: -5.198299407958984
    6. '[i' → logprob: -5.698299407958984
    7. ']' → logprob: -6.198299407958984
    8. '```' → logprob: -6.323299407958984
    9. 'def' → logprob: -6.448299407958984
    10. '   ' → logprob: -6.573299407958984

Token 1870: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38512977957725525
    2. 'dp' → logprob: -2.135129690170288
    3. ':' → logprob: -2.260129690170288
    4. ':
' → logprob: -3.010129690170288
    5. '
' → logprob: -4.260129928588867
    6. ' =' → logprob: -4.385129928588867
    7. 'i' → logprob: -5.385129928588867
    8. 'def' → logprob: -6.010129928588867
    9. 'if' → logprob: -6.260129928588867
    10. '=' → logprob: -6.385129928588867

Token 1871: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0883893221616745
    2. 'dp' → logprob: -2.8383893966674805
    3. ':' → logprob: -4.2133893966674805
    4. '
' → logprob: -5.3383893966674805
    5. '```' → logprob: -7.0883893966674805
    6. '[' → logprob: -7.3383893966674805
    7. 'def' → logprob: -7.4633893966674805
    8. '    
' → logprob: -7.5883893966674805
    9. ' dp' → logprob: -7.5883893966674805
    10. ']' → logprob: -7.8383893966674805

Token 1872: ' On' (ID: 2160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34602591395378113
    2. '[' → logprob: -1.9710259437561035
    3. '   ' → logprob: -2.9710259437561035
    4. ':
' → logprob: -3.3460259437561035
    5. 'def' → logprob: -4.0960259437561035
    6. '0' → logprob: -4.4710259437561035
    7. '[i' → logprob: -4.5960259437561035
    8. '
' → logprob: -6.0960259437561035
    9. 'dp' → logprob: -6.0960259437561035
    10. '(' → logprob: -6.3460259437561035

Token 1873: ' prépare' (ID: 150142)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4999927282333374
    2. '=' → logprob: -1.6249927282333374
    3. ' =' → logprob: -1.8749927282333374
    4. '_' → logprob: -1.9999927282333374
    5. 'def' → logprob: -2.874992847442627
    6. '.append' → logprob: -3.499992847442627
    7. 'append' → logprob: -3.749992847442627
    8. '.' → logprob: -3.874992847442627
    9. 'continue' → logprob: -3.874992847442627
    10. '[]' → logprob: -3.999992847442627

Token 1874: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.127749502658844
    2. 'M' → logprob: -2.377749443054199
    3. 'interval' → logprob: -4.752749443054199
    4. 'max' → logprob: -6.252749443054199
    5. 'time' → logprob: -6.252749443054199
    6. '   ' → logprob: -6.377749443054199
    7. '[' → logprob: -6.377749443054199
    8. '
' → logprob: -6.627749443054199
    9. 'express' → logprob: -6.627749443054199
    10. 'pos' → logprob: -6.752749443054199

Token 1875: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7205772399902344
    2. 'def' → logprob: -1.9705772399902344
    3. ' dp' → logprob: -2.3455772399902344
    4. ')' → logprob: -3.4705772399902344
    5. '[' → logprob: -3.4705772399902344
    6. '
' → logprob: -3.5955772399902344
    7. '```' → logprob: -3.5955772399902344
    8. ':' → logprob: -3.8455772399902344
    9. '[
' → logprob: -3.8455772399902344
    10. ' =' → logprob: -4.345577239990234

Token 1876: ' permettant' (ID: 61092)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01607624813914299
    2. 'max' → logprob: -4.76607608795166
    3. 'time' → logprob: -5.76607608795166
    4. ' =' → logprob: -6.76607608795166
    5. 'times' → logprob: -6.89107608795166
    6. ' dp' → logprob: -8.01607608795166
    7. 'cost' → logprob: -8.01607608795166
    8. '_dp' → logprob: -8.01607608795166
    9. 'dist' → logprob: -8.64107608795166
    10. '_time' → logprob: -9.01607608795166

Token 1877: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8121008276939392
    2. 'de' → logprob: -1.062100887298584
    3. ' de' → logprob: -1.937100887298584
    4. ' d' → logprob: -3.312100887298584
    5. '_' → logprob: -4.812100887298584
    6. 'def' → logprob: -4.812100887298584
    7. '   ' → logprob: -5.562100887298584
    8. 'à' → logprob: -6.312100887298584
    9. 'calcul' → logprob: -6.812100887298584
    10. 's' → logprob: -7.062100887298584

Token 1878: ''avoir' (ID: 55863)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.5066567659378052
    2. 'e' → logprob: -1.7566567659378052
    3. 'append' → logprob: -2.1316566467285156
    4. ' append' → logprob: -3.5066566467285156
    5. 'é' → logprob: -4.006656646728516
    6. '.append' → logprob: -4.756656646728516
    7. 'éf' → logprob: -4.756656646728516
    8. 'len' → logprob: -5.131656646728516
    9. '=' → logprob: -5.506656646728516
    10. '_append' → logprob: -5.756656646728516

Token 1879: ' d' (ID: 272)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.0392563343048096
    2. 'le' → logprob: -2.1642563343048096
    3. 'S' → logprob: -2.2892563343048096
    4. 'la' → logprob: -2.4142563343048096
    5. '[]' → logprob: -2.6642563343048096
    6. 'un' → logprob: -2.6642563343048096
    7. 'dp' → logprob: -2.7892563343048096
    8. ' la' → logprob: -3.1642563343048096
    9. 'une' → logprob: -3.2892563343048096
    10. ']' → logprob: -3.2892563343048096

Token 1880: '_i' (ID: 10853)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.5213363766670227
    2. '=' → logprob: -2.521336317062378
    3. 'e' → logprob: -2.521336317062378
    4. ' =' → logprob: -2.771336317062378
    5. '_' → logprob: -3.271336317062378
    6. 'p' → logprob: -3.771336317062378
    7. 'éf' → logprob: -3.771336317062378
    8. 'im' → logprob: -4.021336555480957
    9. 'ist' → logprob: -4.396336555480957
    10. 'ata' → logprob: -5.021336555480957

Token 1881: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17160262167453766
    2. ' =' → logprob: -1.9216026067733765
    3. 's' → logprob: -5.921602725982666
    4. '=[' → logprob: -6.171602725982666
    5. '=[]' → logprob: -6.296602725982666
    6. '_lengths' → logprob: -7.171602725982666
    7. '_len' → logprob: -7.421602725982666
    8. 'length' → logprob: -7.796602725982666
    9. '=len' → logprob: -8.046602249145508
    10. '_length' → logprob: -8.171602249145508

Token 1882: ' longe' (ID: 66385)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10923817753791809
    2. '[S' → logprob: -2.6092381477355957
    3. ' S' → logprob: -3.9842381477355957
    4. '[' → logprob: -5.234238147735596
    5. ' [' → logprob: -5.359238147735596
    6. '[i' → logprob: -7.734238147735596
    7. '(S' → logprob: -7.984238147735596
    8. '[]' → logprob: -8.984238624572754
    9. ' ' → logprob: -10.109238624572754
    10. '[s' → logprob: -10.109238624572754

Token 1883: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.37552860379219055
    2. 'r' → logprob: -1.5005285739898682
    3. 'th' → logprob: -2.500528573989868
    4. 'ueur' → logprob: -5.625528812408447
    5. 'eur' → logprob: -6.375528812408447
    6. 'u' → logprob: -6.625528812408447
    7. ' =' → logprob: -7.750528812408447
    8. '=' → logprob: -8.375528335571289
    9. 'n' → logprob: -8.750528335571289
    10. 'reur' → logprob: -9.000528335571289

Token 1884: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13239534199237823
    2. ' =' → logprob: -2.6323952674865723
    3. 'S' → logprob: -4.007395267486572
    4. '_s' → logprob: -4.132395267486572
    5. '=' → logprob: -4.757395267486572
    6. '_' → logprob: -5.507395267486572
    7. '_S' → logprob: -7.132395267486572
    8. '_inter' → logprob: -7.382395267486572
    9. '(S' → logprob: -7.507395267486572
    10. '[i' → logprob: -7.882395267486572

Token 1885: ' interv' (ID: 37413)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3972485661506653
    2. ' S' → logprob: -1.8972485065460205
    3. 'interval' → logprob: -2.0222485065460205
    4. 'segments' → logprob: -3.6472485065460205
    5. ' segments' → logprob: -4.8972487449646
    6. 'inter' → logprob: -5.1472487449646
    7. ' ' → logprob: -6.2722487449646
    8. ' intervals' → logprob: -6.3972487449646
    9. ' interval' → logprob: -7.7722487449646
    10. 'segment' → logprob: -7.7722487449646

Token 1886: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.25679096579551697
    2. 'als' → logprob: -1.5067909955978394
    3. 'S' → logprob: -6.506791114807129
    4. '   ' → logprob: -7.631791114807129
    5. ']' → logprob: -7.756791114807129
    6. 'er' → logprob: -7.881791114807129
    7. 'ale' → logprob: -8.256791114807129
    8. '(S' → logprob: -8.381791114807129
    9. '```' → logprob: -8.631791114807129
    10. '[' → logprob: -9.506791114807129

Token 1887: '

' (ID: 279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5507440567016602
    2. ' =' → logprob: -0.9257440567016602
    3. 's' → logprob: -3.80074405670166
    4. 'S' → logprob: -7.05074405670166
    5. 'd' → logprob: -7.17574405670166
    6. '_' → logprob: -7.30074405670166
    7. '_lengths' → logprob: -7.42574405670166
    8. ']' → logprob: -7.80074405670166
    9. '=[' → logprob: -7.80074405670166
    10. '_length' → logprob: -8.17574405670166

Token 1888: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47725868225097656
    2. '=' → logprob: -2.6022586822509766
    3. 'd' → logprob: -2.7272586822509766
    4. '
' → logprob: -2.8522586822509766
    5. 'interval' → logprob: -3.1022586822509766
    6. 's' → logprob: -3.2272586822509766
    7. '=
' → logprob: -3.7272586822509766
    8. '#' → logprob: -4.602258682250977
    9. '[i' → logprob: -4.852258682250977
    10. '[' → logprob: -5.227258682250977

Token 1889: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4146229326725006
    2. 'interval' → logprob: -2.5396230220794678
    3. '   ' → logprob: -2.6646230220794678
    4. ' =' → logprob: -2.6646230220794678
    5. 'dist' → logprob: -2.9146230220794678
    6. '=' → logprob: -4.039622783660889
    7. 'dp' → logprob: -4.289622783660889
    8. ']' → logprob: -5.039622783660889
    9. ':
' → logprob: -5.164622783660889
    10. ':' → logprob: -5.414622783660889

Token 1890: ' max' (ID: 2999)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.09470534324646
    2. 'interval' → logprob: -1.21970534324646
    3. 'dp' → logprob: -1.46970534324646
    4. 'M' → logprob: -3.09470534324646
    5. ']' → logprob: -4.094705581665039
    6. 'dist' → logprob: -4.344705581665039
    7. '   ' → logprob: -4.469705581665039
    8. ' =' → logprob: -4.844705581665039
    9. '
' → logprob: -5.219705581665039
    10. ':' → logprob: -5.219705581665039

Token 1891: ' dp' (ID: 21546)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6989629864692688
    2. ']' → logprob: -1.448962926864624
    3. ')' → logprob: -2.198962926864624
    4. '+' → logprob: -2.323962926864624
    5. ' =' → logprob: -4.198963165283203
    6. 'd' → logprob: -4.698963165283203
    7. '[' → logprob: -5.448963165283203
    8. 'N' → logprob: -5.698963165283203
    9. 'def' → logprob: -5.948963165283203
    10. '#' → logprob: -6.073963165283203

Token 1892: ' dimension' (ID: 21959)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6512722969055176
    2. '=' → logprob: -0.7762722969055176
    3. '=[' → logprob: -5.276272296905518
    4. 'dp' → logprob: -5.901272296905518
    5. '[' → logprob: -6.026272296905518
    6. ']' → logprob: -6.401272296905518
    7. '=
' → logprob: -6.651272296905518
    8. 'max' → logprob: -7.151272296905518
    9. ')' → logprob: -7.526272296905518
    10. '[
' → logprob: -8.15127182006836

Token 1893: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5079653859138489
    2. '=' → logprob: -1.007965326309204
    3. '[M' → logprob: -4.882965564727783
    4. ']' → logprob: -5.132965564727783
    5. 'dp' → logprob: -5.382965564727783
    6. '[' → logprob: -5.382965564727783
    7. 'M' → logprob: -5.507965564727783
    8. '[
' → logprob: -7.007965564727783
    9. '=[' → logprob: -7.132965564727783
    10. 'K' → logprob: -7.132965564727783

Token 1894: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.044417548924684525
    2. ' M' → logprob: -4.169417381286621
    3. 'dp' → logprob: -4.419417381286621
    4. '(M' → logprob: -5.044417381286621
    5. '[M' → logprob: -5.044417381286621
    6. '[' → logprob: -7.669417381286621
    7. ']' → logprob: -8.169417381286621
    8. '   ' → logprob: -8.169417381286621
    9. 'K' → logprob: -8.169417381286621
    10. ' =' → logprob: -8.419417381286621

Token 1895: ' x' (ID: 1215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.681739866733551
    2. '=' → logprob: -0.806739866733551
    3. 'dp' → logprob: -3.3067398071289062
    4. ']' → logprob: -5.556739807128906
    5. '+' → logprob: -6.681739807128906
    6. '=
' → logprob: -6.681739807128906
    7. '#' → logprob: -7.181739807128906
    8. '=[' → logprob: -7.181739807128906
    9. 'def' → logprob: -7.681739807128906
    10. 'M' → logprob: -7.681739807128906

Token 1896: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.14426931738853455
    2. 'K' → logprob: -2.0192692279815674
    3. ' (' → logprob: -6.6442694664001465
    4. '(' → logprob: -8.894268989562988
    5. ' K' → logprob: -10.019268989562988
    6. '300' → logprob: -10.519268989562988
    7. '
' → logprob: -11.269268989562988
    8. '((' → logprob: -11.644268989562988
    9. '(k' → logprob: -11.894268989562988
    10. '(
' → logprob: -11.894268989562988

Token 1897: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -5.478889215737581e-05
    2. ' K' → logprob: -10.125054359436035
    3. '(K' → logprob: -11.375054359436035
    4. '   ' → logprob: -13.375054359436035
    5. '
' → logprob: -15.125054359436035
    6. '{' → logprob: -15.250054359436035
    7. ')' → logprob: -15.625054359436035
    8. ' ' → logprob: -15.750054359436035
    9. '  ' → logprob: -15.875054359436035
    10. '300' → logprob: -16.00005531311035

Token 1898: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04305993765592575
    2. ' +' → logprob: -3.168059825897217
    3. '[' → logprob: -10.668060302734375
    4. '+
' → logprob: -11.168060302734375
    5. ')' → logprob: -11.418060302734375
    6. ',' → logprob: -12.668060302734375
    7. '
' → logprob: -12.793060302734375
    8. '   ' → logprob: -13.918060302734375
    9. ' +
' → logprob: -13.918060302734375
    10. '```' → logprob: -14.293060302734375

Token 1899: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -17.5
    4. ')' → logprob: -17.875
    5. '=' → logprob: -19.25
    6. '0' → logprob: -20.125
    7. '+' → logprob: -21.0
    8. '
' → logprob: -21.125
    9. '  ' → logprob: -21.375
    10. '```' → logprob: -21.375

Token 1900: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027629638090729713
    2. ']' → logprob: -4.527629852294922
    3. '[' → logprob: -4.527629852294922
    4. ')
' → logprob: -5.652629852294922
    5. '[
' → logprob: -7.777629852294922
    6. '+' → logprob: -8.027629852294922
    7. '):' → logprob: -8.277629852294922
    8. ')]' → logprob: -8.652629852294922
    9. '```' → logprob: -8.777629852294922
    10. '*' → logprob: -9.027629852294922

Token 1901: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.47469550371170044
    2. ' =' → logprob: -1.8496954441070557
    3. ':' → logprob: -2.2246954441070557
    4. ']' → logprob: -3.7246954441070557
    5. ':
' → logprob: -3.8496954441070557
    6. '
' → logprob: -3.8496954441070557
    7. '=' → logprob: -4.224695682525635
    8. '[' → logprob: -5.099695682525635
    9. '```' → logprob: -5.724695682525635
    10. 'import' → logprob: -5.974695682525635

Token 1902: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05214556306600571
    2. '   ' → logprob: -3.177145481109619
    3. ' =' → logprob: -6.552145481109619
    4. ']' → logprob: -6.552145481109619
    5. '
' → logprob: -6.552145481109619
    6. ':' → logprob: -6.677145481109619
    7. ' dp' → logprob: -6.802145481109619
    8. ':
' → logprob: -7.552145481109619
    9. '):' → logprob: -7.802145481109619
    10. ')' → logprob: -8.177145957946777

Token 1903: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6671721339225769
    2. '[' → logprob: -1.2921721935272217
    3. '[
' → logprob: -2.7921721935272217
    4. '   ' → logprob: -2.7921721935272217
    5. 'def' → logprob: -3.9171721935272217
    6. 'import' → logprob: -4.167171955108643
    7. ':' → logprob: -4.417171955108643
    8. '
' → logprob: -4.667171955108643
    9. ']' → logprob: -4.917171955108643
    10. ' [' → logprob: -5.417171955108643

Token 1904: ' nombre' (ID: 9733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16075889766216278
    2. '[' → logprob: -2.4107589721679688
    3. 'dp' → logprob: -4.035758972167969
    4. '=' → logprob: -4.160758972167969
    5. 'max' → logprob: -5.035758972167969
    6. ']' → logprob: -5.660758972167969
    7. '[
' → logprob: -6.160758972167969
    8. ' =' → logprob: -6.160758972167969
    9. 'd' → logprob: -6.285758972167969
    10. ')' → logprob: -6.660758972167969

Token 1905: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8386366367340088
    2. '=' → logprob: -1.2136366367340088
    3. '[' → logprob: -2.338636636734009
    4. 'of' → logprob: -3.213636636734009
    5. ' =' → logprob: -3.213636636734009
    6. 'max' → logprob: -3.463636636734009
    7. '_max' → logprob: -4.46363639831543
    8. ' of' → logprob: -5.21363639831543
    9. 's' → logprob: -5.21363639831543
    10. 'd' → logprob: -5.46363639831543

Token 1906: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42356300354003906
    2. '[' → logprob: -1.673563003540039
    3. '=' → logprob: -2.923563003540039
    4. ' =' → logprob: -3.673563003540039
    5. ')' → logprob: -3.923563003540039
    6. ']' → logprob: -4.298563003540039
    7. 'of' → logprob: -4.798563003540039
    8. '[
' → logprob: -5.298563003540039
    9. ' of' → logprob: -5.423563003540039
    10. ',' → logprob: -5.798563003540039

Token 1907: ''arr' (ID: 49695)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07819527387619019
    2. '[' → logprob: -2.828195333480835
    3. ' _' → logprob: -4.578195095062256
    4. ')' → logprob: -6.328195095062256
    5. ']' → logprob: -6.953195095062256
    6. '[
' → logprob: -8.078195571899414
    7. ' ' → logprob: -8.203195571899414
    8. '[]' → logprob: -8.203195571899414
    9. '_tokens' → logprob: -8.703195571899414
    10. ' [' → logprob: -8.828195571899414

Token 1908: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.020170092582702637
    2. 'ays' → logprob: -4.145170211791992
    3. 'êt' → logprob: -7.145170211791992
    4. '[' → logprob: -7.395170211791992
    5. ']' → logprob: -7.520170211791992
    6. 'ê' → logprob: -7.770170211791992
    7. '[
' → logprob: -8.645170211791992
    8. '[i' → logprob: -8.770170211791992
    9. 'é' → logprob: -8.770170211791992
    10. 'ôts' → logprob: -8.770170211791992

Token 1909: ' sem' (ID: 2743)
  Prédit: '_sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sem' → logprob: -0.6190450191497803
    2. 'sem' → logprob: -1.6190450191497803
    3. ' sem' → logprob: -2.2440450191497803
    4. '_' → logprob: -2.7440450191497803
    5. '_se' → logprob: -3.9940450191497803
    6. 's' → logprob: -4.119045257568359
    7. ' =' → logprob: -4.119045257568359
    8. ')' → logprob: -4.619045257568359
    9. '_s' → logprob: -5.119045257568359
    10. '_max' → logprob: -5.744045257568359

Token 1910: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.03499845787882805
    2. 'express' → logprob: -4.409998416900635
    3. 'i' → logprob: -5.534998416900635
    4. 'iex' → logprob: -6.159998416900635
    5. ' expresses' → logprob: -6.409998416900635
    6. ' ' → logprob: -6.659998416900635
    7. 'ieux' → logprob: -6.659998416900635
    8. 'import' → logprob: -6.784998416900635
    9. 'ip' → logprob: -7.034998416900635
    10. 'e' → logprob: -7.409998416900635

Token 1911: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3675857186317444
    2. '=' → logprob: -1.4925856590270996
    3. 's' → logprob: -3.8675856590270996
    4. 'sem' → logprob: -3.9925856590270996
    5. '_' → logprob: -5.1175856590271
    6. '_sem' → logprob: -5.1175856590271
    7. '_used' → logprob: -5.2425856590271
    8. 'used' → logprob: -5.3675856590271
    9. ' sem' → logprob: -5.4925856590271
    10. 'util' → logprob: -6.2425856590271

Token 1912: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.04871874302625656
    2. ' K' → logprob: -3.0487186908721924
    3. '1' → logprob: -10.173718452453613
    4. ' ' → logprob: -10.548718452453613
    5. ')' → logprob: -11.298718452453613
    6. '+' → logprob: -11.298718452453613
    7. '`' → logprob: -11.673718452453613
    8. ''' → logprob: -11.923718452453613
    9. ' =' → logprob: -12.548718452453613
    10. '0' → logprob: -12.923718452453613

Token 1913: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3146111965179443
    2. ']' → logprob: -1.6896111965179443
    3. '[' → logprob: -1.6896111965179443
    4. ' =' → logprob: -2.0646111965179443
    5. 'def' → logprob: -2.8146111965179443
    6. '   ' → logprob: -3.4396111965179443
    7. ',' → logprob: -3.5646111965179443
    8. '=' → logprob: -3.6896111965179443
    9. '[i' → logprob: -3.9396111965179443
    10. ')' → logprob: -4.314611434936523

Token 1914: ' déjà' (ID: 21229)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4349215030670166
    2. 'dp' → logprob: -1.4349215030670166
    3. '
' → logprob: -1.9349215030670166
    4. '#' → logprob: -2.5599215030670166
    5. '\n' → logprob: -3.0599215030670166
    6. '   ' → logprob: -3.3099215030670166
    7. ' =' → logprob: -3.6849215030670166
    8. 'max' → logprob: -3.8099215030670166
    9. 'import' → logprob: -4.0599212646484375
    10. ',' → logprob: -4.0599212646484375

Token 1915: ' M' (ID: 391)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18957248330116272
    2. '=' → logprob: -1.8145724534988403
    3. '+=' → logprob: -5.314572334289551
    4. ' =' → logprob: -5.814572334289551
    5. ' +' → logprob: -7.564572334289551
    6. 'plus' → logprob: -7.939572334289551
    7. 'initialized' → logprob: -8.06457233428955
    8. ' +=' → logprob: -9.18957233428955
    9. 'chosen' → logprob: -9.68957233428955
    10. '-' → logprob: -9.93957233428955

Token 1916: ' fixes' (ID: 60095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46395692229270935
    2. ']' → logprob: -2.338956832885742
    3. '=' → logprob: -2.588956832885742
    4. 'def' → logprob: -2.963956832885742
    5. '
' → logprob: -3.213956832885742
    6. '+' → logprob: -3.338956832885742
    7. 'import' → logprob: -4.838956832885742
    8. '_' → logprob: -4.838956832885742
    9. '][' → logprob: -4.838956832885742
    10. ')' → logprob: -4.963956832885742

Token 1917: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4438209533691406
    2. 'dp' → logprob: -1.3188209533691406
    3. '
' → logprob: -3.4438209533691406
    4. '=' → logprob: -3.5688209533691406
    5. ']' → logprob: -4.943820953369141
    6. '=
' → logprob: -5.943820953369141
    7. 'def' → logprob: -6.068820953369141
    8. ',
' → logprob: -6.193820953369141
    9. 'import' → logprob: -6.193820953369141
    10. ',' → logprob: -6.318820953369141

Token 1918: ' donc' (ID: 14206)
  Prédit: 'don'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'don' → logprob: -0.7785910367965698
    2. ' donc' → logprob: -1.2785910367965698
    3. '#' → logprob: -1.6535910367965698
    4. ' #' → logprob: -3.5285911560058594
    5. 'plus' → logprob: -5.028591156005859
    6. 'so' → logprob: -5.278591156005859
    7. ' il' → logprob: -5.278591156005859
    8. ' ' → logprob: -6.028591156005859
    9. ' so' → logprob: -6.028591156005859
    10. 'mais' → logprob: -6.528591156005859

Token 1919: ' (' (ID: 350)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3628845512866974
    2. ' K' → logprob: -1.737884521484375
    3. ' (' → logprob: -2.362884521484375
    4. '(K' → logprob: -4.237884521484375
    5. '+' → logprob: -5.862884521484375
    6. '0' → logprob: -6.487884521484375
    7. ' +' → logprob: -6.862884521484375
    8. '
' → logprob: -7.112884521484375
    9. 'additional' → logprob: -7.112884521484375
    10. ' ' → logprob: -7.237884521484375

Token 1920: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0485692024230957
    2. ' K' → logprob: -3.1735692024230957
    3. '1' → logprob: -6.298569202423096
    4. ')' → logprob: -6.298569202423096
    5. ' (' → logprob: -7.798569202423096
    6. ' -' → logprob: -8.298568725585938
    7. ' ' → logprob: -8.423568725585938
    8. '
' → logprob: -8.798568725585938
    9. ' ' → logprob: -8.923568725585938
    10. 'M' → logprob: -9.298568725585938

Token 1921: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012272522784769535
    2. '-' → logprob: -5.262272357940674
    3. '-M' → logprob: -5.762272357940674
    4. '+' → logprob: -5.887272357940674
    5. ' +' → logprob: -7.262272357940674
    6. ')' → logprob: -8.512272834777832
    7. '
' → logprob: -9.512272834777832
    8. '   ' → logprob: -10.262272834777832
    9. '-K' → logprob: -10.512272834777832
    10. ' ' → logprob: -10.762272834777832

Token 1922: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01105442550033331
    2. ' M' → logprob: -4.511054515838623
    3. '   ' → logprob: -12.136054039001465
    4. ' ' → logprob: -14.636054039001465
    5. '	M' → logprob: -15.136054039001465
    6. ')' → logprob: -15.511054039001465
    7. 'import' → logprob: -17.13605499267578
    8. '    ' → logprob: -17.26105499267578
    9. '  ' → logprob: -17.38605499267578
    10. '>M' → logprob: -17.38605499267578

Token 1923: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010053188540041447
    2. ')+' → logprob: -5.1350531578063965
    3. '+' → logprob: -5.8850531578063965
    4. ' +' → logprob: -7.0100531578063965
    5. ' )' → logprob: -8.010053634643555
    6. '))' → logprob: -10.885053634643555
    7. ')`' → logprob: -11.385053634643555
    8. ')
' → logprob: -11.635053634643555
    9. '+)' → logprob: -11.760053634643555
    10. ')>' → logprob: -11.885053634643555

Token 1924: ' supplémentaires' (ID: 99346)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29944589734077454
    2. ' +' → logprob: -1.4244458675384521
    3. ' -' → logprob: -4.799446105957031
    4. ')' → logprob: -5.924446105957031
    5. ' =' → logprob: -6.674446105957031
    6. '-' → logprob: -6.924446105957031
    7. ':' → logprob: -7.424446105957031
    8. ']' → logprob: -7.549446105957031
    9. 'plus' → logprob: -7.924446105957031
    10. '#' → logprob: -8.174446105957031

Token 1925: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11612232029438019
    2. '=' → logprob: -2.366122245788574
    3. ':' → logprob: -4.866122245788574
    4. ']' → logprob: -6.241122245788574
    5. '):' → logprob: -7.241122245788574
    6. '
' → logprob: -7.241122245788574
    7. ')' → logprob: -7.366122245788574
    8. ',' → logprob: -7.491122245788574
    9. '   ' → logprob: -7.491122245788574
    10. 'dp' → logprob: -7.866122245788574

Token 1926: ' répart' (ID: 147636)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.6334096789360046
    2. 'aj' → logprob: -1.2584097385406494
    3. 'placer' → logprob: -2.2584097385406494
    4. 'ré' → logprob: -3.2584097385406494
    5. 'assign' → logprob: -3.8834097385406494
    6. 'all' → logprob: -4.50840950012207
    7. 'cho' → logprob: -5.50840950012207
    8. ' répart' → logprob: -6.25840950012207
    9. 're' → logprob: -6.50840950012207
    10. 'part' → logprob: -7.13340950012207

Token 1927: 'ir' (ID: 380)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8225576877593994
    2. 'uire' → logprob: -1.5725576877593994
    3. '   ' → logprob: -2.3225576877593994
    4. '=' → logprob: -3.3225576877593994
    5. 'ir' → logprob: -3.4475576877593994
    6. 'sur' → logprob: -3.4475576877593994
    7. 'is' → logprob: -3.5725576877593994
    8. 'uer' → logprob: -4.07255744934082
    9. 'aisser' → logprob: -4.32255744934082
    10. 'endre' → logprob: -4.32255744934082

Token 1928: '

' (ID: 279)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4900415539741516
    2. '=' → logprob: -1.2400414943695068
    3. ':' → logprob: -3.865041494369507
    4. '.' → logprob: -4.115041732788086
    5. ']' → logprob: -4.240041732788086
    6. '
' → logprob: -4.990041732788086
    7. ',' → logprob: -4.990041732788086
    8. ')' → logprob: -5.240041732788086
    9. 'between' → logprob: -5.365041732788086
    10. '=
' → logprob: -5.615041732788086

Token 1929: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.44982290267944336
    2. '   ' → logprob: -1.6998229026794434
    3. '
' → logprob: -1.9498229026794434
    4. ' =' → logprob: -4.574822902679443
    5. ':
' → logprob: -4.949822902679443
    6. ' dp' → logprob: -5.449822902679443
    7. ':' → logprob: -6.074822902679443
    8. '```' → logprob: -6.074822902679443
    9. '    
' → logprob: -6.324822902679443
    10. ']' → logprob: -6.699822902679443

Token 1930: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01757838763296604
    2. ' dp' → logprob: -4.767578601837158
    3. '   ' → logprob: -4.892578601837158
    4. '
' → logprob: -6.642578601837158
    5. '	dp' → logprob: -10.642578125
    6. 'max' → logprob: -10.892578125
    7. '    
' → logprob: -11.017578125
    8. ' ' → logprob: -11.517578125
    9. '#' (adapté à ' #') → logprob: -11.517578125
    10. '_dp' → logprob: -11.642578125

Token 1931: ' Pr' (ID: 2284)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03335116058588028
    2. 'M' → logprob: -4.533350944519043
    3. '   ' → logprob: -4.533350944519043
    4. ']' → logprob: -6.033350944519043
    5. ':' → logprob: -6.408350944519043
    6. ' =' → logprob: -6.658350944519043
    7. 'max' → logprob: -7.283350944519043
    8. 'interval' → logprob: -7.408350944519043
    9. '#' → logprob: -7.533350944519043
    10. '=' → logprob: -7.658350944519043

Token 1932: 'éal' (ID: 29295)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.7500022053718567
    2. 'e' → logprob: -1.500002145767212
    3. 'int' → logprob: -1.500002145767212
    4. 'def' → logprob: -3.750002145767212
    5. 'é' → logprob: -4.000002384185791
    6. '#' → logprob: -4.250002384185791
    7. 'o' → logprob: -5.000002384185791
    8. 'oc' → logprob: -5.875002384185791
    9. 'ec' → logprob: -6.125002384185791
    10. 'esent' → logprob: -6.250002384185791

Token 1933: 'able' (ID: 562)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.259313702583313
    2. 'min' → logprob: -2.0093135833740234
    3. '   ' → logprob: -3.5093135833740234
    4. 'def' → logprob: -4.759313583374023
    5. 'n' → logprob: -5.259313583374023
    6. 'par' → logprob: -5.384313583374023
    7. 'm' → logprob: -5.509313583374023
    8. 'im' → logprob: -5.509313583374023
    9. 'l' → logprob: -5.759313583374023
    10. 'iné' → logprob: -6.134313583374023

Token 1934: ':' (ID: 25)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8762339949607849
    2. 'interval' → logprob: -1.1262340545654297
    3. 'max' → logprob: -2.7512340545654297
    4. 'express' → logprob: -3.1262340545654297
    5. 'dp' → logprob: -3.2512340545654297
    6. 'x' → logprob: -4.00123405456543
    7. '#' → logprob: -4.00123405456543
    8. 'dist' → logprob: -4.25123405456543
    9. 'segment' → logprob: -4.25123405456543
    10. 'segments' → logprob: -4.62623405456543

Token 1935: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7663031220436096
    2. 'max' → logprob: -1.5163030624389648
    3. 'd' → logprob: -2.641303062438965
    4. 'interval' → logprob: -2.766303062438965
    5. 'dist' → logprob: -3.141303062438965
    6. 'express' → logprob: -3.641303062438965
    7. 'segment' → logprob: -3.641303062438965
    8. 'segments' → logprob: -3.891303062438965
    9. 'x' → logprob: -4.016303062438965
    10. '#' → logprob: -4.766303062438965

Token 1936: ' sait' (ID: 52101)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7110729813575745
    2. 'range' → logprob: -2.4610729217529297
    3. '=' → logprob: -2.5860729217529297
    4. 'len' → logprob: -2.5860729217529297
    5. '#' → logprob: -2.7110729217529297
    6. ' =' → logprob: -3.2110729217529297
    7. 'do' → logprob: -3.7110729217529297
    8. 's' → logprob: -3.8360729217529297
    9. 'for' → logprob: -3.8360729217529297
    10. 'initialize' → logprob: -3.9610729217529297

Token 1937: ' que' (ID: 661)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.3573652505874634
    2. 'M' → logprob: -1.4823652505874634
    3. 'que' → logprob: -1.6073652505874634
    4. '#' → logprob: -2.607365131378174
    5. 'K' → logprob: -3.232365131378174
    6. 'that' → logprob: -3.357365131378174
    7. 'max' → logprob: -3.732365131378174
    8. ' que' → logprob: -3.857365131378174
    9. '   ' → logprob: -4.107365131378174
    10. 'S' → logprob: -4.357365131378174

Token 1938: ' les' (ID: 1341)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2416883111000061
    2. 'K' → logprob: -2.8666882514953613
    3. 'S' → logprob: -2.8666882514953613
    4. 'len' → logprob: -2.9916882514953613
    5. 'dp' → logprob: -3.7416882514953613
    6. ' M' → logprob: -4.116688251495361
    7. ' len' → logprob: -6.366688251495361
    8. ' K' → logprob: -6.491688251495361
    9. 'not' → logprob: -6.866688251495361
    10. 'p' → logprob: -6.991688251495361

Token 1939: ' arr' (ID: 1724)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3456145226955414
    2. ' stops' → logprob: -2.720614433288574
    3. 'arr' → logprob: -3.470614433288574
    4. 'S' → logprob: -3.470614433288574
    5. 'stations' → logprob: -3.720614433288574
    6. '#' → logprob: -4.095614433288574
    7. 'K' → logprob: -4.220614433288574
    8. '_' → logprob: -4.345614433288574
    9. ' dp' → logprob: -4.470614433288574
    10. 'interval' → logprob: -4.595614433288574

Token 1940: 'êts' (ID: 56582)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5589943528175354
    2. 'r' → logprob: -2.4339942932128906
    3. '[' → logprob: -2.6839942932128906
    4. 'g' → logprob: -2.9339942932128906
    5. ']' → logprob: -3.4339942932128906
    6. 'sts' → logprob: -3.5589942932128906
    7. 'x' → logprob: -4.058994293212891
    8. 's' → logprob: -4.308994293212891
    9. '```' → logprob: -4.558994293212891
    10. '[
' → logprob: -4.808994293212891

Token 1941: ' express' (ID: 6101)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.132510781288147
    2. '_sem' → logprob: -1.132510781288147
    3. ' sem' → logprob: -1.507510781288147
    4. 'sem' → logprob: -3.6325106620788574
    5. '_s' → logprob: -3.7575106620788574
    6. '_sup' → logprob: -4.007510662078857
    7. ' supplémentaires' → logprob: -4.007510662078857
    8. ')' → logprob: -4.882510662078857
    9. 's' → logprob: -5.132510662078857
    10. '_selected' → logprob: -5.382510662078857

Token 1942: ' sont' (ID: 5242)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42682868242263794
    2. 's' → logprob: -2.301828622817993
    3. '[i' → logprob: -2.551828622817993
    4. ' =' → logprob: -3.051828622817993
    5. '[' → logprob: -3.301828622817993
    6. ']' → logprob: -4.176828861236572
    7. '_stop' → logprob: -4.176828861236572
    8. ')' → logprob: -5.301828861236572
    9. '```' → logprob: -5.301828861236572
    10. '_arr' → logprob: -5.551828861236572

Token 1943: ' aussi' (ID: 9894)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.554842472076416
    2. '[' → logprob: -1.929842472076416
    3. 'sorted' → logprob: -2.554842472076416
    4. 'tri' → logprob: -3.054842472076416
    5. 'fix' → logprob: -4.054842472076416
    6. ' tri' → logprob: -4.429842472076416
    7. ' S' → logprob: -4.554842472076416
    8. 'une' → logprob: -4.679842472076416
    9. 'tr' → logprob: -4.804842472076416
    10. 'dans' → logprob: -4.804842472076416

Token 1944: ' des' (ID: 731)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.08083993196487427
    2. 'consider' → logprob: -3.5808398723602295
    3. 'a' → logprob: -4.080840110778809
    4. 'arr' → logprob: -4.955840110778809
    5. 's' → logprob: -4.955840110778809
    6. 'S' → logprob: -5.205840110778809
    7. 'des' → logprob: -5.455840110778809
    8. 'st' → logprob: -6.455840110778809
    9. '#' → logprob: -7.080840110778809
    10. 'stop' → logprob: -7.580840110778809

Token 1945: ' arr' (ID: 1724)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.33428865671157837
    2. ' stops' → logprob: -1.8342885971069336
    3. ' sem' → logprob: -2.2092885971069336
    4. 'arr' → logprob: -5.209288597106934
    5. 'st' → logprob: -5.334288597106934
    6. 's' → logprob: -6.834288597106934
    7. 'stop' → logprob: -7.334288597106934
    8. 'se' → logprob: -7.334288597106934
    9. 'semi' → logprob: -7.834288597106934
    10. ' arr' → logprob: -7.959288597106934

Token 1946: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.003896276233717799
    2. '^' → logprob: -6.003896236419678
    3. 'êt' → logprob: -7.003896236419678
    4. 'êtes' → logprob: -9.503896713256836
    5. '^\' → logprob: -9.628896713256836
    6. '\x' → logprob: -10.003896713256836
    7. ' stops' → logprob: -10.003896713256836
    8. 'rets' → logprob: -10.003896713256836
    9. '^{' → logprob: -10.753896713256836
    10. '
' → logprob: -10.753896713256836

Token 1947: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32873013615608215
    2. '_sem' → logprob: -1.7037301063537598
    3. 's' → logprob: -3.8287301063537598
    4. ' =' → logprob: -3.8287301063537598
    5. '_s' → logprob: -4.57873010635376
    6. 'sem' → logprob: -5.32873010635376
    7. '_ex' → logprob: -5.32873010635376
    8. '_stop' → logprob: -5.57873010635376
    9. '_
' → logprob: -5.70373010635376
    10. ']' → logprob: -5.70373010635376

Token 1948: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.004037202801555395
    2. 'i' → logprob: -6.379037380218506
    3. 'I' → logprob: -7.879037380218506
    4. '_i' → logprob: -8.004036903381348
    5. 'ip' → logprob: -8.129036903381348
    6. 'iex' → logprob: -8.379036903381348
    7. 'express' → logprob: -8.504036903381348
    8. 'pexpr' → logprob: -9.254036903381348
    9. '```' → logprob: -9.504036903381348
    10. '`' → logprob: -9.504036903381348

Token 1949: ' oblig' (ID: 12894)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6980516910552979
    2. ':
' → logprob: -1.9480516910552979
    3. 'dp' → logprob: -2.573051691055298
    4. ' =' → logprob: -2.698051691055298
    5. '[' → logprob: -2.948051691055298
    6. '=' → logprob: -2.948051691055298
    7. ']' → logprob: -3.698051691055298
    8. 'def' → logprob: -4.073051452636719
    9. '[i' → logprob: -4.073051452636719
    10. '
' → logprob: -4.948051452636719

Token 1950: 'atoires' (ID: 84948)
  Prédit: 'ig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.8709147572517395
    2. 'atoires' → logprob: -0.8709147572517395
    3. 'g' → logprob: -2.1209146976470947
    4. 'v' → logprob: -4.370914936065674
    5. 'és' → logprob: -4.745914936065674
    6. 'atifs' → logprob: -5.245914936065674
    7. 'atories' → logprob: -5.745914936065674
    8. 'ged' → logprob: -6.245914936065674
    9. '__' → logprob: -6.370914936065674
    10. 'ataires' → logprob: -7.245914936065674

Token 1951: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3108587861061096
    2. ':' → logprob: -1.8108587265014648
    3. ':
' → logprob: -3.435858726501465
    4. '   ' → logprob: -3.685858726501465
    5. ' =' → logprob: -4.310858726501465
    6. 'def' → logprob: -4.685858726501465
    7. '=' → logprob: -5.435858726501465
    8. ']' → logprob: -5.685858726501465
    9. ']:' → logprob: -6.310858726501465
    10. '
' → logprob: -6.310858726501465

Token 1952: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5968648195266724
    2. '   ' → logprob: -0.9718648195266724
    3. '
' → logprob: -3.096864700317383
    4. ' dp' → logprob: -4.596864700317383
    5. '    
' → logprob: -5.596864700317383
    6. '```' → logprob: -5.596864700317383
    7. '  
' → logprob: -6.596864700317383
    8. 'def' → logprob: -6.971864700317383
    9. '\n' → logprob: -7.221864700317383
    10. '``' → logprob: -7.596864700317383

Token 1953: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46581894159317017
    2. 'dp' → logprob: -1.3408188819885254
    3. '
' → logprob: -3.0908188819885254
    4. ' dp' → logprob: -4.215818881988525
    5. '\n' → logprob: -4.465818881988525
    6. '    
' → logprob: -5.215818881988525
    7. ',' → logprob: -5.215818881988525
    8. '"' → logprob: -5.840818881988525
    9. '  
' → logprob: -5.840818881988525
    10. '#' (adapté à ' #') → logprob: -6.090818881988525

Token 1954: ' Cela' (ID: 44403)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.035397812724113464
    2. 'M' → logprob: -4.410398006439209
    3. '
' → logprob: -5.160398006439209
    4. ' dp' → logprob: -5.660398006439209
    5. '#' → logprob: -5.910398006439209
    6. '```' → logprob: -6.035398006439209
    7. '   ' → logprob: -6.910398006439209
    8. ':' → logprob: -7.285398006439209
    9. '``' → logprob: -7.410398006439209
    10. ')
' → logprob: -7.410398006439209

Token 1955: ' signifie' (ID: 81149)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.9186894297599792
    2. '_' → logprob: -1.793689489364624
    3. ' =' → logprob: -2.043689489364624
    4. ' est' → logprob: -2.543689489364624
    5. '=' → logprob: -2.918689489364624
    6. 'contin' → logprob: -3.168689489364624
    7. ':' → logprob: -3.543689489364624
    8. 'continue' → logprob: -4.043689250946045
    9. '#' → logprob: -4.043689250946045
    10. 's' → logprob: -4.293689250946045

Token 1956: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2613092362880707
    2. 'que' → logprob: -1.761309266090393
    3. 'qu' → logprob: -3.3863091468811035
    4. '   ' → logprob: -4.5113091468811035
    5. 'that' → logprob: -5.3863091468811035
    6. ' qu' → logprob: -5.8863091468811035
    7. ' ' → logprob: -6.1363091468811035
    8. ' ' → logprob: -6.3863091468811035
    9. ' that' → logprob: -7.2613091468811035
    10. '    ' → logprob: -8.136309623718262

Token 1957: ' les' (ID: 1341)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.292759656906128
    2. 'dp' → logprob: -1.792759656906128
    3. ' les' → logprob: -2.167759656906128
    4. ' chaque' → logprob: -2.167759656906128
    5. ' le' → logprob: -2.792759656906128
    6. ' la' → logprob: -3.167759656906128
    7. ' K' → logprob: -3.417759656906128
    8. 'les' → logprob: -3.542759656906128
    9. ' on' → logprob: -3.792759656906128
    10. ' for' → logprob: -4.042759895324707

Token 1958: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.364978551864624
    2. 'dp' → logprob: -2.114978551864624
    3. 'st' → logprob: -2.614978551864624
    4. 'sem' → logprob: -3.364978551864624
    5. ' stops' → logprob: -3.989978551864624
    6. 'x' → logprob: -4.239978790283203
    7. 'stations' → logprob: -4.614978790283203
    8. '#' → logprob: -5.114978790283203
    9. 'interval' → logprob: -5.364978790283203
    10. 's' → logprob: -5.489978790283203

Token 1959: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.009835309349000454
    2. 'rets' → logprob: -5.509835243225098
    3. 'êt' → logprob: -5.884835243225098
    4. 'r' → logprob: -6.259835243225098
    5. '^' → logprob: -8.134835243225098
    6. '[' → logprob: -9.134835243225098
    7. 'êtes' → logprob: -9.259835243225098
    8. '[
' → logprob: -9.384835243225098
    9. 'rests' → logprob: -9.759835243225098
    10. 'rés' → logprob: -9.884835243225098

Token 1960: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2815912961959839
    2. ' sem' → logprob: -1.2815912961959839
    3. '_sem' → logprob: -1.6565912961959839
    4. 'sem' → logprob: -1.7815912961959839
    5. '_se' → logprob: -3.2815914154052734
    6. '_s' → logprob: -3.7815914154052734
    7. ' _' → logprob: -4.781591415405273
    8. 's' → logprob: -5.156591415405273
    9. 'se' → logprob: -6.156591415405273
    10. '_ex' → logprob: -6.281591415405273

Token 1961: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.11265754699707031
    2. 'express' → logprob: -2.4876575469970703
    3. ' express' → logprob: -4.98765754699707
    4. ' expresses' → logprob: -5.23765754699707
    5. '_i' → logprob: -6.73765754699707
    6. 'pexpr' → logprob: -6.86265754699707
    7. 'i' → logprob: -6.98765754699707
    8. '```' → logprob: -7.11265754699707
    9. '(express' → logprob: -7.23765754699707
    10. '_op' → logprob: -7.73765754699707

Token 1962: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09244468808174133
    2. 'cho' → logprob: -3.842444658279419
    3. ' sont' → logprob: -3.967444658279419
    4. '_' → logprob: -4.967444896697998
    5. 'sup' → logprob: -5.092444896697998
    6. 'ont' → logprob: -5.467444896697998
    7. 'chosen' → logprob: -5.592444896697998
    8. 'rest' → logprob: -5.717444896697998
    9. '_s' → logprob: -5.717444896697998
    10. ' cho' → logprob: -6.342444896697998

Token 1963: ' chaque' (ID: 21194)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8622689247131348
    2. 'les' → logprob: -1.9872689247131348
    3. ' chaque' → logprob: -2.1122689247131348
    4. 'interval' → logprob: -2.7372689247131348
    5. 'each' → logprob: -2.8622689247131348
    6. 'le' → logprob: -2.9872689247131348
    7. 'la' → logprob: -3.2372689247131348
    8. ' l' → logprob: -3.4872689247131348
    9. 'S' → logprob: -3.7372689247131348
    10. ' S' → logprob: -4.112268924713135

Token 1964: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.006648703012615442
    2. ']' → logprob: -5.756648540496826
    3. 'segment' → logprob: -6.756648540496826
    4. 'i' → logprob: -7.131648540496826
    5. 'S' → logprob: -8.006649017333984
    6. ' interval' → logprob: -8.131649017333984
    7. '[i' → logprob: -8.381649017333984
    8. 'inter' → logprob: -9.131649017333984
    9. '_interval' → logprob: -9.256649017333984
    10. '
' → logprob: -9.506649017333984

Token 1965: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3319370150566101
    2. 'al' → logprob: -1.4569370746612549
    3. 'v' → logprob: -4.081936836242676
    4. ']' → logprob: -4.706936836242676
    5. 'ale' → logprob: -5.706936836242676
    6. 'vale' → logprob: -6.081936836242676
    7. '[
' → logprob: -6.081936836242676
    8. '[' → logprob: -6.331936836242676
    9. 'aire' → logprob: -6.456936836242676
    10. '_' → logprob: -6.831936836242676

Token 1966: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36174842715263367
    2. '[i' → logprob: -1.611748456954956
    3. 'i' → logprob: -4.111748218536377
    4. '_i' → logprob: -4.111748218536377
    5. ' sont' → logprob: -4.486748218536377
    6. '```' → logprob: -4.611748218536377
    7. ' =' → logprob: -4.736748218536377
    8. '#' → logprob: -4.861748218536377
    9. '_' → logprob: -5.236748218536377
    10. '`' → logprob: -5.736748218536377

Token 1967: ' >=' (ID: 5064)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8256159424781799
    2. '_' → logprob: -1.8256158828735352
    3. '[i' → logprob: -2.325615882873535
    4. '_i' → logprob: -2.450615882873535
    5. '_s' → logprob: -2.950615882873535
    6. ' =' → logprob: -3.450615882873535
    7. ' sont' → logprob: -3.950615882873535
    8. '#' → logprob: -3.950615882873535
    9. '=' → logprob: -4.075615882873535
    10. '`' → logprob: -4.325615882873535

Token 1968: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00814560055732727
    2. ' ' → logprob: -4.883145809173584
    3. '   ' → logprob: -7.883145809173584
    4. '```' → logprob: -9.508145332336426
    5. '2' → logprob: -10.133145332336426
    6. '  ' → logprob: -11.883145332336426
    7. '`' → logprob: -11.945645332336426
    8. '
' → logprob: -12.633145332336426
    9. '    ' → logprob: -12.633145332336426
    10. ' ' → logprob: -12.695645332336426

Token 1969: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7014437364414334e-05
    2. '   ' → logprob: -11.25002670288086
    3. ' ' → logprob: -12.00002670288086
    4. '2' → logprob: -12.75002670288086
    5. '```' → logprob: -12.75002670288086
    6. '
' → logprob: -13.62502670288086
    7. '  ' → logprob: -15.56252670288086
    8. '`' → logprob: -16.25002670288086
    9. '#' → logprob: -16.62502670288086
    10. '    ' → logprob: -17.18752670288086

Token 1970: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.759361743927002
    2. '[i' → logprob: -1.759361743927002
    3. ']' → logprob: -2.384361743927002
    4. '[' → logprob: -2.509361743927002
    5. '   ' → logprob: -2.634361743927002
    6. '=' → logprob: -3.259361743927002
    7. 'def' → logprob: -3.884361743927002
    8. ':
' → logprob: -4.634361743927002
    9. ']:' → logprob: -4.634361743927002
    10. '_' → logprob: -5.134361743927002

Token 1971: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05061398819088936
    2. ' )' → logprob: -4.050613880157471
    3. '):' → logprob: -4.800613880157471
    4. ']' → logprob: -5.675613880157471
    5. '+' → logprob: -5.675613880157471
    6. ')
' → logprob: -5.925613880157471
    7. ').' → logprob: -6.425613880157471
    8. '),' → logprob: -6.425613880157471
    9. ',' → logprob: -6.800613880157471
    10. '])' → logprob: -6.925613880157471

Token 1972: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.44954657554626465
    2. ' S' → logprob: -1.9495465755462646
    3. 'les' → logprob: -2.6995465755462646
    4. 'express' → logprob: -3.5745465755462646
    5. 'ces' → logprob: -4.449546813964844
    6. 'the' → logprob: -4.449546813964844
    7. '#' → logprob: -4.699546813964844
    8. 'c' → logprob: -4.949546813964844
    9. 'they' → logprob: -4.949546813964844
    10. ' les' → logprob: -5.074546813964844

Token 1973: '2' (ID: 17)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7142276167869568
    2. ' S' → logprob: -1.5892276763916016
    3. ')' → logprob: -2.8392276763916016
    4. 'i' → logprob: -2.9642276763916016
    5. 'x' → logprob: -3.2142276763916016
    6. ' i' → logprob: -3.8392276763916016
    7. '1' → logprob: -3.9642276763916016
    8. ' ' → logprob: -4.589227676391602
    9. ' )' → logprob: -4.714227676391602
    10. ' x' → logprob: -4.839227676391602

Token 1974: ' arr' (ID: 1724)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3763975501060486
    2. ' )' → logprob: -2.2513976097106934
    3. ',' → logprob: -3.0013976097106934
    4. ' stops' → logprob: -3.2513976097106934
    5. ' ,' → logprob: -3.7513976097106934
    6. ' ]' → logprob: -3.8763976097106934
    7. ']' → logprob: -4.001397609710693
    8. '<|end|>' → logprob: -4.626397609710693
    9. ')]' → logprob: -4.876397609710693
    10. ' +' → logprob: -5.001397609710693

Token 1975: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.1264529824256897
    2. ' stops' → logprob: -2.626452922821045
    3. '_' → logprob: -4.501452922821045
    4. '_stop' → logprob: -4.876452922821045
    5. 'êt' → logprob: -5.126452922821045
    6. ')' → logprob: -5.376452922821045
    7. 'rests' → logprob: -6.251452922821045
    8. 's' → logprob: -6.376452922821045
    9. 'rets' → logprob: -6.501452922821045
    10. 'êtes' → logprob: -6.626452922821045

Token 1976: ' fixes' (ID: 60095)
  Prédit: ' sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sem' → logprob: -1.238053798675537
    2. '_sem' → logprob: -1.488053798675537
    3. '_' → logprob: -1.738053798675537
    4. 's' → logprob: -2.363053798675537
    5. 'sem' → logprob: -2.613053798675537
    6. ')' → logprob: -2.738053798675537
    7. '_s' → logprob: -4.113053798675537
    8. ' =' → logprob: -5.113053798675537
    9. '_se' → logprob: -5.238053798675537
    10. ']' → logprob: -5.738053798675537

Token 1977: ' aux' (ID: 5850)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.049910068511963
    2. ' sem' → logprob: -1.924910068511963
    3. '_' → logprob: -2.049910068511963
    4. 'sem' → logprob: -2.549910068511963
    5. ' express' → logprob: -2.674910068511963
    6. 'express' → logprob: -3.174910068511963
    7. ' par' → logprob: -3.674910068511963
    8. '[i' → logprob: -3.674910068511963
    9. ' _' → logprob: -4.174910068511963
    10. ' dans' → logprob: -4.424910068511963

Token 1978: ' extr' (ID: 15674)
  Prédit: 'extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extr' → logprob: -0.22219392657279968
    2. ' extr' → logprob: -2.097193956375122
    3. ' ' → logprob: -3.472193956375122
    4. 'ext' → logprob: -3.722193956375122
    5. 'b' → logprob: -5.597193717956543
    6. ' S' → logprob: -5.972193717956543
    7. '   ' → logprob: -6.222193717956543
    8. 's' → logprob: -6.847193717956543
    9. '```' → logprob: -6.847193717956543
    10. 'born' → logprob: -6.972193717956543

Token 1979: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2187414914369583
    2. 'êmes' → logprob: -2.2187414169311523
    3. 'êts' → logprob: -3.2187414169311523
    4. 'ê' → logprob: -4.093741416931152
    5. '_' → logprob: -4.468741416931152
    6. 'r' → logprob: -5.343741416931152
    7. 'ême' → logprob: -5.843741416931152
    8. 'è' → logprob: -6.468741416931152
    9. '[' → logprob: -7.093741416931152
    10. 'ém' → logprob: -7.218741416931152

Token 1980: 'mit' (ID: 2765)
  Prédit: 'mits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mits' → logprob: -0.9456856846809387
    2. 'm' → logprob: -1.820685625076294
    3. 'ts' → logprob: -2.445685625076294
    4. 'é' → logprob: -2.695685625076294
    5. 'mé' → logprob: -3.195685625076294
    6. 'êts' → logprob: -3.320685625076294
    7. '```' → logprob: -3.695685625076294
    8. 'ms' → logprob: -3.820685625076294
    9. 'mit' → logprob: -3.945685625076294
    10. 'S' → logprob: -4.070685863494873

Token 1981: 'és' (ID: 1756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6118786931037903
    2. 'és' → logprob: -0.8618786931037903
    3. 'es' → logprob: -3.9868786334991455
    4. 'é' → logprob: -5.361878871917725
    5. 'S' → logprob: -5.611878871917725
    6. 'i' → logprob: -6.611878871917725
    7. 'ies' → logprob: -6.986878871917725
    8. 'm' → logprob: -7.174378871917725
    9. 'mes' → logprob: -7.236878871917725
    10. 'ié' → logprob: -7.736878871917725

Token 1982: '),
' (ID: 2313)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9979357123374939
    2. ')' → logprob: -1.3729357719421387
    3. ']' → logprob: -2.3729357719421387
    4. '[' → logprob: -2.8729357719421387
    5. '])' → logprob: -3.4979357719421387
    6. '+' → logprob: -3.6229357719421387
    7. '_' → logprob: -3.8729357719421387
    8. ':' → logprob: -3.9979357719421387
    9. '):' → logprob: -4.372935771942139
    10. ',' → logprob: -4.622935771942139

Token 1983: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08496617525815964
    2. '#' → logprob: -3.9599661827087402
    3. ')' → logprob: -3.9599661827087402
    4. ':' → logprob: -4.58496618270874
    5. '):' → logprob: -5.20996618270874
    6. ''' → logprob: -5.45996618270874
    7. ',' → logprob: -5.83496618270874
    8. ' ' → logprob: -6.08496618270874
    9. '    ' → logprob: -6.33496618270874
    10. '       ' → logprob: -6.45996618270874

Token 1984: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8125457167625427
    2. '#' (adapté à ' #') → logprob: -1.0625457763671875
    3. ')' → logprob: -2.6875457763671875
    4. ',' → logprob: -3.0625457763671875
    5. ' #' → logprob: -4.0625457763671875
    6. ' i' → logprob: -4.9375457763671875
    7. '=' → logprob: -5.0625457763671875
    8. ' ' → logprob: -5.1875457763671875
    9. '    
' → logprob: -5.3125457763671875
    10. ' =' → logprob: -5.4375457763671875

Token 1985: ' nombre' (ID: 9733)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.346123218536377
    2. '#' → logprob: -1.846123218536377
    3. '   ' → logprob: -2.096123218536377
    4. ' =' → logprob: -2.096123218536377
    5. ')' → logprob: -2.971123218536377
    6. ':' → logprob: -3.346123218536377
    7. '0' → logprob: -3.346123218536377
    8. ' #' → logprob: -3.346123218536377
    9. 'i' → logprob: -3.846123218536377
    10. ' i' → logprob: -4.096123218536377

Token 1986: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7812738418579102
    2. '_s' → logprob: -1.6562738418579102
    3. '_of' → logprob: -3.03127384185791
    4. 'de' → logprob: -3.15627384185791
    5. '_i' → logprob: -3.15627384185791
    6. 's' → logprob: -3.28127384185791
    7. ' de' → logprob: -3.53127384185791
    8. '_de' → logprob: -4.15627384185791
    9. '_sem' → logprob: -4.15627384185791
    10. 'of' → logprob: -4.28127384185791

Token 1987: ''arr' (ID: 49695)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1830170899629593
    2. 'ar' → logprob: -2.8080170154571533
    3. 'd' → logprob: -3.0580170154571533
    4. '_' → logprob: -4.308017253875732
    5. ''arr' → logprob: -4.808017253875732
    6. 's' → logprob: -4.933017253875732
    7. ''arrêt' → logprob: -5.308017253875732
    8. 'é' → logprob: -5.558017253875732
    9. '_arr' → logprob: -6.058017253875732
    10. '_i' → logprob: -6.058017253875732

Token 1988: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00036442498094402254
    2. '^' → logprob: -8.375364303588867
    3. 'êt' → logprob: -10.000364303588867
    4. 'ôts' → logprob: -10.250364303588867
    5. '\x' → logprob: -11.500364303588867
    6. 'ê' → logprob: -11.875364303588867
    7. 'rets' → logprob: -12.250364303588867
    8. 'êtes' → logprob: -12.375364303588867
    9. ' stops' → logprob: -12.375364303588867
    10. 'ts' → logprob: -12.750364303588867

Token 1989: ' dans' (ID: 2671)
  Prédit: '_sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sem' → logprob: -0.6113805174827576
    2. 'sem' → logprob: -1.3613805770874023
    3. ' sem' → logprob: -2.3613805770874023
    4. '_' → logprob: -3.4863805770874023
    5. '_se' → logprob: -3.4863805770874023
    6. ' =' → logprob: -3.8613805770874023
    7. '_s' → logprob: -5.236380577087402
    8. 'semp' → logprob: -5.361380577087402
    9. '   ' → logprob: -6.486380577087402
    10. 'se' → logprob: -6.611380577087402

Token 1990: ' interval' (ID: 17116)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10442309081554413
    2. 'interval' → logprob: -2.4794230461120605
    3. ' l' → logprob: -4.6044230461120605
    4. 'cha' → logprob: -6.7294230461120605
    5. ' chaque' → logprob: -6.8544230461120605
    6. ' interval' → logprob: -7.3544230461120605
    7. 'i' → logprob: -7.4794230461120605
    8. 'each' → logprob: -8.229423522949219
    9. 'la' → logprob: -8.354423522949219
    10. 'inter' → logprob: -8.729423522949219

Token 1991: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.03782985359430313
    2. 'e' → logprob: -3.912829875946045
    3. ']' → logprob: -5.037829875946045
    4. 'val' → logprob: -5.537829875946045
    5. '[
' → logprob: -6.787829875946045
    6. 'v' → logprob: -7.287829875946045
    7. '[' → logprob: -7.287829875946045
    8. 'ale' → logprob: -7.537829875946045
    9. '[i' → logprob: -7.912829875946045
    10. '       ' → logprob: -7.912829875946045

Token 1992: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0672591924667358
    2. 's' → logprob: -1.3172591924667358
    3. '=' → logprob: -1.9422591924667358
    4. '[i' → logprob: -2.4422593116760254
    5. '_i' → logprob: -2.9422593116760254
    6. 'i' → logprob: -3.4422593116760254
    7. '_' → logprob: -3.6922593116760254
    8. '[' → logprob: -4.567259311676025
    9. ' i' → logprob: -5.067259311676025
    10. '
' → logprob: -5.317259311676025

Token 1993: ' ≥' (ID: 99731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20806708931922913
    2. '=' → logprob: -2.8330671787261963
    3. 's' → logprob: -3.0830671787261963
    4. '[i' → logprob: -3.8330671787261963
    5. '_i' → logprob: -4.208066940307617
    6. ']' → logprob: -4.583066940307617
    7. '[' → logprob: -5.083066940307617
    8. 'def' → logprob: -5.083066940307617
    9. ')' → logprob: -5.833066940307617
    10. '_' → logprob: -6.208066940307617

Token 1994: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1802530288696289
    2. '1' → logprob: -1.805253028869629
    3. ' ' → logprob: -8.055253028869629
    4. '   ' → logprob: -9.180253028869629
    5. '```' → logprob: -10.055253028869629
    6. ')' → logprob: -11.555253028869629
    7. '
' → logprob: -11.742753028869629
    8. 'import' → logprob: -12.242753028869629
    9. '  ' → logprob: -12.367753028869629
    10. 'def' → logprob: -12.742753028869629

Token 1995: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3138001263141632
    2. '1' → logprob: -1.3138000965118408
    3. ' ' → logprob: -7.56380033493042
    4. '   ' → logprob: -11.563799858093262
    5. '```' → logprob: -12.188799858093262
    6. '  ' → logprob: -13.938799858093262
    7. '
' → logprob: -14.251299858093262
    8. '3' → logprob: -14.563799858093262
    9. ')' → logprob: -14.813799858093262
    10. '`' → logprob: -15.063799858093262

Token 1996: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5856253504753113
    2. '[' → logprob: -1.335625410079956
    3. '[i' → logprob: -2.460625410079956
    4. '   ' → logprob: -3.960625410079956
    5. '[
' → logprob: -4.585625171661377
    6. '```' → logprob: -4.585625171661377
    7. ')' → logprob: -4.835625171661377
    8. ':
' → logprob: -4.960625171661377
    9. ']' → logprob: -5.210625171661377
    10. ' ' → logprob: -5.335625171661377

Token 1997: 'min' (ID: 1493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2547811269760132
    2. '+' → logprob: -2.2547812461853027
    3. ' +' → logprob: -3.7547812461853027
    4. ')
' → logprob: -4.254781246185303
    5. ' )' → logprob: -4.504781246185303
    6. ',' → logprob: -4.629781246185303
    7. '2' → logprob: -4.879781246185303
    8. 'i' → logprob: -5.004781246185303
    9. '1' → logprob: -5.254781246185303
    10. '):
' → logprob: -5.629781246185303

Token 1998: 'im' (ID: 321)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3700374960899353
    2. ']' → logprob: -2.74503755569458
    3. '[i' → logprob: -3.24503755569458
    4. 'mum' → logprob: -4.12003755569458
    5. 'imum' → logprob: -4.24503755569458
    6. '[' → logprob: -4.49503755569458
    7. '):
' → logprob: -4.49503755569458
    8. 'um' → logprob: -4.74503755569458
    9. '_' → logprob: -4.74503755569458
    10. '=' → logprob: -4.87003755569458

Token 1999: 'ale' (ID: 1167)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46601784229278564
    2. 'um' → logprob: -1.7160178422927856
    3. '+' → logprob: -1.9660178422927856
    4. 'mum' → logprob: -5.216017723083496
    5. 'imum' → logprob: -5.341017723083496
    6. ']' → logprob: -5.341017723083496
    7. ')
' → logprob: -5.841017723083496
    8. '**' → logprob: -5.966017723083496
    9. 'im' → logprob: -5.966017723083496
    10. '=' → logprob: -6.091017723083496

Token 2000: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40110233426094055
    2. ' stops' → logprob: -2.901102304458618
    3. '[' → logprob: -3.651102304458618
    4. ']' → logprob: -3.651102304458618
    5. '
' → logprob: -3.651102304458618
    6. '[i' → logprob: -3.776102304458618
    7. ',' → logprob: -3.901102304458618
    8. '):' → logprob: -4.526102542877197
    9. ' =' → logprob: -4.651102542877197
    10. ' par' → logprob: -4.776102542877197

Token 2001: ' puisque' (ID: 66135)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6135077476501465
    2. '1' → logprob: -1.7385077476501465
    3. '
' → logprob: -1.7385077476501465
    4. ',' → logprob: -2.6135077476501465
    5. '   ' → logprob: -3.1135077476501465
    6. '=' → logprob: -3.2385077476501465
    7. ')' → logprob: -3.3635077476501465
    8. ' =' → logprob: -3.3635077476501465
    9. '0' → logprob: -3.7385077476501465
    10. ' et' → logprob: -4.1135077476501465

Token 2002: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8366098999977112
    2. ' S' → logprob: -1.0866098403930664
    3. 'les' → logprob: -2.5866098403930664
    4. ' les' → logprob: -3.2116098403930664
    5. ' on' → logprob: -4.336609840393066
    6. 'x' → logprob: -4.461609840393066
    7. 'on' → logprob: -4.586609840393066
    8. '   ' → logprob: -4.836609840393066
    9. 'each' → logprob: -4.961609840393066
    10. 'le' → logprob: -5.211609840393066

Token 2003: '2' (ID: 17)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.5385680198669434
    2. 'x' → logprob: -1.9135680198669434
    3. 'on' → logprob: -2.5385680198669434
    4. '1' → logprob: -2.6635680198669434
    5. ' on' → logprob: -3.0385680198669434
    6. 'S' → logprob: -3.0385680198669434
    7. 'each' → logprob: -3.0385680198669434
    8. 'the' → logprob: -3.2885680198669434
    9. '2' → logprob: -3.4135680198669434
    10. 'au' → logprob: -3.6635680198669434

Token 2004: ' arr' (ID: 1724)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9802805781364441
    2. 'def' → logprob: -1.4802806377410889
    3. '_i' → logprob: -2.105280637741089
    4. '_' → logprob: -2.605280637741089
    5. ' =' → logprob: -3.605280637741089
    6. '[' → logprob: -3.730280637741089
    7. '
' → logprob: -3.855280637741089
    8. ']' → logprob: -4.10528039932251
    9. ')' → logprob: -4.35528039932251
    10. ' def' → logprob: -4.48028039932251

Token 2005: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.017950206995010376
    2. 'êt' → logprob: -5.392950057983398
    3. ' stops' → logprob: -5.642950057983398
    4. 'ôts' → logprob: -6.017950057983398
    5. 'êtes' → logprob: -6.642950057983398
    6. 'ts' → logprob: -7.017950057983398
    7. 'rets' → logprob: -7.267950057983398
    8. 's' → logprob: -7.267950057983398
    9. '=' → logprob: -8.017950057983398
    10. ''arrêt' → logprob: -8.142950057983398

Token 2006: ' fixes' (ID: 60095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.996300220489502
    2. '_' → logprob: -1.371300220489502
    3. '_i' → logprob: -1.871300220489502
    4. 's' → logprob: -2.746300220489502
    5. '[i' → logprob: -3.121300220489502
    6. '_
' → logprob: -3.871300220489502
    7. 'def' → logprob: -3.871300220489502
    8. '[' → logprob: -4.246300220489502
    9. '=' → logprob: -4.496300220489502
    10. '0' → logprob: -5.496300220489502

Token 2007: '.

' (ID: 364)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6520068049430847
    2. '[i' → logprob: -1.5270068645477295
    3. 'def' → logprob: -3.0270068645477295
    4. '
' → logprob: -3.4020068645477295
    5. '=' → logprob: -3.5270068645477295
    6. 's' → logprob: -3.5270068645477295
    7. '_i' → logprob: -3.9020068645477295
    8. ']' → logprob: -4.27700662612915
    9. '   ' → logprob: -4.65200662612915
    10. '[' → logprob: -4.65200662612915

Token 2008: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32425153255462646
    2. '
' → logprob: -1.8242515325546265
    3. ']' → logprob: -3.699251651763916
    4. 'def' → logprob: -3.949251651763916
    5. '[i' → logprob: -4.074251651763916
    6. ':' → logprob: -4.699251651763916
    7. ':
' → logprob: -5.449251651763916
    8. ' =' → logprob: -5.574251651763916
    9. '    
' → logprob: -5.574251651763916
    10. ')' → logprob: -5.824251651763916

Token 2009: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1074305847287178
    2. '
' → logprob: -2.9824306964874268
    3. '#' (adapté à ' #') → logprob: -4.357430458068848
    4. 'def' → logprob: -4.607430458068848
    5. '[i' → logprob: -5.732430458068848
    6. '    
' → logprob: -5.982430458068848
    7. 'for' → logprob: -5.982430458068848
    8. ']' → logprob: -6.232430458068848
    9. ',' → logprob: -6.232430458068848
    10. ')' → logprob: -6.357430458068848

Token 2010: ' Correction' (ID: 134873)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11844071745872498
    2. '   ' → logprob: -2.243440628051758
    3. ' dp' → logprob: -6.243440628051758
    4. 'M' → logprob: -6.743440628051758
    5. 'interval' → logprob: -6.743440628051758
    6. 'def' → logprob: -8.368440628051758
    7. '
' → logprob: -8.618440628051758
    8. 'max' → logprob: -8.868440628051758
    9. '#' → logprob: -8.993440628051758
    10. 'n' → logprob: -9.118440628051758

Token 2011: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.757839560508728
    2. ':' → logprob: -1.757839560508728
    3. '[i' → logprob: -2.3828396797180176
    4. '   ' → logprob: -2.7578396797180176
    5. 'def' → logprob: -3.5078396797180176
    6. '[' → logprob: -3.5078396797180176
    7. ':
' → logprob: -3.6328396797180176
    8. 'for' → logprob: -3.7578396797180176
    9. '=' → logprob: -3.8828396797180176
    10. '[
' → logprob: -4.382839679718018

Token 2012: ' notation' (ID: 92060)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5119369029998779
    2. 'le' → logprob: -2.261936902999878
    3. ' la' → logprob: -2.261936902999878
    4. 'les' → logprob: -3.011936902999878
    5. '#' → logprob: -3.261936902999878
    6. 'l' → logprob: -3.511936902999878
    7. '   ' → logprob: -4.011937141418457
    8. 'len' → logprob: -4.136937141418457
    9. ' le' → logprob: -4.261937141418457
    10. ' les' → logprob: -5.761937141418457

Token 2013: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8601109385490417
    2. ':' → logprob: -1.1101109981536865
    3. '[i' → logprob: -2.3601109981536865
    4. '=' → logprob: -3.3601109981536865
    5. '[' → logprob: -3.7351109981536865
    6. '   ' → logprob: -3.9851109981536865
    7. 'def' → logprob: -4.610110759735107
    8. 's' → logprob: -4.860110759735107
    9. ']' → logprob: -4.985110759735107
    10. ':
' → logprob: -5.110110759735107

Token 2014: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5891795754432678
    2. 'dp' → logprob: -1.214179515838623
    3. 'M' → logprob: -2.839179515838623
    4. 'def' → logprob: -3.589179515838623
    5. 'interval' → logprob: -3.589179515838623
    6. '```' → logprob: -5.464179515838623
    7. '   ' → logprob: -5.589179515838623
    8. 'n' → logprob: -5.714179515838623
    9. 'x' → logprob: -5.839179515838623
    10. 'num' → logprob: -6.089179515838623

Token 2015: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9759336113929749
    2. 'le' → logprob: -1.85093355178833
    3. 'can' → logprob: -2.60093355178833
    4. 'les' → logprob: -2.72593355178833
    5. 'interval' → logprob: -2.97593355178833
    6. 'l' → logprob: -3.10093355178833
    7. '#' → logprob: -3.22593355178833
    8. 'code' → logprob: -3.47593355178833
    9. 'range' → logprob: -3.47593355178833
    10. 'def' → logprob: -3.47593355178833

Token 2016: '’' (ID: 438)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2298574447631836
    2. 'interval' → logprob: -1.4798574447631836
    3. 'e' → logprob: -2.3548574447631836
    4. 'can' → logprob: -2.8548574447631836
    5. 'range' → logprob: -2.9798574447631836
    6. 'i' → logprob: -2.9798574447631836
    7. '#' → logprob: -3.6048574447631836
    8. ']' → logprob: -3.8548574447631836
    9. 'for' → logprob: -4.104857444763184
    10. '
' → logprob: -4.104857444763184

Token 2017: 'én' (ID: 3289)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2935194671154022
    2. 'i' → logprob: -2.7935194969177246
    3. 'code' → logprob: -3.1685194969177246
    4. 'range' → logprob: -3.4185194969177246
    5. 'def' → logprob: -3.4185194969177246
    6. 'can' → logprob: -3.9185194969177246
    7. '`' → logprob: -4.793519496917725
    8. '#' → logprob: -5.168519496917725
    9. ']' → logprob: -5.168519496917725
    10. '[' → logprob: -5.418519496917725

Token 2018: 'oncé' (ID: 59071)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6045118570327759
    2. 'once' → logprob: -2.1045117378234863
    3. 'def' → logprob: -2.1045117378234863
    4. 'um' → logprob: -2.3545117378234863
    5. 'd' → logprob: -2.6045117378234863
    6. 'ter' → logprob: -3.6045117378234863
    7. 'oncé' → logprob: -3.7295117378234863
    8. 'umer' → logprob: -3.8545117378234863
    9. ']' → logprob: -4.104511737823486
    10. 'e' → logprob: -4.229511737823486

Token 2019: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8929740786552429
    2. '[i' → logprob: -1.2679741382598877
    3. '[
' → logprob: -1.8929741382598877
    4. ':' → logprob: -2.7679741382598877
    5. '_' → logprob: -3.5179741382598877
    6. '```' → logprob: -4.142973899841309
    7. ',' → logprob: -4.267973899841309
    8. ']' → logprob: -5.142973899841309
    9. 'def' → logprob: -5.392973899841309
    10. ')' → logprob: -5.642973899841309

Token 2020: ' M' (ID: 391)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8354969620704651
    2. 'on' → logprob: -1.7104969024658203
    3. ' on' → logprob: -2.0854969024658203
    4. 'x' → logprob: -2.9604969024658203
    5. 'il' → logprob: -3.4604969024658203
    6. ',' → logprob: -3.9604969024658203
    7. 'les' → logprob: -4.08549690246582
    8. '```' → logprob: -4.33549690246582
    9. 'le' → logprob: -4.46049690246582
    10. ')' → logprob: -4.58549690246582

Token 2021: ' arr' (ID: 1724)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2422887086868286
    2. '=' → logprob: -1.7422887086868286
    3. '-' → logprob: -2.242288589477539
    4. ')' → logprob: -2.367288589477539
    5. '+' → logprob: -2.367288589477539
    6. '[i' → logprob: -2.492288589477539
    7. '_' → logprob: -3.617288589477539
    8. '[' → logprob: -3.617288589477539
    9. '>=' → logprob: -3.992288589477539
    10. '>' → logprob: -4.367288589477539

Token 2022: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.33351606130599976
    2. '[i' → logprob: -2.5835161209106445
    3. ']' → logprob: -2.8335161209106445
    4. '[' → logprob: -2.8335161209106445
    5. '```' → logprob: -4.0835161209106445
    6. '=' → logprob: -4.5835161209106445
    7. '['' → logprob: -4.7085161209106445
    8. '_' → logprob: -4.8335161209106445
    9. '_i' → logprob: -5.3335161209106445
    10. 'êt' → logprob: -5.4585161209106445

Token 2023: ' express' (ID: 6101)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29985830187797546
    2. '[' → logprob: -2.674858331680298
    3. ')' → logprob: -2.799858331680298
    4. '```' → logprob: -4.049858093261719
    5. 'express' → logprob: -4.174858093261719
    6. ']' → logprob: -4.299858093261719
    7. '[i' → logprob: -4.799858093261719
    8. 's' → logprob: -4.799858093261719
    9. '_sem' → logprob: -4.799858093261719
    10. '=' → logprob: -4.924858093261719

Token 2024: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9843205213546753
    2. '[' → logprob: -1.1093205213546753
    3. '[i' → logprob: -2.234320640563965
    4. '```' → logprob: -3.234320640563965
    5. ']' → logprob: -3.609320640563965
    6. '[
' → logprob: -3.734320640563965
    7. '=' → logprob: -3.859320640563965
    8. ')' → logprob: -3.859320640563965
    9. '_i' → logprob: -4.109320640563965
    10. ':' → logprob: -4.734320640563965

Token 2025: 'stations' (ID: 118443)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19382303953170776
    2. '+' → logprob: -2.6938230991363525
    3. '=' → logprob: -3.4438230991363525
    4. '])' → logprob: -3.9438230991363525
    5. ']' → logprob: -4.068822860717773
    6. ':' → logprob: -5.068822860717773
    7. ')])' → logprob: -5.318822860717773
    8. ')]' → logprob: -5.443822860717773
    9. '):' → logprob: -5.443822860717773
    10. ',' → logprob: -5.943822860717773

Token 2026: ' S' (ID: 336)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4268932640552521
    2. ')' → logprob: -1.8018932342529297
    3. '[' → logprob: -2.8018932342529297
    4. '[i' → logprob: -3.8018932342529297
    5. '=' → logprob: -4.17689323425293
    6. ']' → logprob: -4.30189323425293
    7. 's' → logprob: -4.42689323425293
    8. ':' → logprob: -5.30189323425293
    9. '_s' → logprob: -5.30189323425293
    10. ',' → logprob: -5.30189323425293

Token 2027: '1' (ID: 16)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.8020217418670654
    2. '[i' → logprob: -1.0520217418670654
    3. ')' → logprob: -2.4270217418670654
    4. ']' → logprob: -2.9270217418670654
    5. '[' → logprob: -3.3020217418670654
    6. '])
' → logprob: -5.4270219802856445
    7. '[
' → logprob: -5.6770219802856445
    8. ')
' → logprob: -6.3020219802856445
    9. ')])' → logprob: -6.4270219802856445
    10. '[]' → logprob: -6.5520219802856445

Token 2028: ' to' (ID: 316)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5459482073783875
    2. ']' → logprob: -1.5459482669830322
    3. '[i' → logprob: -2.6709482669830322
    4. ')' → logprob: -3.5459482669830322
    5. '+' → logprob: -3.7959482669830322
    6. '],' → logprob: -4.170948028564453
    7. '])
' → logprob: -4.295948028564453
    8. '[' → logprob: -4.545948028564453
    9. ',' → logprob: -5.420948028564453
    10. ']),' → logprob: -5.420948028564453

Token 2029: ' SM' (ID: 20297)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12731589376926422
    2. 'M' → logprob: -2.1273159980773926
    3. ' S' → logprob: -8.627315521240234
    4. ')' → logprob: -9.877315521240234
    5. '#' → logprob: -10.127315521240234
    6. ' M' → logprob: -10.252315521240234
    7. '
' → logprob: -10.502315521240234
    8. ']' → logprob: -11.252315521240234
    9. '`' → logprob: -11.627315521240234
    10. '```' → logprob: -11.627315521240234

Token 2030: '),' (ID: 936)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.65538090467453
    2. ']' → logprob: -1.9053809642791748
    3. '[i' → logprob: -2.155380964279175
    4. ')' → logprob: -2.155380964279175
    5. '])
' → logprob: -3.530380964279175
    6. '[' → logprob: -3.905380964279175
    7. '_' → logprob: -4.655380725860596
    8. ')])' → logprob: -4.780380725860596
    9. '[
' → logprob: -5.905380725860596
    10. ')
' → logprob: -5.905380725860596

Token 2031: ' 
' (ID: 793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1089200973510742
    2. '#' → logprob: -1.8589200973510742
    3. ']' → logprob: -2.733920097351074
    4. '[' → logprob: -2.858920097351074
    5. '   ' → logprob: -2.983920097351074
    6. ',' → logprob: -3.108920097351074
    7. ':' → logprob: -3.108920097351074
    8. '[i' → logprob: -3.858920097351074
    9. 'def' → logprob: -3.983920097351074
    10. '0' → logprob: -3.983920097351074

Token 2032: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4850890636444092
    2. '=' → logprob: -1.6100890636444092
    3. '_' → logprob: -2.485089063644409
    4. '[i' → logprob: -2.610089063644409
    5. ',' → logprob: -2.735089063644409
    6. '#' → logprob: -2.860089063644409
    7. '_i' → logprob: -3.110089063644409
    8. ':' → logprob: -3.235089063644409
    9. ')' → logprob: -3.360089063644409
    10. '
' → logprob: -3.735089063644409

Token 2033: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2747800350189209
    2. '=' → logprob: -2.649780035018921
    3. '[i' → logprob: -3.774780035018921
    4. '_' → logprob: -3.899780035018921
    5. '_i' → logprob: -3.899780035018921
    6. ' =' → logprob: -3.899780035018921
    7. 'i' → logprob: -4.0247802734375
    8. ' #' → logprob: -4.7747802734375
    9. ':' → logprob: -4.8997802734375
    10. ')' → logprob: -4.8997802734375

Token 2034: ' ces' (ID: 10532)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6734849214553833
    2. ' =' → logprob: -2.0484848022460938
    3. '[i' → logprob: -2.1734848022460938
    4. '=' → logprob: -2.2984848022460938
    5. '[' → logprob: -2.5484848022460938
    6. ')' → logprob: -2.5484848022460938
    7. '#' → logprob: -2.9234848022460938
    8. '_i' → logprob: -2.9234848022460938
    9. ':' → logprob: -3.5484848022460938
    10. ']' → logprob: -3.6734848022460938

Token 2035: ' stations' (ID: 26061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0657675638794899
    2. ' _' → logprob: -4.315767765045166
    3. '_i' → logprob: -4.440767765045166
    4. ')' → logprob: -4.815767765045166
    5. '[i' → logprob: -5.065767765045166
    6. '[' → logprob: -5.190767765045166
    7. ' stops' → logprob: -5.565767765045166
    8. '
' → logprob: -6.815767765045166
    9. ']' → logprob: -6.940767765045166
    10. '```' → logprob: -6.940767765045166

Token 2036: ' sont' (ID: 5242)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48924827575683594
    2. '[i' → logprob: -2.114248275756836
    3. 's' → logprob: -2.239248275756836
    4. '_i' → logprob: -3.364248275756836
    5. ' =' → logprob: -4.489248275756836
    6. '_idx' → logprob: -4.614248275756836
    7. '_index' → logprob: -4.864248275756836
    8. '=' → logprob: -4.989248275756836
    9. '[' → logprob: -4.989248275756836
    10. '_indices' → logprob: -4.989248275756836

Token 2037: ' arr' (ID: 1724)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.165901780128479
    2. 'égal' → logprob: -2.4159016609191895
    3. 'ob' → logprob: -4.0409016609191895
    4. ' aussi' → logprob: -4.4159016609191895
    5. 's' → logprob: -5.2909016609191895
    6. 'au' → logprob: -5.9159016609191895
    7. 'des' → logprob: -6.0409016609191895
    8. 'ass' → logprob: -6.1659016609191895
    9. 'les' → logprob: -6.2909016609191895
    10. 'S' → logprob: -6.2909016609191895

Token 2038: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.033884502947330475
    2. 'êt' → logprob: -4.158884525299072
    3. '_' → logprob: -5.158884525299072
    4. '^' → logprob: -5.283884525299072
    5. '[
' → logprob: -6.158884525299072
    6. 'ê' → logprob: -6.283884525299072
    7. '[' → logprob: -7.033884525299072
    8. '__' → logprob: -7.908884525299072
    9. 'êtes' → logprob: -8.283884048461914
    10. ']' → logprob: -8.408884048461914

Token 2039: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19390180706977844
    2. '[' → logprob: -2.943901777267456
    3. '_sem' → logprob: -3.193901777267456
    4. '```' → logprob: -3.443901777267456
    5. ')' → logprob: -4.193902015686035
    6. 's' → logprob: -4.568902015686035
    7. '_s' → logprob: -5.068902015686035
    8. ']' → logprob: -5.068902015686035
    9. ':' → logprob: -6.193902015686035
    10. 'sem' → logprob: -7.068902015686035

Token 2040: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.09141536802053452
    2. 'l' → logprob: -3.2164154052734375
    3. 'express' → logprob: -3.3414154052734375
    4. 's' → logprob: -5.4664154052734375
    5. 'train' → logprob: -5.5914154052734375
    6. '```' → logprob: -7.2164154052734375
    7. 'semi' → logprob: -7.4664154052734375
    8. ' sem' → logprob: -7.4664154052734375
    9. 'sé' → logprob: -8.216415405273438
    10. ' l' → logprob: -8.716415405273438

Token 2041: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.01748889870941639
    2. 'express' → logprob: -4.642488956451416
    3. '_i' → logprob: -6.392488956451416
    4. 'pexpr' → logprob: -7.267488956451416
    5. 'I' → logprob: -7.517488956451416
    6. ')' → logprob: -7.767488956451416
    7. 'i' → logprob: -7.767488956451416
    8. 'iex' → logprob: -8.017488479614258
    9. '(express' → logprob: -8.142488479614258
    10. '```' → logprob: -8.142488479614258

Token 2042: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.785397469997406
    2. ':' → logprob: -1.5353975296020508
    3. ']' → logprob: -2.535397529602051
    4. '[' → logprob: -2.660397529602051
    5. '[i' → logprob: -2.660397529602051
    6. ')' → logprob: -3.785397529602051
    7. 'def' → logprob: -3.910397529602051
    8. ' =' → logprob: -4.160397529602051
    9. ':
' → logprob: -4.535397529602051
    10. '_' → logprob: -4.785397529602051

Token 2043: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.744509756565094
    2. '[i' → logprob: -1.7445096969604492
    3. ':' → logprob: -2.244509696960449
    4. 'def' → logprob: -2.869509696960449
    5. '
' → logprob: -2.994509696960449
    6. ')' → logprob: -3.244509696960449
    7. '[' → logprob: -3.994509696960449
    8. '[
' → logprob: -3.994509696960449
    9. ':
' → logprob: -4.994509696960449
    10. '):' → logprob: -4.994509696960449

Token 2044: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03275708109140396
    2. '
' → logprob: -4.90775728225708
    3. 'def' → logprob: -5.28275728225708
    4. '[i' → logprob: -5.40775728225708
    5. ')
' → logprob: -6.28275728225708
    6. '    
' → logprob: -6.28275728225708
    7. ')' → logprob: -6.40775728225708
    8. ':' → logprob: -6.40775728225708
    9. '  
' → logprob: -7.15775728225708
    10. ':
' → logprob: -7.15775728225708

Token 2045: ' Nombre' (ID: 70208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4363497197628021
    2. 'def' → logprob: -2.686349630355835
    3. ':' → logprob: -3.186349630355835
    4. '[i' → logprob: -3.186349630355835
    5. '
' → logprob: -3.311349630355835
    6. ' =' → logprob: -3.686349630355835
    7. ':
' → logprob: -3.811349630355835
    8. ']' → logprob: -4.311349868774414
    9. ')' → logprob: -4.311349868774414
    10. '#' → logprob: -4.686349868774414

Token 2046: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14941856265068054
    2. '=' → logprob: -3.274418592453003
    3. ' =' → logprob: -4.274418354034424
    4. '[' → logprob: -4.399418354034424
    5. ' _' → logprob: -4.399418354034424
    6. 's' → logprob: -5.024418354034424
    7. ' de' → logprob: -5.274418354034424
    8. ')' → logprob: -5.399418354034424
    9. ' of' → logprob: -5.649418354034424
    10. '_of' → logprob: -5.899418354034424

Token 2047: ' arr' (ID: 1724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06716521084308624
    2. '_s' → logprob: -4.192165374755859
    3. '_des' → logprob: -5.317165374755859
    4. ' =' → logprob: -5.442165374755859
    5. '_sem' → logprob: -5.567165374755859
    6. '[' → logprob: -5.692165374755859
    7. ' des' → logprob: -5.692165374755859
    8. '=' → logprob: -5.692165374755859
    9. ' _' → logprob: -5.817165374755859
    10. ')' → logprob: -5.942165374755859

Token 2048: 'êts' (ID: 56582)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6597447395324707
    2. 'êts' → logprob: -1.4097447395324707
    3. '_' → logprob: -2.6597447395324707
    4. '_s' → logprob: -4.034744739532471
    5. ')' → logprob: -4.159744739532471
    6. '[' → logprob: -4.409744739532471
    7. '[
' → logprob: -4.534744739532471
    8. '_stop' → logprob: -4.659744739532471
    9. ']' → logprob: -4.909744739532471
    10. '_i' → logprob: -5.284744739532471

Token 2049: ' sem' (ID: 2743)
  Prédit: '_sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sem' → logprob: -0.6804041266441345
    2. '_' → logprob: -1.1804041862487793
    3. 'sem' → logprob: -2.6804041862487793
    4. ' sem' → logprob: -3.0554041862487793
    5. '_s' → logprob: -3.6804041862487793
    6. 's' → logprob: -4.055404186248779
    7. '[' → logprob: -5.430404186248779
    8. '_se' → logprob: -5.430404186248779
    9. ')' → logprob: -5.680404186248779
    10. '```' → logprob: -6.555404186248779

Token 2050: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.02155159041285515
    2. 'express' → logprob: -4.146551609039307
    3. 'import' → logprob: -7.271551609039307
    4. '_i' → logprob: -8.146551132202148
    5. '```' → logprob: -8.271551132202148
    6. '(express' → logprob: -8.396551132202148
    7. '^\' → logprob: -8.521551132202148
    8. ' expresses' → logprob: -8.771551132202148
    9. 'ormais' → logprob: -8.771551132202148
    10. 'i' → logprob: -8.896551132202148

Token 2051: ' K' (ID: 658)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41082528233528137
    2. '_' → logprob: -1.535825252532959
    3. '=' → logprob: -2.910825252532959
    4. 's' → logprob: -4.035825252532959
    5. '_total' → logprob: -4.410825252532959
    6. ')' → logprob: -4.660825252532959
    7. '_s' → logprob: -5.410825252532959
    8. ',' → logprob: -6.035825252532959
    9. ':' → logprob: -6.285825252532959
    10. '[' → logprob: -6.285825252532959

Token 2052: ' ≥' (ID: 99731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22961802780628204
    2. '[' → logprob: -1.7296180725097656
    3. ',' → logprob: -5.479618072509766
    4. '[i' → logprob: -5.479618072509766
    5. '):' → logprob: -5.729618072509766
    6. ':
' → logprob: -5.729618072509766
    7. '[
' → logprob: -6.104618072509766
    8. '   ' → logprob: -6.229618072509766
    9. ')' → logprob: -6.479618072509766
    10. ']' → logprob: -6.604618072509766

Token 2053: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.988221684878226e-06
    2. ' M' → logprob: -12.125006675720215
    3. 'import' → logprob: -14.000006675720215
    4. 'len' → logprob: -15.125006675720215
    5. ' ' → logprob: -16.75000762939453
    6. '```' → logprob: -17.12500762939453
    7. 'М' → logprob: -17.12500762939453
    8. '   ' → logprob: -17.25000762939453
    9. '
' → logprob: -17.37500762939453
    10. '#' → logprob: -17.37500762939453

Token 2054: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.066526859998703
    2. '):' → logprob: -4.316526889801025
    3. '   ' → logprob: -4.441526889801025
    4. '[' → logprob: -4.441526889801025
    5. ':
' → logprob: -5.066526889801025
    6. 'def' → logprob: -5.066526889801025
    7. ')' → logprob: -5.941526889801025
    8. ']' → logprob: -6.191526889801025
    9. ']:' → logprob: -6.191526889801025
    10. '[i' → logprob: -6.316526889801025

Token 2055: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25900083780288696
    2. ':' → logprob: -2.634000778198242
    3. '
' → logprob: -2.759000778198242
    4. 'def' → logprob: -3.384000778198242
    5. 'dp' → logprob: -3.884000778198242
    6. ':
' → logprob: -5.134000778198242
    7. '[i' → logprob: -5.259000778198242
    8. '):' → logprob: -5.384000778198242
    9. '    
' → logprob: -5.884000778198242
    10. '[' → logprob: -6.009000778198242

Token 2056: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1292261779308319
    2. 'dp' → logprob: -2.2542262077331543
    3. '
' → logprob: -4.254226207733154
    4. '    
' → logprob: -6.629226207733154
    5. ' dp' → logprob: -7.879226207733154
    6. '#' (adapté à ' #') → logprob: -8.879225730895996
    7. 'n' → logprob: -9.879225730895996
    8. '  
' → logprob: -10.129225730895996
    9. '\' → logprob: -11.004225730895996
    10. 'DP' → logprob: -11.504225730895996

Token 2057: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0995180755853653
    2. 'dp' → logprob: -2.974518060684204
    3. ':' → logprob: -4.224518299102783
    4. '
' → logprob: -4.474518299102783
    5. 'return' → logprob: -5.849518299102783
    6. '    
' → logprob: -6.099518299102783
    7. '[' → logprob: -6.349518299102783
    8. 'def' → logprob: -6.474518299102783
    9. ' ' → logprob: -6.599518299102783
    10. 'M' → logprob: -6.974518299102783

Token 2058: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.636481761932373
    2. 'dp' → logprob: -1.761481761932373
    3. 'for' → logprob: -1.886481761932373
    4. '   ' → logprob: -2.136481761932373
    5. 'i' → logprob: -2.636481761932373
    6. ' on' → logprob: -3.136481761932373
    7. ' for' → logprob: -3.261481761932373
    8. 'M' → logprob: -3.511481761932373
    9. 'def' → logprob: -3.636481761932373
    10. '
' → logprob: -3.886481761932373

Token 2059: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015769980382174253
    2. ' i' → logprob: -6.626576900482178
    3. 'interval' → logprob: -8.876577377319336
    4. 'les' → logprob: -10.876577377319336
    5. ' chaque' → logprob: -11.251577377319336
    6. '#' → logprob: -11.251577377319336
    7. 'l' → logprob: -11.501577377319336
    8. 'le' → logprob: -11.501577377319336
    9. 'la' → logprob: -11.626577377319336
    10. ' interval' → logprob: -12.251577377319336

Token 2060: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6363850831985474
    2. 'i' → logprob: -0.7613850831985474
    3. ' interval' → logprob: -6.761384963989258
    4. 'inter' → logprob: -6.761384963989258
    5. ' i' → logprob: -7.011384963989258
    6. ']' → logprob: -9.011384963989258
    7. '_interval' → logprob: -9.386384963989258
    8. '_' → logprob: -9.636384963989258
    9. '_i' → logprob: -9.636384963989258
    10. 'segment' → logprob: -9.886384963989258

Token 2061: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9946696162223816
    2. 'ale' → logprob: -0.9946696162223816
    3. 'val' → logprob: -2.2446696758270264
    4. 'v' → logprob: -3.1196696758270264
    5. 'al' → logprob: -3.3696696758270264
    6. 'u' → logprob: -4.369669437408447
    7. '[' → logprob: -4.744669437408447
    8. 'n' → logprob: -4.994669437408447
    9. 'e' → logprob: -4.994669437408447
    10. '#' → logprob: -5.119669437408447

Token 2062: ' i' (ID: 575)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.187048316001892
    2. 'i' → logprob: -1.437048316001892
    3. '[i' → logprob: -1.562048316001892
    4. ' =' → logprob: -2.1870484352111816
    5. ' i' → logprob: -3.3120484352111816
    6. '[' → logprob: -3.5620484352111816
    7. '_' → logprob: -3.6870484352111816
    8. '_idx' → logprob: -4.812048435211182
    9. ',' → logprob: -4.937048435211182
    10. '_index' → logprob: -5.187048435211182

Token 2063: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8773417472839355
    2. ' =' → logprob: -1.7523417472839355
    3. '[' → logprob: -2.2523417472839355
    4. '_i' → logprob: -2.5023417472839355
    5. ',' → logprob: -3.0023417472839355
    6. ':' → logprob: -3.2523417472839355
    7. '[
' → logprob: -3.7523417472839355
    8. '=' → logprob: -3.7523417472839355
    9. '_' → logprob: -4.0023417472839355
    10. 'i' → logprob: -4.2523417472839355

Token 2064: ' nombre' (ID: 9733)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6206395030021667
    2. ' x' → logprob: -1.7456395626068115
    3. 'on' → logprob: -2.4956395626068115
    4. 'x' → logprob: -2.8706395626068115
    5. '#' → logprob: -3.1206395626068115
    6. ' for' → logprob: -3.2456395626068115
    7. 'for' → logprob: -3.7456395626068115
    8. '   ' → logprob: -4.620639324188232
    9. ' #' → logprob: -4.870639324188232
    10. 'possible' → logprob: -5.870639324188232

Token 2065: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09140471369028091
    2. '_s' → logprob: -3.841404676437378
    3. ' =' → logprob: -4.591404914855957
    4. '_arr' → logprob: -4.716404914855957
    5. 's' → logprob: -4.966404914855957
    6. '_sem' → logprob: -4.966404914855957
    7. '_i' → logprob: -5.591404914855957
    8. '_des' → logprob: -5.841404914855957
    9. '_of' → logprob: -5.841404914855957
    10. '_de' → logprob: -5.966404914855957

Token 2066: '’arr' (ID: 51821)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2708244323730469
    2. '_arr' → logprob: -2.020824432373047
    3. '_s' → logprob: -3.520824432373047
    4. '_st' → logprob: -3.520824432373047
    5. 'arr' → logprob: -4.645824432373047
    6. '_sem' → logprob: -5.270824432373047
    7. '_ar' → logprob: -5.395824432373047
    8. '_choices' → logprob: -5.395824432373047
    9. ' _' → logprob: -5.770824432373047
    10. '_segments' → logprob: -5.895824432373047

Token 2067: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.002992440015077591
    2. 'êt' → logprob: -6.002992630004883
    3. '^' → logprob: -8.127992630004883
    4. 'rets' → logprob: -9.502992630004883
    5. 'êtes' → logprob: -10.502992630004883
    6. '_' → logprob: -11.127992630004883
    7. '[' → logprob: -11.252992630004883
    8. 'ê' → logprob: -11.377992630004883
    9. 'r' → logprob: -11.502992630004883
    10. '[
' → logprob: -11.627992630004883

Token 2068: ' sem' (ID: 2743)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1509636640548706
    2. 'i' → logprob: -1.7759636640548706
    3. '[i' → logprob: -1.9009636640548706
    4. 'sem' → logprob: -2.27596378326416
    5. ' sem' → logprob: -2.52596378326416
    6. '_i' → logprob: -3.02596378326416
    7. 's' → logprob: -3.27596378326416
    8. ' i' → logprob: -3.77596378326416
    9. '_sem' → logprob: -4.27596378326416
    10. '=' → logprob: -4.52596378326416

Token 2069: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.006694764830172062
    2. 'express' → logprob: -5.631694793701172
    3. '_i' → logprob: -6.506694793701172
    4. 'i' → logprob: -7.881694793701172
    5. '[i' → logprob: -8.631694793701172
    6. 'ip' → logprob: -8.881694793701172
    7. ' expresses' → logprob: -8.881694793701172
    8. 'pexpr' → logprob: -9.131694793701172
    9. 'iex' → logprob: -9.256694793701172
    10. '_expr' → logprob: -9.631694793701172

Token 2070: ' dans' (ID: 2671)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1749761551618576
    2. ' =' → logprob: -2.674976110458374
    3. '_i' → logprob: -3.174976110458374
    4. '[' → logprob: -3.924976110458374
    5. '_in' → logprob: -4.924976348876953
    6. '_' → logprob: -5.049976348876953
    7. '   ' → logprob: -5.924976348876953
    8. '=' → logprob: -6.049976348876953
    9. 'i' → logprob: -6.049976348876953
    10. ' i' → logprob: -6.549976348876953

Token 2071: ' interval' (ID: 17116)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4150543510913849
    2. 'interval' → logprob: -1.4150543212890625
    3. ' i' → logprob: -2.7900543212890625
    4. '[i' → logprob: -4.2900543212890625
    5. ' interval' → logprob: -5.2900543212890625
    6. '_interval' → logprob: -5.6650543212890625
    7. 'the' → logprob: -6.1650543212890625
    8. '_i' → logprob: -6.1650543212890625
    9. '_' → logprob: -6.7900543212890625
    10. 'l' → logprob: -6.7900543212890625

Token 2072: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6494925022125244
    2. 'le' → logprob: -1.2744925022125244
    3. 'aire' → logprob: -1.8994925022125244
    4. 'al' → logprob: -4.524492263793945
    5. 'val' → logprob: -4.649492263793945
    6. 'ale' → logprob: -4.649492263793945
    7. ']' → logprob: -4.899492263793945
    8. '[i' → logprob: -6.024492263793945
    9. '=' → logprob: -6.774492263793945
    10. 'ée' → logprob: -7.149492263793945

Token 2073: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.19849732518196106
    2. '_i' → logprob: -2.5734972953796387
    3. ' i' → logprob: -2.9484972953796387
    4. 'i' → logprob: -3.1984972953796387
    5. '_' → logprob: -5.573497295379639
    6. '[' → logprob: -6.323497295379639
    7. ' _' → logprob: -6.698497295379639
    8. '```' → logprob: -6.823497295379639
    9. ' [' → logprob: -6.948497295379639
    10. '   ' → logprob: -8.198497772216797

Token 2074: ' peut' (ID: 9216)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.35742053389549255
    2. ' =' → logprob: -1.982420563697815
    3. '=' → logprob: -2.3574204444885254
    4. '[' → logprob: -3.8574204444885254
    5. 'i' → logprob: -4.357420444488525
    6. '_i' → logprob: -4.607420444488525
    7. ' i' → logprob: -5.482420444488525
    8. '```' → logprob: -5.857420444488525
    9. ',' → logprob: -6.107420444488525
    10. '[
' → logprob: -6.357420444488525

Token 2075: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14644493162631989
    2. ' =' → logprob: -2.8964450359344482
    3. '   ' → logprob: -3.1464450359344482
    4. 'être' → logprob: -4.646444797515869
    5. ' être' → logprob: -5.396444797515869
    6. '#' → logprob: -5.896444797515869
    7. '```' → logprob: -5.896444797515869
    8. ' ' → logprob: -6.146444797515869
    9. ' ' → logprob: -6.271444797515869
    10. ')' → logprob: -6.521444797515869

Token 2076: ' >' (ID: 1424)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1327762603759766
    2. '1' → logprob: -1.5077762603759766
    3. 'x' → logprob: -1.6327762603759766
    4. 'j' → logprob: -2.7577762603759766
    5. 'var' → logprob: -3.7577762603759766
    6. 'de' → logprob: -4.382776260375977
    7. ' ' → logprob: -4.382776260375977
    8. 'i' → logprob: -4.382776260375977
    9. 'vari' → logprob: -4.507776260375977
    10. '2' → logprob: -4.632776260375977

Token 2077: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007937589660286903
    2. '1' → logprob: -5.257937431335449
    3. '2' → logprob: -6.507937431335449
    4. '=
' → logprob: -7.632937431335449
    5. '0' → logprob: -8.88293743133545
    6. ' ' → logprob: -9.00793743133545
    7. 'or' → logprob: -9.25793743133545
    8. ' =' → logprob: -9.88293743133545
    9. '   ' → logprob: -10.13293743133545
    10. '=i' → logprob: -10.38293743133545

Token 2078: ' si' (ID: 1784)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44298431277275085
    2. 'def' → logprob: -1.4429843425750732
    3. '   ' → logprob: -2.8179843425750732
    4. '[' → logprob: -3.9429843425750732
    5. '[i' → logprob: -4.067984104156494
    6. ']' → logprob: -5.442984104156494
    7. '):' → logprob: -5.692984104156494
    8. ' def' → logprob: -6.067984104156494
    9. ' =' → logprob: -6.067984104156494
    10. ',' → logprob: -6.317984104156494

Token 2079: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.1341114044189453
    2. ' x' → logprob: -1.5091114044189453
    3. 'x' → logprob: -1.7591114044189453
    4. 'on' → logprob: -2.8841114044189453
    5. ' S' → logprob: -3.1341114044189453
    6. 'S' → logprob: -3.3841114044189453
    7. '   ' → logprob: -4.009111404418945
    8. ' ' → logprob: -4.009111404418945
    9. ' i' → logprob: -4.259111404418945
    10. ' ' → logprob: -4.384111404418945

Token 2080: ' en' (ID: 469)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.3896898329257965
    2. 'cho' → logprob: -1.2646898031234741
    3. ' ajoute' → logprob: -4.389689922332764
    4. ' chois' → logprob: -4.639689922332764
    5. ' ' → logprob: -5.139689922332764
    6. 've' → logprob: -5.389689922332764
    7. 'd' → logprob: -6.139689922332764
    8. 'veux' → logprob: -7.014689922332764
    9. 'sou' → logprob: -7.139689922332764
    10. '  ' → logprob: -7.639689922332764

Token 2081: ' raj' (ID: 46358)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.5950892567634583
    2. 'aj' → logprob: -0.8450892567634583
    3. ' ' → logprob: -4.845089435577393
    4. ' chois' → logprob: -5.470089435577393
    5. '   ' → logprob: -6.095089435577393
    6. '  ' → logprob: -6.595089435577393
    7. ' ajoute' → logprob: -6.720089435577393
    8. 'choose' → logprob: -7.845089435577393
    9. 'aug' → logprob: -8.345088958740234
    10. 'd' → logprob: -8.470088958740234

Token 2082: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.011274991557002068
    2. 'out' → logprob: -4.511274814605713
    3. 'outer' → logprob: -9.011275291442871
    4. 'outez' → logprob: -9.636275291442871
    5. 'ou' → logprob: -11.011275291442871
    6. '_' → logprob: -12.011275291442871
    7. 'outes' → logprob: -12.636275291442871
    8. '_out' → logprob: -12.636275291442871
    9. 'oint' → logprob: -13.011275291442871
    10. 'o' → logprob: -13.136275291442871

Token 2083: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7693987488746643
    2. '[i' → logprob: -1.5193986892700195
    3. '_' → logprob: -3.1443986892700195
    4. '[
' → logprob: -3.1443986892700195
    5. ')' → logprob: -3.2693986892700195
    6. ':' → logprob: -3.3943986892700195
    7. ' =' → logprob: -3.6443986892700195
    8. '=' → logprob: -3.6443986892700195
    9. 'def' → logprob: -3.8943986892700195
    10. '   ' → logprob: -4.0193986892700195

Token 2084: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42193496227264404
    2. ':' → logprob: -1.171934962272644
    3. ':
' → logprob: -5.046935081481934
    4. '
' → logprob: -5.171935081481934
    5. ' ' → logprob: -5.421935081481934
    6. '):' → logprob: -6.171935081481934
    7. ' :' → logprob: -6.296935081481934
    8. ')' → logprob: -6.421935081481934
    9. '    
' → logprob: -6.546935081481934
    10. ',' → logprob: -6.671935081481934

Token 2085: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17080605030059814
    2. 'dp' → logprob: -1.9208060503005981
    3. ' dp' → logprob: -5.545805931091309
    4. '
' → logprob: -5.795805931091309
    5. '#' (adapté à ' #') → logprob: -7.045805931091309
    6. '    
' → logprob: -7.295805931091309
    7. ' =' → logprob: -8.170805931091309
    8. ':' → logprob: -8.170805931091309
    9. 'def' → logprob: -8.295805931091309
    10. 'for' → logprob: -8.420805931091309

Token 2086: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29625123739242554
    2. ':' → logprob: -1.6712512969970703
    3. 'def' → logprob: -4.42125129699707
    4. ']' → logprob: -4.54625129699707
    5. ':
' → logprob: -4.92125129699707
    6. '[' → logprob: -5.04625129699707
    7. '
' → logprob: -5.54625129699707
    8. '[i' → logprob: -5.67125129699707
    9. 'dp' → logprob: -5.67125129699707
    10. ')' → logprob: -6.29625129699707

Token 2087: ' définit' (ID: 89835)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5150337219238281
    2. ' =' → logprob: -2.515033721923828
    3. 'continue' → logprob: -2.890033721923828
    4. 'for' → logprob: -3.140033721923828
    5. 'def' → logprob: -3.890033721923828
    6. 'contin' → logprob: -3.890033721923828
    7. 'n' → logprob: -4.015033721923828
    8. 's' → logprob: -4.015033721923828
    9. 'range' → logprob: -4.015033721923828
    10. '   ' → logprob: -4.140033721923828

Token 2088: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17277413606643677
    2. 'x' → logprob: -2.297774076461792
    3. '   ' → logprob: -3.922774076461792
    4. 'max' → logprob: -4.297774314880371
    5. 'def' → logprob: -4.922774314880371
    6. ' dp' → logprob: -5.672774314880371
    7. 'interval' → logprob: -6.047774314880371
    8. '#' → logprob: -6.297774314880371
    9. 'arr' → logprob: -6.672774314880371
    10. '
' → logprob: -7.172774314880371

Token 2089: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02077089063823223
    2. ' i' → logprob: -3.895770788192749
    3. ' chaque' → logprob: -9.145771026611328
    4. 'interval' → logprob: -9.645771026611328
    5. '_i' → logprob: -11.020771026611328
    6. ' interval' → logprob: -11.520771026611328
    7. 'x' → logprob: -12.270771026611328
    8. ' ' → logprob: -12.520771026611328
    9. 'each' → logprob: -12.520771026611328
    10. '
' → logprob: -12.645771026611328

Token 2090: ' interval' (ID: 17116)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43433913588523865
    2. 'interval' → logprob: -1.059339165687561
    3. '_' → logprob: -5.9343390464782715
    4. ' i' → logprob: -7.1843390464782715
    5. 'inter' → logprob: -7.1843390464782715
    6. ' interval' → logprob: -7.4343390464782715
    7. '_i' → logprob: -8.55933952331543
    8. '_interval' → logprob: -8.55933952331543
    9. '_
' → logprob: -9.43433952331543
    10. 'segment' → logprob: -10.05933952331543

Token 2091: 'le' (ID: 282)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6187344789505005
    2. 'n' → logprob: -1.7437344789505005
    3. 'e' → logprob: -1.8687344789505005
    4. 'val' → logprob: -1.8687344789505005
    5. 'v' → logprob: -2.743734359741211
    6. '[
' → logprob: -2.743734359741211
    7. 'def' → logprob: -3.243734359741211
    8. 'le' → logprob: -3.618734359741211
    9. 'é' → logprob: -3.993734359741211
    10. '=' → logprob: -3.993734359741211

Token 2092: ' le' (ID: 505)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.8220796585083008
    2. 'i' → logprob: -1.0720796585083008
    3. '[i' → logprob: -2.072079658508301
    4. '_' → logprob: -3.197079658508301
    5. ' i' → logprob: -3.572079658508301
    6. ' =' → logprob: -4.822079658508301
    7. '_idx' → logprob: -5.322079658508301
    8. '[' → logprob: -5.697079658508301
    9. '_index' → logprob: -5.822079658508301
    10. ' _' → logprob: -6.447079658508301

Token 2093: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.26654860377311707
    2. 'i' → logprob: -2.1415486335754395
    3. 'x' → logprob: -3.1415486335754395
    4. ' nombre' → logprob: -3.5165486335754395
    5. 'minimum' → logprob: -4.5165486335754395
    6. '_i' → logprob: -5.0165486335754395
    7. 'possible' → logprob: -5.8915486335754395
    8. 'max' → logprob: -6.0165486335754395
    9. 'number' → logprob: -6.0165486335754395
    10. 'min' → logprob: -6.2665486335754395

Token 2094: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08247776329517365
    2. '_s' → logprob: -4.207477569580078
    3. '_des' → logprob: -4.332477569580078
    4. '_of' → logprob: -4.457477569580078
    5. 's' → logprob: -4.832477569580078
    6. '_i' → logprob: -5.332477569580078
    7. '_de' → logprob: -5.457477569580078
    8. ' _' → logprob: -5.582477569580078
    9. '_d' → logprob: -5.707477569580078
    10. ' of' → logprob: -6.332477569580078

Token 2095: ' segments' (ID: 33749)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5234991312026978
    2. 'st' → logprob: -1.0234991312026978
    3. 'ar' → logprob: -3.523499011993408
    4. 'sem' → logprob: -5.273499011993408
    5. ' stops' → logprob: -5.523499011993408
    6. 'segments' → logprob: -6.023499011993408
    7. 'stop' → logprob: -6.523499011993408
    8. ' ' → logprob: -6.773499011993408
    9. 's' → logprob: -7.273499011993408
    10. 'stations' → logprob: -7.773499011993408

Token 2096: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5012585520744324
    2. '_i' → logprob: -2.251258611679077
    3. ' =' → logprob: -2.501258611679077
    4. '=' → logprob: -2.626258611679077
    5. '[i' → logprob: -2.876258611679077
    6. ':' → logprob: -4.126258373260498
    7. '[' → logprob: -4.126258373260498
    8. '[
' → logprob: -4.501258373260498
    9. 's' → logprob: -4.751258373260498
    10. '```' → logprob: -5.751258373260498

Token 2097: ' nombre' (ID: 9733)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14216339588165283
    2. ' x' → logprob: -3.1421632766723633
    3. '2' → logprob: -3.7671632766723633
    4. 'dp' → logprob: -3.7671632766723633
    5. '(x' → logprob: -4.142163276672363
    6. 'j' → logprob: -5.142163276672363
    7. ' (' → logprob: -5.392163276672363
    8. '1' → logprob: -5.642163276672363
    9. '   ' → logprob: -6.142163276672363
    10. ' ' → logprob: -6.267163276672363

Token 2098: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029368216171860695
    2. '[' → logprob: -4.9043684005737305
    3. ' _' → logprob: -4.9043684005737305
    4. ' de' → logprob: -6.1543684005737305
    5. '_s' → logprob: -6.4043684005737305
    6. '_de' → logprob: -6.6543684005737305
    7. ')' → logprob: -6.9043684005737305
    8. '_of' → logprob: -7.0293684005737305
    9. '[i' → logprob: -7.1543684005737305
    10. ' of' → logprob: -7.1543684005737305

Token 2099: '’arr' (ID: 51821)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1307310163974762
    2. '_segments' → logprob: -3.5057311058044434
    3. ''' → logprob: -3.8807311058044434
    4. ''_' → logprob: -4.005731105804443
    5. '_s' → logprob: -4.130731105804443
    6. 's' → logprob: -5.005731105804443
    7. 'arr' → logprob: -5.380731105804443
    8. '_arr' → logprob: -5.505731105804443
    9. ''arrêt' → logprob: -5.630731105804443
    10. '_sem' → logprob: -5.880731105804443

Token 2100: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00010437761375214905
    2. 'ôts' → logprob: -10.375103950500488
    3. ' stops' → logprob: -10.625103950500488
    4. 'êt' → logprob: -10.750103950500488
    5. 'êtes' → logprob: -11.250103950500488
    6. 'ê' → logprob: -12.750103950500488
    7. 'Stops' → logprob: -12.875103950500488
    8. 'rets' → logprob: -13.500103950500488
    9. 'âts' → logprob: -13.875103950500488
    10. 'êtres' → logprob: -14.000103950500488

Token 2101: ' sem' (ID: 2743)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24370554089546204
    2. '_sem' → logprob: -2.6187055110931396
    3. '_s' → logprob: -3.1187055110931396
    4. '_' → logprob: -3.2437055110931396
    5. 'sem' → logprob: -3.4937055110931396
    6. ' sem' → logprob: -4.868705749511719
    7. ')' → logprob: -5.368705749511719
    8. '   ' → logprob: -6.493705749511719
    9. ' =' → logprob: -6.618705749511719
    10. '
' → logprob: -6.618705749511719

Token 2102: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.004312734119594097
    2. '_i' → logprob: -6.129312515258789
    3. 'i' → logprob: -8.004312515258789
    4. '[i' → logprob: -8.379312515258789
    5. 'I' → logprob: -9.254312515258789
    6. 'express' → logprob: -9.379312515258789
    7. 'ieurs' → logprob: -9.691812515258789
    8. 'import' → logprob: -9.879312515258789
    9. 'iex' → logprob: -10.066812515258789
    10. '```' → logprob: -10.254312515258789

Token 2103: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5254808664321899
    2. '[' → logprob: -1.90048086643219
    3. '[
' → logprob: -2.7754807472229004
    4. '_i' → logprob: -3.0254807472229004
    5. '[i' → logprob: -3.0254807472229004
    6. 's' → logprob: -3.2754807472229004
    7. ' =' → logprob: -4.7754807472229
    8. '=' → logprob: -5.0254807472229
    9. '```' → logprob: -5.0254807472229
    10. ']' → logprob: -5.1504807472229

Token 2104: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.07754971086978912
    2. 'l' → logprob: -2.952549695968628
    3. ' interval' → logprob: -4.952549934387207
    4. 'i' → logprob: -5.327549934387207
    5. ' ' → logprob: -5.952549934387207
    6. ' l' → logprob: -6.202549934387207
    7. ' i' → logprob: -6.952549934387207
    8. '_interval' → logprob: -6.952549934387207
    9. 'the' → logprob: -7.702549934387207
    10. 'le' → logprob: -7.952549934387207

Token 2105: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3623180687427521
    2. 'e' → logprob: -1.7373180389404297
    3. 'aire' → logprob: -2.1123180389404297
    4. 'é' → logprob: -5.11231803894043
    5. 'ule' → logprob: -8.36231803894043
    6. ']' → logprob: -8.86231803894043
    7. 'ée' → logprob: -8.86231803894043
    8. 'è' → logprob: -8.98731803894043
    9. 'es' → logprob: -9.73731803894043
    10. 'def' → logprob: -10.48731803894043

Token 2106: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9510177373886108
    2. 's' → logprob: -1.8260177373886108
    3. '_i' → logprob: -1.8260177373886108
    4. '[i' → logprob: -2.2010178565979004
    5. '_s' → logprob: -2.8260178565979004
    6. '```' → logprob: -3.4510178565979004
    7. '[' → logprob: -3.9510178565979004
    8. '_sem' → logprob: -4.3260178565979
    9. '[
' → logprob: -4.5760178565979
    10. ')' → logprob: -5.2010178565979

Token 2107: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2685116529464722
    2. '[
' → logprob: -2.0185117721557617
    3. 'def' → logprob: -2.1435117721557617
    4. ' =' → logprob: -2.3935117721557617
    5. '[' → logprob: -2.5185117721557617
    6. '_' → logprob: -2.7685117721557617
    7. '=' → logprob: -3.0185117721557617
    8. '_i' → logprob: -3.1435117721557617
    9. ':' → logprob: -3.8935117721557617
    10. ']' → logprob: -4.143511772155762

Token 2108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002986392646562308
    2. ' ' → logprob: -8.125298500061035
    3. '   ' → logprob: -14.250298500061035
    4. '
' → logprob: -14.500298500061035
    5. '<|end|>' → logprob: -14.750298500061035
    6. '```' → logprob: -15.000298500061035
    7. ' ' → logprob: -15.500298500061035
    8. ')' → logprob: -15.625298500061035
    9. '<|end|>' → logprob: -15.750298500061035
    10. '0' → logprob: -17.00029945373535

Token 2109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.070975071750581e-05
    2. ' ' → logprob: -10.625030517578125
    3. '```' → logprob: -12.750030517578125
    4. '<|end|>' → logprob: -13.000030517578125
    5. '
' → logprob: -14.250030517578125
    6. '<|end|>' → logprob: -15.500030517578125
    7. ')' → logprob: -16.250030517578125
    8. '   ' → logprob: -16.375030517578125
    9. ' ' → logprob: -17.875030517578125
    10. '0' → logprob: -18.000030517578125

Token 2110: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20741161704063416
    2. '[' → logprob: -2.707411527633667
    3. 'def' → logprob: -2.957411527633667
    4. '[i' → logprob: -3.957411527633667
    5. '   ' → logprob: -4.082411766052246
    6. ']' → logprob: -4.582411766052246
    7. ':
' → logprob: -4.957411766052246
    8. '[
' → logprob: -5.457411766052246
    9. '=' → logprob: -6.457411766052246
    10. ')' → logprob: -6.582411766052246

Token 2111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17474055290222168
    2. 'def' → logprob: -2.9247405529022217
    3. '
' → logprob: -3.5497405529022217
    4. ' =' → logprob: -3.7997405529022217
    5. '#' → logprob: -4.549740791320801
    6. ':' → logprob: -4.799740791320801
    7. ']' → logprob: -5.424740791320801
    8. '.' → logprob: -5.424740791320801
    9. '=' → logprob: -5.424740791320801
    10. ',' → logprob: -5.549740791320801

Token 2112: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41840270161628723
    2. 'dp' → logprob: -1.4184026718139648
    3. '#' (adapté à ' #') → logprob: -3.168402671813965
    4. '
' → logprob: -4.043402671813965
    5. 'def' → logprob: -4.043402671813965
    6. ' dp' → logprob: -5.543402671813965
    7. '#
' → logprob: -6.418402671813965
    8. ' =' → logprob: -6.543402671813965
    9. 'max' → logprob: -6.668402671813965
    10. 'segments' → logprob: -6.668402671813965

Token 2113: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.969064474105835
    2. ':' → logprob: -1.219064474105835
    3. 'def' → logprob: -1.844064474105835
    4. '[' → logprob: -2.969064474105835
    5. ')' → logprob: -4.094064712524414
    6. '0' → logprob: -4.469064712524414
    7. ']' → logprob: -4.469064712524414
    8. '):' → logprob: -4.594064712524414
    9. ' =' → logprob: -4.844064712524414
    10. 'M' → logprob: -5.094064712524414

Token 2114: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018363920971751213
    2. ' i' → logprob: -4.018363952636719
    3. 'interval' → logprob: -8.893363952636719
    4. ' interval' → logprob: -10.893363952636719
    5. 'x' → logprob: -11.268363952636719
    6. '_i' → logprob: -12.143363952636719
    7. '
' → logprob: -12.268363952636719
    8. ' ' → logprob: -12.268363952636719
    9. ' chaque' → logprob: -12.643363952636719
    10. 'j' → logprob: -12.768363952636719

Token 2115: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.9428156614303589
    2. 'interval' → logprob: -1.3178156614303589
    3. ' i' → logprob: -2.1928157806396484
    4. ' segment' → logprob: -2.3178157806396484
    5. 'i' → logprob: -2.9428157806396484
    6. 'segment' → logprob: -4.567815780639648
    7. ')' → logprob: -4.692815780639648
    8. ' ' → logprob: -5.067815780639648
    9. '_' → logprob: -5.067815780639648
    10. ']' → logprob: -5.317815780639648

Token 2116: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07665424048900604
    2. ']' → logprob: -3.7016541957855225
    3. 'v' → logprob: -3.7016541957855225
    4. 'al' → logprob: -4.576654434204102
    5. 'vale' → logprob: -5.326654434204102
    6. '[' → logprob: -6.076654434204102
    7. '_' → logprob: -6.201654434204102
    8. 'l' → logprob: -6.826654434204102
    9. '#' → logprob: -7.326654434204102
    10. 'le' → logprob: -7.576654434204102

Token 2117: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2536852359771729
    2. '[' → logprob: -1.7536852359771729
    3. 'i' → logprob: -1.8786852359771729
    4. '_' → logprob: -2.128685235977173
    5. '_i' → logprob: -2.378685235977173
    6. ' i' → logprob: -2.628685235977173
    7. ' [' → logprob: -3.128685235977173
    8. ' =' → logprob: -3.753685235977173
    9. ' _' → logprob: -4.128684997558594
    10. ' #' → logprob: -5.628684997558594

Token 2118: ' distance' (ID: 9324)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.9303948283195496
    2. 'i' → logprob: -1.3053948879241943
    3. 'length' → logprob: -2.0553948879241943
    4. 'distance' → logprob: -2.6803948879241943
    5. 'tail' → logprob: -3.6803948879241943
    6. 'S' → logprob: -3.9303948879241943
    7. ' longueur' → logprob: -4.555394649505615
    8. '[i' → logprob: -4.555394649505615
    9. '#' → logprob: -4.680394649505615
    10. 'stations' → logprob: -4.805394649505615

Token 2119: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2974773645401
    2. '[i' → logprob: -1.4224773645401
    3. ' =' → logprob: -2.0474772453308105
    4. 'i' → logprob: -2.6724772453308105
    5. '_length' → logprob: -2.6724772453308105
    6. '_i' → logprob: -2.6724772453308105
    7. ' _' → logprob: -3.1724772453308105
    8. '[' → logprob: -3.4224772453308105
    9. '=' → logprob: -3.9224772453308105
    10. ' i' → logprob: -4.1724772453308105

Token 2120: ',' (ID: 11)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.18012112379074097
    2. '_' → logprob: -1.9301211833953857
    3. ' =' → logprob: -4.555120944976807
    4. '[i' → logprob: -5.180120944976807
    5. '=' → logprob: -6.305120944976807
    6. 'i' → logprob: -8.305121421813965
    7. '[' → logprob: -9.055121421813965
    8. ',' → logprob: -9.180121421813965
    9. '\' → logprob: -9.180121421813965
    10. '_[' → logprob: -9.180121421813965

Token 2121: ' coup' (ID: 25465)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.2635165750980377
    2. ' segments' → logprob: -1.5135165452957153
    3. 'segment' → logprob: -6.263516426086426
    4. '   ' → logprob: -6.638516426086426
    5. ' on' → logprob: -7.013516426086426
    6. ' nombre' → logprob: -7.138516426086426
    7. ' segment' → logprob: -7.138516426086426
    8. ' num' → logprob: -7.263516426086426
    9. ' nb' → logprob: -7.388516426086426
    10. 'num' → logprob: -7.513516426086426

Token 2122: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.08643028885126114
    2. 'e' → logprob: -2.586430311203003
    3. 'ée' → logprob: -5.836430072784424
    4. '=' → logprob: -6.086430072784424
    5. 'er' → logprob: -7.086430072784424
    6. '_' → logprob: -8.461430549621582
    7. 'ure' → logprob: -8.711430549621582
    8. '#' → logprob: -8.836430549621582
    9. ')' → logprob: -9.336430549621582
    10. '   ' → logprob: -9.461430549621582

Token 2123: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.521013081073761
    2. ' en' → logprob: -1.0210130214691162
    3. '=' → logprob: -3.646013021469116
    4. 's' → logprob: -4.771013259887695
    5. ' =' → logprob: -5.896013259887695
    6. '_en' → logprob: -5.896013259887695
    7. '```' → logprob: -6.146013259887695
    8. '_' → logprob: -6.646013259887695
    9. '_s' → logprob: -7.771013259887695
    10. ' par' → logprob: -7.896013259887695

Token 2124: ' s' (ID: 265)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.013805564492940903
    2. ' segments' → logprob: -4.888805389404297
    3. 'x' → logprob: -6.138805389404297
    4. 'parts' → logprob: -6.763805389404297
    5. 'segment' → logprob: -7.263805389404297
    6. '`' → logprob: -8.888805389404297
    7. ' (' → logprob: -9.013805389404297
    8. 'nombre' → logprob: -9.013805389404297
    9. '(parts' → logprob: -9.138805389404297
    10. 'seg' → logprob: -9.138805389404297

Token 2125: ' segments' (ID: 33749)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.06656824797391891
    2. '_' → logprob: -2.81656813621521
    3. '_segments' → logprob: -6.191568374633789
    4. 'egs' → logprob: -6.566568374633789
    5. 'egment' → logprob: -7.941568374633789
    6. ' eg' → logprob: -9.191568374633789
    7. 'ég' → logprob: -9.441568374633789
    8. ' _' → logprob: -9.691568374633789
    9. '=' → logprob: -9.691568374633789
    10. ' =' → logprob: -10.066568374633789

Token 2126: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9273208975791931
    2. '=' → logprob: -1.302320957183838
    3. '_' → logprob: -2.052320957183838
    4. '_i' → logprob: -2.802320957183838
    5. '[i' → logprob: -2.927320957183838
    6. 's' → logprob: -4.302320957183838
    7. '[' → logprob: -4.302320957183838
    8. ':' → logprob: -4.427320957183838
    9. ',' → logprob: -4.677320957183838
    10. '   ' → logprob: -4.677320957183838

Token 2127: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.32813313603401184
    2. 's' → logprob: -1.7031331062316895
    3. ' =' → logprob: -3.4531331062316895
    4. '#' → logprob: -4.5781331062316895
    5. ' on' → logprob: -4.7031331062316895
    6. '   ' → logprob: -4.8281331062316895
    7. ',' → logprob: -5.0781331062316895
    8. ' #' → logprob: -5.4531331062316895
    9. ' ' → logprob: -5.5781331062316895
    10. 'segments' → logprob: -6.2031331062316895

Token 2128: ' temps' (ID: 11160)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.711693286895752
    2. ' segments' → logprob: -1.961693286895752
    3. '_' → logprob: -2.086693286895752
    4. '\n' → logprob: -2.711693286895752
    5. ')' → logprob: -2.961693286895752
    6. 'segments' → logprob: -3.086693286895752
    7. '+' → logprob: -3.211693286895752
    8. ' time' → logprob: -3.461693286895752
    9. ' )' → logprob: -3.586693286895752
    10. ' segment' → logprob: -3.586693286895752

Token 2129: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.966614305973053
    2. '=' → logprob: -1.5916142463684082
    3. ' minimal' → logprob: -1.8416142463684082
    4. '_par' → logprob: -3.091614246368408
    5. '_min' → logprob: -3.216614246368408
    6. ' par' → logprob: -4.091614246368408
    7. '*' → logprob: -4.091614246368408
    8. ' de' → logprob: -4.216614246368408
    9. '_max' → logprob: -4.466614246368408
    10. '_' → logprob: -4.466614246368408

Token 2130: ' travers' (ID: 26957)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.11577571928501129
    2. 'tr' → logprob: -2.4907758235931396
    3. ' parcour' → logprob: -3.9907758235931396
    4. 'faire' → logprob: -5.8657755851745605
    5. '   ' → logprob: -6.2407755851745605
    6. 'aller' → logprob: -7.1157755851745605
    7. ' travers' → logprob: -7.6157755851745605
    8. 'traj' → logprob: -8.115776062011719
    9. ' parc' → logprob: -8.740776062011719
    10. 'trav' → logprob: -8.740776062011719

Token 2131: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -9.984787902794778e-05
    2. 'ers' → logprob: -10.625100135803223
    3. 'e' → logprob: -10.875100135803223
    4. 'erse' → logprob: -11.250100135803223
    5. 'ser' → logprob: -11.750100135803223
    6. '=' → logprob: -11.875100135803223
    7. '   ' → logprob: -12.000100135803223
    8. 'errer' → logprob: -12.500100135803223
    9. 'erver' → logprob: -12.875100135803223
    10. 'erer' → logprob: -13.625100135803223

Token 2132: ' un' (ID: 537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.9074352979660034
    2. ' s' → logprob: -2.032435417175293
    3. ' ce' → logprob: -2.032435417175293
    4. '_' → logprob: -2.282435417175293
    5. ' ' → logprob: -2.282435417175293
    6. ' chaque' → logprob: -2.282435417175293
    7. ' le' → logprob: -2.657435417175293
    8. ' _' → logprob: -2.907435417175293
    9. 's' → logprob: -3.157435417175293
    10. ' l' → logprob: -3.907435417175293

Token 2133: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6495459079742432
    2. ' segment' → logprob: -0.8995459079742432
    3. 'interval' → logprob: -2.899545907974243
    4. ' interval' → logprob: -4.524545669555664
    5. ' ' → logprob: -6.274545669555664
    6. ' ' → logprob: -7.649545669555664
    7. ' ]' → logprob: -8.274545669555664
    8. ' s' → logprob: -8.399545669555664
    9. 'inter' → logprob: -8.399545669555664
    10. 's' → logprob: -8.524545669555664

Token 2134: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5479011535644531
    2. ' _' → logprob: -1.7979011535644531
    3. ' *' → logprob: -2.297901153564453
    4. ' est' → logprob: -2.547901153564453
    5. '_' → logprob: -4.047901153564453
    6. '=' → logprob: -4.547901153564453
    7. '*' → logprob: -4.672901153564453
    8. ' entre' → logprob: -4.672901153564453
    9. '_c' → logprob: -5.297901153564453
    10. ' ' → logprob: -5.297901153564453

Token 2135: ' ≤' (ID: 72554)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.5050557255744934
    2. ' d' → logprob: -1.5050556659698486
    3. 'C' → logprob: -1.8800556659698486
    4. 'd' → logprob: -4.130055904388428
    5. ' (' → logprob: -6.130055904388428
    6. ' segment' → logprob: -7.130055904388428
    7. ' ' → logprob: -7.380055904388428
    8. ' =' → logprob: -8.00505542755127
    9. 'segment' → logprob: -8.00505542755127
    10. '"' → logprob: -8.25505542755127

Token 2136: ' segment' (ID: 14806)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9567900896072388
    2. 'C' → logprob: -1.4567900896072388
    3. ' (' → logprob: -1.7067900896072388
    4. '(d' → logprob: -2.581789970397949
    5. ' d' → logprob: -2.706789970397949
    6. '(C' → logprob: -3.956789970397949
    7. ' C' → logprob: -4.081789970397949
    8. '   ' → logprob: -5.206789970397949
    9. '(' → logprob: -5.206789970397949
    10. '((' → logprob: -5.581789970397949

Token 2137: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5783674716949463
    2. '_' → logprob: -0.8283674716949463
    3. ' _' → logprob: -7.203367233276367
    4. '_lengths' → logprob: -7.828367233276367
    5. '_len' → logprob: -8.203367233276367
    6. '_size' → logprob: -8.703367233276367
    7. '_distance' → logprob: -9.578367233276367
    8. '_\' → logprob: -9.578367233276367
    9. ''_' → logprob: -9.578367233276367
    10. ')' → logprob: -9.578367233276367

Token 2138: ' *' (ID: 425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6980563998222351
    2. '[' → logprob: -1.3230564594268799
    3. '```' → logprob: -2.82305645942688
    4. ':' → logprob: -3.07305645942688
    5. '[i' → logprob: -3.19805645942688
    6. '[
' → logprob: -3.69805645942688
    7. ')' → logprob: -4.323056221008301
    8. '=' → logprob: -4.948056221008301
    9. '   ' → logprob: -5.198056221008301
    10. '_
' → logprob: -5.448056221008301

Token 2139: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.02632351778447628
    2. ' C' → logprob: -3.6513235569000244
    3. ''' → logprob: -11.651323318481445
    4. ' ' → logprob: -12.901323318481445
    5. ''C' → logprob: -13.151323318481445
    6. '`' → logprob: -13.276323318481445
    7. ' '' → logprob: -13.276323318481445
    8. ' ' → logprob: -13.651323318481445
    9. '_C' → logprob: -13.776323318481445
    10. ')' → logprob: -14.026323318481445

Token 2140: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38650622963905334
    2. '[' → logprob: -1.511506199836731
    3. ')' → logprob: -3.5115063190460205
    4. 'def' → logprob: -3.8865063190460205
    5. '   ' → logprob: -4.511506080627441
    6. '[i' → logprob: -4.886506080627441
    7. ',' → logprob: -5.386506080627441
    8. ']' → logprob: -5.511506080627441
    9. '=' → logprob: -5.761506080627441
    10. ' ' → logprob: -6.011506080627441

Token 2141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023977011442184448
    2. ')' → logprob: -5.148976802825928
    3. ':' → logprob: -5.773976802825928
    4. 'def' → logprob: -6.148976802825928
    5. ',' → logprob: -6.273976802825928
    6. '
' → logprob: -6.523976802825928
    7. '.' → logprob: -6.523976802825928
    8. ']' → logprob: -6.648976802825928
    9. '    
' → logprob: -6.648976802825928
    10. '#' → logprob: -6.898976802825928

Token 2142: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2038927525281906
    2. ':' → logprob: -2.203892707824707
    3. ')' → logprob: -3.203892707824707
    4. ':
' → logprob: -5.203892707824707
    5. ',' → logprob: -5.328892707824707
    6. '\n' → logprob: -5.453892707824707
    7. '=' → logprob: -5.953892707824707
    8. '.' → logprob: -5.953892707824707
    9. '):' → logprob: -6.328892707824707
    10. '#' (adapté à ' #') → logprob: -6.453892707824707

Token 2143: ' On' (ID: 2160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2504660189151764
    2. 'def' → logprob: -2.2504661083221436
    3. '   ' → logprob: -2.5004661083221436
    4. '[' → logprob: -4.2504658699035645
    5. '0' → logprob: -5.0004658699035645
    6. '[i' → logprob: -6.1254658699035645
    7. ':
' → logprob: -6.5004658699035645
    8. ' =' → logprob: -6.6254658699035645
    9. ' ' → logprob: -6.8754658699035645
    10. ' def' → logprob: -6.8754658699035645

Token 2144: ' veut' (ID: 41653)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5725528001785278
    2. 'def' → logprob: -1.9475528001785278
    3. 'continue' → logprob: -2.8225526809692383
    4. ' =' → logprob: -2.8225526809692383
    5. 's' → logprob: -3.8225526809692383
    6. '_' → logprob: -4.197552680969238
    7. 'do' → logprob: -4.322552680969238
    8. '#' → logprob: -4.822552680969238
    9. 'n' → logprob: -4.822552680969238
    10. '=
' → logprob: -4.822552680969238

Token 2145: ' minim' (ID: 23874)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.1609545648097992
    2. 'min' → logprob: -3.160954475402832
    3. ' calcul' → logprob: -3.910954475402832
    4. 'contin' → logprob: -4.285954475402832
    5. 'faire' → logprob: -4.785954475402832
    6. 'max' → logprob: -5.035954475402832
    7. 'tester' → logprob: -5.035954475402832
    8. 'cho' → logprob: -5.160954475402832
    9. 'coder' → logprob: -5.410954475402832
    10. 'don' → logprob: -5.535954475402832

Token 2146: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.3315310478210449
    2. 'ser' → logprob: -2.331531047821045
    3. 'um' → logprob: -2.956531047821045
    4. 'er' → logprob: -3.331531047821045
    5. 'ze' → logprob: -3.706531047821045
    6. '#' → logprob: -3.956531047821045
    7. '```' → logprob: -4.581531047821045
    8. 'zer' → logprob: -5.206531047821045
    9. '=' → logprob: -5.206531047821045
    10. 'm' → logprob: -5.331531047821045

Token 2147: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.877269446849823
    2. ' le' → logprob: -0.877269446849823
    3. '_' → logprob: -2.3772695064544678
    4. ' _' → logprob: -4.127269268035889
    5. 'les' → logprob: -4.252269268035889
    6. '_le' → logprob: -4.252269268035889
    7. 'l' → logprob: -4.877269268035889
    8. ' les' → logprob: -5.002269268035889
    9. ' ' → logprob: -5.377269268035889
    10. 'temps' → logprob: -6.377269268035889

Token 2148: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.002552242483943701
    2. 'dp' → logprob: -7.127552032470703
    3. ' temps' → logprob: -7.502552032470703
    4. 'time' → logprob: -7.877552032470703
    5. 'cout' → logprob: -8.377552032470703
    6. 'temp' → logprob: -8.752552032470703
    7. 'tem' → logprob: -8.752552032470703
    8. 'nombre' → logprob: -8.877552032470703
    9. 'total' → logprob: -10.627552032470703
    10. 'tempo' → logprob: -11.002552032470703

Token 2149: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7473915219306946
    2. ']' → logprob: -1.7473914623260498
    3. '[' → logprob: -2.24739146232605
    4. '_' → logprob: -2.99739146232605
    5. '[i' → logprob: -3.12239146232605
    6. 'def' → logprob: -3.24739146232605
    7. ')' → logprob: -3.49739146232605
    8. '=' → logprob: -3.87239146232605
    9. ' =' → logprob: -4.247391700744629
    10. ':' → logprob: -4.622391700744629

Token 2150: ' arriver' (ID: 78302)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.18171657621860504
    2. 'aller' → logprob: -2.6817166805267334
    3. 're' → logprob: -3.4317166805267334
    4. 'i' → logprob: -3.6817166805267334
    5. 'arr' → logprob: -4.181716442108154
    6. 'tr' → logprob: -4.681716442108154
    7. ' atteindre' → logprob: -5.681716442108154
    8. 'acc' → logprob: -6.431716442108154
    9. 'par' → logprob: -6.556716442108154
    10. 'reach' → logprob: -6.931716442108154

Token 2151: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24416173994541168
    2. 'à' → logprob: -2.61916184425354
    3. ' à' → logprob: -3.24416184425354
    4. '[' → logprob: -3.61916184425354
    5. ')' → logprob: -3.74416184425354
    6. '=' → logprob: -3.99416184425354
    7. ' ' → logprob: -5.119161605834961
    8. ']' → logprob: -5.619161605834961
    9. '[i' → logprob: -5.619161605834961
    10. ' _' → logprob: -5.619161605834961

Token 2152: ' une' (ID: 2463)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.18774005770683289
    2. ' S' → logprob: -2.9377400875091553
    3. 'la' → logprob: -2.9377400875091553
    4. 'station' → logprob: -3.4377400875091553
    5. ' la' → logprob: -3.8127400875091553
    6. ' station' → logprob: -5.437739849090576
    7. 'une' → logprob: -6.312739849090576
    8. 'l' → logprob: -6.562739849090576
    9. ' ' → logprob: -7.312739849090576
    10. 'i' → logprob: -7.812739849090576

Token 2153: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.11508724838495255
    2. ' station' → logprob: -2.4900872707366943
    3. 'i' → logprob: -5.240087032318115
    4. '_' → logprob: -5.740087032318115
    5. '_station' → logprob: -6.240087032318115
    6. ')' → logprob: -6.365087032318115
    7. ' i' → logprob: -6.365087032318115
    8. '[i' → logprob: -6.615087032318115
    9. ']' → logprob: -6.615087032318115
    10. 'segment' → logprob: -6.740087032318115

Token 2154: ' x' (ID: 1215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2723730802536011
    2. '_' → logprob: -2.3973731994628906
    3. ')' → logprob: -3.2723731994628906
    4. 'def' → logprob: -3.6473731994628906
    5. ' ' → logprob: -4.022373199462891
    6. '   ' → logprob: -4.022373199462891
    7. ':' → logprob: -4.272373199462891
    8. '[
' → logprob: -4.272373199462891
    9. ']' → logprob: -5.147373199462891
    10. '[i' → logprob: -5.647373199462891

Token 2155: ' ≤' (ID: 72554)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7404193878173828
    2. '[' → logprob: -1.3654193878173828
    3. ')' → logprob: -2.740419387817383
    4. 'def' → logprob: -2.740419387817383
    5. '   ' → logprob: -2.740419387817383
    6. '_' → logprob: -3.240419387817383
    7. '):' → logprob: -4.740419387817383
    8. ']' → logprob: -5.365419387817383
    9. ' ' → logprob: -5.490419387817383
    10. ' :' → logprob: -5.615419387817383

Token 2156: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.5760502219200134
    2. ' station' → logprob: -0.8260502219200134
    3. ' ' → logprob: -9.9510498046875
    4. '```' → logprob: -10.8260498046875
    5. ' ' → logprob: -11.9510498046875
    6. 'st' → logprob: -11.9510498046875
    7. '`' → logprob: -12.3260498046875
    8. ' T' → logprob: -12.8260498046875
    9. 'space' → logprob: -12.8260498046875
    10. 'T' → logprob: -12.8260498046875

Token 2157: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.3686913847923279
    2. '_' → logprob: -1.2436914443969727
    3. ']' → logprob: -5.493691444396973
    4. '_
' → logprob: -5.868691444396973
    5. ')' → logprob: -5.993691444396973
    6. '[' → logprob: -6.368691444396973
    7. ''_' → logprob: -6.868691444396973
    8. '_limits' → logprob: -6.993691444396973
    9. '```' → logprob: -6.993691444396973
    10. ']_' → logprob: -6.993691444396973

Token 2158: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015955770388245583
    2. '[' → logprob: -4.890955924987793
    3. '(' → logprob: -5.265955924987793
    4. 'def' → logprob: -6.640955924987793
    5. '   ' → logprob: -7.515955924987793
    6. ':
' → logprob: -8.515955924987793
    7. '):' → logprob: -8.765955924987793
    8. '(
' → logprob: -9.390955924987793
    9. '```' → logprob: -9.515955924987793
    10. '.' → logprob: -9.765955924987793

Token 2159: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29849910736083984
    2. '   ' → logprob: -1.5484991073608398
    3. 'def' → logprob: -3.54849910736084
    4. '):' → logprob: -4.67349910736084
    5. ')' → logprob: -6.29849910736084
    6. ':
' → logprob: -6.54849910736084
    7. ' :' → logprob: -6.79849910736084
    8. '[' → logprob: -6.92349910736084
    9. ' def' → logprob: -7.67349910736084
    10. '```' → logprob: -8.29849910736084

Token 2160: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029608149081468582
    2. 'dp' → logprob: -3.6546082496643066
    3. ':' → logprob: -7.279608249664307
    4. 'if' → logprob: -7.529608249664307
    5. 'def' → logprob: -7.654608249664307
    6. '
' → logprob: -7.904608249664307
    7. '#' (adapté à ' #') → logprob: -8.404607772827148
    8. '    
' → logprob: -8.529607772827148
    9. ':
' → logprob: -8.904607772827148
    10. 'i' → logprob: -9.404607772827148

Token 2161: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6701667308807373
    2. ':' → logprob: -0.7951667308807373
    3. 'def' → logprob: -4.170166969299316
    4. '[' → logprob: -4.795166969299316
    5. ':
' → logprob: -5.795166969299316
    6. '):' → logprob: -6.420166969299316
    7. 'dp' → logprob: -6.545166969299316
    8. '[i' → logprob: -6.670166969299316
    9. ' :' → logprob: -7.295166969299316
    10. ']:' → logprob: -7.420166969299316

Token 2162: ' va' (ID: 3423)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7228654623031616
    2. 'continue' → logprob: -1.9728654623031616
    3. 'contin' → logprob: -2.972865581512451
    4. '[
' → logprob: -3.097865581512451
    5. '_' → logprob: -3.222865581512451
    6. ' continue' → logprob: -3.597865581512451
    7. '[' → logprob: -3.597865581512451
    8. '_continue' → logprob: -3.722865581512451
    9. '=' → logprob: -4.597865581512451
    10. 'for' → logprob: -4.597865581512451

Token 2163: ' approx' (ID: 33956)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.10373423248529434
    2. ' continuer' → logprob: -3.353734254837036
    3. 'calcul' → logprob: -3.603734254837036
    4. 'initial' → logprob: -4.478734016418457
    5. 'faire' → logprob: -5.603734016418457
    6. 'util' → logprob: -6.103734016418457
    7. 'continue' → logprob: -6.103734016418457
    8. 'return' → logprob: -6.228734016418457
    9. 'def' → logprob: -6.353734016418457
    10. '   ' → logprob: -6.353734016418457

Token 2164: 'imer' (ID: 3747)
  Prédit: 'imer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imer' → logprob: -0.00679186312481761
    2. 'im' → logprob: -7.506792068481445
    3. 'mer' → logprob: -7.506792068481445
    4. ')' → logprob: -7.631792068481445
    5. 'cher' → logprob: -7.631792068481445
    6. '_' → logprob: -7.631792068481445
    7. '#' → logprob: -7.756792068481445
    8. '\' → logprob: -8.006792068481445
    9. '   ' → logprob: -8.131792068481445
    10. 'i' → logprob: -8.506792068481445

Token 2165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5779435634613037
    2. '[' → logprob: -1.8279435634613037
    3. '   ' → logprob: -2.0779435634613037
    4. 'def' → logprob: -2.2029435634613037
    5. ')' → logprob: -4.452943801879883
    6. '(' → logprob: -4.702943801879883
    7. ']' → logprob: -5.702943801879883
    8. ' def' → logprob: -6.077943801879883
    9. '_' → logprob: -6.202943801879883
    10. ' ' → logprob: -6.452943801879883

Token 2166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17047224938869476
    2. 'def' → logprob: -3.0454721450805664
    3. ')' → logprob: -3.5454721450805664
    4. '    ' → logprob: -3.6704721450805664
    5. '[' → logprob: -4.170472145080566
    6. '#' → logprob: -4.920472145080566
    7. ':' → logprob: -4.920472145080566
    8. ' ' → logprob: -5.795472145080566
    9. '[
' → logprob: -5.920472145080566
    10. '       ' → logprob: -6.420472145080566

Token 2167: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03543221578001976
    2. 'def' → logprob: -4.1604323387146
    3. ')' → logprob: -5.6604323387146
    4. 'for' → logprob: -6.0354323387146
    5. '
' → logprob: -6.4104323387146
    6. '#' (adapté à ' #') → logprob: -6.6604323387146
    7. ' for' → logprob: -6.6604323387146
    8. '[' → logprob: -6.7854323387146
    9. ' ' → logprob: -7.1604323387146
    10. 'x' → logprob: -7.1604323387146

Token 2168: ' Dans' (ID: 22082)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16346301138401031
    2. 'def' → logprob: -2.2884631156921387
    3. '
' → logprob: -4.663463115692139
    4. ')' → logprob: -5.038463115692139
    5. '[' → logprob: -5.538463115692139
    6. '#' → logprob: -5.663463115692139
    7. 'for' → logprob: -5.788463115692139
    8. ' ' → logprob: -6.288463115692139
    9. ' for' → logprob: -6.288463115692139
    10. '[
' → logprob: -6.413463115692139

Token 2169: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8549663424491882
    2. ' chaque' → logprob: -1.854966402053833
    3. 'def' → logprob: -2.354966402053833
    4. ' range' → logprob: -2.604966402053833
    5. ' la' → logprob: -3.104966402053833
    6. '#' → logprob: -3.479966402053833
    7. 'la' → logprob: -3.604966402053833
    8. 'l' → logprob: -3.979966402053833
    9. ' each' → logprob: -3.979966402053833
    10. 'each' → logprob: -3.979966402053833

Token 2170: '’' (ID: 438)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4827250242233276
    2. 'def' → logprob: -1.6077250242233276
    3. '
' → logprob: -2.357725143432617
    4. ']' → logprob: -2.857725143432617
    5. '[
' → logprob: -2.857725143432617
    6. '[' → logprob: -3.232725143432617
    7. ''' → logprob: -3.357725143432617
    8. 'range' → logprob: -3.607725143432617
    9. ' def' → logprob: -3.732725143432617
    10. '`' → logprob: -3.732725143432617

Token 2171: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.12048616260290146
    2. '#' → logprob: -3.745486259460449
    3. 'range' → logprob: -4.245486259460449
    4. 'def' → logprob: -4.995486259460449
    5. 'if' → logprob: -4.995486259460449
    6. 'inter' → logprob: -4.995486259460449
    7. 'ter' → logprob: -5.370486259460449
    8. '
' → logprob: -5.370486259460449
    9. 'e' → logprob: -5.495486259460449
    10. 'i' → logprob: -5.495486259460449

Token 2172: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.58148592710495
    2. 'val' → logprob: -1.3314859867095947
    3. 'le' → logprob: -2.0814859867095947
    4. 'aire' → logprob: -3.8314859867095947
    5. 'v' → logprob: -4.081485748291016
    6. ']' → logprob: -5.081485748291016
    7. 'al' → logprob: -6.081485748291016
    8. 'é' → logprob: -6.581485748291016
    9. 'ale' → logprob: -7.581485748291016
    10. ')' → logprob: -7.831485748291016

Token 2173: ' on' (ID: 402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47391727566719055
    2. '_' → logprob: -1.4739172458648682
    3. '[i' → logprob: -2.973917245864868
    4. ' =' → logprob: -3.973917245864868
    5. ' ' → logprob: -4.223917484283447
    6. ' [' → logprob: -4.473917484283447
    7. '[
' → logprob: -4.473917484283447
    8. ' _' → logprob: -4.973917484283447
    9. ':' → logprob: -5.098917484283447
    10. ')' → logprob: -5.848917484283447

Token 2174: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8650325536727905
    2. '_' → logprob: -1.4900325536727905
    3. ' vais' → logprob: -2.86503267288208
    4. ' va' → logprob: -2.86503267288208
    5. 'continue' → logprob: -2.86503267288208
    6. 'vais' → logprob: -3.74003267288208
    7. 'contin' → logprob: -3.86503267288208
    8. '_continue' → logprob: -3.99003267288208
    9. ' peux' → logprob: -4.11503267288208
    10. 's' → logprob: -4.24003267288208

Token 2175: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.556058943271637
    2. '#' → logprob: -2.306058883666992
    3. 'va' → logprob: -2.306058883666992
    4. 'vais' → logprob: -2.556058883666992
    5. 's' → logprob: -3.681058883666992
    6. 'cho' → logprob: -3.931058883666992
    7. 'pas' → logprob: -4.056058883666992
    8. 'aj' → logprob: -4.181058883666992
    9. 'veux' → logprob: -4.681058883666992
    10. 'pour' → logprob: -4.931058883666992

Token 2176: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6774177551269531
    2. ' pas' → logprob: -0.8024177551269531
    3. '#' → logprob: -3.802417755126953
    4. ' choisir' → logprob: -5.302417755126953
    5. ' #' → logprob: -6.802417755126953
    6. 'a' → logprob: -6.802417755126953
    7. '_pas' → logprob: -6.927417755126953
    8. 's' → logprob: -7.177417755126953
    9. ''utiliser' → logprob: -7.302417755126953
    10. 'aj' → logprob: -7.302417755126953

Token 2177: ' disting' (ID: 68664)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.6605403423309326
    2. 'aj' → logprob: -1.9105403423309326
    3. 'contin' → logprob: -2.0355403423309326
    4. 'cho' → logprob: -2.5355403423309326
    5. ' choisir' → logprob: -2.9105403423309326
    6. 'avoir' → logprob: -3.0355403423309326
    7. '#' → logprob: -3.4105403423309326
    8. 'prendre' → logprob: -3.7855403423309326
    9. 'faire' → logprob: -3.7855403423309326
    10. 's' → logprob: -4.160540580749512

Token 2178: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.2765369713306427
    2. 'u' → logprob: -2.0265369415283203
    3. 'er' → logprob: -3.4015369415283203
    4. '_' → logprob: -3.9015369415283203
    5. 'uire' → logprob: -4.02653694152832
    6. 'ue' → logprob: -4.15153694152832
    7. '\' → logprob: -5.52653694152832
    8. 'uis' → logprob: -6.15153694152832
    9. 't' → logprob: -6.77653694152832
    10. '#' → logprob: -7.02653694152832

Token 2179: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5422421097755432
    2. '```' → logprob: -2.7922420501708984
    3. '[' → logprob: -3.0422420501708984
    4. ' _' → logprob: -3.1672420501708984
    5. ':' → logprob: -3.2922420501708984
    6. ''' → logprob: -3.2922420501708984
    7. ' ' → logprob: -3.5422420501708984
    8. 's' → logprob: -3.5422420501708984
    9. ',' → logprob: -3.6672420501708984
    10. '\' → logprob: -4.667242050170898

Token 2180: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.2756924629211426
    2. 'distance' → logprob: -1.6506924629211426
    3. 'station' → logprob: -3.1506924629211426
    4. 'poss' → logprob: -3.4006924629211426
    5. ' même' → logprob: -3.5256924629211426
    6. 'place' → logprob: -3.5256924629211426
    7. 'partition' → logprob: -3.5256924629211426
    8. ' ' → logprob: -4.025692462921143
    9. 's' → logprob: -4.400692462921143
    10. 'd' → logprob: -4.400692462921143

Token 2181: ' exacte' (ID: 188756)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1875360012054443
    2. '_' → logprob: -1.1875360012054443
    3. ' ' → logprob: -1.9375360012054443
    4. ')' → logprob: -2.6875360012054443
    5. '   ' → logprob: -2.6875360012054443
    6. 'def' → logprob: -4.062536239624023
    7. ':' → logprob: -4.187536239624023
    8. ''' → logprob: -4.937536239624023
    9. '  ' → logprob: -5.187536239624023
    10. ']' → logprob: -5.312536239624023

Token 2182: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7753910422325134
    2. ':' → logprob: -1.7753911018371582
    3. '_' → logprob: -2.275391101837158
    4. '   ' → logprob: -2.650391101837158
    5. '```' → logprob: -3.025391101837158
    6. ' ' → logprob: -3.275391101837158
    7. ')' → logprob: -3.400391101837158
    8. 'def' → logprob: -4.775391101837158
    9. ''' → logprob: -4.900391101837158
    10. '[i' → logprob: -5.025391101837158

Token 2183: ' station' (ID: 11538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3524695336818695
    2. ' l' → logprob: -1.602469563484192
    3. 'arr' → logprob: -3.6024694442749023
    4. 'la' → logprob: -4.227469444274902
    5. 'station' → logprob: -4.602469444274902
    6. 's' → logprob: -5.102469444274902
    7. ' station' → logprob: -5.227469444274902
    8. ' la' → logprob: -5.352469444274902
    9. ' S' → logprob: -5.727469444274902
    10. ' ' → logprob: -5.852469444274902

Token 2184: '_limit' (ID: 34361)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34270790219306946
    2. '_' → logprob: -1.717707872390747
    3. ')' → logprob: -3.717707872390747
    4. '```' → logprob: -4.092708110809326
    5. '   ' → logprob: -4.217708110809326
    6. 'def' → logprob: -4.217708110809326
    7. ''' → logprob: -4.842708110809326
    8. ':' → logprob: -5.092708110809326
    9. '[
' → logprob: -5.342708110809326
    10. ']' → logprob: -6.092708110809326

Token 2185: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09785184264183044
    2. '[' → logprob: -3.4728517532348633
    3. '   ' → logprob: -4.347851753234863
    4. ')' → logprob: -4.722851753234863
    5. 'def' → logprob: -4.722851753234863
    6. '):' → logprob: -5.097851753234863
    7. '(' → logprob: -5.597851753234863
    8. ':
' → logprob: -5.847851753234863
    9. '[
' → logprob: -6.097851753234863
    10. ''' → logprob: -6.097851753234863

Token 2186: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17275036871433258
    2. '   ' → logprob: -2.547750473022461
    3. 'def' → logprob: -3.297750473022461
    4. '):' → logprob: -3.797750473022461
    5. ':
' → logprob: -5.422750473022461
    6. '[' → logprob: -5.422750473022461
    7. ')' → logprob: -5.797750473022461
    8. ' :' → logprob: -6.172750473022461
    9. ' def' → logprob: -6.547750473022461
    10. ']:' → logprob: -7.047750473022461

Token 2187: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7456737160682678
    2. '   ' → logprob: -0.7456737160682678
    3. '):' → logprob: -4.120673656463623
    4. ':
' → logprob: -4.370673656463623
    5. ')' → logprob: -4.745673656463623
    6. 'def' → logprob: -5.870673656463623
    7. '```' → logprob: -6.370673656463623
    8. '[' → logprob: -6.620673656463623
    9. '
' → logprob: -6.620673656463623
    10. '):
' → logprob: -6.870673656463623

Token 2188: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3509640395641327
    2. ':' → logprob: -1.600964069366455
    3. 'def' → logprob: -2.850964069366455
    4. '[' → logprob: -4.725964069366455
    5. ':
' → logprob: -5.100964069366455
    6. '):' → logprob: -5.475964069366455
    7. ')' → logprob: -5.475964069366455
    8. ']' → logprob: -6.100964069366455
    9. '[i' → logprob: -6.100964069366455
    10. '[
' → logprob: -6.600964069366455

Token 2189: ' ajoute' (ID: 91611)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45950832962989807
    2. '_' → logprob: -1.9595082998275757
    3. 'def' → logprob: -2.8345084190368652
    4. '=' → logprob: -2.9595084190368652
    5. ']' → logprob: -3.4595084190368652
    6. ' =' → logprob: -3.7095084190368652
    7. '#' → logprob: -4.584508419036865
    8. 'n' → logprob: -4.834508419036865
    9. ')' → logprob: -5.209508419036865
    10. ' def' → logprob: -5.584508419036865

Token 2190: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5572973489761353
    2. 'def' → logprob: -2.0572972297668457
    3. 'un' → logprob: -2.6822972297668457
    4. ' un' → logprob: -2.8072972297668457
    5. 'une' → logprob: -3.1822972297668457
    6. ' une' → logprob: -3.6822972297668457
    7. 'for' → logprob: -4.182297229766846
    8. '   ' → logprob: -4.557297229766846
    9. 'le' → logprob: -4.932297229766846
    10. ':
' → logprob: -4.932297229766846

Token 2191: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6972964406013489
    2. 'range' → logprob: -2.072296380996704
    3. '   ' → logprob: -2.447296380996704
    4. 'la' → logprob: -2.822296380996704
    5. ' la' → logprob: -3.072296380996704
    6. 'S' → logprob: -3.822296380996704
    7. ' dp' → logprob: -3.822296380996704
    8. 'le' → logprob: -4.072296619415283
    9. 'def' → logprob: -4.072296619415283
    10. ' range' → logprob: -4.197296619415283

Token 2192: ' dernier' (ID: 27982)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5233705043792725
    2. 'def' → logprob: -2.3983705043792725
    3. 'for' → logprob: -2.3983705043792725
    4. 'code' → logprob: -2.5233705043792725
    5. 'return' → logprob: -3.1483705043792725
    6. 'interval' → logprob: -3.1483705043792725
    7. '```' → logprob: -4.523370742797852
    8. 'can' → logprob: -4.773370742797852
    9. 'range' → logprob: -5.148370742797852
    10. 'segment' → logprob: -5.398370742797852

Token 2193: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.225096583366394
    2. ' _' → logprob: -1.850096583366394
    3. '_' → logprob: -1.975096583366394
    4. '_interval' → logprob: -2.3500967025756836
    5. '_inter' → logprob: -2.8500967025756836
    6. '_token' → logprob: -2.9750967025756836
    7. ']' → logprob: -3.3500967025756836
    8. ' interval' → logprob: -3.3500967025756836
    9. 'segment' → logprob: -4.100096702575684
    10. '`' → logprob: -4.350096702575684

Token 2194: 'le' (ID: 282)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7053213119506836
    2. 'val' → logprob: -1.9553213119506836
    3. 'v' → logprob: -2.3303213119506836
    4. 'aire' → logprob: -2.8303213119506836
    5. '[' → logprob: -3.3303213119506836
    6. '_' → logprob: -3.7053213119506836
    7. '#' → logprob: -3.8303213119506836
    8. 'r' → logprob: -3.9553213119506836
    9. 'e' → logprob: -4.080321311950684
    10. 'n' → logprob: -4.580321311950684

Token 2195: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6170576214790344
    2. '[' → logprob: -1.6170575618743896
    3. '[i' → logprob: -2.3670575618743896
    4. ':' → logprob: -3.3670575618743896
    5. ' _' → logprob: -3.6170575618743896
    6. '_in' → logprob: -4.242057800292969
    7. '```' → logprob: -4.242057800292969
    8. '   ' → logprob: -4.367057800292969
    9. ']' → logprob: -4.742057800292969
    10. '[
' → logprob: -5.117057800292969

Token 2196: ' calcul' (ID: 7559)
  Prédit: ' station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' station' → logprob: -0.33998847007751465
    2. ' +' → logprob: -2.9649884700775146
    3. 'station' → logprob: -2.9649884700775146
    4. ' possible' → logprob: -3.2149884700775146
    5. 'possible' → logprob: -3.2149884700775146
    6. 'poss' → logprob: -3.9649884700775146
    7. ' max' → logprob: -4.214988708496094
    8. ' possibility' → logprob: -4.339988708496094
    9. 'max' → logprob: -5.214988708496094
    10. ' possibilité' → logprob: -5.714988708496094

Token 2197: ' spécial' (ID: 40397)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.866624116897583
    2. 'def' → logprob: -1.866624116897583
    3. '   ' → logprob: -2.116624116897583
    4. '_' → logprob: -2.491624116897583
    5. ' de' → logprob: -2.741624116897583
    6. ' complet' → logprob: -2.866624116897583
    7. ':' → logprob: -2.991624116897583
    8. 's' → logprob: -3.241624116897583
    9. ' def' → logprob: -3.366624116897583
    10. '```' → logprob: -3.366624116897583

Token 2198: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3430194854736328
    2. '   ' → logprob: -1.9680194854736328
    3. '[' → logprob: -2.343019485473633
    4. 'def' → logprob: -4.093019485473633
    5. '[i' → logprob: -4.343019485473633
    6. ' :' → logprob: -4.843019485473633
    7. ')' → logprob: -5.593019485473633
    8. '):' → logprob: -5.843019485473633
    9. ']' → logprob: -6.718019485473633
    10. ',' → logprob: -6.843019485473633

Token 2199: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031129105016589165
    2. ':' → logprob: -4.531128883361816
    3. ' =' → logprob: -5.906128883361816
    4. 'def' → logprob: -6.031128883361816
    5. ' :' → logprob: -6.031128883361816
    6. '       ' → logprob: -6.406128883361816
    7. ')' → logprob: -6.531128883361816
    8. '):' → logprob: -6.531128883361816
    9. '\t' → logprob: -6.906128883361816
    10. ' ' → logprob: -7.406128883361816

Token 2200: ' station' (ID: 11538)
  Prédit: ' station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' station' → logprob: -0.4795152246952057
    2. 'station' → logprob: -0.9795151948928833
    3. ' la' → logprob: -6.479515075683594
    4. 'la' → logprob: -7.229515075683594
    5. 'x' → logprob: -7.729515075683594
    6. ' S' → logprob: -7.729515075683594
    7. ' ' → logprob: -7.854515075683594
    8. 'le' → logprob: -7.979515075683594
    9. '   ' → logprob: -8.479515075683594
    10. ' ' → logprob: -8.479515075683594

Token 2201: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.019806336611509323
    2. '_' → logprob: -4.019806385040283
    3. '_lim' → logprob: -7.019806385040283
    4. '_limits' → logprob: -8.644805908203125
    5. ')_' → logprob: -9.144805908203125
    6. ')' → logprob: -9.644805908203125
    7. ''_' → logprob: -9.769805908203125
    8. '```' → logprob: -9.894805908203125
    9. '_l' → logprob: -10.144805908203125
    10. '_i' → logprob: -10.269805908203125

Token 2202: ' peut' (ID: 9216)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2645587921142578
    2. ':' → logprob: -1.5145587921142578
    3. '[' → logprob: -1.6395587921142578
    4. ')' → logprob: -2.514558792114258
    5. '[i' → logprob: -3.014558792114258
    6. 'def' → logprob: -3.264558792114258
    7. '=' → logprob: -3.639558792114258
    8. ']' → logprob: -3.889558792114258
    9. ' =' → logprob: -4.014558792114258
    10. '```' → logprob: -4.264558792114258

Token 2203: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.49032267928123474
    2. 'être' → logprob: -1.3653227090835571
    3. ' se' → logprob: -2.1153225898742676
    4. '_' → logprob: -5.990322589874268
    5. '-être' → logprob: -6.365322589874268
    6. ' <' → logprob: -6.615322589874268
    7. ' ne' → logprob: -6.865322589874268
    8. ' ' → logprob: -7.365322589874268
    9. 'êtres' → logprob: -7.615322589874268
    10. ' be' → logprob: -7.865322589874268

Token 2204: ' à' (ID: 1221)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.15036633610725403
    2. 'strict' → logprob: -3.1503663063049316
    3. '<' → logprob: -3.2753663063049316
    4. 'avant' → logprob: -3.4003663063049316
    5. '<=' → logprob: -5.275366306304932
    6. 'inf' → logprob: -5.400366306304932
    7. 'situ' → logprob: -6.025366306304932
    8. '```' → logprob: -6.275366306304932
    9. '==' → logprob: -6.525366306304932
    10. 'exact' → logprob: -6.650366306304932

Token 2205: ' l' (ID: 305)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.936465859413147
    2. 'une' → logprob: -1.061465859413147
    3. 'l' → logprob: -1.561465859413147
    4. 'n' → logprob: -4.061465740203857
    5. 'distance' → logprob: -4.936465740203857
    6. ' une' → logprob: -5.311465740203857
    7. '
' → logprob: -5.686465740203857
    8. ' l' → logprob: -5.686465740203857
    9. 'moins' → logprob: -5.686465740203857
    10. ' S' → logprob: -5.811465740203857

Token 2206: '’intérieur' (ID: 98275)
  Prédit: ''intérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''intérieur' → logprob: -0.012303962372243404
    2. 'a' → logprob: -5.137303829193115
    3. ''inter' → logprob: -6.012303829193115
    4. ''extérieur' → logprob: -6.762303829193115
    5. '’intérieur' → logprob: -7.262303829193115
    6. 'inter' → logprob: -7.387303829193115
    7. 'imité' → logprob: -7.887303829193115
    8. ''int' → logprob: -8.387304306030273
    9. 'int' → logprob: -8.762304306030273
    10. 'é' → logprob: -9.137304306030273

Token 2207: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22121798992156982
    2. '[i' → logprob: -3.0962181091308594
    3. 'def' → logprob: -3.3462181091308594
    4. '[' → logprob: -3.4712181091308594
    5. '   ' → logprob: -3.5962181091308594
    6. ':
' → logprob: -4.221218109130859
    7. '):' → logprob: -4.596218109130859
    8. ')' → logprob: -4.971218109130859
    9. '[
' → logprob: -5.221218109130859
    10. ' =' → logprob: -5.346218109130859

Token 2208: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5386764407157898
    2. '   ' → logprob: -1.2886765003204346
    3. ':
' → logprob: -2.0386765003204346
    4. '):' → logprob: -5.4136762619018555
    5. 'def' → logprob: -6.5386762619018555
    6. '[' → logprob: -6.7886762619018555
    7. ')' → logprob: -7.0386762619018555
    8. '":' → logprob: -7.9136762619018555
    9. ' :' → logprob: -8.038676261901855
    10. '
' → logprob: -8.288676261901855

Token 2209: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005423481110483408
    2. 'def' → logprob: -5.880423545837402
    3. ':' → logprob: -6.755423545837402
    4. '
' → logprob: -7.380423545837402
    5. '    
' → logprob: -8.130423545837402
    6. 'dp' → logprob: -8.130423545837402
    7. ':
' → logprob: -10.130423545837402
    8. 'pos' → logprob: -10.505423545837402
    9. 'for' → logprob: -10.880423545837402
    10. 'if' → logprob: -11.005423545837402

Token 2210: ' Impl' (ID: 144563)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7615615725517273
    2. ':' → logprob: -0.8865615725517273
    3. 'def' → logprob: -2.386561632156372
    4. '):' → logprob: -4.511561393737793
    5. ':
' → logprob: -4.886561393737793
    6. '[' → logprob: -6.386561393737793
    7. ' :' → logprob: -6.511561393737793
    8. '```' → logprob: -6.636561393737793
    9. ']:' → logprob: -6.761561393737793
    10. ')' → logprob: -6.761561393737793

Token 2211: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.3142845630645752
    2. 'ement' → logprob: -1.3142845630645752
    3. 'entation' → logprob: -7.689284324645996
    4. 'é' → logprob: -8.314284324645996
    5. 'ements' → logprob: -9.314284324645996
    6. 'éments' → logprob: -9.814284324645996
    7. '   ' → logprob: -10.064284324645996
    8. 'def' → logprob: -10.064284324645996
    9. '```' → logprob: -10.689284324645996
    10. 'mentation' → logprob: -10.939284324645996

Token 2212: 'ation' (ID: 387)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5603324174880981
    2. '   ' → logprob: -1.3103324174880981
    3. ' def' → logprob: -2.9353322982788086
    4. ' =' → logprob: -3.6853322982788086
    5. 'mentation' → logprob: -3.9353322982788086
    6. 'ation' → logprob: -4.185332298278809
    7. 'entation' → logprob: -4.435332298278809
    8. ':' → logprob: -4.810332298278809
    9. '       ' → logprob: -5.435332298278809
    10. '  ' → logprob: -5.935332298278809

Token 2213: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1427203118801117
    2. ':
' → logprob: -2.3927202224731445
    3. '   ' → logprob: -3.7677202224731445
    4. 'def' → logprob: -4.2677202224731445
    5. '():' → logprob: -6.1427202224731445
    6. '):' → logprob: -7.1427202224731445
    7. ' :' → logprob: -7.5177202224731445
    8. '[' → logprob: -9.017720222473145
    9. '":' → logprob: -9.017720222473145
    10. '(
' → logprob: -9.142720222473145

Token 2214: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3732716143131256
    2. 'def' → logprob: -1.6232715845108032
    3. 'code' → logprob: -2.8732717037200928
    4. '```' → logprob: -3.4982717037200928
    5. 'for' → logprob: -4.623271465301514
    6. 'can' → logprob: -5.248271465301514
    7. ' code' → logprob: -5.373271465301514
    8. 'DP' → logprob: -6.123271465301514
    9. ')' → logprob: -6.748271465301514
    10. 'return' → logprob: -7.498271465301514

Token 2215: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09684872627258301
    2. '   ' → logprob: -2.846848726272583
    3. 'def' → logprob: -3.846848726272583
    4. '[' → logprob: -5.471848487854004
    5. ':
' → logprob: -5.721848487854004
    6. ' =' → logprob: -6.721848487854004
    7. ' :' → logprob: -6.971848487854004
    8. '[i' → logprob: -7.096848487854004
    9. '):' → logprob: -7.971848487854004
    10. ']:' → logprob: -8.096848487854004

Token 2216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014257056638598442
    2. 'dp' → logprob: -4.764256954193115
    3. '
' → logprob: -6.014256954193115
    4. ' dp' → logprob: -6.514256954193115
    5. '    
' → logprob: -7.639256954193115
    6. ':' → logprob: -7.889256954193115
    7. '\t' → logprob: -8.639257431030273
    8. 'import' → logprob: -9.389257431030273
    9. ' 
' → logprob: -9.639257431030273
    10. ':
' → logprob: -9.889257431030273

Token 2217: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5248239636421204
    2. 'dp' → logprob: -0.8998239636421204
    3. ' dp' → logprob: -7.399824142456055
    4. '
' → logprob: -7.899824142456055
    5. '    
' → logprob: -8.024824142456055
    6. '	dp' → logprob: -9.149824142456055
    7. 'def' → logprob: -9.774824142456055
    8. 'n' → logprob: -10.524824142456055
    9. ':' → logprob: -10.899824142456055
    10. '#' (adapté à ' #') → logprob: -10.899824142456055

Token 2218: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7600225210189819
    2. 'dp' → logprob: -0.7600225210189819
    3. ' dp' → logprob: -3.0100226402282715
    4. 'def' → logprob: -5.2600226402282715
    5. ':' → logprob: -5.5100226402282715
    6. '
' → logprob: -6.5100226402282715
    7. ']' → logprob: -6.8850226402282715
    8. '    
' → logprob: -7.3850226402282715
    9. ':
' → logprob: -8.010022163391113
    10. ' =' → logprob: -8.260022163391113

Token 2219: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.035974688827991486
    2. '=' → logprob: -3.4109747409820557
    3. '[i' → logprob: -6.410974502563477
    4. '=[' → logprob: -8.160974502563477
    5. '[' → logprob: -8.785974502563477
    6. '   ' → logprob: -9.285974502563477
    7. ' ' → logprob: -10.285974502563477
    8. '```' → logprob: -10.535974502563477
    9. '=[[' → logprob: -10.660974502563477
    10. '=[]' → logprob: -11.160974502563477

Token 2220: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14721854031085968
    2. ']' → logprob: -2.0222184658050537
    3. ']=' → logprob: -6.147218704223633
    4. '[i' → logprob: -6.397218704223633
    5. '   ' → logprob: -8.147218704223633
    6. '][]' → logprob: -9.147218704223633
    7. ' =' → logprob: -9.272218704223633
    8. ' ][' → logprob: -9.397218704223633
    9. '=' → logprob: -10.022218704223633
    10. ' ' → logprob: -11.147218704223633

Token 2221: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.48433324694633484
    2. ']' → logprob: -1.9843332767486572
    3. '0' → logprob: -2.4843332767486572
    4. '][' → logprob: -2.8593332767486572
    5. '])' → logprob: -3.4843332767486572
    6. 'i' → logprob: -3.6093332767486572
    7. 'K' → logprob: -4.609333038330078
    8. '   ' → logprob: -5.109333038330078
    9. ' ' → logprob: -5.234333038330078
    10. '  ' → logprob: -5.359333038330078

Token 2222: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20558783411979675
    2. ']' → logprob: -1.8305878639221191
    3. '[i' → logprob: -4.080587863922119
    4. ']=' → logprob: -5.205587863922119
    5. '   ' → logprob: -5.955587863922119
    6. 'i' → logprob: -9.330587387084961
    7. '][]' → logprob: -9.455587387084961
    8. ' ][' → logprob: -9.705587387084961
    9. '[' → logprob: -9.705587387084961
    10. '```' → logprob: -10.330587387084961

Token 2223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.432400107383728
    2. ' =' → logprob: -1.057400107383728
    3. '=[' → logprob: -5.807400226593018
    4. '[i' → logprob: -8.05739974975586
    5. '   ' → logprob: -8.80739974975586
    6. '[' → logprob: -9.43239974975586
    7. '=[[' → logprob: -9.68239974975586
    8. '=
' → logprob: -10.55739974975586
    9. '=[]' → logprob: -11.30739974975586
    10. ' ' → logprob: -12.05739974975586

Token 2224: ' minimal' (ID: 19957)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02440580166876316
    2. '0' → logprob: -4.3994059562683105
    3. 'inf' → logprob: -5.5244059562683105
    4. '[' → logprob: -5.6494059562683105
    5. 'min' → logprob: -6.1494059562683105
    6. 'INF' → logprob: -6.8994059562683105
    7. 'sys' → logprob: -7.6494059562683105
    8. '[min' → logprob: -8.774405479431152
    9. ' float' → logprob: -9.024405479431152
    10. 'False' → logprob: -9.024405479431152

Token 2225: ' total' (ID: 3609)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.2547870874404907
    2. 'time' → logprob: -1.5047870874404907
    3. '[' → logprob: -2.004786968231201
    4. '_' → logprob: -2.254786968231201
    5. ' time' → logprob: -2.379786968231201
    6. 'temps' → logprob: -3.004786968231201
    7. '[i' → logprob: -3.129786968231201
    8. ']' → logprob: -3.879786968231201
    9. ' _' → logprob: -4.754786968231201
    10. ' temps' → logprob: -5.129786968231201

Token 2226: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.20482049882411957
    2. 'time' → logprob: -2.954820394515991
    3. '_' → logprob: -3.329820394515991
    4. '[' → logprob: -3.954820394515991
    5. '[i' → logprob: -4.07982063293457
    6. ' time' → logprob: -4.32982063293457
    7. '_t' → logprob: -4.70482063293457
    8. 'temps' → logprob: -4.70482063293457
    9. ']' → logprob: -5.07982063293457
    10. ' _' → logprob: -5.70482063293457

Token 2227: ' pour' (ID: 1930)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2821744680404663
    2. '[' → logprob: -1.5321744680404663
    3. '=' → logprob: -4.782174587249756
    4. '   ' → logprob: -5.282174587249756
    5. ']' → logprob: -5.532174587249756
    6. ' =' → logprob: -6.032174587249756
    7. '[
' → logprob: -6.157174587249756
    8. '_' → logprob: -6.282174587249756
    9. '```' → logprob: -6.657174587249756
    10. 'for' → logprob: -6.657174587249756

Token 2228: ' atteindre' (ID: 95734)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.020127329975366592
    2. 'arr' → logprob: -4.145127296447754
    3. ' atteindre' → logprob: -6.645127296447754
    4. 're' → logprob: -6.895127296447754
    5. 'aller' → logprob: -7.145127296447754
    6. '   ' → logprob: -8.270127296447754
    7. 'i' → logprob: -8.520127296447754
    8. 'reach' → logprob: -8.895127296447754
    9. ' ' → logprob: -9.020127296447754
    10. 'att' → logprob: -9.895127296447754

Token 2229: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.039226382970809937
    2. 'i' → logprob: -3.4142262935638428
    3. ' S' → logprob: -5.914226531982422
    4. '   ' → logprob: -6.914226531982422
    5. ' i' → logprob: -7.039226531982422
    6. '[i' → logprob: -7.039226531982422
    7. '(i' → logprob: -10.164226531982422
    8. ' ' → logprob: -10.664226531982422
    9. '`' → logprob: -11.039226531982422
    10. '```' → logprob: -11.789226531982422

Token 2230: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016754218377172947
    2. '][' → logprob: -6.626675605773926
    3. '[' → logprob: -8.626675605773926
    4. ']' → logprob: -9.001675605773926
    5. ' [' → logprob: -11.376675605773926
    6. '```' → logprob: -11.501675605773926
    7. '\[' → logprob: -12.501675605773926
    8. '   ' → logprob: -12.501675605773926
    9. '[j' → logprob: -12.751675605773926
    10. '
' → logprob: -12.751675605773926

Token 2231: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0018565307836979628
    2. ']' → logprob: -6.626856327056885
    3. '[i' → logprob: -8.501856803894043
    4. '   ' → logprob: -8.876856803894043
    5. ']][' → logprob: -10.001856803894043
    6. ' ][' → logprob: -10.126856803894043
    7. ')][' → logprob: -11.376856803894043
    8. ']
' → logprob: -11.501856803894043
    9. '```' → logprob: -11.876856803894043
    10. '[' → logprob: -11.876856803894043

Token 2232: ' en' (ID: 469)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3658958971500397
    2. '[' → logprob: -1.3658958673477173
    3. '=' → logprob: -4.240895748138428
    4. ' =' → logprob: -4.615895748138428
    5. '   ' → logprob: -4.740895748138428
    6. ']' → logprob: -5.240895748138428
    7. '```' → logprob: -5.615895748138428
    8. '_' → logprob: -5.740895748138428
    9. '[j' → logprob: -6.615895748138428
    10. '[
' → logprob: -6.865895748138428

Token 2233: ' utilisant' (ID: 92474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5202478170394897
    2. ' j' → logprob: -2.1452479362487793
    3. ' chois' → logprob: -2.3952479362487793
    4. '[j' → logprob: -2.5202479362487793
    5. ' utilisant' → logprob: -2.6452479362487793
    6. 'util' → logprob: -3.0202479362487793
    7. ' [' → logprob: -3.2702479362487793
    8. '[' → logprob: -3.2702479362487793
    9. ']' → logprob: -3.6452479362487793
    10. '[]' → logprob: -3.6452479362487793

Token 2234: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9542337656021118
    2. '[j' → logprob: -1.3292337656021118
    3. '[i' → logprob: -1.4542337656021118
    4. '[' → logprob: -3.2042336463928223
    5. ' j' → logprob: -4.329233646392822
    6. ' [' → logprob: -4.454233646392822
    7. 'i' → logprob: -4.704233646392822
    8. ')' → logprob: -4.954233646392822
    9. '   ' → logprob: -5.329233646392822
    10. '[
' → logprob: -5.454233646392822

Token 2235: ' arr' (ID: 1724)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0677204132080078
    2. '][' → logprob: -1.5677204132080078
    3. ']' → logprob: -1.8177204132080078
    4. '_' → logprob: -1.9427204132080078
    5. '[i' → logprob: -3.192720413208008
    6. '[]' → logprob: -3.692720413208008
    7. ')' → logprob: -4.317720413208008
    8. '[arr' → logprob: -4.442720413208008
    9. ' ][' → logprob: -5.567720413208008
    10. '][]' → logprob: -5.567720413208008

Token 2236: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.003915730398148298
    2. 'êt' → logprob: -6.503915786743164
    3. 'rets' → logprob: -7.378915786743164
    4. ' stops' → logprob: -7.753915786743164
    5. 'r' → logprob: -7.878915786743164
    6. '^' → logprob: -8.003915786743164
    7. 'ê' → logprob: -8.753915786743164
    8. 'êtes' → logprob: -9.378915786743164
    9. '[' → logprob: -10.003915786743164
    10. '^[' → logprob: -10.253915786743164

Token 2237: ' sem' (ID: 2743)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5553834438323975
    2. '_' → logprob: -1.3053834438323975
    3. '```' → logprob: -2.5553834438323975
    4. '[i' → logprob: -3.1803834438323975
    5. ']' → logprob: -4.680383682250977
    6. '\[' → logprob: -5.305383682250977
    7. '   ' → logprob: -5.555383682250977
    8. '_[' → logprob: -5.930383682250977
    9. ')' → logprob: -6.305383682250977
    10. '[
' → logprob: -6.430383682250977

Token 2238: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.007720794063061476
    2. '[i' → logprob: -5.757720947265625
    3. '[' → logprob: -7.007720947265625
    4. 'ormais' → logprob: -8.132720947265625
    5. 'ip' → logprob: -8.257720947265625
    6. 'i' → logprob: -8.382720947265625
    7. 'pexpr' → logprob: -8.507720947265625
    8. 'express' → logprob: -8.632720947265625
    9. 'import' → logprob: -8.757720947265625
    10. 'issez' → logprob: -9.257720947265625

Token 2239: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5093531012535095
    2. '[i' → logprob: -1.3843531608581543
    3. '   ' → logprob: -3.2593531608581543
    4. ' =' → logprob: -3.3843531608581543
    5. '```' → logprob: -3.7593531608581543
    6. '=' → logprob: -4.009353160858154
    7. ':' → logprob: -5.009353160858154
    8. '_' → logprob: -5.134353160858154
    9. ']' → logprob: -5.384353160858154
    10. '[
' → logprob: -5.509353160858154

Token 2240: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2906161844730377
    2. ')]' → logprob: -2.790616273880005
    3. '):' → logprob: -3.040616273880005
    4. ']' → logprob: -3.665616273880005
    5. ')])' → logprob: -4.040616035461426
    6. ' )' → logprob: -4.040616035461426
    7. '   ' → logprob: -4.165616035461426
    8. ',' → logprob: -4.290616035461426
    9. '+' → logprob: -4.665616035461426
    10. '])' → logprob: -5.415616035461426

Token 2241: 'mi' (ID: 3900)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fait' → logprob: -1.0249178409576416
    2. ']' → logprob: -1.8999178409576416
    3. 'def' → logprob: -2.6499178409576416
    4. '
' → logprob: -3.2749178409576416
    5. 'station' → logprob: -3.2749178409576416
    6. '#' → logprob: -3.6499178409576416
    7. 'ex' → logprob: -3.8999178409576416
    8. '   ' → logprob: -4.0249176025390625
    9. ')' → logprob: -4.2749176025390625
    10. 't' → logprob: -4.3999176025390625

Token 2242: ' lesquels' (ID: 106476)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5378414392471313
    2. 'range' → logprob: -2.287841320037842
    3. 'S' → logprob: -3.037841320037842
    4. 'express' → logprob: -3.162841320037842
    5. '   ' → logprob: -3.287841320037842
    6. 'les' → logprob: -3.662841320037842
    7. '[i' → logprob: -3.912841320037842
    8. ' K' → logprob: -3.912841320037842
    9. 'la' → logprob: -4.162841320037842
    10. 'previous' → logprob: -4.662841320037842

Token 2243: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5495803356170654
    2. 'S' → logprob: -1.9245803356170654
    3. '   ' → logprob: -2.1745803356170654
    4. ' i' → logprob: -2.2995803356170654
    5. 'K' → logprob: -2.7995803356170654
    6. ' K' → logprob: -2.9245803356170654
    7. '1' → logprob: -3.1745803356170654
    8. ')' → logprob: -3.4245803356170654
    9. '0' → logprob: -3.4245803356170654
    10. ' S' → logprob: -3.5495803356170654

Token 2244: ' i' (ID: 575)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8737195134162903
    2. 's' → logprob: -1.9987194538116455
    3. 'sem' → logprob: -2.2487194538116455
    4. ' stops' → logprob: -2.2487194538116455
    5. 'express' → logprob: -3.1237194538116455
    6. 'i' → logprob: -3.1237194538116455
    7. 'S' → logprob: -3.3737194538116455
    8. '[i' → logprob: -4.123719692230225
    9. 'fixed' → logprob: -4.498719692230225
    10. 'previous' → logprob: -4.623719692230225

Token 2245: ' arr' (ID: 1724)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2981974482536316
    2. '][' → logprob: -1.9231975078582764
    3. ']' → logprob: -2.5481975078582764
    4. ' +' → logprob: -4.048197269439697
    5. '-' → logprob: -5.298197269439697
    6. '[i' → logprob: -5.923197269439697
    7. '[' → logprob: -6.798197269439697
    8. ' ][' → logprob: -6.923197269439697
    9. ']+' → logprob: -6.923197269439697
    10. 'nd' → logprob: -7.048197269439697

Token 2246: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.007198858540505171
    2. 'êt' → logprob: -5.632198810577393
    3. '[' → logprob: -7.132198810577393
    4. 'r' → logprob: -7.257198810577393
    5. 'rets' → logprob: -7.632198810577393
    6. ']' → logprob: -7.882198810577393
    7. '[i' → logprob: -8.00719928741455
    8. 'ê' → logprob: -8.38219928741455
    9. 'êtes' → logprob: -9.13219928741455
    10. '])' → logprob: -9.13219928741455

Token 2247: ' express' (ID: 6101)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4475373029708862
    2. '_' → logprob: -2.072537422180176
    3. ']' → logprob: -2.572537422180176
    4. '[' → logprob: -2.572537422180176
    5. '_s' → logprob: -2.697537422180176
    6. '_sem' → logprob: -2.697537422180176
    7. 'sem' → logprob: -3.072537422180176
    8. 's' → logprob: -3.072537422180176
    9. '```' → logprob: -3.197537422180176
    10. ')' → logprob: -3.197537422180176

Token 2248: ' fixes' (ID: 60095)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0375717878341675
    2. '[i' → logprob: -1.1625717878341675
    3. '[' → logprob: -2.037571907043457
    4. '_' → logprob: -3.162571907043457
    5. '[
' → logprob: -3.162571907043457
    6. '][' → logprob: -3.412571907043457
    7. '```' → logprob: -3.537571907043457
    8. ')' → logprob: -4.287571907043457
    9. 's' → logprob: -4.662571907043457
    10. '   ' → logprob: -5.912571907043457

Token 2249: ').

' (ID: 3991)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.068228006362915
    2. '[' → logprob: -1.193228006362915
    3. ']' → logprob: -1.318228006362915
    4. ')' → logprob: -3.818228006362915
    5. ':' → logprob: -4.318227767944336
    6. '][' → logprob: -4.693227767944336
    7. '```' → logprob: -4.693227767944336
    8. '[
' → logprob: -4.943227767944336
    9. '_' → logprob: -5.318227767944336
    10. '   ' → logprob: -5.318227767944336

Token 2250: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6773372888565063
    2. ' =' → logprob: -1.4273372888565063
    3. '   ' → logprob: -2.427337169647217
    4. '[' → logprob: -2.552337169647217
    5. '=' → logprob: -3.302337169647217
    6. '[i' → logprob: -3.802337169647217
    7. 'def' → logprob: -4.927337169647217
    8. ']' → logprob: -5.552337169647217
    9. ' :' → logprob: -5.927337169647217
    10. ' ' → logprob: -6.302337169647217

Token 2251: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9144721627235413
    2. ' =' → logprob: -1.4144721031188965
    3. ':' → logprob: -1.6644721031188965
    4. ':
' → logprob: -2.9144721031188965
    5. '=' → logprob: -3.6644721031188965
    6. 'dp' → logprob: -3.9144721031188965
    7. '[' → logprob: -4.1644721031188965
    8. ']' → logprob: -4.5394721031188965
    9. '```' → logprob: -5.2894721031188965
    10. '[i' → logprob: -5.4144721031188965

Token 2252: ' Base' (ID: 8729)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2018760442733765
    2. '[i' → logprob: -1.7018760442733765
    3. '   ' → logprob: -2.326876163482666
    4. '0' → logprob: -2.326876163482666
    5. '=' → logprob: -2.451876163482666
    6. ' =' → logprob: -2.701876163482666
    7. ']' → logprob: -2.826876163482666
    8. 'def' → logprob: -3.326876163482666
    9. ':' → logprob: -3.826876163482666
    10. '[
' → logprob: -4.576876163482666

Token 2253: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22462542355060577
    2. '[' → logprob: -1.8496254682540894
    3. '=' → logprob: -3.5996253490448
    4. '   ' → logprob: -5.474625587463379
    5. ':' → logprob: -5.599625587463379
    6. '[i' → logprob: -5.724625587463379
    7. '[
' → logprob: -6.224625587463379
    8. 'case' → logprob: -6.724625587463379
    9. '
' → logprob: -7.349625587463379
    10. '=
' → logprob: -8.099625587463379

Token 2254: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.033886924386024475
    2. '[' → logprob: -3.9088869094848633
    3. '{' → logprob: -5.158886909484863
    4. '0' → logprob: -5.783886909484863
    5. '[[' → logprob: -6.533886909484863
    6. '
' → logprob: -7.283886909484863
    7. ' =' → logprob: -7.408886909484863
    8. '{
' → logprob: -7.783886909484863
    9. ' dp' → logprob: -8.158886909484863
    10. '```' → logprob: -8.408886909484863

Token 2255: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016848169034346938
    2. ' =' → logprob: -6.501684665679932
    3. '=' → logprob: -9.62668514251709
    4. '0' → logprob: -10.00168514251709
    5. '[i' → logprob: -10.00168514251709
    6. ' [' → logprob: -11.62668514251709
    7. '\[' → logprob: -11.75168514251709
    8. '```' → logprob: -12.87668514251709
    9. '=[' → logprob: -13.12668514251709
    10. '[-' → logprob: -13.87668514251709

Token 2256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016396844875998795
    2. ' ' → logprob: -9.375164031982422
    3. '][' → logprob: -10.250164031982422
    4. '[' → logprob: -10.875164031982422
    5. 'i' → logprob: -11.125164031982422
    6. ']' → logprob: -11.875164031982422
    7. '-' → logprob: -13.750164031982422
    8. ' ][' → logprob: -14.000164031982422
    9. '   ' → logprob: -15.250164031982422
    10. '=' → logprob: -15.500164031982422

Token 2257: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014551744796335697
    2. '[' → logprob: -4.764551639556885
    3. ']' → logprob: -5.139551639556885
    4. ']=' → logprob: -10.514552116394043
    5. '```' → logprob: -11.514552116394043
    6. ' ][' → logprob: -12.014552116394043
    7. '   ' → logprob: -12.139552116394043
    8. '0' → logprob: -12.389552116394043
    9. '[i' → logprob: -13.389552116394043
    10. '=' → logprob: -14.014552116394043

Token 2258: 'M' (ID: 44)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001757696009008214
    2. ']' → logprob: -9.250175476074219
    3. '{' → logprob: -10.000175476074219
    4. '[' → logprob: -11.500175476074219
    5. '][' → logprob: -11.500175476074219
    6. ']=' → logprob: -12.375175476074219
    7. '=' → logprob: -12.625175476074219
    8. ' ' → logprob: -12.875175476074219
    9. '{}' → logprob: -13.500175476074219
    10. 'j' → logprob: -14.875175476074219

Token 2259: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.570223867893219
    2. ']' → logprob: -0.945223867893219
    3. '-' → logprob: -3.195223808288574
    4. '[' → logprob: -5.570223808288574
    5. ' -' → logprob: -7.570223808288574
    6. '0' → logprob: -7.945223808288574
    7. ']=' → logprob: -9.320223808288574
    8. '   ' → logprob: -9.695223808288574
    9. ' ][' → logprob: -9.945223808288574
    10. '```' → logprob: -10.320223808288574

Token 2260: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45893576741218567
    2. '=' → logprob: -1.5839357376098633
    3. ' =' → logprob: -2.3339357376098633
    4. ']' → logprob: -2.9589357376098633
    5. '0' → logprob: -5.458935737609863
    6. 'def' → logprob: -6.208935737609863
    7. '```' → logprob: -6.708935737609863
    8. ':' → logprob: -6.833935737609863
    9. '_' → logprob: -7.208935737609863
    10. '\[' → logprob: -7.583935737609863

Token 2261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010948538547381759
    2. 'T' → logprob: -7.626094818115234
    3. 'A' → logprob: -8.626094818115234
    4. '(' → logprob: -9.001094818115234
    5. 'S' → logprob: -9.376094818115234
    6. ' ' → logprob: -10.126094818115234
    7. 'C' → logprob: -10.376094818115234
    8. 'float' → logprob: -10.501094818115234
    9. 'B' → logprob: -10.751094818115234
    10. 'sys' → logprob: -11.001094818115234

Token 2262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016802136087790132
    2. 'T' → logprob: -9.000167846679688
    3. 'A' → logprob: -11.125167846679688
    4. ' ' → logprob: -11.500167846679688
    5. '(' → logprob: -11.875167846679688
    6. 'float' → logprob: -13.125167846679688
    7. 'S' → logprob: -13.375167846679688
    8. '{' → logprob: -13.500167846679688
    9. 'sys' → logprob: -13.875167846679688
    10. 'INF' → logprob: -14.250167846679688

Token 2263: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19410084187984467
    2. ' =' → logprob: -3.319100856781006
    3. '=' → logprob: -3.444100856781006
    4. '0' → logprob: -3.694100856781006
    5. ']' → logprob: -3.694100856781006
    6. '
' → logprob: -3.944100856781006
    7. '```' → logprob: -4.569100856781006
    8. ':' → logprob: -4.819100856781006
    9. 'def' → logprob: -5.319100856781006
    10. '{' → logprob: -5.569100856781006

Token 2264: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15785104036331177
    2. ']' → logprob: -2.657850980758667
    3. '0' → logprob: -3.907850980758667
    4. '])' → logprob: -4.032851219177246
    5. '
' → logprob: -4.657851219177246
    6. ')
' → logprob: -4.782851219177246
    7. '```' → logprob: -5.657851219177246
    8. '[' → logprob: -5.782851219177246
    9. '1' → logprob: -6.157851219177246
    10. ' )' → logprob: -6.282851219177246

Token 2265: ' station' (ID: 11538)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02529190108180046
    2. ' ' → logprob: -3.900291919708252
    3. 'S' → logprob: -5.775291919708252
    4. ' S' → logprob: -7.900291919708252
    5. '1' → logprob: -8.025291442871094
    6. 'M' → logprob: -8.150291442871094
    7. ')' → logprob: -8.525291442871094
    8. '
' → logprob: -9.275291442871094
    9. ' M' → logprob: -9.775291442871094
    10. 'i' → logprob: -9.900291442871094

Token 2266: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.569251298904419
    2. '0' → logprob: -1.569251298904419
    3. '1' → logprob: -1.944251298904419
    4. ' ' → logprob: -3.444251298904419
    5. '[' → logprob: -3.819251298904419
    6. '
' → logprob: -4.44425106048584
    7. ' _' → logprob: -5.19425106048584
    8. '```' → logprob: -5.81925106048584
    9. ')' → logprob: -5.94425106048584
    10. '`' → logprob: -6.56925106048584

Token 2267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0776126384735107
    2. '[' → logprob: -1.0776126384735107
    3. '0' → logprob: -1.3276126384735107
    4. ' ' → logprob: -3.8276126384735107
    5. '=' → logprob: -4.20261287689209
    6. '_' → logprob: -5.07761287689209
    7. '```' → logprob: -6.07761287689209
    8. '`' → logprob: -6.20261287689209
    9. ']' → logprob: -6.20261287689209
    10. ' =' → logprob: -6.32761287689209

Token 2268: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10105124115943909
    2. '[' → logprob: -2.9760513305664062
    3. ')' → logprob: -3.6010513305664062
    4. ' ]' → logprob: -5.601051330566406
    5. '```' → logprob: -5.851051330566406
    6. '][' → logprob: -6.226051330566406
    7. '=' → logprob: -6.851051330566406
    8. '0' → logprob: -7.101051330566406
    9. '])' → logprob: -7.101051330566406
    10. 'def' → logprob: -7.226051330566406

Token 2269: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5236543416976929
    2. '0' → logprob: -1.2736543416976929
    3. '=' → logprob: -3.2736544609069824
    4. ' =' → logprob: -3.5236544609069824
    5. ' ' → logprob: -4.023654460906982
    6. ' )' → logprob: -4.898654460906982
    7. ',' → logprob: -5.398654460906982
    8. '):' → logprob: -5.773654460906982
    9. ' car' → logprob: -5.898654460906982
    10. '):
' → logprob: -6.023654460906982

Token 2270: '’arrêt' (ID: 179811)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7717073559761047
    2. '=' → logprob: -1.27170729637146
    3. ' =' → logprob: -1.52170729637146
    4. '])' → logprob: -4.646707534790039
    5. ')' → logprob: -5.021707534790039
    6. '0' → logprob: -5.146707534790039
    7. '_' → logprob: -5.521707534790039
    8. ' ]' → logprob: -6.146707534790039
    9. '[' → logprob: -6.521707534790039
    10. ':' → logprob: -6.521707534790039

Token 2271: ' express' (ID: 6101)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6318579912185669
    2. ' sem' → logprob: -2.0068578720092773
    3. ']' → logprob: -2.3818578720092773
    4. '0' → logprob: -2.6318578720092773
    5. '[' → logprob: -3.3818578720092773
    6. '_sem' → logprob: -3.5068578720092773
    7. ' de' → logprob: -3.8818578720092773
    8. 'sem' → logprob: -4.006857872009277
    9. ')' → logprob: -4.131857872009277
    10. ' ' → logprob: -4.381857872009277

Token 2272: ' de' (ID: 334)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.696794867515564
    2. '0' → logprob: -1.696794867515564
    3. '_' → logprob: -2.6967949867248535
    4. '][' → logprob: -2.6967949867248535
    5. ' est' → logprob: -2.8217949867248535
    6. 'est' → logprob: -2.9467949867248535
    7. '[' → logprob: -3.4467949867248535
    8. '```' → logprob: -5.3217949867248535
    9. 'arr' → logprob: -5.4467949867248535
    10. ')' → logprob: -5.4467949867248535

Token 2273: ' départ' (ID: 32693)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9389415979385376
    2. 'S' → logprob: -1.1889415979385376
    3. 'index' → logprob: -1.5639415979385376
    4. 'arr' → logprob: -3.938941478729248
    5. 'dé' → logprob: -4.063941478729248
    6. 'sem' → logprob: -4.188941478729248
    7. 'indice' → logprob: -4.438941478729248
    8. 'la' → logprob: -4.563941478729248
    9. 'l' → logprob: -5.313941478729248
    10. 'station' → logprob: -5.438941478729248

Token 2274: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3876459002494812
    2. '[' → logprob: -1.887645959854126
    3. ')' → logprob: -2.762645959854126
    4. '=' → logprob: -3.762645959854126
    5. ' est' → logprob: -4.262645721435547
    6. '0' → logprob: -4.637645721435547
    7. ' =' → logprob: -4.637645721435547
    8. '```' → logprob: -4.762645721435547
    9. ':' → logprob: -4.887645721435547
    10. ',' → logprob: -5.262645721435547

Token 2275: ' déjà' (ID: 21229)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007033142726868391
    2. ' )' → logprob: -6.382033348083496
    3. '])' → logprob: -6.632033348083496
    4. ']' → logprob: -6.882033348083496
    5. ' est' → logprob: -7.132033348083496
    6. '=' → logprob: -8.132033348083496
    7. '):' → logprob: -8.257033348083496
    8. ')
' → logprob: -8.257033348083496
    9. ':' → logprob: -8.882033348083496
    10. '),' → logprob: -9.132033348083496

Token 2276: ' arr' (ID: 1724)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2817450761795044
    2. 'chosen' → logprob: -1.4067450761795044
    3. 'cho' → logprob: -1.5317450761795044
    4. 'selected' → logprob: -2.281744956970215
    5. ' choisi' → logprob: -2.906744956970215
    6. 'prés' → logprob: -4.156744956970215
    7. ')' → logprob: -4.781744956970215
    8. 'util' → logprob: -4.906744956970215
    9. 'included' → logprob: -4.906744956970215
    10. 'dans' → logprob: -5.156744956970215

Token 2277: 'êts' (ID: 56582)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.08359035104513168
    2. ']' → logprob: -4.083590507507324
    3. 'êts' → logprob: -4.083590507507324
    4. '_' → logprob: -4.583590507507324
    5. '[' → logprob: -5.208590507507324
    6. '__' → logprob: -5.208590507507324
    7. 'et' → logprob: -5.458590507507324
    8. 'ê' → logprob: -5.458590507507324
    9. ')' → logprob: -5.708590507507324
    10. '[
' → logprob: -6.208590507507324

Token 2278: ' sem' (ID: 2743)
  Prédit: '_sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sem' → logprob: -0.9226965308189392
    2. 'sem' → logprob: -1.047696590423584
    3. '_' → logprob: -2.547696590423584
    4. 's' → logprob: -3.422696590423584
    5. ' sem' → logprob: -3.547696590423584
    6. ']' → logprob: -3.547696590423584
    7. '][' → logprob: -4.047696590423584
    8. '[' → logprob: -4.297696590423584
    9. '```' → logprob: -4.422696590423584
    10. 'express' → logprob: -4.672696590423584

Token 2279: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.006227036472409964
    2. 'express' → logprob: -5.756227016448975
    3. '_i' → logprob: -8.006227493286133
    4. '[i' → logprob: -8.506227493286133
    5. 'iex' → logprob: -8.631227493286133
    6. 'i' → logprob: -8.631227493286133
    7. ' express' → logprob: -8.756227493286133
    8. ')' → logprob: -8.881227493286133
    9. '```' → logprob: -9.006227493286133
    10. 'pexpr' → logprob: -9.131227493286133

Token 2280: ' minimum' (ID: 11085)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08368947356939316
    2. '[' → logprob: -4.0836896896362305
    3. '```' → logprob: -4.0836896896362305
    4. '][' → logprob: -4.5836896896362305
    5. '_' → logprob: -4.8336896896362305
    6. ']:' → logprob: -5.4586896896362305
    7. ']_' → logprob: -5.4586896896362305
    8. ')' → logprob: -6.0836896896362305
    9. '])' → logprob: -6.2086896896362305
    10. '=' → logprob: -6.4586896896362305

Token 2281: ')

' (ID: 1029)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13846398890018463
    2. '[' → logprob: -3.1384639739990234
    3. '```' → logprob: -3.5134639739990234
    4. '=' → logprob: -4.263463973999023
    5. ')' → logprob: -4.888463973999023
    6. 'def' → logprob: -5.513463973999023
    7. ']=' → logprob: -5.513463973999023
    8. ']:' → logprob: -5.638463973999023
    9. ' =' → logprob: -5.763463973999023
    10. ':' → logprob: -5.763463973999023

Token 2282: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.101055383682251
    2. '
' → logprob: -1.476055383682251
    3. 'dp' → logprob: -1.476055383682251
    4. '=' → logprob: -2.601055383682251
    5. '   ' → logprob: -2.851055383682251
    6. '[' → logprob: -4.351055145263672
    7. ']' → logprob: -4.351055145263672
    8. '][' → logprob: -4.601055145263672
    9. '```' → logprob: -4.726055145263672
    10. 'for' → logprob: -4.726055145263672

Token 2283: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6116907596588135
    2. 'dp' → logprob: -0.9866907596588135
    3. 'for' → logprob: -4.111690521240234
    4. '[' → logprob: -4.111690521240234
    5. ' =' → logprob: -4.236690521240234
    6. ']' → logprob: -4.611690521240234
    7. '
' → logprob: -4.861690521240234
    8. ')' → logprob: -5.611690521240234
    9. '=' → logprob: -5.861690521240234
    10. ' for' → logprob: -6.111690521240234

Token 2284: ' Pour' (ID: 13931)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8603227138519287
    2. '0' → logprob: -0.9853227138519287
    3. '   ' → logprob: -2.6103227138519287
    4. ' =' → logprob: -3.3603227138519287
    5. 'for' → logprob: -3.9853227138519287
    6. '=' → logprob: -4.235322952270508
    7. 'dp' → logprob: -4.235322952270508
    8. ']' → logprob: -4.360322952270508
    9. '][' → logprob: -4.735322952270508
    10. '[
' → logprob: -5.110322952270508

Token 2285: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17978088557720184
    2. ' i' → logprob: -1.8047808408737183
    3. ' ' → logprob: -11.804780960083008
    4. '   ' → logprob: -12.054780960083008
    5. ' ' → logprob: -12.429780960083008
    6. ' next' → logprob: -12.554780960083008
    7. '	i' → logprob: -12.554780960083008
    8. 'j' → logprob: -12.804780960083008
    9. 'next' → logprob: -12.804780960083008
    10. ' j' → logprob: -13.304780960083008

Token 2286: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.461983859539032
    2. '+' → logprob: -1.7119839191436768
    3. 'in' → logprob: -2.3369839191436768
    4. '=' → logprob: -2.7119839191436768
    5. ' +' → logprob: -4.336983680725098
    6. ' =' → logprob: -4.586983680725098
    7. '1' → logprob: -7.336983680725098
    8. ' +=' → logprob: -7.461983680725098
    9. '   ' → logprob: -8.086983680725098
    10. '+=' → logprob: -8.336983680725098

Token 2287: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5089399218559265
    2. ' range' → logprob: -1.0089399814605713
    3. '1' → logprob: -3.3839399814605713
    4. ' ' → logprob: -8.258939743041992
    5. '[' → logprob: -10.383939743041992
    6. '0' → logprob: -10.383939743041992
    7. ' [' → logprob: -11.758939743041992
    8. ' (' → logprob: -12.133939743041992
    9. '   ' → logprob: -12.758939743041992
    10. '(' → logprob: -13.133939743041992

Token 2288: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05375760793685913
    2. '1' → logprob: -3.178757667541504
    3. '(M' → logprob: -4.553757667541504
    4. '(i' → logprob: -9.553757667541504
    5. 'M' → logprob: -10.178757667541504
    6. '0' → logprob: -10.178757667541504
    7. 'i' → logprob: -11.303757667541504
    8. ' ' → logprob: -12.178757667541504
    9. '   ' → logprob: -13.178757667541504
    10. 'range' → logprob: -13.303757667541504

Token 2289: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48975875973701477
    2. '):' → logprob: -0.9897587299346924
    3. '-' → logprob: -4.3647589683532715
    4. ')' → logprob: -6.3647589683532715
    5. '[i' → logprob: -8.364758491516113
    6. ')[' → logprob: -8.614758491516113
    7. '+' → logprob: -8.739758491516113
    8. '[' → logprob: -9.364758491516113
    9. ' -' → logprob: -9.489758491516113
    10. '):

' → logprob: -9.489758491516113

Token 2290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ')' → logprob: -12.125011444091797
    3. '2' → logprob: -12.875011444091797
    4. '```' → logprob: -13.250011444091797
    5. ' ' → logprob: -13.625011444091797
    6. '   ' → logprob: -15.000011444091797
    7. '
' → logprob: -15.875011444091797
    8. '``' → logprob: -17.125011444091797
    9. '):
' → logprob: -17.750011444091797
    10. '-' → logprob: -17.750011444091797

Token 2291: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08476170897483826
    2. '):' → logprob: -2.584761619567871
    3. '+' → logprob: -5.334761619567871
    4. '):
' → logprob: -8.209761619567871
    5. ')' → logprob: -8.709761619567871
    6. ' +' → logprob: -9.209761619567871
    7. '-' → logprob: -9.209761619567871
    8. '   ' → logprob: -9.209761619567871
    9. '[i' → logprob: -9.584761619567871
    10. '):

' → logprob: -9.959761619567871

Token 2292: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12945285439491272
    2. '   ' → logprob: -3.00445294380188
    3. 'for' → logprob: -3.12945294380188
    4. '	for' → logprob: -4.129452705383301
    5. ':' → logprob: -4.754452705383301
    6. ' j' → logprob: -6.879452705383301
    7. '```' → logprob: -6.879452705383301
    8. ' i' → logprob: -8.2544527053833
    9. '    ' → logprob: -8.3794527053833
    10. ' ' → logprob: -8.5044527053833

Token 2293: ' essay' (ID: 9635)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11929627507925034
    2. ' for' → logprob: -2.6192963123321533
    3. 'range' → logprob: -3.8692963123321533
    4. ':' → logprob: -4.869296073913574
    5. ' range' → logprob: -5.994296073913574
    6. '   ' → logprob: -6.369296073913574
    7. '=' → logprob: -6.869296073913574
    8. '[' → logprob: -7.119296073913574
    9. 'continue' → logprob: -7.119296073913574
    10. ' =' → logprob: -7.119296073913574

Token 2294: 'e' (ID: 68)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.35632824897766113
    2. 'te' → logprob: -1.2313282489776611
    3. 'nt' → logprob: -5.731328010559082
    4. 'nte' → logprob: -6.356328010559082
    5. 'ze' → logprob: -7.231328010559082
    6. 've' → logprob: -8.231328010559082
    7. 'ght' → logprob: -8.231328010559082
    8. 'me' → logprob: -8.731328010559082
    9. 'tte' → logprob: -8.731328010559082
    10. 'tes' → logprob: -8.981328010559082

Token 2295: ' toutes' (ID: 17502)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5736504197120667
    2. '       ' → logprob: -1.1986503601074219
    3. 'for' → logprob: -3.198650360107422
    4. 'range' → logprob: -3.323650360107422
    5. '    ' → logprob: -3.698650360107422
    6. ' de' → logprob: -4.948650360107422
    7. ' for' → logprob: -5.448650360107422
    8. ' range' → logprob: -5.698650360107422
    9. ' ' → logprob: -5.823650360107422
    10. ':' → logprob: -6.198650360107422

Token 2296: ' allocations' (ID: 142496)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9322156310081482
    2. 'x' → logprob: -1.682215690612793
    3. '   ' → logprob: -2.057215690612793
    4. ' x' → logprob: -2.432215690612793
    5. ' possible' → logprob: -2.932215690612793
    6. 'j' → logprob: -3.307215690612793
    7. 'poss' → logprob: -3.432215690612793
    8. ' j' → logprob: -3.807215690612793
    9. ' ' → logprob: -4.182215690612793
    10. ',' → logprob: -5.182215690612793

Token 2297: ' x' (ID: 1215)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5247524976730347
    2. '[' → logprob: -1.2747524976730347
    3. '_' → logprob: -2.524752616882324
    4. '```' → logprob: -4.274752616882324
    5. '   ' → logprob: -4.649752616882324
    6. '[
' → logprob: -5.149752616882324
    7. ' ' → logprob: -5.649752616882324
    8. ' [' → logprob: -6.274752616882324
    9. '[j' → logprob: -6.399752616882324
    10. ' _' → logprob: -6.399752616882324

Token 2298: ' des' (ID: 731)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.7114938497543335
    2. '[i' → logprob: -0.9614938497543335
    3. '_' → logprob: -2.586493968963623
    4. 's' → logprob: -3.836493968963623
    5. '[' → logprob: -4.586493968963623
    6. '[_' → logprob: -5.336493968963623
    7. '```' → logprob: -5.461493968963623
    8. ' =' → logprob: -6.461493968963623
    9. '_[' → logprob: -6.461493968963623
    10. 'i' → logprob: -6.836493968963623

Token 2299: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3638995587825775
    2. ' stops' → logprob: -1.6138995885849
    3. ' arr' → logprob: -3.1138994693756104
    4. 'st' → logprob: -3.2388994693756104
    5. ' j' → logprob: -5.2388997077941895
    6. 'j' → logprob: -5.4888997077941895
    7. 'ar' → logprob: -6.3638997077941895
    8. 'x' → logprob: -6.8638997077941895
    9. 'sem' → logprob: -6.9888997077941895
    10. ' x' → logprob: -6.9888997077941895

Token 2300: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00013417120499070734
    2. 'êt' → logprob: -9.375134468078613
    3. '[' → logprob: -11.125134468078613
    4. 'ê' → logprob: -11.375134468078613
    5. '[i' → logprob: -11.875134468078613
    6. '^' → logprob: -12.375134468078613
    7. '[
' → logprob: -12.875134468078613
    8. 'ôts' → logprob: -13.750134468078613
    9. ' stops' → logprob: -14.250134468078613
    10. '^[' → logprob: -14.375134468078613

Token 2301: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7446544170379639
    2. '_sem' → logprob: -2.119654417037964
    3. ' sem' → logprob: -2.369654417037964
    4. '[i' → logprob: -2.619654417037964
    5. 'sem' → logprob: -2.869654417037964
    6. '_s' → logprob: -3.619654417037964
    7. 's' → logprob: -3.744654417037964
    8. '[' → logprob: -3.869654417037964
    9. ' _' → logprob: -4.119654655456543
    10. '```' → logprob: -4.119654655456543

Token 2302: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.0065223416313529015
    2. 'express' → logprob: -5.381522178649902
    3. '[i' → logprob: -7.756522178649902
    4. 'i' → logprob: -9.006522178649902
    5. 'iex' → logprob: -9.131522178649902
    6. '_i' → logprob: -9.131522178649902
    7. 'pexpr' → logprob: -9.506522178649902
    8. ' expresses' → logprob: -9.756522178649902
    9. ')' → logprob: -9.756522178649902
    10. 'ieurs' → logprob: -9.881522178649902

Token 2303: ' sur' (ID: 1512)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6181132197380066
    2. '[' → logprob: -1.7431132793426514
    3. '_' → logprob: -2.1181132793426514
    4. '```' → logprob: -2.1181132793426514
    5. '_i' → logprob: -5.118113040924072
    6. 's' → logprob: -5.368113040924072
    7. '[
' → logprob: -5.368113040924072
    8. ':' → logprob: -5.618113040924072
    9. ']' → logprob: -5.868113040924072
    10. '   ' → logprob: -5.993113040924072

Token 2304: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8248599767684937
    2. 'i' → logprob: -1.8248599767684937
    3. '1' → logprob: -2.199860095977783
    4. 'interval' → logprob: -2.449860095977783
    5. '[i' → logprob: -3.324860095977783
    6. ' l' → logprob: -3.449860095977783
    7. ' la' → logprob: -3.824860095977783
    8. ' interval' → logprob: -3.949860095977783
    9. 'l' → logprob: -4.074860095977783
    10. ' intervals' → logprob: -4.199860095977783

Token 2305: '’' (ID: 438)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7619915008544922
    2. 'i' → logprob: -1.1369915008544922
    3. ' i' → logprob: -2.261991500854492
    4. ' interval' → logprob: -2.886991500854492
    5. '[i' → logprob: -4.261991500854492
    6. ' S' → logprob: -5.261991500854492
    7. ' ' → logprob: -5.761991500854492
    8. ' next' → logprob: -6.011991500854492
    9. ''' → logprob: -6.011991500854492
    10. ']' → logprob: -6.261991500854492

Token 2306: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.06234173849225044
    2. 'i' → logprob: -3.0623416900634766
    3. ' interval' → logprob: -5.437341690063477
    4. ' i' → logprob: -5.562341690063477
    5. 'inter' → logprob: -5.812341690063477
    6. ']' → logprob: -7.687341690063477
    7. '[i' → logprob: -7.812341690063477
    8. ' ' → logprob: -8.187341690063477
    9. '   ' → logprob: -8.937341690063477
    10. '`' → logprob: -8.937341690063477

Token 2307: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6541732549667358
    2. 'e' → logprob: -0.7791732549667358
    3. 'ale' → logprob: -4.779173374176025
    4. 'val' → logprob: -5.029173374176025
    5. 'al' → logprob: -6.029173374176025
    6. 'vale' → logprob: -6.654173374176025
    7. 've' → logprob: -7.029173374176025
    8. 'v' → logprob: -7.029173374176025
    9. '[' → logprob: -8.404172897338867
    10. 'alle' → logprob: -8.654172897338867

Token 2308: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32242289185523987
    2. '[i' → logprob: -1.5724228620529175
    3. '[
' → logprob: -3.447422981262207
    4. '_' → logprob: -4.697422981262207
    5. '```' → logprob: -4.947422981262207
    6. '=' → logprob: -4.947422981262207
    7. ']' → logprob: -6.197422981262207
    8. ':' → logprob: -6.447422981262207
    9. 'def' → logprob: -6.697422981262207
    10. '   ' → logprob: -6.947422981262207

Token 2309: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002871207892894745
    2. ' i' → logprob: -6.627871036529541
    3. 'x' → logprob: -7.252871036529541
    4. '   ' → logprob: -7.502871036529541
    5. ',' → logprob: -9.0028715133667
    6. ')' → logprob: -10.3778715133667
    7. 'j' → logprob: -10.5028715133667
    8. ' ' → logprob: -11.0028715133667
    9. '
' → logprob: -11.1278715133667
    10. '1' → logprob: -11.7528715133667

Token 2310: ' ≥' (ID: 99731)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9934868812561035
    2. ' +' → logprob: -1.7434868812561035
    3. '_i' → logprob: -2.3684868812561035
    4. '=' → logprob: -2.4934868812561035
    5. '[i' → logprob: -2.6184868812561035
    6. ')' → logprob: -2.6184868812561035
    7. ' =' → logprob: -3.1184868812561035
    8. '[' → logprob: -3.7434868812561035
    9. '   ' → logprob: -3.8684868812561035
    10. '_' → logprob: -4.2434868812561035

Token 2311: ' minimal' (ID: 19957)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013676194939762354
    2. '1' → logprob: -7.001367568969727
    3. ' ' → logprob: -7.751367568969727
    4. '   ' → logprob: -10.751367568969727
    5. '3' → logprob: -13.251367568969727
    6. '
' → logprob: -13.876367568969727
    7. '  ' → logprob: -14.626367568969727
    8. '```' → logprob: -14.626367568969727
    9. ')' → logprob: -14.751367568969727
    10. '0' → logprob: -16.126367568969727

Token 2312: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6140455603599548
    2. '_arr' → logprob: -1.7390456199645996
    3. '_st' → logprob: -2.1140456199645996
    4. '_stop' → logprob: -2.9890456199645996
    5. '=' → logprob: -3.8640456199645996
    6. 'arr' → logprob: -4.1140456199646
    7. 's' → logprob: -4.4890456199646
    8. ')' → logprob: -4.6140456199646
    9. '_s' → logprob: -4.7390456199646
    10. 'st' → logprob: -4.8640456199646

Token 2313: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.061100978404283524
    2. '1' → logprob: -3.561100959777832
    3. ' ' → logprob: -3.561100959777832
    4. '=' → logprob: -7.311100959777832
    5. '   ' → logprob: -7.561100959777832
    6. ')' → logprob: -7.811100959777832
    7. '```' → logprob: -8.311100959777832
    8. ' =' → logprob: -8.686100959777832
    9. ',' → logprob: -9.686100959777832
    10. 'arr' → logprob: -9.936100959777832

Token 2314: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8721110224723816
    2. ',' → logprob: -0.9971110224723816
    3. ' stops' → logprob: -2.6221110820770264
    4. '):' → logprob: -2.7471110820770264
    5. ' ,' → logprob: -3.3721110820770264
    6. '):
' → logprob: -4.622110843658447
    7. ' )' → logprob: -4.997110843658447
    8. '),' → logprob: -5.622110843658447
    9. '
' → logprob: -5.747110843658447
    10. ' ):' → logprob: -6.372110843658447

Token 2315: '   ' (ID: 271)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9048933386802673
    2. '[' → logprob: -1.404893398284912
    3. ':' → logprob: -2.029893398284912
    4. '   ' → logprob: -2.404893398284912
    5. 'for' → logprob: -2.904893398284912
    6. '```' → logprob: -4.029893398284912
    7. '[
' → logprob: -4.654893398284912
    8. ' =' → logprob: -4.654893398284912
    9. ',' → logprob: -5.029893398284912
    10. '[j' → logprob: -5.529893398284912

Token 2316: ' #' (ID: 1069)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.012712836265564
    2. '   ' → logprob: -1.637712836265564
    3. ':' → logprob: -1.762712836265564
    4. '[' → logprob: -1.887712836265564
    5. '```' → logprob: -3.2627129554748535
    6. 'for' → logprob: -3.3877129554748535
    7. '[
' → logprob: -4.7627129554748535
    8. ',' → logprob: -5.1377129554748535
    9. ' =' → logprob: -5.2627129554748535
    10. ' for' → logprob: -5.6377129554748535

Token 2317: ' On' (ID: 2160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0974366664886475
    2. '   ' → logprob: -1.3474366664886475
    3. '[i' → logprob: -2.8474366664886475
    4. 'for' → logprob: -2.9724366664886475
    5. ' =' → logprob: -3.2224366664886475
    6. 'def' → logprob: -3.3474366664886475
    7. ',' → logprob: -3.4724366664886475
    8. '[' → logprob: -3.4724366664886475
    9. ' (' → logprob: -4.222436904907227
    10. '=' → logprob: -4.472436904907227

Token 2318: ' a' (ID: 261)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6293368339538574
    2. 'tab' → logprob: -1.5043368339538574
    3. 'update' → logprob: -3.1293368339538574
    4. 'for' → logprob: -3.2543368339538574
    5. ' continue' → logprob: -3.5043368339538574
    6. 'range' → logprob: -3.7543368339538574
    7. 'contin' → logprob: -4.129336833953857
    8. 'util' → logprob: -4.504336833953857
    9. 'indent' → logprob: -5.254336833953857
    10. ' tab' → logprob: -5.504336833953857

Token 2319: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3180102109909058
    2. 'K' → logprob: -1.5680102109909058
    3. 'x' → logprob: -1.9430102109909058
    4. '   ' → logprob: -2.3180103302001953
    5. ' K' → logprob: -3.1930103302001953
    6. 'i' → logprob: -3.5680103302001953
    7. 'j' → logprob: -3.5680103302001953
    8. '0' → logprob: -3.6930103302001953
    9. ' range' → logprob: -3.8180103302001953
    10. ' ' → logprob: -3.8180103302001953

Token 2320: 'K' (ID: 42)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07414568215608597
    2. ' x' → logprob: -3.199145793914795
    3. 'K' → logprob: -3.699145793914795
    4. ' K' → logprob: -6.699145793914795
    5. '   ' → logprob: -6.699145793914795
    6. 'j' → logprob: -7.199145793914795
    7. '1' → logprob: -7.324145793914795
    8. '0' → logprob: -7.574145793914795
    9. 'i' → logprob: -8.199145317077637
    10. ' ' → logprob: -8.449145317077637

Token 2321: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4306418299674988
    2. '-' → logprob: -1.8056418895721436
    3. '+' → logprob: -2.3056418895721436
    4. ' +' → logprob: -3.3056418895721436
    5. ')' → logprob: -3.9306418895721436
    6. '[' → logprob: -4.6806416511535645
    7. '   ' → logprob: -5.3056416511535645
    8. '[i' → logprob: -5.5556416511535645
    9. '
' → logprob: -6.1806416511535645
    10. ' ' → logprob: -6.3056416511535645

Token 2322: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00046284322161227465
    2. ' M' → logprob: -7.875463008880615
    3. '   ' → logprob: -9.875462532043457
    4. 'B' → logprob: -10.500462532043457
    5. ' ' → logprob: -13.250462532043457
    6. '  ' → logprob: -14.625462532043457
    7. '    ' → logprob: -15.125462532043457
    8. '     ' → logprob: -15.500462532043457
    9. ')' → logprob: -15.750462532043457
    10. '       ' → logprob: -15.750462532043457

Token 2323: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6540011167526245
    2. '+' → logprob: -1.0290011167526245
    3. ' +' → logprob: -2.279001235961914
    4. ')+' → logprob: -4.154001235961914
    5. ' -' → logprob: -6.154001235961914
    6. '-' → logprob: -7.154001235961914
    7. ')]' → logprob: -7.654001235961914
    8. ']' → logprob: -8.154001235961914
    9. ' )' → logprob: -8.779001235961914
    10. ']+' → logprob: -9.154001235961914

Token 2324: ' arr' (ID: 1724)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8094432950019836
    2. ' +' → logprob: -1.0594432353973389
    3. ' -' → logprob: -1.9344432353973389
    4. ')' → logprob: -3.809443235397339
    5. '-' → logprob: -4.184443473815918
    6. '
' → logprob: -5.934443473815918
    7. '[' → logprob: -6.059443473815918
    8. ' +=' → logprob: -6.059443473815918
    9. '_' → logprob: -6.309443473815918
    10. ']' → logprob: -6.809443473815918

Token 2325: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.0008903791895136237
    2. 'êt' → logprob: -7.375890254974365
    3. 'ê' → logprob: -9.000890731811523
    4. ']' → logprob: -10.000890731811523
    5. '[i' → logprob: -11.000890731811523
    6. 'êtes' → logprob: -11.125890731811523
    7. '_' → logprob: -11.125890731811523
    8. '[' → logprob: -11.250890731811523
    9. '^' → logprob: -12.250890731811523
    10. 'ôts' → logprob: -12.500890731811523

Token 2326: ' supplémentaires' (ID: 99346)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.003051996231079
    2. ' supplémentaires' → logprob: -1.878051996231079
    3. '+' → logprob: -2.253051996231079
    4. '_sup' → logprob: -2.378051996231079
    5. ' supplémentaire' → logprob: -2.628051996231079
    6. ')' → logprob: -2.628051996231079
    7. '_s' → logprob: -3.253051996231079
    8. '_extra' → logprob: -4.1280517578125
    9. 'sup' → logprob: -4.2530517578125
    10. 's' → logprob: -4.8780517578125

Token 2327: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4120482206344604
    2. ' =' → logprob: -1.4120482206344604
    3. '+' → logprob: -2.28704833984375
    4. '[' → logprob: -2.66204833984375
    5. ')' → logprob: -3.28704833984375
    6. '[i' → logprob: -3.41204833984375
    7. '_' → logprob: -3.41204833984375
    8. '   ' → logprob: -3.53704833984375
    9. ']' → logprob: -3.78704833984375
    10. ':' → logprob: -3.78704833984375

Token 2328: ' répart' (ID: 147636)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.6510844826698303
    2. 'dis' → logprob: -1.1510844230651855
    3. 'assign' → logprob: -2.4010844230651855
    4. 'all' → logprob: -3.1510844230651855
    5. 'ré' → logprob: -4.7760844230651855
    6. 'placer' → logprob: -4.9010844230651855
    7. 'util' → logprob: -5.1510844230651855
    8. 'attrib' → logprob: -6.4010844230651855
    9. ' répart' → logprob: -6.6510844230651855
    10. '
' → logprob: -6.9010844230651855

Token 2329: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.6504088044166565
    2. 're' → logprob: -2.2754087448120117
    3. 'i' → logprob: -2.9004087448120117
    4. 'er' → logprob: -3.2754087448120117
    5. '   ' → logprob: -3.2754087448120117
    6. ')
' → logprob: -3.6504087448120117
    7. 'iter' → logprob: -3.7754087448120117
    8. ')' → logprob: -4.025408744812012
    9. 'is' → logprob: -4.275408744812012
    10. 'tir' → logprob: -4.275408744812012

Token 2330: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2007420063018799
    2. '[i' → logprob: -1.3257420063018799
    3. ':' → logprob: -2.20074200630188
    4. '   ' → logprob: -2.82574200630188
    5. ')' → logprob: -3.32574200630188
    6. '+' → logprob: -3.45074200630188
    7. ',' → logprob: -3.45074200630188
    8. '[
' → logprob: -3.57574200630188
    9. ']' → logprob: -3.95074200630188
    10. ' ' → logprob: -4.200741767883301

Token 2331: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47531622648239136
    2. '   ' → logprob: -1.2253162860870361
    3. ':
' → logprob: -3.850316286087036
    4. ']' → logprob: -3.975316286087036
    5. '[' → logprob: -4.475316047668457
    6. ' ' → logprob: -5.225316047668457
    7. ' :' → logprob: -5.600316047668457
    8. 'for' → logprob: -5.850316047668457
    9. '):' → logprob: -5.975316047668457
    10. ']:' → logprob: -5.975316047668457

Token 2332: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7547669410705566
    2. '   ' → logprob: -0.7547669410705566
    3. '):' → logprob: -4.254766941070557
    4. ']' → logprob: -4.879766941070557
    5. '       ' → logprob: -4.879766941070557
    6. '[i' → logprob: -5.379766941070557
    7. '[' → logprob: -5.379766941070557
    8. 'for' → logprob: -5.504766941070557
    9. ']:' → logprob: -5.629766941070557
    10. ' :' → logprob: -5.879766941070557

Token 2333: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7481809854507446
    2. ']' → logprob: -1.8731809854507446
    3. 'for' → logprob: -2.373180866241455
    4. '[' → logprob: -2.748180866241455
    5. ':' → logprob: -2.873180866241455
    6. ' for' → logprob: -3.873180866241455
    7. ' ' → logprob: -3.998180866241455
    8. '][' → logprob: -3.998180866241455
    9. '[i' → logprob: -4.123180866241455
    10. 'def' → logprob: -4.248180866241455

Token 2334: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1560908555984497
    2. '   ' → logprob: -2.28109073638916
    3. ' ' → logprob: -2.28109073638916
    4. ')' → logprob: -2.53109073638916
    5. 'x' → logprob: -2.90609073638916
    6. ' x' → logprob: -3.53109073638916
    7. '[' → logprob: -3.65609073638916
    8. '```' → logprob: -3.65609073638916
    9. ' j' → logprob: -3.78109073638916
    10. 'for' → logprob: -3.78109073638916

Token 2335: ' optimiser' (ID: 195777)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02492930367588997
    2. ' i' → logprob: -3.7749292850494385
    3. 'x' → logprob: -6.899929523468018
    4. 'j' → logprob: -7.774929523468018
    5. ' chaque' → logprob: -9.89992904663086
    6. ' j' → logprob: -10.02492904663086
    7. 'each' → logprob: -10.64992904663086
    8. ' x' → logprob: -10.77492904663086
    9. ' la' → logprob: -10.89992904663086
    10. 'l' → logprob: -11.02492904663086

Token 2336: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0130324363708496
    2. ']' → logprob: -2.2630324363708496
    3. ':' → logprob: -2.3880324363708496
    4. '[i' → logprob: -2.3880324363708496
    5. '[
' → logprob: -2.8880324363708496
    6. '[]' → logprob: -3.0130324363708496
    7. '```' → logprob: -3.0130324363708496
    8. '_' → logprob: -3.0130324363708496
    9. '   ' → logprob: -3.5130324363708496
    10. ')' → logprob: -3.8880324363708496

Token 2337: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3765180110931396
    2. 'for' → logprob: -1.6265180110931396
    3. 'j' → logprob: -2.5015180110931396
    4. ':' → logprob: -2.6265180110931396
    5. ')' → logprob: -2.7515180110931396
    6. 'x' → logprob: -3.0015180110931396
    7. ' for' → logprob: -3.3765180110931396
    8. ' j' → logprob: -3.3765180110931396
    9. ' ' → logprob: -3.3765180110931396
    10. '0' → logprob: -3.3765180110931396

Token 2338: ' fait' (ID: 7473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5389916300773621
    2. '[' → logprob: -2.163991689682007
    3. ' =' → logprob: -2.663991689682007
    4. 'continue' → logprob: -2.663991689682007
    5. 'contin' → logprob: -3.413991689682007
    6. ' continue' → logprob: -3.788991689682007
    7. 'for' → logprob: -4.663991451263428
    8. ' va' → logprob: -4.788991451263428
    9. '[]' → logprob: -4.913991451263428
    10. 'def' → logprob: -5.038991451263428

Token 2339: ' dp' (ID: 21546)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.3089605569839478
    2. 'range' → logprob: -1.5589605569839478
    3. '   ' → logprob: -1.6839605569839478
    4. '```' → logprob: -2.558960437774658
    5. ' i' → logprob: -2.933960437774658
    6. 'for' → logprob: -3.433960437774658
    7. ' dp' → logprob: -3.558960437774658
    8. ' une' → logprob: -3.683960437774658
    9. 'dp' → logprob: -3.808960437774658
    10. 'i' → logprob: -4.183960437774658

Token 2340: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8399983048439026
    2. ' =' → logprob: -0.9649983048439026
    3. '[' → logprob: -2.214998245239258
    4. '   ' → logprob: -3.464998245239258
    5. '=' → logprob: -4.214998245239258
    6. '[
' → logprob: -4.589998245239258
    7. ']' → logprob: -5.714998245239258
    8. '```' → logprob: -6.089998245239258
    9. '_' → logprob: -6.214998245239258
    10. ',' → logprob: -6.714998245239258

Token 2341: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10145199298858643
    2. '][' → logprob: -2.601451873779297
    3. ']' → logprob: -4.351451873779297
    4. ' +' → logprob: -5.101451873779297
    5. '[i' → logprob: -5.976451873779297
    6. '[' → logprob: -8.601451873779297
    7. '+
' → logprob: -8.726451873779297
    8. '   ' → logprob: -9.476451873779297
    9. '
' → logprob: -10.101451873779297
    10. '_next' → logprob: -10.476451873779297

Token 2342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '   ' → logprob: -14.00000286102295
    3. '```' → logprob: -14.25000286102295
    4. '
' → logprob: -14.37500286102295
    5. ' ' → logprob: -14.75000286102295
    6. '][' → logprob: -15.00000286102295
    7. '+' → logprob: -16.625003814697266
    8. ']' → logprob: -17.000003814697266
    9. '``' → logprob: -17.000003814697266
    10. '	' → logprob: -17.125003814697266

Token 2343: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0037959229666739702
    2. ']' → logprob: -5.628796100616455
    3. ' ][' → logprob: -9.753795623779297
    4. '   ' → logprob: -9.878795623779297
    5. '][]' → logprob: -10.753795623779297
    6. '][:' → logprob: -11.628795623779297
    7. '+' → logprob: -11.878795623779297
    8. '[i' → logprob: -11.878795623779297
    9. '```' → logprob: -11.878795623779297
    10. ']
' → logprob: -12.128795623779297

Token 2344: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0012454704847186804
    2. 'k' → logprob: -7.376245498657227
    3. ']' → logprob: -8.376245498657227
    4. ':]' → logprob: -9.376245498657227
    5. '
' → logprob: -9.501245498657227
    6. '...]' → logprob: -10.001245498657227
    7. '   ' → logprob: -10.376245498657227
    8. '][' → logprob: -10.501245498657227
    9. ' :]' → logprob: -10.876245498657227
    10. ' j' → logprob: -11.251245498657227

Token 2345: '+x' (ID: 91888)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.037229228764772415
    2. ' +' → logprob: -4.162229061126709
    3. ']' → logprob: -4.412229061126709
    4. '][' → logprob: -4.787229061126709
    5. ']+' → logprob: -8.412229537963867
    6. '   ' → logprob: -9.287229537963867
    7. '[' → logprob: -10.287229537963867
    8. '```' → logprob: -10.662229537963867
    9. '+
' → logprob: -11.037229537963867
    10. '[i' → logprob: -11.037229537963867

Token 2346: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7498186826705933
    2. '+' → logprob: -0.8748186826705933
    3. '[i' → logprob: -2.499818801879883
    4. ' +' → logprob: -4.624818801879883
    5. '-' → logprob: -4.874818801879883
    6. ']+' → logprob: -5.374818801879883
    7. '[' → logprob: -6.374818801879883
    8. '```' → logprob: -6.999818801879883
    9. '+]' → logprob: -6.999818801879883
    10. '[x' → logprob: -7.374818801879883

Token 2347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000239536224398762
    2. ']' → logprob: -8.875239372253418
    3. ' ' → logprob: -9.500239372253418
    4. 'i' → logprob: -11.000239372253418
    5. '   ' → logprob: -12.375239372253418
    6. 'x' → logprob: -14.125239372253418
    7. '2' → logprob: -14.375239372253418
    8. '']' → logprob: -15.000239372253418
    9. ')' → logprob: -15.125239372253418
    10. '  ' → logprob: -15.375239372253418

Token 2348: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006313162390142679
    2. '+' → logprob: -5.256313323974609
    3. ']+=' → logprob: -7.506313323974609
    4. ' ]' → logprob: -8.88131332397461
    5. '+]' → logprob: -9.13131332397461
    6. ']+' → logprob: -9.38131332397461
    7. ']:' → logprob: -9.50631332397461
    8. ']=' → logprob: -9.88131332397461
    9. ' +' → logprob: -10.50631332397461
    10. '```' → logprob: -11.88131332397461

Token 2349: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03199884295463562
    2. '[i' → logprob: -4.156998634338379
    3. '[
' → logprob: -4.906998634338379
    4. '```' → logprob: -6.156998634338379
    5. ']' → logprob: -6.406998634338379
    6. ':' → logprob: -6.406998634338379
    7. '+' → logprob: -7.406998634338379
    8. '(' → logprob: -7.906998634338379
    9. '   ' → logprob: -8.031998634338379
    10. '\[' → logprob: -8.156998634338379

Token 2350: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5499832630157471
    2. 'min' → logprob: -0.9249832630157471
    3. 'dp' → logprob: -4.299983024597168
    4. ' dp' → logprob: -4.674983024597168
    5. 'max' → logprob: -6.174983024597168
    6. ' max' → logprob: -6.549983024597168
    7. '   ' → logprob: -10.049983024597168
    8. ' ' → logprob: -11.174983024597168
    9. '	min' → logprob: -11.424983024597168
    10. ' ' → logprob: -11.549983024597168

Token 2351: '(
' (ID: 1607)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.744466245174408
    2. '(dp' → logprob: -1.6194663047790527
    3. 'dp' → logprob: -1.8694663047790527
    4. '(' → logprob: -2.6194663047790527
    5. ' dp' → logprob: -3.1194663047790527
    6. '(
' → logprob: -3.6194663047790527
    7. '[
' → logprob: -4.744466304779053
    8. ' (' → logprob: -4.994466304779053
    9. '   ' → logprob: -5.369466304779053
    10. ' [' → logprob: -6.619466304779053

Token 2352: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.4468926191329956
    2. 'dp' → logprob: -1.5718926191329956
    3. ']' → logprob: -1.6968926191329956
    4. '(dp' → logprob: -1.8218926191329956
    5. ' ]' → logprob: -2.946892738342285
    6. '[
' → logprob: -3.446892738342285
    7. '[' → logprob: -4.071892738342285
    8. ')' → logprob: -4.071892738342285
    9. '][' → logprob: -4.196892738342285
    10. ' ][' → logprob: -4.196892738342285

Token 2353: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007948118261992931
    2. '(dp' → logprob: -5.75794792175293
    3. ' dp' → logprob: -6.13294792175293
    4. '(
' → logprob: -7.00794792175293
    5. '[
' → logprob: -7.25794792175293
    6. '   ' → logprob: -8.75794792175293
    7. '[' → logprob: -8.88294792175293
    8. '                   ' → logprob: -9.00794792175293
    9. '               ' → logprob: -9.50794792175293
    10. '           ' → logprob: -9.75794792175293

Token 2354: '  ' (ID: 256)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11612571775913239
    2. ' dp' → logprob: -2.2411258220672607
    3. '   ' → logprob: -6.741125583648682
    4. ']' → logprob: -7.616125583648682
    5. '(dp' → logprob: -8.61612606048584
    6. '][' → logprob: -8.74112606048584
    7. '[' → logprob: -8.86612606048584
    8. '[
' → logprob: -9.11612606048584
    9. ' ' → logprob: -9.11612606048584
    10. '_dp' → logprob: -9.24112606048584

Token 2355: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.029401903972029686
    2. ' dp' → logprob: -3.654402017593384
    3. 'j' → logprob: -6.279401779174805
    4. '   ' → logprob: -7.904401779174805
    5. ' j' → logprob: -9.279401779174805
    6. ' ' → logprob: -9.404401779174805
    7. '(dp' → logprob: -9.529401779174805
    8. '       ' → logprob: -9.529401779174805
    9. '  ' → logprob: -9.904401779174805
    10. '    ' → logprob: -10.029401779174805

Token 2356: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.6895233531831764e-05
    2. '[' → logprob: -11.25002670288086
    3. 'i' → logprob: -11.62502670288086
    4. '   ' → logprob: -13.25002670288086
    5. ' [' → logprob: -13.37502670288086
    6. '
' → logprob: -15.00002670288086
    7. '```' → logprob: -15.00002670288086
    8. '[j' → logprob: -15.37502670288086
    9. '\[' → logprob: -15.37502670288086
    10. ' ' → logprob: -15.62502670288086

Token 2357: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7712626457214355
    2. '][' → logprob: -0.7712626457214355
    3. '+' → logprob: -2.6462626457214355
    4. '   ' → logprob: -6.2712626457214355
    5. ']' → logprob: -6.7712626457214355
    6. '+i' → logprob: -8.146263122558594
    7. '[' → logprob: -8.271263122558594
    8. 'i' → logprob: -8.896263122558594
    9. ' +' → logprob: -9.271263122558594
    10. ' ][' → logprob: -9.396263122558594

Token 2358: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.024262234568595886
    2. 'i' → logprob: -3.7742621898651123
    3. '   ' → logprob: -7.774262428283691
    4. ' j' → logprob: -8.524262428283691
    5. '][' → logprob: -9.024262428283691
    6. ' ' → logprob: -9.649262428283691
    7. ']' → logprob: -10.149262428283691
    8. '  ' → logprob: -10.274262428283691
    9. ' ][' → logprob: -10.774262428283691
    10. 'x' → logprob: -11.024262428283691

Token 2359: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.747612476348877
    2. ']' → logprob: -0.872612476348877
    3. '[i' → logprob: -2.497612476348877
    4. '+' → logprob: -4.497612476348877
    5. ']+' → logprob: -4.622612476348877
    6. '[' → logprob: -6.622612476348877
    7. '   ' → logprob: -6.997612476348877
    8. '[
' → logprob: -6.997612476348877
    9. ']
' → logprob: -7.122612476348877
    10. '|' → logprob: -7.997612476348877

Token 2360: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2390049695968628
    2. '+' → logprob: -1.8640049695968628
    3. ']' → logprob: -3.2390050888061523
    4. '[i' → logprob: -5.364005088806152
    5. ' +
' → logprob: -5.989005088806152
    6. ']+' → logprob: -6.114005088806152
    7. '+
' → logprob: -6.239005088806152
    8. '][' → logprob: -6.489005088806152
    9. '   ' → logprob: -6.864005088806152
    10. ')' → logprob: -7.239005088806152

Token 2361: ' cost' (ID: 3097)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6016293168067932
    2. '((' → logprob: -1.4766292572021484
    3. '(B' → logprob: -2.7266292572021484
    4. ' ((' → logprob: -3.1016292572021484
    5. '(' → logprob: -3.6016292572021484
    6. '(C' → logprob: -4.601629257202148
    7. 'd' → logprob: -4.726629257202148
    8. '(segment' → logprob: -4.726629257202148
    9. '(A' → logprob: -4.976629257202148
    10. ' d' → logprob: -4.976629257202148

Token 2362: '(interval' (ID: 100435)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9387840032577515
    2. '[i' → logprob: -1.4387840032577515
    3. ')' → logprob: -1.8137840032577515
    4. '   ' → logprob: -3.313784122467041
    5. ' +' → logprob: -3.438784122467041
    6. ']' → logprob: -3.563784122467041
    7. '+' → logprob: -3.563784122467041
    8. '_' → logprob: -3.813784122467041
    9. '[
' → logprob: -3.938784122467041
    10. '[x' → logprob: -4.438784122467041

Token 2363: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6065558195114136
    2. '_' → logprob: -1.2315558195114136
    3. '_length' → logprob: -2.856555938720703
    4. ']' → logprob: -3.981555938720703
    5. ')' → logprob: -4.231555938720703
    6. '][' → logprob: -4.606555938720703
    7. '[' → logprob: -4.731555938720703
    8. 's' → logprob: -4.981555938720703
    9. '_[' → logprob: -5.231555938720703
    10. '_]' → logprob: -5.356555938720703

Token 2364: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03520609810948372
    2. '[' → logprob: -4.785206317901611
    3. ')' → logprob: -5.160206317901611
    4. '][' → logprob: -5.285206317901611
    5. '   ' → logprob: -5.535206317901611
    6. ',' → logprob: -5.910206317901611
    7. ')[' → logprob: -6.535206317901611
    8. ']' → logprob: -6.910206317901611
    9. '[x' → logprob: -6.910206317901611
    10. '_' → logprob: -7.160206317901611

Token 2365: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2275741994380951
    2. ' x' → logprob: -1.6025742292404175
    3. 'i' → logprob: -7.602574348449707
    4. 'k' → logprob: -8.102574348449707
    5. '    ' → logprob: -8.602574348449707
    6. '   ' → logprob: -8.852574348449707
    7. ' i' → logprob: -8.852574348449707
    8. ' ' → logprob: -8.977574348449707
    9. '1' → logprob: -9.352574348449707
    10. 'j' → logprob: -9.727574348449707

Token 2366: ' arr' (ID: 1724)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.622173011302948
    2. ')]' → logprob: -0.872173011302948
    3. ')])' → logprob: -3.7471730709075928
    4. '_' → logprob: -5.622172832489014
    5. '-' → logprob: -5.872172832489014
    6. '+' → logprob: -5.997172832489014
    7. '   ' → logprob: -6.372172832489014
    8. '):' → logprob: -6.747172832489014
    9. ')],' → logprob: -6.872172832489014
    10. ' )' → logprob: -6.872172832489014

Token 2367: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.05121908336877823
    2. '_' → logprob: -4.1762189865112305
    3. 'êt' → logprob: -4.3012189865112305
    4. ')' → logprob: -4.6762189865112305
    5. '_stop' → logprob: -5.8012189865112305
    6. ')_' → logprob: -5.9262189865112305
    7. '_i' → logprob: -6.4262189865112305
    8. 'ê' → logprob: -6.4262189865112305
    9. 'êmes' → logprob: -7.5512189865112305
    10. 'êtes' → logprob: -8.05121898651123

Token 2368: ' sem' (ID: 2743)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07942526787519455
    2. ')]' → logprob: -3.32942533493042
    3. ' )' → logprob: -3.95442533493042
    4. ')])' → logprob: -4.82942533493042
    5. ' sem' → logprob: -5.45442533493042
    6. '_' → logprob: -6.57942533493042
    7. ',' → logprob: -6.82942533493042
    8. ')],' → logprob: -7.20442533493042
    9. '_sem' → logprob: -7.32942533493042
    10. 's' → logprob: -7.45442533493042

Token 2369: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.004452550783753395
    2. 'express' → logprob: -6.754452705383301
    3. '_i' → logprob: -7.129452705383301
    4. 'ip' → logprob: -7.254452705383301
    5. '_ip' → logprob: -8.1294527053833
    6. 'ipr' → logprob: -8.8794527053833
    7. 'pexpr' → logprob: -9.0044527053833
    8. 'i' → logprob: -9.5044527053833
    9. 'I' → logprob: -9.6919527053833
    10. ' expresses' → logprob: -10.0044527053833

Token 2370: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02872266061604023
    2. '[' → logprob: -4.653722763061523
    3. ',' → logprob: -5.903722763061523
    4. ')]' → logprob: -5.903722763061523
    5. '):' → logprob: -6.278722763061523
    6. ' )' → logprob: -6.403722763061523
    7. '_' → logprob: -6.403722763061523
    8. ']' → logprob: -6.528722763061523
    9. '[i' → logprob: -6.528722763061523
    10. ')])' → logprob: -6.903722763061523

Token 2371: ' cet' (ID: 19505)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.21307161450386047
    2. 'l' → logprob: -2.588071584701538
    3. ' interval' → logprob: -3.088071584701538
    4. ')' → logprob: -3.088071584701538
    5. ' l' → logprob: -4.463071823120117
    6. ' )' → logprob: -6.338071823120117
    7. '_interval' → logprob: -6.338071823120117
    8. ' ' → logprob: -6.588071823120117
    9. 'segment' → logprob: -6.838071823120117
    10. ' la' → logprob: -6.963071823120117

Token 2372: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.09750328958034515
    2. '_interval' → logprob: -2.722503185272217
    3. ' interval' → logprob: -3.847503185272217
    4. '_' → logprob: -5.722503185272217
    5. '_inter' → logprob: -6.347503185272217
    6. ')' → logprob: -7.847503185272217
    7. ']' → logprob: -8.972503662109375
    8. ' _' → logprob: -8.972503662109375
    9. ' ' → logprob: -9.972503662109375
    10. 'inter' → logprob: -10.722503662109375

Token 2373: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.11353267729282379
    2. ']' → logprob: -2.863532781600952
    3. 'le' → logprob: -3.613532781600952
    4. 'e' → logprob: -4.488532543182373
    5. 'v' → logprob: -5.238532543182373
    6. 'vale' → logprob: -5.988532543182373
    7. 've' → logprob: -6.613532543182373
    8. '])' → logprob: -7.113532543182373
    9. ')' → logprob: -7.613532543182373
    10. 'va' → logprob: -8.238533020019531

Token 2374: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5212463140487671
    2. '[' → logprob: -1.896246314048767
    3. '[i' → logprob: -2.2712464332580566
    4. ']' → logprob: -2.8962464332580566
    5. '[
' → logprob: -3.6462464332580566
    6. '   ' → logprob: -3.7712464332580566
    7. ')]' → logprob: -4.146246433258057
    8. '+' → logprob: -4.896246433258057
    9. ',' → logprob: -5.271246433258057
    10. ')
' → logprob: -5.896246433258057

Token 2375: ' station' (ID: 11538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9983039498329163
    2. ' station' → logprob: -1.2483038902282715
    3. 'station' → logprob: -2.3733038902282715
    4. ')
' → logprob: -3.1233038902282715
    5. ' )' → logprob: -3.2483038902282715
    6. ',' → logprob: -3.8733038902282715
    7. ' segment' → logprob: -4.2483038902282715
    8. '):
' → logprob: -4.2483038902282715
    9. 'segment' → logprob: -4.2483038902282715
    10. ' S' → logprob: -4.2483038902282715

Token 2376: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.01043420284986496
    2. '_' → logprob: -6.260434150695801
    3. ')' → logprob: -6.510434150695801
    4. ' _' → logprob: -6.760434150695801
    5. 'limit' → logprob: -7.260434150695801
    6. '   ' → logprob: -7.385434150695801
    7. '+' → logprob: -7.635434150695801
    8. '_limits' → logprob: -7.635434150695801
    9. '[i' → logprob: -7.760434150695801
    10. '_i' → logprob: -8.2604341506958

Token 2377: '?)
' (ID: 90794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22533249855041504
    2. '[' → logprob: -2.600332498550415
    3. '[i' → logprob: -2.725332498550415
    4. '_' → logprob: -3.975332498550415
    5. '_)' → logprob: -5.100332260131836
    6. '):' → logprob: -5.225332260131836
    7. '+' → logprob: -5.225332260131836
    8. ']' → logprob: -5.350332260131836
    9. ',' → logprob: -5.600332260131836
    10. '   ' → logprob: -6.225332260131836

Token 2378: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6162830591201782
    2. '[i' → logprob: -1.7412830591201782
    3. '[
' → logprob: -2.3662829399108887
    4. '   ' → logprob: -2.6162829399108887
    5. ']' → logprob: -2.7412829399108887
    6. ')' → logprob: -3.8662829399108887
    7. '```' → logprob: -4.616282939910889
    8. 'def' → logprob: -4.616282939910889
    9. ':' → logprob: -5.616282939910889
    10. ',' → logprob: -6.991282939910889

Token 2379: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4989149570465088
    2. '[' → logprob: -1.4989149570465088
    3. ']' → logprob: -1.6239149570465088
    4. '[i' → logprob: -1.7489149570465088
    5. '   ' → logprob: -2.373914957046509
    6. '+' → logprob: -3.748914957046509
    7. '[
' → logprob: -3.748914957046509
    8. '```' → logprob: -4.49891471862793
    9. ':' → logprob: -5.49891471862793
    10. '_' → logprob: -5.74891471862793

Token 2380: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2008997201919556
    2. '   ' → logprob: -1.5758997201919556
    3. ']' → logprob: -1.7008997201919556
    4. '[i' → logprob: -2.075899600982666
    5. '[' → logprob: -2.825899600982666
    6. ':' → logprob: -3.450899600982666
    7. '):' → logprob: -4.075899600982666
    8. '+' → logprob: -4.200899600982666
    9. '):
' → logprob: -4.450899600982666
    10. ')
' → logprob: -4.575899600982666

Token 2381: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048255495727062225
    2. '   ' → logprob: -3.548255443572998
    3. '[' → logprob: -5.173255443572998
    4. '):' → logprob: -5.548255443572998
    5. ':
' → logprob: -6.298255443572998
    6. ')' → logprob: -6.423255443572998
    7. 'def' → logprob: -6.923255443572998
    8. ']' → logprob: -7.048255443572998
    9. '[i' → logprob: -7.048255443572998
    10. ']:' → logprob: -7.298255443572998

Token 2382: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7069699764251709
    2. ':' → logprob: -1.206969976425171
    3. 'def' → logprob: -2.456969976425171
    4. '[' → logprob: -2.831969976425171
    5. '[i' → logprob: -3.706969976425171
    6. ']' → logprob: -4.33197021484375
    7. ')' → logprob: -4.95697021484375
    8. '):' → logprob: -5.58197021484375
    9. ' def' → logprob: -5.95697021484375
    10. ']:' → logprob: -6.20697021484375

Token 2383: ' Dé' (ID: 27247)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28955596685409546
    2. '   ' → logprob: -2.5395560264587402
    3. '[' → logprob: -2.7895560264587402
    4. 'def' → logprob: -3.1645560264587402
    5. '[i' → logprob: -3.4145560264587402
    6. ']' → logprob: -4.66455602645874
    7. '):' → logprob: -5.03955602645874
    8. ']:' → logprob: -5.28955602645874
    9. ')' → logprob: -5.91455602645874
    10. ' def' → logprob: -6.66455602645874

Token 2384: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.012823467142879963
    2. 'p' → logprob: -4.387823581695557
    3. '[
' → logprob: -8.637823104858398
    4. '[' → logprob: -9.762823104858398
    5. '```' → logprob: -10.387823104858398
    6. '
' → logprob: -12.137823104858398
    7. ']' → logprob: -12.262823104858398
    8. ')' → logprob: -12.387823104858398
    9. '``' → logprob: -12.762823104858398
    10. '{
' → logprob: -12.887823104858398

Token 2385: 'ition' (ID: 868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5498040318489075
    2. 'inition' → logprob: -1.4248039722442627
    3. 'ition' → logprob: -1.7998039722442627
    4. ' def' → logprob: -5.174804210662842
    5. '```' → logprob: -5.924804210662842
    6. '   ' → logprob: -6.674804210662842
    7. 'f' → logprob: -7.424804210662842
    8. '
' → logprob: -7.799804210662842
    9. 'x' → logprob: -7.799804210662842
    10. 'ction' → logprob: -7.924804210662842

Token 2386: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27209460735321045
    2. 'def' → logprob: -2.6470947265625
    3. ':' → logprob: -3.0220947265625
    4. '[i' → logprob: -3.2720947265625
    5. '=' → logprob: -3.3970947265625
    6. '[
' → logprob: -3.7720947265625
    7. '```' → logprob: -4.8970947265625
    8. ' =' → logprob: -5.6470947265625
    9. '   ' → logprob: -6.1470947265625
    10. '[]' → logprob: -6.3970947265625

Token 2387: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.021208640187978745
    2. 'def' → logprob: -4.646208763122559
    3. ' cost' → logprob: -5.146208763122559
    4. 'l' → logprob: -6.771208763122559
    5. 'x' → logprob: -7.271208763122559
    6. 'interval' → logprob: -7.521208763122559
    7. '_cost' → logprob: -7.771208763122559
    8. ' la' → logprob: -7.896208763122559
    9. 'co' → logprob: -8.271208763122559
    10. 'segment' → logprob: -8.271208763122559

Token 2388: '(interval' (ID: 100435)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11521909385919571
    2. 'def' → logprob: -2.4902191162109375
    3. '=' → logprob: -4.6152191162109375
    4. '(i' → logprob: -5.2402191162109375
    5. '(interval' → logprob: -5.3652191162109375
    6. '(
' → logprob: -6.2402191162109375
    7. ':' → logprob: -6.7402191162109375
    8. '[' → logprob: -7.3652191162109375
    9. '_' → logprob: -7.3652191162109375
    10. '(x' → logprob: -8.740219116210938

Token 2389: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9321002960205078
    2. '_i' → logprob: -1.1821002960205078
    3. ' i' → logprob: -2.557100296020508
    4. ')' → logprob: -2.557100296020508
    5. 'i' → logprob: -3.307100296020508
    6. ',' → logprob: -3.682100296020508
    7. 's' → logprob: -3.807100296020508
    8. '_' → logprob: -4.057100296020508
    9. ',i' → logprob: -5.182100296020508
    10. '[' → logprob: -5.307100296020508

Token 2390: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28444230556488037
    2. ' x' → logprob: -1.4094423055648804
    3. ')' → logprob: -7.03444242477417
    4. '    ' → logprob: -7.28444242477417
    5. '   ' → logprob: -7.78444242477417
    6. 'j' → logprob: -9.034441947937012
    7. ' j' → logprob: -9.409441947937012
    8. ',' → logprob: -9.659441947937012
    9. '):' → logprob: -9.659441947937012
    10. 'n' → logprob: -9.909441947937012

Token 2391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29717135429382324
    2. ')' → logprob: -2.1721713542938232
    3. '):' → logprob: -2.7971713542938232
    4. '(interval' → logprob: -3.0471713542938232
    5. '_' → logprob: -5.297171592712402
    6. ' ,' → logprob: -5.422171592712402
    7. '[i' → logprob: -5.422171592712402
    8. '):
' → logprob: -5.797171592712402
    9. 'interval' → logprob: -6.172171592712402
    10. '[' → logprob: -6.172171592712402

Token 2392: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.33040595054626465
    2. ' station' → logprob: -1.3304059505462646
    3. 'position' → logprob: -5.705406188964844
    4. 'interval' → logprob: -5.705406188964844
    5. 'pos' → logprob: -6.080406188964844
    6. 'last' → logprob: -6.705406188964844
    7. 'limit' → logprob: -6.830406188964844
    8. ')' → logprob: -6.830406188964844
    9. 'max' → logprob: -7.830406188964844
    10. '   ' → logprob: -7.955406188964844

Token 2393: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.21536971628665924
    2. '_' → logprob: -2.590369701385498
    3. ')' → logprob: -2.965369701385498
    4. '_limits' → logprob: -4.090369701385498
    5. ')_' → logprob: -4.340369701385498
    6. ',' → logprob: -4.465369701385498
    7. '_i' → logprob: -5.215369701385498
    8. '_,' → logprob: -5.715369701385498
    9. '_)' → logprob: -5.965369701385498
    10. ' _' → logprob: -6.215369701385498

Token 2394: '_in' (ID: 2267)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6995636224746704
    2. ')' → logprob: -1.6995636224746704
    3. '_' → logprob: -1.8245636224746704
    4. '(' → logprob: -2.824563503265381
    5. '):' → logprob: -3.324563503265381
    6. ':' → logprob: -4.449563503265381
    7. 'def' → logprob: -4.574563503265381
    8. ',' → logprob: -5.199563503265381
    9. '#' → logprob: -5.199563503265381
    10. '[i' → logprob: -5.449563503265381

Token 2395: '_interval' (ID: 49009)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.03468910604715347
    2. 'interval' → logprob: -4.034688949584961
    3. 't' → logprob: -4.409688949584961
    4. '_interval' → logprob: -7.034688949584961
    5. 'n' → logprob: -7.159688949584961
    6. 'erval' → logprob: -7.534688949584961
    7. '```' → logprob: -7.659688949584961
    8. 'terr' → logprob: -8.159688949584961
    9. '
' → logprob: -8.659688949584961
    10. 'te' → logprob: -9.034688949584961

Token 2396: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2519583702087402
    2. ')' → logprob: -1.3769583702087402
    3. '[' → logprob: -2.1269583702087402
    4. ',' → logprob: -2.6269583702087402
    5. 'def' → logprob: -2.8769583702087402
    6. '[i' → logprob: -3.5019583702087402
    7. '```' → logprob: -3.5019583702087402
    8. '(i' → logprob: -3.6269583702087402
    9. '):
' → logprob: -4.00195837020874
    10. '(
' → logprob: -4.12695837020874

Token 2397: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6693191528320312
    2. '(' → logprob: -1.7943191528320312
    3. ':' → logprob: -2.5443191528320312
    4. '[' → logprob: -2.7943191528320312
    5. '   ' → logprob: -3.2943191528320312
    6. '(i' → logprob: -3.4193191528320312
    7. '(
' → logprob: -3.7943191528320312
    8. '=' → logprob: -4.419319152832031
    9. ' =' → logprob: -4.419319152832031
    10. ' def' → logprob: -4.544319152832031

Token 2398: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4295193552970886
    2. '(' → logprob: -2.3045194149017334
    3. '(
' → logprob: -2.4295194149017334
    4. '   ' → logprob: -2.8045194149017334
    5. ' def' → logprob: -3.9295194149017334
    6. ':' → logprob: -4.179519176483154
    7. ' (' → logprob: -4.179519176483154
    8. ')' → logprob: -4.929519176483154
    9. '):' → logprob: -5.054519176483154
    10. 'x' → logprob: -5.304519176483154

Token 2399: ' Cal' (ID: 4453)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8654384016990662
    2. '(i' → logprob: -1.740438461303711
    3. '(' → logprob: -2.365438461303711
    4. '(interval' → logprob: -2.615438461303711
    5. ':' → logprob: -2.865438461303711
    6. '=' → logprob: -3.115438461303711
    7. '(
' → logprob: -3.240438461303711
    8. 'interval' → logprob: -3.240438461303711
    9. '(x' → logprob: -4.740438461303711
    10. ' =' → logprob: -4.740438461303711

Token 2400: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21477335691452026
    2. 'cul' → logprob: -1.714773416519165
    3. 'culate' → logprob: -5.089773178100586
    4. 'culated' → logprob: -5.839773178100586
    5. 'cule' → logprob: -6.214773178100586
    6. 'l' → logprob: -6.714773178100586
    7. 'cula' → logprob: -7.964773178100586
    8. 'culator' → logprob: -8.589773178100586
    9. 'culation' → logprob: -9.089773178100586
    10. 'cu' → logprob: -9.964773178100586

Token 2401: ' le' (ID: 505)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2574363946914673
    2. ')' → logprob: -2.1324362754821777
    3. '(
' → logprob: -2.1324362754821777
    4. '(' → logprob: -2.2574362754821777
    5. 's' → logprob: -2.3824362754821777
    6. '   ' → logprob: -3.0074362754821777
    7. ' =' → logprob: -3.5074362754821777
    8. 'def' → logprob: -3.6324362754821777
    9. 'lambda' → logprob: -3.6324362754821777
    10. 'x' → logprob: -3.7574362754821777

Token 2402: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.034412842243909836
    2. 'co' → logprob: -4.034412860870361
    3. ' temps' → logprob: -4.784412860870361
    4. 'time' → logprob: -5.784412860870361
    5. 'tem' → logprob: -6.534412860870361
    6. 'cost' → logprob: -6.659412860870361
    7. 'cout' → logprob: -7.409412860870361
    8. 'temp' → logprob: -8.284412384033203
    9. '_' → logprob: -8.659412384033203
    10. ' coût' → logprob: -8.909412384033203

Token 2403: ' maximal' (ID: 65414)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3187505602836609
    2. ')' → logprob: -1.8187506198883057
    3. '=' → logprob: -3.1937506198883057
    4. '(' → logprob: -3.5687506198883057
    5. '(
' → logprob: -3.6937506198883057
    6. '   ' → logprob: -5.693750381469727
    7. '_max' → logprob: -6.318750381469727
    8. 'def' → logprob: -6.693750381469727
    9. ':' → logprob: -7.068750381469727
    10. '_min' → logprob: -7.318750381469727

Token 2404: ' nécessaire' (ID: 43098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45859989523887634
    2. '_' → logprob: -1.5835999250411987
    3. '=' → logprob: -3.083599805831909
    4. 'def' → logprob: -3.958599805831909
    5. 'for' → logprob: -4.083600044250488
    6. '_for' → logprob: -4.333600044250488
    7. '(' → logprob: -4.333600044250488
    8. '_max' → logprob: -4.583600044250488
    9. '(
' → logprob: -5.083600044250488
    10. '[' → logprob: -5.208600044250488

Token 2405: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44002923369407654
    2. 'def' → logprob: -1.940029263496399
    3. '=' → logprob: -2.6900291442871094
    4. 'for' → logprob: -3.4400291442871094
    5. '(' → logprob: -3.6900291442871094
    6. '   ' → logprob: -3.9400291442871094
    7. ':' → logprob: -4.315029144287109
    8. '_' → logprob: -4.440029144287109
    9. '(
' → logprob: -4.815029144287109
    10. '[' → logprob: -4.815029144287109

Token 2406: ' travers' (ID: 26957)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.40007394552230835
    2. 'aller' → logprob: -1.9000740051269531
    3. ' atteindre' → logprob: -2.775074005126953
    4. 'arr' → logprob: -3.150074005126953
    5. 're' → logprob: -3.525074005126953
    6. 'tr' → logprob: -4.900074005126953
    7. ' parcour' → logprob: -4.900074005126953
    8. 'acc' → logprob: -5.025074005126953
    9. ' aller' → logprob: -5.400074005126953
    10. 'par' → logprob: -5.900074005126953

Token 2407: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.005774850025773048
    2. 'ée' → logprob: -6.505774974822998
    3. 'ver' → logprob: -6.880774974822998
    4. 'errer' → logprob: -7.630774974822998
    5. 'erver' → logprob: -8.25577449798584
    6. 'erv' → logprob: -8.25577449798584
    7. 'avant' → logprob: -8.50577449798584
    8. 'iver' → logprob: -8.50577449798584
    9. 'vers' → logprob: -8.63077449798584
    10. 'quer' → logprob: -8.88077449798584

Token 2408: ' l' (ID: 305)
  Prédit: '(interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.8410042524337769
    2. 'interval' → logprob: -1.5910042524337769
    3. '(' → logprob: -1.8410042524337769
    4. ')' → logprob: -2.7160043716430664
    5. '(
' → logprob: -2.9660043716430664
    6. '   ' → logprob: -3.7160043716430664
    7. 'the' → logprob: -3.9660043716430664
    8. '[' → logprob: -5.091004371643066
    9. '(i' → logprob: -5.341004371643066
    10. ' ' → logprob: -5.341004371643066

Token 2409: '’' (ID: 438)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1237279176712036
    2. 'e' → logprob: -1.4987279176712036
    3. '_' → logprob: -1.6237279176712036
    4. ')' → logprob: -3.748727798461914
    5. 'a' → logprob: -3.748727798461914
    6. '']' → logprob: -3.998727798461914
    7. '')' → logprob: -4.123727798461914
    8. ']' → logprob: -4.248727798461914
    9. ''\' → logprob: -4.498727798461914
    10. '(interval' → logprob: -4.498727798461914

Token 2410: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1916501224040985
    2. '_interval' → logprob: -2.441650152206421
    3. ''' → logprob: -2.816650152206421
    4. '_' → logprob: -4.566649913787842
    5. ' interval' → logprob: -5.691649913787842
    6. 'i' → logprob: -6.191649913787842
    7. ']' → logprob: -6.441649913787842
    8. '_inter' → logprob: -6.941649913787842
    9. '(interval' → logprob: -6.941649913787842
    10. 'segment' → logprob: -7.316649913787842

Token 2411: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7037550210952759
    2. 'e' → logprob: -0.8287550210952759
    3. ']' → logprob: -3.0787549018859863
    4. '_' → logprob: -4.578754901885986
    5. 'al' → logprob: -5.828754901885986
    6. ')' → logprob: -5.828754901885986
    7. 'é' → logprob: -5.953754901885986
    8. '[' → logprob: -7.203754901885986
    9. 'ale' → logprob: -7.453754901885986
    10. 'ée' → logprob: -7.703754901885986

Token 2412: ' i' (ID: 575)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6015055775642395
    2. '(' → logprob: -1.6015055179595947
    3. '_' → logprob: -1.9765055179595947
    4. '[i' → logprob: -3.1015055179595947
    5. '   ' → logprob: -4.351505756378174
    6. '(i' → logprob: -4.601505756378174
    7. '```' → logprob: -4.601505756378174
    8. 'def' → logprob: -5.351505756378174
    9. ':' → logprob: -5.351505756378174
    10. '(
' → logprob: -5.476505756378174

Token 2413: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19490860402584076
    2. '_' → logprob: -2.194908618927002
    3. '[i' → logprob: -4.444908618927002
    4. '(' → logprob: -4.444908618927002
    5. '   ' → logprob: -4.444908618927002
    6. '[
' → logprob: -4.694908618927002
    7. '```' → logprob: -5.069908618927002
    8. 'def' → logprob: -5.319908618927002
    9. ':' → logprob: -6.319908618927002
    10. '(
' → logprob: -6.944908618927002

Token 2414: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3303825855255127
    2. '   ' → logprob: -1.3303825855255127
    3. '(' → logprob: -1.9553825855255127
    4. ',' → logprob: -2.0803825855255127
    5. '_' → logprob: -2.5803825855255127
    6. '(
' → logprob: -3.5803825855255127
    7. '```' → logprob: -3.9553825855255127
    8. ')' → logprob: -4.580382347106934
    9. '(i' → logprob: -4.580382347106934
    10. '=' → logprob: -4.705382347106934

Token 2415: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6934135556221008
    2. '[' → logprob: -1.068413496017456
    3. ':' → logprob: -3.693413496017456
    4. '=' → logprob: -3.693413496017456
    5. '   ' → logprob: -3.693413496017456
    6. ')' → logprob: -3.943413496017456
    7. '(
' → logprob: -4.068413734436035
    8. ',' → logprob: -4.318413734436035
    9. '+' → logprob: -5.193413734436035
    10. '[i' → logprob: -5.568413734436035

Token 2416: ' jusqu' (ID: 21961)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9091269373893738
    2. 'def' → logprob: -0.9091269373893738
    3. '(
' → logprob: -3.0341269969940186
    4. '   ' → logprob: -3.0341269969940186
    5. ':
' → logprob: -3.7841269969940186
    6. '(' → logprob: -3.7841269969940186
    7. '(i' → logprob: -4.1591267585754395
    8. ' def' → logprob: -4.7841267585754395
    9. ',' → logprob: -4.9091267585754395
    10. '=' → logprob: -5.2841267585754395

Token 2417: ''à' (ID: 33688)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.09099958091974258
    2. ''à' → logprob: -2.5909996032714844
    3. 'au' → logprob: -5.090999603271484
    4. '’à' → logprob: -6.090999603271484
    5. ' à' → logprob: -6.590999603271484
    6. ')' → logprob: -7.465999603271484
    7. ''au' → logprob: -7.465999603271484
    8. '```' → logprob: -7.590999603271484
    9. '=' → logprob: -8.590999603271484
    10. '   ' → logprob: -8.965999603271484

Token 2418: ' la' (ID: 557)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.2816237509250641
    2. 'la' → logprob: -1.5316237211227417
    3. 'S' → logprob: -4.031623840332031
    4. 'l' → logprob: -5.406623840332031
    5. ' station' → logprob: -5.781623840332031
    6. ' la' → logprob: -6.531623840332031
    7. ' S' → logprob: -6.906623840332031
    8. '   ' → logprob: -8.031623840332031
    9. 'x' → logprob: -8.406623840332031
    10. ' ' → logprob: -9.156623840332031

Token 2419: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.03938638046383858
    2. 'S' → logprob: -3.41438627243042
    3. ' station' → logprob: -7.28938627243042
    4. 'position' → logprob: -7.41438627243042
    5. 'min' → logprob: -7.66438627243042
    6. 'limit' → logprob: -8.039386749267578
    7. '
' → logprob: -8.164386749267578
    8. 'sta' → logprob: -8.164386749267578
    9. 'st' → logprob: -8.289386749267578
    10. 'next' → logprob: -8.539386749267578

Token 2420: ' station' (ID: 11538)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.10948310047388077
    2. '_' → logprob: -2.984483003616333
    3. ')' → logprob: -3.859483003616333
    4. '```' → logprob: -5.234483242034912
    5. '_max' → logprob: -5.734483242034912
    6. ']' → logprob: -5.984483242034912
    7. '[' → logprob: -5.984483242034912
    8. '_limits' → logprob: -6.109483242034912
    9. '`' → logprob: -6.484483242034912
    10. 'limit' → logprob: -6.484483242034912

Token 2421: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.020609159022569656
    2. '_' → logprob: -4.395609378814697
    3. ']' → logprob: -6.395609378814697
    4. '[i' → logprob: -6.520609378814697
    5. '_limits' → logprob: -6.770609378814697
    6. ')' → logprob: -7.145609378814697
    7. '_
' → logprob: -7.395609378814697
    8. ']_' → logprob: -7.770609378814697
    9. '+' → logprob: -8.020608901977539
    10. '_]' → logprob: -8.145608901977539

Token 2422: ' si' (ID: 1784)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4199104309082031
    2. '[' → logprob: -1.4199104309082031
    3. 'def' → logprob: -4.169910430908203
    4. ')' → logprob: -4.544910430908203
    5. '   ' → logprob: -4.544910430908203
    6. '[i' → logprob: -4.794910430908203
    7. '(' → logprob: -4.919910430908203
    8. '```' → logprob: -4.919910430908203
    9. '[
' → logprob: -5.044910430908203
    10. ']' → logprob: -5.294910430908203

Token 2423: ' elle' (ID: 11451)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.23986206948757172
    2. ' station' → logprob: -1.989862084388733
    3. 'x' → logprob: -2.8648619651794434
    4. ' x' → logprob: -4.864861965179443
    5. 'S' → logprob: -5.364861965179443
    6. 'i' → logprob: -6.614861965179443
    7. 'on' → logprob: -6.864861965179443
    8. '   ' → logprob: -7.114861965179443
    9. ' on' → logprob: -7.364861965179443
    10. ' ' → logprob: -7.614861965179443

Token 2424: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.1178639754652977
    2. ' est' → logprob: -3.492863893508911
    3. '<=' → logprob: -3.867863893508911
    4. '==' → logprob: -4.11786413192749
    5. '```' → logprob: -4.11786413192749
    6. ' is' → logprob: -4.74286413192749
    7. 'is' → logprob: -5.61786413192749
    8. ' ==' → logprob: -5.99286413192749
    9. ' <=' → logprob: -6.11786413192749
    10. 'se' → logprob: -6.24286413192749

Token 2425: ' dedans' (ID: 183499)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.008817004971206188
    2. ' dans' → logprob: -5.508817195892334
    3. 'in' → logprob: -7.008817195892334
    4. 'exact' → logprob: -7.133817195892334
    5. '<=' → logprob: -7.383817195892334
    6. 'à' → logprob: -7.633817195892334
    7. 'strict' → logprob: -8.008816719055176
    8. 'situ' → logprob: -8.258816719055176
    9. '==' → logprob: -8.383816719055176
    10. 'd' → logprob: -8.383816719055176

Token 2426: ';
' (ID: 307)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.261279821395874
    2. '   ' → logprob: -1.261279821395874
    3. '[i' → logprob: -1.636279821395874
    4. 'def' → logprob: -1.886279821395874
    5. '[' → logprob: -3.386279821395874
    6. ' def' → logprob: -4.636280059814453
    7. '):' → logprob: -4.761280059814453
    8. ')' → logprob: -4.761280059814453
    9. ']' → logprob: -4.886280059814453
    10. ']:' → logprob: -5.761280059814453

Token 2427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5660974383354187
    2. ')' → logprob: -2.4410974979400635
    3. 'x' → logprob: -2.5660974979400635
    4. 'i' → logprob: -3.3160974979400635
    5. ' i' → logprob: -3.3160974979400635
    6. 'def' → logprob: -3.5660974979400635
    7. ' def' → logprob: -3.6910974979400635
    8. ',' → logprob: -4.066097259521484
    9. '(
' → logprob: -4.066097259521484
    10. ':' → logprob: -4.441097259521484

Token 2428: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9356091618537903
    2. '   ' → logprob: -1.0606091022491455
    3. 'x' → logprob: -3.4356091022491455
    4. ' def' → logprob: -3.8106091022491455
    5. ' i' → logprob: -3.8106091022491455
    6. ' x' → logprob: -4.060609340667725
    7. '):' → logprob: -4.185609340667725
    8. 'def' → logprob: -4.310609340667725
    9. ':' → logprob: -4.435609340667725
    10. '_' → logprob: -4.435609340667725

Token 2429: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9810553193092346
    2. 'def' → logprob: -1.9810552597045898
    3. ')' → logprob: -2.60605525970459
    4. ':' → logprob: -2.98105525970459
    5. '):
' → logprob: -2.98105525970459
    6. ' def' → logprob: -3.10605525970459
    7. ':
' → logprob: -3.35605525970459
    8. '):' → logprob: -3.48105525970459
    9. 'x' → logprob: -3.60605525970459
    10. 'i' → logprob: -4.10605525970459

Token 2430: ' temps' (ID: 11160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7883038520812988
    2. ')' → logprob: -1.9133038520812988
    3. 'def' → logprob: -2.663303852081299
    4. ' def' → logprob: -2.788303852081299
    5. '   ' → logprob: -3.163303852081299
    6. '):' → logprob: -3.663303852081299
    7. '```' → logprob: -4.163303852081299
    8. ''' → logprob: -4.288303852081299
    9. ' ' → logprob: -4.413303852081299
    10. ' :' → logprob: -4.538303852081299

Token 2431: ' total' (ID: 3609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.937127947807312
    2. '_' → logprob: -0.937127947807312
    3. ')' → logprob: -2.4371280670166016
    4. ':' → logprob: -4.062128067016602
    5. '+' → logprob: -4.062128067016602
    6. '[' → logprob: -4.187128067016602
    7. 'def' → logprob: -4.187128067016602
    8. ' =' → logprob: -4.437128067016602
    9. 'for' → logprob: -4.687128067016602
    10. '_for' → logprob: -4.812128067016602

Token 2432: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8790650963783264
    2. ':' → logprob: -1.2540650367736816
    3. '   ' → logprob: -2.2540650367736816
    4. 'def' → logprob: -2.2540650367736816
    5. '[i' → logprob: -3.7540650367736816
    6. ')' → logprob: -4.129065036773682
    7. '(' → logprob: -4.629065036773682
    8. ']' → logprob: -4.879065036773682
    9. '[
' → logprob: -5.129065036773682
    10. '_' → logprob: -5.504065036773682

Token 2433: ' travers' (ID: 26957)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.0177037101238966
    2. 'par' → logprob: -5.017703533172607
    3. 'aller' → logprob: -5.892703533172607
    4. 'faire' → logprob: -6.017703533172607
    5. ' travers' → logprob: -6.142703533172607
    6. 'atte' → logprob: -7.767703533172607
    7. ' parcour' → logprob: -7.767703533172607
    8. 'trans' → logprob: -7.892703533172607
    9. '   ' → logprob: -7.892703533172607
    10. 'pass' → logprob: -8.017704010009766

Token 2434: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07388386875391006
    2. 'ers' → logprob: -2.8238837718963623
    3. 'vers' → logprob: -4.823884010314941
    4. 'e' → logprob: -7.073884010314941
    5. 'erse' → logprob: -7.198884010314941
    6. 'ver' → logprob: -7.573884010314941
    7. 'ier' → logprob: -8.323884010314941
    8. 'avers' → logprob: -8.323884010314941
    9. 'erver' → logprob: -8.448884010314941
    10. 'r' → logprob: -9.198884010314941

Token 2435: ' l' (ID: 305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.762061357498169
    2. '[i' → logprob: -1.887061357498169
    3. '   ' → logprob: -2.137061357498169
    4. 'def' → logprob: -2.387061357498169
    5. '_' → logprob: -2.887061357498169
    6. ':' → logprob: -3.387061357498169
    7. '```' → logprob: -4.26206111907959
    8. '[
' → logprob: -4.38706111907959
    9. '(' → logprob: -4.63706111907959
    10. ')' → logprob: -4.88706111907959

Token 2436: '’' (ID: 438)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.42653971910476685
    2. '_' → logprob: -1.551539659500122
    3. 'e' → logprob: -3.301539659500122
    4. 'a' → logprob: -3.426539659500122
    5. '']' → logprob: -3.551539659500122
    6. '')' → logprob: -4.801539897918701
    7. 'i' → logprob: -5.051539897918701
    8. ''_' → logprob: -5.426539897918701
    9. ''\' → logprob: -6.301539897918701
    10. ''inter' → logprob: -6.551539897918701

Token 2437: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2853182554244995
    2. 'i' → logprob: -2.410318374633789
    3. '_' → logprob: -3.160318374633789
    4. ']' → logprob: -3.660318374633789
    5. ''' → logprob: -4.035318374633789
    6. ' interval' → logprob: -4.410318374633789
    7. '[' → logprob: -4.785318374633789
    8. ')' → logprob: -5.035318374633789
    9. ' i' → logprob: -5.160318374633789
    10. ' ]' → logprob: -5.535318374633789

Token 2438: 'le' (ID: 282)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0394771471619606
    2. ']' → logprob: -3.9144771099090576
    3. 'val' → logprob: -5.539477348327637
    4. ')' → logprob: -5.789477348327637
    5. '_' → logprob: -5.914477348327637
    6. '[' → logprob: -6.039477348327637
    7. 'ale' → logprob: -6.664477348327637
    8. '[
' → logprob: -7.164477348327637
    9. 'e' → logprob: -7.289477348327637
    10. ')
' → logprob: -7.914477348327637

Token 2439: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.061944156885147095
    2. 'def' → logprob: -3.4369442462921143
    3. ':
' → logprob: -4.436944007873535
    4. '   ' → logprob: -5.311944007873535
    5. '[i' → logprob: -5.811944007873535
    6. '):' → logprob: -5.936944007873535
    7. '[' → logprob: -6.811944007873535
    8. ')' → logprob: -6.811944007873535
    9. ' def' → logprob: -7.311944007873535
    10. ',' → logprob: -7.936944007873535

Token 2440: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21319955587387085
    2. '(' → logprob: -2.7131996154785156
    3. '   ' → logprob: -2.9631996154785156
    4. 'def' → logprob: -3.4631996154785156
    5. ' :' → logprob: -4.588199615478516
    6. ')' → logprob: -5.088199615478516
    7. '):' → logprob: -5.088199615478516
    8. ',' → logprob: -5.838199615478516
    9. '[' → logprob: -5.963199615478516
    10. ' def' → logprob: -6.088199615478516

Token 2441: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3387228846549988
    2. '   ' → logprob: -1.5887229442596436
    3. '):' → logprob: -3.3387229442596436
    4. 'def' → logprob: -3.7137229442596436
    5. ')' → logprob: -4.4637227058410645
    6. ':
' → logprob: -5.8387227058410645
    7. ' :' → logprob: -6.4637227058410645
    8. ' def' → logprob: -6.5887227058410645
    9. '):
' → logprob: -7.3387227058410645
    10. ',' → logprob: -7.3387227058410645

Token 2442: ' On' (ID: 2160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7867531180381775
    2. '   ' → logprob: -1.1617531776428223
    3. 'def' → logprob: -1.7867531776428223
    4. '):' → logprob: -3.7867531776428223
    5. '[i' → logprob: -3.7867531776428223
    6. '[' → logprob: -5.161753177642822
    7. ':
' → logprob: -5.661753177642822
    8. ']:' → logprob: -6.286753177642822
    9. ')' → logprob: -6.536753177642822
    10. ' def' → logprob: -6.911753177642822

Token 2443: ' doit' (ID: 21822)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1068645790219307
    2. '[' → logprob: -3.3568646907806396
    3. '=' → logprob: -3.9818646907806396
    4. 'continue' → logprob: -4.7318644523620605
    5. '_' → logprob: -4.8568644523620605
    6. '[
' → logprob: -5.3568644523620605
    7. ':' → logprob: -5.6068644523620605
    8. 'contin' → logprob: -5.6068644523620605
    9. '_continue' → logprob: -5.8568644523620605
    10. ' =' → logprob: -6.1068644523620605

Token 2444: ' gérer' (ID: 86786)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.30978643894195557
    2. ' calcul' → logprob: -1.5597864389419556
    3. 'contin' → logprob: -3.434786319732666
    4. 'calculate' → logprob: -5.559786319732666
    5. 'return' → logprob: -5.684786319732666
    6. 'def' → logprob: -5.934786319732666
    7. 'coder' → logprob: -6.059786319732666
    8. 'cal' → logprob: -6.184786319732666
    9. 'calc' → logprob: -6.809786319732666
    10. 'compute' → logprob: -6.934786319732666

Token 2445: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6012459993362427
    2. ':' → logprob: -2.101245880126953
    3. 'def' → logprob: -2.101245880126953
    4. '(
' → logprob: -2.101245880126953
    5. '   ' → logprob: -2.226245880126953
    6. '```' → logprob: -2.226245880126953
    7. 'i' → logprob: -2.726245880126953
    8. '(' → logprob: -3.601245880126953
    9. 'x' → logprob: -4.351245880126953
    10. '(i' → logprob: -4.976245880126953

Token 2446: ' cas' (ID: 2108)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -1.1063255071640015
    2. 'cas' → logprob: -1.2313255071640015
    3. 'last' → logprob: -1.7313255071640015
    4. 'def' → logprob: -2.856325626373291
    5. 'position' → logprob: -3.731325626373291
    6. '```' → logprob: -4.106325626373291
    7. 'reste' → logprob: -4.606325626373291
    8. 'der' → logprob: -4.981325626373291
    9. 'dé' → logprob: -4.981325626373291
    10. 'calcul' → logprob: -4.981325626373291

Token 2447: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.7621892690658569
    2. ' de' → logprob: -2.2621893882751465
    3. 'où' → logprob: -2.3871893882751465
    4. ' where' → logprob: -2.5121893882751465
    5. ' ' → logprob: -2.6371893882751465
    6. ')' → logprob: -3.2621893882751465
    7. ':' → logprob: -3.6371893882751465
    8. '```' → logprob: -3.7621893882751465
    9. '_' → logprob: -4.1371893882751465
    10. 'de' → logprob: -4.1371893882751465

Token 2448: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.12801741063594818
    2. ' station' → logprob: -2.1280174255371094
    3. 'la' → logprob: -8.00301742553711
    4. ' la' → logprob: -8.37801742553711
    5. 'le' → logprob: -9.62801742553711
    6. ' ' → logprob: -9.75301742553711
    7. ' ' → logprob: -10.00301742553711
    8. 'the' → logprob: -10.12801742553711
    9. '`' → logprob: -10.12801742553711
    10. 'x' → logprob: -10.25301742553711

Token 2449: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.16750174760818481
    2. '_' → logprob: -1.91750168800354
    3. '_limits' → logprob: -5.667501926422119
    4. '_
' → logprob: -6.417501926422119
    5. ''_' → logprob: -7.667501926422119
    6. '```' → logprob: -7.917501926422119
    7. '_lim' → logprob: -8.417501449584961
    8. ' _' → logprob: -8.542501449584961
    9. ')_' → logprob: -8.917501449584961
    10. '`' → logprob: -8.917501449584961

Token 2450: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3582150638103485
    2. '_in' → logprob: -1.608215093612671
    3. 'est' → logprob: -3.733215093612671
    4. '_est' → logprob: -3.733215093612671
    5. ')' → logprob: -4.733214855194092
    6. 's' → logprob: -5.483214855194092
    7. '```' → logprob: -5.483214855194092
    8. ' est' → logprob: -5.483214855194092
    9. '[' → logprob: -5.983214855194092
    10. '_i' → logprob: -6.483214855194092

Token 2451: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.0936683714389801
    2. '<=' → logprob: -2.9686684608459473
    3. 'exact' → logprob: -4.343668460845947
    4. 'strict' → logprob: -4.593668460845947
    5. '==' → logprob: -5.593668460845947
    6. 'S' → logprob: -5.718668460845947
    7. ' dans' → logprob: -6.218668460845947
    8. '>' → logprob: -6.718668460845947
    9. '≤' → logprob: -6.968668460845947
    10. 'avant' → logprob: -7.718668460845947

Token 2452: ' cet' (ID: 19505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.25768759846687317
    2. 'interval' → logprob: -2.132687568664551
    3. 'S' → logprob: -2.507687568664551
    4. ' S' → logprob: -5.007687568664551
    5. ' l' → logprob: -5.132687568664551
    6. 'i' → logprob: -5.382687568664551
    7. 'la' → logprob: -6.007687568664551
    8. ' interval' → logprob: -6.507687568664551
    9. 'un' → logprob: -6.757687568664551
    10. 'le' → logprob: -7.007687568664551

Token 2453: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.8854250907897949
    2. '_' → logprob: -1.010425090789795
    3. '_interval' → logprob: -1.760425090789795
    4. ' interval' → logprob: -3.885425090789795
    5. '_inter' → logprob: -4.260425090789795
    6. ' _' → logprob: -4.510425090789795
    7. ']' → logprob: -6.885425090789795
    8. '```' → logprob: -7.260425090789795
    9. '_
' → logprob: -7.385425090789795
    10. 'inter' → logprob: -7.760425090789795

Token 2454: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2853912115097046
    2. 'e' → logprob: -1.9103912115097046
    3. 'al' → logprob: -3.535391330718994
    4. 'v' → logprob: -4.285391330718994
    5. 'vel' → logprob: -4.785391330718994
    6. ']' → logprob: -4.785391330718994
    7. 'er' → logprob: -5.035391330718994
    8. 'ale' → logprob: -5.160391330718994
    9. '#' → logprob: -5.535391330718994
    10. 'le' → logprob: -5.660391330718994

Token 2455: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5369269251823425
    2. '[' → logprob: -1.9119269847869873
    3. '[i' → logprob: -2.2869269847869873
    4. '   ' → logprob: -2.9119269847869873
    5. 'def' → logprob: -2.9119269847869873
    6. '```' → logprob: -3.7869269847869873
    7. '[
' → logprob: -4.536926746368408
    8. ':
' → logprob: -5.661926746368408
    9. ',' → logprob: -5.786926746368408
    10. '):' → logprob: -5.911926746368408

Token 2456: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06200980395078659
    2. '   ' → logprob: -3.437009811401367
    3. '):' → logprob: -4.437009811401367
    4. 'def' → logprob: -5.062009811401367
    5. ':
' → logprob: -5.312009811401367
    6. ']:' → logprob: -6.062009811401367
    7. ' :' → logprob: -7.562009811401367
    8. '':' → logprob: -7.687009811401367
    9. '":' → logprob: -7.937009811401367
    10. ' def' → logprob: -8.437009811401367

Token 2457: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6419615745544434
    2. '   ' → logprob: -0.8919615745544434
    3. '):' → logprob: -3.5169615745544434
    4. ':
' → logprob: -4.141961574554443
    5. 'def' → logprob: -5.266961574554443
    6. ')' → logprob: -5.516961574554443
    7. ' :' → logprob: -5.891961574554443
    8. '[i' → logprob: -6.391961574554443
    9. ']:' → logprob: -6.516961574554443
    10. '):
' → logprob: -6.891961574554443

Token 2458: ' P' (ID: 398)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07543998956680298
    2. '   ' → logprob: -3.825439929962158
    3. 'def' → logprob: -3.950439929962158
    4. '):' → logprob: -4.825439929962158
    5. '[' → logprob: -4.950439929962158
    6. '[i' → logprob: -5.700439929962158
    7. ':
' → logprob: -6.325439929962158
    8. ']:' → logprob: -6.325439929962158
    9. ' def' → logprob: -6.575439929962158
    10. ' :' → logprob: -6.825439929962158

Token 2459: 'SE' (ID: 1529)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.9915051460266113
    2. 'ass' → logprob: -1.7415051460266113
    3. 'a' → logprob: -2.4915051460266113
    4. 'def' → logprob: -2.6165051460266113
    5. 'r' → logprob: -2.9915051460266113
    6. ':' → logprob: -3.1165051460266113
    7. 'osition' → logprob: -3.1165051460266113
    8. ')' → logprob: -3.6165051460266113
    9. '):' → logprob: -3.7415051460266113
    10. '):
' → logprob: -3.7415051460266113

Token 2460: 'UDO' (ID: 135197)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07960748672485352
    2. 'n' → logprob: -4.3296074867248535
    3. 'r' → logprob: -4.8296074867248535
    4. '_' → logprob: -5.0796074867248535
    5. '[' → logprob: -5.0796074867248535
    6. '```' → logprob: -5.0796074867248535
    7. '#' → logprob: -5.7046074867248535
    8. ')' → logprob: -5.8296074867248535
    9. 'w' → logprob: -5.8296074867248535
    10. '   ' → logprob: -6.0796074867248535

Token 2461: '-C' (ID: 10050)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3886902630329132
    2. ':' → logprob: -1.7636902332305908
    3. 'def' → logprob: -2.763690233230591
    4. '[i' → logprob: -3.638690233230591
    5. '   ' → logprob: -3.763690233230591
    6. '[
' → logprob: -4.88869047164917
    7. ')' → logprob: -5.01369047164917
    8. ']' → logprob: -5.13869047164917
    9. '(' → logprob: -5.38869047164917
    10. ' ' → logprob: -6.51369047164917

Token 2462: 'ODE' (ID: 5715)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45753422379493713
    2. '```' → logprob: -1.4575341939926147
    3. '(' → logprob: -3.0825343132019043
    4. '[i' → logprob: -3.8325343132019043
    5. '[
' → logprob: -4.207534313201904
    6. ':' → logprob: -4.582534313201904
    7. '(
' → logprob: -4.707534313201904
    8. '``' → logprob: -4.832534313201904
    9. 'def' → logprob: -5.082534313201904
    10. ''' → logprob: -5.832534313201904

Token 2463: ' RA' (ID: 46104)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6437200903892517
    2. '   ' → logprob: -1.0187201499938965
    3. 'def' → logprob: -2.6437201499938965
    4. '[' → logprob: -4.2687201499938965
    5. ' :' → logprob: -4.7687201499938965
    6. '[i' → logprob: -4.8937201499938965
    7. '):' → logprob: -6.0187201499938965
    8. '[
' → logprob: -6.7687201499938965
    9. ')' → logprob: -6.8937201499938965
    10. 'for' → logprob: -6.8937201499938965

Token 2464: 'ISON' (ID: 90386)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47896113991737366
    2. 'D' → logprob: -2.353961229324341
    3. 'w' → logprob: -2.478961229324341
    4. 'd' → logprob: -2.728961229324341
    5. ')' → logprob: -3.603961229324341
    6. 'W' → logprob: -4.228960990905762
    7. 'T' → logprob: -4.353960990905762
    8. 'N' → logprob: -4.478960990905762
    9. '#' → logprob: -5.103960990905762
    10. 'n' → logprob: -5.353960990905762

Token 2465: 'N' (ID: 45)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.004982352256775
    2. 'def' → logprob: -1.504982352256775
    3. '   ' → logprob: -1.629982352256775
    4. '[i' → logprob: -2.3799824714660645
    5. ':' → logprob: -3.7549824714660645
    6. '[
' → logprob: -4.0049824714660645
    7. ')' → logprob: -4.3799824714660645
    8. '[n' → logprob: -4.6299824714660645
    9. '[]' → logprob: -4.8799824714660645
    10. ']' → logprob: -5.0049824714660645

Token 2466: 'EMENT' (ID: 25654)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2711436152458191
    2. ')' → logprob: -1.7711436748504639
    3. 'l' → logprob: -3.021143674850464
    4. 'u' → logprob: -5.771143436431885
    5. '\' → logprob: -5.896143436431885
    6. ')\' → logprob: -5.896143436431885
    7. '\n' → logprob: -6.646143436431885
    8. '(n' → logprob: -6.896143436431885
    9. 'ux' → logprob: -7.146143436431885
    10. '   ' → logprob: -7.646143436431885

Token 2467: ':

' (ID: 1402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8191247582435608
    2. '   ' → logprob: -1.319124698638916
    3. ':' → logprob: -2.194124698638916
    4. '[i' → logprob: -2.694124698638916
    5. 'def' → logprob: -3.069124698638916
    6. ')' → logprob: -4.569124698638916
    7. '(' → logprob: -4.819124698638916
    8. ' ' → logprob: -5.069124698638916
    9. '[
' → logprob: -5.194124698638916
    10. '(i' → logprob: -5.194124698638916

Token 2468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3726655840873718
    2. ':' → logprob: -2.2476656436920166
    3. 'def' → logprob: -2.6226656436920166
    4. '[' → logprob: -3.3726656436920166
    5. ' def' → logprob: -3.8726656436920166
    6. '[i' → logprob: -3.9976656436920166
    7. ' :' → logprob: -3.9976656436920166
    8. ')' → logprob: -4.7476654052734375
    9. '    ' → logprob: -4.8726654052734375
    10. '       ' → logprob: -5.4976654052734375

Token 2469: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10654154419898987
    2. ':' → logprob: -3.356541633605957
    3. 'for' → logprob: -3.981541633605957
    4. 'def' → logprob: -4.231541633605957
    5. '       ' → logprob: -4.731541633605957
    6. ')' → logprob: -4.856541633605957
    7. '):' → logprob: -5.731541633605957
    8. ' for' → logprob: -6.231541633605957
    9. 'i' → logprob: -6.231541633605957
    10. '(i' → logprob: -6.731541633605957

Token 2470: ' Final' (ID: 12625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3494589328765869
    2. 'def' → logprob: -1.849458932876587
    3. ':' → logprob: -2.974458932876587
    4. '[i' → logprob: -4.099458694458008
    5. 'for' → logprob: -4.099458694458008
    6. '[' → logprob: -4.224458694458008
    7. ' def' → logprob: -4.974458694458008
    8. ' for' → logprob: -5.099458694458008
    9. ')' → logprob: -5.474458694458008
    10. ' ' → logprob: -6.099458694458008

Token 2471: 'ement' (ID: 962)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.537030041217804
    2. '[i' → logprob: -1.4120299816131592
    3. 'def' → logprob: -2.912029981613159
    4. ':' → logprob: -3.412029981613159
    5. '[
' → logprob: -3.662029981613159
    6. ']' → logprob: -4.162030220031738
    7. '```' → logprob: -4.162030220031738
    8. ')' → logprob: -4.912030220031738
    9. '   ' → logprob: -5.412030220031738
    10. '
' → logprob: -6.662030220031738

Token 2472: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23038505017757416
    2. ':' → logprob: -1.9803850650787354
    3. '(' → logprob: -3.6053850650787354
    4. ')' → logprob: -4.355384826660156
    5. 'def' → logprob: -4.730384826660156
    6. ']' → logprob: -5.480384826660156
    7. '[i' → logprob: -5.730384826660156
    8. '   ' → logprob: -5.730384826660156
    9. '[
' → logprob: -6.730384826660156
    10. '(
' → logprob: -6.980384826660156

Token 2473: ' problème' (ID: 35630)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2450344562530518
    2. '[' → logprob: -1.4950344562530518
    3. '_' → logprob: -1.7450344562530518
    4. '[
' → logprob: -2.1200344562530518
    5. 'def' → logprob: -3.1200344562530518
    6. ')' → logprob: -3.6200344562530518
    7. '=' → logprob: -3.8700344562530518
    8. ':' → logprob: -3.9950344562530518
    9. 's' → logprob: -4.745034217834473
    10. 'n' → logprob: -4.745034217834473

Token 2474: ' demande' (ID: 26737)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1567358821630478
    2. ':' → logprob: -2.906735897064209
    3. ']' → logprob: -3.656735897064209
    4. ')' → logprob: -3.781735897064209
    5. '   ' → logprob: -4.906735897064209
    6. '[i' → logprob: -5.031735897064209
    7. '_' → logprob: -5.031735897064209
    8. '[
' → logprob: -5.031735897064209
    9. '=' → logprob: -5.656735897064209
    10. 'def' → logprob: -6.031735897064209

Token 2475: ' combien' (ID: 106648)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2004669904708862
    2. ':' → logprob: -1.7004669904708862
    3. ''' → logprob: -1.9504669904708862
    4. 'def' → logprob: -2.075467109680176
    5. '(' → logprob: -2.200467109680176
    6. ')' → logprob: -3.200467109680176
    7. '   ' → logprob: -3.950467109680176
    8. '"' → logprob: -3.950467109680176
    9. ' (' → logprob: -4.200467109680176
    10. '(
' → logprob: -4.825467109680176

Token 2476: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5459546446800232
    2. '[' → logprob: -2.045954704284668
    3. ')' → logprob: -2.170954704284668
    4. 'def' → logprob: -3.170954704284668
    5. ':' → logprob: -3.545954704284668
    6. '=' → logprob: -3.545954704284668
    7. ']' → logprob: -4.545954704284668
    8. '\' → logprob: -5.170954704284668
    9. '#' → logprob: -5.170954704284668
    10. ' =' → logprob: -5.545954704284668

Token 2477: ' stations' (ID: 26061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06380175799131393
    2. ')' → logprob: -4.0638017654418945
    3. ']' → logprob: -4.8138017654418945
    4. 'stations' → logprob: -5.4388017654418945
    5. '[' → logprob: -5.9388017654418945
    6. '\' → logprob: -6.3138017654418945
    7. ' _' → logprob: -6.3138017654418945
    8. ',' → logprob: -6.3138017654418945
    9. '_stop' → logprob: -6.3138017654418945
    10. '_max' → logprob: -6.5638017654418945

Token 2478: ' i' (ID: 575)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39212000370025635
    2. ')' → logprob: -2.142119884490967
    3. '_' → logprob: -2.267119884490967
    4. ']' → logprob: -3.642119884490967
    5. '(' → logprob: -4.142119884490967
    6. 's' → logprob: -4.642119884490967
    7. '```' → logprob: -4.767119884490967
    8. ':' → logprob: -5.017119884490967
    9. '[
' → logprob: -5.142119884490967
    10. '#' → logprob: -5.517119884490967

Token 2479: '≥' (ID: 87319)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4385719299316406
    2. ')' → logprob: -1.8135719299316406
    3. '[' → logprob: -2.9385719299316406
    4. '_max' → logprob: -3.0635719299316406
    5. ']' → logprob: -3.6885719299316406
    6. '```' → logprob: -4.438571929931641
    7. '+' → logprob: -4.813571929931641
    8. '=' → logprob: -5.438571929931641
    9. '[i' → logprob: -5.563571929931641
    10. ':' → logprob: -5.563571929931641

Token 2480: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3999910056591034
    2. '=' → logprob: -2.399991035461426
    3. '1' → logprob: -2.649991035461426
    4. '_' → logprob: -3.274991035461426
    5. ')' → logprob: -3.649991035461426
    6. ' ' → logprob: -4.024991035461426
    7. ''' → logprob: -4.399991035461426
    8. '_max' → logprob: -4.399991035461426
    9. ' +' → logprob: -4.774991035461426
    10. 'i' → logprob: -5.024991035461426

Token 2481: ' sont' (ID: 5242)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1586034595966339
    2. ')' → logprob: -3.4086034297943115
    3. ':' → logprob: -3.4086034297943115
    4. '(' → logprob: -3.9086034297943115
    5. '```' → logprob: -3.9086034297943115
    6. '_' → logprob: -4.908603668212891
    7. ']' → logprob: -5.408603668212891
    8. '[i' → logprob: -5.408603668212891
    9. 'def' → logprob: -5.533603668212891
    10. ''' → logprob: -5.533603668212891

Token 2482: ' atte' (ID: 43312)
  Prédit: 'accessible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'accessible' → logprob: -0.9669389724731445
    2. 'reachable' → logprob: -1.2169389724731445
    3. 'possible' → logprob: -1.9669389724731445
    4. '_' → logprob: -2.3419389724731445
    5. '```' → logprob: -3.9669389724731445
    6. 'atte' → logprob: -4.0919389724731445
    7. ' reachable' → logprob: -4.5919389724731445
    8. '_possible' → logprob: -4.8419389724731445
    9. ')' → logprob: -5.2169389724731445
    10. ' accessible' → logprob: -5.3419389724731445

Token 2483: 'ign' (ID: 733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1789860725402832
    2. 'ign' → logprob: -1.1789860725402832
    3. 'n' → logprob: -1.5539860725402832
    4. 'ind' → logprob: -3.053986072540283
    5. 'int' → logprob: -3.678986072540283
    6. 'ints' → logprob: -4.053986072540283
    7. 'nd' → logprob: -4.178986072540283
    8. 'm' → logprob: -4.553986072540283
    9. ')' → logprob: -4.928986072540283
    10. '_' → logprob: -5.678986072540283

Token 2484: 'ables' (ID: 3232)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.49702391028404236
    2. 'able' → logprob: -2.247023820877075
    3. 'a' → logprob: -2.372023820877075
    4. ')
' → logprob: -3.372023820877075
    5. 'i' → logprob: -3.872023820877075
    6. 'ind' → logprob: -4.497024059295654
    7. ')' → logprob: -4.497024059295654
    8. 'e' → logprob: -4.622024059295654
    9. 'inte' → logprob: -4.622024059295654
    10. 'n' → logprob: -4.747024059295654

Token 2485: ' ≤' (ID: 72554)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4607221186161041
    2. '[' → logprob: -1.5857220888137817
    3. 'def' → logprob: -2.3357222080230713
    4. '(' → logprob: -3.2107222080230713
    5. '[i' → logprob: -4.835721969604492
    6. '(
' → logprob: -5.835721969604492
    7. '```' → logprob: -5.835721969604492
    8. '):' → logprob: -6.210721969604492
    9. '[
' → logprob: -6.210721969604492
    10. '   ' → logprob: -6.585721969604492

Token 2486: ' T' (ID: 353)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4560987949371338
    2. '_' → logprob: -1.5810987949371338
    3. '[' → logprob: -1.7060987949371338
    4. 'def' → logprob: -1.7060987949371338
    5. ')' → logprob: -2.331098794937134
    6. '[
' → logprob: -4.206098556518555
    7. '=' → logprob: -4.456098556518555
    8. ' ' → logprob: -4.706098556518555
    9. '(' → logprob: -4.956098556518555
    10. ''' → logprob: -5.331098556518555

Token 2487: '.

' (ID: 364)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6178208589553833
    2. ':' → logprob: -1.1178208589553833
    3. 'def' → logprob: -2.9928207397460938
    4. '   ' → logprob: -3.3678207397460938
    5. '(' → logprob: -4.367820739746094
    6. ')' → logprob: -4.992820739746094
    7. '[i' → logprob: -5.117820739746094
    8. ',' → logprob: -5.617820739746094
    9. ''' → logprob: -5.617820739746094
    10. '[
' → logprob: -5.867820739746094

Token 2488: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14615832269191742
    2. '[' → logprob: -2.146158218383789
    3. 'def' → logprob: -4.396158218383789
    4. '(' → logprob: -6.021158218383789
    5. ':
' → logprob: -7.396158218383789
    6. ')' → logprob: -7.896158218383789
    7. '=' → logprob: -8.021158218383789
    8. '):' → logprob: -8.021158218383789
    9. ':def' → logprob: -8.271158218383789
    10. '.' → logprob: -8.396158218383789

Token 2489: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2453363835811615
    2. '[' → logprob: -2.1203362941741943
    3. 'def' → logprob: -3.1203362941741943
    4. '   ' → logprob: -3.4953362941741943
    5. '[i' → logprob: -4.870336532592773
    6. '):' → logprob: -5.495336532592773
    7. '(' → logprob: -5.620336532592773
    8. ')' → logprob: -6.245336532592773
    9. ' def' → logprob: -6.870336532592773
    10. ':
' → logprob: -7.245336532592773

Token 2490: ' On' (ID: 2160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07968663424253464
    2. '):' → logprob: -3.2046866416931152
    3. '   ' → logprob: -4.454686641693115
    4. '[' → logprob: -5.079686641693115
    5. 'def' → logprob: -5.204686641693115
    6. ')' → logprob: -5.829686641693115
    7. ']:' → logprob: -6.079686641693115
    8. ':
' → logprob: -6.204686641693115
    9. '[i' → logprob: -6.579686641693115
    10. '(' → logprob: -7.204686641693115

Token 2491: ' fait' (ID: 7473)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06596344709396362
    2. '_' → logprob: -3.5659635066986084
    3. ')' → logprob: -3.9409635066986084
    4. ':' → logprob: -5.440963268280029
    5. ']' → logprob: -5.690963268280029
    6. ' ' → logprob: -6.190963268280029
    7. '[
' → logprob: -6.315963268280029
    8. '=' → logprob: -7.190963268280029
    9. 'def' → logprob: -7.190963268280029
    10. '#' → logprob: -7.815963268280029

Token 2492: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8288278579711914
    2. '   ' → logprob: -2.3288278579711914
    3. '[
' → logprob: -2.4538278579711914
    4. '```' → logprob: -2.7038278579711914
    5. ']' → logprob: -2.9538278579711914
    6. 'def' → logprob: -3.2038278579711914
    7. ':' → logprob: -3.2038278579711914
    8. 'i' → logprob: -3.7038278579711914
    9. ')' → logprob: -3.9538278579711914
    10. '[i' → logprob: -3.9538278579711914

Token 2493: ' recherche' (ID: 24975)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0168671607971191
    2. '[' → logprob: -1.0168671607971191
    3. ')' → logprob: -2.516867160797119
    4. ' ' → logprob: -2.891867160797119
    5. 'b' → logprob: -3.016867160797119
    6. '_' → logprob: -4.141867160797119
    7. 'def' → logprob: -4.391867160797119
    8. ']' → logprob: -4.766867160797119
    9. '[
' → logprob: -4.891867160797119
    10. 'n' → logprob: -5.141867160797119

Token 2494: ' b' (ID: 287)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1328761577606201
    2. 'b' → logprob: -1.2578761577606201
    3. 'binary' → logprob: -2.38287615776062
    4. '-' → logprob: -2.50787615776062
    5. ' ' → logprob: -3.13287615776062
    6. ')' → logprob: -3.25787615776062
    7. '_binary' → logprob: -3.63287615776062
    8. ' b' → logprob: -4.007876396179199
    9. ' _' → logprob: -4.757876396179199
    10. '[' → logprob: -4.882876396179199

Token 2495: 'inaire' (ID: 41465)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31858137249946594
    2. 'inary' → logprob: -1.9435813426971436
    3. 'in' → logprob: -3.0685813426971436
    4. '_' → logprob: -3.1935813426971436
    5. ''' → logprob: -4.443581581115723
    6. 'i' → logprob: -4.568581581115723
    7. 'inaire' → logprob: -4.818581581115723
    8. ')' → logprob: -5.818581581115723
    9. 'y' → logprob: -6.193581581115723
    10. '_binary' → logprob: -6.443581581115723

Token 2496: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8482385873794556
    2. '[' → logprob: -1.0982385873794556
    3. '_' → logprob: -2.473238468170166
    4. ':' → logprob: -2.473238468170166
    5. ''' → logprob: -4.348238468170166
    6. ')' → logprob: -4.848238468170166
    7. '   ' → logprob: -5.098238468170166
    8. '(
' → logprob: -5.098238468170166
    9. '"' → logprob: -5.223238468170166
    10. ']' → logprob: -5.348238468170166

Token 2497: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.29881751537323
    2. 'station' → logprob: -1.67381751537323
    3. 'l' → logprob: -1.92381751537323
    4. ' station' → logprob: -2.4238176345825195
    5. 'la' → logprob: -2.6738176345825195
    6. ' ' → logprob: -2.9238176345825195
    7. ' la' → logprob: -3.2988176345825195
    8. ' i' → logprob: -3.7988176345825195
    9. ')' → logprob: -4.0488176345825195
    10. 'N' → logprob: -4.1738176345825195

Token 2498: ' nombre' (ID: 9733)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -1.1073486804962158
    2. 'max' → logprob: -1.4823486804962158
    3. '_' → logprob: -1.9823486804962158
    4. ' station' → logprob: -2.107348680496216
    5. 'i' → logprob: -2.482348680496216
    6. 'position' → logprob: -3.982348680496216
    7. ' max' → logprob: -4.857348442077637
    8. 'next' → logprob: -4.982348442077637
    9. ''' → logprob: -5.107348442077637
    10. 'point' → logprob: -5.107348442077637

Token 2499: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.628913402557373
    2. ' ' → logprob: -1.503913402557373
    3. ')' → logprob: -2.753913402557373
    4. ' _' → logprob: -3.128913402557373
    5. '_max' → logprob: -3.503913402557373
    6. '[' → logprob: -4.128913402557373
    7. 'b' → logprob: -4.378913402557373
    8. ' ' → logprob: -4.503913402557373
    9. ']' → logprob: -4.628913402557373
    10. '_b' → logprob: -5.378913402557373

Token 2500: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.2531385123729706
    2. 'reachable' → logprob: -2.378138542175293
    3. ' stations' → logprob: -3.003138542175293
    4. ' reachable' → logprob: -3.878138542175293
    5. '_' → logprob: -4.128138542175293
    6. 'max' → logprob: -4.378138542175293
    7. ' ' → logprob: -4.878138542175293
    8. ')' → logprob: -5.253138542175293
    9. 'station' → logprob: -5.378138542175293
    10. ' i' → logprob: -6.003138542175293

Token 2501: ' atte' (ID: 43312)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7108697295188904
    2. '[' → logprob: -1.0858697891235352
    3. ')' → logprob: -2.585869789123535
    4. '(' → logprob: -3.710869789123535
    5. '```' → logprob: -4.210869789123535
    6. '_' → logprob: -4.335869789123535
    7. ']' → logprob: -5.085869789123535
    8. 'def' → logprob: -5.085869789123535
    9. '   ' → logprob: -5.210869789123535
    10. '[
' → logprob: -5.335869789123535

Token 2502: 'ign' (ID: 733)
  Prédit: 'ign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.00241798791103065
    2. 'ind' → logprob: -6.627418041229248
    3. 'n' → logprob: -9.00241756439209
    4. 'in' → logprob: -9.00241756439209
    5. 'ig' → logprob: -9.12741756439209
    6. 'int' → logprob: -9.50241756439209
    7. 'ignant' → logprob: -9.62741756439209
    8. ')' → logprob: -9.75241756439209
    9. '#' → logprob: -10.25241756439209
    10. 'inte' → logprob: -10.37741756439209

Token 2503: 'ables' (ID: 3232)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.04796011745929718
    2. 'ivable' → logprob: -4.54796028137207
    3. 'able' → logprob: -4.79796028137207
    4. 'inte' → logprob: -4.92296028137207
    5. 'a' → logprob: -5.92296028137207
    6. 'v' → logprob: -6.04796028137207
    7. 'ind' → logprob: -6.17296028137207
    8. 'ig' → logprob: -6.29796028137207
    9. 'ints' → logprob: -6.54796028137207
    10. 'nable' → logprob: -7.17296028137207

Token 2504: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20235282182693481
    2. '[' → logprob: -1.95235276222229
    3. 'def' → logprob: -3.57735276222229
    4. '(' → logprob: -5.702353000640869
    5. '   ' → logprob: -5.952353000640869
    6. ')' → logprob: -6.702353000640869
    7. ':
' → logprob: -7.077353000640869
    8. '[
' → logprob: -7.202353000640869
    9. '):' → logprob: -7.327353000640869
    10. ',' → logprob: -7.327353000640869

Token 2505: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3254513740539551
    2. '(' → logprob: -1.325451374053955
    3. '[' → logprob: -5.075451374053955
    4. ')' → logprob: -6.325451374053955
    5. 'def' → logprob: -6.825451374053955
    6. '):' → logprob: -7.325451374053955
    7. ',' → logprob: -7.575451374053955
    8. '(
' → logprob: -7.950451374053955
    9. '{' → logprob: -8.200450897216797
    10. '```' → logprob: -8.450450897216797

Token 2506: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024167628958821297
    2. '):' → logprob: -4.649167537689209
    3. 'def' → logprob: -5.024167537689209
    4. '(' → logprob: -5.899167537689209
    5. '[' → logprob: -5.899167537689209
    6. ')' → logprob: -7.524167537689209
    7. ':
' → logprob: -7.774167537689209
    8. ']:' → logprob: -8.649168014526367
    9. ',' → logprob: -8.774168014526367
    10. '   ' → logprob: -8.899168014526367

Token 2507: ' Enfin' (ID: 85274)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2841606140136719
    2. 'def' → logprob: -2.409160614013672
    3. ':
' → logprob: -2.659160614013672
    4. '):' → logprob: -2.784160614013672
    5. '   ' → logprob: -4.534160614013672
    6. ')' → logprob: -5.784160614013672
    7. '[' → logprob: -5.784160614013672
    8. '):
' → logprob: -6.159160614013672
    9. ']:' → logprob: -6.159160614013672
    10. '[i' → logprob: -7.284160614013672

Token 2508: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1508704274892807
    2. '[' → logprob: -2.6508703231811523
    3. 'def' → logprob: -2.9008703231811523
    4. ')' → logprob: -5.525870323181152
    5. '(' → logprob: -5.650870323181152
    6. '):' → logprob: -6.525870323181152
    7. '   ' → logprob: -6.900870323181152
    8. '```' → logprob: -7.525870323181152
    9. ']' → logprob: -7.775870323181152
    10. ',' → logprob: -8.025870323181152

Token 2509: ' code' (ID: 3490)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1023260354995728
    2. '[' → logprob: -1.2273260354995728
    3. ':' → logprob: -1.6023260354995728
    4. 'def' → logprob: -3.352325916290283
    5. '=' → logprob: -3.727325916290283
    6. ')' → logprob: -4.102325916290283
    7. '_max' → logprob: -4.352325916290283
    8. '#' → logprob: -4.352325916290283
    9. '.' → logprob: -4.602325916290283
    10. ' ' → logprob: -4.602325916290283

Token 2510: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06484200805425644
    2. 'def' → logprob: -3.0648419857025146
    3. '[' → logprob: -4.939842224121094
    4. '(' → logprob: -5.314842224121094
    5. '):' → logprob: -6.939842224121094
    6. ':
' → logprob: -7.439842224121094
    7. '   ' → logprob: -7.439842224121094
    8. '(
' → logprob: -8.564842224121094
    9. ':def' → logprob: -8.564842224121094
    10. ' def' → logprob: -8.689842224121094

Token 2511: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009293333627283573
    2. 'def' → logprob: -5.384293556213379
    3. ':
' → logprob: -6.134293556213379
    4. '):' → logprob: -6.759293556213379
    5. '[' → logprob: -7.384293556213379
    6. '':' → logprob: -9.134293556213379
    7. '   ' → logprob: -9.134293556213379
    8. ':def' → logprob: -9.384293556213379
    9. '(' → logprob: -9.634293556213379
    10. '":' → logprob: -9.884293556213379

Token 2512: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04604779928922653
    2. '   ' → logprob: -3.7960476875305176
    3. 'def' → logprob: -4.421047687530518
    4. '):' → logprob: -4.796047687530518
    5. ' :' → logprob: -7.046047687530518
    6. '[' → logprob: -7.671047687530518
    7. ':
' → logprob: -8.546048164367676
    8. ']:' → logprob: -8.671048164367676
    9. ')' → logprob: -9.046048164367676
    10. '{' → logprob: -9.796048164367676

Token 2513: ' ----------------' (ID: 30885)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05034876614809036
    2. '   ' → logprob: -3.1753487586975098
    3. 'def' → logprob: -6.30034875869751
    4. ' :' → logprob: -6.42534875869751
    5. '(' → logprob: -6.80034875869751
    6. '[' → logprob: -6.92534875869751
    7. '):' → logprob: -7.17534875869751
    8. ':
' → logprob: -8.425349235534668
    9. '():' → logprob: -8.925349235534668
    10. '{' → logprob: -9.550349235534668

Token 2514: '------------' (ID: 10793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20528943836688995
    2. ':' → logprob: -1.8302894830703735
    3. 'def' → logprob: -4.080289363861084
    4. '[' → logprob: -5.705289363861084
    5. ':
' → logprob: -6.705289363861084
    6. '[i' → logprob: -7.330289363861084
    7. '):' → logprob: -7.330289363861084
    8. ' :' → logprob: -7.955289363861084
    9. '    
' → logprob: -8.080289840698242
    10. '
' → logprob: -8.330289840698242

Token 2515: '-

' (ID: 16364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46233946084976196
    2. ':' → logprob: -1.0873394012451172
    3. ':
' → logprob: -4.337339401245117
    4. 'def' → logprob: -4.962339401245117
    5. '[' → logprob: -5.212339401245117
    6. '
' → logprob: -6.587339401245117
    7. ' :' → logprob: -6.837339401245117
    8. '    
' → logprob: -6.962339401245117
    9. '):' → logprob: -7.087339401245117
    10. '[i' → logprob: -7.587339401245117

Token 2516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5324988961219788
    2. ':' → logprob: -0.9074988961219788
    3. ':
' → logprob: -6.407498836517334
    4. '):' → logprob: -6.407498836517334
    5. 'def' → logprob: -6.532498836517334
    6. '[' → logprob: -6.782498836517334
    7. ' :' → logprob: -7.157498836517334
    8. '{' → logprob: -7.157498836517334
    9. '
' → logprob: -7.532498836517334
    10. '    
' → logprob: -8.032499313354492

Token 2517: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07565751671791077
    2. ':' → logprob: -3.200657606124878
    3. 'dp' → logprob: -3.825657606124878
    4. '[' → logprob: -5.075657367706299
    5. '
' → logprob: -6.825657367706299
    6. ':
' → logprob: -7.075657367706299
    7. ' ' → logprob: -8.325657844543457
    8. '{' → logprob: -8.700657844543457
    9. '[i' → logprob: -9.075657844543457
    10. '    
' → logprob: -9.075657844543457

Token 2518: ' Trou' (ID: 58947)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4803752303123474
    2. ':' → logprob: -1.1053752899169922
    3. '[' → logprob: -3.230375289916992
    4. 'def' → logprob: -6.105375289916992
    5. ':
' → logprob: -6.730375289916992
    6. '):' → logprob: -6.730375289916992
    7. '[
' → logprob: -6.855375289916992
    8. ' ' → logprob: -7.355375289916992
    9. '{' → logprob: -7.355375289916992
    10. '
' → logprob: -7.855375289916992

Token 2519: 'ver' (ID: 445)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6052924394607544
    2. 'r' → logprob: -1.1052924394607544
    3. 'p' → logprob: -2.355292320251465
    4. 'pos' → logprob: -3.730292320251465
    5. ' ' → logprob: -7.480292320251465
    6. 'position' → logprob: -7.605292320251465
    7. 'pe' → logprob: -7.730292320251465
    8. 'e' → logprob: -8.355292320251465
    9. 'idx' → logprob: -8.355292320251465
    10. 'def' → logprob: -8.355292320251465

Token 2520: ' l' (ID: 305)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06463474035263062
    2. 'p' → logprob: -2.8146347999572754
    3. '   ' → logprob: -6.689634799957275
    4. 'idx' → logprob: -7.064634799957275
    5. ' pos' → logprob: -8.439634323120117
    6. 'bis' → logprob: -9.689634323120117
    7. 'position' → logprob: -9.939634323120117
    8. 'station' → logprob: -10.189634323120117
    9. 'import' → logprob: -10.314634323120117
    10. 'express' → logprob: -10.814634323120117

Token 2521: '’' (ID: 438)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8382304310798645
    2. 'os' → logprob: -1.8382303714752197
    3. 'osition' → logprob: -1.9632303714752197
    4. '#' → logprob: -2.2132303714752197
    5. '_pos' → logprob: -3.4632303714752197
    6. 'def' → logprob: -3.5882303714752197
    7. '=' → logprob: -3.7132303714752197
    8. 'p' → logprob: -3.8382303714752197
    9. 'position' → logprob: -4.713230609893799
    10. 'index' → logprob: -5.588230609893799

Token 2522: 'interval' (ID: 37558)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5836775898933411
    2. 'i' → logprob: -2.3336775302886963
    3. 'idx' → logprob: -2.4586775302886963
    4. 'p' → logprob: -2.5836775302886963
    5. 'index' → logprob: -3.2086775302886963
    6. 'bound' → logprob: -3.8336775302886963
    7. '#' → logprob: -4.083677768707275
    8. 'S' → logprob: -4.083677768707275
    9. '=' → logprob: -4.333677768707275
    10. 'import' → logprob: -4.333677768707275

Token 2523: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.562566876411438
    2. '[' → logprob: -1.687566876411438
    3. ']' → logprob: -2.1875667572021484
    4. '_' → logprob: -2.1875667572021484
    5. 'le' → logprob: -2.5625667572021484
    6. '[
' → logprob: -2.6875667572021484
    7. '[]' → logprob: -3.3125667572021484
    8. '[i' → logprob: -3.6875667572021484
    9. '   ' → logprob: -3.8125667572021484
    10. '_index' → logprob: -3.9375667572021484

Token 2524: ' où' (ID: 15113)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6306777596473694
    2. ' =' → logprob: -1.5056777000427246
    3. 'idx' → logprob: -2.6306777000427246
    4. '=' → logprob: -2.6306777000427246
    5. '   ' → logprob: -2.7556777000427246
    6. 'p' → logprob: -3.5056777000427246
    7. 'i' → logprob: -5.630677700042725
    8. '=
' → logprob: -6.880677700042725
    9. '_pos' → logprob: -7.005677700042725
    10. ' pos' → logprob: -7.005677700042725

Token 2525: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.1858968287706375
    2. 'bis' → logprob: -1.935896873474121
    3. ' station' → logprob: -3.935896873474121
    4. '
' → logprob: -6.310896873474121
    5. '   ' → logprob: -6.810896873474121
    6. ' bis' → logprob: -7.685896873474121
    7. 'S' → logprob: -8.060896873474121
    8. ' ' → logprob: -8.435896873474121
    9. 'p' → logprob: -8.560896873474121
    10. '  ' → logprob: -8.685896873474121

Token 2526: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.05840286239981651
    2. '_pos' → logprob: -3.5584027767181396
    3. '_index' → logprob: -4.058403015136719
    4. '_lim' → logprob: -5.183403015136719
    5. '_idx' → logprob: -6.058403015136719
    6. '_' → logprob: -6.808403015136719
    7. 'limit' → logprob: -6.933403015136719
    8. '_bound' → logprob: -8.808403015136719
    9. 'pos' → logprob: -8.808403015136719
    10. '_position' → logprob: -9.183403015136719

Token 2527: ' se' (ID: 458)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2331719696521759
    2. ' =' → logprob: -2.6081719398498535
    3. '_idx' → logprob: -2.7331719398498535
    4. '_index' → logprob: -2.9831719398498535
    5. '_pos' → logprob: -4.1081719398498535
    6. 'idx' → logprob: -6.7331719398498535
    7. 'pos' → logprob: -7.6081719398498535
    8. '=
' → logprob: -8.358172416687012
    9. 'index' → logprob: -10.358172416687012
    10. '_id' → logprob: -10.358172416687012

Token 2528: ' trouve' (ID: 30913)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.005632843356579542
    2. 'sit' → logprob: -5.3806328773498535
    3. '_tr' → logprob: -7.7556328773498535
    4. ' trouve' → logprob: -8.880632400512695
    5. 't' → logprob: -9.380632400512695
    6. '{
' → logprob: -9.755632400512695
    7. 'it' → logprob: -9.880632400512695
    8. '#' → logprob: -10.255632400512695
    9. '<tr' → logprob: -10.255632400512695
    10. '```' → logprob: -10.255632400512695

Token 2529: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6187962293624878
    2. '=' → logprob: -0.8687962293624878
    3. 'pos' → logprob: -3.8687963485717773
    4. '   ' → logprob: -4.243796348571777
    5. 'idx' → logprob: -5.618796348571777
    6. '=
' → logprob: -6.868796348571777
    7. '_pos' → logprob: -6.993796348571777
    8. ' =
' → logprob: -8.618796348571777
    9. '_idx' → logprob: -8.868796348571777
    10. ':' → logprob: -8.993796348571777

Token 2530: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.08815392851829529
    2. ' pos' → logprob: -3.088153839111328
    3. 'idx' → logprob: -4.213153839111328
    4. 'p' → logprob: -4.588153839111328
    5. '   ' → logprob: -4.963153839111328
    6. 'i' → logprob: -5.713153839111328
    7. ' idx' → logprob: -6.838153839111328
    8. ' p' → logprob: -7.213153839111328
    9. 'interval' → logprob: -7.588153839111328
    10. ' i' → logprob: -7.963153839111328

Token 2531: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.027873825281858444
    2. 'p' → logprob: -3.7778737545013428
    3. '   ' → logprob: -5.652873992919922
    4. 'idx' (adapté à ' idx') → logprob: -7.152873992919922
    5. 'i' → logprob: -8.902873992919922
    6. ' pos' → logprob: -9.277873992919922
    7. 'interval' → logprob: -10.152873992919922
    8. '
' → logprob: -11.277873992919922
    9. 'position' → logprob: -11.777873992919922
    10. 'index' → logprob: -12.027873992919922

Token 2532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975866794586182
    2. '=' → logprob: -1.8047586679458618
    3. ' =
' → logprob: -12.55475902557373
    4. '   ' → logprob: -12.67975902557373
    5. '_' → logprob: -13.17975902557373
    6. ')' → logprob: -13.30475902557373
    7. '=
' → logprob: -13.67975902557373
    8. '```' → logprob: -14.42975902557373
    9. '	' → logprob: -14.92975902557373
    10. ' ' → logprob: -14.92975902557373

Token 2533: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.9385402993066236e-05
    2. ' bis' → logprob: -10.875019073486328
    3. 'import' → logprob: -15.125019073486328
    4. '   ' → logprob: -16.250019073486328
    5. '0' → logprob: -17.875019073486328
    6. 'b' → logprob: -18.125019073486328
    7. 'bs' → logprob: -18.750019073486328
    8. 'len' → logprob: -20.250019073486328
    9. '	b' → logprob: -20.250019073486328
    10. 'sys' → logprob: -20.375019073486328

Token 2534: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.1994775377388578e-05
    2. 'sect' → logprob: -11.750012397766113
    3. 'lect' → logprob: -12.625012397766113
    4. 'ec' → logprob: -15.875012397766113
    5. 'e' → logprob: -16.000011444091797
    6. 'nect' → logprob: -16.125011444091797
    7. 'ject' → logprob: -16.250011444091797
    8. 'ected' → logprob: -16.500011444091797
    9. 'pect' → logprob: -17.000011444091797
    10. 'ce' → logprob: -17.375011444091797

Token 2535: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.014231321401894093
    2. '_left' → logprob: -4.764231204986572
    3. '(S' → logprob: -5.264231204986572
    4. '_right' → logprob: -8.88923168182373
    5. 'bis' → logprob: -9.01423168182373
    6. 'b' → logprob: -9.26423168182373
    7. 'import' → logprob: -10.51423168182373
    8. 'left' → logprob: -10.88923168182373
    9. '(b' → logprob: -11.01423168182373
    10. 'B' → logprob: -13.13923168182373

Token 2536: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -6.074907287256792e-05
    2. 's' → logprob: -10.37506103515625
    3. '_left' → logprob: -11.62506103515625
    4. 'ist' → logprob: -12.25006103515625
    5. 'S' → logprob: -12.37506103515625
    6. 'left' → logprob: -12.62506103515625
    7. 'right' → logprob: -13.50006103515625
    8. '(S' → logprob: -13.87506103515625
    9. '_right' → logprob: -14.00006103515625
    10. 'ins' → logprob: -14.12506103515625

Token 2537: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.3486964702606201
    2. 'ct' → logprob: -1.2236964702606201
    3. 'lect' → logprob: -9.0986967086792
    4. 'e' → logprob: -9.7236967086792
    5. 't' → logprob: -10.5986967086792
    6. '```' → logprob: -10.8486967086792
    7. 'r' → logprob: -11.5986967086792
    8. '_left' → logprob: -12.4736967086792
    9. 'c' → logprob: -13.0986967086792
    10. 'S' → logprob: -13.2236967086792

Token 2538: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.219744473695755
    2. '_right' → logprob: -1.7197444438934326
    3. 'left' → logprob: -4.719744682312012
    4. '(S' → logprob: -5.219744682312012
    5. 'right' → logprob: -5.594744682312012
    6. 'Right' → logprob: -9.344744682312012
    7. 'Left' → logprob: -10.594744682312012
    8. 'S' → logprob: -12.344744682312012
    9. '.b' → logprob: -13.594744682312012
    10. '-left' → logprob: -14.344744682312012

Token 2539: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.061967913061380386
    2. 'S' → logprob: -2.8119678497314453
    3. '(' → logprob: -15.686967849731445
    4. '   ' → logprob: -16.061967849731445
    5. ' S' → logprob: -18.686967849731445
    6. '```' → logprob: -18.936967849731445
    7. ',S' → logprob: -19.061967849731445
    8. '	S' → logprob: -19.186967849731445
    9. '(
' → logprob: -20.186967849731445
    10. '_S' → logprob: -20.436967849731445

Token 2540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ',S' → logprob: -11.875014305114746
    3. ',
' → logprob: -12.625014305114746
    4. ' ,' → logprob: -12.750014305114746
    5. '   ' → logprob: -14.875014305114746
    6. '(st' → logprob: -16.00001335144043
    7. ',s' → logprob: -16.25001335144043
    8. ')' → logprob: -17.25001335144043
    9. 'S' → logprob: -17.37501335144043
    10. '_,' → logprob: -17.37501335144043

Token 2541: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.0019287518225610256
    2. ' station' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.501928329467773
    4. 'st' → logprob: -17.001928329467773
    5. 'sta' → logprob: -17.876928329467773
    6. ' ' → logprob: -19.001928329467773
    7. 'Station' → logprob: -19.251928329467773
    8. 'stock' → logprob: -19.251928329467773
    9. '  ' → logprob: -19.501928329467773
    10. 'staff' → logprob: -19.501928329467773

Token 2542: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0001114106344175525
    2. 'limit' → logprob: -10.37511157989502
    3. '_' → logprob: -11.00011157989502
    4. ')' → logprob: -11.12511157989502
    5. ')_' → logprob: -11.12511157989502
    6. '_limits' → logprob: -11.37511157989502
    7. '_lim' → logprob: -12.12511157989502
    8. ' _' → logprob: -12.50011157989502
    9. '_)' → logprob: -13.00011157989502
    10. '_LIMIT' → logprob: -13.50011157989502

Token 2543: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042864278657361865
    2. ')
' → logprob: -8.125428199768066
    3. '   ' → logprob: -9.375428199768066
    4. ')+' → logprob: -10.250428199768066
    5. ' )' → logprob: -12.250428199768066
    6. ')-' → logprob: -12.375428199768066
    7. ')`' → logprob: -13.125428199768066
    8. ')#' → logprob: -15.375428199768066
    9. '```' → logprob: -15.875428199768066
    10. ')i' → logprob: -16.000429153442383

Token 2544: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7766014933586121
    2. '   ' → logprob: -1.1516015529632568
    3. '
' → logprob: -2.401601552963257
    4. '<|end|>' → logprob: -2.651601552963257
    5. '```' → logprob: -4.151601314544678
    6. '-' → logprob: -4.276601314544678
    7. '<|end|>' → logprob: -5.276601314544678
    8. ']' → logprob: -5.901601314544678
    9. '[' → logprob: -5.901601314544678
    10. ' if' → logprob: -5.901601314544678

Token 2545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -19.375
    4. 'import' → logprob: -19.625
    5. '   ' → logprob: -22.75
    6. '۱' → logprob: -24.125
    7. '
' → logprob: -24.375
    8. '2' → logprob: -24.375
    9. '0' → logprob: -24.625
    10. ':' → logprob: -24.875

Token 2546: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15904982388019562
    2. '
' → logprob: -2.1590497493743896
    3. '    
' → logprob: -4.159049987792969
    4. ')' → logprob: -4.909049987792969
    5. ']' → logprob: -6.034049987792969
    6. ' if' → logprob: -6.784049987792969
    7. '[i' → logprob: -7.409049987792969
    8. '    ' → logprob: -7.534049987792969
    9. '<|end|>' → logprob: -7.784049987792969
    10. ':' → logprob: -8.034049987792969

Token 2547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09133323282003403
    2. '
' → logprob: -2.5913331508636475
    3. ' if' → logprob: -5.841333389282227
    4. '    
' → logprob: -5.841333389282227
    5. 'if' → logprob: -6.216333389282227
    6. ':' → logprob: -6.466333389282227
    7. ')' → logprob: -6.841333389282227
    8. '[i' → logprob: -7.716333389282227
    9. ']' → logprob: -8.091333389282227
    10. ' =' → logprob: -8.966333389282227

Token 2548: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24053120613098145
    2. 'if' → logprob: -1.7405312061309814
    3. ' if' → logprob: -3.6155312061309814
    4. '
' → logprob: -4.615530967712402
    5. '    
' → logprob: -7.615530967712402
    6. 'interval' → logprob: -7.740530967712402
    7. '#' (adapté à ' #') → logprob: -8.865530967712402
    8. 'i' → logprob: -9.365530967712402
    9. 'd' → logprob: -9.865530967712402
    10. 'return' → logprob: -10.240530967712402

Token 2549: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4963173270225525
    2. 'if' → logprob: -0.9963173270225525
    3. ' if' → logprob: -4.871317386627197
    4. 'interval' → logprob: -5.121317386627197
    5. 'd' → logprob: -5.871317386627197
    6. '
' → logprob: -5.996317386627197
    7. 'dp' → logprob: -6.371317386627197
    8. 'return' → logprob: -8.121316909790039
    9. 'segment' → logprob: -8.621316909790039
    10. 'i' → logprob: -8.746316909790039

Token 2550: ' entre' (ID: 3853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2551: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002755174064077437
    2. '-' → logprob: -8.625275611877441
    3. 'max' → logprob: -9.375275611877441
    4. ' ' → logprob: -12.125275611877441
    5. ' max' → logprob: -13.250275611877441
    6. ' -' → logprob: -13.375275611877441
    7. '=' → logprob: -14.750275611877441
    8. 'min' → logprob: -15.375275611877441
    9. '(' → logprob: -15.375275611877441
    10. '-max' → logprob: -15.500275611877441

Token 2552: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. '-' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.125003814697266
    4. '
' → logprob: -18.125003814697266
    5. ' -' → logprob: -18.500003814697266
    6. '   ' → logprob: -19.250003814697266
    7. 'max' → logprob: -19.250003814697266
    8. '1' → logprob: -19.500003814697266
    9. '`' → logprob: -19.625003814697266
    10. '```' → logprob: -19.750003814697266

Token 2553: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2554: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -9.686778503237292e-05
    2. 'len' → logprob: -9.375097274780273
    3. ' M' → logprob: -11.625097274780273
    4. '(M' → logprob: -12.875097274780273
    5. '   ' → logprob: -15.375097274780273
    6. 'max' → logprob: -16.625097274780273
    7. '
' → logprob: -16.750097274780273
    8. 'm' → logprob: -17.000097274780273
    9. '0' → logprob: -17.125097274780273
    10. '	M' → logprob: -17.625097274780273

Token 2555: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04914363473653793
    2. ' -' → logprob: -3.5491435527801514
    3. ')' → logprob: -5.1741437911987305
    4. ':' → logprob: -5.7991437911987305
    5. ']' → logprob: -6.0491437911987305
    6. '[idx' → logprob: -6.1741437911987305
    7. '   ' → logprob: -6.6741437911987305
    8. '
' → logprob: -7.7991437911987305
    9. '```' → logprob: -7.7991437911987305
    10. 'idx' → logprob: -7.7991437911987305

Token 2556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018157554790377617
    2. '2' → logprob: -4.018157482147217
    3. ' ' → logprob: -12.393157958984375
    4. '```' → logprob: -13.518157958984375
    5. '   ' → logprob: -13.768157958984375
    6. '-' → logprob: -14.643157958984375
    7. '3' → logprob: -15.768157958984375
    8. ')' → logprob: -15.893157958984375
    9. '0' → logprob: -15.955657958984375
    10. '...' → logprob: -17.268157958984375

Token 2557: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03994126617908478
    2. ')' → logprob: -4.414941310882568
    3. ']' → logprob: -4.789941310882568
    4. '
' → logprob: -5.289941310882568
    5. ' if' → logprob: -5.414941310882568
    6. '    
' → logprob: -5.914941310882568
    7. ' +' → logprob: -6.664941310882568
    8. '[i' → logprob: -6.914941310882568
    9. 'if' → logprob: -7.039941310882568
    10. '+' → logprob: -7.539941310882568

Token 2558: 'segment' (ID: 45362)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2957281172275543
    2. '0' → logprob: -2.0457282066345215
    3. 'max' → logprob: -2.9207282066345215
    4. '
' → logprob: -4.0457282066345215
    5. ')
' → logprob: -4.5457282066345215
    6. 'if' → logprob: -4.6707282066345215
    7. '   ' → logprob: -5.0457282066345215
    8. ' if' → logprob: -5.4207282066345215
    9. '1' → logprob: -5.5457282066345215
    10. ' max' → logprob: -5.7957282066345215

Token 2559: ' contenant' (ID: 131049)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3757825195789337
    2. '+' → logprob: -1.2507824897766113
    3. ']' → logprob: -4.750782489776611
    4. ')' → logprob: -4.750782489776611
    5. '   ' → logprob: -6.125782489776611
    6. ']+' → logprob: -6.250782489776611
    7. 's' → logprob: -6.750782489776611
    8. '[idx' → logprob: -7.000782489776611
    9. '_idx' → logprob: -7.500782489776611
    10. ')+' → logprob: -8.12578296661377

Token 2560: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.04673619940876961
    2. 'idx' → logprob: -3.296736240386963
    3. ' station' → logprob: -5.046736240386963
    4. ' idx' → logprob: -6.421736240386963
    5. 'S' → logprob: -8.171735763549805
    6. ')' → logprob: -10.046735763549805
    7. '   ' → logprob: -10.171735763549805
    8. ' ' → logprob: -10.171735763549805
    9. ' S' → logprob: -10.421735763549805
    10. '
' → logprob: -10.421735763549805

Token 2561: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0049148197285830975
    2. 'idx' → logprob: -6.2549147605896
    3. 'limit' → logprob: -6.8799147605896
    4. '_idx' → logprob: -7.3799147605896
    5. ']' → logprob: -7.7549147605896
    6. '_' → logprob: -7.8799147605896
    7. 's' → logprob: -9.379915237426758
    8. '[idx' → logprob: -9.754915237426758
    9. ']_' → logprob: -9.754915237426758
    10. ')' → logprob: -9.879915237426758

Token 2562: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2644183933734894
    2. ' +' → logprob: -2.139418363571167
    3. ')' → logprob: -2.639418363571167
    4. ']' → logprob: -3.514418363571167
    5. '   ' → logprob: -4.514418601989746
    6. ' if' → logprob: -7.264418601989746
    7. ']+' → logprob: -7.514418601989746
    8. 'if' → logprob: -8.014418601989746
    9. ')+' → logprob: -8.264418601989746
    10. '
' → logprob: -9.389418601989746

Token 2563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19139450788497925
    2. '
' → logprob: -2.066394567489624
    3. 'if' → logprob: -3.691394567489624
    4. ' if' → logprob: -4.316394329071045
    5. '    
' → logprob: -5.816394329071045
    6. ')' → logprob: -6.441394329071045
    7. '```' → logprob: -7.191394329071045
    8. ']' → logprob: -7.691394329071045
    9. ',' → logprob: -7.941394329071045
    10. '[i' → logprob: -8.066394805908203

Token 2564: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9032623767852783
    2. '   ' → logprob: -1.1532623767852783
    3. '
' → logprob: -1.5282623767852783
    4. ' if' → logprob: -2.9032623767852783
    5. '    
' → logprob: -6.403262138366699
    6. 'interval' → logprob: -6.903262138366699
    7. '+' → logprob: -7.278262138366699
    8. ' +' → logprob: -7.528262138366699
    9. '```' → logprob: -7.778262138366699
    10. 'i' → logprob: -7.778262138366699

Token 2565: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4167925715446472
    2. 'if' → logprob: -1.166792631149292
    3. 'interval' → logprob: -4.166792392730713
    4. 'd' → logprob: -4.541792392730713
    5. '
' → logprob: -7.291792392730713
    6. 'segment' → logprob: -7.541792392730713
    7. 'dp' → logprob: -7.666792392730713
    8. ' if' → logprob: -7.791792392730713
    9. '#' → logprob: -8.166792869567871
    10. 'length' → logprob: -8.541792869567871

Token 2566: ' station' (ID: 11538)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.013899615034461021
    2. 'station' → logprob: -4.388899803161621
    3. ' idx' → logprob: -6.638899803161621
    4. ' station' → logprob: -9.888899803161621
    5. 'S' → logprob: -11.638899803161621
    6. '0' → logprob: -12.263899803161621
    7. 'st' → logprob: -12.638899803161621
    8. 'index' → logprob: -12.763899803161621
    9. '	idx' → logprob: -12.888899803161621
    10. '(idx' → logprob: -13.263899803161621

Token 2567: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.045198556035757065
    2. 'idx' → logprob: -4.045198440551758
    3. '[idx' → logprob: -4.545198440551758
    4. '_idx' → logprob: -5.295198440551758
    5. 'limit' → logprob: -5.920198440551758
    6. '=' → logprob: -6.670198440551758
    7. '_' → logprob: -6.795198440551758
    8. '_limits' → logprob: -6.920198440551758
    9. ')' → logprob: -7.545198440551758
    10. 'Limit' → logprob: -7.920198440551758

Token 2568: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1817767173051834
    2. ' ==' → logprob: -2.431776762008667
    3. '<' → logprob: -2.931776762008667
    4. '>=' → logprob: -4.556776523590088
    5. '>' → logprob: -4.806776523590088
    6. ' <' → logprob: -5.556776523590088
    7. '<=' → logprob: -7.056776523590088
    8. ' >' → logprob: -7.806776523590088
    9. ' >=' → logprob: -8.181777000427246
    10. '=' → logprob: -8.556777000427246

Token 2569: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0004330532974563539
    2. 'station' → logprob: -8.500432968139648
    3. 'N' → logprob: -9.250432968139648
    4. ' S' → logprob: -9.500432968139648
    5. '-' → logprob: -10.750432968139648
    6. 'len' → logprob: -10.875432968139648
    7. 'idx' → logprob: -11.875432968139648
    8. 'M' → logprob: -12.750432968139648
    9. '0' → logprob: -13.125432968139648
    10. ' station' → logprob: -13.250432968139648

Token 2570: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0021956947166472673
    2. 'idx' → logprob: -6.377195835113525
    3. '[-' → logprob: -8.752195358276367
    4. '_idx' → logprob: -9.377195358276367
    5. '   ' → logprob: -9.627195358276367
    6. '[' → logprob: -10.127195358276367
    7. 's' → logprob: -10.252195358276367
    8. '(idx' → logprob: -11.127195358276367
    9. ']' → logprob: -11.502195358276367
    10. ':' → logprob: -11.627195358276367

Token 2571: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3012610971927643
    2. ']:
' → logprob: -2.0512611865997314
    3. ']:' → logprob: -2.4262611865997314
    4. '[idx' → logprob: -4.051260948181152
    5. ' or' → logprob: -4.676260948181152
    6. '):
' → logprob: -6.051260948181152
    7. ']):
' → logprob: -6.051260948181152
    8. ']):' → logprob: -6.051260948181152
    9. '])' → logprob: -6.301260948181152
    10. ':' → logprob: -6.551260948181152

Token 2572: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3326432704925537
    2. 'idx' → logprob: -1.3326432704925537
    3. ':' → logprob: -2.3326432704925537
    4. '       ' → logprob: -2.4576432704925537
    5. 'True' → logprob: -2.8326432704925537
    6. ' idx' → logprob: -2.9576432704925537
    7. ':
' → logprob: -3.8326432704925537
    8. 'if' → logprob: -3.8326432704925537
    9. ' True' → logprob: -3.8326432704925537
    10. 'continue' → logprob: -4.082643508911133

Token 2573: ' station' (ID: 11538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7636139988899231
    2. '[' → logprob: -1.6386139392852783
    3. ':' → logprob: -2.2636139392852783
    4. ']' → logprob: -3.0136139392852783
    5. '_' → logprob: -3.5136139392852783
    6. '[i' → logprob: -3.5136139392852783
    7. ' +' → logprob: -3.7636139392852783
    8. ' ' → logprob: -4.013614177703857
    9. '[idx' → logprob: -4.513614177703857
    10. '```' → logprob: -4.763614177703857

Token 2574: ' est' (ID: 893)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0319433212280273
    2. '[idx' → logprob: -1.6569433212280273
    3. '_limit' → logprob: -2.0319433212280273
    4. '_' → logprob: -2.4069433212280273
    5. 'idx' → logprob: -2.9069433212280273
    6. '```' → logprob: -3.0319433212280273
    7. '==' → logprob: -3.9069433212280273
    8. '_idx' → logprob: -4.031943321228027
    9. 's' → logprob: -4.281943321228027
    10. ']==' → logprob: -4.406943321228027

Token 2575: ' à' (ID: 1221)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.024196023121476173
    2. ' S' → logprob: -4.399196147918701
    3. 'exact' → logprob: -5.149196147918701
    4. ' exactement' → logprob: -6.524196147918701
    5. '=' → logprob: -6.649196147918701
    6. ' =' → logprob: -7.149196147918701
    7. ' exactly' → logprob: -7.399196147918701
    8. ' dans' → logprob: -8.274195671081543
    9. ' exact' → logprob: -8.649195671081543
    10. ' ' → logprob: -8.899195671081543

Token 2576: ' l' (ID: 305)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.020774513483047485
    2. 'S' → logprob: -4.0207743644714355
    3. 'exact' → logprob: -6.0207743644714355
    4. ' idx' → logprob: -9.020774841308594
    5. '[idx' → logprob: -10.645774841308594
    6. 'arr' → logprob: -11.395774841308594
    7. 'indice' → logprob: -11.395774841308594
    8. 'index' → logprob: -12.270774841308594
    9. '(idx' → logprob: -12.520774841308594
    10. 'position' → logprob: -12.645774841308594

Token 2577: '’arrêt' (ID: 179811)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.25956395268440247
    2. 'S' → logprob: -2.13456392288208
    3. '[idx' → logprob: -3.00956392288208
    4. 'stop' → logprob: -3.63456392288208
    5. 'arr' → logprob: -4.00956392288208
    6. 'station' → logprob: -5.63456392288208
    7. 'pos' → logprob: -5.75956392288208
    8. 'position' → logprob: -5.88456392288208
    9. 'exact' → logprob: -6.88456392288208
    10. 'm' → logprob: -7.13456392288208

Token 2578: ' express' (ID: 6101)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05119258165359497
    2. ' if' → logprob: -4.051192760467529
    3. 'if' → logprob: -4.551192760467529
    4. ':
' → logprob: -4.801192760467529
    5. 'def' → logprob: -5.301192760467529
    6. ':' → logprob: -6.051192760467529
    7. '[idx' → logprob: -6.301192760467529
    8. ' =' → logprob: -6.926192760467529
    9. '[i' → logprob: -7.301192760467529
    10. '
' → logprob: -7.426192760467529

Token 2579: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010033952072262764
    2. ' if' → logprob: -5.260034084320068
    3. '
' → logprob: -5.885034084320068
    4. ' +' → logprob: -7.260034084320068
    5. ':' → logprob: -7.510034084320068
    6. 'if' → logprob: -8.63503360748291
    7. 'def' → logprob: -9.13503360748291
    8. ':
' → logprob: -9.26003360748291
    9. '```' → logprob: -9.38503360748291
    10. '    
' → logprob: -9.76003360748291

Token 2580: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16518431901931763
    2. ':' → logprob: -2.540184259414673
    3. ':
' → logprob: -3.540184259414673
    4. ' return' → logprob: -5.040184497833252
    5. ' continue' → logprob: -5.415184497833252
    6. ' if' → logprob: -5.415184497833252
    7. ' :' → logprob: -5.540184497833252
    8. ' True' → logprob: -6.040184497833252
    9. ' :
' → logprob: -6.290184497833252
    10. ' idx' → logprob: -6.290184497833252

Token 2581: ' on' (ID: 402)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0556976795196533
    2. 'return' → logprob: -1.3056976795196533
    3. '   ' → logprob: -2.1806976795196533
    4. ' return' → logprob: -2.5556976795196533
    5. 'idx' → logprob: -2.6806976795196533
    6. 'True' → logprob: -3.4306976795196533
    7. ' idx' → logprob: -3.5556976795196533
    8. ' True' → logprob: -4.180697441101074
    9. 'dp' → logprob: -4.555697441101074
    10. ' station' → logprob: -4.680697441101074

Token 2582: ' peut' (ID: 9216)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3390038013458252
    2. 'continue' → logprob: -1.8390038013458252
    3. 'return' → logprob: -2.714003801345825
    4. ' return' → logprob: -3.089003801345825
    5. '+' → logprob: -4.714003562927246
    6. '   ' → logprob: -6.839003562927246
    7. ':' → logprob: -7.214003562927246
    8. ':
' → logprob: -7.214003562927246
    9. '_continue' → logprob: -7.589003562927246
    10. ' =' → logprob: -8.089003562927246

Token 2583: ' directement' (ID: 52317)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01067554485052824
    2. 'ret' → logprob: -4.635675430297852
    3. 'contin' → logprob: -7.760675430297852
    4. 'prendre' → logprob: -8.510675430297852
    5. '   ' → logprob: -9.010675430297852
    6. 'continue' → logprob: -10.010675430297852
    7. ' return' → logprob: -10.135675430297852
    8. ' retourner' → logprob: -11.635675430297852
    9. 'faire' → logprob: -11.760675430297852
    10. 'mettre' → logprob: -11.885675430297852

Token 2584: ' prendre' (ID: 24257)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00045926711754873395
    2. 'ret' → logprob: -8.250459671020508
    3. '   ' → logprob: -8.750459671020508
    4. ' return' → logprob: -10.500459671020508
    5. ':return' → logprob: -12.625459671020508
    6. '{return' → logprob: -12.875459671020508
    7. 'if' → logprob: -13.125459671020508
    8. ' retourner' → logprob: -14.000459671020508
    9. '       ' → logprob: -14.125459671020508
    10. '
' → logprob: -14.875459671020508

Token 2585: ' sem' (ID: 2743)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7572079300880432
    2. 'S' → logprob: -2.1322078704833984
    3. ' idx' → logprob: -2.1322078704833984
    4. '   ' → logprob: -2.3822078704833984
    5. '0' → logprob: -3.0072078704833984
    6. 'dp' → logprob: -3.0072078704833984
    7. '1' → logprob: -3.5072078704833984
    8. ' S' → logprob: -3.8822078704833984
    9. 'station' → logprob: -4.382207870483398
    10. ' ' → logprob: -4.507207870483398

Token 2586: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.04916451871395111
    2. 'express' → logprob: -3.4241645336151123
    3. '_i' → logprob: -4.799164295196533
    4. 'i' → logprob: -6.424164295196533
    5. 'iex' → logprob: -6.674164295196533
    6. 'pexpr' → logprob: -7.049164295196533
    7. '[i' → logprob: -7.674164295196533
    8. 'ip' → logprob: -7.799164295196533
    9. '_expr' → logprob: -8.049164772033691
    10. '
' → logprob: -8.299164772033691

Token 2587: ' express' (ID: 6101)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02709931507706642
    2. '
' → logprob: -4.652099132537842
    3. ' if' → logprob: -5.152099132537842
    4. ':
' → logprob: -5.652099132537842
    5. 'if' → logprob: -6.152099132537842
    6. '[idx' → logprob: -6.277099132537842
    7. ':' → logprob: -7.027099132537842
    8. 'def' → logprob: -7.027099132537842
    9. '[i' → logprob: -7.277099132537842
    10. '    
' → logprob: -8.027099609375

Token 2588: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05941681191325188
    2. '
' → logprob: -3.1844167709350586
    3. ' if' → logprob: -4.559416770935059
    4. 'if' → logprob: -5.809416770935059
    5. ':
' → logprob: -7.184416770935059
    6. '    
' → logprob: -7.934416770935059
    7. ' =' → logprob: -8.059416770935059
    8. ':' → logprob: -8.434416770935059
    9. '	if' → logprob: -8.934416770935059
    10. '.
' → logprob: -9.059416770935059

Token 2589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058532390743494034
    2. '
' → logprob: -3.308532476425171
    3. 'if' → logprob: -4.433532238006592
    4. ' if' → logprob: -5.058532238006592
    5. '    
' → logprob: -6.558532238006592
    6. '[i' → logprob: -8.68353271484375
    7. '```' → logprob: -9.30853271484375
    8. ')' → logprob: -9.55853271484375
    9. ')
' → logprob: -10.05853271484375
    10. '
' → logprob: -10.68353271484375

Token 2590: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6362109184265137
    2. '   ' → logprob: -0.8862109184265137
    3. ' if' → logprob: -3.3862109184265137
    4. '
' → logprob: -3.7612109184265137
    5. '    
' → logprob: -7.011210918426514
    6. ':
' → logprob: -8.511211395263672
    7. ':' → logprob: -9.511211395263672
    8. '  
' → logprob: -9.886211395263672
    9. '	if' → logprob: -10.386211395263672
    10. '```' → logprob: -11.136211395263672

Token 2591: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48889675736427307
    2. 'if' → logprob: -0.9888967275619507
    3. '
' → logprob: -4.36389684677124
    4. ' if' → logprob: -6.36389684677124
    5. '    
' → logprob: -8.488896369934082
    6. 'dp' → logprob: -10.613896369934082
    7. '#' → logprob: -11.738896369934082
    8. '  
' → logprob: -12.488896369934082
    9. 'def' → logprob: -12.738896369934082
    10. '	if' → logprob: -12.863896369934082

Token 2592: ' pré' (ID: 9424)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.559518039226532
    2. 'def' → logprob: -2.0595180988311768
    3. '=' → logprob: -2.6845180988311768
    4. 'contin' → logprob: -2.6845180988311768
    5. '#' → logprob: -3.0595180988311768
    6. 'for' → logprob: -3.4345180988311768
    7. 'len' → logprob: -4.184517860412598
    8. ' continue' → logprob: -4.559517860412598
    9. 'if' → logprob: -4.934517860412598
    10. ' =' → logprob: -5.309517860412598

Token 2593: '-cal' (ID: 84920)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.45479369163513184
    2. 'pare' → logprob: -1.2047936916351318
    3. 'dict' → logprob: -4.204793930053711
    4. 'fix' → logprob: -4.579793930053711
    5. 'v' → logprob: -4.954793930053711
    6. 'pares' → logprob: -4.954793930053711
    7. 'par' → logprob: -5.079793930053711
    8. 'sum' → logprob: -5.704793930053711
    9. 'cis' → logprob: -6.204793930053711
    10. 'S' → logprob: -6.454793930053711

Token 2594: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -1.062789797782898
    2. 'cule' → logprob: -1.187789797782898
    3. 'c' → logprob: -1.687789797782898
    4. 'culated' → logprob: -2.4377899169921875
    5. 'culate' → logprob: -2.8127899169921875
    6. '```' → logprob: -5.5627899169921875
    7. 'r' → logprob: -6.0627899169921875
    8. '``' → logprob: -6.6877899169921875
    9. 'rc' → logprob: -6.8127899169921875
    10. 'l' → logprob: -7.0627899169921875

Token 2595: ' les' (ID: 1341)
  Prédit: 'cule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.6058779358863831
    2. 'cul' → logprob: -1.3558778762817383
    3. 'culate' → logprob: -2.1058778762817383
    4. 'culated' → logprob: -3.2308778762817383
    5. 're' → logprob: -4.480877876281738
    6. 'l' → logprob: -4.855877876281738
    7. 'c' → logprob: -5.355877876281738
    8. 'cules' → logprob: -6.230877876281738
    9. 'r' → logprob: -6.605877876281738
    10. '```' → logprob: -6.980877876281738

Token 2596: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5928093194961548
    2. 'dp' → logprob: -1.4678093194961548
    3. 'd' → logprob: -1.8428093194961548
    4. 'temps' → logprob: -3.3428092002868652
    5. 'times' → logprob: -5.342809200286865
    6. 'cost' → logprob: -5.467809200286865
    7. 'diff' → logprob: -5.842809200286865
    8. 'segment' → logprob: -5.967809200286865
    9. '#' → logprob: -6.217809200286865
    10. 'segments' → logprob: -6.467809200286865

Token 2597: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5835409760475159
    2. 'd' → logprob: -1.333540916442871
    3. '=' → logprob: -2.083540916442871
    4. ' =' → logprob: -3.458540916442871
    5. 'interval' → logprob: -4.708540916442871
    6. '_dist' → logprob: -5.083540916442871
    7. 'length' → logprob: -6.083540916442871
    8. '_inter' → logprob: -7.333540916442871
    9. 'diff' → logprob: -7.583540916442871
    10. 'segment' → logprob: -7.583540916442871

Token 2598: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15556928515434265
    2. '=[' → logprob: -2.780569314956665
    3. 'ist' → logprob: -3.280569314956665
    4. ' =' → logprob: -3.780569314956665
    5. '=[]' → logprob: -4.530569076538086
    6. '=[]
' → logprob: -5.530569076538086
    7. 'ists' → logprob: -5.655569076538086
    8. 'istance' → logprob: -6.405569076538086
    9. '=S' → logprob: -7.655569076538086
    10. 'iffs' → logprob: -7.780569076538086

Token 2599: ' entre' (ID: 3853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008691268973052502
    2. ' =' → logprob: -4.758691310882568
    3. 's' → logprob: -10.25869083404541
    4. 'd' → logprob: -10.75869083404541
    5. '=[' → logprob: -11.50869083404541
    6. 'dist' → logprob: -12.13369083404541
    7. '=[]' → logprob: -13.63369083404541
    8. '[' → logprob: -13.75869083404541
    9. ']' → logprob: -14.38369083404541
    10. '=[]
' → logprob: -14.50869083404541

Token 2600: ' arr' (ID: 1724)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0006581080378964543
    2. ' S' → logprob: -8.12565803527832
    3. 'i' → logprob: -8.25065803527832
    4. '[i' → logprob: -9.87565803527832
    5. ']' → logprob: -11.25065803527832
    6. 'adj' → logprob: -12.25065803527832
    7. '
' → logprob: -12.62565803527832
    8. 'indices' → logprob: -12.62565803527832
    9. '```' → logprob: -12.75065803527832
    10. '[S' → logprob: -12.75065803527832

Token 2601: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.024472584947943687
    2. 'rets' → logprob: -3.77447247505188
    3. '[i' → logprob: -7.399472713470459
    4. 'r' → logprob: -8.5244722366333
    5. '[' → logprob: -9.1494722366333
    6. 'êtes' → logprob: -9.2744722366333
    7. 'êt' → logprob: -9.5244722366333
    8. 'ets' → logprob: -9.8994722366333
    9. 'ê' → logprob: -10.3994722366333
    10. '[]' → logprob: -10.8994722366333

Token 2602: ' express' (ID: 6101)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45935019850730896
    2. ' =' → logprob: -1.0843502283096313
    3. 's' → logprob: -4.459350109100342
    4. 'S' → logprob: -5.084350109100342
    5. 'i' → logprob: -6.084350109100342
    6. 'ist' → logprob: -6.084350109100342
    7. 'express' → logprob: -6.084350109100342
    8. '=[]' → logprob: -6.459350109100342
    9. '=[]
' → logprob: -6.959350109100342
    10. 'ists' → logprob: -7.334350109100342

Token 2603: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030576098710298538
    2. ' =' → logprob: -3.53057599067688
    3. 's' → logprob: -7.280576229095459
    4. 'd' → logprob: -10.0305757522583
    5. '=[' → logprob: -10.1555757522583
    6. 'dist' → logprob: -10.2805757522583
    7. '=
' → logprob: -12.1555757522583
    8. '[' → logprob: -12.9055757522583
    9. '_' → logprob: -13.0305757522583
    10. ']' → logprob: -13.4055757522583

Token 2604: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00872199796140194
    2. ' =' → logprob: -4.758721828460693
    3. 's' → logprob: -9.258722305297852
    4. '=[' → logprob: -12.383722305297852
    5. 'd' → logprob: -12.633722305297852
    6. '[' → logprob: -13.508722305297852
    7. '=
' → logprob: -14.008722305297852
    8. '[i' → logprob: -14.883722305297852
    9. ']' → logprob: -15.508722305297852
    10. '=[]
' → logprob: -15.508722305297852

Token 2605: ' intervals' (ID: 49900)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3439686894416809
    2. 'dist' → logprob: -1.4689686298370361
    3. ' =' → logprob: -3.343968629837036
    4. '=' → logprob: -3.968968629837036
    5. 'interval' → logprob: -5.468968868255615
    6. ']' → logprob: -7.468968868255615
    7. 'distance' → logprob: -8.093968391418457
    8. 'length' → logprob: -8.343968391418457
    9. '=[' → logprob: -8.468968391418457
    10. ' d' → logprob: -8.468968391418457

Token 2606: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5763375163078308
    2. '=' → logprob: -0.8263375163078308
    3. '=[' → logprob: -8.701337814331055
    4. '[' → logprob: -9.701337814331055
    5. '[i' → logprob: -10.076337814331055
    6. '   ' → logprob: -10.201337814331055
    7. '_' → logprob: -10.451337814331055
    8. '=[]' → logprob: -10.701337814331055
    9. 's' → logprob: -11.201337814331055
    10. ' =[' → logprob: -12.451337814331055

Token 2607: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.0015100972959771752
    2. '[' → logprob: -6.501510143280029
    3. ' [' → logprob: -12.001509666442871
    4. '[i' → logprob: -14.376509666442871
    5. '[N' → logprob: -14.876509666442871
    6. '[]
' → logprob: -15.001509666442871
    7. '[len' → logprob: -15.876509666442871
    8. '[int' → logprob: -15.876509666442871
    9. '[I' → logprob: -16.626510620117188
    10. '[str' → logprob: -16.876510620117188

Token 2608: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.3438327843905427e-05
    2. '(S' → logprob: -10.87502384185791
    3. ' S' → logprob: -12.37502384185791
    4. '   ' → logprob: -16.125022888183594
    5. ']' → logprob: -16.875022888183594
    6. '	S' → logprob: -17.250022888183594
    7. '[S' → logprob: -17.250022888183594
    8. ' ' → logprob: -17.375022888183594
    9. '0' → logprob: -18.125022888183594
    10. '(' → logprob: -18.500022888183594

Token 2609: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010747690976131707
    2. '[' → logprob: -9.375107765197754
    3. '[j' → logprob: -11.250107765197754
    4. '][' → logprob: -13.125107765197754
    5. 'i' → logprob: -13.250107765197754
    6. ']' → logprob: -13.375107765197754
    7. '[-' → logprob: -14.125107765197754
    8. '   ' → logprob: -14.250107765197754
    9. '```' → logprob: -14.500107765197754
    10. '
' → logprob: -14.625107765197754

Token 2610: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.9153885558771435e-06
    2. ' +' → logprob: -12.625005722045898
    3. ']' → logprob: -13.625005722045898
    4. '1' → logprob: -14.875005722045898
    5. '+i' → logprob: -15.000005722045898
    6. '+]' → logprob: -15.375005722045898
    7. '+
' → logprob: -15.625005722045898
    8. '[i' → logprob: -15.625005722045898
    9. ']+' → logprob: -16.7500057220459
    10. '[' → logprob: -17.7500057220459

Token 2611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3871201276779175
    2. '+' → logprob: -1.1371201276779175
    3. ']' → logprob: -8.637120246887207
    4. 'i' → logprob: -9.887120246887207
    5. ']+' → logprob: -11.262120246887207
    6. '0' → logprob: -13.012120246887207
    7. '+]' → logprob: -13.387120246887207
    8. ']-' → logprob: -14.012120246887207
    9. ' +' → logprob: -14.012120246887207
    10. '+i' → logprob: -14.137120246887207

Token 2612: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21176777780056
    2. '-' → logprob: -2.0867676734924316
    3. ' -' → logprob: -2.8367676734924316
    4. ']-' → logprob: -4.836767673492432
    5. '[' → logprob: -9.21176815032959
    6. ')' → logprob: -10.46176815032959
    7. ' ]' → logprob: -10.71176815032959
    8. '   ' → logprob: -11.21176815032959
    9. '#' → logprob: -11.46176815032959
    10. ' ' → logprob: -11.46176815032959

Token 2613: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020558124408125877
    2. ' -' → logprob: -3.8955581188201904
    3. '-S' → logprob: -12.02055835723877
    4. ']' → logprob: -12.14555835723877
    5. '[' → logprob: -13.27055835723877
    6. ']-' → logprob: -13.52055835723877
    7. ')' → logprob: -14.39555835723877
    8. ' ' → logprob: -14.64555835723877
    9. '-
' → logprob: -15.77055835723877
    10. '   ' → logprob: -15.77055835723877

Token 2614: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.014179375022649765
    2. 'i' → logprob: -4.264179229736328
    3. ' S' → logprob: -12.014179229736328
    4. ' i' → logprob: -12.014179229736328
    5. '[i' → logprob: -13.139179229736328
    6. '```' → logprob: -14.764179229736328
    7. '   ' → logprob: -15.014179229736328
    8. '(i' → logprob: -15.264179229736328
    9. ']' → logprob: -15.514179229736328
    10. '
' → logprob: -15.764179229736328

Token 2615: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931716203689575
    2. '[i' → logprob: -0.6931716203689575
    3. ' i' → logprob: -11.193171501159668
    4. ']' → logprob: -12.818171501159668
    5. '```' → logprob: -13.068171501159668
    6. '(i' → logprob: -13.443171501159668
    7. 'S' → logprob: -13.568171501159668
    8. '[
' → logprob: -14.318171501159668
    9. '][' → logprob: -14.568171501159668
    10. '
' → logprob: -14.693171501159668

Token 2616: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07152648270130157
    2. 'for' → logprob: -2.946526527404785
    3. '   ' → logprob: -4.946526527404785
    4. ')' → logprob: -5.071526527404785
    5. ' for' → logprob: -5.821526527404785
    6. ' ' → logprob: -10.071526527404785
    7. 'i' → logprob: -10.446526527404785
    8. ' ]' → logprob: -10.446526527404785
    9. '[i' → logprob: -10.571526527404785
    10. '  ' → logprob: -12.071526527404785

Token 2617: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759791135787964
    2. ' for' → logprob: -0.8259791135787964
    3. '   ' → logprob: -11.075979232788086
    4. ')' → logprob: -11.200979232788086
    5. ']' → logprob: -12.200979232788086
    6. ' ' → logprob: -12.700979232788086
    7. '	for' → logprob: -13.825979232788086
    8. '
' → logprob: -14.325979232788086
    9. '```' → logprob: -15.325979232788086
    10. '    ' → logprob: -15.575979232788086

Token 2618: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001589618914294988
    2. ' i' → logprob: -8.75015926361084
    3. 'range' → logprob: -14.75015926361084
    4. ' range' → logprob: -17.125158309936523
    5. '	i' → logprob: -20.750158309936523
    6. '[i' → logprob: -21.000158309936523
    7. '
' → logprob: -21.500158309936523
    8. ' ' → logprob: -21.625158309936523
    9. 'in' → logprob: -22.000158309936523
    10. '   ' → logprob: -22.625158309936523

Token 2619: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8829335570335388
    2. 'in' → logprob: -1.1329336166381836
    3. 'i' → logprob: -1.3829336166381836
    4. ' i' → logprob: -4.507933616638184
    5. 'range' → logprob: -6.632933616638184
    6. ' range' → logprob: -6.757933616638184
    7. ' ' → logprob: -13.882933616638184
    8. '[i' → logprob: -14.257933616638184
    9. '(i' → logprob: -14.757933616638184
    10. ',i' → logprob: -14.882933616638184

Token 2620: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '
' → logprob: -21.75007438659668
    4. ' ' → logprob: -21.75007438659668
    5. '(range' → logprob: -22.25007438659668
    6. '   ' → logprob: -22.37507438659668
    7. '	range' → logprob: -22.75007438659668
    8. '  ' → logprob: -23.37507438659668
    9. '0' → logprob: -23.75007438659668
    10. 'i' → logprob: -24.25007438659668

Token 2621: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00028374246903695166
    2. 'len' → logprob: -8.625284194946289
    3. '(M' → logprob: -9.625284194946289
    4. ' M' → logprob: -10.375284194946289
    5. '   ' → logprob: -12.500284194946289
    6. 'i' → logprob: -13.000284194946289
    7. '[M' → logprob: -15.000284194946289
    8. '(len' → logprob: -15.125284194946289
    9. ' len' → logprob: -16.37528419494629
    10. '0' → logprob: -16.75028419494629

Token 2622: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.682846287731081e-05
    2. ' -' → logprob: -9.625066757202148
    3. ')]' → logprob: -14.750066757202148
    4. '1' → logprob: -15.375066757202148
    5. ')' → logprob: -15.625066757202148
    6. ')])' → logprob: -17.75006675720215
    7. '   ' → logprob: -18.75006675720215
    8. '[' → logprob: -19.12506675720215
    9. ')][' → logprob: -19.25006675720215
    10. ')],' → logprob: -19.50006675720215

Token 2623: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -17.125
    3. '```' → logprob: -18.75
    4. ' ' → logprob: -19.0
    5. ')' → logprob: -19.75
    6. '   ' → logprob: -21.0
    7. '2' → logprob: -21.5
    8. '
' → logprob: -21.75
    9. ']' → logprob: -21.875
    10. '１' → logprob: -22.5

Token 2624: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00039289999403990805
    2. ']' → logprob: -7.875392913818359
    3. ')]
' → logprob: -12.00039291381836
    4. '   ' → logprob: -12.12539291381836
    5. ')' → logprob: -15.12539291381836
    6. ' ]' → logprob: -15.12539291381836
    7. '])]' → logprob: -16.00039291381836
    8. '])' → logprob: -16.12539291381836
    9. '>]' → logprob: -16.25039291381836
    10. '')]' → logprob: -16.37539291381836

Token 2625: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10063600540161133
    2. '   ' → logprob: -2.3506360054016113
    3. '
' → logprob: -8.100635528564453
    4. ' dp' → logprob: -10.225635528564453
    5. '    
' → logprob: -10.475635528564453
    6. '#' → logprob: -10.850635528564453
    7. 'max' → logprob: -11.475635528564453
    8. 'DP' → logprob: -11.600635528564453
    9. '```' → logprob: -12.100635528564453
    10. '	dp' → logprob: -12.475635528564453

Token 2626: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03847013786435127
    2. '   ' → logprob: -3.2884700298309326
    3. '
' → logprob: -8.038470268249512
    4. '#' (adapté à ' #') → logprob: -10.288470268249512
    5. ' dp' → logprob: -10.788470268249512
    6. '    
' → logprob: -11.163470268249512
    7. 'max' → logprob: -11.663470268249512
    8. 'n' → logprob: -11.663470268249512
    9. 'DP' → logprob: -11.788470268249512
    10. '	dp' → logprob: -13.038470268249512

Token 2627: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023262133821845055
    2. '   ' → logprob: -3.7732620239257812
    3. '    
' → logprob: -12.398262023925781
    4. '
' → logprob: -12.523262023925781
    5. 'from' → logprob: -12.648262023925781
    6. 'import' → logprob: -12.898262023925781
    7. ' dp' → logprob: -13.398262023925781
    8. '#' → logprob: -14.523262023925781
    9. '	dp' → logprob: -14.648262023925781
    10. 'INF' → logprob: -15.148262023925781

Token 2628: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005815077456645668
    2. '=' → logprob: -7.500581741333008
    3. '=[' → logprob: -10.625581741333008
    4. '=[[' → logprob: -13.375581741333008
    5. '   ' → logprob: -13.625581741333008
    6. ' =[' → logprob: -15.000581741333008
    7. '[' → logprob: -15.250581741333008
    8. ' =
' → logprob: -16.000581741333008
    9. '[i' → logprob: -16.250581741333008
    10. 'size' → logprob: -16.500581741333008

Token 2629: ' taille' (ID: 41644)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.06692998856306076
    2. ' [[' → logprob: -2.816930055618286
    3. '[' → logprob: -5.566929817199707
    4. '[
' → logprob: -7.441929817199707
    5. ' [' → logprob: -7.566929817199707
    6. 'dp' → logprob: -11.441929817199707
    7. 'import' → logprob: -11.441929817199707
    8. ' [
' → logprob: -14.566929817199707
    9. '[(' → logprob: -15.066929817199707
    10. '[-' → logprob: -15.316929817199707

Token 2630: ' M' (ID: 391)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.5139584541320801
    2. ' =' → logprob: -1.63895845413208
    3. '(M' → logprob: -1.88895845413208
    4. '=' → logprob: -3.38895845413208
    5. 'dp' → logprob: -5.01395845413208
    6. 'M' → logprob: -5.26395845413208
    7. '=M' → logprob: -5.88895845413208
    8. '   ' → logprob: -6.38895845413208
    9. '[[' → logprob: -6.76395845413208
    10. '=[' → logprob: -6.88895845413208

Token 2631: ' x' (ID: 1215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2544461190700531
    2. '=' → logprob: -1.5044461488723755
    3. 'dp' → logprob: -6.879446029663086
    4. '   ' → logprob: -7.879446029663086
    5. '=[' → logprob: -8.004446029663086
    6. '=[[' → logprob: -8.004446029663086
    7. ']' → logprob: -9.129446029663086
    8. '=
' → logprob: -9.754446029663086
    9. '
' → logprob: -9.754446029663086
    10. ')' → logprob: -10.629446029663086

Token 2632: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0186269823461771
    2. 'K' → logprob: -4.143627166748047
    3. ' (' → logprob: -6.018627166748047
    4. ' K' → logprob: -9.143627166748047
    5. '((' → logprob: -11.018627166748047
    6. '[K' → logprob: -11.018627166748047
    7. '(' → logprob: -11.768627166748047
    8. '
' → logprob: -13.018627166748047
    9. '   ' → logprob: -13.143627166748047
    10. '(k' → logprob: -14.143627166748047

Token 2633: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0002111694193445146
    2. '(K' → logprob: -8.500210762023926
    3. ' K' → logprob: -12.000210762023926
    4. ' (' → logprob: -14.125210762023926
    5. '[K' → logprob: -14.875210762023926
    6. '   ' → logprob: -15.750210762023926
    7. '
' → logprob: -16.625211715698242
    8. '(' → logprob: -16.625211715698242
    9. ')' → logprob: -17.000211715698242
    10. '+' → logprob: -17.000211715698242

Token 2634: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012523093027994037
    2. ' +' → logprob: -9.00012493133545
    3. '+
' → logprob: -13.25012493133545
    4. '＋' → logprob: -19.000125885009766
    5. ' +
' → logprob: -19.125125885009766
    6. '+)' → logprob: -19.375125885009766
    7. '+[' → logprob: -19.875125885009766
    8. '
' → logprob: -20.000125885009766
    9. ')+' → logprob: -20.375125885009766
    10. '   ' → logprob: -21.250125885009766

Token 2635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -18.75
    4. '
' → logprob: -19.5
    5. '```' → logprob: -21.5
    6. '+' → logprob: -21.625
    7. ')' → logprob: -21.75
    8. '2' → logprob: -22.0
    9. '１' → logprob: -23.125
    10. '=' → logprob: -24.0

Token 2636: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004681338090449572
    2. ')
' → logprob: -5.50468111038208
    3. ']' → logprob: -8.379681587219238
    4. '   ' → logprob: -9.754681587219238
    5. ')=' → logprob: -10.004681587219238
    6. '])' → logprob: -10.129681587219238
    7. ',' → logprob: -10.254681587219238
    8. '),' → logprob: -10.254681587219238
    9. ')]' → logprob: -10.379681587219238
    10. '[' → logprob: -10.379681587219238

Token 2637: ' initial' (ID: 4871)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21917513012886047
    2. 'import' → logprob: -1.969175100326538
    3. '[[' → logprob: -2.969175100326538
    4. ' [[' → logprob: -5.719175338745117
    5. '[
' → logprob: -7.094175338745117
    6. '[' → logprob: -7.344175338745117
    7. ' dp' → logprob: -7.594175338745117
    8. 'INF' → logprob: -7.844175338745117
    9. ' [' → logprob: -9.469175338745117
    10. ' import' → logprob: -9.719175338745117

Token 2638: 'isé' (ID: 30065)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.0017801376525312662
    2. ' =' → logprob: -6.876780033111572
    3. '=' → logprob: -8.00178050994873
    4. 'isé' → logprob: -8.50178050994873
    5. '=[' → logprob: -9.62678050994873
    6. 'isée' → logprob: -10.75178050994873
    7. 'ize' → logprob: -11.00178050994873
    8. '   ' → logprob: -11.12678050994873
    9. 'izer' → logprob: -11.50178050994873
    10. 'ised' → logprob: -11.50178050994873

Token 2639: ' à' (ID: 1221)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.5029325485229492
    2. ' =' → logprob: -1.3779325485229492
    3. '([[' → logprob: -3.002932548522949
    4. '=' → logprob: -3.377932548522949
    5. '[
' → logprob: -4.002932548522949
    6. '   ' → logprob: -4.127932548522949
    7. 'import' → logprob: -5.002932548522949
    8. '[' → logprob: -5.127932548522949
    9. '=[[' → logprob: -5.252932548522949
    10. ' [[' → logprob: -5.877932548522949

Token 2640: ' grand' (ID: 6363)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6967843174934387
    2. 'float' → logprob: -0.6967843174934387
    3. '10' → logprob: -6.071784496307373
    4. '[K' → logprob: -7.321784496307373
    5. '[int' → logprob: -7.946784496307373
    6. ' [' → logprob: -9.321784019470215
    7. '[[' → logprob: -9.696784019470215
    8. 'sys' → logprob: -10.071784019470215
    9. 'int' → logprob: -10.946784019470215
    10. '[T' → logprob: -10.946784019470215

Token 2641: ' nombre' (ID: 9733)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.0596494674682617
    2. 'int' → logprob: -1.3096494674682617
    3. '10' → logprob: -2.1846494674682617
    4. 'float' → logprob: -2.1846494674682617
    5. 'inf' → logprob: -2.8096494674682617
    6. '[' → logprob: -3.6846494674682617
    7. '100' → logprob: -3.9346494674682617
    8. '1' → logprob: -4.809649467468262
    9. '
' → logprob: -5.059649467468262
    10. 'INT' → logprob: -5.059649467468262

Token 2642: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2429898977279663
    2. '   ' → logprob: -1.3679898977279663
    3. '([[' → logprob: -1.9929898977279663
    4. '[[' → logprob: -2.617990016937256
    5. '=' → logprob: -3.367990016937256
    6. 'dp' → logprob: -3.492990016937256
    7. 'import' → logprob: -3.492990016937256
    8. '[' → logprob: -3.617990016937256
    9. ' (' → logprob: -3.742990016937256
    10. '([' → logprob: -3.867990016937256

Token 2643: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.23128080368042
    2. 'dp' → logprob: -1.23128080368042
    3. 'import' → logprob: -2.10628080368042
    4. '[[' → logprob: -2.48128080368042
    5. '[' → logprob: -2.85628080368042
    6. '```' → logprob: -2.98128080368042
    7. '[
' → logprob: -3.35628080368042
    8. ' =' → logprob: -3.48128080368042
    9. '
' → logprob: -3.98128080368042
    10. ')' → logprob: -6.23128080368042

Token 2644: ' INF' (ID: 69196)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4669102728366852
    2. 'import' → logprob: -1.2169102430343628
    3. 'INF' (adapté à ' INF') → logprob: -3.4669103622436523
    4. '[[' → logprob: -3.4669103622436523
    5. '[
' → logprob: -4.841910362243652
    6. '[' → logprob: -5.341910362243652
    7. '
' → logprob: -7.091910362243652
    8. 'inf' → logprob: -7.841910362243652
    9. '   ' → logprob: -8.591910362243652
    10. '```' → logprob: -8.591910362243652

Token 2645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11518998444080353
    2. '=' → logprob: -2.240190029144287
    3. ')' → logprob: -6.990190029144287
    4. '   ' → logprob: -7.115190029144287
    5. '[' → logprob: -8.990189552307129
    6. '=
' → logprob: -9.615189552307129
    7. ' =
' → logprob: -9.740189552307129
    8. '  ' → logprob: -9.740189552307129
    9. ',' → logprob: -10.240189552307129
    10. ' ' → logprob: -10.240189552307129

Token 2646: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'int' → logprob: -16.50000762939453
    4. '   ' → logprob: -20.00000762939453
    5. 'float' → logprob: -20.50000762939453
    6. '  ' → logprob: -20.87500762939453
    7. '1' → logprob: -21.00000762939453
    8. '100' → logprob: -21.25000762939453
    9. '
' → logprob: -22.00000762939453
    10. ' ' → logprob: -22.12500762939453

Token 2647: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1472419600977446e-06
    2. 'int' → logprob: -14.500000953674316
    3. 'float' → logprob: -14.500000953674316
    4. '1' → logprob: -16.125001907348633
    5. ' ' → logprob: -16.875001907348633
    6. '100' → logprob: -19.375001907348633
    7. '(' → logprob: -20.250001907348633
    8. '2' → logprob: -20.750001907348633
    9. '200' → logprob: -22.500001907348633
    10. '１０' → logprob: -22.875001907348633

Token 2648: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.02201547846198082
    2. '6' → logprob: -4.772015571594238
    3. '7' → logprob: -5.022015571594238
    4. '**' → logprob: -5.022015571594238
    5. '8' → logprob: -9.147015571594238
    6. '000' → logprob: -11.772015571594238
    7. '0' → logprob: -12.147015571594238
    8. '09' → logprob: -12.522015571594238
    9. '00' → logprob: -13.022015571594238
    10. ' **' → logprob: -13.397015571594238

Token 2649: '20' (ID: 455)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03565413877367973
    2. '15' → logprob: -3.535654067993164
    3. '18' → logprob: -5.160654067993164
    4. '12' → logprob: -8.910654067993164
    5. '14' → logprob: -11.785654067993164
    6. '13' → logprob: -12.660654067993164
    7. '10' → logprob: -13.535654067993164
    8. '16' → logprob: -13.910654067993164
    9. '17' → logprob: -16.035654067993164
    10. '7' → logprob: -16.535654067993164

Token 2650: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03859080746769905
    2. '   ' → logprob: -3.538590908050537
    3. '
' → logprob: -5.538590908050537
    4. ' dp' → logprob: -5.663590908050537
    5. ' =' → logprob: -7.788590908050537
    6. ',' → logprob: -8.413590431213379
    7. ',
' → logprob: -8.538590431213379
    8. ')
' → logprob: -9.038590431213379
    9. '_dp' → logprob: -9.413590431213379
    10. '    
' → logprob: -9.663590431213379

Token 2651: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10044895112514496
    2. '   ' → logprob: -2.3504488468170166
    3. ' dp' → logprob: -8.975448608398438
    4. 'import' → logprob: -9.475448608398438
    5. '	dp' → logprob: -10.225448608398438
    6. '```' → logprob: -13.475448608398438
    7. '
' → logprob: -14.225448608398438
    8. '_dp' → logprob: -14.600448608398438
    9. ' ' → logprob: -16.225448608398438
    10. 'from' → logprob: -16.600448608398438

Token 2652: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0001454955490771681
    2. 'import' → logprob: -9.00014591217041
    3. '   ' → logprob: -10.75014591217041
    4. ' dp' → logprob: -14.50014591217041
    5. 'from' → logprob: -15.75014591217041
    6. '	dp' → logprob: -18.250144958496094
    7. '
' → logprob: -19.625144958496094
    8. '```' → logprob: -20.750144958496094
    9. '_dp' → logprob: -21.250144958496094
    10. 'dt' → logprob: -21.500144958496094

Token 2653: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06416440010070801
    2. '=' → logprob: -3.189164400100708
    3. '[' → logprob: -4.689164161682129
    4. '=[' → logprob: -5.189164161682129
    5. '=[[' → logprob: -5.689164161682129
    6. '   ' → logprob: -6.439164161682129
    7. '[i' → logprob: -8.064164161682129
    8. '=[
' → logprob: -8.439164161682129
    9. '```' → logprob: -9.189164161682129
    10. '[][]' → logprob: -9.564164161682129

Token 2654: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0001589618914294988
    2. '[' → logprob: -9.00015926361084
    3. ' [[' → logprob: -10.25015926361084
    4. '[
' → logprob: -16.250158309936523
    5. ' [' → logprob: -17.125158309936523
    6. '[(' → logprob: -18.625158309936523
    7. '[['' → logprob: -19.125158309936523
    8. '([[' → logprob: -19.625158309936523
    9. '[list' → logprob: -19.875158309936523
    10. '[array' → logprob: -20.125158309936523

Token 2655: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.9361264946837764e-07
    2. ' INF' → logprob: -16.375
    3. '[' → logprob: -16.75
    4. '_INF' → logprob: -17.75
    5. 'float' → logprob: -18.75
    6. 'inf' → logprob: -19.125
    7. '0' → logprob: -20.125
    8. '-INF' → logprob: -20.125
    9. '   ' → logprob: -20.25
    10. '
' → logprob: -20.375

Token 2656: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1749115139245987
    2. ']' → logprob: -2.2999114990234375
    3. 'for' → logprob: -3.4249114990234375
    4. '[' → logprob: -3.9249114990234375
    5. '   ' → logprob: -5.4249114990234375
    6. '	for' → logprob: -6.5499114990234375
    7. '    ' → logprob: -7.7999114990234375
    8. ']*' → logprob: -8.299911499023438
    9. ' [' → logprob: -8.549911499023438
    10. '  ' → logprob: -8.674911499023438

Token 2657: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00012296605564188212
    2. '(K' → logprob: -9.500123023986816
    3. ' K' → logprob: -10.000123023986816
    4. '   ' → logprob: -13.125123023986816
    5. ' (' → logprob: -14.500123023986816
    6. '(' → logprob: -16.5001220703125
    7. ' ' → logprob: -17.1251220703125
    8. '  ' → logprob: -17.6251220703125
    9. '
' → logprob: -18.5001220703125
    10. '	K' → logprob: -18.6251220703125

Token 2658: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043126524542458355
    2. ' +' → logprob: -7.750431060791016
    3. '+
' → logprob: -14.500431060791016
    4. ')+' → logprob: -17.250431060791016
    5. '[' → logprob: -17.875431060791016
    6. ')' → logprob: -18.375431060791016
    7. '＋' → logprob: -19.125431060791016
    8. '   ' → logprob: -19.250431060791016
    9. '
' → logprob: -19.625431060791016
    10. '+++' → logprob: -19.875431060791016

Token 2659: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '+' → logprob: -15.875
    3. '2' → logprob: -16.0
    4. ' ' → logprob: -16.0
    5. '   ' → logprob: -17.125
    6. '3' → logprob: -17.5
    7. '0' → logprob: -18.75
    8. '
' → logprob: -18.875
    9. '=' → logprob: -19.125
    10. '001' → logprob: -19.125

Token 2660: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005211008246988058
    2. 'for' → logprob: -8.000520706176758
    3. ' for' → logprob: -9.000520706176758
    4. '   ' → logprob: -10.125520706176758
    5. ' )' → logprob: -11.375520706176758
    6. ')]' → logprob: -11.875520706176758
    7. ']' → logprob: -13.250520706176758
    8. '       ' → logprob: -14.125520706176758
    9. ')
' → logprob: -14.875520706176758
    10. ' ' → logprob: -15.000520706176758

Token 2661: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5761465430259705
    2. 'for' → logprob: -0.8261465430259705
    3. ']' → logprob: -9.076146125793457
    4. '	for' → logprob: -9.826146125793457
    5. '   ' → logprob: -10.701146125793457
    6. ')' → logprob: -11.451146125793457
    7. ' ' → logprob: -12.951146125793457
    8. '    ' → logprob: -13.701146125793457
    9. '
' → logprob: -14.826146125793457
    10. ',' → logprob: -15.201146125793457

Token 2662: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023794025182724
    2. '_i' → logprob: -4.023794174194336
    3. 'i' → logprob: -5.773794174194336
    4. ' _' → logprob: -6.148794174194336
    5. '_in' → logprob: -9.023794174194336
    6. '_j' → logprob: -9.148794174194336
    7. '_range' → logprob: -9.523794174194336
    8. '   ' → logprob: -10.148794174194336
    9. ' i' → logprob: -10.773794174194336
    10. '_p' → logprob: -12.773794174194336

Token 2663: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09300576895475388
    2. 'i' → logprob: -2.718005657196045
    3. ' range' → logprob: -3.843005657196045
    4. '_' → logprob: -7.093005657196045
    5. '_range' → logprob: -8.218006134033203
    6. '_i' → logprob: -8.843006134033203
    7. ' i' → logprob: -9.718006134033203
    8. 'in' → logprob: -10.218006134033203
    9. '0' → logprob: -11.968006134033203
    10. ' _' → logprob: -12.093006134033203

Token 2664: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -17.126171112060547
    4. 'i' → logprob: -18.001171112060547
    5. '   ' → logprob: -19.126171112060547
    6. '	range' → logprob: -20.126171112060547
    7. '_range' → logprob: -20.376171112060547
    8. ' ' → logprob: -21.376171112060547
    9. '
' → logprob: -21.501171112060547
    10. '.range' → logprob: -23.001171112060547

Token 2665: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.001443568617105484
    2. '(M' → logprob: -6.626443386077881
    3. '   ' → logprob: -9.376443862915039
    4. ' M' → logprob: -10.376443862915039
    5. ' (' → logprob: -14.626443862915039
    6. 'i' → logprob: -15.376443862915039
    7. '	M' → logprob: -15.501443862915039
    8. 'range' → logprob: -15.751443862915039
    9. '(i' → logprob: -15.876443862915039
    10. '       ' → logprob: -16.50144386291504

Token 2666: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.48153480887413025
    2. ')]
' → logprob: -1.1065348386764526
    3. ')][' → logprob: -2.981534719467163
    4. ')' → logprob: -7.981534957885742
    5. ')]
' → logprob: -8.856534957885742
    6. ')[' → logprob: -9.481534957885742
    7. ')]

' → logprob: -10.106534957885742
    8. '][' → logprob: -10.731534957885742
    9. ')])' → logprob: -10.731534957885742
    10. '[' → logprob: -10.856534957885742

Token 2667: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.13388703338569e-06
    2. 'for' → logprob: -11.875009536743164
    3. '   ' → logprob: -14.250009536743164
    4. ' dp' → logprob: -14.500009536743164
    5. '```' → logprob: -14.750009536743164
    6. '
' → logprob: -15.000009536743164
    7. '	dp' → logprob: -15.875009536743164
    8. 'import' → logprob: -16.375009536743164
    9. '_dp' → logprob: -17.125009536743164
    10. '(dp' → logprob: -18.500009536743164

Token 2668: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.7968066206085496e-05
    2. 'for' → logprob: -10.500027656555176
    3. '
' → logprob: -16.000028610229492
    4. '#' (adapté à ' #') → logprob: -16.125028610229492
    5. ' dp' → logprob: -16.375028610229492
    6. '```' → logprob: -16.500028610229492
    7. '   ' → logprob: -16.625028610229492
    8. 'import' → logprob: -16.750028610229492
    9. 'if' → logprob: -18.250028610229492
    10. '	dp' → logprob: -19.750028610229492

Token 2669: ' A' (ID: 355)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003178544342517853
    2. 'for' → logprob: -5.753178596496582
    3. '#' → logprob: -14.503178596496582
    4. 'import' → logprob: -16.128177642822266
    5. ' dp' → logprob: -17.003177642822266
    6. 'from' → logprob: -17.128177642822266
    7. '   ' → logprob: -17.128177642822266
    8. '
' → logprob: -17.878177642822266
    9. ' for' → logprob: -18.753177642822266
    10. '	dp' → logprob: -19.378177642822266

Token 2670: ' S' (ID: 336)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07480060309171677
    2. '[' → logprob: -3.199800491333008
    3. 'll' → logprob: -4.199800491333008
    4. '#' → logprob: -5.199800491333008
    5. 'pp' → logprob: -5.949800491333008
    6. 'ss' → logprob: -6.074800491333008
    7. '=' → logprob: -7.199800491333008
    8. 'def' → logprob: -7.199800491333008
    9. '   ' → logprob: -7.199800491333008
    10. 'rray' → logprob: -7.699800491333008

Token 2671: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012023737654089928
    2. '0' → logprob: -8.251202583312988
    3. 'dp' → logprob: -9.251202583312988
    4. 'rr' → logprob: -9.376202583312988
    5. 'rray' → logprob: -9.626202583312988
    6. 'T' → logprob: -9.626202583312988
    7. '[i' → logprob: -10.001202583312988
    8. '=' → logprob: -10.126202583312988
    9. 't' → logprob: -10.251202583312988
    10. '   ' → logprob: -10.376202583312988

Token 2672: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006937315920367837
    2. 'i' → logprob: -8.000693321228027
    3. '][' → logprob: -8.500693321228027
    4. '[' → logprob: -9.375693321228027
    5. ']' → logprob: -10.375693321228027
    6. ' ' → logprob: -10.625693321228027
    7. '   ' → logprob: -12.625693321228027
    8. '[i' → logprob: -13.000693321228027
    9. '=' → logprob: -13.125693321228027
    10. '#' → logprob: -13.500693321228027

Token 2673: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0048524304293096066
    2. '[' → logprob: -5.504852294921875
    3. ']' → logprob: -7.254852294921875
    4. ' ][' → logprob: -10.379852294921875
    5. '   ' → logprob: -11.254852294921875
    6. '0' → logprob: -13.004852294921875
    7. 'def' → logprob: -13.129852294921875
    8. '][-' → logprob: -13.129852294921875
    9. '=' → logprob: -13.504852294921875
    10. '#' → logprob: -13.629852294921875

Token 2674: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006234417669475079
    2. '][' → logprob: -8.37562370300293
    3. '0' → logprob: -8.50062370300293
    4. '
' → logprob: -9.75062370300293
    5. 'dp' → logprob: -10.00062370300293
    6. ' [' → logprob: -10.87562370300293
    7. '=' → logprob: -11.00062370300293
    8. ' =' → logprob: -11.37562370300293
    9. 'def' → logprob: -11.50062370300293
    10. '#' → logprob: -11.62562370300293

Token 2675: 'station' (ID: 27999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.975612187583465e-05
    2. '][' → logprob: -11.500029563903809
    3. ' ' → logprob: -12.000029563903809
    4. '
' → logprob: -12.375029563903809
    5. ']' → logprob: -13.125029563903809
    6. '   ' → logprob: -13.125029563903809
    7. ')' → logprob: -13.250029563903809
    8. '#' → logprob: -14.875029563903809
    9. ':' → logprob: -15.000029563903809
    10. '=' → logprob: -15.000029563903809

Token 2676: ' ' (ID: 220)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7940508723258972
    2. '0' → logprob: -1.294050931930542
    3. '1' → logprob: -2.294050931930542
    4. '=' → logprob: -2.919050931930542
    5. '[' → logprob: -3.294050931930542
    6. ']' → logprob: -3.544050931930542
    7. ' =' → logprob: -3.669050931930542
    8. ' ' → logprob: -5.169050693511963
    9. ',' → logprob: -6.044050693511963
    10. ')' → logprob: -6.419050693511963

Token 2677: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005789305083453655
    2. ' ' → logprob: -5.380789279937744
    3. '1' → logprob: -6.880789279937744
    4. ' =' → logprob: -10.630789756774902
    5. ')' → logprob: -10.755789756774902
    6. '=' → logprob: -10.755789756774902
    7. ']' → logprob: -10.880789756774902
    8. '])' → logprob: -11.130789756774902
    9. '   ' → logprob: -11.505789756774902
    10. '[' → logprob: -12.130789756774902

Token 2678: '),' (ID: 936)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003168737457599491
    2. ']' → logprob: -8.750316619873047
    3. '[' → logprob: -9.250316619873047
    4. '],' → logprob: -10.375316619873047
    5. ' ][' → logprob: -12.125316619873047
    6. 'def' → logprob: -12.250316619873047
    7. '   ' → logprob: -12.625316619873047
    8. ']
' → logprob: -13.000316619873047
    9. ']:
' → logprob: -13.000316619873047
    10. ')][' → logprob: -13.250316619873047

Token 2679: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.044691987335681915
    2. '0' → logprob: -3.419692039489746
    3. '   ' → logprob: -5.294692039489746
    4. ' dp' → logprob: -5.419692039489746
    5. ' ' → logprob: -7.169692039489746
    6. '[' → logprob: -7.794692039489746
    7. '1' → logprob: -8.669692039489746
    8. 'K' → logprob: -10.544692039489746
    9. '  ' → logprob: -10.544692039489746
    10. 'for' → logprob: -10.669692039489746

Token 2680: ' a' (ID: 261)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015229289419949055
    2. '[' → logprob: -4.265229225158691
    3. ' dp' → logprob: -7.890229225158691
    4. '0' → logprob: -8.515229225158691
    5. 'initialize' → logprob: -8.640229225158691
    6. ' [' → logprob: -9.890229225158691
    7. 'set' → logprob: -10.265229225158691
    8. 'don' → logprob: -10.390229225158691
    9. 'dé' → logprob: -10.640229225158691
    10. '#' → logprob: -10.890229225158691

Token 2681: ' déjà' (ID: 21229)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4159872233867645
    2. 'dp' → logprob: -1.665987253189087
    3. '1' → logprob: -2.165987253189087
    4. '[' → logprob: -4.540987014770508
    5. ' ' → logprob: -4.790987014770508
    6. 'M' → logprob: -5.040987014770508
    7. ' dp' → logprob: -5.665987014770508
    8. 'K' → logprob: -6.165987014770508
    9. '[M' → logprob: -6.290987014770508
    10. '   ' → logprob: -6.665987014770508

Token 2682: ' M' (ID: 391)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5963398218154907
    2. '0' → logprob: -1.3463398218154907
    3. '1' → logprob: -1.9713398218154907
    4. ' dp' → logprob: -3.846339702606201
    5. ' ' → logprob: -4.096339702606201
    6. '[' → logprob: -4.596339702606201
    7. 'K' → logprob: -7.471339702606201
    8. ' [' → logprob: -8.34634017944336
    9. '   ' → logprob: -8.84634017944336
    10. ' K' → logprob: -8.84634017944336

Token 2683: ' arr' (ID: 1724)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7181838750839233
    2. 'st' → logprob: -1.7181838750839233
    3. '][' → logprob: -1.9681838750839233
    4. '-' → logprob: -2.593183994293213
    5. '[' → logprob: -3.843183994293213
    6. 'sem' → logprob: -3.843183994293213
    7. '[M' → logprob: -4.718183994293213
    8. '
' → logprob: -4.843183994293213
    9. ']' → logprob: -4.843183994293213
    10. ' stops' → logprob: -4.968183994293213

Token 2684: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.003335990710183978
    2. 'êt' → logprob: -6.753335952758789
    3. ' stops' → logprob: -7.128335952758789
    4. ']' → logprob: -7.378335952758789
    5. 'ê' → logprob: -8.628335952758789
    6. 'rets' → logprob: -8.878335952758789
    7. '[' → logprob: -9.628335952758789
    8. 'ts' → logprob: -10.128335952758789
    9. '[
' → logprob: -10.503335952758789
    10. ''arrêt' → logprob: -10.503335952758789

Token 2685: ' sem' (ID: 2743)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03940562903881073
    2. '0' → logprob: -3.539405584335327
    3. '```' → logprob: -6.039405822753906
    4. '=' → logprob: -6.164405822753906
    5. ' =' → logprob: -6.664405822753906
    6. '_' → logprob: -6.664405822753906
    7. '_sem' → logprob: -7.914405822753906
    8. 'sem' → logprob: -7.914405822753906
    9. 'dp' → logprob: -8.164405822753906
    10. ' [' → logprob: -8.414405822753906

Token 2686: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.0020903039257973433
    2. 'express' → logprob: -7.3770904541015625
    3. 'i' → logprob: -8.627090454101562
    4. '(express' → logprob: -9.252090454101562
    5. '[i' → logprob: -9.564590454101562
    6. ' express' → logprob: -9.564590454101562
    7. 'idepress' → logprob: -9.752090454101562
    8. ' expresses' → logprob: -9.877090454101562
    9. '_i' → logprob: -9.939590454101562
    10. 'ip' → logprob: -10.002090454101562

Token 2687: ' fixes' (ID: 60095)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006769311730749905
    2. '```' → logprob: -8.000677108764648
    3. '0' → logprob: -9.000677108764648
    4. '][' → logprob: -10.125677108764648
    5. '_' → logprob: -10.250677108764648
    6. '   ' → logprob: -10.375677108764648
    7. '=' → logprob: -10.625677108764648
    8. '
' → logprob: -10.750677108764648
    9. '\[' → logprob: -10.750677108764648
    10. ' [' → logprob: -11.000677108764648

Token 2688: ',
' (ID: 412)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08166588097810745
    2. '[' → logprob: -2.5816659927368164
    3. '   ' → logprob: -6.081665992736816
    4. '
' → logprob: -8.581665992736816
    5. ' dp' → logprob: -8.581665992736816
    6. '(dp' → logprob: -9.581665992736816
    7. '_dp' → logprob: -10.831665992736816
    8. '	dp' → logprob: -11.456665992736816
    9. '```' → logprob: -12.956665992736816
    10. 'def' → logprob: -13.081665992736816

Token 2689: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013276464305818081
    2. '   ' → logprob: -4.38827657699585
    3. '```' → logprob: -7.88827657699585
    4. '[' → logprob: -8.263276100158691
    5. ' dp' → logprob: -10.513276100158691
    6. ' ' → logprob: -10.888276100158691
    7. '  ' → logprob: -11.263276100158691
    8. '    ' → logprob: -11.513276100158691
    9. '
' → logprob: -11.513276100158691
    10. '       ' → logprob: -11.888276100158691

Token 2690: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.48085618019104004
    2. '   ' → logprob: -1.73085618019104
    3. '[' → logprob: -2.10585618019104
    4. '1' → logprob: -2.85585618019104
    5. 'K' → logprob: -4.980855941772461
    6. '0' → logprob: -4.980855941772461
    7. '#' (adapté à ' #') → logprob: -6.480855941772461
    8. '  ' → logprob: -6.855855941772461
    9. '    ' → logprob: -6.980855941772461
    10. ' ' → logprob: -6.980855941772461

Token 2691: ' donc' (ID: 14206)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08333835005760193
    2. '0' → logprob: -3.0833382606506348
    3. 'K' → logprob: -3.8333382606506348
    4. '   ' → logprob: -5.583338260650635
    5. 'for' → logprob: -5.833338260650635
    6. '[' → logprob: -6.083338260650635
    7. 'M' → logprob: -6.583338260650635
    8. '1' → logprob: -7.333338260650635
    9. '][' → logprob: -8.708338737487793
    10. '#' → logprob: -8.833338737487793

Token 2692: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00039349604048766196
    2. 'for' → logprob: -8.250393867492676
    3. '   ' → logprob: -9.750393867492676
    4. ' dp' → logprob: -9.875393867492676
    5. 'M' → logprob: -11.875393867492676
    6. 'K' → logprob: -12.125393867492676
    7. '0' → logprob: -12.875393867492676
    8. '
' → logprob: -13.125393867492676
    9. ' for' → logprob: -13.625393867492676
    10. '#' → logprob: -14.250393867492676

Token 2693: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003396343090571463
    2. '0' → logprob: -8.00033950805664
    3. ' [' → logprob: -12.62533950805664
    4. ' ' → logprob: -14.62533950805664
    5. '   ' → logprob: -15.00033950805664
    6. '```' → logprob: -17.37533950805664
    7. '=' → logprob: -17.62533950805664
    8. '  ' → logprob: -18.50033950805664
    9. '
' → logprob: -18.62533950805664
    10. '][' → logprob: -19.00033950805664

Token 2694: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.375018119812012
    3. '][' → logprob: -12.750018119812012
    4. '   ' → logprob: -13.375018119812012
    5. '  ' → logprob: -14.500018119812012
    6. 'i' → logprob: -14.750018119812012
    7. '[' → logprob: -14.875018119812012
    8. '...' → logprob: -15.500018119812012
    9. ']' → logprob: -15.875018119812012
    10. 'idx' → logprob: -15.875018119812012

Token 2695: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.063321053981781
    2. '[' → logprob: -2.813321113586426
    3. '[M' → logprob: -7.438321113586426
    4. '   ' → logprob: -8.063321113586426
    5. ']' → logprob: -9.063321113586426
    6. ' ][' → logprob: -9.188321113586426
    7. 'M' → logprob: -9.813321113586426
    8. '0' → logprob: -10.438321113586426
    9. '[S' → logprob: -10.688321113586426
    10. '```' → logprob: -11.063321113586426

Token 2696: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.897412822581828e-05
    2. 'K' → logprob: -11.125068664550781
    3. '   ' → logprob: -11.125068664550781
    4. '0' → logprob: -11.625068664550781
    5. ' M' → logprob: -11.625068664550781
    6. ']' → logprob: -11.875068664550781
    7. ' ' → logprob: -13.125068664550781
    8. '1' → logprob: -13.500068664550781
    9. '
' → logprob: -13.625068664550781
    10. '```' → logprob: -13.750068664550781

Token 2697: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014861776726320386
    2. ']=' → logprob: -6.751486301422119
    3. ' ]' → logprob: -8.251485824584961
    4. '   ' → logprob: -10.626485824584961
    5. '][' → logprob: -11.501485824584961
    6. '-' → logprob: -12.251485824584961
    7. ' ' → logprob: -12.501485824584961
    8. ']+=' → logprob: -12.501485824584961
    9. '=' → logprob: -12.876485824584961
    10. ']
' → logprob: -13.876485824584961

Token 2698: ' =' (ID: 314)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.051784198731184006
    2. '[' → logprob: -3.5517842769622803
    3. '=' → logprob: -4.051784038543701
    4. ' =' → logprob: -6.551784038543701
    5. ']' → logprob: -7.051784038543701
    6. '=M' → logprob: -7.176784038543701
    7. '][' → logprob: -7.426784038543701
    8. '   ' → logprob: -8.05178451538086
    9. ']=' → logprob: -8.55178451538086
    10. '```' → logprob: -9.55178451538086

Token 2699: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.12507438659668
    4. '  ' → logprob: -19.50007438659668
    5. '    ' → logprob: -20.37507438659668
    6. ' ' → logprob: -20.75007438659668
    7. '=' → logprob: -21.50007438659668
    8. '     ' → logprob: -23.12507438659668
    9. '```' → logprob: -24.00007438659668
    10. '۰' → logprob: -24.12507438659668

Token 2700: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '=' → logprob: -21.5
    4. '   ' → logprob: -22.0
    5. '۰' → logprob: -23.25
    6. ' ' → logprob: -23.5
    7. '  ' → logprob: -23.625
    8. '00' → logprob: -24.125
    9. '000' → logprob: -25.0
    10. '０' → logprob: -25.125

Token 2701: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5831769704818726
    2. '[' → logprob: -1.4581769704818726
    3. '   ' → logprob: -2.583177089691162
    4. '
' → logprob: -2.708177089691162
    5. '=' → logprob: -3.208177089691162
    6. '```' → logprob: -4.708177089691162
    7. ' =' → logprob: -4.958177089691162
    8. '(dp' → logprob: -5.958177089691162
    9. ')
' → logprob: -6.333177089691162
    10. ']' → logprob: -6.458177089691162

Token 2702: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38715389370918274
    2. '   ' → logprob: -1.1371538639068604
    3. ' dp' → logprob: -8.512153625488281
    4. '
' → logprob: -10.012153625488281
    5. '	dp' → logprob: -10.512153625488281
    6. '(dp' → logprob: -12.637153625488281
    7. '```' → logprob: -13.012153625488281
    8. '    
' → logprob: -13.512153625488281
    9. '_dp' → logprob: -13.637153625488281
    10. '[' → logprob: -15.387153625488281

Token 2703: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.04104370251297951
    2. '   ' → logprob: -3.541043758392334
    3. '=' → logprob: -5.541043758392334
    4. '[' → logprob: -6.166043758392334
    5. ' =' → logprob: -6.291043758392334
    6. '
' → logprob: -6.541043758392334
    7. ' dp' → logprob: -6.791043758392334
    8. '```' → logprob: -8.291043281555176
    9. ' 
' → logprob: -9.291043281555176
    10. '=
' → logprob: -9.666043281555176

Token 2704: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.625001907348633
    4. ' [' → logprob: -15.000001907348633
    5. '0' → logprob: -15.750001907348633
    6. '][' → logprob: -16.500001907348633
    7. '[][' → logprob: -16.875001907348633
    8. '\[' → logprob: -17.000001907348633
    9. '[
' → logprob: -17.250001907348633
    10. '  ' → logprob: -17.500001907348633

Token 2705: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -13.625003814697266
    3. '][' → logprob: -13.750003814697266
    4. ' ' → logprob: -13.875003814697266
    5. '```' → logprob: -16.250003814697266
    6. '   ' → logprob: -17.250003814697266
    7. ']' → logprob: -18.875003814697266
    8. 'def' → logprob: -19.000003814697266
    9. '
' → logprob: -19.000003814697266
    10. '=' → logprob: -19.250003814697266

Token 2706: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005735740065574646
    2. '[' → logprob: -5.505735874176025
    3. '   ' → logprob: -7.130735874176025
    4. ']' → logprob: -7.255735874176025
    5. ' ][' → logprob: -9.005735397338867
    6. '```' → logprob: -12.005735397338867
    7. '  ' → logprob: -12.130735397338867
    8. '    ' → logprob: -12.630735397338867
    9. '[M' → logprob: -13.005735397338867
    10. ' ' → logprob: -13.380735397338867

Token 2707: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.958325295476243e-05
    2. '0' → logprob: -9.625079154968262
    3. ' M' → logprob: -11.500079154968262
    4. ' ' → logprob: -13.750079154968262
    5. '   ' → logprob: -14.125079154968262
    6. '=M' → logprob: -14.750079154968262
    7. '{' → logprob: -15.125079154968262
    8. '=' → logprob: -15.125079154968262
    9. 'K' → logprob: -15.500079154968262
    10. ']' → logprob: -15.875079154968262

Token 2708: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.755678961984813e-05
    2. ']=' → logprob: -9.625077247619629
    3. ' ]' → logprob: -12.125077247619629
    4. '   ' → logprob: -13.250077247619629
    5. '=' → logprob: -13.375077247619629
    6. ')' → logprob: -13.750077247619629
    7. ']+=' → logprob: -14.375077247619629
    8. '[' → logprob: -15.000077247619629
    9. ']==' → logprob: -15.125077247619629
    10. ']
' → logprob: -16.000078201293945

Token 2709: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.225939872208983e-05
    2. ' =' → logprob: -10.375032424926758
    3. ']=' → logprob: -15.375032424926758
    4. '=True' → logprob: -15.500032424926758
    5. '=
' → logprob: -15.625032424926758
    6. '[' → logprob: -16.125032424926758
    7. ')=' → logprob: -16.375032424926758
    8. '=False' → logprob: -17.000032424926758
    9. ']' → logprob: -17.000032424926758
    10. '```' → logprob: -17.000032424926758

Token 2710: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '   ' → logprob: -23.5
    4. '۰' → logprob: -24.625
    5. '=' → logprob: -25.5
    6. '00' → logprob: -25.5
    7. ' ' → logprob: -25.875
    8. '```' → logprob: -25.875
    9. '000' → logprob: -26.375
    10. '  ' → logprob: -27.0

Token 2711: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -22.0
    3. '۰' → logprob: -26.125
    4. '   ' → logprob: -26.375
    5. '```' → logprob: -28.375
    6. '000' → logprob: -28.375
    7. '00' → logprob: -28.5
    8. '０' → logprob: -28.625
    9. '=' → logprob: -28.75
    10. '  ' → logprob: -29.375

Token 2712: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4608531892299652
    2. '<|end|>' → logprob: -1.7108532190322876
    3. '```' → logprob: -2.960853099822998
    4. 'for' → logprob: -2.960853099822998
    5. '	for' → logprob: -3.710853099822998
    6. ' for' → logprob: -3.960853099822998
    7. ')' → logprob: -4.460853099822998
    8. '
' → logprob: -5.210853099822998
    9. '<|end|>' → logprob: -5.335853099822998
    10. '\t' → logprob: -6.085853099822998

Token 2713: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005012801848351955
    2. ' for' → logprob: -5.8800129890441895
    3. '   ' → logprob: -6.1300129890441895
    4. '```' → logprob: -11.130012512207031
    5. '	for' → logprob: -11.255012512207031
    6. '
' → logprob: -14.005012512207031
    7. 'i' → logprob: -16.00501251220703
    8. '    
' → logprob: -16.50501251220703
    9. 'For' → logprob: -16.50501251220703
    10. ',' → logprob: -16.88001251220703

Token 2714: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00025084958178922534
    2. ' for' → logprob: -8.625250816345215
    3. '   ' → logprob: -9.625250816345215
    4. '```' → logprob: -12.375250816345215
    5. '	for' → logprob: -14.000250816345215
    6. '
' → logprob: -16.12525177001953
    7. 'For' → logprob: -16.87525177001953
    8. 'from' → logprob: -18.37525177001953
    9. 'import' → logprob: -18.50025177001953
    10. '``' → logprob: -19.37525177001953

Token 2715: ' Fonction' (ID: 189149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014526135055348277
    2. ' for' → logprob: -6.751452445983887
    3. '   ' → logprob: -8.251452445983887
    4. '
' → logprob: -11.001452445983887
    5. '```' → logprob: -12.376452445983887
    6. '	for' → logprob: -15.501452445983887
    7. '    
' → logprob: -15.626452445983887
    8. 'range' → logprob: -15.876452445983887
    9. '1' → logprob: -17.126453399658203
    10. 'from' → logprob: -17.126453399658203

Token 2716: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028817983344197273
    2. 'cost' → logprob: -4.778818130493164
    3. '   ' → logprob: -5.528818130493164
    4. ' def' → logprob: -5.528818130493164
    5. 'calculate' → logprob: -5.903818130493164
    6. 'calc' → logprob: -5.903818130493164
    7. 'compute' → logprob: -5.903818130493164
    8. ' calc' → logprob: -7.153818130493164
    9. ' cost' → logprob: -7.403818130493164
    10. ' compute' → logprob: -7.403818130493164

Token 2717: ' calcul' (ID: 7559)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.28734222054481506
    2. 'compute' → logprob: -1.7873421907424927
    3. 'calculate' → logprob: -3.2873423099517822
    4. 'calc' → logprob: -3.2873423099517822
    5. 'def' → logprob: -6.162342071533203
    6. 'get' → logprob: -6.287342071533203
    7. 'time' → logprob: -7.162342071533203
    8. 'calcul' → logprob: -7.162342071533203
    9. 'min' → logprob: -7.662342071533203
    10. 'interval' → logprob: -7.787342071533203

Token 2718: 'er' (ID: 259)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026437079533934593
    2. 'tion' → logprob: -4.401437282562256
    3. 'ate' → logprob: -4.901437282562256
    4. 'er' → logprob: -5.276437282562256
    5. 'culate' → logprob: -8.651436805725098
    6. 'cost' → logprob: -8.901436805725098
    7. '   ' → logprob: -9.026436805725098
    8. ' def' → logprob: -9.026436805725098
    9. 'alculate' → logprob: -9.276436805725098
    10. 'ute' → logprob: -9.401436805725098

Token 2719: ' temps' (ID: 11160)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.20106767117977142
    2. 'def' → logprob: -2.7010676860809326
    3. 'interval' → logprob: -3.3260676860809326
    4. 'time' → logprob: -3.9510676860809326
    5. '_cost' → logprob: -3.9510676860809326
    6. 'segment' → logprob: -4.5760674476623535
    7. 'distance' → logprob: -5.3260674476623535
    8. '(interval' → logprob: -5.7010674476623535
    9. '_time' → logprob: -5.8260674476623535
    10. ' cost' → logprob: -5.9510674476623535

Token 2720: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17819607257843018
    2. '_for' → logprob: -2.9281959533691406
    3. '_' → logprob: -3.1781959533691406
    4. '_cost' → logprob: -4.303195953369141
    5. '_def' → logprob: -4.303195953369141
    6. '_to' → logprob: -4.928195953369141
    7. '_cal' → logprob: -5.053195953369141
    8. '_calc' → logprob: -5.303195953369141
    9. '(' → logprob: -5.928195953369141
    10. ' def' → logprob: -6.178195953369141

Token 2721: ' un' (ID: 537)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.16810773313045502
    2. 'i' → logprob: -2.543107748031616
    3. 'l' → logprob: -2.793107748031616
    4. '_interval' → logprob: -5.168107509613037
    5. ' interval' → logprob: -5.543107509613037
    6. 'segment' → logprob: -5.793107509613037
    7. ' i' → logprob: -7.793107509613037
    8. 'une' → logprob: -8.168107986450195
    9. 'le' → logprob: -8.668107986450195
    10. 'un' → logprob: -8.793107986450195

Token 2722: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.048980988562107086
    2. 'segment' → logprob: -3.048980951309204
    3. '```' → logprob: -8.548980712890625
    4. '
' → logprob: -9.548980712890625
    5. 'inter' → logprob: -10.173980712890625
    6. 'int' → logprob: -10.798980712890625
    7. ' interval' → logprob: -11.048980712890625
    8. '_interval' → logprob: -11.548980712890625
    9. 'l' → logprob: -11.673980712890625
    10. 'i' → logprob: -11.673980712890625

Token 2723: 'le' (ID: 282)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1222097873687744
    2. 'val' → logprob: -1.3722097873687744
    3. 'le' → logprob: -1.6222097873687744
    4. 'al' → logprob: -1.9972097873687744
    5. '   ' → logprob: -3.2472097873687744
    6. 'ale' → logprob: -3.9972097873687744
    7. 'n' → logprob: -4.872209548950195
    8. 'nale' → logprob: -5.122209548950195
    9. '       ' → logprob: -5.247209548950195
    10. 'aire' → logprob: -6.122209548950195

Token 2724: ' i' (ID: 575)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0443151593208313
    2. '(' → logprob: -3.9193150997161865
    3. '(i' → logprob: -4.294315338134766
    4. ':' → logprob: -5.669315338134766
    5. '   ' → logprob: -5.794315338134766
    6. ' def' → logprob: -6.419315338134766
    7. '(
' → logprob: -6.919315338134766
    8. '```' → logprob: -8.669315338134766
    9. '_def' → logprob: -9.669315338134766
    10. '
' → logprob: -9.919315338134766

Token 2725: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24812322854995728
    2. '(i' → logprob: -1.6231231689453125
    3. '   ' → logprob: -4.3731231689453125
    4. '(' → logprob: -5.2481231689453125
    5. ' def' → logprob: -6.1231231689453125
    6. ':' → logprob: -6.8731231689453125
    7. '```' → logprob: -7.4981231689453125
    8. '[i' → logprob: -8.623123168945312
    9. 'i' → logprob: -9.123123168945312
    10. '_i' → logprob: -9.373123168945312

Token 2726: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3077124357223511
    2. 'fonction' → logprob: -1.432712435722351
    3. 'x' → logprob: -5.057712554931641
    4. '```' → logprob: -5.182712554931641
    5. 'func' → logprob: -6.557712554931641
    6. '(x' → logprob: -6.682712554931641
    7. ' fonction' → logprob: -6.682712554931641
    8. 'param' → logprob: -6.682712554931641
    9. 'python' → logprob: -6.682712554931641
    10. 'return' → logprob: -6.682712554931641

Token 2727: ' du' (ID: 1462)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.9059628844261169
    2. 'de' → logprob: -1.5309629440307617
    3. 'def' → logprob: -2.2809629440307617
    4. ' du' → logprob: -2.5309629440307617
    5. '   ' → logprob: -2.7809629440307617
    6. '(x' → logprob: -3.4059629440307617
    7. '#' → logprob: -3.5309629440307617
    8. '(i' → logprob: -3.9059629440307617
    9. 'x' → logprob: -4.155962944030762
    10. ' de' → logprob: -4.530962944030762

Token 2728: ' nombre' (ID: 9733)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.019788922742009163
    2. 'nombre' → logprob: -4.39478874206543
    3. 'nb' → logprob: -5.76978874206543
    4. 'arr' → logprob: -6.01978874206543
    5. 'num' → logprob: -7.76978874206543
    6. 'number' → logprob: -8.01978874206543
    7. 'segments' → logprob: -8.14478874206543
    8. 'st' → logprob: -8.39478874206543
    9. 'stop' → logprob: -8.39478874206543
    10. 'n' → logprob: -9.76978874206543

Token 2729: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0823066234588623
    2. 'de' → logprob: -3.4573066234588623
    3. ' d' → logprob: -4.582306861877441
    4. '_of' → logprob: -4.582306861877441
    5. '_de' → logprob: -4.707306861877441
    6. '_d' → logprob: -5.582306861877441
    7. 'of' → logprob: -5.582306861877441
    8. '_' → logprob: -6.207306861877441
    9. 'def' → logprob: -6.332306861877441
    10. '_x' → logprob: -6.457306861877441

Token 2730: ''arr' (ID: 49695)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.2400257587432861
    2. '_st' → logprob: -1.7400257587432861
    3. '_' → logprob: -2.115025758743286
    4. 'st' → logprob: -2.115025758743286
    5. '_arr' → logprob: -2.365025758743286
    6. '_segments' → logprob: -2.865025758743286
    7. '_s' → logprob: -3.115025758743286
    8. '_ar' → logprob: -3.865025758743286
    9. 'ar' → logprob: -4.240025520324707
    10. 's' → logprob: -4.490025520324707

Token 2731: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.00015717383939772844
    2. 'ê' → logprob: -8.875157356262207
    3. '^' → logprob: -12.125157356262207
    4. 'êtes' → logprob: -12.500157356262207
    5. 'ôts' → logprob: -13.125157356262207
    6. 'êt' → logprob: -13.250157356262207
    7. 'âts' → logprob: -13.500157356262207
    8. 'ês' → logprob: -14.750157356262207
    9. ' stops' → logprob: -14.875157356262207
    10. 'Ê' → logprob: -15.000157356262207

Token 2732: ' sem' (ID: 2743)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9229048490524292
    2. '_i' → logprob: -1.9229048490524292
    3. '```' → logprob: -2.1729049682617188
    4. '(i' → logprob: -2.6729049682617188
    5. 'i' → logprob: -2.7979049682617188
    6. '_sem' → logprob: -3.2979049682617188
    7. 'def' → logprob: -3.4229049682617188
    8. 'sem' → logprob: -3.4229049682617188
    9. '(' → logprob: -3.5479049682617188
    10. ' (' → logprob: -3.7979049682617188

Token 2733: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.07123279571533203
    2. 'i' → logprob: -3.571232795715332
    3. '_i' → logprob: -4.696232795715332
    4. '[i' → logprob: -5.196232795715332
    5. 'î' → logprob: -6.446232795715332
    6. 'import' → logprob: -6.446232795715332
    7. '[' → logprob: -6.571232795715332
    8. 'ip' → logprob: -6.821232795715332
    9. 'express' → logprob: -6.821232795715332
    10. 'iem' → logprob: -6.946232795715332

Token 2734: ' x' (ID: 1215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27092745900154114
    2. '(i' → logprob: -1.6459274291992188
    3. '```' → logprob: -4.270927429199219
    4. '(' → logprob: -4.770927429199219
    5. '   ' → logprob: -4.770927429199219
    6. '_' → logprob: -5.395927429199219
    7. '[i' → logprob: -6.145927429199219
    8. '_i' → logprob: -6.145927429199219
    9. '`' → logprob: -6.770927429199219
    10. ')' → logprob: -7.770927429199219

Token 2735: '
' (ID: 198)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.18568992614746094
    2. 'def' → logprob: -2.060689926147461
    3. '(' → logprob: -3.935689926147461
    4. '[i' → logprob: -4.935689926147461
    5. '   ' → logprob: -5.060689926147461
    6. ':' → logprob: -6.185689926147461
    7. '```' → logprob: -6.310689926147461
    8. '(
' → logprob: -6.435689926147461
    9. ' def' → logprob: -6.685689926147461
    10. ',' → logprob: -7.435689926147461

Token 2736: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7280248999595642
    2. '(i' → logprob: -0.9780248999595642
    3. '   ' → logprob: -2.103024959564209
    4. '(' → logprob: -4.978024959564209
    5. '```' → logprob: -5.478024959564209
    6. ':' → logprob: -5.603024959564209
    7. ' def' → logprob: -6.603024959564209
    8. '(
' → logprob: -6.853024959564209
    9. ',' → logprob: -7.478024959564209
    10. '[i' → logprob: -8.35302448272705

Token 2737: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05144556984305382
    2. '   ' → logprob: -3.051445484161377
    3. ' def' → logprob: -6.551445484161377
    4. ':' → logprob: -7.301445484161377
    5. '```' → logprob: -8.301445960998535
    6. ':
' → logprob: -8.426445960998535
    7. '
' → logprob: -9.301445960998535
    8. '(' → logprob: -9.801445960998535
    9. '=' → logprob: -10.176445960998535
    10. '(
' → logprob: -10.551445960998535

Token 2738: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018331261351704597
    2. '   ' → logprob: -4.018331050872803
    3. ' def' → logprob: -9.393331527709961
    4. '```' → logprob: -9.643331527709961
    5. '
' → logprob: -10.518331527709961
    6. ':' → logprob: -13.768331527709961
    7. '(' → logprob: -13.893331527709961
    8. ')' → logprob: -14.143331527709961
    9. '	def' → logprob: -14.143331527709961
    10. '       ' → logprob: -14.518331527709961

Token 2739: ' la' (ID: 557)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.10176697373390198
    2. 'la' → logprob: -2.476767063140869
    3. ' station' → logprob: -5.476767063140869
    4. 'position' → logprob: -5.976767063140869
    5. 'def' → logprob: -6.601767063140869
    6. ' la' → logprob: -6.726767063140869
    7. '   ' → logprob: -6.976767063140869
    8. 'le' → logprob: -7.351767063140869
    9. '#' → logprob: -7.976767063140869
    10. 'pos' → logprob: -8.351766586303711

Token 2740: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.48770928382873535
    2. 'def' → logprob: -0.9877092838287354
    3. '#' → logprob: -5.612709045410156
    4. 'limit' → logprob: -6.237709045410156
    5. '```' → logprob: -6.612709045410156
    6. 'position' → logprob: -6.862709045410156
    7. 'local' → logprob: -6.862709045410156
    8. 'last' → logprob: -6.987709045410156
    9. 'distance' → logprob: -6.987709045410156
    10. ' station' → logprob: -8.362709045410156

Token 2741: ' limite' (ID: 48939)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.012725655920803547
    2. '_lim' → logprob: -5.387725830078125
    3. 'limit' → logprob: -6.137725830078125
    4. '_in' → logprob: -6.387725830078125
    5. '_index' → logprob: -7.137725830078125
    6. '_i' → logprob: -7.262725830078125
    7. 'i' → logprob: -7.512725830078125
    8. '_idx' → logprob: -7.762725830078125
    9. '_' → logprob: -8.012725830078125
    10. ')' → logprob: -8.637725830078125

Token 2742: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03609968349337578
    2. ' def' → logprob: -4.536099910736084
    3. '   ' → logprob: -4.536099910736084
    4. '(i' → logprob: -4.661099910736084
    5. '(' → logprob: -6.161099910736084
    6. '(
' → logprob: -7.161099910736084
    7. ')' → logprob: -7.661099910736084
    8. '```' → logprob: -8.036099433898926
    9. ':' → logprob: -8.536099433898926
    10. ',' → logprob: -9.161099433898926

Token 2743: ' cet' (ID: 19505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06267063319683075
    2. 'interval' → logprob: -3.6876707077026367
    3. 'cet' → logprob: -4.062670707702637
    4. '_interval' → logprob: -5.062670707702637
    5. '```' → logprob: -5.312670707702637
    6. 'i' → logprob: -5.437670707702637
    7. 'c' → logprob: -7.562670707702637
    8. ' cet' → logprob: -8.437670707702637
    9. ' l' → logprob: -8.437670707702637
    10. 'def' → logprob: -8.687670707702637

Token 2744: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.007064862176775932
    2. 'i' → logprob: -5.2570648193359375
    3. '_interval' → logprob: -6.7570648193359375
    4. ' interval' → logprob: -8.507064819335938
    5. '_' → logprob: -8.632064819335938
    6. 'inter' → logprob: -9.507064819335938
    7. '```' → logprob: -10.132064819335938
    8. '#' → logprob: -10.257064819335938
    9. ']' → logprob: -10.632064819335938
    10. '_inter' → logprob: -10.757064819335938

Token 2745: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.5988905429840088
    2. 'aire' → logprob: -1.7238905429840088
    3. 'le' → logprob: -1.8488905429840088
    4. 'ale' → logprob: -1.8488905429840088
    5. 'val' → logprob: -1.9738905429840088
    6. 'def' → logprob: -2.848890542984009
    7. 've' → logprob: -3.848890542984009
    8. 'v' → logprob: -4.09889030456543
    9. 'ère' → logprob: -4.22389030456543
    10. 'è' → logprob: -4.72389030456543

Token 2746: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43918392062187195
    2. '(i' → logprob: -1.0641839504241943
    3. '   ' → logprob: -5.564183712005615
    4. ' def' → logprob: -5.814183712005615
    5. '(' → logprob: -6.314183712005615
    6. '```' → logprob: -7.189183712005615
    7. 'i' → logprob: -8.564184188842773
    8. '(
' → logprob: -8.564184188842773
    9. '
' → logprob: -8.814184188842773
    10. '[i' → logprob: -9.189184188842773

Token 2747: 'si' (ID: 4778)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6382626891136169
    2. 'station' → logprob: -1.8882627487182617
    3. ')' → logprob: -2.3882627487182617
    4. '):' → logprob: -3.3882627487182617
    5. ' station' → logprob: -3.3882627487182617
    6. '):
' → logprob: -3.5132627487182617
    7. 'j' → logprob: -3.7632627487182617
    8. 'None' → logprob: -4.263262748718262
    9. ' i' → logprob: -4.513262748718262
    10. 'def' → logprob: -4.888262748718262

Token 2748: ' dans' (ID: 2671)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.5083649754524231
    2. 'idx' → logprob: -1.0083649158477783
    3. ' station' → logprob: -4.383365154266357
    4. ' idx' → logprob: -5.258365154266357
    5. 'x' → logprob: -5.383365154266357
    6. '```' → logprob: -5.758365154266357
    7. 'not' → logprob: -6.258365154266357
    8. '   ' → logprob: -6.883365154266357
    9. ')' → logprob: -7.133365154266357
    10. 'i' → logprob: -7.133365154266357

Token 2749: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.35549482703208923
    2. 'i' → logprob: -1.9804948568344116
    3. 'l' → logprob: -2.105494737625122
    4. ' i' → logprob: -4.605494976043701
    5. ' interval' → logprob: -5.105494976043701
    6. '#' → logprob: -5.355494976043701
    7. '   ' → logprob: -5.605494976043701
    8. 'x' → logprob: -5.855494976043701
    9. '[i' → logprob: -6.230494976043701
    10. ')' → logprob: -6.605494976043701

Token 2750: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.04332594946026802
    2. 'e' → logprob: -3.168325901031494
    3. ']' → logprob: -8.293326377868652
    4. ')' → logprob: -10.918326377868652
    5. '[i' → logprob: -11.918326377868652
    6. '_le' → logprob: -12.043326377868652
    7. ',' → logprob: -12.293326377868652
    8. 'ale' → logprob: -12.418326377868652
    9. 'val' → logprob: -12.418326377868652
    10. '   ' → logprob: -12.668326377868652

Token 2751: ')

' (ID: 1029)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12872228026390076
    2. '[i' → logprob: -3.1287221908569336
    3. '):' → logprob: -3.8787221908569336
    4. ')' → logprob: -4.128722190856934
    5. ',' → logprob: -4.253722190856934
    6. ' i' → logprob: -4.253722190856934
    7. '):
' → logprob: -4.878722190856934
    8. '_i' → logprob: -6.378722190856934
    9. ',i' → logprob: -7.128722190856934
    10. '),' → logprob: -7.503722190856934

Token 2752: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02471730299293995
    2. '   ' → logprob: -4.024717330932617
    3. ' def' → logprob: -5.649717330932617
    4. ':' → logprob: -6.024717330932617
    5. '```' → logprob: -7.899717330932617
    6. ':
' → logprob: -9.774717330932617
    7. ':def' → logprob: -10.024717330932617
    8. '):' → logprob: -10.149717330932617
    9. '(' → logprob: -10.524717330932617
    10. '):
' → logprob: -10.774717330932617

Token 2753: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04368934407830238
    2. '   ' → logprob: -3.168689250946045
    3. '
' → logprob: -7.793689250946045
    4. '```' → logprob: -9.043689727783203
    5. ' def' → logprob: -9.293689727783203
    6. ':' → logprob: -10.418689727783203
    7. '    
' → logprob: -11.168689727783203
    8. ':def' → logprob: -12.043689727783203
    9. ':
' → logprob: -12.668689727783203
    10. '\' → logprob: -13.043689727783203

Token 2754: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.08562688529491425
    2. 'calc' → logprob: -2.8356268405914307
    3. 'time' → logprob: -4.08562707901001
    4. 'interval' → logprob: -5.83562707901001
    5. 'compute' → logprob: -6.08562707901001
    6. 'segment' → logprob: -7.33562707901001
    7. 'get' → logprob: -7.58562707901001
    8. 'calculate' → logprob: -8.835626602172852
    9. '_cost' → logprob: -10.335626602172852
    10. ' cost' → logprob: -11.085626602172852

Token 2755: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13850146532058716
    2. '(i' → logprob: -2.1385014057159424
    3. '[' → logprob: -5.8885016441345215
    4. ':' → logprob: -5.8885016441345215
    5. '(x' → logprob: -7.0135016441345215
    6. '[i' → logprob: -7.0135016441345215
    7. '_' → logprob: -7.1385016441345215
    8. '(
' → logprob: -7.3885016441345215
    9. '():' → logprob: -7.6385016441345215
    10. '```' → logprob: -7.7635016441345215

Token 2756: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005943018011748791
    2. '[i' → logprob: -5.6309428215026855
    3. '(i' → logprob: -6.7559428215026855
    4. ',i' → logprob: -7.8809428215026855
    5. '):' → logprob: -8.380943298339844
    6. '[' → logprob: -8.380943298339844
    7. ' ,' → logprob: -9.005943298339844
    8. '   ' → logprob: -9.130943298339844
    9. '_,' → logprob: -10.380943298339844
    10. ',x' → logprob: -11.630943298339844

Token 2757: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02982177585363388
    2. ' x' → logprob: -3.5298218727111816
    3. 'num' → logprob: -10.779821395874023
    4. ' stops' → logprob: -10.904821395874023
    5. '   ' → logprob: -11.279821395874023
    6. 'segments' → logprob: -12.279821395874023
    7. '    ' → logprob: -13.029821395874023
    8. ' ' → logprob: -13.154821395874023
    9. ')' → logprob: -13.279821395874023
    10. '  ' → logprob: -13.654821395874023

Token 2758: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017414400354027748
    2. '):' → logprob: -4.142414569854736
    3. ',i' → logprob: -7.767414569854736
    4. '[i' → logprob: -7.892414569854736
    5. '   ' → logprob: -8.517414093017578
    6. ' ,' → logprob: -8.892414093017578
    7. ',
' → logprob: -9.517414093017578
    8. '):
' → logprob: -9.642414093017578
    9. '[' → logprob: -10.517414093017578
    10. ',x' → logprob: -10.642414093017578

Token 2759: ' endpoint' (ID: 29703)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.5648998022079468
    2. 'limit' → logprob: -0.9398998022079468
    3. 'pos' → logprob: -3.5648999214172363
    4. 'last' → logprob: -5.689899921417236
    5. 'partial' → logprob: -5.689899921417236
    6. ' station' → logprob: -6.439899921417236
    7. 'lim' → logprob: -6.439899921417236
    8. 'st' → logprob: -6.689899921417236
    9. 'position' → logprob: -7.814899921417236
    10. ' limit' → logprob: -8.439899444580078

Token 2760: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10151509940624237
    2. '):
' → logprob: -3.476515054702759
    3. ',' → logprob: -3.851515054702759
    4. '_' → logprob: -4.726515293121338
    5. '_pos' → logprob: -4.726515293121338
    6. '=None' → logprob: -4.851515293121338
    7. '=' → logprob: -5.101515293121338
    8. ')' → logprob: -5.476515293121338
    9. '_station' → logprob: -5.726515293121338
    10. '_limit' → logprob: -6.601515293121338

Token 2761: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0437188148498535
    2. ':' → logprob: -1.2937188148498535
    3. '):' → logprob: -1.7937188148498535
    4. '       ' → logprob: -1.9187188148498535
    5. '   ' → logprob: -3.5437188148498535
    6. '```' → logprob: -4.4187188148498535
    7. '(
' → logprob: -5.5437188148498535
    8. '():' → logprob: -5.9187188148498535
    9. ')' → logprob: -6.0437188148498535
    10. '    ' → logprob: -6.2937188148498535

Token 2762: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.013901948928833
    2. ':' → logprob: -1.763901948928833
    3. '   ' → logprob: -1.888901948928833
    4. '\t' → logprob: -2.138901948928833
    5. '(' → logprob: -3.263901948928833
    6. '\n' → logprob: -3.513901948928833
    7. ':return' → logprob: -4.013901710510254
    8. '(
' → logprob: -4.138901710510254
    9. ':
' → logprob: -4.263901710510254
    10. '```' → logprob: -4.388901710510254

Token 2763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4513438940048218
    2. '```' → logprob: -1.2013438940048218
    3. '\n' → logprob: -4.326344013214111
    4. '           ' → logprob: -4.701344013214111
    5. '        ' → logprob: -4.951344013214111
    6. '``' → logprob: -5.076344013214111
    7. '(' → logprob: -5.451344013214111
    8. '   ' → logprob: -5.701344013214111
    9. '        
' → logprob: -5.826344013214111
    10. '\' → logprob: -6.326344013214111

Token 2764: ' Calculate' (ID: 38942)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.047415852546692
    2. '       ' → logprob: -1.297415852546692
    3. '(' → logprob: -2.4224157333374023
    4. ':' → logprob: -2.9224157333374023
    5. '#' → logprob: -3.2974157333374023
    6. ' (' → logprob: -3.2974157333374023
    7. '```' → logprob: -3.6724157333374023
    8. ' if' → logprob: -4.047415733337402
    9. 'return' → logprob: -4.422415733337402
    10. 'if' → logprob: -4.547415733337402

Token 2765: ' the' (ID: 290)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3289148807525635
    2. ' (' → logprob: -1.7039148807525635
    3. ' i' → logprob: -3.2039148807525635
    4. '(' → logprob: -3.5789148807525635
    5. ')' → logprob: -4.703914642333984
    6. '(
' → logprob: -5.328914642333984
    7. ' (
' → logprob: -5.578914642333984
    8. '   ' → logprob: -6.203914642333984
    9. ' ' → logprob: -6.453914642333984
    10. 'i' → logprob: -6.953914642333984

Token 2766: ' minimal' (ID: 19957)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.11512051522731781
    2. 'time' → logprob: -2.8651204109191895
    3. ' cost' → logprob: -3.2401204109191895
    4. 'cost' → logprob: -4.9901204109191895
    5. ' i' → logprob: -6.6151204109191895
    6. ' interval' → logprob: -7.4901204109191895
    7. ' next' → logprob: -7.4901204109191895
    8. 'i' → logprob: -7.6151204109191895
    9. ' segment' → logprob: -7.8651204109191895
    10. 'interval' → logprob: -7.9901204109191895

Token 2767: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.03714916482567787
    2. '_time' → logprob: -3.41214919090271
    3. 'time' → logprob: -6.037148952484131
    4. '_' → logprob: -7.412148952484131
    5. ' _' → logprob: -8.662149429321289
    6. ' temps' → logprob: -9.287149429321289
    7. ' segment' → logprob: -9.662149429321289
    8. ' cost' → logprob: -10.037149429321289
    9. '_t' → logprob: -10.912149429321289
    10. ' travel' → logprob: -11.037149429321289

Token 2768: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6211756467819214
    2. ')' → logprob: -1.8711756467819214
    3. '   ' → logprob: -2.871175765991211
    4. ' (' → logprob: -2.996175765991211
    5. '(
' → logprob: -3.371175765991211
    6. '=' → logprob: -3.746175765991211
    7. 'for' → logprob: -3.871175765991211
    8. '+' → logprob: -4.121175765991211
    9. ' for' → logprob: -4.246175765991211
    10. ' to' → logprob: -4.621175765991211

Token 2769: ' reach' (ID: 7627)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.45377588272094727
    2. ' parcour' → logprob: -2.0787758827209473
    3. ' traverse' → logprob: -2.3287758827209473
    4. 'reach' → logprob: -2.8287758827209473
    5. 'cut' → logprob: -4.078775882720947
    6. ' reach' → logprob: -4.328775882720947
    7. 'par' → logprob: -4.328775882720947
    8. ' travers' → logprob: -4.578775882720947
    9. '   ' → logprob: -4.703775882720947
    10. 'travel' → logprob: -5.203775882720947

Token 2770: ' station' (ID: 11538)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.36733976006507874
    2. 'i' → logprob: -2.117339849472046
    3. ' (' → logprob: -2.492339849472046
    4. ' i' → logprob: -2.742339849472046
    5. '(' → logprob: -3.992339849472046
    6. 'the' → logprob: -5.242339611053467
    7. ' the' → logprob: -5.242339611053467
    8. ')' → logprob: -5.742339611053467
    9. 'interval' → logprob: -6.117339611053467
    10. 'l' → logprob: -6.617339611053467

Token 2771: ' endpoint' (ID: 29703)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.17725364863872528
    2. '_limit' → logprob: -3.1772537231445312
    3. 'i' → logprob: -3.3022537231445312
    4. '(' → logprob: -3.8022537231445312
    5. ' (' → logprob: -4.052253723144531
    6. ' i' → logprob: -4.302253723144531
    7. '_' → logprob: -4.927253723144531
    8. '_in' → logprob: -5.302253723144531
    9. ')' → logprob: -5.552253723144531
    10. '```' → logprob: -6.052253723144531

Token 2772: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5652716159820557
    2. '[i' → logprob: -2.6902716159820557
    3. '       ' → logprob: -2.8152716159820557
    4. '(i' → logprob: -2.9402716159820557
    5. '):' → logprob: -3.0652716159820557
    6. ',' → logprob: -3.0652716159820557
    7. '   ' → logprob: -3.3152716159820557
    8. 'from' → logprob: -3.6902716159820557
    9. ':' → logprob: -4.190271377563477
    10. '):
' → logprob: -4.315271377563477

Token 2773: ' the' (ID: 290)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.30605649948120117
    2. 'i' → logprob: -1.9310564994812012
    3. ' i' → logprob: -2.681056499481201
    4. ' interval' → logprob: -3.056056499481201
    5. 'l' → logprob: -6.806056499481201
    6. 'the' → logprob: -7.181056499481201
    7. ')' → logprob: -8.30605697631836
    8. ' l' → logprob: -8.80605697631836
    9. '```' → logprob: -8.80605697631836
    10. ' the' → logprob: -9.18105697631836

Token 2774: ' i' (ID: 575)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2799316644668579
    2. ' interval' → logprob: -1.904931664466858
    3. 'i' → logprob: -3.0299315452575684
    4. ' i' → logprob: -4.654931545257568
    5. 'segment' → logprob: -4.904931545257568
    6. '`' → logprob: -5.279931545257568
    7. '[i' → logprob: -5.279931545257568
    8. '(i' → logprob: -5.529931545257568
    9. ' segment' → logprob: -6.154931545257568
    10. '(interval' → logprob: -6.154931545257568

Token 2775: '-th' (ID: 14928)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9464923739433289
    2. '+' → logprob: -1.8214924335479736
    3. ',' → logprob: -1.8214924335479736
    4. ']' → logprob: -2.1964924335479736
    5. '_interval' → logprob: -2.9464924335479736
    6. 'interval' → logprob: -3.1964924335479736
    7. '[' → logprob: -4.0714921951293945
    8. '][' → logprob: -4.6964921951293945
    9. ' _' → logprob: -4.9464921951293945
    10. '_' → logprob: -5.3214921951293945

Token 2776: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.08139701932668686
    2. '_interval' → logprob: -3.20639705657959
    3. ' interval' → logprob: -3.33139705657959
    4. 'segment' → logprob: -6.58139705657959
    5. ' segment' → logprob: -8.70639705657959
    6. '`' → logprob: -9.58139705657959
    7. '_segment' → logprob: -9.70639705657959
    8. '_inter' → logprob: -9.83139705657959
    9. '(interval' → logprob: -9.83139705657959
    10. ' _' → logprob: -10.58139705657959

Token 2777: ' [' (ID: 723)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5600125789642334
    2. '):' → logprob: -1.5600125789642334
    3. '   ' → logprob: -2.0600125789642334
    4. '       ' → logprob: -3.3100125789642334
    5. ')' → logprob: -4.9350128173828125
    6. '(' → logprob: -4.9350128173828125
    7. ' (' → logprob: -5.1850128173828125
    8. ',' → logprob: -5.4350128173828125
    9. '(i' → logprob: -5.5600128173828125
    10. '):
' → logprob: -5.6850128173828125

Token 2778: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.56364209135063e-05
    2. ' S' → logprob: -10.375065803527832
    3. ',' → logprob: -11.375065803527832
    4. ',S' → logprob: -12.125065803527832
    5. 'i' → logprob: -12.250065803527832
    6. ')' → logprob: -12.375065803527832
    7. ']' → logprob: -13.000065803527832
    8. '   ' → logprob: -13.125065803527832
    9. '):
' → logprob: -14.125065803527832
    10. '```' → logprob: -14.500065803527832

Token 2779: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.157039049663581e-05
    2. 'i' → logprob: -10.750051498413086
    3. '[' → logprob: -11.000051498413086
    4. '```' → logprob: -12.500051498413086
    5. '   ' → logprob: -12.875051498413086
    6. ' [' → logprob: -13.000051498413086
    7. '][' → logprob: -13.500051498413086
    8. '(i' → logprob: -14.000051498413086
    9. ',i' → logprob: -14.250051498413086
    10. '[I' → logprob: -14.500051498413086

Token 2780: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.059676267206668854
    2. '[i' → logprob: -3.059676170349121
    3. ']' → logprob: -4.684676170349121
    4. ']+' → logprob: -7.434676170349121
    5. '   ' → logprob: -7.684676170349121
    6. '][' → logprob: -8.184676170349121
    7. '+' → logprob: -8.184676170349121
    8. '],[' → logprob: -9.934676170349121
    9. ' ],' → logprob: -10.684676170349121
    10. '+i' → logprob: -10.809676170349121

Token 2781: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0003147280658595264
    2. ' S' → logprob: -8.500314712524414
    3. 'i' → logprob: -9.375314712524414
    4. '   ' → logprob: -11.125314712524414
    5. '       ' → logprob: -12.750314712524414
    6. '
' → logprob: -12.875314712524414
    7. ',' → logprob: -13.625314712524414
    8. '     ' → logprob: -14.250314712524414
    9. '[i' → logprob: -14.375314712524414
    10. ' i' → logprob: -14.875314712524414

Token 2782: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0029034202452749014
    2. 'i' → logprob: -6.002903461456299
    3. '+' → logprob: -8.25290298461914
    4. ']' → logprob: -9.75290298461914
    5. '(i' → logprob: -10.00290298461914
    6. '   ' → logprob: -11.12790298461914
    7. '[' → logprob: -11.50290298461914
    8. '],' → logprob: -11.75290298461914
    9. '_i' → logprob: -11.87790298461914
    10. '][' → logprob: -12.37790298461914

Token 2783: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01584349200129509
    2. '[i' → logprob: -4.390843391418457
    3. '],' → logprob: -6.390843391418457
    4. ']' → logprob: -7.390843391418457
    5. ']+' → logprob: -7.390843391418457
    6. ' +' → logprob: -8.765843391418457
    7. '   ' → logprob: -9.390843391418457
    8. '+i' → logprob: -9.515843391418457
    9. ']]' → logprob: -10.765843391418457
    10. '])' → logprob: -10.890843391418457

Token 2784: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. 'i' → logprob: -11.25001335144043
    3. ' ' → logprob: -15.50001335144043
    4. '2' → logprob: -16.12501335144043
    5. '
' → logprob: -16.50001335144043
    6. '   ' → logprob: -16.75001335144043
    7. '[i' → logprob: -16.87501335144043
    8. '(i' → logprob: -17.25001335144043
    9. '{i' → logprob: -17.25001335144043
    10. '+' → logprob: -17.50001335144043

Token 2785: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30250969529151917
    2. ']:
' → logprob: -1.6775096654891968
    3. ']:' → logprob: -3.1775097846984863
    4. '],' → logprob: -4.177509784698486
    5. '[i' → logprob: -4.802509784698486
    6. '   ' → logprob: -5.677509784698486
    7. ']
' → logprob: -6.552509784698486
    8. ']+' → logprob: -6.677509784698486
    9. '][' → logprob: -7.552509784698486
    10. '])' → logprob: -8.177509307861328

Token 2786: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42972275614738464
    2. '):' → logprob: -1.929722785949707
    3. ':' → logprob: -2.679722785949707
    4. ')' → logprob: -3.179722785949707
    5. '):
' → logprob: -3.679722785949707
    6. ',' → logprob: -3.679722785949707
    7. '       ' → logprob: -4.679722785949707
    8. ':
' → logprob: -4.929722785949707
    9. '```' → logprob: -4.929722785949707
    10. ' (' → logprob: -5.554722785949707

Token 2787: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4042559266090393
    2. ':' → logprob: -2.4042558670043945
    3. '(i' → logprob: -2.6542558670043945
    4. '   ' → logprob: -2.9042558670043945
    5. ',' → logprob: -3.4042558670043945
    6. '(' → logprob: -3.6542558670043945
    7. '       ' → logprob: -3.7792558670043945
    8. ':
' → logprob: -5.0292558670043945
    9. '):' → logprob: -5.1542558670043945
    10. '[i' → logprob: -5.5292558670043945

Token 2788: ' given' (ID: 4335)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1711541414260864
    2. '   ' → logprob: -1.4211541414260864
    3. ',' → logprob: -1.6711541414260864
    4. '):' → logprob: -1.6711541414260864
    5. ')' → logprob: -3.796154022216797
    6. '```' → logprob: -3.921154022216797
    7. '       ' → logprob: -4.546154022216797
    8. '):
' → logprob: -5.421154022216797
    9. '+' → logprob: -6.171154022216797
    10. ']:' → logprob: -6.421154022216797

Token 2789: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15799617767333984
    2. 'le' → logprob: -2.78299617767334
    3. ' le' → logprob: -3.53299617767334
    4. ' x' → logprob: -3.90799617767334
    5. 'la' → logprob: -4.40799617767334
    6. '   ' → logprob: -4.65799617767334
    7. 'the' → logprob: -5.53299617767334
    8. ' la' → logprob: -5.90799617767334
    9. 'l' → logprob: -6.28299617767334
    10. 'les' → logprob: -6.40799617767334

Token 2790: ' sem' (ID: 2743)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.6540768146514893
    2. ')' → logprob: -1.9040768146514893
    3. '_sem' → logprob: -2.0290768146514893
    4. '_' → logprob: -2.2790768146514893
    5. '_st' → logprob: -2.5290768146514893
    6. ',' → logprob: -2.7790768146514893
    7. ')_' → logprob: -2.9040768146514893
    8. ' _' → logprob: -3.1540768146514893
    9. '_stop' → logprob: -3.1540768146514893
    10. 'arr' → logprob: -3.1540768146514893

Token 2791: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.10819785296916962
    2. 'i' → logprob: -3.1081979274749756
    3. 'iex' → logprob: -3.1081979274749756
    4. 'ip' → logprob: -6.2331976890563965
    5. '_i' → logprob: -6.2331976890563965
    6. 'I' → logprob: -6.2331976890563965
    7. 'pexpr' → logprob: -6.4831976890563965
    8. 'ie' → logprob: -7.1081976890563965
    9. 'is' → logprob: -7.2331976890563965
    10. '   ' → logprob: -7.7331976890563965

Token 2792: ' stops' (ID: 29924)
  Prédit: ' stops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.7115055918693542
    2. '_st' → logprob: -0.9615055918693542
    3. '_stop' → logprob: -2.711505651473999
    4. 'st' → logprob: -3.461505651473999
    5. ' _' → logprob: -4.08650541305542
    6. '_' → logprob: -4.71150541305542
    7. '_arr' → logprob: -6.58650541305542
    8. '```' → logprob: -8.711505889892578
    9. 'Stops' → logprob: -8.836505889892578
    10. '   ' → logprob: -8.961505889892578

Token 2793: ' in' (ID: 306)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1143946647644043
    2. ',' → logprob: -1.4893946647644043
    3. ' =' → logprob: -2.4893946647644043
    4. ' (' → logprob: -2.6143946647644043
    5. '):
' → logprob: -2.6143946647644043
    6. '   ' → logprob: -3.2393946647644043
    7. ':' → logprob: -3.3643946647644043
    8. ')' → logprob: -3.6143946647644043
    9. '=' → logprob: -3.7393946647644043
    10. ' dans' → logprob: -4.739394664764404

Token 2794: ' this' (ID: 495)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7545914649963379
    2. 'l' → logprob: -1.004591464996338
    3. 'i' → logprob: -2.879591464996338
    4. 'cet' → logprob: -3.254591464996338
    5. ' interval' → logprob: -4.004591464996338
    6. ' l' → logprob: -4.254591464996338
    7. ' i' → logprob: -4.629591464996338
    8. 'this' → logprob: -5.129591464996338
    9. ' cet' → logprob: -5.379591464996338
    10. ' cette' → logprob: -5.629591464996338

Token 2795: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.18402783572673798
    2. '_interval' → logprob: -2.684027910232544
    3. ' interval' → logprob: -3.059027910232544
    4. '_' → logprob: -4.059027671813965
    5. '[i' → logprob: -4.684027671813965
    6. '-' → logprob: -5.309027671813965
    7. 'i' → logprob: -5.559027671813965
    8. '_i' → logprob: -5.684027671813965
    9. ')' → logprob: -5.809027671813965
    10. ' _' → logprob: -6.059027671813965

Token 2796: ',
' (ID: 412)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38385024666786194
    2. '   ' → logprob: -1.8838502168655396
    3. ':' → logprob: -2.508850336074829
    4. '):
' → logprob: -3.133850336074829
    5. ')' → logprob: -4.00885009765625
    6. ',' → logprob: -4.50885009765625
    7. '```' → logprob: -5.88385009765625
    8. '       ' → logprob: -6.13385009765625
    9. ':
' → logprob: -6.75885009765625
    10. ' (' → logprob: -7.13385009765625

Token 2797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22401103377342224
    2. '   ' → logprob: -3.224010944366455
    3. '           ' → logprob: -3.474010944366455
    4. '"' → logprob: -3.974010944366455
    5. 'i' → logprob: -3.974010944366455
    6. '):
' → logprob: -4.724010944366455
    7. ':' → logprob: -4.724010944366455
    8. ',' → logprob: -4.849010944366455
    9. ' i' → logprob: -4.849010944366455
    10. '        
' → logprob: -4.974010944366455

Token 2798: ' including' (ID: 3463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5405972003936768
    2. 'start' → logprob: -2.4155972003936768
    3. ' start' → logprob: -3.1655972003936768
    4. 'pos' → logprob: -3.2905972003936768
    5. '):
' → logprob: -3.2905972003936768
    6. 'station' → logprob: -3.2905972003936768
    7. 'segment' → logprob: -3.5405972003936768
    8. '       ' → logprob: -3.9155972003936768
    9. ' station' → logprob: -4.165596961975098
    10. ' segment' → logprob: -4.415596961975098

Token 2799: ' the' (ID: 290)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7338520884513855
    2. ' le' → logprob: -2.1088521480560303
    3. ' the' → logprob: -2.2338521480560303
    4. 'le' → logprob: -2.7338521480560303
    5. ' l' → logprob: -2.8588521480560303
    6. ' les' → logprob: -2.9838521480560303
    7. 'la' → logprob: -3.1088521480560303
    8. 'the' → logprob: -3.8588521480560303
    9. 'l' → logprob: -3.9838521480560303
    10. 'les' → logprob: -4.233851909637451

Token 2800: ' fixed' (ID: 13213)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.07055383920669556
    2. 'segment' → logprob: -4.195553779602051
    3. 'local' → logprob: -4.445553779602051
    4. 'time' → logprob: -4.695553779602051
    5. ' possibility' → logprob: -5.195553779602051
    6. 'possible' → logprob: -5.320553779602051
    7. 'pass' → logprob: -5.820553779602051
    8. 'distance' → logprob: -6.195553779602051
    9. 'temps' → logprob: -6.195553779602051
    10. '#' → logprob: -6.320553779602051

Token 2801: ' stops' (ID: 29924)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.8078734278678894
    2. 'express' → logprob: -1.3078734874725342
    3. 'arr' → logprob: -1.4328734874725342
    4. ' stops' → logprob: -3.682873487472534
    5. 'stations' → logprob: -4.932873249053955
    6. 'sem' → logprob: -5.432873249053955
    7. 'S' → logprob: -6.432873249053955
    8. '   ' → logprob: -6.432873249053955
    9. ' express' → logprob: -6.557873249053955
    10. 'stop' → logprob: -7.807873249053955

Token 2802: ' at' (ID: 540)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5687268376350403
    2. ')' → logprob: -2.0687267780303955
    3. '   ' → logprob: -3.0687267780303955
    4. '=' → logprob: -3.1937267780303955
    5. '):' → logprob: -3.3187267780303955
    6. '```' → logprob: -3.5687267780303955
    7. ' =' → logprob: -3.8187267780303955
    8. '):
' → logprob: -4.068727016448975
    9. ',' → logprob: -4.068727016448975
    10. '_' → logprob: -4.193727016448975

Token 2803: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.19143563508987427
    2. 'les' → logprob: -2.8164355754852295
    3. 'both' → logprob: -3.0664355754852295
    4. 'the' → logprob: -3.6914355754852295
    5. 'i' → logprob: -3.9414355754852295
    6. ' S' → logprob: -4.566435813903809
    7. 'le' → logprob: -6.066435813903809
    8. 'express' → logprob: -6.316435813903809
    9. 'l' → logprob: -6.816435813903809
    10. 'start' → logprob: -6.941435813903809

Token 2804: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.500108141452074e-05
    2. 'i' → logprob: -11.000035285949707
    3. '][' → logprob: -12.250035285949707
    4. '[' → logprob: -12.875035285949707
    5. '   ' → logprob: -13.000035285949707
    6. ']' → logprob: -13.125035285949707
    7. ' [' → logprob: -13.750035285949707
    8. '```' → logprob: -13.875035285949707
    9. '[
' → logprob: -14.000035285949707
    10. 's' → logprob: -14.250035285949707

Token 2805: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5270768404006958
    2. '],' → logprob: -0.9020768404006958
    3. '+' → logprob: -6.277076721191406
    4. ',' → logprob: -6.777076721191406
    5. '   ' → logprob: -8.027076721191406
    6. '])' → logprob: -9.152076721191406
    7. ' and' → logprob: -9.402076721191406
    8. ']
' → logprob: -9.402076721191406
    9. '],
' → logprob: -9.652076721191406
    10. ']+' → logprob: -9.652076721191406

Token 2806: ' and' (ID: 326)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7683998346328735
    2. '   ' → logprob: -1.7683998346328735
    3. ',' → logprob: -2.143399715423584
    4. '```' → logprob: -2.518399715423584
    5. ':' → logprob: -3.518399715423584
    6. '+' → logprob: -3.643399715423584
    7. '):' → logprob: -3.768399715423584
    8. '):
' → logprob: -3.893399715423584
    9. '(i' → logprob: -4.393399715423584
    10. ':
' → logprob: -4.518399715423584

Token 2807: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0003430912329349667
    2. ' S' → logprob: -8.000343322753906
    3. '   ' → logprob: -12.250343322753906
    4. '`' → logprob: -13.500343322753906
    5. '
' → logprob: -15.125343322753906
    6. ',' → logprob: -15.375343322753906
    7. '       ' → logprob: -15.500343322753906
    8. '```' → logprob: -15.625343322753906
    9. '``' → logprob: -15.625343322753906
    10. ' ' → logprob: -16.250343322753906

Token 2808: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4974866644479334e-05
    2. 'i' → logprob: -11.250015258789062
    3. '+' → logprob: -13.625015258789062
    4. '```' → logprob: -15.000015258789062
    5. '`' → logprob: -16.250015258789062
    6. '(i' → logprob: -16.500015258789062
    7. '   ' → logprob: -16.625015258789062
    8. '[' → logprob: -17.125015258789062
    9. '{i' → logprob: -17.500015258789062
    10. '
' → logprob: -17.875015258789062

Token 2809: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00024989593657664955
    2. ' +' → logprob: -9.375249862670898
    3. '[i' → logprob: -9.375249862670898
    4. ']' → logprob: -10.250249862670898
    5. '+i' → logprob: -11.500249862670898
    6. '],' → logprob: -11.625249862670898
    7. '+
' → logprob: -11.875249862670898
    8. '   ' → logprob: -12.125249862670898
    9. ']+' → logprob: -12.750249862670898
    10. '1' → logprob: -13.125249862670898

Token 2810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. 'i' → logprob: -12.75000286102295
    3. ' ' → logprob: -15.12500286102295
    4. '   ' → logprob: -16.625003814697266
    5. '
' → logprob: -17.375003814697266
    6. '+' → logprob: -17.875003814697266
    7. '[i' → logprob: -18.125003814697266
    8. ']' → logprob: -18.625003814697266
    9. '```' → logprob: -19.750003814697266
    10. '2' → logprob: -20.000003814697266

Token 2811: '].

' (ID: 37441)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03520286828279495
    2. ']
' → logprob: -4.160202980041504
    3. ']:' → logprob: -4.785202980041504
    4. ']:
' → logprob: -5.410202980041504
    5. '   ' → logprob: -6.285202980041504
    6. '].' → logprob: -6.910202980041504
    7. '])' → logprob: -7.160202980041504
    8. '],' → logprob: -7.285202980041504
    9. ')' → logprob: -8.160202980041504
    10. ')]' → logprob: -8.410202980041504

Token 2812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0530937984585762
    2. '```' → logprob: -3.678093910217285
    3. '   ' → logprob: -4.553093910217285
    4. '"""
' → logprob: -5.553093910217285
    5. '):
' → logprob: -5.678093910217285
    6. '):' → logprob: -6.428093910217285
    7. '"""' → logprob: -6.803093910217285
    8. '        
' → logprob: -7.053093910217285
    9. ':' → logprob: -7.178093910217285
    10. '``' → logprob: -7.303093910217285

Token 2813: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18221454322338104
    2. '   ' → logprob: -2.4322144985198975
    3. '```' → logprob: -4.057214736938477
    4. '"""
' → logprob: -4.182214736938477
    5. 'if' → logprob: -4.682214736938477
    6. '"""' → logprob: -4.932214736938477
    7. 'start' → logprob: -5.682214736938477
    8. 'dist' → logprob: -5.932214736938477
    9. 'distance' → logprob: -6.057214736938477
    10. 'segment' → logprob: -6.182214736938477

Token 2814: ' >=' (ID: 5064)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2405311018228531
    2. '):' → logprob: -2.3655312061309814
    3. ')' → logprob: -3.3655312061309814
    4. '=' → logprob: -3.6155312061309814
    5. ' ,' → logprob: -4.115530967712402
    6. ' =' → logprob: -4.740530967712402
    7. '>=' → logprob: -4.865530967712402
    8. '-' → logprob: -5.240530967712402
    9. ':' → logprob: -5.240530967712402
    10. '):
' → logprob: -6.365530967712402

Token 2815: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03435421362519264
    2. ' ' → logprob: -3.4093542098999023
    3. '1' → logprob: -7.409354209899902
    4. '   ' → logprob: -9.284354209899902
    5. '```' → logprob: -12.534354209899902
    6. '  ' → logprob: -13.409354209899902
    7. '    ' → logprob: -13.659354209899902
    8. ')' → logprob: -13.784354209899902
    9. ' ' → logprob: -14.284354209899902
    10. '
' → logprob: -15.346854209899902

Token 2816: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.05499910004437e-05
    2. ' ' → logprob: -9.750090599060059
    3. '1' → logprob: -10.500090599060059
    4. '   ' → logprob: -12.500090599060059
    5. '```' → logprob: -14.500090599060059
    6. '
' → logprob: -16.000089645385742
    7. ')' → logprob: -16.250089645385742
    8. '3' → logprob: -16.625089645385742
    9. '`' → logprob: -16.750089645385742
    10. '  ' → logprob: -17.500089645385742

Token 2817: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0764890909194946
    2. '):' → logprob: -1.0764890909194946
    3. '):
' → logprob: -2.076488971710205
    4. '   ' → logprob: -2.201488971710205
    5. ':
' → logprob: -2.701488971710205
    6. ')' → logprob: -4.826488971710205
    7. '       ' → logprob: -5.576488971710205
    8. 'def' → logprob: -7.201488971710205
    9. ' :' → logprob: -7.326488971710205
    10. ',' → logprob: -7.701488971710205

Token 2818: 'because' (ID: 53081)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1714000701904297
    2. ' stops' → logprob: -3.1714000701904297
    3. '):
' → logprob: -3.1714000701904297
    4. ' )' → logprob: -4.17140007019043
    5. 'segments' → logprob: -4.54640007019043
    6. '):' → logprob: -4.67140007019043
    7. ')
' → logprob: -4.92140007019043
    8. ',' → logprob: -5.42140007019043
    9. ' segments' → logprob: -5.67140007019043
    10. ' x' → logprob: -5.79640007019043

Token 2819: ' S' (ID: 336)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0719764232635498
    2. ' the' → logprob: -1.5719764232635498
    3. 'the' → logprob: -2.07197642326355
    4. ' on' → logprob: -2.07197642326355
    5. 'les' → logprob: -3.44697642326355
    6. ' express' → logprob: -4.196976661682129
    7. '   ' → logprob: -4.196976661682129
    8. ' x' → logprob: -4.196976661682129
    9. 'x' → logprob: -4.446976661682129
    10. 'express' → logprob: -4.446976661682129

Token 2820: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021617230959236622
    2. '[' → logprob: -9.250216484069824
    3. 'i' → logprob: -10.375216484069824
    4. ' [' → logprob: -10.500216484069824
    5. 'def' → logprob: -11.375216484069824
    6. '```' → logprob: -11.375216484069824
    7. '[x' → logprob: -11.500216484069824
    8. ')' → logprob: -12.375216484069824
    9. 'x' → logprob: -12.625216484069824
    10. '[
' → logprob: -12.625216484069824

Token 2821: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7630506753921509
    2. '],' → logprob: -0.7630506753921509
    3. '])' → logprob: -3.2630505561828613
    4. ']+' → logprob: -4.763050556182861
    5. '[i' → logprob: -4.888050556182861
    6. ']),' → logprob: -6.013050556182861
    7. ',' → logprob: -6.513050556182861
    8. ']==' → logprob: -6.513050556182861
    9. '   ' → logprob: -7.263050556182861
    10. ']
' → logprob: -7.388050556182861

Token 2822: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001938631059601903
    2. ' S' → logprob: -6.876938819885254
    3. ',' → logprob: -7.126938819885254
    4. ' ,' → logprob: -10.376938819885254
    5. ',S' → logprob: -10.876938819885254
    6. ' ' → logprob: -10.876938819885254
    7. ' ' → logprob: -12.001938819885254
    8. ' and' → logprob: -12.126938819885254
    9. ')' → logprob: -12.126938819885254
    10. '`' → logprob: -12.251938819885254

Token 2823: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006905130576342344
    2. '+' → logprob: -7.625690460205078
    3. ']' → logprob: -9.625690460205078
    4. 'i' → logprob: -10.375690460205078
    5. '[' → logprob: -10.375690460205078
    6. '][' → logprob: -10.875690460205078
    7. '],' → logprob: -11.250690460205078
    8. '   ' → logprob: -11.875690460205078
    9. '[j' → logprob: -12.500690460205078
    10. '
' → logprob: -12.500690460205078

Token 2824: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04981142655014992
    2. ']' → logprob: -3.424811363220215
    3. '[i' → logprob: -4.674811363220215
    4. '],' → logprob: -5.299811363220215
    5. '   ' → logprob: -8.549811363220215
    6. '])' → logprob: -8.799811363220215
    7. '+]' → logprob: -8.799811363220215
    8. '+i' → logprob: -8.924811363220215
    9. '+
' → logprob: -9.049811363220215
    10. '[' → logprob: -9.049811363220215

Token 2825: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018327576981391758
    2. '+' → logprob: -8.75018310546875
    3. 'i' → logprob: -11.00018310546875
    4. ']' → logprob: -12.37518310546875
    5. ' ' → logprob: -13.12518310546875
    6. '   ' → logprob: -14.62518310546875
    7. '```' → logprob: -14.87518310546875
    8. '`' → logprob: -15.50018310546875
    9. '],' → logprob: -15.87518310546875
    10. ']+' → logprob: -16.25018310546875

Token 2826: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06518695503473282
    2. '])' → logprob: -3.5651869773864746
    3. ')' → logprob: -4.440186977386475
    4. ']>=' → logprob: -5.315186977386475
    5. '],' → logprob: -5.440186977386475
    6. ',' → logprob: -6.065186977386475
    7. ']+' → logprob: -6.440186977386475
    8. '```' → logprob: -6.940186977386475
    9. ']==' → logprob: -7.065186977386475
    10. ']),' → logprob: -7.440186977386475

Token 2827: ' fixed' (ID: 13213)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8957194089889526
    2. ']' → logprob: -1.1457194089889526
    3. ',' → logprob: -2.770719528198242
    4. '```' → logprob: -3.145719528198242
    5. '):' → logprob: -3.270719528198242
    6. '])' → logprob: -3.895719528198242
    7. ':' → logprob: -4.395719528198242
    8. ')]' → logprob: -4.520719528198242
    9. '):
' → logprob: -4.520719528198242
    10. '),' → logprob: -5.145719528198242

Token 2828: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2728714048862457
    2. ' stops' → logprob: -2.522871494293213
    3. ',' → logprob: -2.897871494293213
    4. ']' → logprob: -3.772871494293213
    5. '):
' → logprob: -3.897871494293213
    6. '):' → logprob: -4.397871494293213
    7. 'st' → logprob: -4.397871494293213
    8. ')
' → logprob: -4.897871494293213
    9. '])' → logprob: -5.772871494293213
    10. '   ' → logprob: -5.897871494293213

Token 2829: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.758442223072052
    2. '       ' → logprob: -1.1334421634674072
    3. ' return' → logprob: -3.3834421634674072
    4. ':' → logprob: -3.5084421634674072
    5. ')' → logprob: -3.8834421634674072
    6. '):
' → logprob: -4.133442401885986
    7. ',' → logprob: -4.258442401885986
    8. ' ' → logprob: -4.508442401885986
    9. '
' → logprob: -4.758442401885986
    10. 'return' → logprob: -4.758442401885986

Token 2830: ' number' (ID: 2086)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3934670388698578
    2. 'x' → logprob: -1.8934670686721802
    3. ' (' → logprob: -2.2684669494628906
    4. ')' → logprob: -3.8934669494628906
    5. ' =' → logprob: -3.8934669494628906
    6. ' ' → logprob: -5.018466949462891
    7. '   ' → logprob: -5.143466949462891
    8. '(x' → logprob: -6.018466949462891
    9. ' return' → logprob: -6.268466949462891
    10. ' ' → logprob: -6.393466949462891

Token 2831: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1033854484558105
    2. '_of' → logprob: -1.9783854484558105
    3. 'of' → logprob: -2.1033854484558105
    4. '=' → logprob: -2.1033854484558105
    5. ' _' → logprob: -2.4783854484558105
    6. ' of' → logprob: -2.6033854484558105
    7. '>=' → logprob: -3.9783854484558105
    8. ')' → logprob: -4.1033854484558105
    9. '```' → logprob: -4.2283854484558105
    10. '>' → logprob: -4.2283854484558105

Token 2832: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.13021887838840485
    2. '_segments' → logprob: -2.130218982696533
    3. ' segments' → logprob: -5.755218982696533
    4. '_' → logprob: -11.130218505859375
    5. 'segment' → logprob: -11.380218505859375
    6. '_parts' → logprob: -11.380218505859375
    7. '_segment' → logprob: -11.505218505859375
    8. 'st' → logprob: -11.505218505859375
    9. ')' → logprob: -11.755218505859375
    10. '```' → logprob: -12.005218505859375

Token 2833: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22751685976982117
    2. '=' → logprob: -1.6025168895721436
    3. '_in' → logprob: -7.2275166511535645
    4. ':' → logprob: -8.102517127990723
    5. '_' → logprob: -8.352517127990723
    6. '_between' → logprob: -8.727517127990723
    7. ')' → logprob: -9.352517127990723
    8. '=i' → logprob: -9.602517127990723
    9. '=
' → logprob: -9.852517127990723
    10. 's' → logprob: -9.977517127990723

Token 2834: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2597530484199524
    2. ' x' → logprob: -1.5097529888153076
    3. '(x' → logprob: -5.384753227233887
    4. ' (' → logprob: -5.884753227233887
    5. '(' → logprob: -8.884753227233887
    6. ')' → logprob: -9.634753227233887
    7. '`' → logprob: -10.009753227233887
    8. ' ' → logprob: -10.384753227233887
    9. '   ' → logprob: -10.759753227233887
    10. '```' → logprob: -10.884753227233887

Token 2835: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23764365911483765
    2. ' -' → logprob: -2.3626437187194824
    3. '[i' → logprob: -3.2376437187194824
    4. '   ' → logprob: -4.237643718719482
    5. ')' → logprob: -4.237643718719482
    6. 'def' → logprob: -4.487643718719482
    7. '):
' → logprob: -5.362643718719482
    8. '```' → logprob: -5.612643718719482
    9. '_i' → logprob: -5.737643718719482
    10. ')
' → logprob: -5.737643718719482

Token 2836: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017322985222563148
    2. ' ' → logprob: -6.376732349395752
    3. '2' → logprob: -10.626731872558594
    4. ')' → logprob: -12.876731872558594
    5. '   ' → logprob: -13.876731872558594
    6. '```' → logprob: -14.376731872558594
    7. '=' → logprob: -15.126731872558594
    8. ' =' → logprob: -15.376731872558594
    9. '-' → logprob: -15.626731872558594
    10. ' -' → logprob: -16.126731872558594

Token 2837: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.4867397546768188
    2. ':' → logprob: -1.7367397546768188
    3. '):
' → logprob: -1.7367397546768188
    4. '):' → logprob: -1.8617397546768188
    5. ')' → logprob: -1.9867397546768188
    6. '   ' → logprob: -2.6117396354675293
    7. '```' → logprob: -3.9867396354675293
    8. ')
' → logprob: -4.611739635467529
    9. '\n' → logprob: -4.861739635467529
    10. '
' → logprob: -5.361739635467529

Token 2838: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2622904777526855
    2. ':' → logprob: -1.5122904777526855
    3. '):
' → logprob: -1.7622904777526855
    4. '   ' → logprob: -2.0122904777526855
    5. ':
' → logprob: -2.0122904777526855
    6. ')' → logprob: -3.3872904777526855
    7. '```' → logprob: -5.1372904777526855
    8. '
' → logprob: -5.7622904777526855
    9. 'def' → logprob: -6.1372904777526855
    10. '":' → logprob: -6.6372904777526855

Token 2839: ' segments' (ID: 33749)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9365736842155457
    2. ':' → logprob: -1.1865737438201904
    3. '   ' → logprob: -2.3115737438201904
    4. '):' → logprob: -2.6865737438201904
    5. '):
' → logprob: -3.0615737438201904
    6. ')' → logprob: -3.4365737438201904
    7. '```' → logprob: -4.186573505401611
    8. '\n' → logprob: -4.436573505401611
    9. '":' → logprob: -5.311573505401611
    10. '       ' → logprob: -5.311573505401611

Token 2840: ' are' (ID: 553)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.13666681945323944
    2. '_len' → logprob: -3.261666774749756
    3. '_count' → logprob: -3.511666774749756
    4. ' =' → logprob: -3.636666774749756
    5. '=' → logprob: -4.511666774749756
    6. 's' → logprob: -4.761666774749756
    7. '_lengths' → logprob: -5.011666774749756
    8. '_' → logprob: -6.011666774749756
    9. '_l' → logprob: -7.511666774749756
    10. '_num' → logprob: -7.886666774749756

Token 2841: ' equally' (ID: 29293)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9979820847511292
    2. '[i' → logprob: -1.1229820251464844
    3. '[(' → logprob: -2.6229820251464844
    4. 'div' → logprob: -3.2479820251464844
    5. '[x' → logprob: -3.6229820251464844
    6. 'length' → logprob: -3.7479820251464844
    7. '[
' → logprob: -4.247982025146484
    8. '(x' → logprob: -4.372982025146484
    9. 'd' → logprob: -4.622982025146484
    10. 'equal' → logprob: -4.622982025146484

Token 2842: ' split' (ID: 12648)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.19435694813728333
    2. 'distributed' → logprob: -2.444356918334961
    3. 'd' → logprob: -3.694356918334961
    4. 'dist' → logprob: -4.194356918334961
    5. ' répart' → logprob: -4.194356918334961
    6. 'sp' → logprob: -4.319356918334961
    7. 'long' → logprob: -5.319356918334961
    8. 'length' → logprob: -5.944356918334961
    9. 'split' → logprob: -6.069356918334961
    10. ' spaced' → logprob: -6.319356918334961

Token 2843: ' intervals' (ID: 49900)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5505964756011963
    2. '   ' → logprob: -1.6755964756011963
    3. 'd' → logprob: -2.0505964756011963
    4. ':' → logprob: -2.4255964756011963
    5. ' =' → logprob: -2.5505964756011963
    6. ' between' → logprob: -2.5505964756011963
    7. ' entre' → logprob: -3.4255964756011963
    8. '       ' → logprob: -3.8005964756011963
    9. '(s' → logprob: -3.9255964756011963
    10. ')' → logprob: -3.9255964756011963

Token 2844: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2222568988800049
    2. '(i' → logprob: -1.9722568988800049
    3. '[i' → logprob: -2.097256898880005
    4. ' =' → logprob: -2.222256898880005
    5. '   ' → logprob: -2.972256898880005
    6. 's' → logprob: -2.972256898880005
    7. '```' → logprob: -3.097256898880005
    8. ',' → logprob: -3.472256898880005
    9. ':' → logprob: -3.597256898880005
    10. '=' → logprob: -3.597256898880005

Token 2845: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5134848952293396
    2. '```' → logprob: -1.3884849548339844
    3. ' (' → logprob: -3.2634849548339844
    4. '``' → logprob: -4.388484954833984
    5. '(' → logprob: -4.513484954833984
    6. 'segments' → logprob: -4.638484954833984
    7. '           ' → logprob: -4.763484954833984
    8. '   ' → logprob: -5.013484954833984
    9. '`' → logprob: -5.138484954833984
    10. ')' → logprob: -5.263484954833984

Token 2846: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10864506661891937
    2. '=' → logprob: -2.983644962310791
    3. 's' → logprob: -3.983644962310791
    4. '_part' → logprob: -4.233644962310791
    5. '_i' → logprob: -5.858644962310791
    6. '[i' → logprob: -6.233644962310791
    7. '_' → logprob: -6.358644962310791
    8. '_segment' → logprob: -6.483644962310791
    9. '   ' → logprob: -6.733644962310791
    10. '_per' → logprob: -6.983644962310791

Token 2847: ' intervals' (ID: 49900)
  Prédit: '(interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.6172118186950684
    2. 'interval' → logprob: -1.1172118186950684
    3. ' (' → logprob: -2.4922118186950684
    4. ' intervals' → logprob: -2.9922118186950684
    5. '   ' → logprob: -8.867212295532227
    6. '(d' → logprob: -9.117212295532227
    7. '(in' → logprob: -10.742212295532227
    8. '       ' → logprob: -10.992212295532227
    9. ' ' → logprob: -10.992212295532227
    10. '(' → logprob: -11.242212295532227

Token 2848: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005507678724825382
    2. '[' → logprob: -7.750550746917725
    3. '[idx' → logprob: -10.125551223754883
    4. '[x' → logprob: -10.750551223754883
    5. '][' → logprob: -11.750551223754883
    6. ']' → logprob: -12.000551223754883
    7. 'i' → logprob: -12.000551223754883
    8. '[
' → logprob: -12.125551223754883
    9. ',i' → logprob: -12.125551223754883
    10. '```' → logprob: -12.250551223754883

Token 2849: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011403233744204044
    2. '[i' → logprob: -4.8864030838012695
    3. ']/' → logprob: -6.2614030838012695
    4. '])' → logprob: -7.5114030838012695
    5. ')' → logprob: -8.01140308380127
    6. '   ' → logprob: -8.38640308380127
    7. '//' → logprob: -8.63640308380127
    8. ' ]' → logprob: -9.26140308380127
    9. ']*(' → logprob: -9.76140308380127
    10. ' //' → logprob: -9.88640308380127

Token 2850: ' /' (ID: 820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2637423276901245
    2. '
' → logprob: -2.638742446899414
    3. ' //' → logprob: -3.263742446899414
    4. '[i' → logprob: -3.388742446899414
    5. '       ' → logprob: -4.013742446899414
    6. ' /' → logprob: -4.138742446899414
    7. '```' → logprob: -4.388742446899414
    8. 'def' → logprob: -4.388742446899414
    9. '//' → logprob: -5.513742446899414
    10. ')' → logprob: -5.638742446899414

Token 2851: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05493102967739105
    2. ' (' → logprob: -2.9299309253692627
    3. '(i' → logprob: -10.429930686950684
    4. '(' → logprob: -11.554930686950684
    5. '   ' → logprob: -12.679930686950684
    6. '(max' → logprob: -12.804930686950684
    7. '`' → logprob: -13.929930686950684
    8. '       ' → logprob: -15.054930686950684
    9. '           ' → logprob: -15.054930686950684
    10. '```' → logprob: -15.179930686950684

Token 2852: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03623155876994133
    2. '(x' → logprob: -3.411231517791748
    3. ' x' → logprob: -6.286231517791748
    4. ' (' → logprob: -7.286231517791748
    5. '(' → logprob: -11.411231994628906
    6. '```' → logprob: -11.536231994628906
    7. '   ' → logprob: -12.661231994628906
    8. ')x' → logprob: -12.786231994628906
    9. '{x' → logprob: -13.286231994628906
    10. '`' → logprob: -13.411231994628906

Token 2853: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002850521355867386
    2. ' -' → logprob: -5.877850532531738
    3. '[i' → logprob: -10.627850532531738
    4. '_minus' → logprob: -11.627850532531738
    5. '−' → logprob: -12.377850532531738
    6. '_MINUS' → logprob: -13.127850532531738
    7. '[-' → logprob: -13.627850532531738
    8. ')' → logprob: -14.127850532531738
    9. 'minus' → logprob: -14.252850532531738
    10. '-
' → logprob: -14.252850532531738

Token 2854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '```' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.75001049041748
    4. ')' → logprob: -14.25001049041748
    5. '2' → logprob: -15.12501049041748
    6. '`' → logprob: -15.50001049041748
    7. '<|end|>' → logprob: -15.50001049041748
    8. '``' → logprob: -15.75001049041748
    9. '   ' → logprob: -17.000009536743164
    10. '१' → logprob: -17.125009536743164

Token 2855: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018202388659119606
    2. ')
' → logprob: -4.143202304840088
    3. '   ' → logprob: -8.018202781677246
    4. '")' → logprob: -8.518202781677246
    5. '):
' → logprob: -8.518202781677246
    6. ')")
' → logprob: -8.768202781677246
    7. '):' → logprob: -8.893202781677246
    8. ')
' → logprob: -9.018202781677246
    9. ']' → logprob: -9.393202781677246
    10. '+' → logprob: -9.393202781677246

Token 2856: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2458767890930176
    2. ')' → logprob: -1.6208767890930176
    3. '):
' → logprob: -1.7458767890930176
    4. '       ' → logprob: -2.2458767890930176
    5. '   ' → logprob: -2.6208767890930176
    6. '\n' → logprob: -2.6208767890930176
    7. ')
' → logprob: -3.9958767890930176
    8. ':' → logprob: -3.9958767890930176
    9. ':
' → logprob: -4.370876789093018
    10. '")' → logprob: -5.120876789093018

Token 2857: ' endpoint' (ID: 29703)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.252193808555603
    2. '\n' → logprob: -1.377193808555603
    3. '   ' → logprob: -1.752193808555603
    4. '):
' → logprob: -2.7521939277648926
    5. '"""
' → logprob: -2.8771939277648926
    6. ')' → logprob: -3.7521939277648926
    7. ')
' → logprob: -4.002193927764893
    8. 'return' → logprob: -4.002193927764893
    9. ':
' → logprob: -4.252193927764893
    10. '):' → logprob: -4.252193927764893

Token 2858: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2413824796676636
    2. ' =' → logprob: -1.6163824796676636
    3. ' -' → logprob: -2.241382598876953
    4. ' ==' → logprob: -2.366382598876953
    5. '==' → logprob: -2.616382598876953
    6. ')' → logprob: -2.866382598876953
    7. '-' → logprob: -2.866382598876953
    8. ',' → logprob: -3.116382598876953
    9. '_pos' → logprob: -3.241382598876953
    10. '_idx' → logprob: -4.866382598876953

Token 2859: ' the' (ID: 290)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.09208345413208
    2. ' int' → logprob: -1.34208345413208
    3. ')' → logprob: -1.84208345413208
    4. ' station' → logprob: -2.46708345413208
    5. ' ' → logprob: -3.09208345413208
    6. ',' → logprob: -3.09208345413208
    7. 'station' → logprob: -4.71708345413208
    8. ' ' → logprob: -4.84208345413208
    9. ' 
' → logprob: -4.96708345413208
    10. '<|end|>' → logprob: -5.21708345413208

Token 2860: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.17925308644771576
    2. ' station' → logprob: -3.054253101348877
    3. 'position' → logprob: -3.429253101348877
    4. ' token' → logprob: -3.679253101348877
    5. ' next' → logprob: -3.679253101348877
    6. '_' → logprob: -5.304253101348877
    7. ' (' → logprob: -6.054253101348877
    8. ' closest' → logprob: -6.429253101348877
    9. ' value' → logprob: -6.554253101348877
    10. '=' → logprob: -6.554253101348877

Token 2861: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.355512022972107
    2. ')' → logprob: -1.855512022972107
    3. '=' → logprob: -2.2305121421813965
    4. 'i' → logprob: -2.2305121421813965
    5. '(i' → logprob: -2.4805121421813965
    6. '```' → logprob: -2.6055121421813965
    7. ',
' → logprob: -3.4805121421813965
    8. '[i' → logprob: -3.7305121421813965
    9. '_' → logprob: -3.9805121421813965
    10. 'in' → logprob: -3.9805121421813965

Token 2862: ' station' (ID: 11538)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.38753917813301086
    2. ' endpoint' → logprob: -2.0125391483306885
    3. 'the' → logprob: -2.2625391483306885
    4. ' the' → logprob: -3.8875391483306885
    5. 'station' → logprob: -4.012539386749268
    6. ' S' → logprob: -4.137539386749268
    7. 'S' → logprob: -4.887539386749268
    8. ' station' → logprob: -5.137539386749268
    9. ' la' → logprob: -5.262539386749268
    10. 'l' → logprob: -5.887539386749268

Token 2863: '_limit' (ID: 34361)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5175698399543762
    2. ',' → logprob: -2.1425697803497314
    3. '_' → logprob: -3.1425697803497314
    4. '[i' → logprob: -3.1425697803497314
    5. '_in' → logprob: -3.2675697803497314
    6. ' i' → logprob: -3.5175697803497314
    7. ')' → logprob: -3.6425697803497314
    8. '_i' → logprob: -4.6425700187683105
    9. ',
' → logprob: -4.6425700187683105
    10. '```' → logprob: -4.6425700187683105

Token 2864: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9404343962669373
    2. ')
' → logprob: -1.815434455871582
    3. '   ' → logprob: -2.440434455871582
    4. ',' → logprob: -2.690434455871582
    5. '       ' → logprob: -2.815434455871582
    6. '):
' → logprob: -3.065434455871582
    7. '
' → logprob: -3.315434455871582
    8. '[i' → logprob: -3.440434455871582
    9. '```' → logprob: -3.940434455871582
    10. '=' → logprob: -4.815434455871582

Token 2865: ' is' (ID: 382)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.27228105068206787
    2. ' endpoint' → logprob: -1.7722810506820679
    3. '<=' → logprob: -4.147281169891357
    4. 'i' → logprob: -4.272281169891357
    5. '==' → logprob: -4.522281169891357
    6. ' i' → logprob: -4.897281169891357
    7. '=' → logprob: -5.022281169891357
    8. ' <=' → logprob: -6.022281169891357
    9. '<' → logprob: -6.147281169891357
    10. ' ==' → logprob: -6.647281169891357

Token 2866: ' >' (ID: 1424)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15838301181793213
    2. ' in' → logprob: -3.0333828926086426
    3. '<=' → logprob: -3.0333828926086426
    4. 'i' → logprob: -4.658382892608643
    5. 'within' → logprob: -4.658382892608643
    6. '==' → logprob: -4.908382892608643
    7. 'dans' → logprob: -5.283382892608643
    8. ' within' → logprob: -5.408382892608643
    9. ')' → logprob: -5.658382892608643
    10. 'inside' → logprob: -6.533382892608643

Token 2867: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09819521754980087
    2. '=' → logprob: -2.4731953144073486
    3. '=S' → logprob: -4.8481950759887695
    4. ' S' → logprob: -7.0981950759887695
    5. '0' → logprob: -8.97319507598877
    6. '```' → logprob: -9.22319507598877
    7. 'interval' → logprob: -9.47319507598877
    8. 'i' → logprob: -9.97319507598877
    9. '==' → logprob: -10.47319507598877
    10. '=
' → logprob: -10.59819507598877

Token 2868: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016355745494365692
    2. '[idx' → logprob: -4.141355514526367
    3. '[' → logprob: -9.141355514526367
    4. '   ' → logprob: -9.766355514526367
    5. '][' → logprob: -10.891355514526367
    6. '_i' → logprob: -10.891355514526367
    7. 'i' → logprob: -10.891355514526367
    8. ']' → logprob: -10.891355514526367
    9. 'def' → logprob: -11.141355514526367
    10. '[
' → logprob: -11.516355514526367

Token 2869: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41179075837135315
    2. ' and' → logprob: -2.1617908477783203
    3. 'and' → logprob: -2.6617908477783203
    4. '[i' → logprob: -2.6617908477783203
    5. '])' → logprob: -3.6617908477783203
    6. '],' → logprob: -3.6617908477783203
    7. ')' → logprob: -4.16179084777832
    8. '+' → logprob: -5.53679084777832
    9. ']+' → logprob: -6.03679084777832
    10. 'else' → logprob: -6.78679084777832

Token 2870: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5781198740005493
    2. '   ' → logprob: -2.5781197547912598
    3. 'and' → logprob: -3.2031197547912598
    4. '+' → logprob: -3.2031197547912598
    5. '```' → logprob: -3.2031197547912598
    6. ':
' → logprob: -3.4531197547912598
    7. ',' → logprob: -3.5781197547912598
    8. '       ' → logprob: -3.5781197547912598
    9. ')' → logprob: -3.7031197547912598
    10. ' +' → logprob: -3.8281197547912598

Token 2871: ' ≤' (ID: 72554)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2126196324825287
    2. '<' → logprob: -2.0876195430755615
    3. 'S' → logprob: -2.8376195430755615
    4. '≤' → logprob: -5.462619781494141
    5. '```' → logprob: -6.712619781494141
    6. '<i' → logprob: -6.837619781494141
    7. ' <=' → logprob: -7.087619781494141
    8. 'interval' → logprob: -7.337619781494141
    9. '``' → logprob: -8.96261978149414
    10. 'i' → logprob: -9.08761978149414

Token 2872: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.016092438250780106
    2. ' S' → logprob: -4.141092300415039
    3. '   ' → logprob: -10.516092300415039
    4. '```' → logprob: -11.516092300415039
    5. '
' → logprob: -12.266092300415039
    6. '`' → logprob: -12.391092300415039
    7. ')' → logprob: -12.516092300415039
    8. ' ' → logprob: -13.516092300415039
    9. '       ' → logprob: -13.766092300415039
    10. ',' → logprob: -13.766092300415039

Token 2873: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.478889215737581e-05
    2. '[idx' → logprob: -10.250054359436035
    3. '[' → logprob: -11.875054359436035
    4. ']' → logprob: -12.250054359436035
    5. 'i' → logprob: -13.000054359436035
    6. '_i' → logprob: -13.625054359436035
    7. 'x' → logprob: -13.750054359436035
    8. '][' → logprob: -14.125054359436035
    9. '[
' → logprob: -15.000054359436035
    10. '_[' → logprob: -15.625054359436035

Token 2874: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.252642959356308
    2. '+' → logprob: -1.5026429891586304
    3. ']' → logprob: -7.87764310836792
    4. 'i' → logprob: -9.377642631530762
    5. '+i' → logprob: -9.377642631530762
    6. '[' → logprob: -10.377642631530762
    7. '(i' → logprob: -10.502642631530762
    8. '])' → logprob: -10.627642631530762
    9. ' +' → logprob: -10.752642631530762
    10. '],' → logprob: -11.002642631530762

Token 2875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02509125880897045
    2. 'i' → logprob: -3.7750911712646484
    3. '+' → logprob: -6.400091171264648
    4. '[i' → logprob: -9.650091171264648
    5. '(i' → logprob: -9.900091171264648
    6. '{i' → logprob: -11.150091171264648
    7. ']' → logprob: -11.275091171264648
    8. '   ' → logprob: -11.650091171264648
    9. '
' → logprob: -11.775091171264648
    10. '{' → logprob: -12.525091171264648

Token 2876: '],
' (ID: 2274)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8736814856529236
    2. ')' → logprob: -2.4986815452575684
    3. ']
' → logprob: -2.4986815452575684
    4. ']' → logprob: -2.4986815452575684
    5. ']:
' → logprob: -2.6236815452575684
    6. '   ' → logprob: -2.7486815452575684
    7. ')
' → logprob: -2.7486815452575684
    8. '       ' → logprob: -3.2486815452575684
    9. '):' → logprob: -3.4986815452575684
    10. '])' → logprob: -4.123681545257568

Token 2877: '                 ' (ID: 2902)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49288210272789
    2. '   ' → logprob: -1.7428821325302124
    3. '```' → logprob: -1.9928821325302124
    4. ',' → logprob: -3.992882013320923
    5. '
' → logprob: -4.617882251739502
    6. '           ' → logprob: -4.867882251739502
    7. ':' → logprob: -4.992882251739502
    8. '"' → logprob: -5.242882251739502
    9. '):
' → logprob: -5.492882251739502
    10. '`' → logprob: -5.742882251739502

Token 2878: ' otherwise' (ID: 10275)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.3330444395542145
    2. 'None' → logprob: -2.2080445289611816
    3. 'S' → logprob: -3.4580445289611816
    4. ' endpoint' → logprob: -3.7080445289611816
    5. 'x' → logprob: -3.9580445289611816
    6. ' None' → logprob: -4.333044528961182
    7. '#' → logprob: -4.708044528961182
    8. '                 ' → logprob: -4.958044528961182
    9. ',' → logprob: -4.958044528961182
    10. '=' → logprob: -5.083044528961182

Token 2879: ' endpoint' (ID: 29703)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.1860598623752594
    2. 'None' → logprob: -2.1860599517822266
    3. '0' → logprob: -2.9360599517822266
    4. ' ' → logprob: -6.186059951782227
    5. ' -' → logprob: -6.936059951782227
    6. '-' → logprob: -8.061059951782227
    7. ' float' → logprob: -9.311059951782227
    8. '       ' → logprob: -9.311059951782227
    9. ' ' → logprob: -9.311059951782227
    10. 'interval' → logprob: -9.561059951782227

Token 2880: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5455046892166138
    2. ')' → logprob: -1.5455046892166138
    3. '==' → logprob: -3.295504570007324
    4. '=' → logprob: -3.920504570007324
    5. '):
' → logprob: -3.920504570007324
    6. ':
' → logprob: -3.920504570007324
    7. ':' → logprob: -4.170504570007324
    8. '[' → logprob: -4.420504570007324
    9. ' ==' → logprob: -4.420504570007324
    10. ']' → logprob: -4.545504570007324

Token 2881: ' None' (ID: 4662)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -8.351697033504024e-05
    2. 'None' → logprob: -10.125083923339844
    3. ' S' → logprob: -11.000083923339844
    4. '0' → logprob: -11.375083923339844
    5. 'interval' → logprob: -11.625083923339844
    6. 'float' → logprob: -12.625083923339844
    7. '-' → logprob: -14.250083923339844
    8. '   ' → logprob: -14.250083923339844
    9. '```' → logprob: -15.250083923339844
    10. '                           ' → logprob: -16.250083923339844

Token 2882: ' meaning' (ID: 10915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38500654697418213
    2. '):
' → logprob: -1.3850065469741821
    3. '):' → logprob: -4.010006427764893
    4. '
' → logprob: -4.260006427764893
    5. ')' → logprob: -4.385006427764893
    6. ':
' → logprob: -5.010006427764893
    7. ' if' → logprob: -5.760006427764893
    8. 'if' → logprob: -5.885006427764893
    9. ')
' → logprob: -5.885006427764893
    10. 'None' → logprob: -6.260006427764893

Token 2883: ' full' (ID: 3149)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06429262459278107
    2. ' None' → logprob: -2.8142926692962646
    3. 'i' → logprob: -7.4392924308776855
    4. 'interval' → logprob: -7.8142924308776855
    5. '-' → logprob: -7.9392924308776855
    6. '0' → logprob: -8.564292907714844
    7. '   ' → logprob: -8.939292907714844
    8. 'inf' → logprob: -9.439292907714844
    9. 'float' → logprob: -9.689292907714844
    10. ' -' → logprob: -9.689292907714844

Token 2884: ' interval' (ID: 17116)
  Prédit: '_interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_interval' → logprob: -1.3312098979949951
    2. 'None' → logprob: -1.4562098979949951
    3. '[i' → logprob: -2.081209897994995
    4. '   ' → logprob: -2.581209897994995
    5. ' None' → logprob: -2.831209897994995
    6. ')' → logprob: -2.831209897994995
    7. 'interval' → logprob: -3.081209897994995
    8. '_inter' → logprob: -4.081210136413574
    9. ']' → logprob: -4.081210136413574
    10. '```' → logprob: -4.456210136413574

Token 2885: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0271174907684326
    2. '):
' → logprob: -1.4021174907684326
    3. '       ' → logprob: -2.0271174907684326
    4. ':
' → logprob: -3.0271174907684326
    5. '[i' → logprob: -3.4021174907684326
    6. '):' → logprob: -3.5271174907684326
    7. ')' → logprob: -3.7771174907684326
    8. 'def' → logprob: -3.7771174907684326
    9. '(i' → logprob: -3.7771174907684326
    10. 'if' → logprob: -4.277117729187012

Token 2886: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10756280273199081
    2. 'tr' → logprob: -2.482562780380249
    3. 'cover' → logprob: -4.857563018798828
    4. ' couvrir' → logprob: -5.982563018798828
    5. 'pass' → logprob: -6.107563018798828
    6. ' S' → logprob: -6.482563018798828
    7. ' parcour' → logprob: -6.732563018798828
    8. '   ' → logprob: -7.357563018798828
    9. ' cover' → logprob: -8.107563018798828
    10. 'reach' → logprob: -8.482563018798828

Token 2887: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009967384859919548
    2. '   ' → logprob: -6.00996732711792
    3. ']' → logprob: -6.13496732711792
    4. 'i' → logprob: -6.88496732711792
    5. '_i' → logprob: -7.25996732711792
    6. '       ' → logprob: -7.63496732711792
    7. '[
' → logprob: -7.75996732711792
    8. '][' → logprob: -7.75996732711792
    9. 'if' → logprob: -7.88496732711792
    10. 'def' → logprob: -8.009967803955078

Token 2888: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0813065767288208
    2. '[i' → logprob: -2.9563064575195312
    3. ']' → logprob: -3.7063064575195312
    4. '[' → logprob: -7.956306457519531
    5. '+i' → logprob: -8.706306457519531
    6. 'i' → logprob: -8.831306457519531
    7. ']+' → logprob: -8.956306457519531
    8. ']
' → logprob: -8.956306457519531
    9. '[
' → logprob: -9.081306457519531
    10. '],' → logprob: -9.081306457519531

Token 2889: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13013537228107452
    2. '+' → logprob: -2.2551352977752686
    3. '1' → logprob: -4.130135536193848
    4. '[i' → logprob: -7.505135536193848
    5. ']' → logprob: -7.880135536193848
    6. '{i' → logprob: -9.755135536193848
    7. ']+' → logprob: -10.255135536193848
    8. '(i' → logprob: -11.005135536193848
    9. ' i' → logprob: -11.630135536193848
    10. '+i' → logprob: -12.005135536193848

Token 2890: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2032209187746048
    2. ')
' → logprob: -2.328220844268799
    3. '   ' → logprob: -2.953220844268799
    4. '):
' → logprob: -4.203220844268799
    5. '"""
' → logprob: -4.828220844268799
    6. '):' → logprob: -5.828220844268799
    7. '       ' → logprob: -6.703220844268799
    8. '```' → logprob: -6.703220844268799
    9. ']' → logprob: -6.828220844268799
    10. '     ' → logprob: -7.078220844268799

Token 2891: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2908748686313629
    2. '       ' → logprob: -1.4158748388290405
    3. '```' → logprob: -5.91587495803833
    4. ')' → logprob: -6.16587495803833
    5. '):
' → logprob: -6.41587495803833
    6. '):' → logprob: -6.79087495803833
    7. 'def' → logprob: -7.66587495803833
    8. ':' → logprob: -7.79087495803833
    9. ':
' → logprob: -8.540874481201172
    10. '           ' → logprob: -9.290874481201172

Token 2892: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09466404467821121
    2. '       ' → logprob: -2.8446640968322754
    3. ':' → logprob: -4.469664096832275
    4. '```' → logprob: -5.094664096832275
    5. '):
' → logprob: -5.219664096832275
    6. '):' → logprob: -5.719664096832275
    7. ':
' → logprob: -6.594664096832275
    8. '    ' → logprob: -7.344664096832275
    9. 'def' → logprob: -7.469664096832275
    10. ' if' → logprob: -7.594664096832275

Token 2893: ' minimal' (ID: 19957)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0041080713272095
    2. ' float' → logprob: -1.5041080713272095
    3. '0' → logprob: -2.12910795211792
    4. ' dp' → logprob: -2.50410795211792
    5. 'int' → logprob: -2.75410795211792
    6. 'interval' → logprob: -3.50410795211792
    7. ' max' → logprob: -3.75410795211792
    8. 'float' → logprob: -3.87910795211792
    9. ' interval' → logprob: -4.37910795211792
    10. '   ' → logprob: -4.87910795211792

Token 2894: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.4794822335243225
    2. 'time' → logprob: -0.9794822335243225
    3. '_time' → logprob: -6.104482173919678
    4. ' temps' → logprob: -6.979482173919678
    5. 'int' → logprob: -7.729482173919678
    6. 'cost' → logprob: -7.979482173919678
    7. 'temps' → logprob: -8.354482650756836
    8. '"time' → logprob: -8.354482650756836
    9. ')' → logprob: -8.604482650756836
    10. 'times' → logprob: -8.604482650756836

Token 2895: ' needed' (ID: 6118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6757622361183167
    2. '       ' → logprob: -1.8007621765136719
    3. '(
' → logprob: -2.050762176513672
    4. ' =' → logprob: -2.800762176513672
    5. '(i' → logprob: -3.175762176513672
    6. '(' → logprob: -3.300762176513672
    7. ':' → logprob: -4.550762176513672
    8. '           ' → logprob: -4.675762176513672
    9. '=' → logprob: -5.050762176513672
    10. '               ' → logprob: -5.300762176513672

Token 2896: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.207852840423584
    2. ' to' → logprob: -1.457852840423584
    3. ':' → logprob: -1.707852840423584
    4. '       ' → logprob: -2.332852840423584
    5. ')' → logprob: -3.082852840423584
    6. 'to' → logprob: -3.332852840423584
    7. '    ' → logprob: -3.957852840423584
    8. ' =' → logprob: -4.082852840423584
    9. '):' → logprob: -4.082852840423584
    10. ' for' → logprob: -4.457852840423584

Token 2897: ' reach' (ID: 7627)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.6285514831542969
    2. 'tr' → logprob: -1.3785514831542969
    3. 'reach' → logprob: -2.378551483154297
    4. 'par' → logprob: -2.628551483154297
    5. 'arr' → logprob: -3.503551483154297
    6. 're' → logprob: -4.503551483154297
    7. 'pass' → logprob: -5.878551483154297
    8. 'aller' → logprob: -6.753551483154297
    9. '   ' → logprob: -7.378551483154297
    10. ' ' → logprob: -7.503551483154297

Token 2898: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.8861029744148254
    2. ' endpoint' → logprob: -1.1361029148101807
    3. ' i' → logprob: -1.7611029148101807
    4. 'i' → logprob: -2.7611029148101807
    5. ' S' → logprob: -4.13610315322876
    6. 'interval' → logprob: -5.76110315322876
    7. 'S' → logprob: -5.88610315322876
    8. ' station' → logprob: -6.38610315322876
    9. ' ' → logprob: -6.51110315322876
    10. 'station' → logprob: -6.63610315322876

Token 2899: ' from' (ID: 591)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6590582132339478
    2. '   ' → logprob: -1.2840582132339478
    3. '[i' → logprob: -2.659058094024658
    4. '       ' → logprob: -3.409058094024658
    5. ')' → logprob: -3.659058094024658
    6. '):
' → logprob: -4.284058094024658
    7. ',' → logprob: -4.534058094024658
    8. ' (' → logprob: -5.034058094024658
    9. '```' → logprob: -5.034058094024658
    10. ' i' → logprob: -5.159058094024658

Token 2900: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5253777503967285
    2. ' S' → logprob: -0.9003777503967285
    3. 'i' → logprob: -7.2753777503967285
    4. ' i' → logprob: -7.7753777503967285
    5. '`' → logprob: -8.02537727355957
    6. 'interval' → logprob: -8.65037727355957
    7. ')' → logprob: -9.40037727355957
    8. ' ' → logprob: -9.90037727355957
    9. '#' → logprob: -9.90037727355957
    10. '   ' → logprob: -10.02537727355957

Token 2901: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00040409780922345817
    2. '   ' → logprob: -8.500404357910156
    3. '[
' → logprob: -9.875404357910156
    4. 'def' → logprob: -10.000404357910156
    5. '```' → logprob: -10.750404357910156
    6. ' [' → logprob: -10.875404357910156
    7. 'i' → logprob: -11.000404357910156
    8. '[' → logprob: -11.125404357910156
    9. '][' → logprob: -12.500404357910156
    10. '       ' → logprob: -12.500404357910156

Token 2902: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04847550764679909
    2. ']+' → logprob: -3.798475503921509
    3. '[i' → logprob: -5.048475742340088
    4. '   ' → logprob: -5.048475742340088
    5. ')' → logprob: -5.548475742340088
    6. ']
' → logprob: -5.673475742340088
    7. ' ]' → logprob: -6.673475742340088
    8. '+' → logprob: -7.173475742340088
    9. '])' → logprob: -7.173475742340088
    10. '+i' → logprob: -7.798475742340088

Token 2903: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13318602740764618
    2. ':' → logprob: -3.633186101913452
    3. '):
' → logprob: -3.633186101913452
    4. ':
' → logprob: -3.758186101913452
    5. '       ' → logprob: -4.133185863494873
    6. '):' → logprob: -4.258185863494873
    7. ')' → logprob: -4.508185863494873
    8. ',' → logprob: -5.883185863494873
    9. ' :
' → logprob: -7.508185863494873
    10. '
' → logprob: -7.758185863494873

Token 2904: ' stops' (ID: 29924)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.8439521789550781
    2. ' sem' → logprob: -1.8439521789550781
    3. 'interval' → logprob: -1.8439521789550781
    4. 'x' → logprob: -2.593952178955078
    5. 'sem' → logprob: -2.843952178955078
    6. ' stops' → logprob: -2.968952178955078
    7. ' interval' → logprob: -3.093952178955078
    8. ')' → logprob: -3.093952178955078
    9. '):
' → logprob: -3.968952178955078
    10. ' la' → logprob: -3.968952178955078

Token 2905: ' sem' (ID: 2743)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.186367392539978
    2. '   ' → logprob: -1.311367392539978
    3. '[i' → logprob: -1.311367392539978
    4. '_in' → logprob: -3.1863675117492676
    5. '       ' → logprob: -3.6863675117492676
    6. ' =' → logprob: -4.061367511749268
    7. '_i' → logprob: -4.561367511749268
    8. ' i' → logprob: -4.811367511749268
    9. 'i' → logprob: -4.936367511749268
    10. ')' → logprob: -5.436367511749268

Token 2906: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.008241143077611923
    2. 'express' → logprob: -5.883241176605225
    3. '[i' → logprob: -6.133241176605225
    4. 'i' → logprob: -6.633241176605225
    5. '_i' → logprob: -7.758241176605225
    6. 'I' → logprob: -8.633240699768066
    7. 'pexpr' → logprob: -9.008240699768066
    8. '(express' → logprob: -9.008240699768066
    9. 'iex' → logprob: -9.133240699768066
    10. 'iem' → logprob: -9.133240699768066

Token 2907: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3770497441291809
    2. '[i' → logprob: -1.7520496845245361
    3. '):
' → logprob: -2.877049684524536
    4. '):' → logprob: -3.752049684524536
    5. ':' → logprob: -3.877049684524536
    6. ',' → logprob: -5.377049922943115
    7. '(i' → logprob: -5.377049922943115
    8. ':
' → logprob: -5.377049922943115
    9. '       ' → logprob: -5.502049922943115
    10. ' =' → logprob: -6.002049922943115

Token 2908: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17791561782360077
    2. '       ' → logprob: -1.9279155731201172
    3. '):
' → logprob: -5.302915573120117
    4. ':' → logprob: -5.552915573120117
    5. ':
' → logprob: -5.927915573120117
    6. '```' → logprob: -6.302915573120117
    7. '(' → logprob: -7.302915573120117
    8. '    ' → logprob: -7.427915573120117
    9. '):' → logprob: -7.427915573120117
    10. '
' → logprob: -7.427915573120117

Token 2909: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16923373937606812
    2. '):' → logprob: -2.669233798980713
    3. ':' → logprob: -2.794233798980713
    4. '):
' → logprob: -4.669233798980713
    5. '       ' → logprob: -5.169233798980713
    6. '":' → logprob: -5.794233798980713
    7. ')' → logprob: -6.294233798980713
    8. ':
' → logprob: -6.294233798980713
    9. '```' → logprob: -6.919233798980713
    10. 'def' → logprob: -7.294233798980713

Token 2910: ' travel' (ID: 6410)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.5725602507591248
    2. ' segment' → logprob: -1.8225603103637695
    3. ' def' → logprob: -2.1975603103637695
    4. ' ' → logprob: -3.1975603103637695
    5. ' return' → logprob: -3.4475603103637695
    6. ' rest' → logprob: -3.9475603103637695
    7. ' next' → logprob: -4.9475603103637695
    8. ' result' → logprob: -5.1975603103637695
    9. ' segments' → logprob: -5.1975603103637695
    10. 'time' → logprob: -5.4475603103637695

Token 2911: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.7270640730857849
    2. '_time' → logprob: -0.8520640730857849
    3. '_' → logprob: -2.8520641326904297
    4. ' _' → logprob: -4.35206413269043
    5. 'time' → logprob: -5.22706413269043
    6. 's' → logprob: -5.60206413269043
    7. ' times' → logprob: -6.47706413269043
    8. '_times' → logprob: -6.47706413269043
    9. ' ' → logprob: -6.72706413269043
    10. ' is' → logprob: -6.97706413269043

Token 2912: ' is' (ID: 382)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.44032806158065796
    2. 'est' → logprob: -2.0653281211853027
    3. '=' → logprob: -2.5653281211853027
    4. ' entre' → logprob: -3.6903281211853027
    5. '   ' → logprob: -3.8153281211853027
    6. 'pour' → logprob: -3.8153281211853027
    7. 'sur' → logprob: -3.9403281211853027
    8. 'par' → logprob: -4.190328121185303
    9. 'between' → logprob: -4.190328121185303
    10. ' =' → logprob: -4.440328121185303

Token 2913: ' sum' (ID: 4215)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.3164508044719696
    2. 'interval' → logprob: -2.066450834274292
    3. '(interval' → logprob: -2.691450834274292
    4. ' (' → logprob: -3.566450834274292
    5. ' segments' → logprob: -3.816450834274292
    6. 'segments' → logprob: -4.441450595855713
    7. ' interval' → logprob: -5.316450595855713
    8. '   ' → logprob: -5.691450595855713
    9. ' segment' → logprob: -5.941450595855713
    10. '(segment' → logprob: -6.566450595855713

Token 2914: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6759717464447021
    2. '   ' → logprob: -2.175971746444702
    3. '=' → logprob: -2.175971746444702
    4. ' +' → logprob: -2.175971746444702
    5. ' des' → logprob: -2.300971746444702
    6. '+' → logprob: -2.550971746444702
    7. ' +=' → logprob: -2.675971746444702
    8. ' par' → logprob: -3.550971746444702
    9. ' of' → logprob: -3.675971746444702
    10. '*' → logprob: -3.925971746444702

Token 2915: ' segments' (ID: 33749)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.8661488890647888
    2. 'segments' → logprob: -1.1161489486694336
    3. ' segment' → logprob: -2.1161489486694336
    4. ' segments' → logprob: -2.8661489486694336
    5. '(segment' → logprob: -3.1161489486694336
    6. 'interval' → logprob: -4.616148948669434
    7. '(interval' → logprob: -5.616148948669434
    8. ' intervals' → logprob: -5.866148948669434
    9. ' (' → logprob: -6.491148948669434
    10. 'local' → logprob: -6.491148948669434

Token 2916: ' *' (ID: 425)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9034386277198792
    2. '   ' → logprob: -2.0284385681152344
    3. '_length' → logprob: -2.2784385681152344
    4. '+' → logprob: -2.7784385681152344
    5. '[i' → logprob: -3.4034385681152344
    6. ')' → logprob: -3.4034385681152344
    7. ' +' → logprob: -3.6534385681152344
    8. '_between' → logprob: -3.6534385681152344
    9. '*' → logprob: -3.7784385681152344
    10. ' between' → logprob: -4.153438568115234

Token 2917: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3156784772872925
    2. ' C' → logprob: -1.3156784772872925
    3. ' segment' → logprob: -6.815678596496582
    4. 'segment' → logprob: -7.690678596496582
    5. '_C' → logprob: -8.940678596496582
    6. '```' → logprob: -9.190678596496582
    7. ' ' → logprob: -9.690678596496582
    8. ' (' → logprob: -9.815678596496582
    9. ' segments' → logprob: -10.065678596496582
    10. ')' → logprob: -10.065678596496582

Token 2918: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3245326578617096
    2. ' *' → logprob: -2.5745327472686768
    3. '*' → logprob: -3.0745327472686768
    4. '.' → logprob: -3.4495327472686768
    5. ')' → logprob: -3.5745327472686768
    6. '       ' → logprob: -3.5745327472686768
    7. ' +' → logprob: -4.199532508850098
    8. ' =' → logprob: -4.824532508850098
    9. ',' → logprob: -4.949532508850098
    10. ':' → logprob: -4.949532508850098

Token 2919: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14015567302703857
    2. '       ' → logprob: -3.265155792236328
    3. ':' → logprob: -3.515155792236328
    4. '):
' → logprob: -4.140155792236328
    5. ')' → logprob: -4.265155792236328
    6. ':
' → logprob: -4.515155792236328
    7. '):' → logprob: -4.890155792236328
    8. '\n' → logprob: -5.390155792236328
    9. '    ' → logprob: -6.015155792236328
    10. ')
' → logprob: -6.765155792236328

Token 2920: ' However' (ID: 5551)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35280364751815796
    2. '       ' → logprob: -1.8528037071228027
    3. '\n' → logprob: -2.7278037071228027
    4. '```' → logprob: -4.102803707122803
    5. ')' → logprob: -4.227803707122803
    6. '):
' → logprob: -4.977803707122803
    7. '"""' → logprob: -5.102803707122803
    8. ' if' → logprob: -5.227803707122803
    9. '):' → logprob: -5.352803707122803
    10. '"""
' → logprob: -5.352803707122803

Token 2921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.689258098602295
    2. 'def' → logprob: -1.689258098602295
    3. '   ' → logprob: -2.064258098602295
    4. ' the' → logprob: -2.689258098602295
    5. 'the' → logprob: -2.689258098602295
    6. ' on' → logprob: -2.939258098602295
    7. ':' → logprob: -2.939258098602295
    8. ' ' → logprob: -3.189258098602295
    9. ')' → logprob: -3.439258098602295
    10. ' def' → logprob: -3.564258098602295

Token 2922: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40862125158309937
    2. ' ' → logprob: -2.033621311187744
    3. ' if' → logprob: -2.408621311187744
    4. 'if' → logprob: -3.783621311187744
    5. '#' → logprob: -3.783621311187744
    6. '        ' → logprob: -4.158621311187744
    7. '   ' → logprob: -4.658621311187744
    8. '    ' → logprob: -5.283621311187744
    9. '```' → logprob: -5.408621311187744
    10. ' il' → logprob: -5.658621311187744

Token 2923: ' reach' (ID: 7627)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.30742889642715454
    2. 're' → logprob: -2.9324288368225098
    3. 'calcul' → logprob: -3.0574288368225098
    4. 'aller' → logprob: -3.3074288368225098
    5. ' atteindre' → logprob: -3.4324288368225098
    6. 'reach' → logprob: -4.93242883682251
    7. 'acc' → logprob: -4.93242883682251
    8. 'calculate' → logprob: -5.05742883682251
    9. 'prendre' → logprob: -5.05742883682251
    10. 'arr' → logprob: -5.43242883682251

Token 2924: ' station' (ID: 11538)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.42867377400398254
    2. ' endpoint' → logprob: -1.3036737442016602
    3. 'l' → logprob: -3.42867374420166
    4. 'une' → logprob: -4.67867374420166
    5. 'la' → logprob: -4.67867374420166
    6. ' l' → logprob: -4.80367374420166
    7. ' la' → logprob: -4.80367374420166
    8. ' une' → logprob: -5.92867374420166
    9. 'un' → logprob: -6.42867374420166
    10. ' ' → logprob: -6.55367374420166

Token 2925: ' inside' (ID: 6772)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.34641045331954956
    2. '_limit' → logprob: -1.7214105129241943
    3. ' endpoint' → logprob: -2.7214105129241943
    4. ' i' → logprob: -4.221410274505615
    5. '_endpoint' → logprob: -4.221410274505615
    6. 'i' → logprob: -4.721410274505615
    7. '_' → logprob: -5.846410274505615
    8. 'limit' → logprob: -5.846410274505615
    9. '_i' → logprob: -6.596410274505615
    10. ')' → logprob: -8.221410751342773

Token 2926: ' the' (ID: 290)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2078620046377182
    2. ' l' → logprob: -2.33286190032959
    3. 'the' → logprob: -2.83286190032959
    4. ' the' → logprob: -3.95786190032959
    5. 'interval' → logprob: -5.08286190032959
    6. 'un' → logprob: -6.20786190032959
    7. 'an' → logprob: -6.83286190032959
    8. ' interval' → logprob: -7.33286190032959
    9. 'une' → logprob: -7.45786190032959
    10. ' an' → logprob: -7.58286190032959

Token 2927: ' segment' (ID: 14806)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.04500963166356087
    2. ' interval' → logprob: -3.4200096130371094
    3. 'i' → logprob: -4.920009613037109
    4. ' i' → logprob: -6.795009613037109
    5. 'segment' → logprob: -6.920009613037109
    6. 'current' → logprob: -7.670009613037109
    7. ' current' → logprob: -7.670009613037109
    8. '"' → logprob: -8.04500961303711
    9. ' segment' → logprob: -9.29500961303711
    10. '(i' → logprob: -9.79500961303711

Token 2928: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19474497437477112
    2. ' i' → logprob: -2.9447450637817383
    3. ' ,' → logprob: -3.4447450637817383
    4. '_' → logprob: -4.569745063781738
    5. '```' → logprob: -4.944745063781738
    6. ' (' → logprob: -5.069745063781738
    7. '_in' → logprob: -5.194745063781738
    8. 'i' → logprob: -5.569745063781738
    9. '_i' → logprob: -5.819745063781738
    10. ' _' → logprob: -5.819745063781738

Token 2929: ' we' (ID: 581)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.13302679359912872
    2. 'il' → logprob: -3.2580268383026123
    3. '#' → logprob: -3.6330268383026123
    4. ' on' → logprob: -3.8830268383026123
    5. 'on' → logprob: -4.508026599884033
    6. ' ' → logprob: -5.258026599884033
    7. '```' → logprob: -5.383026599884033
    8. ' la' → logprob: -5.883026599884033
    9. ' #' → logprob: -6.258026599884033
    10. 'we' → logprob: -6.258026599884033

Token 2930: ' can' (ID: 665)
  Prédit: ' devons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' devons' → logprob: -0.8321608901023865
    2. ' pouvons' → logprob: -1.5821609497070312
    3. '#' → logprob: -3.0821609497070312
    4. 'p' → logprob: -3.0821609497070312
    5. 'do' → logprob: -3.0821609497070312
    6. 'pe' → logprob: -3.3321609497070312
    7. ' pour' → logprob: -3.4571609497070312
    8. ' can' → logprob: -3.7071609497070312
    9. 'pour' → logprob: -3.7071609497070312
    10. ' ne' → logprob: -3.8321609497070312

Token 2931: ' combine' (ID: 21700)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5417137742042542
    2. 'contin' → logprob: -1.9167137145996094
    3. ' utiliser' → logprob: -2.1667137145996094
    4. 'faire' → logprob: -2.9167137145996094
    5. ' continuer' → logprob: -3.1667137145996094
    6. 'prendre' → logprob: -3.6667137145996094
    7. 'aj' → logprob: -5.166713714599609
    8. 'aller' → logprob: -5.416713714599609
    9. ' voyager' → logprob: -6.291713714599609
    10. ' faire' → logprob: -6.291713714599609

Token 2932: ' sem' (ID: 2743)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.22389154136180878
    2. ' local' → logprob: -1.7238914966583252
    3. 'le' → logprob: -4.973891735076904
    4. ' le' → logprob: -5.098891735076904
    5. 'l' → logprob: -5.598891735076904
    6. 'la' → logprob: -6.723891735076904
    7. 'the' → logprob: -6.848891735076904
    8. ' l' → logprob: -7.473891735076904
    9. ' la' → logprob: -7.848891735076904
    10. 'A' → logprob: -8.098891258239746

Token 2933: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.04249228537082672
    2. 'express' → logprob: -3.417492389678955
    3. 'i' → logprob: -6.042492389678955
    4. 'pexpr' → logprob: -6.917492389678955
    5. 'iex' → logprob: -7.042492389678955
    6. '(express' → logprob: -7.167492389678955
    7. 'ip' → logprob: -7.542492389678955
    8. 'ie' → logprob: -7.792492389678955
    9. ' express' → logprob: -8.292491912841797
    10. '_i' → logprob: -8.292491912841797

Token 2934: ' segments' (ID: 33749)
  Prédit: ' stops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.9379479289054871
    2. ',' → logprob: -2.187947988510132
    3. '_stop' → logprob: -2.312947988510132
    4. '_train' → logprob: -2.437947988510132
    5. '_' → logprob: -2.937947988510132
    6. ' _' → logprob: -3.187947988510132
    7. ' ,' → logprob: -3.312947988510132
    8. ' and' → logprob: -3.562947988510132
    9. ' segments' → logprob: -4.187947750091553
    10. ' train' → logprob: -4.187947750091553

Token 2935: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8596034049987793
    2. ' et' → logprob: -1.4846034049987793
    3. 'et' → logprob: -1.9846034049987793
    4. '+' → logprob: -2.7346034049987793
    5. ' +' → logprob: -3.2346034049987793
    6. ' and' → logprob: -3.6096034049987793
    7. 'and' → logprob: -3.9846034049987793
    8. ',' → logprob: -4.109603404998779
    9. ' plus' → logprob: -4.234603404998779
    10. 'with' → logprob: -5.234603404998779

Token 2936: ' local' (ID: 2698)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.06871450692415237
    2. ' local' → logprob: -2.9437146186828613
    3. 'le' → logprob: -4.943714618682861
    4. ' le' → logprob: -6.693714618682861
    5. 'du' → logprob: -6.943714618682861
    6. 'un' → logprob: -7.068714618682861
    7. 'A' → logprob: -7.068714618682861
    8. 'l' → logprob: -7.318714618682861
    9. 'train' → logprob: -8.068714141845703
    10. ' du' → logprob: -8.068714141845703

Token 2937: ' train' (ID: 8513)
  Prédit: ' train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' train' → logprob: -0.3794857859611511
    2. '_train' → logprob: -2.754485845565796
    3. 'train' → logprob: -3.004485845565796
    4. ' segments' → logprob: -3.129485845565796
    5. ' stops' → logprob: -3.129485845565796
    6. ' ' → logprob: -3.379485845565796
    7. ' trains' → logprob: -4.129485607147217
    8. '_stop' → logprob: -4.754485607147217
    9. ' travel' → logprob: -4.879485607147217
    10. 'segments' → logprob: -5.004485607147217

Token 2938: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8578616380691528
    2. ',' → logprob: -1.8578616380691528
    3. ')' → logprob: -2.6078615188598633
    4. ' +' → logprob: -2.7328615188598633
    5. ':' → logprob: -3.2328615188598633
    6. '       ' → logprob: -3.4828615188598633
    7. ' ' → logprob: -3.7328615188598633
    8. '+' → logprob: -3.8578615188598633
    9. '```' → logprob: -4.232861518859863
    10. '.' → logprob: -4.482861518859863

Token 2939: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3698429763317108
    2. '   ' → logprob: -2.994843006134033
    3. ':' → logprob: -3.119843006134033
    4. '(' → logprob: -3.244843006134033
    5. ')' → logprob: -3.244843006134033
    6. '):' → logprob: -3.494843006134033
    7. '):
' → logprob: -3.494843006134033
    8. '```' → logprob: -4.494843006134033
    9. '(
' → logprob: -4.869843006134033
    10. '    ' → logprob: -4.869843006134033

Token 2940: ' Local' (ID: 11274)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1022934913635254
    2. '       ' → logprob: -1.2272934913635254
    3. '   ' → logprob: -1.8522934913635254
    4. '):
' → logprob: -2.8522934913635254
    5. '```' → logprob: -2.9772934913635254
    6. ':' → logprob: -3.2272934913635254
    7. ')' → logprob: -3.6022934913635254
    8. '):' → logprob: -4.477293491363525
    9. ':
' → logprob: -5.352293491363525
    10. '
' → logprob: -5.602293491363525

Token 2941: ' train' (ID: 8513)
  Prédit: '_train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_train' → logprob: -0.3845958709716797
    2. ' train' → logprob: -1.6345958709716797
    3. 'train' → logprob: -2.7595958709716797
    4. '_time' → logprob: -4.00959587097168
    5. '_' → logprob: -4.13459587097168
    6. ' ' → logprob: -5.25959587097168
    7. '_tr' → logprob: -5.50959587097168
    8. ':' → logprob: -5.75959587097168
    9. ' _' → logprob: -6.13459587097168
    10. 'def' → logprob: -6.63459587097168

Token 2942: ' cost' (ID: 3097)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.2815408408641815
    2. 'usage' → logprob: -2.531540870666504
    3. ' =' → logprob: -3.156540870666504
    4. ':' → logprob: -3.531540870666504
    5. '=' → logprob: -4.406540870666504
    6. 'time' → logprob: -4.531540870666504
    7. 'cost' → logprob: -4.656540870666504
    8. 'use' → logprob: -4.781540870666504
    9. ' use' → logprob: -4.781540870666504
    10. 'travel' → logprob: -5.031540870666504

Token 2943: ' per' (ID: 777)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6359792351722717
    2. '=' → logprob: -0.7609792351722717
    3. ':' → logprob: -6.010979175567627
    4. '+' → logprob: -8.885979652404785
    5. ' is' → logprob: -9.010979652404785
    6. ' +' → logprob: -9.260979652404785
    7. 'A' → logprob: -9.760979652404785
    8. '   ' → logprob: -9.885979652404785
    9. ' +=' → logprob: -10.010979652404785
    10. 'is' → logprob: -10.010979652404785

Token 2944: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.006297876592725515
    2. ' segment' → logprob: -5.506298065185547
    3. 'station' → logprob: -6.631298065185547
    4. 'interval' → logprob: -7.381298065185547
    5. 'A' → logprob: -9.381298065185547
    6. '```' → logprob: -10.256298065185547
    7. 'unit' → logprob: -10.506298065185547
    8. 'step' → logprob: -10.756298065185547
    9. 'distance' → logprob: -11.006298065185547
    10. 'local' → logprob: -11.256298065185547

Token 2945: ' A' (ID: 355)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7736083269119263
    2. '=' → logprob: -1.1486083269119263
    3. 'A' → logprob: -2.0236082077026367
    4. '   ' → logprob: -2.8986082077026367
    5. ':' → logprob: -4.648608207702637
    6. ' A' → logprob: -4.648608207702637
    7. ' est' → logprob: -5.148608207702637
    8. ' ' → logprob: -5.898608207702637
    9. ' is' → logprob: -6.398608207702637
    10. ' local' → logprob: -6.648608207702637

Token 2946: ' >' (ID: 1424)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5078290700912476
    2. ')' → logprob: -1.6328290700912476
    3. ' +' → logprob: -1.7578290700912476
    4. '+' → logprob: -1.8828290700912476
    5. ' =' → logprob: -3.132829189300537
    6. '):' → logprob: -3.382829189300537
    7. ':' → logprob: -3.507829189300537
    8. '=' → logprob: -3.507829189300537
    9. '):
' → logprob: -3.507829189300537
    10. 'def' → logprob: -4.257829189300537

Token 2947: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9772173166275024
    2. ' ' → logprob: -1.9772173166275024
    3. ' segment' → logprob: -1.9772173166275024
    4. '0' → logprob: -2.352217197418213
    5. ' A' → logprob: -2.727217197418213
    6. ' local' → logprob: -2.727217197418213
    7. 'segment' → logprob: -2.852217197418213
    8. '1' → logprob: -2.852217197418213
    9. 'C' → logprob: -2.977217197418213
    10. ')' → logprob: -3.352217197418213

Token 2948: ' >' (ID: 1424)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49072685837745667
    2. '       ' → logprob: -1.8657268285751343
    3. ':' → logprob: -2.865726947784424
    4. ' ' → logprob: -4.115726947784424
    5. ')' → logprob: -4.240726947784424
    6. 'def' → logprob: -4.240726947784424
    7. ':
' → logprob: -4.365726947784424
    8. '=' → logprob: -4.365726947784424
    9. '+' → logprob: -4.490726947784424
    10. ' if' → logprob: -4.740726947784424

Token 2949: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00818699225783348
    2. ' B' → logprob: -5.7581868171691895
    3. '0' → logprob: -5.8831868171691895
    4. 'express' → logprob: -6.6331868171691895
    5. 'local' → logprob: -8.383187294006348
    6. '1' → logprob: -9.008187294006348
    7. '```' → logprob: -9.008187294006348
    8. 'A' → logprob: -9.258187294006348
    9. '#' → logprob: -9.633187294006348
    10. 'C' → logprob: -9.883187294006348

Token 2950: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4458642303943634
    2. '       ' → logprob: -1.945864200592041
    3. ')' → logprob: -3.070864200592041
    4. ':' → logprob: -3.320864200592041
    5. '):' → logprob: -3.820864200592041
    6. '):
' → logprob: -3.820864200592041
    7. '```' → logprob: -3.820864200592041
    8. 'def' → logprob: -3.945864200592041
    9. ':
' → logprob: -4.570864200592041
    10. '
' → logprob: -5.070864200592041

Token 2951: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6482463479042053
    2. ')' → logprob: -2.0232462882995605
    3. '   ' → logprob: -2.3982462882995605
    4. '):
' → logprob: -2.7732462882995605
    5. '"""
' → logprob: -2.8982462882995605
    6. ')
' → logprob: -3.1482462882995605
    7. '):' → logprob: -3.2732462882995605
    8. '
' → logprob: -4.3982462882995605
    9. 'def' → logprob: -4.7732462882995605
    10. ':
' → logprob: -4.8982462882995605

Token 2952: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08708818256855011
    2. '   ' → logprob: -3.712088108062744
    3. '```' → logprob: -3.712088108062744
    4. '"""
' → logprob: -4.087088108062744
    5. 'if' → logprob: -5.212088108062744
    6. ' if' → logprob: -5.712088108062744
    7. '"""' → logprob: -6.337088108062744
    8. ' ' → logprob: -6.837088108062744
    9. '#' → logprob: -7.087088108062744
    10. ')' → logprob: -7.212088108062744

Token 2953: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.322480320930481
    2. 'on' → logprob: -2.0724802017211914
    3. 'le' → logprob: -2.3224802017211914
    4. ' on' → logprob: -2.5724802017211914
    5. '#' → logprob: -2.6974802017211914
    6. 'local' → logprob: -2.6974802017211914
    7. 'if' → logprob: -3.3224802017211914
    8. ' le' → logprob: -3.4474802017211914
    9. ' if' → logprob: -3.9474802017211914
    10. 'return' → logprob: -4.072480201721191

Token 2954: ' minimal' (ID: 19957)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.5382211208343506
    2. ' local' → logprob: -1.5382211208343506
    3. 'best' → logprob: -3.0382211208343506
    4. 'return' → logprob: -3.1632211208343506
    5. 'def' → logprob: -4.16322135925293
    6. ' best' → logprob: -4.16322135925293
    7. 'time' → logprob: -4.41322135925293
    8. '#' → logprob: -4.53822135925293
    9. 'segment' → logprob: -4.78822135925293
    10. ' return' → logprob: -4.91322135925293

Token 2955: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.8228362202644348
    2. '_time' → logprob: -1.32283616065979
    3. 'time' → logprob: -2.32283616065979
    4. ' local' → logprob: -3.07283616065979
    5. ' segment' → logprob: -3.94783616065979
    6. ' def' → logprob: -4.447836399078369
    7. '_' → logprob: -4.447836399078369
    8. 'segment' → logprob: -4.447836399078369
    9. ' travel' → logprob: -4.822836399078369
    10. ' _' → logprob: -4.822836399078369

Token 2956: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5553030967712402
    2. '=' → logprob: -2.3053030967712402
    3. 'pour' → logprob: -2.6803030967712402
    4. ' est' → logprob: -2.9303030967712402
    5. ' pour' → logprob: -2.9303030967712402
    6. 'est' → logprob: -3.1803030967712402
    7. '   ' → logprob: -3.1803030967712402
    8. ' to' → logprob: -3.8053030967712402
    9. '       ' → logprob: -4.18030309677124
    10. 'to' → logprob: -4.55530309677124

Token 2957: ' reach' (ID: 7627)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.3465883731842041
    2. 're' → logprob: -1.721588373184204
    3. 'reach' → logprob: -2.846588373184204
    4. 'aller' → logprob: -3.971588373184204
    5. 'arr' → logprob: -4.346588134765625
    6. 'tr' → logprob: -5.596588134765625
    7. 'par' → logprob: -5.846588134765625
    8. 'prendre' → logprob: -5.846588134765625
    9. 'faire' → logprob: -6.096588134765625
    10. 'acc' → logprob: -6.846588134765625

Token 2958: ' station' (ID: 11538)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.2055511474609375
    2. ' endpoint' → logprob: -1.8305511474609375
    3. 'station' → logprob: -4.3305511474609375
    4. ' station' → logprob: -5.4555511474609375
    5. 'la' → logprob: -5.8305511474609375
    6. ' la' → logprob: -6.4555511474609375
    7. 'l' → logprob: -6.7055511474609375
    8. ' ' → logprob: -7.3305511474609375
    9. 'the' → logprob: -8.205551147460938
    10. '   ' → logprob: -8.330551147460938

Token 2959: ' k' (ID: 372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35916146636009216
    2. ' _' → logprob: -2.484161376953125
    3. ' i' → logprob: -2.734161376953125
    4. '_inside' → logprob: -3.359161376953125
    5. '_endpoint' → logprob: -4.234161376953125
    6. 'i' → logprob: -4.234161376953125
    7. '_limit' → logprob: -4.484161376953125
    8. ')' → logprob: -4.484161376953125
    9. '_in' → logprob: -4.609161376953125
    10. '_i' → logprob: -4.734161376953125

Token 2960: ' is' (ID: 382)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9523517489433289
    2. ')' → logprob: -1.8273518085479736
    3. ' )' → logprob: -2.0773518085479736
    4. ' =' → logprob: -2.8273518085479736
    5. ' ' → logprob: -2.9523518085479736
    6. '_' → logprob: -3.3273518085479736
    7. ' is' → logprob: -3.8273518085479736
    8. '   ' → logprob: -3.9523518085479736
    9. ',' → logprob: -4.3273515701293945
    10. ' _' → logprob: -4.3273515701293945

Token 2961: ' minimal' (ID: 19957)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2396234273910522
    2. 'max' → logprob: -1.9896234273910522
    3. ' (' → logprob: -2.114623546600342
    4. ' min' → logprob: -2.614623546600342
    5. 'segments' → logprob: -3.114623546600342
    6. ' segment' → logprob: -3.239623546600342
    7. 'interval' → logprob: -3.239623546600342
    8. 'segment' → logprob: -3.489623546600342
    9. '0' → logprob: -3.614623546600342
    10. 'min' → logprob: -3.739623546600342

Token 2962: ' over' (ID: 1072)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6639038324356079
    2. '+' → logprob: -2.9139037132263184
    3. ' _' → logprob: -2.9139037132263184
    4. '(
' → logprob: -3.0389037132263184
    5. '```' → logprob: -3.5389037132263184
    6. '_time' → logprob: -3.6639037132263184
    7. '"' → logprob: -3.9139037132263184
    8. ' between' → logprob: -4.038903713226318
    9. '(' → logprob: -4.038903713226318
    10. '_segment' → logprob: -4.163903713226318

Token 2963: ':
' (ID: 734)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.0579913854599
    2. 'segment' → logprob: -1.6829913854599
    3. 'les' → logprob: -1.8079913854599
    4. 'la' → logprob: -3.1829915046691895
    5. 'k' → logprob: -3.4329915046691895
    6. 'local' → logprob: -3.6829915046691895
    7. 'l' → logprob: -4.0579915046691895
    8. 'possible' → logprob: -4.0579915046691895
    9. 'le' → logprob: -4.1829915046691895
    10. '(' → logprob: -4.4329915046691895

Token 2964: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6183393597602844
    2. '(' → logprob: -2.2433393001556396
    3. ' (' → logprob: -2.2433393001556396
    4. '           ' → logprob: -3.2433393001556396
    5. '               ' → logprob: -3.4933393001556396
    6. ''' → logprob: -3.4933393001556396
    7. '(
' → logprob: -3.7433393001556396
    8. '                   ' → logprob: -4.243339538574219
    9. ' (
' → logprob: -4.243339538574219
    10. '       ' → logprob: -4.868339538574219

Token 2965: ' -' (ID: 533)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.414527416229248
    2. '(' → logprob: -1.914527416229248
    3. '(
' → logprob: -2.039527416229248
    4. 'k' → logprob: -2.414527416229248
    5. ' (' → logprob: -2.789527416229248
    6. ' (
' → logprob: -3.289527416229248
    7. '`' → logprob: -3.289527416229248
    8. 'max' → logprob: -3.414527416229248
    9. ' k' → logprob: -3.539527416229248
    10. '       ' → logprob: -3.664527416229248

Token 2966: ' using' (ID: 2360)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9675368666648865
    2. ' segment' → logprob: -1.9675369262695312
    3. 'k' → logprob: -2.4675369262695312
    4. ' k' → logprob: -2.4675369262695312
    5. 'express' → logprob: -3.3425369262695312
    6. ' (' → logprob: -3.5925369262695312
    7. '(segment' → logprob: -3.7175369262695312
    8. ' la' → logprob: -3.9675369262695312
    9. 'sem' → logprob: -4.342536926269531
    10. ' le' → logprob: -4.342536926269531

Token 2967: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.6263455152511597
    2. 'segments' → logprob: -2.376345634460449
    3. 'express' → logprob: -2.501345634460449
    4. 'local' → logprob: -2.626345634460449
    5. 'segment' → logprob: -2.626345634460449
    6. ' sem' → logprob: -3.376345634460449
    7. 'le' → logprob: -3.876345634460449
    8. ' le' → logprob: -4.126345634460449
    9. ' local' → logprob: -4.251345634460449
    10. ' segments' → logprob: -4.376345634460449

Token 2968: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.8971002697944641
    2. 'pexpr' → logprob: -1.3971002101898193
    3. 'express' → logprob: -2.0221002101898193
    4. 'i' → logprob: -2.5221002101898193
    5. '_' → logprob: -3.7721002101898193
    6. 'iex' → logprob: -3.8971002101898193
    7. '_expr' → logprob: -4.397100448608398
    8. '-' → logprob: -4.772100448608398
    9. ')' → logprob: -5.272100448608398
    10. ''' → logprob: -5.272100448608398

Token 2969: ' between' (ID: 2870)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.6440192461013794
    2. '_segments' → logprob: -1.6440192461013794
    3. 'segments' → logprob: -2.14401912689209
    4. '_train' → logprob: -3.26901912689209
    5. ',' → logprob: -3.39401912689209
    6. ')' → logprob: -3.76901912689209
    7. ' ,' → logprob: -4.76901912689209
    8. '_' → logprob: -5.01901912689209
    9. '_stop' → logprob: -5.14401912689209
    10. ' train' → logprob: -5.14401912689209

Token 2970: ' sem' (ID: 2743)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.24152548611164093
    2. 'S' → logprob: -2.616525411605835
    3. ' S' → logprob: -2.991525411605835
    4. ' segments' → logprob: -3.491525411605835
    5. 'st' → logprob: -3.991525411605835
    6. 'stations' → logprob: -4.616525650024414
    7. 'the' → logprob: -5.116525650024414
    8. 'k' → logprob: -5.366525650024414
    9. ' stops' → logprob: -6.116525650024414
    10. 'segment' → logprob: -6.116525650024414

Token 2971: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.032847870141267776
    2. 'express' → logprob: -4.407847881317139
    3. 'i' → logprob: -4.907847881317139
    4. '_i' → logprob: -5.532847881317139
    5. 'I' → logprob: -6.407847881317139
    6. 'pexpr' → logprob: -6.907847881317139
    7. '```' → logprob: -7.282847881317139
    8. '_expr' → logprob: -7.532847881317139
    9. '{"' → logprob: -7.657847881317139
    10. '[i' → logprob: -7.907847881317139

Token 2972: ' stops' (ID: 29924)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6087274551391602
    2. ' stops' → logprob: -2.23372745513916
    3. '_segments' → logprob: -2.23372745513916
    4. ' _' → logprob: -2.35872745513916
    5. '_stop' → logprob: -2.60872745513916
    6. '_st' → logprob: -3.73372745513916
    7. '_arr' → logprob: -4.35872745513916
    8. 'segments' → logprob: -4.73372745513916
    9. ' segments' → logprob: -5.10872745513916
    10. 'st' → logprob: -5.48372745513916

Token 2973: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.6422064304351807
    2. ')' → logprob: -2.1422064304351807
    3. ',' → logprob: -2.1422064304351807
    4. '```' → logprob: -2.2672064304351807
    5. '       ' → logprob: -2.6422064304351807
    6. '+' → logprob: -2.7672064304351807
    7. '   ' → logprob: -2.8922064304351807
    8. '[' → logprob: -3.5172064304351807
    9. '`' → logprob: -3.5172064304351807
    10. 's' → logprob: -3.6422064304351807

Token 2974: ' local' (ID: 2698)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.35312461853027344
    2. ' local' → logprob: -1.2281246185302734
    3. 'le' → logprob: -6.853124618530273
    4. 'A' → logprob: -7.353124618530273
    5. ' le' → logprob: -7.728124618530273
    6. 'la' → logprob: -7.853124618530273
    7. ' A' → logprob: -7.978124618530273
    8. ' la' → logprob: -8.478124618530273
    9. 'l' → logprob: -8.853124618530273
    10. '
' → logprob: -9.103124618530273

Token 2975: ' in' (ID: 306)
  Prédit: ' train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' train' → logprob: -0.5497985482215881
    2. '_train' → logprob: -1.1747984886169434
    3. '_' → logprob: -3.2997984886169434
    4. 'train' → logprob: -3.5497984886169434
    5. ' _' → logprob: -4.674798488616943
    6. ' ' → logprob: -4.924798488616943
    7. ' ' → logprob: -5.549798488616943
    8. ')' → logprob: -5.924798488616943
    9. '_tr' → logprob: -5.924798488616943
    10. '_segments' → logprob: -5.924798488616943

Token 2976: ' last' (ID: 2174)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6215559840202332
    2. 'ter' → logprob: -1.496556043624878
    3. 'the' → logprob: -3.371556043624878
    4. 'side' → logprob: -3.496556043624878
    5. 'station' → logprob: -3.621556043624878
    6. 'interval' → logprob: -3.746556043624878
    7. 'inter' → logprob: -3.746556043624878
    8. '
' → logprob: -3.871556043624878
    9. 'segments' → logprob: -3.996556043624878
    10. '```' → logprob: -4.496555805206299

Token 2977: ' segment' (ID: 14806)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -1.0417288541793823
    2. ' segment' → logprob: -1.1667288541793823
    3. 'segment' → logprob: -1.5417288541793823
    4. ' _' → logprob: -3.041728973388672
    5. '_' → logprob: -3.166728973388672
    6. '_stop' → logprob: -4.166728973388672
    7. '_segments' → logprob: -5.541728973388672
    8. ' ' → logprob: -6.291728973388672
    9. '```' → logprob: -6.791728973388672
    10. ' ' → logprob: -7.041728973388672

Token 2978: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9117224812507629
    2. ':' → logprob: -1.7867224216461182
    3. '       ' → logprob: -1.9117224216461182
    4. '(i' → logprob: -3.161722421646118
    5. '"' → logprob: -3.286722421646118
    6. '(
' → logprob: -3.786722421646118
    7. ')' → logprob: -4.036722660064697
    8. '(' → logprob: -4.161722660064697
    9. '```' → logprob: -4.161722660064697
    10. '):' → logprob: -4.286722660064697

Token 2979: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3686961829662323
    2. ')' → logprob: -1.8686962127685547
    3. ':' → logprob: -3.4936962127685547
    4. '   ' → logprob: -4.118696212768555
    5. '):' → logprob: -4.118696212768555
    6. '(' → logprob: -4.368696212768555
    7. '\n' → logprob: -4.493696212768555
    8. '(
' → logprob: -4.618696212768555
    9. ')
' → logprob: -4.743696212768555
    10. '):
' → logprob: -4.868696212768555

Token 2980: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9764102101325989
    2. ':' → logprob: -1.851410150527954
    3. '"' → logprob: -2.851410150527954
    4. '```' → logprob: -2.976410150527954
    5. '   ' → logprob: -3.101410150527954
    6. '    ' → logprob: -3.226410150527954
    7. '(' → logprob: -3.226410150527954
    8. '        ' → logprob: -3.351410150527954
    9. '(
' → logprob: -3.601410150527954
    10. ')' → logprob: -3.976410150527954

Token 2981: ' approximate' (ID: 68753)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5765634775161743
    2. 'continue' → logprob: -1.5765634775161743
    3. 'def' → logprob: -2.3265633583068848
    4. 's' → logprob: -3.4515633583068848
    5. 'do' → logprob: -3.9515633583068848
    6. 'vais' → logprob: -4.201563358306885
    7. 'n' → logprob: -4.326563358306885
    8. ' def' → logprob: -5.201563358306885
    9. 'contin' → logprob: -5.326563358306885
    10. '#' → logprob: -5.576563358306885

Token 2982: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.100091814994812
    2. '       ' → logprob: -1.100091814994812
    3. '   ' → logprob: -2.3500919342041016
    4. '```' → logprob: -2.7250919342041016
    5. '        ' → logprob: -3.4750919342041016
    6. ' ' → logprob: -3.7250919342041016
    7. ' =' → logprob: -4.350091934204102
    8. '           ' → logprob: -4.600091934204102
    9. '    ' → logprob: -4.725091934204102
    10. ':
' → logprob: -4.975091934204102

Token 2983: ':
' (ID: 734)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.98196941614151
    2. 'calcul' → logprob: -1.6069693565368652
    3. 'lambda' → logprob: -1.9819693565368652
    4. '```' → logprob: -2.7319693565368652
    5. 'def' → logprob: -2.9819693565368652
    6. 'max' → logprob: -3.2319693565368652
    7. '       ' → logprob: -3.4819693565368652
    8. 'segment' → logprob: -3.8569693565368652
    9. '   ' → logprob: -4.231969356536865
    10. 'x' → logprob: -4.856969356536865

Token 2984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08618994057178497
    2. '```' → logprob: -2.5861899852752686
    3. '           ' → logprob: -6.4611897468566895
    4. '   ' → logprob: -6.7111897468566895
    5. '``' → logprob: -6.7111897468566895
    6. '        ' → logprob: -7.5861897468566895
    7. ' (' → logprob: -7.8361897468566895
    8. ' ' → logprob: -7.8361897468566895
    9. '(' → logprob: -7.9611897468566895
    10. '`' → logprob: -8.586190223693848

Token 2985: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06967762857675552
    2. '```' → logprob: -4.194677829742432
    3. '   ' → logprob: -4.694677829742432
    4. '        ' → logprob: -4.819677829742432
    5. '"' → logprob: -4.944677829742432
    6. ' if' → logprob: -5.569677829742432
    7. ' ' → logprob: -5.694677829742432
    8. 'return' → logprob: -5.694677829742432
    9. '           ' → logprob: -5.944677829742432
    10. 'if' → logprob: -6.069677829742432

Token 2986: ' Cutting' (ID: 99749)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.0417670011520386
    2. '       ' → logprob: -1.5417670011520386
    3. ' segment' → logprob: -2.416767120361328
    4. '#' → logprob: -2.791767120361328
    5. '   ' → logprob: -4.041767120361328
    6. 'segments' → logprob: -4.041767120361328
    7. 'local' → logprob: -4.166767120361328
    8. ' #' → logprob: -4.291767120361328
    9. 'calcul' → logprob: -4.291767120361328
    10. 'def' → logprob: -4.416767120361328

Token 2987: ' interval' (ID: 17116)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.199486255645752
    2. 'the' → logprob: -1.199486255645752
    3. 'interval' → logprob: -2.949486255645752
    4. 'off' → logprob: -3.574486255645752
    5. ' (' → logprob: -3.699486255645752
    6. 'l' → logprob: -3.699486255645752
    7. 'le' → logprob: -4.074486255645752
    8. ' off' → logprob: -4.074486255645752
    9. '```' → logprob: -4.074486255645752
    10. 'point' → logprob: -4.199486255645752

Token 2988: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0383538007736206
    2. '[i' → logprob: -1.5383538007736206
    3. '_' → logprob: -2.41335391998291
    4. '`' → logprob: -3.16335391998291
    5. ' en' → logprob: -3.41335391998291
    6. '```' → logprob: -3.41335391998291
    7. '   ' → logprob: -3.53835391998291
    8. ' _' → logprob: -3.53835391998291
    9. '[' → logprob: -3.66335391998291
    10. 's' → logprob: -4.16335391998291

Token 2989: ' in' (ID: 306)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.266490638256073
    2. 'en' → logprob: -2.1414906978607178
    3. ' into' → logprob: -2.7664906978607178
    4. '   ' → logprob: -4.391490459442139
    5. '_' → logprob: -5.141490459442139
    6. '       ' → logprob: -5.266490459442139
    7. '```' → logprob: -5.391490459442139
    8. '_en' → logprob: -5.516490459442139
    9. ' in' → logprob: -5.641490459442139
    10. '[i' → logprob: -5.641490459442139

Token 2990: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.3994332253932953
    2. 'x' → logprob: -1.7744332551956177
    3. '(x' → logprob: -3.149433135986328
    4. '2' → logprob: -3.524433135986328
    5. ' segments' → logprob: -3.649433135986328
    6. ' x' → logprob: -4.524433135986328
    7. 'parts' → logprob: -4.774433135986328
    8. '```' → logprob: -4.899433135986328
    9. ' (' → logprob: -5.024433135986328
    10. 'segment' → logprob: -5.774433135986328

Token 2991: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2035155296325684
    2. ')' → logprob: -1.5785155296325684
    3. '       ' → logprob: -2.0785155296325684
    4. '```' → logprob: -2.0785155296325684
    5. '[i' → logprob: -2.5785155296325684
    6. ':' → logprob: -3.3285155296325684
    7. ' =' → logprob: -3.5785155296325684
    8. '=' → logprob: -4.328515529632568
    9. '):' → logprob: -4.453515529632568
    10. '(i' → logprob: -4.703515529632568

Token 2992: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6976160407066345
    2. 'long' → logprob: -2.3226161003112793
    3. 'tail' → logprob: -2.5726161003112793
    4. 'segment' → logprob: -2.6976161003112793
    5. 'interval' → logprob: -2.8226161003112793
    6. 'segments' → logprob: -2.8226161003112793
    7. '(interval' → logprob: -3.8226161003112793
    8. 'x' → logprob: -4.197616100311279
    9. 'l' → logprob: -4.322616100311279
    10. '(x' → logprob: -4.447616100311279

Token 2993: ' segment' (ID: 14806)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6969394087791443
    2. '(interval' → logprob: -2.071939468383789
    3. ' =' → logprob: -2.696939468383789
    4. ' intervals' → logprob: -3.196939468383789
    5. 'interval' → logprob: -3.321939468383789
    6. '```' → logprob: -3.446939468383789
    7. '(x' → logprob: -3.696939468383789
    8. ')' → logprob: -3.696939468383789
    9. '=' → logprob: -3.821939468383789
    10. '   ' → logprob: -4.196939468383789

Token 2994: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.04566490277647972
    2. '_len' → logprob: -3.5456647872924805
    3. '_' → logprob: -4.7956647872924805
    4. '_size' → logprob: -5.5456647872924805
    5. ' =' → logprob: -6.7956647872924805
    6. '_l' → logprob: -7.0456647872924805
    7. ' _' → logprob: -8.17066478729248
    8. 's' → logprob: -8.17066478729248
    9. '_
' → logprob: -8.79566478729248
    10. '=' → logprob: -9.54566478729248

Token 2995: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9567896127700806
    2. '   ' → logprob: -1.5817896127700806
    3. ' =' → logprob: -2.706789493560791
    4. '[i' → logprob: -2.706789493560791
    5. ')' → logprob: -2.956789493560791
    6. ':' → logprob: -3.331789493560791
    7. '=' → logprob: -3.706789493560791
    8. '(i' → logprob: -3.956789493560791
    9. ':
' → logprob: -4.206789493560791
    10. ' +' → logprob: -4.331789493560791

Token 2996: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0172197874635458
    2. '(interval' → logprob: -4.3922200202941895
    3. ' intervals' → logprob: -5.3922200202941895
    4. '   ' → logprob: -9.642219543457031
    5. '       ' → logprob: -10.642219543457031
    6. ' (' → logprob: -10.767219543457031
    7. '```' → logprob: -11.892219543457031
    8. '(' → logprob: -12.517219543457031
    9. '`' → logprob: -12.517219543457031
    10. '           ' → logprob: -12.642219543457031

Token 2997: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001483564410591498
    2. '[' → logprob: -9.50014877319336
    3. 'i' → logprob: -10.75014877319336
    4. '```' → logprob: -11.25014877319336
    5. ']' → logprob: -11.62514877319336
    6. '   ' → logprob: -12.50014877319336
    7. '_i' → logprob: -12.62514877319336
    8. '       ' → logprob: -12.75014877319336
    9. '][' → logprob: -13.12514877319336
    10. ' [' → logprob: -13.12514877319336

Token 2998: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.051505137234926224
    2. '[i' → logprob: -3.0515050888061523
    3. '//' → logprob: -7.051505088806152
    4. ']/' → logprob: -7.051505088806152
    5. '   ' → logprob: -8.176505088806152
    6. '/(' → logprob: -8.426505088806152
    7. '/' → logprob: -9.051505088806152
    8. ' /' → logprob: -9.551505088806152
    9. 'i' → logprob: -9.551505088806152
    10. '-' → logprob: -9.551505088806152

Token 2999: ' //' (ID: 602)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -1.0493369102478027
    2. '/(' → logprob: -1.6743369102478027
    3. '/' → logprob: -2.1743369102478027
    4. '[i' → logprob: -2.4243369102478027
    5. '//' → logprob: -2.5493369102478027
    6. ' //' → logprob: -2.5493369102478027
    7. '   ' → logprob: -2.7993369102478027
    8. '       ' → logprob: -4.924336910247803
    9. 'def' → logprob: -5.049336910247803
    10. ' ' → logprob: -5.424336910247803

Token 3000: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03440789133310318
    2. ' (' → logprob: -3.5344078540802
    3. '(i' → logprob: -5.409408092498779
    4. '(' → logprob: -8.909407615661621
    5. '   ' → logprob: -11.534407615661621
    6. 'x' → logprob: -11.534407615661621
    7. '       ' → logprob: -11.784407615661621
    8. '`' → logprob: -12.909407615661621
    9. ' ' → logprob: -13.409407615661621
    10. '           ' → logprob: -14.159407615661621

Token 3001: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.017956651747226715
    2. ' (' → logprob: -4.142956733703613
    3. 'x' → logprob: -6.267956733703613
    4. '   ' → logprob: -11.892956733703613
    5. '(' → logprob: -12.517956733703613
    6. ' x' → logprob: -12.892956733703613
    7. '
' → logprob: -12.892956733703613
    8. '       ' → logprob: -13.142956733703613
    9. '`' → logprob: -13.517956733703613
    10. '(
' → logprob: -13.767956733703613

Token 3002: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008322591311298311
    2. ' -' → logprob: -7.1258320808410645
    3. ')' → logprob: -10.875832557678223
    4. '[' → logprob: -12.375832557678223
    5. '[-' → logprob: -14.250832557678223
    6. '       ' → logprob: -14.250832557678223
    7. ')-' → logprob: -14.500832557678223
    8. '#' → logprob: -14.625832557678223
    9. '+' → logprob: -15.000832557678223
    10. '   ' → logprob: -15.125832557678223

Token 3003: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.310693111619912e-05
    2. ' ' → logprob: -10.375042915344238
    3. '   ' → logprob: -12.000042915344238
    4. '```' → logprob: -13.000042915344238
    5. '<|end|>' → logprob: -13.875042915344238
    6. ')' → logprob: -14.375042915344238
    7. '       ' → logprob: -14.375042915344238
    8. '-' → logprob: -15.125042915344238
    9. '[' → logprob: -15.250042915344238
    10. '           ' → logprob: -16.000043869018555

Token 3004: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09185218811035156
    2. ')
' → logprob: -2.5918521881103516
    3. ' +' → logprob: -5.966852188110352
    4. '+' → logprob: -5.966852188110352
    5. ']' → logprob: -6.216852188110352
    6. ')+' → logprob: -6.716852188110352
    7. '   ' → logprob: -7.091852188110352
    8. '       ' → logprob: -7.091852188110352
    9. '])' → logprob: -7.591852188110352
    10. ' )' → logprob: -8.091852188110352

Token 3005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2174062579870224
    2. ' =' → logprob: -3.0924062728881836
    3. ' +' → logprob: -3.2174062728881836
    4. ')' → logprob: -3.4674062728881836
    5. '   ' → logprob: -3.9674062728881836
    6. '=' → logprob: -4.592406272888184
    7. '):
' → logprob: -4.967406272888184
    8. '+' → logprob: -5.592406272888184
    9. '           ' → logprob: -5.842406272888184
    10. ':' → logprob: -5.842406272888184

Token 3006: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07973165810108185
    2. ' +' → logprob: -3.5797317028045654
    3. ' =' → logprob: -4.704731464385986
    4. '=' → logprob: -4.829731464385986
    5. ',' → logprob: -5.454731464385986
    6. ')' → logprob: -5.579731464385986
    7. '+' → logprob: -5.579731464385986
    8. ':' → logprob: -5.954731464385986
    9. '#' → logprob: -6.079731464385986
    10. '           ' → logprob: -6.329731464385986

Token 3007: ' station' (ID: 11538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49327871203422546
    2. 'segment' → logprob: -2.368278741836548
    3. 'return' → logprob: -2.743278741836548
    4. '```' → logprob: -3.118278741836548
    5. ' segment' → logprob: -3.243278741836548
    6. 'def' → logprob: -3.493278741836548
    7. '
' → logprob: -3.868278741836548
    8. ' return' → logprob: -4.243278503417969
    9. 'rest' → logprob: -4.493278503417969
    10. '#' → logprob: -4.868278503417969

Token 3008: '_offset' (ID: 15447)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19661015272140503
    2. '_length' → logprob: -2.57161021232605
    3. '_limit' → logprob: -2.94661021232605
    4. ' _' → logprob: -4.196609973907471
    5. ')' → logprob: -4.571609973907471
    6. '[i' → logprob: -5.946609973907471
    7. '_i' → logprob: -6.571609973907471
    8. 's' → logprob: -6.696609973907471
    9. ')_' → logprob: -6.696609973907471
    10. '[' → logprob: -6.821609973907471

Token 3009: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08869940042495728
    2. '=' → logprob: -2.5886993408203125
    3. 's' → logprob: -5.9636993408203125
    4. '+' → logprob: -6.7136993408203125
    5. '_length' → logprob: -6.8386993408203125
    6. ' +' → logprob: -6.8386993408203125
    7. ' +=' → logprob: -8.213699340820312
    8. '       ' → logprob: -8.213699340820312
    9. '```' → logprob: -8.213699340820312
    10. '_in' → logprob: -8.338699340820312

Token 3010: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.3864034414291382
    2. ' endpoint' → logprob: -2.1364035606384277
    3. 'station' → logprob: -2.2614035606384277
    4. ' station' → logprob: -2.3864035606384277
    5. 'interval' → logprob: -6.011403560638428
    6. ' S' → logprob: -7.011403560638428
    7. '   ' → logprob: -7.761403560638428
    8. 'S' → logprob: -7.761403560638428
    9. '(endpoint' → logprob: -8.26140308380127
    10. '"' → logprob: -8.38640308380127

Token 3011: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03695709630846977
    2. '-' → logprob: -3.911957025527954
    3. ' +' → logprob: -5.661957263946533
    4. ' if' → logprob: -6.036957263946533
    5. ' =' → logprob: -6.161957263946533
    6. '[i' → logprob: -6.536957263946533
    7. '=' → logprob: -6.786957263946533
    8. '+' → logprob: -6.786957263946533
    9. ')' → logprob: -7.161957263946533
    10. ',' → logprob: -7.911957263946533

Token 3012: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -7.290784560609609e-05
    2. ' S' → logprob: -9.625072479248047
    3. '   ' → logprob: -12.500072479248047
    4. '```' → logprob: -13.500072479248047
    5. '`' → logprob: -14.375072479248047
    6. '           ' → logprob: -15.125072479248047
    7. '(S' → logprob: -15.250072479248047
    8. '       ' → logprob: -16.250072479248047
    9. '[S' → logprob: -16.625072479248047
    10. '[' → logprob: -16.750072479248047

Token 3013: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.523948907968588e-05
    2. 'i' → logprob: -10.375035285949707
    3. '   ' → logprob: -14.250035285949707
    4. '```' → logprob: -14.250035285949707
    5. '       ' → logprob: -14.500035285949707
    6. ' i' → logprob: -14.875035285949707
    7. '[' → logprob: -14.875035285949707
    8. '[
' → logprob: -15.000035285949707
    9. ',i' → logprob: -15.375035285949707
    10. ']' → logprob: -15.875035285949707

Token 3014: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45066991448402405
    2. ']
' → logprob: -1.7006698846817017
    3. '[i' → logprob: -2.450670003890991
    4. ')' → logprob: -2.825670003890991
    5. '])' → logprob: -4.450669765472412
    6. ']+' → logprob: -4.825669765472412
    7. ')
' → logprob: -5.575669765472412
    8. '       ' → logprob: -5.700669765472412
    9. '+' → logprob: -6.200669765472412
    10. '])
' → logprob: -6.950669765472412

Token 3015: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010246959514915943
    2. ')' → logprob: -5.885246753692627
    3. '   ' → logprob: -6.010246753692627
    4. ' +' → logprob: -6.635246753692627
    5. '           ' → logprob: -7.010246753692627
    6. ' =' → logprob: -7.635246753692627
    7. '```' → logprob: -8.385247230529785
    8. ')
' → logprob: -8.510247230529785
    9. '
' → logprob: -8.510247230529785
    10. '):
' → logprob: -8.635247230529785

Token 3016: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10648452490568161
    2. '\n' → logprob: -3.2314844131469727
    3. '"' → logprob: -4.731484413146973
    4. '   ' → logprob: -5.231484413146973
    5. ':' → logprob: -5.356484413146973
    6. '
' → logprob: -5.356484413146973
    7. '```' → logprob: -5.356484413146973
    8. '           ' → logprob: -5.606484413146973
    9. '#' → logprob: -5.606484413146973
    10. '\' → logprob: -5.981484413146973

Token 3017: ' find' (ID: 1646)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3843393623828888
    2. ' =' → logprob: -2.0093393325805664
    3. 'continue' → logprob: -3.2593393325805664
    4. '=' → logprob: -3.3843393325805664
    5. ' return' → logprob: -3.6343393325805664
    6. '   ' → logprob: -4.509339332580566
    7. '       ' → logprob: -4.634339332580566
    8. 'def' → logprob: -5.009339332580566
    9. '```' → logprob: -5.009339332580566
    10. ' def' → logprob: -5.759339332580566

Token 3018: ' in' (ID: 306)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.3842116892337799
    2. 'the' → logprob: -2.259211778640747
    3. '(segment' → logprob: -3.384211778640747
    4. '(x' → logprob: -3.384211778640747
    5. '```' → logprob: -3.384211778640747
    6. 'x' → logprob: -3.634211778640747
    7. ' (' → logprob: -4.259211540222168
    8. 'which' → logprob: -4.634211540222168
    9. 'le' → logprob: -5.009211540222168
    10. '`' → logprob: -5.259211540222168

Token 3019: ' which' (ID: 1118)
  Prédit: 'quel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quel' → logprob: -0.41582128405570984
    2. 'quelle' → logprob: -1.4158213138580322
    3. ' quelle' → logprob: -3.4158213138580322
    4. 'which' → logprob: -3.7908213138580322
    5. '```' → logprob: -4.040821075439453
    6. ' quel' → logprob: -4.915821075439453
    7. 'def' → logprob: -5.290821075439453
    8. 'segment' → logprob: -6.165821075439453
    9. 'token' → logprob: -6.540821075439453
    10. 'x' → logprob: -6.665821075439453

Token 3020: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.017516309395432472
    2. ' segment' → logprob: -4.267516136169434
    3. 'interval' → logprob: -7.017516136169434
    4. 'segments' → logprob: -8.142516136169434
    5. 'x' → logprob: -8.267516136169434
    6. '(segment' → logprob: -8.267516136169434
    7. '```' → logprob: -8.392516136169434
    8. '_segment' → logprob: -8.392516136169434
    9. '
' → logprob: -8.517516136169434
    10. '   ' → logprob: -8.767516136169434

Token 3021: ' station' (ID: 11538)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3455967307090759
    2. 'endpoint' → logprob: -2.2205967903137207
    3. 'segment' → logprob: -3.2205967903137207
    4. ' the' → logprob: -3.8455967903137207
    5. 'idx' → logprob: -4.220596790313721
    6. '_' → logprob: -4.220596790313721
    7. '```' → logprob: -4.345596790313721
    8. 'x' → logprob: -5.220596790313721
    9. '(segment' → logprob: -5.220596790313721
    10. 'index' → logprob: -5.220596790313721

Token 3022: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.14710380136966705
    2. '_' → logprob: -2.147103786468506
    3. '_index' → logprob: -5.897103786468506
    4. 'i' → logprob: -6.397103786468506
    5. '_pos' → logprob: -6.397103786468506
    6. 'offset' → logprob: -6.397103786468506
    7. '_i' → logprob: -6.397103786468506
    8. '       ' → logprob: -6.522103786468506
    9. '[i' → logprob: -6.772103786468506
    10. '_limit' → logprob: -6.772103786468506

Token 3023: ' falls' (ID: 25709)
  Prédit: '_offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.9972028136253357
    2. '_segment' → logprob: -1.9972028732299805
    3. ' =' → logprob: -2.4972028732299805
    4. '_' → logprob: -2.4972028732299805
    5. '_in' → logprob: -2.6222028732299805
    6. '=' → logprob: -2.8722028732299805
    7. '_pos' → logprob: -3.4972028732299805
    8. '_idx' → logprob: -3.4972028732299805
    9. '_is' → logprob: -3.9972028732299805
    10. '_index' → logprob: -4.3722028732299805

Token 3024: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1884317249059677
    2. ' =' → logprob: -2.438431739807129
    3. ':' → logprob: -3.688431739807129
    4. '=' → logprob: -4.313431739807129
    5. ':
' → logprob: -4.688431739807129
    6. '   ' → logprob: -4.813431739807129
    7. ',' → logprob: -5.688431739807129
    8. '(i' → logprob: -5.813431739807129
    9. ' if' → logprob: -5.938431739807129
    10. ' (' → logprob: -6.063431739807129

Token 3025: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5902161002159119
    2. '       ' → logprob: -1.9652161598205566
    3. '(' → logprob: -2.3402161598205566
    4. '``' → logprob: -3.0902161598205566
    5. '`' → logprob: -3.2152161598205566
    6. ' (' → logprob: -4.215216159820557
    7. '#' → logprob: -4.465216159820557
    8. '(
' → logprob: -4.840216159820557
    9. '        ' → logprob: -4.965216159820557
    10. '           ' → logprob: -4.965216159820557

Token 3026: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29509833455085754
    2. 'pos' → logprob: -3.295098304748535
    3. '```' → logprob: -3.295098304748535
    4. 'segment' (adapté à ' segment') → logprob: -4.045098304748535
    5. '#' → logprob: -4.170098304748535
    6. ' segment' → logprob: -4.170098304748535
    7. ' pos' → logprob: -4.420098304748535
    8. '"' → logprob: -4.545098304748535
    9. '``' → logprob: -4.670098304748535
    10. '           ' → logprob: -4.795098304748535

Token 3027: ' index' (ID: 3472)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.6222327947616577
    2. '_idx' → logprob: -1.7472327947616577
    3. '_length' → logprob: -1.9972327947616577
    4. '_start' → logprob: -2.8722329139709473
    5. '_' → logprob: -2.9972329139709473
    6. '_len' → logprob: -3.7472329139709473
    7. ' =' → logprob: -4.872232913970947
    8. '_size' → logprob: -5.372232913970947
    9. '_offset' → logprob: -5.747232913970947
    10. '_pos' → logprob: -6.122232913970947

Token 3028: ' s' (ID: 265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2968224585056305
    2. '=' → logprob: -1.421822428703308
    3. ',' → logprob: -6.046822547912598
    4. '```' → logprob: -6.171822547912598
    5. '=i' → logprob: -6.296822547912598
    6. ')' → logprob: -6.671822547912598
    7. '=
' → logprob: -6.921822547912598
    8. ' =
' → logprob: -7.046822547912598
    9. '[i' → logprob: -7.046822547912598
    10. 'i' → logprob: -7.171822547912598

Token 3029: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05998401716351509
    2. '=' → logprob: -2.934983968734741
    3. 's' → logprob: -5.80998420715332
    4. ' s' → logprob: -7.43498420715332
    5. ')' → logprob: -8.43498420715332
    6. ',' → logprob: -8.68498420715332
    7. '=s' → logprob: -8.80998420715332
    8. '```' → logprob: -8.80998420715332
    9. '       ' → logprob: -9.18498420715332
    10. ' =
' → logprob: -9.30998420715332

Token 3030: ' (' (ID: 350)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.856487512588501
    2. 'endpoint' → logprob: -0.981487512588501
    3. 's' → logprob: -2.731487512588501
    4. 'x' → logprob: -3.606487512588501
    5. ' s' → logprob: -3.856487512588501
    6. 'int' → logprob: -4.106487274169922
    7. ' endpoint' → logprob: -4.356487274169922
    8. ' segment' → logprob: -4.606487274169922
    9. 'station' → logprob: -4.856487274169922
    10. ' (' → logprob: -4.856487274169922

Token 3031: 'station' (ID: 27999)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.6055359244346619
    2. 'station' → logprob: -1.1055359840393066
    3. 'offset' → logprob: -2.9805359840393066
    4. 'segment' → logprob: -3.2305359840393066
    5. 's' → logprob: -4.230535984039307
    6. 'x' → logprob: -5.730535984039307
    7. 'int' → logprob: -5.730535984039307
    8. ' station' → logprob: -6.480535984039307
    9. '       ' → logprob: -6.480535984039307
    10. '   ' → logprob: -6.605535984039307

Token 3032: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.0033229112159460783
    2. '_' → logprob: -6.128323078155518
    3. '_index' → logprob: -8.00332260131836
    4. ' _' → logprob: -8.00332260131836
    5. '_length' → logprob: -9.75332260131836
    6. '_
' → logprob: -10.12832260131836
    7. ')' → logprob: -10.12832260131836
    8. '   ' → logprob: -10.25332260131836
    9. ')_' → logprob: -10.25332260131836
    10. '[' → logprob: -10.50332260131836

Token 3033: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2740055322647095
    2. ' //' → logprob: -1.5240055322647095
    3. '//' → logprob: -4.64900541305542
    4. ')//' → logprob: -5.77400541305542
    5. '-' → logprob: -5.89900541305542
    6. ' -' → logprob: -6.02400541305542
    7. '+' → logprob: -7.52400541305542
    8. ' ' → logprob: -7.64900541305542
    9. 's' → logprob: -8.024005889892578
    10. '[' → logprob: -8.149005889892578

Token 3034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.375036239624023
    3. '```' → logprob: -13.250036239624023
    4. ')' → logprob: -14.000036239624023
    5. '   ' → logprob: -15.000036239624023
    6. '       ' → logprob: -15.250036239624023
    7. '                               ' → logprob: -15.375036239624023
    8. '                                           ' → logprob: -15.625036239624023
    9. '                       ' → logprob: -15.750036239624023
    10. '...' → logprob: -16.000036239624023

Token 3035: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021482642740011215
    2. ')//' → logprob: -3.8964827060699463
    3. ')
' → logprob: -8.646482467651367
    4. '//' → logprob: -9.146482467651367
    5. '[' → logprob: -9.646482467651367
    6. '+' → logprob: -9.646482467651367
    7. '```' → logprob: -9.646482467651367
    8. ' )' → logprob: -9.896482467651367
    9. ' //' → logprob: -9.896482467651367
    10. '       ' → logprob: -10.021482467651367

Token 3036: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.31906789541244507
    2. '//' → logprob: -1.8190679550170898
    3. '```' → logprob: -3.06906795501709
    4. ')' → logprob: -3.69406795501709
    5. 's' → logprob: -4.06906795501709
    6. '[' → logprob: -5.69406795501709
    7. '``' → logprob: -6.06906795501709
    8. '
' → logprob: -6.56906795501709
    9. ']' → logprob: -6.56906795501709
    10. '=' → logprob: -6.56906795501709

Token 3037: ' segment' (ID: 14806)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7667353749275208
    2. 'segment' → logprob: -1.266735315322876
    3. '(segment' → logprob: -2.141735315322876
    4. ' ((' → logprob: -3.016735315322876
    5. ' (' → logprob: -3.141735315322876
    6. ' segment' → logprob: -4.266735553741455
    7. '(interval' → logprob: -4.516735553741455
    8. '(' → logprob: -4.891735553741455
    9. '(x' → logprob: -5.266735553741455
    10. 'segments' → logprob: -5.891735553741455

Token 3038: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.007028996478766203
    2. '_' → logprob: -6.507029056549072
    3. '_len' → logprob: -6.632029056549072
    4. 's' → logprob: -6.757029056549072
    5. '_index' → logprob: -7.132029056549072
    6. '_count' → logprob: -7.507029056549072
    7. '_size' → logprob: -8.132028579711914
    8. 'length' → logprob: -8.257028579711914
    9. ' _' → logprob: -9.007028579711914
    10. '   ' → logprob: -9.132028579711914

Token 3039: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8025648593902588
    2. 's' → logprob: -2.177564859390259
    3. ')' → logprob: -2.552564859390259
    4. '       ' → logprob: -2.677564859390259
    5. '[
' → logprob: -2.677564859390259
    6. '```' → logprob: -2.677564859390259
    7. '\n' → logprob: -3.052564859390259
    8. '+' → logprob: -3.302564859390259
    9. '[i' → logprob: -3.552564859390259
    10. ':
' → logprob: -3.677564859390259

Token 3040: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1335349082946777
    2. 's' → logprob: -1.3835349082946777
    3. '       ' → logprob: -1.8835349082946777
    4. ')' → logprob: -2.7585349082946777
    5. ' +' → logprob: -3.3835349082946777
    6. ' s' → logprob: -3.6335349082946777
    7. '\n' → logprob: -4.258534908294678
    8. '+' → logprob: -4.258534908294678
    9. '[' → logprob: -4.383534908294678
    10. '``' → logprob: -4.383534908294678

Token 3041: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6416079998016357
    2. '```' → logprob: -1.6416079998016357
    3. 's' → logprob: -2.1416079998016357
    4. '
' → logprob: -3.6416079998016357
    5. '\n' → logprob: -3.7666079998016357
    6. ')' → logprob: -4.016608238220215
    7. 'return' → logprob: -4.016608238220215
    8. ' s' → logprob: -4.641608238220215
    9. '(s' → logprob: -4.766608238220215
    10. '\t' → logprob: -5.016608238220215

Token 3042: ' distance' (ID: 9324)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.13458001613616943
    2. 'time' → logprob: -3.884580135345459
    3. '```' → logprob: -3.884580135345459
    4. 'local' → logprob: -3.884580135345459
    5. '       ' → logprob: -4.384580135345459
    6. 'return' → logprob: -4.759580135345459
    7. 'rest' → logprob: -5.134580135345459
    8. '
' → logprob: -5.134580135345459
    9. ' segment' → logprob: -5.259580135345459
    10. 'start' → logprob: -5.759580135345459

Token 3043: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2265052795410156
    2. '_to' → logprob: -1.8515052795410156
    3. '=' → logprob: -2.2265052795410156
    4. 's' → logprob: -2.3515052795410156
    5. '_' → logprob: -2.3515052795410156
    6. '_offset' → logprob: -2.7265052795410156
    7. '_s' → logprob: -2.9765052795410156
    8. '_in' → logprob: -3.3515052795410156
    9. '_between' → logprob: -3.4765052795410156
    10. '_rest' → logprob: -3.8515052795410156

Token 3044: ' start' (ID: 1604)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1826566755771637
    2. 'segment' → logprob: -2.182656764984131
    3. ' S' → logprob: -3.932656764984131
    4. 'the' → logprob: -4.182656764984131
    5. 'start' → logprob: -5.057656764984131
    6. ' segment' → logprob: -5.682656764984131
    7. 'last' → logprob: -6.682656764984131
    8. 'station' → logprob: -6.807656764984131
    9. 'previous' → logprob: -6.807656764984131
    10. ' the' → logprob: -6.932656764984131

Token 3045: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8123229742050171
    2. '_' → logprob: -1.937322974205017
    3. '_s' → logprob: -2.1873230934143066
    4. '_segment' → logprob: -2.5623230934143066
    5. '_offset' → logprob: -3.0623230934143066
    6. ' =' → logprob: -3.0623230934143066
    7. '_to' → logprob: -3.5623230934143066
    8. '=' → logprob: -3.6873230934143066
    9. '```' → logprob: -4.562323093414307
    10. 'segment' → logprob: -4.562323093414307

Token 3046: ' this' (ID: 495)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.041953813284635544
    2. 'the' → logprob: -3.4169538021087646
    3. ' segment' → logprob: -5.291954040527344
    4. ' the' → logprob: -7.041954040527344
    5. 'current' → logprob: -7.041954040527344
    6. 'interval' → logprob: -7.416954040527344
    7. 'that' → logprob: -8.166954040527344
    8. 'S' → logprob: -9.541954040527344
    9. 'this' → logprob: -9.541954040527344
    10. '   ' → logprob: -9.541954040527344

Token 3047: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.16657836735248566
    2. ' segment' → logprob: -1.9165784120559692
    3. 'interval' → logprob: -5.41657829284668
    4. ' interval' → logprob: -7.79157829284668
    5. '   ' → logprob: -8.54157829284668
    6. 's' → logprob: -8.54157829284668
    7. ' s' → logprob: -8.79157829284668
    8. 'offset' → logprob: -9.04157829284668
    9. '```' → logprob: -9.04157829284668
    10. '_segment' → logprob: -9.16657829284668

Token 3048: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6874864101409912
    2. '=' → logprob: -1.5624864101409912
    3. 's' → logprob: -1.8124864101409912
    4. '```' → logprob: -3.812486410140991
    5. '       ' → logprob: -4.31248664855957
    6. '+' → logprob: -4.43748664855957
    7. ',' → logprob: -4.43748664855957
    8. ' s' → logprob: -4.81248664855957
    9. ' +' → logprob: -4.93748664855957
    10. '_' → logprob: -5.06248664855957

Token 3049: ' station' (ID: 11538)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.196092963218689
    2. 'station' → logprob: -1.446092963218689
    3. 'endpoint' → logprob: -1.446092963218689
    4. 'S' → logprob: -2.1960930824279785
    5. 'the' → logprob: -3.6960930824279785
    6. ' (' → logprob: -3.9460930824279785
    7. '(segment' → logprob: -4.6960930824279785
    8. ' endpoint' → logprob: -4.6960930824279785
    9. '(' → logprob: -4.8210930824279785
    10. ' S' → logprob: -5.0710930824279785

Token 3050: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.09265290200710297
    2. 's' → logprob: -2.8426527976989746
    3. '_s' → logprob: -4.592652797698975
    4. '_' → logprob: -4.592652797698975
    5. 'offset' → logprob: -5.842652797698975
    6. '_segment' → logprob: -6.217652797698975
    7. 'segment' → logprob: -6.717652797698975
    8. '`' → logprob: -7.592652797698975
    9. ' =' → logprob: -7.967652797698975
    10. '=' → logprob: -7.967652797698975

Token 3051: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3526219427585602
    2. '=' → logprob: -2.1026220321655273
    3. 's' → logprob: -3.4776220321655273
    4. '"' → logprob: -3.8526220321655273
    5. '[' → logprob: -4.852622032165527
    6. ':' → logprob: -4.852622032165527
    7. '   ' → logprob: -4.852622032165527
    8. ')' → logprob: -4.977622032165527
    9. ' =
' → logprob: -4.977622032165527
    10. ' +' → logprob: -5.102622032165527

Token 3052: ':
' (ID: 734)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.0764777660369873
    2. 'station' → logprob: -1.2014777660369873
    3. ' station' → logprob: -1.8264777660369873
    4. ' segment' → logprob: -2.5764777660369873
    5. '1' → logprob: -2.8264777660369873
    6. ' (' → logprob: -3.3264777660369873
    7. '(segment' → logprob: -4.701478004455566
    8. 'endpoint' → logprob: -4.951478004455566
    9. '(' → logprob: -5.826478004455566
    10. ' endpoint' → logprob: -6.076478004455566

Token 3053: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.586512804031372
    2. '```' → logprob: -1.586512804031372
    3. 'segment' → logprob: -1.711512804031372
    4. '"' → logprob: -2.586512804031372
    5. ' segment' → logprob: -2.586512804031372
    6. ''' → logprob: -2.586512804031372
    7. '`' → logprob: -3.211512804031372
    8. '(segment' → logprob: -3.211512804031372
    9. '(' → logprob: -3.961512804031372
    10. ' station' → logprob: -4.711512565612793

Token 3054: ' last' (ID: 2174)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7115703821182251
    2. ' station' → logprob: -2.0865702629089355
    3. 'station' → logprob: -2.0865702629089355
    4. ' segment' → logprob: -2.0865702629089355
    5. ' (' → logprob: -3.0865702629089355
    6. '(' → logprob: -3.4615702629089355
    7. '(segment' → logprob: -3.5865702629089355
    8. 'endpoint' → logprob: -5.0865702629089355
    9. 'offset' → logprob: -5.7115702629089355
    10. ''' → logprob: -5.8365702629089355

Token 3055: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.20634664595127106
    2. '_' → logprob: -2.7063467502593994
    3. '_offset' → logprob: -3.7063467502593994
    4. '_stop' → logprob: -3.8313467502593994
    5. 'segment' → logprob: -4.45634651184082
    6. '_distance' → logprob: -4.45634651184082
    7. '_length' → logprob: -4.58134651184082
    8. '_seg' → logprob: -4.83134651184082
    9. '```' → logprob: -5.20634651184082
    10. '_pos' → logprob: -5.33134651184082

Token 3056: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.1303383857011795
    2. '_len' → logprob: -3.005338430404663
    3. '_offset' → logprob: -3.255338430404663
    4. '_' → logprob: -3.880338430404663
    5. '_distance' → logprob: -5.880338191986084
    6. ' =' → logprob: -6.005338191986084
    7. '```' → logprob: -6.755338191986084
    8. '_size' → logprob: -6.755338191986084
    9. '_l' → logprob: -7.130338191986084
    10. '_pos' → logprob: -7.505338191986084

Token 3057: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01713741570711136
    2. '=' → logprob: -4.26713752746582
    3. 's' → logprob: -7.51713752746582
    4. ' +' → logprob: -7.64213752746582
    5. '```' → logprob: -7.76713752746582
    6. ' =
' → logprob: -8.39213752746582
    7. '_' → logprob: -8.51713752746582
    8. '`' → logprob: -8.64213752746582
    9. ':' → logprob: -9.26713752746582
    10. '+' → logprob: -9.26713752746582

Token 3058: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.43086177110671997
    2. 'endpoint' → logprob: -1.4308617115020752
    3. ' station' → logprob: -3.055861711502075
    4. 'segment' → logprob: -3.180861711502075
    5. ' endpoint' → logprob: -4.680861949920654
    6. '1' → logprob: -5.180861949920654
    7. 'interval' → logprob: -6.305861949920654
    8. ' (' → logprob: -6.555861949920654
    9. '(' → logprob: -6.555861949920654
    10. ' segment' → logprob: -6.930861949920654

Token 3059: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.4209536015987396
    2. '_length' → logprob: -1.295953631401062
    3. '_' → logprob: -2.7959535121917725
    4. '+' → logprob: -5.795953750610352
    5. '[i' → logprob: -7.045953750610352
    6. ' _' → logprob: -7.295953750610352
    7. '_
' → logprob: -7.420953750610352
    8. '-' → logprob: -7.545953750610352
    9. '[
' → logprob: -7.670953750610352
    10. '[' → logprob: -7.670953750610352

Token 3060: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6791446208953857
    2. '-' → logprob: -1.8041446208953857
    3. ' +' → logprob: -2.0541446208953857
    4. '+' → logprob: -2.4291446208953857
    5. ' if' → logprob: -3.6791446208953857
    6. '
' → logprob: -3.9291446208953857
    7. '[' → logprob: -4.929144859313965
    8. '<|end|>' → logprob: -4.929144859313965
    9. 'if' → logprob: -5.054144859313965
    10. '=' → logprob: -5.054144859313965

Token 3061: ' s' (ID: 265)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.011232907883822918
    2. '(' → logprob: -5.136232852935791
    3. ' (' → logprob: -6.011232852935791
    4. '(
' → logprob: -6.511232852935791
    5. 'S' → logprob: -6.886232852935791
    6. '(s' → logprob: -8.88623332977295
    7. '(segment' → logprob: -9.63623332977295
    8. '((' → logprob: -10.26123332977295
    9. 'segment' → logprob: -10.76123332977295
    10. '   ' → logprob: -11.13623332977295

Token 3062: '*' (ID: 9)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3825405836105347
    2. 's' → logprob: -1.5075405836105347
    3. '_' → logprob: -1.8825405836105347
    4. '_segment' → logprob: -2.382540702819824
    5. '```' → logprob: -2.757540702819824
    6. ')' → logprob: -3.382540702819824
    7. '-' → logprob: -3.507540702819824
    8. '+' → logprob: -4.007540702819824
    9. '_s' → logprob: -4.507540702819824
    10. '1' → logprob: -4.632540702819824

Token 3063: 'segment' (ID: 45362)
  Prédit: 'segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.00041125001735053957
    2. ' segment' → logprob: -7.875411033630371
    3. '(segment' → logprob: -10.750411033630371
    4. 'interval' → logprob: -12.000411033630371
    5. '```' → logprob: -14.625411033630371
    6. '       ' → logprob: -14.750411033630371
    7. '           ' → logprob: -14.750411033630371
    8. 'segments' → logprob: -15.125411033630371
    9. '
' → logprob: -15.250411033630371
    10. '   ' → logprob: -15.500411033630371

Token 3064: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.8219583075260743e-05
    2. ']' → logprob: -11.750038146972656
    3. 'length' → logprob: -11.875038146972656
    4. ']_' → logprob: -12.000038146972656
    5. '_' → logprob: -12.250038146972656
    6. '```' → logprob: -12.875038146972656
    7. ' _' → logprob: -13.625038146972656
    8. '+' → logprob: -13.875038146972656
    9. '[
' → logprob: -14.000038146972656
    10. ')' → logprob: -14.000038146972656

Token 3065: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05371049791574478
    2. '           ' → logprob: -5.053710460662842
    3. '```' → logprob: -5.178710460662842
    4. '
' → logprob: -5.303710460662842
    5. '   ' → logprob: -5.428710460662842
    6. ')' → logprob: -5.428710460662842
    7. '<|end|>' → logprob: -5.428710460662842
    8. '               ' → logprob: -6.553710460662842
    9. ' +' → logprob: -6.678710460662842
    10. ':
' → logprob: -6.678710460662842

Token 3066: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015989553183317184
    2. '```' → logprob: -5.765989780426025
    3. 'return' → logprob: -6.140989780426025
    4. '
' → logprob: -6.140989780426025
    5. '           ' → logprob: -6.140989780426025
    6. '   ' → logprob: -6.390989780426025
    7. '        
' → logprob: -7.390989780426025
    8. '\n' → logprob: -7.890989780426025
    9. '	' → logprob: -8.015989303588867
    10. '\' → logprob: -8.015989303588867

Token 3067: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05319022759795189
    2. '
' → logprob: -3.803190231323242
    3. '        
' → logprob: -5.428190231323242
    4. '```' → logprob: -5.678190231323242
    5. '           ' → logprob: -5.928190231323242
    6. '        ' → logprob: -6.053190231323242
    7. '   ' → logprob: -6.178190231323242
    8. 'return' → logprob: -6.303190231323242
    9. '\n' → logprob: -6.428190231323242
    10. ' ' → logprob: -7.053190231323242

Token 3068: ' time' (ID: 1058)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.2897617220878601
    2. ' segment' → logprob: -2.664761781692505
    3. 'last' → logprob: -3.164761781692505
    4. ' return' → logprob: -3.289761781692505
    5. 'segment' → logprob: -3.914761781692505
    6. ' local' → logprob: -4.414761543273926
    7. ' code' → logprob: -4.414761543273926
    8. 'return' → logprob: -4.414761543273926
    9. ' time' → logprob: -4.789761543273926
    10. 'local' → logprob: -5.539761543273926

Token 3069: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05630850791931152
    2. ' =' → logprob: -3.0563085079193115
    3. '       ' → logprob: -6.806308746337891
    4. ')' → logprob: -6.806308746337891
    5. 's' → logprob: -7.056308746337891
    6. ' needed' → logprob: -7.431308746337891
    7. '+=' → logprob: -7.556308746337891
    8. '=
' → logprob: -7.806308746337891
    9. 'needed' → logprob: -7.931308746337891
    10. '_needed' → logprob: -8.05630874633789

Token 3070: ':
' (ID: 734)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.974912166595459
    2. ' last' → logprob: -1.349912166595459
    3. 'segment' → logprob: -1.849912166595459
    4. ' s' → logprob: -2.974912166595459
    5. 'last' → logprob: -3.474912166595459
    6. ' (' → logprob: -3.599912166595459
    7. ' C' → logprob: -3.724912166595459
    8. '(s' → logprob: -4.349912166595459
    9. ' max' → logprob: -4.474912166595459
    10. '(segment' → logprob: -4.724912166595459

Token 3071: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5376615524291992
    2. '"' → logprob: -1.6626615524291992
    3. '       ' → logprob: -1.6626615524291992
    4. '           ' → logprob: -1.9126615524291992
    5. '```' → logprob: -2.537661552429199
    6. '               ' → logprob: -3.287661552429199
    7. ' (' → logprob: -3.412661552429199
    8. '`' → logprob: -4.287661552429199
    9. '(
' → logprob: -4.412661552429199
    10. '            ' → logprob: -4.537661552429199

Token 3072: ' time' (ID: 1058)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.2943643033504486
    2. ' segment' → logprob: -2.7943642139434814
    3. '(segment' → logprob: -3.0443642139434814
    4. '(s' → logprob: -3.0443642139434814
    5. 's' → logprob: -3.9193642139434814
    6. 'last' → logprob: -4.1693644523620605
    7. '       ' → logprob: -4.2943644523620605
    8. ' (' → logprob: -4.5443644523620605
    9. 'C' → logprob: -4.6693644523620605
    10. '(' → logprob: -5.1693644523620605

Token 3073: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25251612067222595
    2. ' =' → logprob: -1.5025161504745483
    3. '*' → logprob: -9.25251579284668
    4. '=
' → logprob: -9.25251579284668
    5. '(' → logprob: -9.37751579284668
    6. '+' → logprob: -9.87751579284668
    7. ' =
' → logprob: -10.50251579284668
    8. '_' → logprob: -10.62751579284668
    9. '+=' → logprob: -10.62751579284668
    10. ' +=' → logprob: -10.75251579284668

Token 3074: ' pass' (ID: 1853)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7125991582870483
    2. 's' → logprob: -1.4625991582870483
    3. ' parcour' → logprob: -2.337599277496338
    4. ' s' → logprob: -2.712599277496338
    5. 'travel' → logprob: -3.587599277496338
    6. 'faire' → logprob: -3.712599277496338
    7. 'reach' → logprob: -4.087599277496338
    8. 'pass' → logprob: -4.462599277496338
    9. 'tr' → logprob: -4.462599277496338
    10. 'segment' → logprob: -5.087599277496338

Token 3075: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09991513192653656
    2. ' s' → logprob: -2.974915027618408
    3. 'segment' → logprob: -4.474915027618408
    4. '       ' → logprob: -5.224915027618408
    5. '=' → logprob: -5.349915027618408
    6. ' (' → logprob: -5.599915027618408
    7. ' =' → logprob: -6.099915027618408
    8. '(s' → logprob: -6.099915027618408
    9. ')' → logprob: -6.099915027618408
    10. '   ' → logprob: -6.224915027618408

Token 3076: ' segments' (ID: 33749)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3987131118774414
    2. '[s' → logprob: -1.8987131118774414
    3. '_segments' → logprob: -1.8987131118774414
    4. '_segment' → logprob: -2.7737131118774414
    5. 's' → logprob: -2.8987131118774414
    6. ' +' → logprob: -3.0237131118774414
    7. 'segments' → logprob: -3.1487131118774414
    8. '[_' → logprob: -3.1487131118774414
    9. '[' → logprob: -3.6487131118774414
    10. '```' → logprob: -3.6487131118774414

Token 3077: ' with' (ID: 483)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6145662069320679
    2. ' +' → logprob: -1.1145662069320679
    3. ' =' → logprob: -2.8645663261413574
    4. '=' → logprob: -3.3645663261413574
    5. '   ' → logprob: -4.364566326141357
    6. '       ' → logprob: -5.364566326141357
    7. ':' → logprob: -5.864566326141357
    8. '*' → logprob: -5.864566326141357
    9. '[i' → logprob: -6.114566326141357
    10. ' +=' → logprob: -6.114566326141357

Token 3078: ' sem' (ID: 2743)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9163193702697754
    2. 'sem' → logprob: -1.2913193702697754
    3. 'C' → logprob: -1.9163193702697754
    4. '"' → logprob: -3.2913193702697754
    5. 'segments' → logprob: -3.4163193702697754
    6. ''' → logprob: -4.166319370269775
    7. ' segment' → logprob: -4.291319370269775
    8. 'seg' → logprob: -4.291319370269775
    9. ' sem' → logprob: -4.416319370269775
    10. ' C' → logprob: -4.666319370269775

Token 3079: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.10980060696601868
    2. '_segments' → logprob: -3.4848005771636963
    3. '_i' → logprob: -3.6098005771636963
    4. 'i' → logprob: -3.8598005771636963
    5. 'I' → logprob: -5.359800815582275
    6. '_expr' → logprob: -5.484800815582275
    7. '_' → logprob: -5.609800815582275
    8. 'express' → logprob: -6.609800815582275
    9. '_segment' → logprob: -6.609800815582275
    10. ')' → logprob: -6.609800815582275

Token 3080: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6616728901863098
    2. '       ' → logprob: -2.161672830581665
    3. ' =' → logprob: -2.161672830581665
    4. '+' → logprob: -3.036672830581665
    5. '   ' → logprob: -3.036672830581665
    6. '=' → logprob: -3.161672830581665
    7. '*' → logprob: -3.286672830581665
    8. ' *' → logprob: -3.411672830581665
    9. '```' → logprob: -4.411673069000244
    10. ')' → logprob: -4.661673069000244

Token 3081: ' s' (ID: 265)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.8892732262611389
    2. ' segment' → logprob: -1.5142731666564941
    3. ' s' → logprob: -1.7642731666564941
    4. 's' → logprob: -2.264273166656494
    5. '(s' → logprob: -3.514273166656494
    6. ' (' → logprob: -4.014273166656494
    7. ' last' → logprob: -4.139273166656494
    8. '(segment' → logprob: -4.514273166656494
    9. 'last' → logprob: -5.514273166656494
    10. '"' → logprob: -5.764273166656494

Token 3082: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22552013397216797
    2. '*' → logprob: -1.600520133972168
    3. '*(' → logprob: -9.600520133972168
    4. ' ' → logprob: -11.600520133972168
    5. ')' → logprob: -12.475520133972168
    6. '**' → logprob: -12.600520133972168
    7. '*[' → logprob: -12.850520133972168
    8. '
' → logprob: -12.975520133972168
    9. '```' → logprob: -12.975520133972168
    10. ' ' → logprob: -13.350520133972168

Token 3083: ' segment' (ID: 14806)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.05420735478401184
    2. ''' → logprob: -3.5542073249816895
    3. ' C' → logprob: -4.8042073249816895
    4. '"' → logprob: -5.1792073249816895
    5. ''C' → logprob: -5.3042073249816895
    6. '"C' → logprob: -5.8042073249816895
    7. '`' → logprob: -6.5542073249816895
    8. ' '' → logprob: -7.9292073249816895
    9. '('' → logprob: -9.304207801818848
    10. '(C' → logprob: -9.304207801818848

Token 3084: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0005093070212751627
    2. '_' → logprob: -8.625509262084961
    3. '_time' → logprob: -9.125509262084961
    4. ' _' → logprob: -9.875509262084961
    5. 's' → logprob: -10.000509262084961
    6. '_len' → logprob: -11.125509262084961
    7. '```' → logprob: -11.250509262084961
    8. 'length' → logprob: -11.375509262084961
    9. '_lengths' → logprob: -11.375509262084961
    10. ''_' → logprob: -11.625509262084961

Token 3085: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.706294059753418
    2. '*' → logprob: -1.331294059753418
    3. ' +' → logprob: -1.831294059753418
    4. '+' → logprob: -3.331294059753418
    5. '```' → logprob: -3.706294059753418
    6. ')' → logprob: -5.081294059753418
    7. '_' → logprob: -5.456294059753418
    8. '       ' → logprob: -5.956294059753418
    9. ' _' → logprob: -6.456294059753418
    10. '`' → logprob: -7.081294059753418

Token 3086: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.18010149896144867
    2. ''' → logprob: -2.4301013946533203
    3. ' C' → logprob: -2.6801013946533203
    4. ' '' → logprob: -5.43010139465332
    5. '"' → logprob: -6.05510139465332
    6. ''C' → logprob: -7.05510139465332
    7. '"C' → logprob: -8.68010139465332
    8. ' "' → logprob: -8.68010139465332
    9. '`' → logprob: -8.93010139465332
    10. ')' → logprob: -9.80510139465332

Token 3087: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3693769872188568
    2. ' +' → logprob: -1.4943770170211792
    3. '
' → logprob: -3.2443768978118896
    4. '+' → logprob: -3.8693768978118896
    5. '+
' → logprob: -5.494377136230469
    6. ' +
' → logprob: -5.869377136230469
    7. '```' → logprob: -5.869377136230469
    8. '\n' → logprob: -6.119377136230469
    9. '   ' → logprob: -6.119377136230469
    10. ')' → logprob: -6.119377136230469

Token 3088: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8013845086097717
    2. '+' → logprob: -0.9263845086097717
    3. '       ' → logprob: -2.051384449005127
    4. ')' → logprob: -4.301384449005127
    5. '   ' → logprob: -5.801384449005127
    6. '```' → logprob: -6.051384449005127
    7. ' +
' → logprob: -7.176384449005127
    8. '*' → logprob: -7.301384449005127
    9. '           ' → logprob: -7.551384449005127
    10. '+
' → logprob: -7.551384449005127

Token 3089: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14702467620372772
    2. '+' (adapté à ' +') → logprob: -2.272024631500244
    3. '       ' → logprob: -3.647024631500244
    4. ' +
' → logprob: -5.522024631500244
    5. '+
' → logprob: -6.647024631500244
    6. '```' → logprob: -6.897024631500244
    7. ')' → logprob: -8.022025108337402
    8. '
' → logprob: -8.397025108337402
    9. '   ' → logprob: -8.897025108337402
    10. '        ' → logprob: -9.397025108337402

Token 3090: ' time' (ID: 1058)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.729425311088562
    2. 'last' → logprob: -0.729425311088562
    3. ' local' → logprob: -4.229425430297852
    4. 'local' → logprob: -4.479425430297852
    5. ' (' → logprob: -6.479425430297852
    6. '(last' → logprob: -6.479425430297852
    7. ' A' → logprob: -6.854425430297852
    8. 'A' → logprob: -6.854425430297852
    9. 'segment' → logprob: -6.979425430297852
    10. 'max' → logprob: -7.104425430297852

Token 3091: ' to' (ID: 316)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.24762408435344696
    2. 'last' → logprob: -2.247624158859253
    3. '   ' → logprob: -3.997624158859253
    4. ' local' → logprob: -4.122623920440674
    5. ' to' → logprob: -4.122623920440674
    6. '(last' → logprob: -4.747623920440674
    7. 'to' → logprob: -4.872623920440674
    8. '=' → logprob: -4.997623920440674
    9. ' (' → logprob: -5.372623920440674
    10. '```' → logprob: -5.372623920440674

Token 3092: ' pass' (ID: 1853)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.22542071342468262
    2. ' local' → logprob: -2.3504207134246826
    3. 'last' → logprob: -2.3504207134246826
    4. ' last' → logprob: -5.725420951843262
    5. 'util' → logprob: -5.850420951843262
    6. 'use' → logprob: -6.225420951843262
    7. '(local' → logprob: -7.350420951843262
    8. 'reach' → logprob: -7.975420951843262
    9. '(last' → logprob: -8.225420951843262
    10. ' (' → logprob: -8.475420951843262

Token 3093: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.513312041759491
    2. 'last' → logprob: -1.2633121013641357
    3. ' local' → logprob: -2.3883121013641357
    4. 'local' → logprob: -3.6383121013641357
    5. '(last' → logprob: -8.263312339782715
    6. ' (' → logprob: -8.513312339782715
    7. ' A' → logprob: -9.138312339782715
    8. 'A' → logprob: -10.388312339782715
    9. ' ' → logprob: -10.638312339782715
    10. '```' → logprob: -11.513312339782715

Token 3094: ' part' (ID: 997)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.19182893633842468
    2. '_' → logprob: -2.191828966140747
    3. ' _' → logprob: -2.941828966140747
    4. '`' → logprob: -5.941828727722168
    5. 'segment' → logprob: -5.941828727722168
    6. ' segment' → logprob: -7.066828727722168
    7. '   ' → logprob: -7.191828727722168
    8. '```' → logprob: -7.191828727722168
    9. ' ' → logprob: -7.566828727722168
    10. '_segments' → logprob: -7.941828727722168

Token 3095: ' by' (ID: 656)
  Prédit: ' local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' local' → logprob: -0.43394866585731506
    2. 'local' → logprob: -2.3089487552642822
    3. ' ' → logprob: -2.6839487552642822
    4. ' last' → logprob: -3.3089487552642822
    5. ' *' → logprob: -3.3089487552642822
    6. '       ' → logprob: -3.8089487552642822
    7. '```' → logprob: -3.8089487552642822
    8. '   ' → logprob: -4.308948516845703
    9. '*' → logprob: -4.433948516845703
    10. ' =' → logprob: -4.808948516845703

Token 3096: ' local' (ID: 2698)
  Prédit: ' local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' local' → logprob: -0.42903104424476624
    2. 'local' → logprob: -1.0540310144424438
    3. ' last' → logprob: -9.179031372070312
    4. ' A' → logprob: -9.429031372070312
    5. 'A' → logprob: -10.054031372070312
    6. 'last' → logprob: -10.554031372070312
    7. '```' → logprob: -11.054031372070312
    8. ' lokale' → logprob: -11.554031372070312
    9. '_local' → logprob: -11.679031372070312
    10. ' ' → logprob: -11.804031372070312

Token 3097: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6476095914840698
    2. ' +' → logprob: -2.3976097106933594
    3. '+' → logprob: -2.8976097106933594
    4. ' (' → logprob: -3.1476097106933594
    5. '   ' → logprob: -3.5226097106933594
    6. ' *' → logprob: -3.6476097106933594
    7. '*' → logprob: -3.7726097106933594
    8. ' _' → logprob: -3.8976097106933594
    9. '_local' → logprob: -4.022609710693359
    10. '(' → logprob: -4.147609710693359

Token 3098: ' last' (ID: 2174)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7258679866790771
    2. 'last' → logprob: -1.7258679866790771
    3. ' A' → logprob: -1.7258679866790771
    4. ' last' → logprob: -1.8508679866790771
    5. 'C' → logprob: -6.725868225097656
    6. 'local' → logprob: -7.600868225097656
    7. ' C' → logprob: -7.975868225097656
    8. ' local' → logprob: -8.475868225097656
    9. ' (' → logprob: -8.600868225097656
    10. '(last' → logprob: -8.725868225097656

Token 3099: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.021300481632351875
    2. '_' → logprob: -4.396300315856934
    3. ' _' → logprob: -4.896300315856934
    4. '_segments' → logprob: -7.396300315856934
    5. '```' → logprob: -8.396300315856934
    6. ')_' → logprob: -9.521300315856934
    7. '       ' → logprob: -9.771300315856934
    8. '_seg' → logprob: -10.021300315856934
    9. '`' → logprob: -10.021300315856934
    10. '*' → logprob: -10.896300315856934

Token 3100: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.008952532894909382
    2. '_' → logprob: -5.133952617645264
    3. ' _' → logprob: -6.008952617645264
    4. '_len' → logprob: -8.008952140808105
    5. '_l' → logprob: -10.008952140808105
    6. '_distance' → logprob: -10.133952140808105
    7. '```' → logprob: -10.383952140808105
    8. '_size' → logprob: -11.008952140808105
    9. '_lengths' → logprob: -11.258952140808105
    10. '       ' → logprob: -11.758952140808105

Token 3101: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4752638339996338
    2. '*' → logprob: -0.9752638339996338
    3. '   ' → logprob: -7.475263595581055
    4. '       ' → logprob: -7.850263595581055
    5. '```' → logprob: -9.850263595581055
    6. '	' → logprob: -10.225263595581055
    7. ' ' → logprob: -10.475263595581055
    8. '           ' → logprob: -10.475263595581055
    9. ' ' → logprob: -11.475263595581055
    10. ')' → logprob: -11.475263595581055

Token 3102: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07893451303243637
    2. ' A' → logprob: -2.57893443107605
    3. ''' → logprob: -10.703934669494629
    4. ' ' → logprob: -11.953934669494629
    5. 'local' → logprob: -12.328934669494629
    6. ''A' → logprob: -12.703934669494629
    7. ' local' → logprob: -13.828934669494629
    8. ' '' → logprob: -13.828934669494629
    9. '`' → logprob: -13.828934669494629
    10. '"' → logprob: -14.078934669494629

Token 3103: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08327044546604156
    2. '
' → logprob: -3.08327054977417
    3. ' +' → logprob: -4.45827054977417
    4. '```' → logprob: -5.33327054977417
    5. '   ' → logprob: -5.70827054977417
    6. '	' → logprob: -5.95827054977417
    7. ' =' → logprob: -6.33327054977417
    8. ')' → logprob: -6.45827054977417
    9. 'def' → logprob: -6.95827054977417
    10. ')
' → logprob: -7.20827054977417

Token 3104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033301645889878273
    2. '\n' → logprob: -7.128330230712891
    3. '   ' → logprob: -7.378330230712891
    4. 'return' → logprob: -8.00333023071289
    5. '```' → logprob: -8.00333023071289
    6. '	' → logprob: -8.25333023071289
    7. ' +' → logprob: -9.00333023071289
    8. '           ' → logprob: -9.00333023071289
    9. '\t' → logprob: -9.00333023071289
    10. '\' → logprob: -9.50333023071289

Token 3105: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1335422843694687
    2. '   ' → logprob: -2.75854229927063
    3. ')' → logprob: -3.63354229927063
    4. '```' → logprob: -4.633542060852051
    5. '\n' → logprob: -5.008542060852051
    6. '(' (adapté à ' (') → logprob: -6.633542060852051
    7. ' ' → logprob: -6.883542060852051
    8. ' +' → logprob: -6.883542060852051
    9. '    ' → logprob: -6.883542060852051
    10. '\t' → logprob: -7.008542060852051

Token 3106: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002511212369427085
    2. '       ' → logprob: -7.252511024475098
    3. '")' → logprob: -7.377511024475098
    4. ')
' → logprob: -7.627511024475098
    5. '   ' → logprob: -8.627511024475098
    6. ' )' → logprob: -9.877511024475098
    7. '`)' → logprob: -9.877511024475098
    8. '           ' → logprob: -10.127511024475098
    9. '```' → logprob: -10.252511024475098
    10. '')' → logprob: -10.252511024475098

Token 3107: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.120900958776474
    2. ' )' → logprob: -2.245900869369507
    3. 's' → logprob: -6.495901107788086
    4. 'n' → logprob: -6.995901107788086
    5. ' ' → logprob: -6.995901107788086
    6. ' ' → logprob: -7.620901107788086
    7. ' local' → logprob: -7.870901107788086
    8. 'c' → logprob: -8.245901107788086
    9. 'local' → logprob: -8.370901107788086
    10. '))' → logprob: -8.620901107788086

Token 3108: ' last' (ID: 2174)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9804723262786865
    2. 'pe' → logprob: -1.9804723262786865
    3. ' continue' → logprob: -2.6054723262786865
    4. 'c' → logprob: -2.7304723262786865
    5. 'a' → logprob: -2.9804723262786865
    6. 'continue' → logprob: -2.9804723262786865
    7. 'der' → logprob: -3.2304723262786865
    8. ' s' → logprob: -3.2304723262786865
    9. 'the' → logprob: -3.3554723262786865
    10. ' last' → logprob: -3.6054723262786865

Token 3109: ' sub' (ID: 1543)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.4142910838127136
    2. ' segment' → logprob: -1.6642911434173584
    3. ')' → logprob: -3.2892911434173584
    4. '_' → logprob: -3.4142911434173584
    5. 'segment' → logprob: -3.6642911434173584
    6. ' _' → logprob: -3.9142911434173584
    7. '```' → logprob: -4.664290904998779
    8. '   ' → logprob: -5.414290904998779
    9. ' )' → logprob: -5.539290904998779
    10. '`' → logprob: -5.914290904998779

Token 3110: '-se' (ID: 5460)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13245515525341034
    2. ')' → logprob: -3.5074551105499268
    3. 'segment' → logprob: -3.6324551105499268
    4. ' -' → logprob: -3.7574551105499268
    5. '   ' → logprob: -4.507455348968506
    6. '-)' → logprob: -4.757455348968506
    7. '_segment' → logprob: -5.632455348968506
    8. ' segment' → logprob: -6.132455348968506
    9. '_' → logprob: -6.132455348968506
    10. ' ' → logprob: -6.257455348968506

Token 3111: 'gment' (ID: 21334)
  Prédit: 'gment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gment' → logprob: -0.1624547243118286
    2. 'g' → logprob: -1.9124547243118286
    3. 'gement' → logprob: -7.787454605102539
    4. 'gm' → logprob: -7.787454605102539
    5. 'ment' → logprob: -7.912454605102539
    6. 'gments' → logprob: -8.412454605102539
    7. '```' → logprob: -8.662454605102539
    8. 'segment' → logprob: -9.037454605102539
    9. 'egment' → logprob: -9.287454605102539
    10. 'r' → logprob: -9.787454605102539

Token 3112: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39463314414024353
    2. ' est' → logprob: -2.1446330547332764
    3. ' )' → logprob: -2.5196330547332764
    4. '_length' → logprob: -3.1446330547332764
    5. ' segment' → logprob: -3.7696330547332764
    6. ' *' → logprob: -5.2696332931518555
    7. ' part' → logprob: -5.3946332931518555
    8. ')
' → logprob: -5.6446332931518555
    9. '_segment' → logprob: -5.6446332931518555
    10. ',' → logprob: -5.7696332931518555

Token 3113: ' peut' (ID: 9216)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.4754076600074768
    2. 'sem' → logprob: -2.350407600402832
    3. 'la' → logprob: -2.475407600402832
    4. 'segment' → logprob: -3.225407600402832
    5. 'ligne' → logprob: -3.600407600402832
    6. 'le' → logprob: -3.850407600402832
    7. 'train' → logprob: -4.100407600402832
    8. 'l' → logprob: -4.475407600402832
    9. ' local' → logprob: -4.600407600402832
    10. ' la' → logprob: -4.975407600402832

Token 3114: ' quitter' (ID: 115418)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.6950100660324097
    2. 'prendre' → logprob: -1.6950100660324097
    3. 'pass' → logprob: -2.320010185241699
    4. 'contin' → logprob: -2.445010185241699
    5. 'aller' → logprob: -2.945010185241699
    6. 'faire' → logprob: -4.070010185241699
    7. 'part' → logprob: -4.195010185241699
    8. ' utiliser' → logprob: -5.070010185241699
    9. 'venir' → logprob: -5.445010185241699
    10. 'a' → logprob: -5.445010185241699

Token 3115: ' sem' (ID: 2743)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0775693655014038
    2. ' le' → logprob: -1.4525693655014038
    3. 'sem' → logprob: -1.5775693655014038
    4. ' sem' → logprob: -2.7025694847106934
    5. 'l' → logprob: -3.2025694847106934
    6. 'les' → logprob: -4.077569484710693
    7. 'train' → logprob: -4.202569484710693
    8. ' l' → logprob: -4.327569484710693
    9. ' train' → logprob: -4.577569484710693
    10. 'la' → logprob: -4.577569484710693

Token 3116: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.019619198516011238
    2. 'express' → logprob: -4.394618988037109
    3. 'i' → logprob: -6.144618988037109
    4. '_i' → logprob: -6.394618988037109
    5. 'I' → logprob: -7.769618988037109
    6. 'ip' → logprob: -7.894618988037109
    7. 'pexpr' → logprob: -7.894618988037109
    8. '(express' → logprob: -8.26961898803711
    9. ')' → logprob: -8.39461898803711
    10. 'ipr' → logprob: -8.51961898803711

Token 3117: ' pour' (ID: 1930)
  Prédit: ' train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' train' → logprob: -0.25283804535865784
    2. 'train' → logprob: -2.252838134765625
    3. ')' → logprob: -2.877838134765625
    4. '_train' → logprob: -3.752838134765625
    5. ' )' → logprob: -3.877838134765625
    6. ' ' → logprob: -6.002838134765625
    7. ' stop' → logprob: -6.002838134765625
    8. ' stops' → logprob: -6.502838134765625
    9. '_stop' → logprob: -6.502838134765625
    10. 'stop' → logprob: -7.002838134765625

Token 3118: ' local' (ID: 2698)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.7142564654350281
    2. ' local' → logprob: -1.8392565250396729
    3. 'prendre' → logprob: -1.8392565250396729
    4. 'changer' → logprob: -2.839256525039673
    5. 'contin' → logprob: -3.214256525039673
    6. 'train' → logprob: -3.714256525039673
    7. ' changer' → logprob: -4.339256286621094
    8. ' continuer' → logprob: -4.464256286621094
    9. 'util' → logprob: -4.464256286621094
    10. 'aller' → logprob: -4.589256286621094

Token 3119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7242050766944885
    2. ' train' → logprob: -0.9742050766944885
    3. ' )' → logprob: -2.7242050170898438
    4. '_train' → logprob: -3.5992050170898438
    5. 'train' → logprob: -3.9742050170898438
    6. ')
' → logprob: -5.224205017089844
    7. ' )
' → logprob: -5.349205017089844
    8. ' ' → logprob: -5.599205017089844
    9. ')
' → logprob: -6.224205017089844
    10. ' )
' → logprob: -6.599205017089844

Token 3120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019225641153752804
    2. '   ' → logprob: -7.751922607421875
    3. ')' → logprob: -8.126922607421875
    4. '        ' → logprob: -8.501922607421875
    5. '        
' → logprob: -8.626922607421875
    6. '```' → logprob: -9.001922607421875
    7. '           ' → logprob: -9.126922607421875
    8. '<|end|>' → logprob: -9.251922607421875
    9. '      ' → logprob: -9.751922607421875
    10. '     ' → logprob: -9.751922607421875

Token 3121: ' En' (ID: 2130)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010680504143238068
    2. ')' → logprob: -5.385680675506592
    3. '        ' → logprob: -6.885680675506592
    4. '```' → logprob: -7.135680675506592
    5. '        
' → logprob: -7.385680675506592
    6. '   ' → logprob: -7.510680675506592
    7. '<|end|>' → logprob: -7.635680675506592
    8. '           ' → logprob: -8.010680198669434
    9. ' ' → logprob: -8.260680198669434
    10. '):
' → logprob: -8.260680198669434

Token 3122: ' cas' (ID: 2108)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006621462292969227
    2. 't' → logprob: -5.756621360778809
    3. '```' → logprob: -6.881621360778809
    4. 'def' → logprob: -7.506621360778809
    5. '   ' → logprob: -7.631621360778809
    6. '       ' → logprob: -8.381621360778809
    7. 'ter' → logprob: -8.631621360778809
    8. 'ded' → logprob: -9.006621360778809
    9. 'return' → logprob: -9.631621360778809
    10. '=' → logprob: -9.631621360778809

Token 3123: ' où' (ID: 15113)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08412453532218933
    2. 'de' → logprob: -3.7091245651245117
    3. '```' → logprob: -4.334124565124512
    4. '       ' → logprob: -4.584124565124512
    5. 'def' → logprob: -4.834124565124512
    6. '
' → logprob: -5.334124565124512
    7. '   ' → logprob: -5.584124565124512
    8. ' de' → logprob: -5.584124565124512
    9. ')' → logprob: -5.584124565124512
    10. 'suite' → logprob: -5.709124565124512

Token 3124: ' interval' (ID: 17116)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -1.0712714195251465
    2. 'station' → logprob: -1.6962714195251465
    3. 'segment' → logprob: -2.1962714195251465
    4. ' endpoint' → logprob: -2.1962714195251465
    5. ' station' → logprob: -2.3212714195251465
    6. 'last' → logprob: -3.0712714195251465
    7. 'interval' → logprob: -3.6962714195251465
    8. ' last' → logprob: -3.9462714195251465
    9. ' segment' → logprob: -3.9462714195251465
    10. 's' → logprob: -4.9462714195251465

Token 3125: '_length' (ID: 11514)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.041207414120435715
    2. 'al' → logprob: -4.166207313537598
    3. 'r' → logprob: -5.041207313537598
    4. 'vale' → logprob: -5.166207313537598
    5. ']' → logprob: -5.666207313537598
    6. '   ' → logprob: -7.166207313537598
    7. '#' → logprob: -7.416207313537598
    8. '[' → logprob: -7.416207313537598
    9. 'i' → logprob: -7.416207313537598
    10. 'v' → logprob: -7.541207313537598

Token 3126: ' %' (ID: 1851)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.372739315032959
    2. '[' → logprob: -1.622739315032959
    3. '=' → logprob: -2.497739315032959
    4. '+' → logprob: -2.997739315032959
    5. '==' → logprob: -3.372739315032959
    6. ']' → logprob: -3.372739315032959
    7. 'if' → logprob: -3.497739315032959
    8. ''' → logprob: -3.747739315032959
    9. '_' → logprob: -4.122739315032959
    10. ' ==' → logprob: -4.122739315032959

Token 3127: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5335920453071594
    2. '(x' → logprob: -0.9085920453071594
    3. 'x' → logprob: -6.033592224121094
    4. '(n' → logprob: -6.408592224121094
    5. '(' → logprob: -6.533592224121094
    6. '(interval' → logprob: -6.533592224121094
    7. '(i' → logprob: -7.533592224121094
    8. '2' → logprob: -7.658592224121094
    9. '```' → logprob: -7.658592224121094
    10. ' ' → logprob: -7.908592224121094

Token 3128: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38090839982032776
    2. '(x' → logprob: -1.7559083700180054
    3. 'i' → logprob: -2.255908489227295
    4. ' (' → logprob: -4.005908489227295
    5. ')' → logprob: -5.130908489227295
    6. '(' → logprob: -5.380908489227295
    7. '(i' → logprob: -5.880908489227295
    8. ' x' → logprob: -6.505908489227295
    9. '   ' → logprob: -7.005908489227295
    10. '`' → logprob: -7.130908489227295

Token 3129: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03344995900988579
    2. '1' → logprob: -4.033450126647949
    3. 'i' → logprob: -5.158450126647949
    4. '[i' → logprob: -6.533450126647949
    5. '(i' → logprob: -6.658450126647949
    6. ']' → logprob: -6.658450126647949
    7. ')' → logprob: -6.783450126647949
    8. '[' → logprob: -6.783450126647949
    9. '_i' → logprob: -7.658450126647949
    10. '#' → logprob: -8.03345012664795

Token 3130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -11.625024795532227
    3. '```' → logprob: -11.750024795532227
    4. '-' → logprob: -12.750024795532227
    5. ')' → logprob: -13.000024795532227
    6. '   ' → logprob: -13.875024795532227
    7. '(' → logprob: -14.000024795532227
    8. '``' → logprob: -15.750024795532227
    9. '       ' → logprob: -16.000024795532227
    10. '
' → logprob: -16.000024795532227

Token 3131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06759928911924362
    2. ' !=' → logprob: -3.192599296569824
    3. '!=' → logprob: -4.442599296569824
    4. '>' → logprob: -5.067599296569824
    5. ')!=' → logprob: -6.067599296569824
    6. '==' → logprob: -6.317599296569824
    7. ' ==' → logprob: -7.692599296569824
    8. ')>' → logprob: -7.817599296569824
    9. ' >' → logprob: -8.567599296569824
    10. '=' → logprob: -8.692599296569824

Token 3132: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9709562063217163
    2. ' !=' → logprob: -1.3459562063217163
    3. '!=' → logprob: -1.9709562063217163
    4. '==' → logprob: -2.845956325531006
    5. ' >' → logprob: -3.095956325531006
    6. '%' → logprob: -3.095956325531006
    7. '=' → logprob: -3.345956325531006
    8. ' ==' → logprob: -3.845956325531006
    9. ':' → logprob: -5.220956325531006
    10. '!' → logprob: -6.345956325531006

Token 3133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031327489763498306
    2. ' ' → logprob: -3.531327486038208
    3. '1' → logprob: -7.031327724456787
    4. '=' → logprob: -7.656327724456787
    5. '```' → logprob: -9.656327247619629
    6. ' ' → logprob: -10.156327247619629
    7. ''' → logprob: -10.406327247619629
    8. ' =' → logprob: -11.406327247619629
    9. '   ' → logprob: -11.531327247619629
    10. '"' → logprob: -11.906327247619629

Token 3134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11536559462547302
    2. '1' → logprob: -2.615365505218506
    3. ' ' → logprob: -3.615365505218506
    4. ''' → logprob: -6.490365505218506
    5. ')' → logprob: -6.615365505218506
    6. '"' → logprob: -7.365365505218506
    7. '```' → logprob: -7.365365505218506
    8. '''' → logprob: -7.615365505218506
    9. '+' → logprob: -7.740365505218506
    10. '   ' → logprob: -7.865365505218506

Token 3135: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44795939326286316
    2. ':
' → logprob: -2.4479594230651855
    3. '       ' → logprob: -3.1979594230651855
    4. ')' → logprob: -3.5729594230651855
    5. '   ' → logprob: -3.5729594230651855
    6. '```' → logprob: -3.8229594230651855
    7. '\n' → logprob: -3.9479594230651855
    8. '[' → logprob: -4.0729594230651855
    9. '%' → logprob: -4.4479594230651855
    10. '):' → logprob: -4.5729594230651855

Token 3136: ' les' (ID: 1341)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07651544362306595
    2. '```' → logprob: -4.2015156745910645
    3. '           ' → logprob: -4.2015156745910645
    4. '#' → logprob: -5.0765156745910645
    5. '        ' → logprob: -5.7015156745910645
    6. ',' → logprob: -5.7015156745910645
    7. '\n' → logprob: -5.9515156745910645
    8. ' \' → logprob: -6.3265156745910645
    9. '\' → logprob: -6.4515156745910645
    10. ' if' → logprob: -6.4515156745910645

Token 3137: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.7413116097450256
    2. 'segments' → logprob: -0.7413116097450256
    3. '#' → logprob: -4.991311550140381
    4. ' remainder' → logprob: -5.241311550140381
    5. ' segment' → logprob: -5.741311550140381
    6. ' #' → logprob: -5.741311550140381
    7. ' rest' → logprob: -5.991311550140381
    8. 'segment' → logprob: -6.241311550140381
    9. 'tokens' → logprob: -6.241311550140381
    10. ' ' → logprob: -6.491311550140381

Token 3138: ' ne' (ID: 453)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5332531332969666
    2. '_length' → logprob: -1.5332531929016113
    3. '_' → logprob: -2.5332531929016113
    4. ' _' → logprob: -4.158253192901611
    5. '_size' → logprob: -4.158253192901611
    6. ' =' → logprob: -4.783253192901611
    7. '=' → logprob: -5.033253192901611
    8. '_lengths' → logprob: -5.158253192901611
    9. '_rest' → logprob: -5.283253192901611
    10. '_s' → logprob: -5.283253192901611

Token 3139: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34007933735847473
    2. ''' → logprob: -1.5900793075561523
    3. 's' → logprob: -3.4650793075561523
    4. ' =' → logprob: -3.7150793075561523
    5. ' sont' → logprob: -4.840079307556152
    6. ''ont' → logprob: -5.215079307556152
    7. '==' → logprob: -5.465079307556152
    8. '=
' → logprob: -5.965079307556152
    9. '_' → logprob: -6.215079307556152
    10. ' ==' → logprob: -6.715079307556152

Token 3140: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.006779792718589306
    2. ' pas' → logprob: -5.006779670715332
    3. '```' → logprob: -10.631779670715332
    4. '#' → logprob: -12.131779670715332
    5. 'ps' → logprob: -12.256779670715332
    6. 's' → logprob: -12.256779670715332
    7. '
' → logprob: -12.506779670715332
    8. '_pas' → logprob: -12.756779670715332
    9. 'uniform' → logprob: -13.506779670715332
    10. ' jamais' → logprob: -13.631779670715332

Token 3141: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.3454016149044037
    2. 'égal' → logprob: -1.970401644706726
    3. 'uniform' → logprob: -2.2204015254974365
    4. ' ég' → logprob: -3.9704015254974365
    5. 'strict' → logprob: -5.595401763916016
    6. 'const' → logprob: -5.845401763916016
    7. ' uniform' → logprob: -5.970401763916016
    8. 'tou' → logprob: -5.970401763916016
    9. 'for' → logprob: -6.220401763916016
    10. ' parfaitement' → logprob: -6.345401763916016

Token 3142: 'ales' (ID: 3459)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.008290321566164494
    2. 'al' → logprob: -5.1332902908325195
    3. 'als' → logprob: -6.8832902908325195
    4. 'ales' → logprob: -8.25829029083252
    5. '
' → logprob: -8.88329029083252
    6. '```' → logprob: -9.13329029083252
    7. '``' → logprob: -9.75829029083252
    8. '</' → logprob: -9.88329029083252
    9. '{
' → logprob: -10.00829029083252
    10. 'alis' → logprob: -10.13329029083252

Token 3143: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0556281805038452
    2. 'def' → logprob: -1.6806281805038452
    3. ')' → logprob: -2.5556282997131348
    4. '```' → logprob: -2.6806282997131348
    5. '[i' → logprob: -2.9306282997131348
    6. '   ' → logprob: -3.0556282997131348
    7. '       ' → logprob: -3.1806282997131348
    8. '):' → logprob: -3.1806282997131348
    9. '[' → logprob: -3.4306282997131348
    10. ' =' → logprob: -4.430628299713135

Token 3144: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9578548669815063
    2. '"' → logprob: -1.0828548669815063
    3. ')' → logprob: -2.457854747772217
    4. '       ' → logprob: -2.707854747772217
    5. ':' → logprob: -3.832854747772217
    6. '#' → logprob: -3.832854747772217
    7. ',' → logprob: -4.332854747772217
    8. '=' → logprob: -4.832854747772217
    9. '`' → logprob: -5.207854747772217
    10. ' ' → logprob: -5.207854747772217

Token 3145: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47806352376937866
    2. '#' → logprob: -1.8530635833740234
    3. ',' → logprob: -2.9780635833740234
    4. ')' → logprob: -3.4780635833740234
    5. '"' → logprob: -3.8530635833740234
    6. ''' → logprob: -4.103063583374023
    7. '   ' → logprob: -4.103063583374023
    8. '           ' → logprob: -4.478063583374023
    9. '\n' → logprob: -4.603063583374023
    10. ':' → logprob: -4.853063583374023

Token 3146: ' division' (ID: 21629)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.7929638624191284
    2. 'segments' → logprob: -1.5429638624191284
    3. 's' → logprob: -1.6679638624191284
    4. ' s' → logprob: -3.667963981628418
    5. ' tokens' → logprob: -4.292963981628418
    6. ' segment' → logprob: -4.292963981628418
    7. ''' → logprob: -4.542963981628418
    8. 'n' → logprob: -4.792963981628418
    9. ' code' → logprob: -4.917963981628418
    10. ' ' → logprob: -5.042963981628418

Token 3147: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1901042461395264
    2. ')' → logprob: -2.1901042461395264
    3. ' =' → logprob: -2.6901042461395264
    4. '```' → logprob: -2.8151042461395264
    5. 'n' → logprob: -3.1901042461395264
    6. '_rest' → logprob: -3.1901042461395264
    7. '+' → logprob: -3.3151042461395264
    8. '_' → logprob: -3.4401042461395264
    9. ' est' → logprob: -3.4401042461395264
    10. '`' → logprob: -3.5651042461395264

Token 3148: ' floor' (ID: 8350)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.9800879955291748
    2. 'segments' → logprob: -0.9800879955291748
    3. 'x' → logprob: -2.355087995529175
    4. 'parts' → logprob: -2.730087995529175
    5. '```' → logprob: -3.480087995529175
    6. 'segment' → logprob: -3.980087995529175
    7. ' segments' → logprob: -5.105088233947754
    8. '+' → logprob: -5.105088233947754
    9. 'plus' → logprob: -5.105088233947754
    10. 't' → logprob: -5.980088233947754

Token 3149: ' ci' (ID: 7405)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -1.1646292209625244
    2. ')' → logprob: -1.5396292209625244
    3. ' /' → logprob: -2.0396292209625244
    4. '(' → logprob: -3.0396292209625244
    5. '_' → logprob: -3.1646292209625244
    6. '   ' → logprob: -4.164628982543945
    7. '       ' → logprob: -4.164628982543945
    8. 'div' → logprob: -4.164628982543945
    9. ' +' → logprob: -4.289628982543945
    10. '+' → logprob: -4.289628982543945

Token 3150: '-dessus' (ID: 74812)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6486141681671143
    2. 'n' → logprob: -1.7736141681671143
    3. '=' → logprob: -2.8986141681671143
    4. '+
' → logprob: -3.1486141681671143
    5. ' +' → logprob: -3.8986141681671143
    6. ')' → logprob: -3.8986141681671143
    7. 'v' → logprob: -4.023613929748535
    8. '   ' → logprob: -4.148613929748535
    9. '(n' → logprob: -4.648613929748535
    10. '/' → logprob: -4.648613929748535

Token 3151: ' reste' (ID: 26769)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1406276673078537
    2. ':' → logprob: -3.14062762260437
    3. ')' → logprob: -3.51562762260437
    4. '   ' → logprob: -4.390627861022949
    5. '```' → logprob: -4.890627861022949
    6. ' =' → logprob: -5.015627861022949
    7. ' est' → logprob: -5.515627861022949
    8. '           ' → logprob: -5.515627861022949
    9. ':
' → logprob: -5.765627861022949
    10. '=' → logprob: -6.140627861022949

Token 3152: ' une' (ID: 2463)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.3968093991279602
    2. ' valide' → logprob: -1.8968093395233154
    3. ' valable' → logprob: -2.5218093395233154
    4. 'val' → logprob: -3.1468093395233154
    5. ' valid' → logprob: -4.0218095779418945
    6. ' correcte' → logprob: -4.7718095779418945
    7. '```' → logprob: -5.1468095779418945
    8. ')' → logprob: -5.3968095779418945
    9. '_valid' → logprob: -5.6468095779418945
    10. ']' → logprob: -5.8968095779418945

Token 3153: ' bonne' (ID: 24450)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2689296007156372
    2. ')' → logprob: -1.2689296007156372
    3. ''' → logprob: -2.3939294815063477
    4. '```' → logprob: -2.6439294815063477
    5. '+' → logprob: -2.7689294815063477
    6. '\n' → logprob: -3.3939294815063477
    7. 'reasonable' → logprob: -3.8939294815063477
    8. ' reasonable' → logprob: -4.143929481506348
    9. ' good' → logprob: -4.143929481506348
    10. 'approx' → logprob: -4.643929481506348

Token 3154: ' approximation' (ID: 112838)
  Prédit: ' approximation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approximation' → logprob: -0.009604740887880325
    2. ' ' → logprob: -5.5096049308776855
    3. ')' → logprob: -6.5096049308776855
    4. 'approx' → logprob: -6.8846049308776855
    5. ' )' → logprob: -7.3846049308776855
    6. ' space' → logprob: -7.3846049308776855
    7. 'space' → logprob: -8.259604454040527
    8. '```' → logprob: -8.759604454040527
    9. ' approxim' → logprob: -8.884604454040527
    10. '  ' → logprob: -9.009604454040527

Token 3155: ' conserv' (ID: 13953)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040656331926584244
    2. '   ' → logprob: -3.665656328201294
    3. ' =' → logprob: -5.415656566619873
    4. '```' → logprob: -6.165656566619873
    5. ':' → logprob: -6.540656566619873
    6. '           ' → logprob: -6.665656566619873
    7. '=' → logprob: -6.790656566619873
    8. '
' → logprob: -7.415656566619873
    9. ')' → logprob: -7.665656566619873
    10. '        
' → logprob: -7.915656566619873

Token 3156: 'atrice' (ID: 48155)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.10407402366399765
    2. 'e' → logprob: -2.479074001312256
    3. 'é' → logprob: -4.729074001312256
    4. 'ante' → logprob: -5.979074001312256
    5. 'ed' → logprob: -6.854074001312256
    6. 'ee' → logprob: -7.229074001312256
    7. 'ente' → logprob: -8.104074478149414
    8. 'ue' → logprob: -8.229074478149414
    9. 'ative' → logprob: -8.979074478149414
    10. '```' → logprob: -9.229074478149414

Token 3157: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09584062546491623
    2. '   ' → logprob: -3.2208406925201416
    3. ':' → logprob: -3.9708406925201416
    4. ')' → logprob: -4.9708404541015625
    5. '           ' → logprob: -5.4708404541015625
    6. ' =' → logprob: -5.5958404541015625
    7. '):' → logprob: -5.9708404541015625
    8. '```' → logprob: -6.2208404541015625
    9. '=' → logprob: -6.5958404541015625
    10. ':
' → logprob: -6.7208404541015625

Token 3158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03569728136062622
    2. '   ' → logprob: -4.1606974601745605
    3. '           ' → logprob: -5.2856974601745605
    4. '        
' → logprob: -5.6606974601745605
    5. ')' → logprob: -6.0356974601745605
    6. '        ' → logprob: -6.2856974601745605
    7. '"' → logprob: -6.9106974601745605
    8. '
' → logprob: -7.1606974601745605
    9. '```' → logprob: -7.2856974601745605
    10. '    ' → logprob: -7.7856974601745605

Token 3159: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3449878990650177
    2. '   ' → logprob: -1.7199878692626953
    3. '):' → logprob: -3.5949878692626953
    4. ':' → logprob: -3.8449878692626953
    5. ')' → logprob: -4.344987869262695
    6. '\n' → logprob: -4.594987869262695
    7. '):
' → logprob: -4.844987869262695
    8. '
' → logprob: -5.219987869262695
    9. ':
' → logprob: -5.344987869262695
    10. '           ' → logprob: -5.719987869262695

Token 3160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1106887012720108
    2. '   ' → logprob: -2.3606886863708496
    3. '
' → logprob: -5.98568868637085
    4. '    ' → logprob: -6.48568868637085
    5. '    
' → logprob: -6.48568868637085
    6. '        
' → logprob: -6.61068868637085
    7. '```' → logprob: -7.11068868637085
    8. '\n' → logprob: -7.36068868637085
    9. '           ' → logprob: -7.61068868637085
    10. '        ' → logprob: -8.485689163208008

Token 3161: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025556879118084908
    2. '   ' → logprob: -4.400557041168213
    3. '```' → logprob: -5.400557041168213
    4. '
' → logprob: -6.650557041168213
    5. '        
' → logprob: -6.650557041168213
    6. 'if' → logprob: -7.150557041168213
    7. ' if' → logprob: -7.400557041168213
    8. '{
' → logprob: -7.525557041168213
    9. '           ' → logprob: -7.650557041168213
    10. '\n' → logprob: -7.775557041168213

Token 3162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31973975896835327
    2. '=' → logprob: -1.819739818572998
    3. '[i' → logprob: -2.319739818572998
    4. 'ef' → logprob: -4.694739818572998
    5. '   ' → logprob: -7.194739818572998
    6. 'i' → logprob: -7.194739818572998
    7. '_' → logprob: -7.569739818572998
    8. 'ist' → logprob: -7.694739818572998
    9. '_i' → logprob: -8.06973934173584
    10. ',' → logprob: -8.06973934173584

Token 3163: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0005227696383371949
    2. ' intervals' → logprob: -7.625522613525391
    3. '   ' → logprob: -11.12552261352539
    4. '       ' → logprob: -11.12552261352539
    5. '(interval' → logprob: -12.75052261352539
    6. '           ' → logprob: -13.50052261352539
    7. 'int' → logprob: -14.37552261352539
    8. ' interval' → logprob: -15.62552261352539
    9. '    ' → logprob: -17.00052261352539
    10. ' ' → logprob: -17.00052261352539

Token 3164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.500001907348633
    3. ' [' → logprob: -14.875001907348633
    4. 'i' → logprob: -15.125001907348633
    5. '   ' → logprob: -15.625001907348633
    6. '```' → logprob: -15.750001907348633
    7. '       ' → logprob: -16.250001907348633
    8. ',i' → logprob: -16.875001907348633
    9. '[
' → logprob: -17.375001907348633
    10. ' =' → logprob: -17.500001907348633

Token 3165: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1719808131456375
    2. ']' → logprob: -2.046980857849121
    3. '[i' → logprob: -4.421980857849121
    4. '       ' → logprob: -4.671980857849121
    5. '][' → logprob: -5.421980857849121
    6. ']
' → logprob: -6.671980857849121
    7. '])
' → logprob: -8.171980857849121
    8. '[
' → logprob: -8.171980857849121
    9. ']:
' → logprob: -8.421980857849121
    10. ']+' → logprob: -8.546980857849121

Token 3166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07500599324703217
    2. 'd' → logprob: -3.0750060081481934
    3. '```' → logprob: -4.825006008148193
    4. '        ' → logprob: -5.200006008148193
    5. '        
' → logprob: -6.200006008148193
    6. ' ' → logprob: -6.450006008148193
    7. '         
' → logprob: -7.075006008148193
    8. '     
' → logprob: -7.075006008148193
    9. '\n' → logprob: -7.200006008148193
    10. ' d' → logprob: -7.200006008148193

Token 3167: ' segments' (ID: 33749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5898752808570862
    2. ' segment' → logprob: -1.8398752212524414
    3. 'segment' → logprob: -2.0898752212524414
    4. ' if' → logprob: -2.5898752212524414
    5. '```' → logprob: -3.8398752212524414
    6. ' ' → logprob: -4.089875221252441
    7. 'd' → logprob: -4.714875221252441
    8. 'if' → logprob: -5.214875221252441
    9. ' 
' → logprob: -5.339875221252441
    10. ' d' → logprob: -5.589875221252441

Token 3168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30484652519226074
    2. '=' → logprob: -1.4298465251922607
    3. '_length' → logprob: -4.80484676361084
    4. '_len' → logprob: -5.42984676361084
    5. '_count' → logprob: -5.80484676361084
    6. 's' → logprob: -6.17984676361084
    7. '[i' → logprob: -6.30484676361084
    8. ',' → logprob: -7.42984676361084
    9. '_' → logprob: -7.55484676361084
    10. '[' → logprob: -7.80484676361084

Token 3169: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03566921129822731
    2. ' x' → logprob: -3.7856693267822266
    3. '(x' → logprob: -4.410669326782227
    4. ' (' → logprob: -8.535669326782227
    5. '[x' → logprob: -13.410669326782227
    6. '   ' → logprob: -14.410669326782227
    7. '{x' → logprob: -14.910669326782227
    8. '(' → logprob: -15.285669326782227
    9. '	x' → logprob: -16.035669326782227
    10. ')x' → logprob: -16.285669326782227

Token 3170: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01324599888175726
    2. ' -' → logprob: -4.388246059417725
    3. '[i' → logprob: -7.263246059417725
    4. '[' → logprob: -11.263245582580566
    5. '       ' → logprob: -11.888245582580566
    6. ')' → logprob: -12.888245582580566
    7. 'i' → logprob: -13.013245582580566
    8. '   ' → logprob: -13.388245582580566
    9. '=' → logprob: -13.888245582580566
    10. '#' → logprob: -13.888245582580566

Token 3171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.125030517578125
    4. '۱' → logprob: -18.250030517578125
    5. '<|end|>' → logprob: -18.250030517578125
    6. '<|end|>' → logprob: -18.625030517578125
    7. '```' → logprob: -18.875030517578125
    8. '१' → logprob: -19.500030517578125
    9. '１' → logprob: -19.500030517578125
    10. '১' → logprob: -19.500030517578125

Token 3172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15092885494232178
    2. '```' → logprob: -3.7759289741516113
    3. '
' → logprob: -4.025928974151611
    4. ' =' → logprob: -4.275928974151611
    5. '        
' → logprob: -4.275928974151611
    6. ':' → logprob: -4.400928974151611
    7. 'd' → logprob: -4.650928974151611
    8. '=' → logprob: -4.900928974151611
    9. '<|end|>' → logprob: -5.025928974151611
    10. ')' → logprob: -5.275928974151611

Token 3173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05044331029057503
    2. '
' → logprob: -3.800443410873413
    3. '        
' → logprob: -4.050443172454834
    4. ' 
' → logprob: -5.425443172454834
    5. '\n' → logprob: -7.300443172454834
    6. ':' → logprob: -7.425443172454834
    7. '  
' → logprob: -7.675443172454834
    8. '```' → logprob: -7.675443172454834
    9. '    
' → logprob: -7.800443172454834
    10. ':
' → logprob: -8.050443649291992

Token 3174: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' (adapté à ' segment') → logprob: -0.732931911945343
    2. '       ' → logprob: -0.982931911945343
    3. ' if' → logprob: -2.7329318523406982
    4. ' segment' → logprob: -2.9829318523406982
    5. 'if' → logprob: -3.6079318523406982
    6. 'length' → logprob: -7.107932090759277
    7. 'seg' → logprob: -7.357932090759277
    8. '   ' → logprob: -8.357932090759277
    9. '```' → logprob: -8.732932090759277
    10. '
' → logprob: -8.982932090759277

Token 3175: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0008725132793188095
    2. '_len' → logprob: -7.500872611999512
    3. '_lengths' → logprob: -9.250872611999512
    4. '_' → logprob: -9.625872611999512
    5. '_size' → logprob: -10.000872611999512
    6. '=_' → logprob: -10.125872611999512
    7. '_l' → logprob: -11.000872611999512
    8. ' _' → logprob: -11.500872611999512
    9. '=' → logprob: -11.875872611999512
    10. '\' → logprob: -11.875872611999512

Token 3176: '_base' (ID: 17096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231800675392151
    2. '=' → logprob: -0.8981800675392151
    3. ',' → logprob: -10.27318000793457
    4. ')' → logprob: -12.02318000793457
    5. ' =
' → logprob: -12.27318000793457
    6. 's' → logprob: -13.52318000793457
    7. '_' → logprob: -13.52318000793457
    8. '	' → logprob: -13.64818000793457
    9. '```' → logprob: -13.64818000793457
    10. '=
' → logprob: -13.89818000793457

Token 3177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741068482398987
    2. '=' → logprob: -0.9741068482398987
    3. ',' → logprob: -10.599106788635254
    4. ' =
' → logprob: -13.849106788635254
    5. ' ' → logprob: -13.974106788635254
    6. '   ' → logprob: -14.349106788635254
    7. '       ' → logprob: -14.599106788635254
    8. 's' → logprob: -14.974106788635254
    9. ')' → logprob: -14.974106788635254
    10. '_' → logprob: -15.099106788635254

Token 3178: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07072044163942337
    2. ' d' → logprob: -2.6957204341888428
    3. 'interval' → logprob: -7.695720672607422
    4. ' intervals' → logprob: -8.820720672607422
    5. '(d' → logprob: -9.195720672607422
    6. 'int' → logprob: -10.695720672607422
    7. '   ' → logprob: -10.695720672607422
    8. ' (' → logprob: -11.820720672607422
    9. '	d' → logprob: -12.195720672607422
    10. ' ' → logprob: -12.570720672607422

Token 3179: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.22698679566383362
    2. '//' → logprob: -1.6019867658615112
    3. '       ' → logprob: -7.726986885070801
    4. '#' → logprob: -7.976986885070801
    5. '   ' → logprob: -8.1019868850708
    6. '=' → logprob: -8.6019868850708
    7. ')' → logprob: -9.9769868850708
    8. '        ' → logprob: -10.1019868850708
    9. '           ' → logprob: -10.1019868850708
    10. '[' → logprob: -10.4769868850708

Token 3180: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.005587329622358084
    2. '(' → logprob: -5.755587100982666
    3. ' segments' → logprob: -6.255587100982666
    4. ' (' → logprob: -8.130587577819824
    5. '(x' → logprob: -8.630587577819824
    6. '   ' → logprob: -12.505587577819824
    7. '(i' → logprob: -13.005587577819824
    8. ' ' → logprob: -13.505587577819824
    9. 'segment' → logprob: -13.755587577819824
    10. '       ' → logprob: -13.755587577819824

Token 3181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21591979265213013
    2. '        
' → logprob: -2.9659197330474854
    3. ' 
' → logprob: -3.9659197330474854
    4. '+' → logprob: -3.9659197330474854
    5. ' +' → logprob: -4.0909199714660645
    6. '```' → logprob: -4.3409199714660645
    7. '
' → logprob: -4.7159199714660645
    8. ',' → logprob: -5.0909199714660645
    9. ' if' → logprob: -5.3409199714660645
    10. '     
' → logprob: -5.3409199714660645

Token 3182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09354525804519653
    2. '_' → logprob: -2.7185451984405518
    3. ' _' → logprob: -5.093545436859131
    4. '```' → logprob: -5.218545436859131
    5. '`' → logprob: -5.718545436859131
    6. ',' → logprob: -5.718545436859131
    7. '_
' → logprob: -6.593545436859131
    8. '_,' → logprob: -7.093545436859131
    9. '        
' → logprob: -7.343545436859131
    10. ''' → logprob: -8.218544960021973

Token 3183: ' remainder' (ID: 47056)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.021702788770198822
    2. 're' → logprob: -4.771702766418457
    3. 'rest' → logprob: -5.396702766418457
    4. '       ' → logprob: -6.146702766418457
    5. '   ' → logprob: -6.271702766418457
    6. 'r' → logprob: -6.646702766418457
    7. ' segment' → logprob: -6.771702766418457
    8. 'extra' → logprob: -7.271702766418457
    9. 'rem' → logprob: -7.646702766418457
    10. 'reste' → logprob: -7.771702766418457

Token 3184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04885679483413696
    2. '=' → logprob: -3.048856735229492
    3. 's' → logprob: -8.673856735229492
    4. '_' → logprob: -10.298856735229492
    5. ',' → logprob: -10.798856735229492
    6. '```' → logprob: -11.798856735229492
    7. '       ' → logprob: -12.173856735229492
    8. '_tokens' → logprob: -12.673856735229492
    9. ' ==' → logprob: -12.923856735229492
    10. ')' → logprob: -12.923856735229492

Token 3185: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10965340584516525
    2. ' d' → logprob: -2.3596534729003906
    3. 'segments' → logprob: -4.984653472900391
    4. '(d' → logprob: -7.234653472900391
    5. ' segments' → logprob: -7.234653472900391
    6. 'interval' → logprob: -7.734653472900391
    7. ' (' → logprob: -8.10965347290039
    8. ' intervals' → logprob: -8.23465347290039
    9. '   ' → logprob: -10.73465347290039
    10. '0' → logprob: -10.73465347290039

Token 3186: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.13054241240024567
    2. '%' → logprob: -2.130542516708374
    3. ' %
' → logprob: -6.505542278289795
    4. ' //' → logprob: -7.005542278289795
    5. '       ' → logprob: -7.880542278289795
    6. '%
' → logprob: -8.880542755126953
    7. '   ' → logprob: -8.880542755126953
    8. '=' → logprob: -8.880542755126953
    9. '	' → logprob: -9.380542755126953
    10. '//' → logprob: -9.755542755126953

Token 3187: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.020547257736325264
    2. ' segments' → logprob: -3.8955471515655518
    3. '   ' → logprob: -13.770546913146973
    4. '       ' → logprob: -13.895546913146973
    5. 'segment' → logprob: -14.020546913146973
    6. ' ' → logprob: -14.270546913146973
    7. ' ' → logprob: -14.645546913146973
    8. '_segments' → logprob: -15.145546913146973
    9. '           ' → logprob: -15.520546913146973
    10. 'Segments' → logprob: -15.895546913146973

Token 3188: '

' (ID: 279)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0925390720367432
    2. '
' → logprob: -1.4675390720367432
    3. '       ' → logprob: -1.8425390720367432
    4. ' if' → logprob: -2.217539072036743
    5. '        
' → logprob: -2.342539072036743
    6. 'if' → logprob: -3.842539072036743
    7. '         
' → logprob: -4.842538833618164
    8. '     
' → logprob: -4.967538833618164
    9. ' ' → logprob: -5.342538833618164
    10. '        ' → logprob: -5.467538833618164

Token 3189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24725541472434998
    2. ' if' → logprob: -2.122255325317383
    3. '```' → logprob: -3.122255325317383
    4. 'if' → logprob: -3.372255325317383
    5. '``' → logprob: -6.372255325317383
    6. '\n' → logprob: -6.372255325317383
    7. '	' → logprob: -6.497255325317383
    8. '
' → logprob: -6.622255325317383
    9. '\t' → logprob: -6.622255325317383
    10. ' ' → logprob: -6.747255325317383

Token 3190: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7377827167510986
    2. 'if' → logprob: -1.3627827167510986
    3. ' if' → logprob: -1.3627827167510986
    4. '```' → logprob: -6.1127824783325195
    5. '
' → logprob: -6.4877824783325195
    6. 'offset' → logprob: -6.6127824783325195
    7. '           ' → logprob: -6.6127824783325195
    8. '        
' → logprob: -7.6127824783325195
    9. '        ' → logprob: -7.7377824783325195
    10. 'pos' → logprob: -8.11278247833252

Token 3191: ' Construction' (ID: 31452)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6233611106872559
    2. ' if' → logprob: -1.1233611106872559
    3. '       ' → logprob: -2.748361110687256
    4. 'offset' → logprob: -2.873361110687256
    5. '```' → logprob: -5.748361110687256
    6. ' offset' → logprob: -5.998361110687256
    7. 'segment' → logprob: -6.123361110687256
    8. 'start' → logprob: -6.123361110687256
    9. 'pos' → logprob: -6.623361110687256
    10. 'return' → logprob: -7.373361110687256

Token 3192: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9116470813751221
    2. 'segment' → logprob: -1.411647081375122
    3. 'segments' → logprob: -2.411647081375122
    4. 'length' → logprob: -2.536647081375122
    5. 'parts' → logprob: -3.036647081375122
    6. ' segment' → logprob: -3.411647081375122
    7. ' lengths' → logprob: -3.661647081375122
    8. 'counts' → logprob: -4.411646842956543
    9. 'cuts' → logprob: -4.661646842956543
    10. ' parts' → logprob: -4.911646842956543

Token 3193: ' tableau' (ID: 67053)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9483765959739685
    2. 'segments' → logprob: -0.9483765959739685
    3. 'length' → logprob: -1.9483766555786133
    4. 'def' → logprob: -3.3233766555786133
    5. 'sizes' → logprob: -4.823376655578613
    6. '[' → logprob: -4.948376655578613
    7. 'seg' → logprob: -5.323376655578613
    8. 'split' → logprob: -6.323376655578613
    9. 'prefix' → logprob: -6.448376655578613
    10. 'positions' → logprob: -6.573376655578613

Token 3194: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7098968625068665
    2. 'length' → logprob: -0.8348968625068665
    3. 'segments' → logprob: -2.8348968029022217
    4. 'seg' → logprob: -4.959897041320801
    5. '       ' → logprob: -5.959897041320801
    6. 'lens' → logprob: -6.084897041320801
    7. 'parts' → logprob: -6.584897041320801
    8. 'se' → logprob: -7.459897041320801
    9. 'sizes' → logprob: -7.709897041320801
    10. 'leng' → logprob: -8.3348970413208

Token 3195: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.07243188470602036
    2. 'length' → logprob: -2.947431802749634
    3. '_length' → logprob: -4.572432041168213
    4. 's' → logprob: -5.697432041168213
    5. '_l' → logprob: -6.322432041168213
    6. '_sizes' → logprob: -7.947432041168213
    7. 'sizes' → logprob: -8.447431564331055
    8. '_len' → logprob: -8.822431564331055
    9. 'segments' → logprob: -8.822431564331055
    10. '_bound' → logprob: -8.822431564331055

Token 3196: ' des' (ID: 731)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.15611521899700165
    2. '[' → logprob: -3.4061152935028076
    3. 'seg' → logprob: -3.5311152935028076
    4. 'segments' → logprob: -3.6561152935028076
    5. ' =' → logprob: -4.1561150550842285
    6. '       ' → logprob: -4.1561150550842285
    7. '=' → logprob: -4.9061150550842285
    8. 'length' → logprob: -5.2811150550842285
    9. '   ' → logprob: -5.2811150550842285
    10. '=[' → logprob: -6.1561150550842285

Token 3197: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.025931445881724358
    2. '[' → logprob: -4.025931358337402
    3. 'segment' → logprob: -4.900931358337402
    4. '[
' → logprob: -9.275931358337402
    5. 'length' → logprob: -9.775931358337402
    6. ' segments' → logprob: -9.900931358337402
    7. '[(' → logprob: -10.400931358337402
    8. '[x' → logprob: -11.275931358337402
    9. '(segment' → logprob: -11.400931358337402
    10. '[]
' → logprob: -11.400931358337402

Token 3198: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8374209403991699
    2. '[' → logprob: -1.33742094039917
    3. ' =' → logprob: -2.46242094039917
    4. '[]
' → logprob: -2.46242094039917
    5. 'segment' → logprob: -2.71242094039917
    6. 'segments' → logprob: -4.08742094039917
    7. ' [' → logprob: -4.58742094039917
    8. '=' → logprob: -4.71242094039917
    9. '   ' → logprob: -5.21242094039917
    10. '=[]
' → logprob: -5.33742094039917

Token 3199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31917524337768555
    2. 'segment' → logprob: -1.9441752433776855
    3. '[' → logprob: -2.5691752433776855
    4. ' segment' → logprob: -3.5691752433776855
    5. ' [' → logprob: -4.8191752433776855
    6. '[
' → logprob: -5.3191752433776855
    7. 'segments' → logprob: -5.3191752433776855
    8. '   ' → logprob: -5.9441752433776855
    9. '```' → logprob: -6.0691752433776855
    10. '`' → logprob: -7.6941752433776855

Token 3200: ' #' (ID: 1069)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.23373180627822876
    2. '       ' → logprob: -2.608731746673584
    3. ' segment' → logprob: -2.983731746673584
    4. 'segments' → logprob: -3.108731746673584
    5. 'length' → logprob: -3.983731746673584
    6. '[' → logprob: -4.608731746673584
    7. ' lengths' → logprob: -5.483731746673584
    8. '   ' → logprob: -6.108731746673584
    9. 'seg' → logprob: -6.233731746673584
    10. ' [' → logprob: -7.233731746673584

Token 3201: ' Les' (ID: 7029)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7028735280036926
    2. 'segment' → logprob: -1.0778734683990479
    3. '[
' → logprob: -2.577873468399048
    4. 'length' → logprob: -3.577873468399048
    5. 'segments' → logprob: -3.702873468399048
    6. ' [' → logprob: -4.452873706817627
    7. ' segment' → logprob: -4.702873706817627
    8. '       ' → logprob: -5.327873706817627
    9. '[length' → logprob: -5.702873706817627
    10. '   ' → logprob: -6.452873706817627

Token 3202: ' premiers' (ID: 59140)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5180507898330688
    2. 'segments' → logprob: -2.0180506706237793
    3. '[' → logprob: -2.1430506706237793
    4. '_lengths' → logprob: -3.1430506706237793
    5. ' segment' → logprob: -3.3930506706237793
    6. 's' → logprob: -4.268050670623779
    7. '[]' → logprob: -4.768050670623779
    8. '[
' → logprob: -5.018050670623779
    9. '[i' → logprob: -5.018050670623779
    10. 'length' → logprob: -5.268050670623779

Token 3203: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.04267243668437004
    2. 'segments' → logprob: -3.2926723957061768
    3. 'rem' → logprob: -6.417672634124756
    4. ' remainder' → logprob: -6.667672634124756
    5. 'ré' → logprob: -7.417672634124756
    6. 'segment' → logprob: -8.292672157287598
    7. ' segments' → logprob: -8.542672157287598
    8. 'reste' → logprob: -8.792672157287598
    9. 'rest' → logprob: -8.917672157287598
    10. 'rema' → logprob: -9.042672157287598

Token 3204: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.9632958173751831
    2. '+' → logprob: -1.213295817375183
    3. '_segments' → logprob: -1.588295817375183
    4. ' +' → logprob: -3.4632959365844727
    5. ' segments' → logprob: -3.5882959365844727
    6. '_' → logprob: -3.5882959365844727
    7. 's' → logprob: -4.963295936584473
    8. ' _' → logprob: -5.213295936584473
    9. '=' → logprob: -5.713295936584473
    10. '_s' → logprob: -5.838295936584473

Token 3205: ' ont' (ID: 4930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5756223797798157
    2. ' =' → logprob: -0.9506223797798157
    3. 's' → logprob: -3.950622320175171
    4. '.append' → logprob: -4.57562255859375
    5. '=[' → logprob: -5.07562255859375
    6. '=[]' → logprob: -6.20062255859375
    7. '+' → logprob: -6.45062255859375
    8. '[i' → logprob: -6.70062255859375
    9. '_lengths' → logprob: -6.70062255859375
    10. ' sont' → logprob: -6.95062255859375

Token 3206: ' ' (ID: 220)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.02095137909054756
    2. 'length' → logprob: -4.770951271057129
    3. '(segment' → logprob: -5.145951271057129
    4. '1' → logprob: -5.895951271057129
    5. ' segment' → logprob: -6.395951271057129
    6. '+' → logprob: -7.520951271057129
    7. 'long' → logprob: -7.895951271057129
    8. '   ' → logprob: -8.145951271057129
    9. 'une' → logprob: -8.270951271057129
    10. ' ' → logprob: -8.270951271057129

Token 3207: '1' (ID: 16)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0008993157534860075
    2. '(segment' → logprob: -7.500899314880371
    3. '1' → logprob: -9.125899314880371
    4. ' segment' → logprob: -9.250899314880371
    5. '   ' → logprob: -9.500899314880371
    6. 'length' → logprob: -10.250899314880371
    7. 'segments' → logprob: -11.375899314880371
    8. ' ' → logprob: -12.125899314880371
    9. 'long' → logprob: -12.750899314880371
    10. '```' → logprob: -13.000899314880371

Token 3208: ' élément' (ID: 99627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5946599245071411
    2. ' +' → logprob: -1.3446599245071411
    3. 'segment' → logprob: -2.8446598052978516
    4. 'plus' → logprob: -3.4696598052978516
    5. ' plus' → logprob: -3.8446598052978516
    6. ')' → logprob: -3.9696598052978516
    7. '```' → logprob: -4.469659805297852
    8. ' segment' → logprob: -4.719659805297852
    9. ' de' → logprob: -5.094659805297852
    10. 'segments' → logprob: -5.594659805297852

Token 3209: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3921267986297607
    2. ' =' → logprob: -1.7671267986297607
    3. 'segment' → logprob: -2.3921267986297607
    4. '[' → logprob: -2.6421267986297607
    5. '=' → logprob: -3.0171267986297607
    6. '       ' → logprob: -3.1421267986297607
    7. 'segments' → logprob: -3.2671267986297607
    8. '[
' → logprob: -3.3921267986297607
    9. ' segment' → logprob: -3.3921267986297607
    10. '[i' → logprob: -3.7671267986297607

Token 3210: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.004510108381509781
    2. '+' → logprob: -6.129509925842285
    3. 'long' → logprob: -6.754509925842285
    4. ' plus' → logprob: -7.254509925842285
    5. 'segment' → logprob: -8.379509925842285
    6. 'more' → logprob: -9.504509925842285
    7. '+
' → logprob: -9.879509925842285
    8. '1' → logprob: -10.629509925842285
    9. 'length' → logprob: -10.754509925842285
    10. ' +' → logprob: -11.004509925842285

Token 3211: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1780943870544434
    2. ' =' → logprob: -1.3030943870544434
    3. '[' → logprob: -1.5530943870544434
    4. '[
' → logprob: -2.4280943870544434
    5. '=' → logprob: -3.5530943870544434
    6. 'segments' → logprob: -3.8030943870544434
    7. 'segment' → logprob: -4.428094387054443
    8. ',' → logprob: -4.553094387054443
    9. '[]
' → logprob: -4.928094387054443
    10. ' =
' → logprob: -5.553094387054443

Token 3212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14540916681289673
    2. '[' → logprob: -3.020409107208252
    3. ' =' → logprob: -3.895409107208252
    4. 'segments' → logprob: -4.520409107208252
    5. 'segment' → logprob: -4.770409107208252
    6. '           ' → logprob: -4.895409107208252
    7. '[
' → logprob: -5.020409107208252
    8. '```' → logprob: -5.270409107208252
    9. ',' → logprob: -5.520409107208252
    10. ' segment' → logprob: -5.520409107208252

Token 3213: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' (adapté à ' segment') → logprob: -0.6514965295791626
    2. '       ' → logprob: -1.6514965295791626
    3. ' segment' → logprob: -1.6514965295791626
    4. 'segments' → logprob: -3.026496410369873
    5. 'length' → logprob: -4.026496410369873
    6. ' lengths' → logprob: -4.276496410369873
    7. '[' → logprob: -5.026496410369873
    8. ' segments' → logprob: -6.276496410369873
    9. 'seg' → logprob: -6.776496410369873
    10. '[
' → logprob: -6.901496410369873

Token 3214: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.015476031228899956
    2. 's' → logprob: -4.890476226806641
    3. '_length' → logprob: -4.890476226806641
    4. 'length' → logprob: -8.51547622680664
    5. '_l' → logprob: -10.26547622680664
    6. '_len' → logprob: -10.89047622680664
    7. '```' → logprob: -11.26547622680664
    8. '_sizes' → logprob: -11.26547622680664
    9. '[' → logprob: -12.39047622680664
    10. '   ' → logprob: -12.51547622680664

Token 3215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003276579547673464
    2. ' =' → logprob: -5.753276348114014
    3. '=[' → logprob: -9.253276824951172
    4. '=[]' → logprob: -13.503276824951172
    5. '[' → logprob: -13.878276824951172
    6. '=
' → logprob: -15.253276824951172
    7. '=[
' → logprob: -15.503276824951172
    8. '=[]
' → logprob: -15.503276824951172
    9. ' =[' → logprob: -16.253276824951172
    10. ',' → logprob: -17.503276824951172

Token 3216: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018661346985027194
    2. '[(' → logprob: -9.750186920166016
    3. ' [' → logprob: -9.875186920166016
    4. '[s' → logprob: -10.125186920166016
    5. '[x' → logprob: -11.625186920166016
    6. '[length' → logprob: -12.125186920166016
    7. '   ' → logprob: -12.500186920166016
    8. '[]
' → logprob: -13.250186920166016
    9. '[size' → logprob: -13.625186920166016
    10. '([' → logprob: -13.625186920166016

Token 3217: 'segment' (ID: 45362)
  Prédit: 'segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.01292184554040432
    2. '(segment' → logprob: -4.3879218101501465
    3. 'segments' → logprob: -8.512922286987305
    4. ' segment' → logprob: -9.012922286987305
    5. '(' → logprob: -10.262922286987305
    6. '   ' → logprob: -11.137922286987305
    7. '1' → logprob: -11.262922286987305
    8. ' (' → logprob: -11.637922286987305
    9. 'd' → logprob: -12.387922286987305
    10. '(d' → logprob: -12.387922286987305

Token 3218: '_length' (ID: 11514)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.2732565999031067
    2. '_length' → logprob: -1.523256540298462
    3. 's' → logprob: -4.773256778717041
    4. '[i' → logprob: -5.273256778717041
    5. ' _' → logprob: -7.023256778717041
    6. '_' → logprob: -7.148256778717041
    7. '   ' → logprob: -7.148256778717041
    8. 'i' → logprob: -7.523256778717041
    9. '[_' → logprob: -7.523256778717041
    10. '(i' → logprob: -7.523256778717041

Token 3219: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.25906550884246826
    2. 's' → logprob: -1.5090655088424683
    3. 'base' → logprob: -5.259065628051758
    4. 'Base' → logprob: -7.384065628051758
    5. ' +' → logprob: -8.009065628051758
    6. '+' → logprob: -8.009065628051758
    7. '   ' → logprob: -8.759065628051758
    8. '
' → logprob: -9.134065628051758
    9. '_' → logprob: -10.509065628051758
    10. '       ' → logprob: -10.634065628051758

Token 3220: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4318373501300812
    2. '+' → logprob: -1.4318373203277588
    3. ']*(' → logprob: -3.181837320327759
    4. ']+' → logprob: -3.556837320327759
    5. ']*' → logprob: -3.931837320327759
    6. ' +' → logprob: -4.056837558746338
    7. 'for' → logprob: -6.306837558746338
    8. ' for' → logprob: -7.306837558746338
    9. ' ]' → logprob: -7.306837558746338
    10. '+(' → logprob: -7.306837558746338

Token 3221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001681405701674521
    2. '(' → logprob: -8.750167846679688
    3. ' ' → logprob: -12.875167846679688
    4. '(i' → logprob: -13.250167846679688
    5. 'int' → logprob: -14.000167846679688
    6. '0' → logprob: -14.250167846679688
    7. '```' → logprob: -14.375167846679688
    8. '(int' → logprob: -14.500167846679688
    9. '   ' → logprob: -14.625167846679688
    10. ' (' → logprob: -14.875167846679688

Token 3222: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5801663398742676
    2. ' for' → logprob: -1.2051663398742676
    3. 'for' → logprob: -2.5801663398742676
    4. 'if' → logprob: -3.2051663398742676
    5. ']' → logprob: -3.9551663398742676
    6. ']*' → logprob: -5.955166339874268
    7. '       ' → logprob: -6.955166339874268
    8. ']*(' → logprob: -7.705166339874268
    9. '        ' → logprob: -7.955166339874268
    10. '	for' → logprob: -8.58016586303711

Token 3223: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8887813687324524
    2. 'j' → logprob: -0.8887813687324524
    3. 'r' → logprob: -2.5137813091278076
    4. 'k' → logprob: -2.7637813091278076
    5. 'idx' → logprob: -3.8887813091278076
    6. 's' → logprob: -4.763781547546387
    7. 'x' → logprob: -6.638781547546387
    8. '_j' → logprob: -6.763781547546387
    9. '_' → logprob: -7.388781547546387
    10. '_i' → logprob: -8.013781547546387

Token 3224: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.005730044096708298
    2. ' <' → logprob: -5.880730152130127
    3. 'j' → logprob: -6.005730152130127
    4. '[j' → logprob: -8.755729675292969
    5. ' j' → logprob: -9.255729675292969
    6. '<n' → logprob: -10.255729675292969
    7. ',j' → logprob: -10.755729675292969
    8. '<len' → logprob: -11.005729675292969
    9. '<J' → logprob: -11.130729675292969
    10. '<size' → logprob: -11.380729675292969

Token 3225: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0006348780007101595
    2. ' remainder' → logprob: -7.375634670257568
    3. '   ' → logprob: -12.750635147094727
    4. 'rest' → logprob: -13.250635147094727
    5. 'rem' → logprob: -13.750635147094727
    6. '	re' → logprob: -14.250635147094727
    7. ' ' → logprob: -14.500635147094727
    8. 'rema' → logprob: -14.875635147094727
    9. '           ' → logprob: -15.750635147094727
    10. '       ' → logprob: -16.125635147094727

Token 3226: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4740801155567169
    2. 'else' → logprob: -0.9740800857543945
    3. '	else' → logprob: -13.974080085754395
    4. ' ' → logprob: -14.224080085754395
    5. '_else' → logprob: -14.974080085754395
    6. 'j' → logprob: -15.474080085754395
    7. '   ' → logprob: -15.474080085754395
    8. ' ' → logprob: -15.474080085754395
    9. '       ' → logprob: -15.849080085754395
    10. '        ' → logprob: -16.47408103942871

Token 3227: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.3782830137643032e-05
    2. ' segment' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.12501335144043
    4. '           ' → logprob: -15.12501335144043
    5. '(segment' → logprob: -15.87501335144043
    6. '       ' → logprob: -16.87501335144043
    7. '               ' → logprob: -17.37501335144043
    8. '          ' → logprob: -18.37501335144043
    9. '                   ' → logprob: -19.00001335144043
    10. '         ' → logprob: -19.25001335144043

Token 3228: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -9.014684110297821e-06
    2. '_lengths' → logprob: -11.875008583068848
    3. 'length' → logprob: -14.000008583068848
    4. '_base' → logprob: -14.875008583068848
    5. 'e' → logprob: -15.000008583068848
    6. 's' → logprob: -15.625008583068848
    7. '```' → logprob: -16.875009536743164
    8. 'Length' → logprob: -17.125009536743164
    9. '_segment' → logprob: -17.125009536743164
    10. ']_' → logprob: -17.375009536743164

Token 3229: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -3.249780638725497e-05
    2. 'base' → logprob: -11.250032424926758
    3. '_length' → logprob: -11.375032424926758
    4. 'Base' → logprob: -12.250032424926758
    5. 's' → logprob: -13.750032424926758
    6. '_BASE' → logprob: -14.625032424926758
    7. '```' → logprob: -15.125032424926758
    8. '_lengths' → logprob: -15.500032424926758
    9. '-base' → logprob: -15.750032424926758
    10. ')' → logprob: -15.750032424926758

Token 3230: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4745118319988251
    2. 'for' → logprob: -0.9745118618011475
    3. '       ' → logprob: -8.224512100219727
    4. '        ' → logprob: -9.724512100219727
    5. '	for' → logprob: -10.099512100219727
    6. ')' → logprob: -10.974512100219727
    7. '           ' → logprob: -11.474512100219727
    8. '   ' → logprob: -12.099512100219727
    9. ' ' → logprob: -12.224512100219727
    10. '    ' → logprob: -12.349512100219727

Token 3231: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16025713086128235
    2. 'range' → logprob: -1.91025710105896
    3. ' j' → logprob: -11.160257339477539
    4. ' range' → logprob: -11.160257339477539
    5. '   ' → logprob: -12.535257339477539
    6. '  ' → logprob: -15.410257339477539
    7. '_j' → logprob: -15.535257339477539
    8. ' ' → logprob: -16.41025733947754
    9. '       ' → logprob: -16.53525733947754
    10. '	j' → logprob: -16.53525733947754

Token 3232: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0069290888495743275
    2. ' range' → logprob: -5.00692892074585
    3. 'j' → logprob: -8.506929397583008
    4. ' j' → logprob: -11.506929397583008
    5. '(range' → logprob: -13.506929397583008
    6. '
' → logprob: -16.256929397583008
    7. ' ' → logprob: -17.256929397583008
    8. '_j' → logprob: -17.506929397583008
    9. '	range' → logprob: -18.006929397583008
    10. '  ' → logprob: -18.131929397583008

Token 3233: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.875003814697266
    3. 'j' → logprob: -14.125003814697266
    4. 'segment' → logprob: -15.000003814697266
    5. '(range' → logprob: -16.875003814697266
    6. '
' → logprob: -17.250003814697266
    7. '[j' → logprob: -18.000003814697266
    8. 'enumer' → logprob: -20.125003814697266
    9. '	range' → logprob: -20.125003814697266
    10. 'list' → logprob: -20.875003814697266

Token 3234: '(' (ID: 7)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -2.463036435074173e-05
    2. ' segments' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.500024795532227
    4. 'j' → logprob: -16.750024795532227
    5. '
' → logprob: -18.250024795532227
    6. 'sections' → logprob: -18.625024795532227
    7. 'Segments' → logprob: -18.750024795532227
    8. 'segment' → logprob: -18.750024795532227
    9. 'seg' → logprob: -19.000024795532227
    10. '_segments' → logprob: -19.250024795532227

Token 3235: 'segments' (ID: 110314)
  Prédit: 'segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -7.362307223957032e-05
    2. ' segments' → logprob: -10.000073432922363
    3. 'j' → logprob: -10.750073432922363
    4. 'x' → logprob: -12.625073432922363
    5. '0' → logprob: -14.625073432922363
    6. 'sections' → logprob: -14.625073432922363
    7. '   ' → logprob: -15.000073432922363
    8. 'segment' → logprob: -15.250073432922363
    9. '_segments' → logprob: -15.250073432922363
    10. ')' → logprob: -15.500073432922363

Token 3236: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4775417745113373
    2. ']' → logprob: -0.9775418043136597
    3. ')' → logprob: -6.602541923522949
    4. ')]
' → logprob: -6.852541923522949
    5. ']
' → logprob: -7.477541923522949
    6. '       ' → logprob: -7.852541923522949
    7. ' ]' → logprob: -9.97754192352295
    8. '   ' → logprob: -10.97754192352295
    9. ')]

' → logprob: -11.97754192352295
    10. ')]
' → logprob: -12.47754192352295

Token 3237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017165658995509148
    2. 'if' → logprob: -5.767165660858154
    3. 'total' → logprob: -6.017165660858154
    4. '```' → logprob: -6.392165660858154
    5. 'pos' → logprob: -7.017165660858154
    6. 's' → logprob: -7.017165660858154
    7. '   ' → logprob: -7.142165660858154
    8. 'def' → logprob: -7.267165660858154
    9. 'segment' → logprob: -7.267165660858154
    10. 'for' → logprob: -7.392165660858154

Token 3238: ' if' (ID: 538)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.9089541435241699
    2. '       ' → logprob: -1.28395414352417
    3. 'pos' → logprob: -1.40895414352417
    4. 'if' (adapté à ' if') → logprob: -2.78395414352417
    5. 'station' → logprob: -5.15895414352417
    6. 'total' → logprob: -6.40895414352417
    7. 'start' → logprob: -6.90895414352417
    8. '   ' → logprob: -7.15895414352417
    9. 'segment' → logprob: -7.28395414352417
    10. 'acc' → logprob: -7.65895414352417

Token 3239: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.0011968977050855756
    2. ' endpoint' → logprob: -6.75119686126709
    3. '   ' → logprob: -11.62619686126709
    4. 'station' → logprob: -12.00119686126709
    5. 'not' → logprob: -12.50119686126709
    6. '           ' → logprob: -12.75119686126709
    7. '       ' → logprob: -12.87619686126709
    8. 'None' → logprob: -14.00119686126709
    9. '(endpoint' → logprob: -14.75119686126709
    10. '
' → logprob: -16.001197814941406

Token 3240: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1354390382766724
    2. ' !=' → logprob: -1.2604390382766724
    3. '==' → logprob: -2.135438919067383
    4. ' >' → logprob: -2.260438919067383
    5. '!=' → logprob: -2.885438919067383
    6. '>' → logprob: -3.135438919067383
    7. ' is' → logprob: -3.510438919067383
    8. ' >=' → logprob: -4.385438919067383
    9. ' <=' → logprob: -4.510438919067383
    10. '<=' → logprob: -5.260438919067383

Token 3241: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1277698427438736
    2. 'not' → logprob: -2.127769947052002
    3. ' not' → logprob: -7.627769947052002
    4. ' None' → logprob: -8.002769470214844
    5. 'Not' → logprob: -11.877769470214844
    6. '   ' → logprob: -12.002769470214844
    7. '=None' → logprob: -13.002769470214844
    8. 'none' → logprob: -13.502769470214844
    9. '(None' → logprob: -13.627769470214844
    10. '_None' → logprob: -14.252769470214844

Token 3242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007036108523607254
    2. ':
' → logprob: -5.007036209106445
    3. ':return' → logprob: -9.257036209106445
    4. '[' → logprob: -9.632036209106445
    5. ' :' → logprob: -10.257036209106445
    6. '       ' → logprob: -10.507036209106445
    7. '<|end|>' → logprob: -10.507036209106445
    8. '<|end|>' → logprob: -11.507036209106445
    9. '):' → logprob: -11.757036209106445
    10. '           ' → logprob: -11.757036209106445

Token 3243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07940215617418289
    2. 'return' → logprob: -3.329402208328247
    3. '       ' → logprob: -3.454402208328247
    4. '#' → logprob: -6.329401969909668
    5. '```' → logprob: -6.579401969909668
    6. '
' → logprob: -6.704401969909668
    7. '               ' → logprob: -7.579401969909668
    8. '{
' → logprob: -7.829401969909668
    9. '{return' → logprob: -7.954401969909668
    10. '{' → logprob: -8.079401969909668

Token 3244: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04621456563472748
    2. '       ' → logprob: -3.5462145805358887
    3. ' return' → logprob: -5.421214580535889
    4. '#' (adapté à ' #') → logprob: -5.796214580535889
    5. 'time' → logprob: -5.921214580535889
    6. '           ' → logprob: -5.921214580535889
    7. 'segment' → logprob: -6.921214580535889
    8. 'total' → logprob: -7.171214580535889
    9. '   ' → logprob: -7.921214580535889
    10. '
' → logprob: -8.17121410369873

Token 3245: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5119363069534302
    2. 'total' → logprob: -2.3869361877441406
    3. 'time' → logprob: -2.5119361877441406
    4. '       ' → logprob: -3.0119361877441406
    5. 'res' → logprob: -3.5119361877441406
    6. 'length' → logprob: -3.6369361877441406
    7. '#' → logprob: -3.6369361877441406
    8. 'segment' → logprob: -3.6369361877441406
    9. 'result' → logprob: -3.8869361877441406
    10. 'ret' → logprob: -4.386936187744141

Token 3246: ' couvre' (ID: 137218)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9210056066513062
    2. '[' → logprob: -1.5460056066513062
    3. 'continue' → logprob: -2.5460057258605957
    4. '[i' → logprob: -2.7960057258605957
    5. 'def' → logprob: -2.9210057258605957
    6. ']' → logprob: -3.0460057258605957
    7. '=' → logprob: -4.046005725860596
    8. ':
' → logprob: -4.421005725860596
    9. '#' → logprob: -4.671005725860596
    10. ' return' → logprob: -4.921005725860596

Token 3247: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -1.029441237449646
    2. 'l' → logprob: -1.529441237449646
    3. 'ent' → logprob: -1.654441237449646
    4. '           ' → logprob: -2.0294413566589355
    5. 'le' → logprob: -3.1544413566589355
    6. 't' → logprob: -3.2794413566589355
    7. ' tout' → logprob: -5.2794413566589355
    8. ' toute' → logprob: -5.5294413566589355
    9. 'la' → logprob: -5.7794413566589355
    10. ' l' → logprob: -5.7794413566589355

Token 3248: ' l' (ID: 305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5350310802459717
    2. '[i' → logprob: -1.6600310802459717
    3. ':
' → logprob: -1.7850310802459717
    4. 'interval' → logprob: -2.2850310802459717
    5. ':' → logprob: -2.6600310802459717
    6. '
' → logprob: -2.6600310802459717
    7. '```' → logprob: -2.9100310802459717
    8. '       ' → logprob: -3.4100310802459717
    9. '(i' → logprob: -3.7850310802459717
    10. '               ' → logprob: -4.410031318664551

Token 3249: '’' (ID: 438)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.04649646580219269
    2. '_' → logprob: -4.171496391296387
    3. 'e' → logprob: -4.546496391296387
    4. ''' → logprob: -5.046496391296387
    5. '_interval' → logprob: -5.671496391296387
    6. ']' → logprob: -6.671496391296387
    7. 'i' → logprob: -6.796496391296387
    8. '[' → logprob: -7.046496391296387
    9. ' interval' → logprob: -7.171496391296387
    10. '_
' → logprob: -7.671496391296387

Token 3250: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0013314292300492525
    2. ''' → logprob: -7.501331329345703
    3. 'i' → logprob: -7.751331329345703
    4. 'segment' → logprob: -8.751331329345703
    5. 'inter' → logprob: -10.126331329345703
    6. ']' → logprob: -10.376331329345703
    7. '(interval' → logprob: -11.126331329345703
    8. '')' → logprob: -11.626331329345703
    9. ' interval' → logprob: -11.751331329345703
    10. '`' → logprob: -11.876331329345703

Token 3251: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0721975564956665
    2. 'val' → logprob: -1.8221975564956665
    3. 'aire' → logprob: -2.072197437286377
    4. 'le' → logprob: -2.197197437286377
    5. ']' → logprob: -2.822197437286377
    6. 'al' → logprob: -2.947197437286377
    7. 'er' → logprob: -3.322197437286377
    8. 'r' → logprob: -3.947197437286377
    9. 'ale' → logprob: -4.072197437286377
    10. 'v' → logprob: -4.322197437286377

Token 3252: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1144527196884155
    2. ':
' → logprob: -1.1144527196884155
    3. '       ' → logprob: -1.3644527196884155
    4. ':' → logprob: -3.239452838897705
    5. 'return' → logprob: -3.989452838897705
    6. '
' → logprob: -4.239452838897705
    7. '```' → logprob: -5.614452838897705
    8. ' return' → logprob: -6.364452838897705
    9. '[i' → logprob: -6.614452838897705
    10. ' :
' → logprob: -6.864452838897705

Token 3253: ' donc' (ID: 14206)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.686641275882721
    2. ' return' → logprob: -0.811641275882721
    3. ' segment' → logprob: -3.686641216278076
    4. '           ' → logprob: -4.686641216278076
    5. '       ' → logprob: -4.936641216278076
    6. 'segment' → logprob: -5.311641216278076
    7. ' ' → logprob: -5.936641216278076
    8. '0' → logprob: -7.811641216278076
    9. ' retour' → logprob: -7.936641216278076
    10. '   ' → logprob: -8.061641693115234

Token 3254: ' temps' (ID: 11160)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.2768692374229431
    2. 'segments' → logprob: -2.276869297027588
    3. 'return' → logprob: -3.151869297027588
    4. 'interval' → logprob: -3.276869297027588
    5. '(segment' → logprob: -3.401869297027588
    6. 'd' → logprob: -5.276869297027588
    7. ' segment' → logprob: -5.401869297027588
    8. 'S' → logprob: -5.776869297027588
    9. '(interval' → logprob: -6.026869297027588
    10. 'C' → logprob: -6.651869297027588

Token 3255: ' total' (ID: 3609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15718227624893188
    2. ' =' → logprob: -2.032182216644287
    3. '   ' → logprob: -6.032182216644287
    4. 'total' → logprob: -6.032182216644287
    5. '       ' → logprob: -6.532182216644287
    6. '           ' → logprob: -7.032182216644287
    7. 'return' → logprob: -7.032182216644287
    8. 's' → logprob: -7.282182216644287
    9. 'max' → logprob: -7.282182216644287
    10. '_total' → logprob: -7.407182216644287

Token 3256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22860033810138702
    2. ' =' → logprob: -1.6036003828048706
    3. 'return' → logprob: -6.85360050201416
    4. ':' → logprob: -7.60360050201416
    5. '       ' → logprob: -8.10360050201416
    6. '           ' → logprob: -8.22860050201416
    7. '   ' → logprob: -8.35360050201416
    8. '*' → logprob: -9.22860050201416
    9. '=C' → logprob: -9.35360050201416
    10. ' return' → logprob: -9.60360050201416

Token 3257: ' d' (ID: 272)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.45876944065093994
    2. 'segment' → logprob: -1.45876944065094
    3. 'd' → logprob: -2.4587693214416504
    4. 'interval' → logprob: -3.2087693214416504
    5. '(segment' → logprob: -5.58376932144165
    6. '(interval' → logprob: -6.33376932144165
    7. ' segments' → logprob: -6.70876932144165
    8. '(d' → logprob: -6.83376932144165
    9. '(' → logprob: -7.58376932144165
    10. ' segment' → logprob: -7.83376932144165

Token 3258: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20242848992347717
    2. '*' → logprob: -1.7024284601211548
    3. '*C' → logprob: -6.952428340911865
    4. '   ' → logprob: -10.577428817749023
    5. ' ' → logprob: -11.077428817749023
    6. '#' → logprob: -12.702428817749023
    7. '       ' → logprob: -12.827428817749023
    8. '*c' → logprob: -12.952428817749023
    9. ' ' → logprob: -12.952428817749023
    10. '           ' → logprob: -13.702428817749023

Token 3259: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.002834111684933305
    2. ' C' → logprob: -5.877834320068359
    3. ')' → logprob: -11.50283432006836
    4. '```' → logprob: -12.12783432006836
    5. ' ' → logprob: -12.87783432006836
    6. ''' → logprob: -13.12783432006836
    7. 'print' → logprob: -13.62783432006836
    8. '<|end|>' → logprob: -13.87783432006836
    9. '`' → logprob: -14.12783432006836
    10. ' ' → logprob: -14.25283432006836

Token 3260: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05637746676802635
    2. '
' → logprob: -3.681377410888672
    3. 'return' → logprob: -3.806377410888672
    4. '           ' → logprob: -5.806377410888672
    5. '   ' → logprob: -6.681377410888672
    6. ' return' → logprob: -7.056377410888672
    7. '```' → logprob: -7.431377410888672
    8. ')' → logprob: -7.806377410888672
    9. '\n' → logprob: -8.056377410888672
    10. '+' → logprob: -8.556377410888672

Token 3261: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2494233399629593
    2. '\n' → logprob: -2.1244232654571533
    3. ')
' → logprob: -2.3744232654571533
    4. ')\' → logprob: -5.124423503875732
    5. '")' → logprob: -7.249423503875732
    6. '#' → logprob: -8.749423027038574
    7. '```' → logprob: -8.749423027038574
    8. '"\' → logprob: -8.999423027038574
    9. '')' → logprob: -9.124423027038574
    10. '``' → logprob: -9.374423027038574

Token 3262: ' sem' (ID: 2743)
  Prédit: 'sem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sem' → logprob: -0.033096086233854294
    2. 'ent' → logprob: -4.2830963134765625
    3. 'total' → logprob: -5.7830963134765625
    4. 'segment' → logprob: -5.9080963134765625
    5. 'temps' → logprob: -5.9080963134765625
    6. 'full' → logprob: -6.4080963134765625
    7. 'semi' → logprob: -7.1580963134765625
    8. ' sem' → logprob: -7.1580963134765625
    9. ' totalité' → logprob: -7.2830963134765625
    10. '```' → logprob: -7.4080963134765625

Token 3263: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.616855800151825
    2. 'express' → logprob: -1.2418558597564697
    3. ')' → logprob: -2.2418558597564697
    4. 'pexpr' → logprob: -3.7418558597564697
    5. '))' → logprob: -4.616855621337891
    6. '-ex' → logprob: -5.366855621337891
    7. '-' → logprob: -5.741855621337891
    8. '(express' → logprob: -5.741855621337891
    9. '```' → logprob: -6.241855621337891
    10. ' express' → logprob: -6.366855621337891

Token 3264: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00791133102029562
    2. ')
' → logprob: -5.257911205291748
    3. ' )' → logprob: -6.882911205291748
    4. ')\' → logprob: -7.007911205291748
    5. ')
' → logprob: -7.757911205291748
    6. '   ' → logprob: -9.132911682128906
    7. '\n' → logprob: -9.507911682128906
    8. ' )
' → logprob: -10.882911682128906
    9. '```' → logprob: -11.132911682128906
    10. '       ' → logprob: -11.257911682128906

Token 3265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1747271567583084
    2. '       ' → logprob: -1.924727201461792
    3. 'return' → logprob: -5.049726963043213
    4. '
' → logprob: -5.049726963043213
    5. '   ' → logprob: -7.674726963043213
    6. ' return' → logprob: -8.424727439880371
    7. ':
' → logprob: -8.424727439880371
    8. '```' → logprob: -8.549727439880371
    9. '               ' → logprob: -8.674727439880371
    10. '\n' → logprob: -9.799727439880371

Token 3266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04210810363292694
    2. '           ' → logprob: -3.2921080589294434
    3. '       ' → logprob: -6.167108058929443
    4. ' return' → logprob: -6.292108058929443
    5. '   ' → logprob: -10.042108535766602
    6. '```' → logprob: -10.167108535766602
    7. '
' → logprob: -11.417108535766602
    8. '               ' → logprob: -12.417108535766602
    9. '{return' → logprob: -12.917108535766602
    10. ':return' → logprob: -13.167108535766602

Token 3267: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.31360021233558655
    2. 'd' → logprob: -1.3136001825332642
    3. ' segments' → logprob: -9.313600540161133
    4. 'segments' → logprob: -9.688600540161133
    5. ' C' → logprob: -10.188600540161133
    6. 'C' → logprob: -10.188600540161133
    7. '   ' → logprob: -10.563600540161133
    8. ' segment' → logprob: -10.688600540161133
    9. ' ' → logprob: -10.813600540161133
    10. 'segment' → logprob: -11.438600540161133

Token 3268: '*C' (ID: 194570)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0701034888625145
    2. '*' → logprob: -2.695103406906128
    3. '*C' → logprob: -8.820103645324707
    4. '   ' → logprob: -11.695103645324707
    5. ')' → logprob: -12.320103645324707
    6. '       ' → logprob: -13.320103645324707
    7. ' ' → logprob: -13.945103645324707
    8. ' ' → logprob: -13.945103645324707
    9. '*(' → logprob: -14.320103645324707
    10. '*object' → logprob: -14.945103645324707

Token 3269: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5225940346717834
    2. '
' → logprob: -1.1475939750671387
    3. '\n' → logprob: -3.1475939750671387
    4. ')' → logprob: -3.8975939750671387
    5. '   ' → logprob: -4.272593975067139
    6. '<|end|>' → logprob: -5.772593975067139
    7. ')
' → logprob: -6.022593975067139
    8. '        
' → logprob: -6.022593975067139
    9. '```' → logprob: -6.772593975067139
    10. '    
' → logprob: -7.022593975067139

Token 3270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14676068723201752
    2. '
' → logprob: -2.0217607021331787
    3. '        
' → logprob: -6.0217604637146
    4. '<|end|>' → logprob: -7.6467604637146
    5. ')
' → logprob: -8.396760940551758
    6. ')' → logprob: -8.396760940551758
    7. '    
' → logprob: -8.646760940551758
    8. '  
' → logprob: -9.771760940551758
    9. '\
' → logprob: -9.771760940551758
    10. '   ' → logprob: -9.771760940551758

Token 3271: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027976060286164284
    2. '
' → logprob: -4.027976036071777
    3. 'offset' → logprob: -5.277976036071777
    4. 'if' → logprob: -7.152976036071777
    5. '   ' → logprob: -7.152976036071777
    6. '        
' → logprob: -7.277976036071777
    7. 'station' → logprob: -7.277976036071777
    8. ' if' → logprob: -7.652976036071777
    9. 'pos' → logprob: -8.027976036071777
    10. ' station' → logprob: -8.777976036071777

Token 3272: ' station' (ID: 11538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08737518638372421
    2. ' if' → logprob: -2.9623751640319824
    3. 'if' → logprob: -3.7123751640319824
    4. 'offset' → logprob: -6.212375164031982
    5. 'segment' → logprob: -6.712375164031982
    6. '   ' → logprob: -7.212375164031982
    7. '```' → logprob: -7.587375164031982
    8. 'station' → logprob: -7.587375164031982
    9. '        ' → logprob: -7.837375164031982
    10. '        
' → logprob: -8.33737564086914

Token 3273: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.0006979000172577798
    2. '_limit' → logprob: -7.625698089599609
    3. 'offset' → logprob: -8.75069808959961
    4. '_pos' → logprob: -11.00069808959961
    5. '_position' → logprob: -11.37569808959961
    6. '_offsets' → logprob: -11.87569808959961
    7. '_index' → logprob: -12.25069808959961
    8. '_distance' → logprob: -13.25069808959961
    9. '```' → logprob: -13.62569808959961
    10. '_length' → logprob: -13.75069808959961

Token 3274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17981453239917755
    2. ' =' → logprob: -1.8048145771026611
    3. '_offset' → logprob: -10.429814338684082
    4. 'offset' → logprob: -10.679814338684082
    5. '=
' → logprob: -12.304814338684082
    6. '=end' → logprob: -12.929814338684082
    7. 'endpoint' → logprob: -13.429814338684082
    8. '```' → logprob: -13.429814338684082
    9. ':' → logprob: -13.804814338684082
    10. '=int' → logprob: -13.929814338684082

Token 3275: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.16971632838249207
    2. ' endpoint' → logprob: -1.9197163581848145
    3. 'station' → logprob: -4.9197163581848145
    4. ' station' → logprob: -6.1697163581848145
    5. '(endpoint' → logprob: -10.669715881347656
    6. '   ' → logprob: -11.544715881347656
    7. 'int' → logprob: -13.169715881347656
    8. '       ' → logprob: -13.169715881347656
    9. 'end' → logprob: -13.294715881347656
    10. ' ' → logprob: -13.357215881347656

Token 3276: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6866083145141602
    2. '=' → logprob: -1.1866083145141602
    3. ' -' → logprob: -2.18660831451416
    4. ' =' → logprob: -2.56160831451416
    5. '[i' → logprob: -7.56160831451416
    6. '=i' → logprob: -8.31160831451416
    7. ')' → logprob: -8.81160831451416
    8. ' ' → logprob: -9.31160831451416
    9. '```' → logprob: -9.43660831451416
    10. 'endpoint' → logprob: -9.56160831451416

Token 3277: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.754368223482743e-05
    2. ' S' → logprob: -9.625067710876465
    3. '(S' → logprob: -14.750067710876465
    4. '   ' → logprob: -14.875067710876465
    5. '           ' → logprob: -15.125067710876465
    6. ')' → logprob: -16.12506675720215
    7. '       ' → logprob: -16.37506675720215
    8. '```' → logprob: -16.37506675720215
    9. '`' → logprob: -16.75006675720215
    10. '[S' → logprob: -16.87506675720215

Token 3278: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.051066520740278e-05
    2. 'i' → logprob: -9.750060081481934
    3. '{i' → logprob: -13.875060081481934
    4. '(i' → logprob: -14.750060081481934
    5. '```' → logprob: -15.125060081481934
    6. '[' → logprob: -15.125060081481934
    7. '[idx' → logprob: -16.37506103515625
    8. ' i' → logprob: -16.50006103515625
    9. '       ' → logprob: -16.75006103515625
    10. '   ' → logprob: -17.25006103515625

Token 3279: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.032656826078891754
    2. ')' → logprob: -4.032656669616699
    3. '[' → logprob: -5.407656669616699
    4. ']' → logprob: -5.532656669616699
    5. '       ' → logprob: -6.157656669616699
    6. '
' → logprob: -7.282656669616699
    7. ')
' → logprob: -7.282656669616699
    8. '[
' → logprob: -7.282656669616699
    9. '   ' → logprob: -7.407656669616699
    10. ']
' → logprob: -8.6576566696167

Token 3280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06218334659934044
    2. '=' → logprob: -3.687183380126953
    3. ' =' → logprob: -3.937183380126953
    4. '```' → logprob: -5.562183380126953
    5. '        
' → logprob: -5.812183380126953
    6. '
' → logprob: -6.187183380126953
    7. ' 
' → logprob: -6.312183380126953
    8. ' ' → logprob: -7.062183380126953
    9. '        ' → logprob: -7.187183380126953
    10. ':' → logprob: -7.562183380126953

Token 3281: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' (adapté à ' station') → logprob: -0.7030308246612549
    2. 'endpoint' → logprob: -0.9530308246612549
    3. ' station' → logprob: -2.453030824661255
    4. ' endpoint' → logprob: -3.703030824661255
    5. 'offset' → logprob: -6.078030586242676
    6. '       ' → logprob: -6.328030586242676
    7. 'segment' → logprob: -6.453030586242676
    8. 'return' → logprob: -7.203030586242676
    9. '```' → logprob: -7.328030586242676
    10. '`' → logprob: -7.953030586242676

Token 3282: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.00023691373644396663
    2. '_offsets' → logprob: -8.750236511230469
    3. '_' → logprob: -10.625236511230469
    4. 'offset' → logprob: -11.000236511230469
    5. '_OFFSET' → logprob: -11.625236511230469
    6. 'Offset' → logprob: -12.000236511230469
    7. '```' → logprob: -12.000236511230469
    8. '_distance' → logprob: -13.000236511230469
    9. ' _' → logprob: -13.500236511230469
    10. '=' → logprob: -13.750236511230469

Token 3283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632624089717865
    2. ' =' → logprob: -0.757624089717865
    3. '=end' → logprob: -11.882623672485352
    4. ')' → logprob: -12.507623672485352
    5. '=
' → logprob: -12.882623672485352
    6. '<|end|>' → logprob: -13.382623672485352
    7. ' +=' → logprob: -13.632623672485352
    8. ' ' → logprob: -13.882623672485352
    9. '```' → logprob: -14.007623672485352
    10. ',' → logprob: -14.007623672485352

Token 3284: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.023107796907424927
    2. ' endpoint' → logprob: -3.8981077671051025
    3. 'station' → logprob: -6.023108005523682
    4. ' station' → logprob: -9.023107528686523
    5. '(endpoint' → logprob: -11.523107528686523
    6. '   ' → logprob: -12.273107528686523
    7. 'int' → logprob: -13.398107528686523
    8. '       ' → logprob: -14.648107528686523
    9. 'interval' → logprob: -14.773107528686523
    10. '           ' → logprob: -15.023107528686523

Token 3285: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6472540497779846
    2. '-' → logprob: -0.7722540497779846
    3. '<|end|>' → logprob: -4.52225399017334
    4. ')' → logprob: -6.27225399017334
    5. '<|end|>' → logprob: -7.14725399017334
    6. '[' → logprob: -8.39725399017334
    7. ' ' → logprob: -9.02225399017334
    8. '#' → logprob: -9.02225399017334
    9. '       ' → logprob: -9.02225399017334
    10. '        ' → logprob: -9.52225399017334

Token 3286: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -8.494741632603109e-05
    2. ' S' → logprob: -9.37508487701416
    3. '	S' → logprob: -17.250085830688477
    4. '   ' → logprob: -17.500085830688477
    5. '           ' → logprob: -17.625085830688477
    6. '  ' → logprob: -18.625085830688477
    7. ' ' → logprob: -18.750085830688477
    8. '_S' → logprob: -18.750085830688477
    9. ')' → logprob: -19.125085830688477
    10. '(S' → logprob: -19.250085830688477

Token 3287: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.000000953674316
    3. '```' → logprob: -15.875000953674316
    4. '{i' → logprob: -16.000001907348633
    5. '[' → logprob: -16.500001907348633
    6. '(i' → logprob: -16.875001907348633
    7. '[I' → logprob: -17.375001907348633
    8. '[
' → logprob: -17.500001907348633
    9. '
' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.625001907348633

Token 3288: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24519337713718414
    2. ')' → logprob: -1.620193362236023
    3. '       ' → logprob: -4.2451934814453125
    4. '   ' → logprob: -5.9951934814453125
    5. ' ]' → logprob: -7.7451934814453125
    6. '<|end|>' → logprob: -7.7451934814453125
    7. '<|end|>' → logprob: -7.7451934814453125
    8. ']
' → logprob: -8.120193481445312
    9. '[' → logprob: -8.245193481445312
    10. '	' → logprob: -8.870193481445312

Token 3289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06041456386446953
    2. 'if' → logprob: -3.5604145526885986
    3. ' if' → logprob: -4.060414791107178
    4. '```' → logprob: -5.060414791107178
    5. '        
' → logprob: -5.685414791107178
    6. '
' → logprob: -6.560414791107178
    7. 'j' → logprob: -8.56041431427002
    8. '`' → logprob: -8.56041431427002
    9. ' 
' → logprob: -8.93541431427002
    10. ' ' → logprob: -9.06041431427002

Token 3290: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09719786047935486
    2. '       ' → logprob: -2.5971977710723877
    3. 'segment' → logprob: -5.097198009490967
    4. '#' (adapté à ' #') → logprob: -6.097198009490967
    5. ' if' → logprob: -6.222198009490967
    6. 'offset' → logprob: -6.597198009490967
    7. 'pos' → logprob: -6.972198009490967
    8. 's' → logprob: -7.097198009490967
    9. 'rest' → logprob: -7.222198009490967
    10. 'left' → logprob: -7.472198009490967

Token 3291: ' Trou' (ID: 58947)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5092361569404602
    2. '       ' → logprob: -2.0092360973358154
    3. 's' → logprob: -2.2592360973358154
    4. 'segment' → logprob: -2.6342360973358154
    5. '#' → logprob: -3.3842360973358154
    6. 'pos' → logprob: -4.5092363357543945
    7. ' if' → logprob: -4.6342363357543945
    8. 'j' → logprob: -5.5092363357543945
    9. '```' → logprob: -5.5092363357543945
    10. 'idx' → logprob: -5.7592363357543945

Token 3292: 'ver' (ID: 445)
  Prédit: 'gment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gment' → logprob: -1.4829846620559692
    2. 'r' → logprob: -1.6079846620559692
    3. '       ' → logprob: -1.6079846620559692
    4. 'segment' → logprob: -1.8579846620559692
    5. 'ment' → logprob: -2.7329845428466797
    6. 'egment' → logprob: -3.6079845428466797
    7. 'g' → logprob: -4.10798454284668
    8. 'gments' → logprob: -4.10798454284668
    9. 'rement' → logprob: -4.35798454284668
    10. 'eg' → logprob: -4.48298454284668

Token 3293: ' dans' (ID: 2671)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9615441560745239
    2. 'next' → logprob: -1.586544156074524
    3. 's' → logprob: -2.0865440368652344
    4. 'j' → logprob: -2.0865440368652344
    5. 'bis' → logprob: -2.9615440368652344
    6. 'segment' → logprob: -3.2115440368652344
    7. 'pos' → logprob: -3.8365440368652344
    8. 'import' → logprob: -4.961544036865234
    9. '```' → logprob: -4.961544036865234
    10. 'sum' → logprob: -5.336544036865234

Token 3294: ' quel' (ID: 10613)
  Prédit: 'quel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quel' → logprob: -0.5930153131484985
    2. 'quelle' → logprob: -0.8430153131484985
    3. '
' → logprob: -4.718015193939209
    4. 'which' → logprob: -5.968015193939209
    5. ' quelle' → logprob: -6.718015193939209
    6. ' quel' → logprob: -6.718015193939209
    7. 'next' → logprob: -7.343015193939209
    8. '0' → logprob: -7.718015193939209
    9. 'le' → logprob: -8.093015670776367
    10. '```' → logprob: -8.218015670776367

Token 3295: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.07937704771757126
    2. 'token' → logprob: -3.4543769359588623
    3. 'j' → logprob: -4.829377174377441
    4. 'for' → logprob: -4.829377174377441
    5. 'seg' → logprob: -4.829377174377441
    6. '#' → logprob: -5.329377174377441
    7. '
' → logprob: -5.329377174377441
    8. 's' → logprob: -5.579377174377441
    9. '(segment' → logprob: -6.579377174377441
    10. '```' → logprob: -6.829377174377441

Token 3296: ' la' (ID: 557)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.45486149191856384
    2. 's' → logprob: -1.4548615217208862
    3. 'j' → logprob: -2.7048614025115967
    4. '```' → logprob: -3.9548614025115967
    5. '(segment' → logprob: -4.579861640930176
    6. '=' → logprob: -5.579861640930176
    7. 'idx' → logprob: -5.829861640930176
    8. 'pos' → logprob: -5.829861640930176
    9. ' segment' → logprob: -5.954861640930176
    10. ' =' → logprob: -6.079861640930176

Token 3297: ' station' (ID: 11538)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.14734919369220734
    2. 'station' → logprob: -2.1473491191864014
    3. '#' → logprob: -5.0223493576049805
    4. 's' → logprob: -5.7723493576049805
    5. 'for' → logprob: -6.0223493576049805
    6. '
' → logprob: -6.5223493576049805
    7. 'token' → logprob: -6.5223493576049805
    8. 'while' → logprob: -6.7723493576049805
    9. 'position' → logprob: -7.1473493576049805
    10. '```' → logprob: -7.3973493576049805

Token 3298: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.03893048316240311
    2. '_' → logprob: -4.038930416107178
    3. '_index' → logprob: -5.038930416107178
    4. 'offset' → logprob: -5.663930416107178
    5. '_length' → logprob: -6.163930416107178
    6. '_idx' → logprob: -6.413930416107178
    7. 's' → logprob: -6.538930416107178
    8. '```' → logprob: -7.413930416107178
    9. '_offsets' → logprob: -7.413930416107178
    10. 'segment' → logprob: -7.538930416107178

Token 3299: ' se' (ID: 458)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5382194519042969
    2. 'segment' → logprob: -1.5382194519042969
    3. 'se' → logprob: -1.9132194519042969
    4. 's' → logprob: -2.038219451904297
    5. 'est' → logprob: -2.788219451904297
    6. 'falls' → logprob: -2.788219451904297
    7. ' =' → logprob: -3.413219451904297
    8. '```' → logprob: -3.663219451904297
    9. 'fall' → logprob: -3.913219451904297
    10. 'j' → logprob: -4.538219451904297

Token 3300: ' trouve' (ID: 30913)
  Prédit: ' trouve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouve' → logprob: -0.8805697560310364
    2. 'tr' → logprob: -1.7555696964263916
    3. 'find' → logprob: -1.8805696964263916
    4. '```' → logprob: -1.8805696964263916
    5. 'found' → logprob: -4.130569934844971
    6. 'tro' → logprob: -4.255569934844971
    7. 't' → logprob: -4.380569934844971
    8. 'placed' → logprob: -5.380569934844971
    9. '=' → logprob: -5.505569934844971
    10. 'place' → logprob: -5.630569934844971

Token 3301: '
' (ID: 198)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.6225725412368774
    2. ' (' → logprob: -1.7475725412368774
    3. '(segment' → logprob: -1.8725725412368774
    4. 's' → logprob: -2.372572422027588
    5. '       ' → logprob: -2.622572422027588
    6. '```' → logprob: -2.622572422027588
    7. '(s' → logprob: -2.747572422027588
    8. '(' → logprob: -2.872572422027588
    9. 'j' → logprob: -3.622572422027588
    10. '(
' → logprob: -4.122572422027588

Token 3302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3630306720733643
    2. ')' → logprob: -1.7380306720733643
    3. ' (' → logprob: -2.1130306720733643
    4. '(' → logprob: -2.2380306720733643
    5. '(
' → logprob: -2.8630306720733643
    6. 's' → logprob: -3.2380306720733643
    7. '```' → logprob: -3.3630306720733643
    8. '(s' → logprob: -3.7380306720733643
    9. 'j' → logprob: -3.7380306720733643
    10. '(j' → logprob: -3.8630306720733643

Token 3303: ' cum' (ID: 10023)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0685982704162598
    2. 'segment' → logprob: -1.8185982704162598
    3. 'pos' → logprob: -2.1935982704162598
    4. '0' → logprob: -2.5685982704162598
    5. '       ' → logprob: -2.8185982704162598
    6. 's' → logprob: -2.8185982704162598
    7. '```' → logprob: -3.3185982704162598
    8. 'idx' → logprob: -3.8185982704162598
    9. ' j' → logprob: -4.31859827041626
    10. '`' → logprob: -4.31859827041626

Token 3304: 'u' (ID: 84)
  Prédit: 'ulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulative' → logprob: -1.0799708366394043
    2. '_sum' → logprob: -1.5799708366394043
    3. 'ulated' → logprob: -1.7049708366394043
    4. 'cum' → logprob: -1.8299708366394043
    5. 'sum' → logprob: -3.2049708366394043
    6. 'ulate' → logprob: -4.329970836639404
    7. '_lengths' → logprob: -4.329970836639404
    8. '   ' → logprob: -4.829970836639404
    9. '       ' → logprob: -4.829970836639404
    10. '_length' → logprob: -5.204970836639404

Token 3305: ' =' (ID: 314)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.22793011367321014
    2. 'l' → logprob: -2.3529300689697266
    3. 'ulative' → logprob: -3.8529300689697266
    4. 'm' → logprob: -3.8529300689697266
    5. '_length' → logprob: -4.102930068969727
    6. '_sum' → logprob: -4.227930068969727
    7. ' =' → logprob: -4.477930068969727
    8. '_l' → logprob: -5.102930068969727
    9. '=' → logprob: -5.727930068969727
    10. 'ulated' → logprob: -5.727930068969727

Token 3306: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004643722902983427
    2. '[' → logprob: -5.37964391708374
    3. '[j' → logprob: -11.504643440246582
    4. ' ' → logprob: -12.004643440246582
    5. '[]
' → logprob: -12.879643440246582
    6. ' [' → logprob: -13.004643440246582
    7. '   ' → logprob: -14.129643440246582
    8. '[
' → logprob: -14.629643440246582
    9. '[]' → logprob: -14.879643440246582
    10. '[c' → logprob: -15.879643440246582

Token 3307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020869072526693344
    2. '[' → logprob: -3.895869016647339
    3. '[j' → logprob: -8.520869255065918
    4. 'segment' → logprob: -10.020869255065918
    5. '[]
' → logprob: -11.270869255065918
    6. ' ' → logprob: -11.395869255065918
    7. '[]' → logprob: -11.645869255065918
    8. ' [' → logprob: -11.645869255065918
    9. '   ' → logprob: -11.895869255065918
    10. 'j' → logprob: -12.020869255065918

Token 3308: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12650896608829498
    2. 'for' → logprob: -2.376508951187134
    3. 'j' → logprob: -5.126509189605713
    4. 'while' → logprob: -5.376509189605713
    5. '[j' → logprob: -5.376509189605713
    6. '```' → logprob: -6.126509189605713
    7. ' for' → logprob: -6.501509189605713
    8. 'if' → logprob: -6.751509189605713
    9. 'cum' → logprob: -7.376509189605713
    10. '=' → logprob: -7.376509189605713

Token 3309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07437289506196976
    2. 'for' → logprob: -2.6993730068206787
    3. '```' → logprob: -6.6993727684021
    4. 'j' → logprob: -6.9493727684021
    5. ' for' → logprob: -7.1993727684021
    6. 'while' → logprob: -7.9493727684021
    7. '           ' → logprob: -8.324373245239258
    8. '[j' → logprob: -8.449373245239258
    9. 'segment' → logprob: -8.699373245239258
    10. '   ' → logprob: -9.324373245239258

Token 3310: ' seg' (ID: 3055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018663374707102776
    2. 'while' → logprob: -4.89366340637207
    3. '       ' → logprob: -5.01866340637207
    4. 'j' → logprob: -5.64366340637207
    5. 'segment' → logprob: -7.76866340637207
    6. '```' → logprob: -8.01866340637207
    7. ' for' → logprob: -9.76866340637207
    8. '   ' → logprob: -11.64366340637207
    9. 'seg' (adapté à ' seg') → logprob: -11.76866340637207
    10. '
' → logprob: -12.64366340637207

Token 3311: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.1323416233062744
    2. '_index' → logprob: -2.0073416233062744
    3. 'idx' → logprob: -2.0073416233062744
    4. 'nt' → logprob: -2.3823416233062744
    5. 't' → logprob: -2.6323416233062744
    6. ' =' → logprob: -3.5073416233062744
    7. 'j' → logprob: -3.6323416233062744
    8. '=' → logprob: -3.7573416233062744
    9. '_length' → logprob: -4.007341384887695
    10. 'dx' → logprob: -4.007341384887695

Token 3312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030106235295534134
    2. ' =' → logprob: -3.65510630607605
    3. '+=' → logprob: -5.905106067657471
    4. ' +=' → logprob: -7.405106067657471
    5. '[' → logprob: -9.030106544494629
    6. ')' → logprob: -9.655106544494629
    7. '==' → logprob: -9.905106544494629
    8. '=
' → logprob: -10.030106544494629
    9. '<|end|>' → logprob: -10.155106544494629
    10. '```' → logprob: -10.405106544494629

Token 3313: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'bis' → logprob: -16.875001907348633
    4. '[' → logprob: -17.750001907348633
    5. '1' → logprob: -19.000001907348633
    6. 'next' → logprob: -19.250001907348633
    7. '-' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.375001907348633
    9. 'j' → logprob: -19.875001907348633
    10. '```' → logprob: -20.000001907348633

Token 3314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.750008583068848
    3. 'next' → logprob: -13.000008583068848
    4. 'bis' → logprob: -13.125008583068848
    5. '[' → logprob: -15.625008583068848
    6. '   ' → logprob: -15.750008583068848
    7. 'j' → logprob: -15.750008583068848
    8. '1' → logprob: -16.00000762939453
    9. '-' → logprob: -16.37500762939453
    10. 'i' → logprob: -17.12500762939453

Token 3315: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07127231359481812
    2. '       ' → logprob: -3.696272373199463
    3. '	while' → logprob: -3.696272373199463
    4. ' while' → logprob: -4.321272373199463
    5. 'for' → logprob: -6.321272373199463
    6. '<|end|>' → logprob: -6.446272373199463
    7. '
' → logprob: -6.696272373199463
    8. 'While' → logprob: -7.571272373199463
    9. '```' → logprob: -8.446271896362305
    10. '<|end|>' → logprob: -9.446271896362305

Token 3316: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06607738137245178
    2. '       ' → logprob: -3.441077470779419
    3. '	while' → logprob: -3.691077470779419
    4. ' while' → logprob: -5.06607723236084
    5. '```' → logprob: -8.69107723236084
    6. 'for' → logprob: -8.81607723236084
    7. '
' → logprob: -9.19107723236084
    8. 'While' → logprob: -9.94107723236084
    9. '<|end|>' → logprob: -10.31607723236084
    10. '   ' → logprob: -10.56607723236084

Token 3317: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0042391433380544186
    2. '       ' → logprob: -5.504239082336426
    3. 'for' → logprob: -9.004239082336426
    4. '	while' → logprob: -10.879239082336426
    5. ' while' → logprob: -11.504239082336426
    6. '   ' → logprob: -12.129239082336426
    7. '```' → logprob: -13.004239082336426
    8. '
' → logprob: -14.504239082336426
    9. '           ' → logprob: -15.004239082336426
    10. 'While' → logprob: -15.129239082336426

Token 3318: ' seg' (ID: 3055)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014204051345586777
    2. 'segment' → logprob: -4.764204025268555
    3. 'cum' → logprob: -5.639204025268555
    4. 'seg' → logprob: -7.139204025268555
    5. ' cum' → logprob: -7.264204025268555
    6. '   ' → logprob: -8.389204025268555
    7. 'station' → logprob: -8.889204025268555
    8. ' segment' → logprob: -9.764204025268555
    9. ' seg' → logprob: -10.639204025268555
    10. '	c' → logprob: -10.889204025268555

Token 3319: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0006688326830044389
    2. '<' → logprob: -7.625669002532959
    3. 'idx' → logprob: -10.0006685256958
    4. '   ' → logprob: -10.6256685256958
    5. '[' → logprob: -10.8756685256958
    6. 'ment' → logprob: -11.7506685256958
    7. 's' → logprob: -11.7506685256958
    8. '[idx' → logprob: -11.8756685256958
    9. '_len' → logprob: -12.0006685256958
    10. '+' → logprob: -12.0006685256958

Token 3320: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6302338242530823
    2. ' <' → logprob: -0.8802338242530823
    3. ' <=' → logprob: -3.7552337646484375
    4. '<=' → logprob: -4.1302337646484375
    5. '<len' → logprob: -4.3802337646484375
    6. '[' → logprob: -8.380233764648438
    7. '<c' → logprob: -9.255233764648438
    8. '<size' → logprob: -9.755233764648438
    9. '<s' → logprob: -9.755233764648438
    10. '```' → logprob: -9.755233764648438

Token 3321: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -4.1318875446449965e-05
    2. 'len' → logprob: -10.750041007995605
    3. ' segments' → logprob: -10.875041007995605
    4. '   ' → logprob: -14.375041007995605
    5. '```' → logprob: -16.250041961669922
    6. '(' → logprob: -16.250041961669922
    7. '       ' → logprob: -17.125041961669922
    8. 'seg' → logprob: -17.125041961669922
    9. 'x' → logprob: -17.375041961669922
    10. 'sections' → logprob: -17.500041961669922

Token 3322: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5761449337005615
    2. 'and' → logprob: -0.8261449337005615
    3. '	and' → logprob: -9.57614517211914
    4. ':
' → logprob: -10.57614517211914
    5. ' ' → logprob: -10.82614517211914
    6. '       ' → logprob: -11.07614517211914
    7. '        ' → logprob: -11.32614517211914
    8. ':' → logprob: -11.82614517211914
    9. 'et' → logprob: -12.07614517211914
    10. '           ' → logprob: -12.20114517211914

Token 3323: ' cum' (ID: 10023)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01678522303700447
    2. 'segment' → logprob: -5.141785144805908
    3. 'cum' → logprob: -5.141785144805908
    4. 'station' → logprob: -5.391785144805908
    5. ' cum' → logprob: -8.641785621643066
    6. ' station' → logprob: -9.641785621643066
    7. '(c' → logprob: -9.891785621643066
    8. '   ' → logprob: -10.141785621643066
    9. ' segment' → logprob: -10.891785621643066
    10. '	c' → logprob: -11.141785621643066

Token 3324: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.007189388386905193
    2. 'umu' → logprob: -6.5071892738342285
    3. '+=' → logprob: -6.8821892738342285
    4. 'um' → logprob: -6.8821892738342285
    5. 'ul' → logprob: -7.1321892738342285
    6. '+' → logprob: -7.2571892738342285
    7. ' +=' → logprob: -7.6321892738342285
    8. 'umul' → logprob: -8.007189750671387
    9. 'ulative' → logprob: -8.382189750671387
    10. 'uml' → logprob: -8.757189750671387

Token 3325: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4600365161895752
    2. ' +' → logprob: -1.2100365161895752
    3. '<=' → logprob: -3.710036516189575
    4. '<' → logprob: -3.960036516189575
    5. ' <=' → logprob: -4.585036277770996
    6. ' <' → logprob: -4.960036277770996
    7. '+=' → logprob: -5.085036277770996
    8. ' +=' → logprob: -5.710036277770996
    9. '[' → logprob: -9.835036277770996
    10. '<len' → logprob: -9.835036277770996

Token 3326: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -4.572941179503687e-05
    2. ' segment' → logprob: -10.000045776367188
    3. '(segment' → logprob: -15.250045776367188
    4. '   ' → logprob: -18.500045776367188
    5. '1' → logprob: -19.500045776367188
    6. '
' → logprob: -20.125045776367188
    7. '.segment' → logprob: -21.250045776367188
    8. 'segments' → logprob: -21.500045776367188
    9. 'seg' → logprob: -21.625045776367188
    10. '           ' → logprob: -21.750045776367188

Token 3327: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.0003449984942562878
    2. '_length' → logprob: -8.000345230102539
    3. 'length' → logprob: -11.750345230102539
    4. 'Lengths' → logprob: -14.625345230102539
    5. '_len' → logprob: -15.500345230102539
    6. '```' → logprob: -15.750345230102539
    7. 's' → logprob: -15.875345230102539
    8. '_sizes' → logprob: -16.00034523010254
    9. '_l' → logprob: -16.12534523010254
    10. '   ' → logprob: -16.37534523010254

Token 3328: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002015139180002734
    2. '```' → logprob: -8.750201225280762
    3. ' [' → logprob: -11.250201225280762
    4. '<' → logprob: -12.500201225280762
    5. '<=' → logprob: -12.625201225280762
    6. '       ' → logprob: -13.125201225280762
    7. ' <=' → logprob: -13.125201225280762
    8. '[
' → logprob: -13.250201225280762
    9. '<|end|>' → logprob: -13.500201225280762
    10. '   ' → logprob: -13.500201225280762

Token 3329: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.0280383548888494e-06
    2. '(seg' → logprob: -14.625000953674316
    3. '[' → logprob: -15.000000953674316
    4. ' seg' → logprob: -15.875000953674316
    5. '
' → logprob: -17.750001907348633
    6. '```' → logprob: -18.000001907348633
    7. '0' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. 'segment' → logprob: -20.125001907348633
    10. '_seg' → logprob: -21.125001907348633

Token 3330: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.5198498964309692
    2. 'seg' → logprob: -1.0198498964309692
    3. '[' → logprob: -3.2698497772216797
    4. '       ' → logprob: -6.14484977722168
    5. '   ' → logprob: -6.89484977722168
    6. '_seg' → logprob: -6.89484977722168
    7. 'idx' → logprob: -7.14484977722168
    8. 'ue' → logprob: -8.26984977722168
    9. ']' → logprob: -8.64484977722168
    10. ' seg' → logprob: -8.76984977722168

Token 3331: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03381374478340149
    2. '<=' → logprob: -3.408813714981079
    3. ' +' → logprob: -9.5338134765625
    4. ')<=' → logprob: -10.5338134765625
    5. ' <' → logprob: -10.9088134765625
    6. '+' → logprob: -10.9088134765625
    7. ' ≤' → logprob: -11.7838134765625
    8. ']<=' → logprob: -11.9088134765625
    9. ')' → logprob: -12.1588134765625
    10. '[' → logprob: -12.4088134765625

Token 3332: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03805594891309738
    2. '<=' → logprob: -3.288055896759033
    3. ' <' → logprob: -11.663056373596191
    4. '<' → logprob: -12.913056373596191
    5. ' >' → logprob: -14.038056373596191
    6. ')<=' → logprob: -14.038056373596191
    7. ' ≤' → logprob: -14.288056373596191
    8. '```' → logprob: -14.788056373596191
    9. ' ' → logprob: -15.413056373596191
    10. '>' → logprob: -15.788056373596191

Token 3333: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.00869304221123457
    2. 'segment' → logprob: -5.133693218231201
    3. ' station' → logprob: -6.633693218231201
    4. 'endpoint' → logprob: -6.758693218231201
    5. 'seg' → logprob: -9.133692741394043
    6. '   ' → logprob: -10.008692741394043
    7. '```' → logprob: -10.383692741394043
    8. '=' → logprob: -11.008692741394043
    9. '_station' → logprob: -11.758692741394043
    10. 'token' → logprob: -12.133692741394043

Token 3334: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -6.098748053773306e-05
    2. '_idx' → logprob: -10.00006103515625
    3. 'offset' → logprob: -11.50006103515625
    4. '_offsets' → logprob: -13.62506103515625
    5. 'Offset' → logprob: -13.87506103515625
    6. '_index' → logprob: -14.50006103515625
    7. '
' → logprob: -15.00006103515625
    8. '+' → logprob: -15.00006103515625
    9. 'o' → logprob: -15.50006103515625
    10. '```' → logprob: -15.75006103515625

Token 3335: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.087366983294487
    2. ':
' → logprob: -2.962367057800293
    3. '+' → logprob: -4.212367057800293
    4. '       ' → logprob: -4.962367057800293
    5. '):' → logprob: -5.337367057800293
    6. ' :' → logprob: -6.712367057800293
    7. '):
' → logprob: -7.462367057800293
    8. '   ' → logprob: -7.587367057800293
    9. '           ' → logprob: -7.837367057800293
    10. '=' → logprob: -8.087367057800293

Token 3336: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2903989255428314
    2. '           ' → logprob: -1.4153989553451538
    3. 'c' → logprob: -5.040399074554443
    4. '```' → logprob: -7.540399074554443
    5. '               ' → logprob: -7.665399074554443
    6. '   ' → logprob: -8.040398597717285
    7. '	c' → logprob: -8.165398597717285
    8. '
' → logprob: -8.415398597717285
    9. '	       ' → logprob: -8.540398597717285
    10. 'cum' → logprob: -9.040398597717285

Token 3337: ' cum' (ID: 10023)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013207156443968415
    2. 'cum' (adapté à ' cum') → logprob: -6.751320838928223
    3. '           ' → logprob: -9.501320838928223
    4. ' cum' → logprob: -10.001320838928223
    5. '       ' → logprob: -11.126320838928223
    6. '   ' → logprob: -11.626320838928223
    7. '```' → logprob: -13.251320838928223
    8. 'segment' → logprob: -13.501320838928223
    9. '
' → logprob: -13.626320838928223
    10. '	c' → logprob: -13.876320838928223

Token 3338: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.999452772201039e-05
    2. '   ' → logprob: -11.750029563903809
    3. '+' → logprob: -12.125029563903809
    4. '+=' → logprob: -12.125029563903809
    5. ' ' → logprob: -13.000029563903809
    6. 'cum' → logprob: -13.000029563903809
    7. '=' → logprob: -13.500029563903809
    8. 'umu' → logprob: -14.000029563903809
    9. ' +=' → logprob: -14.250029563903809
    10. 'c' → logprob: -14.250029563903809

Token 3339: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.24788621068000793
    2. ' +=' → logprob: -1.6228861808776855
    3. '+' → logprob: -3.8728861808776855
    4. ' +' → logprob: -7.4978861808776855
    5. '=' → logprob: -7.9978861808776855
    6. '           ' → logprob: -8.622886657714844
    7. '       ' → logprob: -9.872886657714844
    8. '```' → logprob: -9.872886657714844
    9. ']+=' → logprob: -9.997886657714844
    10. '        ' → logprob: -9.997886657714844

Token 3340: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -2.15310683415737e-05
    2. ' segment' → logprob: -10.750021934509277
    3. '           ' → logprob: -18.50002098083496
    4. '(segment' → logprob: -19.37502098083496
    5. '   ' → logprob: -19.87502098083496
    6. 'seg' → logprob: -21.62502098083496
    7. '       ' → logprob: -22.62502098083496
    8. '                           ' → logprob: -22.87502098083496
    9. '.segment' → logprob: -23.00002098083496
    10. ' ' → logprob: -23.00002098083496

Token 3341: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -2.935296834039036e-06
    2. '_segments' → logprob: -13.50000286102295
    3. 'length' → logprob: -14.62500286102295
    4. 'segment' → logprob: -14.75000286102295
    5. 'Lengths' → logprob: -15.25000286102295
    6. '_length' → logprob: -15.37500286102295
    7. 's' → logprob: -16.125003814697266
    8. '_offsets' → logprob: -16.625003814697266
    9. '[' → logprob: -16.875003814697266
    10. '_segment' → logprob: -17.625003814697266

Token 3342: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.999452772201039e-05
    2. '```' → logprob: -10.625029563903809
    3. '       ' → logprob: -13.000029563903809
    4. '[
' → logprob: -13.875029563903809
    5. ' [' → logprob: -14.000029563903809
    6. '           ' → logprob: -14.250029563903809
    7. '   ' → logprob: -14.750029563903809
    8. '	' → logprob: -16.000030517578125
    9. '               ' → logprob: -16.000030517578125
    10. '                   ' → logprob: -16.875030517578125

Token 3343: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.0280383548888494e-06
    2. '(seg' → logprob: -14.750000953674316
    3. '[' → logprob: -15.000000953674316
    4. ' seg' → logprob: -15.250000953674316
    5. '```' → logprob: -19.000001907348633
    6. 'segment' → logprob: -19.500001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '_seg' → logprob: -20.250001907348633
    9. '{' → logprob: -20.625001907348633
    10. '
' → logprob: -21.000001907348633

Token 3344: '_idx' (ID: 15257)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.004015002865344286
    2. '[' → logprob: -6.00401496887207
    3. 'idx' → logprob: -6.62901496887207
    4. '_idx' → logprob: -8.75401496887207
    5. '(seg' → logprob: -10.37901496887207
    6. '_seg' → logprob: -10.75401496887207
    7. '```' → logprob: -13.75401496887207
    8. ' seg' → logprob: -14.00401496887207
    9. ']' → logprob: -14.00401496887207
    10. '+' → logprob: -14.37901496887207

Token 3345: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30407896637916565
    2. ']
' → logprob: -2.304079055786133
    3. '           ' → logprob: -2.679079055786133
    4. ')' → logprob: -3.804079055786133
    5. '+' → logprob: -3.929079055786133
    6. '<|end|>' → logprob: -4.429079055786133
    7. '<|end|>' → logprob: -4.429079055786133
    8. '       ' → logprob: -4.679079055786133
    9. ']+' → logprob: -5.179079055786133
    10. '
' → logprob: -6.179079055786133

Token 3346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14165478944778442
    2. '```' → logprob: -2.3916547298431396
    3. '   ' → logprob: -3.7666547298431396
    4. '       ' → logprob: -4.391654968261719
    5. 'seg' → logprob: -6.141654968261719
    6. '               ' → logprob: -6.516654968261719
    7. '(seg' → logprob: -7.641654968261719
    8. '\' → logprob: -8.641654968261719
    9. ' seg' → logprob: -8.641654968261719
    10. '                   ' → logprob: -8.891654968261719

Token 3347: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -0.0005805541295558214
    2. '           ' → logprob: -8.125580787658691
    3. ' seg' → logprob: -8.250580787658691
    4. '   ' → logprob: -11.875580787658691
    5. '```' → logprob: -12.125580787658691
    6. '(seg' → logprob: -12.375580787658691
    7. 'segment' → logprob: -12.500580787658691
    8. '       ' → logprob: -13.625580787658691
    9. 'segu' → logprob: -14.250580787658691
    10. '               ' → logprob: -14.625580787658691

Token 3348: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0004938178462907672
    2. 'idx' → logprob: -7.625494003295898
    3. 'Idx' → logprob: -13.625494003295898
    4. '=' → logprob: -14.500494003295898
    5. '_' → logprob: -14.875494003295898
    6. '_IDX' → logprob: -15.000494003295898
    7. 'd' → logprob: -15.125494003295898
    8. '   ' → logprob: -15.125494003295898
    9. 't' → logprob: -15.125494003295898
    10. '	idx' → logprob: -15.250494003295898

Token 3349: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0029010437428951263
    2. ' +=' → logprob: -6.002901077270508
    3. '+' → logprob: -8.377901077270508
    4. '1' → logprob: -9.627901077270508
    5. ']+=' → logprob: -9.752901077270508
    6. '```' → logprob: -10.002901077270508
    7. '   ' → logprob: -11.252901077270508
    8. '           ' → logprob: -12.877901077270508
    9. '=' → logprob: -13.252901077270508
    10. '+="' → logprob: -13.627901077270508

Token 3350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -21.375
    4. '   ' → logprob: -22.25
    5. '۱' → logprob: -23.125
    6. '+' → logprob: -23.75
    7. '0' → logprob: -23.875
    8. '１' → logprob: -24.25
    9. '१' → logprob: -24.875
    10. '-' → logprob: -25.125

Token 3351: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08032015711069107
    2. '
' → logprob: -2.955320119857788
    3. '<|end|>' → logprob: -4.705320358276367
    4. '```' → logprob: -4.830320358276367
    5. '        
' → logprob: -5.580320358276367
    6. '           ' → logprob: -6.705320358276367
    7. ',' → logprob: -7.705320358276367
    8. ')' → logprob: -8.330320358276367
    9. '[' → logprob: -8.455320358276367
    10. '<|end|>' → logprob: -8.455320358276367

Token 3352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10803715884685516
    2. '
' → logprob: -2.358037233352661
    3. '```' → logprob: -5.483036994934082
    4. 'if' → logprob: -6.858036994934082
    5. '        
' → logprob: -6.858036994934082
    6. ' if' → logprob: -8.233036994934082
    7. ',' → logprob: -8.483036994934082
    8. '#' → logprob: -8.608036994934082
    9. '           ' → logprob: -9.108036994934082
    10. 'seg' → logprob: -9.358036994934082

Token 3353: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1182512566447258
    2. 'if' → logprob: -3.118251323699951
    3. 'last' → logprob: -3.993251323699951
    4. 'segment' → logprob: -4.618251323699951
    5. '        
' → logprob: -4.868251323699951
    6. '
' → logprob: -4.993251323699951
    7. '```' → logprob: -5.118251323699951
    8. ' if' → logprob: -5.368251323699951
    9. '#' (adapté à ' #') → logprob: -5.868251323699951
    10. '   ' → logprob: -6.368251323699951

Token 3354: ' seg' (ID: 3055)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8699032664299011
    2. 'last' → logprob: -1.494903326034546
    3. 'time' → logprob: -1.869903326034546
    4. 'segment' → logprob: -2.369903326034546
    5. 'rest' → logprob: -3.619903326034546
    6. 'if' → logprob: -3.744903326034546
    7. 'local' → logprob: -3.744903326034546
    8. 'return' → logprob: -4.619903087615967
    9. '#' → logprob: -4.994903087615967
    10. 'remaining' → logprob: -5.744903087615967

Token 3355: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0002821928064804524
    2. 't' → logprob: -8.375282287597656
    3. 'idx' → logprob: -10.375282287597656
    4. 'm' → logprob: -11.500282287597656
    5. 'ment' → logprob: -12.125282287597656
    6. 'd' → logprob: -13.375282287597656
    7. 's' → logprob: -14.000282287597656
    8. 'g' → logprob: -15.125282287597656
    9. 'th' → logprob: -15.125282287597656
    10. 'i' → logprob: -15.250282287597656

Token 3356: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09969871491193771
    2. ' =' → logprob: -2.599698781967163
    3. ' +=' → logprob: -5.349698543548584
    4. '+=' → logprob: -5.349698543548584
    5. ',' → logprob: -5.599698543548584
    6. '+' → logprob: -6.349698543548584
    7. 's' → logprob: -7.474698543548584
    8. 'segment' → logprob: -7.599698543548584
    9. '```' → logprob: -7.599698543548584
    10. '#' → logprob: -7.849698543548584

Token 3357: ' le' (ID: 505)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.001311074709519744
    2. '(seg' → logprob: -7.376311302185059
    3. ' seg' → logprob: -8.126311302185059
    4. '       ' → logprob: -8.626311302185059
    5. '```' → logprob: -9.501311302185059
    6. 'segment' → logprob: -10.501311302185059
    7. 'le' → logprob: -11.001311302185059
    8. 'exact' → logprob: -11.001311302185059
    9. '0' → logprob: -11.126311302185059
    10. 'correct' → logprob: -11.251311302185059

Token 3358: ' segment' (ID: 14806)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.07030384987592697
    2. 'segment' → logprob: -2.8203039169311523
    3. 'current' → logprob: -5.570303916931152
    4. 'next' → logprob: -6.195303916931152
    5. ' seg' → logprob: -7.195303916931152
    6. ' segment' → logprob: -7.945303916931152
    7. '0' → logprob: -8.445303916931152
    8. 'token' → logprob: -8.695303916931152
    9. '```' → logprob: -8.945303916931152
    10. 'first' → logprob: -9.320303916931152

Token 3359: ' contenant' (ID: 131049)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.4601235389709473
    2. '       ' → logprob: -2.2101235389709473
    3. '```' → logprob: -2.2101235389709473
    4. '
' → logprob: -2.3351235389709473
    5. 'où' → logprob: -2.4601235389709473
    6. '_lengths' → logprob: -2.7101235389709473
    7. '_length' → logprob: -2.7101235389709473
    8. '_index' → logprob: -3.2101235389709473
    9. '_idx' → logprob: -3.7101235389709473
    10. 'idx' → logprob: -3.7101235389709473

Token 3360: ' station' (ID: 11538)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.3160689175128937
    2. 'segment' → logprob: -1.9410688877105713
    3. 'station' → logprob: -2.0660688877105713
    4. ' station' → logprob: -8.441068649291992
    5. '   ' → logprob: -8.816068649291992
    6. ' seg' → logprob: -8.816068649291992
    7. '       ' → logprob: -9.691068649291992
    8. '           ' → logprob: -10.191068649291992
    9. '(seg' → logprob: -10.691068649291992
    10. '```' → logprob: -10.691068649291992

Token 3361: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.00037347347824834287
    2. '_idx' → logprob: -8.875373840332031
    3. 'offset' → logprob: -9.125373840332031
    4. '_index' → logprob: -9.750373840332031
    5. '_offsets' → logprob: -9.875373840332031
    6. '_length' → logprob: -12.125373840332031
    7. '_lengths' → logprob: -12.625373840332031
    8. '_' → logprob: -13.250373840332031
    9. '
' → logprob: -14.000373840332031
    10. '_len' → logprob: -14.125373840332031

Token 3362: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03987860679626465
    2. '
' → logprob: -4.039878845214844
    3. ',' → logprob: -4.539878845214844
    4. 'cum' → logprob: -5.664878845214844
    5. '```' → logprob: -5.914878845214844
    6. '        
' → logprob: -6.664878845214844
    7. 'c' → logprob: -7.414878845214844
    8. '#' → logprob: -7.539878845214844
    9. 'segment' → logprob: -8.039878845214844
    10. ' cum' → logprob: -8.164878845214844

Token 3363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039538104087114334
    2. 'c' → logprob: -4.1645379066467285
    3. '
' → logprob: -5.0395379066467285
    4. '```' → logprob: -5.2895379066467285
    5. ',' → logprob: -5.5395379066467285
    6. 'segment' → logprob: -6.1645379066467285
    7. 'cum' → logprob: -6.2895379066467285
    8. '   ' → logprob: -7.2895379066467285
    9. '        
' → logprob: -7.2895379066467285
    10. '``' → logprob: -7.9145379066467285

Token 3364: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26785367727279663
    2. 'last' → logprob: -2.8928537368774414
    3. 'segment' → logprob: -2.8928537368774414
    4. 'offset' → logprob: -3.1428537368774414
    5. 'time' → logprob: -3.7678537368774414
    6. 'rest' → logprob: -4.392853736877441
    7. 'c' → logprob: -4.892853736877441
    8. 'distance' → logprob: -5.017853736877441
    9. 'dist' → logprob: -5.142853736877441
    10. 'if' → logprob: -5.142853736877441

Token 3365: ' Long' (ID: 7790)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.0754356384277344
    2. '       ' → logprob: -1.4504356384277344
    3. 'time' → logprob: -1.4504356384277344
    4. 'rest' → logprob: -2.8254356384277344
    5. 'segment' → logprob: -3.0754356384277344
    6. 'c' → logprob: -3.7004356384277344
    7. 'distance' → logprob: -4.200435638427734
    8. 'temps' → logprob: -4.825435638427734
    9. 'dist' → logprob: -4.825435638427734
    10. '#' → logprob: -5.325435638427734

Token 3366: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.022729020565748215
    2. 'eur' → logprob: -3.89772891998291
    3. 'segment' → logprob: -7.02272891998291
    4. 'ue' → logprob: -7.77272891998291
    5. 'uer' → logprob: -8.39772891998291
    6. 'eurs' → logprob: -9.02272891998291
    7. 'e' → logprob: -9.39772891998291
    8. '_segment' → logprob: -9.77272891998291
    9. 'est' → logprob: -9.89772891998291
    10. '=' → logprob: -10.02272891998291

Token 3367: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6808202266693115
    2. 'rest' → logprob: -1.9308202266693115
    3. ' =' → logprob: -2.1808202266693115
    4. 'segment' → logprob: -2.3058202266693115
    5. '_rest' → logprob: -3.4308202266693115
    6. 'seg' → logprob: -3.4308202266693115
    7. 'du' → logprob: -3.8058202266693115
    8. '_segment' → logprob: -4.180820465087891
    9. '_seg' → logprob: -5.055820465087891
    10. 'remaining' → logprob: -5.180820465087891

Token 3368: ' dernier' (ID: 27982)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -9.186122770188376e-05
    2. ' segment' → logprob: -9.875091552734375
    3. 'dern' → logprob: -10.875091552734375
    4. 'seg' → logprob: -11.625091552734375
    5. '```' → logprob: -12.750091552734375
    6. '_segment' → logprob: -13.125091552734375
    7. 'current' → logprob: -13.125091552734375
    8. '(segment' → logprob: -13.375091552734375
    9. 'segments' → logprob: -13.500091552734375
    10. 'last' → logprob: -13.750091552734375

Token 3369: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.008541997522115707
    2. '_segment' → logprob: -5.008542060852051
    3. ' segment' → logprob: -6.633542060852051
    4. 'part' → logprob: -8.88354206085205
    5. '```' → logprob: -9.00854206085205
    6. '_' → logprob: -9.75854206085205
    7. 'token' → logprob: -10.50854206085205
    8. '(segment' → logprob: -10.50854206085205
    9. '
' → logprob: -10.75854206085205
    10. '   ' → logprob: -11.25854206085205

Token 3370: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5583271980285645
    2. ' =' → logprob: -1.5583271980285645
    3. 'segment' → logprob: -1.9333271980285645
    4. 'rest' → logprob: -3.1833271980285645
    5. '   ' → logprob: -4.8083271980285645
    6. 'remaining' → logprob: -5.3083271980285645
    7. 'last' → logprob: -5.5583271980285645
    8. 'der' → logprob: -6.1833271980285645
    9. '_rest' → logprob: -6.1833271980285645
    10. '       ' → logprob: -6.5583271980285645

Token 3371: ' parcour' (ID: 130642)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.6880955696105957
    2. 'tr' → logprob: -1.8130955696105957
    3. 'pass' → logprob: -2.5630955696105957
    4. 'c' → logprob: -2.5630955696105957
    5. 'segment' → logprob: -2.9380955696105957
    6. 'par' → logprob: -3.4380955696105957
    7. 'atte' → logprob: -3.5630955696105957
    8. 'faire' → logprob: -4.563095569610596
    9. 'part' → logprob: -4.813095569610596
    10. '
' → logprob: -4.938095569610596

Token 3372: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0008305939263664186
    2. 'ée' → logprob: -7.12583065032959
    3. 'r' → logprob: -12.00083065032959
    4. 'e' → logprob: -12.00083065032959
    5. 'rer' → logprob: -12.50083065032959
    6. 'ee' → logprob: -12.62583065032959
    7. 'é' → logprob: -13.75083065032959
    8. 'ier' → logprob: -13.75083065032959
    9. '   ' → logprob: -14.12583065032959
    10. 'éer' → logprob: -14.50083065032959

Token 3373: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02852988988161087
    2. ' =' → logprob: -4.278530120849609
    3. 'segment' → logprob: -4.403530120849609
    4. 'station' → logprob: -6.903530120849609
    5. '   ' → logprob: -8.27853012084961
    6. '       ' → logprob: -8.77853012084961
    7. 'à' → logprob: -9.15353012084961
    8. '(segment' → logprob: -9.65353012084961
    9. 'dans' → logprob: -9.90353012084961
    10. '           ' → logprob: -10.02853012084961

Token 3374: ' local' (ID: 2698)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.015296082012355328
    2. 'last' → logprob: -5.26529598236084
    3. '#' → logprob: -5.89029598236084
    4. ' local' → logprob: -6.26529598236084
    5. 'segment' → logprob: -6.26529598236084
    6. 'A' → logprob: -6.64029598236084
    7. 'sem' → logprob: -7.64029598236084
    8. 'station' → logprob: -8.76529598236084
    9. '```' → logprob: -8.76529598236084
    10. ' A' → logprob: -8.89029598236084

Token 3375: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04440353810787201
    2. ' =' → logprob: -3.169403553009033
    3. 'last' → logprob: -6.919403553009033
    4. 'segment' → logprob: -8.169403076171875
    5. 'station' → logprob: -9.919403076171875
    6. '           ' → logprob: -11.419403076171875
    7. '=
' → logprob: -11.419403076171875
    8. '_last' → logprob: -11.669403076171875
    9. '   ' → logprob: -11.669403076171875
    10. 'remaining' → logprob: -12.044403076171875

Token 3376: '       ' (ID: 309)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.0467301681637764
    2. 'segment' → logprob: -3.4217302799224854
    3. ' station' → logprob: -4.421730041503906
    4. 'last' → logprob: -7.921730041503906
    5. '           ' → logprob: -8.421730041503906
    6. 'endpoint' → logprob: -8.796730041503906
    7. ' segment' → logprob: -9.046730041503906
    8. '   ' → logprob: -10.421730041503906
    9. '       ' → logprob: -10.671730041503906
    10. ' last' → logprob: -10.796730041503906

Token 3377: ' last' (ID: 2174)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.033742863684892654
    2. 'segment' → logprob: -3.783742904663086
    3. ' station' → logprob: -4.658742904663086
    4. 'last' (adapté à ' last') → logprob: -7.658742904663086
    5. '   ' → logprob: -8.658742904663086
    6. ' segment' → logprob: -9.283742904663086
    7. 'endpoint' → logprob: -9.283742904663086
    8. '           ' → logprob: -10.283742904663086
    9. ' last' → logprob: -10.658742904663086
    10. '       ' → logprob: -10.783742904663086

Token 3378: '_seg' (ID: 78972)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.0076099359430372715
    2. '_length' → logprob: -5.257609844207764
    3. '_part' → logprob: -7.007609844207764
    4. 'segment' → logprob: -7.382609844207764
    5. '_' → logprob: -8.632610321044922
    6. '_seg' → logprob: -8.632610321044922
    7. '```' → logprob: -9.132610321044922
    8. '_len' → logprob: -10.007610321044922
    9. '   ' → logprob: -10.007610321044922
    10. '_distance' → logprob: -10.257610321044922

Token 3379: '_local' (ID: 29253)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0026650733780115843
    2. '_len' → logprob: -6.002665042877197
    3. 't' → logprob: -9.252665519714355
    4. '_l' → logprob: -10.252665519714355
    5. '_lengths' → logprob: -11.377665519714355
    6. '_distance' → logprob: -11.627665519714355
    7. '_' → logprob: -11.752665519714355
    8. '_th' → logprob: -12.002665519714355
    9. 'th' → logprob: -12.127665519714355
    10. '_size' → logprob: -12.752665519714355

Token 3380: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.03640400990843773
    2. '_len' → logprob: -3.6614038944244385
    3. ' =' → logprob: -5.161404132843018
    4. '_distance' → logprob: -6.161404132843018
    5. '=' → logprob: -6.911404132843018
    6. '=_' → logprob: -7.786404132843018
    7. ' _' → logprob: -8.28640365600586
    8. '_dist' → logprob: -8.41140365600586
    9. '_' → logprob: -8.53640365600586
    10. '_l' → logprob: -10.16140365600586

Token 3381: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753616079688072
    2. ' =' → logprob: -3.5297536849975586
    3. '   ' → logprob: -14.154753684997559
    4. 'station' → logprob: -14.404753684997559
    5. 'segment' → logprob: -14.404753684997559
    6. '```' → logprob: -15.029753684997559
    7. '           ' → logprob: -15.154753684997559
    8. '=
' → logprob: -15.154753684997559
    9. ' ' → logprob: -16.029752731323242
    10. ' station' → logprob: -16.404752731323242

Token 3382: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.029085610061883926
    2. ' station' → logprob: -3.654085636138916
    3. 'segment' → logprob: -5.904085636138916
    4. '   ' → logprob: -10.654085159301758
    5. ' segment' → logprob: -11.154085159301758
    6. 'endpoint' → logprob: -11.654085159301758
    7. ' ' → logprob: -13.779085159301758
    8. '`' → logprob: -14.029085159301758
    9. '```' → logprob: -14.029085159301758
    10. '           ' → logprob: -14.154085159301758

Token 3383: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.008797625079751015
    2. '_lengths' → logprob: -5.258797645568848
    3. '_offsets' → logprob: -6.008797645568848
    4. '_idx' → logprob: -7.758797645568848
    5. 'offset' → logprob: -8.508797645568848
    6. '_length' → logprob: -8.508797645568848
    7. 'Offset' → logprob: -8.883797645568848
    8. '[' → logprob: -11.133797645568848
    9. '_OFFSET' → logprob: -11.258797645568848
    10. '[idx' → logprob: -11.383797645568848

Token 3384: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14307661354541779
    2. '-' → logprob: -2.0180766582489014
    3. '[' → logprob: -8.01807689666748
    4. ' ' → logprob: -10.14307689666748
    5. ' ' → logprob: -12.01807689666748
    6. '   ' → logprob: -12.26807689666748
    7. '           ' → logprob: -12.51807689666748
    8. '       ' → logprob: -12.89307689666748
    9. '```' → logprob: -13.26807689666748
    10. ' -
' → logprob: -13.39307689666748

Token 3385: ' cum' (ID: 10023)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009710061363875866
    2. '(c' → logprob: -4.75970983505249
    3. 'cum' → logprob: -6.88470983505249
    4. ' cum' → logprob: -10.634710311889648
    5. ' (' → logprob: -10.759710311889648
    6. '(' → logprob: -11.509710311889648
    7. '   ' → logprob: -12.009710311889648
    8. '
' → logprob: -13.009710311889648
    9. '	c' → logprob: -13.134710311889648
    10. ' c' → logprob: -13.384710311889648

Token 3386: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.006225967314094305
    2. 'c' → logprob: -5.131226062774658
    3. '=' → logprob: -9.0062255859375
    4. '=c' → logprob: -10.2562255859375
    5. 'cum' → logprob: -10.2562255859375
    6. '   ' → logprob: -10.6312255859375
    7. '
' → logprob: -11.2562255859375
    8. '_c' → logprob: -11.3812255859375
    9. 'umu' → logprob: -12.0062255859375
    10. ' =' → logprob: -12.0062255859375

Token 3387: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24455611407756805
    2. '
' → logprob: -2.869556188583374
    3. '<|end|>' → logprob: -2.994556188583374
    4. '+' → logprob: -3.244556188583374
    5. ')' → logprob: -3.619556188583374
    6. '```' → logprob: -4.744555950164795
    7. ' +' → logprob: -5.119555950164795
    8. '        
' → logprob: -5.244555950164795
    9. ' last' → logprob: -5.369555950164795
    10. '<|end|>' → logprob: -5.619555950164795

Token 3388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007096235174685717
    2. '
' → logprob: -5.757096290588379
    3. '        
' → logprob: -6.757096290588379
    4. ' last' → logprob: -7.382096290588379
    5. '```' → logprob: -7.382096290588379
    6. ' 
' → logprob: -8.132096290588379
    7. '           ' → logprob: -8.507096290588379
    8. '   ' → logprob: -8.632096290588379
    9. '  
' → logprob: -8.882096290588379
    10. '        ' → logprob: -9.257096290588379

Token 3389: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09127665311098099
    2. 'return' → logprob: -2.4662766456604004
    3. 'if' → logprob: -7.0912766456604
    4. '```' → logprob: -7.4662766456604
    5. 'time' → logprob: -7.8412766456604
    6. '
' → logprob: -7.9662766456604
    7. ' return' → logprob: -9.466277122497559
    8. '   ' → logprob: -10.716277122497559
    9. '#' (adapté à ' #') → logprob: -11.341277122497559
    10. ' if' → logprob: -11.341277122497559

Token 3390: ' Time' (ID: 6688)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.35263848304748535
    2. 'return' → logprob: -1.3526384830474854
    3. '       ' → logprob: -3.7276384830474854
    4. 'temps' → logprob: -4.852638244628906
    5. 'total' → logprob: -5.727638244628906
    6. 'last' → logprob: -6.352638244628906
    7. 'segment' → logprob: -7.227638244628906
    8. 'times' → logprob: -8.477638244628906
    9. 'ret' → logprob: -8.852638244628906
    10. '```' → logprob: -8.977638244628906

Token 3391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03948940709233284
    2. ' =' → logprob: -3.289489507675171
    3. 's' → logprob: -7.789489269256592
    4. '_seg' → logprob: -8.91448974609375
    5. 'seg' → logprob: -9.03948974609375
    6. '       ' → logprob: -9.03948974609375
    7. '   ' → logprob: -9.41448974609375
    8. '_needed' → logprob: -9.41448974609375
    9. '_segments' → logprob: -9.66448974609375
    10. '_segment' → logprob: -9.91448974609375

Token 3392: ' temps' (ID: 11160)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.001051507773809135
    2. ' seg' → logprob: -7.876051425933838
    3. 's' → logprob: -8.376051902770996
    4. '(seg' → logprob: -8.626051902770996
    5. 'segment' → logprob: -8.751051902770996
    6. 'segments' → logprob: -9.876051902770996
    7. '   ' → logprob: -10.501051902770996
    8. '```' → logprob: -12.001051902770996
    9. '       ' → logprob: -12.626051902770996
    10. 'time' → logprob: -12.751051902770996

Token 3393: ' sem' (ID: 2743)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7485395669937134
    2. '=' → logprob: -1.4985395669937134
    3. '*' → logprob: -2.123539447784424
    4. '(seg' → logprob: -3.623539447784424
    5. '       ' → logprob: -3.748539447784424
    6. '   ' → logprob: -3.873539447784424
    7. ' *' → logprob: -3.998539447784424
    8. 'seg' → logprob: -4.123539447784424
    9. 'to' → logprob: -4.248539447784424
    10. ' to' → logprob: -4.873539447784424

Token 3394: 'iexpress' (ID: 190732)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.49440956115722656
    2. '*' → logprob: -2.6194095611572266
    3. '+' → logprob: -3.2444095611572266
    4. '-' → logprob: -3.2444095611572266
    5. '_segment' → logprob: -3.4944095611572266
    6. 'i' → logprob: -3.6194095611572266
    7. '_i' → logprob: -3.7444095611572266
    8. '_' → logprob: -3.8694095611572266
    9. '_expr' → logprob: -3.8694095611572266
    10. '_seg' → logprob: -3.9944095611572266

Token 3395: ' pour' (ID: 1930)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6934227347373962
    2. ' *' → logprob: -0.6934227347373962
    3. ' ' → logprob: -9.318422317504883
    4. '   ' → logprob: -10.193422317504883
    5. '=' → logprob: -10.443422317504883
    6. ' ' → logprob: -10.568422317504883
    7. ' =' → logprob: -10.693422317504883
    8. '```' → logprob: -11.568422317504883
    9. '       ' → logprob: -11.818422317504883
    10. '  ' → logprob: -12.443422317504883

Token 3396: ' segments' (ID: 33749)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.389532208442688
    2. ' seg' → logprob: -1.264532208442688
    3. '(seg' → logprob: -3.3895320892333984
    4. 'segment' → logprob: -6.139532089233398
    5. 'segments' → logprob: -6.764532089233398
    6. ' (' → logprob: -7.264532089233398
    7. 'les' → logprob: -7.514532089233398
    8. ' les' → logprob: -7.889532089233398
    9. 'pass' → logprob: -8.014532089233398
    10. ' segment' → logprob: -8.139532089233398

Token 3397: ' compl' (ID: 8432)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.6587423086166382
    2. '*' → logprob: -2.2837424278259277
    3. '[' → logprob: -2.4087424278259277
    4. '(seg' → logprob: -2.4087424278259277
    5. '_seg' → logprob: -2.5337424278259277
    6. 's' → logprob: -3.9087424278259277
    7. '_pass' → logprob: -4.158742427825928
    8. '       ' → logprob: -4.408742427825928
    9. 'segment' → logprob: -4.533742427825928
    10. '```' → logprob: -4.783742427825928

Token 3398: 'ètes' (ID: 81660)
  Prédit: 'ets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.9408627152442932
    2. 'lets' → logprob: -1.4408626556396484
    3. 'étés' → logprob: -1.8158626556396484
    4. 'ètes' → logprob: -2.1908626556396484
    5. 'ts' → logprob: -3.5658626556396484
    6. 'et' → logprob: -4.315862655639648
    7. 'let' → logprob: -4.565862655639648
    8. 'è' → logprob: -4.690862655639648
    9. 'plets' → logprob: -5.190862655639648
    10. 'letes' → logprob: -5.440862655639648

Token 3399: ' +' (ID: 659)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.7991469502449036
    2. '*' → logprob: -0.9241469502449036
    3. '(seg' → logprob: -2.924146890640259
    4. ' *' → logprob: -3.549146890640259
    5. 'segments' → logprob: -3.924146890640259
    6. 'segment' → logprob: -4.674147129058838
    7. '       ' → logprob: -4.924147129058838
    8. '+' → logprob: -5.049147129058838
    9. ' seg' → logprob: -5.424147129058838
    10. '```' → logprob: -5.424147129058838

Token 3400: ' local' (ID: 2698)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.20859013497829437
    2. ' last' → logprob: -1.9585901498794556
    3. 'segment' → logprob: -3.583590030670166
    4. 'seg' → logprob: -4.583590030670166
    5. ' segment' → logprob: -5.458590030670166
    6. '(last' → logprob: -5.958590030670166
    7. ' seg' → logprob: -6.708590030670166
    8. '(seg' → logprob: -7.708590030670166
    9. ' (' → logprob: -8.333590507507324
    10. '(segment' → logprob: -8.458590507507324

Token 3401: ' sur' (ID: 1512)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.2238166481256485
    2. '*' → logprob: -2.5988166332244873
    3. '```' → logprob: -3.9738166332244873
    4. '_lengths' → logprob: -4.098816871643066
    5. '_time' → logprob: -4.348816871643066
    6. '_times' → logprob: -4.473816871643066
    7. 'len' → logprob: -4.723816871643066
    8. ' *' → logprob: -4.723816871643066
    9. '_length' → logprob: -4.848816871643066
    10. '+' → logprob: -5.473816871643066

Token 3402: ' dernier' (ID: 27982)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.024506550282239914
    2. 'dern' → logprob: -3.8995065689086914
    3. ' last' → logprob: -6.149506568908691
    4. 'der' → logprob: -7.024506568908691
    5. 'la' → logprob: -7.649506568908691
    6. 'le' → logprob: -7.774506568908691
    7. ' la' → logprob: -11.524506568908691
    8. 'remaining' → logprob: -12.524506568908691
    9. '(last' → logprob: -12.524506568908691
    10. ' dernier' → logprob: -12.774506568908691

Token 3403: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.18237757682800293
    2. ' segment' → logprob: -2.807377576828003
    3. '_seg' → logprob: -2.932377576828003
    4. 'seg' → logprob: -3.682377576828003
    5. '_segment' → logprob: -3.807377576828003
    6. ' _' → logprob: -7.182377815246582
    7. '```' → logprob: -7.307377815246582
    8. '   ' → logprob: -7.432377815246582
    9. '_' → logprob: -7.557377815246582
    10. '       ' → logprob: -7.807377815246582

Token 3404: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.6045200824737549
    2. 'seg' → logprob: -1.7295200824737549
    3. '       ' → logprob: -1.8545200824737549
    4. '+' → logprob: -2.104520082473755
    5. ' *' → logprob: -2.354520082473755
    6. '=' → logprob: -2.479520082473755
    7. ' +' → logprob: -2.979520082473755
    8. '(seg' → logprob: -3.104520082473755
    9. ' =' → logprob: -3.854520082473755
    10. '   ' → logprob: -4.479519844055176

Token 3405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3770548105239868
    2. ' +' → logprob: -1.8770548105239868
    3. ' last' → logprob: -2.2520546913146973
    4. '=' → logprob: -2.3770546913146973
    5. ' =' → logprob: -2.5020546913146973
    6. '+' → logprob: -2.7520546913146973
    7. '*' → logprob: -3.0020546913146973
    8. 'last' → logprob: -3.0020546913146973
    9. ' *' → logprob: -3.5020546913146973
    10. '```' → logprob: -3.7520546913146973

Token 3406: ' time' (ID: 1058)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2440075874328613
    2. 'return' → logprob: -1.4940075874328613
    3. '       ' → logprob: -2.1190075874328613
    4. ' return' → logprob: -2.3690075874328613
    5. '=' → logprob: -2.6190075874328613
    6. 'seg' → logprob: -3.3690075874328613
    7. '   ' → logprob: -3.6190075874328613
    8. ' last' → logprob: -3.7440075874328613
    9. '```' → logprob: -3.7440075874328613
    10. 'segment' → logprob: -4.619007587432861

Token 3407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026447474956512
    2. ' =' → logprob: -2.350264549255371
    3. 's' → logprob: -10.350264549255371
    4. '_segments' → logprob: -11.850264549255371
    5. '   ' → logprob: -12.475264549255371
    6. '_' → logprob: -12.975264549255371
    7. '_time' → logprob: -13.350264549255371
    8. 'segments' → logprob: -13.350264549255371
    9. '=time' → logprob: -13.350264549255371
    10. '```' → logprob: -13.475264549255371

Token 3408: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.10149787366390228
    2. ' seg' → logprob: -2.4764978885650635
    3. '(seg' → logprob: -5.476497650146484
    4. 'cum' → logprob: -5.851497650146484
    5. ' cum' → logprob: -6.476497650146484
    6. 'segments' → logprob: -7.101497650146484
    7. 'segment' → logprob: -7.101497650146484
    8. '       ' → logprob: -7.226497650146484
    9. 'c' → logprob: -8.351497650146484
    10. 'C' → logprob: -8.476497650146484

Token 3409: '_idx' (ID: 15257)
  Prédit: 'ments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.4532349109649658
    2. '_idx' → logprob: -1.8282349109649658
    3. 'ment' → logprob: -2.953234910964966
    4. '   ' → logprob: -3.703234910964966
    5. '_segments' → logprob: -4.078234672546387
    6. 'iments' → logprob: -4.328234672546387
    7. 'ements' → logprob: -4.453234672546387
    8. ' +=' → logprob: -4.703234672546387
    9. 'mentation' → logprob: -4.828234672546387
    10. '[' → logprob: -4.953234672546387

Token 3410: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5232263207435608
    2. '*' → logprob: -0.8982263207435608
    3. ')' → logprob: -10.148226737976074
    4. ' ' → logprob: -11.398226737976074
    5. '[' → logprob: -11.523226737976074
    6. '<|end|>' → logprob: -11.523226737976074
    7. '<|end|>' → logprob: -11.773226737976074
    8. '```' → logprob: -11.898226737976074
    9. ' ' → logprob: -13.023226737976074
    10. '`' → logprob: -13.148226737976074

Token 3411: ' C' (ID: 363)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.03780815750360489
    2. 'C' → logprob: -3.9128081798553467
    3. ' segment' → logprob: -4.162807941436768
    4. ' C' → logprob: -6.912807941436768
    5. '(segment' → logprob: -7.787807941436768
    6. '(C' → logprob: -10.662808418273926
    7. ' (' → logprob: -10.787808418273926
    8. ' ' → logprob: -10.912808418273926
    9. ' ' → logprob: -11.037808418273926
    10. ''' → logprob: -11.412808418273926

Token 3412: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5974814891815186
    2. '<|end|>' → logprob: -0.8474814891815186
    3. ' +' → logprob: -4.472481727600098
    4. ')' → logprob: -5.097481727600098
    5. '<|end|>' → logprob: -5.722481727600098
    6. ')+' → logprob: -9.222481727600098
    7. '+++' → logprob: -9.847481727600098
    8. '```' → logprob: -10.097481727600098
    9. '[' → logprob: -10.347481727600098
    10. '*' → logprob: -10.472481727600098

Token 3413: ' ' (ID: 220)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.001387262367643416
    2. ' segment' → logprob: -7.126387119293213
    3. '(segment' → logprob: -7.501387119293213
    4. '1' → logprob: -10.876387596130371
    5. ' ' → logprob: -13.001387596130371
    6. ' (' → logprob: -13.501387596130371
    7. '(' → logprob: -13.626387596130371
    8. 'last' → logprob: -14.126387596130371
    9. 'seg' → logprob: -14.251387596130371
    10. '```' → logprob: -14.751387596130371

Token 3414: '0' (ID: 15)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0005440961103886366
    2. '(segment' → logprob: -7.87554407119751
    3. ' segment' → logprob: -9.500544548034668
    4. '1' → logprob: -9.750544548034668
    5. 'min' → logprob: -11.500544548034668
    6. 'max' → logprob: -12.375544548034668
    7. '(' → logprob: -12.625544548034668
    8. 'interval' → logprob: -12.875544548034668
    9. 'segments' → logprob: -12.875544548034668
    10. 'station' → logprob: -13.125544548034668

Token 3415: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3416: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005289849825203419
    2. ' *' → logprob: -6.2552900314331055
    3. 'segment' → logprob: -6.6302900314331055
    4. '       ' → logprob: -7.8802900314331055
    5. ')' → logprob: -8.130290031433105
    6. '   ' → logprob: -8.380290031433105
    7. ' ' → logprob: -8.630290031433105
    8. '(segment' → logprob: -8.880290031433105
    9. ' segment' → logprob: -9.130290031433105
    10. '*(' → logprob: -9.255290031433105

Token 3417: ' initial' (ID: 4871)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04497089236974716
    2. 'C' → logprob: -4.294970989227295
    3. '0' → logprob: -4.669970989227295
    4. '<|end|>' → logprob: -4.794970989227295
    5. ' ' → logprob: -5.544970989227295
    6. ''' → logprob: -6.169970989227295
    7. ')' → logprob: -6.669970989227295
    8. '"' → logprob: -7.044970989227295
    9. 'segments' → logprob: -7.294970989227295
    10. '<|end|>' → logprob: -7.419970989227295

Token 3418: 'isation' (ID: 6993)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3222646713256836
    2. '<|end|>' → logprob: -1.5722646713256836
    3. '*' → logprob: -1.6972646713256836
    4. '+' → logprob: -2.1972646713256836
    5. 'time' → logprob: -3.0722646713256836
    6. ')' → logprob: -3.0722646713256836
    7. ''' → logprob: -3.6972646713256836
    8. ' ' → logprob: -3.9472646713256836
    9. '=' → logprob: -4.072264671325684
    10. '<|end|>' → logprob: -4.447264671325684

Token 3419: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3420: ' on' (ID: 402)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45042240619659424
    2. '1' → logprob: -1.7004224061965942
    3. '<|end|>' → logprob: -2.2004222869873047
    4. ' ' → logprob: -3.9504222869873047
    5. ')' → logprob: -4.075422286987305
    6. ''' → logprob: -5.075422286987305
    7. '<|end|>' → logprob: -5.325422286987305
    8. 'time' → logprob: -5.575422286987305
    9. '"' → logprob: -6.075422286987305
    10. '*' → logprob: -6.075422286987305

Token 3421: ' multipl' (ID: 44269)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7403944730758667
    2. '=' → logprob: -1.4903944730758667
    3. '+' → logprob: -1.8653944730758667
    4. 'time' → logprob: -2.6153945922851562
    5. ' +=' → logprob: -3.7403945922851562
    6. ')' → logprob: -4.740394592285156
    7. '```' → logprob: -5.240394592285156
    8. '0' → logprob: -5.490394592285156
    9. 'seg' → logprob: -5.740394592285156
    10. '#' → logprob: -5.740394592285156

Token 3422: 'ie' (ID: 396)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5739631652832031
    2. '0' → logprob: -1.0739631652832031
    3. ' ' → logprob: -2.948963165283203
    4. '       ' → logprob: -5.073963165283203
    5. '-' → logprob: -5.448963165283203
    6. '+' → logprob: -5.573963165283203
    7. '*' → logprob: -5.698963165283203
    8. '   ' → logprob: -5.823963165283203
    9. 'seg' → logprob: -5.948963165283203
    10. 's' → logprob: -6.073963165283203

Token 3423: ' par' (ID: 686)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2157321721315384
    2. '0' → logprob: -2.5907320976257324
    3. 'segments' → logprob: -2.7157320976257324
    4. '1' → logprob: -3.8407320976257324
    5. 'segment' → logprob: -4.965732097625732
    6. ' C' → logprob: -5.590732097625732
    7. ' ' → logprob: -5.715732097625732
    8. ' segments' → logprob: -5.840732097625732
    9. '*' → logprob: -6.090732097625732
    10. '   ' → logprob: -6.340732097625732

Token 3424: ' ' (ID: 220)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7316526770591736
    2. 'segment' → logprob: -0.8566526770591736
    3. 'segments' → logprob: -2.8566527366638184
    4. '1' → logprob: -4.106652736663818
    5. ' segment' → logprob: -4.606652736663818
    6. ' C' → logprob: -5.856652736663818
    7. '0' → logprob: -6.106652736663818
    8. '`' → logprob: -6.606652736663818
    9. ' segments' → logprob: -6.856652736663818
    10. ''' → logprob: -6.856652736663818

Token 3425: '0' (ID: 15)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6116721034049988
    2. 'C' → logprob: -0.9866721034049988
    3. '1' → logprob: -3.8616721630096436
    4. ' segment' → logprob: -3.9866721630096436
    5. 'segments' → logprob: -4.1116719245910645
    6. ''' → logprob: -4.7366719245910645
    7. '"' → logprob: -4.7366719245910645
    8. ' C' → logprob: -5.2366719245910645
    9. ' '' → logprob: -6.8616719245910645
    10. '`' → logprob: -7.2366719245910645

Token 3426: ' faute' (ID: 84097)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3427: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2902970016002655
    2. '<|end|>' → logprob: -2.290297031402588
    3. '0' → logprob: -2.540297031402588
    4. ' *' → logprob: -3.040297031402588
    5. ')' → logprob: -4.915297031402588
    6. '=' → logprob: -5.665297031402588
    7. '<|end|>' → logprob: -5.665297031402588
    8. ' ' → logprob: -5.915297031402588
    9. '+' → logprob: -6.290297031402588
    10. ' )' → logprob: -7.415297031402588

Token 3428: ' re' (ID: 322)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5088111758232117
    2. 'segments' → logprob: -1.7588112354278564
    3. '0' → logprob: -2.0088112354278564
    4. 'C' → logprob: -2.7588112354278564
    5. ')' → logprob: -5.258810997009277
    6. ' segments' → logprob: -5.633810997009277
    7. '```' → logprob: -5.633810997009277
    8. '*' → logprob: -5.758810997009277
    9. ' ' → logprob: -5.883810997009277
    10. 'segment' → logprob: -6.383810997009277

Token 3429: 'lecture' (ID: 136547)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6930749416351318
    2. '*' → logprob: -2.068074941635132
    3. '0' → logprob: -2.193074941635132
    4. '=' → logprob: -2.818074941635132
    5. '1' → logprob: -3.068074941635132
    6. 'seg' → logprob: -3.193074941635132
    7. ')' → logprob: -3.943074941635132
    8. 'C' → logprob: -4.068075180053711
    9. '`' → logprob: -4.318075180053711
    10. 's' → logprob: -4.568075180053711

Token 3430: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1326061338186264
    2. '*' → logprob: -2.132606029510498
    3. ' ' → logprob: -6.882606029510498
    4. '```' → logprob: -7.132606029510498
    5. '=' → logprob: -7.382606029510498
    6. '#' → logprob: -7.382606029510498
    7. ')' → logprob: -7.507606029510498
    8. '+' → logprob: -8.007606506347656
    9. ' *' → logprob: -8.132606506347656
    10. '   ' → logprob: -8.757606506347656

Token 3431: 'corr' (ID: 116563)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6843289732933044
    2. 'segments' → logprob: -1.0593290328979492
    3. 'C' → logprob: -3.059329032897949
    4. ')' → logprob: -3.559329032897949
    5. '0' → logprob: -3.809329032897949
    6. '*' → logprob: -4.309329032897949
    7. 'segment' → logprob: -4.559329032897949
    8. 'seg' → logprob: -4.684329032897949
    9. 'time' → logprob: -5.684329032897949
    10. '   ' → logprob: -6.184329032897949

Token 3432: 'iger' (ID: 5873)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -1.2276816368103027
    2. 'turn' → logprob: -1.7276816368103027
    3. '=' → logprob: -1.9776816368103027
    4. '       ' → logprob: -1.9776816368103027
    5. 'urn' → logprob: -2.1026816368103027
    6. '   ' → logprob: -3.2276816368103027
    7. ')' → logprob: -3.7276816368103027
    8. '0' → logprob: -4.602681636810303
    9. ' =' → logprob: -5.102681636810303
    10. 'segment' → logprob: -5.352681636810303

Token 3433: ')
' (ID: 446)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.29758355021476746
    2. 'C' → logprob: -2.17258358001709
    3. '0' → logprob: -3.04758358001709
    4. '1' → logprob: -3.54758358001709
    5. 'segment' → logprob: -4.17258358001709
    6. '*' → logprob: -4.17258358001709
    7. 'seg' → logprob: -4.42258358001709
    8. 'time' → logprob: -5.54758358001709
    9. '```' → logprob: -5.54758358001709
    10. '*C' → logprob: -6.04758358001709

Token 3434: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2194042205810547
    2. '       ' → logprob: -2.3444042205810547
    3. ' *' → logprob: -2.7194042205810547
    4. '   ' → logprob: -4.469404220581055
    5. ' ' → logprob: -5.344404220581055
    6. '*time' → logprob: -5.969404220581055
    7. '           ' → logprob: -6.094404220581055
    8. ')' → logprob: -6.594404220581055
    9. '     ' → logprob: -6.594404220581055
    10. '        ' → logprob: -6.719404220581055

Token 3435: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.44523248076438904
    2. 'C' → logprob: -1.6952325105667114
    3. '*C' → logprob: -3.195232391357422
    4. ')' → logprob: -3.320232391357422
    5. ' *' → logprob: -3.445232391357422
    6. ' C' → logprob: -4.070232391357422
    7. '`' → logprob: -4.820232391357422
    8. ' ' → logprob: -4.820232391357422
    9. '```' → logprob: -5.695232391357422
    10. '0' → logprob: -5.945232391357422

Token 3436: ' correction' (ID: 43745)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5296829342842102
    2. '*' → logprob: -1.6546828746795654
    3. '1' → logprob: -3.2796828746795654
    4. '       ' → logprob: -3.2796828746795654
    5. 'time' → logprob: -3.7796828746795654
    6. 'seg' → logprob: -3.7796828746795654
    7. '*C' → logprob: -4.0296831130981445
    8. '   ' → logprob: -4.4046831130981445
    9. 'segments' → logprob: -4.5296831130981445
    10. '=' → logprob: -5.0296831130981445

Token 3437: ':' (ID: 25)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.24479998648166656
    2. 'C' → logprob: -2.869800090789795
    3. ' *' → logprob: -3.369800090789795
    4. '   ' → logprob: -3.744800090789795
    5. 'seg' → logprob: -3.869800090789795
    6. '       ' → logprob: -4.494800090789795
    7. ')' → logprob: -4.619800090789795
    8. '1' → logprob: -5.119800090789795
    9. 'time' → logprob: -5.119800090789795
    10. '+' → logprob: -5.119800090789795

Token 3438: ' temps' (ID: 11160)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6341492533683777
    2. 'segments' → logprob: -1.2591493129730225
    3. 'segment' → logprob: -2.0091493129730225
    4. 'time' → logprob: -4.134149074554443
    5. '   ' → logprob: -5.009149074554443
    6. ' C' → logprob: -5.134149074554443
    7. '       ' → logprob: -5.509149074554443
    8. '*' → logprob: -5.509149074554443
    9. ' segment' → logprob: -5.884149074554443
    10. ' segments' → logprob: -6.134149074554443

Token 3439: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04692479223012924
    2. ' =' → logprob: -3.4219248294830322
    3. '   ' → logprob: -5.296924591064453
    4. 'seg' → logprob: -6.046924591064453
    5. 'time' → logprob: -6.046924591064453
    6. 'segments' → logprob: -7.171924591064453
    7. '=time' → logprob: -7.546924591064453
    8. '+=' → logprob: -7.671924591064453
    9. '```' → logprob: -8.546924591064453
    10. '       ' → logprob: -8.546924591064453

Token 3440: ' segments' (ID: 33749)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.042003072798252106
    2. ' segment' → logprob: -3.9170031547546387
    3. 'C' → logprob: -4.167003154754639
    4. 'segments' → logprob: -5.542003154754639
    5. ' C' → logprob: -7.417003154754639
    6. '   ' → logprob: -7.417003154754639
    7. '(segment' → logprob: -8.54200267791748
    8. ' ' → logprob: -9.04200267791748
    9. '     ' → logprob: -9.91700267791748
    10. 'interval' → logprob: -10.16700267791748

Token 3441: ' compl' (ID: 8432)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6231475472450256
    2. ' *' → logprob: -0.9981475472450256
    3. '       ' → logprob: -3.248147487640381
    4. '*C' → logprob: -3.748147487640381
    5. '   ' → logprob: -5.123147487640381
    6. 'time' → logprob: -5.748147487640381
    7. '_segments' → logprob: -5.748147487640381
    8. '_lengths' → logprob: -5.873147487640381
    9. 'C' → logprob: -6.123147487640381
    10. '*time' → logprob: -6.248147487640381

Token 3442: 'ètes' (ID: 81660)
  Prédit: '*C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*C' → logprob: -1.0574369430541992
    2. 'ète' → logprob: -1.9324369430541992
    3. 'C' → logprob: -2.182436943054199
    4. '_C' → logprob: -2.557436943054199
    5. '=C' → logprob: -2.932436943054199
    6. 'ètes' → logprob: -3.057436943054199
    7. '*' → logprob: -3.307436943054199
    8. '_segments' → logprob: -3.432436943054199
    9. 'étés' → logprob: -3.557436943054199
    10. 'été' → logprob: -3.557436943054199

Token 3443: ' =' (ID: 314)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.06127220764756203
    2. ' C' → logprob: -3.436272144317627
    3. '*' → logprob: -5.061272144317627
    4. '       ' → logprob: -5.436272144317627
    5. 'time' → logprob: -5.686272144317627
    6. '   ' → logprob: -6.061272144317627
    7. 'segment' → logprob: -6.061272144317627
    8. 'segments' → logprob: -6.061272144317627
    9. '*C' → logprob: -6.811272144317627
    10. ' time' → logprob: -7.311272144317627

Token 3444: ' somme' (ID: 64484)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.04517064243555069
    2. 'C' → logprob: -3.170170545578003
    3. 'segments' → logprob: -6.795170783996582
    4. ' segment' → logprob: -7.170170783996582
    5. 'interval' → logprob: -9.420170783996582
    6. '   ' → logprob: -9.795170783996582
    7. '       ' → logprob: -10.420170783996582
    8. ' C' → logprob: -10.545170783996582
    9. 'time' → logprob: -10.920170783996582
    10. '           ' → logprob: -11.045170783996582

Token 3445: ' longueur' (ID: 104613)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.006847269367426634
    2. 'segments' → logprob: -5.631847381591797
    3. ' segment' → logprob: -6.881847381591797
    4. 'C' → logprob: -7.006847381591797
    5. '(segment' → logprob: -7.631847381591797
    6. 'time' → logprob: -8.131847381591797
    7. '   ' → logprob: -8.631847381591797
    8. 'seg' → logprob: -9.506847381591797
    9. '`' → logprob: -9.881847381591797
    10. '_segment' → logprob: -10.131847381591797

Token 3446: ' segments' (ID: 33749)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20769669115543365
    2. 'segment' → logprob: -2.7076966762542725
    3. ' *' → logprob: -3.3326966762542725
    4. '   ' → logprob: -4.207696914672852
    5. '       ' → logprob: -4.457696914672852
    6. '[' → logprob: -4.832696914672852
    7. 'C' → logprob: -4.957696914672852
    8. '`' → logprob: -5.082696914672852
    9. 'seg' → logprob: -5.457696914672852
    10. ' ' → logprob: -5.707696914672852

Token 3447: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8075874447822571
    2. ' *' → logprob: -1.1825873851776123
    3. '       ' → logprob: -2.6825873851776123
    4. 'C' → logprob: -2.8075873851776123
    5. ')' → logprob: -4.307587623596191
    6. '0' → logprob: -4.432587623596191
    7. ' ' → logprob: -4.682587623596191
    8. '`' → logprob: -4.682587623596191
    9. 'time' → logprob: -4.682587623596191
    10. '        ' → logprob: -4.682587623596191

Token 3448: ' C' (ID: 363)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.43369877338409424
    2. 'C' → logprob: -1.0586987733840942
    3. ' segment' → logprob: -5.808698654174805
    4. 'segments' → logprob: -7.058698654174805
    5. ' C' → logprob: -7.683698654174805
    6. '(segment' → logprob: -8.683698654174805
    7. '1' → logprob: -9.058698654174805
    8. '```' → logprob: -9.558698654174805
    9. '`' → logprob: -9.683698654174805
    10. 'interval' → logprob: -9.933698654174805

Token 3449: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2060266733169556
    2. 'C' → logprob: -2.206026554107666
    3. 'segments' → logprob: -2.206026554107666
    4. ')' → logprob: -2.456026554107666
    5. ' *' → logprob: -2.581026554107666
    6. 'seg' → logprob: -2.831026554107666
    7. '       ' → logprob: -3.081026554107666
    8. 'segment' → logprob: -3.581026554107666
    9. 'time' → logprob: -3.706026554107666
    10. '`' → logprob: -4.081026554107666

Token 3450: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02648015320301056
    2. ' *' → logprob: -4.026480197906494
    3. '+' → logprob: -6.151480197906494
    4. '```' → logprob: -6.651480197906494
    5. ')' → logprob: -6.776480197906494
    6. '*time' → logprob: -7.026480197906494
    7. '       ' → logprob: -7.651480197906494
    8. '=' → logprob: -7.776480197906494
    9. '   ' → logprob: -8.151479721069336
    10. ' ' → logprob: -8.401479721069336

Token 3451: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5215436220169067
    2. 'segments' → logprob: -1.8965436220169067
    3. 'segment' → logprob: -1.8965436220169067
    4. ')' → logprob: -2.396543502807617
    5. 'C' → logprob: -2.521543502807617
    6. '1' → logprob: -2.771543502807617
    7. ' *' → logprob: -3.646543502807617
    8. '       ' → logprob: -3.896543502807617
    9. '0' → logprob: -4.021543502807617
    10. '`' → logprob: -4.021543502807617

Token 3452: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.2573177814483643
    2. 'seg' → logprob: -1.6323177814483643
    3. 'C' → logprob: -2.3823177814483643
    4. '       ' → logprob: -2.6323177814483643
    5. 'segment' → logprob: -3.0073177814483643
    6. '*' → logprob: -3.0073177814483643
    7. ' seg' → logprob: -3.1323177814483643
    8. 'time' → logprob: -3.2573177814483643
    9. ')' → logprob: -3.6323177814483643
    10. '   ' → logprob: -4.132317543029785

Token 3453: ' compl' (ID: 8432)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.22628182172775269
    2. ' *' → logprob: -1.7262818813323975
    3. '*C' → logprob: -5.351281642913818
    4. '=' → logprob: -5.601281642913818
    5. '```' → logprob: -5.976281642913818
    6. 'C' → logprob: -6.351281642913818
    7. 'time' → logprob: -6.726281642913818
    8. '`' → logprob: -6.726281642913818
    9. '*time' → logprob: -6.726281642913818
    10. ')' → logprob: -6.851281642913818

Token 3454: 'ètes' (ID: 81660)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.285255789756775
    2. '_len' → logprob: -1.410255789756775
    3. 'lete' → logprob: -2.2852559089660645
    4. 'let' → logprob: -2.4102559089660645
    5. '_segments' → logprob: -2.6602559089660645
    6. '_C' → logprob: -3.0352559089660645
    7. '_lengths' → logprob: -3.1602559089660645
    8. '*' → logprob: -3.6602559089660645
    9. 'C' → logprob: -4.1602559089660645
    10. '*C' → logprob: -4.2852559089660645

Token 3455: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6984390020370483
    2. ' *' → logprob: -0.6984390020370483
    3. '=' → logprob: -6.698439121246338
    4. '*C' → logprob: -6.823439121246338
    5. ' =' → logprob: -7.198439121246338
    6. '*time' → logprob: -7.573439121246338
    7. 'times' → logprob: -8.44843864440918
    8. ')' → logprob: -8.57343864440918
    9. '       ' → logprob: -8.69843864440918
    10. 'segments' → logprob: -9.07343864440918

Token 3456: ' cum' (ID: 10023)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0029999276157468557
    2. ' segment' → logprob: -6.502999782562256
    3. 'C' → logprob: -7.002999782562256
    4. '   ' → logprob: -8.253000259399414
    5. '(segment' → logprob: -9.503000259399414
    6. '           ' → logprob: -10.378000259399414
    7. '       ' → logprob: -10.503000259399414
    8. '0' → logprob: -10.503000259399414
    9. 'segments' → logprob: -10.503000259399414
    10. '`' → logprob: -10.628000259399414

Token 3457: 'u' (ID: 84)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1585981845855713
    2. 'u' → logprob: -1.9085981845855713
    3. 'm' → logprob: -1.9085981845855713
    4. '   ' → logprob: -2.1585981845855713
    5. '*' → logprob: -2.5335981845855713
    6. ' ' → logprob: -3.4085981845855713
    7. '+=' → logprob: -3.7835981845855713
    8. ' +=' → logprob: -4.158597946166992
    9. '       ' → logprob: -4.408597946166992
    10. 'l' → logprob: -4.408597946166992

Token 3458: ' stations' (ID: 26061)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.90203458070755
    2. '       ' → logprob: -1.9020345211029053
    3. 'C' → logprob: -2.6520345211029053
    4. '+' → logprob: -3.1520345211029053
    5. ' *' → logprob: -3.1520345211029053
    6. 'time' → logprob: -3.4020345211029053
    7. '=' → logprob: -3.4020345211029053
    8. '   ' → logprob: -3.7770345211029053
    9. 'seg' → logprob: -3.7770345211029053
    10. '0' → logprob: -3.9020345211029053

Token 3459: ' parcour' (ID: 130642)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.42090556025505066
    2. ' *' → logprob: -1.670905590057373
    3. '       ' → logprob: -3.420905590057373
    4. '0' → logprob: -3.545905590057373
    5. 'C' → logprob: -4.045905590057373
    6. '```' → logprob: -4.545905590057373
    7. '=' → logprob: -4.795905590057373
    8. 'time' → logprob: -4.920905590057373
    9. '   ' → logprob: -5.045905590057373
    10. 'seg' → logprob: -5.045905590057373

Token 3460: 'ues' (ID: 1406)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3887158632278442
    2. 'C' → logprob: -2.1387157440185547
    3. 'segments' → logprob: -2.5137157440185547
    4. 'mented' → logprob: -2.6387157440185547
    5. '_segments' → logprob: -3.0137157440185547
    6. 'd' → logprob: -3.0137157440185547
    7. 's' → logprob: -3.1387157440185547
    8. '*C' → logprob: -3.5137157440185547
    9. '_C' → logprob: -3.7637157440185547
    10. '-' → logprob: -3.8887157440185547

Token 3461: ' en' (ID: 469)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5174531936645508
    2. ' *' → logprob: -1.3924531936645508
    3. '       ' → logprob: -2.392453193664551
    4. 'C' → logprob: -4.142453193664551
    5. '=' → logprob: -4.892453193664551
    6. '*C' → logprob: -4.892453193664551
    7. ')' → logprob: -5.267453193664551
    8. 'time' → logprob: -5.642453193664551
    9. '```' → logprob: -5.642453193664551
    10. 'times' → logprob: -5.892453193664551

Token 3462: ' sem' (ID: 2743)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5530872344970703
    2. 'segments' → logprob: -1.5530872344970703
    3. '```' → logprob: -2.3030872344970703
    4. 'segment' → logprob: -2.9280872344970703
    5. '1' → logprob: -4.30308723449707
    6. 'length' → logprob: -4.92808723449707
    7. ' ' → logprob: -5.30308723449707
    8. '   ' → logprob: -5.42808723449707
    9. '`' → logprob: -5.42808723449707
    10. ')' → logprob: -5.67808723449707

Token 3463: 'iexpress' (ID: 190732)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.15380485355854034
    2. 'C' → logprob: -3.2788047790527344
    3. '*C' → logprob: -3.5288047790527344
    4. '*' → logprob: -3.7788047790527344
    5. 'i' → logprob: -4.028804779052734
    6. '   ' → logprob: -4.903804779052734
    7. '_times' → logprob: -5.028804779052734
    8. 'segments' → logprob: -6.028804779052734
    9. '=C' → logprob: -6.153804779052734
    10. ' C' → logprob: -6.153804779052734

Token 3464: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6049391627311707
    2. ' *' → logprob: -0.9799391627311707
    3. '       ' → logprob: -3.3549392223358154
    4. 'C' → logprob: -4.854938983917236
    5. 'time' → logprob: -4.979938983917236
    6. ')' → logprob: -5.229938983917236
    7. '*C' → logprob: -5.354938983917236
    8. '```' → logprob: -5.604938983917236
    9. 'times' → logprob: -6.479938983917236
    10. '=' → logprob: -6.604938983917236

Token 3465: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04705309122800827
    2. ' *' → logprob: -4.17205286026001
    3. '+' → logprob: -4.54705286026001
    4. ')' → logprob: -4.92205286026001
    5. '=' → logprob: -5.17205286026001
    6. '```' → logprob: -6.92205286026001
    7. '*time' → logprob: -7.67205286026001
    8. ' ' → logprob: -7.79705286026001
    9. '*)' → logprob: -7.79705286026001
    10. '<|end|>' → logprob: -7.79705286026001

Token 3466: ' time' (ID: 1058)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.388924479484558
    2. '+' → logprob: -1.388924479484558
    3. '```' → logprob: -1.888924479484558
    4. ')' → logprob: -2.3889245986938477
    5. '       ' → logprob: -2.8889245986938477
    6. 'time' (adapté à ' time') → logprob: -3.1389245986938477
    7. 'C' → logprob: -3.2639245986938477
    8. ' +' → logprob: -4.013924598693848
    9. ' ' → logprob: -4.513924598693848
    10. ' *' → logprob: -4.638924598693848

Token 3467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19226504862308502
    2. ' =' → logprob: -1.8172650337219238
    3. '+' → logprob: -5.192265033721924
    4. '*' → logprob: -6.442265033721924
    5. ' +=' → logprob: -6.567265033721924
    6. '+=' → logprob: -6.817265033721924
    7. ' +' → logprob: -7.192265033721924
    8. ' *' → logprob: -7.317265033721924
    9. ')' → logprob: -7.567265033721924
    10. '       ' → logprob: -8.317265510559082

Token 3468: ' cum' (ID: 10023)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023257708176970482
    2. 'seg' → logprob: -4.023257732391357
    3. 'cum' → logprob: -5.523257732391357
    4. '(c' → logprob: -7.898257732391357
    5. 'C' → logprob: -7.898257732391357
    6. 'segments' → logprob: -9.3982572555542
    7. '0' → logprob: -9.5232572555542
    8. ' seg' → logprob: -10.0232572555542
    9. '(seg' → logprob: -10.1482572555542
    10. 'segment' → logprob: -10.2732572555542

Token 3469: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -8.375538163818419e-05
    2. '_idx' → logprob: -10.250083923339844
    3. 'i' → logprob: -10.375083923339844
    4. '_seg' → logprob: -11.500083923339844
    5. 'us' → logprob: -14.125083923339844
    6. '*' → logprob: -14.250083923339844
    7. '_segments' → logprob: -14.500083923339844
    8. '\' → logprob: -14.625083923339844
    9. '_len' → logprob: -15.125083923339844
    10. '[' → logprob: -15.250083923339844

Token 3470: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05613294243812561
    2. ' *' → logprob: -2.9311330318450928
    3. '*C' → logprob: -6.806132793426514
    4. '   ' → logprob: -9.181133270263672
    5. ')' → logprob: -11.806133270263672
    6. '       ' → logprob: -11.931133270263672
    7. '```' → logprob: -12.056133270263672
    8. ')*' → logprob: -12.306133270263672
    9. ' ' → logprob: -12.431133270263672
    10. '*time' → logprob: -12.431133270263672

Token 3471: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.7697225252486533e-06
    2. ' C' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.750003814697266
    4. ' ' → logprob: -18.875003814697266
    5. '*C' → logprob: -19.750003814697266
    6. '  ' → logprob: -20.250003814697266
    7. '`' → logprob: -20.250003814697266
    8. '```' → logprob: -20.375003814697266
    9. '	C' → logprob: -21.000003814697266
    10. '=C' → logprob: -21.125003814697266

Token 3472: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3473: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.002475777640938759
    2. ' last' → logprob: -6.002475738525391
    3. '(last' → logprob: -16.62747573852539
    4. '	last' → logprob: -19.00247573852539
    5. '   ' → logprob: -19.62747573852539
    6. 'seg' → logprob: -19.62747573852539
    7. '_last' → logprob: -20.00247573852539
    8. 'Last' → logprob: -20.12747573852539
    9. 'segment' → logprob: -21.25247573852539
    10. '`' → logprob: -21.25247573852539

Token 3474: '_seg' (ID: 78972)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.16028667986392975
    2. '_seg' → logprob: -1.9102866649627686
    3. '_' → logprob: -11.160286903381348
    4. '```' → logprob: -11.535286903381348
    5. 'segment' → logprob: -11.660286903381348
    6. '_segments' → logprob: -11.910286903381348
    7. 'Segment' → logprob: -12.160286903381348
    8. '_token' → logprob: -12.535286903381348
    9. '_local' → logprob: -12.785286903381348
    10. '_part' → logprob: -12.785286903381348

Token 3475: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.1035730391740799
    2. '_length' → logprob: -2.3535730838775635
    3. 'local' → logprob: -6.353572845458984
    4. '_len' → logprob: -6.978572845458984
    5. 'length' → logprob: -8.478572845458984
    6. 'Local' → logprob: -8.728572845458984
    7. '_segment' → logprob: -9.603572845458984
    8. 'len' → logprob: -9.728572845458984
    9. 'ength' → logprob: -9.853572845458984
    10. '_lengths' → logprob: -9.978572845458984

Token 3476: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.048363640904426575
    2. 'ength' → logprob: -3.92336368560791
    3. 'en' → logprob: -5.04836368560791
    4. '_length' → logprob: -5.04836368560791
    5. 'th' → logprob: -5.17336368560791
    6. 'len' → logprob: -6.04836368560791
    7. 'g' → logprob: -6.17336368560791
    8. 'eng' → logprob: -6.29836368560791
    9. 'n' → logprob: -6.54836368560791
    10. 'ng' → logprob: -7.54836368560791

Token 3477: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3478: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20141977071762085
    2. ' A' → logprob: -1.7014198303222656
    3. ''' → logprob: -12.451419830322266
    4. '```' → logprob: -14.201419830322266
    5. ' ' → logprob: -14.701419830322266
    6. ' ' → logprob: -14.826419830322266
    7. '`' → logprob: -15.326419830322266
    8. ')' → logprob: -15.326419830322266
    9. ''A' → logprob: -15.576419830322266
    10. '_A' → logprob: -15.701419830322266

Token 3479: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2747057378292084
    2. '<|end|>' → logprob: -1.6497057676315308
    3. '
' → logprob: -4.02470588684082
    4. ')' → logprob: -4.27470588684082
    5. '```' → logprob: -5.39970588684082
    6. '<|end|>' → logprob: -5.64970588684082
    7. '        
' → logprob: -6.02470588684082
    8. '+' → logprob: -7.14970588684082
    9. '\n' → logprob: -7.52470588684082
    10. '   ' → logprob: -7.52470588684082

Token 3480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024763107649050653
    2. '<|end|>' → logprob: -8.625247955322266
    3. ')' → logprob: -10.250247955322266
    4. '```' → logprob: -11.625247955322266
    5. '        
' → logprob: -11.875247955322266
    6. '           ' → logprob: -12.625247955322266
    7. '
' → logprob: -13.125247955322266
    8. 'return' → logprob: -13.500247955322266
    9. '<|end|>' → logprob: -13.500247955322266
    10. ',' → logprob: -13.625247955322266

Token 3481: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007399422465823591
    2. ')' → logprob: -7.875740051269531
    3. '<|end|>' → logprob: -8.250740051269531
    4. '```' → logprob: -9.750740051269531
    5. '        
' → logprob: -12.375740051269531
    6. '        ' → logprob: -12.500740051269531
    7. '           ' → logprob: -12.625740051269531
    8. '​' → logprob: -12.875740051269531
    9. '#' (adapté à ' #') → logprob: -12.875740051269531
    10. '   ' → logprob: -12.875740051269531

Token 3482: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17246288061141968
    2. '<|end|>' → logprob: -2.4224629402160645
    3. ')' → logprob: -2.7974629402160645
    4. '<|end|>' → logprob: -6.2974629402160645
    5. '```' → logprob: -6.5474629402160645
    6. '=' → logprob: -6.7974629402160645
    7. 'return' → logprob: -7.0474629402160645
    8. '+' → logprob: -7.0474629402160645
    9. '   ' → logprob: -8.047462463378906
    10. ':' → logprob: -8.297462463378906

Token 3483: ' ajoute' (ID: 91611)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3492645025253296
    2. 'return' → logprob: -2.349264621734619
    3. '=' → logprob: -2.474264621734619
    4. '       ' → logprob: -3.849264621734619
    5. 'est' → logprob: -4.224264621734619
    6. '+=' → logprob: -4.224264621734619
    7. '#' → logprob: -4.474264621734619
    8. 'n' → logprob: -4.974264621734619
    9. 'contin' → logprob: -4.974264621734619
    10. ' continue' → logprob: -5.474264621734619

Token 3484: ' aussi' (ID: 9894)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7241461873054504
    2. 'time' → logprob: -1.7241461277008057
    3. 'C' → logprob: -2.5991461277008057
    4. 'if' → logprob: -2.9741461277008057
    5. ' +' → logprob: -2.9741461277008057
    6. 'last' → logprob: -3.8491461277008057
    7. '0' → logprob: -3.9741461277008057
    8. '1' → logprob: -3.9741461277008057
    9. 'segment' → logprob: -4.099146366119385
    10. 'return' → logprob: -4.224146366119385

Token 3485: ' les' (ID: 1341)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.3127307891845703
    2. 'le' → logprob: -1.8127307891845703
    3. '+' → logprob: -1.9377307891845703
    4. 'time' → logprob: -2.1877307891845703
    5. 'segment' → logprob: -2.6877307891845703
    6. 'la' → logprob: -3.5627307891845703
    7. '0' → logprob: -3.8127307891845703
    8. 'last' → logprob: -4.18773078918457
    9. 'B' → logprob: -4.31273078918457
    10. 'max' → logprob: -4.43773078918457

Token 3486: ' segments' (ID: 33749)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6484200358390808
    2. '+' → logprob: -1.6484200954437256
    3. 'time' → logprob: -2.8984200954437256
    4. 'last' → logprob: -3.1484200954437256
    5. 'segment' → logprob: -3.1484200954437256
    6. ' +' → logprob: -3.7734200954437256
    7. 'segments' → logprob: -4.0234198570251465
    8. 'B' → logprob: -4.3984198570251465
    9. 'S' → logprob: -4.8984198570251465
    10. 'station' → logprob: -4.8984198570251465

Token 3487: ' acc' (ID: 1259)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2347724437713623
    2. ' *' → logprob: -1.4847724437713623
    3. '_lengths' → logprob: -1.6097724437713623
    4. 'compl' → logprob: -2.2347724437713623
    5. '       ' → logprob: -3.1097724437713623
    6. '   ' → logprob: -3.3597724437713623
    7. '_length' → logprob: -3.8597724437713623
    8. 'com' → logprob: -4.734772682189941
    9. '```' → logprob: -4.734772682189941
    10. '+' → logprob: -4.734772682189941

Token 3488: 'è' (ID: 957)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0580228567123413
    2. 'umul' → logprob: -1.5580228567123413
    3. 'ess' → logprob: -2.433022975921631
    4. 'um' → logprob: -2.558022975921631
    5. 'e' → logprob: -3.058022975921631
    6. 'omp' → logprob: -3.433022975921631
    7. 'om' → logprob: -3.808022975921631
    8. '*' → logprob: -3.808022975921631
    9. '=' → logprob: -4.308022975921631
    10. 'ru' → logprob: -4.308022975921631

Token 3489: 'd' (ID: 67)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.14178411662578583
    2. 'pt' → logprob: -2.141784191131592
    3. 'd' → logprob: -4.391784191131592
    4. 's' → logprob: -7.141784191131592
    5. 'ptable' → logprob: -7.141784191131592
    6. '**' → logprob: -8.891783714294434
    7. 'p' → logprob: -9.641783714294434
    8. '*' → logprob: -10.016783714294434
    9. 'e' → logprob: -10.141783714294434
    10. '##' → logprob: -10.391783714294434

Token 3490: 'ant' (ID: 493)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.20579832792282104
    2. 's' → logprob: -2.080798387527466
    3. 'sible' → logprob: -2.955798387527466
    4. 'pt' → logprob: -5.330798149108887
    5. 'd' → logprob: -6.080798149108887
    6. '**' → logprob: -8.205798149108887
    7. 'ibles' → logprob: -8.455798149108887
    8. 'ible' → logprob: -8.705798149108887
    9. '*' → logprob: -8.955798149108887
    10. 'ed' → logprob: -9.455798149108887

Token 3491: ' au' (ID: 2791)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.8589856624603271
    2. 's' → logprob: -2.233985662460327
    3. ' aux' → logprob: -2.608985662460327
    4. ' ' → logprob: -3.108985662460327
    5. 'à' → logprob: -3.358985662460327
    6. 'C' → logprob: -3.358985662460327
    7. '   ' → logprob: -3.483985662460327
    8. ' à' → logprob: -3.608985662460327
    9. '=' → logprob: -3.608985662460327
    10. '+' → logprob: -3.733985662460327

Token 3492: ' segment' (ID: 14806)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6459183692932129
    2. 'next' → logprob: -2.395918369293213
    3. 'segment' → logprob: -2.520918369293213
    4. 'segments' → logprob: -3.020918369293213
    5. 'dern' → logprob: -3.145918369293213
    6. 'i' → logprob: -3.395918369293213
    7. 'station' → logprob: -3.895918369293213
    8. 'succ' → logprob: -3.895918369293213
    9. 'pro' → logprob: -4.145918369293213
    10. 'su' → logprob: -4.270918369293213

Token 3493: ':' (ID: 25)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6995823383331299
    2. 'time' → logprob: -1.6995823383331299
    3. '0' → logprob: -2.57458233833313
    4. '*' → logprob: -2.69958233833313
    5. '```' → logprob: -2.69958233833313
    6. '       ' → logprob: -2.94958233833313
    7. '#' → logprob: -2.94958233833313
    8. 'C' → logprob: -3.07458233833313
    9. 's' → logprob: -3.19958233833313
    10. '   ' → logprob: -3.19958233833313

Token 3494: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3466522693634033
    2. 'C' → logprob: -1.7216522693634033
    3. '0' → logprob: -1.8466522693634033
    4. 'time' → logprob: -2.3466522693634033
    5. 'seg' → logprob: -2.5966522693634033
    6. 'segments' → logprob: -2.8466522693634033
    7. '+' → logprob: -3.4716522693634033
    8. 'segment' → logprob: -3.4716522693634033
    9. '   ' → logprob: -3.7216522693634033
    10. 'cum' → logprob: -3.9716522693634033

Token 3495: ''est' (ID: 6616)
  Prédit: 'umu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umu' → logprob: -1.1447886228561401
    2. 'umul' → logprob: -1.6447886228561401
    3. 'um' → logprob: -2.0197887420654297
    4. 'cum' → logprob: -2.7697887420654297
    5. '*C' → logprob: -3.0197887420654297
    6. 'C' → logprob: -3.2697887420654297
    7. '*' → logprob: -3.6447887420654297
    8. 'umsum' → logprob: -3.7697887420654297
    9. 'umulative' → logprob: -4.01978874206543
    10. '+' → logprob: -4.01978874206543

Token 3496: ' cum' (ID: 10023)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7200618982315063
    2. 'segments' → logprob: -1.9700618982315063
    3. 'cum' → logprob: -2.345061779022217
    4. '+' → logprob: -2.720061779022217
    5. 'c' → logprob: -2.845061779022217
    6. '   ' → logprob: -3.595061779022217
    7. '       ' → logprob: -4.095061779022217
    8. 'C' → logprob: -4.595061779022217
    9. '*' → logprob: -4.720061779022217
    10. ' cum' → logprob: -4.720061779022217

Token 3497: 'u' (ID: 84)
  Prédit: 'umu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umu' → logprob: -0.2571375072002411
    2. 'u' → logprob: -2.2571375370025635
    3. 'um' → logprob: -2.3821375370025635
    4. '+' → logprob: -5.132137298583984
    5. '*' → logprob: -5.632137298583984
    6. 'cum' → logprob: -5.757137298583984
    7. 'umul' → logprob: -5.757137298583984
    8. 'C' → logprob: -6.632137298583984
    9. 'sum' → logprob: -6.757137298583984
    10. '   ' → logprob: -6.882137298583984

Token 3498: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3499: 'nombre' (ID: 28576)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1574813276529312
    2. ' *' → logprob: -2.2824814319610596
    3. '*C' → logprob: -3.6574814319610596
    4. 'C' → logprob: -4.9074811935424805
    5. ')' → logprob: -5.2824811935424805
    6. ')*' → logprob: -5.5324811935424805
    7. '0' → logprob: -7.6574811935424805
    8. '```' → logprob: -8.03248119354248
    9. 'segments' → logprob: -9.28248119354248
    10. '*)' → logprob: -9.78248119354248

Token 3500: ' de' (ID: 334)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3559834361076355
    2. '*' → logprob: -1.2309834957122803
    3. ')' → logprob: -6.480983257293701
    4. ' ' → logprob: -6.855983257293701
    5. '=' → logprob: -6.980983257293701
    6. '_segments' → logprob: -6.980983257293701
    7. 'segments' → logprob: -7.105983257293701
    8. 'of' → logprob: -7.855983257293701
    9. '   ' → logprob: -8.10598373413086
    10. ')*' → logprob: -8.60598373413086

Token 3501: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.19499728083610535
    2. 'segments' → logprob: -1.9449973106384277
    3. '```' → logprob: -4.069997310638428
    4. ')' → logprob: -5.319997310638428
    5. 'segment' → logprob: -5.819997310638428
    6. 'st' → logprob: -6.319997310638428
    7. '*' → logprob: -6.569997310638428
    8. 'C' → logprob: -6.694997310638428
    9. 'station' → logprob: -6.819997310638428
    10. ' ' → logprob: -7.194997310638428

Token 3502: ' dans' (ID: 2671)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2936333119869232
    2. ' *' → logprob: -1.4186333417892456
    3. ')' → logprob: -4.668633460998535
    4. ')*' → logprob: -7.293633460998535
    5. '```' → logprob: -7.293633460998535
    6. '+' → logprob: -8.293633460998535
    7. 'segments' → logprob: -8.793633460998535
    8. '   ' → logprob: -8.793633460998535
    9. ' ' → logprob: -8.918633460998535
    10. '*)' → logprob: -9.668633460998535

Token 3503: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.3171524703502655
    2. 'segment' → logprob: -2.067152500152588
    3. 'seg' → logprob: -3.317152500152588
    4. '0' → logprob: -3.442152500152588
    5. 'C' → logprob: -4.192152500152588
    6. ')' → logprob: -4.317152500152588
    7. 'the' → logprob: -4.567152500152588
    8. '```' → logprob: -4.817152500152588
    9. 'each' → logprob: -5.192152500152588
    10. '*' → logprob: -5.567152500152588

Token 3504: ' compl' (ID: 8432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3408401608467102
    2. ' *' → logprob: -2.5908401012420654
    3. '*' → logprob: -2.7158401012420654
    4. ')*' → logprob: -2.8408401012420654
    5. '+' → logprob: -3.4658401012420654
    6. '```' → logprob: -4.0908403396606445
    7. 'compl' → logprob: -4.4658403396606445
    8. '   ' → logprob: -5.5908403396606445
    9. '=' → logprob: -5.9658403396606445
    10. '       ' → logprob: -5.9658403396606445

Token 3505: 'étés' (ID: 54751)
  Prédit: 'ète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ète' → logprob: -0.6173826456069946
    2. 'ètes' → logprob: -1.4923826456069946
    3. 'let' → logprob: -3.242382526397705
    4. '=' → logprob: -3.367382526397705
    5. 'lete' → logprob: -3.742382526397705
    6. '_C' → logprob: -3.992382526397705
    7. 'letes' → logprob: -4.242382526397705
    8. 'ete' → logprob: -4.242382526397705
    9. ')' → logprob: -4.617382526397705
    10. '*' → logprob: -4.867382526397705

Token 3506: ')

' (ID: 1029)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.691077709197998
    2. '*' → logprob: -0.816077709197998
    3. ')' → logprob: -3.191077709197998
    4. ')*' → logprob: -5.066077709197998
    5. '       ' → logprob: -5.566077709197998
    6. '```' → logprob: -6.691077709197998
    7. '   ' → logprob: -6.816077709197998
    8. '*C' → logprob: -7.066077709197998
    9. '=' → logprob: -7.816077709197998
    10. '),' → logprob: -8.566078186035156

Token 3507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13632714748382568
    2. ' *' → logprob: -2.6363272666931152
    3. '*' → logprob: -3.2613272666931152
    4. ')' → logprob: -5.636327266693115
    5. '+' → logprob: -5.636327266693115
    6. ' +' → logprob: -5.636327266693115
    7. '=' → logprob: -6.386327266693115
    8. '   ' → logprob: -6.761327266693115
    9. '```' → logprob: -6.761327266693115
    10. '        ' → logprob: -7.386327266693115

Token 3508: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01243807002902031
    2. '+' → logprob: -4.8874382972717285
    3. ')' → logprob: -6.8874382972717285
    4. '        ' → logprob: -7.2624382972717285
    5. ' +' → logprob: -7.2624382972717285
    6. '<|end|>' → logprob: -7.3874382972717285
    7. '```' → logprob: -7.5124382972717285
    8. '*' → logprob: -7.8874382972717285
    9. '           ' → logprob: -8.76243782043457
    10. ' ' → logprob: -9.13743782043457

Token 3509: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -5.872261317563243e-05
    2. ' time' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.875059127807617
    4. 'int' → logprob: -17.375059127807617
    5. '	time' → logprob: -18.875059127807617
    6. '       ' → logprob: -19.125059127807617
    7. 'float' → logprob: -19.125059127807617
    8. '(time' → logprob: -19.375059127807617
    9. ' ' → logprob: -20.000059127807617
    10. '  ' → logprob: -20.250059127807617

Token 3510: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11757524311542511
    2. '<|end|>' → logprob: -2.492575168609619
    3. '*' → logprob: -4.992575168609619
    4. ')' → logprob: -5.367575168609619
    5. '   ' → logprob: -5.742575168609619
    6. '```' → logprob: -5.992575168609619
    7. '        
' → logprob: -6.242575168609619
    8. '        ' → logprob: -6.367575168609619
    9. '[' → logprob: -6.617575168609619
    10. '+' → logprob: -6.867575168609619

Token 3511: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024610649794340134
    2. '0' → logprob: -4.52461051940918
    3. '*' → logprob: -5.14961051940918
    4. '   ' → logprob: -6.39961051940918
    5. ')' → logprob: -6.64961051940918
    6. 'C' → logprob: -7.39961051940918
    7. ',' → logprob: -7.52461051940918
    8. '        ' → logprob: -7.64961051940918
    9. '=' → logprob: -8.02461051940918
    10. '           ' → logprob: -8.14961051940918

Token 3512: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02844044379889965
    2. '   ' → logprob: -3.903440475463867
    3. ')' → logprob: -5.653440475463867
    4. '           ' → logprob: -7.028440475463867
    5. '    ' → logprob: -7.903440475463867
    6. '0' → logprob: -7.903440475463867
    7. '```' → logprob: -8.028440475463867
    8. '        ' → logprob: -8.153440475463867
    9. ',' → logprob: -8.153440475463867
    10. '        
' → logprob: -8.653440475463867

Token 3513: ' Dans' (ID: 22082)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08850280195474625
    2. '   ' → logprob: -2.588502883911133
    3. '0' → logprob: -5.838502883911133
    4. 'time' → logprob: -6.463502883911133
    5. '           ' → logprob: -6.713502883911133
    6. '    ' → logprob: -7.338502883911133
    7. '```' → logprob: -7.713502883911133
    8. '
' → logprob: -7.838502883911133
    9. '        ' → logprob: -8.088502883911133
    10. ')' → logprob: -8.088502883911133

Token 3514: ' DP' (ID: 51992)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0740744024515152
    2. '   ' → logprob: -3.0740745067596436
    3. 'dp' → logprob: -4.6990742683410645
    4. '[' → logprob: -5.4490742683410645
    5. ' range' → logprob: -6.0740742683410645
    6. '       ' → logprob: -6.6990742683410645
    7. '[i' → logprob: -6.6990742683410645
    8. '
' → logprob: -7.0740742683410645
    9. '#' → logprob: -7.1990742683410645
    10. 'def' → logprob: -7.3240742683410645

Token 3515: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.562755823135376
    2. '   ' → logprob: -1.187755823135376
    3. '[' → logprob: -2.937755823135376
    4. ' =' → logprob: -4.062755584716797
    5. '0' → logprob: -4.562755584716797
    6. '
' → logprob: -4.937755584716797
    7. '       ' → logprob: -5.312755584716797
    8. 'for' → logprob: -5.437755584716797
    9. '=' → logprob: -5.562755584716797
    10. '```' → logprob: -5.812755584716797

Token 3516: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36091774702072144
    2. 'i' → logprob: -1.8609178066253662
    3. 'for' → logprob: -2.360917806625366
    4. ' i' → logprob: -3.735917806625366
    5. ' for' → logprob: -4.360917568206787
    6. 'range' → logprob: -4.860917568206787
    7. '       ' → logprob: -6.235917568206787
    8. ')' → logprob: -6.610917568206787
    9. '[i' → logprob: -6.985917568206787
    10. ' range' → logprob: -7.235917568206787

Token 3517: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6337423324584961
    2. 'j' → logprob: -0.7587423324584961
    3. 'interval' → logprob: -7.383742332458496
    4. 'next' → logprob: -8.508742332458496
    5. ' j' → logprob: -9.758742332458496
    6. ' i' → logprob: -9.883742332458496
    7. '#' → logprob: -10.008742332458496
    8. '```' → logprob: -10.383742332458496
    9. 'l' → logprob: -11.008742332458496
    10. '_j' → logprob: -11.133742332458496

Token 3518: ' interval' (ID: 17116)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00410867715254426
    2. ' i' → logprob: -6.129108905792236
    3. 'interval' → logprob: -6.379108905792236
    4. '   ' → logprob: -9.004108428955078
    5. 'j' → logprob: -10.254108428955078
    6. ' interval' → logprob: -11.504108428955078
    7. 'inter' → logprob: -11.629108428955078
    8. '
' → logprob: -11.754108428955078
    9. '```' → logprob: -11.754108428955078
    10. 'segment' → logprob: -12.004108428955078

Token 3519: 'le' (ID: 282)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08543066680431366
    2. '   ' → logprob: -3.08543062210083
    3. '[' → logprob: -4.33543062210083
    4. 'i' → logprob: -4.71043062210083
    5. ' i' → logprob: -5.58543062210083
    6. '][' → logprob: -6.33543062210083
    7. ' [' → logprob: -6.58543062210083
    8. '	' → logprob: -6.96043062210083
    9. ',' → logprob: -7.21043062210083
    10. '	i' → logprob: -7.21043062210083

Token 3520: ' on' (ID: 402)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.18677248060703278
    2. 'i' → logprob: -2.436772584915161
    3. '   ' → logprob: -3.186772584915161
    4. '
' → logprob: -4.561772346496582
    5. '[' → logprob: -4.936772346496582
    6. ',' → logprob: -5.061772346496582
    7. ' i' → logprob: -5.686772346496582
    8. '`' → logprob: -6.311772346496582
    9. '_i' → logprob: -6.311772346496582
    10. ' =' → logprob: -7.061772346496582

Token 3521: ' essa' (ID: 19417)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27302873134613037
    2. 'continue' → logprob: -2.52302885055542
    3. '[i' → logprob: -3.52302885055542
    4. '   ' → logprob: -3.64802885055542
    5. 'i' → logprob: -3.77302885055542
    6. 'contin' → logprob: -3.89802885055542
    7. 'range' → logprob: -4.14802885055542
    8. ' for' → logprob: -4.64802885055542
    9. 'avance' → logprob: -5.39802885055542
    10. 'pour' → logprob: -5.64802885055542

Token 3522: 'ie' (ID: 396)
  Prédit: 'aye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aye' → logprob: -0.23702572286128998
    2. 'y' → logprob: -1.8620257377624512
    3. 'ye' → logprob: -2.987025737762451
    4. 'ie' → logprob: -5.487025737762451
    5. 'yer' → logprob: -7.987025737762451
    6. 'eye' → logprob: -8.112025260925293
    7. 'iye' → logprob: -9.487025260925293
    8. 'yez' → logprob: -9.862025260925293
    9. 'yage' → logprob: -10.362025260925293
    10. 'ayer' → logprob: -10.737025260925293

Token 3523: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5488144159317017
    2. 'x' → logprob: -1.4238144159317017
    3. '   ' → logprob: -2.798814296722412
    4. 'j' → logprob: -4.173814296722412
    5. ' x' → logprob: -4.423814296722412
    6. '           ' → logprob: -4.548814296722412
    7. '```' → logprob: -4.673814296722412
    8. 'range' → logprob: -4.673814296722412
    9. 'de' → logprob: -4.798814296722412
    10. ' de' → logprob: -5.298814296722412

Token 3524: ' répart' (ID: 147636)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6850688457489014
    2. 'x' → logprob: -0.8100688457489014
    3. ' range' → logprob: -3.4350688457489014
    4. ' x' → logprob: -4.9350690841674805
    5. 'j' → logprob: -5.3100690841674805
    6. 'for' → logprob: -5.6850690841674805
    7. ' j' → logprob: -7.4350690841674805
    8. '0' → logprob: -7.6850690841674805
    9. ' for' → logprob: -8.31006908416748
    10. '1' → logprob: -8.31006908416748

Token 3525: 'ir' (ID: 380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8033907413482666
    2. 'iter' → logprob: -1.1783907413482666
    3. '       ' → logprob: -2.5533907413482666
    4. 'er' → logprob: -2.6783907413482666
    5. 'ter' → logprob: -4.1783905029296875
    6. 'érer' → logprob: -4.4283905029296875
    7. 're' → logprob: -4.5533905029296875
    8. 'ré' → logprob: -4.8033905029296875
    9. 'éter' → logprob: -5.4283905029296875
    10. '               ' → logprob: -5.5533905029296875

Token 3526: ' arr' (ID: 1724)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8340495228767395
    2. '   ' → logprob: -1.7090494632720947
    3. ' x' → logprob: -2.7090494632720947
    4. '1' → logprob: -3.0840494632720947
    5. '0' → logprob: -3.3340494632720947
    6. 'i' → logprob: -3.4590494632720947
    7. ' ' → logprob: -3.7090494632720947
    8. 'j' → logprob: -4.084049701690674
    9. ' i' → logprob: -4.084049701690674
    10. '[i' → logprob: -4.084049701690674

Token 3527: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.0008471485925838351
    2. '[i' → logprob: -7.875847339630127
    3. 'êt' → logprob: -8.125846862792969
    4. '[' → logprob: -10.125846862792969
    5. 'ts' → logprob: -10.625846862792969
    6. 'ê' → logprob: -11.375846862792969
    7. '       ' → logprob: -11.500846862792969
    8. '   ' → logprob: -11.625846862792969
    9. '_' → logprob: -11.875846862792969
    10. 'rets' → logprob: -12.125846862792969

Token 3528: ' sem' (ID: 2743)
  Prédit: ' sem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sem' → logprob: -0.3886345326900482
    2. 'sem' → logprob: -1.5136345624923706
    3. '[i' → logprob: -3.013634443283081
    4. '   ' → logprob: -4.13863468170166
    5. '_sem' → logprob: -4.13863468170166
    6. '_se' → logprob: -5.76363468170166
    7. 'se' → logprob: -6.26363468170166
    8. 's' → logprob: -6.38863468170166
    9. '[' → logprob: -6.63863468170166
    10. 'i' → logprob: -6.63863468170166

Token 3529: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.0853746235370636
    2. 'express' → logprob: -2.835374593734741
    3. '[i' → logprob: -4.83537483215332
    4. '(express' → logprob: -5.83537483215332
    5. ' expresses' → logprob: -7.14787483215332
    6. 'esseurs' → logprob: -7.46037483215332
    7. 'ormais' → logprob: -7.46037483215332
    8. 'i' → logprob: -7.52287483215332
    9. '_i' → logprob: -7.71037483215332
    10. ' express' → logprob: -7.77287483215332

Token 3530: ' supplémentaires' (ID: 99346)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2710369825363159
    2. '   ' → logprob: -1.896036982536316
    3. ' =' → logprob: -4.1460371017456055
    4. '[' → logprob: -4.3960371017456055
    5. '
' → logprob: -4.8960371017456055
    6. ',' → logprob: -5.0210371017456055
    7. ' *' → logprob: -5.5210371017456055
    8. '       ' → logprob: -5.6460371017456055
    9. ' +' → logprob: -5.7710371017456055
    10. '[x' → logprob: -5.7710371017456055

Token 3531: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49301236867904663
    2. '[i' → logprob: -2.2430124282836914
    3. ' =' → logprob: -2.3680124282836914
    4. 'for' → logprob: -2.7430124282836914
    5. '+' → logprob: -4.118012428283691
    6. '
' → logprob: -4.118012428283691
    7. '=' → logprob: -4.243012428283691
    8. ' +' → logprob: -4.243012428283691
    9. ' for' → logprob: -4.493012428283691
    10. '[' → logprob: -4.993012428283691

Token 3532: '   ' (ID: 271)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.17270953953266144
    2. '   ' → logprob: -2.5477094650268555
    3. '[' → logprob: -3.4227094650268555
    4. ',' → logprob: -4.2977094650268555
    5. ':' → logprob: -4.5477094650268555
    6. ' =' → logprob: -4.7977094650268555
    7. '[
' → logprob: -5.6727094650268555
    8. '```' → logprob: -6.2977094650268555
    9. '_i' → logprob: -6.4227094650268555
    10. '[j' → logprob: -6.6727094650268555

Token 3533: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31037235260009766
    2. 'for' → logprob: -2.3103723526000977
    3. '[i' → logprob: -2.8103723526000977
    4. '[' → logprob: -3.4353723526000977
    5. ':' → logprob: -3.5603723526000977
    6. ' for' → logprob: -4.560372352600098
    7. '[
' → logprob: -4.935372352600098
    8. ' =' → logprob: -5.310372352600098
    9. '=' → logprob: -5.685372352600098
    10. '       ' → logprob: -5.935372352600098

Token 3534: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5749402642250061
    2. '1' → logprob: -2.0749402046203613
    3. '       ' → logprob: -2.1999402046203613
    4. '0' → logprob: -2.1999402046203613
    5. '           ' → logprob: -4.324940204620361
    6. ' ' → logprob: -5.074940204620361
    7. '    ' → logprob: -5.199940204620361
    8. '+' → logprob: -5.324940204620361
    9. ' i' → logprob: -5.324940204620361
    10. '=' → logprob: -5.449940204620361

Token 3535: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1674535572528839
    2. '=' → logprob: -2.0424535274505615
    3. ' in' → logprob: -4.792453765869141
    4. '   ' → logprob: -5.167453765869141
    5. 'in' → logprob: -5.667453765869141
    6. 'range' → logprob: -7.292453765869141
    7. '
' → logprob: -7.292453765869141
    8. ')' → logprob: -7.417453765869141
    9. 'from' → logprob: -7.417453765869141
    10. ',' → logprob: -7.417453765869141

Token 3536: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4686565697193146
    2. '=' → logprob: -1.0936565399169922
    3. ' in' → logprob: -4.093656539916992
    4. 'range' → logprob: -5.468656539916992
    5. '>=' → logprob: -5.968656539916992
    6. 'in' → logprob: -6.468656539916992
    7. '   ' → logprob: -6.593656539916992
    8. 'from' → logprob: -6.593656539916992
    9. ' ranges' → logprob: -6.593656539916992
    10. ' range' → logprob: -6.718656539916992

Token 3537: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.383526149671525e-05
    2. '[' → logprob: -10.875053405761719
    3. ' range' → logprob: -11.000053405761719
    4. '1' → logprob: -11.250053405761719
    5. '   ' → logprob: -12.750053405761719
    6. 'interval' → logprob: -14.125053405761719
    7. '(range' → logprob: -14.375053405761719
    8. '(' → logprob: -15.750053405761719
    9. '2' → logprob: -16.37505340576172
    10. '{' → logprob: -16.50005340576172

Token 3538: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10117341578006744
    2. '1' → logprob: -2.3511734008789062
    3. '   ' → logprob: -7.101173400878906
    4. ' ' → logprob: -9.726173400878906
    5. 'max' → logprob: -10.226173400878906
    6. '
' → logprob: -10.851173400878906
    7. '```' → logprob: -12.351173400878906
    8. '       ' → logprob: -12.476173400878906
    9. '  ' → logprob: -12.476173400878906
    10. '    ' → logprob: -12.976173400878906

Token 3539: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004764161072671413
    2. ' ,' → logprob: -5.379764080047607
    3. ',K' → logprob: -9.629764556884766
    4. ',len' → logprob: -10.629764556884766
    5. '   ' → logprob: -11.004764556884766
    6. ',x' → logprob: -11.254764556884766
    7. ' ' → logprob: -12.379764556884766
    8. '2' → logprob: -12.504764556884766
    9. '][' → logprob: -12.629764556884766
    10. ',
' → logprob: -12.879764556884766

Token 3540: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.06247589737176895
    2. '(interval' → logprob: -2.9374759197235107
    3. 'S' → logprob: -5.812475681304932
    4. 'K' → logprob: -6.312475681304932
    5. '(S' → logprob: -6.937475681304932
    6. 'd' → logprob: -7.812475681304932
    7. 'segments' → logprob: -8.43747615814209
    8. 'len' → logprob: -8.56247615814209
    9. '(K' → logprob: -8.93747615814209
    10. ' intervals' → logprob: -8.93747615814209

Token 3541: '_length' (ID: 11514)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7147915959358215
    2. 's' → logprob: -1.9647915363311768
    3. '_length' → logprob: -2.0897915363311768
    4. 'vals' → logprob: -2.4647915363311768
    5. '[i' → logprob: -3.2147915363311768
    6. ']' → logprob: -3.7147915363311768
    7. 'v' → logprob: -4.214791774749756
    8. 'al' → logprob: -4.464791774749756
    9. '][' → logprob: -4.714791774749756
    10. '   ' → logprob: -4.839791774749756

Token 3542: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1273527443408966
    2. '[i' → logprob: -3.002352714538574
    3. ' +' → logprob: -3.127352714538574
    4. ']+' → logprob: -4.002352714538574
    5. ']' → logprob: -5.627352714538574
    6. '+i' → logprob: -6.752352714538574
    7. '_i' → logprob: -7.252352714538574
    8. 'i' → logprob: -7.627352714538574
    9. ')+' → logprob: -7.752352714538574
    10. '   ' → logprob: -8.127352714538574

Token 3543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014478032244369388
    2. ' ' → logprob: -9.875144958496094
    3. '0' → logprob: -10.625144958496094
    4. '
' → logprob: -10.875144958496094
    5. '   ' → logprob: -11.250144958496094
    6. '+' → logprob: -11.875144958496094
    7. '2' → logprob: -12.000144958496094
    8. ']' → logprob: -12.125144958496094
    9. ')' → logprob: -12.250144958496094
    10. '(' → logprob: -12.750144958496094

Token 3544: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2686255872249603
    2. ']:
' → logprob: -1.6436256170272827
    3. ']
' → logprob: -3.768625497817993
    4. ']:' → logprob: -4.268625736236572
    5. '   ' → logprob: -6.643625736236572
    6. '+' → logprob: -6.643625736236572
    7. ']:

' → logprob: -8.018625259399414
    8. ' ]' → logprob: -8.018625259399414
    9. '2' → logprob: -8.518625259399414
    10. '```' → logprob: -8.518625259399414

Token 3545: ' mais' (ID: 2899)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6825292110443115
    2. '2' → logprob: -1.6825292110443115
    3. '   ' → logprob: -1.8075292110443115
    4. 'x' → logprob: -2.3075292110443115
    5. '       ' → logprob: -2.9325292110443115
    6. ' i' → logprob: -3.0575292110443115
    7. ' for' → logprob: -3.3075292110443115
    8. 'i' → logprob: -3.4325292110443115
    9. ' ' → logprob: -3.5575292110443115
    10. ':' → logprob: -3.9325292110443115

Token 3546: ' attention' (ID: 8684)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7906637787818909
    2. 'x' → logprob: -0.9156637787818909
    3. '```' → logprob: -2.915663719177246
    4. ' ' → logprob: -4.415663719177246
    5. 'for' → logprob: -4.540663719177246
    6. ' x' → logprob: -4.790663719177246
    7. 'limit' → logprob: -4.915663719177246
    8. '...' → logprob: -5.415663719177246
    9. 'K' → logprob: -5.665663719177246
    10. 'max' → logprob: -5.915663719177246

Token 3547: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9162490963935852
    2. '=' → logprob: -1.4162490367889404
    3. '   ' → logprob: -2.1662490367889404
    4. '+' → logprob: -2.7912490367889404
    5. '2' → logprob: -3.5412490367889404
    6. '```' → logprob: -3.6662490367889404
    7. '       ' → logprob: -3.7912490367889404
    8. 'max' → logprob: -4.2912492752075195
    9. ' +' → logprob: -4.7912492752075195
    10. ',' → logprob: -4.9162492752075195

Token 3548: ' x' (ID: 1215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.058107614517212
    2. 'x' → logprob: -1.058107614517212
    3. '   ' → logprob: -2.308107614517212
    4. 'min' → logprob: -2.558107614517212
    5. 'interval' → logprob: -3.433107614517212
    6. 'max' → logprob: -3.558107614517212
    7. 'segment' → logprob: -3.933107614517212
    8. '       ' → logprob: -4.433107376098633
    9. 'segments' → logprob: -5.058107376098633
    10. '1' → logprob: -5.558107376098633

Token 3549: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0022379241418093443
    2. '[i' → logprob: -6.877237796783447
    3. ' =' → logprob: -7.502237796783447
    4. '=' → logprob: -8.002238273620605
    5. '   ' → logprob: -9.752238273620605
    6. ')' → logprob: -10.377238273620605
    7. 'i' → logprob: -10.502238273620605
    8. '
' → logprob: -10.627238273620605
    9. '[' → logprob: -10.627238273620605
    10. 's' → logprob: -11.002238273620605

Token 3550: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3466964662075043
    2. '<=' → logprob: -1.9716964960098267
    3. '=' → logprob: -3.221696376800537
    4. ' =' → logprob: -3.221696376800537
    5. '[i' → logprob: -3.971696376800537
    6. ' in' → logprob: -4.221696376800537
    7. ' ≤' → logprob: -4.471696376800537
    8. '   ' → logprob: -5.346696376800537
    9. '[' → logprob: -5.471696376800537
    10. 'in' → logprob: -5.721696376800537

Token 3551: ' stations' (ID: 26061)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.004147018771618605
    2. '(interval' → logprob: -6.379147052764893
    3. 'S' → logprob: -7.129147052764893
    4. ' intervals' → logprob: -7.504147052764893
    5. 'K' → logprob: -8.129146575927734
    6. 'd' → logprob: -8.504146575927734
    7. 'N' → logprob: -8.629146575927734
    8. 'segments' → logprob: -9.379146575927734
    9. 'len' → logprob: -9.504146575927734
    10. 'min' → logprob: -10.129146575927734

Token 3552: ' dans' (ID: 2671)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2447450160980225
    2. '   ' → logprob: -1.7447450160980225
    3. ' +' → logprob: -2.3697450160980225
    4. '       ' → logprob: -2.7447450160980225
    5. '[i' → logprob: -2.9947450160980225
    6. '
' → logprob: -3.3697450160980225
    7. ')' → logprob: -3.3697450160980225
    8. ' *' → logprob: -3.6197450160980225
    9. ' =' → logprob: -3.8697450160980225
    10. '_i' → logprob: -4.119745254516602

Token 3553: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6980058550834656
    2. 'interval' → logprob: -0.6980058550834656
    3. 'segment' → logprob: -5.823005676269531
    4. 'range' → logprob: -8.198005676269531
    5. '#' → logprob: -8.573005676269531
    6. 'cet' → logprob: -8.948005676269531
    7. 'S' → logprob: -9.073005676269531
    8. 'la' → logprob: -9.073005676269531
    9. '```' → logprob: -9.073005676269531
    10. '   ' → logprob: -9.198005676269531

Token 3554: '’' (ID: 438)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.03171341121196747
    2. ''' → logprob: -3.5317134857177734
    3. '_interval' → logprob: -7.906713485717773
    4. '']' → logprob: -8.281713485717773
    5. 'i' → logprob: -8.656713485717773
    6. 'inter' → logprob: -9.031713485717773
    7. ']' → logprob: -9.156713485717773
    8. ')' → logprob: -9.281713485717773
    9. ''inter' → logprob: -9.406713485717773
    10. '
' → logprob: -9.406713485717773

Token 3555: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0022372088860720396
    2. ''' → logprob: -7.252237319946289
    3. 'segment' → logprob: -8.002237319946289
    4. 'i' → logprob: -8.377237319946289
    5. '_interval' → logprob: -8.877237319946289
    6. ']' → logprob: -9.002237319946289
    7. 'inter' → logprob: -9.127237319946289
    8. ')' → logprob: -9.502237319946289
    9. '   ' → logprob: -9.752237319946289
    10. '
' → logprob: -9.877237319946289

Token 3556: 'le' (ID: 282)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6524623036384583
    2. '[i' → logprob: -1.7774622440338135
    3. ' +' → logprob: -1.9024622440338135
    4. '   ' → logprob: -2.5274622440338135
    5. ' -' → logprob: -4.652462482452393
    6. '(i' → logprob: -4.902462482452393
    7. 'i' → logprob: -5.027462482452393
    8. '
' → logprob: -5.027462482452393
    9. '[' → logprob: -5.152462482452393
    10. '_i' → logprob: -5.402462482452393

Token 3557: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7353954315185547
    2. '       ' → logprob: -1.7353954315185547
    3. '   ' → logprob: -1.8603954315185547
    4. ' +' → logprob: -1.9853954315185547
    5. ' =' → logprob: -2.1103954315185547
    6. '=' → logprob: -2.2353954315185547
    7. '0' → logprob: -3.6103954315185547
    8. '2' → logprob: -4.360395431518555
    9. ' ' → logprob: -4.360395431518555
    10. '           ' → logprob: -5.110395431518555

Token 3558: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026290426030755043
    2. '0' → logprob: -6.002629280090332
    3. ' ' → logprob: -10.002629280090332
    4. '2' → logprob: -10.502629280090332
    5. '+' → logprob: -10.627629280090332
    6. '```' → logprob: -11.002629280090332
    7. '#' → logprob: -11.252629280090332
    8. '   ' → logprob: -11.627629280090332
    9. '
' → logprob: -12.127629280090332
    10. ')' → logprob: -13.502629280090332

Token 3559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012122603366151452
    2. '0' → logprob: -6.751212120056152
    3. ' ' → logprob: -11.251212120056152
    4. '```' → logprob: -11.376212120056152
    5. '+' → logprob: -12.376212120056152
    6. '   ' → logprob: -12.876212120056152
    7. '2' → logprob: -12.876212120056152
    8. '
' → logprob: -12.876212120056152
    9. '#' → logprob: -13.376212120056152
    10. '``' → logprob: -14.376212120056152

Token 3560: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2684333324432373
    2. '   ' → logprob: -1.7684333324432373
    3. '+' → logprob: -1.8934333324432373
    4. '2' → logprob: -2.6434333324432373
    5. 'for' → logprob: -2.7684333324432373
    6. '
' → logprob: -2.7684333324432373
    7. ' +' → logprob: -3.1434333324432373
    8. 'min' → logprob: -3.6434333324432373
    9. 'max' → logprob: -3.8934333324432373
    10. '=' → logprob: -4.018433570861816

Token 3561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5229032635688782
    2. '    ' → logprob: -1.5229032039642334
    3. '       ' → logprob: -2.0229032039642334
    4. '```' → logprob: -4.1479034423828125
    5. ')' → logprob: -5.3979034423828125
    6. '(i' → logprob: -5.5229034423828125
    7. ' ' → logprob: -6.0229034423828125
    8. '           ' → logprob: -6.0229034423828125
    9. '(' → logprob: -6.0229034423828125
    10. ':' → logprob: -6.1479034423828125

Token 3562: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4088306427001953
    2. '   ' → logprob: -1.6588306427001953
    3. '2' → logprob: -2.4088306427001953
    4. '           ' → logprob: -3.7838306427001953
    5. '1' → logprob: -5.408830642700195
    6. '               ' → logprob: -5.658830642700195
    7. '                   ' → logprob: -6.158830642700195
    8. '```' → logprob: -6.158830642700195
    9. 'for' → logprob: -6.408830642700195
    10. '    ' → logprob: -6.658830642700195

Token 3563: ' Or' (ID: 2604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06952673941850662
    2. '   ' → logprob: -3.1945266723632812
    3. '2' → logprob: -4.819526672363281
    4. '0' → logprob: -4.944526672363281
    5. '           ' → logprob: -5.694526672363281
    6. '1' → logprob: -6.819526672363281
    7. '=' → logprob: -7.444526672363281
    8. ' =' → logprob: -7.694526672363281
    9. 'for' → logprob: -7.694526672363281
    10. 's' → logprob: -7.819526672363281

Token 3564: ' arr' (ID: 1724)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1937100887298584
    2. '2' → logprob: -1.8187100887298584
    3. '   ' → logprob: -1.9437100887298584
    4. 'interval' → logprob: -2.3187100887298584
    5. 'i' → logprob: -2.5687100887298584
    6. 'K' → logprob: -3.0687100887298584
    7. 'len' → logprob: -3.0687100887298584
    8. '0' → logprob: -4.1937103271484375
    9. 'max' → logprob: -4.8187103271484375
    10. 'segments' → logprob: -4.8187103271484375

Token 3565: 'êts' (ID: 56582)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4230411052703857
    2. 'ivals' → logprob: -2.1730411052703857
    3. '_i' → logprob: -2.4230411052703857
    4. '[' → logprob: -2.5480411052703857
    5. 'ival' → logprob: -2.9230411052703857
    6. '_length' → logprob: -3.1730411052703857
    7. '   ' → logprob: -3.1730411052703857
    8. '       ' → logprob: -3.1730411052703857
    9. 'r' → logprob: -3.2980411052703857
    10. ']' → logprob: -3.2980411052703857

Token 3566: ' sem' (ID: 2743)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.8174268007278442
    2. 'sem' → logprob: -1.5674268007278442
    3. '_sem' → logprob: -2.0674266815185547
    4. 's' → logprob: -3.0674266815185547
    5. ' sem' → logprob: -3.1924266815185547
    6. 'i' → logprob: -3.8174266815185547
    7. '_in' → logprob: -3.9424266815185547
    8. '   ' → logprob: -4.067426681518555
    9. '[i' → logprob: -4.442426681518555
    10. '_se' → logprob: -4.567426681518555

Token 3567: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.0311261098831892
    2. 'express' → logprob: -3.656126022338867
    3. '_i' → logprob: -5.906126022338867
    4. '[i' → logprob: -8.406126022338867
    5. '(express' → logprob: -8.531126022338867
    6. 'i' → logprob: -8.531126022338867
    7. 'Express' → logprob: -9.031126022338867
    8. ' express' → logprob: -9.281126022338867
    9. 'iex' → logprob: -9.406126022338867
    10. '_{' → logprob: -9.531126022338867

Token 3568: ' maximum' (ID: 10562)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9539477825164795
    2. '_i' → logprob: -1.2039477825164795
    3. '_in' → logprob: -2.4539477825164795
    4. ' =' → logprob: -3.0789477825164795
    5. '_max' → logprob: -3.3289477825164795
    6. '```' → logprob: -3.7039477825164795
    7. '   ' → logprob: -3.9539477825164795
    8. '[' → logprob: -4.453948020935059
    9. ')' → logprob: -4.578948020935059
    10. 's' → logprob: -4.578948020935059

Token 3569: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8878922462463379
    2. ' *' → logprob: -1.637892246246338
    3. '=' → logprob: -1.762892246246338
    4. '   ' → logprob: -2.512892246246338
    5. '*' → logprob: -3.262892246246338
    6. '[i' → logprob: -3.762892246246338
    7. '       ' → logprob: -4.262892246246338
    8. ' ' → logprob: -4.637892246246338
    9. '0' → logprob: -5.512892246246338
    10. ')' → logprob: -5.512892246246338

Token 3570: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.025327695533633232
    2. 'segment' → logprob: -3.900327682495117
    3. 'i' → logprob: -6.525327682495117
    4. 'inter' → logprob: -6.775327682495117
    5. '#' → logprob: -7.025327682495117
    6. '   ' → logprob: -8.275327682495117
    7. 'int' → logprob: -8.775327682495117
    8. '
' → logprob: -8.775327682495117
    9. 'x' → logprob: -9.025327682495117
    10. ' interval' → logprob: -9.400327682495117

Token 3571: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.20378980040550232
    2. 'val' → logprob: -1.9537898302078247
    3. '   ' → logprob: -4.203789710998535
    4. 'e' → logprob: -5.203789710998535
    5. '       ' → logprob: -5.453789710998535
    6. 'v' → logprob: -5.828789710998535
    7. 'vel' → logprob: -6.453789710998535
    8. '[' → logprob: -6.453789710998535
    9. ']' → logprob: -6.828789710998535
    10. 'ale' → logprob: -6.828789710998535

Token 3572: ' ≤' (ID: 72554)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7048273086547852
    2. '+' → logprob: -2.204827308654785
    3. '=' → logprob: -2.454827308654785
    4. ' +' → logprob: -2.579827308654785
    5. '   ' → logprob: -2.704827308654785
    6. '[i' → logprob: -3.329827308654785
    7. 'max' → logprob: -4.579827308654785
    8. ')' → logprob: -4.704827308654785
    9. '       ' → logprob: -4.704827308654785
    10. '
' → logprob: -4.704827308654785

Token 3573: ' stations' (ID: 26061)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.011377539485692978
    2. '(interval' → logprob: -4.886377334594727
    3. 'S' → logprob: -6.136377334594727
    4. '(S' → logprob: -7.761377334594727
    5. 'segments' → logprob: -8.386377334594727
    6. ' intervals' → logprob: -8.636377334594727
    7. '   ' → logprob: -8.636377334594727
    8. 'd' → logprob: -8.761377334594727
    9. 'segment' → logprob: -9.011377334594727
    10. '(' → logprob: -9.386377334594727

Token 3574: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7398852109909058
    2. '[i' → logprob: -1.7398852109909058
    3. '```' → logprob: -2.1148853302001953
    4. '       ' → logprob: -2.4898853302001953
    5. ' =' → logprob: -2.9898853302001953
    6. '=' → logprob: -3.1148853302001953
    7. '+' → logprob: -3.2398853302001953
    8. ' *' → logprob: -3.4898853302001953
    9. '
' → logprob: -3.6148853302001953
    10. '*' → logprob: -3.8648853302001953

Token 3575: ' cet' (ID: 19505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0021918986458331347
    2. 'interval' → logprob: -6.50219202041626
    3. 'S' → logprob: -8.252191543579102
    4. ' l' → logprob: -8.877191543579102
    5. '   ' → logprob: -10.002191543579102
    6. 'the' → logprob: -10.002191543579102
    7. '#' → logprob: -10.627191543579102
    8. 'range' → logprob: -11.002191543579102
    9. '```' → logprob: -11.002191543579102
    10. ' ' → logprob: -11.127191543579102

Token 3576: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9798879623413086
    2. '_interval' → logprob: -1.7298879623413086
    3. 'ter' → logprob: -2.6048879623413086
    4. '_' → logprob: -2.7298879623413086
    5. '_inter' → logprob: -3.1048879623413086
    6. 'erval' → logprob: -3.3548879623413086
    7. '```' → logprob: -3.4798879623413086
    8. ''' → logprob: -3.4798879623413086
    9. ']' → logprob: -3.7298879623413086
    10. 'é' → logprob: -4.104887962341309

Token 3577: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9989696145057678
    2. '   ' → logprob: -1.248969554901123
    3. '       ' → logprob: -1.998969554901123
    4. '           ' → logprob: -2.998969554901123
    5. 'erval' → logprob: -3.998969554901123
    6. '               ' → logprob: -4.373969554901123
    7. ']' → logprob: -4.498969554901123
    8. '```' → logprob: -4.873969554901123
    9. '#' → logprob: -4.998969554901123
    10. '
' → logprob: -5.123969554901123

Token 3578: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1598577499389648
    2. '   ' → logprob: -1.5348577499389648
    3. '       ' → logprob: -2.034857749938965
    4. '```' → logprob: -2.284857749938965
    5. '+' → logprob: -2.784857749938965
    6. '[' → logprob: -3.784857749938965
    7. '=' → logprob: -4.034857749938965
    8. ' =' → logprob: -4.159857749938965
    9. '[
' → logprob: -4.159857749938965
    10. ':' → logprob: -4.534857749938965

Token 3579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010972379241138697
    2. '0' → logprob: -6.876097202301025
    3. '+' → logprob: -10.501097679138184
    4. '   ' → logprob: -11.126097679138184
    5. '2' → logprob: -11.626097679138184
    6. ' ' → logprob: -12.251097679138184
    7. '```' → logprob: -12.626097679138184
    8. '#' → logprob: -13.126097679138184
    9. '
' → logprob: -13.501097679138184
    10. '``' → logprob: -15.001097679138184

Token 3580: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8871262669563293
    2. '       ' → logprob: -1.6371262073516846
    3. ' =' → logprob: -2.6371262073516846
    4. '+' → logprob: -2.8871262073516846
    5. '=' → logprob: -2.8871262073516846
    6. '2' → logprob: -3.5121262073516846
    7. '0' → logprob: -3.5121262073516846
    8. ' +' → logprob: -3.6371262073516846
    9. 'max' → logprob: -4.012126445770264
    10. '
' → logprob: -4.262126445770264

Token 3581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8531548380851746
    2. '       ' → logprob: -0.9781548380851746
    3. '
' → logprob: -2.7281548976898193
    4. '+' → logprob: -3.3531548976898193
    5. ' +' → logprob: -3.8531548976898193
    6. '2' → logprob: -4.10315465927124
    7. '1' → logprob: -4.10315465927124
    8. 'for' → logprob: -4.97815465927124
    9. '```' → logprob: -5.10315465927124
    10. 'max' → logprob: -5.72815465927124

Token 3582: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14351385831832886
    2. '       ' → logprob: -2.2685139179229736
    3. '2' → logprob: -4.6435136795043945
    4. '1' → logprob: -5.3935136795043945
    5. '           ' → logprob: -5.5185136795043945
    6. 'for' → logprob: -5.7685136795043945
    7. ' for' → logprob: -6.5185136795043945
    8. '+' → logprob: -7.1435136795043945
    9. 'def' → logprob: -7.2685136795043945
    10. '```' → logprob: -7.2685136795043945

Token 3583: ' En' (ID: 2130)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056728050112724304
    2. '0' → logprob: -3.9317281246185303
    3. '           ' → logprob: -4.681727886199951
    4. '   ' → logprob: -5.181727886199951
    5. '=' → logprob: -5.556727886199951
    6. '        ' → logprob: -5.806727886199951
    7. '1' → logprob: -6.431727886199951
    8. ' =' → logprob: -6.556727886199951
    9. ')' → logprob: -6.806727886199951
    10. '2' → logprob: -7.181727886199951

Token 3584: ' pratique' (ID: 42780)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20319455862045288
    2. 'for' → logprob: -2.3281946182250977
    3. 'continue' → logprob: -4.078194618225098
    4. '#' → logprob: -4.203194618225098
    5. '```' → logprob: -4.578194618225098
    6. '   ' → logprob: -5.078194618225098
    7. 'limit' → logprob: -5.328194618225098
    8. 'continu' → logprob: -5.578194618225098
    9. 'max' → logprob: -5.703194618225098
    10. 'code' → logprob: -5.703194618225098

Token 3585: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1262627840042114
    2. '```' → logprob: -1.7512627840042114
    3. '2' → logprob: -2.001262664794922
    4. 'for' → logprob: -2.751262664794922
    5. '0' → logprob: -3.126262664794922
    6. ' for' → logprob: -3.251262664794922
    7. ',' → logprob: -3.501262664794922
    8. '       ' → logprob: -3.626262664794922
    9. 'range' → logprob: -3.751262664794922
    10. '=' → logprob: -4.126262664794922

Token 3586: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3105623722076416
    2. '   ' → logprob: -1.3105623722076416
    3. '0' → logprob: -1.6855623722076416
    4. '1' → logprob: -2.4355623722076416
    5. '2' → logprob: -2.9355623722076416
    6. 'j' → logprob: -3.5605623722076416
    7. ' ' → logprob: -3.9355623722076416
    8. '```' → logprob: -4.4355621337890625
    9. ' x' → logprob: -4.6855621337890625
    10. '       ' → logprob: -5.0605621337890625

Token 3587: '’' (ID: 438)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4511573910713196
    2. 'for' → logprob: -3.076157331466675
    3. 'range' → logprob: -3.076157331466675
    4. ']' → logprob: -3.576157331466675
    5. 'e' → logprob: -3.701157331466675
    6. '#' → logprob: -3.826157331466675
    7. 'en' → logprob: -3.951157331466675
    8. 'im' → logprob: -4.201157569885254
    9. '   ' → logprob: -4.201157569885254
    10. 'imit' → logprob: -4.326157569885254

Token 3588: 'interval' (ID: 37558)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5353612303733826
    2. 'max' → logprob: -2.6603612899780273
    3. '#' → logprob: -2.9103612899780273
    4. 'i' → logprob: -3.0353612899780273
    5. 'len' → logprob: -3.2853612899780273
    6. 'x' → logprob: -3.4103612899780273
    7. 'for' → logprob: -3.6603612899780273
    8. 'n' → logprob: -3.7853612899780273
    9. 'interval' → logprob: -4.035361289978027
    10. '+' → logprob: -4.285361289978027

Token 3589: 'le' (ID: 282)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.23349228501319885
    2. '_lengths' → logprob: -2.483492374420166
    3. 'val' → logprob: -3.233492374420166
    4. '       ' → logprob: -3.983492374420166
    5. '[i' → logprob: -4.358492374420166
    6. '   ' → logprob: -4.358492374420166
    7. '[
' → logprob: -5.108492374420166
    8. '[' → logprob: -5.233492374420166
    9. ']' → logprob: -5.733492374420166
    10. '_len' → logprob: -6.233492374420166

Token 3590: ' entre' (ID: 3853)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.7379335165023804
    2. '_lengths' → logprob: -0.8629335165023804
    3. '_len' → logprob: -3.98793363571167
    4. '_' → logprob: -4.23793363571167
    5. ' =' → logprob: -4.23793363571167
    6. '=' → logprob: -4.73793363571167
    7. '[i' → logprob: -4.98793363571167
    8. 'length' → logprob: -5.23793363571167
    9. '_segments' → logprob: -5.23793363571167
    10. '[' → logprob: -5.48793363571167

Token 3591: ' S' (ID: 336)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21255408227443695
    2. '[i' → logprob: -1.9625540971755981
    3. 'S' → logprob: -3.9625539779663086
    4. '   ' → logprob: -4.462553977966309
    5. ' i' → logprob: -5.462553977966309
    6. '0' → logprob: -6.087553977966309
    7. '_i' → logprob: -6.212553977966309
    8. 'l' → logprob: -6.462553977966309
    9. 'j' → logprob: -6.587553977966309
    10. '```' → logprob: -6.712553977966309

Token 3592: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008585729636251926
    2. '[' → logprob: -4.8835859298706055
    3. '[idx' → logprob: -8.383585929870605
    4. '   ' → logprob: -8.508585929870605
    5. 'i' → logprob: -8.883585929870605
    6. ']' → logprob: -9.258585929870605
    7. '][' → logprob: -9.383585929870605
    8. '[
' → logprob: -9.633585929870605
    9. ' [' → logprob: -9.883585929870605
    10. 'idx' → logprob: -10.633585929870605

Token 3593: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015671465545892715
    2. ']' → logprob: -4.515671253204346
    3. '+
' → logprob: -6.390671253204346
    4. '[i' → logprob: -7.265671253204346
    5. '+]' → logprob: -7.265671253204346
    6. '[' → logprob: -7.765671253204346
    7. '][' → logprob: -8.140671730041504
    8. ' +' → logprob: -8.640671730041504
    9. '   ' → logprob: -8.765671730041504
    10. '+i' → logprob: -9.015671730041504

Token 3594: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02413387969136238
    2. ']' → logprob: -4.399133682250977
    3. '[' → logprob: -5.649133682250977
    4. '[i' → logprob: -6.399133682250977
    5. '][' → logprob: -6.899133682250977
    6. '
' → logprob: -6.899133682250977
    7. '+
' → logprob: -6.899133682250977
    8. '   ' → logprob: -7.524133682250977
    9. ' +' → logprob: -7.899133682250977
    10. '```' → logprob: -8.024133682250977

Token 3595: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.0948158382670954e-05
    2. ' S' → logprob: -10.500030517578125
    3. '   ' → logprob: -13.250030517578125
    4. 'i' → logprob: -13.875030517578125
    5. '
' → logprob: -15.875030517578125
    6. '```' → logprob: -15.875030517578125
    7. '`' → logprob: -16.000030517578125
    8. '[i' → logprob: -16.000030517578125
    9. ' ' → logprob: -16.500030517578125
    10. '	S' → logprob: -17.625030517578125

Token 3596: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004506423603743315
    2. '+' → logprob: -6.004506587982178
    3. '[' → logprob: -6.879506587982178
    4. ']' → logprob: -7.504506587982178
    5. 'i' → logprob: -8.37950611114502
    6. '][' → logprob: -10.12950611114502
    7. '1' → logprob: -10.25450611114502
    8. '   ' → logprob: -10.62950611114502
    9. '+i' → logprob: -10.62950611114502
    10. '```' → logprob: -10.75450611114502

Token 3597: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007076674373820424
    2. ']' → logprob: -8.000707626342773
    3. '+
' → logprob: -8.750707626342773
    4. ']+' → logprob: -9.875707626342773
    5. ' +' → logprob: -10.125707626342773
    6. '+i' → logprob: -10.125707626342773
    7. '+]' → logprob: -10.500707626342773
    8. '[i' → logprob: -10.750707626342773
    9. '   ' → logprob: -11.625707626342773
    10. 'i' → logprob: -11.875707626342773

Token 3598: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014477500692009926
    2. 'i' → logprob: -4.264477729797363
    3. '+' → logprob: -8.139477729797363
    4. ' i' → logprob: -11.764477729797363
    5. '[i' → logprob: -12.014477729797363
    6. '(i' → logprob: -13.139477729797363
    7. '   ' → logprob: -13.139477729797363
    8. ' ' → logprob: -13.514477729797363
    9. '{i' → logprob: -14.014477729797363
    10. '```' → logprob: -14.264477729797363

Token 3599: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11897066980600357
    2. '][' → logprob: -3.3689706325531006
    3. '[i' → logprob: -3.6189706325531006
    4. '+' → logprob: -3.9939706325531006
    5. ']:
' → logprob: -5.11897087097168
    6. ']
' → logprob: -5.24397087097168
    7. '   ' → logprob: -5.74397087097168
    8. ')' → logprob: -5.99397087097168
    9. ']+' → logprob: -6.11897087097168
    10. '[' → logprob: -6.49397087097168

Token 3600: ' contient' (ID: 89067)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8895982503890991
    2. '+' → logprob: -1.1395982503890991
    3. ']' → logprob: -2.6395983695983887
    4. '[' → logprob: -3.3895983695983887
    5. '=' → logprob: -4.139598369598389
    6. ')' → logprob: -4.264598369598389
    7. ' =' → logprob: -4.264598369598389
    8. '```' → logprob: -4.514598369598389
    9. '_len' → logprob: -4.514598369598389
    10. ':' → logprob: -4.639598369598389

Token 3601: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9576305150985718
    2. ' S' → logprob: -2.0826306343078613
    3. 'segment' → logprob: -2.3326306343078613
    4. 'S' → logprob: -2.3326306343078613
    5. ' segment' → logprob: -2.5826306343078613
    6. '(interval' → logprob: -2.5826306343078613
    7. ' intervals' → logprob: -2.9576306343078613
    8. 'segments' → logprob: -3.7076306343078613
    9. ' (' → logprob: -4.207630634307861
    10. ' interval' → logprob: -4.332630634307861

Token 3602: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009595653042197227
    2. '_length' → logprob: -6.50959587097168
    3. '_i' → logprob: -6.50959587097168
    4. '[' → logprob: -7.00959587097168
    5. 's' → logprob: -7.00959587097168
    6. ']' → logprob: -7.50959587097168
    7. '_lengths' → logprob: -7.50959587097168
    8. '][' → logprob: -7.75959587097168
    9. '=' → logprob: -8.00959587097168
    10. '
' → logprob: -8.13459587097168

Token 3603: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8953288197517395
    2. ']' → logprob: -1.0203287601470947
    3. ']+' → logprob: -1.6453287601470947
    4. '+' → logprob: -3.3953287601470947
    5. ']
' → logprob: -6.770328998565674
    6. '[' → logprob: -7.645328998565674
    7. ' +' → logprob: -7.645328998565674
    8. '][' → logprob: -7.770328998565674
    9. '],' → logprob: -7.895328998565674
    10. '])' → logprob: -8.395328521728516

Token 3604: ' stations' (ID: 26061)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5413036346435547
    2. '+' → logprob: -1.5413036346435547
    3. '```' → logprob: -2.5413036346435547
    4. '   ' → logprob: -3.0413036346435547
    5. '][' → logprob: -4.291303634643555
    6. ' +' → logprob: -4.291303634643555
    7. '       ' → logprob: -4.416303634643555
    8. '[' → logprob: -5.166303634643555
    9. '
' → logprob: -5.166303634643555
    10. ')' → logprob: -5.791303634643555

Token 3605: '.

' (ID: 364)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.117084264755249
    2. '   ' → logprob: -1.617084264755249
    3. '+' → logprob: -1.992084264755249
    4. '       ' → logprob: -2.242084264755249
    5. '
' → logprob: -2.867084264755249
    6. '```' → logprob: -2.867084264755249
    7. ' +' → logprob: -3.117084264755249
    8. ')' → logprob: -4.617084503173828
    9. ']' → logprob: -4.742084503173828
    10. '][' → logprob: -5.367084503173828

Token 3606: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11748961359262466
    2. '```' → logprob: -3.1174895763397217
    3. '       ' → logprob: -4.492489814758301
    4. ')' → logprob: -4.492489814758301
    5. 'for' → logprob: -4.867489814758301
    6. '    ' → logprob: -4.992489814758301
    7. ',' → logprob: -5.242489814758301
    8. '[' → logprob: -5.742489814758301
    9. '    
' → logprob: -6.617489814758301
    10. ' ' → logprob: -6.742489814758301

Token 3607: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07946920394897461
    2. 'for' → logprob: -3.0794692039489746
    3. '```' → logprob: -4.329469203948975
    4. ' for' → logprob: -4.704469203948975
    5. '       ' → logprob: -6.454469203948975
    6. '
' → logprob: -6.579469203948975
    7. 'max' → logprob: -6.579469203948975
    8. ')' → logprob: -7.579469203948975
    9. '2' → logprob: -7.579469203948975
    10. ',' → logprob: -7.704469203948975

Token 3608: ' Le' (ID: 2018)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0438463687896729
    2. '   ' → logprob: -1.5438463687896729
    3. '0' → logprob: -2.293846368789673
    4. '2' → logprob: -3.043846368789673
    5. '           ' → logprob: -3.543846368789673
    6. 'i' → logprob: -3.793846368789673
    7. '+' → logprob: -3.793846368789673
    8. '```' → logprob: -3.793846368789673
    9. ' i' → logprob: -3.918846368789673
    10. '1' → logprob: -4.293846130371094

Token 3609: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7142692804336548
    2. 'for' → logprob: -1.8392692804336548
    3. 'x' → logprob: -2.8392691612243652
    4. '+' → logprob: -2.9642691612243652
    5. 'maximum' → logprob: -2.9642691612243652
    6. 'i' → logprob: -3.0892691612243652
    7. 'minimum' → logprob: -3.7142691612243652
    8. '#' → logprob: -4.339269161224365
    9. 'min' → logprob: -4.464269161224365
    10. 'segment' → logprob: -4.464269161224365

Token 3610: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3087243437767029
    2. ' =' → logprob: -2.1837244033813477
    3. 'possible' → logprob: -2.8087244033813477
    4. '=' → logprob: -2.9337244033813477
    5. '_x' → logprob: -4.558724403381348
    6. 'arr' → logprob: -4.683724403381348
    7. ' x' → logprob: -5.433724403381348
    8. '_possible' → logprob: -5.933724403381348
    9. 'segments' → logprob: -6.433724403381348
    10. 'd' → logprob: -6.433724403381348

Token 3611: ' arr' (ID: 1724)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.031078264117240906
    2. 'arr' → logprob: -4.031078338623047
    3. ' x' → logprob: -4.781078338623047
    4. 'st' → logprob: -7.031078338623047
    5. 'segments' → logprob: -7.156078338623047
    6. ' stops' → logprob: -7.531078338623047
    7. '```' → logprob: -7.656078338623047
    8. '   ' → logprob: -8.281078338623047
    9. 'possible' → logprob: -8.531078338623047
    10. 'stations' → logprob: -8.781078338623047

Token 3612: 'êts' (ID: 56582)
  Prédit: 'êts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êts' → logprob: -0.39580878615379333
    2. 'êt' → logprob: -1.1458088159561157
    3. 'ivée' → logprob: -5.145808696746826
    4. '[i' → logprob: -6.895808696746826
    5. 'r' → logprob: -7.895808696746826
    6. '_length' → logprob: -8.395809173583984
    7. 'iv' → logprob: -8.395809173583984
    8. ']' → logprob: -8.770809173583984
    9. '[' → logprob: -8.895809173583984
    10. 'ête' → logprob: -9.395809173583984

Token 3613: ' sem' (ID: 2743)
  Prédit: ' sem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sem' → logprob: -0.6782466173171997
    2. 'sem' → logprob: -1.1782466173171997
    3. '_sem' → logprob: -1.9282466173171997
    4. '_se' → logprob: -4.17824649810791
    5. 'se' → logprob: -5.67824649810791
    6. ' par' → logprob: -6.17824649810791
    7. 'par' → logprob: -6.30324649810791
    8. '_' → logprob: -6.30324649810791
    9. '[i' → logprob: -6.42824649810791
    10. ' =' → logprob: -6.67824649810791

Token 3614: 'iexpress' (ID: 190732)
  Prédit: 'iexpress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iexpress' → logprob: -0.18153159320354462
    2. 'express' → logprob: -1.931531548500061
    3. '[i' → logprob: -5.8065314292907715
    4. '_i' → logprob: -5.9315314292907715
    5. '(express' → logprob: -6.0565314292907715
    6. 'ieurs' → logprob: -6.1815314292907715
    7. ' expresses' → logprob: -6.3065314292907715
    8. ' express' → logprob: -6.4315314292907715
    9. 'ieux' → logprob: -7.3065314292907715
    10. ')' → logprob: -7.5565314292907715

Token 3615: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.0681207180023193
    2. 'par' → logprob: -1.9431207180023193
    3. '[i' → logprob: -1.9431207180023193
    4. ' =' → logprob: -2.0681207180023193
    5. '=' → logprob: -2.8181207180023193
    6. '```' → logprob: -2.9431207180023193
    7. ' dans' → logprob: -3.6931207180023193
    8. 'possible' → logprob: -3.8181207180023193
    9. ' par' → logprob: -3.9431207180023193
    10. 's' → logprob: -4.193120956420898

Token 3616: ' un' (ID: 537)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6183804869651794
    2. 'i' → logprob: -0.9933804869651794
    3. 'l' → logprob: -2.743380546569824
    4. '[i' → logprob: -3.743380546569824
    5. ' i' → logprob: -6.368380546569824
    6. '   ' → logprob: -8.493380546569824
    7. ' interval' → logprob: -8.743380546569824
    8. ' ' → logprob: -8.743380546569824
    9. '```' → logprob: -9.493380546569824
    10. ')' → logprob: -9.743380546569824

Token 3617: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.07163634151220322
    2. 'i' → logprob: -3.196636438369751
    3. '[i' → logprob: -3.946636438369751
    4. 'inter' → logprob: -5.821636199951172
    5. ' i' → logprob: -6.696636199951172
    6. '```' → logprob: -6.696636199951172
    7. ']' → logprob: -7.071636199951172
    8. ' interval' → logprob: -7.196636199951172
    9. '   ' → logprob: -8.321636199951172
    10. ')' → logprob: -8.446636199951172

Token 3618: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1038941815495491
    2. 'v' → logprob: -3.2288942337036133
    3. 'e' → logprob: -3.6038942337036133
    4. 'al' → logprob: -5.103894233703613
    5. 'é' → logprob: -5.478894233703613
    6. 'vel' → logprob: -5.603894233703613
    7. 'vale' → logprob: -5.978894233703613
    8. 'velle' → logprob: -6.478894233703613
    9. '[' → logprob: -6.603894233703613
    10. 'aire' → logprob: -6.853894233703613

Token 3619: ' ne' (ID: 453)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.620324969291687
    2. '[i' → logprob: -1.245324969291687
    3. '=' → logprob: -2.1203250885009766
    4. 'i' → logprob: -3.9953250885009766
    5. ' est' → logprob: -4.745325088500977
    6. ' possible' → logprob: -4.995325088500977
    7. ' i' → logprob: -5.245325088500977
    8. ':' → logprob: -5.870325088500977
    9. ' dans' → logprob: -5.870325088500977
    10. 'possible' → logprob: -6.370325088500977

Token 3620: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09401610493659973
    2. '<=' → logprob: -3.5940160751342773
    3. 's' → logprob: -4.094016075134277
    4. ')' → logprob: -4.969016075134277
    5. ' =' → logprob: -5.094016075134277
    6. '=
' → logprob: -5.594016075134277
    7. '>' → logprob: -5.594016075134277
    8. '```' → logprob: -5.594016075134277
    9. '<|end|>' → logprob: -5.969016075134277
    10. ']' → logprob: -5.969016075134277

Token 3621: ' exc' (ID: 3529)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.49119114875793457
    2. 'pas' → logprob: -1.1161911487579346
    3. '=' → logprob: -3.7411911487579346
    4. ' =' → logprob: -4.7411909103393555
    5. ' dépasser' → logprob: -5.1161909103393555
    6. '_pas' → logprob: -5.6161909103393555
    7. '[' → logprob: -5.9911909103393555
    8. ')' → logprob: -6.1161909103393555
    9. '<|end|>' → logprob: -6.4911909103393555
    10. '```' → logprob: -6.9911909103393555

Token 3622: 'éder' (ID: 56640)
  Prédit: 'éder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éder' → logprob: -0.004936054814606905
    2. 'e' → logprob: -6.629936218261719
    3. 'eed' → logprob: -6.754936218261719
    4. 'eder' → logprob: -6.879936218261719
    5. 'é' → logprob: -7.754936218261719
    6. 'ede' → logprob: -7.879936218261719
    7. '#' → logprob: -8.504936218261719
    8. 'è' → logprob: -9.754936218261719
    9. '```' → logprob: -9.754936218261719
    10. '
' → logprob: -10.629936218261719

Token 3623: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00151081255171448
    2. '   ' → logprob: -7.3765106201171875
    3. ' intervals' → logprob: -7.6265106201171875
    4. 'segments' → logprob: -8.251510620117188
    5. '       ' → logprob: -9.376510620117188
    6. '           ' → logprob: -10.751510620117188
    7. 'segment' → logprob: -11.751510620117188
    8. '(interval' → logprob: -12.001510620117188
    9. '               ' → logprob: -12.626510620117188
    10. '1' → logprob: -13.501510620117188

Token 3624: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0025970612186938524
    2. 's' → logprob: -6.002596855163574
    3. 'nts' → logprob: -9.752596855163574
    4. 'ts' → logprob: -11.377596855163574
    5. ']' → logprob: -11.627596855163574
    6. 'i' → logprob: -11.752596855163574
    7. 'ns' → logprob: -12.252596855163574
    8. '[' → logprob: -12.377596855163574
    9. 'length' → logprob: -12.627596855163574
    10. 'ents' → logprob: -12.627596855163574

Token 3625: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.28288063406944275
    2. ']' → logprob: -2.0328805446624756
    3. ']+' → logprob: -2.6578805446624756
    4. '+' → logprob: -3.1578805446624756
    5. ' +' → logprob: -6.282880783081055
    6. 'i' → logprob: -8.282880783081055
    7. '   ' → logprob: -8.907880783081055
    8. '+i' → logprob: -9.032880783081055
    9. '[' → logprob: -9.532880783081055
    10. ')+' → logprob: -10.032880783081055

Token 3626: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.413941353559494
    2. ' +' → logprob: -1.4139413833618164
    3. '[i' → logprob: -2.9139413833618164
    4. '   ' → logprob: -3.7889413833618164
    5. ' //' → logprob: -5.788941383361816
    6. '[' → logprob: -6.413941383361816
    7. '//' → logprob: -6.413941383361816
    8. '
' → logprob: -6.538941383361816
    9. '```' → logprob: -6.538941383361816
    10. '       ' → logprob: -6.788941383361816

Token 3627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25194409489631653
    2. '2' → logprob: -1.5019440650939941
    3. '0' → logprob: -12.376944541931152
    4. ' ' → logprob: -12.376944541931152
    5. '   ' → logprob: -12.751944541931152
    6. '```' → logprob: -12.751944541931152
    7. '3' → logprob: -14.626944541931152
    8. '
' → logprob: -16.626943588256836
    9. '  ' → logprob: -17.251943588256836
    10. '﻿' → logprob: -17.314443588256836

Token 3628: '.

' (ID: 364)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7301673889160156
    2. '```' → logprob: -1.8551673889160156
    3. '+' → logprob: -2.3551673889160156
    4. '   ' → logprob: -2.4801673889160156
    5. '[' → logprob: -3.1051673889160156
    6. '[
' → logprob: -3.6051673889160156
    7. ':' → logprob: -4.105167388916016
    8. ' +' → logprob: -4.230167388916016
    9. '
' → logprob: -4.355167388916016
    10. ')' → logprob: -4.355167388916016

Token 3629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07328783720731735
    2. '```' → logprob: -3.5732877254486084
    3. '       ' → logprob: -3.6982877254486084
    4. ' for' → logprob: -4.8232879638671875
    5. 'for' → logprob: -5.3232879638671875
    6. '
' → logprob: -6.6982879638671875
    7. 'max' → logprob: -7.6982879638671875
    8. '           ' → logprob: -7.8232879638671875
    9. ',' → logprob: -7.9482879638671875
    10. '    ' → logprob: -8.198287963867188

Token 3630: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0945206731557846
    2. '       ' → logprob: -3.0945205688476562
    3. 'for' → logprob: -3.8445205688476562
    4. '1' → logprob: -5.094520568847656
    5. '+' → logprob: -5.219520568847656
    6. '
' → logprob: -5.469520568847656
    7. ' for' → logprob: -6.594520568847656
    8. ' +' → logprob: -6.844520568847656
    9. '```' → logprob: -7.094520568847656
    10. '           ' → logprob: -7.094520568847656

Token 3631: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.575225293636322
    2. '   ' → logprob: -1.9502253532409668
    3. '           ' → logprob: -2.325225353240967
    4. '               ' → logprob: -3.700225353240967
    5. ']' → logprob: -3.825225353240967
    6. '=' → logprob: -3.825225353240967
    7. ')' → logprob: -4.075225353240967
    8. '+' → logprob: -4.325225353240967
    9. '[' → logprob: -4.450225353240967
    10. '```' → logprob: -4.450225353240967

Token 3632: ' réalise' (ID: 153079)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.365106463432312
    2. 'range' → logprob: -2.2401065826416016
    3. 'continue' → logprob: -3.1151065826416016
    4. 'max' → logprob: -3.2401065826416016
    5. 'def' → logprob: -3.7401065826416016
    6. '[' → logprob: -4.490106582641602
    7. ' for' → logprob: -4.490106582641602
    8. '   ' → logprob: -4.865106582641602
    9. '0' → logprob: -4.865106582641602
    10. '#' → logprob: -4.865106582641602

Token 3633: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30677708983421326
    2. 'for' → logprob: -1.5567771196365356
    3. '```' → logprob: -3.556777000427246
    4. ' for' → logprob: -4.556777000427246
    5. '       ' → logprob: -4.931777000427246
    6. 'i' → logprob: -6.181777000427246
    7. 'range' → logprob: -6.806777000427246
    8. ' i' → logprob: -7.306777000427246
    9. 'def' → logprob: -7.306777000427246
    10. 'M' → logprob: -7.431777000427246

Token 3634: ' K' (ID: 658)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6088016629219055
    2. ' ' → logprob: -2.6088016033172607
    3. '   ' → logprob: -2.7338016033172607
    4. '    ' → logprob: -2.8588016033172607
    5. ' i' → logprob: -3.4838016033172607
    6. 'x' → logprob: -3.6088016033172607
    7. '1' → logprob: -3.7338016033172607
    8. 'i' → logprob: -3.7338016033172607
    9. 'dp' → logprob: -3.9838016033172607
    10. ' x' → logprob: -4.10880184173584

Token 3635: ' ≤' (ID: 72554)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.463516503572464
    2. '[' → logprob: -2.3385164737701416
    3. '   ' → logprob: -2.9635164737701416
    4. '=' → logprob: -3.0885164737701416
    5. '+' → logprob: -3.7135164737701416
    6. ' =' → logprob: -3.7135164737701416
    7. ' <=' → logprob: -3.8385164737701416
    8. ')' → logprob: -4.338516712188721
    9. ']' → logprob: -4.463516712188721
    10. '```' → logprob: -4.463516712188721

Token 3636: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.05306756868958473
    2. '300' → logprob: -3.053067684173584
    3. 'S' → logprob: -6.803067684173584
    4. 'N' → logprob: -6.928067684173584
    5. 'len' → logprob: -7.678067684173584
    6. ' ' → logprob: -8.178067207336426
    7. 'interval' → logprob: -8.178067207336426
    8. '   ' → logprob: -8.553067207336426
    9. '10' → logprob: -8.553067207336426
    10. ' K' → logprob: -8.803067207336426

Token 3637: '300' (ID: 4095)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.319219172000885
    2. '300' → logprob: -1.3192191123962402
    3. 'M' → logprob: -5.69421911239624
    4. '
' → logprob: -7.69421911239624
    5. 'len' → logprob: -7.81921911239624
    6. '10' → logprob: -7.81921911239624
    7. ' ' → logprob: -8.319219589233398
    8. '1' → logprob: -8.694219589233398
    9. '301' → logprob: -9.069219589233398
    10. ' K' → logprob: -9.319219589233398

Token 3638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18225052952766418
    2. '   ' → logprob: -2.557250499725342
    3. ']' → logprob: -3.182250499725342
    4. '00' → logprob: -3.682250499725342
    5. '1' → logprob: -5.682250499725342
    6. '       ' → logprob: -5.807250499725342
    7. '000' → logprob: -6.307250499725342
    8. ']
' → logprob: -6.432250499725342
    9. '[' → logprob: -6.557250499725342
    10. '][' → logprob: -6.682250499725342

Token 3639: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7261301279067993
    2. '       ' → logprob: -1.8511301279067993
    3. '
' → logprob: -2.8511300086975098
    4. '+' → logprob: -3.3511300086975098
    5. '           ' → logprob: -3.3511300086975098
    6. '=' → logprob: -3.3511300086975098
    7. '[i' → logprob: -3.8511300086975098
    8. 'for' → logprob: -3.9761300086975098
    9. ' +' → logprob: -4.10113000869751
    10. '][' → logprob: -4.22613000869751

Token 3640: ' on' (ID: 402)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20513039827346802
    2. '2' → logprob: -2.8301303386688232
    3. 'K' → logprob: -3.7051303386688232
    4. '   ' → logprob: -3.7051303386688232
    5. '0' → logprob: -3.9551303386688232
    6. '```' → logprob: -4.080130577087402
    7. 'i' → logprob: -4.955130577087402
    8. 'for' → logprob: -5.455130577087402
    9. 'range' → logprob: -5.455130577087402
    10. 'M' → logprob: -5.705130577087402

Token 3641: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0975571870803833
    2. '=' → logprob: -2.0975570678710938
    3. ' for' → logprob: -2.3475570678710938
    4. '   ' → logprob: -2.3475570678710938
    5. 'range' → logprob: -2.8475570678710938
    6. ' =' → logprob: -3.0975570678710938
    7. '[' → logprob: -3.2225570678710938
    8. 'continue' → logprob: -3.3475570678710938
    9. ' continue' → logprob: -3.7225570678710938
    10. ' range' → logprob: -3.9725570678710938

Token 3642: ' limiter' (ID: 110159)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8532295823097229
    2. 'for' → logprob: -1.2282295227050781
    3. '   ' → logprob: -2.353229522705078
    4. 'continue' → logprob: -2.853229522705078
    5. ' for' → logprob: -3.853229522705078
    6. 'faire' → logprob: -3.853229522705078
    7. 'contin' → logprob: -3.978229522705078
    8. '```' → logprob: -4.228229522705078
    9. ' continuer' → logprob: -4.353229522705078
    10. ' range' → logprob: -4.853229522705078

Token 3643: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.013282299041748
    2. '0' → logprob: -1.888282299041748
    3. '=' → logprob: -2.388282299041748
    4. ' =' → logprob: -2.513282299041748
    5. '       ' → logprob: -2.638282299041748
    6. 'dp' → logprob: -2.638282299041748
    7. ' ' → logprob: -3.638282299041748
    8. '           ' → logprob: -3.888282299041748
    9. '    ' → logprob: -4.638282299041748
    10. '*' → logprob: -4.638282299041748

Token 3644: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4704195261001587
    2. '=' → logprob: -1.2204195261001587
    3. '[i' → logprob: -3.845419406890869
    4. 'x' → logprob: -4.345419406890869
    5. 'max' → logprob: -4.345419406890869
    6. '   ' → logprob: -5.220419406890869
    7. '[' → logprob: -5.845419406890869
    8. '
' → logprob: -6.095419406890869
    9. ')' → logprob: -6.220419406890869
    10. '[x' → logprob: -6.345419406890869

Token 3645: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003103175258729607
    2. ' range' → logprob: -8.875309944152832
    3. '   ' → logprob: -9.125309944152832
    4. '[' → logprob: -10.500309944152832
    5. '2' → logprob: -11.125309944152832
    6. '       ' → logprob: -12.250309944152832
    7. '1' → logprob: -12.375309944152832
    8. '(range' → logprob: -12.875309944152832
    9. 'ranges' → logprob: -13.750309944152832
    10. 'interval' → logprob: -13.875309944152832

Token 3646: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0063199205324053764
    2. '1' → logprob: -5.131319999694824
    3. '   ' → logprob: -9.006319999694824
    4. '0' → logprob: -9.506319999694824
    5. 'interval' → logprob: -9.881319999694824
    6. '
' → logprob: -10.506319999694824
    7. 'max' → logprob: -10.881319999694824
    8. 'range' → logprob: -11.006319999694824
    9. '```' → logprob: -11.506319999694824
    10. ' ' → logprob: -11.631319999694824

Token 3647: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008233580738306046
    2. ',
' → logprob: -5.883233547210693
    3. ' ,' → logprob: -6.008233547210693
    4. '..' → logprob: -6.508233547210693
    5. '...' → logprob: -7.633233547210693
    6. '+' → logprob: -7.758233547210693
    7. '   ' → logprob: -9.758234024047852
    8. ']' → logprob: -10.133234024047852
    9. ',...' → logprob: -10.133234024047852
    10. 'for' → logprob: -10.258234024047852

Token 3648: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00045009577297605574
    2. 'min' → logprob: -8.125450134277344
    3. ' intervals' → logprob: -9.000450134277344
    4. '(interval' → logprob: -10.750450134277344
    5. '   ' → logprob: -12.500450134277344
    6. '
' → logprob: -13.625450134277344
    7. 'segments' → logprob: -13.750450134277344
    8. '```' → logprob: -14.125450134277344
    9. ' min' → logprob: -14.375450134277344
    10. '           ' → logprob: -15.125450134277344

Token 3649: 's' (ID: 82)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8923953771591187
    2. 't' → logprob: -1.8923953771591187
    3. 'al' → logprob: -2.267395496368408
    4. ']' → logprob: -2.642395496368408
    5. '[' → logprob: -3.142395496368408
    6. '+' → logprob: -3.392395496368408
    7. '   ' → logprob: -3.517395496368408
    8. 'te' → logprob: -4.017395496368408
    9. 'vals' → logprob: -4.142395496368408
    10. '       ' → logprob: -4.392395496368408

Token 3650: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00047368707600980997
    2. 'i' → logprob: -9.000473976135254
    3. '][' → logprob: -9.250473976135254
    4. ']' → logprob: -9.625473976135254
    5. '[' → logprob: -10.125473976135254
    6. '_i' → logprob: -10.125473976135254
    7. '   ' → logprob: -10.750473976135254
    8. '+' → logprob: -11.375473976135254
    9. ' [' → logprob: -11.375473976135254
    10. '
' → logprob: -11.750473976135254

Token 3651: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02334517613053322
    2. ']+' → logprob: -4.023344993591309
    3. '+' → logprob: -5.523344993591309
    4. ']' → logprob: -7.148344993591309
    5. 'i' → logprob: -8.398344993591309
    6. ' +' → logprob: -9.898344993591309
    7. ')+' → logprob: -9.898344993591309
    8. '+i' → logprob: -10.648344993591309
    9. 's' → logprob: -11.648344993591309
    10. '   ' → logprob: -11.648344993591309

Token 3652: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8193366486229934e-05
    2. '2' → logprob: -11.125018119812012
    3. ' ' → logprob: -13.125018119812012
    4. ']' → logprob: -14.750018119812012
    5. '
' → logprob: -15.125018119812012
    6. '+' → logprob: -16.062519073486328
    7. ')' → logprob: -16.500019073486328
    8. '   ' → logprob: -16.562519073486328
    9. '```' → logprob: -16.625019073486328
    10. '10' → logprob: -16.937519073486328

Token 3653: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8623168468475342
    2. '+' → logprob: -1.4873168468475342
    3. '   ' → logprob: -2.112316846847534
    4. ']:
' → logprob: -2.612316846847534
    5. '       ' → logprob: -3.487316846847534
    6. ' +' → logprob: -3.737316846847534
    7. '```' → logprob: -4.112317085266113
    8. '[i' → logprob: -4.112317085266113
    9. ']:' → logprob: -4.487317085266113
    10. ']
' → logprob: -4.612317085266113

Token 3654: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39974015951156616
    2. '   ' → logprob: -2.024740219116211
    3. '2' → logprob: -3.274740219116211
    4. '0' → logprob: -3.649740219116211
    5. '           ' → logprob: -3.774740219116211
    6. ' for' → logprob: -4.399740219116211
    7. '=' → logprob: -4.774740219116211
    8. ' =' → logprob: -5.024740219116211
    9. '    ' → logprob: -5.149740219116211
    10. ')' → logprob: -5.274740219116211

Token 3655: ' intervals' (ID: 49900)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5526818037033081
    2. 'x' → logprob: -1.427681803703308
    3. 'max' → logprob: -2.9276819229125977
    4. ' min' → logprob: -3.4276819229125977
    5. '2' → logprob: -3.4276819229125977
    6. ' x' → logprob: -3.5526819229125977
    7. '```' → logprob: -4.177681922912598
    8. '           ' → logprob: -5.802681922912598
    9. '   ' → logprob: -5.927681922912598
    10. '       ' → logprob: -5.927681922912598

Token 3656: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00477566896006465
    2. '_i' → logprob: -6.629775524139404
    3. '_length' → logprob: -6.754775524139404
    4. '```' → logprob: -7.504775524139404
    5. '_len' → logprob: -7.879775524139404
    6. '
' → logprob: -8.754776000976562
    7. '_idx' → logprob: -8.754776000976562
    8. ' =' → logprob: -8.879776000976562
    9. '=' → logprob: -9.004776000976562
    10. '_size' → logprob: -9.129776000976562

Token 3657: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.6333518028259277
    2. '[i' → logprob: -1.7583518028259277
    3. '+' → logprob: -2.1333518028259277
    4. ' <=' → logprob: -2.1333518028259277
    5. ' <' → logprob: -2.5083518028259277
    6. '[' → logprob: -2.8833518028259277
    7. ' +' → logprob: -2.8833518028259277
    8. '=' → logprob: -3.0083518028259277
    9. '   ' → logprob: -3.5083518028259277
    10. '][' → logprob: -3.5083518028259277

Token 3658: ' peut' (ID: 9216)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7816690802574158
    2. '[i' → logprob: -1.6566691398620605
    3. ' =' → logprob: -2.5316691398620605
    4. '=' → logprob: -2.6566691398620605
    5. '<=' → logprob: -2.6566691398620605
    6. ' <' → logprob: -2.9066691398620605
    7. '[' → logprob: -3.5316691398620605
    8. '>' → logprob: -4.6566691398620605
    9. ' >' → logprob: -4.9066691398620605
    10. '   ' → logprob: -4.9066691398620605

Token 3659: ' être' (ID: 9104)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.535739541053772
    2. ' be' → logprob: -1.410739541053772
    3. ' >' → logprob: -3.1607394218444824
    4. ' dépasser' → logprob: -3.5357394218444824
    5. 'ex' → logprob: -3.6607394218444824
    6. 'be' → logprob: -3.9107394218444824
    7. '```' → logprob: -3.9107394218444824
    8. ' exceed' → logprob: -4.660739421844482
    9. '   ' → logprob: -5.285739421844482
    10. ' être' → logprob: -5.535739421844482

Token 3660: ' grand' (ID: 6363)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.44934818148612976
    2. '10' → logprob: -1.5743482112884521
    3. '0' → logprob: -2.699348211288452
    4. 'max' → logprob: -3.449348211288452
    5. '300' → logprob: -4.324347972869873
    6. 'large' → logprob: -4.824347972869873
    7. '100' → logprob: -5.324347972869873
    8. 'very' → logprob: -5.324347972869873
    9. '1' → logprob: -5.699347972869873
    10. '[' → logprob: -6.199347972869873

Token 3661: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2374645471572876
    2. '       ' → logprob: -2.237464427947998
    3. ',' → logprob: -2.612464427947998
    4. ')' → logprob: -2.987464427947998
    5. '```' → logprob: -2.987464427947998
    6. '.' → logprob: -3.112464427947998
    7. ':' → logprob: -3.237464427947998
    8. '           ' → logprob: -3.237464427947998
    9. '+' → logprob: -3.362464427947998
    10. '
' → logprob: -3.487464427947998

Token 3662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47848209738731384
    2. '       ' → logprob: -1.1034821271896362
    3. '    
' → logprob: -4.728482246398926
    4. '    ' → logprob: -4.853482246398926
    5. '
' → logprob: -5.353482246398926
    6. '```' → logprob: -5.353482246398926
    7. '           ' → logprob: -5.478482246398926
    8. '        
' → logprob: -6.103482246398926
    9. ' =' → logprob: -6.103482246398926
    10. ',' → logprob: -6.478482246398926

Token 3663: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33074307441711426
    2. '       ' → logprob: -2.0807430744171143
    3. '    ' → logprob: -3.0807430744171143
    4. '0' → logprob: -3.9557430744171143
    5. '1' → logprob: -3.9557430744171143
    6. '    
' → logprob: -4.830742835998535
    7. ' =' → logprob: -5.080742835998535
    8. ' ' → logprob: -5.080742835998535
    9. '=' → logprob: -5.330742835998535
    10. '           ' → logprob: -5.455742835998535

Token 3664: ' Pour' (ID: 13931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08768513053655624
    2. '           ' → logprob: -3.4626851081848145
    3. '   ' → logprob: -3.5876851081848145
    4. '```' → logprob: -4.3376851081848145
    5. '               ' → logprob: -5.8376851081848145
    6. ')' → logprob: -6.2126851081848145
    7. '        ' → logprob: -6.8376851081848145
    8. '    ' → logprob: -7.3376851081848145
    9. '                   ' → logprob: -7.4626851081848145
    10. '...' → logprob: -8.087685585021973

Token 3665: ' limiter' (ID: 110159)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09159127622842789
    2. 'j' → logprob: -2.4665913581848145
    3. '_j' → logprob: -7.0915913581848145
    4. '_x' → logprob: -7.8415913581848145
    5. ' x' → logprob: -8.091590881347656
    6. ' j' → logprob: -8.341590881347656
    7. 'i' → logprob: -9.591590881347656
    8. 's' → logprob: -9.841590881347656
    9. 'max' → logprob: -9.966590881347656
    10. 'stop' → logprob: -9.966590881347656

Token 3666: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10169549286365509
    2. '2' → logprob: -2.9766955375671387
    3. ' x' → logprob: -4.226695537567139
    4. '   ' → logprob: -4.726695537567139
    5. ' ' → logprob: -5.601695537567139
    6. 'l' → logprob: -5.976695537567139
    7. '```' → logprob: -5.976695537567139
    8. 'max' → logprob: -6.351695537567139
    9. 'segment' → logprob: -6.476695537567139
    10. 'min' → logprob: -6.726695537567139

Token 3667: ' on' (ID: 402)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6901533007621765
    2. '2' → logprob: -1.9401533603668213
    3. '   ' → logprob: -2.3151533603668213
    4. 'for' → logprob: -2.9401533603668213
    5. ' for' → logprob: -2.9401533603668213
    6. ' on' → logprob: -3.3151533603668213
    7. '```' → logprob: -3.5651533603668213
    8. ' x' → logprob: -3.6901533603668213
    9. '#' → logprob: -3.9401533603668213
    10. '       ' → logprob: -4.690153121948242

Token 3668: ' fixe' (ID: 111690)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3216673135757446
    2. '#' → logprob: -1.5716673135757446
    3. 'for' → logprob: -1.9466673135757446
    4. 'max' → logprob: -2.571667194366455
    5. 'range' → logprob: -3.071667194366455
    6. 'contin' → logprob: -3.071667194366455
    7. ' continue' → logprob: -3.196667194366455
    8. 'import' → logprob: -3.446667194366455
    9. 'min' → logprob: -3.446667194366455
    10. 'def' → logprob: -3.571667194366455

Token 3669: ' x' (ID: 1215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6855247616767883
    2. 'x' → logprob: -0.9355247616767883
    3. 'max' → logprob: -3.6855247020721436
    4. ' x' → logprob: -4.435524940490723
    5. 'l' → logprob: -4.685524940490723
    6. '   ' → logprob: -4.935524940490723
    7. ' la' → logprob: -5.060524940490723
    8. 'min' → logprob: -5.185524940490723
    9. 'la' → logprob: -5.185524940490723
    10. '1' → logprob: -5.435524940490723

Token 3670: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43781623244285583
    2. '=' → logprob: -1.0628162622451782
    3. 'max' → logprob: -5.187816143035889
    4. '_max' → logprob: -6.812816143035889
    5. ' in' → logprob: -7.812816143035889
    6. 'def' → logprob: -8.062816619873047
    7. ' max' → logprob: -8.312816619873047
    8. '   ' → logprob: -8.562816619873047
    9. '[' → logprob: -8.687816619873047
    10. '_min' → logprob: -8.687816619873047

Token 3671: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13349713385105133
    2. '[' → logprob: -2.2584972381591797
    3. ' range' → logprob: -4.00849723815918
    4. '2' → logprob: -6.50849723815918
    5. '   ' → logprob: -8.00849723815918
    6. '[min' → logprob: -8.50849723815918
    7. ' [' → logprob: -9.25849723815918
    8. 'min' → logprob: -9.63349723815918
    9. '```' → logprob: -10.75849723815918
    10. '       ' → logprob: -10.88349723815918

Token 3672: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013288103509694338
    2. '1' → logprob: -6.751328945159912
    3. '   ' → logprob: -9.501328468322754
    4. ' ' → logprob: -9.876328468322754
    5. '
' → logprob: -11.626328468322754
    6. '0' → logprob: -12.376328468322754
    7. '```' → logprob: -12.376328468322754
    8. '       ' → logprob: -13.376328468322754
    9. 'max' → logprob: -13.813828468322754
    10. 'min' → logprob: -13.813828468322754

Token 3673: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16146208345890045
    2. '..' → logprob: -2.2864620685577393
    3. ' ,' → logprob: -3.2864620685577393
    4. '...' → logprob: -5.161462306976318
    5. ',
' → logprob: -6.286462306976318
    6. '   ' → logprob: -7.536462306976318
    7. ' ..' → logprob: -8.03646183013916
    8. ',len' → logprob: -8.28646183013916
    9. ',max' → logprob: -8.53646183013916
    10. ' ' → logprob: -8.78646183013916

Token 3674: 'max' (ID: 3228)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06407013535499573
    2. 'K' → logprob: -3.439070224761963
    3. 'max' → logprob: -4.314070224761963
    4. '300' → logprob: -4.939070224761963
    5. 'interval' → logprob: -5.189070224761963
    6. 'S' → logprob: -6.814070224761963
    7. ' min' → logprob: -6.939070224761963
    8. '100' → logprob: -7.814070224761963
    9. '(min' → logprob: -8.439069747924805
    10. '301' → logprob: -8.689069747924805

Token 3675: '_x' (ID: 7054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16152241826057434
    2. '(interval' → logprob: -2.411522388458252
    3. '2' → logprob: -3.786522388458252
    4. '(S' → logprob: -4.536522388458252
    5. 'interval' → logprob: -5.661522388458252
    6. '(segment' → logprob: -5.661522388458252
    7. 'x' → logprob: -5.786522388458252
    8. '_x' → logprob: -5.911522388458252
    9. '(
' → logprob: -5.911522388458252
    10. '(min' → logprob: -6.161522388458252

Token 3676: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4414190948009491
    2. '=' → logprob: -2.5664191246032715
    3. ']' → logprob: -2.8164191246032715
    4. '(' → logprob: -2.8164191246032715
    5. ' +' → logprob: -2.8164191246032715
    6. 'x' → logprob: -4.4414191246032715
    7. '2' → logprob: -4.8164191246032715
    8. '(i' → logprob: -4.8164191246032715
    9. ' =' → logprob: -4.8164191246032715
    10. '[i' → logprob: -4.9414191246032715

Token 3677: ' max' (ID: 2999)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0451159477233887
    2. 'min' → logprob: -1.1701159477233887
    3. 'max' → logprob: -1.6701159477233887
    4. '   ' → logprob: -2.9201159477233887
    5. 'interval' → logprob: -4.045115947723389
    6. ' ' → logprob: -4.295115947723389
    7. ' min' → logprob: -4.295115947723389
    8. ' max' → logprob: -4.920115947723389
    9. '       ' → logprob: -5.170115947723389
    10. '=' → logprob: -5.670115947723389

Token 3678: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.02786373347043991
    2. '_' → logprob: -4.152863502502441
    3. '(' → logprob: -5.402863502502441
    4. '(
' → logprob: -5.527863502502441
    5. '_len' → logprob: -7.152863502502441
    6. '(x' → logprob: -7.902863502502441
    7. '_val' → logprob: -8.152863502502441
    8. '_stop' → logprob: -8.152863502502441
    9. '_i' → logprob: -8.402863502502441
    10. ')' → logprob: -8.527863502502441

Token 3679: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24106377363204956
    2. '=' → logprob: -1.6160638332366943
    3. '=max' → logprob: -4.491063594818115
    4. '=min' → logprob: -5.866063594818115
    5. '+' → logprob: -7.491063594818115
    6. '   ' → logprob: -8.116064071655273
    7. ' +' → logprob: -8.741064071655273
    8. '=i' → logprob: -9.616064071655273
    9. '=len' → logprob: -9.616064071655273
    10. ',' → logprob: -9.866064071655273

Token 3680: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.29610010981559753
    2. 'K' → logprob: -2.17110013961792
    3. '300' → logprob: -2.17110013961792
    4. 'max' → logprob: -4.92110013961792
    5. '2' → logprob: -5.17110013961792
    6. '1' → logprob: -5.67110013961792
    7. ' min' → logprob: -5.92110013961792
    8. '   ' → logprob: -6.54610013961792
    9. 'interval' → logprob: -6.54610013961792
    10. '100' → logprob: -6.67110013961792

Token 3681: '(K' (ID: 28797)
  Prédit: '(interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.008005835115909576
    2. 'interval' → logprob: -5.758005619049072
    3. '(' → logprob: -6.008005619049072
    4. '(K' → logprob: -6.258005619049072
    5. ' (' → logprob: -8.75800609588623
    6. '(
' → logprob: -8.88300609588623
    7. '(S' → logprob: -11.00800609588623
    8. 'K' → logprob: -11.13300609588623
    9. '(len' → logprob: -11.25800609588623
    10. '(max' → logprob: -11.63300609588623

Token 3682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5464532375335693
    2. '+' → logprob: -0.9214532375335693
    3. ' +' → logprob: -4.546453475952148
    4. '[i' → logprob: -4.796453475952148
    5. '
' → logprob: -7.296453475952148
    6. '[' → logprob: -7.671453475952148
    7. '   ' → logprob: -7.796453475952148
    8. ',
' → logprob: -7.921453475952148
    9. '-' → logprob: -8.171453475952148
    10. ')' → logprob: -8.171453475952148

Token 3683: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.16087013483047485
    2. ' intervals' → logprob: -1.91087007522583
    3. '(interval' → logprob: -8.785870552062988
    4. '   ' → logprob: -9.160870552062988
    5. 'S' → logprob: -9.535870552062988
    6. 'segments' → logprob: -9.785870552062988
    7. '2' → logprob: -10.160870552062988
    8. '       ' → logprob: -10.285870552062988
    9. ' ' → logprob: -10.535870552062988
    10. ' interval' → logprob: -10.660870552062988

Token 3684: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.081584716506768e-05
    2. 'i' → logprob: -11.500020980834961
    3. '[' → logprob: -12.250020980834961
    4. '```' → logprob: -13.125020980834961
    5. '_i' → logprob: -13.875020980834961
    6. '
' → logprob: -14.375020980834961
    7. ']' → logprob: -14.500020980834961
    8. '   ' → logprob: -15.125020980834961
    9. '[
' → logprob: -15.500020980834961
    10. '\[' → logprob: -15.750020980834961

Token 3685: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01208868995308876
    2. ']+' → logprob: -5.012088775634766
    3. ']' → logprob: -5.512088775634766
    4. '+' → logprob: -7.387088775634766
    5. ')+' → logprob: -8.012088775634766
    6. 'i' → logprob: -8.637088775634766
    7. ')' → logprob: -9.387088775634766
    8. '   ' → logprob: -10.262088775634766
    9. '
' → logprob: -10.887088775634766
    10. '[' → logprob: -11.137088775634766

Token 3686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. '2' → logprob: -15.625001907348633
    4. '```' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.875001907348633
    6. ')' → logprob: -17.000001907348633
    7. '
' → logprob: -17.000001907348633
    8. '[' → logprob: -17.500001907348633
    9. '  ' → logprob: -18.875001907348633
    10. '`' → logprob: -19.500001907348633

Token 3687: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.57331383228302
    2. ')' → logprob: -1.32331383228302
    3. '   ' → logprob: -2.6983137130737305
    4. '+' → logprob: -2.9483137130737305
    5. ' +' → logprob: -4.0733137130737305
    6. ')+' → logprob: -4.3233137130737305
    7. '       ' → logprob: -5.3233137130737305
    8. '2' → logprob: -5.3233137130737305
    9. ']
' → logprob: -5.9483137130737305
    10. ']' → logprob: -5.9483137130737305

Token 3688: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1601237803697586
    2. '   ' → logprob: -2.660123825073242
    3. '```' → logprob: -4.285123825073242
    4. '    ' → logprob: -4.410123825073242
    5. '           ' → logprob: -4.410123825073242
    6. ',' → logprob: -4.535123825073242
    7. ')' → logprob: -5.160123825073242
    8. '
' → logprob: -5.410123825073242
    9. '        
' → logprob: -6.035123825073242
    10. '    
' → logprob: -6.035123825073242

Token 3689: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6020895838737488
    2. '   ' → logprob: -0.8520895838737488
    3. '2' → logprob: -4.2270894050598145
    4. '           ' → logprob: -5.1020894050598145
    5. '
' → logprob: -7.4770894050598145
    6. ')' → logprob: -7.4770894050598145
    7. '```' → logprob: -7.6020894050598145
    8. ',' → logprob: -7.7270894050598145
    9. 'for' → logprob: -7.7270894050598145
    10. '    
' → logprob: -7.9770894050598145

Token 3690: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10482355952262878
    2. '```' → logprob: -3.604823589324951
    3. '           ' → logprob: -3.729823589324951
    4. '        ' → logprob: -4.479823589324951
    5. '   ' → logprob: -5.229823589324951
    6. '=' → logprob: -5.229823589324951
    7. ')' → logprob: -5.479823589324951
    8. '+' → logprob: -5.979823589324951
    9. '    ' → logprob: -5.979823589324951
    10. '0' → logprob: -6.354823589324951

Token 3691: ' impl' (ID: 15443)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.719619870185852
    2. 'range' → logprob: -2.5946197509765625
    3. '[' → logprob: -2.9696197509765625
    4. ' =' → logprob: -3.0946197509765625
    5. 'def' → logprob: -3.0946197509765625
    6. 'continue' → logprob: -3.2196197509765625
    7. 'contin' → logprob: -3.2196197509765625
    8. 'for' → logprob: -3.3446197509765625
    9. 'max' → logprob: -3.4696197509765625
    10. '   ' → logprob: -3.8446197509765625

Token 3692: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.31398478150367737
    2. 'emente' → logprob: -1.938984751701355
    3. 'ement' → logprob: -3.0639848709106445
    4. 'ément' → logprob: -3.3139848709106445
    5. 'mente' → logprob: -3.4389848709106445
    6. '[' → logprob: -6.3139848709106445
    7. 'ements' → logprob: -6.3139848709106445
    8. '```' → logprob: -7.0639848709106445
    9. 'ose' → logprob: -7.1889848709106445
    10. 'orte' → logprob: -7.1889848709106445

Token 3693: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.5848119258880615
    2. 'ment' → logprob: -0.8348119258880615
    3. 'mentation' → logprob: -5.459812164306641
    4. 'ments' → logprob: -5.834812164306641
    5. 'mentar' → logprob: -7.459812164306641
    6. 'm' → logprob: -8.08481216430664
    7. 'def' → logprob: -8.45981216430664
    8. 'mented' → logprob: -8.83481216430664
    9. '```' → logprob: -8.83481216430664
    10. 'x' → logprob: -9.58481216430664

Token 3694: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8365665078163147
    2. '2' → logprob: -1.08656644821167
    3. 'for' → logprob: -2.96156644821167
    4. 'max' → logprob: -3.08656644821167
    5. ' for' → logprob: -3.58656644821167
    6. '       ' → logprob: -3.71156644821167
    7. '```' → logprob: -4.08656644821167
    8. '
' → logprob: -4.46156644821167
    9. ' =' → logprob: -5.08656644821167
    10. ' max' → logprob: -5.08656644821167

Token 3695: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3342469036579132
    2. '       ' → logprob: -1.3342468738555908
    3. '           ' → logprob: -5.08424711227417
    4. ' for' → logprob: -5.33424711227417
    5. 'for' → logprob: -5.95924711227417
    6. '2' → logprob: -6.95924711227417
    7. ')' → logprob: -7.20924711227417
    8. '    ' → logprob: -7.33424711227417
    9. '
' → logprob: -7.45924711227417
    10. ',' → logprob: -7.70924711227417

Token 3696: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09996140748262405
    2. '       ' → logprob: -2.849961519241333
    3. '2' → logprob: -3.599961519241333
    4. 'for' (adapté à ' for') → logprob: -5.974961280822754
    5. '           ' → logprob: -6.349961280822754
    6. ' for' → logprob: -6.599961280822754
    7. '    ' → logprob: -6.974961280822754
    8. '1' → logprob: -7.849961280822754
    9. ')' → logprob: -8.099961280822754
    10. ' ' → logprob: -8.224961280822754

Token 3697: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06994232535362244
    2. ' i' → logprob: -2.6949422359466553
    3. '0' → logprob: -13.444942474365234
    4. ' ' → logprob: -13.694942474365234
    5. '_i' → logprob: -13.819942474365234
    6. '   ' → logprob: -13.944942474365234
    7. '	i' → logprob: -13.944942474365234
    8. '```' → logprob: -15.194942474365234
    9. ' in' → logprob: -16.444942474365234
    10. ' ' → logprob: -16.694942474365234

Token 3698: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11467917263507843
    2. 'in' → logprob: -2.2396790981292725
    3. '   ' → logprob: -7.364679336547852
    4. '[i' → logprob: -7.489679336547852
    5. '[' → logprob: -7.739679336547852
    6. ',' → logprob: -9.739679336547852
    7. '	in' → logprob: -10.489679336547852
    8. 'i' → logprob: -10.739679336547852
    9. '_in' → logprob: -10.989679336547852
    10. ' i' → logprob: -11.114679336547852

Token 3699: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00917710829526186
    2. ' range' → logprob: -5.009177207946777
    3. '0' → logprob: -6.009177207946777
    4. ' ' → logprob: -12.884177207946777
    5. '	range' → logprob: -18.50917625427246
    6. '   ' → logprob: -18.63417625427246
    7. '_range' → logprob: -18.75917625427246
    8. 'in' → logprob: -19.13417625427246
    9. '(range' → logprob: -19.25917625427246
    10. ' in' → logprob: -19.38417625427246

Token 3700: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.33801722526550293
    2. 'M' → logprob: -2.213017225265503
    3. ' M' → logprob: -2.963017225265503
    4. 'i' → logprob: -2.963017225265503
    5. '   ' → logprob: -3.588017225265503
    6. '(i' → logprob: -4.088017463684082
    7. ' i' → logprob: -4.713017463684082
    8. ',' → logprob: -4.838017463684082
    9. '0' → logprob: -5.463017463684082
    10. '1' → logprob: -6.213017463684082

Token 3701: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14114302396774292
    2. '):
' → logprob: -2.2661430835723877
    3. '):' → logprob: -3.6411430835723877
    4. ' -' → logprob: -6.641142845153809
    5. '   ' → logprob: -8.391142845153809
    6. '+' → logprob: -9.891142845153809
    7. ')' → logprob: -10.391142845153809
    8. ')[' → logprob: -11.016142845153809
    9. '
' → logprob: -11.516142845153809
    10. '1' → logprob: -11.516142845153809

Token 3702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '```' → logprob: -15.375000953674316
    5. '   ' → logprob: -15.750000953674316
    6. '-' → logprob: -17.000001907348633
    7. ')' → logprob: -17.250001907348633
    8. '
' → logprob: -18.125001907348633
    9. '#' → logprob: -18.375001907348633
    10. '１' → logprob: -19.750001907348633

Token 3703: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5361064076423645
    2. '):
' → logprob: -0.9111064076423645
    3. '   ' → logprob: -5.036106586456299
    4. '+' → logprob: -5.286106586456299
    5. ':' → logprob: -7.411106586456299
    6. '):
' → logprob: -7.911106586456299
    7. ' +' → logprob: -8.91110610961914
    8. '       ' → logprob: -9.41110610961914
    9. ')' → logprob: -9.91110610961914
    10. ':
' → logprob: -10.78610610961914

Token 3704: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01823224127292633
    2. '       ' → logprob: -4.643232345581055
    3. '```' → logprob: -5.143232345581055
    4. '   ' → logprob: -6.893232345581055
    5. ' for' → logprob: -7.018232345581055
    6. '    ' → logprob: -8.768232345581055
    7. ' ' → logprob: -8.768232345581055
    8. '	for' → logprob: -9.768232345581055
    9. 'for' → logprob: -9.768232345581055
    10. '    ' → logprob: -9.768232345581055

Token 3705: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7736567258834839
    2. ' for' → logprob: -1.1486567258834839
    3. '   ' → logprob: -1.8986567258834839
    4. '       ' → logprob: -3.0236568450927734
    5. '	for' → logprob: -4.273656845092773
    6. '```' → logprob: -4.773656845092773
    7. 'range' → logprob: -8.273656845092773
    8. '           ' → logprob: -9.023656845092773
    9. 'j' → logprob: -9.148656845092773
    10. '``' → logprob: -9.773656845092773

Token 3706: ' used' (ID: 2061)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004954866599291563
    2. ' j' → logprob: -8.375495910644531
    3. 'used' → logprob: -9.000495910644531
    4. 'prev' → logprob: -9.375495910644531
    5. 'curr' → logprob: -10.250495910644531
    6. 'cur' → logprob: -11.625495910644531
    7. 'current' → logprob: -12.000495910644531
    8. '   ' → logprob: -13.500495910644531
    9. '_j' → logprob: -13.625495910644531
    10. ' used' → logprob: -14.125495910644531

Token 3707: '_st' (ID: 2518)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016715355217456818
    2. '[' → logprob: -4.8917155265808105
    3. '[j' → logprob: -5.6417155265808105
    4. '```' → logprob: -6.2667155265808105
    5. ' in' → logprob: -7.0167155265808105
    6. ' [' → logprob: -7.2667155265808105
    7. '][' → logprob: -7.3917155265808105
    8. '       ' → logprob: -7.6417155265808105
    9. 'i' → logprob: -8.016715049743652
    10. 'in' → logprob: -8.766715049743652

Token 3708: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.4032128155231476
    2. 'op' → logprob: -1.7782127857208252
    3. 'ations' → logprob: -2.028212785720825
    4. 'ates' → logprob: -4.778213024139404
    5. 'atus' → logprob: -4.778213024139404
    6. '[
' → logprob: -5.653213024139404
    7. '[j' → logprob: -5.903213024139404
    8. 'ation' → logprob: -6.403213024139404
    9. '```' → logprob: -7.153213024139404
    10. 'ate' → logprob: -7.403213024139404

Token 3709: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22634124755859375
    2. 'in' → logprob: -1.6013412475585938
    3. '[' → logprob: -7.976341247558594
    4. '[in' → logprob: -8.601341247558594
    5. '       ' → logprob: -8.851341247558594
    6. '[i' → logprob: -10.101341247558594
    7. '[j' → logprob: -10.351341247558594
    8. 'for' → logprob: -10.476341247558594
    9. '   ' → logprob: -10.601341247558594
    10. ')' → logprob: -10.726341247558594

Token 3710: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005146946758031845
    2. 'M' → logprob: -5.7551469802856445
    3. ' range' → logprob: -6.2551469802856445
    4. '0' → logprob: -10.505146980285645
    5. 'K' → logprob: -11.255146980285645
    6. ' ' → logprob: -13.380146980285645
    7. '   ' → logprob: -13.630146980285645
    8. ' M' → logprob: -14.005146980285645
    9. '(M' → logprob: -14.130146980285645
    10. '(range' → logprob: -14.255146980285645

Token 3711: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0018944834591820836
    2. '(M' → logprob: -7.001894474029541
    3. 'K' → logprob: -8.0018949508667
    4. ' M' → logprob: -8.2518949508667
    5. '   ' → logprob: -8.5018949508667
    6. '0' → logprob: -9.2518949508667
    7. 'i' → logprob: -10.2518949508667
    8. ' ' → logprob: -11.1268949508667
    9. '           ' → logprob: -11.3768949508667
    10. '               ' → logprob: -12.7518949508667

Token 3712: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8579455018043518
    2. ',' → logprob: -1.357945442199707
    3. '):
' → logprob: -1.482945442199707
    4. ' +' → logprob: -3.482945442199707
    5. '][' → logprob: -4.232945442199707
    6. ')[' → logprob: -4.232945442199707
    7. '           ' → logprob: -4.607945442199707
    8. '       ' → logprob: -5.232945442199707
    9. '):' → logprob: -5.232945442199707
    10. ')' → logprob: -5.982945442199707

Token 3713: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.2603901015827432e-05
    2. '           ' → logprob: -11.875022888183594
    3. '       ' → logprob: -12.125022888183594
    4. ' K' → logprob: -12.625022888183594
    5. '   ' → logprob: -12.875022888183594
    6. '         ' → logprob: -14.375022888183594
    7. '
' → logprob: -14.375022888183594
    8. '     ' → logprob: -14.500022888183594
    9. '          ' → logprob: -14.875022888183594
    10. '               ' → logprob: -15.000022888183594

Token 3714: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00249289907515049
    2. ' +' → logprob: -6.002492904663086
    3. '           ' → logprob: -12.627492904663086
    4. '):
' → logprob: -12.752492904663086
    5. '       ' → logprob: -13.252492904663086
    6. '+
' → logprob: -13.502492904663086
    7. '               ' → logprob: -13.752492904663086
    8. ')+' → logprob: -13.877492904663086
    9. '                   ' → logprob: -14.127492904663086
    10. '{' → logprob: -14.377492904663086

Token 3715: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. ')' → logprob: -14.87500286102295
    4. '   ' → logprob: -16.125003814697266
    5. '):
' → logprob: -16.750003814697266
    6. '```' → logprob: -17.250003814697266
    7. '
' → logprob: -17.750003814697266
    8. ' )' → logprob: -18.750003814697266
    9. '           ' → logprob: -19.000003814697266
    10. '    ' → logprob: -19.000003814697266

Token 3716: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23658858239650726
    2. '+' → logprob: -2.236588478088379
    3. '):' → logprob: -2.361588478088379
    4. '           ' → logprob: -5.736588478088379
    5. '       ' → logprob: -5.986588478088379
    6. ' +' → logprob: -6.486588478088379
    7. ':' → logprob: -7.361588478088379
    8. ')' → logprob: -7.736588478088379
    9. '               ' → logprob: -8.736588478088379
    10. ':
' → logprob: -8.736588478088379

Token 3717: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.145293727517128
    2. '[' → logprob: -2.645293712615967
    3. '```' → logprob: -3.520293712615967
    4. '		' → logprob: -5.520293712615967
    5. '	       ' → logprob: -5.645293712615967
    6. '            ' → logprob: -5.895293712615967
    7. ' ' → logprob: -6.020293712615967
    8. 'for' → logprob: -6.020293712615967
    9. '               ' → logprob: -6.020293712615967
    10. '<|end|>' → logprob: -6.145293712615967

Token 3718: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9463214874267578
    2. ' if' → logprob: -1.4463214874267578
    3. '```' → logprob: -2.446321487426758
    4. '                           ' → logprob: -2.696321487426758
    5. '                               ' → logprob: -2.946321487426758
    6. '                       ' → logprob: -3.196321487426758
    7. '           ' → logprob: -3.321321487426758
    8. '               ' → logprob: -3.696321487426758
    9. '                   ' → logprob: -3.946321487426758
    10. 'for' → logprob: -4.071321487426758

Token 3719: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00691203773021698
    2. ' dp' → logprob: -5.0069122314453125
    3. '           ' → logprob: -8.631912231445312
    4. '               ' → logprob: -11.506912231445312
    5. '                   ' → logprob: -12.506912231445312
    6. 'not' → logprob: -13.506912231445312
    7. ' not' → logprob: -14.006912231445312
    8. '(dp' → logprob: -14.256912231445312
    9. '                           ' → logprob: -14.756912231445312
    10. '                       ' → logprob: -15.006912231445312

Token 3720: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4060561776859686e-05
    2. '[' → logprob: -10.500043869018555
    3. '][' → logprob: -11.875043869018555
    4. '```' → logprob: -12.000043869018555
    5. ' [' → logprob: -13.750043869018555
    6. 'i' → logprob: -13.875043869018555
    7. ')[' → logprob: -14.875043869018555
    8. '[
' → logprob: -15.875043869018555
    9. '[I' → logprob: -16.125043869018555
    10. '[u' → logprob: -16.375043869018555

Token 3721: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01290924847126007
    2. '[i' → logprob: -4.387909412384033
    3. '[' → logprob: -8.512908935546875
    4. '           ' → logprob: -9.387908935546875
    5. ']' → logprob: -9.887908935546875
    6. '```' → logprob: -11.012908935546875
    7. 'i' → logprob: -11.512908935546875
    8. '               ' → logprob: -11.887908935546875
    9. ' ][' → logprob: -11.887908935546875
    10. '   ' → logprob: -12.512908935546875

Token 3722: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.7432603272027336e-06
    2. ' used' → logprob: -13.375001907348633
    3. '_used' → logprob: -16.625001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '-used' → logprob: -18.125001907348633
    6. '.used' → logprob: -18.250001907348633
    7. '           ' → logprob: -18.375001907348633
    8. '               ' → logprob: -19.625001907348633
    9. '```' → logprob: -19.875001907348633
    10. '
' → logprob: -19.875001907348633

Token 3723: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -3.190178904333152e-05
    2. 'st' → logprob: -11.125031471252441
    3. ']_' → logprob: -12.125031471252441
    4. ' _' → logprob: -12.250031471252441
    5. '][' → logprob: -13.375031471252441
    6. '_' → logprob: -13.750031471252441
    7. ']' → logprob: -13.875031471252441
    8. '_s' → logprob: -14.250031471252441
    9. '][_' → logprob: -14.375031471252441
    10. '```' → logprob: -15.000031471252441

Token 3724: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0001628956088097766
    2. 'op' → logprob: -9.250163078308105
    3. 's' → logprob: -10.750163078308105
    4. ']' → logprob: -11.125163078308105
    5. '_ops' → logprob: -11.875163078308105
    6. 'o' → logprob: -12.250163078308105
    7. 'p' → logprob: -13.500163078308105
    8. 'ps' → logprob: -13.500163078308105
    9. '```' → logprob: -13.500163078308105
    10. '_' → logprob: -13.625163078308105

Token 3725: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.436289519071579
    2. ']==' → logprob: -1.0612895488739014
    3. '==' → logprob: -5.436289310455322
    4. ']!=' → logprob: -6.186289310455322
    5. ' ==' → logprob: -7.936289310455322
    6. ']:
' → logprob: -8.06128978729248
    7. 'is' → logprob: -9.06128978729248
    8. '[' → logprob: -9.93628978729248
    9. '```' → logprob: -10.06128978729248
    10. ' ]' → logprob: -10.18628978729248

Token 3726: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.161061629652977
    2. ' ==' → logprob: -1.9110616445541382
    3. '==
' → logprob: -8.28606128692627
    4. '!=' → logprob: -8.41106128692627
    5. ']==' → logprob: -9.16106128692627
    6. '===' → logprob: -9.91106128692627
    7. ' !=' → logprob: -10.16106128692627
    8. ' is' → logprob: -10.41106128692627
    9. 'is' → logprob: -10.41106128692627
    10. ')==' → logprob: -10.53606128692627

Token 3727: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0017365860985592008
    2. '0' → logprob: -7.251736640930176
    3. ' INF' → logprob: -8.001736640930176
    4. 'inf' → logprob: -8.126736640930176
    5. 'IN' → logprob: -9.251736640930176
    6. '10' → logprob: -9.501736640930176
    7. 'float' → logprob: -10.001736640930176
    8. '_INF' → logprob: -10.001736640930176
    9. '   ' → logprob: -10.751736640930176
    10. ' ' → logprob: -10.876736640930176

Token 3728: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19013755023479462
    2. ':' → logprob: -2.4401376247406006
    3. ':
' → logprob: -3.5651376247406006
    4. '                               ' → logprob: -4.1901373863220215
    5. '                       ' → logprob: -4.3151373863220215
    6. '           ' → logprob: -4.8151373863220215
    7. '                   ' → logprob: -4.9401373863220215
    8. '                           ' → logprob: -5.5651373863220215
    9. ' and' → logprob: -6.3151373863220215
    10. '                ' → logprob: -7.0651373863220215

Token 3729: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011939332820475101
    2. '                   ' → logprob: -5.761939525604248
    3. '                       ' → logprob: -6.261939525604248
    4. '			' → logprob: -6.886939525604248
    5. '                               ' → logprob: -6.886939525604248
    6. '	           ' → logprob: -6.886939525604248
    7. '                           ' → logprob: -7.136939525604248
    8. '```' → logprob: -7.636939525604248
    9. '                ' → logprob: -7.886939525604248
    10. '	            ' → logprob: -8.51193904876709

Token 3730: ' continue' (ID: 4901)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5063983798027039
    2. 'continue' (adapté à ' continue') → logprob: -1.8813984394073486
    3. '                           ' → logprob: -2.3813984394073486
    4. '                                   ' → logprob: -3.2563984394073486
    5. '                                       ' → logprob: -3.2563984394073486
    6. ' continue' → logprob: -3.5063984394073486
    7. '                       ' → logprob: -4.1313982009887695
    8. '                                           ' → logprob: -4.3813982009887695
    9. '               ' → logprob: -5.2563982009887695
    10. '                   ' → logprob: -5.3813982009887695

Token 3731: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018280694261193275
    2. '           ' → logprob: -5.143280506134033
    3. '			' → logprob: -5.643280506134033
    4. '	           ' → logprob: -6.393280506134033
    5. '```' → logprob: -6.768280506134033
    6. '                       ' → logprob: -6.893280506134033
    7. ' for' → logprob: -6.893280506134033
    8. '		       ' → logprob: -7.393280506134033
    9. '<|end|>' → logprob: -7.643280506134033
    10. '		' → logprob: -7.643280506134033

Token 3732: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40308907628059387
    2. '           ' → logprob: -1.6530890464782715
    3. '```' → logprob: -2.5280890464782715
    4. '                   ' → logprob: -4.2780890464782715
    5. '                       ' → logprob: -4.5280890464782715
    6. '                           ' → logprob: -5.1530890464782715
    7. '		' → logprob: -5.4030890464782715
    8. '            ' → logprob: -5.4030890464782715
    9. 'for' → logprob: -5.7780890464782715
    10. '			' → logprob: -5.9030890464782715

Token 3733: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8688909411430359
    2. 'for' → logprob: -1.2438910007476807
    3. '               ' → logprob: -2.1188910007476807
    4. '           ' → logprob: -3.1188910007476807
    5. '                       ' → logprob: -3.2438910007476807
    6. '                               ' → logprob: -3.3688910007476807
    7. '                           ' → logprob: -3.8688910007476807
    8. '                   ' → logprob: -4.243890762329102
    9. ' ' → logprob: -5.118890762329102
    10. '                                   ' → logprob: -5.368890762329102

Token 3734: ' Max' (ID: 10093)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33275312185287476
    2. '           ' → logprob: -2.0827531814575195
    3. ' for' → logprob: -2.0827531814575195
    4. '                           ' → logprob: -4.3327531814575195
    5. '                   ' → logprob: -5.3327531814575195
    6. '               ' → logprob: -5.4577531814575195
    7. 'range' → logprob: -5.5827531814575195
    8. '                       ' → logprob: -6.0827531814575195
    9. '                                   ' → logprob: -6.5827531814575195
    10. '```' → logprob: -6.8327531814575195

Token 3735: ' stops' (ID: 29924)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.28093624114990234
    2. 'x' → logprob: -1.5309362411499023
    3. '_stop' → logprob: -4.155936241149902
    4. '_st' → logprob: -5.280936241149902
    5. '_arr' → logprob: -5.530936241149902
    6. 'arr' → logprob: -6.280936241149902
    7. 'stop' → logprob: -7.530936241149902
    8. 'st' → logprob: -7.905936241149902
    9. ' x' → logprob: -8.155936241149902
    10. ' stops' → logprob: -8.780936241149902

Token 3736: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2815474271774292
    2. '=' → logprob: -2.4065475463867188
    3. ' in' → logprob: -2.7815475463867188
    4. '+' → logprob: -3.4065475463867188
    5. ' +' → logprob: -3.9065475463867188
    6. 'in' → logprob: -4.781547546386719
    7. ' possible' → logprob: -5.281547546386719
    8. 'possible' → logprob: -5.531547546386719
    9. '_in' → logprob: -5.656547546386719
    10. ' dans' → logprob: -6.281547546386719

Token 3737: ' interval' (ID: 17116)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14124973118305206
    2. ' i' → logprob: -2.891249656677246
    3. 'interval' → logprob: -3.266249656677246
    4. 'range' → logprob: -4.516249656677246
    5. '[i' → logprob: -4.641249656677246
    6. '   ' → logprob: -5.141249656677246
    7. 'l' → logprob: -5.516249656677246
    8. ' range' → logprob: -6.766249656677246
    9. 'S' → logprob: -7.266249656677246
    10. ' interval' → logprob: -7.391249656677246

Token 3738: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.724747359752655
    2. ' =' → logprob: -2.2247474193573
    3. '[' → logprob: -2.5997474193573
    4. '           ' → logprob: -3.0997474193573
    5. '=' → logprob: -3.2247474193573
    6. '   ' → logprob: -3.5997474193573
    7. ',' → logprob: -3.5997474193573
    8. ')' → logprob: -3.7247474193573
    9. 'x' → logprob: -3.8497474193573
    10. '][' → logprob: -3.8497474193573

Token 3739: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044862162321805954
    2. '```' → logprob: -4.169862270355225
    3. '=' → logprob: -4.544862270355225
    4. '           ' → logprob: -5.044862270355225
    5. ' in' → logprob: -5.544862270355225
    6. ' for' → logprob: -6.794862270355225
    7. ' +' → logprob: -6.794862270355225
    8. '+' → logprob: -7.044862270355225
    9. ')' → logprob: -8.044861793518066
    10. ':' → logprob: -8.044861793518066

Token 3740: ' max' (ID: 2999)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.39392274618148804
    2. ' intervals' → logprob: -1.6439228057861328
    3. 'interval' → logprob: -2.893922805786133
    4. 'min' → logprob: -2.893922805786133
    5. ' interval' → logprob: -5.268922805786133
    6. ' range' → logprob: -5.893922805786133
    7. ' =' → logprob: -6.268922805786133
    8. ' max' → logprob: -6.268922805786133
    9. 'range' → logprob: -6.768922805786133
    10. 'max' (adapté à ' max') → logprob: -7.018922805786133

Token 3741: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.11389537900686264
    2. '_st' → logprob: -2.3638954162597656
    3. '_stop' → logprob: -4.988895416259766
    4. 'x' → logprob: -5.863895416259766
    5. '_arr' → logprob: -6.113895416259766
    6. '_len' → logprob: -7.363895416259766
    7. 'st' → logprob: -7.488895416259766
    8. '(' → logprob: -9.488895416259766
    9. '(x' → logprob: -9.613895416259766
    10. 'arr' → logprob: -9.738895416259766

Token 3742: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269386112689972
    2. '=' → logprob: -2.126938581466675
    3. '=max' → logprob: -12.251938819885254
    4. '=int' → logprob: -13.001938819885254
    5. '=min' → logprob: -13.501938819885254
    6. ')' → logprob: -14.751938819885254
    7. ',' → logprob: -14.876938819885254
    8. '=i' → logprob: -15.251938819885254
    9. '           ' → logprob: -15.501938819885254
    10. '   ' → logprob: -15.876938819885254

Token 3743: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06254018098115921
    2. ' min' → logprob: -2.812540292739868
    3. 'used' → logprob: -8.062540054321289
    4. 'max' → logprob: -8.562540054321289
    5. ' used' → logprob: -10.312540054321289
    6. 'K' → logprob: -11.562540054321289
    7. '(min' → logprob: -12.187540054321289
    8. '2' → logprob: -12.312540054321289
    9. ' K' → logprob: -12.937540054321289
    10. '	min' → logprob: -12.937540054321289

Token 3744: '(K' (ID: 28797)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3095523715019226
    2. '(K' → logprob: -1.5595524311065674
    3. 'interval' → logprob: -3.9345524311065674
    4. ' K' → logprob: -3.9345524311065674
    5. '(interval' → logprob: -4.809552192687988
    6. 'used' → logprob: -5.684552192687988
    7. ' intervals' → logprob: -6.059552192687988
    8. ' (' → logprob: -6.309552192687988
    9. '(' → logprob: -7.559552192687988
    10. ' used' → logprob: -7.934552192687988

Token 3745: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03364719823002815
    2. '+' → logprob: -3.658647298812866
    3. ' +' → logprob: -5.908647060394287
    4. ',i' → logprob: -6.283647060394287
    5. ' ,' → logprob: -6.408647060394287
    6. '   ' → logprob: -8.283647537231445
    7. ',
' → logprob: -8.408647537231445
    8. '[i' → logprob: -9.283647537231445
    9. ',K' → logprob: -9.408647537231445
    10. ',min' → logprob: -9.408647537231445

Token 3746: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.004185482859611511
    2. ' used' → logprob: -5.879185676574707
    3. 'M' → logprob: -6.879185676574707
    4. 'i' → logprob: -9.004185676574707
    5. 'user' → logprob: -9.379185676574707
    6. ' M' → logprob: -10.129185676574707
    7. '(M' → logprob: -10.129185676574707
    8. '_used' → logprob: -10.879185676574707
    9. 'K' → logprob: -11.504185676574707
    10. '(i' → logprob: -12.004185676574707

Token 3747: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0004035017918795347
    2. 'st' → logprob: -7.87540340423584
    3. 'Stops' → logprob: -12.25040340423584
    4. '[i' → logprob: -12.62540340423584
    5. '_s' → logprob: -12.75040340423584
    6. 'St' → logprob: -13.25040340423584
    7. '-st' → logprob: -13.37540340423584
    8. '_stop' → logprob: -13.75040340423584
    9. '_used' → logprob: -13.75040340423584
    10. '   ' → logprob: -14.12540340423584

Token 3748: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.011936862021684647
    2. 'op' → logprob: -6.011936664581299
    3. '[i' → logprob: -6.261936664581299
    4. '_used' → logprob: -6.386936664581299
    5. '_ops' → logprob: -6.886936664581299
    6. '_st' → logprob: -6.886936664581299
    7. '   ' → logprob: -7.511936664581299
    8. 'opped' → logprob: -8.011937141418457
    9. '+' → logprob: -8.136937141418457
    10. ']' → logprob: -8.386937141418457

Token 3749: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1648276150226593
    2. ' +' → logprob: -1.914827585220337
    3. ',' → logprob: -5.414827823638916
    4. ')+' → logprob: -9.414827346801758
    5. ')' → logprob: -10.414827346801758
    6. '           ' → logprob: -11.789827346801758
    7. '```' → logprob: -11.914827346801758
    8. '   ' → logprob: -12.664827346801758
    9. ']+' → logprob: -12.914827346801758
    10. ' ,' → logprob: -12.914827346801758

Token 3750: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0069136954843997955
    2. '2' → logprob: -5.006913661956787
    3. '(M' → logprob: -9.881914138793945
    4. '(i' → logprob: -10.131914138793945
    5. 'M' → logprob: -10.631914138793945
    6. ' ' → logprob: -10.756914138793945
    7. 'i' → logprob: -10.881914138793945
    8. '   ' → logprob: -10.881914138793945
    9. '(' → logprob: -11.756914138793945
    10. ' (' → logprob: -12.506914138793945

Token 3751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04418822377920151
    2. '2' → logprob: -3.1691882610321045
    3. 'M' → logprob: -7.669188022613525
    4. '(M' → logprob: -8.169188499450684
    5. '(' → logprob: -8.794188499450684
    6. '(i' → logprob: -8.919188499450684
    7. ' (' → logprob: -9.794188499450684
    8. 'i' → logprob: -10.419188499450684
    9. ' ' → logprob: -10.544188499450684
    10. '   ' → logprob: -11.669188499450684

Token 3752: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5265425443649292
    2. ',' → logprob: -1.0265425443649292
    3. '+' → logprob: -3.9015426635742188
    4. ')
' → logprob: -4.276542663574219
    5. '           ' → logprob: -5.151542663574219
    6. '):
' → logprob: -5.401542663574219
    7. ' +' → logprob: -5.901542663574219
    8. '               ' → logprob: -6.651542663574219
    9. ')+' → logprob: -7.026542663574219
    10. '```' → logprob: -7.276542663574219

Token 3753: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1450434774160385
    2. '2' → logprob: -2.64504337310791
    3. '0' → logprob: -3.02004337310791
    4. '(i' → logprob: -4.77004337310791
    5. 'M' → logprob: -6.14504337310791
    6. '(M' → logprob: -6.39504337310791
    7. '(' → logprob: -6.89504337310791
    8. 'i' → logprob: -7.39504337310791
    9. ' (' → logprob: -8.27004337310791
    10. 'x' → logprob: -8.52004337310791

Token 3754: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08506756275892258
    2. '0' → logprob: -2.9600675106048584
    3. 'M' → logprob: -3.9600675106048584
    4. '(M' → logprob: -5.7100677490234375
    5. '(i' → logprob: -5.7100677490234375
    6. '(' → logprob: -6.4600677490234375
    7. '2' → logprob: -7.0850677490234375
    8. 'i' → logprob: -7.7100677490234375
    9. '#' → logprob: -7.7100677490234375
    10. ' (' → logprob: -8.710067749023438

Token 3755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05832931771874428
    2. ')' → logprob: -3.5583293437957764
    3. ')
' → logprob: -4.933329105377197
    4. '):
' → logprob: -4.933329105377197
    5. '           ' → logprob: -5.308329105377197
    6. '               ' → logprob: -5.433329105377197
    7. ' ,' → logprob: -6.558329105377197
    8. '```' → logprob: -6.808329105377197
    9. '):' → logprob: -7.683329105377197
    10. ',
' → logprob: -7.933329105377197

Token 3756: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0001625379954930395
    2. ' intervals' → logprob: -8.875162124633789
    3. '           ' → logprob: -11.500162124633789
    4. '(interval' → logprob: -12.875162124633789
    5. '       ' → logprob: -13.000162124633789
    6. '   ' → logprob: -13.250162124633789
    7. '               ' → logprob: -13.375162124633789
    8. 'min' → logprob: -13.500162124633789
    9. 'segments' → logprob: -14.250162124633789
    10. '          ' → logprob: -15.500162124633789

Token 3757: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. 'i' → logprob: -12.750007629394531
    3. '   ' → logprob: -13.625007629394531
    4. '```' → logprob: -13.750007629394531
    5. '[' → logprob: -15.125007629394531
    6. '(i' → logprob: -15.375007629394531
    7. '	i' → logprob: -15.625007629394531
    8. ',i' → logprob: -15.625007629394531
    9. '{i' → logprob: -15.625007629394531
    10. '=i' → logprob: -15.750007629394531

Token 3758: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12163875252008438
    2. ']+' → logprob: -2.746638774871826
    3. ']' → logprob: -4.121638774871826
    4. ' +' → logprob: -4.246638774871826
    5. ')+' → logprob: -4.496638774871826
    6. ')' → logprob: -5.121638774871826
    7. '[i' → logprob: -6.621638774871826
    8. '])' → logprob: -7.746638774871826
    9. ')]' → logprob: -8.246638298034668
    10. '[' → logprob: -8.246638298034668

Token 3759: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18242207169532776
    2. ' +' → logprob: -1.8074220418930054
    3. ')+' → logprob: -6.557422161102295
    4. ')' → logprob: -6.807422161102295
    5. '[' → logprob: -10.807421684265137
    6. '()+' → logprob: -10.932421684265137
    7. ']+' → logprob: -11.182421684265137
    8. '):
' → logprob: -11.182421684265137
    9. '           ' → logprob: -11.307421684265137
    10. '   ' → logprob: -11.307421684265137

Token 3760: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018156616017222404
    2. '2' → logprob: -4.0181565284729
    3. ' ' → logprob: -12.768157005310059
    4. '   ' → logprob: -13.143157005310059
    5. '0' → logprob: -14.268157005310059
    6. '```' → logprob: -14.893157005310059
    7. '
' → logprob: -15.143157005310059
    8. '           ' → logprob: -15.768157005310059
    9. '       ' → logprob: -16.393156051635742
    10. '  ' → logprob: -16.768156051635742

Token 3761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.750000953674316
    3. '2' → logprob: -16.125
    4. '0' → logprob: -16.25
    5. ' ' → logprob: -16.5
    6. '
' → logprob: -18.125
    7. '```' → logprob: -18.25
    8. '           ' → logprob: -19.125
    9. '  ' → logprob: -19.5
    10. '       ' → logprob: -20.0

Token 3762: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2797335982322693
    2. '):
' → logprob: -1.904733657836914
    3. '           ' → logprob: -3.529733657836914
    4. ')
' → logprob: -3.654733657836914
    5. '):' → logprob: -4.029733657836914
    6. '+' → logprob: -4.279733657836914
    7. '               ' → logprob: -5.654733657836914
    8. ' +' → logprob: -6.154733657836914
    9. '```' → logprob: -7.279733657836914
    10. '                   ' → logprob: -7.904733657836914

Token 3763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14649465680122375
    2. ')' → logprob: -3.1464946269989014
    3. '                           ' → logprob: -3.5214946269989014
    4. '               ' → logprob: -3.6464946269989014
    5. '                               ' → logprob: -5.2714948654174805
    6. '                   ' → logprob: -5.2714948654174805
    7. '                       ' → logprob: -5.5214948654174805
    8. '            ' → logprob: -5.8964948654174805
    9. '):
' → logprob: -5.8964948654174805
    10. 'for' → logprob: -6.0214948654174805

Token 3764: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5654778480529785
    2. 'for' → logprob: -1.5654778480529785
    3. '           ' → logprob: -2.0654778480529785
    4. '                           ' → logprob: -3.6904778480529785
    5. '```' → logprob: -4.0654778480529785
    6. '                               ' → logprob: -4.4404778480529785
    7. '		' → logprob: -4.5654778480529785
    8. '                       ' → logprob: -4.6904778480529785
    9. '               ' → logprob: -5.3154778480529785
    10. '                   ' → logprob: -5.5654778480529785

Token 3765: ' x' (ID: 1215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20476678013801575
    2. '2' → logprob: -2.4547667503356934
    3. 'min' → logprob: -3.3297667503356934
    4. '1' → logprob: -3.9547667503356934
    5. '           ' → logprob: -4.079766750335693
    6. 'for' → logprob: -4.454766750335693
    7. 'range' → logprob: -5.329766750335693
    8. 'x' → logprob: -6.454766750335693
    9. '0' → logprob: -6.704766750335693
    10. '               ' → logprob: -7.079766750335693

Token 3766: ' ≥' (ID: 99731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0193264652043581
    2. ' =' → logprob: -4.144326686859131
    3. ' in' → logprob: -6.269326686859131
    4. 'range' → logprob: -7.644326686859131
    5. 'in' → logprob: -8.019326210021973
    6. '2' → logprob: -8.519326210021973
    7. 'for' → logprob: -8.519326210021973
    8. ')' → logprob: -9.894326210021973
    9. ' range' → logprob: -10.394326210021973
    10. '_range' → logprob: -10.769326210021973

Token 3767: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.191489642835222e-05
    2. ' ' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.375041961669922
    4. '```' → logprob: -16.250041961669922
    5. '           ' → logprob: -17.750041961669922
    6. '  ' → logprob: -17.750041961669922
    7. '                   ' → logprob: -18.000041961669922
    8. '                           ' → logprob: -18.250041961669922
    9. '       ' → logprob: -18.250041961669922
    10. '                               ' → logprob: -18.375041961669922

Token 3768: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012582694762386382
    2. ' ' → logprob: -9.250125885009766
    3. '   ' → logprob: -10.500125885009766
    4. '  ' → logprob: -14.250125885009766
    5. '```' → logprob: -14.875125885009766
    6. '     ' → logprob: -15.500125885009766
    7. '    ' → logprob: -15.625125885009766
    8. '       ' → logprob: -15.625125885009766
    9. '           ' → logprob: -15.875125885009766
    10. '                   ' → logprob: -17.000125885009766

Token 3769: ' minimum' (ID: 11085)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.746616244316101
    2. '           ' → logprob: -1.871616244316101
    3. ':' → logprob: -2.3716163635253906
    4. '2' → logprob: -2.3716163635253906
    5. '```' → logprob: -2.6216163635253906
    6. ':
' → logprob: -2.7466163635253906
    7. 'for' → logprob: -2.7466163635253906
    8. ',' → logprob: -2.7466163635253906
    9. ' for' → logprob: -2.8716163635253906
    10. '               ' → logprob: -3.7466163635253906

Token 3770: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45786312222480774
    2. ':' → logprob: -2.3328630924224854
    3. '               ' → logprob: -3.0828630924224854
    4. ',' → logprob: -3.0828630924224854
    5. '=' → logprob: -3.4578630924224854
    6. ':
' → logprob: -4.0828633308410645
    7. '                   ' → logprob: -4.2078633308410645
    8. ' ' → logprob: -4.2078633308410645
    9. '2' → logprob: -4.4578633308410645
    10. ' =' → logprob: -4.4578633308410645

Token 3771: ' on' (ID: 402)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14425724744796753
    2. ' ' → logprob: -2.0192573070526123
    3. ' ' → logprob: -6.894257068634033
    4. '```' → logprob: -8.144257545471191
    5. ' x' → logprob: -9.894257545471191
    6. '                             ' → logprob: -10.644257545471191
    7. '   ' → logprob: -10.769257545471191
    8. ' two' → logprob: -10.894257545471191
    9. ' deux' → logprob: -11.019257545471191
    10. ' i' → logprob: -11.269257545471191

Token 3772: ' a' (ID: 261)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.8256866931915283
    2. ' doit' → logprob: -0.9506866931915283
    3. ' continue' → logprob: -2.7006866931915283
    4. 'continue' → logprob: -3.2006866931915283
    5. ' chois' → logprob: -4.200686454772949
    6. 'cho' → logprob: -4.700686454772949
    7. ' cho' → logprob: -5.825686454772949
    8. ' est' → logprob: -5.950686454772949
    9. ' choisi' → logprob: -5.950686454772949
    10. ' do' → logprob: -6.075686454772949

Token 3773: ' S' (ID: 336)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3400069773197174
    2. ' les' → logprob: -2.4650070667266846
    3. '2' → logprob: -2.9650070667266846
    4. 'de' → logprob: -3.2150070667266846
    5. 'au' → logprob: -3.8400070667266846
    6. 'x' → logprob: -3.9650070667266846
    7. ' au' → logprob: -4.3400068283081055
    8. 'dé' → logprob: -4.4650068283081055
    9. ' ' → logprob: -5.0900068283081055
    10. 'S' → logprob: -5.0900068283081055

Token 3774: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014716439181938767
    2. '[' → logprob: -9.000146865844727
    3. '```' → logprob: -11.625146865844727
    4. ' [' → logprob: -12.125146865844727
    5. '   ' → logprob: -12.375146865844727
    6. '
' → logprob: -13.875146865844727
    7. '[
' → logprob: -14.000146865844727
    8. '           ' → logprob: -14.625146865844727
    9. '       ' → logprob: -15.125146865844727
    10. 'i' → logprob: -15.125146865844727

Token 3775: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8317587375640869
    2. ',' → logprob: -1.956758737564087
    3. '[i' → logprob: -1.956758737564087
    4. '+' → logprob: -2.831758737564087
    5. '],' → logprob: -2.831758737564087
    6. '][' → logprob: -3.331758737564087
    7. ']+' → logprob: -3.706758737564087
    8. ' ,' → logprob: -3.956758737564087
    9. '   ' → logprob: -4.331758499145508
    10. ' ' → logprob: -4.706758499145508

Token 3776: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.1638879776000977
    2. ',' → logprob: -1.2888879776000977
    3. '           ' → logprob: -1.4138879776000977
    4. ' ' → logprob: -3.0388879776000977
    5. '```' → logprob: -3.5388879776000977
    6. ' ,' → logprob: -3.9138879776000977
    7. '
' → logprob: -4.163887977600098
    8. 'and' → logprob: -4.663887977600098
    9. '   ' → logprob: -5.038887977600098
    10. '               ' → logprob: -5.288887977600098

Token 3777: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07208089530467987
    2. ' S' → logprob: -2.6970808506011963
    3. ' ' → logprob: -6.447081089019775
    4. ' ' → logprob: -8.322080612182617
    5. '   ' → logprob: -9.447080612182617
    6. '`' → logprob: -10.197080612182617
    7. 'i' → logprob: -10.697080612182617
    8. '           ' → logprob: -11.072080612182617
    9. 's' → logprob: -11.322080612182617
    10. '             ' → logprob: -11.572080612182617

Token 3778: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00039885283331386745
    2. '[' → logprob: -8.500398635864258
    3. '+' → logprob: -9.500398635864258
    4. '```' → logprob: -9.750398635864258
    5. 'i' → logprob: -10.250398635864258
    6. '``' → logprob: -11.875398635864258
    7. '[
' → logprob: -12.375398635864258
    8. '`' → logprob: -12.750398635864258
    9. '{i' → logprob: -12.750398635864258
    10. '   ' → logprob: -13.250398635864258

Token 3779: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5413217544555664
    2. '[i' → logprob: -1.5413217544555664
    3. ']' → logprob: -1.9163217544555664
    4. ']+' → logprob: -4.416321754455566
    5. '])' → logprob: -4.791321754455566
    6. '+
' → logprob: -5.416321754455566
    7. '   ' → logprob: -5.791321754455566
    8. ')' → logprob: -5.791321754455566
    9. '[' → logprob: -5.791321754455566
    10. ' +' → logprob: -6.166321754455566

Token 3780: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.500001907348633
    4. '
' → logprob: -16.250001907348633
    5. '```' → logprob: -16.250001907348633
    6. '       ' → logprob: -17.875001907348633
    7. '           ' → logprob: -18.000001907348633
    8. '+' → logprob: -18.000001907348633
    9. '2' → logprob: -18.125001907348633
    10. '     ' → logprob: -18.375001907348633

Token 3781: ']
' (ID: 1592)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1820731163024902
    2. ')' → logprob: -1.8070731163024902
    3. '           ' → logprob: -2.6820731163024902
    4. '
' → logprob: -2.8070731163024902
    5. ',' → logprob: -2.9320731163024902
    6. ' and' → logprob: -3.1820731163024902
    7. '):' → logprob: -3.1820731163024902
    8. '               ' → logprob: -3.3070731163024902
    9. ':
' → logprob: -3.4320731163024902
    10. ':' → logprob: -3.5570731163024902

Token 3782: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7033725380897522
    2. '```' → logprob: -1.4533724784851074
    3. ':' → logprob: -3.0783724784851074
    4. ',' → logprob: -3.2033724784851074
    5. '                           ' → logprob: -3.4533724784851074
    6. '[' → logprob: -4.078372478485107
    7. ')' → logprob: -4.203372478485107
    8. '               ' → logprob: -4.328372478485107
    9. 'for' → logprob: -4.578372478485107
    10. '                       ' → logprob: -4.578372478485107

Token 3783: ' #' (ID: 1069)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8889573812484741
    2. 'for' → logprob: -1.1389573812484741
    3. ' for' → logprob: -2.6389575004577637
    4. '           ' → logprob: -3.0139575004577637
    5. '```' → logprob: -3.0139575004577637
    6. '               ' → logprob: -3.3889575004577637
    7. 'x' → logprob: -4.513957500457764
    8. '                   ' → logprob: -4.513957500457764
    9. ' ' → logprob: -4.638957500457764
    10. '                           ' → logprob: -4.888957500457764

Token 3784: ' On' (ID: 2160)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6711202263832092
    2. '           ' → logprob: -2.2961201667785645
    3. 'for' → logprob: -2.2961201667785645
    4. ' for' → logprob: -2.4211201667785645
    5. '               ' → logprob: -3.4211201667785645
    6. '                           ' → logprob: -3.6711201667785645
    7. '                   ' → logprob: -3.7961201667785645
    8. '```' → logprob: -3.9211201667785645
    9. ' x' → logprob: -4.0461201667785645
    10. 'x' → logprob: -4.2961201667785645

Token 3785: ' augmente' (ID: 150199)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3012540340423584
    2. 'for' → logprob: -2.1762540340423584
    3. ' range' → logprob: -2.8012540340423584
    4. 'continue' → logprob: -2.8012540340423584
    5. ' for' → logprob: -4.9262542724609375
    6. ' continue' → logprob: -5.1762542724609375
    7. '   ' → logprob: -6.3012542724609375
    8. '=' → logprob: -6.5512542724609375
    9. '```' → logprob: -6.5512542724609375
    10. '       ' → logprob: -6.6762542724609375

Token 3786: ' de' (ID: 334)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11664438247680664
    2. 'x' → logprob: -3.1166443824768066
    3. '               ' → logprob: -3.3666443824768066
    4. ' ' → logprob: -4.366644382476807
    5. ' x' → logprob: -5.241644382476807
    6. 'from' → logprob: -5.866644382476807
    7. '```' → logprob: -5.866644382476807
    8. '           ' → logprob: -5.991644382476807
    9. ' from' → logprob: -6.616644382476807
    10. '                   ' → logprob: -7.366644382476807

Token 3787: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18012650310993195
    2. ' ' → logprob: -1.8051265478134155
    3. '1' → logprob: -8.305126190185547
    4. '```' → logprob: -10.430126190185547
    5. '           ' → logprob: -10.930126190185547
    6. ' ' → logprob: -11.180126190185547
    7. '   ' → logprob: -11.430126190185547
    8. '               ' → logprob: -11.680126190185547
    9. '`' → logprob: -12.430126190185547
    10. ' deux' → logprob: -12.555126190185547

Token 3788: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00037085101939737797
    2. ' ' → logprob: -8.125370979309082
    3. '   ' → logprob: -9.750370979309082
    4. '```' → logprob: -11.500370979309082
    5. '       ' → logprob: -13.875370979309082
    6. '           ' → logprob: -14.000370979309082
    7. '
' → logprob: -14.250370979309082
    8. '     ' → logprob: -14.375370979309082
    9. '  ' → logprob: -14.625370979309082
    10. 'range' → logprob: -14.750370979309082

Token 3789: ' à' (ID: 1221)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -1.0608742237091064
    2. '+' → logprob: -1.8108742237091064
    3. ' ' → logprob: -2.9358742237091064
    4. ',' → logprob: -2.9358742237091064
    5. '               ' → logprob: -3.0608742237091064
    6. ' +' → logprob: -3.4358742237091064
    7. '                   ' → logprob: -3.5608742237091064
    8. 'for' → logprob: -3.5608742237091064
    9. '=' → logprob: -3.5608742237091064
    10. '           ' → logprob: -3.6858742237091064

Token 3790: ' max' (ID: 2999)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.13257022202014923
    2. '(interval' → logprob: -2.507570266723633
    3. ' intervals' → logprob: -3.257570266723633
    4. 'max' → logprob: -6.007570266723633
    5. '(max' → logprob: -7.007570266723633
    6. ' (' → logprob: -8.632570266723633
    7. ' max' → logprob: -9.132570266723633
    8. 'K' → logprob: -9.257570266723633
    9. '   ' → logprob: -9.257570266723633
    10. '1' → logprob: -9.757570266723633

Token 3791: '_possible' (ID: 185849)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.013925834558904171
    2. 'x' → logprob: -5.138926029205322
    3. '   ' → logprob: -5.763926029205322
    4. '=' → logprob: -6.763926029205322
    5. ' ' → logprob: -6.763926029205322
    6. '+' → logprob: -6.888926029205322
    7. '_' → logprob: -8.013925552368164
    8. ' x' → logprob: -8.388925552368164
    9. ' +' → logprob: -8.388925552368164
    10. '       ' → logprob: -9.013925552368164

Token 3792: ' forcément' (ID: 96692)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5057101845741272
    2. '+' → logprob: -1.3807101249694824
    3. ' ' → logprob: -3.1307101249694824
    4. ' for' → logprob: -4.255710124969482
    5. '2' → logprob: -4.505710124969482
    6. 'for' → logprob: -4.505710124969482
    7. 'range' → logprob: -4.630710124969482
    8. '   ' → logprob: -4.755710124969482
    9. '           ' → logprob: -5.005710124969482
    10. '=' → logprob: -5.380710124969482

Token 3793: '
' (ID: 198)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.903047502040863
    2. '+' → logprob: -2.028047561645508
    3. 'for' → logprob: -2.153047561645508
    4. ' ' → logprob: -2.278047561645508
    5. '1' → logprob: -3.028047561645508
    6. ' for' → logprob: -3.278047561645508
    7. '=' → logprob: -3.653047561645508
    8. 'x' → logprob: -3.653047561645508
    9. ' x' → logprob: -4.153047561645508
    10. ' +' → logprob: -4.278047561645508

Token 3794: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9993891716003418
    2. '2' → logprob: -2.124389171600342
    3. '               ' → logprob: -2.749389171600342
    4. ' ' → logprob: -2.874389171600342
    5. '=' → logprob: -2.999389171600342
    6. 'for' → logprob: -3.124389171600342
    7. ' for' → logprob: -3.249389171600342
    8. '                           ' → logprob: -3.499389171600342
    9. '                   ' → logprob: -3.499389171600342
    10. 'x' → logprob: -3.499389171600342

Token 3795: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7507140636444092
    2. 'for' (adapté à ' for') → logprob: -1.2507140636444092
    3. '           ' → logprob: -3.000714063644409
    4. 'range' → logprob: -3.000714063644409
    5. '               ' → logprob: -3.625714063644409
    6. '                           ' → logprob: -3.875714063644409
    7. '                   ' → logprob: -3.875714063644409
    8. ' range' → logprob: -4.000714302062988
    9. '2' → logprob: -4.500714302062988
    10. '                       ' → logprob: -4.500714302062988

Token 3796: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47411003708839417
    2. ' x' → logprob: -0.9741100072860718
    3. '	x' → logprob: -10.974109649658203
    4. '   ' → logprob: -11.974109649658203
    5. ' ' → logprob: -12.724109649658203
    6. '_x' → logprob: -13.474109649658203
    7. '    ' → logprob: -13.599109649658203
    8. '2' → logprob: -14.099109649658203
    9. '```' → logprob: -14.099109649658203
    10. '           ' → logprob: -14.974109649658203

Token 3797: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03812675550580025
    2. 'in' → logprob: -3.2881267070770264
    3. '	in' → logprob: -9.913126945495605
    4. '_in' → logprob: -10.788126945495605
    5. '   ' → logprob: -13.038126945495605
    6. '```' → logprob: -13.163126945495605
    7. '(in' → logprob: -13.538126945495605
    8. ' ' → logprob: -13.788126945495605
    9. '=' → logprob: -14.163126945495605
    10. ',' → logprob: -14.288126945495605

Token 3798: ' range' (ID: 3352)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08042972534894943
    2. ' ' → logprob: -2.830429792404175
    3. 'range' → logprob: -4.205429553985596
    4. ' range' → logprob: -5.705429553985596
    5. '(' → logprob: -10.580430030822754
    6. '   ' → logprob: -11.205430030822754
    7. '(range' → logprob: -12.455430030822754
    8. '  ' → logprob: -12.955430030822754
    9. ' (' → logprob: -13.330430030822754
    10. '```' → logprob: -13.705430030822754

Token 3799: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018193604424595833
    2. ' ' → logprob: -4.01819372177124
    3. '   ' → logprob: -10.518193244934082
    4. '(' → logprob: -11.268193244934082
    5. '           ' → logprob: -12.893193244934082
    6. '	' → logprob: -14.643193244934082
    7. '  ' → logprob: -15.268193244934082
    8. '       ' → logprob: -15.893193244934082
    9. '               ' → logprob: -15.893193244934082
    10. '    ' → logprob: -16.5181941986084

Token 3800: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.500006675720215
    4. '  ' → logprob: -19.50000762939453
    5. '	' → logprob: -20.25000762939453
    6. '       ' → logprob: -20.87500762939453
    7. '```' → logprob: -21.25000762939453
    8. '۲' → logprob: -21.50000762939453
    9. '２' → logprob: -22.12500762939453
    10. '    ' → logprob: -22.25000762939453

Token 3801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001256780233234167
    2. ' ,' → logprob: -6.751256942749023
    3. ',
' → logprob: -10.501256942749023
    4. ',len' → logprob: -11.001256942749023
    5. ',x' → logprob: -11.251256942749023
    6. ',max' → logprob: -11.751256942749023
    7. '   ' → logprob: -13.001256942749023
    8. '           ' → logprob: -13.251256942749023
    9. ',min' → logprob: -13.251256942749023
    10. '<|end|>' → logprob: -13.251256942749023

Token 3802: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -8.280175097752362e-05
    2. ' max' → logprob: -9.750082969665527
    3. 'min' → logprob: -10.625082969665527
    4. '   ' → logprob: -16.87508201599121
    5. '(max' → logprob: -16.87508201599121
    6. '           ' → logprob: -17.00008201599121
    7. '	max' → logprob: -17.25008201599121
    8. '               ' → logprob: -18.25008201599121
    9. '                   ' → logprob: -18.75008201599121
    10. ' ' → logprob: -18.87508201599121

Token 3803: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.008010800927877426
    2. '+' → logprob: -5.0080108642578125
    3. '_' → logprob: -7.6330108642578125
    4. '_i' → logprob: -8.383010864257812
    5. '(i' → logprob: -8.883010864257812
    6. '(' → logprob: -9.008010864257812
    7. ' +' → logprob: -9.383010864257812
    8. '(min' → logprob: -10.258010864257812
    9. '[i' → logprob: -10.383010864257812
    10. ',' → logprob: -10.508010864257812

Token 3804: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11493901908397675
    2. '):' → logprob: -2.489938974380493
    3. '):
' → logprob: -4.114939212799072
    4. ' +' → logprob: -4.739939212799072
    5. ':' → logprob: -8.739938735961914
    6. '[' → logprob: -8.864938735961914
    7. ')' → logprob: -10.239938735961914
    8. '       ' → logprob: -10.364938735961914
    9. '```' → logprob: -10.364938735961914
    10. '<|end|>' → logprob: -10.739938735961914

Token 3805: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020973898062948138
    2. '):
' → logprob: -8.87520980834961
    3. '):' → logprob: -9.75020980834961
    4. ' ' → logprob: -11.62520980834961
    5. ')' → logprob: -13.37520980834961
    6. '```' → logprob: -14.62520980834961
    7. '2' → logprob: -14.75020980834961
    8. '   ' → logprob: -15.87520980834961
    9. ',' → logprob: -17.12520980834961
    10. '=' → logprob: -17.25020980834961

Token 3806: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18411628901958466
    2. '):' → logprob: -2.4341163635253906
    3. ':' → logprob: -2.6841163635253906
    4. ':
' → logprob: -4.809116363525391
    5. '               ' → logprob: -5.809116363525391
    6. ',' → logprob: -8.55911636352539
    7. '):
' → logprob: -9.05911636352539
    8. '                       ' → logprob: -9.18411636352539
    9. '<|end|>' → logprob: -9.18411636352539
    10. '           ' → logprob: -9.30911636352539

Token 3807: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35093954205513
    2. '                               ' → logprob: -2.8509395122528076
    3. '<|end|>' → logprob: -2.9759395122528076
    4. ' ' → logprob: -3.3509395122528076
    5. '           ' → logprob: -3.4759395122528076
    6. '                       ' → logprob: -3.7259395122528076
    7. '```' → logprob: -4.225939750671387
    8. '                   ' → logprob: -4.350939750671387
    9. '            ' → logprob: -4.850939750671387
    10. '                ' → logprob: -5.100939750671387

Token 3808: ' nxt' (ID: 160200)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7517589926719666
    2. ' if' → logprob: -1.6267590522766113
    3. 'dp' → logprob: -2.1267590522766113
    4. ' dp' → logprob: -3.2517590522766113
    5. '                       ' → logprob: -3.3767590522766113
    6. 'if' → logprob: -3.5017590522766113
    7. '               ' → logprob: -3.5017590522766113
    8. 'time' → logprob: -4.126759052276611
    9. ' time' → logprob: -4.251759052276611
    10. '
' → logprob: -5.001759052276611

Token 3809: '_j' (ID: 12021)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.7253342866897583
    2. '[i' → logprob: -1.4753342866897583
    3. ' =' → logprob: -2.6003341674804688
    4. '[' → logprob: -2.6003341674804688
    5. '_st' → logprob: -2.7253341674804688
    6. '```' → logprob: -4.100334167480469
    7. '_' → logprob: -4.600334167480469
    8. '               ' → logprob: -4.850334167480469
    9. '[j' → logprob: -5.350334167480469
    10. '                   ' → logprob: -5.350334167480469

Token 3810: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3874775767326355
    2. ' =' → logprob: -1.1374776363372803
    3. '```' → logprob: -8.51247787475586
    4. '=
' → logprob: -8.63747787475586
    5. ')' → logprob: -9.63747787475586
    6. 'used' → logprob: -10.26247787475586
    7. ' used' → logprob: -10.51247787475586
    8. '[' → logprob: -11.01247787475586
    9. '_used' → logprob: -11.38747787475586
    10. ' =
' → logprob: -11.51247787475586

Token 3811: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.014169624075293541
    2. ' used' → logprob: -4.264169692993164
    3. '   ' → logprob: -12.389169692993164
    4. '               ' → logprob: -13.639169692993164
    5. '```' → logprob: -14.889169692993164
    6. '_used' → logprob: -16.014169692993164
    7. '                   ' → logprob: -16.389169692993164
    8. '.used' → logprob: -17.014169692993164
    9. 'dp' → logprob: -17.264169692993164
    10. 'unused' → logprob: -17.264169692993164

Token 3812: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.0206720617134124e-05
    2. '_s' → logprob: -12.50001049041748
    3. '```' → logprob: -13.50001049041748
    4. '_' → logprob: -13.62501049041748
    5. 'st' → logprob: -13.75001049041748
    6. '_j' → logprob: -14.62501049041748
    7. ' _' → logprob: -14.87501049041748
    8. 'St' → logprob: -15.12501049041748
    9. '+' → logprob: -15.50001049041748
    10. 's' → logprob: -15.50001049041748

Token 3813: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0013091674773022532
    2. '_st' → logprob: -7.126309394836426
    3. 'op' → logprob: -8.126309394836426
    4. '_ops' → logprob: -8.626309394836426
    5. 'st' → logprob: -11.876309394836426
    6. 'tops' → logprob: -12.376309394836426
    7. 't' → logprob: -12.626309394836426
    8. '_op' → logprob: -12.626309394836426
    9. '_t' → logprob: -12.751309394836426
    10. 'ost' → logprob: -13.626309394836426

Token 3814: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9440609216690063
    2. '+' → logprob: -1.0690609216690063
    3. '+x' → logprob: -1.3190609216690063
    4. '+
' → logprob: -9.569061279296875
    5. '+n' → logprob: -9.819061279296875
    6. '+j' → logprob: -9.819061279296875
    7. ' +
' → logprob: -11.194061279296875
    8. '<|end|>' → logprob: -11.444061279296875
    9. '               ' → logprob: -12.444061279296875
    10. 'x' → logprob: -12.819061279296875

Token 3815: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015140273608267307
    2. ' x' → logprob: -6.751513957977295
    3. '(x' → logprob: -8.001514434814453
    4. ' (' → logprob: -12.001514434814453
    5. '```' → logprob: -13.626514434814453
    6. '{x' → logprob: -14.251514434814453
    7. '(' → logprob: -15.376514434814453
    8. '   ' → logprob: -15.501514434814453
    9. '	x' → logprob: -15.751514434814453
    10. '[x' → logprob: -16.126514434814453

Token 3816: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4795798659324646
    2. '-' → logprob: -0.9795798659324646
    3. '<|end|>' → logprob: -5.854579925537109
    4. '<|end|>' → logprob: -6.104579925537109
    5. '```' → logprob: -9.10457992553711
    6. ')' → logprob: -9.35457992553711
    7. '[' → logprob: -10.85457992553711
    8. '#' → logprob: -11.22957992553711
    9. '[-' → logprob: -11.47957992553711
    10. '                ' → logprob: -11.47957992553711

Token 3817: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '<|end|>' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.75
    5. '<|end|>' → logprob: -16.875
    6. '2' → logprob: -18.0
    7. '```' → logprob: -18.125
    8. '۱' → logprob: -20.0
    9. '১' → logprob: -20.25
    10. '१' → logprob: -20.375

Token 3818: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03929778188467026
    2. '<|end|>' → logprob: -3.5392978191375732
    3. ']' → logprob: -6.289297580718994
    4. '<|end|>' → logprob: -6.414297580718994
    5. '                ' → logprob: -7.164297580718994
    6. '
' → logprob: -7.289297580718994
    7. '```' → logprob: -7.289297580718994
    8. ' if' → logprob: -7.414297580718994
    9. ')' → logprob: -7.914297580718994
    10. '                
' → logprob: -8.039298057556152

Token 3819: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08810949325561523
    2. '<|end|>' → logprob: -3.7131094932556152
    3. '```' → logprob: -3.9631094932556152
    4. '                       ' → logprob: -4.588109493255615
    5. ' if' → logprob: -5.213109493255615
    6. '                   ' → logprob: -5.213109493255615
    7. '                               ' → logprob: -5.838109493255615
    8. '[' → logprob: -6.213109493255615
    9. '			' → logprob: -6.588109493255615
    10. 'if' → logprob: -6.588109493255615

Token 3820: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27728962898254395
    2. 'if' (adapté à ' if') → logprob: -1.527289628982544
    3. 'dp' → logprob: -4.152289390563965
    4. ' dp' → logprob: -6.027289390563965
    5. ' =' → logprob: -6.402289390563965
    6. '               ' → logprob: -6.527289390563965
    7. '                   ' → logprob: -6.652289390563965
    8. '=' → logprob: -7.777289390563965
    9. ':
' → logprob: -7.902289390563965
    10. '                       ' → logprob: -8.402289390563965

Token 3821: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012552157044410706
    2. ' nxt' → logprob: -4.387552261352539
    3. 'x' → logprob: -11.137552261352539
    4. ' n' → logprob: -11.637552261352539
    5. 'dp' → logprob: -12.262552261352539
    6. 'n't' → logprob: -13.012552261352539
    7. 'j' → logprob: -13.137552261352539
    8. 'next' → logprob: -13.137552261352539
    9. '<n' → logprob: -13.262552261352539
    10. '```' → logprob: -13.637552261352539

Token 3822: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.03243966028094292
    2. '[j' → logprob: -4.532439708709717
    3. '<n' → logprob: -5.032439708709717
    4. '[n' → logprob: -5.282439708709717
    5. '_n' → logprob: -5.907439708709717
    6. '[' → logprob: -6.157439708709717
    7. 'n' → logprob: -6.532439708709717
    8. '][' → logprob: -7.032439708709717
    9. '```' → logprob: -7.407439708709717
    10. '<' → logprob: -8.032439231872559

Token 3823: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.39359956979751587
    2. '<=' → logprob: -1.268599510192871
    3. ' <' → logprob: -3.268599510192871
    4. '<' → logprob: -5.643599510192871
    5. '<len' → logprob: -7.268599510192871
    6. '```' → logprob: -7.393599510192871
    7. '[' → logprob: -7.768599510192871
    8. '<n' → logprob: -8.518599510192871
    9. ' >' → logprob: -9.143599510192871
    10. '>' → logprob: -9.518599510192871

Token 3824: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00017982252757064998
    2. ' K' → logprob: -8.6251802444458
    3. '   ' → logprob: -16.875179290771484
    4. '                   ' → logprob: -17.125179290771484
    5. '               ' → logprob: -17.750179290771484
    6. '```' → logprob: -18.250179290771484
    7. ' ' → logprob: -18.875179290771484
    8. '                                           ' → logprob: -19.000179290771484
    9. '                               ' → logprob: -19.125179290771484
    10. 'k' → logprob: -19.500179290771484

Token 3825: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.025723934173584
    2. ':
' → logprob: -1.150723934173584
    3. ':' → logprob: -1.400723934173584
    4. '               ' → logprob: -3.400723934173584
    5. '                           ' → logprob: -4.400723934173584
    6. '                       ' → logprob: -4.650723934173584
    7. '```' → logprob: -4.650723934173584
    8. '[' → logprob: -5.775723934173584
    9. '=' → logprob: -6.650723934173584
    10. '                               ' → logprob: -6.775723934173584

Token 3826: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04814508184790611
    2. '                       ' → logprob: -3.548145055770874
    3. '                           ' → logprob: -5.298145294189453
    4. ':
' → logprob: -5.423145294189453
    5. '```' → logprob: -5.673145294189453
    6. '               ' → logprob: -7.173145294189453
    7. '                               ' → logprob: -7.173145294189453
    8. ' continue' → logprob: -7.173145294189453
    9. '                                           ' → logprob: -7.298145294189453
    10. '                    ' → logprob: -7.923145294189453

Token 3827: ' break' (ID: 2338)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4194464385509491
    2. '                   ' → logprob: -1.2944464683532715
    3. 'break' (adapté à ' break') → logprob: -3.2944464683532715
    4. '                       ' → logprob: -4.5444464683532715
    5. ' continue' → logprob: -4.9194464683532715
    6. '```' → logprob: -4.9194464683532715
    7. '                           ' → logprob: -5.7944464683532715
    8. '                               ' → logprob: -6.9194464683532715
    9. '                                           ' → logprob: -7.0444464683532715
    10. '               ' → logprob: -8.044445991516113

Token 3828: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3463326096534729
    2. '                       ' → logprob: -2.221332550048828
    3. '               ' → logprob: -2.971332550048828
    4. ':
' → logprob: -2.971332550048828
    5. '                           ' → logprob: -3.971332550048828
    6. '                               ' → logprob: -3.971332550048828
    7. '```' → logprob: -4.846332550048828
    8. '                        
' → logprob: -5.346332550048828
    9. ':' → logprob: -5.471332550048828
    10. ' and' → logprob: -5.846332550048828

Token 3829: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8098829388618469
    2. '               ' → logprob: -1.5598828792572021
    3. '                               ' → logprob: -2.059882879257202
    4. '                       ' → logprob: -2.309882879257202
    5. '```' → logprob: -3.309882879257202
    6. '                        
' → logprob: -4.309883117675781
    7. '                           ' → logprob: -4.434883117675781
    8. '                ' → logprob: -4.559883117675781
    9. '<|end|>' → logprob: -4.934883117675781
    10. '                                           ' → logprob: -5.809883117675781

Token 3830: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3624494969844818
    2. 'time' → logprob: -1.3624495267868042
    3. 'dp' → logprob: -3.9874494075775146
    4. '                   ' → logprob: -4.362449645996094
    5. '                       ' → logprob: -4.987449645996094
    6. ' time' → logprob: -5.862449645996094
    7. '               ' → logprob: -5.862449645996094
    8. ' cost' → logprob: -5.862449645996094
    9. '                               ' → logprob: -8.487449645996094
    10. '```' → logprob: -8.612449645996094

Token 3831: ' Calcul' (ID: 57243)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.08963915705680847
    2. 'time' → logprob: -2.589639186859131
    3. ' cost' → logprob: -5.464639186859131
    4. '               ' → logprob: -6.089639186859131
    5. 'dp' → logprob: -6.589639186859131
    6. '                   ' → logprob: -6.964639186859131
    7. ' time' → logprob: -7.089639186859131
    8. 'c' → logprob: -8.464638710021973
    9. 'temp' → logprob: -8.464638710021973
    10. 'temps' → logprob: -9.464638710021973

Token 3832: ' cout' (ID: 10504)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.43399155139923096
    2. '=' → logprob: -2.0589914321899414
    3. ' cost' → logprob: -2.4339914321899414
    4. ' =' → logprob: -2.8089914321899414
    5. '               ' → logprob: -2.8089914321899414
    6. '(cost' → logprob: -4.683991432189941
    7. '                   ' → logprob: -5.183991432189941
    8. '=
' → logprob: -8.058991432189941
    9. '           ' → logprob: -8.308991432189941
    10. 'time' → logprob: -8.808991432189941

Token 3833: ' interval' (ID: 17116)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.455329954624176
    2. '=' → logprob: -1.5803298950195312
    3. '               ' → logprob: -2.5803298950195312
    4. '(i' → logprob: -2.8303298950195312
    5. '                   ' → logprob: -4.330329895019531
    6. '=i' → logprob: -4.830329895019531
    7. 'time' → logprob: -6.455329895019531
    8. 'i' → logprob: -7.705329895019531
    9. 'cost' → logprob: -7.955329895019531
    10. '=time' → logprob: -8.205329895019531

Token 3834: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4339543282985687
    2. '=' → logprob: -1.1839543581008911
    3. '               ' → logprob: -3.3089542388916016
    4. '(i' → logprob: -5.183954238891602
    5. '                   ' → logprob: -7.058954238891602
    6. '=i' → logprob: -7.058954238891602
    7. 'time' → logprob: -7.558954238891602
    8. 'i' → logprob: -7.808954238891602
    9. '           ' → logprob: -7.933954238891602
    10. '       ' → logprob: -8.433954238891602

Token 3835: '               ' (ID: 506)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.9239354133605957
    2. ' cost' → logprob: -1.0489354133605957
    3. '               ' → logprob: -1.4239354133605957
    4. '                   ' → logprob: -5.048935413360596
    5. '```' → logprob: -6.548935413360596
    6. 'time' → logprob: -6.673935413360596
    7. ' time' → logprob: -6.798935413360596
    8. '                ' → logprob: -6.923935413360596
    9. '(cost' → logprob: -8.423934936523438
    10. '                       ' → logprob: -8.798934936523438

Token 3836: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.030876826494932175
    2. ' cost' → logprob: -3.530876874923706
    3. '               ' → logprob: -7.155876636505127
    4. '                   ' → logprob: -8.655877113342285
    5. '(cost' → logprob: -10.155877113342285
    6. 'time' → logprob: -10.155877113342285
    7. '0' → logprob: -10.905877113342285
    8. '                ' → logprob: -10.905877113342285
    9. '   ' → logprob: -11.405877113342285
    10. '```' → logprob: -11.405877113342285

Token 3837: ' Si' (ID: 7832)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.010603824630379677
    2. '0' → logprob: -5.760603904724121
    3. ' cost' → logprob: -6.135603904724121
    4. '               ' → logprob: -6.135603904724121
    5. 'interval' → logprob: -6.510603904724121
    6. '                   ' → logprob: -7.510603904724121
    7. '           ' → logprob: -8.760603904724121
    8. 'time' → logprob: -8.760603904724121
    9. 'dp' → logprob: -9.135603904724121
    10. '   ' → logprob: -9.135603904724121

Token 3838: ' interval' (ID: 17116)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7276788353919983
    2. 'idx' → logprob: -0.7276788353919983
    3. ' idx' → logprob: -4.3526787757873535
    4. 'station' → logprob: -4.8526787757873535
    5. 'n' → logprob: -5.2276787757873535
    6. ' i' → logprob: -5.6026787757873535
    7. 'x' → logprob: -6.7276787757873535
    8. '   ' → logprob: -7.3526787757873535
    9. ' station' → logprob: -7.6026787757873535
    10. '(i' → logprob: -7.8526787757873535

Token 3839: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.891515851020813
    2. '_length' → logprob: -1.391515851020813
    3. 'i' → logprob: -3.1415157318115234
    4. '(i' → logprob: -3.3915157318115234
    5. '               ' → logprob: -3.5165157318115234
    6. '=' → logprob: -3.5165157318115234
    7. '       ' → logprob: -3.5165157318115234
    8. '           ' → logprob: -3.6415157318115234
    9. ']' → logprob: -3.6415157318115234
    10. '   ' → logprob: -4.141515731811523

Token 3840: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6864215731620789
    2. '==' → logprob: -0.8114215731620789
    3. ' !=' → logprob: -4.3114213943481445
    4. ' <' → logprob: -4.5614213943481445
    5. '[i' → logprob: -4.8114213943481445
    6. ',' → logprob: -6.0614213943481445
    7. '!=' → logprob: -6.3114213943481445
    8. '=' → logprob: -6.5614213943481445
    9. '<=' → logprob: -6.6864213943481445
    10. ' >=' → logprob: -6.6864213943481445

Token 3841: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2298140674829483
    2. 'idx' → logprob: -1.604814052581787
    3. ' idx' → logprob: -5.729814052581787
    4. ' i' → logprob: -6.854814052581787
    5. '   ' → logprob: -11.479814529418945
    6. '=' → logprob: -11.604814529418945
    7. 'M' → logprob: -11.729814529418945
    8. '(i' → logprob: -11.979814529418945
    9. '(idx' → logprob: -11.979814529418945
    10. 'index' → logprob: -12.229814529418945

Token 3842: ' (' (ID: 350)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5790202021598816
    2. ' and' → logprob: -1.5790202617645264
    3. ' ==' → logprob: -2.0790202617645264
    4. ':
' → logprob: -3.0790202617645264
    5. 'and' → logprob: -3.5790202617645264
    6. ':' → logprob: -4.704020023345947
    7. '=' → logprob: -5.329020023345947
    8. '                   ' → logprob: -5.829020023345947
    9. '               ' → logprob: -5.829020023345947
    10. ' or' → logprob: -6.204020023345947

Token 3843: 'où' (ID: 126981)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.043594397604465485
    2. '==' → logprob: -4.4185943603515625
    3. '):
' → logprob: -5.0435943603515625
    4. ' i' → logprob: -5.2935943603515625
    5. ')' → logprob: -5.4185943603515625
    6. '),' → logprob: -5.5435943603515625
    7. '=' → logprob: -6.2935943603515625
    8. '+' → logprob: -6.6685943603515625
    9. ',' → logprob: -6.9185943603515625
    10. '#' → logprob: -7.0435943603515625

Token 3844: ' se' (ID: 458)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.0038431864231824875
    2. 'idx' → logprob: -6.628843307495117
    3. '   ' → logprob: -7.378843307495117
    4. 'S' → logprob: -7.378843307495117
    5. 'i' → logprob: -7.378843307495117
    6. ' station' → logprob: -9.253843307495117
    7. 'endpoint' → logprob: -9.253843307495117
    8. '  ' → logprob: -9.503843307495117
    9. '           ' → logprob: -10.128843307495117
    10. '`' → logprob: -10.253843307495117

Token 3845: ' trouve' (ID: 30913)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00022892709239386022
    2. 't' → logprob: -9.875228881835938
    3. 'tro' → logprob: -10.375228881835938
    4. ' trouve' → logprob: -10.625228881835938
    5. 'sit' → logprob: -10.750228881835938
    6. '{
' → logprob: -11.125228881835938
    7. 'trate' → logprob: -11.375228881835938
    8. '_tr' → logprob: -11.500228881835938
    9. '
' → logprob: -12.125228881835938
    10. 'arr' → logprob: -12.250228881835938

Token 3846: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.014614956453442574
    2. ' station' → logprob: -4.389615058898926
    3. 'la' → logprob: -6.514615058898926
    4. ' la' → logprob: -8.389615058898926
    5. '   ' → logprob: -8.889615058898926
    6. '  ' → logprob: -10.014615058898926
    7. ' ' → logprob: -10.389615058898926
    8. 'l' → logprob: -10.514615058898926
    9. ' ' → logprob: -10.764615058898926
    10. '```' → logprob: -10.764615058898926

Token 3847: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0046114567667245865
    2. 'limit' → logprob: -5.754611492156982
    3. '[i' → logprob: -6.754611492156982
    4. 'i' → logprob: -9.379611015319824
    5. ')' → logprob: -10.004611015319824
    6. '
' → logprob: -11.004611015319824
    7. '[idx' → logprob: -11.129611015319824
    8. '   ' → logprob: -11.129611015319824
    9. 'Limit' → logprob: -11.379611015319824
    10. '```' → logprob: -11.504611015319824

Token 3848: '),' (ID: 936)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2603769302368164
    2. '):
' → logprob: -1.3853769302368164
    3. '),' → logprob: -1.8853769302368164
    4. ':' → logprob: -2.3853769302368164
    5. ':
' → logprob: -2.7603769302368164
    6. '):' → logprob: -3.2603769302368164
    7. ')' → logprob: -3.6353769302368164
    8. ',' → logprob: -3.8853769302368164
    9. ' ==' → logprob: -3.8853769302368164
    10. '                   ' → logprob: -4.510376930236816

Token 3849: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7811901569366455
    2. '               ' → logprob: -1.7811901569366455
    3. ' i' → logprob: -2.0311901569366455
    4. 'endpoint' → logprob: -2.6561901569366455
    5. 'idx' → logprob: -2.9061901569366455
    6. 'x' → logprob: -3.2811901569366455
    7. ' idx' → logprob: -4.156189918518066
    8. '                   ' → logprob: -4.406189918518066
    9. ' endpoint' → logprob: -4.406189918518066
    10. '(i' → logprob: -4.656189918518066

Token 3850: ' rest' (ID: 2867)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5149117112159729
    2. '```' → logprob: -2.889911651611328
    3. 'calculate' → logprob: -2.889911651611328
    4. 'cal' → logprob: -3.139911651611328
    5. '#' → logprob: -3.264911651611328
    6. 'if' → logprob: -3.264911651611328
    7. 'endpoint' → logprob: -3.389911651611328
    8. 'calc' → logprob: -3.514911651611328
    9. 'calcul' → logprob: -3.764911651611328
    10. 'do' → logprob: -4.264911651611328

Token 3851: 're' (ID: 264)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16180486977100372
    2. 're' → logprob: -2.0368049144744873
    3. 'it' → logprob: -5.286804676055908
    4. 'est' → logprob: -5.661804676055908
    5. 'r' → logprob: -6.286804676055908
    6. 'ent' → logprob: -6.536804676055908
    7. 'ep' → logprob: -6.786804676055908
    8. 'reste' → logprob: -7.286804676055908
    9. 'rne' → logprob: -7.536804676055908
    10. 'er' → logprob: -7.786804676055908

Token 3852: 'int' (ID: 491)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1604822427034378
    2. 're' → logprob: -2.035482168197632
    3. 'ring' → logprob: -5.410482406616211
    4. 'riction' → logprob: -6.035482406616211
    5. 'ric' → logprob: -6.285482406616211
    6. '
' → logprob: -6.410482406616211
    7. 'strict' → logprob: -6.785482406616211
    8. 'rit' → logprob: -6.785482406616211
    9. '       ' → logprob: -7.910482406616211
    10. 'rige' → logprob: -7.910482406616211

Token 3853: ' à' (ID: 1221)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -1.0642586946487427
    2. 'i' → logprob: -1.8142586946487427
    3. '               ' → logprob: -1.9392586946487427
    4. '=' → logprob: -2.314258575439453
    5. 'None' → logprob: -2.564258575439453
    6. '=None' → logprob: -3.689258575439453
    7. ' =' → logprob: -4.064258575439453
    8. '(i' → logprob: -4.064258575439453
    9. 'à' → logprob: -4.189258575439453
    10. ' endpoint' → logprob: -4.564258575439453

Token 3854: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.0010380487656220794
    2. 'endpoint' → logprob: -7.501038074493408
    3. 'S' → logprob: -8.12603759765625
    4. '   ' → logprob: -9.50103759765625
    5. ' station' → logprob: -9.62603759765625
    6. '
' → logprob: -11.50103759765625
    7. 'None' → logprob: -11.75103759765625
    8. '```' → logprob: -12.12603759765625
    9. '           ' → logprob: -12.37603759765625
    10. '  ' → logprob: -12.62603759765625

Token 3855: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.057267531752586365
    2. '[i' → logprob: -4.182267665863037
    3. '               ' → logprob: -4.432267665863037
    4. 'limit' → logprob: -5.307267665863037
    5. '                   ' → logprob: -5.432267665863037
    6. '=i' → logprob: -5.682267665863037
    7. '_offset' → logprob: -6.182267665863037
    8. '(i' → logprob: -6.432267665863037
    9. '=' → logprob: -6.807267665863037
    10. '_limits' → logprob: -6.932267665863037

Token 3856: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07717380672693253
    2. ' =' → logprob: -3.5771737098693848
    3. '=' → logprob: -4.327173709869385
    4. '(i' → logprob: -5.202173709869385
    5. ' if' → logprob: -5.327173709869385
    6. 'i' → logprob: -5.702173709869385
    7. 'if' → logprob: -6.327173709869385
    8. ',' → logprob: -6.327173709869385
    9. '```' → logprob: -6.327173709869385
    10. '                   ' → logprob: -6.577173709869385

Token 3857: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00920227449387312
    2. '                   ' → logprob: -5.884202480316162
    3. '```' → logprob: -5.884202480316162
    4. ',' → logprob: -6.884202480316162
    5. '                ' → logprob: -7.509202480316162
    6. ' =' → logprob: -7.759202480316162
    7. '                
' → logprob: -8.134202003479004
    8. '(i' → logprob: -8.509202003479004
    9. '=' → logprob: -8.759202003479004
    10. '):
' → logprob: -9.384202003479004

Token 3858: ' if' (ID: 538)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.726820170879364
    2. '               ' → logprob: -0.976820170879364
    3. 'None' → logprob: -3.101820230484009
    4. 'station' → logprob: -3.476820230484009
    5. 'i' → logprob: -3.851820230484009
    6. 'idx' → logprob: -4.47681999206543
    7. '                   ' → logprob: -4.97681999206543
    8. 'interval' → logprob: -5.47681999206543
    9. ' endpoint' → logprob: -5.60181999206543
    10. ' None' → logprob: -5.85181999206543

Token 3859: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012688224203884602
    2. 'idx' → logprob: -4.762688159942627
    3. ' i' → logprob: -5.637688159942627
    4. ' idx' → logprob: -8.512688636779785
    5. '                   ' → logprob: -8.887688636779785
    6. '               ' → logprob: -9.512688636779785
    7. '   ' → logprob: -10.512688636779785
    8. '           ' → logprob: -11.512688636779785
    9. '                           ' → logprob: -11.762688636779785
    10. '(i' → logprob: -12.012688636779785

Token 3860: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5763717293739319
    2. ' ==' → logprob: -0.8263717293739319
    3. '<=' → logprob: -7.951371669769287
    4. ' <=' → logprob: -9.951372146606445
    5. '[i' → logprob: -11.451372146606445
    6. '==
' → logprob: -11.826372146606445
    7. ']==' → logprob: -12.701372146606445
    8. '```' → logprob: -12.826372146606445
    9. ' !=' → logprob: -13.701372146606445
    10. ' ==
' → logprob: -13.826372146606445

Token 3861: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0002314303710591048
    2. ' idx' → logprob: -8.375231742858887
    3. '	idx' → logprob: -15.125231742858887
    4. '[idx' → logprob: -15.625231742858887
    5. '(idx' → logprob: -15.750231742858887
    6. '
' → logprob: -16.12523078918457
    7. '           ' → logprob: -17.00023078918457
    8. '               ' → logprob: -17.12523078918457
    9. '   ' → logprob: -17.75023078918457
    10. '                   ' → logprob: -17.87523078918457

Token 3862: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06996611505746841
    2. ':' → logprob: -2.8199660778045654
    3. '                   ' → logprob: -5.6949663162231445
    4. ' and' → logprob: -6.1949663162231445
    5. '               ' → logprob: -6.8199663162231445
    6. '):
' → logprob: -7.1949663162231445
    7. '           ' → logprob: -8.819966316223145
    8. '                       ' → logprob: -9.069966316223145
    9. 'and' → logprob: -9.194966316223145
    10. '<|end|>' → logprob: -9.569966316223145

Token 3863: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00375186325982213
    2. 'None' → logprob: -6.253751754760742
    3. '                       ' → logprob: -7.378751754760742
    4. '               ' → logprob: -8.003751754760742
    5. ' None' → logprob: -8.003751754760742
    6. 'True' → logprob: -9.003751754760742
    7. '                    ' → logprob: -9.503751754760742
    8. '                  ' → logprob: -10.003751754760742
    9. '```' → logprob: -10.128751754760742
    10. 'False' → logprob: -10.378751754760742

Token 3864: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.32595276832580566
    2. 'endpoint' → logprob: -1.3259527683258057
    3. 'None' → logprob: -5.325952529907227
    4. '                   ' → logprob: -5.700952529907227
    5. '               ' → logprob: -5.950952529907227
    6. ' cost' → logprob: -7.200952529907227
    7. ' endpoint' → logprob: -8.450952529907227
    8. '   ' → logprob: -8.950952529907227
    9. '           ' → logprob: -8.950952529907227
    10. 'station' → logprob: -9.200952529907227

Token 3865: 'c' (ID: 66)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02122008055448532
    2. ' =' → logprob: -4.5212202072143555
    3. '=' → logprob: -4.7712202072143555
    4. '(' → logprob: -7.2712202072143555
    5. '_val' → logprob: -8.271220207214355
    6. '=i' → logprob: -8.646220207214355
    7. '_value' → logprob: -8.896220207214355
    8. 'i' → logprob: -9.521220207214355
    9. ' (' → logprob: -10.021220207214355
    10. '                   ' → logprob: -10.396220207214355

Token 3866: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1618928760290146
    2. '=' → logprob: -1.9118928909301758
    3. 'alc' → logprob: -7.661892890930176
    4. 'al' → logprob: -8.036892890930176
    5. 'ost' → logprob: -8.286892890930176
    6. '(i' → logprob: -9.036892890930176
    7. '   ' → logprob: -9.036892890930176
    8. '=i' → logprob: -9.286892890930176
    9. 'c' → logprob: -9.786892890930176
    10. 'alculate' → logprob: -10.286892890930176

Token 3867: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.018153218552470207
    2. ' cost' → logprob: -4.018153190612793
    3. '(cost' → logprob: -12.768153190612793
    4. '   ' → logprob: -15.143153190612793
    5. '                   ' → logprob: -17.26815414428711
    6. '```' → logprob: -17.51815414428711
    7. '           ' → logprob: -17.64315414428711
    8. 'Cost' → logprob: -17.89315414428711
    9. '_cost' → logprob: -18.26815414428711
    10. ' ' → logprob: -18.39315414428711

Token 3868: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.500004768371582
    3. '(
' → logprob: -14.375004768371582
    4. '```' → logprob: -15.000004768371582
    5. ' (' → logprob: -15.250004768371582
    6. '[i' → logprob: -16.1250057220459
    7. '   ' → logprob: -16.8750057220459
    8. 'i' → logprob: -17.5000057220459
    9. '(ii' → logprob: -18.5000057220459
    10. ',i' → logprob: -18.5000057220459

Token 3869: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006832825485616922
    2. ',i' → logprob: -5.006832599639893
    3. 'i' → logprob: -9.25683307647705
    4. '(i' → logprob: -11.25683307647705
    5. ' ,' → logprob: -12.13183307647705
    6. ',
' → logprob: -13.25683307647705
    7. ' i' → logprob: -14.88183307647705
    8. '```' → logprob: -15.13183307647705
    9. '                   ' → logprob: -15.88183307647705
    10. '_,' → logprob: -16.256832122802734

Token 3870: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.0126840758603066e-05
    2. 'i' → logprob: -10.375040054321289
    3. 'station' → logprob: -12.500040054321289
    4. 'K' → logprob: -13.000040054321289
    5. ' x' → logprob: -13.250040054321289
    6. '   ' → logprob: -14.500040054321289
    7. 'idx' → logprob: -14.875040054321289
    8. '```' → logprob: -16.37504005432129
    9. '
' → logprob: -17.62504005432129
    10. '	x' → logprob: -17.75004005432129

Token 3871: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007269674097187817
    2. ',i' → logprob: -7.25072717666626
    3. ' ,' → logprob: -11.750726699829102
    4. '                   ' → logprob: -12.500726699829102
    5. 'i' → logprob: -12.750726699829102
    6. '(i' → logprob: -14.125726699829102
    7. ',x' → logprob: -15.000726699829102
    8. '   ' → logprob: -15.625726699829102
    9. '```' → logprob: -15.625726699829102
    10. ',None' → logprob: -15.625726699829102

Token 3872: ' min' (ID: 1349)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -2.463036435074173e-05
    2. ' station' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.500024795532227
    4. '.station' → logprob: -18.500024795532227
    5. '                   ' → logprob: -18.875024795532227
    6. 'sta' → logprob: -19.000024795532227
    7. 'st' → logprob: -19.250024795532227
    8. '                               ' → logprob: -19.250024795532227
    9. 'stad' → logprob: -19.375024795532227
    10. 'Station' → logprob: -19.375024795532227

Token 3873: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.007084634155035019
    2. '(S' → logprob: -5.132084846496582
    3. 'station' → logprob: -6.882084846496582
    4. '(' → logprob: -9.882084846496582
    5. '(idx' → logprob: -10.757084846496582
    6. ')' → logprob: -11.132084846496582
    7. '(
' → logprob: -11.882084846496582
    8. '(endpoint' → logprob: -12.257084846496582
    9. '(ST' → logprob: -12.757084846496582
    10. '((' → logprob: -12.757084846496582

Token 3874: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -7.553032628493384e-05
    2. 'a' → logprob: -11.125075340270996
    3. '(' → logprob: -11.750075340270996
    4. '#' → logprob: -11.875075340270996
    5. 'A' → logprob: -12.125075340270996
    6. '
' → logprob: -12.375075340270996
    7. 'station' → logprob: -12.375075340270996
    8. ')
' → logprob: -12.500075340270996
    9. '{' → logprob: -12.625075340270996
    10. ')' → logprob: -12.750075340270996

Token 3875: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0007524513057433069
    2. 'limit' → logprob: -7.5007524490356445
    3. 'Limit' → logprob: -9.500752449035645
    4. '[i' → logprob: -10.000752449035645
    5. ')' → logprob: -10.625752449035645
    6. '+' → logprob: -10.875752449035645
    7. '(i' → logprob: -12.125752449035645
    8. '   ' → logprob: -12.500752449035645
    9. 'lim' → logprob: -13.000752449035645
    10. '_LIMIT' → logprob: -13.125752449035645

Token 3876: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16020259261131287
    2. '+' → logprob: -2.5352025032043457
    3. ',S' → logprob: -3.4102025032043457
    4. ',i' → logprob: -3.5352025032043457
    5. '[i' → logprob: -6.285202503204346
    6. ' +' → logprob: -6.660202503204346
    7. ' ,' → logprob: -7.410202503204346
    8. '(i' → logprob: -8.285202980041504
    9. ',
' → logprob: -8.285202980041504
    10. '))' → logprob: -8.410202980041504

Token 3877: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.9146995327901095e-05
    2. ' S' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.250019073486328
    4. ')' → logprob: -17.125019073486328
    5. '	S' → logprob: -19.625019073486328
    6. ' ' → logprob: -19.750019073486328
    7. '(S' → logprob: -19.875019073486328
    8. '       ' → logprob: -20.250019073486328
    9. '[S' → logprob: -20.375019073486328
    10. '           ' → logprob: -20.625019073486328

Token 3878: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000816773681435734
    2. '[idx' → logprob: -7.250816822052002
    3. 'i' → logprob: -9.625816345214844
    4. 'idx' → logprob: -10.500816345214844
    5. '   ' → logprob: -12.250816345214844
    6. '[
' → logprob: -13.375816345214844
    7. '
' → logprob: -14.250816345214844
    8. ',i' → logprob: -14.250816345214844
    9. '{i' → logprob: -14.250816345214844
    10. '```' → logprob: -14.375816345214844

Token 3879: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5372618436813354
    2. '[i' → logprob: -0.9122618436813354
    3. '[idx' → logprob: -4.912261962890625
    4. 'idx' → logprob: -5.912261962890625
    5. ']))' → logprob: -6.912261962890625
    6. '])' → logprob: -7.537261962890625
    7. ']' → logprob: -7.662261962890625
    8. ']))
' → logprob: -7.787261962890625
    9. '+i' → logprob: -7.912261962890625
    10. ']+' → logprob: -8.037261962890625

Token 3880: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0897202417254448
    2. '+' → logprob: -2.4647202491760254
    3. 'i' → logprob: -7.464720249176025
    4. '[i' → logprob: -8.964719772338867
    5. '(i' → logprob: -9.964719772338867
    6. '   ' → logprob: -11.464719772338867
    7. '+i' → logprob: -11.714719772338867
    8. '
' → logprob: -12.839719772338867
    9. '{i' → logprob: -13.214719772338867
    10. '+
' → logprob: -13.214719772338867

Token 3881: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.7059900760650635
    2. '))' → logprob: -1.4559900760650635
    3. ']))
' → logprob: -1.9559900760650635
    4. '])' → logprob: -2.7059900760650635
    5. '))
' → logprob: -3.5809900760650635
    6. ')' → logprob: -4.330989837646484
    7. ')+' → logprob: -4.705989837646484
    8. ']+' → logprob: -5.330989837646484
    9. ')])' → logprob: -5.830989837646484
    10. '])
' → logprob: -6.580989837646484

Token 3882: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3852095603942871
    2. '                   ' → logprob: -1.635209560394287
    3. '               ' → logprob: -3.385209560394287
    4. '```' → logprob: -3.885209560394287
    5. '+' → logprob: -4.010209560394287
    6. '                       ' → logprob: -4.510209560394287
    7. ' +' → logprob: -4.635209560394287
    8. '):
' → logprob: -5.260209560394287
    9. '<|end|>' → logprob: -5.760209560394287
    10. ' if' → logprob: -6.260209560394287

Token 3883: ' elif' (ID: 9497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8785828351974487
    2. '                   ' → logprob: -1.6285828351974487
    3. '```' → logprob: -1.7535828351974487
    4. ':' → logprob: -2.6285829544067383
    5. '               ' → logprob: -3.0035829544067383
    6. '):
' → logprob: -3.7535829544067383
    7. '):' → logprob: -4.503582954406738
    8. '                       ' → logprob: -4.878582954406738
    9. ' else' → logprob: -4.878582954406738
    10. ':
' → logprob: -5.253582954406738

Token 3884: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9695926308631897
    2. 'S' → logprob: -1.344592571258545
    3. ' i' → logprob: -1.344592571258545
    4. ' S' → logprob: -3.094592571258545
    5. 'True' → logprob: -3.344592571258545
    6. ' True' → logprob: -5.094592571258545
    7. 'False' → logprob: -6.094592571258545
    8. 'cost' → logprob: -6.219592571258545
    9. '(i' → logprob: -6.719592571258545
    10. '   ' → logprob: -6.844592571258545

Token 3885: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8588479161262512
    2. '<' → logprob: -0.9838479161262512
    3. ' !=' → logprob: -2.1088478565216064
    4. '<i' → logprob: -2.9838478565216064
    5. '!=' → logprob: -4.4838480949401855
    6. ' ==' → logprob: -4.7338480949401855
    7. '==' → logprob: -5.6088480949401855
    8. '<len' → logprob: -5.6088480949401855
    9. '+' → logprob: -7.2338480949401855
    10. '<int' → logprob: -7.7338480949401855

Token 3886: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09201236069202423
    2. 'M' → logprob: -3.342012405395508
    3. 'i' → logprob: -3.342012405395508
    4. ' idx' → logprob: -4.217012405395508
    5. 'len' → logprob: -6.467012405395508
    6. ' M' → logprob: -7.717012405395508
    7. ' i' → logprob: -8.592012405395508
    8. '           ' → logprob: -9.967012405395508
    9. '   ' → logprob: -10.467012405395508
    10. ' len' → logprob: -10.717012405395508

Token 3887: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5868228077888489
    2. '                   ' → logprob: -1.336822748184204
    3. ':' → logprob: -2.086822748184204
    4. '               ' → logprob: -3.211822748184204
    5. ' and' → logprob: -5.086822986602783
    6. '{
' → logprob: -6.586822986602783
    7. '                ' → logprob: -6.836822986602783
    8. ' or' → logprob: -7.086822986602783
    9. '                       ' → logprob: -7.086822986602783
    10. '):
' → logprob: -7.336822986602783

Token 3888: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012403692118823528
    2. '                       ' → logprob: -5.63740348815918
    3. ' :' → logprob: -6.26240348815918
    4. ':' → logprob: -6.51240348815918
    5. ':
' → logprob: -6.63740348815918
    6. '                    ' → logprob: -6.88740348815918
    7. '               ' → logprob: -7.01240348815918
    8. '                     ' → logprob: -8.01240348815918
    9. '                ' → logprob: -8.26240348815918
    10. '                    
' → logprob: -8.63740348815918

Token 3889: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.029929598793387413
    2. '                   ' → logprob: -3.7799296379089355
    3. ' cost' → logprob: -5.6549296379089355
    4. '               ' → logprob: -6.9049296379089355
    5. '                       ' → logprob: -7.5299296379089355
    6. '0' → logprob: -7.5299296379089355
    7. '```' → logprob: -8.529929161071777
    8. '   ' → logprob: -9.279929161071777
    9. '                           ' → logprob: -9.279929161071777
    10. '#' → logprob: -9.654929161071777

Token 3890: 'c' (ID: 66)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.11292623728513718
    2. 'c' → logprob: -2.2379262447357178
    3. ')' → logprob: -10.862926483154297
    4. '(' → logprob: -10.987926483154297
    5. ' =' → logprob: -11.612926483154297
    6. '=' → logprob: -11.737926483154297
    7. ',' → logprob: -11.737926483154297
    8. '(
' → logprob: -11.862926483154297
    9. '```' → logprob: -11.987926483154297
    10. 'i' → logprob: -12.112926483154297

Token 3891: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5431124567985535
    2. '=' → logprob: -0.9181124567985535
    3. '                   ' → logprob: -4.168112277984619
    4. '*' → logprob: -6.418112277984619
    5. '               ' → logprob: -6.543112277984619
    6. '(i' → logprob: -8.418112754821777
    7. ' *' → logprob: -8.418112754821777
    8. '[i' → logprob: -8.793112754821777
    9. 'c' → logprob: -9.043112754821777
    10. '           ' → logprob: -9.543112754821777

Token 3892: ' cost' (ID: 3097)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.002097326098009944
    2. '(interval' → logprob: -6.752097129821777
    3. ' intervals' → logprob: -7.752097129821777
    4. 'd' → logprob: -8.127097129821777
    5. 'cost' → logprob: -8.752097129821777
    6. 'S' → logprob: -11.377097129821777
    7. '   ' → logprob: -11.502097129821777
    8. ' d' → logprob: -12.127097129821777
    9. '       ' → logprob: -13.627097129821777
    10. '(d' → logprob: -13.627097129821777

Token 3893: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.869017852295656e-06
    2. '[i' → logprob: -12.625006675720215
    3. 'i' → logprob: -13.375006675720215
    4. '```' → logprob: -14.000006675720215
    5. '(' → logprob: -14.250006675720215
    6. '   ' → logprob: -15.250006675720215
    7. ' (' → logprob: -16.37500762939453
    8. '(
' → logprob: -17.25000762939453
    9. ' i' → logprob: -17.75000762939453
    10. ',i' → logprob: -18.00000762939453

Token 3894: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5315165519714355
    2. ',' → logprob: -0.9065165519714355
    3. ',i' → logprob: -5.0315165519714355
    4. '[i' → logprob: -7.1565165519714355
    5. ' ,' → logprob: -7.5315165519714355
    6. '```' → logprob: -8.531517028808594
    7. 'i' → logprob: -9.406517028808594
    8. '+' → logprob: -9.906517028808594
    9. ' (' → logprob: -10.031517028808594
    10. '   ' → logprob: -10.406517028808594

Token 3895: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004573003854602575
    2. ' i' → logprob: -5.504572868347168
    3. 'S' → logprob: -8.754572868347168
    4. 'x' → logprob: -9.379572868347168
    5. 'None' → logprob: -9.379572868347168
    6. '   ' → logprob: -9.629572868347168
    7. ' ' → logprob: -10.629572868347168
    8. '     ' → logprob: -11.629572868347168
    9. '    ' → logprob: -11.754572868347168
    10. '  ' → logprob: -12.129572868347168

Token 3896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013032146962359548
    2. ' ,' → logprob: -8.001303672790527
    3. '                   ' → logprob: -8.001303672790527
    4. ',i' → logprob: -8.001303672790527
    5. ',S' → logprob: -8.876303672790527
    6. '(i' → logprob: -10.251303672790527
    7. ')' → logprob: -10.501303672790527
    8. '   ' → logprob: -10.876303672790527
    9. '               ' → logprob: -11.376303672790527
    10. ',None' → logprob: -11.876303672790527

Token 3897: ' None' (ID: 4662)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.04335813224315643
    2. 'None' → logprob: -3.168358087539673
    3. ' S' → logprob: -8.793357849121094
    4. ' None' → logprob: -9.418357849121094
    5. '   ' → logprob: -9.668357849121094
    6. '           ' → logprob: -11.168357849121094
    7. '                   ' → logprob: -11.168357849121094
    8. '               ' → logprob: -12.043357849121094
    9. '  ' → logprob: -12.668357849121094
    10. '          ' → logprob: -12.918357849121094

Token 3898: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04540601000189781
    2. ')
' → logprob: -3.2954061031341553
    3. '               ' → logprob: -5.170405864715576
    4. '                   ' → logprob: -6.420405864715576
    5. ')
' → logprob: -11.670406341552734
    6. '           ' → logprob: -12.795406341552734
    7. '):
' → logprob: -12.795406341552734
    8. ' )' → logprob: -12.920406341552734
    9. '                       ' → logprob: -13.045406341552734
    10. ')#' → logprob: -13.420406341552734

Token 3899: '               ' (ID: 506)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7712295055389404
    2. '               ' → logprob: -1.5212295055389404
    3. '                   ' → logprob: -1.5212295055389404
    4. ' else' → logprob: -2.5212295055389404
    5. '```' → logprob: -4.3962297439575195
    6. '                       ' → logprob: -6.2712297439575195
    7. ')' → logprob: -6.5212297439575195
    8. ':
' → logprob: -6.6462297439575195
    9. ':' → logprob: -7.3962297439575195
    10. '                    
' → logprob: -7.5212297439575195

Token 3900: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6996132135391235
    2. ' else' → logprob: -1.1996132135391235
    3. '               ' → logprob: -2.074613094329834
    4. '                   ' → logprob: -2.699613094329834
    5. '```' → logprob: -5.199613094329834
    6. '                       ' → logprob: -6.574613094329834
    7. '                ' → logprob: -7.824613094329834
    8. '                               ' → logprob: -7.949613094329834
    9. '                           ' → logprob: -8.199613571166992
    10. ')' → logprob: -8.824613571166992

Token 3901: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13677047193050385
    2. '               ' → logprob: -2.886770486831665
    3. ':
' → logprob: -3.261770486831665
    4. ':' → logprob: -3.886770486831665
    5. '                       ' → logprob: -5.011770248413086
    6. '                    ' → logprob: -6.886770248413086
    7. '                ' → logprob: -7.761770248413086
    8. '                           ' → logprob: -7.886770248413086
    9. '           ' → logprob: -8.136770248413086
    10. '=' → logprob: -8.136770248413086

Token 3902: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07229793071746826
    2. '               ' → logprob: -2.822298049926758
    3. '                       ' → logprob: -5.072298049926758
    4. '                    ' → logprob: -6.197298049926758
    5. '                ' → logprob: -7.197298049926758
    6. '                     ' → logprob: -8.572298049926758
    7. '           ' → logprob: -8.947298049926758
    8. '                           ' → logprob: -9.072298049926758
    9. '                  ' → logprob: -9.072298049926758
    10. '                               ' → logprob: -9.197298049926758

Token 3903: ' #' (ID: 1069)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.10749910771846771
    2. '0' → logprob: -3.232499122619629
    3. 'dp' → logprob: -3.732499122619629
    4. 'cost' → logprob: -3.982499122619629
    5. '                   ' → logprob: -4.857499122619629
    6. 'float' → logprob: -4.982499122619629
    7. 'break' → logprob: -6.357499122619629
    8. '               ' → logprob: -6.482499122619629
    9. 'inf' → logprob: -8.232499122619629
    10. ' INF' → logprob: -8.607499122619629

Token 3904: ' Interval' (ID: 80693)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.42642876505851746
    2. 'dp' → logprob: -1.8014287948608398
    3. 'continue' → logprob: -3.05142879486084
    4. '                   ' → logprob: -3.05142879486084
    5. '0' → logprob: -3.67642879486084
    6. 'float' → logprob: -4.05142879486084
    7. '#' → logprob: -4.42642879486084
    8. 'break' → logprob: -4.80142879486084
    9. '               ' → logprob: -4.92642879486084
    10. 'inf' → logprob: -5.05142879486084

Token 3905: 'le' (ID: 282)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9168563485145569
    2. 's' → logprob: -1.416856288909912
    3. '                   ' → logprob: -1.416856288909912
    4. ' i' → logprob: -3.416856288909912
    5. '[i' → logprob: -3.416856288909912
    6. '               ' → logprob: -4.416856288909912
    7. '=' → logprob: -5.166856288909912
    8. ' =' → logprob: -5.541856288909912
    9. ']' → logprob: -5.666856288909912
    10. '   ' → logprob: -5.791856288909912

Token 3906: ' après' (ID: 16460)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0232062339782715
    2. '                   ' → logprob: -1.3982062339782715
    3. 's' → logprob: -1.7732062339782715
    4. '[i' → logprob: -2.3982062339782715
    5. ':' → logprob: -3.6482062339782715
    6. '=' → logprob: -4.6482062339782715
    7. 'n' → logprob: -4.6482062339782715
    8. '#' → logprob: -4.7732062339782715
    9. '               ' → logprob: -4.7732062339782715
    10. '```' → logprob: -4.8982062339782715

Token 3907: ' station' (ID: 11538)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3394598066806793
    2. 'i' → logprob: -1.339459776878357
    3. 'None' → logprob: -4.5894598960876465
    4. 'idx' → logprob: -5.2144598960876465
    5. '                   ' → logprob: -5.3394598960876465
    6. '   ' → logprob: -6.5894598960876465
    7. '0' → logprob: -7.0894598960876465
    8. ' S' → logprob: -7.4644598960876465
    9. ' i' → logprob: -7.4644598960876465
    10. '               ' → logprob: -8.214459419250488

Token 3908: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.023234529420733452
    2. 'i' → logprob: -4.2732343673706055
    3. '[i' → logprob: -6.0232343673706055
    4. '                   ' → logprob: -6.8982343673706055
    5. 'limit' → logprob: -7.1482343673706055
    6. 'idx' → logprob: -7.5232343673706055
    7. ']' → logprob: -7.5232343673706055
    8. '_' → logprob: -8.023234367370605
    9. '(i' → logprob: -8.023234367370605
    10. '_idx' → logprob: -8.023234367370605

Token 3909: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.049280956387519836
    2. '               ' → logprob: -4.424281120300293
    3. ':
' → logprob: -4.674281120300293
    4. 'dp' → logprob: -4.924281120300293
    5. '                       ' → logprob: -5.424281120300293
    6. ':' → logprob: -6.174281120300293
    7. '#' → logprob: -6.424281120300293
    8. ' dp' → logprob: -6.799281120300293
    9. 'continue' → logprob: -6.924281120300293
    10. ' =' → logprob: -6.924281120300293

Token 3910: ' on' (ID: 402)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0974900871515274
    2. '                   ' → logprob: -2.722490072250366
    3. 'continue' → logprob: -4.097490310668945
    4. '0' → logprob: -6.222490310668945
    5. 'float' → logprob: -6.347490310668945
    6. '#' → logprob: -6.722490310668945
    7. 'inf' → logprob: -7.097490310668945
    8. 'break' → logprob: -7.222490310668945
    9. '               ' → logprob: -7.597490310668945
    10. '                       ' → logprob: -7.722490310668945

Token 3911: ' pas' (ID: 2173)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.02871941775083542
    2. 'break' → logprob: -4.153719425201416
    3. 'ignore' → logprob: -5.528719425201416
    4. '                   ' → logprob: -5.653719425201416
    5. ' continue' → logprob: -6.528719425201416
    6. '                       ' → logprob: -6.778719425201416
    7. '#' → logprob: -6.903719425201416
    8. 'skip' → logprob: -7.653719425201416
    9. 'contin' → logprob: -8.278718948364258
    10. '```' → logprob: -8.278718948364258

Token 3912: ' besoin' (ID: 27703)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0097731351852417
    2. 't' → logprob: -1.8847731351852417
    3. ' continuer' → logprob: -2.2597732543945312
    4. 's' → logprob: -2.5097732543945312
    5. 'r' → logprob: -2.8847732543945312
    6. '                   ' → logprob: -3.0097732543945312
    7. 'consider' → logprob: -3.7597732543945312
    8. 'continue' → logprob: -4.009773254394531
    9. ' continue' → logprob: -4.009773254394531
    10. '               ' → logprob: -4.259773254394531

Token 3913: ' d' (ID: 272)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4076566696166992
    2. ' de' → logprob: -2.782656669616699
    3. 'continue' → logprob: -2.782656669616699
    4. 'de' → logprob: -2.782656669616699
    5. 'contin' → logprob: -3.157656669616699
    6. ' continuer' → logprob: -3.407656669616699
    7. '```' → logprob: -4.157656669616699
    8. '#' → logprob: -4.282656669616699
    9. 'd' → logprob: -4.657656669616699
    10. ' continue' → logprob: -5.282656669616699

Token 3914: '’aller' (ID: 156985)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.9276729226112366
    2. 'calcul' → logprob: -1.4276728630065918
    3. ' continuer' → logprob: -2.802672863006592
    4. 'process' → logprob: -2.927672863006592
    5. 'consider' → logprob: -3.177672863006592
    6. 'faire' → logprob: -3.552672863006592
    7. 'dp' → logprob: -3.802672863006592
    8. '#' → logprob: -4.052672863006592
    9. 'mettre' → logprob: -4.177672863006592
    10. 'update' → logprob: -4.302672863006592

Token 3915: ' au' (ID: 2791)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.08483465015888214
    2. 'jus' → logprob: -2.709834575653076
    3. 'au' → logprob: -4.584834575653076
    4. 'y' → logprob: -6.334834575653076
    5. '       ' → logprob: -7.209834575653076
    6. 'à' → logprob: -7.959834575653076
    7. '+' → logprob: -7.959834575653076
    8. ' plus' → logprob: -8.334835052490234
    9. '               ' → logprob: -8.334835052490234
    10. 'les' → logprob: -8.709835052490234

Token 3916: ' del' (ID: 1083)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.020587552338838577
    2. 'station' → logprob: -4.89558744430542
    3. ' S' → logprob: -5.64558744430542
    4. 'i' → logprob: -5.77058744430542
    5. 'segment' → logprob: -7.64558744430542
    6. 'del' → logprob: -7.89558744430542
    7. '   ' → logprob: -7.89558744430542
    8. 'su' → logprob: -8.145587921142578
    9. 'len' → logprob: -8.270587921142578
    10. '       ' → logprob: -8.395587921142578

Token 3917: 'à' (ID: 708)
  Prédit: 'à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.009845215827226639
    2. 'a' → logprob: -4.88484525680542
    3. '```' → logprob: -7.38484525680542
    4. 'de' → logprob: -8.509844779968262
    5. 'et' → logprob: -8.884844779968262
    6. 'ant' → logprob: -9.259844779968262
    7. '`' → logprob: -9.384844779968262
    8. 'oin' → logprob: -9.384844779968262
    9. '{
' → logprob: -9.509844779968262
    10. 'del' → logprob: -9.634844779968262

Token 3918: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004758342169225216
    2. '                       ' → logprob: -6.629758358001709
    3. '               ' → logprob: -7.004758358001709
    4. '                    ' → logprob: -7.629758358001709
    5. ',' → logprob: -7.754758358001709
    6. ':
' → logprob: -8.37975788116455
    7. '```' → logprob: -8.37975788116455
    8. '0' → logprob: -8.75475788116455
    9. '
' → logprob: -9.37975788116455
    10. '#' → logprob: -9.50475788116455

Token 3919: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00406070938333869
    2. '                       ' → logprob: -6.504060745239258
    3. '                    ' → logprob: -7.254060745239258
    4. '               ' → logprob: -7.379060745239258
    5. '           ' → logprob: -8.504060745239258
    6. '                  ' → logprob: -8.754060745239258
    7. 'continue' → logprob: -8.879060745239258
    8. '                     ' → logprob: -9.129060745239258
    9. ' continue' → logprob: -9.629060745239258
    10. '0' → logprob: -9.879060745239258

Token 3920: ' #' (ID: 1069)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.23964905738830566
    2. '0' → logprob: -2.3646490573883057
    3. '                   ' → logprob: -2.6146490573883057
    4. 'float' → logprob: -3.9896490573883057
    5. 'continue' → logprob: -4.364648818969727
    6. '               ' → logprob: -5.489648818969727
    7. 'inf' → logprob: -6.364648818969727
    8. '                       ' → logprob: -6.739648818969727
    9. 'IN' → logprob: -6.864648818969727
    10. 'break' → logprob: -7.239648818969727

Token 3921: ' On' (ID: 2160)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.035870909690857
    2. 'continue' → logprob: -1.410870909690857
    3. 'INF' → logprob: -1.785870909690857
    4. 'dp' → logprob: -2.2858710289001465
    5. '0' → logprob: -3.0358710289001465
    6. 'float' → logprob: -3.1608710289001465
    7. '               ' → logprob: -4.9108710289001465
    8. 'inf' → logprob: -4.9108710289001465
    9. '#' → logprob: -5.2858710289001465
    10. '                       ' → logprob: -5.4108710289001465

Token 3922: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.024519924074411392
    2. ' continue' → logprob: -3.899519920349121
    3. 'ignore' → logprob: -7.024519920349121
    4. 'contin' → logprob: -7.399519920349121
    5. 'pas' → logprob: -7.524519920349121
    6. 'n' → logprob: -7.774519920349121
    7. '                   ' → logprob: -7.774519920349121
    8. 'continu' → logprob: -8.024519920349121
    9. '#' → logprob: -8.899519920349121
    10. '                       ' → logprob: -9.649519920349121

Token 3923: ' traite' (ID: 180696)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.37931549549102783
    2. 'pas' → logprob: -1.2543154954910278
    3. ' continue' → logprob: -4.254315376281738
    4. 'p' → logprob: -5.254315376281738
    5. 'ignore' → logprob: -5.754315376281738
    6. '                   ' → logprob: -5.879315376281738
    7. 'contin' → logprob: -7.129315376281738
    8. 'skip' → logprob: -7.254315376281738
    9. '#' → logprob: -7.504315376281738
    10. 'return' → logprob: -7.879315376281738

Token 3924: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.540801465511322
    2. '                   ' → logprob: -0.915801465511322
    3. '               ' → logprob: -5.290801525115967
    4. 'plus' → logprob: -5.790801525115967
    5. 'continue' → logprob: -6.290801525115967
    6. ' pas' → logprob: -6.665801525115967
    7. '                       ' → logprob: -6.790801525115967
    8. '                    ' → logprob: -7.040801525115967
    9. '```' → logprob: -7.165801525115967
    10. 'r' → logprob: -7.915801525115967

Token 3925: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.32797396183013916
    2. 'continue' → logprob: -1.9529739618301392
    3. '               ' → logprob: -2.7029738426208496
    4. 'dp' → logprob: -4.32797384262085
    5. '```' → logprob: -5.07797384262085
    6. 'pass' → logprob: -5.20297384262085
    7. '                       ' → logprob: -5.32797384262085
    8. ' continue' → logprob: -5.32797384262085
    9. '
' → logprob: -5.70297384262085
    10. '[]
' → logprob: -5.82797384262085

Token 3926: ' mais' (ID: 2899)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5038607120513916
    2. '                   ' → logprob: -1.0038607120513916
    3. ' continue' → logprob: -4.1288604736328125
    4. '                       ' → logprob: -5.1288604736328125
    5. '               ' → logprob: -5.5038604736328125
    6. 'break' → logprob: -5.8788604736328125
    7. '0' → logprob: -8.128860473632812
    8. '           ' → logprob: -10.878860473632812
    9. '                           ' → logprob: -11.003860473632812
    10. '                  ' → logprob: -11.128860473632812

Token 3927: ' pour' (ID: 1930)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14048567414283752
    2. '                   ' → logprob: -2.1404857635498047
    3. ' continue' → logprob: -4.765485763549805
    4. '#' → logprob: -6.140485763549805
    5. '                       ' → logprob: -6.890485763549805
    6. '                    ' → logprob: -8.140485763549805
    7. '               ' → logprob: -8.265485763549805
    8. 'break' → logprob: -8.265485763549805
    9. 'dp' → logprob: -8.390485763549805
    10. '                  ' → logprob: -9.265485763549805

Token 3928: ' la' (ID: 557)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.858613908290863
    2. 'i' → logprob: -0.983613908290863
    3. 'dp' → logprob: -2.233613967895508
    4. 'contin' → logprob: -4.233613967895508
    5. ' continuer' → logprob: -4.608613967895508
    6. ' continue' → logprob: -4.733613967895508
    7. '0' → logprob: -4.983613967895508
    8. 'None' → logprob: -5.108613967895508
    9. 'continu' → logprob: -5.233613967895508
    10. '#' → logprob: -5.358613967895508

Token 3929: ' contin' (ID: 2590)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8732512593269348
    2. 'dp' → logprob: -1.37325119972229
    3. 'break' → logprob: -2.12325119972229
    4. 'contin' → logprob: -2.87325119972229
    5. 'continu' → logprob: -2.99825119972229
    6. '#' → logprob: -3.49825119972229
    7. 'pass' → logprob: -3.99825119972229
    8. 'i' → logprob: -4.498251438140869
    9. 'suite' → logprob: -4.748251438140869
    10. 'return' → logprob: -4.998251438140869

Token 3930: 'uité' (ID: 164164)
  Prédit: 'uité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uité' → logprob: -0.26181837916374207
    2. 'u' → logprob: -1.5118184089660645
    3. 'ue' → logprob: -5.2618184089660645
    4. 'uity' → logprob: -5.7618184089660645
    5. 'ué' → logprob: -7.0118184089660645
    6. 'uation' → logprob: -8.136817932128906
    7. 'uit' → logprob: -8.511817932128906
    8. 'ut' → logprob: -10.136817932128906
    9. 'uer' → logprob: -11.261817932128906
    10. 'ued' → logprob: -11.886817932128906

Token 3931: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1609163135290146
    2. ':' → logprob: -2.785916328430176
    3. ':
' → logprob: -3.160916328430176
    4. '               ' → logprob: -4.285916328430176
    5. '                       ' → logprob: -4.785916328430176
    6. ' :
' → logprob: -5.160916328430176
    7. ',' → logprob: -5.785916328430176
    8. ' :' → logprob: -6.160916328430176
    9. ' continue' → logprob: -6.285916328430176
    10. ' =' → logprob: -6.660916328430176

Token 3932: ' force' (ID: 9578)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16160833835601807
    2. '                   ' → logprob: -2.5366082191467285
    3. ' continue' → logprob: -2.7866082191467285
    4. '               ' → logprob: -6.5366082191467285
    5. 'ignore' → logprob: -6.5366082191467285
    6. 'contin' → logprob: -6.6616082191467285
    7. '                       ' → logprob: -7.6616082191467285
    8. '                    ' → logprob: -7.7866082191467285
    9. '```' → logprob: -7.9116082191467285
    10. 'return' → logprob: -8.286608695983887

Token 3933: ' gros' (ID: 28636)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15229572355747223
    2. '                   ' → logprob: -2.1522958278656006
    3. '                       ' → logprob: -5.0272955894470215
    4. 'dp' → logprob: -5.0272955894470215
    5. '                    ' → logprob: -5.9022955894470215
    6. ' ' → logprob: -6.0272955894470215
    7. '               ' → logprob: -6.5272955894470215
    8. 'False' → logprob: -6.9022955894470215
    9. ' dp' → logprob: -7.5272955894470215
    10. '                     ' → logprob: -7.6522955894470215

Token 3934: ' cout' (ID: 10504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17345058917999268
    2. ' ' → logprob: -2.173450469970703
    3. 'INF' → logprob: -3.923450469970703
    4. '10' → logprob: -5.048450469970703
    5. '                   ' → logprob: -5.298450469970703
    6. ' INF' → logprob: -5.548450469970703
    7. '                    ' → logprob: -6.423450469970703
    8. '100' → logprob: -6.673450469970703
    9. ' ' → logprob: -7.423450469970703
    10. '999' → logprob: -7.423450469970703

Token 3935: '
' (ID: 198)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.47394225001335144
    2. ' =' → logprob: -1.8489422798156738
    3. '100' → logprob: -2.348942279815674
    4. '                   ' → logprob: -3.348942279815674
    5. 'INF' → logprob: -3.598942279815674
    6. '=' → logprob: -4.098942279815674
    7. '               ' → logprob: -4.723942279815674
    8. '999' → logprob: -4.723942279815674
    9. '                       ' → logprob: -5.223942279815674
    10. '           ' → logprob: -5.598942279815674

Token 3936: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020453941076993942
    2. '                       ' → logprob: -4.395453929901123
    3. '                    ' → logprob: -6.020453929901123
    4. '               ' → logprob: -6.145453929901123
    5. '                  ' → logprob: -7.270453929901123
    6. '                           ' → logprob: -7.645453929901123
    7. '           ' → logprob: -8.395454406738281
    8. '                     ' → logprob: -8.645454406738281
    9. '                               ' → logprob: -8.770454406738281
    10. '                                           ' → logprob: -8.770454406738281

Token 3937: ' cost' (ID: 3097)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.08456608653068542
    2. '                   ' → logprob: -2.709566116333008
    3. ' INF' → logprob: -5.334566116333008
    4. '                       ' → logprob: -5.459566116333008
    5. '100' → logprob: -7.084566116333008
    6. 'float' → logprob: -7.084566116333008
    7. '               ' → logprob: -7.209566116333008
    8. '10' → logprob: -7.334566116333008
    9. '999' → logprob: -7.459566116333008
    10. '                    ' → logprob: -7.584566116333008

Token 3938: 'c' (ID: 66)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45792096853256226
    2. ' =' → logprob: -1.082921028137207
    3. 'c' → logprob: -3.582921028137207
    4. '[i' → logprob: -7.332921028137207
    5. '   ' → logprob: -9.082921028137207
    6. '(i' → logprob: -9.332921028137207
    7. '=
' → logprob: -10.707921028137207
    8. '       ' → logprob: -10.957921028137207
    9. '=i' → logprob: -10.957921028137207
    10. 'dp' → logprob: -11.332921028137207

Token 3939: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4293305575847626
    2. '=' → logprob: -1.054330587387085
    3. '                   ' → logprob: -7.554330348968506
    4. '                       ' → logprob: -10.179330825805664
    5. '               ' → logprob: -10.304330825805664
    6. '           ' → logprob: -11.554330825805664
    7. '                    ' → logprob: -11.929330825805664
    8. '   ' → logprob: -13.429330825805664
    9. '                           ' → logprob: -13.429330825805664
    10. '                ' → logprob: -13.554330825805664

Token 3940: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -2.339278580620885e-06
    2. '10' → logprob: -13.375001907348633
    3. ' INF' → logprob: -14.125001907348633
    4. 'IN' → logprob: -18.000001907348633
    5. 'inf' → logprob: -18.875001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '100' → logprob: -19.500001907348633
    8. '_INF' → logprob: -19.625001907348633
    9. 'INT' → logprob: -21.250001907348633
    10. '0' → logprob: -21.375001907348633

Token 3941: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03086850419640541
    2. '                   ' → logprob: -4.7808685302734375
    3. '+' → logprob: -5.0308685302734375
    4. ' +' → logprob: -5.1558685302734375
    5. '                ' → logprob: -5.5308685302734375
    6. '<|end|>' → logprob: -6.2808685302734375
    7. '                       ' → logprob: -7.9058685302734375
    8. ')' → logprob: -8.030868530273438
    9. '```' → logprob: -8.155868530273438
    10. '              ' → logprob: -8.155868530273438

Token 3942: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07354358583688736
    2. '                               ' → logprob: -3.4485435485839844
    3. '                   ' → logprob: -3.9485435485839844
    4. '                ' → logprob: -5.323543548583984
    5. '                           ' → logprob: -5.448543548583984
    6. '                       ' → logprob: -5.698543548583984
    7. '                                       ' → logprob: -6.698543548583984
    8. '                                           ' → logprob: -7.198543548583984
    9. ')' → logprob: -7.448543548583984
    10. '+' → logprob: -7.698543548583984

Token 3943: ' val' (ID: 1459)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25959041714668274
    2. '               ' → logprob: -1.6345903873443604
    3. 'if' → logprob: -4.1345906257629395
    4. 'time' → logprob: -4.6345906257629395
    5. '                   ' → logprob: -5.3845906257629395
    6. ' dp' → logprob: -6.8845906257629395
    7. ' if' → logprob: -7.3845906257629395
    8. '                       ' → logprob: -7.6345906257629395
    9. 'cost' → logprob: -7.8845906257629395
    10. '```' → logprob: -8.134590148925781

Token 3944: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4305584132671356
    2. '=' → logprob: -1.055558443069458
    3. '               ' → logprob: -7.555558204650879
    4. '           ' → logprob: -7.555558204650879
    5. '                   ' → logprob: -7.680558204650879
    6. ' +=' → logprob: -9.430558204650879
    7. '+=' → logprob: -9.680558204650879
    8. '   ' → logprob: -10.305558204650879
    9. '                ' → logprob: -10.680558204650879
    10. '                       ' → logprob: -10.805558204650879

Token 3945: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005368222016841173
    2. ' dp' → logprob: -5.255368232727051
    3. '                   ' → logprob: -9.13036823272705
    4. '               ' → logprob: -10.63036823272705
    5. '(dp' → logprob: -14.88036823272705
    6. '                       ' → logprob: -14.88036823272705
    7. '                ' → logprob: -15.25536823272705
    8. '                  ' → logprob: -15.50536823272705
    9. '                    ' → logprob: -15.75536823272705
    10. '	dp' → logprob: -15.75536823272705

Token 3946: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. 'i' → logprob: -13.625004768371582
    3. ' [' → logprob: -14.125004768371582
    4. '               ' → logprob: -14.375004768371582
    5. '                   ' → logprob: -14.750004768371582
    6. '```' → logprob: -15.000004768371582
    7. '   ' → logprob: -15.250004768371582
    8. '[' → logprob: -15.250004768371582
    9. '           ' → logprob: -16.000003814697266
    10. '       ' → logprob: -16.500003814697266

Token 3947: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3486558496952057
    2. '[i' → logprob: -1.2236558198928833
    3. '               ' → logprob: -9.723655700683594
    4. '[' → logprob: -10.098655700683594
    5. 'i' → logprob: -10.348655700683594
    6. ')[' → logprob: -10.848655700683594
    7. '                   ' → logprob: -11.223655700683594
    8. '           ' → logprob: -11.848655700683594
    9. ' ][' → logprob: -11.973655700683594
    10. ''][' → logprob: -12.348655700683594

Token 3948: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -3.547789674485102e-05
    2. ' used' → logprob: -10.375035285949707
    3. '   ' → logprob: -13.000035285949707
    4. '           ' → logprob: -14.875035285949707
    5. '               ' → logprob: -15.125035285949707
    6. '_used' → logprob: -15.375035285949707
    7. '    ' → logprob: -15.875035285949707
    8. '-used' → logprob: -16.125036239624023
    9. '                   ' → logprob: -16.250036239624023
    10. 'Used' → logprob: -16.375036239624023

Token 3949: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.3856492842023727e-06
    2. 'st' → logprob: -14.125000953674316
    3. 'St' → logprob: -14.875000953674316
    4. '_s' → logprob: -15.625000953674316
    5. '_' → logprob: -16.750001907348633
    6. '   ' → logprob: -18.000001907348633
    7. 's' → logprob: -18.250001907348633
    8. ' _' → logprob: -18.375001907348633
    9. 'Stops' → logprob: -18.875001907348633
    10. '           ' → logprob: -19.000001907348633

Token 3950: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.00046868418576195836
    2. '_ops' → logprob: -8.250468254089355
    3. '_' → logprob: -10.250468254089355
    4. '
' → logprob: -10.250468254089355
    5. '[' → logprob: -10.875468254089355
    6. '{' → logprob: -11.125468254089355
    7. '_t' → logprob: -11.125468254089355
    8. ']' → logprob: -11.375468254089355
    9. 'op' → logprob: -11.625468254089355
    10. 'tops' → logprob: -11.750468254089355

Token 3951: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35804232954978943
    2. '][' → logprob: -1.6080423593521118
    3. '[n' → logprob: -2.7330422401428223
    4. '[val' → logprob: -3.6080422401428223
    5. '               ' → logprob: -5.483042240142822
    6. '[i' → logprob: -6.358042240142822
    7. '                   ' → logprob: -7.483042240142822
    8. ' [' → logprob: -7.483042240142822
    9. '[j' → logprob: -7.608042240142822
    10. '           ' → logprob: -8.35804271697998

Token 3952: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869408965110779
    2. '+' → logprob: -1.1369409561157227
    3. '               ' → logprob: -11.261940956115723
    4. '```' → logprob: -11.386940956115723
    5. '                   ' → logprob: -12.011940956115723
    6. '                       ' → logprob: -12.136940956115723
    7. '+n' → logprob: -12.136940956115723
    8. '+
' → logprob: -12.261940956115723
    9. '                               ' → logprob: -12.386940956115723
    10. '                           ' → logprob: -12.386940956115723

Token 3953: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00033581978641450405
    2. ' cost' → logprob: -8.000335693359375
    3. '(cost' → logprob: -15.500335693359375
    4. '               ' → logprob: -16.000335693359375
    5. '                   ' → logprob: -16.875335693359375
    6. '```' → logprob: -17.500335693359375
    7. 'Cost' → logprob: -18.125335693359375
    8. '                               ' → logprob: -18.375335693359375
    9. 'co' → logprob: -18.500335693359375
    10. '   ' → logprob: -18.500335693359375

Token 3954: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0036701520439237356
    2. '(i' → logprob: -5.6286702156066895
    3. '[i' → logprob: -9.628669738769531
    4. '_c' → logprob: -13.128669738769531
    5. '```' → logprob: -13.628669738769531
    6. '   ' → logprob: -15.128669738769531
    7. 'i' → logprob: -15.503669738769531
    8. '(' → logprob: -15.878669738769531
    9. 'с' → logprob: -16.12866973876953
    10. '`' → logprob: -16.25366973876953

Token 3955: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008903969079256058
    2. '
' → logprob: -4.883903980255127
    3. '                   ' → logprob: -7.883903980255127
    4. '                
' → logprob: -8.508903503417969
    5. '<|end|>' → logprob: -8.883903503417969
    6. '                       ' → logprob: -9.258903503417969
    7. '                ' → logprob: -9.758903503417969
    8. '```' → logprob: -9.883903503417969
    9. '           ' → logprob: -10.008903503417969
    10. '              ' → logprob: -10.008903503417969

Token 3956: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005936628440394998
    2. '                   ' → logprob: -7.750593662261963
    3. '                
' → logprob: -10.625594139099121
    4. '                       ' → logprob: -10.750594139099121
    5. '           ' → logprob: -10.875594139099121
    6. '              ' → logprob: -11.000594139099121
    7. '```' → logprob: -11.125594139099121
    8. '[n' → logprob: -11.250594139099121
    9. 'dp' → logprob: -11.500594139099121
    10. 'n' → logprob: -11.875594139099121

Token 3957: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16655999422073364
    2. 'dp' → logprob: -1.9165599346160889
    3. '                   ' → logprob: -5.791560173034668
    4. '               ' → logprob: -6.666560173034668
    5. ' if' → logprob: -6.916560173034668
    6. '                       ' → logprob: -7.916560173034668
    7. '1' → logprob: -8.291560173034668
    8. '[' → logprob: -9.166560173034668
    9. '```' → logprob: -9.541560173034668
    10. '                           ' → logprob: -9.666560173034668

Token 3958: ' val' (ID: 1459)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0065470971167087555
    2. 'n' → logprob: -5.506546974182129
    3. '                   ' → logprob: -6.631546974182129
    4. '               ' → logprob: -7.631546974182129
    5. ' dp' → logprob: -8.506546974182129
    6. 'i' → logprob: -8.631546974182129
    7. '           ' → logprob: -9.631546974182129
    8. '   ' → logprob: -9.881546974182129
    9. '                           ' → logprob: -10.006546974182129
    10. '                ' → logprob: -11.006546974182129

Token 3959: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2809590995311737
    2. '<n' → logprob: -1.780959129333496
    3. '[' → logprob: -3.655959129333496
    4. ' <' → logprob: -3.780959129333496
    5. '[i' → logprob: -4.905959129333496
    6. '[n' → logprob: -5.655959129333496
    7. '<=' → logprob: -5.780959129333496
    8. '<i' → logprob: -6.280959129333496
    9. '<td' → logprob: -6.780959129333496
    10. '[token' → logprob: -6.780959129333496

Token 3960: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.696889623621246e-06
    2. ' dp' → logprob: -13.00000286102295
    3. '                   ' → logprob: -15.50000286102295
    4. '               ' → logprob: -16.750001907348633
    5. '                       ' → logprob: -18.875001907348633
    6. '           ' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '	dp' → logprob: -19.500001907348633
    9. '                           ' → logprob: -19.625001907348633
    10. '
' → logprob: -20.000001907348633

Token 3961: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001745775662129745
    2. 'i' → logprob: -8.750174522399902
    3. '                   ' → logprob: -12.000174522399902
    4. '```' → logprob: -12.500174522399902
    5. '               ' → logprob: -12.875174522399902
    6. '           ' → logprob: -13.750174522399902
    7. '   ' → logprob: -14.625174522399902
    8. '	i' → logprob: -14.875174522399902
    9. ' i' → logprob: -15.125174522399902
    10. '                ' → logprob: -16.00017547607422

Token 3962: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03530782461166382
    2. '][' → logprob: -3.4103078842163086
    3. 'i' → logprob: -6.410307884216309
    4. ',i' → logprob: -12.785307884216309
    5. '                   ' → logprob: -13.035307884216309
    6. '           ' → logprob: -13.160307884216309
    7. '   ' → logprob: -13.285307884216309
    8. '               ' → logprob: -13.660307884216309
    9. '	i' → logprob: -13.910307884216309
    10. ' i' → logprob: -14.035307884216309

Token 3963: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07260783761739731
    2. '1' → logprob: -3.0726077556610107
    3. '][' → logprob: -4.19760799407959
    4. 'j' → logprob: -5.57260799407959
    5. '[i' → logprob: -5.69760799407959
    6. '   ' → logprob: -8.07260799407959
    7. ']' → logprob: -8.32260799407959
    8. '(i' → logprob: -9.07260799407959
    9. 'used' → logprob: -9.07260799407959
    10. '+' → logprob: -9.32260799407959

Token 3964: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16045595705509186
    2. '][' → logprob: -1.9104559421539307
    3. '[' → logprob: -8.785455703735352
    4. '               ' → logprob: -10.660455703735352
    5. '                   ' → logprob: -10.910455703735352
    6. '           ' → logprob: -11.285455703735352
    7. '[j' → logprob: -12.535455703735352
    8. 'i' → logprob: -12.910455703735352
    9. '[u' → logprob: -13.160455703735352
    10. '}[' → logprob: -13.160455703735352

Token 3965: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008028296753764153
    2. 'used' → logprob: -5.508028507232666
    3. 'j' → logprob: -5.758028507232666
    4. '   ' → logprob: -8.383028030395508
    5. '
' → logprob: -8.633028030395508
    6. 'x' → logprob: -9.133028030395508
    7. '[n' → logprob: -9.633028030395508
    8. 'nj' → logprob: -9.758028030395508
    9. ' nxt' → logprob: -10.258028030395508
    10. 'val' → logprob: -10.883028030395508

Token 3966: 'xt' (ID: 711)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.00787254050374031
    2. 'xt' → logprob: -5.007872581481934
    3. 'j' → logprob: -7.632872581481934
    4. 'x' → logprob: -8.507872581481934
    5. '_used' → logprob: -8.632872581481934
    6. '
' → logprob: -9.382872581481934
    7. '[' → logprob: -10.382872581481934
    8. '   ' → logprob: -10.507872581481934
    9. '[j' → logprob: -10.882872581481934
    10. ']' → logprob: -11.007872581481934

Token 3967: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0023551913909614086
    2. 'j' → logprob: -6.502355098724365
    3. '_st' → logprob: -7.127355098724365
    4. 'st' → logprob: -11.377355575561523
    5. '][' → logprob: -11.752355575561523
    6. '
' → logprob: -12.252355575561523
    7. 'used' → logprob: -12.502355575561523
    8. '_used' → logprob: -12.752355575561523
    9. '```' → logprob: -12.877355575561523
    10. '               ' → logprob: -13.002355575561523

Token 3968: ']:
' (ID: 22152)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10721974074840546
    2. '][' → logprob: -2.482219696044922
    3. '[' → logprob: -4.482219696044922
    4. '[val' → logprob: -5.607219696044922
    5. ']' → logprob: -6.857219696044922
    6. '[n' → logprob: -7.107219696044922
    7. '               ' → logprob: -7.232219696044922
    8. '                   ' → logprob: -9.232219696044922
    9. 'val' → logprob: -9.732219696044922
    10. '           ' → logprob: -9.857219696044922

Token 3969: '                   ' (ID: 699)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11042004078626633
    2. '                               ' → logprob: -3.860419988632202
    3. '                           ' → logprob: -3.860419988632202
    4. '                   ' → logprob: -4.235420227050781
    5. '                       ' → logprob: -4.860420227050781
    6. '               ' → logprob: -4.860420227050781
    7. '```' → logprob: -4.860420227050781
    8. '=
' → logprob: -5.110420227050781
    9. ' =' → logprob: -5.360420227050781
    10. '[' → logprob: -5.360420227050781

Token 3970: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -7.302704761968926e-05
    2. ' dp' → logprob: -10.000073432922363
    3. '                   ' → logprob: -10.625073432922363
    4. '                       ' → logprob: -12.875073432922363
    5. '                           ' → logprob: -15.500073432922363
    6. '	dp' → logprob: -16.000072479248047
    7. '_dp' → logprob: -16.125072479248047
    8. '                               ' → logprob: -16.375072479248047
    9. '```' → logprob: -16.375072479248047
    10. '(dp' → logprob: -17.375072479248047

Token 3971: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010998018842656165
    2. 'i' → logprob: -9.250109672546387
    3. '                   ' → logprob: -11.375109672546387
    4. '```' → logprob: -14.000109672546387
    5. '               ' → logprob: -15.125109672546387
    6. '[' → logprob: -15.625109672546387
    7. '	i' → logprob: -15.875109672546387
    8. '[next' → logprob: -16.375110626220703
    9. '                       ' → logprob: -16.500110626220703
    10. '{i' → logprob: -16.625110626220703

Token 3972: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.551721889991313e-05
    2. '][' → logprob: -10.375065803527832
    3. 'i' → logprob: -10.500065803527832
    4. '                   ' → logprob: -12.250065803527832
    5. '```' → logprob: -14.250065803527832
    6. '               ' → logprob: -15.125065803527832
    7. '[' → logprob: -15.500065803527832
    8. '{i' → logprob: -15.875065803527832
    9. ']' → logprob: -16.000064849853516
    10. '=i' → logprob: -16.250064849853516

Token 3973: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '+' → logprob: -12.375004768371582
    3. '
' → logprob: -15.125004768371582
    4. ' ' → logprob: -15.875004768371582
    5. 'i' → logprob: -16.0000057220459
    6. '   ' → logprob: -17.1250057220459
    7. '```' → logprob: -17.1250057220459
    8. '][' → logprob: -18.5000057220459
    9. '１' → logprob: -19.0000057220459
    10. '           ' → logprob: -19.1250057220459

Token 3974: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008657949976623058
    2. '][' → logprob: -4.758657932281494
    3. '                   ' → logprob: -10.508658409118652
    4. '[' → logprob: -12.133658409118652
    5. 'i' → logprob: -12.258658409118652
    6. '                       ' → logprob: -13.008658409118652
    7. '
' → logprob: -14.383658409118652
    8. '```' → logprob: -14.633658409118652
    9. '           ' → logprob: -14.883658409118652
    10. '               ' → logprob: -14.883658409118652

Token 3975: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009790086187422276
    2. 'used' → logprob: -4.634789943695068
    3. '   ' → logprob: -11.634790420532227
    4. '
' → logprob: -12.634790420532227
    5. 'Used' → logprob: -12.884790420532227
    6. '               ' → logprob: -13.009790420532227
    7. '[n' → logprob: -13.259790420532227
    8. '       ' → logprob: -13.384790420532227
    9. ' used' → logprob: -13.509790420532227
    10. '           ' → logprob: -13.509790420532227

Token 3976: 'xt' (ID: 711)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.9506305456161499
    2. '_j' → logprob: -1.70063054561615
    3. '][' → logprob: -1.82563054561615
    4. '[n' → logprob: -2.5756306648254395
    5. '_used' → logprob: -2.7006306648254395
    6. 'j' → logprob: -2.8256306648254395
    7. '[' → logprob: -3.8256306648254395
    8. '[i' → logprob: -4.2006306648254395
    9. ']' → logprob: -4.9506306648254395
    10. 'used' → logprob: -5.4506306648254395

Token 3977: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0006547740194946527
    2. '][' → logprob: -7.500654697418213
    3. 'j' → logprob: -9.750655174255371
    4. '_' → logprob: -11.625655174255371
    5. ']' → logprob: -12.000655174255371
    6. 'J' → logprob: -12.250655174255371
    7. '[j' → logprob: -12.375655174255371
    8. '_n' → logprob: -12.500655174255371
    9. '_st' → logprob: -12.625655174255371
    10. '               ' → logprob: -12.750655174255371

Token 3978: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20426902174949646
    2. '][' → logprob: -1.9542690515518188
    3. ']=' → logprob: -3.3292689323425293
    4. '                   ' → logprob: -6.204268932342529
    5. '[' → logprob: -6.454268932342529
    6. '[i' → logprob: -7.079268932342529
    7. ']==' → logprob: -7.204268932342529
    8. ']+=' → logprob: -7.579268932342529
    9. '[n' → logprob: -8.079269409179688
    10. '[j' → logprob: -8.204269409179688

Token 3979: ' =' (ID: 314)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.4034200608730316
    2. '[' → logprob: -1.403420090675354
    3. '[i' → logprob: -2.5284199714660645
    4. '[j' → logprob: -5.1534199714660645
    5. 'n' → logprob: -8.528420448303223
    6. '                   ' → logprob: -9.278420448303223
    7. '][' → logprob: -9.528420448303223
    8. '[
' → logprob: -9.653420448303223
    9. '[u' → logprob: -10.153420448303223
    10. '                       ' → logprob: -10.278420448303223

Token 3980: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.002475777640938759
    2. ' val' → logprob: -6.002475738525391
    3. '                   ' → logprob: -16.37747573852539
    4. '	val' → logprob: -18.62747573852539
    5. '[val' → logprob: -19.12747573852539
    6. '_val' → logprob: -19.25247573852539
    7. '(val' → logprob: -20.37747573852539
    8. '.val' → logprob: -20.62747573852539
    9. ',val' → logprob: -21.12747573852539
    10. '               ' → logprob: -21.25247573852539

Token 3981: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5854909420013428
    2. '[' → logprob: -1.7104909420013428
    3. ')' → logprob: -2.2104909420013428
    4. '                           ' → logprob: -2.3354909420013428
    5. '                               ' → logprob: -2.3354909420013428
    6. '<|end|>' → logprob: -2.7104909420013428
    7. '                       ' → logprob: -3.2104909420013428
    8. '                   ' → logprob: -3.3354909420013428
    9. '```' → logprob: -3.7104909420013428
    10. '           ' → logprob: -4.335491180419922

Token 3982: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3983: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.584417462348938
    2. 'for' → logprob: -2.2094173431396484
    3. ')' → logprob: -2.4594173431396484
    4. 'return' → logprob: -2.8344173431396484
    5. '       ' → logprob: -3.4594173431396484
    6. '```' → logprob: -3.7094173431396484
    7. '               ' → logprob: -4.084417343139648
    8. '                           ' → logprob: -4.084417343139648
    9. '                       ' → logprob: -4.334417343139648
    10. '           ' → logprob: -4.459417343139648

Token 3984: ' Maintenant' (ID: 163349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5257847309112549
    2. 'max' → logprob: -2.275784730911255
    3. 'if' → logprob: -2.400784730911255
    4. 'for' → logprob: -2.525784730911255
    5. 'return' → logprob: -2.650784730911255
    6. 'min' → logprob: -3.775784730911255
    7. '#' → logprob: -4.025784492492676
    8. 'dp' → logprob: -4.900784492492676
    9. '
' → logprob: -5.400784492492676
    10. '```' → logprob: -5.775784492492676

Token 3985: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38772428035736084
    2. 'for' → logprob: -1.8877242803573608
    3. '#' → logprob: -2.6377243995666504
    4. 'max' → logprob: -2.8877243995666504
    5. 'min' → logprob: -4.51272439956665
    6. 'possible' → logprob: -4.51272439956665
    7. 'res' → logprob: -5.26272439956665
    8. 'reachable' → logprob: -5.63772439956665
    9. 'result' → logprob: -6.13772439956665
    10. '
' → logprob: -6.13772439956665

Token 3986: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2483029067516327
    2. '#' → logprob: -2.498302936553955
    3. 'return' → logprob: -2.623302936553955
    4. 'la' → logprob: -3.248302936553955
    5. 'M' → logprob: -3.998302936553955
    6. 'l' → logprob: -5.373302936553955
    7. 'final' → logprob: -7.623302936553955
    8. 'for' → logprob: -7.873302936553955
    9. 'i' → logprob: -7.873302936553955
    10. '   ' → logprob: -8.123302459716797

Token 3987: ' fin' (ID: 2131)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.21747072041034698
    2. 'for' → logprob: -2.967470645904541
    3. 'return' → logprob: -3.092470645904541
    4. 'fin' → logprob: -3.842470645904541
    5. '```' → logprob: -4.092470645904541
    6. 'final' → logprob: -4.217470645904541
    7. '[M' → logprob: -4.592470645904541
    8. 'def' → logprob: -5.342470645904541
    9. '#' → logprob: -5.592470645904541
    10. 'dp' → logprob: -6.092470645904541

Token 3988: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20213478803634644
    2. 'if' → logprob: -2.702134847640991
    3. 'return' → logprob: -3.077134847640991
    4. 'for' → logprob: -3.327134847640991
    5. 'min' → logprob: -4.577134609222412
    6. '
' → logprob: -4.827134609222412
    7. '```' → logprob: -5.702134609222412
    8. 'max' → logprob: -5.952134609222412
    9. '#' → logprob: -6.452134609222412
    10. '[min' → logprob: -6.702134609222412

Token 3989: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41731658577919006
    2. 'min' → logprob: -1.9173165559768677
    3. '   ' → logprob: -2.6673166751861572
    4. '#' → logprob: -3.1673166751861572
    5. 'return' → logprob: -4.042316436767578
    6. 'res' → logprob: -4.167316436767578
    7. 'possible' → logprob: -4.167316436767578
    8. 'max' → logprob: -4.417316436767578
    9. 'reachable' → logprob: -4.542316436767578
    10. 'best' → logprob: -5.292316436767578

Token 3990: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.028506610542535782
    2. 'used' → logprob: -4.028506755828857
    3. 'i' → logprob: -5.278506755828857
    4. 'dp' → logprob: -5.778506755828857
    5. ' j' → logprob: -6.903506755828857
    6. 'station' → logprob: -8.2785062789917
    7. 'K' → logprob: -8.2785062789917
    8. 'n' → logprob: -8.9035062789917
    9. 'k' → logprob: -9.7785062789917
    10. ' used' → logprob: -9.9035062789917

Token 3991: ' dernière' (ID: 39497)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'station' → logprob: -1.54440176486969
    2. 'last' → logprob: -1.66940176486969
    3. 'j' → logprob: -1.79440176486969
    4. 'i' → logprob: -1.91940176486969
    5. 'M' → logprob: -2.9194016456604004
    6. 'final' → logprob: -3.0444016456604004
    7. 'S' → logprob: -3.0444016456604004
    8. 'for' → logprob: -3.1694016456604004
    9. 'dp' → logprob: -4.2944016456604
    10. 'idx' → logprob: -4.2944016456604

Token 3992: ' station' (ID: 11538)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6382481455802917
    2. ']' → logprob: -1.5132482051849365
    3. '][' → logprob: -1.8882482051849365
    4. 'i' → logprob: -2.8882482051849365
    5. '```' → logprob: -4.513247966766357
    6. '[' → logprob: -5.013247966766357
    7. 'ligne' → logprob: -5.138247966766357
    8. '   ' → logprob: -5.263247966766357
    9. 'range' → logprob: -6.138247966766357
    10. ')' → logprob: -6.263247966766357

Token 3993: ' S' (ID: 336)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.0679379403591156
    2. '   ' → logprob: -3.0679378509521484
    3. '```' → logprob: -4.817937850952148
    4. '(M' → logprob: -5.942937850952148
    5. '[-' → logprob: -6.692937850952148
    6. 'M' → logprob: -6.817937850952148
    7. '[i' → logprob: -6.942937850952148
    8. '[' → logprob: -7.067937850952148
    9. '][' → logprob: -7.317937850952148
    10. ',' → logprob: -7.317937850952148

Token 3994: '[M' (ID: 98407)
  Prédit: '[M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.09710396081209183
    2. '[-' → logprob: -2.722104072570801
    3. '[i' → logprob: -3.847104072570801
    4. '   ' → logprob: -5.847104072570801
    5. '[' → logprob: -7.472104072570801
    6. '```' → logprob: -7.847104072570801
    7. '[len' → logprob: -7.972104072570801
    8. '`' → logprob: -8.5971040725708
    9. 'idx' → logprob: -8.7221040725708
    10. '][' → logprob: -8.7221040725708

Token 3995: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005651841638609767
    2. '][' → logprob: -8.125565528869629
    3. ']' → logprob: -8.875565528869629
    4. ' -' → logprob: -9.125565528869629
    5. '1' → logprob: -12.125565528869629
    6. '```' → logprob: -12.250565528869629
    7. '[' → logprob: -13.125565528869629
    8. '−' → logprob: -13.375565528869629
    9. '
' → logprob: -13.875565528869629
    10. '   ' → logprob: -14.000565528869629

Token 3996: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.735893965815194e-05
    2. '-' → logprob: -11.375017166137695
    3. '```' → logprob: -12.625017166137695
    4. '#' → logprob: -13.500017166137695
    5. ']' → logprob: -14.500017166137695
    6. '2' → logprob: -15.875017166137695
    7. '0' → logprob: -16.000017166137695
    8. ')' → logprob: -16.375017166137695
    9. '
' → logprob: -16.750017166137695
    10. '   ' → logprob: -16.875017166137695

Token 3997: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.15055719017982483
    2. ']:
' → logprob: -2.275557279586792
    3. ']' → logprob: -3.775557279586792
    4. '],' → logprob: -4.900557041168213
    5. '   ' → logprob: -5.650557041168213
    6. ']
' → logprob: -6.650557041168213
    7. '[' → logprob: -7.900557041168213
    8. '],
' → logprob: -8.150557518005371
    9. ']:' → logprob: -8.275557518005371
    10. ''][' → logprob: -9.150557518005371

Token 3998: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.258133053779602
    2. '   ' → logprob: -1.383133053779602
    3. ':' → logprob: -1.633133053779602
    4. '[' → logprob: -2.5081329345703125
    5. ':
' → logprob: -2.7581329345703125
    6. '```' → logprob: -3.6331329345703125
    7. ',' → logprob: -4.0081329345703125
    8. '
' → logprob: -4.6331329345703125
    9. '#' → logprob: -4.7581329345703125
    10. '[j' → logprob: -4.7581329345703125

Token 3999: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.08330917358398438
    2. 'S' → logprob: -2.7083091735839844
    3. 'N' → logprob: -4.708309173583984
    4. ' station' → logprob: -6.208309173583984
    5. 'K' → logprob: -6.583309173583984
    6. '```' → logprob: -7.583309173583984
    7. '`' → logprob: -9.083309173583984
    8. 'T' → logprob: -9.708309173583984
    9. '``' → logprob: -10.333309173583984
    10. '   ' → logprob: -10.583309173583984

Token 4000: ' N' (ID: 478)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.029445655643939972
    2. 'Limit' → logprob: -4.154445648193359
    3. 'S' → logprob: -5.529445648193359
    4. ']' → logprob: -5.779445648193359
    5. 'limit' → logprob: -6.029445648193359
    6. ' =' → logprob: -7.654445648193359
    7. 'M' → logprob: -7.904445648193359
    8. '_LIMIT' → logprob: -8.02944564819336
    9. '][' → logprob: -8.15444564819336
    10. '=' → logprob: -8.15444564819336

Token 4001: ',
' (ID: 412)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.7585536241531372
    2. '   ' → logprob: -1.1335536241531372
    3. '
' → logprob: -2.7585535049438477
    4. ',' → logprob: -3.2585535049438477
    5. ':
' → logprob: -3.2585535049438477
    6. '(M' → logprob: -4.258553504943848
    7. '[' → logprob: -4.383553504943848
    8. '][' → logprob: -4.633553504943848
    9. 'if' → logprob: -4.633553504943848
    10. ':' → logprob: -5.883553504943848

Token 4002: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1480434685945511
    2. 'for' → logprob: -2.023043394088745
    3. '```' → logprob: -6.273043632507324
    4. ' for' → logprob: -6.398043632507324
    5. '#' → logprob: -7.148043632507324
    6. '       ' → logprob: -8.398043632507324
    7. '
' → logprob: -8.523043632507324
    8. 'return' → logprob: -8.523043632507324
    9. 'pour' → logprob: -9.273043632507324
    10. 'if' → logprob: -9.648043632507324

Token 4003: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6507374048233032
    2. '   ' → logprob: -0.7757374048233032
    3. '#' (adapté à ' #') → logprob: -4.275737285614014
    4. 'on' → logprob: -7.275737285614014
    5. 'max' → logprob: -7.275737285614014
    6. '
' → logprob: -7.525737285614014
    7. '```' → logprob: -7.525737285614014
    8. ' for' → logprob: -7.650737285614014
    9. 'pour' → logprob: -7.650737285614014
    10. '       ' → logprob: -9.150737762451172

Token 4004: ' on' (ID: 402)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7550494074821472
    2. 'for' → logprob: -1.130049467086792
    3. '   ' → logprob: -2.130049467086792
    4. 'max' → logprob: -2.755049467086792
    5. 'if' → logprob: -5.380049228668213
    6. '#' → logprob: -5.505049228668213
    7. 'dp' → logprob: -5.505049228668213
    8. '
' → logprob: -5.630049228668213
    9. 'possible' → logprob: -6.630049228668213
    10. 'best' → logprob: -6.630049228668213

Token 4005: ' cherche' (ID: 52345)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.6346384286880493
    2. 'return' → logprob: -1.2596384286880493
    3. '#' → logprob: -2.3846383094787598
    4. 'ret' → logprob: -3.2596383094787598
    5. 'v' → logprob: -4.50963830947876
    6. 'continue' → logprob: -4.63463830947876
    7. 'do' → logprob: -4.75963830947876
    8. 'for' → logprob: -4.88463830947876
    9. 'final' → logprob: -5.63463830947876
    10. 'ré' → logprob: -6.13463830947876

Token 4006: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014935730956494808
    2. 'for' → logprob: -4.889935493469238
    3. '   ' → logprob: -6.389935493469238
    4. 'the' → logprob: -6.389935493469238
    5. 'la' → logprob: -7.014935493469238
    6. 'le' → logprob: -7.014935493469238
    7. ' min' → logprob: -7.139935493469238
    8. 'max' → logprob: -7.764935493469238
    9. '#' → logprob: -8.639935493469238
    10. 'minimal' → logprob: -9.014935493469238

Token 4007: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.13223743438720703
    2. 'min' → logprob: -2.132237434387207
    3. 'minimal' → logprob: -5.507237434387207
    4. 'plus' → logprob: -7.132237434387207
    5. 'temps' → logprob: -8.507237434387207
    6. ' minimum' → logprob: -9.007237434387207
    7. '
' → logprob: -9.632237434387207
    8. 'me' → logprob: -11.132237434387207
    9. 'max' → logprob: -12.007237434387207
    10. 'val' → logprob: -12.132237434387207

Token 4008: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.003130316734314
    2. 'for' → logprob: -1.503130316734314
    3. '   ' → logprob: -1.753130316734314
    4. 'over' → logprob: -2.5031304359436035
    5. '(dp' → logprob: -3.1281304359436035
    6. 'min' → logprob: -3.5031304359436035
    7. 'val' → logprob: -3.6281304359436035
    8. '(min' → logprob: -4.6281304359436035
    9. '[min' → logprob: -4.6281304359436035
    10. ' over' → logprob: -4.8781304359436035

Token 4009: '[M' (ID: 98407)
  Prédit: '[M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.0018605689983814955
    2. '   ' → logprob: -6.751860618591309
    3. 'M' → logprob: -8.126860618591309
    4. '[i' → logprob: -9.001860618591309
    5. '[-' → logprob: -9.001860618591309
    6. '][' → logprob: -9.751860618591309
    7. '[' → logprob: -10.251860618591309
    8. '[len' → logprob: -11.001860618591309
    9. '[m' → logprob: -12.001860618591309
    10. ' [' → logprob: -12.126860618591309

Token 4010: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.482821431243792e-05
    2. '][' → logprob: -10.12508487701416
    3. ' -' → logprob: -10.25008487701416
    4. '1' → logprob: -12.12508487701416
    5. '[' → logprob: -13.50008487701416
    6. '−' → logprob: -13.50008487701416
    7. '   ' → logprob: -15.12508487701416
    8. '[-' → logprob: -15.87508487701416
    9. '[M' → logprob: -16.250083923339844
    10. ']' → logprob: -16.375083923339844

Token 4011: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '-' → logprob: -12.750004768371582
    3. '2' → logprob: -13.750004768371582
    4. '```' → logprob: -15.625004768371582
    5. '
' → logprob: -16.125003814697266
    6. ' ' → logprob: -17.375003814697266
    7. '#' → logprob: -17.375003814697266
    8. '   ' → logprob: -17.500003814697266
    9. ']' → logprob: -17.687503814697266
    10. '0' → logprob: -18.187503814697266

Token 4012: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007165478076785803
    2. ']' → logprob: -5.007165431976318
    3. '][-' → logprob: -8.632165908813477
    4. '][]' → logprob: -9.507165908813477
    5. '   ' → logprob: -10.007165908813477
    6. '[' → logprob: -10.132165908813477
    7. '][:' → logprob: -10.757165908813477
    8. ']
' → logprob: -11.257165908813477
    9. '-' → logprob: -11.382165908813477
    10. ' ][' → logprob: -11.757165908813477

Token 4013: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1156819611787796
    2. 'k' → logprob: -2.9906818866729736
    3. 'K' → logprob: -3.2406818866729736
    4. 'used' → logprob: -4.240682125091553
    5. ':]
' → logprob: -6.365682125091553
    6. 'n' → logprob: -6.740682125091553
    7. ':]' → logprob: -7.115682125091553
    8. '
' → logprob: -7.615682125091553
    9. 'range' → logprob: -8.615681648254395
    10. '0' → logprob: -8.615681648254395

Token 4014: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3937501609325409
    2. ']' → logprob: -1.1437501907348633
    3. ']
' → logprob: -5.518750190734863
    4. ']:
' → logprob: -7.393750190734863
    5. '[' → logprob: -7.643750190734863
    6. '[j' → logprob: -8.518750190734863
    7. '],' → logprob: -8.518750190734863
    8. '   ' → logprob: -8.643750190734863
    9. ']>' → logprob: -8.893750190734863
    10. ']>=' → logprob: -9.018750190734863

Token 4015: ' où' (ID: 15113)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.1689239889383316
    2. '[' → logprob: -2.29392409324646
    3. '][' → logprob: -3.79392409324646
    4. '   ' → logprob: -4.543923854827881
    5. ']' → logprob: -5.543923854827881
    6. 'for' → logprob: -5.668923854827881
    7. '[K' → logprob: -6.043923854827881
    8. '[-' → logprob: -6.293923854827881
    9. '
' → logprob: -6.918923854827881
    10. '```' → logprob: -6.918923854827881

Token 4016: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00011772842844948173
    2. '0' → logprob: -9.625117301940918
    3. ' j' → logprob: -11.125117301940918
    4. '```' → logprob: -11.125117301940918
    5. 'dp' → logprob: -11.375117301940918
    6. '2' → logprob: -12.625117301940918
    7. '   ' → logprob: -12.750117301940918
    8. ' ' → logprob: -14.000117301940918
    9. '1' → logprob: -14.625117301940918
    10. ' ' → logprob: -15.000117301940918

Token 4017: ' en' (ID: 469)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.03465122729539871
    2. ' <=' → logprob: -4.034651279449463
    3. '>=' → logprob: -5.909651279449463
    4. '][' → logprob: -6.034651279449463
    5. ']<=' → logprob: -6.159651279449463
    6. '```' → logprob: -6.284651279449463
    7. 'in' → logprob: -6.409651279449463
    8. ' in' → logprob: -6.659651279449463
    9. '[' → logprob: -6.909651279449463
    10. ']' → logprob: -7.034651279449463

Token 4018: ' M' (ID: 391)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001182052365038544
    2. '[' → logprob: -10.000118255615234
    3. '[M' → logprob: -10.375118255615234
    4. ' range' → logprob: -10.625118255615234
    5. '   ' → logprob: -12.250118255615234
    6. '
' → logprob: -12.750118255615234
    7. '0' → logprob: -12.750118255615234
    8. 'M' → logprob: -13.000118255615234
    9. ']' → logprob: -13.250118255615234
    10. '```' → logprob: -14.250118255615234

Token 4019: '..' (ID: 485)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1306687593460083
    2. '][' → logprob: -1.3806687593460083
    3. '[M' → logprob: -1.6306687593460083
    4. '..' → logprob: -2.5056686401367188
    5. ':M' → logprob: -3.2556686401367188
    6. ':' → logprob: -3.6306686401367188
    7. '...' → logprob: -3.8806686401367188
    8. 'range' → logprob: -4.255668640136719
    9. ']' → logprob: -4.630668640136719
    10. '[' → logprob: -5.005668640136719

Token 4020: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.026573484763503075
    2. 'range' → logprob: -3.651573419570923
    3. '
' → logprob: -9.026573181152344
    4. 'M' → logprob: -10.401573181152344
    5. '[K' → logprob: -10.401573181152344
    6. '   ' → logprob: -10.526573181152344
    7. ' range' → logprob: -11.151573181152344
    8. ' K' → logprob: -11.776573181152344
    9. '[' → logprob: -12.151573181152344
    10. '...' → logprob: -12.276573181152344

Token 4021: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43972405791282654
    2. '[' → logprob: -2.4397239685058594
    3. 'for' → logprob: -2.9397239685058594
    4. '```' → logprob: -3.0647239685058594
    5. '[min' → logprob: -3.5647239685058594
    6. '
' → logprob: -3.6897239685058594
    7. ']' → logprob: -3.8147239685058594
    8. '[M' → logprob: -4.189723968505859
    9. ':
' → logprob: -4.564723968505859
    10. '][' → logprob: -4.564723968505859

Token 4022: ' si' (ID: 1784)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.32383832335472107
    2. 'dp' → logprob: -1.5738383531570435
    3. '<=' → logprob: -2.823838233947754
    4. '```' → logprob: -5.698838233947754
    5. '0' → logprob: -6.948838233947754
    6. '[j' → logprob: -7.323838233947754
    7. '(dp' → logprob: -7.698838233947754
    8. '≤' → logprob: -7.698838233947754
    9. ' dp' → logprob: -7.823838233947754
    10. ' <=' → logprob: -7.948838233947754

Token 4023: ' S' (ID: 336)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005567280459217727
    2. ' dp' → logprob: -7.500556945800781
    3. '(dp' → logprob: -13.375556945800781
    4. '   ' → logprob: -13.875556945800781
    5. 'val' → logprob: -14.750556945800781
    6. '	dp' → logprob: -14.750556945800781
    7. '```' → logprob: -16.12555694580078
    8. '           ' → logprob: -16.87555694580078
    9. '    ' → logprob: -17.25055694580078
    10. '_dp' → logprob: -17.25055694580078

Token 4024: '[M' (ID: 98407)
  Prédit: '[M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.00900664459913969
    2. '][' → logprob: -6.259006500244141
    3. '   ' → logprob: -6.759006500244141
    4. '[idx' → logprob: -6.884006500244141
    5. '[' → logprob: -6.884006500244141
    6. ']' → logprob: -7.009006500244141
    7. '[i' → logprob: -7.009006500244141
    8. 'idx' → logprob: -7.634006500244141
    9. '[-' → logprob: -8.88400650024414
    10. '[m' → logprob: -9.00900650024414

Token 4025: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00011284107313258573
    2. '[' → logprob: -9.375112533569336
    3. ' -' → logprob: -10.875112533569336
    4. '[-' → logprob: -12.000112533569336
    5. '][' → logprob: -13.875112533569336
    6. '−' → logprob: -14.625112533569336
    7. '   ' → logprob: -15.000112533569336
    8. '[i' → logprob: -15.250112533569336
    9. '1' → logprob: -15.375112533569336
    10. ']' → logprob: -16.250112533569336

Token 4026: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03836241737008095
    2. '-' → logprob: -3.288362503051758
    3. '][' → logprob: -8.913362503051758
    4. '   ' → logprob: -9.788362503051758
    5. '#' → logprob: -10.163362503051758
    6. ']' → logprob: -10.538362503051758
    7. '[' → logprob: -11.538362503051758
    8. '
' → logprob: -11.538362503051758
    9. ' ' → logprob: -11.663362503051758
    10. '```' → logprob: -11.788362503051758

Token 4027: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007929668761789799
    2. ']' → logprob: -5.007929801940918
    3. '   ' → logprob: -8.382929801940918
    4. '[' → logprob: -8.632929801940918
    5. '[j' → logprob: -9.132929801940918
    6. '[M' → logprob: -9.132929801940918
    7. ']][' → logprob: -9.507929801940918
    8. ']
' → logprob: -9.757929801940918
    9. ']:
' → logprob: -9.882929801940918
    10. ''][' → logprob: -10.007929801940918

Token 4028: ' ≥' (ID: 99731)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.165938138961792
    2. '[j' → logprob: -2.915938138961792
    3. '[' → logprob: -3.665938138961792
    4. ']' → logprob: -3.790938138961792
    5. '==' → logprob: -4.290938377380371
    6. '
' → logprob: -5.165938377380371
    7. '>=' → logprob: -5.540938377380371
    8. ']==' → logprob: -5.540938377380371
    9. '[M' → logprob: -5.540938377380371
    10. '[i' → logprob: -6.165938377380371

Token 4029: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -0.0006945623317733407
    2. 'S' → logprob: -8.375694274902344
    3. ' station' → logprob: -8.625694274902344
    4. 'T' → logprob: -8.875694274902344
    5. '0' → logprob: -9.875694274902344
    6. '   ' → logprob: -10.750694274902344
    7. '```' → logprob: -10.750694274902344
    8. '1' → logprob: -11.250694274902344
    9. 'idx' → logprob: -11.375694274902344
    10. 'K' → logprob: -12.000694274902344

Token 4030: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.050982456654310226
    2. ']' → logprob: -4.050982475280762
    3. '[M' → logprob: -4.800982475280762
    4. '_' → logprob: -5.050982475280762
    5. ']_' → logprob: -5.925982475280762
    6. '_idx' → logprob: -6.050982475280762
    7. '_]' → logprob: -6.675982475280762
    8. ']
' → logprob: -6.800982475280762
    9. '_limits' → logprob: -6.800982475280762
    10. '][' → logprob: -6.925982475280762

Token 4031: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9865632653236389
    2. ':
' → logprob: -1.1115632057189941
    3. '   ' → logprob: -2.486563205718994
    4. ':' → logprob: -2.611563205718994
    5. '[i' → logprob: -2.736563205718994
    6. '```' → logprob: -4.361563205718994
    7. ' and' → logprob: -4.861563205718994
    8. 'and' → logprob: -4.861563205718994
    9. '[j' → logprob: -4.986563205718994
    10. '[M' → logprob: -5.486563205718994

Token 4032: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5352503657341003
    2. ':
' → logprob: -1.1602504253387451
    3. ':' → logprob: -3.785250425338745
    4. '[M' → logprob: -4.410250186920166
    5. '```' → logprob: -4.535250186920166
    6. '[' → logprob: -4.535250186920166
    7. '
' → logprob: -5.035250186920166
    8. ' and' → logprob: -5.660250186920166
    9. 'if' → logprob: -5.660250186920166
    10. 'for' → logprob: -5.660250186920166

Token 4033: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2378835827112198
    2. 'for' → logprob: -2.4878835678100586
    3. '[' → logprob: -3.3628835678100586
    4. '```' → logprob: -3.8628835678100586
    5. '[M' → logprob: -4.487883567810059
    6. '0' → logprob: -4.612883567810059
    7. '
' → logprob: -4.737883567810059
    8. '[min' → logprob: -4.987883567810059
    9. 'if' → logprob: -5.237883567810059
    10. ']' → logprob: -5.612883567810059

Token 4034: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4599541127681732
    2. '0' → logprob: -1.4599541425704956
    3. 'min' → logprob: -2.334954023361206
    4. 'for' → logprob: -4.209954261779785
    5. '[M' → logprob: -4.834954261779785
    6. '
' → logprob: -6.084954261779785
    7. '```' → logprob: -6.334954261779785
    8. 'max' → logprob: -6.334954261779785
    9. '[min' → logprob: -6.334954261779785
    10. 'if' → logprob: -6.709954261779785

Token 4035: '[M' (ID: 98407)
  Prédit: '[M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.06712441891431808
    2. '_idx' → logprob: -4.067124366760254
    3. 'idx' → logprob: -4.317124366760254
    4. ' =' → logprob: -4.692124366760254
    5. '[-' → logprob: -5.192124366760254
    6. '_len' → logprob: -5.567124366760254
    7. '   ' → logprob: -5.692124366760254
    8. '_length' → logprob: -6.317124366760254
    9. '_index' → logprob: -6.692124366760254
    10. ')' → logprob: -7.067124366760254

Token 4036: '-' (ID: 12)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.7188521027565002
    2. '[-' → logprob: -0.8438521027565002
    3. '-' → logprob: -2.7188520431518555
    4. '   ' → logprob: -4.9688520431518555
    5. '[' → logprob: -5.4688520431518555
    6. 'M' → logprob: -7.0938520431518555
    7. '[m' → logprob: -7.2188520431518555
    8. ']' → logprob: -7.4688520431518555
    9. '```' → logprob: -7.4688520431518555
    10. '][' → logprob: -7.7188520431518555

Token 4037: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22602301836013794
    2. '-' → logprob: -1.6010229587554932
    3. '#' → logprob: -8.476022720336914
    4. '```' → logprob: -8.726022720336914
    5. '0' → logprob: -9.226022720336914
    6. '   ' → logprob: -10.101022720336914
    7. '–' → logprob: -10.351022720336914
    8. ']' → logprob: -10.976022720336914
    9. '
' → logprob: -11.851022720336914
    10. '[' → logprob: -11.976022720336914

Token 4038: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4800547957420349
    2. '][' → logprob: -2.2300548553466797
    3. '[-' → logprob: -2.4800548553466797
    4. '[M' → logprob: -2.8550548553466797
    5. '][-' → logprob: -3.2300548553466797
    6. ']>=' → logprob: -3.6050548553466797
    7. '>=' → logprob: -3.8550548553466797
    8. '[' → logprob: -4.73005485534668
    9. '   ' → logprob: -4.85505485534668
    10. ']==' → logprob: -5.48005485534668

Token 4039: ' est' (ID: 893)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7981387972831726
    2. '[M' → logprob: -1.0481388568878174
    3. '[' → logprob: -1.9231388568878174
    4. ' >=' → logprob: -4.173138618469238
    5. ']>=' → logprob: -4.423138618469238
    6. '[-' → logprob: -4.548138618469238
    7. ']' → logprob: -5.423138618469238
    8. '[S' → logprob: -5.798138618469238
    9. '==' → logprob: -6.298138618469238
    10. '```' → logprob: -6.548138618469238

Token 4040: ' station' (ID: 11538)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6378428339958191
    2. 'station' → logprob: -1.5128428936004639
    3. '>=' → logprob: -1.6378428936004639
    4. 'N' → logprob: -4.387842655181885
    5. '==' → logprob: -4.637842655181885
    6. '   ' → logprob: -4.887842655181885
    7. '=' → logprob: -5.137842655181885
    8. '≥' → logprob: -5.387842655181885
    9. '>' → logprob: -5.887842655181885
    10. 'K' → logprob: -6.137842655181885

Token 4041: ' N' (ID: 478)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.5614974498748779
    2. ']' → logprob: -1.311497449874878
    3. '[-' → logprob: -3.436497449874878
    4. 'M' → logprob: -3.936497449874878
    5. '],' → logprob: -4.061497688293457
    6. '   ' → logprob: -4.686497688293457
    7. ']
' → logprob: -4.686497688293457
    8. '```' → logprob: -4.811497688293457
    9. 'N' → logprob: -4.936497688293457
    10. '(M' → logprob: -5.311497688293457

Token 4042: ',' (ID: 11)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.10727275907993317
    2. '   ' → logprob: -3.1072728633880615
    3. ']' → logprob: -4.732272624969482
    4. '][' → logprob: -4.857272624969482
    5. '
' → logprob: -4.982272624969482
    6. ']
' → logprob: -5.107272624969482
    7. ':
' → logprob: -5.232272624969482
    8. 'if' → logprob: -5.357272624969482
    9. '(M' → logprob: -5.732272624969482
    10. 'def' → logprob: -5.732272624969482

Token 4043: ' toujours' (ID: 16867)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6906522512435913
    2. 'if' → logprob: -1.8156522512435913
    3. '
' → logprob: -1.9406522512435913
    4. 'for' → logprob: -2.815652370452881
    5. 'min' → logprob: -2.815652370452881
    6. '```' → logprob: -3.065652370452881
    7. 'dp' → logprob: -5.065652370452881
    8. '0' → logprob: -5.690652370452881
    9. 'j' → logprob: -6.190652370452881
    10. '#' → logprob: -6.315652370452881

Token 4044: ' ≥' (ID: 99731)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.07441981881856918
    2. '   ' → logprob: -4.199419975280762
    3. '][' → logprob: -4.574419975280762
    4. 'if' → logprob: -5.074419975280762
    5. '0' → logprob: -5.324419975280762
    6. '(M' → logprob: -5.449419975280762
    7. 'def' → logprob: -5.574419975280762
    8. 'dp' → logprob: -5.699419975280762
    9. '```' → logprob: -5.949419975280762
    10. '[' → logprob: -5.949419975280762

Token 4045: ' station' (ID: 11538)
  Prédit: 'station'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'station' → logprob: -2.6537622034084052e-05
    2. ' station' → logprob: -11.75002670288086
    3. 'S' → logprob: -12.12502670288086
    4. 'idx' → logprob: -12.25002670288086
    5. '   ' → logprob: -12.37502670288086
    6. '```' → logprob: -13.12502670288086
    7. '  ' → logprob: -13.37502670288086
    8. '`' → logprob: -15.75002670288086
    9. '           ' → logprob: -15.75002670288086
    10. '``' → logprob: -16.00002670288086

Token 4046: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.007045809645205736
    2. '[M' → logprob: -5.132045745849609
    3. '[idx' → logprob: -6.882045745849609
    4. '   ' → logprob: -10.38204574584961
    5. 'limit' → logprob: -10.88204574584961
    6. 'Limit' → logprob: -11.50704574584961
    7. '_idx' → logprob: -12.13204574584961
    8. '[' → logprob: -12.25704574584961
    9. 'idx' → logprob: -12.63204574584961
    10. '_limits' → logprob: -12.88204574584961

Token 4047: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2626093924045563
    2. '[M' → logprob: -1.8876093626022339
    3. '[' → logprob: -3.7626094818115234
    4. 'if' → logprob: -4.137609481811523
    5. '```' → logprob: -4.512609481811523
    6. '
' → logprob: -5.262609481811523
    7. '][' → logprob: -5.762609481811523
    8. ':
' → logprob: -5.887609481811523
    9. ']' → logprob: -5.887609481811523
    10. '       ' → logprob: -6.012609481811523

Token 4048: 'car' (ID: 6830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9512059092521667
    2. '):
' → logprob: -2.4512059688568115
    3. 'if' → logprob: -2.5762059688568115
    4. ':
' → logprob: -2.5762059688568115
    5. ':' → logprob: -2.9512059688568115
    6. ')' → logprob: -2.9512059688568115
    7. '):' → logprob: -3.3262059688568115
    8. ')
' → logprob: -3.3262059688568115
    9. '       ' → logprob: -3.8262059688568115
    10. '
' → logprob: -3.9512059688568115

Token 4049: ' station' (ID: 11538)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5775068998336792
    2. 'station' → logprob: -0.8275068998336792
    3. '#' → logprob: -7.577507019042969
    4. '```' → logprob: -8.577507019042969
    5. ' station' → logprob: -9.202507019042969
    6. '
' → logprob: -9.327507019042969
    7. '   ' → logprob: -9.327507019042969
    8. 'st' → logprob: -9.452507019042969
    9. 'sta' → logprob: -9.702507019042969
    10. ' S' → logprob: -10.077507019042969

Token 4050: '_limit' (ID: 34361)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.1180519163608551
    2. '_limit' → logprob: -2.3680520057678223
    3. ']' → logprob: -5.118052005767822
    4. 's' → logprob: -6.118052005767822
    5. 'M' → logprob: -6.618052005767822
    6. 'limit' → logprob: -6.868052005767822
    7. ')' → logprob: -6.993052005767822
    8. '```' → logprob: -6.993052005767822
    9. '   ' → logprob: -7.368052005767822
    10. '[N' → logprob: -7.743052005767822

Token 4051: ' ≤' (ID: 72554)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9903920888900757
    2. '>=' → logprob: -0.9903920888900757
    3. ']' → logprob: -2.6153922080993652
    4. ' <=' → logprob: -2.7403922080993652
    5. ' >=' → logprob: -3.1153922080993652
    6. ']>=' → logprob: -3.7403922080993652
    7. '==' → logprob: -3.8653922080993652
    8. '```' → logprob: -4.865392208099365
    9. ')' → logprob: -5.490392208099365
    10. ']<=' → logprob: -5.740392208099365

Token 4052: ' N' (ID: 478)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.22044047713279724
    2. 'station' → logprob: -2.09544038772583
    3. 'N' → logprob: -2.59544038772583
    4. ' station' → logprob: -9.345440864562988
    5. ' S' → logprob: -10.470440864562988
    6. '
' → logprob: -10.845440864562988
    7. '```' → logprob: -10.845440864562988
    8. '   ' → logprob: -10.845440864562988
    9. ' ' → logprob: -12.345440864562988
    10. 'st' → logprob: -12.470440864562988

Token 4053: ')

' (ID: 1029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3591834008693695
    2. '[M' → logprob: -2.4841833114624023
    3. '):
' → logprob: -2.9841833114624023
    4. ']:
' → logprob: -3.3591833114624023
    5. ']' → logprob: -3.4841833114624023
    6. ':
' → logprob: -3.8591833114624023
    7. '][' → logprob: -3.9841833114624023
    8. '-' → logprob: -4.234183311462402
    9. '
' → logprob: -4.609183311462402
    10. ']
' → logprob: -4.734183311462402

Token 4054: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5302285552024841
    2. 'min' → logprob: -1.155228614807129
    3. 'for' → logprob: -3.155228614807129
    4. 'best' → logprob: -4.155228614807129
    5. '
' → logprob: -4.280228614807129
    6. 'res' → logprob: -5.405228614807129
    7. 'return' → logprob: -5.780228614807129
    8. '[min' → logprob: -5.905228614807129
    9. 'minimum' → logprob: -6.030228614807129
    10. '```' → logprob: -6.030228614807129

Token 4055: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8113123774528503
    2. 'for' (adapté à ' for') → logprob: -1.0613124370574951
    3. 'min' → logprob: -1.6863124370574951
    4. 'return' → logprob: -5.436312198638916
    5. '
' → logprob: -5.561312198638916
    6. 'best' → logprob: -5.561312198638916
    7. '```' → logprob: -5.811312198638916
    8. 'if' → logprob: -5.936312198638916
    9. 'dp' → logprob: -7.061312198638916
    10. ' for' → logprob: -7.061312198638916

Token 4056: ' stops' (ID: 29924)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0032140801195055246
    2. 'used' → logprob: -5.753213882446289
    3. ' j' → logprob: -10.503213882446289
    4. '   ' → logprob: -12.378213882446289
    5. ' used' → logprob: -13.378213882446289
    6. '_j' → logprob: -13.753213882446289
    7. 'n' → logprob: -14.628213882446289
    8. '	j' → logprob: -14.753213882446289
    9. '```' → logprob: -15.378213882446289
    10. '_used' → logprob: -15.753213882446289

Token 4057: '_used' (ID: 67016)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05618274584412575
    2. ' in' → logprob: -2.931182861328125
    3. 'i' → logprob: -6.931182861328125
    4. '[i' → logprob: -8.931182861328125
    5. '[in' → logprob: -9.681182861328125
    6. '   ' → logprob: -10.431182861328125
    7. '[j' → logprob: -10.806182861328125
    8. 'count' → logprob: -10.931182861328125
    9. '[' → logprob: -11.181182861328125
    10. '```' → logprob: -11.931182861328125

Token 4058: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.160235196352005
    2. ' in' → logprob: -1.9102351665496826
    3. '[in' → logprob: -12.410235404968262
    4. '   ' → logprob: -13.535235404968262
    5. '	in' → logprob: -13.535235404968262
    6. 'en' → logprob: -13.785235404968262
    7. '```' → logprob: -13.910235404968262
    8. ' ' → logprob: -14.660235404968262
    9. '[' → logprob: -14.785235404968262
    10. '
' → logprob: -14.910235404968262

Token 4059: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008899023523554206
    2. 'M' → logprob: -7.250889778137207
    3. '(M' → logprob: -9.000889778137207
    4. ' range' → logprob: -10.000889778137207
    5. '[M' → logprob: -11.750889778137207
    6. '
' → logprob: -13.250889778137207
    7. '   ' → logprob: -14.000889778137207
    8. '(range' → logprob: -15.000889778137207
    9. 'in' → logprob: -15.125889778137207
    10. ' ' → logprob: -17.000890731811523

Token 4060: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00020592445798683912
    2. '(M' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.875205993652344
    4. '[M' → logprob: -14.250205993652344
    5. ' M' → logprob: -14.625205993652344
    6. ',M' → logprob: -15.750205993652344
    7. '	M' → logprob: -15.750205993652344
    8. '=M' → logprob: -17.875205993652344
    9. '
' → logprob: -18.000205993652344
    10. ',' → logprob: -18.500205993652344

Token 4061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005629293154925108
    2. ',M' → logprob: -5.630629062652588
    3. ',K' → logprob: -6.255629062652588
    4. ' ,' → logprob: -9.505629539489746
    5. ',N' → logprob: -11.505629539489746
    6. ',len' → logprob: -12.130629539489746
    7. '   ' → logprob: -13.255629539489746
    8. ',Q' → logprob: -13.505629539489746
    9. '):
' → logprob: -13.630629539489746
    10. ',P' → logprob: -13.630629539489746

Token 4062: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.5776860184123507e-06
    2. ' K' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.000001907348633
    4. '
' → logprob: -19.250001907348633
    5. '```' → logprob: -19.750001907348633
    6. '(K' → logprob: -19.875001907348633
    7. '>K' → logprob: -21.125001907348633
    8. '       ' → logprob: -21.500001907348633
    9. '           ' → logprob: -21.875001907348633
    10. ')' → logprob: -22.000001907348633

Token 4063: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00038419815246015787
    2. ' +' → logprob: -8.125384330749512
    3. ',' → logprob: -9.625384330749512
    4. ',K' → logprob: -11.000384330749512
    5. 'K' → logprob: -12.250384330749512
    6. '```' → logprob: -15.375384330749512
    7. '[' → logprob: -16.000383377075195
    8. '   ' → logprob: -16.375383377075195
    9. '{' → logprob: -16.875383377075195
    10. '+
' → logprob: -17.000383377075195

Token 4064: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012403888104017824
    2. '+' → logprob: -9.000123977661133
    3. ' ' → logprob: -15.000123977661133
    4. ' +' → logprob: -15.875123977661133
    5. '   ' → logprob: -17.500123977661133
    6. '
' → logprob: -17.875123977661133
    7. '(' → logprob: -18.250123977661133
    8. '{' → logprob: -18.250123977661133
    9. ')' → logprob: -18.750123977661133
    10. ')+' → logprob: -18.750123977661133

Token 4065: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7686187028884888
    2. '       ' → logprob: -1.0186187028884888
    3. ':' → logprob: -2.393618583679199
    4. '):
' → logprob: -2.518618583679199
    5. '   ' → logprob: -6.893618583679199
    6. '+' → logprob: -7.268618583679199
    7. '():
' → logprob: -7.768618583679199
    8. '	' → logprob: -7.768618583679199
    9. '):' → logprob: -8.3936185836792
    10. '           ' → logprob: -9.0186185836792

Token 4066: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057774619199335575
    2. '```' → logprob: -5.380777359008789
    3. '   ' → logprob: -7.255777359008789
    4. 'if' → logprob: -8.005777359008789
    5. ' if' → logprob: -9.755777359008789
    6. '``' → logprob: -10.630777359008789
    7. '[' → logprob: -11.505777359008789
    8. '<|end|>' → logprob: -11.505777359008789
    9. '           ' → logprob: -12.255777359008789
    10. '`' → logprob: -13.505777359008789

Token 4067: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1315210461616516
    2. '       ' → logprob: -2.131520986557007
    3. ' if' → logprob: -5.631521224975586
    4. '           ' → logprob: -7.631521224975586
    5. '```' → logprob: -7.881521224975586
    6. '   ' → logprob: -9.131521224975586
    7. 'for' → logprob: -11.756521224975586
    8. 'If' → logprob: -12.256521224975586
    9. '	if' → logprob: -12.506521224975586
    10. '``' → logprob: -12.881521224975586

Token 4068: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0015070053050294518
    2. ' dp' → logprob: -6.501506805419922
    3. '(dp' → logprob: -13.126506805419922
    4. '       ' → logprob: -13.501506805419922
    5. '	dp' → logprob: -14.251506805419922
    6. '   ' → logprob: -14.626506805419922
    7. '           ' → logprob: -15.626506805419922
    8. '_dp' → logprob: -16.501506805419922
    9. '    ' → logprob: -18.126506805419922
    10. '     ' → logprob: -19.001506805419922

Token 4069: '[M' (ID: 98407)
  Prédit: '[M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.0005491026677191257
    2. '[i' → logprob: -7.87554931640625
    3. '[len' → logprob: -9.62554931640625
    4. '[' → logprob: -9.75054931640625
    5. '[m' → logprob: -10.87554931640625
    6. '   ' → logprob: -11.87554931640625
    7. '[-' → logprob: -12.12554931640625
    8. 'M' → logprob: -12.12554931640625
    9. '][' → logprob: -13.37554931640625
    10. '```' → logprob: -13.37554931640625

Token 4070: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00046332005877047777
    2. '[M' → logprob: -8.250463485717773
    3. ' -' → logprob: -9.500463485717773
    4. '][' → logprob: -9.750463485717773
    5. '[' → logprob: -10.375463485717773
    6. '   ' → logprob: -11.125463485717773
    7. '1' → logprob: -11.625463485717773
    8. '[m' → logprob: -11.750463485717773
    9. '[-' → logprob: -13.000463485717773
    10. 'M' → logprob: -13.625463485717773

Token 4071: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009783949702978134
    2. '-' → logprob: -4.634783744812012
    3. '```' → logprob: -11.509783744812012
    4. '...' → logprob: -12.009783744812012
    5. ' ' → logprob: -13.134783744812012
    6. '   ' → logprob: -13.509783744812012
    7. '#' → logprob: -13.884783744812012
    8. '[' → logprob: -13.884783744812012
    9. '–' → logprob: -14.009783744812012
    10. ' -' → logprob: -14.259783744812012

Token 4072: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002069610171020031
    2. '[M' → logprob: -6.377069473266602
    3. '[i' → logprob: -8.502069473266602
    4. '[' → logprob: -9.627069473266602
    5. '       ' → logprob: -10.502069473266602
    6. '[m' → logprob: -11.127069473266602
    7. ']' → logprob: -11.252069473266602
    8. '   ' → logprob: -11.502069473266602
    9. '```' → logprob: -12.252069473266602
    10. '           ' → logprob: -12.377069473266602

Token 4073: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.7432603272027336e-06
    2. ' stops' → logprob: -13.750001907348633
    3. 'stop' → logprob: -14.750001907348633
    4. 'K' → logprob: -16.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. 'Stops' → logprob: -17.750001907348633
    7. 'n' → logprob: -18.125001907348633
    8. 'M' → logprob: -18.125001907348633
    9. '[' → logprob: -18.500001907348633
    10. ']' → logprob: -18.750001907348633

Token 4074: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0006648990092799067
    2. '```' → logprob: -8.375664710998535
    3. ']' → logprob: -8.500664710998535
    4. '[' → logprob: -9.750664710998535
    5. ']
' → logprob: -10.750664710998535
    6. '][' → logprob: -10.875664710998535
    7. '#' → logprob: -11.000664710998535
    8. '=' → logprob: -11.000664710998535
    9. '   ' → logprob: -11.125664710998535
    10. ')' → logprob: -11.750664710998535

Token 4075: '_used' (ID: 67016)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10976973176002502
    2. '_used' → logprob: -2.609769821166992
    3. 'ops' → logprob: -4.359769821166992
    4. ']' → logprob: -4.734769821166992
    5. 'op' → logprob: -5.234769821166992
    6. 'used' → logprob: -6.359769821166992
    7. 'Used' → logprob: -7.484769821166992
    8. ']
' → logprob: -7.734769821166992
    9. '```' → logprob: -8.609769821166992
    10. 'opped' → logprob: -8.734769821166992

Token 4076: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20206095278263092
    2. ']<=' → logprob: -1.7020609378814697
    3. ']==' → logprob: -8.07706069946289
    4. ']!=' → logprob: -8.95206069946289
    5. '<=' → logprob: -9.57706069946289
    6. ']>' → logprob: -10.57706069946289
    7. ']>=' → logprob: -10.70206069946289
    8. ']<' → logprob: -10.70206069946289
    9. ' ]' → logprob: -11.07706069946289
    10. '```' → logprob: -11.20206069946289

Token 4077: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.31614574790000916
    2. ' <=' → logprob: -1.3161457777023315
    3. '[' → logprob: -6.691145896911621
    4. ']<=' → logprob: -6.691145896911621
    5. '```' → logprob: -8.066145896911621
    6. ')<=' → logprob: -9.941145896911621
    7. ']' → logprob: -11.066145896911621
    8. '       ' → logprob: -12.566145896911621
    9. '           ' → logprob: -12.941145896911621
    10. '][' → logprob: -13.066145896911621

Token 4078: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.7120533811976202e-05
    2. ' T' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.875017166137695
    4. '	T' → logprob: -18.375017166137695
    5. '       ' → logprob: -21.125017166137695
    6. ' ' → logprob: -21.375017166137695
    7. '  ' → logprob: -21.500017166137695
    8. ' ' → logprob: -21.625017166137695
    9. 't' → logprob: -22.000017166137695
    10. '_T' → logprob: -22.250017166137695

Token 4079: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8122215270996094
    2. '           ' → logprob: -1.0622215270996094
    3. ':
' → logprob: -1.6872215270996094
    4. '       ' → logprob: -4.437221527099609
    5. ':return' → logprob: -4.937221527099609
    6. ' and' → logprob: -6.187221527099609
    7. '               ' → logprob: -6.312221527099609
    8. '		' → logprob: -7.437221527099609
    9. '):
' → logprob: -8.06222152709961
    10. '          ' → logprob: -8.06222152709961

Token 4080: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00431807991117239
    2. 'return' → logprob: -5.5043182373046875
    3. ' return' → logprob: -8.879318237304688
    4. '		' → logprob: -10.504318237304688
    5. '       ' → logprob: -11.004318237304688
    6. '               ' → logprob: -11.129318237304688
    7. '```' → logprob: -11.629318237304688
    8. ':return' → logprob: -11.629318237304688
    9. '          ' → logprob: -11.754318237304688
    10. '	       ' → logprob: -12.004318237304688

Token 4081: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.031011350452899933
    2. '           ' → logprob: -3.5310113430023193
    3. ' return' → logprob: -6.906011581420898
    4. '               ' → logprob: -8.531011581420898
    5. '{return' → logprob: -10.906011581420898
    6. ':return' → logprob: -11.281011581420898
    7. '	return' → logprob: -11.406011581420898
    8. '```' → logprob: -11.531011581420898
    9. '		' → logprob: -12.656011581420898
    10. '       ' → logprob: -13.406011581420898

Token 4082: ' Ici' (ID: 145754)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007148159202188253
    2. '           ' → logprob: -7.5007147789001465
    3. ' return' → logprob: -8.750715255737305
    4. '	return' → logprob: -13.000715255737305
    5. '{return' → logprob: -14.625715255737305
    6. '		' → logprob: -15.000715255737305
    7. '               ' → logprob: -15.375715255737305
    8. '```' → logprob: -15.625715255737305
    9. ':return' → logprob: -16.375715255737305
    10. 'Return' → logprob: -17.625715255737305

Token 4083: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007481922395527363
    2. '           ' → logprob: -5.507482051849365
    3. ' return' → logprob: -5.757482051849365
    4. '               ' → logprob: -8.882481575012207
    5. '       ' → logprob: -9.882481575012207
    6. ':return' → logprob: -10.632481575012207
    7. '{return' → logprob: -11.882481575012207
    8. '```' → logprob: -12.132481575012207
    9. '	return' → logprob: -12.382481575012207
    10. ')return' → logprob: -13.507481575012207

Token 4084: ' station' (ID: 11538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00017517358355689794
    2. ' return' → logprob: -8.750175476074219
    3. '               ' → logprob: -11.250175476074219
    4. '           ' → logprob: -12.875175476074219
    5. '	return' → logprob: -14.125175476074219
    6. ':return' → logprob: -15.500175476074219
    7. '{return' → logprob: -16.37517547607422
    8. '                   ' → logprob: -17.75017547607422
    9. '```' → logprob: -18.00017547607422
    10. 'true' → logprob: -18.25017547607422

Token 4085: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.10388343781232834
    2. '[M' → logprob: -2.3538835048675537
    3. 'Limit' → logprob: -6.978883266448975
    4. 'limit' → logprob: -7.353883266448975
    5. 'M' → logprob: -8.103883743286133
    6. '_limits' → logprob: -8.353883743286133
    7. '(M' → logprob: -8.603883743286133
    8. ']' → logprob: -8.603883743286133
    9. '_lim' → logprob: -9.103883743286133
    10. '```' → logprob: -9.103883743286133

Token 4086: ' coincide' (ID: 107406)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2074151039123535
    2. ':' → logprob: -1.5824151039123535
    3. '==' → logprob: -2.3324151039123535
    4. '           ' → logprob: -2.5824151039123535
    5. ':return' → logprob: -2.7074151039123535
    6. '               ' → logprob: -2.8324151039123535
    7. '[' → logprob: -2.9574151039123535
    8. ')' → logprob: -3.7074151039123535
    9. '):
' → logprob: -3.8324151039123535
    10. ']' → logprob: -4.2074151039123535

Token 4087: ' ou' (ID: 2031)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0597797632217407
    2. 's' → logprob: -1.3097797632217407
    3. '=' → logprob: -2.559779644012451
    4. 'with' → logprob: -2.934779644012451
    5. ':
' → logprob: -3.184779644012451
    6. '           ' → logprob: -3.434779644012451
    7. '[' → logprob: -3.434779644012451
    8. ' with' → logprob: -3.809779644012451
    9. 'd' → logprob: -4.434779644012451
    10. '       ' → logprob: -4.559779644012451

Token 4088: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.40968775749206543
    2. '>=' → logprob: -2.5346877574920654
    3. '<' → logprob: -2.9096877574920654
    4. '>' → logprob: -3.4096877574920654
    5. 'station' → logprob: -3.9096877574920654
    6. 'continue' → logprob: -4.1596879959106445
    7. 's' → logprob: -4.2846879959106445
    8. '```' → logprob: -4.2846879959106445
    9. '=' → logprob: -4.5346879959106445
    10. 'dé' → logprob: -4.9096879959106445

Token 4089: ' au' (ID: 2791)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2618841528892517
    2. 'S' → logprob: -2.8868842124938965
    3. '==' → logprob: -3.0118842124938965
    4. ' <=' → logprob: -3.7618842124938965
    5. '           ' → logprob: -4.3868842124938965
    6. '>=' → logprob: -4.5118842124938965
    7. '≤' → logprob: -4.5118842124938965
    8. 'le' → logprob: -4.7618842124938965
    9. 'atte' → logprob: -4.7618842124938965
    10. 'exact' → logprob: -4.8868842124938965

Token 4090: ' max' (ID: 2999)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.07943540066480637
    2. 'dp' → logprob: -4.204435348510742
    3. 'maximum' → logprob: -4.454435348510742
    4. 'plus' → logprob: -4.829435348510742
    5. ' moins' → logprob: -4.829435348510742
    6. 'S' → logprob: -4.954435348510742
    7. 'm' → logprob: -5.079435348510742
    8. 'station' → logprob: -5.204435348510742
    9. 'minimum' → logprob: -5.329435348510742
    10. 'max' → logprob: -5.829435348510742

Token 4091: ' possible' (ID: 4149)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0641742944717407
    2. ':
' → logprob: -1.6891742944717407
    3. ']:
' → logprob: -2.689174175262451
    4. ']
' → logprob: -2.814174175262451
    5. '           ' → logprob: -2.939174175262451
    6. '[' → logprob: -2.939174175262451
    7. '][' → logprob: -3.439174175262451
    8. '=' → logprob: -3.689174175262451
    9. '       ' → logprob: -4.064174175262451
    10. '               ' → logprob: -4.189174175262451

Token 4092: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46623945236206055
    2. '               ' → logprob: -1.7162394523620605
    3. '           ' → logprob: -1.9662394523620605
    4. ':' → logprob: -3.3412394523620605
    5. ':return' → logprob: -5.4662394523620605
    6. '[' → logprob: -5.7162394523620605
    7. 'return' → logprob: -6.0912394523620605
    8. '):
' → logprob: -6.7162394523620605
    9. ' and' → logprob: -6.8412394523620605
    10. '                   ' → logprob: -7.2162394523620605

Token 4093: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36720049381256104
    2. ':
' → logprob: -1.742200493812561
    3. ':' → logprob: -2.4922003746032715
    4. '           ' → logprob: -3.2422003746032715
    5. '                       ' → logprob: -6.2422003746032715
    6. '                   ' → logprob: -6.3672003746032715
    7. '):
' → logprob: -6.4922003746032715
    8. ')' → logprob: -6.6172003746032715
    9. '[' → logprob: -6.9922003746032715
    10. '```' → logprob: -7.3672003746032715

Token 4094: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2402595579624176
    2. '               ' → logprob: -1.8652595281600952
    3. '           ' → logprob: -3.1152596473693848
    4. ' return' → logprob: -5.240259647369385
    5. '                   ' → logprob: -5.865259647369385
    6. '                       ' → logprob: -6.240259647369385
    7. ':return' → logprob: -6.615259647369385
    8. ':
' → logprob: -6.865259647369385
    9. 'True' → logprob: -7.865259647369385
    10. ')' → logprob: -7.865259647369385

Token 4095: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00016074994346126914
    2. ' True' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.000161170959473
    4. '       ' → logprob: -18.250160217285156
    5. '           ' → logprob: -18.625160217285156
    6. '    ' → logprob: -18.750160217285156
    7. 'dp' → logprob: -20.125160217285156
    8. '(True' → logprob: -20.375160217285156
    9. '
' → logprob: -20.625160217285156
    10. 'true' → logprob: -20.625160217285156


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 4093
Tokens correctement prédits (1ère position, stricte): 879
Tokens correctement prédits (1ère position, avec adaptation): 900
Tokens correctement prédits (top 10): 2047
Précision stricte (1ère position): 21.48%
Précision adaptée (1ère position): 21.99%
Précision (top 10): 50.01%
================================================================================
