================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
S=input()
ans=0
i=0
while i<N-1:
    if (S[i]=='O' and S[i+1]=='X') or (S[i]=='X' and S[i+1]=='O'):
        ans+=1
        i+=2
    else:
        i+=1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6147401928901672
    2. '(' → logprob: -0.8647401928901672
    3. '()' → logprob: -3.6147401332855225
    4. '())' → logprob: -4.614740371704102
    5. '`)' → logprob: -8.364740371704102
    6. '(
' → logprob: -8.614740371704102
    7. '```' → logprob: -8.989740371704102
    8. '")' → logprob: -9.114740371704102
    9. '')' → logprob: -9.239740371704102
    10. '))' → logprob: -9.489740371704102

Token 4: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7020651698112488
    2. 'if' → logprob: -1.8270652294158936
    3. 's' → logprob: -2.4520652294158936
    4. 'i' → logprob: -2.7020652294158936
    5. '[' → logprob: -3.4520652294158936
    6. 'a' → logprob: -3.7020652294158936
    7. '\n' → logprob: -3.8270652294158936
    8. 'f' → logprob: -4.3270649909973145
    9. '#' → logprob: -4.3270649909973145
    10. ''' → logprob: -4.4520649909973145

Token 5: '=input' (ID: 87911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6614475250244141
    2. '.' → logprob: -0.7864475250244141
    3. '=' → logprob: -3.786447525024414
    4. ' =' → logprob: -7.036447525024414
    5. '[:]' → logprob: -7.161447525024414
    6. '+' → logprob: -7.661447525024414
    7. '[i' → logprob: -7.911447525024414
    8. ')' → logprob: -7.911447525024414
    9. '\[' → logprob: -8.036447525024414
    10. '.lower' → logprob: -8.161447525024414

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021175467409193516
    2. '()' → logprob: -6.87711763381958
    3. '('' → logprob: -7.75211763381958
    4. ''' → logprob: -8.127117156982422
    5. ')' → logprob: -8.877117156982422
    6. '(
' → logprob: -9.877117156982422
    7. '("("' → logprob: -10.377117156982422
    8. '"' → logprob: -10.502117156982422
    9. ' (' → logprob: -10.627117156982422
    10. '(

' → logprob: -10.752117156982422

Token 7: 'ans' (ID: 616)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.026853322982788
    2. 'for' → logprob: -1.151853322982788
    3. 'i' → logprob: -1.901853322982788
    4. 'count' → logprob: -3.026853322982788
    5. 'c' → logprob: -3.276853322982788
    6. 'f' → logprob: -3.901853322982788
    7. '[' → logprob: -4.526853561401367
    8. 'a' → logprob: -4.776853561401367
    9. 's' → logprob: -4.901853561401367
    10. 'r' → logprob: -4.901853561401367

Token 8: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03154211863875389
    2. ' =' → logprob: -3.5315420627593994
    3. '_' → logprob: -6.7815423011779785
    4. '+=' → logprob: -8.03154182434082
    5. '_=' → logprob: -9.03154182434082
    6. ' +=' → logprob: -9.40654182434082
    7. '[' → logprob: -10.15654182434082
    8. '=[]' → logprob: -10.28154182434082
    9. '+' → logprob: -11.15654182434082
    10. ' ' → logprob: -12.03154182434082

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1982908546924591
    2. '""' → logprob: -1.9482908248901367
    3. '"' → logprob: -3.9482908248901367
    4. '''' → logprob: -4.323290824890137
    5. 'S' → logprob: -6.448290824890137
    6. ''' → logprob: -6.823290824890137
    7. '[]' → logprob: -7.323290824890137
    8. ''S' → logprob: -7.823290824890137
    9. 'N' → logprob: -8.323290824890137
    10. 'len' → logprob: -8.448290824890137

Token 10: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02866879105567932
    2. ' for' → logprob: -3.9036688804626465
    3. '
' → logprob: -5.9036688804626465
    4. 'i' → logprob: -5.9036688804626465
    5. 'f' → logprob: -7.5286688804626465
    6. '\n' → logprob: -7.6536688804626465
    7. '' → logprob: -7.9036688804626465
    8. 'd' → logprob: -8.153668403625488
    9. 'n' → logprob: -8.528668403625488
    10. '\' → logprob: -8.653668403625488

Token 11: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001532355323433876
    2. 'f' → logprob: -7.501532554626465
    3. 'i' → logprob: -7.501532554626465
    4. ' for' → logprob: -8.126532554626465
    5. 'd' → logprob: -10.126532554626465
    6. '```' → logprob: -10.626532554626465
    7. 'r' → logprob: -11.126532554626465
    8. 'n' → logprob: -11.751532554626465
    9. '
' → logprob: -12.001532554626465
    10. 'F' → logprob: -12.001532554626465

Token 12: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15621250867843628
    2. ' =' → logprob: -2.406212568283081
    3. ' ' → logprob: -4.031212329864502
    4. '+' → logprob: -4.031212329864502
    5. ' +=' → logprob: -4.406212329864502
    6. '+=' → logprob: -5.156212329864502
    7. '<|end|>' → logprob: -8.03121280670166
    8. 'f' → logprob: -8.65621280670166
    9. 'n' → logprob: -9.03121280670166
    10. ')' → logprob: -9.53121280670166

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006301135290414095
    2. ' ' → logprob: -7.375629901885986
    3. '1' → logprob: -12.625630378723145
    4. '2' → logprob: -15.875630378723145
    5. '=' → logprob: -17.500629425048828
    6. ')' → logprob: -17.750629425048828
    7. '`' → logprob: -18.563129425048828
    8. 'i' → logprob: -18.688129425048828
    9. '```' → logprob: -19.000629425048828
    10. '۰' → logprob: -19.188129425048828

Token 14: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10250167548656464
    2. ':' → logprob: -3.227501630783081
    3. 'while' → logprob: -3.977501630783081
    4. ' while' → logprob: -4.35250186920166
    5. '<|end|>' → logprob: -4.60250186920166
    6. '\' → logprob: -5.72750186920166
    7. ' 
' → logprob: -5.85250186920166
    8. ')' → logprob: -6.72750186920166
    9. '
' → logprob: -6.85250186920166
    10. ',' → logprob: -6.97750186920166

Token 15: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31629520654678345
    2. 'while' → logprob: -1.9412951469421387
    3. ' while' → logprob: -2.1912951469421387
    4. '\' → logprob: -5.441295146942139
    5. '\n' → logprob: -5.941295146942139
    6. '' → logprob: -6.566295146942139
    7. '```' → logprob: -6.691295146942139
    8. ' 
' → logprob: -7.191295146942139
    9. '
' → logprob: -7.191295146942139
    10. ''' → logprob: -7.191295146942139

Token 16: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008784390985965729
    2. 'i' → logprob: -5.383784294128418
    3. ' ' → logprob: -5.508784294128418
    4. ' ' → logprob: -9.258784294128418
    5. ' ans' → logprob: -13.383784294128418
    6. ' )' → logprob: -13.508784294128418
    7. '  ' → logprob: -13.508784294128418
    8. ' S' → logprob: -13.883784294128418
    9. ' True' → logprob: -14.633784294128418
    10. ' (' → logprob: -14.633784294128418

Token 17: '<N' (ID: 60262)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3148747682571411
    2. ' <' → logprob: -1.3148747682571411
    3. '<len' → logprob: -6.689874649047852
    4. ' ' → logprob: -8.814874649047852
    5. '<=' → logprob: -8.939874649047852
    6. '<N' → logprob: -10.564874649047852
    7. ' <=' → logprob: -10.564874649047852
    8. '<n' → logprob: -11.064874649047852
    9. '+' → logprob: -12.064874649047852
    10. '<size' → logprob: -12.439874649047852

Token 18: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001167364651337266
    2. ' :' → logprob: -7.126167297363281
    3. ':
' → logprob: -9.376167297363281
    4. ':**' → logprob: -9.626167297363281
    5. '+:' → logprob: -9.751167297363281
    6. ' and' → logprob: -9.876167297363281
    7. ' ' → logprob: -11.001167297363281
    8. '+' → logprob: -11.376167297363281
    9. '```' → logprob: -11.501167297363281
    10. '>' → logprob: -11.626167297363281

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001139146275818348
    2. '2' → logprob: -6.876139163970947
    3. ' ' → logprob: -9.876138687133789
    4. '3' → logprob: -10.001138687133789
    5. '4' → logprob: -12.501138687133789
    6. '```' → logprob: -13.438638687133789
    7. '5' → logprob: -13.626138687133789
    8. '１' → logprob: -14.688638687133789
    9. '0' → logprob: -15.313638687133789
    10. '6' → logprob: -15.376138687133789

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001383805531077087
    2. ':
' → logprob: -6.7513837814331055
    3. ' :' → logprob: -8.876383781433105
    4. ' and' → logprob: -10.251383781433105
    5. 'and' → logprob: -11.501383781433105
    6. '<|end|>' → logprob: -12.251383781433105
    7. ':**' → logprob: -12.251383781433105
    8. ':

' → logprob: -12.376383781433105
    9. ' :
' → logprob: -12.626383781433105
    10. ' ' → logprob: -12.876383781433105

Token 21: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1238984763622284
    2. ':' → logprob: -2.998898506164551
    3. '   ' → logprob: -3.248898506164551
    4. '<|end|>' → logprob: -4.123898506164551
    5. ' if' → logprob: -5.998898506164551
    6. '  ' → logprob: -6.123898506164551
    7. ':
' → logprob: -6.373898506164551
    8. ' :' → logprob: -6.623898506164551
    9. '    ' → logprob: -7.498898506164551
    10. '<|end|>' → logprob: -7.748898506164551

Token 22: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7733356356620789
    2. 'i' → logprob: -1.5233356952667236
    3. ' i' → logprob: -2.0233356952667236
    4. 'if' (adapté à ' if') → logprob: -2.1483356952667236
    5. ' ' → logprob: -3.1483356952667236
    6. '   ' → logprob: -3.7733356952667236
    7. '    ' → logprob: -5.8983354568481445
    8. '```' → logprob: -7.3983354568481445
    9. '  ' → logprob: -7.6483354568481445
    10. 's' → logprob: -7.8983354568481445

Token 23: ' (' (ID: 350)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.1274210512638092
    2. 'S' → logprob: -2.1274211406707764
    3. ' ' → logprob: -7.627420902252197
    4. ' ' → logprob: -14.002421379089355
    5. ' i' → logprob: -14.127421379089355
    6. 's' → logprob: -14.377421379089355
    7. '(S' → logprob: -14.502421379089355
    8. '  ' → logprob: -14.502421379089355
    9. 'i' → logprob: -14.627421379089355
    10. '   ' → logprob: -14.752421379089355

Token 24: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008835204876959324
    2. ' S' → logprob: -4.758835315704346
    3. 'i' → logprob: -9.258834838867188
    4. ' ' → logprob: -9.883834838867188
    5. ')' → logprob: -10.383834838867188
    6. '   ' → logprob: -10.758834838867188
    7. ' i' → logprob: -11.883834838867188
    8. '  ' → logprob: -12.508834838867188
    9. '(S' → logprob: -12.633834838867188
    10. '    ' → logprob: -13.446334838867188

Token 25: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.47495681833243e-05
    2. ')' → logprob: -11.500024795532227
    3. '[' → logprob: -11.625024795532227
    4. ' [' → logprob: -12.875024795532227
    5. 'i' → logprob: -13.750024795532227
    6. ')[' → logprob: -14.250024795532227
    7. ')i' → logprob: -14.875024795532227
    8. '[I' → logprob: -15.375024795532227
    9. '   ' → logprob: -15.875024795532227
    10. '```' → logprob: -16.000024795532227

Token 26: ']=='' (ID: 71177)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12205445021390915
    2. ']==' → logprob: -2.3720543384552
    3. ']' → logprob: -4.247054576873779
    4. ' ==' → logprob: -5.622054576873779
    5. '=' → logprob: -6.372054576873779
    6. ')' → logprob: -7.247054576873779
    7. ')==' → logprob: -7.497054576873779
    8. '!=' → logprob: -8.247054100036621
    9. ']=='' → logprob: -9.372054100036621
    10. ']!=' → logprob: -9.747054100036621

Token 27: 'O' (ID: 46)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10102883726358414
    2. 'A' → logprob: -3.3510289192199707
    3. 'S' → logprob: -3.8510289192199707
    4. 'B' → logprob: -4.601028919219971
    5. 'I' → logprob: -5.351028919219971
    6. ''' → logprob: -5.351028919219971
    7. ')' → logprob: -5.851028919219971
    8. 'J' → logprob: -5.976028919219971
    9. 'O' → logprob: -6.351028919219971
    10. '')' → logprob: -6.726028919219971

Token 28: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016993623226881027
    2. '')' → logprob: -4.391993522644043
    3. ' '' → logprob: -5.766993522644043
    4. ' and' → logprob: -7.641993522644043
    5. 'O' → logprob: -8.516993522644043
    6. ' ')' → logprob: -8.641993522644043
    7. 'A' → logprob: -9.141993522644043
    8. 'and' → logprob: -9.391993522644043
    9. ''O' → logprob: -9.391993522644043
    10. 'a' → logprob: -9.766993522644043

Token 29: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03692607581615448
    2. 'and' → logprob: -3.661926031112671
    3. ')' → logprob: -4.66192626953125
    4. ' ' → logprob: -8.03692626953125
    5. ' )' → logprob: -8.03692626953125
    6. '&' → logprob: -9.16192626953125
    7. '    ' → logprob: -9.41192626953125
    8. 'a' → logprob: -9.66192626953125
    9. ' or' → logprob: -9.78692626953125
    10. '   ' → logprob: -10.03692626953125

Token 30: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.31455886363983154
    2. 'S' → logprob: -1.3145588636398315
    3. ' ' → logprob: -6.814558982849121
    4. ')' → logprob: -9.439558982849121
    5. ' )' → logprob: -10.439558982849121
    6. ' ' → logprob: -11.064558982849121
    7. 's' → logprob: -11.189558982849121
    8. '  ' → logprob: -11.752058982849121
    9. ''S' → logprob: -11.877058982849121
    10. ' '' → logprob: -12.002058982849121

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15652744472026825
    2. '==' → logprob: -2.531527519226074
    3. '=='' → logprob: -2.781527519226074
    4. '[' → logprob: -6.281527519226074
    5. ''' → logprob: -8.156527519226074
    6. ''[' → logprob: -8.281527519226074
    7. '['' → logprob: -8.781527519226074
    8. ' ==' → logprob: -8.906527519226074
    9. '[I' → logprob: -9.156527519226074
    10. ']=='' → logprob: -9.281527519226074

Token 32: '+' (ID: 10)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.41562268137931824
    2. '=='' → logprob: -1.1656227111816406
    3. ']=='' → logprob: -4.540622711181641
    4. ']==' → logprob: -4.540622711181641
    5. ''+' → logprob: -5.790622711181641
    6. ''' → logprob: -7.165622711181641
    7. '+' → logprob: -7.165622711181641
    8. '']=='' → logprob: -7.540622711181641
    9. '']==' → logprob: -7.915622711181641
    10. '='+' → logprob: -8.41562271118164

Token 33: '1' (ID: 16)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.23786309361457825
    2. ''' → logprob: -1.8628630638122559
    3. ''S' → logprob: -3.737863063812256
    4. ''i' → logprob: -4.237863063812256
    5. 'O' → logprob: -5.362863063812256
    6. ''o' → logprob: -5.487863063812256
    7. ''I' → logprob: -5.987863063812256
    8. '=='' → logprob: -6.862863063812256
    9. ''C' → logprob: -6.987863063812256
    10. ''s' → logprob: -7.362863063812256

Token 34: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.005871671251952648
    2. '==' → logprob: -5.380871772766113
    3. ']=='' → logprob: -7.255871772766113
    4. ' =='' → logprob: -8.380871772766113
    5. ')=='' → logprob: -9.380871772766113
    6. '']=='' → logprob: -9.505871772766113
    7. '='' → logprob: -9.755871772766113
    8. ' ==' → logprob: -10.755871772766113
    9. '=="' → logprob: -10.880871772766113
    10. '==
' → logprob: -11.005871772766113

Token 35: 'X' (ID: 55)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.31053462624549866
    2. 'X' → logprob: -1.5605345964431763
    3. 'O' → logprob: -2.935534715652466
    4. 'K' → logprob: -6.310534477233887
    5. ''I' → logprob: -7.685534477233887
    6. ''O' → logprob: -8.185534477233887
    7. ''' → logprob: -8.560534477233887
    8. 'Y' → logprob: -8.935534477233887
    9. 'x' → logprob: -9.435534477233887
    10. 'J' → logprob: -9.560534477233887

Token 36: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.01925536058843136
    2. ''):' → logprob: -4.2692551612854
    3. ')' → logprob: -5.7692551612854
    4. ''' → logprob: -6.3942551612854
    5. ''):
' → logprob: -9.144255638122559
    6. ' ')' → logprob: -10.394255638122559
    7. ''or' → logprob: -10.519255638122559
    8. '):' → logprob: -10.644255638122559
    9. ''):
' → logprob: -10.769255638122559
    10. ':' → logprob: -11.269255638122559

Token 37: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028501050546765327
    2. ' or' → logprob: -3.778501033782959
    3. ' and' → logprob: -6.778501033782959
    4. '   ' → logprob: -7.028501033782959
    5. 'or' → logprob: -7.278501033782959
    6. ' :' → logprob: -7.403501033782959
    7. ')' → logprob: -7.403501033782959
    8. '):' → logprob: -7.403501033782959
    9. ':
' → logprob: -8.028501510620117
    10. '       ' → logprob: -9.028501510620117

Token 38: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1009507104754448
    2. '(S' → logprob: -2.3509507179260254
    3. '(' → logprob: -7.475950717926025
    4. '   ' → logprob: -8.850950241088867
    5. '    ' → logprob: -11.225950241088867
    6. '  ' → logprob: -11.850950241088867
    7. ' ' → logprob: -12.100950241088867
    8. ' S' → logprob: -13.225950241088867
    9. ' ' → logprob: -13.350950241088867
    10. '(i' → logprob: -13.725950241088867

Token 39: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03875654190778732
    2. ' S' → logprob: -3.2887566089630127
    3. '   ' → logprob: -7.663756370544434
    4. '(S' → logprob: -8.663756370544434
    5. ' (' → logprob: -10.163756370544434
    6. ' ' → logprob: -11.538756370544434
    7. '  ' → logprob: -12.038756370544434
    8. '    ' → logprob: -12.163756370544434
    9. ')' → logprob: -12.663756370544434
    10. 's' → logprob: -12.788756370544434

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.625011444091797
    3. '[user' → logprob: -14.125011444091797
    4. 'i' → logprob: -14.500011444091797
    5. '[I' → logprob: -15.250011444091797
    6. '[
' → logprob: -15.375011444091797
    7. '```' → logprob: -15.875011444091797
    8. ' [' → logprob: -16.125011444091797
    9. '[j' → logprob: -16.625011444091797
    10. '   ' → logprob: -16.625011444091797

Token 41: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.32322266697883606
    2. '[i' → logprob: -1.5732226371765137
    3. '=='' → logprob: -3.3232226371765137
    4. ']==' → logprob: -4.323222637176514
    5. '[' → logprob: -4.448222637176514
    6. ']' → logprob: -5.448222637176514
    7. '']=='' → logprob: -6.323222637176514
    8. '+' → logprob: -7.448222637176514
    9. ')=='' → logprob: -8.323223114013672
    10. '[
' → logprob: -8.448223114013672

Token 42: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -8.077528764260933e-05
    2. ''' → logprob: -10.625081062316895
    3. 'O' → logprob: -11.250081062316895
    4. 'S' → logprob: -11.812581062316895
    5. ' X' → logprob: -11.812581062316895
    6. 'I' → logprob: -12.312581062316895
    7. '`' → logprob: -12.625081062316895
    8. '')' → logprob: -13.375081062316895
    9. '```' → logprob: -13.562581062316895
    10. 'XO' → logprob: -13.687581062316895

Token 43: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0070059094578027725
    2. ''O' → logprob: -5.25700569152832
    3. 'and' → logprob: -6.75700569152832
    4. '=='' → logprob: -8.50700569152832
    5. '==' → logprob: -8.88200569152832
    6. ''o' → logprob: -9.50700569152832
    7. ' and' → logprob: -9.50700569152832
    8. 'O' → logprob: -10.25700569152832
    9. '')' → logprob: -10.63200569152832
    10. ''''' → logprob: -12.00700569152832

Token 44: ' and' (ID: 326)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.016174191609025
    2. '==' → logprob: -4.26617431640625
    3. ' =='' → logprob: -6.89117431640625
    4. ' ==' → logprob: -7.64117431640625
    5. ' and' → logprob: -8.64117431640625
    6. 'and' → logprob: -8.89117431640625
    7. '=' → logprob: -9.89117431640625
    8. ']=='' → logprob: -10.39117431640625
    9. ')=='' → logprob: -10.76617431640625
    10. '!='' → logprob: -10.76617431640625

Token 45: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.18120235204696655
    2. 'S' → logprob: -1.8062024116516113
    3. ' ' → logprob: -7.181202411651611
    4. ')' → logprob: -8.181201934814453
    5. 's' → logprob: -8.806201934814453
    6. '<|end|>' → logprob: -9.431201934814453
    7. ''' → logprob: -10.431201934814453
    8. ' '' → logprob: -10.681201934814453
    9. '   ' → logprob: -10.743701934814453
    10. ' (' → logprob: -11.431201934814453

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.8126592193730175e-05
    2. '[' → logprob: -9.8750581741333
    3. '[I' → logprob: -13.1250581741333
    4. '[
' → logprob: -13.6250581741333
    5. '['' → logprob: -14.3750581741333
    6. '[++' → logprob: -14.7500581741333
    7. 'i' → logprob: -15.1250581741333
    8. '<|end|>' → logprob: -15.2500581741333
    9. '[X' → logprob: -15.3750581741333
    10. '[user' → logprob: -15.3750581741333

Token 47: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3895746171474457
    2. '[i' → logprob: -1.139574646949768
    3. '[' → logprob: -6.1395745277404785
    4. 'i' → logprob: -8.764575004577637
    5. '   ' → logprob: -9.764575004577637
    6. ']' → logprob: -9.889575004577637
    7. '+i' → logprob: -10.014575004577637
    8. '[
' → logprob: -10.264575004577637
    9. ''+' → logprob: -10.639575004577637
    10. ']==' → logprob: -11.014575004577637

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015885140746831894
    2. '+' → logprob: -4.265885353088379
    3. 'i' → logprob: -6.515885353088379
    4. '[i' → logprob: -9.390885353088379
    5. ' ' → logprob: -10.140885353088379
    6. '   ' → logprob: -11.015885353088379
    7. ']' → logprob: -11.390885353088379
    8. ')' → logprob: -11.515885353088379
    9. '<|end|>' → logprob: -12.015885353088379
    10. ''' → logprob: -12.140885353088379

Token 49: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.011607694439589977
    2. '=='' → logprob: -5.261607646942139
    3. '']=='' → logprob: -5.511607646942139
    4. ']==' → logprob: -6.261607646942139
    5. ')=='' → logprob: -7.886607646942139
    6. ']' → logprob: -10.761608123779297
    7. ']=="' → logprob: -12.886608123779297
    8. ']!='' → logprob: -13.636608123779297
    9. '==' → logprob: -13.761608123779297
    10. '']==' → logprob: -14.011608123779297

Token 50: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.003672756254673004
    2. ''O' → logprob: -5.6286725997924805
    3. ''' → logprob: -10.50367259979248
    4. 'I' → logprob: -10.62867259979248
    5. ''o' → logprob: -12.25367259979248
    6. '"O' → logprob: -12.62867259979248
    7. 'X' → logprob: -13.00367259979248
    8. 'S' → logprob: -13.37867259979248
    9. '`' → logprob: -13.37867259979248
    10. '')' → logprob: -13.62867259979248

Token 51: ''):
' (ID: 26539)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.18120943009853363
    2. '):' → logprob: -1.9312094449996948
    3. ')' → logprob: -4.181209564208984
    4. ''):
' → logprob: -5.931209564208984
    5. '')' → logprob: -6.181209564208984
    6. ':' → logprob: -7.931209564208984
    7. '):
' → logprob: -8.431209564208984
    8. '   ' → logprob: -10.056209564208984
    9. '':' → logprob: -10.181209564208984
    10. ''):
' → logprob: -10.431209564208984

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001337624154984951
    2. '   ' → logprob: -6.75133752822876
    3. 'ans' → logprob: -9.876338005065918
    4. '        
' → logprob: -11.001338005065918
    5. '     ' → logprob: -11.126338005065918
    6. '    ' → logprob: -11.251338005065918
    7. 'i' → logprob: -11.751338005065918
    8. ' ans' → logprob: -11.751338005065918
    9. '
' → logprob: -11.876338005065918
    10. ' i' → logprob: -12.001338005065918

Token 53: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.007393414154648781
    2. 'i' → logprob: -5.5073933601379395
    3. '   ' → logprob: -6.1323933601379395
    4. '       ' → logprob: -7.5073933601379395
    5. ' ans' → logprob: -8.007393836975098
    6. '	ans' → logprob: -8.882393836975098
    7. '
' → logprob: -10.257393836975098
    8. '           ' → logprob: -10.882393836975098
    9. 'if' → logprob: -11.007393836975098
    10. '(ans' → logprob: -12.007393836975098

Token 54: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1137930303812027
    2. ' +=' → logprob: -2.238793134689331
    3. '+' → logprob: -6.988792896270752
    4. '=' → logprob: -11.23879337310791
    5. ']+=' → logprob: -11.36379337310791
    6. '++' → logprob: -11.61379337310791
    7. '+='' → logprob: -12.61379337310791
    8. ' ' → logprob: -12.61379337310791
    9. '+=(' → logprob: -13.11379337310791
    10. ' =' → logprob: -13.73879337310791

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8590300139039755e-05
    2. ' ' → logprob: -10.000048637390137
    3. '2' → logprob: -12.750048637390137
    4. '3' → logprob: -16.37504768371582
    5. '１' → logprob: -16.75004768371582
    6. '  ' → logprob: -17.56254768371582
    7. '10' → logprob: -17.87504768371582
    8. '   ' → logprob: -17.93754768371582
    9. '0' → logprob: -18.43754768371582
    10. 'i' → logprob: -18.56254768371582

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4549771249294281
    2. 'i' → logprob: -1.2049771547317505
    3. '   ' → logprob: -2.829977035522461
    4. ' i' → logprob: -5.704977035522461
    5. '       ' → logprob: -6.704977035522461
    6. '    
' → logprob: -7.204977035522461
    7. '
' → logprob: -7.579977035522461
    8. '\n' → logprob: -7.829977035522461
    9. '	i' → logprob: -9.204977035522461
    10. ',i' → logprob: -9.204977035522461

Token 57: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0805249810218811
    2. '   ' → logprob: -2.5805249214172363
    3. ' i' → logprob: -6.455524921417236
    4. '
' → logprob: -10.955525398254395
    5. '       ' → logprob: -11.705525398254395
    6. ',i' → logprob: -11.830525398254395
    7. '	i' → logprob: -11.830525398254395
    8. '  ' → logprob: -12.205525398254395
    9. '    
' → logprob: -12.330525398254395
    10. '    ' → logprob: -12.580525398254395

Token 58: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -12.875003814697266
    3. ' i' → logprob: -14.125003814697266
    4. '2' → logprob: -15.000003814697266
    5. '```' → logprob: -15.375003814697266
    6. '  ' → logprob: -17.625003814697266
    7. '	i' → logprob: -17.875003814697266
    8. 'if' → logprob: -18.000003814697266
    9. '
' → logprob: -18.125003814697266
    10. '3' → logprob: -18.125003814697266

Token 59: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0014879583613947034
    2. '+' → logprob: -6.876487731933594
    3. ' +=' → logprob: -7.751487731933594
    4. '=' → logprob: -11.376487731933594
    5. '++' → logprob: -11.876487731933594
    6. '2' → logprob: -12.501487731933594
    7. '+="' → logprob: -14.126487731933594
    8. '+='' → logprob: -14.501487731933594
    9. '```' → logprob: -14.626487731933594
    10. ']+=' → logprob: -14.751487731933594

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007031376590020955
    2. '1' → logprob: -7.37570333480835
    3. ' ' → logprob: -9.625702857971191
    4. '２' → logprob: -12.625702857971191
    5. '	' → logprob: -13.000702857971191
    6. '3' → logprob: -13.000702857971191
    7. '
' → logprob: -14.250702857971191
    8. '   ' → logprob: -14.438202857971191
    9. '  ' → logprob: -14.625702857971191
    10. '

' → logprob: -15.250702857971191

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15676003694534302
    2. 'else' → logprob: -2.0317599773406982
    3. ' else' → logprob: -4.281760215759277
    4. '       ' → logprob: -9.656760215759277
    5. '	else' → logprob: -9.656760215759277
    6. '```' → logprob: -11.031760215759277
    7. '<|end|>' → logprob: -11.906760215759277
    8. '_else' → logprob: -12.281760215759277
    9. '  ' → logprob: -12.406760215759277
    10. '    
' → logprob: -13.156760215759277

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030588814988732338
    2. 'else' → logprob: -3.5305888652801514
    3. ' else' → logprob: -7.155588626861572
    4. '```' → logprob: -10.53058910369873
    5. '       ' → logprob: -10.90558910369873
    6. '	else' → logprob: -12.03058910369873
    7. '  ' → logprob: -13.03058910369873
    8. '<|end|>' → logprob: -13.53058910369873
    9. '``' → logprob: -14.28058910369873
    10. '_else' → logprob: -14.28058910369873

Token 63: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.025675278156995773
    2. '   ' → logprob: -3.7756752967834473
    3. ' else' → logprob: -6.025675296783447
    4. '	else' → logprob: -11.525674819946289
    5. '       ' → logprob: -15.150674819946289
    6. '```' → logprob: -15.400674819946289
    7. '_else' → logprob: -15.400674819946289
    8. '  ' → logprob: -15.900674819946289
    9. 'elif' → logprob: -16.40067481994629
    10. ' ' → logprob: -16.65067481994629

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007249988149851561
    2. ':
' → logprob: -5.13224983215332
    3. '       ' → logprob: -6.75724983215332
    4. '   ' → logprob: -8.88224983215332
    5. ':i' → logprob: -11.88224983215332
    6. '=' → logprob: -13.00724983215332
    7. '    ' → logprob: -13.38224983215332
    8. ' :' → logprob: -14.13224983215332
    9. '):
' → logprob: -14.25724983215332
    10. 'i' → logprob: -14.25724983215332

Token 65: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06351417303085327
    2. '       ' → logprob: -3.438514232635498
    3. 'i' → logprob: -3.563514232635498
    4. ' i' → logprob: -6.938514232635498
    5. '1' → logprob: -9.68851375579834
    6. '	i' → logprob: -10.18851375579834
    7. '```' → logprob: -12.18851375579834
    8. '    ' → logprob: -12.31351375579834
    9. '_i' → logprob: -13.68851375579834
    10. ' ' → logprob: -13.93851375579834

Token 66: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -8.518582762917504e-05
    2. '   ' → logprob: -9.50008487701416
    3. ' i' → logprob: -11.50008487701416
    4. '	i' → logprob: -15.75008487701416
    5. '  ' → logprob: -18.500085830688477
    6. '       ' → logprob: -18.750085830688477
    7. '    ' → logprob: -19.125085830688477
    8. '```' → logprob: -19.250085830688477
    9. '_i' → logprob: -19.375085830688477
    10. '1' → logprob: -20.125085830688477

Token 67: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00777887599542737
    2. '+' → logprob: -4.882778644561768
    3. ' +=' → logprob: -8.757779121398926
    4. '++' → logprob: -12.382779121398926
    5. '+='' → logprob: -12.382779121398926
    6. '+="' → logprob: -13.132779121398926
    7. '1' → logprob: -13.257779121398926
    8. '=' → logprob: -14.007779121398926
    9. ']+=' → logprob: -14.132779121398926
    10. '<|end|>' → logprob: -14.382779121398926

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '+' → logprob: -17.625
    4. '<|end|>' → logprob: -19.0
    5. '   ' → logprob: -19.375
    6. '１' → logprob: -19.625
    7. '```' → logprob: -20.1875
    8. '১' → logprob: -20.25
    9. '१' → logprob: -20.3125
    10. '۱' → logprob: -20.375

Token 69: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0032015969045460224
    2. '
' → logprob: -5.753201484680176
    3. '\n' → logprob: -11.628201484680176
    4. '
' → logprob: -12.378201484680176
    5. ' print' → logprob: -12.503201484680176
    6. '```' → logprob: -12.503201484680176
    7. ' 
' → logprob: -14.378201484680176
    8. '  
' → logprob: -14.628201484680176
    9. '<|end|>' → logprob: -14.878201484680176
    10. '    
' → logprob: -15.378201484680176

Token 70: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.051066520740278e-05
    2. '
' → logprob: -9.750060081481934
    3. ' print' → logprob: -14.125060081481934
    4. '```' → logprob: -14.375060081481934
    5. '\n' → logprob: -15.250060081481934
    6. '
' → logprob: -15.500060081481934
    7. 'pr' → logprob: -16.37506103515625
    8. '#print' → logprob: -17.12506103515625
    9. '    
' → logprob: -17.50006103515625
    10. '  
' → logprob: -17.50006103515625

Token 71: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2519497573375702
    2. '(ans' → logprob: -1.5019497871398926
    3. '('' → logprob: -11.876949310302734
    4. '()' → logprob: -12.251949310302734
    5. '("("' → logprob: -12.501949310302734
    6. ' (' → logprob: -13.376949310302734
    7. 'ans' → logprob: -14.126949310302734
    8. '((' → logprob: -14.126949310302734
    9. '(answer' → logprob: -14.251949310302734
    10. '(`' → logprob: -14.876949310302734

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.750000953674316
    3. ')`' → logprob: -15.875000953674316
    4. '`)' → logprob: -16.25
    5. '))' → logprob: -16.25
    6. ')
' → logprob: -17.5
    7. '()' → logprob: -17.5
    8. '')' → logprob: -17.75
    9. '）' → logprob: -18.25
    10. '```' → logprob: -19.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 52.86%
Précision adaptée (1ère position): 58.57%
Précision (top 10): 87.14%
================================================================================
