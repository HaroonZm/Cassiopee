================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def solve():
    while True:
        line = input()
        if line == '':
            continue
        w_h = line.split()
        if len(w_h) < 2:
            w_h += input().split()
        w, h = map(int, w_h)
        if w == 0 and h == 0:
            break

        grid = [input().split() for _ in range(h)]

        # Find S and G and max seal number
        max_seal = 0
        start = None
        goal = None
        for y in range(h):
            for x in range(w):
                c = grid[y][x]
                if c == 'S':
                    start = (y, x)
                elif c == 'G':
                    goal = (y, x)
                else:
                    if c.isdigit():
                        n = int(c)
                        if n > max_seal:
                            max_seal = n

        # BFS states: position (y,x) and current seal step (0..max_seal)
        # Because we must destroy seals in order: can't touch seal n+1 before all n sealed.
        visited = [[[False]*(max_seal+1) for _ in range(w)] for __ in range(h)]
        q = deque()
        # start with seal_step=0 means no seals destroyed yet
        q.append((start[0], start[1], 0, 0))  # y, x, seal_step, time
        visited[start[0]][start[1]][0] = True

        while q:
            y, x, step, t = q.popleft()
            c = grid[y][x]

            # If on seal number equal to step+1, destroy it by touching it, advance step
            if c.isdigit():
                num = int(c)
                if num == step + 1:
                    step += 1

            if (y, x) == goal and step == max_seal:
                print(t)
                break

            for dy, dx in ((1,0), (-1,0), (0,1), (0,-1)):
                ny, nx = y+dy, x+dx
                if 0 <= ny < h and 0 <= nx < w:
                    nc = grid[ny][nx]
                    nstep = step
                    if nc.isdigit():
                        num = int(nc)
                        # can only touch seals up to step+1, can't touch the next ones before previous destroyed
                        # but in logic, we only update step if we stand on it
                        # so here, must not enter seal number > step+1
                        if num > step +1:
                            continue
                    # Else ok to move
                    if not visited[ny][nx][nstep]:
                        visited[ny][nx][nstep] = True
                        q.append((ny, nx, nstep, t+1))

if __name__ == '__main__':
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.6158564686775208
    2. 'deque' → logprob: -1.490856409072876
    3. 'default' → logprob: -2.365856409072876
    4. 'abc' → logprob: -2.865856409072876
    5. ' deque' → logprob: -3.365856409072876
    6. ' abc' → logprob: -3.490856409072876
    7. 'Counter' → logprob: -5.115856647491455
    8. ' Counter' → logprob: -5.365856647491455
    9. ' named' → logprob: -5.365856647491455
    10. 'named' → logprob: -5.865856647491455

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014316747896373272
    2. '.' → logprob: -5.014316558837891
    3. '\(' → logprob: -5.764316558837891
    4. '```' → logprob: -6.889316558837891
    5. '\' → logprob: -7.014316558837891
    6. '\n' → logprob: -7.264316558837891
    7. '[' → logprob: -8.01431655883789
    8. '(
' → logprob: -8.26431655883789
    9. 'import' → logprob: -8.38931655883789
    10. 'newline' → logprob: -8.38931655883789

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028613658621907234
    2. '\' → logprob: -4.528613567352295
    3. '\n' → logprob: -5.403613567352295
    4. '\(' → logprob: -5.653613567352295
    5. 'a' → logprob: -6.278613567352295
    6. 'd' → logprob: -6.278613567352295
    7. '[' → logprob: -6.653613567352295
    8. 'newline' → logprob: -6.903613567352295
    9. 'import' → logprob: -7.403613567352295
    10. '.' → logprob: -7.903613567352295

Token 6: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0034791433718055487
    2. ' bfs' → logprob: -6.37847900390625
    3. ' deque' → logprob: -7.75347900390625
    4. ' space' → logprob: -8.12847900390625
    5. ' process' → logprob: -8.75347900390625
    6. ' de' → logprob: -8.87847900390625
    7. ' ' → logprob: -9.00347900390625
    8. ' queue' → logprob: -9.12847900390625
    9. ' dequeue' → logprob: -9.87847900390625
    10. ' dfs' → logprob: -10.12847900390625

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011294436641037464
    2. '```' → logprob: -5.011294364929199
    3. '():' → logprob: -6.636294364929199
    4. '_' → logprob: -6.761294364929199
    5. ':' → logprob: -7.136294364929199
    6. '(:' → logprob: -8.3862943649292
    7. ' (' → logprob: -8.7612943649292
    8. '(
' → logprob: -9.6362943649292
    9. '<|end|>' → logprob: -9.6362943649292
    10. '((' → logprob: -9.7612943649292

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06978102028369904
    2. '    
' → logprob: -3.8197810649871826
    3. '```' → logprob: -3.8197810649871826
    4. '\' → logprob: -5.4447808265686035
    5. '    ' → logprob: -5.6947808265686035
    6. '\n' → logprob: -5.8197808265686035
    7. 'n' → logprob: -6.1947808265686035
    8. '`' → logprob: -6.1947808265686035
    9. 'input' → logprob: -6.9447808265686035
    10. ' 
' → logprob: -7.0697808265686035

Token 9: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.516289234161377
    2. 'q' → logprob: -1.641289234161377
    3. '   ' → logprob: -2.641289234161377
    4. 'queue' → logprob: -3.016289234161377
    5. ' n' → logprob: -3.141289234161377
    6. ' queue' → logprob: -3.516289234161377
    7. ' q' → logprob: -5.641289234161377
    8. 'input' → logprob: -5.641289234161377
    9. 'stack' → logprob: -6.391289234161377
    10. ' ' → logprob: -6.516289234161377

Token 10: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0008433376788161695
    2. ' ' → logprob: -7.375843524932861
    3. ' not' → logprob: -9.000843048095703
    4. 'True' → logprob: -9.375843048095703
    5. '  ' → logprob: -12.375843048095703
    6. ' input' → logprob: -13.125843048095703
    7. '(True' → logprob: -13.875843048095703
    8. ' ' → logprob: -15.125843048095703
    9. ' a' → logprob: -15.500843048095703
    10. ' (' → logprob: -15.625843048095703

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037107658572494984
    2. '():' → logprob: -6.003710746765137
    3. ' :' → logprob: -7.128710746765137
    4. '       ' → logprob: -8.503710746765137
    5. '   ' → logprob: -9.503710746765137
    6. '):' → logprob: -9.878710746765137
    7. ':
' → logprob: -10.378710746765137
    8. ':**' → logprob: -10.503710746765137
    9. '    ' → logprob: -11.503710746765137
    10. ' ():' → logprob: -11.628710746765137

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023638748098164797
    2. '    ' → logprob: -7.127363681793213
    3. '   ' → logprob: -7.377363681793213
    4. '        
' → logprob: -7.752363681793213
    5. '[' → logprob: -9.752364158630371
    6. ' ' → logprob: -9.752364158630371
    7. '(' → logprob: -10.002364158630371
    8. '      ' → logprob: -10.252364158630371
    9. '    
' → logprob: -10.502364158630371
    10. '        ' → logprob: -10.502364158630371

Token 13: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.22790835797786713
    2. 'line' (adapté à ' line') → logprob: -2.2279083728790283
    3. '   ' → logprob: -2.4779083728790283
    4. ' try' → logprob: -5.727908134460449
    5. 'n' → logprob: -6.602908134460449
    6. 'try' → logprob: -6.727908134460449
    7. '```' → logprob: -6.727908134460449
    8. ' n' → logprob: -6.852908134460449
    9. 'data' → logprob: -6.852908134460449
    10. ' inp' → logprob: -7.602908134460449

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007101670489646494
    2. '=' → logprob: -7.2507100105285645
    3. 's' → logprob: -16.875709533691406
    4. ' ' → logprob: -17.000709533691406
    5. '=line' → logprob: -17.750709533691406
    6. ' =
' → logprob: -18.500709533691406
    7. '_' → logprob: -18.500709533691406
    8. ' =)' → logprob: -18.625709533691406
    9. ' =
' → logprob: -18.750709533691406
    10. '=input' → logprob: -18.875709533691406

Token 15: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.061969030648469925
    2. 'input' → logprob: -2.811969041824341
    3. '   ' → logprob: -14.561968803405762
    4. ' ' → logprob: -14.811968803405762
    5. '=input' → logprob: -14.936968803405762
    6. '(input' → logprob: -16.936969757080078
    7. '	input' → logprob: -17.186969757080078
    8. '<input' → logprob: -17.311969757080078
    9. '_input' → logprob: -17.311969757080078
    10. '```' → logprob: -17.936969757080078

Token 16: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007305599283427
    2. '(' → logprob: -5.00730562210083
    3. '('' → logprob: -7.88230562210083
    4. '().' → logprob: -9.882305145263672
    5. '("")' → logprob: -10.132305145263672
    6. '())' → logprob: -11.007305145263672
    7. '("' → logprob: -11.132305145263672
    8. ')' → logprob: -11.257305145263672
    9. '```' → logprob: -11.257305145263672
    10. '`()' → logprob: -11.507305145263672

Token 17: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21749190986156464
    2. ' if' → logprob: -1.717491865158081
    3. '        ' → logprob: -4.59249210357666
    4. ' ' → logprob: -6.59249210357666
    5. 'if' (adapté à ' if') → logprob: -6.71749210357666
    6. '        
' → logprob: -7.34249210357666
    7. '           ' → logprob: -7.84249210357666
    8. '```' → logprob: -7.96749210357666
    9. '    ' → logprob: -8.09249210357666
    10. '\n' → logprob: -8.34249210357666

Token 19: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0032487702555954456
    2. ' line' → logprob: -5.753248691558838
    3. 'not' → logprob: -9.753249168395996
    4. ' ' → logprob: -11.378249168395996
    5. 'line' → logprob: -13.628249168395996
    6. ' ' → logprob: -16.25324821472168
    7. '	not' → logprob: -16.87824821472168
    8. '	line' → logprob: -17.50324821472168
    9. '[line' → logprob: -18.00324821472168
    10. '  ' → logprob: -18.12824821472168

Token 20: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0023983668070286512
    2. '==' → logprob: -6.377398490905762
    3. '.strip' → logprob: -8.377398490905762
    4. ' ' → logprob: -8.627398490905762
    5. '.startswith' → logprob: -9.377398490905762
    6. '.' → logprob: -9.502398490905762
    7. ' .' → logprob: -10.002398490905762
    8. '()==' → logprob: -10.377398490905762
    9. '()' → logprob: -10.627398490905762
    10. ' =' → logprob: -11.502398490905762

Token 21: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.108798623085022
    2. '""' → logprob: -1.233798623085022
    3. ''' → logprob: -1.358798623085022
    4. '''' → logprob: -2.2337985038757324
    5. ' ""' → logprob: -5.233798503875732
    6. '"":' → logprob: -5.233798503875732
    7. ' ''' → logprob: -6.733798503875732
    8. ' "' → logprob: -6.983798503875732
    9. ' '' → logprob: -7.108798503875732
    10. ' ' → logprob: -8.60879898071289

Token 22: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001635547261685133
    2. '       ' → logprob: -7.001635551452637
    3. ':' → logprob: -8.501635551452637
    4. ' break' → logprob: -8.876635551452637
    5. '   ' → logprob: -9.251635551452637
    6. ' ' → logprob: -10.001635551452637
    7. '\n' → logprob: -10.501635551452637
    8. '            ' → logprob: -10.501635551452637
    9. '<|end|>' → logprob: -10.501635551452637
    10. '          ' → logprob: -10.751635551452637

Token 23: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.13280761241912842
    2. '           ' → logprob: -2.757807731628418
    3. 'break' → logprob: -2.882807731628418
    4. '       ' → logprob: -5.382807731628418
    5. '   ' → logprob: -9.007807731628418
    6. '	break' → logprob: -9.007807731628418
    7. ' ' → logprob: -10.507807731628418
    8. '\n' → logprob: -10.632807731628418
    9. '_break' → logprob: -10.882807731628418
    10. '               ' → logprob: -11.007807731628418

Token 24: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017651435919106007
    2. '<|end|>' → logprob: -6.626765251159668
    3. '        
' → logprob: -8.626765251159668
    4. '   ' → logprob: -9.626765251159668
    5. '\n' → logprob: -9.876765251159668
    6. '<|end|>' → logprob: -10.376765251159668
    7. '           ' → logprob: -10.751765251159668
    8. ')' → logprob: -11.001765251159668
    9. '
' → logprob: -11.376765251159668
    10. '```' → logprob: -11.876765251159668

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.876193169271573e-05
    2. '<|end|>' → logprob: -10.625088691711426
    3. '   ' → logprob: -11.000088691711426
    4. '        
' → logprob: -11.250088691711426
    5. '```' → logprob: -11.375088691711426
    6. '           ' → logprob: -11.750088691711426
    7. '      ' → logprob: -13.125088691711426
    8. ' ' → logprob: -13.500088691711426
    9. '    ' → logprob: -13.750088691711426
    10. '<|end|>' → logprob: -13.750088691711426

Token 26: ' w' (ID: 286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018658572807908058
    2. ' if' → logprob: -4.143658638000488
    3. 'if' → logprob: -7.518658638000488
    4. '   ' → logprob: -7.518658638000488
    5. ' try' → logprob: -7.893658638000488
    6. '    ' → logprob: -8.268658638000488
    7. '        ' → logprob: -8.643658638000488
    8. ' ' → logprob: -8.893658638000488
    9. ' break' → logprob: -9.643658638000488
    10. '        
' → logprob: -9.768658638000488

Token 27: '_h' (ID: 3434)
  Prédit: 'ords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ords' → logprob: -0.2927880883216858
    2. 'ord' → logprob: -1.417788028717041
    3. 'hile' → logprob: -5.417788028717041
    4. 'eight' → logprob: -6.167788028717041
    5. '=' → logprob: -6.542788028717041
    6. ' =' → logprob: -6.667788028717041
    7. 'e' → logprob: -7.167788028717041
    8. 'idth' → logprob: -7.292788028717041
    9. ',' → logprob: -7.667788028717041
    10. 'h' → logprob: -8.5427885055542

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474210649728775
    2. '=' → logprob: -0.9742106199264526
    3. ',' → logprob: -9.349210739135742
    4. ' ' → logprob: -11.099210739135742
    5. '   ' → logprob: -11.724210739135742
    6. 'idth' → logprob: -12.224210739135742
    7. '  ' → logprob: -12.474210739135742
    8. 's' → logprob: -12.849210739135742
    9. '=input' → logprob: -12.974210739135742
    10. '    ' → logprob: -13.599210739135742

Token 29: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10694492608308792
    2. 'list' → logprob: -2.481945037841797
    3. ' line' → logprob: -4.106945037841797
    4. ' list' → logprob: -6.606945037841797
    5. '[line' → logprob: -10.481945037841797
    6. 'deque' → logprob: -13.106945037841797
    7. '=line' → logprob: -14.231945037841797
    8. 'tuple' → logprob: -14.356945037841797
    9. '[' → logprob: -14.481945037841797
    10. 'input' → logprob: -14.481945037841797

Token 30: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4074806869029999
    2. '.' → logprob: -1.1574807167053223
    3. '.strip' → logprob: -3.9074807167053223
    4. ' .' → logprob: -8.532480239868164
    5. 'split' → logprob: -9.782480239868164
    6. '.rstrip' → logprob: -10.532480239868164
    7. '().' → logprob: -11.532480239868164
    8. '=' → logprob: -11.657480239868164
    9. ' =' → logprob: -12.157480239868164
    10. ' split' → logprob: -13.907480239868164

Token 31: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04150857776403427
    2. '()' → logprob: -3.291508674621582
    3. '("("' → logprob: -6.166508674621582
    4. '(' → logprob: -6.791508674621582
    5. ''' → logprob: -8.541508674621582
    6. '("' → logprob: -11.541508674621582
    7. '```' → logprob: -11.916508674621582
    8. '('.')' → logprob: -12.291508674621582
    9. '"' → logprob: -12.416508674621582
    10. '(None' → logprob: -13.166508674621582

Token 32: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' if' (ID: 538)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2491002231836319
    2. ' if' → logprob: -1.8741002082824707
    3. '       ' → logprob: -3.6241002082824707
    4. 'if' (adapté à ' if') → logprob: -3.8741002082824707
    5. ' w' → logprob: -4.124100208282471
    6. 'i' → logprob: -6.249100208282471
    7. 'n' → logprob: -7.749100208282471
    8. '        ' → logprob: -8.249100685119629
    9. 'h' → logprob: -8.499100685119629
    10. ' i' → logprob: -8.999100685119629

Token 34: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2616802155971527
    2. ' len' → logprob: -1.511680245399475
    3. ' w' → logprob: -4.8866801261901855
    4. 'len' → logprob: -6.8866801261901855
    5. 'not' → logprob: -7.5116801261901855
    6. ' ' → logprob: -7.7616801261901855
    7. 'w' → logprob: -8.761680603027344
    8. '(len' → logprob: -13.136680603027344
    9. '	len' → logprob: -13.136680603027344
    10. '  ' → logprob: -13.886680603027344

Token 35: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0007176732178777456
    2. '(' → logprob: -7.250717639923096
    3. 'w' → logprob: -12.000718116760254
    4. ' w' → logprob: -14.625718116760254
    5. ' (' → logprob: -14.625718116760254
    6. ')' → logprob: -16.375717163085938
    7. '	w' → logprob: -16.375717163085938
    8. '()' → logprob: -16.375717163085938
    9. '<|end|>' → logprob: -16.375717163085938
    10. '<|end|>' → logprob: -16.750717163085938

Token 36: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.2562708556652069
    2. '_w' → logprob: -1.5062708854675293
    3. '_' → logprob: -5.506270885467529
    4. ')' → logprob: -9.256270408630371
    5. '_a' → logprob: -10.881270408630371
    6. '_b' → logprob: -11.006270408630371
    7. '<|end|>' → logprob: -11.131270408630371
    8. '<' → logprob: -11.381270408630371
    9. '[' → logprob: -11.506270408630371
    10. '<|end|>' → logprob: -11.506270408630371

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02500988356769085
    2. '<' → logprob: -4.400010108947754
    3. ' <' → logprob: -4.775010108947754
    4. '==' → logprob: -6.775010108947754
    5. ' ==' → logprob: -6.900010108947754
    6. ' !=' → logprob: -7.275010108947754
    7. ' )' → logprob: -7.650010108947754
    8. ')<' → logprob: -7.900010108947754
    9. '!=' → logprob: -9.150010108947754
    10. ')==' → logprob: -9.525010108947754

Token 38: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.3461966514587402
    2. '==' → logprob: -1.3461966514587402
    3. ' ==' → logprob: -1.4711966514587402
    4. ' <' → logprob: -1.8461966514587402
    5. ' !=' → logprob: -2.5961966514587402
    6. '!=' → logprob: -4.09619665145874
    7. ')' → logprob: -8.721197128295898
    8. '[' → logprob: -8.971197128295898
    9. ' ' → logprob: -9.346197128295898
    10. '<len' → logprob: -9.596197128295898

Token 39: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2331925630569458
    2. ' ' → logprob: -1.6081925630569458
    3. '1' → logprob: -4.983192443847656
    4. '3' → logprob: -7.108192443847656
    5. '4' → logprob: -10.233192443847656
    6. '```' → logprob: -11.108192443847656
    7. '>' → logprob: -11.483192443847656
    8. '=' → logprob: -12.108192443847656
    9. ')' → logprob: -12.858192443847656
    10. '6' → logprob: -13.295692443847656

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00035333906998857856
    2. ' ' → logprob: -8.500353813171387
    3. '1' → logprob: -8.875353813171387
    4. '>' → logprob: -12.000353813171387
    5. '=' → logprob: -13.000353813171387
    6. ')' → logprob: -14.562853813171387
    7. '```' → logprob: -15.250353813171387
    8. '   ' → logprob: -15.625353813171387
    9. '  ' → logprob: -16.62535285949707
    10. '4' → logprob: -16.87535285949707

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00355124706402421
    2. ' or' → logprob: -6.003551483154297
    3. ':
' → logprob: -6.878551483154297
    4. '):' → logprob: -11.628551483154297
    5. ':return' → logprob: -11.628551483154297
    6. ' and' → logprob: -11.753551483154297
    7. '       ' → logprob: -11.878551483154297
    8. ',' → logprob: -12.378551483154297
    9. '   ' → logprob: -12.878551483154297
    10. '           ' → logprob: -13.503551483154297

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005493079777806997
    2. '       ' → logprob: -6.0054931640625
    3. '   ' → logprob: -6.3804931640625
    4. ' break' → logprob: -6.7554931640625
    5. '	break' → logprob: -10.7554931640625
    6. 'break' → logprob: -10.8804931640625
    7. '    ' → logprob: -11.0054931640625
    8. ' ' → logprob: -11.0054931640625
    9. '               ' → logprob: -11.2554931640625
    10. '<|end|>' → logprob: -11.3804931640625

Token 43: ' w' (ID: 286)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5879765152931213
    2. ' break' → logprob: -1.2129764556884766
    3. '           ' → logprob: -1.9629764556884766
    4. 'return' → logprob: -5.212976455688477
    5. ' return' → logprob: -7.462976455688477
    6. '	break' → logprob: -8.587976455688477
    7. '   ' → logprob: -8.587976455688477
    8. '```' → logprob: -8.962976455688477
    9. '       ' → logprob: -9.087976455688477
    10. '               ' → logprob: -9.837976455688477

Token 44: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0550878681242466
    2. '   ' → logprob: -3.6800878047943115
    3. ' ' → logprob: -4.555088043212891
    4. '=' → logprob: -5.430088043212891
    5. ' =' → logprob: -5.555088043212891
    6. '_' → logprob: -6.555088043212891
    7. '       ' → logprob: -6.680088043212891
    8. ' ==' → logprob: -6.930088043212891
    9. ' break' → logprob: -7.055088043212891
    10. '  ' → logprob: -7.180088043212891

Token 45: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6200448274612427
    2. '=' → logprob: -0.9950448274612427
    3. ' ' → logprob: -3.495044708251953
    4. ' break' → logprob: -3.620044708251953
    5. '.append' → logprob: -4.370044708251953
    6. ' ==' → logprob: -4.745044708251953
    7. '==' → logprob: -5.620044708251953
    8. 'break' → logprob: -6.370044708251953
    9. '  ' → logprob: -6.495044708251953
    10. ')' → logprob: -6.620044708251953

Token 46: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13008292019367218
    2. ' input' → logprob: -2.130082845687866
    3. '[input' → logprob: -6.005083084106445
    4. '[' → logprob: -8.130083084106445
    5. '['' → logprob: -8.505083084106445
    6. 'list' → logprob: -9.630083084106445
    7. ' [' → logprob: -10.130083084106445
    8. ' ['' → logprob: -11.005083084106445
    9. '   ' → logprob: -11.255083084106445
    10. ' list' → logprob: -11.755083084106445

Token 47: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010986098641296849
    2. '()' → logprob: -9.125109672546387
    3. '().'' → logprob: -15.000109672546387
    4. ' ().' → logprob: -15.125109672546387
    5. '(' → logprob: -15.500109672546387
    6. '()
' → logprob: -16.500110626220703
    7. '()).' → logprob: -17.000110626220703
    8. '()['' → logprob: -17.875110626220703
    9. '('').' → logprob: -18.000110626220703
    10. '('' → logprob: -18.125110626220703

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.85366350505501e-05
    2. 'strip' → logprob: -9.25009822845459
    3. 'rstrip' → logprob: -13.25009822845459
    4. ' split' → logprob: -14.25009822845459
    5. '(split' → logprob: -16.875099182128906
    6. 'spl' → logprob: -17.750099182128906
    7. 's' → logprob: -18.500099182128906
    8. '.split' → logprob: -20.000099182128906
    9. '_split' → logprob: -20.125099182128906
    10. 'plit' → logprob: -20.375099182128906

Token 49: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -10.500060081481934
    3. '()
' → logprob: -10.500060081481934
    4. '())' → logprob: -13.250060081481934
    5. '()]' → logprob: -14.250060081481934
    6. '()`' → logprob: -14.625060081481934
    7. '('' → logprob: -14.875060081481934
    8. ' ()' → logprob: -15.250060081481934
    9. '()>' → logprob: -15.250060081481934
    10. '()

' → logprob: -15.500060081481934

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28986886143684387
    2. '        
' → logprob: -1.6648688316345215
    3. '
' → logprob: -3.6648688316345215
    4. '<|end|>' → logprob: -4.6648688316345215
    5. 'w' → logprob: -4.9148688316345215
    6. '```' → logprob: -5.1648688316345215
    7. '[' → logprob: -6.0398688316345215
    8. '\n' → logprob: -6.5398688316345215
    9. ' w' → logprob: -6.7898688316345215
    10. ')' → logprob: -6.9148688316345215

Token 51: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.5293686389923096
    2. ' w' → logprob: -1.1543686389923096
    3. '       ' → logprob: -3.1543686389923096
    4. '
' → logprob: -3.7793686389923096
    5. '        
' → logprob: -4.1543684005737305
    6. ' 
' → logprob: -4.7793684005737305
    7. '<|end|>' → logprob: -7.1543684005737305
    8. ' if' → logprob: -7.2793684005737305
    9. '```' → logprob: -7.9043684005737305
    10. '  
' → logprob: -8.02936840057373

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002293825149536133
    2. ' ,' → logprob: -6.127293586730957
    3. ',h' → logprob: -10.002293586730957
    4. ',w' → logprob: -10.252293586730957
    5. ',int' → logprob: -12.127293586730957
    6. '<|end|>' → logprob: -12.752293586730957
    7. '_,' → logprob: -12.877293586730957
    8. ' ' → logprob: -13.002293586730957
    9. '‌,' → logprob: -13.377293586730957
    10. ',height' → logprob: -13.377293586730957

Token 53: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.3868802487850189
    2. 'h' → logprob: -1.1368802785873413
    3. ',h' → logprob: -12.511879920959473
    4. 'int' → logprob: -12.886879920959473
    5. '"h' → logprob: -14.261879920959473
    6. ' ' → logprob: -14.511879920959473
    7. '    ' → logprob: -15.136879920959473
    8. '	h' → logprob: -15.136879920959473
    9. '_h' → logprob: -15.136879920959473
    10. ' int' → logprob: -15.261879920959473

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868825435638428
    2. '=' → logprob: -1.1368825435638428
    3. ')' → logprob: -12.136882781982422
    4. ',' → logprob: -12.636882781982422
    5. '=int' → logprob: -13.636882781982422
    6. ' ' → logprob: -14.386882781982422
    7. '[' → logprob: -15.386882781982422
    8. ']' → logprob: -15.761882781982422
    9. '<|end|>' → logprob: -15.761882781982422
    10. '=

' → logprob: -16.136882781982422

Token 55: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11233936250209808
    2. 'map' → logprob: -2.3623392581939697
    3. 'int' → logprob: -5.112339496612549
    4. ' int' → logprob: -5.112339496612549
    5. ' list' → logprob: -11.98733901977539
    6. ' w' → logprob: -12.23733901977539
    7. 'list' → logprob: -13.48733901977539
    8. 'w' → logprob: -13.86233901977539
    9. '   ' → logprob: -14.23733901977539
    10. '[int' → logprob: -14.61233901977539

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008693021372891963
    2. 'int' → logprob: -7.250869274139404
    3. '(lambda' → logprob: -9.500869750976562
    4. '[int' → logprob: -9.875869750976562
    5. '(str' → logprob: -11.125869750976562
    6. '<int' → logprob: -11.875869750976562
    7. '(' → logprob: -12.125869750976562
    8. '```' → logprob: -13.000869750976562
    9. '=int' → logprob: -13.750869750976562
    10. ' int' → logprob: -14.250869750976562

Token 57: ',' (ID: 11)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0061284638941287994
    2. ',' → logprob: -5.631128311157227
    3. ',w' → logprob: -6.881128311157227
    4. ')' → logprob: -7.256128311157227
    5. 'w' → logprob: -7.631128311157227
    6. '(' → logprob: -8.256128311157227
    7. ')(' → logprob: -10.631128311157227
    8. ' (' → logprob: -11.881128311157227
    9. '```' → logprob: -12.631128311157227
    10. '	w' → logprob: -13.006128311157227

Token 58: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6326345801353455
    2. ' w' → logprob: -0.7576345801353455
    3. ')' → logprob: -11.507634162902832
    4. '[w' → logprob: -11.757634162902832
    5. ' ' → logprob: -12.132634162902832
    6. '(w' → logprob: -12.257634162902832
    7. '   ' → logprob: -13.507634162902832
    8. '    ' → logprob: -13.632634162902832
    9. '<w' → logprob: -14.382634162902832
    10. '        ' → logprob: -14.382634162902832

Token 59: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00045009577297605574
    2. ',' → logprob: -8.625450134277344
    3. '_' → logprob: -9.375450134277344
    4. ')' → logprob: -9.875450134277344
    5. '_w' → logprob: -10.500450134277344
    6. '_,' → logprob: -10.625450134277344
    7. ' _' → logprob: -10.875450134277344
    8. ' ,' → logprob: -11.000450134277344
    9. ',h' → logprob: -11.375450134277344
    10. '_s' → logprob: -12.000450134277344

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6060808522743173e-05
    2. ')
' → logprob: -11.875025749206543
    3. ' )' → logprob: -12.000025749206543
    4. ')`' → logprob: -12.250025749206543
    5. '))' → logprob: -12.875025749206543
    6. '[' → logprob: -13.000025749206543
    7. ');' → logprob: -14.625025749206543
    8. ')>' → logprob: -14.625025749206543
    9. '[:' → logprob: -15.375025749206543
    10. ')<' → logprob: -15.375025749206543

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060507144778966904
    2. '        
' → logprob: -3.43550705909729
    3. '<|end|>' → logprob: -4.685507297515869
    4. '
' → logprob: -4.935507297515869
    5. ' if' → logprob: -6.185507297515869
    6. '    
' → logprob: -6.810507297515869
    7. '```' → logprob: -6.935507297515869
    8. 'if' → logprob: -6.935507297515869
    9. '   ' → logprob: -7.060507297515869
    10. ',' → logprob: -7.185507297515869

Token 62: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6522733569145203
    2. '<|end|>' → logprob: -1.402273416519165
    3. ' if' → logprob: -1.902273416519165
    4. '
' → logprob: -3.027273416519165
    5. 'if' (adapté à ' if') → logprob: -4.402273178100586
    6. '        
' → logprob: -5.277273178100586
    7. '<|end|>' → logprob: -5.277273178100586
    8. ' 
' → logprob: -5.902273178100586
    9. '\n' → logprob: -6.152273178100586
    10. ' ' → logprob: -6.277273178100586

Token 63: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.12694133818149567
    2. 'w' → logprob: -2.126941442489624
    3. '(' → logprob: -12.501941680908203
    4. ' (' → logprob: -12.501941680908203
    5. '(w' → logprob: -12.751941680908203
    6. ' ' → logprob: -13.001941680908203
    7. '0' → logprob: -14.876941680908203
    8. '  ' → logprob: -16.126941680908203
    9. '   ' → logprob: -16.626941680908203
    10. ' ' → logprob: -16.751941680908203

Token 64: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42882704734802246
    2. '==' → logprob: -1.0538270473480225
    3. ' ' → logprob: -9.053827285766602
    4. '=' → logprob: -12.303827285766602
    5. '0' → logprob: -13.303827285766602
    6. ')==' → logprob: -14.428827285766602
    7. '===' → logprob: -14.803827285766602
    8. ' =' → logprob: -14.803827285766602
    9. '```' → logprob: -14.803827285766602
    10. '()==' → logprob: -14.928827285766602

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164921827614307
    2. ' ' → logprob: -4.264164924621582
    3. '   ' → logprob: -14.264164924621582
    4. '  ' → logprob: -15.264164924621582
    5. '```' → logprob: -16.264163970947266
    6. '    ' → logprob: -16.389163970947266
    7. '۰' → logprob: -17.076663970947266
    8. ' h' → logprob: -17.139163970947266
    9. 'o' → logprob: -17.326663970947266
    10. '     ' → logprob: -17.576663970947266

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013279760023579001
    2. ' ' → logprob: -6.626327991485596
    3. 'h' → logprob: -13.501327514648438
    4. 'o' → logprob: -16.313827514648438
    5. ' h' → logprob: -16.501327514648438
    6. '   ' → logprob: -16.688827514648438
    7. '۰' → logprob: -16.751327514648438
    8. '```' → logprob: -16.751327514648438
    9. '０' → logprob: -16.938827514648438
    10. '  ' → logprob: -17.376327514648438

Token 67: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07892713695764542
    2. 'and' → logprob: -2.5789270401000977
    3. ' ' → logprob: -10.328927040100098
    4. ' or' → logprob: -12.453927040100098
    5. '	and' → logprob: -15.453927040100098
    6. '  ' → logprob: -15.953927040100098
    7. '<|end|>' → logprob: -16.453927993774414
    8. '   ' → logprob: -16.703927993774414
    9. ' ' → logprob: -16.828927993774414
    10. ' и' → logprob: -16.953927993774414

Token 68: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.018150877207517624
    2. 'h' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.51815128326416
    4. '	h' → logprob: -14.64315128326416
    5. '   ' → logprob: -17.143150329589844
    6. '<h' → logprob: -18.268150329589844
    7. ' ' → logprob: -19.018150329589844
    8. '  ' → logprob: -19.143150329589844
    9. ',h' → logprob: -19.143150329589844
    10. '```' → logprob: -19.643150329589844

Token 69: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07020273059606552
    2. '==' → logprob: -2.8202028274536133
    3. ' ' → logprob: -5.070202827453613
    4. '<|end|>' → logprob: -6.570202827453613
    5. ' =' → logprob: -8.945202827453613
    6. '=' → logprob: -9.070202827453613
    7. '0' → logprob: -9.070202827453613
    8. '<|end|>' → logprob: -9.820202827453613
    9. ')' → logprob: -10.320202827453613
    10. ' ' → logprob: -10.945202827453613

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0889405608177185
    2. '0' → logprob: -2.4639406204223633
    3. '<|end|>' → logprob: -15.026440620422363
    4. ' ' → logprob: -15.276440620422363
    5. '  ' → logprob: -15.651440620422363
    6. '   ' → logprob: -16.213939666748047
    7. '<|end|>' → logprob: -16.463939666748047
    8. '```' → logprob: -16.776439666748047
    9. 's' → logprob: -17.401439666748047
    10. '=' → logprob: -17.401439666748047

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.751326560974121
    4. '  ' → logprob: -16.001325607299805
    5. '```' → logprob: -17.376325607299805
    6. '<|end|>' → logprob: -17.751325607299805
    7. '۰' → logprob: -18.438825607299805
    8. '<|end|>' → logprob: -18.813825607299805
    9. '`' → logprob: -19.251325607299805
    10. ')' → logprob: -19.313825607299805

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006848576944321394
    2. ':
' → logprob: -5.0068488121032715
    3. '           ' → logprob: -9.506848335266113
    4. ':return' → logprob: -10.881848335266113
    5. '       ' → logprob: -11.006848335266113
    6. '   ' → logprob: -11.131848335266113
    7. ' :' → logprob: -12.131848335266113
    8. '.' → logprob: -14.131848335266113
    9. ':
' → logprob: -14.256848335266113
    10. ' break' → logprob: -14.881848335266113

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030396074056625366
    2. ':' → logprob: -3.530395984649658
    3. '       ' → logprob: -7.905395984649658
    4. ':
' → logprob: -8.405396461486816
    5. ' break' → logprob: -11.530396461486816
    6. '   ' → logprob: -11.655396461486816
    7. ':return' → logprob: -12.030396461486816
    8. '          ' → logprob: -12.405396461486816
    9. '               ' → logprob: -12.530396461486816
    10. ',' → logprob: -12.530396461486816

Token 74: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4010794162750244
    2. 'break' (adapté à ' break') → logprob: -1.4010794162750244
    3. ' break' → logprob: -2.6510794162750244
    4. 'return' → logprob: -4.401079177856445
    5. ' return' → logprob: -6.901079177856445
    6. '               ' → logprob: -9.026079177856445
    7. '       ' → logprob: -10.026079177856445
    8. '	break' → logprob: -10.526079177856445
    9. '   ' → logprob: -10.776079177856445
    10. '```' → logprob: -12.151079177856445

Token 75: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.579404354095459
    2. '       ' → logprob: -0.954404354095459
    3. '        
' → logprob: -3.079404354095459
    4. '<|end|>' → logprob: -5.204404354095459
    5. '    
' → logprob: -7.579404354095459
    6. '   ' → logprob: -7.829404354095459
    7. '```' → logprob: -8.204404830932617
    8. 'newline' → logprob: -8.329404830932617
    9. '
' → logprob: -8.454404830932617
    10. '' → logprob: -8.454404830932617

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.186600461602211
    2. '
' → logprob: -2.93660044670105
    3. '        
' → logprob: -2.93660044670105
    4. '   ' → logprob: -3.68660044670105
    5. 'grid' → logprob: -4.186600685119629
    6. '    
' → logprob: -5.061600685119629
    7. 'graph' → logprob: -5.561600685119629
    8. ' grid' → logprob: -5.686600685119629
    9. ' graph' → logprob: -6.311600685119629
    10. 'map' → logprob: -6.311600685119629

Token 77: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.5282905697822571
    2. '       ' → logprob: -1.7782905101776123
    3. 'graph' → logprob: -1.9032905101776123
    4. 'map' → logprob: -3.0282905101776123
    5. ' grid' → logprob: -4.153290748596191
    6. 'field' → logprob: -5.278290748596191
    7. 'is' → logprob: -5.278290748596191
    8. ' graph' → logprob: -5.403290748596191
    9. 'board' → logprob: -6.153290748596191
    10. 'maze' → logprob: -6.278290748596191

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013332172529771924
    2. '=' → logprob: -6.626333236694336
    3. ' ' → logprob: -12.376333236694336
    4. ' =
' → logprob: -14.126333236694336
    5. ' =[' → logprob: -14.501333236694336
    6. '=[]' → logprob: -14.876333236694336
    7. '   ' → logprob: -15.001333236694336
    8. '[' → logprob: -15.251333236694336
    9. ' =
' → logprob: -15.376333236694336
    10. ',' → logprob: -15.626333236694336

Token 79: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03920414298772812
    2. ' [' → logprob: -3.2892041206359863
    3. '[]' → logprob: -8.164204597473145
    4. '[line' → logprob: -9.289204597473145
    5. '[int' → logprob: -9.414204597473145
    6. '[new' → logprob: -9.539204597473145
    7. '[list' → logprob: -9.664204597473145
    8. '[h' → logprob: -9.914204597473145
    9. '[str' → logprob: -9.914204597473145
    10. '[string' → logprob: -9.914204597473145

Token 80: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1595705896615982
    2. ' list' → logprob: -2.2845706939697266
    3. 'input' → logprob: -3.1595706939697266
    4. ' input' → logprob: -6.159570693969727
    5. '[input' → logprob: -7.159570693969727
    6. '[list' → logprob: -8.159570693969727
    7. '[]' → logprob: -11.034570693969727
    8. '   ' → logprob: -11.284570693969727
    9. ' [' → logprob: -11.659570693969727
    10. '[' → logprob: -12.409570693969727

Token 81: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001345946453511715
    2. '().' → logprob: -6.626346111297607
    3. '()]' → logprob: -11.50134563446045
    4. ' ()' → logprob: -12.00134563446045
    5. '())' → logprob: -13.50134563446045
    6. '()
' → logprob: -13.75134563446045
    7. ')' → logprob: -15.62634563446045
    8. '(' → logprob: -15.75134563446045
    9. '()`' → logprob: -15.75134563446045
    10. '（）' → logprob: -15.87634563446045

Token 82: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.21570374071598053
    2. 'split' → logprob: -2.2157037258148193
    3. 'rstrip' → logprob: -2.4657037258148193
    4. ' strip' → logprob: -17.0907039642334
    5. 'replace' → logprob: -17.9657039642334
    6. '(split' → logprob: -18.2157039642334
    7. ' split' → logprob: -18.3407039642334
    8. 's' → logprob: -18.5907039642334
    9. 'read' → logprob: -19.3407039642334
    10. '(strip' → logprob: -19.4657039642334

Token 83: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06075788289308548
    2. '()]' → logprob: -3.185757875442505
    3. '())' → logprob: -4.060758113861084
    4. '('' → logprob: -8.435757637023926
    5. ')' → logprob: -10.185757637023926
    6. '(' → logprob: -10.185757637023926
    7. '()
' → logprob: -10.810757637023926
    8. '()]
' → logprob: -11.185757637023926
    9. ' ()' → logprob: -11.560757637023926
    10. '()[' → logprob: -11.810757637023926

Token 84: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010471008718013763
    2. ' for' → logprob: -7.626047134399414
    3. '()]' → logprob: -8.251047134399414
    4. 'for' → logprob: -8.626047134399414
    5. ')' → logprob: -9.376047134399414
    6. ']' → logprob: -11.126047134399414
    7. '())' → logprob: -12.126047134399414
    8. ' ()' → logprob: -12.376047134399414
    9. '(' → logprob: -12.501047134399414
    10. '   ' → logprob: -13.126047134399414

Token 85: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0336758978664875
    2. ' _' → logprob: -3.4086759090423584
    3. ' ' → logprob: -11.533676147460938
    4. ' in' → logprob: -11.783676147460938
    5. ' range' → logprob: -11.783676147460938
    6. ' i' → logprob: -13.783676147460938
    7. '_range' → logprob: -13.783676147460938
    8. '_i' → logprob: -14.033676147460938
    9. 'range' → logprob: -14.158676147460938
    10. 'i' → logprob: -14.783676147460938

Token 86: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10249415040016174
    2. 'range' → logprob: -2.352494239807129
    3. ' in' → logprob: -6.477494239807129
    4. '(range' → logprob: -7.852494239807129
    5. '	range' → logprob: -8.852494239807129
    6. ' xrange' → logprob: -9.352494239807129
    7. 'in' → logprob: -9.727494239807129
    8. ' ' → logprob: -10.352494239807129
    9. '_range' → logprob: -11.602494239807129
    10. '_' → logprob: -11.977494239807129

Token 87: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868771195411682
    2. 'range' → logprob: -1.1368770599365234
    3. '	range' → logprob: -12.636877059936523
    4. '(range' → logprob: -13.136877059936523
    5. ' xrange' → logprob: -14.386877059936523
    6. ' ' → logprob: -15.636877059936523
    7. '_range' → logprob: -17.261877059936523
    8. '.range' → logprob: -17.386877059936523
    9. ')' → logprob: -17.761877059936523
    10. '  ' → logprob: -19.011877059936523

Token 88: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -9.750060081481934
    3. ' (' → logprob: -13.625060081481934
    4. 'h' → logprob: -15.500060081481934
    5. '	h' → logprob: -17.375059127807617
    6. '(H' → logprob: -17.500059127807617
    7. ')' → logprob: -17.875059127807617
    8. '(height' → logprob: -18.125059127807617
    9. ')(' → logprob: -18.375059127807617
    10. ' h' → logprob: -19.250059127807617

Token 89: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002419891534373164
    2. ']' → logprob: -6.252419948577881
    3. ')' → logprob: -7.627419948577881
    4. '`]' → logprob: -13.877419471740723
    5. ' ]' → logprob: -14.752419471740723
    6. ' )' → logprob: -14.877419471740723
    7. '   ' → logprob: -15.127419471740723
    8. ')]
' → logprob: -15.252419471740723
    9. '')]' → logprob: -15.252419471740723
    10. '()]' → logprob: -15.252419471740723

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19946373999118805
    2. 'visited' → logprob: -2.5744638442993164
    3. '        
' → logprob: -3.3244638442993164
    4. '   ' → logprob: -4.074463844299316
    5. '
' → logprob: -4.324463844299316
    6. 'dist' → logprob: -5.074463844299316
    7. '```' → logprob: -5.074463844299316
    8. 'distance' → logprob: -5.199463844299316
    9. '<|end|>' → logprob: -5.699463844299316
    10. 'def' → logprob: -5.949463844299316

Token 91: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07818326354026794
    2. 'dist' → logprob: -3.328183174133301
    3. 'distance' → logprob: -4.203183174133301
    4. '       ' → logprob: -4.828183174133301
    5. 'def' → logprob: -5.578183174133301
    6. ' visited' → logprob: -5.953183174133301
    7. 'vis' → logprob: -6.078183174133301
    8. 'd' → logprob: -6.453183174133301
    9. 'v' → logprob: -6.578183174133301
    10. 'visit' → logprob: -7.203183174133301

Token 92: ' Find' (ID: 9764)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.4400564134120941
    2. 'dire' → logprob: -2.565056324005127
    3. 'visited' → logprob: -2.690056324005127
    4. 'd' → logprob: -2.940056324005127
    5. ' visited' → logprob: -3.190056324005127
    6. ' for' → logprob: -4.565056324005127
    7. 'def' → logprob: -4.690056324005127
    8. ' dx' → logprob: -4.815056324005127
    9. '       ' → logprob: -4.815056324005127
    10. ' distances' → logprob: -5.065056324005127

Token 93: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5629221200942993
    2. ' ' → logprob: -1.8129221200942993
    3. ' the' → logprob: -2.4379220008850098
    4. 'start' → logprob: -3.4379220008850098
    5. '<|end|>' → logprob: -3.5629220008850098
    6. ' start' → logprob: -4.06292200088501
    7. ' s' → logprob: -4.06292200088501
    8. ''s' → logprob: -4.18792200088501
    9. ' starting' → logprob: -4.56292200088501
    10. ' an' → logprob: -5.18792200088501

Token 94: ' and' (ID: 326)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7944004535675049
    2. 'y' → logprob: -2.169400453567505
    3. ' =' → logprob: -2.294400453567505
    4. '_row' → logprob: -2.669400453567505
    5. ',' → logprob: -3.044400453567505
    6. '_pos' → logprob: -3.294400453567505
    7. '<|end|>' → logprob: -3.294400453567505
    8. '_' → logprob: -3.919400453567505
    9. '_y' → logprob: -3.919400453567505
    10. ' ' → logprob: -4.044400215148926

Token 95: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.646324872970581
    2. ' G' → logprob: -1.146324872970581
    3. 'E' → logprob: -2.771324872970581
    4. 'T' → logprob: -3.146324872970581
    5. ' E' → logprob: -3.896324872970581
    6. ' T' → logprob: -4.14632511138916
    7. 'D' → logprob: -4.52132511138916
    8. ' D' → logprob: -5.77132511138916
    9. 'F' → logprob: -7.27132511138916
    10. ' ' → logprob: -7.64632511138916

Token 96: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6942885518074036
    2. '<|end|>' → logprob: -0.9442885518074036
    3. ':' → logprob: -2.819288492202759
    4. '       ' → logprob: -3.944288492202759
    5. '<|end|>' → logprob: -5.194288730621338
    6. ' ' → logprob: -5.444288730621338
    7. 'for' → logprob: -5.819288730621338
    8. 's' → logprob: -5.944288730621338
    9. '  
' → logprob: -5.944288730621338
    10. '   ' → logprob: -6.194288730621338

Token 97: ' max' (ID: 2999)
  Prédit: ' initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -0.33717289566993713
    2. 'initialize' → logprob: -2.5871729850769043
    3. ' mark' → logprob: -3.0871729850769043
    4. ' obstacles' → logprob: -3.9621729850769043
    5. ' ' → logprob: -4.212172985076904
    6. ' store' → logprob: -4.587172985076904
    7. '#' → logprob: -4.712172985076904
    8. '  ' → logprob: -4.962172985076904
    9. 'mark' → logprob: -5.087172985076904
    10. ' q' → logprob: -5.087172985076904

Token 98: ' seal' (ID: 30803)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0830603837966919
    2. ' _' → logprob: -3.0830602645874023
    3. '_distance' → logprob: -4.333060264587402
    4. ' ' → logprob: -5.333060264587402
    5. '_depth' → logprob: -5.333060264587402
    6. '_height' → logprob: -6.458060264587402
    7. '_x' → logprob: -6.583060264587402
    8. 'distance' → logprob: -7.083060264587402
    9. '_dist' → logprob: -7.208060264587402
    10. '_count' → logprob: -7.333060264587402

Token 99: ' number' (ID: 2086)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1628965437412262
    2. ')' → logprob: -3.4128966331481934
    3. '_' → logprob: -3.4128966331481934
    4. ' ' → logprob: -3.6628966331481934
    5. '   ' → logprob: -4.162896633148193
    6. '<|end|>' → logprob: -4.162896633148193
    7. '       ' → logprob: -5.287896633148193
    8. ']' → logprob: -5.537896633148193
    9. 't' → logprob: -5.912896633148193
    10. ',' → logprob: -6.412896633148193

Token 100: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.025438904762268
    2. '
' → logprob: -1.150438904762268
    3. '<|end|>' → logprob: -1.400438904762268
    4. 's' → logprob: -4.0254387855529785
    5. '        
' → logprob: -4.2754387855529785
    6. '        ' → logprob: -4.6504387855529785
    7. ' ' → logprob: -5.1504387855529785
    8. '   ' → logprob: -5.4004387855529785
    9. ':' → logprob: -5.5254387855529785
    10. '<|end|>' → logprob: -5.6504387855529785

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.231356680393219
    2. '
' → logprob: -1.8563566207885742
    3. '<|end|>' → logprob: -4.356356620788574
    4. '        
' → logprob: -4.481356620788574
    5. 's' → logprob: -4.981356620788574
    6. '   ' → logprob: -5.106356620788574
    7. '#' → logprob: -6.731356620788574
    8. ' ' → logprob: -6.856356620788574
    9. 'newline' → logprob: -6.856356620788574
    10. '        ' → logprob: -6.981356620788574

Token 102: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.31931963562965393
    2. 'max' (adapté à ' max') → logprob: -1.4443196058273315
    3. 's' → logprob: -4.569319725036621
    4. ' s' → logprob: -4.569319725036621
    5. ' 
' → logprob: -4.819319725036621
    6. '
' → logprob: -5.694319725036621
    7. '        
' → logprob: -7.069319725036621
    8. ' for' → logprob: -7.069319725036621
    9. ' ' → logprob: -7.319319725036621
    10. '<|end|>' → logprob: -7.569319725036621

Token 103: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.10140179842710495
    2. '_' → logprob: -2.4764018058776855
    3. '_num' → logprob: -4.7264018058776855
    4. '_number' → logprob: -5.8514018058776855
    5. '_s' → logprob: -8.601401329040527
    6. 'seal' → logprob: -8.601401329040527
    7. 's' → logprob: -9.976401329040527
    8. '_n' → logprob: -10.351401329040527
    9. 'Seal' → logprob: -10.601401329040527
    10. '_seed' → logprob: -10.851401329040527

Token 104: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0012991653056815267
    2. 'a' → logprob: -6.8762993812561035
    3. 'l' → logprob: -9.251298904418945
    4. 'als' → logprob: -10.251298904418945
    5. '```' → logprob: -10.751298904418945
    6. 'q' → logprob: -11.001298904418945
    7. 'r' → logprob: -11.501298904418945
    8. 'arch' → logprob: -11.626298904418945
    9. 'el' → logprob: -11.876298904418945
    10. '#' → logprob: -12.001298904418945

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20952117443084717
    2. '=' → logprob: -1.7095211744308472
    3. '_num' → logprob: -5.584521293640137
    4. '_number' → logprob: -5.959521293640137
    5. '_' → logprob: -6.709521293640137
    6. 's' → logprob: -8.209521293640137
    7. ',' → logprob: -9.584521293640137
    8. 'num' → logprob: -9.709521293640137
    9. 'number' → logprob: -9.959521293640137
    10. ' ' → logprob: -10.459521293640137

Token 106: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.961146891117096
    2. ' ' → logprob: -1.0861468315124512
    3. '0' → logprob: -1.5861468315124512
    4. ' -' → logprob: -2.586146831512451
    5. '1' → logprob: -12.21114730834961
    6. '   ' → logprob: -13.58614730834961
    7. '  ' → logprob: -13.71114730834961
    8. ' ' → logprob: -14.96114730834961
    9. 'int' → logprob: -15.58614730834961
    10. '2' → logprob: -16.02364730834961

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1428111493587494
    2. '-' → logprob: -2.0178110599517822
    3. ' ' → logprob: -9.517810821533203
    4. ' -' → logprob: -10.142810821533203
    5. '1' → logprob: -10.767810821533203
    6. 'int' → logprob: -14.642810821533203
    7. '   ' → logprob: -15.205310821533203
    8. 'float' → logprob: -15.455310821533203
    9. '−' → logprob: -15.642810821533203
    10. '  ' → logprob: -16.330310821533203

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7052556276321411
    2. '<|end|>' → logprob: -0.7052556276321411
    3. '       ' → logprob: -5.580255508422852
    4. '<|end|>' → logprob: -5.830255508422852
    5. ' for' → logprob: -5.955255508422852
    6. 'for' → logprob: -7.205255508422852
    7. '        
' → logprob: -7.830255508422852
    8. '\n' → logprob: -8.080255508422852
    9. ' ' → logprob: -8.330255508422852
    10. ' 
' → logprob: -8.580255508422852

Token 109: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.307689905166626
    2. '<|end|>' → logprob: -1.432689905166626
    3. '       ' → logprob: -4.307689666748047
    4. ' for' → logprob: -5.182689666748047
    5. '<|end|>' → logprob: -6.557689666748047
    6. ' 
' → logprob: -6.932689666748047
    7. '  
' → logprob: -6.932689666748047
    8. ' ' → logprob: -6.932689666748047
    9. '\n' → logprob: -7.182689666748047
    10. '        
' → logprob: -7.557689666748047

Token 110: ' start' (ID: 1604)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.899952232837677
    2. ' for' → logprob: -1.3999521732330322
    3. 'S' → logprob: -2.0249521732330322
    4. 's' → logprob: -2.7749521732330322
    5. ' start' → logprob: -3.0249521732330322
    6. ' s' → logprob: -3.0249521732330322
    7. 'for' → logprob: -3.5249521732330322
    8. 'start' (adapté à ' start') → logprob: -4.524952411651611
    9. ' found' → logprob: -5.524952411651611
    10. ' sx' → logprob: -5.524952411651611

Token 111: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010188196785748005
    2. ' =' → logprob: -5.010188102722168
    3. '_idx' → logprob: -6.760188102722168
    4. '=' → logprob: -7.010188102722168
    5. '_pos' → logprob: -7.010188102722168
    6. '_index' → logprob: -8.385188102722168
    7. '_i' → logprob: -9.885188102722168
    8. ',' → logprob: -10.135188102722168
    9. '_x' → logprob: -10.260188102722168
    10. '_=' → logprob: -10.385188102722168

Token 112: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011373177170753479
    2. ' None' → logprob: -5.261373043060303
    3. '(None' → logprob: -5.511373043060303
    4. '(' → logprob: -6.636373043060303
    5. '()' → logprob: -7.761373043060303
    6. '(-' → logprob: -8.011373519897461
    7. '_None' → logprob: -13.386373519897461
    8. 'none' → logprob: -13.511373519897461
    9. '=None' → logprob: -13.761373519897461
    10. '0' → logprob: -13.761373519897461

Token 113: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' goal' (ID: 8583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6427295804023743
    2. 'goal' (adapté à ' goal') → logprob: -1.0177295207977295
    3. 'end' → logprob: -2.7677295207977295
    4. ' for' → logprob: -3.6427295207977295
    5. ' goal' → logprob: -4.017729759216309
    6. '       ' → logprob: -6.017729759216309
    7. ' end' → logprob: -6.642729759216309
    8. 'finish' → logprob: -7.017729759216309
    9. '   ' → logprob: -7.642729759216309
    10. 'target' → logprob: -8.267729759216309

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931551098823547
    2. ' =' → logprob: -0.6931551098823547
    3. '=None' → logprob: -11.943155288696289
    4. ' ' → logprob: -13.943155288696289
    5. ')' → logprob: -15.568155288696289
    6. '<|end|>' → logprob: -16.31815528869629
    7. ',' → logprob: -17.19315528869629
    8. '＝' → logprob: -17.31815528869629
    9. '=[]' → logprob: -18.06815528869629
    10. '>' → logprob: -18.44315528869629

Token 117: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006722826045006514
    2. ' None' → logprob: -5.006722927093506
    3. '(None' → logprob: -12.006722450256348
    4. '[]' → logprob: -13.756722450256348
    5. '_None' → logprob: -16.256723403930664
    6. '(' → logprob: -16.881723403930664
    7. '0' → logprob: -17.131723403930664
    8. ' ' → logprob: -17.256723403930664
    9. '.None' → logprob: -17.256723403930664
    10. '=None' → logprob: -17.256723403930664

Token 118: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6102731227874756
    2. ' for' → logprob: -1.4852731227874756
    3. '
' → logprob: -1.7352731227874756
    4. 'for' → logprob: -3.7352731227874756
    5. '<|end|>' → logprob: -4.235273361206055
    6. '   ' → logprob: -5.485273361206055
    7. '	for' → logprob: -5.860273361206055
    8. ' 
' → logprob: -5.985273361206055
    9. '        
' → logprob: -6.360273361206055
    10. '  
' → logprob: -6.735273361206055

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2263344526290894
    2. ' for' → logprob: -1.6013344526290894
    3. '<|end|>' → logprob: -1.6013344526290894
    4. '
' → logprob: -2.351334571838379
    5. ' 
' → logprob: -2.476334571838379
    6. ' ' → logprob: -2.726334571838379
    7. 'for' → logprob: -3.726334571838379
    8. '        
' → logprob: -4.101334571838379
    9. '  
' → logprob: -4.601334571838379
    10. '        ' → logprob: -6.726334571838379

Token 120: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35694989562034607
    2. 'for' (adapté à ' for') → logprob: -1.2319499254226685
    3. '
' → logprob: -6.106949806213379
    4. ' ' → logprob: -6.231949806213379
    5. ' 
' → logprob: -6.356949806213379
    6. '	for' → logprob: -6.356949806213379
    7. '       ' → logprob: -7.481949806213379
    8. '<|end|>' → logprob: -9.231949806213379
    9. '   ' → logprob: -10.106949806213379
    10. '    ' → logprob: -11.356949806213379

Token 121: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10743775218725204
    2. ' ' → logprob: -2.7324378490448
    3. ' y' → logprob: -3.4824378490448
    4. ' _' → logprob: -5.857437610626221
    5. ' h' → logprob: -6.607437610626221
    6. ' row' → logprob: -6.857437610626221
    7. 'i' → logprob: -7.857437610626221
    8. ' r' → logprob: -7.982437610626221
    9. ' range' → logprob: -10.857438087463379
    10. 'y' → logprob: -10.857438087463379

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002266708994284272
    2. 'in' → logprob: -6.127266883850098
    3. ' ' → logprob: -10.377266883850098
    4. ',' → logprob: -10.377266883850098
    5. '<|end|>' → logprob: -11.377266883850098
    6. ' ,' → logprob: -12.627266883850098
    7. '	in' → logprob: -14.002266883850098
    8. ' y' → logprob: -14.252266883850098
    9. '0' → logprob: -14.752266883850098
    10. '_' → logprob: -15.127266883850098

Token 123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -17.130233764648438
    4. 'ange' → logprob: -17.380233764648438
    5. '	range' → logprob: -18.630233764648438
    6. '```' → logprob: -20.130233764648438
    7. '_range' → logprob: -20.505233764648438
    8. ' xrange' → logprob: -20.880233764648438
    9. 'Range' → logprob: -21.130233764648438
    10. 'rang' → logprob: -21.630233764648438

Token 124: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00024500858853571117
    2. ' h' → logprob: -8.875245094299316
    3. '(' → logprob: -9.875245094299316
    4. ' (' → logprob: -10.125245094299316
    5. 'h' → logprob: -11.250245094299316
    6. '	h' → logprob: -14.750245094299316
    7. '   ' → logprob: -16.625244140625
    8. '(
' → logprob: -17.125244140625
    9. '(len' → logprob: -17.375244140625
    10. ',h' → logprob: -17.750244140625

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001768947229720652
    2. '):
' → logprob: -6.376769065856934
    3. ':' → logprob: -10.126769065856934
    4. ')' → logprob: -11.251769065856934
    5. '+' → logprob: -12.001769065856934
    6. '   ' → logprob: -13.126769065856934
    7. '<|end|>' → logprob: -13.376769065856934
    8. ' ):' → logprob: -13.626769065856934
    9. '):
' → logprob: -14.001769065856934
    10. ']:' → logprob: -15.001769065856934

Token 126: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7513304948806763
    2. '   ' → logprob: -0.8763304948806763
    3. '           ' → logprob: -2.3763303756713867
    4. '<|end|>' → logprob: -4.501330375671387
    5. ':' → logprob: -5.751330375671387
    6. '    ' → logprob: -6.876330375671387
    7. ' for' → logprob: -7.126330375671387
    8. '<|end|>' → logprob: -7.251330375671387
    9. ' ' → logprob: -8.126330375671387
    10. '```' → logprob: -8.126330375671387

Token 127: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014901325106620789
    2. '   ' → logprob: -4.389901161193848
    3. 'for' (adapté à ' for') → logprob: -6.639901161193848
    4. ' ' → logprob: -7.389901161193848
    5. '    ' → logprob: -8.389901161193848
    6. '	for' → logprob: -8.639901161193848
    7. '<|end|>' → logprob: -10.639901161193848
    8. '       ' → logprob: -10.764901161193848
    9. ' ' → logprob: -12.764901161193848
    10. '    
' → logprob: -13.014901161193848

Token 128: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1269284337759018
    2. 'x' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.876928329467773
    4. '	x' → logprob: -15.876928329467773
    5. '   ' → logprob: -16.376928329467773
    6. '0' → logprob: -18.626928329467773
    7. '```' → logprob: -18.626928329467773
    8. '    ' → logprob: -18.751928329467773
    9. ')x' → logprob: -19.001928329467773
    10. '(x' → logprob: -19.376928329467773

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007617745082825422
    2. 'in' → logprob: -4.882617950439453
    3. ' ' → logprob: -13.382617950439453
    4. 'In' → logprob: -13.757617950439453
    5. '        ' → logprob: -13.757617950439453
    6. '	in' → logprob: -14.007617950439453
    7. '1' → logprob: -14.132617950439453
    8. ',' → logprob: -14.382617950439453
    9. '   ' → logprob: -14.382617950439453
    10. '+' → logprob: -14.382617950439453

Token 130: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740782678127289
    2. ' range' → logprob: -0.9740782976150513
    3. '(range' → logprob: -13.724078178405762
    4. ' ' → logprob: -16.474079132080078
    5. '	range' → logprob: -17.349079132080078
    6. ')' → logprob: -18.474079132080078
    7. ' xrange' → logprob: -18.474079132080078
    8. '_range' → logprob: -18.974079132080078
    9. '```' → logprob: -19.474079132080078
    10. 'w' → logprob: -19.724079132080078

Token 131: '(w' (ID: 7420)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0034171282313764095
    2. '(w' → logprob: -5.753417015075684
    3. ' (' → logprob: -9.003417015075684
    4. '(' → logprob: -9.128417015075684
    5. 'h' → logprob: -12.128417015075684
    6. '(
' → logprob: -14.503417015075684
    7. '(s' → logprob: -15.003417015075684
    8. 'w' → logprob: -15.003417015075684
    9. '(x' → logprob: -15.128417015075684
    10. ')' → logprob: -15.253417015075684

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014276175061240792
    2. '):
' → logprob: -6.62642765045166
    3. ')' → logprob: -9.75142765045166
    4. ':' → logprob: -10.25142765045166
    5. ' ):' → logprob: -12.62642765045166
    6. '):

' → logprob: -14.00142765045166
    7. '):
' → logprob: -14.12642765045166
    8. '+' → logprob: -14.25142765045166
    9. '       ' → logprob: -14.37642765045166
    10. '           ' → logprob: -14.50142765045166

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049132850021123886
    2. '           ' → logprob: -3.799132823944092
    3. ':' → logprob: -4.299132823944092
    4. '            ' → logprob: -5.799132823944092
    5. ' :' → logprob: -5.924132823944092
    6. ' ' → logprob: -6.299132823944092
    7. ' if' → logprob: -6.924132823944092
    8. ',' → logprob: -7.174132823944092
    9. '                ' → logprob: -7.174132823944092
    10. '<|end|>' → logprob: -8.04913330078125

Token 134: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5565855503082275
    2. ' ' → logprob: -0.9315855503082275
    3. 'if' → logprob: -4.431585311889648
    4. '                   ' → logprob: -5.306585311889648
    5. '           ' → logprob: -5.556585311889648
    6. '            ' → logprob: -5.931585311889648
    7. ' c' → logprob: -6.306585311889648
    8. ' token' → logprob: -6.681585311889648
    9. '               ' → logprob: -6.931585311889648
    10. ' 
' → logprob: -7.056585311889648

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365607559680939
    2. '=' → logprob: -3.408656120300293
    3. ' ' → logprob: -12.408656120300293
    4. 's' → logprob: -13.658656120300293
    5. '=line' → logprob: -14.158656120300293
    6. ')' → logprob: -14.533656120300293
    7. ' ==' → logprob: -14.908656120300293
    8. '   ' → logprob: -14.908656120300293
    9. '=user' → logprob: -15.158656120300293
    10. '=s' → logprob: -15.408656120300293

Token 136: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.10021044313907623
    2. 'grid' → logprob: -2.350210428237915
    3. '	grid' → logprob: -13.100210189819336
    4. '(grid' → logprob: -13.850210189819336
    5. 'int' → logprob: -15.100210189819336
    6. '.grid' → logprob: -15.475210189819336
    7. ':grid' → logprob: -16.225210189819336
    8. ' int' → logprob: -16.350210189819336
    9. ' ' → logprob: -16.725210189819336
    10. '/grid' → logprob: -17.975210189819336

Token 137: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.320199877838604e-07
    2. '[h' → logprob: -15.0
    3. '[x' → logprob: -16.625
    4. '[' → logprob: -16.875
    5. '```' → logprob: -19.0
    6. '[Y' → logprob: -19.0
    7. '][' → logprob: -19.125
    8. 'y' → logprob: -19.375
    9. ' [' → logprob: -19.75
    10. '[user' → logprob: -19.75

Token 138: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004074720665812492
    2. '[y' → logprob: -5.629074573516846
    3. ']' → logprob: -7.879074573516846
    4. '[x' → logprob: -9.504075050354004
    5. ' ][' → logprob: -11.379075050354004
    6. '[' → logprob: -11.879075050354004
    7. ']][' → logprob: -14.629075050354004
    8. '```' → logprob: -14.754075050354004
    9. '"][' → logprob: -15.004075050354004
    10. ' [' → logprob: -15.254075050354004

Token 139: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -15.000000953674316
    3. '0' → logprob: -16.375
    4. '][' → logprob: -17.0
    5. ')x' → logprob: -18.375
    6. '[x' → logprob: -18.375
    7. ']' → logprob: -18.375
    8. '
' → logprob: -19.125
    9. '	x' → logprob: -19.375
    10. ''x' → logprob: -19.375

Token 140: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005369529593735933
    2. ')
' → logprob: -5.505369663238525
    3. ']' → logprob: -7.130369663238525
    4. ' )' → logprob: -8.630369186401367
    5. '])' → logprob: -9.005369186401367
    6. ')]' → logprob: -9.755369186401367
    7. '           ' → logprob: -10.255369186401367
    8. '               ' → logprob: -10.630369186401367
    9. '')' → logprob: -10.880369186401367
    10. '):
' → logprob: -11.380369186401367

Token 141: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14981622993946075
    2. '               ' → logprob: -3.0248162746429443
    3. 'if' (adapté à ' if') → logprob: -3.3998162746429443
    4. '                ' → logprob: -3.3998162746429443
    5. ' ' → logprob: -3.8998162746429443
    6. '           ' → logprob: -6.899816036224365
    7. '            ' → logprob: -7.524816036224365
    8. '        ' → logprob: -7.649816036224365
    9. '                   ' → logprob: -8.024816513061523
    10. '<|end|>' → logprob: -8.149816513061523

Token 143: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.005233882926404476
    2. 'c' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.630233764648438
    4. '	c' → logprob: -18.755233764648438
    5. ' ' → logprob: -18.880233764648438
    6. ')c' → logprob: -20.255233764648438
    7. '#' → logprob: -20.380233764648438
    8. ' grid' → logprob: -21.130233764648438
    9. '<|end|>' → logprob: -21.130233764648438
    10. '(c' → logprob: -21.505233764648438

Token 144: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014253887347877026
    2. '==' → logprob: -4.264254093170166
    3. '=='' → logprob: -9.889253616333008
    4. '[' → logprob: -10.889253616333008
    5. ' =='' → logprob: -11.139253616333008
    6. ' ' → logprob: -12.389253616333008
    7. '=' → logprob: -14.139253616333008
    8. '=="' → logprob: -14.764253616333008
    9. '.startswith' → logprob: -15.389253616333008
    10. ' =="' → logprob: -15.764253616333008

Token 145: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.0017217113636434078
    2. ' '' → logprob: -6.7517218589782715
    3. ''' → logprob: -7.7517218589782715
    4. 'S' → logprob: -9.251721382141113
    5. ''s' → logprob: -11.876721382141113
    6. '"S' → logprob: -12.001721382141113
    7. ''A' → logprob: -12.251721382141113
    8. ' S' → logprob: -13.626721382141113
    9. '('' → logprob: -13.876721382141113
    10. ' ' → logprob: -14.251721382141113

Token 146: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00017183588352054358
    2. 's' → logprob: -9.000171661376953
    3. '@' → logprob: -11.375171661376953
    4. 'G' → logprob: -12.250171661376953
    5. 'A' → logprob: -12.250171661376953
    6. '#' → logprob: -12.375171661376953
    7. 'P' → logprob: -12.875171661376953
    8. '2' → logprob: -13.125171661376953
    9. ''S' → logprob: -13.125171661376953
    10. '0' → logprob: -13.375171661376953

Token 147: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0012746386928483844
    2. ''' → logprob: -7.501274585723877
    3. '':
' → logprob: -7.876274585723877
    4. ':' → logprob: -8.126275062561035
    5. ''):' → logprob: -11.001275062561035
    6. ' ':' → logprob: -11.376275062561035
    7. '':
' → logprob: -11.751275062561035
    8. '):' → logprob: -13.001275062561035
    9. '":' → logprob: -13.376275062561035
    10. '':'' → logprob: -13.501275062561035

Token 148: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019107893109321594
    2. ':
' → logprob: -4.894107818603516
    3. '           ' → logprob: -5.519107818603516
    4. '               ' → logprob: -5.769107818603516
    5. '<|end|>' → logprob: -6.019107818603516
    6. ' =' → logprob: -7.519107818603516
    7. '<|end|>' → logprob: -8.144107818603516
    8. '=' → logprob: -8.269107818603516
    9. ',' → logprob: -8.644107818603516
    10. ' :' → logprob: -8.769107818603516

Token 149: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.2014392465353012
    2. 'start' (adapté à ' start') → logprob: -1.7014392614364624
    3. '(start' → logprob: -11.576438903808594
    4. '[start' → logprob: -12.326438903808594
    5. 's' → logprob: -12.701438903808594
    6. '_start' → logprob: -12.951438903808594
    7. ' (' → logprob: -13.326438903808594
    8. ' 
' → logprob: -14.076438903808594
    9. '                   ' → logprob: -14.076438903808594
    10. ':start' → logprob: -14.576438903808594

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004621661268174648
    2. '=' → logprob: -5.379621505737305
    3. ',' → logprob: -14.254621505737305
    4. ' =(' → logprob: -14.879621505737305
    5. ')' → logprob: -16.004621505737305
    6. ' ' → logprob: -16.004621505737305
    7. ' =)' → logprob: -16.629621505737305
    8. ' =
' → logprob: -17.004621505737305
    9. '=(' → logprob: -17.379621505737305
    10. ' =[' → logprob: -18.254621505737305

Token 151: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0017841795925050974
    2. ' (' → logprob: -6.501784324645996
    3. '(x' → logprob: -8.751784324645996
    4. '(' → logprob: -9.001784324645996
    5. '[y' → logprob: -15.001784324645996
    6. 'y' → logprob: -16.12678337097168
    7. ' y' → logprob: -18.75178337097168
    8. '((' → logprob: -19.12678337097168
    9. 'x' → logprob: -19.75178337097168
    10. '(s' → logprob: -20.00178337097168

Token 152: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25232163071632385
    2. 'x' → logprob: -1.5023216009140015
    3. ' y' → logprob: -7.877321720123291
    4. ' x' → logprob: -11.627321243286133
    5. ')y' → logprob: -13.377321243286133
    6. ')' → logprob: -13.627321243286133
    7. '0' → logprob: -14.502321243286133
    8. '(y' → logprob: -15.252321243286133
    9. ')x' → logprob: -15.502321243286133
    10. '	y' → logprob: -16.377321243286133

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014758179895579815
    2. ',x' → logprob: -6.626475811004639
    3. ' ,' → logprob: -8.876476287841797
    4. ')' → logprob: -12.876476287841797
    5. '<|end|>' → logprob: -12.876476287841797
    6. ',y' → logprob: -13.251476287841797
    7. '‌,' → logprob: -14.126476287841797
    8. ',
' → logprob: -15.001476287841797
    9. ',)' → logprob: -15.126476287841797
    10. ',j' → logprob: -15.751476287841797

Token 154: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011047935113310814
    2. ' x' → logprob: -4.511047840118408
    3. '0' → logprob: -16.26104736328125
    4. '	x' → logprob: -17.13604736328125
    5. ')x' → logprob: -17.38604736328125
    6. ' ' → logprob: -18.26104736328125
    7. '
' → logprob: -18.63604736328125
    8. ',x' → logprob: -19.13604736328125
    9. ')' → logprob: -19.38604736328125
    10. '   ' → logprob: -19.88604736328125

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027111053350381553
    2. ')
' → logprob: -8.25027084350586
    3. ' )' → logprob: -12.12527084350586
    4. ',' → logprob: -13.25027084350586
    5. ')

' → logprob: -14.25027084350586
    6. '),' → logprob: -14.87527084350586
    7. ')}' → logprob: -15.50027084350586
    8. '')' → logprob: -15.50027084350586
    9. '               ' → logprob: -15.75027084350586
    10. ')`' → logprob: -15.75027084350586

Token 156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5955378413200378
    2. '
' → logprob: -1.2205379009246826
    3. '<|end|>' → logprob: -3.3455379009246826
    4. '                ' → logprob: -3.4705379009246826
    5. 'elif' → logprob: -3.7205379009246826
    6. ' 
' → logprob: -3.8455379009246826
    7. '                
' → logprob: -4.2205376625061035
    8. '                    
' → logprob: -5.3455376625061035
    9. '  
' → logprob: -5.4705376625061035
    10. ' elif' → logprob: -5.5955376625061035

Token 157: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.8830288052558899
    2. ' elif' → logprob: -1.0080287456512451
    3. '               ' → logprob: -1.5080287456512451
    4. '	elif' → logprob: -9.258028984069824
    5. '                ' → logprob: -11.133028984069824
    6. '<|end|>' → logprob: -11.133028984069824
    7. ' if' → logprob: -11.383028984069824
    8. ' or' → logprob: -11.508028984069824
    9. '           ' → logprob: -11.758028984069824
    10. '       ' → logprob: -12.133028984069824

Token 158: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0003559615579433739
    2. 'c' → logprob: -8.12535572052002
    3. ''' → logprob: -10.50035572052002
    4. ' '' → logprob: -11.25035572052002
    5. ' ' → logprob: -11.75035572052002
    6. ' ' → logprob: -11.75035572052002
    7. '	c' → logprob: -13.37535572052002
    8. '`' → logprob: -14.50035572052002
    9. ' `' → logprob: -14.75035572052002
    10. ' code' → logprob: -15.00035572052002

Token 159: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07893087714910507
    2. '==' → logprob: -2.5789308547973633
    3. '=='' → logprob: -10.453930854797363
    4. ' =='' → logprob: -12.578930854797363
    5. ' ' → logprob: -13.078930854797363
    6. '=' → logprob: -13.203930854797363
    7. '<|end|>' → logprob: -13.828930854797363
    8. '[' → logprob: -14.078930854797363
    9. ' =' → logprob: -14.328930854797363
    10. ')' → logprob: -14.453930854797363

Token 160: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03390569984912872
    2. ' '' → logprob: -3.4089057445526123
    3. ''S' → logprob: -8.658905982971191
    4. ''GC' → logprob: -10.533905982971191
    5. '('' → logprob: -11.783905982971191
    6. ' ' → logprob: -11.783905982971191
    7. 'G' → logprob: -12.158905982971191
    8. ''O' → logprob: -12.408905982971191
    9. ' ' → logprob: -12.408905982971191
    10. ''g' → logprob: -12.533905982971191

Token 161: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.42891836166381836
    2. ''' → logprob: -1.0539183616638184
    3. ''.' → logprob: -10.178918838500977
    4. '`' → logprob: -10.303918838500977
    5. ''g' → logprob: -10.928918838500977
    6. '')' → logprob: -11.053918838500977
    7. ''S' → logprob: -11.178918838500977
    8. ' G' → logprob: -11.178918838500977
    9. '"G' → logprob: -11.428918838500977
    10. '
' → logprob: -11.428918838500977

Token 162: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.08877488225698471
    2. ''):' → logprob: -2.7137749195098877
    3. ':' → logprob: -5.088774681091309
    4. ''):
' → logprob: -5.213774681091309
    5. '):' → logprob: -6.088774681091309
    6. '')' → logprob: -6.338774681091309
    7. '':
' → logprob: -6.463774681091309
    8. ''' → logprob: -6.963774681091309
    9. ')' → logprob: -8.213774681091309
    10. '):
' → logprob: -9.213774681091309

Token 163: '                   ' (ID: 699)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43105626106262207
    2. '=' → logprob: -1.056056261062622
    3. '                   ' → logprob: -6.181056022644043
    4. '=(' → logprob: -9.306056022644043
    5. ' (' → logprob: -9.556056022644043
    6. ' =(' → logprob: -10.556056022644043
    7. '               ' → logprob: -10.806056022644043
    8. '(goal' → logprob: -11.181056022644043
    9. ':' → logprob: -11.306056022644043
    10. '(' → logprob: -11.806056022644043

Token 164: ' goal' (ID: 8583)
  Prédit: ' goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.31354647874832153
    2. 'goal' (adapté à ' goal') → logprob: -1.3135464191436768
    3. '(goal' → logprob: -8.188546180725098
    4. '(' → logprob: -12.313546180725098
    5. ' (' → logprob: -13.313546180725098
    6. 'go' → logprob: -15.063546180725098
    7. '_goal' → logprob: -15.563546180725098
    8. '.goal' → logprob: -15.688546180725098
    9. 'Goal' → logprob: -17.063547134399414
    10. ' ' → logprob: -17.813547134399414

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014138251543045
    2. ' =' → logprob: -1.701413869857788
    3. ')' → logprob: -15.326414108276367
    4. '=(' → logprob: -15.701414108276367
    5. ' =(' → logprob: -16.826414108276367
    6. ',' → logprob: -17.326414108276367
    7. '=None' → logprob: -17.576414108276367
    8. ' ' → logprob: -17.576414108276367
    9. '==' → logprob: -17.826414108276367
    10. '(' → logprob: -17.951414108276367

Token 166: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5771795511245728
    2. '(y' → logprob: -0.8271795511245728
    3. '(' → logprob: -6.702179431915283
    4. '(x' → logprob: -11.952179908752441
    5. '(s' → logprob: -13.327179908752441
    6. '(w' → logprob: -14.202179908752441
    7. ' ' → logprob: -14.702179908752441
    8. '(z' → logprob: -14.952179908752441
    9. '(Y' → logprob: -15.327179908752441
    10. '(True' → logprob: -15.827179908752441

Token 167: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00024096666311379522
    2. ' y' → logprob: -8.50024127960205
    3. '(y' → logprob: -10.75024127960205
    4. ')y' → logprob: -11.50024127960205
    5. ')' → logprob: -12.62524127960205
    6. ''y' → logprob: -14.12524127960205
    7. ',y' → logprob: -14.75024127960205
    8. ' (' → logprob: -14.87524127960205
    9. '
' → logprob: -15.50024127960205
    10. '	y' → logprob: -15.87524127960205

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03378366678953171
    2. ',x' → logprob: -3.5337836742401123
    3. ' ,' → logprob: -6.033783435821533
    4. ',y' → logprob: -7.158783435821533
    5. '[x' → logprob: -7.783783435821533
    6. '[' → logprob: -8.158783912658691
    7. '][' → logprob: -10.033783912658691
    8. '[y' → logprob: -10.533783912658691
    9. 'x' → logprob: -10.908783912658691
    10. ')' → logprob: -10.908783912658691

Token 169: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09001705050468445
    2. ' y' → logprob: -2.465017080307007
    3. '(y' → logprob: -7.090016841888428
    4. ' (' → logprob: -8.715017318725586
    5. ')' → logprob: -10.465017318725586
    6. ')y' → logprob: -11.090017318725586
    7. '(' → logprob: -11.215017318725586
    8. 'x' → logprob: -11.340017318725586
    9. ''y' → logprob: -13.215017318725586
    10. '	y' → logprob: -13.340017318725586

Token 170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.840432565193623e-05
    2. ')
' → logprob: -9.875088691711426
    3. '               ' → logprob: -10.875088691711426
    4. '<|end|>' → logprob: -11.750088691711426
    5. ' )' → logprob: -12.250088691711426
    6. '')' → logprob: -13.875088691711426
    7. '#' → logprob: -13.875088691711426
    8. ')#' → logprob: -14.000088691711426
    9. '       ' → logprob: -14.625088691711426
    10. '                   ' → logprob: -14.875088691711426

Token 171: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016543248668313026
    2. ' elif' → logprob: -4.641543388366699
    3. ' else' → logprob: -6.141543388366699
    4. 'elif' → logprob: -6.141543388366699
    5. '<|end|>' → logprob: -7.516543388366699
    6. '```' → logprob: -8.1415433883667
    7. 'else' → logprob: -8.2665433883667
    8. ',' → logprob: -8.3915433883667
    9. '                
' → logprob: -9.1415433883667
    10. '                ' → logprob: -9.2665433883667

Token 172: ' else' (ID: 1203)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.5336738228797913
    2. 'elif' → logprob: -0.9086738228797913
    3. '               ' → logprob: -4.7836737632751465
    4. ' else' → logprob: -6.6586737632751465
    5. 'else' (adapté à ' else') → logprob: -7.1586737632751465
    6. '	elif' → logprob: -9.908674240112305
    7. ' ' → logprob: -12.533674240112305
    8. '       ' → logprob: -12.658674240112305
    9. '           ' → logprob: -13.408674240112305
    10. ' ' → logprob: -13.783674240112305

Token 173: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2333170771598816
    2. 'if' → logprob: -1.7333171367645264
    3. ':' → logprob: -3.7333171367645264
    4. '<|end|>' → logprob: -5.858316898345947
    5. ':
' → logprob: -6.483316898345947
    6. '           ' → logprob: -6.858316898345947
    7. ' ' → logprob: -7.983316898345947
    8. '        ' → logprob: -8.108317375183105
    9. '<|end|>' → logprob: -8.233317375183105
    10. '               ' → logprob: -8.358317375183105

Token 174: '                   ' (ID: 699)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.047164879739284515
    2. 'if' → logprob: -4.0471649169921875
    3. '                   ' → logprob: -4.2971649169921875
    4. '               ' → logprob: -4.7971649169921875
    5. ' try' → logprob: -5.7971649169921875
    6. '           ' → logprob: -7.0471649169921875
    7. ' i' → logprob: -8.047164916992188
    8. ' ' → logprob: -8.172164916992188
    9. ' #' → logprob: -8.297164916992188
    10. 'n' → logprob: -8.422164916992188

Token 175: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.667508065700531
    2. 'if' (adapté à ' if') → logprob: -0.917508065700531
    3. 'try' → logprob: -3.417508125305176
    4. ' try' → logprob: -3.792508125305176
    5. 'max' → logprob: -4.167508125305176
    6. ' max' → logprob: -4.292508125305176
    7. 'num' → logprob: -7.167508125305176
    8. '                   ' → logprob: -7.417508125305176
    9. '
' → logprob: -7.917508125305176
    10. '   ' → logprob: -8.042508125305176

Token 176: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10032356530427933
    2. ' c' → logprob: -2.3503236770629883
    3. 'len' → logprob: -9.725323677062988
    4. ' ' → logprob: -10.475323677062988
    5. ''' → logprob: -11.475323677062988
    6. ' len' → logprob: -11.600323677062988
    7. ' '' → logprob: -12.975323677062988
    8. '   ' → logprob: -13.100323677062988
    9. '  ' → logprob: -14.162823677062988
    10. ' isinstance' → logprob: -14.162823677062988

Token 177: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.021750370040535927
    2. '.' → logprob: -4.021750450134277
    3. 'isdigit' → logprob: -6.396750450134277
    4. ' and' → logprob: -6.896750450134277
    5. ' !=' → logprob: -8.521750450134277
    6. '!=' → logprob: -8.646750450134277
    7. '>' → logprob: -8.896750450134277
    8. ' .' → logprob: -9.271750450134277
    9. 'and' → logprob: -9.396750450134277
    10. ' not' → logprob: -10.021750450134277

Token 178: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -4.644463479053229e-05
    2. 'decimal' → logprob: -10.000046730041504
    3. 'numeric' → logprob: -14.000046730041504
    4. 'alpha' → logprob: -16.375045776367188
    5. 'al' → logprob: -16.875045776367188
    6. 'd' → logprob: -17.125045776367188
    7. 'dig' → logprob: -17.625045776367188
    8. 'digital' → logprob: -17.625045776367188
    9. 'digits' → logprob: -17.875045776367188
    10. 'a' → logprob: -18.625045776367188

Token 179: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07977678626775742
    2. '()' → logprob: -2.5797767639160156
    3. '():
' → logprob: -7.079776763916016
    4. '(' → logprob: -11.079776763916016
    5. '():

' → logprob: -11.704776763916016
    6. ':' → logprob: -12.204776763916016
    7. 'and' → logprob: -12.329776763916016
    8. ' ():' → logprob: -12.954776763916016
    9. '()==' → logprob: -13.079776763916016
    10. '()>' → logprob: -13.079776763916016

Token 180: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5909766554832458
    2. ' ' → logprob: -2.4659767150878906
    3. '                   ' → logprob: -2.5909767150878906
    4. '<|end|>' → logprob: -2.7159767150878906
    5. '                           ' → logprob: -3.2159767150878906
    6. '               ' → logprob: -3.3409767150878906
    7. '0' → logprob: -3.4659767150878906
    8. ' and' → logprob: -3.7159767150878906
    9. '                               ' → logprob: -3.7159767150878906
    10. ' max' → logprob: -4.840976715087891

Token 181: ' n' (ID: 297)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3110917806625366
    2. ' num' → logprob: -2.311091899871826
    3. 'n' (adapté à ' n') → logprob: -2.436091899871826
    4. 'max' → logprob: -3.811091899871826
    5. 'number' → logprob: -4.186091899871826
    6. ' max' → logprob: -4.561091899871826
    7. '                           ' → logprob: -4.686091899871826
    8. ' number' → logprob: -5.311091899871826
    9. ' n' → logprob: -5.311091899871826
    10. 'digit' → logprob: -6.061091899871826

Token 182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6902556419372559
    2. ' =' → logprob: -0.8152556419372559
    3. 'um' → logprob: -2.940255641937256
    4. '=int' → logprob: -6.315255641937256
    5. 'umber' → logprob: -6.690255641937256
    6. 'o' → logprob: -10.565256118774414
    7. '=num' → logprob: -11.565256118774414
    8. 'u' → logprob: -11.690256118774414
    9. '_=' → logprob: -11.690256118774414
    10. 'ow' → logprob: -11.690256118774414

Token 183: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01814994215965271
    2. ' int' → logprob: -4.0181498527526855
    3. '(int' → logprob: -18.393150329589844
    4. '	int' → logprob: -18.643150329589844
    5. '<int' → logprob: -19.893150329589844
    6. '[int' → logprob: -20.268150329589844
    7. '=int' → logprob: -20.268150329589844
    8. '   ' → logprob: -20.768150329589844
    9. 'max' → logprob: -21.018150329589844
    10. ' ' → logprob: -21.393150329589844

Token 184: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.001332382787950337
    2. '(' → logprob: -6.8763322830200195
    3. 'c' → logprob: -8.12633228302002
    4. ')c' → logprob: -13.12633228302002
    5. '(
' → logprob: -13.75133228302002
    6. '(n' → logprob: -15.00133228302002
    7. '	c' → logprob: -16.501333236694336
    8. '(token' → logprob: -16.751333236694336
    9. ' c' → logprob: -17.001333236694336
    10. ' (' → logprob: -17.501333236694336

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2254614233970642
    2. ')
' → logprob: -1.600461483001709
    3. ' )' → logprob: -10.72546100616455
    4. ' )
' → logprob: -11.72546100616455
    5. ')

' → logprob: -11.97546100616455
    6. ')
' → logprob: -12.97546100616455
    7. ')>' → logprob: -13.72546100616455
    8. '                       ' → logprob: -13.97546100616455
    9. ')**' → logprob: -13.97546100616455
    10. '<|end|>' → logprob: -14.47546100616455

Token 186: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.24048574268817902
    2. '<|end|>' → logprob: -2.490485668182373
    3. '                           ' → logprob: -3.365485668182373
    4. '           ' → logprob: -3.615485668182373
    5. ' if' → logprob: -4.115485668182373
    6. '               ' → logprob: -4.740485668182373
    7. '<|end|>' → logprob: -4.740485668182373
    8. ')' → logprob: -4.865485668182373
    9. '                   ' → logprob: -4.865485668182373
    10. ' and' → logprob: -4.990485668182373

Token 187: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10534554719924927
    2. ' if' → logprob: -2.3553454875946045
    3. 'max' → logprob: -5.355345726013184
    4. '                           ' → logprob: -8.230345726013184
    5. '                               ' → logprob: -9.980345726013184
    6. ' max' → logprob: -9.980345726013184
    7. '                       ' → logprob: -10.230345726013184
    8. ' ' → logprob: -13.230345726013184
    9. '	if' → logprob: -13.980345726013184
    10. '   ' → logprob: -14.230345726013184

Token 188: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18001329898834229
    2. ' n' → logprob: -1.8050132989883423
    3. 'max' → logprob: -9.430013656616211
    4. '                       ' → logprob: -9.805013656616211
    5. '                           ' → logprob: -9.930013656616211
    6. ' max' → logprob: -10.055013656616211
    7. '                               ' → logprob: -11.055013656616211
    8. '	n' → logprob: -11.805013656616211
    9. '                        ' → logprob: -12.805013656616211
    10. '                                   ' → logprob: -13.305013656616211

Token 189: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20141558349132538
    2. ' >' → logprob: -1.7014155387878418
    3. ' ' → logprob: -14.326416015625
    4. ')' → logprob: -14.451416015625
    5. '   ' → logprob: -15.701416015625
    6. '+' → logprob: -15.826416015625
    7. '<|end|>' → logprob: -15.826416015625
    8. '>end' → logprob: -16.326416015625
    9. '">' → logprob: -16.451416015625
    10. ' ' → logprob: -16.576416015625

Token 190: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20141451060771942
    2. ' max' → logprob: -1.7014144659042358
    3. '=max' → logprob: -14.951414108276367
    4. '	max' → logprob: -15.076414108276367
    5. '(max' → logprob: -15.451414108276367
    6. '_max' → logprob: -15.826414108276367
    7. '
' → logprob: -16.576414108276367
    8. '                       ' → logprob: -17.076414108276367
    9. '                           ' → logprob: -17.201414108276367
    10. '[max' → logprob: -17.326414108276367

Token 191: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.00012523093027994037
    2. 'seal' → logprob: -9.12512493133545
    3. 'se' → logprob: -11.37512493133545
    4. '_' → logprob: -13.37512493133545
    5. '_max' → logprob: -13.50012493133545
    6. 'max' → logprob: -14.50012493133545
    7. 'Seal' → logprob: -14.62512493133545
    8. ' seal' → logprob: -15.87512493133545
    9. '	se' → logprob: -16.000125885009766
    10. 'Se' → logprob: -16.250125885009766

Token 192: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.1994775377388578e-05
    2. 'a' → logprob: -11.875012397766113
    3. ' al' → logprob: -13.625012397766113
    4. 'ал' → logprob: -14.750012397766113
    5. 'el' → logprob: -14.875012397766113
    6. 'seal' → logprob: -15.750012397766113
    7. '```' → logprob: -15.812512397766113
    8. '	al' → logprob: -15.812512397766113
    9. 'alse' → logprob: -15.875012397766113
    10. '1' → logprob: -15.937512397766113

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020898036658763885
    2. ':
' → logprob: -3.8958981037139893
    3. ':max' → logprob: -8.52089786529541
    4. 'max' → logprob: -9.52089786529541
    5. '=max' → logprob: -10.64589786529541
    6. '):' → logprob: -10.89589786529541
    7. ')' → logprob: -11.14589786529541
    8. '):
' → logprob: -11.64589786529541
    9. '=' → logprob: -12.14589786529541
    10. '_max' → logprob: -12.77089786529541

Token 194: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.13729871809482574
    2. ':
' → logprob: -2.137298822402954
    3. ':' → logprob: -5.762298583984375
    4. 'max' → logprob: -5.887298583984375
    5. ' max' → logprob: -6.262298583984375
    6. '                       ' → logprob: -6.262298583984375
    7. '                               ' → logprob: -9.012298583984375
    8. '):
' → logprob: -9.387298583984375
    9. '           ' → logprob: -9.637298583984375
    10. '                   ' → logprob: -9.637298583984375

Token 195: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1603088229894638
    2. 'max' (adapté à ' max') → logprob: -1.910308837890625
    3. 'n' → logprob: -10.160308837890625
    4. '=max' → logprob: -10.910308837890625
    5. ' n' → logprob: -11.410308837890625
    6. '                           ' → logprob: -12.285308837890625
    7. '_max' → logprob: -12.535308837890625
    8. '(max' → logprob: -12.785308837890625
    9. '	max' → logprob: -13.910308837890625
    10. '=' → logprob: -14.160308837890625

Token 196: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.00013381359167397022
    2. 'seal' → logprob: -9.000133514404297
    3. 'se' → logprob: -12.375133514404297
    4. '_' → logprob: -12.500133514404297
    5. '_s' → logprob: -14.000133514404297
    6. 'Seal' → logprob: -14.250133514404297
    7. ' seal' → logprob: -15.750133514404297
    8. 'Se' → logprob: -16.000133514404297
    9. '_sign' → logprob: -16.000133514404297
    10. '<|end|>' → logprob: -16.250133514404297

Token 197: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.00019853383128065616
    2. 'a' → logprob: -8.750198364257812
    3. 'seal' → logprob: -11.125198364257812
    4. 'alp' → logprob: -13.250198364257812
    5. 'alc' → logprob: -13.625198364257812
    6. 'ал' → logprob: -13.812698364257812
    7. ' al' → logprob: -14.000198364257812
    8. 'el' → logprob: -14.062698364257812
    9. 'alcon' → logprob: -14.125198364257812
    10. 'all' → logprob: -14.187698364257812

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410544753074646
    2. '=' → logprob: -0.9741054773330688
    3. '=n' → logprob: -10.474105834960938
    4. '=max' → logprob: -15.974105834960938
    5. ' ' → logprob: -16.974105834960938
    6. '＝' → logprob: -17.849105834960938
    7. '=

' → logprob: -19.474105834960938
    8. 'n' → logprob: -19.724105834960938
    9. '=int' → logprob: -19.849105834960938
    10. ' n' → logprob: -19.849105834960938

Token 199: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47407716512680054
    2. ' n' → logprob: -0.9740771651268005
    3. '	n' → logprob: -16.349077224731445
    4. '_n' → logprob: -17.349077224731445
    5. '=n' → logprob: -17.974077224731445
    6. ' ' → logprob: -18.849077224731445
    7. ')n' → logprob: -18.849077224731445
    8. '(n' → logprob: -18.974077224731445
    9. '$n' → logprob: -18.974077224731445
    10. '[n' → logprob: -19.224077224731445

Token 200: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.933948814868927
    2. ' 
' → logprob: -1.1839487552642822
    3. '#' → logprob: -2.4339487552642822
    4. '       ' → logprob: -2.6839487552642822
    5. '<|end|>' → logprob: -3.0589487552642822
    6. '        
' → logprob: -3.5589487552642822
    7. '  
' → logprob: -4.308948993682861
    8. ' ' → logprob: -4.558948993682861
    9. '    
' → logprob: -4.683948993682861
    10. '   ' → logprob: -4.808948993682861

Token 202: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.128865122795105
    2. 'visited' → logprob: -1.378865122795105
    3. 'se' → logprob: -2.5038652420043945
    4. 'steps' → logprob: -2.6288652420043945
    5. 'max' → logprob: -3.2538652420043945
    6. 'dist' → logprob: -3.3788652420043945
    7. 'state' → logprob: -3.8788652420043945
    8. 'distance' → logprob: -3.8788652420043945
    9. '#' (adapté à ' #') → logprob: -4.0038652420043945
    10. '       ' → logprob: -4.0038652420043945

Token 203: ' BFS' (ID: 190016)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.514761209487915
    2. 'visited' → logprob: -1.639761209487915
    3. 'from' → logprob: -1.764761209487915
    4. 'dist' → logprob: -2.264761209487915
    5. '#' → logprob: -2.264761209487915
    6. 'all' → logprob: -3.139761209487915
    7. 'se' → logprob: -3.264761209487915
    8. 'max' → logprob: -3.764761209487915
    9. 'col' → logprob: -4.389760971069336
    10. 'def' → logprob: -4.764760971069336

Token 204: ' states' (ID: 9407)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10851865261793137
    2. 'queue' → logprob: -3.358518600463867
    3. '(queue' → logprob: -3.983518600463867
    4. ' queue' → logprob: -4.108518600463867
    5. '       ' → logprob: -4.608518600463867
    6. '<|end|>' → logprob: -4.858518600463867
    7. '   ' → logprob: -5.483518600463867
    8. '_queue' → logprob: -5.733518600463867
    9. '	queue' → logprob: -6.108518600463867
    10. '        
' → logprob: -6.858518600463867

Token 205: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.134459376335144
    2. '(queue' → logprob: -1.884459376335144
    3. '   ' → logprob: -2.0094594955444336
    4. '       ' → logprob: -2.1344594955444336
    5. ' queue' → logprob: -2.6344594955444336
    6. 'queue' → logprob: -2.8844594955444336
    7. ':' → logprob: -3.8844594955444336
    8. '    ' → logprob: -4.134459495544434
    9. ',' → logprob: -4.259459495544434
    10. '        
' → logprob: -4.509459495544434

Token 206: ' position' (ID: 4010)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6845506429672241
    2. 'deque' → logprob: -1.8095506429672241
    3. ' deque' → logprob: -2.5595507621765137
    4. 'from' → logprob: -2.8095507621765137
    5. ' queue' → logprob: -2.9345507621765137
    6. '(queue' → logprob: -3.8095507621765137
    7. 'queue' → logprob: -3.9345507621765137
    8. ' from' → logprob: -3.9345507621765137
    9. 'visited' → logprob: -4.184550762176514
    10. ' visited' → logprob: -4.434550762176514

Token 207: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013788052834570408
    2. ' ,' → logprob: -4.388788223266602
    3. ' (' → logprob: -8.013788223266602
    4. ' =' → logprob: -8.138788223266602
    5. ' and' → logprob: -8.888788223266602
    6. ',y' → logprob: -8.888788223266602
    7. '<|end|>' → logprob: -9.013788223266602
    8. 's' → logprob: -9.888788223266602
    9. ')' → logprob: -9.888788223266602
    10. ',state' → logprob: -10.263788223266602

Token 208: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004623087588697672
    2. ')' → logprob: -6.254622936248779
    3. ',' → logprob: -6.504622936248779
    4. '),' → logprob: -7.754622936248779
    5. ',y' → logprob: -8.129623413085938
    6. ' y' → logprob: -8.129623413085938
    7. '(y' → logprob: -9.629623413085938
    8. '_y' → logprob: -10.379623413085938
    9. ' ,' → logprob: -10.629623413085938
    10. ')y' → logprob: -10.879623413085938

Token 209: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00514623150229454
    2. ',x' → logprob: -5.380146026611328
    3. ' ,' → logprob: -7.630146026611328
    4. ')' → logprob: -10.880146026611328
    5. '<|end|>' → logprob: -11.630146026611328
    6. '),' → logprob: -13.130146026611328
    7. '   ' → logprob: -13.380146026611328
    8. ',
' → logprob: -13.505146026611328
    9. ',n' → logprob: -13.505146026611328
    10. ',next' → logprob: -14.005146026611328

Token 210: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.11043360084295273
    2. ')' → logprob: -2.735433578491211
    3. ',' → logprob: -3.235433578491211
    4. ' ),' → logprob: -9.110433578491211
    5. ' ,' → logprob: -9.235433578491211
    6. ',state' → logprob: -9.735433578491211
    7. '),(' → logprob: -10.235433578491211
    8. ',)' → logprob: -11.485433578491211
    9. ' )' → logprob: -11.610433578491211
    10. ',),' → logprob: -11.610433578491211

Token 211: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036022020503878593
    2. ' ,' → logprob: -6.378602027893066
    3. ' and' → logprob: -7.503602027893066
    4. ')' → logprob: -7.628602027893066
    5. '),' → logprob: -7.878602027893066
    6. ',state' → logprob: -8.253602027893066
    7. 'and' → logprob: -9.003602027893066
    8. ',
' → logprob: -10.378602027893066
    9. '   ' → logprob: -11.003602027893066
    10. ' states' → logprob: -11.878602027893066

Token 212: ' current' (ID: 2208)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.8883854150772095
    2. ' collected' → logprob: -2.13838529586792
    3. ' bit' → logprob: -2.38838529586792
    4. ' mask' → logprob: -2.63838529586792
    5. 'bit' → logprob: -2.76338529586792
    6. ' (' → logprob: -3.26338529586792
    7. 'mask' → logprob: -3.26338529586792
    8. ' acquired' → logprob: -3.38838529586792
    9. ' seals' → logprob: -3.38838529586792
    10. 'se' → logprob: -3.88838529586792

Token 213: ' seal' (ID: 30803)
  Prédit: '_se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.8837636113166809
    2. 'seal' → logprob: -1.2587635517120361
    3. ' seals' → logprob: -2.883763551712036
    4. ' seal' → logprob: -2.883763551712036
    5. '_mask' → logprob: -3.258763551712036
    6. 'mask' → logprob: -3.383763551712036
    7. ' mask' → logprob: -3.633763551712036
    8. '_' → logprob: -3.758763551712036
    9. 'se' → logprob: -3.758763551712036
    10. ' sealed' → logprob: -4.133763790130615

Token 214: ' step' (ID: 5983)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.6629559993743896
    2. '_' → logprob: -1.0379559993743896
    3. '_count' → logprob: -3.6629559993743896
    4. 's' → logprob: -3.7879559993743896
    5. ' _' → logprob: -3.7879559993743896
    6. '_bit' → logprob: -4.037956237792969
    7. '_state' → logprob: -4.162956237792969
    8. '_set' → logprob: -4.287956237792969
    9. '_bits' → logprob: -6.162956237792969
    10. '_status' → logprob: -6.662956237792969

Token 215: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1279935985803604
    2. ' ,' → logprob: -2.377993583679199
    3. '       ' → logprob: -5.252993583679199
    4. 's' → logprob: -5.502993583679199
    5. ')' → logprob: -5.502993583679199
    6. ',
' → logprob: -6.002993583679199
    7. '   ' → logprob: -6.127993583679199
    8. '<|end|>' → logprob: -6.502993583679199
    9. ' (' → logprob: -6.752993583679199
    10. 'state' → logprob: -7.002993583679199

Token 216: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03887327015399933
    2. ',' → logprob: -3.5388731956481934
    3. '),' → logprob: -5.538873195648193
    4. ' )' → logprob: -5.913873195648193
    5. 'mask' → logprob: -7.288873195648193
    6. ')_' → logprob: -8.038873672485352
    7. '_mask' → logprob: -8.163873672485352
    8. ' ,' → logprob: -8.288873672485352
    9. 's' → logprob: -8.788873672485352
    10. ',)' → logprob: -8.913873672485352

Token 217: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1336439847946167
    2. ',' → logprob: -2.3836441040039062
    3. ' )' → logprob: -3.6336441040039062
    4. ' ,' → logprob: -5.383644104003906
    5. ',)' → logprob: -7.883644104003906
    6. 'x' → logprob: -8.383644104003906
    7. '-' → logprob: -8.633644104003906
    8. ').' → logprob: -8.883644104003906
    9. '...' → logprob: -9.133644104003906
    10. '/' → logprob: -9.383644104003906

Token 218: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2070469856262207
    2. ' max' → logprob: -1.7070469856262207
    3. ')' → logprob: -5.707046985626221
    4. '(max' → logprob: -6.707046985626221
    5. ' ' → logprob: -8.457046508789062
    6. '0' → logprob: -8.707046508789062
    7. '(' → logprob: -8.707046508789062
    8. ' (' → logprob: -8.832046508789062
    9. ' )' → logprob: -9.582046508789062
    10. '1' → logprob: -9.707046508789062

Token 219: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.005548559129238129
    2. '_' → logprob: -5.755548477172852
    3. ')' → logprob: -6.880548477172852
    4. '_mask' → logprob: -7.505548477172852
    5. '+' → logprob: -8.380548477172852
    6. ' _' → logprob: -9.255548477172852
    7. ')_' → logprob: -9.380548477172852
    8. '_s' → logprob: -9.505548477172852
    9. '_step' → logprob: -10.005548477172852
    10. '_)' → logprob: -10.130548477172852

Token 220: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.002036775927990675
    2. 'a' → logprob: -6.3770365715026855
    3. '_' → logprob: -9.127037048339844
    4. 'q' → logprob: -10.252037048339844
    5. '
' → logprob: -11.252037048339844
    6. '1' → logprob: -11.252037048339844
    7. '_al' → logprob: -11.377037048339844
    8. 'l' → logprob: -11.439537048339844
    9. '}' → logprob: -11.439537048339844
    10. '```' → logprob: -11.439537048339844

Token 221: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20535078644752502
    2. ')' → logprob: -1.8303507566452026
    3. ' +' → logprob: -3.705350875854492
    4. ' )' → logprob: -7.705350875854492
    5. ')+' → logprob: -9.580350875854492
    6. '+)' → logprob: -9.705350875854492
    7. ',' → logprob: -9.955350875854492
    8. '),' → logprob: -11.705350875854492
    9. ' plus' → logprob: -11.955350875854492
    10. 'state' → logprob: -12.455350875854492

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035573266446590424
    2. '
' → logprob: -4.535573482513428
    3. '   ' → logprob: -4.785573482513428
    4. ',' → logprob: -4.910573482513428
    5. '        
' → logprob: -6.035573482513428
    6. ',
' → logprob: -6.285573482513428
    7. ' 
' → logprob: -7.410573482513428
    8. ')' → logprob: -7.785573482513428
    9. '<|end|>' → logprob: -7.785573482513428
    10. ' directions' → logprob: -8.16057300567627

Token 223: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8125361800193787
    2. ' queue' → logprob: -0.9375361800193787
    3. 'queue' → logprob: -2.1875362396240234
    4. '       ' → logprob: -3.3125362396240234
    5. ' directions' → logprob: -6.062536239624023
    6. 'visited' → logprob: -6.187536239624023
    7. ' visited' → logprob: -6.187536239624023
    8. ' states' → logprob: -6.312536239624023
    9. ' from' → logprob: -6.687536239624023
    10. 'q' → logprob: -6.812536239624023

Token 224: ' Because' (ID: 13602)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.5022348165512085
    2. 'dy' → logprob: -2.127234935760498
    3. '   ' → logprob: -2.377234935760498
    4. 'dirs' → logprob: -2.627234935760498
    5. '       ' → logprob: -3.252234935760498
    6. 'queue' → logprob: -4.127234935760498
    7. 'from' → logprob: -4.377234935760498
    8. 'moves' → logprob: -4.627234935760498
    9. 'dq' → logprob: -4.627234935760498
    10. 'dx' → logprob: -4.877234935760498

Token 225: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.8467057347297668
    2. ' the' → logprob: -1.096705675125122
    3. ' you' → logprob: -2.596705675125122
    4. 'we' → logprob: -2.971705675125122
    5. 'the' → logprob: -3.221705675125122
    6. ' each' → logprob: -4.096705913543701
    7. ' max' → logprob: -4.221705913543701
    8. 'max' → logprob: -4.471705913543701
    9. ' seals' → logprob: -5.471705913543701
    10. 'you' → logprob: -5.596705913543701

Token 226: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.13706612586975098
    2. ' have' → logprob: -3.387066125869751
    3. 'need' → logprob: -3.387066125869751
    4. ' can' → logprob: -3.762066125869751
    5. ' want' → logprob: -3.762066125869751
    6. ' will' → logprob: -6.012065887451172
    7. ' must' → logprob: -6.262065887451172
    8. 'have' → logprob: -6.637065887451172
    9. ' use' → logprob: -6.762065887451172
    10. ' are' → logprob: -6.887065887451172

Token 227: ' destroy' (ID: 13890)
  Prédit: ' visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visit' → logprob: -0.21077321469783783
    2. 'visit' → logprob: -2.585773229598999
    3. ' check' → logprob: -2.960773229598999
    4. '   ' → logprob: -3.710773229598999
    5. ' process' → logprob: -4.96077299118042
    6. ' move' → logprob: -5.33577299118042
    7. ' step' → logprob: -5.83577299118042
    8. ' keep' → logprob: -5.96077299118042
    9. 'check' → logprob: -6.08577299118042
    10. ' pass' → logprob: -6.08577299118042

Token 228: ' seals' (ID: 88226)
  Prédit: ' seals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seals' → logprob: -1.0938948392868042
    2. ' the' → logprob: -1.4688948392868042
    3. ' all' → logprob: -1.4688948392868042
    4. 'se' → logprob: -2.2188949584960938
    5. 'all' → logprob: -3.5938949584960938
    6. 'the' → logprob: -3.9688949584960938
    7. ' walls' → logprob: -4.343894958496094
    8. 'max' → logprob: -4.968894958496094
    9. ' max' → logprob: -5.218894958496094
    10. ' sealed' → logprob: -5.468894958496094

Token 229: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19082225859165192
    2. ' ,' → logprob: -2.6908223628997803
    3. ')' → logprob: -3.4408223628997803
    4. ' at' → logprob: -3.9408223628997803
    5. '<|end|>' → logprob: -4.190822124481201
    6. ' to' → logprob: -5.065822124481201
    7. ' ' → logprob: -5.565822124481201
    8. '   ' → logprob: -5.690822124481201
    9. ' and' → logprob: -5.940822124481201
    10. '.' → logprob: -6.190822124481201

Token 230: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.03398648649454117
    2. ' order' → logprob: -3.5339865684509277
    3. 'sequence' → logprob: -5.783986568450928
    4. 'the' → logprob: -7.658986568450928
    5. 'exact' → logprob: -8.53398609161377
    6. 'strict' → logprob: -8.90898609161377
    7. 'se' → logprob: -9.53398609161377
    8. ' the' → logprob: -9.78398609161377
    9. ' sequence' → logprob: -9.90898609161377
    10. 'numer' → logprob: -10.53398609161377

Token 231: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19792163372039795
    2. ',' → logprob: -1.822921633720398
    3. '.' → logprob: -4.4479217529296875
    4. ',
' → logprob: -6.6979217529296875
    5. ')' → logprob: -7.0729217529296875
    6. '   ' → logprob: -7.1979217529296875
    7. ':' → logprob: -7.3229217529296875
    8. ' and' → logprob: -7.6979217529296875
    9. ' ,' → logprob: -7.9479217529296875
    10. ' to' → logprob: -8.197921752929688

Token 232: ' can't' (ID: 8535)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.269631952047348
    2. 'visited' → logprob: -2.769631862640381
    3. ' next' → logprob: -3.394631862640381
    4. ' state' → logprob: -3.519631862640381
    5. ' step' → logprob: -3.644631862640381
    6. '       ' → logprob: -3.894631862640381
    7. 'state' → logprob: -4.519631862640381
    8. ' current' → logprob: -4.644631862640381
    9. ' states' → logprob: -4.769631862640381
    10. ' steps' → logprob: -5.269631862640381

Token 233: ' touch' (ID: 7381)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.9322513341903687
    2. ' move' → logprob: -0.9322513341903687
    3. ' step' → logprob: -2.682251453399658
    4. ' visit' → logprob: -3.557251453399658
    5. ' walk' → logprob: -3.557251453399658
    6. 'pass' → logprob: -3.932251453399658
    7. 'move' → logprob: -4.432251453399658
    8. ' go' → logprob: -4.557251453399658
    9. ' jump' → logprob: -4.557251453399658
    10. 'visit' → logprob: -4.807251453399658

Token 234: ' seal' (ID: 30803)
  Prédit: ' seals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seals' → logprob: -0.8919727206230164
    2. 'se' → logprob: -1.3919727802276611
    3. ' a' → logprob: -2.516972780227661
    4. ' ' → logprob: -3.266972780227661
    5. ' max' → logprob: -3.266972780227661
    6. ' the' → logprob: -3.266972780227661
    7. 'max' → logprob: -3.516972780227661
    8. ' sealed' → logprob: -4.141972541809082
    9. 'the' → logprob: -4.141972541809082
    10. 'a' → logprob: -4.766972541809082

Token 235: ' n' (ID: 297)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4947822690010071
    2. ' ' → logprob: -1.8697822093963623
    3. '_' → logprob: -2.2447822093963623
    4. 's' → logprob: -2.6197822093963623
    5. '0' → logprob: -3.8697822093963623
    6. ',' → logprob: -5.244782447814941
    7. ' if' → logprob: -5.619782447814941
    8. ' ,' → logprob: -5.994782447814941
    9. ' before' → logprob: -6.369782447814941
    10. ' at' → logprob: -6.369782447814941

Token 236: '+' (ID: 10)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1058604046702385
    2. '+' → logprob: -2.730860471725464
    3. ' _' → logprob: -4.355860233306885
    4. '0' → logprob: -5.855860233306885
    5. ',' → logprob: -5.980860233306885
    6. ' ' → logprob: -6.105860233306885
    7. ' if' → logprob: -6.230860233306885
    8. '=' → logprob: -6.355860233306885
    9. 'n' → logprob: -6.605860233306885
    10. ')' → logprob: -6.730860233306885

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001514557225164026
    2. '+' → logprob: -9.125151634216309
    3. ')' → logprob: -10.750151634216309
    4. '```' → logprob: -12.125151634216309
    5. '_' → logprob: -12.375151634216309
    6. ' ' → logprob: -12.500151634216309
    7. '
' → logprob: -12.625151634216309
    8. ' +' → logprob: -14.000151634216309
    9. '-' → logprob: -14.500151634216309
    10. ',' → logprob: -15.250151634216309

Token 238: ' before' (ID: 2254)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4479618966579437
    2. ',' → logprob: -1.6979619264602661
    3. '       ' → logprob: -2.1979618072509766
    4. '   ' → logprob: -4.072961807250977
    5. ' )' → logprob: -4.322961807250977
    6. ' until' → logprob: -4.447961807250977
    7. ' ,' → logprob: -5.822961807250977
    8. ' ' → logprob: -6.072961807250977
    9. '.' → logprob: -6.322961807250977
    10. '           ' → logprob: -6.447961807250977

Token 239: ' all' (ID: 722)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24088793992996216
    2. ' n' → logprob: -1.8658878803253174
    3. ' destroying' → logprob: -3.3658878803253174
    4. 'destroy' → logprob: -4.1158881187438965
    5. ' completing' → logprob: -6.3658881187438965
    6. ' the' → logprob: -7.1158881187438965
    7. 'se' → logprob: -7.4908881187438965
    8. ' breaking' → logprob: -7.6158881187438965
    9. 'breaking' → logprob: -7.6158881187438965
    10. ' visiting' → logprob: -7.8658881187438965

Token 240: ' n' (ID: 297)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5685462355613708
    2. ' seals' → logprob: -1.9435462951660156
    3. '<|end|>' → logprob: -2.1935462951660156
    4. 'n' → logprob: -2.9435462951660156
    5. ' n' → logprob: -3.1935462951660156
    6. 'visited' → logprob: -4.318546295166016
    7. '_se' → logprob: -4.568546295166016
    8. ' destroyed' → logprob: -5.193546295166016
    9. 'completed' → logprob: -5.318546295166016
    10. 'sealed' → logprob: -5.318546295166016

Token 241: ' sealed' (ID: 37361)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.985090970993042
    2. '+' → logprob: -1.360090970993042
    3. '_' → logprob: -1.360090970993042
    4. 's' → logprob: -3.860090970993042
    5. ',' → logprob: -4.110091209411621
    6. ' _' → logprob: -4.860091209411621
    7. '<|end|>' → logprob: -4.860091209411621
    8. '   ' → logprob: -4.985091209411621
    9. '_se' → logprob: -5.235091209411621
    10. ' +' → logprob: -5.360091209411621

Token 242: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2990056276321411
    2. ',' → logprob: -2.0490055084228516
    3. 's' → logprob: -2.1740055084228516
    4. ' ,' → logprob: -2.7990055084228516
    5. '       ' → logprob: -3.1740055084228516
    6. ' ' → logprob: -3.2990055084228516
    7. ' step' → logprob: -3.2990055084228516
    8. '   ' → logprob: -3.4240055084228516
    9. '_' → logprob: -3.6740055084228516
    10. ' states' → logprob: -3.6740055084228516

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0162596944719553
    2. '        
' → logprob: -4.641259670257568
    3. '
' → logprob: -5.766259670257568
    4. '\' → logprob: -7.266259670257568
    5. ' 
' → logprob: -7.891259670257568
    6. '   ' → logprob: -8.016260147094727
    7. ',' → logprob: -8.141260147094727
    8. '<|end|>' → logprob: -8.516260147094727
    9. '```' → logprob: -8.641260147094727
    10. '\n' → logprob: -8.641260147094727

Token 244: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38216665387153625
    2. 'visited' (adapté à ' visited') → logprob: -1.8821666240692139
    3. '   ' → logprob: -2.632166624069214
    4. ' visited' → logprob: -3.132166624069214
    5. '
' → logprob: -3.507166624069214
    6. '        
' → logprob: -5.632166862487793
    7. 'queue' → logprob: -6.007166862487793
    8. ' directions' → logprob: -6.132166862487793
    9. 'dist' → logprob: -6.632166862487793
    10. 'dire' → logprob: -6.882166862487793

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009886529296636581
    2. '=' → logprob: -4.634886741638184
    3. '=[' → logprob: -10.009886741638184
    4. ' ' → logprob: -10.509886741638184
    5. ' =[' → logprob: -10.634886741638184
    6. '   ' → logprob: -11.634886741638184
    7. '[' → logprob: -11.884886741638184
    8. '[y' → logprob: -11.884886741638184
    9. '=[[' → logprob: -11.884886741638184
    10. '```' → logprob: -14.134886741638184

Token 246: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.08765935897827148
    2. '[' → logprob: -3.0876593589782715
    3. ' [[[' → logprob: -3.3376593589782715
    4. 'set' → logprob: -5.9626593589782715
    5. ' [' → logprob: -8.96265983581543
    6. '[{' → logprob: -10.33765983581543
    7. ' set' → logprob: -10.46265983581543
    8. '{' → logprob: -10.83765983581543
    9. ' [[' → logprob: -11.83765983581543
    10. '   ' → logprob: -12.46265983581543

Token 247: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.320199877838604e-07
    2. ' False' → logprob: -15.0
    3. '(False' → logprob: -19.25
    4. '0' → logprob: -19.875
    5. '=False' → logprob: -22.0
    6. '.False' → logprob: -24.375
    7. 'false' → logprob: -24.5
    8. '
' → logprob: -25.625
    9. '   ' → logprob: -25.625
    10. '[' → logprob: -25.625

Token 248: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23540353775024414
    2. ']' → logprob: -1.8604035377502441
    3. 'for' → logprob: -2.985403537750244
    4. '][' → logprob: -6.360403537750244
    5. ']*(' → logprob: -7.610403537750244
    6. '   ' → logprob: -7.735403537750244
    7. ')' → logprob: -8.485403060913086
    8. '           ' → logprob: -8.860403060913086
    9. ']*' → logprob: -8.860403060913086
    10. ',' → logprob: -9.235403060913086

Token 249: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00034845535992644727
    2. '(max' → logprob: -8.000348091125488
    3. ' max' → logprob: -11.500348091125488
    4. '   ' → logprob: -13.250348091125488
    5. '           ' → logprob: -15.000348091125488
    6. '[max' → logprob: -15.125348091125488
    7. '(' → logprob: -16.125349044799805
    8. '       ' → logprob: -16.375349044799805
    9. '	max' → logprob: -16.625349044799805
    10. ' (' → logprob: -16.875349044799805

Token 250: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.000476190383778885
    2. '+' → logprob: -7.750476360321045
    3. 'seal' → logprob: -10.250475883483887
    4. 'se' → logprob: -12.750475883483887
    5. '-se' → logprob: -13.125475883483887
    6. 'max' → logprob: -13.625475883483887
    7. 'Seal' → logprob: -14.375475883483887
    8. '   ' → logprob: -14.625475883483887
    9. ' +' → logprob: -14.750475883483887
    10. 'sealed' → logprob: -14.875475883483887

Token 251: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -3.2378600735682994e-05
    2. 'ал' → logprob: -12.500032424926758
    3. 'seal' → logprob: -12.625032424926758
    4. 'a' → logprob: -12.937532424926758
    5. '1' → logprob: -13.187532424926758
    6. 'alp' → logprob: -13.500032424926758
    7. 'alcon' → logprob: -13.875032424926758
    8. 'alable' → logprob: -14.250032424926758
    9. '	al' → logprob: -14.250032424926758
    10. ' al' → logprob: -14.375032424926758

Token 252: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007606747094541788
    2. ' +' → logprob: -4.8826069831848145
    3. '+
' → logprob: -14.632606506347656
    4. '＋' → logprob: -16.882606506347656
    5. '+[' → logprob: -17.757606506347656
    6. '1' → logprob: -17.882606506347656
    7. ' +
' → logprob: -17.882606506347656
    8. '()+' → logprob: -17.882606506347656
    9. '_plus' → logprob: -19.007606506347656
    10. '2' → logprob: -19.007606506347656

Token 253: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20146654546260834
    2. '1' → logprob: -1.7014665603637695
    3. ' ' → logprob: -9.95146656036377
    4. '3' → logprob: -13.07646656036377
    5. '   ' → logprob: -13.95146656036377
    6. '
' → logprob: -14.13896656036377
    7. '5' → logprob: -15.45146656036377
    8. '+' → logprob: -15.45146656036377
    9. ')' → logprob: -15.51396656036377
    10. '7' → logprob: -15.82646656036377

Token 254: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.960946772480384e-05
    2. ' )' → logprob: -9.375099182128906
    3. ')
' → logprob: -12.250099182128906
    4. ',' → logprob: -13.125099182128906
    5. '       ' → logprob: -13.250099182128906
    6. ')]' → logprob: -13.500099182128906
    7. '   ' → logprob: -13.625099182128906
    8. '))' → logprob: -14.250099182128906
    9. ' for' → logprob: -14.500099182128906
    10. '           ' → logprob: -14.625099182128906

Token 255: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020732590928673744
    2. 'for' → logprob: -3.8957326412200928
    3. ']' → logprob: -9.395732879638672
    4. ')' → logprob: -9.895732879638672
    5. '       ' → logprob: -10.895732879638672
    6. '           ' → logprob: -11.270732879638672
    7. '   ' → logprob: -11.520732879638672
    8. '	for' → logprob: -12.270732879638672
    9. '               ' → logprob: -12.645732879638672
    10. ' ' → logprob: -13.520732879638672

Token 256: ' _' (ID: 1175)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.47703230381011963
    2. '_' → logprob: -0.9770323038101196
    3. '_j' → logprob: -6.22703218460083
    4. '_w' → logprob: -7.72703218460083
    5. 'x' → logprob: -8.227032661437988
    6. ' _' → logprob: -8.727032661437988
    7. '_i' → logprob: -10.227032661437988
    8. '_in' → logprob: -10.852032661437988
    9. '_y' → logprob: -10.977032661437988
    10. '_range' → logprob: -11.602032661437988

Token 257: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1866886168718338
    2. ' range' → logprob: -2.1866886615753174
    3. ' in' → logprob: -2.9366886615753174
    4. 'in' → logprob: -5.311688423156738
    5. '(range' → logprob: -10.436688423156738
    6. 'x' → logprob: -12.936688423156738
    7. ' ' → logprob: -13.811688423156738
    8. '_range' → logprob: -14.061688423156738
    9. '	range' → logprob: -14.436688423156738
    10. 'w' → logprob: -14.686688423156738

Token 258: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023245712742209435
    2. ' range' → logprob: -3.7732458114624023
    3. '(range' → logprob: -15.148245811462402
    4. '	range' → logprob: -17.773244857788086
    5. '_range' → logprob: -17.898244857788086
    6. '   ' → logprob: -18.148244857788086
    7. ')' → logprob: -19.148244857788086
    8. 'w' → logprob: -19.523244857788086
    9. 'x' → logprob: -19.773244857788086
    10. '_' → logprob: -20.023244857788086

Token 259: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0001238004770129919
    2. 'w' → logprob: -9.000123977661133
    3. ' (' → logprob: -15.625123977661133
    4. '(' → logprob: -16.500123977661133
    5. '	w' → logprob: -17.000123977661133
    6. '   ' → logprob: -17.875123977661133
    7. '(width' → logprob: -19.000123977661133
    8. ' w' → logprob: -19.250123977661133
    9. '<w' → logprob: -20.000123977661133
    10. '/w' → logprob: -20.375123977661133

Token 260: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.7014437364414334e-05
    2. ')' → logprob: -11.12502670288086
    3. ' )' → logprob: -12.00002670288086
    4. '   ' → logprob: -12.62502670288086
    5. '       ' → logprob: -13.62502670288086
    6. ']' → logprob: -14.00002670288086
    7. ')]
' → logprob: -15.75002670288086
    8. ' ]' → logprob: -16.00002670288086
    9. ')][' → logprob: -16.25002670288086
    10. ')])' → logprob: -16.37502670288086

Token 261: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11748652905225754
    2. ']' → logprob: -2.9924864768981934
    3. '       ' → logprob: -3.1174864768981934
    4. '   ' → logprob: -4.617486476898193
    5. 'for' → logprob: -5.242486476898193
    6. ' ]' → logprob: -7.492486476898193
    7. '           ' → logprob: -8.367486953735352
    8. '	for' → logprob: -8.492486953735352
    9. ')' → logprob: -9.367486953735352
    10. '               ' → logprob: -9.992486953735352

Token 262: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.015497284010052681
    2. 'range' → logprob: -4.265497207641602
    3. ' in' → logprob: -6.765497207641602
    4. ' _' → logprob: -9.640497207641602
    5. '_' → logprob: -9.765497207641602
    6. '(range' → logprob: -10.140497207641602
    7. '_range' → logprob: -11.640497207641602
    8. '   ' → logprob: -12.765497207641602
    9. '	range' → logprob: -13.140497207641602
    10. ' h' → logprob: -13.640497207641602

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023638748098164797
    2. 'in' → logprob: -6.127363681793213
    3. 'range' → logprob: -8.877364158630371
    4. ' range' → logprob: -10.502364158630371
    5. '_' → logprob: -11.627364158630371
    6. ' ' → logprob: -14.002364158630371
    7. '_in' → logprob: -14.127364158630371
    8. '_range' → logprob: -14.377364158630371
    9. '   ' → logprob: -15.002364158630371
    10. '(range' → logprob: -15.627364158630371

Token 264: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029752805829048157
    2. ' range' → logprob: -3.529752731323242
    3. '(range' → logprob: -13.029752731323242
    4. '	range' → logprob: -16.654752731323242
    5. '[' → logprob: -17.654752731323242
    6. '_range' → logprob: -19.904752731323242
    7. 'rang' → logprob: -20.029752731323242
    8. '.range' → logprob: -20.029752731323242
    9. 'h' → logprob: -20.404752731323242
    10. '   ' → logprob: -20.904752731323242

Token 265: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.46175071597099304
    2. '(h' → logprob: -1.2117507457733154
    3. '[h' → logprob: -2.8367507457733154
    4. ' h' → logprob: -4.586750507354736
    5. 'range' → logprob: -5.836750507354736
    6. ' range' → logprob: -7.961750507354736
    7. '	h' → logprob: -11.086750984191895
    8. ' (' → logprob: -11.086750984191895
    9. '+h' → logprob: -11.461750984191895
    10. ',h' → logprob: -11.711750984191895

Token 266: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.511406809295295e-06
    2. ')' → logprob: -12.875006675720215
    3. ']' → logprob: -13.375006675720215
    4. '       ' → logprob: -13.625006675720215
    5. '   ' → logprob: -14.875006675720215
    6. ')])' → logprob: -15.625006675720215
    7. ')],' → logprob: -15.750006675720215
    8. ' )' → logprob: -16.0000057220459
    9. ')]
' → logprob: -16.0000057220459
    10. '])]' → logprob: -16.6250057220459

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017023178515955806
    2. ' queue' → logprob: -7.126702308654785
    3. 'queue' → logprob: -7.626702308654785
    4. '   ' → logprob: -9.001702308654785
    5. '        
' → logprob: -9.751702308654785
    6. '<|end|>' → logprob: -9.876702308654785
    7. ',' → logprob: -10.251702308654785
    8. '```' → logprob: -10.501702308654785
    9. '	queue' → logprob: -11.126702308654785
    10. ' next' → logprob: -11.251702308654785

Token 268: ' q' (ID: 2335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4511641263961792
    2. ' queue' → logprob: -1.5761641263961792
    3. 'queue' → logprob: -2.2011642456054688
    4. '   ' → logprob: -3.5761642456054688
    5. '
' → logprob: -5.826164245605469
    6. 'dist' → logprob: -5.826164245605469
    7. ' dist' → logprob: -6.451164245605469
    8. 'q' (adapté à ' q') → logprob: -6.576164245605469
    9. 'deque' → logprob: -6.826164245605469
    10. 'd' → logprob: -7.201164245605469

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08918298035860062
    2. '=' → logprob: -2.4641830921173096
    3. '.' → logprob: -8.46418285369873
    4. '.append' → logprob: -11.08918285369873
    5. 'ue' → logprob: -11.83918285369873
    6. '.=' → logprob: -12.83918285369873
    7. '.add' → logprob: -13.21418285369873
    8. 'u' → logprob: -13.33918285369873
    9. '.enqueue' → logprob: -13.46418285369873
    10. '.push' → logprob: -14.58918285369873

Token 270: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0009114635176956654
    2. ' deque' → logprob: -7.000911235809326
    3. 'de' → logprob: -17.875911712646484
    4. 'Deque' → logprob: -18.875911712646484
    5. '(de' → logprob: -22.500911712646484
    6. 'collections' → logprob: -22.500911712646484
    7. '```' → logprob: -22.750911712646484
    8. '	de' → logprob: -23.000911712646484
    9. '   ' → logprob: -24.125911712646484
    10. 'dq' → logprob: -24.125911712646484

Token 271: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1326393485069275
    2. '([(' → logprob: -2.1326394081115723
    3. '()
' → logprob: -5.257639408111572
    4. '(' → logprob: -8.507638931274414
    5. '([' → logprob: -8.882638931274414
    6. '()

' → logprob: -10.132638931274414
    7. '((' → logprob: -10.132638931274414
    8. '()\' → logprob: -10.757638931274414
    9. '(((' → logprob: -11.257638931274414
    10. '([]' → logprob: -11.507638931274414

Token 272: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8099109530448914
    2. '       ' → logprob: -0.8099109530448914
    3. ' q' → logprob: -2.434911012649536
    4. '   ' → logprob: -5.434910774230957
    5. '	q' → logprob: -6.059910774230957
    6. '(q' → logprob: -6.059910774230957
    7. '        
' → logprob: -6.434910774230957
    8. ' (' → logprob: -6.559910774230957
    9. '[q' → logprob: -6.559910774230957
    10. ' 
' → logprob: -6.684910774230957

Token 273: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7733055353164673
    2. ' q' → logprob: -0.7733055353164673
    3. '       ' → logprob: -2.7733054161071777
    4. 'start' → logprob: -4.898305416107178
    5. ' start' → logprob: -5.148305416107178
    6. ' y' → logprob: -8.023305892944336
    7. '   ' → logprob: -8.023305892944336
    8. ' (' → logprob: -9.023305892944336
    9. '(q' → logprob: -9.398305892944336
    10. '
' → logprob: -9.523305892944336

Token 274: ' start' (ID: 1604)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1385514885187149
    2. ' q' → logprob: -2.3885514736175537
    3. '       ' → logprob: -4.138551712036133
    4. 'visited' → logprob: -4.263551712036133
    5. ' visited' → logprob: -5.763551712036133
    6. 'start' → logprob: -6.388551712036133
    7. 'state' → logprob: -7.388551712036133
    8. ' start' → logprob: -7.513551712036133
    9. '   ' → logprob: -7.638551712036133
    10. 'y' → logprob: -8.138551712036133

Token 275: ' with' (ID: 483)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.5861724831629544e-05
    2. 'append' → logprob: -10.625056266784668
    3. 'q' → logprob: -10.875056266784668
    4. '.' → logprob: -12.750056266784668
    5. 'state' → logprob: -12.750056266784668
    6. '_q' → logprob: -13.375056266784668
    7. '_state' → logprob: -13.625056266784668
    8. ' .' → logprob: -13.750056266784668
    9. '.extend' → logprob: -13.750056266784668
    10. '   ' → logprob: -15.000056266784668

Token 276: ' seal' (ID: 30803)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4157622754573822
    2. '0' → logprob: -1.5407623052597046
    3. ' q' → logprob: -3.165762186050415
    4. 'start' → logprob: -3.540762186050415
    5. 'y' → logprob: -4.415762424468994
    6. 'visited' → logprob: -4.540762424468994
    7. ' (' → logprob: -4.915762424468994
    8. '(y' → logprob: -4.915762424468994
    9. '(q' → logprob: -5.415762424468994
    10. '(' → logprob: -5.790762424468994

Token 277: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.7902006506919861
    2. '0' → logprob: -1.2902007102966309
    3. '_state' → logprob: -2.540200710296631
    4. ' ' → logprob: -2.665200710296631
    5. 'step' → logprob: -3.540200710296631
    6. '=' → logprob: -3.540200710296631
    7. ' =' → logprob: -3.915200710296631
    8. '_' → logprob: -3.915200710296631
    9. '_steps' → logprob: -5.415200710296631
    10. 'state' → logprob: -5.540200710296631

Token 278: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31702807545661926
    2. '=' → logprob: -1.3170280456542969
    3. '0' → logprob: -5.817028045654297
    4. ' ' → logprob: -7.567028045654297
    5. ',' → logprob: -8.442028045654297
    6. 's' → logprob: -11.317028045654297
    7. ')' → logprob: -11.317028045654297
    8. '_' → logprob: -12.192028045654297
    9. '[' → logprob: -12.442028045654297
    10. ' ,' → logprob: -12.567028045654297

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '۰' → logprob: -18.375
    4. '000' → logprob: -19.75
    5. '０' → logprob: -20.0
    6. '```' → logprob: -20.625
    7. '=' → logprob: -20.75
    8. '০' → logprob: -20.875
    9. '(' → logprob: -20.875
    10. '   ' → logprob: -21.125

Token 280: ' means' (ID: 4748)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09362602978944778
    2. ',' → logprob: -3.093626022338867
    3. '       ' → logprob: -3.718626022338867
    4. 'q' → logprob: -5.343626022338867
    5. '(q' → logprob: -5.468626022338867
    6. ',q' → logprob: -5.718626022338867
    7. ',
' → logprob: -6.343626022338867
    8. ')' → logprob: -6.343626022338867
    9. ')
' → logprob: -6.718626022338867
    10. ' q' → logprob: -7.093626022338867

Token 281: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.5265243649482727
    2. ' not' → logprob: -1.901524305343628
    3. 'no' → logprob: -3.026524305343628
    4. ' we' → logprob: -3.401524305343628
    5. ' start' → logprob: -3.401524305343628
    6. 'not' → logprob: -3.526524305343628
    7. 'start' → logprob: -3.901524305343628
    8. '0' → logprob: -4.026524543762207
    9. ' that' → logprob: -4.151524543762207
    10. ' at' → logprob: -4.401524543762207

Token 282: ' seals' (ID: 88226)
  Prédit: '_se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.786525547504425
    2. 'se' → logprob: -1.5365254878997803
    3. ' seals' → logprob: -2.0365254878997803
    4. '_' → logprob: -2.4115254878997803
    5. ' seal' → logprob: -2.9115254878997803
    6. 'seal' → logprob: -3.5365254878997803
    7. '<|end|>' → logprob: -5.536525726318359
    8. ' sealed' → logprob: -5.786525726318359
    9. 's' → logprob: -5.786525726318359
    10. ' _' → logprob: -6.161525726318359

Token 283: ' destroyed' (ID: 31036)
  Prédit: '_destroy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_destroy' → logprob: -0.4519820809364319
    2. 'destroy' → logprob: -1.826982021331787
    3. ' destroyed' → logprob: -1.951982021331787
    4. '_' → logprob: -3.951982021331787
    5. '_b' → logprob: -4.576982021331787
    6. '_col' → logprob: -5.201982021331787
    7. ' to' → logprob: -5.201982021331787
    8. ' collected' → logprob: -5.451982021331787
    9. ' broken' → logprob: -6.201982021331787
    10. ')' → logprob: -6.701982021331787

Token 284: ' yet' (ID: 5073)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43039488792419434
    2. '(q' → logprob: -2.1803948879241943
    3. ')' → logprob: -2.5553948879241943
    4. ',q' → logprob: -3.0553948879241943
    5. '   ' → logprob: -3.3053948879241943
    6. '       ' → logprob: -3.3053948879241943
    7. '(' → logprob: -4.305395126342773
    8. 'q' → logprob: -4.805395126342773
    9. ' (' → logprob: -4.930395126342773
    10. ' q' → logprob: -5.555395126342773

Token 285: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3906731605529785
    2. '       ' → logprob: -1.3906731605529785
    3. ',' → logprob: -3.0156731605529785
    4. 'q' → logprob: -4.8906731605529785
    5. '   ' → logprob: -5.5156731605529785
    6. ')' → logprob: -5.6406731605529785
    7. ',q' → logprob: -5.7656731605529785
    8. ',
' → logprob: -6.6406731605529785
    9. ' q' → logprob: -6.7656731605529785
    10. '(q' → logprob: -7.1406731605529785

Token 286: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3736974000930786
    2. '       ' → logprob: -1.4986974000930786
    3. '   ' → logprob: -3.498697280883789
    4. ',' → logprob: -4.248697280883789
    5. ',q' → logprob: -4.248697280883789
    6. ' 
' → logprob: -5.248697280883789
    7. ' q' → logprob: -5.248697280883789
    8. 'q' → logprob: -5.623697280883789
    9. '        
' → logprob: -5.623697280883789
    10. '  
' → logprob: -5.873697280883789

Token 287: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.16367092728614807
    2. ' q' → logprob: -1.9136708974838257
    3. '       ' → logprob: -5.788671016693115
    4. '   ' → logprob: -7.913671016693115
    5. '	q' → logprob: -12.038670539855957
    6. '
' → logprob: -12.538670539855957
    7. '_q' → logprob: -14.038670539855957
    8. ',q' → logprob: -14.538670539855957
    9. '        
' → logprob: -14.538670539855957
    10. ' ' → logprob: -15.038670539855957

Token 288: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.5861724831629544e-05
    2. '.' → logprob: -9.875056266784668
    3. '.extend' → logprob: -13.250056266784668
    4. '.enqueue' → logprob: -13.250056266784668
    5. 'append' → logprob: -15.375056266784668
    6. ').' → logprob: -15.750056266784668
    7. '.push' → logprob: -16.00005531311035
    8. '.put' → logprob: -16.25005531311035
    9. '.add' → logprob: -16.37505531311035
    10. '.app' → logprob: -16.50005531311035

Token 289: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0006866985349915922
    2. '(' → logprob: -7.7506866455078125
    3. '((*' → logprob: -8.500686645507812
    4. '(((' → logprob: -9.875686645507812
    5. '(start' → logprob: -14.125686645507812
    6. ' ((' → logprob: -15.000686645507812
    7. '(*' → logprob: -16.625686645507812
    8. '([(' → logprob: -17.125686645507812
    9. '(('' → logprob: -17.500686645507812
    10. '(("' → logprob: -17.750686645507812

Token 290: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00012725738633889705
    2. ')' → logprob: -9.250126838684082
    3. '0' → logprob: -10.750126838684082
    4. ' start' → logprob: -12.000126838684082
    5. ')*' → logprob: -13.125126838684082
    6. '*' → logprob: -14.375126838684082
    7. ')+' → logprob: -14.625126838684082
    8. '
' → logprob: -15.375126838684082
    9. '(start' → logprob: -15.750126838684082
    10. '[start' → logprob: -16.8751277923584

Token 291: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. '0' → logprob: -13.125003814697266
    3. ',' → logprob: -14.500003814697266
    4. ' [' → logprob: -14.750003814697266
    5. ')' → logprob: -15.125003814697266
    6. '[
' → logprob: -15.625003814697266
    7. ' ' → logprob: -15.750003814697266
    8. '
' → logprob: -17.250003814697266
    9. ' ,' → logprob: -17.875003814697266
    10. '][' → logprob: -18.062503814697266

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -15.43750286102295
    4. '
' → logprob: -15.62500286102295
    5. '۰' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.312503814697266
    7. '[' → logprob: -16.750003814697266
    8. '1' → logprob: -17.187503814697266
    9. ']' → logprob: -17.437503814697266
    10. 'y' → logprob: -17.562503814697266

Token 293: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002334568416699767
    2. '),' → logprob: -9.50023365020752
    3. ' ,' → logprob: -9.62523365020752
    4. ',start' → logprob: -10.25023365020752
    5. '<|end|>' → logprob: -11.50023365020752
    6. '],' → logprob: -11.75023365020752
    7. '‌,' → logprob: -12.12523365020752
    8. '},' → logprob: -12.25023365020752
    9. '),(' → logprob: -12.25023365020752
    10. ',
' → logprob: -12.62523365020752

Token 294: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.043011635541915894
    2. ' start' → logprob: -3.1680116653442383
    3. '<|end|>' → logprob: -11.793011665344238
    4. ' ' → logprob: -13.668011665344238
    5. '(start' → logprob: -14.168011665344238
    6. '[start' → logprob: -14.168011665344238
    7. 'space' → logprob: -14.418011665344238
    8. ',start' → logprob: -14.668011665344238
    9. '=start' → logprob: -14.793011665344238
    10. ')' → logprob: -15.668011665344238

Token 295: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.75000286102295
    3. '][' → logprob: -14.75000286102295
    4. '[
' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.12500286102295
    6. ' [' → logprob: -15.62500286102295
    7. '0' → logprob: -15.75000286102295
    8. ' ' → logprob: -15.87500286102295
    9. '```' → logprob: -16.500001907348633
    10. ')' → logprob: -17.375001907348633

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -16.0
    4. '0' → logprob: -16.375
    5. ']' → logprob: -17.375
    6. '[' → logprob: -17.625
    7. '   ' → logprob: -17.625
    8. '4' → logprob: -18.0
    9. '-' → logprob: -18.125
    10. '])' → logprob: -18.375

Token 297: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011951648048125207
    2. ' ,' → logprob: -10.00011920928955
    3. '0' → logprob: -10.25011920928955
    4. '],' → logprob: -10.75011920928955
    5. '),' → logprob: -11.00011920928955
    6. '},' → logprob: -15.25011920928955
    7. '   ' → logprob: -15.87511920928955
    8. ')' → logprob: -17.375120162963867
    9. '1' → logprob: -17.500120162963867
    10. ' ' → logprob: -17.750120162963867

Token 298: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.500009536743164
    4. '۰' → logprob: -18.500009536743164
    5. ')' → logprob: -18.812509536743164
    6. '
' → logprob: -19.750009536743164
    7. '  ' → logprob: -20.375009536743164
    8. '```' → logprob: -20.500009536743164
    9. ',' → logprob: -20.750009536743164
    10. '０' → logprob: -20.812509536743164

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '۰' → logprob: -19.625
    4. '   ' → logprob: -20.75
    5. ')' → logprob: -21.375
    6. '０' → logprob: -22.0625
    7. '000' → logprob: -22.1875
    8. '```' → logprob: -22.5
    9. '০' → logprob: -22.875
    10. '٠' → logprob: -22.9375

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5251883864402771
    2. '))' → logprob: -0.9001883864402771
    3. ')' → logprob: -6.275188446044922
    4. '),' → logprob: -9.775188446044922
    5. ')))' → logprob: -10.025188446044922
    6. ' ))' → logprob: -10.525188446044922
    7. ' ,' → logprob: -10.650188446044922
    8. '))
' → logprob: -11.775188446044922
    9. '));' → logprob: -12.150188446044922
    10. ',q' → logprob: -13.150188446044922

Token 301: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. ')' → logprob: -17.500261306762695
    4. '   ' → logprob: -18.500261306762695
    5. ' ' → logprob: -18.875261306762695
    6. '
' → logprob: -19.500261306762695
    7. '))' → logprob: -19.500261306762695
    8. '  ' → logprob: -20.375261306762695
    9. '1' → logprob: -20.625261306762695
    10. '`' → logprob: -20.875261306762695

Token 302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. ')' → logprob: -18.500003814697266
    4. '))' → logprob: -19.125003814697266
    5. '   ' → logprob: -19.125003814697266
    6. '00' → logprob: -20.250003814697266
    7. '-' → logprob: -20.250003814697266
    8. '`' → logprob: -20.500003814697266
    9. '۰' → logprob: -20.500003814697266
    10. '```' → logprob: -20.625003814697266

Token 303: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.160295307636261
    2. '))' → logprob: -1.9102952480316162
    3. ')))' → logprob: -10.285295486450195
    4. ',' → logprob: -11.035295486450195
    5. ' )' → logprob: -11.660295486450195
    6. ' ))' → logprob: -12.910295486450195
    7. '),' → logprob: -13.035295486450195
    8. ')
' → logprob: -13.035295486450195
    9. '))
' → logprob: -13.285295486450195
    10. '));' → logprob: -14.035295486450195

Token 304: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08397054672241211
    2. '#' → logprob: -3.208970546722412
    3. 'steps' → logprob: -3.958970546722412
    4. '0' → logprob: -4.958970546722412
    5. 'distance' → logprob: -5.083970546722412
    6. '(y' → logprob: -5.208970546722412
    7. ' y' → logprob: -7.333970546722412
    8. 'moves' → logprob: -7.583970546722412
    9. 'dist' → logprob: -8.33397102355957
    10. 'cost' → logprob: -8.83397102355957

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04512130469083786
    2. '<|end|>' → logprob: -3.170121192932129
    3. ' ,' → logprob: -6.670121192932129
    4. '<|end|>' → logprob: -7.295121192932129
    5. ')' → logprob: -10.045121192932129
    6. ',q' → logprob: -10.295121192932129
    7. ',x' → logprob: -10.420121192932129
    8. ' ' → logprob: -12.295121192932129
    9. '```' → logprob: -12.295121192932129
    10. '   ' → logprob: -12.420121192932129

Token 308: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00317783304490149
    2. ' x' → logprob: -5.753177642822266
    3. '<|end|>' → logprob: -16.628177642822266
    4. '	x' → logprob: -17.378177642822266
    5. 'start' → logprob: -18.128177642822266
    6. ',x' → logprob: -18.503177642822266
    7. ')x' → logprob: -19.378177642822266
    8. ' ' → logprob: -20.128177642822266
    9. '"x' → logprob: -20.503177642822266
    10. '0' → logprob: -20.503177642822266

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06706131994724274
    2. '<|end|>' → logprob: -3.067061424255371
    3. ' ,' → logprob: -4.067061424255371
    4. '<|end|>' → logprob: -7.567061424255371
    5. ')' → logprob: -8.817061424255371
    6. '
' → logprob: -9.192061424255371
    7. ' ' → logprob: -9.192061424255371
    8. ',
' → logprob: -9.442061424255371
    9. ',q' → logprob: -10.317061424255371
    10. ' 
' → logprob: -10.442061424255371

Token 310: ' seal' (ID: 30803)
  Prédit: 'seal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seal' → logprob: -0.08108488470315933
    2. 'steps' → logprob: -2.831084966659546
    3. 'step' → logprob: -4.331084728240967
    4. '0' → logprob: -5.831084728240967
    5. ' seal' → logprob: -6.331084728240967
    6. 'se' → logprob: -7.706084728240967
    7. ' steps' → logprob: -8.331085205078125
    8. 'distance' → logprob: -9.206085205078125
    9. 'dist' → logprob: -9.831085205078125
    10. ' step' → logprob: -9.831085205078125

Token 311: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.0076437825337052345
    2. 'step' → logprob: -4.882643699645996
    3. '_steps' → logprob: -11.007643699645996
    4. ' step' → logprob: -11.382643699645996
    5. 'Step' → logprob: -12.382643699645996
    6. '	step' → logprob: -13.132643699645996
    7. '_STEP' → logprob: -14.007643699645996
    8. '_' → logprob: -14.257643699645996
    9. '_state' → logprob: -14.507643699645996
    10. '-step' → logprob: -15.007643699645996

Token 312: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' time' (ID: 1058)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.1827128678560257
    2. 'dist' → logprob: -1.9327129125595093
    3. 'distance' → logprob: -3.9327127933502197
    4. ' steps' → logprob: -6.682713031768799
    5. ' dist' → logprob: -7.557713031768799
    6. 'cost' → logprob: -8.05771255493164
    7. 'depth' → logprob: -8.55771255493164
    8. 'moves' → logprob: -8.68271255493164
    9. 'step' → logprob: -9.93271255493164
    10. ' distance' → logprob: -10.05771255493164

Token 314: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.861873984336853
    2. '<|end|>' → logprob: -1.361873984336853
    3. '
' → logprob: -1.486873984336853
    4. '       ' → logprob: -2.9868741035461426
    5. '\n' → logprob: -4.736874103546143
    6. '   ' → logprob: -4.736874103546143
    7. '<|end|>' → logprob: -4.861874103546143
    8. ':' → logprob: -5.361874103546143
    9. ',' → logprob: -5.611874103546143
    10. '  
' → logprob: -5.861874103546143

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6197487115859985
    2. '<|end|>' → logprob: -1.7447487115859985
    3. '   ' → logprob: -1.8697487115859985
    4. ',' → logprob: -3.744748592376709
    5. ')' → logprob: -3.744748592376709
    6. '        
' → logprob: -3.994748592376709
    7. '```' → logprob: -4.119748592376709
    8. '    
' → logprob: -4.619748592376709
    9. '  
' → logprob: -5.369748592376709
    10. ' 
' → logprob: -5.494748592376709

Token 316: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19243904948234558
    2. 'while' → logprob: -2.442439079284668
    3. ' while' → logprob: -2.567439079284668
    4. '	while' → logprob: -5.067439079284668
    5. '   ' → logprob: -5.442439079284668
    6. '        
' → logprob: -7.942439079284668
    7. ' 
' → logprob: -9.567439079284668
    8. '    
' → logprob: -9.692439079284668
    9. '```' → logprob: -10.317439079284668
    10. '  
' → logprob: -10.567439079284668

Token 317: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.005235648714005947
    2. '[' → logprob: -5.25523567199707
    3. '[y' → logprob: -13.50523567199707
    4. '][' → logprob: -15.75523567199707
    5. '[s' → logprob: -16.00523567199707
    6. 'start' → logprob: -17.00523567199707
    7. '[end' → logprob: -17.50523567199707
    8. '[source' → logprob: -17.63023567199707
    9. '```' → logprob: -17.63023567199707
    10. ' [' → logprob: -17.75523567199707

Token 318: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8312570318812504e-05
    2. '][' → logprob: -11.000018119812012
    3. '0' → logprob: -13.875018119812012
    4. ' [' → logprob: -15.750018119812012
    5. '```' → logprob: -16.250019073486328
    6. ']' → logprob: -16.625019073486328
    7. '   ' → logprob: -17.000019073486328
    8. '[
' → logprob: -17.250019073486328
    9. 'y' → logprob: -17.750019073486328
    10. '	' → logprob: -17.937519073486328

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.584861744660884e-05
    2. '[' → logprob: -10.750045776367188
    3. '2' → logprob: -11.125045776367188
    4. '1' → logprob: -12.000045776367188
    5. ' ' → logprob: -13.000045776367188
    6. '][' → logprob: -15.000045776367188
    7. '```' → logprob: -15.125045776367188
    8. '
' → logprob: -15.250045776367188
    9. '   ' → logprob: -16.312545776367188
    10. '-' → logprob: -16.937545776367188

Token 320: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.5690089639974758e-05
    2. ' ][' → logprob: -11.875015258789062
    3. ']' → logprob: -12.000015258789062
    4. ')][' → logprob: -13.625015258789062
    5. ']][' → logprob: -13.875015258789062
    6. '()][' → logprob: -16.125015258789062
    7. '[' → logprob: -16.375015258789062
    8. '   ' → logprob: -16.500015258789062
    9. '],[' → logprob: -16.875015258789062
    10. '],' → logprob: -17.375015258789062

Token 321: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.1472419600977446e-06
    2. ' start' → logprob: -13.750000953674316
    3. '
' → logprob: -19.875001907348633
    4. '[start' → logprob: -20.375001907348633
    5. '   ' → logprob: -21.125001907348633
    6. ' ' → logprob: -21.375001907348633
    7. ':start' → logprob: -22.500001907348633
    8. '	start' → logprob: -22.625001907348633
    9. '(start' → logprob: -22.625001907348633
    10. ',start' → logprob: -23.250001907348633

Token 322: '[' (ID: 58)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.25248053669929504
    2. '[' → logprob: -1.5024805068969727
    3. '1' → logprob: -8.127480506896973
    4. '[start' → logprob: -9.127480506896973
    5. ' ][' → logprob: -9.252480506896973
    6. ']][' → logprob: -10.877480506896973
    7. '   ' → logprob: -11.752480506896973
    8. 'start' → logprob: -12.127480506896973
    9. ')][' → logprob: -12.252480506896973
    10. ']' → logprob: -12.502480506896973

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '0' → logprob: -13.375003814697266
    3. '2' → logprob: -14.250003814697266
    4. '
' → logprob: -14.750003814697266
    5. '[' → logprob: -15.875003814697266
    6. ']' → logprob: -16.000003814697266
    7. ' ' → logprob: -16.000003814697266
    8. '][' → logprob: -16.250003814697266
    9. '```' → logprob: -16.375003814697266
    10. 'start' → logprob: -16.625003814697266

Token 324: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009012157097458839
    2. ']][' → logprob: -7.125901222229004
    3. ']' → logprob: -9.625901222229004
    4. ' ][' → logprob: -11.000901222229004
    5. ')][' → logprob: -11.500901222229004
    6. '[' → logprob: -13.000901222229004
    7. '()][' → logprob: -14.125901222229004
    8. ',' → logprob: -15.625901222229004
    9. '][_' → logprob: -15.750901222229004
    10. ''][' → logprob: -15.875901222229004

Token 325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '۰' → logprob: -19.75
    4. '０' → logprob: -21.375
    5. '   ' → logprob: -22.25
    6. '```' → logprob: -22.25
    7. '000' → logprob: -22.625
    8. '০' → logprob: -22.75
    9. '٠' → logprob: -22.875
    10. '
' → logprob: -23.375

Token 326: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001093841710826382
    2. ']=' → logprob: -9.375109672546387
    3. ' ]' → logprob: -10.625109672546387
    4. '=' → logprob: -16.87510871887207
    5. ']
' → logprob: -17.25010871887207
    6. 'True' → logprob: -17.62510871887207
    7. ']==' → logprob: -18.25010871887207
    8. '=True' → logprob: -18.50010871887207
    9. ')' → logprob: -18.62510871887207
    10. '`]' → logprob: -19.00010871887207

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07921461760997772
    2. ' =' → logprob: -2.579214572906494
    3. ']' → logprob: -8.704215049743652
    4. '=True' → logprob: -8.954215049743652
    5. ']=' → logprob: -10.454215049743652
    6. ')' → logprob: -15.329215049743652
    7. 'True' → logprob: -15.454215049743652
    8. ')=' → logprob: -15.954215049743652
    9. '=False' → logprob: -16.329214096069336
    10. '[' → logprob: -16.579214096069336

Token 328: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0206720617134124e-05
    2. ' True' → logprob: -11.50001049041748
    3. '1' → logprob: -19.750009536743164
    4. '(True' → logprob: -20.875009536743164
    5. '=True' → logprob: -21.250009536743164
    6. 'Tr' → logprob: -23.000009536743164
    7. 'T' → logprob: -24.250009536743164
    8. '   ' → logprob: -24.500009536743164
    9. 'true' → logprob: -24.750009536743164
    10. '
' → logprob: -25.250009536743164

Token 329: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1350298374891281
    2. '
' → logprob: -3.1350297927856445
    3. '<|end|>' → logprob: -3.1350297927856445
    4. '   ' → logprob: -3.8850297927856445
    5. '        
' → logprob: -5.1350297927856445
    6. '    
' → logprob: -5.7600297927856445
    7. ',' → logprob: -5.7600297927856445
    8. '  
' → logprob: -6.2600297927856445
    9. ')' → logprob: -6.8850297927856445
    10. '\n' → logprob: -7.2600297927856445

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22460761666297913
    2. '   ' → logprob: -2.5996077060699463
    3. 'while' → logprob: -2.7246077060699463
    4. ' while' → logprob: -3.2246077060699463
    5. '	while' → logprob: -4.849607467651367
    6. '        
' → logprob: -4.974607467651367
    7. '    
' → logprob: -6.599607467651367
    8. '
' → logprob: -6.974607467651367
    9. '<|end|>' → logprob: -7.349607467651367
    10. ' directions' → logprob: -7.474607467651367

Token 331: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.014348127879202366
    2. '       ' → logprob: -5.014348030090332
    3. ' while' → logprob: -5.389348030090332
    4. 'dire' → logprob: -6.014348030090332
    5. 'dx' → logprob: -8.389348030090332
    6. 'dirs' → logprob: -9.139348030090332
    7. '   ' → logprob: -9.264348030090332
    8. 'd' → logprob: -9.639348030090332
    9. '	while' → logprob: -10.139348030090332
    10. 'dy' → logprob: -10.389348030090332

Token 332: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.47418251633644104
    2. 'q' → logprob: -0.9741824865341187
    3. ' len' → logprob: -9.72418212890625
    4. ' ' → logprob: -10.97418212890625
    5. '	q' → logprob: -11.59918212890625
    6. 'len' → logprob: -12.09918212890625
    7. '   ' → logprob: -12.22418212890625
    8. ' True' → logprob: -12.34918212890625
    9. 'True' → logprob: -13.09918212890625
    10. '    ' → logprob: -13.72418212890625

Token 333: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.3922181725502014
    2. ':' → logprob: -1.1422181129455566
    3. ':
' → logprob: -6.267218112945557
    4. '.append' → logprob: -6.642218112945557
    5. '.' → logprob: -6.767218112945557
    6. '.pop' → logprob: -7.767218112945557
    7. 'opleft' → logprob: -8.392218589782715
    8. '):' → logprob: -9.517218589782715
    9. '```' → logprob: -9.642218589782715
    10. '.rotate' → logprob: -10.017218589782715

Token 334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032086113933473825
    2. '(y' → logprob: -6.503208637237549
    3. 'y' → logprob: -6.628208637237549
    4. ' y' → logprob: -8.37820816040039
    5. ' (' → logprob: -9.62820816040039
    6. '            
' → logprob: -11.00320816040039
    7. '          ' → logprob: -11.75320816040039
    8. '
' → logprob: -12.00320816040039
    9. ' 
' → logprob: -12.00320816040039
    10. '            ' → logprob: -12.12820816040039

Token 335: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.001010538311675191
    2. '           ' → logprob: -7.626010417938232
    3. ' y' → logprob: -8.00101089477539
    4. '               ' → logprob: -9.12601089477539
    5. '(y' → logprob: -9.87601089477539
    6. 'cy' → logprob: -11.87601089477539
    7. 'vy' → logprob: -12.12601089477539
    8. 'cur' → logprob: -12.62601089477539
    9. ''y' → logprob: -12.62601089477539
    10. ')y' → logprob: -13.37601089477539

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.049755782238208e-05
    2. ' ,' → logprob: -10.37505054473877
    3. ',q' → logprob: -11.75005054473877
    4. ',
' → logprob: -13.25005054473877
    5. ',x' → logprob: -13.25005054473877
    6. ')' → logprob: -13.37505054473877
    7. '<|end|>' → logprob: -13.50005054473877
    8. ',y' → logprob: -13.62505054473877
    9. ',next' → logprob: -14.12505054473877
    10. ',n' → logprob: -14.50005054473877

Token 337: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759406089782715
    2. 'x' → logprob: -0.8259406089782715
    3. ',x' → logprob: -14.70094108581543
    4. '	x' → logprob: -14.82594108581543
    5. ',' → logprob: -15.45094108581543
    6. ')x' → logprob: -16.57594108581543
    7. '   ' → logprob: -17.20094108581543
    8. '```' → logprob: -17.70094108581543
    9. ' ' → logprob: -17.82594108581543
    10. '
' → logprob: -17.95094108581543

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.215330409351736e-05
    2. ' ,' → logprob: -10.125041961669922
    3. '           ' → logprob: -13.625041961669922
    4. ')' → logprob: -15.125041961669922
    5. ',
' → logprob: -15.875041961669922
    6. ',n' → logprob: -16.750041961669922
    7. ',next' → logprob: -16.750041961669922
    8. '=' → logprob: -17.125041961669922
    9. '_,' → logprob: -17.375041961669922
    10. '+' → logprob: -17.875041961669922

Token 339: ' step' (ID: 5983)
  Prédit: 'seal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seal' → logprob: -0.0004534334584604949
    2. ' seal' → logprob: -8.500452995300293
    3. 's' → logprob: -8.625452995300293
    4. 'step' → logprob: -9.625452995300293
    5. 'sealed' → logprob: -14.125452995300293
    6. 'se' → logprob: -14.625452995300293
    7. 'sea' → logprob: -14.625452995300293
    8. 'stamp' → logprob: -14.875452995300293
    9. ' s' → logprob: -15.000452995300293
    10. 'Seal' → logprob: -15.000452995300293

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.47626737493556e-05
    2. ' ,' → logprob: -10.37503433227539
    3. '_,' → logprob: -12.75003433227539
    4. 's' → logprob: -16.00003433227539
    5. '=' → logprob: -16.12503433227539
    6. '‌,' → logprob: -16.50003433227539
    7. ',
' → logprob: -16.87503433227539
    8. '+,' → logprob: -17.25003433227539
    9. ',count' → logprob: -17.50003433227539
    10. ',_' → logprob: -17.50003433227539

Token 341: ' t' (ID: 260)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.12750260531902313
    2. 't' → logprob: -2.127502679824829
    3. ' time' → logprob: -7.75250244140625
    4. ' t' → logprob: -8.87750244140625
    5. 'cost' → logprob: -12.87750244140625
    6. 'dist' → logprob: -13.37750244140625
    7. 'ti' → logprob: -15.50250244140625
    8. 'tm' → logprob: -15.62750244140625
    9. '"time' → logprob: -16.12750244140625
    10. '	time' → logprob: -16.12750244140625

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4543219208717346
    2. '=' → logprob: -1.0793218612670898
    3. 'ime' → logprob: -3.70432186126709
    4. ')' → logprob: -7.95432186126709
    5. ',' → logprob: -8.45432186126709
    6. 'imes' → logprob: -10.32932186126709
    7. 'oken' → logprob: -11.20432186126709
    8. ' ' → logprob: -11.32932186126709
    9. '+' → logprob: -11.45432186126709
    10. '   ' → logprob: -12.20432186126709

Token 343: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4740820825099945
    2. ' q' → logprob: -0.9740821123123169
    3. '	q' → logprob: -13.349081993103027
    4. '    ' → logprob: -14.349081993103027
    5. '   ' → logprob: -14.599081993103027
    6. '           ' → logprob: -15.099081993103027
    7. '=q' → logprob: -15.224081993103027
    8. ' ' → logprob: -15.474081993103027
    9. '            ' → logprob: -15.599081993103027
    10. '               ' → logprob: -15.599081993103027

Token 344: '.p' (ID: 1201)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5287177562713623
    2. ',' → logprob: -1.4037177562713623
    3. ')' → logprob: -2.6537177562713623
    4. '=' → logprob: -3.0287177562713623
    5. '           ' → logprob: -3.2787177562713623
    6. '               ' → logprob: -6.403717994689941
    7. '       ' → logprob: -6.653717994689941
    8. ':' → logprob: -7.278717994689941
    9. ' ' → logprob: -7.278717994689941
    10. '        ' → logprob: -7.528717994689941

Token 345: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.42886286973953247
    2. 'op' → logprob: -1.0538628101348877
    3. '.' → logprob: -10.303862571716309
    4. 'opl' → logprob: -10.678862571716309
    5. ' op' → logprob: -10.803862571716309
    6. '.op' → logprob: -10.928862571716309
    7. '.append' → logprob: -11.303862571716309
    8. 'ople' → logprob: -11.678862571716309
    9. '(op' → logprob: -11.803862571716309
    10. 'o' → logprob: -11.928862571716309

Token 346: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6500887274742126
    2. '<|end|>' → logprob: -1.4000887870788574
    3. '           ' → logprob: -2.1500887870788574
    4. ',' → logprob: -2.4000887870788574
    5. '       ' → logprob: -4.650088787078857
    6. '<|end|>' → logprob: -5.275088787078857
    7. '   ' → logprob: -6.400088787078857
    8. ':' → logprob: -6.775088787078857
    9. '
' → logprob: -6.775088787078857
    10. '               ' → logprob: -7.025088787078857

Token 347: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1516546756029129
    2. '<|end|>' → logprob: -2.6516547203063965
    3. ',' → logprob: -3.5266547203063965
    4. '           ' → logprob: -4.1516547203063965
    5. '        
' → logprob: -5.4016547203063965
    6. ' 
' → logprob: -5.5266547203063965
    7. '            
' → logprob: -6.2766547203063965
    8. '
' → logprob: -6.4016547203063965
    9. ' for' → logprob: -6.4016547203063965
    10. '```' → logprob: -6.6516547203063965

Token 348: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21010924875736237
    2. ' if' → logprob: -2.835109233856201
    3. '       ' → logprob: -2.960109233856201
    4. '
' → logprob: -4.085109233856201
    5. ' for' → logprob: -4.335109233856201
    6. '            
' → logprob: -4.585109233856201
    7. ' directions' → logprob: -4.710109233856201
    8. 'd' → logprob: -5.210109233856201
    9. 'if' → logprob: -5.460109233856201
    10. '   ' → logprob: -5.460109233856201

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5248168706893921
    2. '=' → logprob: -0.8998168706893921
    3. ' ==' → logprob: -6.649816989898682
    4. ')' → logprob: -9.149816513061523
    5. ' ' → logprob: -9.149816513061523
    6. '==' → logprob: -9.649816513061523
    7. '<|end|>' → logprob: -9.774816513061523
    8. ',' → logprob: -11.399816513061523
    9. ' =
' → logprob: -11.649816513061523
    10. '.' → logprob: -11.649816513061523

Token 350: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.12692978978157043
    2. ' grid' → logprob: -2.126929759979248
    3. '(grid' → logprob: -14.126930236816406
    4. '	grid' → logprob: -14.751930236816406
    5. ' ' → logprob: -15.751930236816406
    6. '
' → logprob: -15.751930236816406
    7. '   ' → logprob: -15.876930236816406
    8. '.grid' → logprob: -15.876930236816406
    9. '/grid' → logprob: -17.251930236816406
    10. '```' → logprob: -17.876930236816406

Token 351: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.1398757123970427e-05
    2. '][' → logprob: -12.000011444091797
    3. 'y' → logprob: -12.375011444091797
    4. '```' → logprob: -15.375011444091797
    5. '[
' → logprob: -15.375011444091797
    6. '[' → logprob: -15.625011444091797
    7. ']' → logprob: -16.500011444091797
    8. ' [' → logprob: -16.750011444091797
    9. ')[' → logprob: -17.000011444091797
    10. '
' → logprob: -17.250011444091797

Token 352: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003385614836588502
    2. ']' → logprob: -8.000338554382324
    3. ' ][' → logprob: -13.125338554382324
    4. '[x' → logprob: -14.625338554382324
    5. '   ' → logprob: -15.250338554382324
    6. ']][' → logprob: -16.37533950805664
    7. ']
' → logprob: -16.50033950805664
    8. ')][' → logprob: -16.75033950805664
    9. '[y' → logprob: -17.25033950805664
    10. '][]' → logprob: -17.37533950805664

Token 353: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3544423381972592e-05
    2. ' x' → logprob: -11.25001335144043
    3. '][' → logprob: -14.87501335144043
    4. '
' → logprob: -16.87501335144043
    5. '	x' → logprob: -17.25001335144043
    6. ')x' → logprob: -17.25001335144043
    7. '[x' → logprob: -17.75001335144043
    8. ' ' → logprob: -17.87501335144043
    9. '   ' → logprob: -18.25001335144043
    10. ']' → logprob: -19.12501335144043

Token 354: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17262348532676697
    2. ']' → logprob: -1.9226235151290894
    3. ')
' → logprob: -5.047623634338379
    4. '])' → logprob: -5.297623634338379
    5. ']
' → logprob: -7.297623634338379
    6. ')]' → logprob: -9.547623634338379
    7. '）' → logprob: -9.922623634338379
    8. ' )' → logprob: -10.297623634338379
    9. '])
' → logprob: -10.797623634338379
    10. '           ' → logprob: -11.422623634338379

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1810830980539322
    2. '
' → logprob: -2.5560832023620605
    3. '<|end|>' → logprob: -3.6810832023620605
    4. '            
' → logprob: -3.8060832023620605
    5. '       ' → logprob: -4.4310832023620605
    6. '\n' → logprob: -4.8060832023620605
    7. '   ' → logprob: -5.4310832023620605
    8. ',' → logprob: -5.6810832023620605
    9. '    
' → logprob: -6.0560832023620605
    10. ' 
' → logprob: -6.3060832023620605

Token 356: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025913672521710396
    2. '           ' → logprob: -4.275913715362549
    3. ' if' → logprob: -4.650913715362549
    4. 'for' → logprob: -7.275913715362549
    5. 'd' → logprob: -7.400913715362549
    6. '       ' → logprob: -8.02591323852539
    7. 'dire' → logprob: -8.15091323852539
    8. 'dirs' → logprob: -9.27591323852539
    9. 'dx' → logprob: -10.02591323852539
    10. '            
' → logprob: -10.90091323852539

Token 357: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009190218523144722
    2. 'for' → logprob: -5.009190082550049
    3. ' if' → logprob: -6.509190082550049
    4. '           ' → logprob: -8.009190559387207
    5. 'dire' → logprob: -8.384190559387207
    6. 'dy' → logprob: -8.509190559387207
    7. 'dirs' → logprob: -8.759190559387207
    8. ' for' → logprob: -10.634190559387207
    9. 'dx' → logprob: -11.134190559387207
    10. 'd' → logprob: -11.259190559387207

Token 358: ' on' (ID: 402)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6077841520309448
    2. ' (' → logprob: -1.2327841520309448
    3. 'c' → logprob: -2.4827842712402344
    4. '(c' → logprob: -2.7327842712402344
    5. '(y' → logprob: -4.357784271240234
    6. '(' → logprob: -6.357784271240234
    7. ' y' → logprob: -7.982784271240234
    8. '(x' → logprob: -8.232784271240234
    9. '(step' → logprob: -9.107784271240234
    10. 'y' → logprob: -9.857784271240234

Token 359: ' seal' (ID: 30803)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.14029182493686676
    2. ' (' → logprob: -2.265291929244995
    3. 'c' → logprob: -4.015291690826416
    4. ' goal' → logprob: -5.265291690826416
    5. ' y' → logprob: -7.015291690826416
    6. ' x' → logprob: -7.640291690826416
    7. ' G' → logprob: -7.640291690826416
    8. 'goal' → logprob: -7.765291690826416
    9. '(' → logprob: -8.390292167663574
    10. 'y' → logprob: -8.890292167663574

Token 360: ' number' (ID: 2086)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.606347918510437
    2. ' ==' → logprob: -0.856347918510437
    3. 'step' → logprob: -4.856348037719727
    4. 's' → logprob: -5.106348037719727
    5. '_step' → logprob: -5.106348037719727
    6. ' step' → logprob: -5.606348037719727
    7. '==' → logprob: -6.231348037719727
    8. ',' → logprob: -7.106348037719727
    9. 'and' → logprob: -7.356348037719727
    10. ' ' → logprob: -7.356348037719727

Token 361: ' equal' (ID: 12629)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7258948683738708
    2. ' and' → logprob: -0.8508948683738708
    3. ' step' → logprob: -3.2258949279785156
    4. ' ' → logprob: -4.725894927978516
    5. ' >' → logprob: -4.850894927978516
    6. '>' → logprob: -5.225894927978516
    7. 'step' → logprob: -5.725894927978516
    8. ' s' → logprob: -5.725894927978516
    9. '==' → logprob: -5.850894927978516
    10. ''' → logprob: -6.100894927978516

Token 362: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4951702058315277
    2. ' to' → logprob: -0.9951702356338501
    3. '=' → logprob: -4.8701701164245605
    4. '           ' → logprob: -5.6201701164245605
    5. 's' → logprob: -5.9951701164245605
    6. ''' → logprob: -6.3701701164245605
    7. 'step' → logprob: -6.7451701164245605
    8. ''s' → logprob: -6.9951701164245605
    9. 'c' → logprob: -7.6201701164245605
    10. ' c' → logprob: -7.7451701164245605

Token 363: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5038362145423889
    2. 'str' → logprob: -1.0038361549377441
    3. ' step' → logprob: -3.878836154937744
    4. ' str' → logprob: -4.753836154937744
    5. '(str' → logprob: -12.378836631774902
    6. '(step' → logprob: -12.378836631774902
    7. ' ' → logprob: -12.628836631774902
    8. 'string' → logprob: -12.753836631774902
    9. '	step' → logprob: -13.253836631774902
    10. 'st' → logprob: -13.253836631774902

Token 364: '+' (ID: 10)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13153724372386932
    2. ' +' → logprob: -2.5065371990203857
    3. '+' → logprob: -3.5065371990203857
    4. ':' → logprob: -5.256537437438965
    5. 'and' → logprob: -5.256537437438965
    6. ',' → logprob: -7.006537437438965
    7. ' ' → logprob: -8.756537437438965
    8. ' or' → logprob: -9.631537437438965
    9. '   ' → logprob: -10.131537437438965
    10. '           ' → logprob: -10.381537437438965

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026217024424113333
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.250262260437012
    4. '
' → logprob: -15.375262260437012
    5. '`' → logprob: -16.125261306762695
    6. ''' → logprob: -16.125261306762695
    7. '```' → logprob: -16.125261306762695
    8. '  ' → logprob: -18.000261306762695
    9. '           ' → logprob: -18.000261306762695
    10. ''s' → logprob: -18.375261306762695

Token 366: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010091190226376057
    2. ':' → logprob: -4.885091304779053
    3. 'and' → logprob: -6.635091304779053
    4. ',' → logprob: -7.135091304779053
    5. '           ' → logprob: -8.260090827941895
    6. ':
' → logprob: -10.510090827941895
    7. '               ' → logprob: -10.510090827941895
    8. ' if' → logprob: -11.260090827941895
    9. ' ==' → logprob: -11.385090827941895
    10. ' or' → logprob: -11.885090827941895

Token 367: ' destroy' (ID: 13890)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5012179017066956
    2. '               ' → logprob: -1.0012178421020508
    3. ' and' → logprob: -4.251217842102051
    4. '           ' → logprob: -5.751217842102051
    5. ' ' → logprob: -6.251217842102051
    6. '            ' → logprob: -6.376217842102051
    7. '                ' → logprob: -6.376217842102051
    8. 'if' → logprob: -7.001217842102051
    9. '                       ' → logprob: -7.876217842102051
    10. '                   ' → logprob: -7.876217842102051

Token 368: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.19699443876743317
    2. ' the' → logprob: -2.0719945430755615
    3. ' that' → logprob: -4.196994304656982
    4. '<|end|>' → logprob: -4.321994304656982
    5. ' if' → logprob: -4.946994304656982
    6. '_se' → logprob: -5.571994304656982
    7. 'the' → logprob: -5.571994304656982
    8. '_' → logprob: -5.821994304656982
    9. ',' → logprob: -6.821994304656982
    10. 'se' → logprob: -6.946994304656982

Token 369: ' by' (ID: 656)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2974966764450073
    2. ':' → logprob: -1.6724966764450073
    3. '           ' → logprob: -1.6724966764450073
    4. ' if' → logprob: -1.6724966764450073
    5. '               ' → logprob: -2.297496795654297
    6. ',' → logprob: -3.047496795654297
    7. '   ' → logprob: -5.672496795654297
    8. ':
' → logprob: -6.172496795654297
    9. 'and' → logprob: -6.672496795654297
    10. '       ' → logprob: -6.797496795654297

Token 370: ' touching' (ID: 52058)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.8397006392478943
    2. ' moving' → logprob: -2.214700698852539
    3. ' stepping' → logprob: -2.339700698852539
    4. 'moving' → logprob: -2.464700698852539
    5. 'increment' → logprob: -2.464700698852539
    6. ' step' → logprob: -2.964700698852539
    7. ' advancing' → logprob: -3.214700698852539
    8. ' increment' → logprob: -3.839700698852539
    9. 'adv' → logprob: -3.964700698852539
    10. ' visiting' → logprob: -4.214700698852539

Token 371: ' it' (ID: 480)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6224226355552673
    2. ' and' → logprob: -1.997422695159912
    3. '           ' → logprob: -2.372422695159912
    4. ':' → logprob: -2.372422695159912
    5. ',' → logprob: -2.747422695159912
    6. '.' → logprob: -3.247422695159912
    7. '               ' → logprob: -3.997422695159912
    8. '            ' → logprob: -5.372422695159912
    9. 'if' → logprob: -6.372422695159912
    10. ' ' → logprob: -6.497422695159912

Token 372: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6089782118797302
    2. ' and' → logprob: -1.483978271484375
    3. ' if' → logprob: -2.108978271484375
    4. '               ' → logprob: -3.108978271484375
    5. ':' → logprob: -3.233978271484375
    6. ',' → logprob: -4.233978271484375
    7. '.' → logprob: -6.108978271484375
    8. '   ' → logprob: -7.108978271484375
    9. ':
' → logprob: -7.108978271484375
    10. '                           ' → logprob: -7.108978271484375

Token 373: ' advance' (ID: 14805)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3788219690322876
    2. '               ' → logprob: -1.8788219690322876
    3. '           ' → logprob: -2.753821849822998
    4. ' ' → logprob: -3.878821849822998
    5. ' and' → logprob: -4.003821849822998
    6. ' 
' → logprob: -4.503821849822998
    7. '            ' → logprob: -4.878821849822998
    8. '                           ' → logprob: -5.128821849822998
    9. '                   ' → logprob: -5.253821849822998
    10. '                       ' → logprob: -5.628821849822998

Token 374: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.15339897572994232
    2. 'step' → logprob: -2.0283989906311035
    3. ' the' → logprob: -5.6533989906311035
    4. '_step' → logprob: -5.7783989906311035
    5. '(step' → logprob: -7.1533989906311035
    6. ' _' → logprob: -7.2783989906311035
    7. '           ' → logprob: -7.6533989906311035
    8. '_' → logprob: -7.7783989906311035
    9. ' to' → logprob: -8.278398513793945
    10. '               ' → logprob: -8.403398513793945

Token 375: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17089417576789856
    2. ' if' → logprob: -2.670894145965576
    3. '               ' → logprob: -3.170894145965576
    4. ':' → logprob: -4.420894145965576
    5. ',' → logprob: -4.795894145965576
    6. '.' → logprob: -4.920894145965576
    7. '   ' → logprob: -5.795894145965576
    8. ':
' → logprob: -6.045894145965576
    9. '                           ' → logprob: -6.295894145965576
    10. ' and' → logprob: -6.545894145965576

Token 376: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3814276456832886
    2. '\n' → logprob: -1.3814276456832886
    3. '            
' → logprob: -4.506427764892578
    4. ':' → logprob: -4.756427764892578
    5. '               ' → logprob: -4.881427764892578
    6. ' 
' → logprob: -5.131427764892578
    7. ',' → logprob: -5.381427764892578
    8. '
' → logprob: -5.381427764892578
    9. ' if' → logprob: -5.881427764892578
    10. '<|end|>' → logprob: -5.881427764892578

Token 377: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4025101065635681
    2. '\n' → logprob: -1.902510166168213
    3. '
' → logprob: -2.777510166168213
    4. ' 
' → logprob: -2.902510166168213
    5. ' if' → logprob: -3.152510166168213
    6. '            
' → logprob: -4.277510166168213
    7. 'if' (adapté à ' if') → logprob: -5.902510166168213
    8. '  
' → logprob: -6.652510166168213
    9. '    
' → logprob: -7.277510166168213
    10. '\' → logprob: -7.527510166168213

Token 378: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08953846991062164
    2. ' c' → logprob: -2.71453857421875
    3. 'step' → logprob: -4.08953857421875
    4. ' step' → logprob: -6.08953857421875
    5. 'str' → logprob: -9.08953857421875
    6. ' ' → logprob: -9.83953857421875
    7. '(c' → logprob: -9.96453857421875
    8. '   ' → logprob: -10.08953857421875
    9. '(step' → logprob: -10.21453857421875
    10. 'int' → logprob: -10.71453857421875

Token 379: '.is' (ID: 3109)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31550657749176025
    2. '==' → logprob: -1.3155065774917603
    3. '=='' → logprob: -6.315506458282471
    4. '.is' → logprob: -9.065506935119629
    5. ''' → logprob: -9.190506935119629
    6. ' in' → logprob: -9.690506935119629
    7. 'isdigit' → logprob: -9.690506935119629
    8. ' =='' → logprob: -10.315506935119629
    9. '.' → logprob: -11.065506935119629
    10. '=' → logprob: -11.315506935119629

Token 380: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0009569590329192579
    2. 'str' → logprob: -7.875957012176514
    3. ''d' → logprob: -8.375956535339355
    4. ''' → logprob: -9.250956535339355
    5. ' digit' → logprob: -9.500956535339355
    6. 'isdigit' → logprob: -10.250956535339355
    7. '-digit' → logprob: -10.750956535339355
    8. 'Digit' → logprob: -10.875956535339355
    9. 'digits' → logprob: -10.875956535339355
    10. ''-' → logprob: -11.500956535339355

Token 381: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043817906407639384
    2. '():
' → logprob: -8.50043773651123
    3. ' and' → logprob: -9.62543773651123
    4. 'and' → logprob: -9.87543773651123
    5. '():' → logprob: -10.12543773651123
    6. ' ()' → logprob: -10.50043773651123
    7. '()==' → logprob: -10.87543773651123
    8. '(' → logprob: -11.62543773651123
    9. '()[' → logprob: -12.00043773651123
    10. '           ' → logprob: -12.75043773651123

Token 382: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017030658200383186
    2. 'and' → logprob: -4.642030715942383
    3. ' ' → logprob: -5.392030715942383
    4. '               ' → logprob: -6.892030715942383
    5. ' (' → logprob: -7.892030715942383
    6. ' ==' → logprob: -7.892030715942383
    7. '<|end|>' → logprob: -8.642030715942383
    8. '            ' → logprob: -9.392030715942383
    9. '0' → logprob: -9.517030715942383
    10. '                ' → logprob: -9.767030715942383

Token 383: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6715059280395508
    2. ' if' → logprob: -1.1715059280395508
    3. '<|end|>' → logprob: -2.921505928039551
    4. ' n' → logprob: -3.671505928039551
    5. ' and' → logprob: -3.671505928039551
    6. ' 
' → logprob: -3.796505928039551
    7. 'n' → logprob: -4.546505928039551
    8. 'if' → logprob: -4.671505928039551
    9. '               ' → logprob: -5.546505928039551
    10. ' s' → logprob: -5.671505928039551

Token 384: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08245667815208435
    2. '==' → logprob: -2.707456588745117
    3. ')' → logprob: -5.457456588745117
    4. '()' → logprob: -5.707456588745117
    5. '()==' → logprob: -6.082456588745117
    6. '=' → logprob: -7.332456588745117
    7. '[' → logprob: -7.707456588745117
    8. ')==' → logprob: -8.082456588745117
    9. ']==' → logprob: -8.582456588745117
    10. ' =' → logprob: -9.082456588745117

Token 385: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029750484973192215
    2. ' int' → logprob: -3.5297505855560303
    3. '(int' → logprob: -17.40475082397461
    4. '[int' → logprob: -18.40475082397461
    5. '=int' → logprob: -18.90475082397461
    6. '	int' → logprob: -19.40475082397461
    7. '<int' → logprob: -20.52975082397461
    8. ':int' → logprob: -20.65475082397461
    9. ',int' → logprob: -20.65475082397461
    10. ']int' → logprob: -21.77975082397461

Token 386: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.02251131646335125
    2. '(' → logprob: -3.8975112438201904
    3. 'c' → logprob: -6.2725114822387695
    4. '(
' → logprob: -9.64751148223877
    5. ' (' → logprob: -11.64751148223877
    6. ')c' → logprob: -12.77251148223877
    7. ')' → logprob: -13.52251148223877
    8. ' c' → logprob: -14.64751148223877
    9. ' ' → logprob: -14.77251148223877
    10. '(

' → logprob: -15.14751148223877

Token 387: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.632722795009613
    2. ')' → logprob: -0.757722795009613
    3. '<|end|>' → logprob: -10.132722854614258
    4. ' )
' → logprob: -10.507722854614258
    5. ')+' → logprob: -11.507722854614258
    6. ' )' → logprob: -11.757722854614258
    7. ')
' → logprob: -11.882722854614258
    8. ')

' → logprob: -12.007722854614258
    9. ')==' → logprob: -12.132722854614258
    10. '               ' → logprob: -12.757722854614258

Token 388: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33237743377685547
    2. '<|end|>' → logprob: -1.5823774337768555
    3. '           ' → logprob: -4.3323774337768555
    4. '
' → logprob: -4.5823774337768555
    5. '                   ' → logprob: -4.8323774337768555
    6. '<|end|>' → logprob: -4.9573774337768555
    7. ' if' → logprob: -5.0823774337768555
    8. ' 
' → logprob: -5.2073774337768555
    9. ' and' → logprob: -5.2073774337768555
    10. '                ' → logprob: -5.4573774337768555

Token 389: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23532241582870483
    2. '               ' → logprob: -2.2353224754333496
    3. 'if' (adapté à ' if') → logprob: -3.4853224754333496
    4. ' 
' → logprob: -3.7353224754333496
    5. ' ' → logprob: -4.11032247543335
    6. '<|end|>' → logprob: -4.23532247543335
    7. '
' → logprob: -4.86032247543335
    8. '                               ' → logprob: -6.36032247543335
    9. '                   ' → logprob: -6.36032247543335
    10. '           ' → logprob: -6.48532247543335

Token 390: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.38689208030700684
    2. 'num' → logprob: -1.1368920803070068
    3. ' step' → logprob: -10.886892318725586
    4. 'step' → logprob: -13.761892318725586
    5. '(num' → logprob: -13.761892318725586
    6. '	num' → logprob: -15.636892318725586
    7. ' ' → logprob: -16.261892318725586
    8. '=num' → logprob: -17.636892318725586
    9. '   ' → logprob: -17.886892318725586
    10. '[num' → logprob: -18.261892318725586

Token 391: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02334354631602764
    2. '==' → logprob: -3.773343563079834
    3. ')==' → logprob: -10.023343086242676
    4. ')' → logprob: -10.273343086242676
    5. ' ==
' → logprob: -12.023343086242676
    6. ']==' → logprob: -12.398343086242676
    7. '==
' → logprob: -12.523343086242676
    8. '=' → logprob: -13.523343086242676
    9. ' ' → logprob: -13.898343086242676
    10. ' ===' → logprob: -14.398343086242676

Token 392: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.02338302507996559
    2. ' step' → logprob: -3.773383140563965
    3. '(step' → logprob: -8.898383140563965
    4. '	step' → logprob: -14.523383140563965
    5. '   ' → logprob: -16.39838218688965
    6. ' (' → logprob: -16.64838218688965
    7. '_step' → logprob: -16.64838218688965
    8. 'steps' → logprob: -17.27338218688965
    9. 'Step' → logprob: -17.52338218688965
    10. '.step' → logprob: -17.89838218688965

Token 393: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859191179275513
    2. ' +' → logprob: -3.0485918521881104
    3. '+
' → logprob: -12.798591613769531
    4. ' +
' → logprob: -14.548591613769531
    5. ')+' → logprob: -14.798591613769531
    6. '+:' → logprob: -15.798591613769531
    7. '()+' → logprob: -15.798591613769531
    8. ':' → logprob: -16.04859161376953
    9. '1' → logprob: -16.29859161376953
    10. ' ' → logprob: -16.79859161376953

Token 394: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -17.000024795532227
    4. '   ' → logprob: -17.375024795532227
    5. '```' → logprob: -18.875024795532227
    6. '
' → logprob: -19.750024795532227
    7. '{
' → logprob: -20.687524795532227
    8. '  ' → logprob: -20.687524795532227
    9. '+' → logprob: -20.750024795532227
    10. '۱' → logprob: -20.875024795532227

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.875001907348633
    3. '<|end|>' → logprob: -14.000001907348633
    4. '```' → logprob: -18.500001907348633
    5. '<|end|>' → logprob: -18.500001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '[' → logprob: -19.125001907348633
    8. '+' → logprob: -19.375001907348633
    9. '{
' → logprob: -19.562501907348633
    10. '۱' → logprob: -19.750001907348633

Token 396: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20776702463626862
    2. ':
' → logprob: -1.7077670097351074
    3. ' and' → logprob: -5.832767009735107
    4. '                   ' → logprob: -6.832767009735107
    5. '):' → logprob: -7.457767009735107
    6. '):
' → logprob: -7.582767009735107
    7. '               ' → logprob: -7.707767009735107
    8. '<|end|>' → logprob: -8.457767486572266
    9. '                           ' → logprob: -8.707767486572266
    10. ',' → logprob: -8.957767486572266

Token 397: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02317139506340027
    2. '               ' → logprob: -4.398171424865723
    3. '                       ' → logprob: -5.648171424865723
    4. '                ' → logprob: -6.398171424865723
    5. ' step' → logprob: -6.898171424865723
    6. '                    
' → logprob: -6.898171424865723
    7. '                           ' → logprob: -7.148171424865723
    8. '                    ' → logprob: -7.648171424865723
    9. '
' → logprob: -7.898171424865723
    10. ' ' → logprob: -8.398171424865723

Token 398: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.03424559161067009
    2. '               ' → logprob: -3.659245491027832
    3. 'step' (adapté à ' step') → logprob: -5.409245491027832
    4. '                   ' → logprob: -6.034245491027832
    5. '                       ' → logprob: -7.284245491027832
    6. '                ' → logprob: -9.034245491027832
    7. '	step' → logprob: -9.784245491027832
    8. '           ' → logprob: -10.034245491027832
    9. '
' → logprob: -10.784245491027832
    10. ' ' → logprob: -11.034245491027832

Token 399: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.043981991708278656
    2. '+=' → logprob: -3.2939820289611816
    3. ' =' → logprob: -5.668982028961182
    4. '=' → logprob: -6.043982028961182
    5. '+' → logprob: -9.293981552124023
    6. ' +' → logprob: -12.293981552124023
    7. '<|end|>' → logprob: -14.418981552124023
    8. ']+=' → logprob: -14.543981552124023
    9. ' ' → logprob: -14.543981552124023
    10. '+='' → logprob: -14.793981552124023

Token 400: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -17.00001335144043
    4. '   ' → logprob: -19.12501335144043
    5. '
' → logprob: -20.37501335144043
    6. '```' → logprob: -20.62501335144043
    7. '  ' → logprob: -22.12501335144043
    8. '<|end|>' → logprob: -22.25001335144043
    9. '۱' → logprob: -22.87501335144043
    10. '１' → logprob: -23.25001335144043

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -19.125
    4. '```' → logprob: -20.0
    5. '   ' → logprob: -20.125
    6. '
' → logprob: -20.75
    7. '-' → logprob: -21.125
    8. '0' → logprob: -21.625
    9. '  ' → logprob: -22.125
    10. '۱' → logprob: -22.3125

Token 402: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060884635895490646
    2. '<|end|>' → logprob: -3.435884714126587
    3. '
' → logprob: -4.435884475708008
    4. ',' → logprob: -5.185884475708008
    5. '            
' → logprob: -5.810884475708008
    6. '                   ' → logprob: -5.935884475708008
    7. '               ' → logprob: -6.185884475708008
    8. '       ' → logprob: -7.810884475708008
    9. ',
' → logprob: -8.685884475708008
    10. '<|end|>' → logprob: -8.810884475708008

Token 404: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22641043365001678
    2. ' directions' → logprob: -2.351410388946533
    3. 'dire' → logprob: -2.601410388946533
    4. '            
' → logprob: -4.476410388946533
    5. '
' → logprob: -5.101410388946533
    6. 'dirs' → logprob: -5.601410388946533
    7. ' if' → logprob: -6.476410388946533
    8. 'd' → logprob: -6.601410388946533
    9. ' for' → logprob: -6.726410388946533
    10. ',' → logprob: -6.976410388946533

Token 405: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04684414714574814
    2. '(y' → logprob: -3.421844244003296
    3. '(c' → logprob: -4.546844005584717
    4. '(step' → logprob: -6.796844005584717
    5. '(' → logprob: -7.421844005584717
    6. ' c' → logprob: -8.046844482421875
    7. '(x' → logprob: -8.671844482421875
    8. ' step' → logprob: -9.546844482421875
    9. ' ' → logprob: -9.796844482421875
    10. '(start' → logprob: -10.046844482421875

Token 406: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03368523716926575
    2. '(y' → logprob: -3.9086852073669434
    3. ' y' → logprob: -4.408685207366943
    4. 'c' → logprob: -7.408685207366943
    5. ' (' → logprob: -8.533685684204102
    6. '(c' → logprob: -10.283685684204102
    7. ' ' → logprob: -11.658685684204102
    8. '   ' → logprob: -11.658685684204102
    9. 'step' → logprob: -11.658685684204102
    10. ' c' → logprob: -12.033685684204102

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00245246896520257
    2. ' ==' → logprob: -6.502452373504639
    3. ' ,' → logprob: -7.252452373504639
    4. '==' → logprob: -9.002452850341797
    5. ',x' → logprob: -9.127452850341797
    6. ',
' → logprob: -12.752452850341797
    7. ')' → logprob: -13.127452850341797
    8. '<|end|>' → logprob: -13.502452850341797
    9. ',y' → logprob: -13.877452850341797
    10. '   ' → logprob: -15.377452850341797

Token 408: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061967913061380386
    2. ' x' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.311967849731445
    4. '               ' → logprob: -16.811967849731445
    5. '	x' → logprob: -17.061967849731445
    6. ')x' → logprob: -17.061967849731445
    7. ',x' → logprob: -17.186967849731445
    8. '           ' → logprob: -17.186967849731445
    9. '                   ' → logprob: -18.186967849731445
    10. '<|end|>' → logprob: -18.561967849731445

Token 409: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014792205765843391
    2. ',' → logprob: -4.764792442321777
    3. ')==' → logprob: -5.139792442321777
    4. ' ==' → logprob: -8.764792442321777
    5. '==' → logprob: -9.514792442321777
    6. ' )' → logprob: -10.264792442321777
    7. ' ,' → logprob: -11.889792442321777
    8. ']==' → logprob: -11.889792442321777
    9. '<|end|>' → logprob: -11.889792442321777
    10. ',)' → logprob: -12.764792442321777

Token 410: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05535848066210747
    2. '==' → logprob: -2.930358409881592
    3. ')' → logprob: -8.05535888671875
    4. ')==' → logprob: -9.05535888671875
    5. ',' → logprob: -10.30535888671875
    6. ']==' → logprob: -12.05535888671875
    7. '=' → logprob: -14.18035888671875
    8. '==(' → logprob: -14.18035888671875
    9. ']' → logprob: -15.30535888671875
    10. '<|end|>' → logprob: -15.43035888671875

Token 411: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.07984591275453568
    2. ' goal' → logprob: -2.579845905303955
    3. '(goal' → logprob: -6.954845905303955
    4. '   ' → logprob: -14.079846382141113
    5. '(' → logprob: -14.829846382141113
    6. 'go' → logprob: -15.454846382141113
    7. ' ' → logprob: -15.704846382141113
    8. '.goal' → logprob: -16.204845428466797
    9. '_goal' → logprob: -16.704845428466797
    10. 'Goal' → logprob: -17.204845428466797

Token 412: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05594706907868385
    2. 'and' → logprob: -2.9309470653533936
    3. ':' → logprob: -6.930947303771973
    4. '               ' → logprob: -10.305947303771973
    5. '           ' → logprob: -10.555947303771973
    6. ':
' → logprob: -11.555947303771973
    7. '<|end|>' → logprob: -12.055947303771973
    8. '	and' → logprob: -12.680947303771973
    9. '            ' → logprob: -13.305947303771973
    10. '                       ' → logprob: -13.555947303771973

Token 413: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.023245595395565033
    2. ' step' → logprob: -3.7732455730438232
    3. '(step' → logprob: -15.898245811462402
    4. '	step' → logprob: -18.273244857788086
    5. 'Step' → logprob: -19.273244857788086
    6. '_step' → logprob: -20.398244857788086
    7. '.step' → logprob: -21.648244857788086
    8. '   ' → logprob: -21.773244857788086
    9. 'steps' → logprob: -21.773244857788086
    10. ' ' → logprob: -22.398244857788086

Token 414: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868829607963562
    2. '==' → logprob: -1.136883020401001
    3. ')==' → logprob: -12.761882781982422
    4. '<|end|>' → logprob: -13.261882781982422
    5. '===' → logprob: -13.511882781982422
    6. ' ' → logprob: -13.761882781982422
    7. '=' → logprob: -14.136882781982422
    8. '>=' → logprob: -14.261882781982422
    9. '==(' → logprob: -14.386882781982422
    10. ']==' → logprob: -14.511882781982422

Token 415: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00033546582562848926
    2. ' max' → logprob: -8.000335693359375
    3. '
' → logprob: -18.625335693359375
    4. '   ' → logprob: -18.750335693359375
    5. '(max' → logprob: -19.875335693359375
    6. '	max' → logprob: -20.375335693359375
    7. ' ' → logprob: -20.500335693359375
    8. '           ' → logprob: -21.000335693359375
    9. '[max' → logprob: -21.500335693359375
    10. '=max' → logprob: -21.750335693359375

Token 416: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -3.4121114822482923e-06
    2. 'seal' → logprob: -12.750003814697266
    3. 'se' → logprob: -14.875003814697266
    4. '\' → logprob: -16.625003814697266
    5. 'Seal' → logprob: -16.625003814697266
    6. ' seal' → logprob: -17.500003814697266
    7. '	se' → logprob: -18.250003814697266
    8. '-se' → logprob: -19.375003814697266
    9. '_step' → logprob: -19.375003814697266
    10. 'sealed' → logprob: -19.750003814697266

Token 417: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -9.372294698550832e-06
    2. 'a' → logprob: -12.875009536743164
    3. '_al' → logprob: -13.000009536743164
    4. '
' → logprob: -13.125009536743164
    5. '_' → logprob: -14.125009536743164
    6. ' al' → logprob: -15.250009536743164
    7. 'alp' → logprob: -15.375009536743164
    8. 'ал' → logprob: -15.750009536743164
    9. '```' → logprob: -16.250009536743164
    10. '	al' → logprob: -16.250009536743164

Token 418: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12712423503398895
    2. ':
' → logprob: -2.127124309539795
    3. '):' → logprob: -9.877123832702637
    4. '):
' → logprob: -10.002123832702637
    5. ' and' → logprob: -10.752123832702637
    6. ')' → logprob: -11.002123832702637
    7. '           ' → logprob: -11.252123832702637
    8. ':return' → logprob: -11.252123832702637
    9. '               ' → logprob: -11.502123832702637
    10. ':
' → logprob: -11.627123832702637

Token 419: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008069098927080631
    2. ':
' → logprob: -5.633069038391113
    3. '           ' → logprob: -6.758069038391113
    4. '\n' → logprob: -7.008069038391113
    5. '
' → logprob: -7.258069038391113
    6. ' return' → logprob: -7.383069038391113
    7. ':' → logprob: -8.008069038391113
    8. 'return' → logprob: -8.258069038391113
    9. '\' → logprob: -8.633069038391113
    10. ':return' → logprob: -9.383069038391113

Token 420: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16906805336475372
    2. '               ' → logprob: -2.1690680980682373
    3. ' return' → logprob: -3.5440680980682373
    4. 'print' (adapté à ' print') → logprob: -4.544067859649658
    5. '           ' → logprob: -6.544067859649658
    6. '                   ' → logprob: -8.919068336486816
    7. '
' → logprob: -9.294068336486816
    8. 'break' → logprob: -10.419068336486816
    9. ' print' → logprob: -10.669068336486816
    10. '   ' → logprob: -11.419068336486816

Token 421: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.762356209335849e-05
    2. '(' → logprob: -10.25003719329834
    3. 't' → logprob: -13.12503719329834
    4. ' (' → logprob: -16.250038146972656
    5. '(
' → logprob: -16.750038146972656
    6. ' t' → logprob: -17.375038146972656
    7. '((' → logprob: -19.125038146972656
    8. '(f' → logprob: -19.750038146972656
    9. '	t' → logprob: -20.875038146972656
    10. '(T' → logprob: -20.875038146972656

Token 422: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052470373921096325
    2. ')
' → logprob: -5.255247116088867
    3. '+' → logprob: -11.755247116088867
    4. ' )' → logprob: -13.130247116088867
    5. ')return' → logprob: -13.630247116088867
    6. '')' → logprob: -15.130247116088867
    7. '           ' → logprob: -15.130247116088867
    8. ')
' → logprob: -15.255247116088867
    9. ')`' → logprob: -15.505247116088867
    10. '),' → logprob: -15.630247116088867

Token 423: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22843016684055328
    2. '               ' → logprob: -1.603430151939392
    3. '<|end|>' → logprob: -6.103430271148682
    4. '            
' → logprob: -7.853430271148682
    5. '
' → logprob: -9.103429794311523
    6. '       ' → logprob: -10.103429794311523
    7. '                   ' → logprob: -10.228429794311523
    8. '<|end|>' → logprob: -10.353429794311523
    9. '   ' → logprob: -10.603429794311523
    10. ',' → logprob: -10.603429794311523

Token 424: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1664142608642578
    2. '               ' → logprob: -1.9164142608642578
    3. 'break' (adapté à ' break') → logprob: -5.666414260864258
    4. ' return' → logprob: -5.916414260864258
    5. '           ' → logprob: -11.666414260864258
    6. ' break' → logprob: -11.916414260864258
    7. '
' → logprob: -15.041414260864258
    8. '	return' → logprob: -16.291414260864258
    9. '```' → logprob: -16.666414260864258
    10. '       ' → logprob: -17.041414260864258

Token 425: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.059504974633455276
    2. '<|end|>' → logprob: -3.559504985809326
    3. '
' → logprob: -4.059504985809326
    4. '            
' → logprob: -5.309504985809326
    5. '    
' → logprob: -5.934504985809326
    6. '   ' → logprob: -6.559504985809326
    7. '  
' → logprob: -7.309504985809326
    8. '       ' → logprob: -7.559504985809326
    9. '<|end|>' → logprob: -7.559504985809326
    10. '```' → logprob: -8.184504508972168

Token 426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06691237539052963
    2. '
' → logprob: -2.9419124126434326
    3. '       ' → logprob: -5.3169121742248535
    4. '            
' → logprob: -5.3169121742248535
    5. '    
' → logprob: -7.0669121742248535
    6. '        
' → logprob: -7.5669121742248535
    7. '   ' → logprob: -7.8169121742248535
    8. '  
' → logprob: -9.191912651062012
    9. '<|end|>' → logprob: -9.316912651062012
    10. 'else' → logprob: -10.066912651062012

Token 427: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25103867053985596
    2. 'dire' → logprob: -2.2510385513305664
    3. '           ' → logprob: -3.0010385513305664
    4. ' for' → logprob: -3.2510385513305664
    5. 'dirs' → logprob: -4.001038551330566
    6. '            
' → logprob: -5.876038551330566
    7. ' directions' → logprob: -6.126038551330566
    8. 'dy' → logprob: -6.501038551330566
    9. 'd' → logprob: -6.626038551330566
    10. '
' → logprob: -6.751038551330566

Token 428: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.06125684082508087
    2. 'dy' → logprob: -2.9362568855285645
    3. ' ny' → logprob: -5.4362568855285645
    4. ' ' → logprob: -7.0612568855285645
    5. ' y' → logprob: -7.8112568855285645
    6. 'ny' → logprob: -8.561256408691406
    7. ' (' → logprob: -8.686256408691406
    8. 'y' → logprob: -9.311256408691406
    9. '   ' → logprob: -9.686256408691406
    10. 'd' → logprob: -9.936256408691406

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15407517552375793
    2. ' in' → logprob: -2.2790751457214355
    3. ' ,' → logprob: -3.5290751457214355
    4. ',d' → logprob: -4.9040751457214355
    5. ',y' → logprob: -6.7790751457214355
    6. 'in' → logprob: -7.1540751457214355
    7. ',v' → logprob: -8.529075622558594
    8. ',j' → logprob: -8.779075622558594
    9. ',next' → logprob: -8.779075622558594
    10. ',n' → logprob: -9.029075622558594

Token 430: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.47420018911361694
    2. ' dx' → logprob: -0.9742001891136169
    3. '_dx' → logprob: -9.224200248718262
    4. '(dx' → logprob: -11.224200248718262
    5. ' (' → logprob: -12.349200248718262
    6. ' ' → logprob: -13.224200248718262
    7. '(' → logprob: -13.349200248718262
    8. '.dx' → logprob: -13.974200248718262
    9. 'Dx' → logprob: -14.099200248718262
    10. ',' → logprob: -14.474200248718262

Token 431: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002813194179907441
    2. 'in' → logprob: -5.877813339233398
    3. ',' → logprob: -12.377813339233398
    4. ' ' → logprob: -13.627813339233398
    5. '<|end|>' → logprob: -14.627813339233398
    6. ')' → logprob: -14.877813339233398
    7. '	in' → logprob: -14.877813339233398
    8. ' ,' → logprob: -15.502813339233398
    9. 'In' → logprob: -15.502813339233398
    10. '   ' → logprob: -15.502813339233398

Token 432: ' ((' (ID: 3536)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2017374485731125
    2. '[' → logprob: -1.701737403869629
    3. '((' → logprob: -8.701737403869629
    4. ' [(' → logprob: -8.951737403869629
    5. '[((' → logprob: -11.326737403869629
    6. ' [' → logprob: -11.451737403869629
    7. '(' → logprob: -12.701737403869629
    8. ' ((' → logprob: -13.951737403869629
    9. '[-' → logprob: -14.451737403869629
    10. '((-' → logprob: -14.951737403869629

Token 433: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3491498529911041
    2. '0' → logprob: -1.3491498231887817
    3. '1' → logprob: -3.3491499423980713
    4. ' ' → logprob: -9.474149703979492
    5. ' -' → logprob: -9.724149703979492
    6. '(-' → logprob: -14.724149703979492
    7. '−' → logprob: -15.724149703979492
    8. '(' → logprob: -15.849149703979492
    9. '   ' → logprob: -16.599149703979492
    10. ',' → logprob: -16.724149703979492

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025942857610061765
    2. ' ,' → logprob: -8.375259399414062
    3. '0' → logprob: -10.500259399414062
    4. ',
' → logprob: -14.250259399414062
    5. '),' → logprob: -14.625259399414062
    6. ' ' → logprob: -16.875259399414062
    7. '<|end|>' → logprob: -17.000259399414062
    8. ',),' → logprob: -17.375259399414062
    9. ')' → logprob: -17.500259399414062
    10. '),(' → logprob: -17.875259399414062

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '-' → logprob: -17.50010871887207
    4. '   ' → logprob: -18.75010871887207
    5. '  ' → logprob: -18.87510871887207
    6. ')' → logprob: -19.12510871887207
    7. '۰' → logprob: -19.62510871887207
    8. '1' → logprob: -20.00010871887207
    9. ',' → logprob: -20.37510871887207
    10. ' -' → logprob: -20.56260871887207

Token 436: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0022353052627295256
    2. '),(' → logprob: -6.127235412597656
    3. ' ),' → logprob: -10.002235412597656
    4. ')' → logprob: -12.877235412597656
    5. '),
' → logprob: -13.002235412597656
    6. '),

' → logprob: -16.377235412597656
    7. ',),' → logprob: -18.127235412597656
    8. '},' → logprob: -18.127235412597656
    9. ' ' → logprob: -18.877235412597656
    10. '()),' → logprob: -19.127235412597656

Token 437: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.051032088696956635
    2. '0' → logprob: -3.051032066345215
    3. ' -' → logprob: -6.176032066345215
    4. ' ' → logprob: -7.926032066345215
    5. '(' → logprob: -13.676032066345215
    6. '(-' → logprob: -15.176032066345215
    7. '−' → logprob: -16.17603302001953
    8. '```' → logprob: -16.55103302001953
    9. '   ' → logprob: -17.30103302001953
    10. '<|end|>' → logprob: -18.05103302001953

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -15.875000953674316
    4. ',' → logprob: -16.375001907348633
    5. '```' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.562501907348633
    7. ')' → logprob: -17.875001907348633
    8. '-' → logprob: -18.562501907348633
    9. '
' → logprob: -19.250001907348633
    10. '１' → logprob: -19.375001907348633

Token 439: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08539103716611862
    2. ',' → logprob: -3.085391044616699
    3. '),(' → logprob: -3.335391044616699
    4. '0' → logprob: -7.710391044616699
    5. ' ,' → logprob: -10.2103910446167
    6. ' ),' → logprob: -11.5853910446167
    7. '1' → logprob: -11.8353910446167
    8. ')' → logprob: -11.8353910446167
    9. ',),' → logprob: -11.8353910446167
    10. '),
' → logprob: -11.9603910446167

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.754368223482743e-05
    2. ' ' → logprob: -9.625067710876465
    3. '1' → logprob: -13.500067710876465
    4. '```' → logprob: -17.37506675720215
    5. ',' → logprob: -17.87506675720215
    6. '   ' → logprob: -18.25006675720215
    7. ')' → logprob: -18.62506675720215
    8. '۰' → logprob: -19.62506675720215
    9. '  ' → logprob: -19.68756675720215
    10. '
' → logprob: -20.43756675720215

Token 441: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00025323365116491914
    2. '),(' → logprob: -8.375253677368164
    3. ' ),' → logprob: -10.750253677368164
    4. ')' → logprob: -14.375253677368164
    5. ',' → logprob: -15.125253677368164
    6. '),
' → logprob: -16.125253677368164
    7. '},' → logprob: -16.125253677368164
    8. '(' → logprob: -16.250253677368164
    9. '))' → logprob: -17.125253677368164
    10. ',),' → logprob: -17.250253677368164

Token 442: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931961178779602
    2. ' (' → logprob: -0.6931961178779602
    3. '0' → logprob: -10.068196296691895
    4. ' ' → logprob: -11.943196296691895
    5. ')' → logprob: -18.318195343017578
    6. ',' → logprob: -18.693195343017578
    7. '```' → logprob: -18.943195343017578
    8. ' ' → logprob: -19.443195343017578
    9. '   ' → logprob: -20.068195343017578
    10. '  ' → logprob: -20.068195343017578

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -16.00001335144043
    4. ')' → logprob: -17.12501335144043
    5. '   ' → logprob: -17.50001335144043
    6. '```' → logprob: -17.50001335144043
    7. '-' → logprob: -18.25001335144043
    8. ',' → logprob: -18.87501335144043
    9. '  ' → logprob: -19.87501335144043
    10. '۰' → logprob: -20.18751335144043

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.24179228907451e-05
    2. '1' → logprob: -10.125061988830566
    3. ',-' → logprob: -11.125061988830566
    4. ' ,' → logprob: -11.875061988830566
    5. ',
' → logprob: -15.250061988830566
    6. '),' → logprob: -16.875062942504883
    7. '```' → logprob: -17.125062942504883
    8. ',+' → logprob: -17.250062942504883
    9. ' ' → logprob: -17.500062942504883
    10. '
' → logprob: -17.500062942504883

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.75001335144043
    3. '-' → logprob: -12.12501335144043
    4. '```' → logprob: -15.12501335144043
    5. '
' → logprob: -16.25001335144043
    6. '   ' → logprob: -18.37501335144043
    7. ')' → logprob: -18.37501335144043
    8. '0' → logprob: -18.50001335144043
    9. '``' → logprob: -18.50001335144043
    10. ' -' → logprob: -18.75001335144043

Token 446: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0034636985510587692
    2. '),(' → logprob: -6.2534637451171875
    3. ',' → logprob: -6.5034637451171875
    4. ' ),' → logprob: -10.378463745117188
    5. '},' → logprob: -14.003463745117188
    6. ')' → logprob: -14.003463745117188
    7. ' ,' → logprob: -14.003463745117188
    8. '(' → logprob: -14.128463745117188
    9. ',),' → logprob: -14.503463745117188
    10. '))' → logprob: -15.003463745117188

Token 447: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14930902421474457
    2. ' ' → logprob: -2.524308919906616
    3. '(' → logprob: -2.899308919906616
    4. ' (' → logprob: -5.649309158325195
    5. ',' → logprob: -14.399309158325195
    6. '   ' → logprob: -14.649309158325195
    7. ')' → logprob: -15.274309158325195
    8. '-' → logprob: -15.399309158325195
    9. '```' → logprob: -15.649309158325195
    10. '  ' → logprob: -16.024309158325195

Token 448: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.143808109802194e-05
    2. '-' → logprob: -10.375041007995605
    3. ' ' → logprob: -11.500041007995605
    4. '1' → logprob: -17.000041961669922
    5. ' -' → logprob: -17.000041961669922
    6. ',' → logprob: -17.250041961669922
    7. '   ' → logprob: -17.500041961669922
    8. '
' → logprob: -18.000041961669922
    9. '```' → logprob: -18.125041961669922
    10. '۰' → logprob: -18.875041961669922

Token 449: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.005109595600515604
    2. '-' → logprob: -5.505109786987305
    3. ',' → logprob: -6.880109786987305
    4. ',
' → logprob: -13.755109786987305
    5. ',-
' → logprob: -13.755109786987305
    6. ' ,-' → logprob: -15.005109786987305
    7. ',-

' → logprob: -15.630109786987305
    8. '```' → logprob: -17.255109786987305
    9. ',\
' → logprob: -17.380109786987305
    10. '-,' → logprob: -17.380109786987305

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '0' → logprob: -12.750003814697266
    3. '```' → logprob: -14.250003814697266
    4. '))' → logprob: -15.500003814697266
    5. ' ' → logprob: -16.250003814697266
    6. ')' → logprob: -16.375003814697266
    7. '``' → logprob: -18.875003814697266
    8. '   ' → logprob: -19.500003814697266
    9. ')))' → logprob: -20.125003814697266
    10. '`' → logprob: -21.000003814697266

Token 451: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.6132168173789978
    2. ')):
' → logprob: -0.9882168173789978
    3. '):' → logprob: -2.7382168769836426
    4. '):
' → logprob: -3.9882168769836426
    5. '))' → logprob: -5.988216876983643
    6. ')' → logprob: -8.238216400146484
    7. ')):
' → logprob: -8.988216400146484
    8. '):

' → logprob: -11.863216400146484
    9. ':' → logprob: -11.988216400146484
    10. '   ' → logprob: -12.738216400146484

Token 452: '               ' (ID: 506)
  Prédit: ' ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.11273007094860077
    2. '           ' → logprob: -3.237730026245117
    3. '               ' → logprob: -3.737730026245117
    4. ' y' → logprob: -3.987730026245117
    5. ' new' → logprob: -4.237730026245117
    6. '            ' → logprob: -5.737730026245117
    7. ' 
' → logprob: -6.612730026245117
    8. ' ' → logprob: -6.612730026245117
    9. ' ' → logprob: -7.112730026245117
    10. 'y' → logprob: -7.362730026245117

Token 453: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.0789119303226471
    2. 'ny' (adapté à ' ny') → logprob: -2.5789120197296143
    3. '               ' → logprob: -11.328911781311035
    4. ' new' → logprob: -13.328911781311035
    5. '```' → logprob: -13.328911781311035
    6. '                ' → logprob: -13.453911781311035
    7. ' ' → logprob: -13.578911781311035
    8. '   ' → logprob: -14.203911781311035
    9. ' nye' → logprob: -14.703911781311035
    10. ' ' → logprob: -14.953911781311035

Token 454: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8143110871315002
    2. ' =' → logprob: -0.8143110871315002
    3. ',' → logprob: -2.1893110275268555
    4. '=y' → logprob: -6.4393110275268555
    5. ' ,' → logprob: -8.439311027526855
    6. ',y' → logprob: -8.439311027526855
    7. '=n' → logprob: -9.814311027526855
    8. ',n' → logprob: -11.439311027526855
    9. ')' → logprob: -12.439311027526855
    10. '<|end|>' → logprob: -12.564311027526855

Token 455: ' nx' (ID: 50118)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1906214952468872
    2. ' x' → logprob: -2.6906213760375977
    3. 'nx' → logprob: -2.9406213760375977
    4. ' nx' → logprob: -2.9406213760375977
    5. 'dx' → logprob: -11.190621376037598
    6. ' dx' → logprob: -11.440621376037598
    7. 'Nx' → logprob: -11.690621376037598
    8. ' y' → logprob: -12.190621376037598
    9. 'y' → logprob: -12.690621376037598
    10. 'n' → logprob: -13.315621376037598

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805285319685936
    2. ' =' → logprob: -3.288052797317505
    3. '=y' → logprob: -11.413052558898926
    4. '=n' → logprob: -15.538052558898926
    5. ')' → logprob: -16.663053512573242
    6. ',' → logprob: -16.788053512573242
    7. ' ' → logprob: -17.538053512573242
    8. '=
' → logprob: -17.538053512573242
    9. '   ' → logprob: -18.288053512573242
    10. '＝' → logprob: -18.413053512573242

Token 457: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234121344983578
    2. ' y' → logprob: -5.255234241485596
    3. '	y' → logprob: -15.505233764648438
    4. '(y' → logprob: -16.255233764648438
    5. '   ' → logprob: -17.255233764648438
    6. ')y' → logprob: -19.130233764648438
    7. ' ' → logprob: -19.755233764648438
    8. '[y' → logprob: -20.380233764648438
    9. ',y' → logprob: -20.755233764648438
    10. '    ' → logprob: -20.880233764648438

Token 458: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1271044909954071
    2. ' +' → logprob: -2.1271045207977295
    3. '+y' → logprob: -8.752104759216309
    4. '+d' → logprob: -11.877104759216309
    5. '+,' → logprob: -12.502104759216309
    6. '+n' → logprob: -13.127104759216309
    7. ',' → logprob: -13.252104759216309
    8. '+
' → logprob: -13.377104759216309
    9. '＋' → logprob: -14.627104759216309
    10. '+x' → logprob: -14.877104759216309

Token 459: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -7.493430894101039e-05
    2. ' dy' → logprob: -9.500075340270996
    3. '.dy' → logprob: -18.62507438659668
    4. 'd' → logprob: -18.75007438659668
    5. 'Dy' → logprob: -20.87507438659668
    6. 'dx' → logprob: -21.00007438659668
    7. '   ' → logprob: -21.00007438659668
    8. '0' → logprob: -21.00007438659668
    9. 'dym' → logprob: -21.25007438659668
    10. '
' → logprob: -22.00007438659668

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003373694489710033
    2. ',n' → logprob: -8.125337600708008
    3. ' ,' → logprob: -10.125337600708008
    4. ',y' → logprob: -14.125337600708008
    5. ',x' → logprob: -15.000337600708008
    6. ',
' → logprob: -17.250337600708008
    7. 'n' → logprob: -18.125337600708008
    8. ',next' → logprob: -18.125337600708008
    9. ',w' → logprob: -18.500337600708008
    10. ' nx' → logprob: -18.625337600708008

Token 461: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. '	x' → logprob: -18.630233764648438
    4. '   ' → logprob: -21.005233764648438
    5. '(x' → logprob: -21.755233764648438
    6. ' ' → logprob: -21.880233764648438
    7. '"x' → logprob: -22.130233764648438
    8. '$x' → logprob: -22.130233764648438
    9. ')x' → logprob: -22.630233764648438
    10. ''x' → logprob: -23.130233764648438

Token 462: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002244462026283145
    2. '+x' → logprob: -6.377244472503662
    3. ' +' → logprob: -7.877244472503662
    4. ',' → logprob: -9.502243995666504
    5. '+d' → logprob: -9.877243995666504
    6. 'dx' → logprob: -11.127243995666504
    7. '+n' → logprob: -11.252243995666504
    8. '[' → logprob: -12.502243995666504
    9. '+
' → logprob: -13.377243995666504
    10. ',x' → logprob: -14.377243995666504

Token 463: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00014370749704539776
    2. ' dx' → logprob: -9.000144004821777
    3. 'x' → logprob: -11.625144004821777
    4. '1' → logprob: -11.875144004821777
    5. '0' → logprob: -12.750144004821777
    6. '_dx' → logprob: -14.500144004821777
    7. '(dx' → logprob: -15.000144004821777
    8. 'nx' → logprob: -15.375144004821777
    9. '.dx' → logprob: -15.625144004821777
    10. 'xd' → logprob: -16.37514305114746

Token 464: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10999840497970581
    2. 'if' (adapté à ' if') → logprob: -2.3599984645843506
    3. ' ' → logprob: -5.9849982261657715
    4. ' 
' → logprob: -6.2349982261657715
    5. '<|end|>' → logprob: -6.4849982261657715
    6. '               ' → logprob: -6.6099982261657715
    7. '0' → logprob: -7.1099982261657715
    8. '                ' → logprob: -7.3599982261657715
    9. '  
' → logprob: -8.48499870300293
    10. '            ' → logprob: -8.73499870300293

Token 467: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4287070333957672
    2. ' ' → logprob: -1.0537070035934448
    3. ' ny' → logprob: -12.678707122802734
    4. 'ny' → logprob: -13.928707122802734
    5. ' not' → logprob: -13.928707122802734
    6. 'not' → logprob: -15.303707122802734
    7. ' ' → logprob: -15.303707122802734
    8. '(' → logprob: -15.553707122802734
    9. '   ' → logprob: -15.553707122802734
    10. '1' → logprob: -15.928707122802734

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -11.375015258789062
    3. 'ny' → logprob: -12.625015258789062
    4. 'not' → logprob: -14.375015258789062
    5. '
' → logprob: -16.375015258789062
    6. '(' → logprob: -16.875015258789062
    7. '-' → logprob: -17.000015258789062
    8. ' ny' → logprob: -17.625015258789062
    9. ' not' → logprob: -18.250015258789062
    10. '۰' → logprob: -18.312515258789062

Token 469: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.22046056389808655
    2. '<=' → logprob: -1.9704605340957642
    3. ' >=' → logprob: -3.2204606533050537
    4. '>=' → logprob: -4.595460414886475
    5. ' <' → logprob: -5.095460414886475
    6. '<' → logprob: -6.720460414886475
    7. '<n' → logprob: -7.720460414886475
    8. '0' → logprob: -7.720460414886475
    9. '   ' → logprob: -9.595460891723633
    10. ' ' → logprob: -10.470460891723633

Token 470: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.004081128165125847
    2. ' ny' → logprob: -5.5040812492370605
    3. 'nym' → logprob: -14.879080772399902
    4. 'nyt' → logprob: -15.004080772399902
    5. 'n' → logprob: -15.129080772399902
    6. 'nyi' → logprob: -15.379080772399902
    7. 'ni' → logprob: -15.504080772399902
    8. 'ney' → logprob: -15.629080772399902
    9. '
' → logprob: -15.754080772399902
    10. ''ny' → logprob: -15.754080772399902

Token 471: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07757773250341415
    2. ' <' → logprob: -2.702577829360962
    3. '<n' → logprob: -4.952577590942383
    4. '<w' → logprob: -8.327577590942383
    5. ' and' → logprob: -9.077577590942383
    6. 'and' → logprob: -9.702577590942383
    7. '<len' → logprob: -9.702577590942383
    8. '<h' → logprob: -10.702577590942383
    9. '<N' → logprob: -11.452577590942383
    10. '<size' → logprob: -11.452577590942383

Token 472: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.15310683415737e-05
    2. ' h' → logprob: -10.750021934509277
    3. '	h' → logprob: -18.50002098083496
    4. '   ' → logprob: -19.62502098083496
    5. '<h' → logprob: -19.75002098083496
    6. '
' → logprob: -19.87502098083496
    7. '           ' → logprob: -21.62502098083496
    8. '[h' → logprob: -21.75002098083496
    9. '"h' → logprob: -22.50002098083496
    10. '(h' → logprob: -22.62502098083496

Token 473: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016035424545407295
    2. 'and' → logprob: -4.141035556793213
    3. ',' → logprob: -15.016035079956055
    4. ' ' → logprob: -15.266035079956055
    5. '<|end|>' → logprob: -16.141035079956055
    6. '           ' → logprob: -16.391035079956055
    7. '	and' → logprob: -16.391035079956055
    8. ' и' → logprob: -16.641035079956055
    9. '               ' → logprob: -16.641035079956055
    10. '       ' → logprob: -16.766035079956055

Token 474: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026490597054362297
    2. ' ' → logprob: -3.6514906883239746
    3. 'w' → logprob: -9.151490211486816
    4. ' w' → logprob: -9.651490211486816
    5. ' nx' → logprob: -11.776490211486816
    6. 'nx' → logprob: -12.026490211486816
    7. '   ' → logprob: -13.401490211486816
    8. '  ' → logprob: -13.776490211486816
    9. '               ' → logprob: -14.151490211486816
    10. '                   ' → logprob: -14.151490211486816

Token 475: '0' (ID: 15)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0006769311730749905
    2. 'nx' → logprob: -7.625677108764648
    3. ' w' → logprob: -8.625677108764648
    4. '0' → logprob: -11.875677108764648
    5. ' nx' → logprob: -14.250677108764648
    6. 'ny' → logprob: -14.625677108764648
    7. 'n' → logprob: -14.750677108764648
    8. 'nw' → logprob: -15.125677108764648
    9. 'wx' → logprob: -15.500677108764648
    10. '(w' → logprob: -15.750677108764648

Token 476: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5057470798492432
    2. '<' → logprob: -1.0057470798492432
    3. ' <=' → logprob: -4.255746841430664
    4. ' and' → logprob: -5.130746841430664
    5. '<=' → logprob: -5.380746841430664
    6. 'and' → logprob: -6.630746841430664
    7. '        ' → logprob: -6.880746841430664
    8. '<n' → logprob: -7.005746841430664
    9. '       ' → logprob: -7.255746841430664
    10. 'w' → logprob: -7.630746841430664

Token 477: ' nx' (ID: 50118)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00020354038861114532
    2. ' w' → logprob: -8.500203132629395
    3. '	w' → logprob: -18.37520408630371
    4. '   ' → logprob: -19.00020408630371
    5. '
' → logprob: -20.25020408630371
    6. '(w' → logprob: -20.87520408630371
    7. '=w' → logprob: -21.00020408630371
    8. ' ' → logprob: -21.12520408630371
    9. 'x' → logprob: -21.37520408630371
    10. 'h' → logprob: -21.62520408630371

Token 478: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13243073225021362
    2. '<' → logprob: -2.1324307918548584
    3. '<w' → logprob: -5.257430553436279
    4. '<n' → logprob: -8.382431030273438
    5. 'w' → logprob: -10.882431030273438
    6. '<x' → logprob: -11.382431030273438
    7. '<h' → logprob: -11.632431030273438
    8. '<size' → logprob: -12.882431030273438
    9. 'and' → logprob: -13.007431030273438
    10. ' and' → logprob: -13.382431030273438

Token 479: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002613358374219388
    2. ' w' → logprob: -8.250261306762695
    3. '	w' → logprob: -19.125261306762695
    4. '   ' → logprob: -20.000261306762695
    5. '(w' → logprob: -20.875261306762695
    6. '=w' → logprob: -21.125261306762695
    7. '[w' → logprob: -21.625261306762695
    8. 'h' → logprob: -21.875261306762695
    9. '_w' → logprob: -22.125261306762695
    10. '<w' → logprob: -22.625261306762695

Token 480: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0212444756180048
    2. 'and' → logprob: -4.021244525909424
    3. ':
' → logprob: -6.646244525909424
    4. '               ' → logprob: -6.771244525909424
    5. '                   ' → logprob: -8.396244049072266
    6. '           ' → logprob: -8.646244049072266
    7. ':' → logprob: -8.771244049072266
    8. '                       ' → logprob: -10.396244049072266
    9. '              ' → logprob: -11.521244049072266
    10. '       ' → logprob: -11.896244049072266

Token 481: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03180648013949394
    2. '                   ' → logprob: -3.531806468963623
    3. ' if' → logprob: -7.156806468963623
    4. '                ' → logprob: -8.156806945800781
    5. '                       ' → logprob: -8.656806945800781
    6. '```' → logprob: -8.656806945800781
    7. '<|end|>' → logprob: -8.781806945800781
    8. '           ' → logprob: -9.031806945800781
    9. ' and' → logprob: -9.281806945800781
    10. '       ' → logprob: -9.781806945800781

Token 482: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' (adapté à ' nc') → logprob: -0.06102147325873375
    2. 'if' → logprob: -3.811021566390991
    3. 'cell' → logprob: -4.311021327972412
    4. 'n' → logprob: -4.686021327972412
    5. 'next' → logprob: -4.936021327972412
    6. '                   ' → logprob: -5.811021327972412
    7. 'c' → logprob: -6.061021327972412
    8. 'cc' → logprob: -7.561021327972412
    9. '               ' → logprob: -8.31102180480957
    10. 'nd' → logprob: -8.68602180480957

Token 483: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931480169296265
    2. ' =' → logprob: -0.6931480169296265
    3. '=
' → logprob: -15.318147659301758
    4. ' ' → logprob: -15.568147659301758
    5. '   ' → logprob: -16.193147659301758
    6. ' =
' → logprob: -16.943147659301758
    7. 'if' → logprob: -17.443147659301758
    8. 'c' → logprob: -17.568147659301758
    9. ' ==' → logprob: -17.693147659301758
    10. ',' → logprob: -17.818147659301758

Token 484: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0005530327325686812
    2. ' grid' → logprob: -7.500553131103516
    3. '	grid' → logprob: -17.875553131103516
    4. '(grid' → logprob: -18.625553131103516
    5. '   ' → logprob: -19.125553131103516
    6. '.grid' → logprob: -19.750553131103516
    7. '                   ' → logprob: -19.750553131103516
    8. '                       ' → logprob: -21.125553131103516
    9. ' ' → logprob: -21.125553131103516
    10. '/grid' → logprob: -21.250553131103516

Token 485: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.0
    3. '][' → logprob: -16.875
    4. '[
' → logprob: -17.125
    5. 'ny' → logprob: -17.375
    6. '[n' → logprob: -17.5
    7. '   ' → logprob: -18.125
    8. ' [' → logprob: -18.375
    9. '[y' → logprob: -18.5
    10. '#' → logprob: -18.75

Token 486: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -9.849109119386412e-06
    2. ' ny' → logprob: -11.750009536743164
    3. '[' → logprob: -13.625009536743164
    4. 'y' → logprob: -15.375009536743164
    5. 'nyi' → logprob: -15.500009536743164
    6. 'n' → logprob: -16.625009536743164
    7. '   ' → logprob: -16.875009536743164
    8. '][' → logprob: -16.875009536743164
    9. ''ny' → logprob: -17.875009536743164
    10. 'ni' → logprob: -18.750009536743164

Token 487: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011249887757003307
    2. '[' → logprob: -4.511250019073486
    3. '[n' → logprob: -8.886249542236328
    4. ']' → logprob: -10.636249542236328
    5. ''][' → logprob: -11.636249542236328
    6. ' ][' → logprob: -11.886249542236328
    7. '"][' → logprob: -11.886249542236328
    8. '                   ' → logprob: -12.636249542236328
    9. '       ' → logprob: -12.761249542236328
    10. '   ' → logprob: -12.886249542236328

Token 488: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.02993527241051197
    2. 'x' → logprob: -3.529935359954834
    3. '(nx' → logprob: -9.154934883117676
    4. ' nx' → logprob: -9.654934883117676
    5. 'Nx' → logprob: -12.404934883117676
    6. '[' → logprob: -12.779934883117676
    7. 'n' → logprob: -13.154934883117676
    8. 'xn' → logprob: -13.404934883117676
    9. '[n' → logprob: -13.779934883117676
    10. '[x' → logprob: -14.154934883117676

Token 489: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2837716042995453
    2. ')' → logprob: -1.4087716341018677
    3. ']' → logprob: -6.783771514892578
    4. ']
' → logprob: -7.408771514892578
    5. '                   ' → logprob: -7.783771514892578
    6. '[' → logprob: -8.033771514892578
    7. ')
' → logprob: -10.408771514892578
    8. '])
' → logprob: -10.783771514892578
    9. '   ' → logprob: -11.283771514892578
    10. '               ' → logprob: -11.658771514892578

Token 490: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05527512729167938
    2. '                    
' → logprob: -3.9302752017974854
    3. '```' → logprob: -4.180274963378906
    4. ' 
' → logprob: -4.930274963378906
    5. '<|end|>' → logprob: -5.805274963378906
    6. '                    ' → logprob: -5.930274963378906
    7. ' if' → logprob: -6.430274963378906
    8. '               ' → logprob: -7.180274963378906
    9. '                        
' → logprob: -7.805274963378906
    10. '                       ' → logprob: -8.055274963378906

Token 491: ' n' (ID: 297)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7778415083885193
    2. '                   ' → logprob: -0.9028415083885193
    3. 'if' → logprob: -2.527841567993164
    4. '                    ' → logprob: -3.027841567993164
    5. '```' → logprob: -6.402841567993164
    6. '                       ' → logprob: -6.527841567993164
    7. '               ' → logprob: -6.902841567993164
    8. '                    
' → logprob: -7.652841567993164
    9. '                ' → logprob: -7.902841567993164
    10. '#' → logprob: -7.902841567993164

Token 492: 'step' (ID: 17509)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09665102511644363
    2. 'ot' → logprob: -2.596651077270508
    3. 'if' → logprob: -5.096651077270508
    4. ' if' → logprob: -5.846651077270508
    5. ' in' → logprob: -5.971651077270508
    6. ' not' → logprob: -6.471651077270508
    7. ' !=' → logprob: -6.721651077270508
    8. 'o' → logprob: -7.471651077270508
    9. 'n' → logprob: -7.471651077270508
    10. '!=' → logprob: -8.096651077270508

Token 493: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022484004497528
    2. ' =' → logprob: -1.9102247953414917
    3. ',' → logprob: -15.410224914550781
    4. '==' → logprob: -16.16022491455078
    5. ')' → logprob: -16.28522491455078
    6. '=
' → logprob: -16.28522491455078
    7. ' ==' → logprob: -17.03522491455078
    8. '＝' → logprob: -17.41022491455078
    9. '=current' → logprob: -18.16022491455078
    10. '>' → logprob: -18.16022491455078

Token 494: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -7.107425062713446e-06
    2. ' step' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.12500762939453
    4. '	step' → logprob: -18.00000762939453
    5. '(step' → logprob: -19.12500762939453
    6. '
' → logprob: -19.62500762939453
    7. ' ' → logprob: -20.37500762939453
    8. 'ste' → logprob: -21.00000762939453
    9. 'steps' → logprob: -21.25000762939453
    10. '-step' → logprob: -21.50000762939453

Token 495: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10932516306638718
    2. '<|end|>' → logprob: -3.1093251705169678
    3. '```' → logprob: -3.3593251705169678
    4. '                    ' → logprob: -5.109324932098389
    5. '               ' → logprob: -5.484324932098389
    6. ' if' → logprob: -5.609324932098389
    7. '                    
' → logprob: -6.109324932098389
    8. '                       ' → logprob: -6.734324932098389
    9. '<|end|>' → logprob: -6.859324932098389
    10. '#' → logprob: -7.234324932098389

Token 497: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06846362352371216
    2. ' if' → logprob: -3.8184635639190674
    3. '                    
' → logprob: -4.4434638023376465
    4. 'if' (adapté à ' if') → logprob: -4.6934638023376465
    5. '                    ' → logprob: -4.8184638023376465
    6. '```' → logprob: -4.9434638023376465
    7. '#' → logprob: -6.1934638023376465
    8. ' 
' → logprob: -6.5684638023376465
    9. '               ' → logprob: -6.8184638023376465
    10. '<|end|>' → logprob: -7.6934638023376465

Token 498: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.026366839185357094
    2. ' nc' → logprob: -3.651366949081421
    3. 'c' → logprob: -10.9013671875
    4. '(n' → logprob: -11.5263671875
    5. '_nc' → logprob: -11.5263671875
    6. ' ' → logprob: -12.5263671875
    7. '.nc' → logprob: -12.5263671875
    8. 'n' → logprob: -12.7763671875
    9. '(' → logprob: -13.0263671875
    10. ' (' → logprob: -13.2763671875

Token 499: '.is' (ID: 3109)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16263701021671295
    2. '.is' → logprob: -2.2876369953155518
    3. ' !=' → logprob: -3.7876369953155518
    4. '.' → logprob: -4.162637233734131
    5. '==' → logprob: -4.787637233734131
    6. ' in' → logprob: -7.662637233734131
    7. ' not' → logprob: -8.037636756896973
    8. '=='' → logprob: -8.287636756896973
    9. ' .' → logprob: -8.287636756896973
    10. 'isdigit' → logprob: -8.412636756896973

Token 500: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.00019173922191839665
    2. ''d' → logprob: -9.250191688537598
    3. 'alpha' → logprob: -9.750191688537598
    4. '-digit' → logprob: -12.000191688537598
    5. ' digit' → logprob: -12.000191688537598
    6. 'isdigit' → logprob: -12.500191688537598
    7. 'a' → logprob: -12.750191688537598
    8. ''' → logprob: -13.000191688537598
    9. 'digits' → logprob: -13.000191688537598
    10. 'decimal' → logprob: -13.625191688537598

Token 501: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8576793670654297
    2. '():
' → logprob: -0.9826793670654297
    3. '()' → logprob: -1.6076793670654297
    4. ' and' → logprob: -7.60767936706543
    5. 'and' → logprob: -8.48267936706543
    6. ':' → logprob: -8.48267936706543
    7. ' ():' → logprob: -9.73267936706543
    8. '():
' → logprob: -9.98267936706543
    9. '():

' → logprob: -10.10767936706543
    10. ' ()' → logprob: -10.23267936706543

Token 502: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 503: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.05217985436320305
    2. 'if' → logprob: -3.9271798133850098
    3. '                           ' → logprob: -4.55217981338501
    4. 'n' → logprob: -4.55217981338501
    5. ' num' → logprob: -5.42717981338501
    6. '                       ' → logprob: -6.05217981338501
    7. ' if' → logprob: -6.05217981338501
    8. 'nd' → logprob: -8.677180290222168
    9. 'number' → logprob: -8.677180290222168
    10. '```' → logprob: -8.927180290222168

Token 504: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03622938320040703
    2. ' =' → logprob: -3.911229372024536
    3. '=' → logprob: -4.911229610443115
    4. '==' → logprob: -4.911229610443115
    5. ')' → logprob: -8.536229133605957
    6. '<|end|>' → logprob: -8.786229133605957
    7. ' !=' → logprob: -8.911229133605957
    8. ' >' → logprob: -9.286229133605957
    9. ' <=' → logprob: -9.786229133605957
    10. '                           ' → logprob: -10.161229133605957

Token 505: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005530327325686812
    2. ' int' → logprob: -7.500553131103516
    3. '=int' → logprob: -16.875553131103516
    4. '(int' → logprob: -17.875553131103516
    5. '[int' → logprob: -18.000553131103516
    6. '<int' → logprob: -20.250553131103516
    7. '	int' → logprob: -21.250553131103516
    8. ':int' → logprob: -21.625553131103516
    9. ',int' → logprob: -22.750553131103516
    10. ']int' → logprob: -23.000553131103516

Token 506: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3876313269138336
    2. '(' → logprob: -1.1376312971115112
    3. '(num' → logprob: -7.512631416320801
    4. '(nx' → logprob: -9.1376314163208
    5. '(c' → logprob: -9.8876314163208
    6. 'nc' → logprob: -10.8876314163208
    7. '(
' → logprob: -11.1376314163208
    8. ')' → logprob: -12.3876314163208
    9. 'n' → logprob: -12.5126314163208
    10. '(nb' → logprob: -12.6376314163208

Token 507: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.9650025428272784e-05
    2. '(n' → logprob: -11.500040054321289
    3. 'nc' → logprob: -11.625040054321289
    4. ')' → logprob: -12.375040054321289
    5. '(nx' → logprob: -12.625040054321289
    6. '(c' → logprob: -12.750040054321289
    7. ')c' → logprob: -12.875040054321289
    8. 'с' → logprob: -13.125040054321289
    9. 'x' → logprob: -13.875040054321289
    10. '(' → logprob: -14.125040054321289

Token 508: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02645692601799965
    2. ')
' → logprob: -3.651456832885742
    3. '<|end|>' → logprob: -9.651456832885742
    4. '                       ' → logprob: -9.901456832885742
    5. '                           ' → logprob: -11.401456832885742
    6. ')#' → logprob: -11.776456832885742
    7. ')
' → logprob: -12.526456832885742
    8. ')==' → logprob: -13.151456832885742
    9. ')return' → logprob: -13.401456832885742
    10. '):
' → logprob: -13.401456832885742

Token 509: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038686688989400864
    2. ' if' → logprob: -3.288686752319336
    3. '                       ' → logprob: -8.163686752319336
    4. '                           ' → logprob: -8.288686752319336
    5. 'continue' → logprob: -9.663686752319336
    6. ' continue' → logprob: -11.163686752319336
    7. '                   ' → logprob: -11.788686752319336
    8. '                        
' → logprob: -12.038686752319336
    9. '```' → logprob: -12.288686752319336
    10. '#' (adapté à ' #') → logprob: -12.663686752319336

Token 511: ' can' (ID: 665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014198292046785355
    2. ' if' → logprob: -4.264198303222656
    3. 'continue' → logprob: -10.514198303222656
    4. ' continue' → logprob: -12.139198303222656
    5. '                   ' → logprob: -14.514198303222656
    6. '
' → logprob: -15.139198303222656
    7. 'If' → logprob: -15.514198303222656
    8. '                           ' → logprob: -15.639198303222656
    9. 'n' → logprob: -15.764198303222656
    10. '                       ' → logprob: -15.889198303222656

Token 512: ' only' (ID: 1606)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5391003489494324
    2. ' num' → logprob: -1.0391004085540771
    3. ' not' → logprob: -3.414100408554077
    4. ' if' → logprob: -4.914100170135498
    5. 'not' → logprob: -4.914100170135498
    6. 'if' → logprob: -5.289100170135498
    7. '(num' → logprob: -6.414100170135498
    8. ' step' → logprob: -6.414100170135498
    9. ' only' → logprob: -6.414100170135498
    10. ' n' → logprob: -6.539100170135498

Token 513: ' touch' (ID: 7381)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.811854898929596
    2. 'if' → logprob: -1.8118548393249512
    3. 'continue' → logprob: -1.9368548393249512
    4. 'visit' → logprob: -2.311854839324951
    5. 'go' → logprob: -2.561854839324951
    6. 'enter' → logprob: -3.561854839324951
    7. 'pass' → logprob: -4.311854839324951
    8. 'accept' → logprob: -4.436854839324951
    9. ' move' → logprob: -5.436854839324951
    10. 'n' → logprob: -5.686854839324951

Token 514: ' seals' (ID: 88226)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.672579288482666
    2. 'num' → logprob: -1.172579288482666
    3. ' if' → logprob: -2.172579288482666
    4. 'if' → logprob: -3.297579288482666
    5. 'n' → logprob: -4.172579288482666
    6. ' n' → logprob: -4.547579288482666
    7. 'nx' → logprob: -6.922579288482666
    8. ' nx' → logprob: -7.297579288482666
    9. 'nc' → logprob: -8.172578811645508
    10. '(num' → logprob: -8.172578811645508

Token 515: ' up' (ID: 869)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.009767891839146614
    2. 'if' → logprob: -4.884768009185791
    3. '                       ' → logprob: -7.009768009185791
    4. ' only' → logprob: -7.634768009185791
    5. ' and' → logprob: -8.009767532348633
    6. ' num' → logprob: -8.634767532348633
    7. '                           ' → logprob: -9.509767532348633
    8. '=' → logprob: -10.384767532348633
    9. 'num' → logprob: -10.384767532348633
    10. 'and' → logprob: -11.259767532348633

Token 516: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0019036511657759547
    2. ' to' → logprob: -7.126903533935547
    3. 'o' → logprob: -7.751903533935547
    4. 'num' → logprob: -8.501903533935547
    5. 'on' → logprob: -9.001903533935547
    6. 'n' → logprob: -9.126903533935547
    7. '```' → logprob: -9.626903533935547
    8. '_to' → logprob: -10.126903533935547
    9. 'ntil' → logprob: -10.626903533935547
    10. 'if' → logprob: -10.626903533935547

Token 517: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0743381455540657
    2. 'n' → logprob: -2.94933819770813
    3. ' step' → logprob: -4.699337959289551
    4. 'num' → logprob: -4.824337959289551
    5. ' n' → logprob: -6.199337959289551
    6. ' num' → logprob: -9.32433795928955
    7. 'next' → logprob: -12.57433795928955
    8. '```' → logprob: -13.19933795928955
    9. '(step' → logprob: -13.44933795928955
    10. ' ' → logprob: -13.57433795928955

Token 518: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760363340377808
    2. '+' → logprob: -0.8260363340377808
    3. '                           ' → logprob: -10.32603645324707
    4. ' or' → logprob: -10.70103645324707
    5. '+n' → logprob: -11.57603645324707
    6. '                       ' → logprob: -11.95103645324707
    7. ' and' → logprob: -11.95103645324707
    8. '```' → logprob: -12.07603645324707
    9. '                               ' → logprob: -12.20103645324707
    10. '                   ' → logprob: -13.70103645324707

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.750015258789062
    3. '0' → logprob: -11.875015258789062
    4. '```' → logprob: -16.500015258789062
    5. '
' → logprob: -17.375015258789062
    6. '+' → logprob: -17.625015258789062
    7. '2' → logprob: -18.000015258789062
    8. '`' → logprob: -18.625015258789062
    9. '<|end|>' → logprob: -18.875015258789062
    10. '[' → logprob: -19.375015258789062

Token 520: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2804903984069824
    2. '                       ' → logprob: -1.6554903984069824
    3. '                           ' → logprob: -3.5304903984069824
    4. ' if' → logprob: -4.655490398406982
    5. 'and' → logprob: -5.280490398406982
    6. ' or' → logprob: -5.780490398406982
    7. ',' → logprob: -5.780490398406982
    8. '                        ' → logprob: -6.905490398406982
    9. '                               ' → logprob: -7.280490398406982
    10. '                   ' → logprob: -7.655490398406982

Token 521: ' can't' (ID: 8535)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6037964820861816
    2. ' if' → logprob: -0.8537964820861816
    3. 'if' → logprob: -4.853796482086182
    4. '                        ' → logprob: -4.853796482086182
    5. '                           ' → logprob: -5.603796482086182
    6. '                   ' → logprob: -5.853796482086182
    7. ' ' → logprob: -6.978796482086182
    8. '                    ' → logprob: -7.228796482086182
    9. ' and' → logprob: -7.603796482086182
    10. '                        
' → logprob: -7.728796482086182

Token 522: ' touch' (ID: 7381)
  Prédit: ' go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' go' → logprob: -0.4900338649749756
    2. ' move' → logprob: -1.8650338649749756
    3. 'continue' → logprob: -3.4900338649749756
    4. 'n' → logprob: -3.7400338649749756
    5. ' proceed' → logprob: -3.9900338649749756
    6. 'go' → logprob: -4.115034103393555
    7. ' continue' → logprob: -4.115034103393555
    8. ' step' → logprob: -4.240034103393555
    9. '```' → logprob: -4.240034103393555
    10. 'move' → logprob: -4.240034103393555

Token 523: ' the' (ID: 290)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.21436838805675507
    2. ' num' → logprob: -1.7143683433532715
    3. 'step' → logprob: -5.0893683433532715
    4. ' step' → logprob: -6.3393683433532715
    5. '(num' → logprob: -6.4643683433532715
    6. 'se' → logprob: -6.5893683433532715
    7. 'next' → logprob: -7.4643683433532715
    8. 'n' → logprob: -7.8393683433532715
    9. '[num' → logprob: -9.08936882019043
    10. ' next' → logprob: -9.33936882019043

Token 524: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.12987211346626282
    2. 'next' → logprob: -2.1298720836639404
    3. ' step' → logprob: -7.2548723220825195
    4. ' previous' → logprob: -8.12987232208252
    5. 'step' → logprob: -8.25487232208252
    6. '+' → logprob: -8.25487232208252
    7. 'n' → logprob: -8.25487232208252
    8. 'num' → logprob: -8.50487232208252
    9. '```' → logprob: -8.75487232208252
    10. ' num' → logprob: -9.00487232208252

Token 525: ' ones' (ID: 8104)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.237801194190979
    2. ' +' → logprob: -1.237801194190979
    3. ' or' → logprob: -1.237801194190979
    4. 'token' → logprob: -3.4878010749816895
    5. ' token' → logprob: -3.7378010749816895
    6. '_token' → logprob: -3.9878010749816895
    7. ' if' → logprob: -4.3628010749816895
    8. 'se' → logprob: -4.9878010749816895
    9. ' and' → logprob: -5.1128010749816895
    10. ')' → logprob: -5.2378010749816895

Token 526: ' before' (ID: 2254)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7669709324836731
    2. ' or' → logprob: -1.1419708728790283
    3. ' and' → logprob: -2.2669708728790283
    4. ' if' → logprob: -2.6419708728790283
    5. '                           ' → logprob: -4.141971111297607
    6. ',' → logprob: -4.391971111297607
    7. '                   ' → logprob: -5.766971111297607
    8. ' unless' → logprob: -6.016971111297607
    9. 'and' → logprob: -6.391971111297607
    10. '                               ' → logprob: -6.766971111297607

Token 527: ' previous' (ID: 5880)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.047031939029693604
    2. ' step' → logprob: -3.297031879425049
    3. 'n' → logprob: -5.297031879425049
    4. ' n' → logprob: -6.172031879425049
    5. '```' → logprob: -6.797031879425049
    6. ' completing' → logprob: -8.922032356262207
    7. 'steps' → logprob: -9.422032356262207
    8. 'the' → logprob: -9.672032356262207
    9. '(step' → logprob: -9.797032356262207
    10. '+' → logprob: -9.922032356262207

Token 528: ' destroyed' (ID: 31036)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1505829393863678
    2. ' +' → logprob: -2.150583028793335
    3. ' or' → logprob: -3.900583028793335
    4. ' if' → logprob: -7.150582790374756
    5. '```' → logprob: -7.400582790374756
    6. ')' → logprob: -7.775582790374756
    7. ' and' → logprob: -8.025583267211914
    8. ',' → logprob: -8.400583267211914
    9. '<|end|>' → logprob: -9.025583267211914
    10. ' )' → logprob: -9.775583267211914

Token 529: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9610046744346619
    2. ' and' → logprob: -1.7110047340393066
    3. '                       ' → logprob: -2.2110047340393066
    4. '                   ' → logprob: -2.3360047340393066
    5. '                           ' → logprob: -3.2110047340393066
    6. '<|end|>' → logprob: -3.2110047340393066
    7. ',' → logprob: -3.3360047340393066
    8. '```' → logprob: -3.5860047340393066
    9. ' if' → logprob: -3.8360047340393066
    10. '.' → logprob: -4.086004734039307

Token 530: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8839896321296692
    2. ' and' → logprob: -1.0089895725250244
    3. '                       ' → logprob: -2.7589895725250244
    4. '<|end|>' → logprob: -2.8839895725250244
    5. '                    ' → logprob: -3.6339895725250244
    6. ',' → logprob: -4.0089898109436035
    7. '                           ' → logprob: -4.2589898109436035
    8. 'and' → logprob: -4.3839898109436035
    9. ' ' → logprob: -5.1339898109436035
    10. ' if' → logprob: -5.3839898109436035

Token 531: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9747366309165955
    2. '                           ' → logprob: -1.4747366905212402
    3. '                       ' → logprob: -1.4747366905212402
    4. 'if' → logprob: -2.5997366905212402
    5. '                   ' → logprob: -2.7247366905212402
    6. '                    ' → logprob: -5.47473669052124
    7. '                               ' → logprob: -5.47473669052124
    8. ' ' → logprob: -5.59973669052124
    9. '<|end|>' → logprob: -5.97473669052124
    10. '                        ' → logprob: -6.47473669052124

Token 532: ' but' (ID: 889)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3916182816028595
    2. '                           ' → logprob: -2.391618251800537
    3. 'if' → logprob: -2.891618251800537
    4. ' ' → logprob: -3.016618251800537
    5. '                   ' → logprob: -3.016618251800537
    6. '                       ' → logprob: -4.516618251800537
    7. ')' → logprob: -4.641618251800537
    8. ' and' → logprob: -4.766618251800537
    9. '<|end|>' → logprob: -4.766618251800537
    10. '                               ' → logprob: -5.016618251800537

Token 533: ' in' (ID: 306)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.07794179767370224
    2. 'num' → logprob: -3.07794189453125
    3. '(num' → logprob: -4.57794189453125
    4. ' not' → logprob: -4.82794189453125
    5. ' (' → logprob: -5.07794189453125
    6. ' n' → logprob: -6.20294189453125
    7. ' nc' → logprob: -7.20294189453125
    8. '(n' → logprob: -7.70294189453125
    9. '(' → logprob: -7.95294189453125
    10. 'n' → logprob: -8.20294189453125

Token 534: ' logic' (ID: 18485)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.122023105621338
    2. ' num' → logprob: -1.747023105621338
    3. ' nc' → logprob: -1.997023105621338
    4. 'n' → logprob: -2.122023105621338
    5. 'num' → logprob: -2.247023105621338
    6. 'nc' → logprob: -2.497023105621338
    7. ' not' → logprob: -4.247023105621338
    8. ' step' → logprob: -4.497023105621338
    9. '(n' → logprob: -4.747023105621338
    10. ' (' → logprob: -5.247023105621338

Token 535: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1621702909469604
    2. ' if' → logprob: -1.6621702909469604
    3. '                       ' → logprob: -1.6621702909469604
    4. '                           ' → logprob: -2.53717041015625
    5. ' not' → logprob: -3.16217041015625
    6. '==' → logprob: -3.28717041015625
    7. ' and' → logprob: -3.28717041015625
    8. 'if' → logprob: -3.66217041015625
    9. ' ==' → logprob: -3.78717041015625
    10. '                               ' → logprob: -4.66217041015625

Token 536: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3339855670928955
    2. 'if' → logprob: -1.3339855670928955
    3. ' num' → logprob: -4.208985328674316
    4. 'num' → logprob: -5.458985328674316
    5. ' continue' → logprob: -6.958985328674316
    6. 'continue' → logprob: -8.333985328674316
    7. ' not' → logprob: -9.583985328674316
    8. '                       ' → logprob: -9.583985328674316
    9. '                   ' → logprob: -10.833985328674316
    10. 'n' → logprob: -11.333985328674316

Token 537: ' only' (ID: 1606)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.3400342464447021
    2. ' can' → logprob: -1.5900342464447021
    3. 'must' → logprob: -1.9650342464447021
    4. 'if' → logprob: -2.340034246444702
    5. 'continue' → logprob: -2.715034246444702
    6. ' continue' → logprob: -2.840034246444702
    7. ' only' → logprob: -3.090034246444702
    8. 'can' → logprob: -3.715034246444702
    9. ' should' → logprob: -3.840034246444702
    10. 'should' → logprob: -4.215034484863281

Token 538: ' update' (ID: 4027)
  Prédit: 'allow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allow' → logprob: -0.4029122292995453
    2. 'continue' → logprob: -1.9029122591018677
    3. 'can' → logprob: -2.277912139892578
    4. 'need' → logprob: -3.527912139892578
    5. 'if' → logprob: -4.027912139892578
    6. 'visit' → logprob: -5.152912139892578
    7. 'consider' → logprob: -5.402912139892578
    8. 'enqueue' → logprob: -5.402912139892578
    9. ' need' → logprob: -5.652912139892578
    10. 'check' → logprob: -6.277912139892578

Token 539: ' step' (ID: 5983)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41064906120300293
    2. ' n' → logprob: -1.910649061203003
    3. 'if' → logprob: -2.535649061203003
    4. ' if' → logprob: -3.035649061203003
    5. 'step' → logprob: -3.910649061203003
    6. ' ' → logprob: -4.785649299621582
    7. ' step' → logprob: -4.910649299621582
    8. '                   ' → logprob: -5.285649299621582
    9. '                           ' → logprob: -5.660649299621582
    10. '                       ' → logprob: -5.660649299621582

Token 540: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24824321269989014
    2. ':' → logprob: -2.7482433319091797
    3. ' if' → logprob: -3.3732433319091797
    4. 'and' → logprob: -3.7482433319091797
    5. ' or' → logprob: -3.7482433319091797
    6. '                       ' → logprob: -3.9982433319091797
    7. '                   ' → logprob: -3.9982433319091797
    8. ',' → logprob: -5.37324333190918
    9. ' ' → logprob: -5.49824333190918
    10. '                           ' → logprob: -5.62324333190918

Token 541: ' we' (ID: 581)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.14582353830337524
    2. ' num' → logprob: -2.0208234786987305
    3. 'nc' → logprob: -6.5208234786987305
    4. 'next' → logprob: -8.27082347869873
    5. 'the' → logprob: -8.52082347869873
    6. ' nc' → logprob: -8.52082347869873
    7. 'n' → logprob: -8.77082347869873
    8. ' the' → logprob: -8.89582347869873
    9. '(num' → logprob: -9.02082347869873
    10. 'we' → logprob: -9.14582347869873

Token 542: ' stand' (ID: 3182)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7829158902168274
    2. ' !=' → logprob: -2.6579158306121826
    3. '+' → logprob: -2.7829158306121826
    4. 'continue' → logprob: -3.0329158306121826
    5. ' ==' → logprob: -3.2829158306121826
    6. ' not' → logprob: -3.2829158306121826
    7. '==' → logprob: -3.4079158306121826
    8. ' do' → logprob: -3.5329158306121826
    9. '<n' → logprob: -3.9079158306121826
    10. ' can' → logprob: -4.032916069030762

Token 543: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3281862139701843
    2. ')' → logprob: -2.328186273574829
    3. 'on' → logprob: -3.328186273574829
    4. '=' → logprob: -3.328186273574829
    5. ' next' → logprob: -3.328186273574829
    6. ' )' → logprob: -4.45318603515625
    7. ' in' → logprob: -4.70318603515625
    8. 'n' → logprob: -4.95318603515625
    9. ' at' → logprob: -5.07818603515625
    10. '+' → logprob: -5.20318603515625

Token 544: ' it' (ID: 480)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4185834228992462
    2. 'the' → logprob: -1.6685833930969238
    3. ' that' → logprob: -3.043583393096924
    4. 'nc' → logprob: -3.793583393096924
    5. ' nc' → logprob: -3.918583393096924
    6. 'num' → logprob: -4.543583393096924
    7. ' a' → logprob: -4.668583393096924
    8. 'that' → logprob: -4.668583393096924
    9. ' next' → logprob: -4.918583393096924
    10. ' n' → logprob: -5.293583393096924

Token 545: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6865051984786987
    2. '                       ' → logprob: -1.6865051984786987
    3. '                   ' → logprob: -2.1865053176879883
    4. ':' → logprob: -2.3115053176879883
    5. ':
' → logprob: -3.5615053176879883
    6. ' ' → logprob: -4.186505317687988
    7. 'and' → logprob: -4.311505317687988
    8. '                           ' → logprob: -4.936505317687988
    9. '                    ' → logprob: -4.936505317687988
    10. ',' → logprob: -5.311505317687988

Token 546: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34482723474502563
    2. '                       ' → logprob: -1.5948271751403809
    3. ' and' → logprob: -2.969827175140381
    4. ':' → logprob: -4.594827175140381
    5. '                           ' → logprob: -4.969827175140381
    6. ',' → logprob: -5.219827175140381
    7. '                    ' → logprob: -5.844827175140381
    8. '.' → logprob: -5.844827175140381
    9. 'and' → logprob: -6.219827175140381
    10. '<|end|>' → logprob: -6.969827175140381

Token 547: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8109329342842102
    2. 'if' → logprob: -1.0609328746795654
    3. ' if' → logprob: -1.6859328746795654
    4. '                           ' → logprob: -3.8109328746795654
    5. '                               ' → logprob: -7.4359331130981445
    6. '                   ' → logprob: -7.4359331130981445
    7. 'continue' → logprob: -8.685933113098145
    8. '```' → logprob: -8.685933113098145
    9. ' continue' → logprob: -8.935933113098145
    10. '                        
' → logprob: -9.685933113098145

Token 548: ' so' (ID: 813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02889823727309704
    2. ' if' → logprob: -4.278898239135742
    3. '                       ' → logprob: -4.278898239135742
    4. 'continue' → logprob: -7.903898239135742
    5. '                   ' → logprob: -8.153898239135742
    6. ' continue' → logprob: -10.278898239135742
    7. '                           ' → logprob: -10.528898239135742
    8. '                        
' → logprob: -10.653898239135742
    9. '
' → logprob: -12.278898239135742
    10. '           ' → logprob: -12.653898239135742

Token 549: ' here' (ID: 2105)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06173538789153099
    2. '                       ' → logprob: -3.6867353916168213
    3. 'continue' → logprob: -3.9367353916168213
    4. ' if' → logprob: -4.686735153198242
    5. '                           ' → logprob: -5.436735153198242
    6. ' continue' → logprob: -6.811735153198242
    7. '
' → logprob: -8.061735153198242
    8. '                   ' → logprob: -9.436735153198242
    9. '#' → logprob: -9.561735153198242
    10. '                               ' → logprob: -9.686735153198242

Token 550: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3558637201786041
    2. 'if' → logprob: -1.6058636903762817
    3. ' if' → logprob: -2.9808638095855713
    4. 'and' → logprob: -4.105863571166992
    5. ' and' → logprob: -4.730863571166992
    6. '                           ' → logprob: -4.730863571166992
    7. ':' → logprob: -5.105863571166992
    8. '                   ' → logprob: -5.730863571166992
    9. ',' → logprob: -6.980863571166992
    10. 'continue' → logprob: -7.480863571166992

Token 551: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0015466450713574886
    2. ' if' → logprob: -6.626546859741211
    3. '                       ' → logprob: -9.001546859741211
    4. 'continue' → logprob: -9.376546859741211
    5. '                           ' → logprob: -11.751546859741211
    6. '                   ' → logprob: -13.376546859741211
    7. ' continue' → logprob: -13.501546859741211
    8. '#' → logprob: -14.126546859741211
    9. '
' → logprob: -14.251546859741211
    10. '   ' → logprob: -14.876546859741211

Token 552: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6563723683357239
    2. 'not' → logprob: -0.7813723683357239
    3. 'if' → logprob: -4.031372547149658
    4. 'continue' → logprob: -5.406372547149658
    5. 'n't' → logprob: -8.2813720703125
    6. ' continue' → logprob: -8.2813720703125
    7. 'only' → logprob: -8.7813720703125
    8. ' if' → logprob: -9.0313720703125
    9. ' be' → logprob: -9.1563720703125
    10. ' only' → logprob: -9.4063720703125

Token 553: ' enter' (ID: 5747)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -1.4989399909973145
    2. 'n' → logprob: -1.8739399909973145
    3. 'nc' → logprob: -2.4989399909973145
    4. 'nx' → logprob: -2.4989399909973145
    5. 'enter' → logprob: -2.8739399909973145
    6. 'if' → logprob: -2.9989399909973145
    7. 'move' → logprob: -3.1239399909973145
    8. '(n' → logprob: -3.2489399909973145
    9. ' move' → logprob: -3.4989399909973145
    10. ' enter' → logprob: -3.7489399909973145

Token 554: ' seal' (ID: 30803)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2330428957939148
    2. 'if' → logprob: -1.9830429553985596
    3. ' nx' → logprob: -3.8580429553985596
    4. '(nx' → logprob: -4.7330427169799805
    5. '(n' → logprob: -4.9830427169799805
    6. ' nc' → logprob: -5.3580427169799805
    7. 'nx' → logprob: -5.6080427169799805
    8. 'nc' → logprob: -5.6080427169799805
    9. ' num' → logprob: -5.7330427169799805
    10. ' n' → logprob: -5.8580427169799805

Token 555: ' number' (ID: 2086)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6502119302749634
    2. ' ' → logprob: -1.6502119302749634
    3. ' +' → logprob: -1.9002119302749634
    4. ' if' → logprob: -2.275211811065674
    5. '_' → logprob: -2.650211811065674
    6. ' or' → logprob: -3.025211811065674
    7. ' _' → logprob: -3.025211811065674
    8. '                       ' → logprob: -3.150211811065674
    9. ' and' → logprob: -3.525211811065674
    10. ')' → logprob: -4.150211811065674

Token 556: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.0123271942138672
    2. '>' → logprob: -1.5123271942138672
    3. ' nx' → logprob: -2.262327194213867
    4. ' n' → logprob: -2.387327194213867
    5. 's' → logprob: -2.762327194213867
    6. ' +' → logprob: -3.637327194213867
    7. ' if' → logprob: -4.012327194213867
    8. '+' → logprob: -4.137327194213867
    9. ' ' → logprob: -4.387327194213867
    10. ' or' → logprob: -4.387327194213867

Token 557: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5874582529067993
    2. 'step' → logprob: -0.8374582529067993
    3. ' n' → logprob: -4.83745813369751
    4. 'n' → logprob: -5.71245813369751
    5. '(step' → logprob: -8.712458610534668
    6. ' (' → logprob: -10.837458610534668
    7. '	step' → logprob: -12.212458610534668
    8. '   ' → logprob: -12.212458610534668
    9. '```' → logprob: -12.337458610534668
    10. ' next' → logprob: -12.587458610534668

Token 558: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20732375979423523
    2. ' +' → logprob: -1.7073237895965576
    3. ' or' → logprob: -5.5823235511779785
    4. '                       ' → logprob: -6.3323235511779785
    5. ' and' → logprob: -8.707324028015137
    6. '                   ' → logprob: -9.707324028015137
    7. '1' → logprob: -10.582324028015137
    8. ':' → logprob: -10.832324028015137
    9. '                           ' → logprob: -10.957324028015137
    10. '                               ' → logprob: -11.082324028015137

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.790129555156454e-05
    2. ' ' → logprob: -9.625067710876465
    3. '0' → logprob: -14.500067710876465
    4. '+' → logprob: -14.500067710876465
    5. '2' → logprob: -14.875067710876465
    6. '```' → logprob: -15.875067710876465
    7. '<|end|>' → logprob: -16.00006866455078
    8. ',' → logprob: -17.37506866455078
    9. '[' → logprob: -17.68756866455078
    10. '.' → logprob: -18.12506866455078

Token 560: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3755204975605011
    2. '                   ' → logprob: -1.6255204677581787
    3. '                       ' → logprob: -2.5005204677581787
    4. ':' → logprob: -4.750520706176758
    5. ':
' → logprob: -5.000520706176758
    6. '                    ' → logprob: -5.125520706176758
    7. 'and' → logprob: -5.500520706176758
    8. '                           ' → logprob: -6.875520706176758
    9. '                        
' → logprob: -6.875520706176758
    10. ',' → logprob: -7.000520706176758

Token 561: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22250211238861084
    2. ' and' → logprob: -1.7225021123886108
    3. '                       ' → logprob: -4.0975022315979
    4. 'and' → logprob: -6.3475022315979
    5. '               ' → logprob: -7.3475022315979
    6. '                    ' → logprob: -7.7225022315979
    7. '                           ' → logprob: -8.222501754760742
    8. '           ' → logprob: -8.347501754760742
    9. '                    
' → logprob: -8.847501754760742
    10. '                        
' → logprob: -9.222501754760742

Token 562: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.89495450258255
    2. 'if' (adapté à ' if') → logprob: -1.0199544429779053
    3. ' if' → logprob: -1.5199544429779053
    4. '                       ' → logprob: -4.519954681396484
    5. '   ' → logprob: -8.144954681396484
    6. '                           ' → logprob: -8.519954681396484
    7. '               ' → logprob: -8.644954681396484
    8. '           ' → logprob: -8.894954681396484
    9. '                    ' → logprob: -9.519954681396484
    10. '       ' → logprob: -9.519954681396484

Token 563: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -4.246537173457909e-06
    2. ' num' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.000003814697266
    4. '(num' → logprob: -19.000003814697266
    5. ' ' → logprob: -19.750003814697266
    6. '  ' → logprob: -20.250003814697266
    7. '	num' → logprob: -20.750003814697266
    8. 'int' → logprob: -21.750003814697266
    9. '[num' → logprob: -22.625003814697266
    10. 'not' → logprob: -22.625003814697266

Token 564: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06328368186950684
    2. '>' → logprob: -2.813283681869507
    3. ' <=' → logprob: -6.688283920288086
    4. '<=' → logprob: -9.813283920288086
    5. ' ' → logprob: -12.563283920288086
    6. '-' → logprob: -12.688283920288086
    7. ' >
' → logprob: -13.063283920288086
    8. ')' → logprob: -13.563283920288086
    9. ' -' → logprob: -13.938283920288086
    10. '">' → logprob: -14.188283920288086

Token 565: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.07904092967510223
    2. ' step' → logprob: -2.579041004180908
    3. ' n' → logprob: -9.45404052734375
    4. 'n' → logprob: -9.82904052734375
    5. '(step' → logprob: -11.45404052734375
    6. '   ' → logprob: -12.07904052734375
    7. '	step' → logprob: -13.07904052734375
    8. ' ' → logprob: -15.32904052734375
    9. ' (' → logprob: -15.57904052734375
    10. '_step' → logprob: -17.45404052734375

Token 566: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132656216621399
    2. ' +' → logprob: -1.3132655620574951
    3. '1' → logprob: -13.438265800476074
    4. '   ' → logprob: -14.313265800476074
    5. '＋' → logprob: -14.688265800476074
    6. ' plus' → logprob: -15.063265800476074
    7. ' ' → logprob: -15.188265800476074
    8. '+
' → logprob: -15.438265800476074
    9. '()+' → logprob: -15.938265800476074
    10. ' +
' → logprob: -16.063264846801758

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.125032424926758
    4. '<|end|>' → logprob: -16.125032424926758
    5. '```' → logprob: -16.750032424926758
    6. '2' → logprob: -17.625032424926758
    7. '  ' → logprob: -17.625032424926758
    8. '+' → logprob: -17.812532424926758
    9. '0' → logprob: -17.875032424926758
    10. '
' → logprob: -18.125032424926758

Token 568: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5257812142372131
    2. ':' → logprob: -0.9007812142372131
    3. '                       ' → logprob: -6.650781154632568
    4. '                           ' → logprob: -7.025781154632568
    5. ':return' → logprob: -8.900781631469727
    6. '):
' → logprob: -9.150781631469727
    7. ' or' → logprob: -9.400781631469727
    8. ' :
' → logprob: -10.400781631469727
    9. '                   ' → logprob: -10.900781631469727
    10. ':
' → logprob: -11.025781631469727

Token 569: '                           ' (ID: 1686)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04159686714410782
    2. '                           ' → logprob: -3.7915968894958496
    3. ' continue' → logprob: -4.54159688949585
    4. ':' → logprob: -5.16659688949585
    5. 'continue' → logprob: -6.66659688949585
    6. '                               ' → logprob: -8.291596412658691
    7. '                   ' → logprob: -9.041596412658691
    8. ':
' → logprob: -9.041596412658691
    9. '	continue' → logprob: -10.541596412658691
    10. ' or' → logprob: -11.916596412658691

Token 570: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.02699187584221363
    2. ' continue' → logprob: -4.026991844177246
    3. '                           ' → logprob: -5.026991844177246
    4. '                       ' → logprob: -6.901991844177246
    5. '                               ' → logprob: -6.901991844177246
    6. '	continue' → logprob: -8.776991844177246
    7. '   ' → logprob: -9.776991844177246
    8. '                   ' → logprob: -11.776991844177246
    9. '                                   ' → logprob: -12.151991844177246
    10. '```' → logprob: -12.401991844177246

Token 571: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.045049626380205154
    2. '                       ' → logprob: -3.7950496673583984
    3. '```' → logprob: -4.795049667358398
    4. '                        
' → logprob: -5.295049667358398
    5. '                    
' → logprob: -6.045049667358398
    6. '               ' → logprob: -6.795049667358398
    7. 'n' → logprob: -6.920049667358398
    8. '<|end|>' → logprob: -7.045049667358398
    9. '                           ' → logprob: -7.545049667358398
    10. '
' → logprob: -7.920049667358398

Token 572: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05465848743915558
    2. '                       ' → logprob: -3.0546584129333496
    3. '               ' → logprob: -6.67965841293335
    4. '```' → logprob: -6.92965841293335
    5. '                           ' → logprob: -7.05465841293335
    6. '                        
' → logprob: -7.17965841293335
    7. '<|end|>' → logprob: -7.42965841293335
    8. '                    
' → logprob: -7.80465841293335
    9. '                    ' → logprob: -8.179658889770508
    10. ')' → logprob: -9.179658889770508

Token 573: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0044666738249361515
    2. 'if' → logprob: -6.254466533660889
    3. ' if' → logprob: -7.254466533660889
    4. '               ' → logprob: -7.629466533660889
    5. '   ' → logprob: -8.629467010498047
    6. '                    ' → logprob: -8.629467010498047
    7. '           ' → logprob: -8.754467010498047
    8. '```' → logprob: -8.879467010498047
    9. '                    
' → logprob: -9.004467010498047
    10. '				' → logprob: -9.004467010498047

Token 574: ' Else' (ID: 42978)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02355257049202919
    2. '                   ' → logprob: -4.148552417755127
    3. ' if' → logprob: -4.898552417755127
    4. '                    
' → logprob: -11.398552894592285
    5. 'new' → logprob: -12.398552894592285
    6. '               ' → logprob: -12.398552894592285
    7. 'next' → logprob: -12.523552894592285
    8. '   ' → logprob: -13.398552894592285
    9. '                    ' → logprob: -13.773552894592285
    10. '#' → logprob: -13.773552894592285

Token 575: ' ok' (ID: 4763)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7444428205490112
    2. '                   ' → logprob: -0.9944428205490112
    3. 'if' → logprob: -1.8694428205490112
    4. '               ' → logprob: -8.2444429397583
    5. '                    
' → logprob: -8.3694429397583
    6. '           ' → logprob: -9.6194429397583
    7. ',' → logprob: -9.7444429397583
    8. ' elif' → logprob: -10.3694429397583
    9. '                    ' → logprob: -10.6194429397583
    10. 'elif' → logprob: -10.7444429397583

Token 576: ' to' (ID: 316)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04851321876049042
    2. '                    
' → logprob: -3.798513174057007
    3. ' if' → logprob: -4.673513412475586
    4. '                    ' → logprob: -6.048513412475586
    5. ' and' → logprob: -6.173513412475586
    6. '               ' → logprob: -6.298513412475586
    7. ',' → logprob: -6.298513412475586
    8. ' 
' → logprob: -6.923513412475586
    9. ' ' → logprob: -7.048513412475586
    10. '                        
' → logprob: -7.298513412475586

Token 577: ' move' (ID: 5275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2424291372299194
    2. 'move' → logprob: -1.3674291372299194
    3. 'enqueue' → logprob: -1.6174291372299194
    4. 'enter' → logprob: -2.367429256439209
    5. 'pass' → logprob: -3.117429256439209
    6. 'visit' → logprob: -3.242429256439209
    7. 'append' → logprob: -3.367429256439209
    8. 'add' → logprob: -4.617429256439209
    9. '                   ' → logprob: -4.742429256439209
    10. 'q' → logprob: -5.367429256439209

Token 578: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009094370761886239
    2. '                    
' → logprob: -7.750909328460693
    3. '               ' → logprob: -8.625909805297852
    4. '           ' → logprob: -9.250909805297852
    5. ' if' → logprob: -10.000909805297852
    6. '                    ' → logprob: -10.625909805297852
    7. '       ' → logprob: -10.750909805297852
    8. '   ' → logprob: -11.125909805297852
    9. '                  ' → logprob: -11.250909805297852
    10. ',' → logprob: -11.250909805297852

Token 579: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023783810902386904
    2. '               ' → logprob: -6.752378463745117
    3. '           ' → logprob: -8.127378463745117
    4. '				' → logprob: -8.752378463745117
    5. '       ' → logprob: -9.002378463745117
    6. '                    
' → logprob: -9.002378463745117
    7. '	               ' → logprob: -9.502378463745117
    8. '   ' → logprob: -9.627378463745117
    9. '		           ' → logprob: -9.627378463745117
    10. '                    ' → logprob: -9.877378463745117

Token 580: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5651950836181641
    2. '                   ' → logprob: -1.190195083618164
    3. 'if' (adapté à ' if') → logprob: -2.065195083618164
    4. ' new' → logprob: -8.440195083618164
    5. '               ' → logprob: -9.190195083618164
    6. '                    ' → logprob: -9.315195083618164
    7. 'n' → logprob: -9.440195083618164
    8. ' next' → logprob: -9.815195083618164
    9. '   ' → logprob: -9.815195083618164
    10. '                    
' → logprob: -9.940195083618164

Token 581: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06222613900899887
    2. ' not' → logprob: -2.8122260570526123
    3. 'visited' → logprob: -8.937226295471191
    4. 'n' → logprob: -9.937226295471191
    5. '(not' → logprob: -9.937226295471191
    6. '	not' → logprob: -11.937226295471191
    7. 'nc' → logprob: -12.062226295471191
    8. '   ' → logprob: -12.562226295471191
    9. ' visited' → logprob: -12.812226295471191
    10. '                   ' → logprob: -12.937226295471191

Token 582: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.004078401252627373
    2. ' visited' → logprob: -5.504078388214111
    3. 'Visited' → logprob: -18.754077911376953
    4. 'visit' → logprob: -20.129077911376953
    5. '   ' → logprob: -21.504077911376953
    6. 'visible' → logprob: -21.504077911376953
    7. 'vis' → logprob: -22.754077911376953
    8. 'ed' → logprob: -23.629077911376953
    9. ' ' → logprob: -23.629077911376953
    10. 'visi' → logprob: -23.629077911376953

Token 583: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.25
    3. '```' → logprob: -16.5
    4. '   ' → logprob: -18.375
    5. 'ny' → logprob: -18.5
    6. '
' → logprob: -18.625
    7. '[
' → logprob: -19.5
    8. '                   ' → logprob: -19.75
    9. '[n' → logprob: -19.75
    10. '       ' → logprob: -20.125

Token 584: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -7.553032628493384e-05
    2. ' ny' → logprob: -9.750075340270996
    3. '[' → logprob: -11.000075340270996
    4. 'Ny' → logprob: -16.125076293945312
    5. 'nyi' → logprob: -16.375076293945312
    6. 'n' → logprob: -16.500076293945312
    7. 'y' → logprob: -16.750076293945312
    8. 'yn' → logprob: -17.875076293945312
    9. ''ny' → logprob: -18.375076293945312
    10. '```' → logprob: -18.375076293945312

Token 585: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00015550498210359365
    2. '[' → logprob: -8.875155448913574
    3. ']' → logprob: -11.750155448913574
    4. '"][' → logprob: -12.250155448913574
    5. ''][' → logprob: -13.125155448913574
    6. '[n' → logprob: -15.125155448913574
    7. ']][' → logprob: -15.500155448913574
    8. '<|end|>' → logprob: -16.25015640258789
    9. ' ][' → logprob: -16.37515640258789
    10. '()][' → logprob: -16.75015640258789

Token 586: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0001105762057704851
    2. '(nx' → logprob: -10.250110626220703
    3. ' nx' → logprob: -10.375110626220703
    4. 'n' → logprob: -10.750110626220703
    5. 'nz' → logprob: -11.375110626220703
    6. '[n' → logprob: -11.750110626220703
    7. 'ny' → logprob: -13.375110626220703
    8. 'step' → logprob: -14.875110626220703
    9. '][' → logprob: -15.125110626220703
    10. 'nc' → logprob: -15.625110626220703

Token 587: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023563282564282417
    2. '[n' → logprob: -3.7735633850097656
    3. '[' → logprob: -8.148563385009766
    4. ']' → logprob: -11.398563385009766
    5. 'n' → logprob: -11.773563385009766
    6. ']][' → logprob: -13.523563385009766
    7. '```' → logprob: -13.648563385009766
    8. '[next' → logprob: -13.773563385009766
    9. '   ' → logprob: -13.898563385009766
    10. '[num' → logprob: -14.398563385009766

Token 588: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00026217024424113333
    2. 'step' → logprob: -8.250262260437012
    3. ' n' → logprob: -14.375262260437012
    4. '   ' → logprob: -16.250261306762695
    5. '```' → logprob: -17.500261306762695
    6. 'nst' → logprob: -18.000261306762695
    7. ' step' → logprob: -18.000261306762695
    8. '	n' → logprob: -18.000261306762695
    9. 'ns' → logprob: -18.125261306762695
    10. 'nt' → logprob: -18.125261306762695

Token 589: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0003396343090571463
    2. 'tep' → logprob: -8.00033950805664
    3. ' step' → logprob: -13.25033950805664
    4. '_step' → logprob: -13.75033950805664
    5. 'st' → logprob: -14.75033950805664
    6. 't' → logprob: -15.12533950805664
    7. '-step' → logprob: -15.87533950805664
    8. '.step' → logprob: -16.25033950805664
    9. 'te' → logprob: -16.37533950805664
    10. '(step' → logprob: -16.37533950805664

Token 590: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.16159291565418243
    2. ']:
' → logprob: -1.911592960357666
    3. ']' → logprob: -6.786592960357666
    4. ']:
' → logprob: -8.411592483520508
    5. ']:

' → logprob: -11.536592483520508
    6. ' ]' → logprob: -12.411592483520508
    7. ':' → logprob: -14.286592483520508
    8. ']:


' → logprob: -14.786592483520508
    9. '']:' → logprob: -15.036592483520508
    10. '"]:' → logprob: -15.286592483520508

Token 591: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002264328533783555
    2. '                               ' → logprob: -6.627264499664307
    3. '                           ' → logprob: -7.752264499664307
    4. '                        
' → logprob: -9.002264022827148
    5. '                   ' → logprob: -9.127264022827148
    6. '[' → logprob: -9.752264022827148
    7. '```' → logprob: -9.877264022827148
    8. ' visited' → logprob: -10.377264022827148
    9. '               ' → logprob: -10.502264022827148
    10. '<|end|>' → logprob: -10.877264022827148

Token 592: ' visited' (ID: 18416)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6222049593925476
    2. '                       ' → logprob: -0.8722049593925476
    3. ' q' → logprob: -3.4972050189971924
    4. '                               ' → logprob: -4.872204780578613
    5. 'visited' (adapté à ' visited') → logprob: -6.372204780578613
    6. ' visited' → logprob: -6.747204780578613
    7. '           ' → logprob: -6.997204780578613
    8. 'q' → logprob: -6.997204780578613
    9. '```' → logprob: -7.497204780578613
    10. '                   ' → logprob: -7.497204780578613

Token 593: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -14.875
    3. '                       ' → logprob: -17.375
    4. '][' → logprob: -17.75
    5. ')[' → logprob: -18.25
    6. '                        ' → logprob: -19.0
    7. ' [' → logprob: -19.125
    8. '       ' → logprob: -19.125
    9. '                           ' → logprob: -19.375
    10. '                   ' → logprob: -19.75

Token 594: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0002263046189909801
    2. '[' → logprob: -8.625226020812988
    3. ' ny' → logprob: -10.000226020812988
    4. 'y' → logprob: -14.625226020812988
    5. 'n' → logprob: -15.125226020812988
    6. 'nyi' → logprob: -15.125226020812988
    7. 'ni' → logprob: -16.000226974487305
    8. 'Ny' → logprob: -16.875226974487305
    9. '   ' → logprob: -17.875226974487305
    10. '][' → logprob: -18.000226974487305

Token 595: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.038058821111917496
    2. '[' → logprob: -3.2880587577819824
    3. ']' → logprob: -12.03805923461914
    4. ' ][' → logprob: -12.91305923461914
    5. 'ny' → logprob: -13.16305923461914
    6. '       ' → logprob: -13.41305923461914
    7. '   ' → logprob: -13.78805923461914
    8. ''][' → logprob: -14.28805923461914
    9. '```' → logprob: -14.28805923461914
    10. '"][' → logprob: -14.41305923461914

Token 596: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.12716129422187805
    2. 'ny' → logprob: -2.1271612644195557
    3. 'n' → logprob: -9.752161026000977
    4. '(nx' → logprob: -9.877161026000977
    5. ' nx' → logprob: -10.127161026000977
    6. ' ny' → logprob: -10.377161026000977
    7. 'nz' → logprob: -10.752161026000977
    8. '[n' → logprob: -11.752161026000977
    9. 'x' → logprob: -11.877161026000977
    10. '[' → logprob: -12.377161026000977

Token 597: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16032911837100983
    2. '[' → logprob: -1.9103291034698486
    3. '[n' → logprob: -10.28532886505127
    4. ''][' → logprob: -10.53532886505127
    5. '"][' → logprob: -11.28532886505127
    6. ']][' → logprob: -11.53532886505127
    7. ']' → logprob: -11.91032886505127
    8. '                       ' → logprob: -12.28532886505127
    9. '```' → logprob: -12.53532886505127
    10. '[][' → logprob: -13.28532886505127

Token 598: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0017088521271944046
    2. 'ny' → logprob: -6.376708984375
    3. 'ns' → logprob: -14.001708984375
    4. 'nx' → logprob: -14.251708984375
    5. '           ' → logprob: -14.626708984375
    6. '       ' → logprob: -14.751708984375
    7. '[n' → logprob: -14.751708984375
    8. '                   ' → logprob: -14.876708984375
    9. '[' → logprob: -14.876708984375
    10. ' n' → logprob: -15.001708984375

Token 599: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -3.0948158382670954e-05
    2. 'tep' → logprob: -10.875030517578125
    3. 'Step' → logprob: -12.125030517578125
    4. 'ste' → logprob: -12.500030517578125
    5. '_step' → logprob: -14.000030517578125
    6. 'st' → logprob: -14.875030517578125
    7. 'STEP' → logprob: -14.875030517578125
    8. ' step' → logprob: -15.000030517578125
    9. '-step' → logprob: -15.375030517578125
    10. '][' → logprob: -15.875030517578125

Token 600: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00040183294913731515
    2. ']=' → logprob: -7.875401973724365
    3. '=' → logprob: -11.375401496887207
    4. ' ]' → logprob: -11.625401496887207
    5. ' =' → logprob: -13.750401496887207
    6. '=True' → logprob: -16.125402450561523
    7. ')' → logprob: -16.625402450561523
    8. ']
' → logprob: -18.250402450561523
    9. '']' → logprob: -18.625402450561523
    10. '`]' → logprob: -19.000402450561523

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07919072359800339
    2. ' =' → logprob: -2.579190731048584
    3. ']' → logprob: -8.829190254211426
    4. '=True' → logprob: -8.954190254211426
    5. ']=' → logprob: -10.704190254211426
    6. '=False' → logprob: -13.079190254211426
    7. ')' → logprob: -15.204190254211426
    8. ',' → logprob: -15.954190254211426
    9. '[' → logprob: -16.079191207885742
    10. '=true' → logprob: -16.454191207885742

Token 602: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.836499985889532e-05
    2. ' True' → logprob: -9.7500581741333
    3. '(True' → logprob: -20.625059127807617
    4. '=True' → logprob: -20.875059127807617
    5. '   ' → logprob: -21.000059127807617
    6. 'true' → logprob: -21.500059127807617
    7. 'Tr' → logprob: -21.875059127807617
    8. 'T' → logprob: -23.125059127807617
    9. '1' → logprob: -23.500059127807617
    10. '
' → logprob: -23.500059127807617

Token 603: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.012534607201814651
    2. '<|end|>' → logprob: -5.2625346183776855
    3. '                        
' → logprob: -5.7625346183776855
    4. '
' → logprob: -6.3875346183776855
    5. ' q' → logprob: -7.6375346183776855
    6. '					' → logprob: -8.262534141540527
    7. 'q' → logprob: -8.512534141540527
    8. ',q' → logprob: -8.637534141540527
    9. ',' → logprob: -8.887534141540527
    10. '						
' → logprob: -8.887534141540527

Token 604: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002441766206175089
    2. '                        
' → logprob: -7.377441883087158
    3. '					' → logprob: -7.877441883087158
    4. ' q' → logprob: -7.877441883087158
    5. '               ' → logprob: -8.50244140625
    6. '```' → logprob: -8.50244140625
    7. '                   ' → logprob: -9.12744140625
    8. '                        ' → logprob: -9.50244140625
    9. '           ' → logprob: -10.00244140625
    10. 'q' → logprob: -10.12744140625

Token 605: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -5.0020742492051795e-05
    2. ' q' → logprob: -10.000049591064453
    3. '                       ' → logprob: -12.625049591064453
    4. '                           ' → logprob: -13.625049591064453
    5. '```' → logprob: -16.875049591064453
    6. '                               ' → logprob: -17.375049591064453
    7. '                   ' → logprob: -17.625049591064453
    8. '   ' → logprob: -17.750049591064453
    9. '	q' → logprob: -18.500049591064453
    10. 'qx' → logprob: -19.375049591064453

Token 606: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.106736039626412e-05
    2. '.' → logprob: -10.500031471252441
    3. '.extend' → logprob: -13.000031471252441
    4. '.app' → logprob: -14.250031471252441
    5. 'append' → logprob: -16.250030517578125
    6. '.enqueue' → logprob: -16.250030517578125
    7. ').' → logprob: -16.625030517578125
    8. '.Append' → logprob: -16.750030517578125
    9. '```' → logprob: -17.125030517578125
    10. '.p' → logprob: -17.125030517578125

Token 607: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003024537581950426
    2. '(' → logprob: -8.1253023147583
    3. '(n' → logprob: -12.0003023147583
    4. ' ((' → logprob: -16.250303268432617
    5. '(
' → logprob: -17.625303268432617
    6. ' (' → logprob: -18.000303268432617
    7. '(((' → logprob: -18.000303268432617
    8. '```' → logprob: -18.625303268432617
    9. '[(' → logprob: -18.875303268432617
    10. ' ' → logprob: -18.875303268432617

Token 608: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -6.2729995988775045e-06
    2. ' ny' → logprob: -12.000006675720215
    3. 'nyi' → logprob: -17.6250057220459
    4. 'n' → logprob: -18.0000057220459
    5. '   ' → logprob: -18.1250057220459
    6. '
' → logprob: -19.1250057220459
    7. 'nyt' → logprob: -19.2500057220459
    8. ''ny' → logprob: -20.1250057220459
    9. 'nye' → logprob: -20.2500057220459
    10. '```' → logprob: -20.3750057220459

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01682496815919876
    2. ',n' → logprob: -4.266825199127197
    3. '[n' → logprob: -6.516825199127197
    4. '[' → logprob: -7.016825199127197
    5. ' ,' → logprob: -9.266824722290039
    6. '(nx' → logprob: -9.516824722290039
    7. '][' → logprob: -10.516824722290039
    8. 'ny' → logprob: -10.891824722290039
    9. ' ny' → logprob: -11.391824722290039
    10. 'nx' → logprob: -12.016824722290039

Token 610: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -7.743758760625497e-05
    2. ' nx' → logprob: -9.625077247619629
    3. '(nx' → logprob: -12.250077247619629
    4. 'n' → logprob: -12.500077247619629
    5. '   ' → logprob: -13.625077247619629
    6. '```' → logprob: -15.000077247619629
    7. 'Nx' → logprob: -15.125077247619629
    8. '
' → logprob: -15.875077247619629
    9. '     ' → logprob: -16.125078201293945
    10. '                   ' → logprob: -16.625078201293945

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007425647345371544
    2. ',n' → logprob: -7.250742435455322
    3. ' ,' → logprob: -10.62574291229248
    4. 'n' → logprob: -11.75074291229248
    5. ' n' → logprob: -15.37574291229248
    6. '),' → logprob: -15.87574291229248
    7. ',
' → logprob: -16.625741958618164
    8. '(n' → logprob: -16.625741958618164
    9. '```' → logprob: -18.500741958618164
    10. '[n' → logprob: -19.750741958618164

Token 612: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004890497075393796
    2. ' n' → logprob: -7.625489234924316
    3. '	n' → logprob: -15.375489234924316
    4. '                       ' → logprob: -15.500489234924316
    5. '                               ' → logprob: -15.500489234924316
    6. '                           ' → logprob: -15.625489234924316
    7. '   ' → logprob: -16.00048828125
    8. '                   ' → logprob: -16.37548828125
    9. ')n' → logprob: -17.00048828125
    10. '                        ' → logprob: -17.37548828125

Token 613: 'step' (ID: 17509)
  Prédit: 'step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -3.786196975852363e-05
    2. '_step' → logprob: -10.875038146972656
    3. 'ste' → logprob: -11.375038146972656
    4. 'st' → logprob: -12.875038146972656
    5. '-step' → logprob: -13.875038146972656
    6. 'stead' → logprob: -14.000038146972656
    7. 's' → logprob: -14.750038146972656
    8. 'Step' → logprob: -15.000038146972656
    9. 'steps' → logprob: -15.000038146972656
    10. ' step' → logprob: -15.125038146972656

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001308809849433601
    2. ' ,' → logprob: -6.876308917999268
    3. ',t' → logprob: -8.25130844116211
    4. '+' → logprob: -11.50130844116211
    5. 't' → logprob: -13.25130844116211
    6. '                       ' → logprob: -14.25130844116211
    7. ' +' → logprob: -14.50130844116211
    8. '                           ' → logprob: -14.75130844116211
    9. '                   ' → logprob: -14.75130844116211
    10. ' t' → logprob: -15.00130844116211

Token 615: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.836499985889532e-05
    2. ' t' → logprob: -9.7500581741333
    3. '`t' → logprob: -16.750059127807617
    4. '                   ' → logprob: -19.375059127807617
    5. '   ' → logprob: -20.125059127807617
    6. '	t' → logprob: -20.500059127807617
    7. '                           ' → logprob: -21.250059127807617
    8. '                       ' → logprob: -21.250059127807617
    9. '                               ' → logprob: -21.500059127807617
    10. '                                   ' → logprob: -21.875059127807617

Token 616: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043102685594931245
    2. ' +' → logprob: -7.750431060791016
    3. '1' → logprob: -15.500431060791016
    4. '+
' → logprob: -15.875431060791016
    5. '＋' → logprob: -18.000431060791016
    6. ')+' → logprob: -18.250431060791016
    7. '+s' → logprob: -19.625431060791016
    8. '+i' → logprob: -20.250431060791016
    9. ')' → logprob: -20.375431060791016
    10. '+t' → logprob: -20.625431060791016

Token 617: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -18.125
    4. ')' → logprob: -18.75
    5. '   ' → logprob: -19.0
    6. '<|end|>' → logprob: -20.5
    7. '１' → logprob: -20.875
    8. '-' → logprob: -21.0
    9. '۱' → logprob: -21.25
    10. '+' → logprob: -21.375

Token 618: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001254693343071267
    2. '))
' → logprob: -9.375125885009766
    3. ')' → logprob: -10.125125885009766
    4. ')))' → logprob: -14.875125885009766
    5. ' ))' → logprob: -15.875125885009766
    6. '                       ' → logprob: -17.625125885009766
    7. '))
' → logprob: -17.750125885009766
    8. ')
' → logprob: -18.125125885009766
    9. '))

' → logprob: -19.000125885009766
    10. '));' → logprob: -19.000125885009766

Token 619: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009797642007470131
    2. ' __' → logprob: -4.6347975730896
    3. 'name' → logprob: -10.634798049926758
    4. ''' → logprob: -11.634798049926758
    5. '___' → logprob: -12.634798049926758
    6. 'if' → logprob: -13.759798049926758
    7. '_name' → logprob: -14.134798049926758
    8. '"' → logprob: -14.259798049926758
    9. '/__' → logprob: -14.384798049926758
    10. '_' → logprob: -14.509798049926758

Token 621: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004378024954348803
    2. ' __' → logprob: -6.004377841949463
    3. ' ==' → logprob: -6.379377841949463
    4. '==' → logprob: -9.254378318786621
    5. '[' → logprob: -10.754378318786621
    6. '.__' → logprob: -11.004378318786621
    7. '_' → logprob: -11.504378318786621
    8. '__[' → logprob: -11.754378318786621
    9. '```' → logprob: -11.879378318786621
    10. '__.' → logprob: -11.879378318786621

Token 622: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0087516784551553e-05
    2. '__.__' → logprob: -12.00001049041748
    3. '==' → logprob: -12.75001049041748
    4. '__('' → logprob: -15.00001049041748
    5. '____' → logprob: -15.75001049041748
    6. '__[' → logprob: -16.500009536743164
    7. '=="' → logprob: -16.625009536743164
    8. '___' → logprob: -16.750009536743164
    9. '__["' → logprob: -16.750009536743164
    10. '__
' → logprob: -17.375009536743164

Token 623: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07514466345310211
    2. '==' → logprob: -2.8251447677612305
    3. ' ==' → logprob: -4.4501447677612305
    4. '=="' → logprob: -6.7001447677612305
    5. '=='' → logprob: -8.82514476776123
    6. '__.__' → logprob: -10.95014476776123
    7. '___' → logprob: -12.57514476776123
    8. '__('' → logprob: -13.20014476776123
    9. '```' → logprob: -13.45014476776123
    10. '==
' → logprob: -13.70014476776123

Token 624: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4740908145904541
    2. ''' → logprob: -0.9740908145904541
    3. ' "__' → logprob: -11.724090576171875
    4. '__' → logprob: -12.474090576171875
    5. ' '__' → logprob: -13.474090576171875
    6. ''"' → logprob: -16.474090576171875
    7. ''name' → logprob: -16.849090576171875
    8. '"name' → logprob: -16.849090576171875
    9. '"user' → logprob: -16.974090576171875
    10. '('__' → logprob: -17.474090576171875

Token 625: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.013550159521400928
    2. 'name' → logprob: -4.388550281524658
    3. '__' → logprob: -6.888550281524658
    4. 'm' → logprob: -11.6385498046875
    5. '__':
' → logprob: -11.6385498046875
    6. '_main' → logprob: -14.1385498046875
    7. 'if' → logprob: -14.5135498046875
    8. ''name' → logprob: -15.5135498046875
    9. '('__' → logprob: -15.7635498046875
    10. 'import' → logprob: -15.7635498046875

Token 626: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.10033498704433441
    2. '__' → logprob: -2.350334882736206
    3. '__:' → logprob: -9.475335121154785
    4. '__":
' → logprob: -9.975335121154785
    5. '__('' → logprob: -12.725335121154785
    6. '('__' → logprob: -15.100335121154785
    7. '_' → logprob: -15.225335121154785
    8. '__()
' → logprob: -15.350335121154785
    9. '':' → logprob: -15.475335121154785
    10. '__.' → logprob: -15.600335121154785

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07427285611629486
    2. 'solve' → logprob: -2.824272871017456
    3. ' solve' → logprob: -4.449272632598877
    4. '    
' → logprob: -8.199273109436035
    5. '.solve' → logprob: -8.574273109436035
    6. '```' → logprob: -10.074273109436035
    7. '	s' → logprob: -11.449273109436035
    8. '(s' → logprob: -12.574273109436035
    9. '<|end|>' → logprob: -12.574273109436035
    10. '
' → logprob: -12.699273109436035

Token 628: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -3.128163257315464e-07
    2. ' solve' → logprob: -15.25
    3. '.solve' → logprob: -18.75
    4. '   ' → logprob: -20.125
    5. 'resolve' → logprob: -20.5
    6. 'import' → logprob: -21.5
    7. 'save' → logprob: -22.25
    8. 'validate' → logprob: -23.5
    9. '```' → logprob: -24.25
    10. 'simulate' → logprob: -24.25

Token 629: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 627
Tokens correctement prédits (1ère position, stricte): 263
Tokens correctement prédits (1ère position, avec adaptation): 276
Tokens correctement prédits (top 10): 495
Précision stricte (1ère position): 41.95%
Précision adaptée (1ère position): 44.02%
Précision (top 10): 78.95%
================================================================================
