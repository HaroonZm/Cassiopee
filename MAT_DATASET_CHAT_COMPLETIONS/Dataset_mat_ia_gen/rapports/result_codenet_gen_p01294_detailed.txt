================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète pour le problème "For the Peace"
# Cette solution vérifie si les pays peuvent disposer leurs missiles dans l'ordre inverse de la liste donnée
# tout en maintenant la différence de potentiel (somme des capacités des missiles restants) entre le maximum
# et le minimum inférieure ou égale à d à chaque étape.

def main():
    import sys

    for line in sys.stdin:
        # Lecture de n (nombre de pays) et d (différence tolérée)
        n_d = line.strip()
        if not n_d:
            continue
        n, d = map(int, n_d.split())
        if n == 0 and d == 0:
            break  # Fin de la saisie

        countries = []
        total_missiles = 0
        # Lecture des données pour chaque pays
        for _ in range(n):
            data = sys.stdin.readline().strip().split()
            m = int(data[0])
            missiles = list(map(int, data[1:] ))
            # On stocke la liste dans l'ordre donné (du plus récent au plus ancien),
            # mais comme la destruction se fait du plus ancien au plus récent, on
            # inversera cette liste lors de traitement, ou on travaille directement en ordre inverse.
            # Pour simplification, on inverse la liste ici pour avoir la destruction dans l'ordre d'accès
            missiles.reverse()
            countries.append(missiles)
            total_missiles += m

        # Initialisation des potentiels : somme totale des missiles pour chaque pays
        potentials = [sum(c) for c in countries]

        # On itère le nombre maximal de missiles à détruire (maximum des mi)
        # Dans chaque étape, chaque pays est censé détruire un missile (si possible),
        # dans l'ordre du plus ancien (car la liste est inversée on prend en premier)
        # Après chaque étape, on vérifie la différence max-min des potentiels
        # Si elle > d, on imprime "No", sinon "Yes" si toutes les étapes passent.

        # On va détruire missile par missile pour chaque pays dans l'ordre inverse de production

        # La condition nous dit que la différence max-min ne dépasse pas d à aucun moment,
        # on vérifie donc à chaque étape.

        # Il faut gérer que certains pays ont moins de missiles que d'autres.
        # Le processus s'arrête quand tous les missiles sont détruits.

        # Pour simuler la destruction missile par missile dans l'ordre le plus ancien vers plus récent,
        # on détruit la première (index 0) valeur de la liste missiles[i] si possible.

        # Algorithme:
        # à chaque étape:
        #   pour chaque pays:
        #       si missiles restants:
        #           retirer le missile le plus ancien (le premier)
        #           diminuer le potentiel en conséquence
        #   calculer max et min de potentials
        #   si diff > d => print No et passer au dataset suivant

        max_missiles = max(len(c) for c in countries)
        possible = True

        for step in range(max_missiles):
            for i in range(n):
                if len(countries[i]) > 0:
                    missile_to_destroy = countries[i].pop(0)  # plus ancien missile
                    potentials[i] -= missile_to_destroy
            if max(potentials) - min(potentials) > d:
                possible = False
                break

        print("Yes" if possible else "No")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19659672677516937
    2. '```' → logprob: -2.321596622467041
    3. ' :' → logprob: -2.821596622467041
    4. '\n' → logprob: -4.696596622467041
    5. '#' → logprob: -5.196596622467041
    6. ' ```' → logprob: -6.821596622467041
    7. '\' → logprob: -7.071596622467041
    8. 'def' → logprob: -7.071596622467041
    9. '``' → logprob: -7.446596622467041
    10. '
' → logprob: -8.0715970993042

Token 4: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5980039834976196
    2. ' la' → logprob: -1.8480039834976196
    3. ' résoudre' → logprob: -2.47300386428833
    4. ' Python' → logprob: -3.22300386428833
    5. '#' → logprob: -3.47300386428833
    6. '```' → logprob: -3.59800386428833
    7. 'le' → logprob: -3.97300386428833
    8. ' l' → logprob: -4.22300386428833
    9. 'python' → logprob: -4.34800386428833
    10. 'l' → logprob: -4.47300386428833

Token 5: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.11268577724695206
    2. '#' → logprob: -3.3626856803894043
    3. ' problème' → logprob: -3.8626856803894043
    4. 'code' → logprob: -4.362685680389404
    5. 'proble' → logprob: -5.112685680389404
    6. '```' → logprob: -5.362685680389404
    7. ' code' → logprob: -5.487685680389404
    8. 'problem' → logprob: -5.862685680389404
    9. 'tri' → logprob: -5.987685680389404
    10. 'me' → logprob: -5.987685680389404

Token 6: ' "' (ID: 392)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7085992693901062
    2. '```' → logprob: -1.833599328994751
    3. ' ' → logprob: -2.208599328994751
    4. ':' → logprob: -2.458599328994751
    5. 's' → logprob: -3.208599328994751
    6. '#' → logprob: -3.833599328994751
    7. ' ```' → logprob: -4.083599090576172
    8. 'def' → logprob: -4.833599090576172
    9. ' #' → logprob: -4.958599090576172
    10. '

' → logprob: -4.958599090576172

Token 7: 'For' (ID: 2653)
  Prédit: 'Two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Two' → logprob: -2.698092460632324
    2. 'du' → logprob: -2.823092460632324
    3. ' du' → logprob: -2.823092460632324
    4. 'de' → logprob: -2.948092460632324
    5. ' des' → logprob: -3.010592460632324
    6. 'n' → logprob: -3.323092460632324
    7. 'max' → logprob: -3.385592460632324
    8. 's' → logprob: -3.448092460632324
    9. 'Deux' → logprob: -3.448092460632324
    10. 'def' → logprob: -3.510592460632324

Token 8: ' the' (ID: 290)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21922962367534637
    2. 't' → logprob: -2.8442296981811523
    3. 'm' → logprob: -3.3442296981811523
    4. 'i' → logprob: -3.8442296981811523
    5. 'tran' → logprob: -3.9692296981811523
    6. '```' → logprob: -4.469229698181152
    7. ' loop' → logprob: -4.844229698181152
    8. 'Each' → logprob: -5.469229698181152
    9. ' ' → logprob: -5.594229698181152
    10. ' t' → logprob: -5.719229698181152

Token 9: ' Peace' (ID: 38514)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7721077799797058
    2. ' given' → logprob: -2.0221078395843506
    3. ' input' → logprob: -2.5221078395843506
    4. ' Given' → logprob: -3.2721078395843506
    5. ' test' → logprob: -3.3971078395843506
    6. ' sum' → logprob: -3.7721078395843506
    7. ' problem' → logprob: -3.7721078395843506
    8. ' i' → logprob: -3.7721078395843506
    9. 'Given' → logprob: -4.0221076011657715
    10. 's' → logprob: -4.2721076011657715

Token 10: '"
' (ID: 1092)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.07706079632043839
    2. 'of' → logprob: -2.9520606994628906
    3. '```' → logprob: -4.952060699462891
    4. ' ' → logprob: -5.827060699462891
    5. '"' → logprob: -6.202060699462891
    6. 'ful' → logprob: -6.452060699462891
    7. ' de' → logprob: -6.702060699462891
    8. '_of' → logprob: -6.827060699462891
    9. '_' → logprob: -7.077060699462891
    10. 'Of' → logprob: -7.577060699462891

Token 11: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4461928606033325
    2. '```' → logprob: -1.9461928606033325
    3. 'def' → logprob: -2.696192741394043
    4. 's' → logprob: -3.446192741394043
    5. '#' → logprob: -3.696192741394043
    6. ' :' → logprob: -3.946192741394043
    7. '.' → logprob: -4.196192741394043
    8. 'n' → logprob: -4.571192741394043
    9. '\' → logprob: -4.821192741394043
    10. ''' → logprob: -4.946192741394043

Token 12: ' Cette' (ID: 27383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12294679880142212
    2. 'def' → logprob: -2.9979467391967773
    3. ' def' → logprob: -4.247946739196777
    4. ' ```' → logprob: -4.247946739196777
    5. ' #' → logprob: -4.372946739196777
    6. '#' → logprob: -4.997946739196777
    7. ' 

' → logprob: -5.997946739196777
    8. '```' → logprob: -6.122946739196777
    9. ' ' → logprob: -6.372946739196777
    10. ' de' → logprob: -6.622946739196777

Token 13: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.027082150802016258
    2. ' #' → logprob: -4.6520819664001465
    3. 'solution' → logprob: -5.5270819664001465
    4. '#' → logprob: -5.9020819664001465
    5. ' ' → logprob: -6.4020819664001465
    6. ' code' → logprob: -6.5270819664001465
    7. ' Solution' → logprob: -6.9020819664001465
    8. ' fonction' → logprob: -7.2770819664001465
    9. '_solution' → logprob: -7.2770819664001465
    10. ' function' → logprob: -7.4020819664001465

Token 14: ' vér' (ID: 42524)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6370278000831604
    2. '_' → logprob: -1.1370277404785156
    3. ' complète' → logprob: -2.6370277404785156
    4. ' s' → logprob: -3.8870277404785156
    5. ' est' → logprob: -4.137027740478516
    6. ' utilise' → logprob: -4.887027740478516
    7. ' consiste' → logprob: -5.512027740478516
    8. ' a' → logprob: -5.637027740478516
    9. ' propose' → logprob: -5.887027740478516
    10. ' _' → logprob: -5.887027740478516

Token 15: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00010103991371579468
    2. 'if' → logprob: -9.750101089477539
    3. 'ifié' → logprob: -11.125101089477539
    4. 'ifiée' → logprob: -11.750101089477539
    5. 'ifi' → logprob: -12.250101089477539
    6. 'i' → logprob: -12.500101089477539
    7. 'ife' → logprob: -13.000101089477539
    8. '#' → logprob: -13.250101089477539
    9. 'ifiez' → logprob: -13.875101089477539
    10. '   ' → logprob: -14.000101089477539

Token 16: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0729678869247437
    2. ' si' → logprob: -1.5729678869247437
    3. ' la' → logprob: -1.6979678869247437
    4. ' l' → logprob: -2.197968006134033
    5. ' que' → logprob: -2.697968006134033
    6. 's' → logprob: -3.322968006134033
    7. ' les' → logprob: -3.947968006134033
    8. 'si' → logprob: -4.822968006134033
    9. ' le' → logprob: -5.197968006134033
    10. ' if' → logprob: -5.322968006134033

Token 17: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8295121788978577
    2. ' le' → logprob: -1.454512119293213
    3. ' un' → logprob: -2.954512119293213
    4. 'la' → logprob: -3.204512119293213
    5. ' une' → logprob: -3.204512119293213
    6. ' l' → logprob: -3.329512119293213
    7. 'une' → logprob: -3.704512119293213
    8. ' a' → logprob: -4.329512119293213
    9. ' n' → logprob: -4.579512119293213
    10. 'a' → logprob: -4.579512119293213

Token 18: ' pays' (ID: 15236)
  Prédit: ' conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -2.0313260555267334
    2. ' deux' → logprob: -2.4063260555267334
    3. 'de' → logprob: -3.0938260555267334
    4. 'conditions' → logprob: -3.0938260555267334
    5. 'élé' → logprob: -3.1563260555267334
    6. ' éléments' → logprob: -3.2813260555267334
    7. ' chaînes' → logprob: -3.2813260555267334
    8. ' nombres' → logprob: -3.4688260555267334
    9. ' soldats' → logprob: -3.5938260555267334
    10. 'd' → logprob: -4.0313262939453125

Token 19: ' peuvent' (ID: 21321)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.08858965337276459
    2. ' suivants' → logprob: -3.713589668273926
    3. ' sont' → logprob: -3.838589668273926
    4. ' ont' → logprob: -4.588589668273926
    5. ' limit' → logprob: -5.338589668273926
    6. ' vois' → logprob: -5.838589668273926
    7. ' ' → logprob: -6.088589668273926
    8. 's' → logprob: -6.213589668273926
    9. ' d' → logprob: -6.463589668273926
    10. ' n' → logprob: -6.463589668273926

Token 20: ' disposer' (ID: 162575)
  Prédit: ' co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' co' → logprob: -1.8167705535888672
    2. ' s' → logprob: -1.9417705535888672
    3. 'maint' → logprob: -1.9417705535888672
    4. ' être' → logprob: -2.066770553588867
    5. 'être' → logprob: -2.441770553588867
    6. ' ' → logprob: -2.691770553588867
    7. ' établir' → logprob: -3.441770553588867
    8. 'co' → logprob: -3.566770553588867
    9. ' se' → logprob: -3.691770553588867
    10. ' maintenir' → logprob: -3.941770553588867

Token 21: ' leurs' (ID: 16348)
  Prédit: ' leurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leurs' → logprob: -0.5108861327171326
    2. ' de' → logprob: -1.7608861923217773
    3. ' des' → logprob: -3.1358861923217773
    4. ' ' → logprob: -3.2608861923217773
    5. ' d' → logprob: -3.3858861923217773
    6. ' les' → logprob: -4.135886192321777
    7. 's' → logprob: -4.135886192321777
    8. 'leurs' → logprob: -4.385886192321777
    9. ' leur' → logprob: -4.385886192321777
    10. '```' → logprob: -4.760886192321777

Token 22: ' missiles' (ID: 97169)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8478631377220154
    2. ' forces' → logprob: -1.0978631973266602
    3. ' frontières' → logprob: -2.84786319732666
    4. ' voisins' → logprob: -3.22286319732666
    5. ' soldats' → logprob: -3.47286319732666
    6. ' ressources' → logprob: -4.22286319732666
    7. ' territoires' → logprob: -4.47286319732666
    8. ' cartes' → logprob: -4.97286319732666
    9. ' espaces' → logprob: -5.41036319732666
    10. ' arm' → logprob: -5.47286319732666

Token 23: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2334177941083908
    2. 's' → logprob: -2.2334177494049072
    3. '.' → logprob: -3.8584177494049072
    4. ' en' → logprob: -4.108417987823486
    5. ',' → logprob: -4.358417987823486
    6. ' ,' → logprob: -4.483417987823486
    7. ' de' → logprob: -4.483417987823486
    8. '#' → logprob: -5.483417987823486
    9. 'def' → logprob: -5.608417987823486
    10. ' #' → logprob: -5.983417987823486

Token 24: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.29236236214637756
    2. ' les' → logprob: -2.9173624515533447
    3. ' un' → logprob: -3.1673624515533447
    4. ' ' → logprob: -3.6673624515533447
    5. 'l' → logprob: -3.7923624515533447
    6. ' des' → logprob: -4.167362213134766
    7. 'les' → logprob: -4.417362213134766
    8. '```' → logprob: -4.417362213134766
    9. ' leurs' → logprob: -4.542362213134766
    10. ' chaque' → logprob: -4.542362213134766

Token 25: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4164171516895294
    2. ''espace' → logprob: -1.916417121887207
    3. ''ordre' → logprob: -2.041417121887207
    4. 'e' → logprob: -3.791417121887207
    5. 'es' → logprob: -4.166417121887207
    6. ''' → logprob: -4.916417121887207
    7. ''ensemble' → logprob: -5.416417121887207
    8. '’espace' → logprob: -6.916417121887207
    9. ''environnement' → logprob: -7.041417121887207
    10. ''esp' → logprob: -7.166417121887207

Token 26: ' inverse' (ID: 53743)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6728085875511169
    2. 's' → logprob: -2.0478086471557617
    3. ':' → logprob: -2.4228086471557617
    4. '.' → logprob: -2.6728086471557617
    5. 'def' → logprob: -3.0478086471557617
    6. ',' → logprob: -3.1728086471557617
    7. '_' → logprob: -3.2978086471557617
    8. ' :' → logprob: -3.7978086471557617
    9. '#' → logprob: -3.7978086471557617
    10. 'd' → logprob: -5.547808647155762

Token 27: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2235267013311386
    2. 'def' → logprob: -3.0985267162323
    3. '
' → logprob: -3.3485267162323
    4. ' :' → logprob: -3.4735267162323
    5. '```' → logprob: -3.4735267162323
    6. '.' → logprob: -4.223526477813721
    7. '#' → logprob: -4.723526477813721
    8. '\' → logprob: -5.223526477813721
    9. ',' → logprob: -5.348526477813721
    10. 's' → logprob: -5.348526477813721

Token 28: ' la' (ID: 557)
  Prédit: ' leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leurs' → logprob: -0.9920135140419006
    2. 'l' → logprob: -1.6170134544372559
    3. ' l' → logprob: -2.242013454437256
    4. 'leur' → logprob: -2.367013454437256
    5. ' leur' → logprob: -2.367013454437256
    6. 'leurs' → logprob: -2.742013454437256
    7. ' la' → logprob: -4.492013454437256
    8. ' celui' → logprob: -4.617013454437256
    9. ' lancement' → logprob: -4.992013454437256
    10. 'ur' → logprob: -5.304513454437256

Token 29: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.4832823872566223
    2. 'liste' → logprob: -2.2332823276519775
    3. '#' → logprob: -3.3582823276519775
    4. 'entrée' → logprob: -3.3582823276519775
    5. 'ligne' → logprob: -3.4832823276519775
    6. 'dé' → logprob: -3.8582823276519775
    7. 'position' → logprob: -4.233282566070557
    8. ' ligne' → logprob: -4.483282566070557
    9. 's' → logprob: -4.545782566070557
    10. ' chaîne' → logprob: -4.858282566070557

Token 30: ' donnée' (ID: 130126)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1079884767532349
    2. '
' → logprob: -1.6079884767532349
    3. '```' → logprob: -1.9829884767532349
    4. ' :' → logprob: -2.6079883575439453
    5. 'def' → logprob: -2.9829883575439453
    6. ' 
' → logprob: -3.6079883575439453
    7. '_' → logprob: -3.8579883575439453
    8. '#' → logprob: -3.8579883575439453
    9. ' 

' → logprob: -4.107988357543945
    10. '\' → logprob: -4.357988357543945

Token 31: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6684993505477905
    2. 'def' → logprob: -1.4184993505477905
    3. '#' → logprob: -2.91849946975708
    4. ' :' → logprob: -3.41849946975708
    5. '```' → logprob: -3.54349946975708
    6. '_' → logprob: -3.91849946975708
    7. ',' → logprob: -4.16849946975708
    8. '.' → logprob: -4.41849946975708
    9. 'n' → logprob: -4.41849946975708
    10. '
' → logprob: -4.54349946975708

Token 32: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4183056652545929
    2. 'd' → logprob: -1.5433056354522705
    3. '```' → logprob: -3.2933056354522705
    4. '
' → logprob: -3.9183056354522705
    5. 'n' → logprob: -3.9183056354522705
    6. ':' → logprob: -4.29330587387085
    7. '#' → logprob: -4.41830587387085
    8. '\' → logprob: -5.41830587387085
    9. 'i' → logprob: -5.66830587387085
    10. '.' → logprob: -5.91830587387085

Token 33: ' tout' (ID: 5501)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5342673659324646
    2. 'd' → logprob: -0.9092673659324646
    3. '```' → logprob: -5.784267425537109
    4. '#' → logprob: -5.784267425537109
    5. 'n' → logprob: -6.409267425537109
    6. ':' → logprob: -7.284267425537109
    7. 'import' → logprob: -7.409267425537109
    8. '\' → logprob: -7.534267425537109
    9. 'de' → logprob: -8.53426742553711
    10. ' def' → logprob: -8.78426742553711

Token 34: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.21412581205368042
    2. ' en' → logprob: -1.7141258716583252
    3. '#' → logprob: -5.214125633239746
    4. ' simplement' → logprob: -5.339125633239746
    5. ' ' → logprob: -7.089125633239746
    6. '```' → logprob: -7.464125633239746
    7. 's' → logprob: -8.089125633239746
    8. 'e' → logprob: -8.339125633239746
    9. 'es' → logprob: -9.839125633239746
    10. 'ent' → logprob: -10.089125633239746

Token 35: ' maintenant' (ID: 35735)
  Prédit: ' respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' respect' → logprob: -0.036759134382009506
    2. 'respect' → logprob: -4.036758899688721
    3. ' gard' → logprob: -5.786758899688721
    4. ' maintenant' → logprob: -6.036758899688721
    5. 'maint' → logprob: -6.161758899688721
    6. ' conserv' → logprob: -6.286758899688721
    7. ' garant' → logprob: -6.286758899688721
    8. 's' → logprob: -6.411758899688721
    9. '```' → logprob: -7.161758899688721
    10. 'ass' → logprob: -7.786758899688721

Token 36: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5374432802200317
    2. ' la' → logprob: -1.6624432802200317
    3. ' leur' → logprob: -2.537443161010742
    4. ' les' → logprob: -2.912443161010742
    5. ' une' → logprob: -3.412443161010742
    6. ' leurs' → logprob: -4.037443161010742
    7. ' un' → logprob: -4.162443161010742
    8. 'l' → logprob: -4.537443161010742
    9. ' le' → logprob: -5.537443161010742
    10. 'leur' → logprob: -6.537443161010742

Token 37: ' différence' (ID: 79196)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.26993757486343384
    2. ' ordre' → logprob: -3.394937515258789
    3. ' condition' → logprob: -3.519937515258789
    4. 'ordre' → logprob: -3.644937515258789
    5. ' propriété' → logprob: -3.769937515258789
    6. ' stabilité' → logprob: -4.394937515258789
    7. 's' → logprob: -4.894937515258789
    8. ' position' → logprob: -5.144937515258789
    9. ''ordre' → logprob: -5.269937515258789
    10. ' logique' → logprob: -5.519937515258789

Token 38: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7447314262390137
    2. ' ' → logprob: -1.3697314262390137
    3. '_' → logprob: -1.3697314262390137
    4. ' s' → logprob: -5.494731426239014
    5. ' _' → logprob: -6.369731426239014
    6. '.' → logprob: -6.619731426239014
    7. '<|end|>' → logprob: -6.744731426239014
    8. ' de' → logprob: -6.869731426239014
    9. ' d' → logprob: -7.244731426239014
    10. '_s' → logprob: -7.244731426239014

Token 39: ' potentiel' (ID: 113761)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0099307298660278
    2. ' leurs' → logprob: -2.3849306106567383
    3. ' la' → logprob: -2.5099306106567383
    4. ' hauteur' → logprob: -2.6349306106567383
    5. ' leur' → logprob: -3.0099306106567383
    6. ' l' → logprob: -3.2599306106567383
    7. 's' → logprob: -3.3849306106567383
    8. ' position' → logprob: -3.5099306106567383
    9. ' distances' → logprob: -3.7599306106567383
    10. 'leur' → logprob: -3.8849306106567383

Token 40: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6126322746276855
    2. 'def' → logprob: -1.8626322746276855
    3. ' :' → logprob: -2.2376322746276855
    4. '```' → logprob: -2.9876322746276855
    5. '_' → logprob: -3.2376322746276855
    6. ' ' → logprob: -3.8626322746276855
    7. '#' → logprob: -4.3626322746276855
    8. '.' → logprob: -4.8626322746276855
    9. 's' → logprob: -4.9876322746276855
    10. 'n' → logprob: -4.9876322746276855

Token 41: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2541148066520691
    2. ' entre' → logprob: -2.754114866256714
    3. ' de' → logprob: -2.879114866256714
    4. ' )' → logprob: -3.629114866256714
    5. ' d' → logprob: -3.754114866256714
    6. 'd' → logprob: -4.379114627838135
    7. ' des' → logprob: -5.254114627838135
    8. ' ' → logprob: -5.754114627838135
    9. 'de' → logprob: -5.879114627838135
    10. 's' → logprob: -5.879114627838135

Token 42: 'omme' (ID: 30420)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4667409360408783
    2. ')' → logprob: -2.341740846633911
    3. 'a' → logprob: -2.841740846633911
    4. 'i' → logprob: -2.966740846633911
    5. 't' → logprob: -3.341740846633911
    6. '=' → logprob: -3.466740846633911
    7. 'e' → logprob: -3.841740846633911
    8. 'p' → logprob: -3.966740846633911
    9. 'é' → logprob: -4.09174108505249
    10. '#' → logprob: -4.21674108505249

Token 43: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.123289704322815
    2. ')' → logprob: -1.373289704322815
    3. '_' → logprob: -1.873289704322815
    4. ' de' → logprob: -2.9982895851135254
    5. 'des' → logprob: -2.9982895851135254
    6. ' )' → logprob: -3.4982895851135254
    7. ' ' → logprob: -3.4982895851135254
    8. ' d' → logprob: -3.8732895851135254
    9. 's' → logprob: -4.373289585113525
    10. ' totale' → logprob: -4.373289585113525

Token 44: ' capacités' (ID: 120315)
  Prédit: ' puiss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puiss' → logprob: -1.4138164520263672
    2. ')' → logprob: -1.5388164520263672
    3. ' distances' → logprob: -1.9138164520263672
    4. 'pot' → logprob: -2.913816452026367
    5. ' )' → logprob: -3.413816452026367
    6. ' charges' → logprob: -3.538816452026367
    7. ' tensions' → logprob: -3.788816452026367
    8. ' forces' → logprob: -4.163816452026367
    9. 'positions' → logprob: -4.288816452026367
    10. 'i' → logprob: -4.288816452026367

Token 45: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8944410085678101
    2. ' des' → logprob: -1.39444100856781
    3. ' )' → logprob: -1.51944100856781
    4. ' entre' → logprob: -2.6444411277770996
    5. ' de' → logprob: -3.7694411277770996
    6. 'des' → logprob: -4.6444411277771
    7. ' d' → logprob: -5.1444411277771
    8. ' ' → logprob: -5.2694411277771
    9. ' totale' → logprob: -6.1444411277771
    10. ' maximale' → logprob: -6.8944411277771

Token 46: ' missiles' (ID: 97169)
  Prédit: ' missiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' missiles' → logprob: -0.21018171310424805
    2. ' pays' → logprob: -2.960181713104248
    3. ' deux' → logprob: -3.335181713104248
    4. ' voisins' → logprob: -3.585181713104248
    5. ' )' → logprob: -4.085181713104248
    6. ')' → logprob: -4.085181713104248
    7. ' ' → logprob: -4.960181713104248
    8. ' vect' → logprob: -5.960181713104248
    9. ' ' → logprob: -6.022681713104248
    10. 'miss' → logprob: -6.460181713104248

Token 47: ' rest' (ID: 2867)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5579021573066711
    2. ' )' → logprob: -0.9329021573066711
    3. 's' → logprob: -4.5579023361206055
    4. ' des' → logprob: -5.1829023361206055
    5. ' ' → logprob: -5.3079023361206055
    6. ' entre' → logprob: -5.6829023361206055
    7. ' de' → logprob: -6.3079023361206055
    8. 'des' → logprob: -7.0579023361206055
    9. ' restantes' → logprob: -7.4329023361206055
    10. ' d' → logprob: -7.9329023361206055

Token 48: 'ants' (ID: 2027)
  Prédit: 'antes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.4858072102069855
    2. 'ants' → logprob: -1.735807180404663
    3. 'ant' → logprob: -2.235807180404663
    4. 'a' → logprob: -3.610807180404663
    5. 'ées' → logprob: -3.985807180404663
    6. 'és' → logprob: -4.235807418823242
    7. 'é' → logprob: -5.485807418823242
    8. 'an' → logprob: -5.548307418823242
    9. '{' → logprob: -5.610807418823242
    10. '>' → logprob: -6.423307418823242

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3921619951725006
    2. ' )' → logprob: -1.1421619653701782
    3. ' ' → logprob: -6.767161846160889
    4. ' de' → logprob: -7.017161846160889
    5. 's' → logprob: -7.142161846160889
    6. ' sur' → logprob: -8.267162322998047
    7. 'sur' → logprob: -8.642162322998047
    8. ' à' → logprob: -8.892162322998047
    9. ' des' → logprob: -8.892162322998047
    10. ' d' → logprob: -8.892162322998047

Token 50: ' entre' (ID: 3853)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17881134152412415
    2. 'def' → logprob: -2.9288113117218018
    3. '#' → logprob: -3.8038113117218018
    4. ' :' → logprob: -3.9288113117218018
    5. '_' → logprob: -4.178811550140381
    6. '```' → logprob: -4.803811550140381
    7. ' ' → logprob: -4.928811550140381
    8. '[' → logprob: -5.178811550140381
    9. '
' → logprob: -5.303811550140381
    10. ')' → logprob: -5.428811550140381

Token 51: ' le' (ID: 505)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.9756606221199036
    2. 'de' → logprob: -1.8506605625152588
    3. ' les' → logprob: -2.100660562515259
    4. ' chaque' → logprob: -2.475660562515259
    5. ' ' → logprob: -2.850660562515259
    6. ' eux' → logprob: -3.475660562515259
    7. ' ' → logprob: -3.475660562515259
    8. ' la' → logprob: -3.725660562515259
    9. '_' → logprob: -4.100660800933838
    10. '```' → logprob: -4.100660800933838

Token 52: ' maximum' (ID: 10562)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0492538213729858
    2. 'p' → logprob: -1.5492538213729858
    3. ' deux' → logprob: -2.0492539405822754
    4. ' pays' → logprob: -2.1742539405822754
    5. '_' → logprob: -2.9242539405822754
    6. ' ' → logprob: -3.2992539405822754
    7. 's' → logprob: -3.6742539405822754
    8. '#' → logprob: -4.174253940582275
    9. ' p' → logprob: -4.549253940582275
    10. ')' → logprob: -4.799253940582275

Token 53: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6058714389801025
    2. ' ' → logprob: -1.6058714389801025
    3. ' et' → logprob: -2.3558714389801025
    4. 's' → logprob: -2.9808714389801025
    5. ' _' → logprob: -2.9808714389801025
    6. 'e' → logprob: -3.9808714389801025
    7. '```' → logprob: -5.480871200561523
    8. 'es' → logprob: -5.605871200561523
    9. ' =' → logprob: -5.730871200561523
    10. ' and' → logprob: -5.730871200561523

Token 54: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9086315035820007
    2. ' et' → logprob: -1.0336315631866455
    3. ' _' → logprob: -2.4086315631866455
    4. ' ' → logprob: -2.6586315631866455
    5. ' and' → logprob: -3.2836315631866455
    6. 's' → logprob: -4.783631324768066
    7. ' =' → logprob: -5.533631324768066
    8. 'et' → logprob: -6.033631324768066
    9. ')' → logprob: -6.158631324768066
    10. '  ' → logprob: -6.283631324768066

Token 55: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.5182802677154541
    2. ' ' → logprob: -1.393280267715454
    3. 's' → logprob: -2.643280267715454
    4. ' and' → logprob: -3.643280267715454
    5. ' =' → logprob: -4.393280029296875
    6. '=' → logprob: -4.893280029296875
    7. '<|end|>' → logprob: -4.893280029296875
    8. '_' → logprob: -5.018280029296875
    9. ',' → logprob: -5.768280029296875
    10. ')' → logprob: -5.893280029296875

Token 56: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9566568732261658
    2. 'minimum' → logprob: -1.2066569328308105
    3. ' minimum' → logprob: -1.2066569328308105
    4. 'le' → logprob: -4.5816569328308105
    5. 'Minimum' → logprob: -6.5816569328308105
    6. 'min' → logprob: -6.7066569328308105
    7. ' ' → logprob: -7.0816569328308105
    8. '#' → logprob: -7.2066569328308105
    9. '<|end|>' → logprob: -7.7066569328308105
    10. ' les' → logprob: -8.081656455993652

Token 57: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.14309726655483246
    2. 'minimum' → logprob: -2.018097162246704
    3. 'min' → logprob: -8.268096923828125
    4. ' min' → logprob: -10.143096923828125
    5. ' minimal' → logprob: -10.768096923828125
    6. ' minimale' → logprob: -11.018096923828125
    7. ' maximum' → logprob: -11.393096923828125
    8. '```' → logprob: -11.643096923828125
    9. 'maximum' → logprob: -11.768096923828125
    10. ' ' → logprob: -11.893096923828125

Token 58: ' inf' (ID: 5603)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2588118314743042
    2. ':' → logprob: -2.1338119506835938
    3. ' ' → logprob: -3.3838119506835938
    4. ' :' → logprob: -4.133811950683594
    5. '```' → logprob: -4.758811950683594
    6. 'def' → logprob: -4.883811950683594
    7. ',' → logprob: -5.008811950683594
    8. ')' → logprob: -5.008811950683594
    9. '.' → logprob: -5.008811950683594
    10. 's' → logprob: -5.133811950683594

Token 59: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.026402821764349937
    2. 'érie' → logprob: -4.526402950286865
    3. 'é' → logprob: -5.151402950286865
    4. 'érieur' → logprob: -5.276402950286865
    5. 'éri' → logprob: -6.401402950286865
    6. '#' → logprob: -7.651402950286865
    7. 'erie' → logprob: -7.776402950286865
    8. 'érieurs' → logprob: -7.901402950286865
    9. 'ér' → logprob: -8.151402473449707
    10. 'érieures' → logprob: -8.276402473449707

Token 60: ' ou' (ID: 2031)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5337513089179993
    2. ' ' → logprob: -1.2837512493133545
    3. ' _' → logprob: -3.7837512493133545
    4. 's' → logprob: -3.7837512493133545
    5. ' =' → logprob: -4.283751487731934
    6. '=' → logprob: -4.283751487731934
    7. ')' → logprob: -4.408751487731934
    8. '```' → logprob: -5.033751487731934
    9. '\' → logprob: -5.158751487731934
    10. ',' → logprob: -5.283751487731934

Token 61: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.1369151920080185
    2. 'ég' → logprob: -2.1369152069091797
    3. ' eg' → logprob: -5.38691520690918
    4. 'g' → logprob: -6.26191520690918
    5. '=' → logprob: -6.88691520690918
    6. 'égal' → logprob: -7.38691520690918
    7. 'eg' → logprob: -7.38691520690918
    8. 'é' → logprob: -8.01191520690918
    9. 'à' → logprob: -8.63691520690918
    10. 'ou' → logprob: -9.38691520690918

Token 62: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.5113453269004822
    2. 'a' → logprob: -1.136345386505127
    3. 'q' → logprob: -3.386345386505127
    4. 'al' → logprob: -4.011345386505127
    5. 'l' → logprob: -5.011345386505127
    6. 'g' → logprob: -5.261345386505127
    7. '```' → logprob: -5.636345386505127
    8. 'à' → logprob: -5.886345386505127
    9. '#' → logprob: -6.011345386505127
    10. '=' → logprob: -6.761345386505127

Token 63: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6183914542198181
    2. '_' → logprob: -0.8683914542198181
    3. ''' → logprob: -4.493391513824463
    4. 's' → logprob: -5.368391513824463
    5. '```' → logprob: -5.743391513824463
    6. ')' → logprob: -5.993391513824463
    7. 'def' → logprob: -5.993391513824463
    8. ',' → logprob: -6.118391513824463
    9. '\' → logprob: -6.243391513824463
    10. ':' → logprob: -6.368391513824463

Token 64: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9783394932746887
    2. ' k' → logprob: -0.9783394932746887
    3. ' K' → logprob: -2.353339433670044
    4. '1' → logprob: -2.478339433670044
    5. ' d' → logprob: -3.478339433670044
    6. 'k' → logprob: -4.228339672088623
    7. ' D' → logprob: -5.103339672088623
    8. 'K' → logprob: -5.478339672088623
    9. 'd' → logprob: -6.228339672088623
    10. '2' → logprob: -6.353339672088623

Token 65: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.750234067440033
    2. 'def' → logprob: -1.6252341270446777
    3. '```' → logprob: -2.1252341270446777
    4. '
' → logprob: -3.0002341270446777
    5. ' ' → logprob: -3.6252341270446777
    6. '\' → logprob: -4.125234127044678
    7. '_' → logprob: -4.250234127044678
    8. 'n' → logprob: -4.250234127044678
    9. '#' → logprob: -4.250234127044678
    10. ')' → logprob: -4.375234127044678

Token 66: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.7038686871528625
    2. 'tout' → logprob: -1.4538686275482178
    3. ' chaque' → logprob: -1.8288686275482178
    4. 't' → logprob: -3.0788686275482178
    5. 'n' → logprob: -3.9538686275482178
    6. 'l' → logprob: -4.953868865966797
    7. 'part' → logprob: -5.078868865966797
    8. 'la' → logprob: -5.453868865966797
    9. ' tout' → logprob: -5.578868865966797
    10. 'c' → logprob: -5.578868865966797

Token 67: ' étape' (ID: 83661)
  Prédit: ' étape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étape' → logprob: -0.04705945774912834
    2. 'ét' → logprob: -3.4220595359802246
    3. ' étapes' → logprob: -6.422059535980225
    4. 'instant' → logprob: -6.922059535980225
    5. ' moment' → logprob: -6.922059535980225
    6. ' step' → logprob: -7.172059535980225
    7. 'é' → logprob: -7.172059535980225
    8. ' étage' → logprob: -7.297059535980225
    9. ' instant' → logprob: -7.422059535980225
    10. ' pas' → logprob: -7.672059535980225

Token 68: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27756187319755554
    2. ' :' → logprob: -3.027561902999878
    3. ' ' → logprob: -3.027561902999878
    4. '```' → logprob: -3.027561902999878
    5. '_' → logprob: -3.527561902999878
    6. 'def' → logprob: -3.652561902999878
    7. '#' → logprob: -5.152561664581299
    8. ')' → logprob: -5.152561664581299
    9. '
' → logprob: -5.527561664581299
    10. 'd' → logprob: -5.652561664581299

Token 69: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.36174893379211426
    2. '_' → logprob: -2.8617489337921143
    3. ' ' → logprob: -2.8617489337921143
    4. ':' → logprob: -2.9867489337921143
    5. 'def' → logprob: -3.2367489337921143
    6. '#' → logprob: -3.4867489337921143
    7. '```' → logprob: -4.361748695373535
    8. 'i' → logprob: -4.736748695373535
    9. 'n' → logprob: -4.736748695373535
    10. '-' → logprob: -4.986748695373535

Token 70: ' main' (ID: 2758)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3473604619503021
    2. ' solution' → logprob: -1.9723604917526245
    3. ' for' → logprob: -3.097360372543335
    4. ' is' → logprob: -3.597360372543335
    5. ' possible' → logprob: -3.722360372543335
    6. ' peace' → logprob: -4.222360610961914
    7. ' peaceful' → logprob: -4.597360610961914
    8. ' check' → logprob: -5.597360610961914
    9. ' ' → logprob: -5.722360610961914
    10. ' reverse' → logprob: -5.722360610961914

Token 71: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3492670953273773
    2. '(' → logprob: -1.2242671251296997
    3. '()' → logprob: -7.59926700592041
    4. ' ():' → logprob: -9.34926700592041
    5. ' (' → logprob: -9.59926700592041
    6. ':' → logprob: -10.09926700592041
    7. '_' → logprob: -10.72426700592041
    8. '(:' → logprob: -10.72426700592041
    9. '(
' → logprob: -10.72426700592041
    10. '(":' → logprob: -11.09926700592041

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23924373090267181
    2. 'n' → logprob: -2.114243745803833
    3. ' n' → logprob: -3.239243745803833
    4. ' ' → logprob: -3.614243745803833
    5. ' import' → logprob: -4.989243507385254
    6. ' input' → logprob: -5.739243507385254
    7. 'd' → logprob: -6.114243507385254
    8. '    ' → logprob: -6.364243507385254
    9. ' indentation' → logprob: -6.489243507385254
    10. ' ind' → logprob: -6.739243507385254

Token 73: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2847634553909302
    2. 'n' → logprob: -1.4097634553909302
    3. ' import' → logprob: -5.784763336181641
    4. '   ' → logprob: -9.28476333618164
    5. 'd' → logprob: -9.65976333618164
    6. ' d' → logprob: -9.65976333618164
    7. ' N' → logprob: -9.78476333618164
    8. 'import' (adapté à ' import') → logprob: -9.90976333618164
    9. ' ' → logprob: -10.40976333618164
    10. ' input' → logprob: -10.40976333618164

Token 74: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0004071971052326262
    2. 'sys' → logprob: -7.8754072189331055
    3. ' itertools' → logprob: -11.125407218933105
    4. '=sys' → logprob: -12.000407218933105
    5. ' math' → logprob: -12.250407218933105
    6. '	sys' → logprob: -13.750407218933105
    7. '(sys' → logprob: -16.12540626525879
    8. ' collections' → logprob: -16.37540626525879
    9. '_' → logprob: -16.75040626525879
    10. '_sys' → logprob: -17.00040626525879

Token 75: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36053597927093506
    2. '[' → logprob: -2.3605360984802246
    3. '<|end|>' → logprob: -2.6105360984802246
    4. '.readline' → logprob: -3.4855360984802246
    5. '<|end|>' → logprob: -3.6105360984802246
    6. '    
' → logprob: -3.6105360984802246
    7. '  
' → logprob: -5.360536098480225
    8. '\' → logprob: -5.360536098480225
    9. 'data' → logprob: -5.485536098480225
    10. ' 
' → logprob: -5.610536098480225

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2954445481300354
    2. '
' → logprob: -1.7954444885253906
    3. 'data' → logprob: -3.5454444885253906
    4. 'input' → logprob: -4.045444488525391
    5. '    
' → logprob: -4.045444488525391
    6. 'n' → logprob: -4.795444488525391
    7. 'def' → logprob: -5.170444488525391
    8. 'd' → logprob: -5.295444488525391
    9. ' input' → logprob: -5.795444488525391
    10. ' data' → logprob: -7.295444488525391

Token 77: ' for' (ID: 395)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4003833830356598
    2. ' input' → logprob: -1.4003833532333374
    3. 'n' → logprob: -3.150383472442627
    4. 'data' → logprob: -3.775383472442627
    5. ' data' → logprob: -5.150383472442627
    6. '   ' → logprob: -5.150383472442627
    7. ' n' → logprob: -5.900383472442627
    8. 'd' → logprob: -6.025383472442627
    9. ' lines' → logprob: -7.900383472442627
    10. 'lines' → logprob: -8.775382995605469

Token 78: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.01159308198839426
    2. ' ' → logprob: -5.511592864990234
    3. ' ligne' → logprob: -5.636592864990234
    4. ' i' → logprob: -7.011592864990234
    5. ' arg' → logprob: -7.261592864990234
    6. ' _' → logprob: -7.636592864990234
    7. '	line' → logprob: -8.011592864990234
    8. ' l' → logprob: -8.136592864990234
    9. ' lin' → logprob: -8.261592864990234
    10. '  ' → logprob: -8.386592864990234

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005481490516103804
    2. 's' → logprob: -8.125548362731934
    3. 'in' → logprob: -8.500548362731934
    4. ' ' → logprob: -10.625548362731934
    5. '_' → logprob: -12.125548362731934
    6. 'e' → logprob: -13.000548362731934
    7. '<|end|>' → logprob: -13.188048362731934
    8. 'de' → logprob: -13.750548362731934
    9. 'd' → logprob: -13.875548362731934
    10. 'line' → logprob: -13.938048362731934

Token 80: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014246124774217606
    2. 'sys' → logprob: -4.264245986938477
    3. '=sys' → logprob: -9.764245986938477
    4. '(sys' → logprob: -11.514245986938477
    5. '	sys' → logprob: -11.514245986938477
    6. 's' → logprob: -12.764245986938477
    7. ' iter' → logprob: -13.514245986938477
    8. ' ' → logprob: -15.639245986938477
    9. '_' → logprob: -15.889245986938477
    10. 'stdin' → logprob: -16.139245986938477

Token 81: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007074289605952799
    2. '.' → logprob: -7.500707626342773
    3. '.readline' → logprob: -9.500707626342773
    4. 'stdin' → logprob: -10.000707626342773
    5. '(stdin' → logprob: -11.750707626342773
    6. '.argv' → logprob: -11.875707626342773
    7. '.stdout' → logprob: -11.875707626342773
    8. ' stdin' → logprob: -13.000707626342773
    9. '.in' → logprob: -13.000707626342773
    10. 'in' → logprob: -13.000707626342773

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017206314951181412
    2. ' in' → logprob: -4.392206192016602
    3. '.strip' → logprob: -6.392206192016602
    4. ' :' → logprob: -6.642206192016602
    5. 'in' → logprob: -7.517206192016602
    6. ':
' → logprob: -8.517206192016602
    7. '.readline' → logprob: -8.517206192016602
    8. '.rstrip' → logprob: -8.517206192016602
    9. '.' → logprob: -8.642206192016602
    10. 'strip' → logprob: -9.392206192016602

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.086046002805233
    2. ':' → logprob: -3.336045980453491
    3. '<|end|>' → logprob: -4.58604621887207
    4. ' ' → logprob: -5.08604621887207
    5. '.strip' → logprob: -5.33604621887207
    6. '    ' → logprob: -5.46104621887207
    7. '   ' → logprob: -5.83604621887207
    8. '        
' → logprob: -5.96104621887207
    9. '.rstrip' → logprob: -6.08604621887207
    10. ' n' → logprob: -6.21104621887207

Token 84: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.94671231508255
    2. '    ' → logprob: -1.0717122554779053
    3. 'n' → logprob: -2.8217122554779053
    4. ' n' → logprob: -2.9467122554779053
    5. ' =' → logprob: -3.4467122554779053
    6. '    
' → logprob: -4.071712493896484
    7. '   ' → logprob: -4.196712493896484
    8. 's' → logprob: -4.321712493896484
    9. ' if' → logprob: -4.571712493896484
    10. '        ' → logprob: -4.946712493896484

Token 85: ' Lecture' (ID: 106534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2502233982086182
    2. ' missiles' → logprob: -2.000223398208618
    3. '    ' → logprob: -2.125223398208618
    4. ' if' → logprob: -2.500223398208618
    5. 's' → logprob: -2.750223398208618
    6. ' line' → logprob: -3.500223398208618
    7. 'strip' → logprob: -3.500223398208618
    8. 'n' → logprob: -3.625223398208618
    9. '       ' → logprob: -3.875223398208618
    10. ' s' → logprob: -4.000223159790039

Token 86: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7643301486968994
    2. '    ' → logprob: -1.8893301486968994
    3. '.strip' → logprob: -1.8893301486968994
    4. '   ' → logprob: -3.2643301486968994
    5. '.rstrip' → logprob: -3.3893301486968994
    6. ' ' → logprob: -3.5143301486968994
    7. ':' → logprob: -4.13932991027832
    8. ' de' → logprob: -4.51432991027832
    9. ')' → logprob: -4.51432991027832
    10. '<|end|>' → logprob: -4.63932991027832

Token 87: ' n' (ID: 297)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.017207253724336624
    2. ' ' → logprob: -5.142207145690918
    3. ' l' → logprob: -5.142207145690918
    4. ' les' → logprob: -5.892207145690918
    5. ' le' → logprob: -7.517207145690918
    6. ' une' → logprob: -7.642207145690918
    7. ' the' → logprob: -8.267207145690918
    8. ' line' → logprob: -8.267207145690918
    9. 'l' → logprob: -8.392207145690918
    10. ' un' → logprob: -9.267207145690918

Token 88: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4547775685787201
    2. ' =' → logprob: -1.0797775983810425
    3. '=' → logprob: -4.204777717590332
    4. ' ,' → logprob: -4.704777717590332
    5. ' ' → logprob: -7.829777717590332
    6. 's' → logprob: -8.079777717590332
    7. '<|end|>' → logprob: -8.204777717590332
    8. '  ' → logprob: -8.704777717590332
    9. '=int' → logprob: -9.454777717590332
    10. ')' → logprob: -9.579777717590332

Token 89: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20691847801208496
    2. ' )' → logprob: -1.831918478012085
    3. ',' → logprob: -3.831918478012085
    4. '<|end|>' → logprob: -6.831918716430664
    5. ' ,' → logprob: -6.956918716430664
    6. ' ' → logprob: -7.831918716430664
    7. ')n' → logprob: -7.956918716430664
    8. '),' → logprob: -8.081918716430664
    9. ' la' → logprob: -8.206918716430664
    10. ' n' → logprob: -8.206918716430664

Token 90: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5788915157318115
    2. ' )' → logprob: -1.5788915157318115
    3. '<|end|>' → logprob: -2.3288915157318115
    4. ' de' → logprob: -3.0788915157318115
    5. ' =' → logprob: -3.4538915157318115
    6. 's' → logprob: -4.078891754150391
    7. ' des' → logprob: -4.828891754150391
    8. 'de' → logprob: -5.078891754150391
    9. ',' → logprob: -5.453891754150391
    10. ' ' → logprob: -5.578891754150391

Token 91: ' pays' (ID: 15236)
  Prédit: ' missiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' missiles' → logprob: -0.6234942078590393
    2. ' pays' → logprob: -1.7484941482543945
    3. 'miss' → logprob: -1.7484941482543945
    4. 'p' → logprob: -2.9984941482543945
    5. ' )' → logprob: -3.7484941482543945
    6. ' p' → logprob: -4.4984941482543945
    7. ')' → logprob: -4.4984941482543945
    8. ' miss' → logprob: -5.2484941482543945
    9. 's' → logprob: -5.9359941482543945
    10. ' missile' → logprob: -6.6859941482543945

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10775601118803024
    2. ' )' → logprob: -2.8577558994293213
    3. ',' → logprob: -3.3577558994293213
    4. '),' → logprob: -4.8577561378479
    5. ' ),' → logprob: -6.6077561378479
    6. ' ,' → logprob: -7.7327561378479
    7. '):' → logprob: -9.482755661010742
    8. 's' → logprob: -9.732755661010742
    9. ' et' → logprob: -9.732755661010742
    10. ' ' → logprob: -10.357755661010742

Token 93: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10041865706443787
    2. '=' → logprob: -2.4754185676574707
    3. ',' → logprob: -5.475418567657471
    4. ' ' → logprob: -6.725418567657471
    5. '   ' → logprob: -6.850418567657471
    6. ':' → logprob: -6.975418567657471
    7. 's' → logprob: -7.100418567657471
    8. ')' → logprob: -7.225418567657471
    9. '    ' → logprob: -7.350418567657471
    10. '       ' → logprob: -7.600418567657471

Token 94: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5765203833580017
    2. ' d' → logprob: -0.8265203833580017
    3. ' ' → logprob: -7.8265204429626465
    4. ' la' → logprob: -10.576519966125488
    5. '	d' → logprob: -10.701519966125488
    6. ',' → logprob: -10.889019966125488
    7. '_d' → logprob: -10.951519966125488
    8. '<|end|>' → logprob: -11.514019966125488
    9. '  ' → logprob: -11.639019966125488
    10. 's' → logprob: -12.201519966125488

Token 95: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.053975388407707214
    2. ''' → logprob: -4.053975582122803
    3. ',' → logprob: -4.428975582122803
    4. '<|end|>' → logprob: -4.928975582122803
    5. ' =' → logprob: -5.053975582122803
    6. '_' → logprob: -6.053975582122803
    7. 'e' → logprob: -6.803975582122803
    8. '  ' → logprob: -6.803975582122803
    9. ' ,' → logprob: -7.053975582122803
    10. '=' → logprob: -7.178975582122803

Token 96: 'diff' (ID: 31460)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.503697395324707
    2. ')' → logprob: -1.003697395324707
    3. ' la' → logprob: -4.878697395324707
    4. ''' → logprob: -4.878697395324707
    5. ',' → logprob: -5.753697395324707
    6. '')' → logprob: -5.878697395324707
    7. ' ' → logprob: -6.253697395324707
    8. ' ')' → logprob: -6.878697395324707
    9. ' l' → logprob: -7.503697395324707
    10. ' '' → logprob: -7.628697395324707

Token 97: 'érence' (ID: 65256)
  Prédit: 'érence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érence' → logprob: -0.05531686544418335
    2. ' de' → logprob: -3.555316925048828
    3. 'érences' → logprob: -4.805316925048828
    4. 'ér' → logprob: -5.305316925048828
    5. 'er' → logprob: -5.805316925048828
    6. 'érent' → logprob: -6.055316925048828
    7. 'érer' → logprob: -6.555316925048828
    8. 'érance' → logprob: -6.680316925048828
    9. 'é' → logprob: -7.805316925048828
    10. 'érents' → logprob: -7.805316925048828

Token 98: ' tol' (ID: 45444)
  Prédit: ' maximale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.707399308681488
    2. ' )' → logprob: -1.4573993682861328
    3. ')' → logprob: -2.082399368286133
    4. ' de' → logprob: -3.082399368286133
    5. '<|end|>' → logprob: -3.582399368286133
    6. ' max' → logprob: -3.832399368286133
    7. 'max' → logprob: -4.082399368286133
    8. '_max' → logprob: -4.082399368286133
    9. ' =' → logprob: -4.957399368286133
    10. ' maximal' → logprob: -5.332399368286133

Token 99: 'érée' (ID: 113219)
  Prédit: 'érée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.004159602802246809
    2. 'ér' → logprob: -5.754159450531006
    3. 'er' → logprob: -7.254159450531006
    4. 'é' → logprob: -9.004159927368164
    5. 'érance' → logprob: -10.004159927368164
    6. 'éré' → logprob: -10.629159927368164
    7. '	' → logprob: -11.129159927368164
    8. 'rée' → logprob: -11.504159927368164
    9. 'érées' → logprob: -11.629159927368164
    10. '   ' → logprob: -12.379159927368164

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3497213125228882
    2. ' )' → logprob: -1.2247213125228882
    3. '):' → logprob: -8.22472095489502
    4. ',' → logprob: -8.22472095489502
    5. ' ' → logprob: -8.34972095489502
    6. ' ):' → logprob: -8.72472095489502
    7. '   ' → logprob: -9.47472095489502
    8. ' ,' → logprob: -10.09972095489502
    9. ' entre' → logprob: -10.09972095489502
    10. '=' → logprob: -10.22472095489502

Token 101: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09287509322166443
    2. '       ' → logprob: -3.0928750038146973
    3. '=' → logprob: -4.092875003814697
    4. ',' → logprob: -4.592875003814697
    5. ' ' → logprob: -4.967875003814697
    6. '        ' → logprob: -6.217875003814697
    7. '    ' → logprob: -6.842875003814697
    8. ':' → logprob: -6.842875003814697
    9. ')' → logprob: -7.342875003814697
    10. '   ' → logprob: -7.467875003814697

Token 102: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3580770790576935
    2. 'n' (adapté à ' n') → logprob: -1.233077049255371
    3. ' if' → logprob: -5.733077049255371
    4. ' parts' → logprob: -5.733077049255371
    5. '    ' → logprob: -7.108077049255371
    6. '       ' → logprob: -7.358077049255371
    7. '   ' → logprob: -7.983077049255371
    8. ' ' → logprob: -8.483077049255371
    9. 'if' → logprob: -8.608077049255371
    10. ' line' → logprob: -8.608077049255371

Token 103: '_d' (ID: 1565)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.718606891809031e-05
    2. ',d' → logprob: -9.875066757202148
    3. ' ,' → logprob: -11.125066757202148
    4. 'd' → logprob: -14.625066757202148
    5. ',n' → logprob: -15.875066757202148
    6. ',s' → logprob: -16.25006675720215
    7. ',a' → logprob: -17.12506675720215
    8. '_,' → logprob: -17.12506675720215
    9. '‌,' → logprob: -17.12506675720215
    10. ',int' → logprob: -17.37506675720215

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04314602166414261
    2. '=' → logprob: -3.1681461334228516
    3. 's' → logprob: -9.543146133422852
    4. ')' → logprob: -10.043146133422852
    5. ',' → logprob: -10.793146133422852
    6. '=line' → logprob: -13.168146133422852
    7. '=[]' → logprob: -13.168146133422852
    8. '_str' → logprob: -14.043146133422852
    9. ' ' → logprob: -14.543146133422852
    10. '=input' → logprob: -14.543146133422852

Token 105: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5783138275146484
    2. 'line' → logprob: -0.8283138275146484
    3. 'list' → logprob: -6.578313827514648
    4. ' list' → logprob: -6.953313827514648
    5. '	line' → logprob: -11.328313827514648
    6. '[line' → logprob: -12.578313827514648
    7. '=line' → logprob: -12.828313827514648
    8. ' ' → logprob: -12.828313827514648
    9. '(line' → logprob: -13.203313827514648
    10. ' ligne' → logprob: -14.703313827514648

Token 106: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.006091727409511805
    2. '.' → logprob: -5.631091594696045
    3. '.split' → logprob: -6.256091594696045
    4. '.rstrip' → logprob: -7.506091594696045
    5. 'strip' → logprob: -11.131092071533203
    6. ' .' → logprob: -13.631092071533203
    7. '.readline' → logprob: -13.631092071533203
    8. '().' → logprob: -13.881092071533203
    9. ' =' → logprob: -14.256092071533203
    10. '=' → logprob: -14.631092071533203

Token 107: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.007257323246449232
    2. '.split' → logprob: -5.507257461547852
    3. '()' → logprob: -5.757257461547852
    4. '.' → logprob: -11.632257461547852
    5. '(' → logprob: -13.257257461547852
    6. 'split' → logprob: -13.632257461547852
    7. ' .' → logprob: -14.507257461547852
    8. ' ().' → logprob: -15.132257461547852
    9. '().'' → logprob: -15.507257461547852
    10. '())' → logprob: -15.757257461547852

Token 108: '       ' (ID: 309)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -1.5073202848434448
    2. 'if' → logprob: -1.6323202848434448
    3. ' if' → logprob: -2.0073204040527344
    4. '=' → logprob: -2.1323204040527344
    5. ' =' → logprob: -2.2573204040527344
    6. ' ==' → logprob: -2.7573204040527344
    7. '==' → logprob: -3.3823204040527344
    8. '<|end|>' → logprob: -3.3823204040527344
    9. ')' → logprob: -3.7573204040527344
    10. ',' → logprob: -3.7573204040527344

Token 109: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6366773247718811
    2. 'if' (adapté à ' if') → logprob: -1.3866772651672363
    3. '.split' → logprob: -1.8866772651672363
    4. ' =' → logprob: -4.261677265167236
    5. '<|end|>' → logprob: -4.261677265167236
    6. '
' → logprob: -4.511677265167236
    7. '=' → logprob: -5.386677265167236
    8. '       ' → logprob: -5.511677265167236
    9. ' ==' → logprob: -5.886677265167236
    10. ',' → logprob: -5.886677265167236

Token 110: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0009037189302034676
    2. 'not' → logprob: -7.625903606414795
    3. ' n' → logprob: -7.875903606414795
    4. 'n' → logprob: -10.750904083251953
    5. ' ' → logprob: -11.375904083251953
    6. '	not' → logprob: -13.625904083251953
    7. ' no' → logprob: -14.125904083251953
    8. ' ' → logprob: -14.375904083251953
    9. '	n' → logprob: -15.875904083251953
    10. 'n't' → logprob: -16.125904083251953

Token 111: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011048528365790844
    2. 'n' → logprob: -4.511048316955566
    3. '	n' → logprob: -14.761048316955566
    4. ' ' → logprob: -15.636048316955566
    5. ' ' → logprob: -16.511049270629883
    6. '_n' → logprob: -17.511049270629883
    7. ' н' → logprob: -17.511049270629883
    8. ')n' → logprob: -17.636049270629883
    9. '(n' → logprob: -18.386049270629883
    10. 'line' → logprob: -19.386049270629883

Token 112: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -6.742448022123426e-05
    2. '_' → logprob: -9.750067710876465
    3. '._' → logprob: -12.625067710876465
    4. 'd' → logprob: -13.250067710876465
    5. '_s' → logprob: -13.875067710876465
    6. '_n' → logprob: -14.625067710876465
    7. '_
' → logprob: -15.125067710876465
    8. '.' → logprob: -15.750067710876465
    9. '_.' → logprob: -15.750067710876465
    10. '.strip' → logprob: -15.750067710876465

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007637646631337702
    2. ':
' → logprob: -7.875763893127441
    3. ' :' → logprob: -8.250763893127441
    4. ' or' → logprob: -9.375763893127441
    5. '):' → logprob: -11.250763893127441
    6. '=' → logprob: -12.125763893127441
    7. '.' → logprob: -12.250763893127441
    8. '<|end|>' → logprob: -12.500763893127441
    9. ':return' → logprob: -12.875763893127441
    10. ')' → logprob: -13.375763893127441

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017088430002331734
    2. ':' → logprob: -4.142088413238525
    3. ':
' → logprob: -7.892088413238525
    4. '       ' → logprob: -8.267088890075684
    5. ' continue' → logprob: -8.392088890075684
    6. 'continue' → logprob: -9.267088890075684
    7. '		' → logprob: -11.017088890075684
    8. '
' → logprob: -11.017088890075684
    9. '               ' → logprob: -11.392088890075684
    10. '   ' → logprob: -11.517088890075684

Token 115: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5591815710067749
    2. 'break' → logprob: -1.434181571006775
    3. '           ' → logprob: -1.684181571006775
    4. 'continue' (adapté à ' continue') → logprob: -6.3091816902160645
    5. '       ' → logprob: -6.6841816902160645
    6. ' continue' → logprob: -7.1841816902160645
    7. '               ' → logprob: -8.184181213378906
    8. '	break' → logprob: -8.434181213378906
    9. 'return' → logprob: -10.684181213378906
    10. '   ' → logprob: -10.809181213378906

Token 116: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047140996903181076
    2. '   ' → logprob: -4.297141075134277
    3. ' =' → logprob: -4.672141075134277
    4. '        
' → logprob: -5.172141075134277
    5. '=' → logprob: -5.422141075134277
    6. '
' → logprob: -5.672141075134277
    7. '    
' → logprob: -6.297141075134277
    8. ',' → logprob: -6.547141075134277
    9. ')' → logprob: -6.547141075134277
    10. '<|end|>' → logprob: -6.922141075134277

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02726057916879654
    2. '
' → logprob: -4.277260780334473
    3. '<|end|>' → logprob: -4.777260780334473
    4. '        
' → logprob: -6.652260780334473
    5. ' n' → logprob: -6.777260780334473
    6. 'n' → logprob: -7.527260780334473
    7. '   ' → logprob: -7.652260780334473
    8. '  
' → logprob: -7.902260780334473
    9. '    
' → logprob: -8.902260780334473
    10. ')' → logprob: -9.277260780334473

Token 118: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.029114089906215668
    2. ' n' → logprob: -3.654114007949829
    3. '       ' → logprob: -6.279114246368408
    4. '
' → logprob: -8.02911376953125
    5. 'parts' → logprob: -8.90411376953125
    6. ' parts' → logprob: -9.15411376953125
    7. '        
' → logprob: -9.27911376953125
    8. ',n' → logprob: -10.15411376953125
    9. 'tokens' → logprob: -10.15411376953125
    10. '	n' → logprob: -10.27911376953125

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0055961026810109615
    2. ',d' → logprob: -5.755596160888672
    3. '_,' → logprob: -6.505596160888672
    4. ',_' → logprob: -8.130596160888672
    5. '_d' → logprob: -8.255596160888672
    6. ' ,' → logprob: -8.630596160888672
    7. ',n' → logprob: -9.630596160888672
    8. 'd' → logprob: -10.505596160888672
    9. ',s' → logprob: -11.005596160888672
    10. '_' → logprob: -11.005596160888672

Token 120: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0097618717700243
    2. 'd' → logprob: -4.884761810302734
    3. '<|end|>' → logprob: -6.259761810302734
    4. ' ' → logprob: -8.509761810302734
    5. ' =' → logprob: -10.884761810302734
    6. ' ' → logprob: -12.259761810302734
    7. '<|end|>' → logprob: -12.759761810302734
    8. 's' → logprob: -12.759761810302734
    9. '_d' → logprob: -13.009761810302734
    10. ')d' → logprob: -13.384761810302734

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193852186203003
    2. '=' → logprob: -1.5019385814666748
    3. ',' → logprob: -11.876938819885254
    4. ')' → logprob: -13.751938819885254
    5. '=int' → logprob: -15.126938819885254
    6. ' =
' → logprob: -15.751938819885254
    7. ' =)' → logprob: -16.001937866210938
    8. '<|end|>' → logprob: -16.126937866210938
    9. ')=' → logprob: -16.251937866210938
    10. ' ' → logprob: -16.626937866210938

Token 122: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004962389823049307
    2. 'map' → logprob: -5.37996244430542
    3. ' n' → logprob: -8.004961967468262
    4. 'n' → logprob: -12.379961967468262
    5. ' ' → logprob: -13.504961967468262
    6. ' list' → logprob: -13.504961967468262
    7. '	map' → logprob: -14.379961967468262
    8. '(map' → logprob: -15.504961967468262
    9. '[' → logprob: -15.629961967468262
    10. ' ma' → logprob: -16.254962921142578

Token 123: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10020051896572113
    2. '(' → logprob: -2.4752004146575928
    3. '(str' → logprob: -4.600200653076172
    4. '(lambda' → logprob: -6.850200653076172
    5. '(
' → logprob: -9.600200653076172
    6. '(eval' → logprob: -12.475200653076172
    7. ' (' → logprob: -12.725200653076172
    8. '=int' → logprob: -12.975200653076172
    9. '(float' → logprob: -13.100200653076172
    10. '<int' → logprob: -13.475200653076172

Token 124: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018089888617396355
    2. ')' → logprob: -4.393089771270752
    3. '(' → logprob: -5.768089771270752
    4. ' n' → logprob: -6.393089771270752
    5. 'n' → logprob: -8.26809024810791
    6. ')n' → logprob: -8.39309024810791
    7. ',' → logprob: -9.01809024810791
    8. '(line' → logprob: -9.39309024810791
    9. ',n' → logprob: -10.64309024810791
    10. ' line' → logprob: -11.26809024810791

Token 125: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20147065818309784
    2. 'n' → logprob: -1.7014706134796143
    3. ')n' → logprob: -10.076470375061035
    4. ')' → logprob: -11.826470375061035
    5. '(n' → logprob: -11.951470375061035
    6. '	n' → logprob: -14.076470375061035
    7. 'line' → logprob: -15.451470375061035
    8. ' )' → logprob: -15.951470375061035
    9. ',n' → logprob: -16.32647132873535
    10. ' ' → logprob: -16.32647132873535

Token 126: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0025896925944834948
    2. 'd' → logprob: -6.127589702606201
    3. '.strip' → logprob: -8.752589225769043
    4. ')' → logprob: -9.877589225769043
    5. '.split' → logprob: -10.127589225769043
    6. '.readline' → logprob: -10.627589225769043
    7. '_n' → logprob: -10.752589225769043
    8. '.d' → logprob: -11.127589225769043
    9. '.' → logprob: -11.252589225769043
    10. 's' → logprob: -11.252589225769043

Token 127: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12865835428237915
    2. '.split' → logprob: -2.1286582946777344
    3. '.strip' → logprob: -7.003658294677734
    4. '.' → logprob: -7.378658294677734
    5. ' .' → logprob: -8.628658294677734
    6. '()' → logprob: -12.503658294677734
    7. ')' → logprob: -12.628658294677734
    8. '.readline' → logprob: -12.878658294677734
    9. 'split' → logprob: -13.128658294677734
    10. '.rstrip' → logprob: -14.003658294677734

Token 128: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13855138421058655
    2. '()' → logprob: -2.1385514736175537
    3. '('' → logprob: -4.513551235198975
    4. '(' → logprob: -7.763551235198975
    5. ')' → logprob: -9.138551712036133
    6. '())
' → logprob: -10.888551712036133
    7. '()]' → logprob: -11.513551712036133
    8. '()
' → logprob: -11.513551712036133
    9. '(','' → logprob: -11.888551712036133
    10. '("' → logprob: -12.138551712036133

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11751250177621841
    2. '   ' → logprob: -2.6175124645233154
    3. '        
' → logprob: -4.4925127029418945
    4. ')' → logprob: -5.4925127029418945
    5. '
' → logprob: -5.4925127029418945
    6. '    
' → logprob: -5.4925127029418945
    7. '<|end|>' → logprob: -5.4925127029418945
    8. '#' → logprob: -6.4925127029418945
    9. ':' → logprob: -6.7425127029418945
    10. ' 
' → logprob: -7.1175127029418945

Token 130: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3247309923171997
    2. 'capac' → logprob: -1.3247309923171997
    3. ' missiles' → logprob: -1.5747309923171997
    4. ' if' → logprob: -2.82473087310791
    5. '   ' → logprob: -3.32473087310791
    6. ' capacities' → logprob: -3.32473087310791
    7. 'if' (adapté à ' if') → logprob: -3.44973087310791
    8. 'm' → logprob: -3.57473087310791
    9. 'miss' → logprob: -4.44973087310791
    10. '        
' → logprob: -4.57473087310791

Token 131: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00017076305812224746
    2. 'n' → logprob: -8.750170707702637
    3. ' not' → logprob: -11.750170707702637
    4. ' (' → logprob: -13.625170707702637
    5. ' ' → logprob: -13.750170707702637
    6. '	n' → logprob: -14.000170707702637
    7. '(n' → logprob: -14.375170707702637
    8. ' ' → logprob: -15.687670707702637
    9. '(' → logprob: -16.062671661376953
    10. ' d' → logprob: -16.437671661376953

Token 132: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693724036216736
    2. '==' → logprob: -2.1269371509552
    3. '=' → logprob: -12.376936912536621
    4. ' <=' → logprob: -13.251936912536621
    5. ')==' → logprob: -14.126936912536621
    6. '<=' → logprob: -14.376936912536621
    7. ' <' → logprob: -15.001936912536621
    8. '()==' → logprob: -15.001936912536621
    9. ' =' → logprob: -15.126936912536621
    10. '==
' → logprob: -15.376936912536621

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '<|end|>' → logprob: -18.379077911376953
    4. '۰' → logprob: -18.504077911376953
    5. '  ' → logprob: -19.754077911376953
    6. '=' → logprob: -20.004077911376953
    7. '০' → logprob: -20.879077911376953
    8. '-' → logprob: -20.879077911376953
    9. '   ' → logprob: -21.129077911376953
    10. '٠' → logprob: -21.629077911376953

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '۰' → logprob: -17.50023078918457
    4. '-' → logprob: -18.75023078918457
    5. '  ' → logprob: -18.93773078918457
    6. '০' → logprob: -19.12523078918457
    7. '```' → logprob: -19.18773078918457
    8. '٠' → logprob: -19.50023078918457
    9. '   ' → logprob: -19.68773078918457
    10. '０' → logprob: -19.81273078918457

Token 135: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25381168723106384
    2. ':' → logprob: -1.5038117170333862
    3. 'and' → logprob: -6.378811836242676
    4. ':
' → logprob: -9.128811836242676
    5. ' :' → logprob: -9.753811836242676
    6. '<|end|>' → logprob: -11.503811836242676
    7. ' ' → logprob: -12.503811836242676
    8. ':return' → logprob: -13.378811836242676
    9. '	and' → logprob: -14.628811836242676
    10. ',' → logprob: -15.503811836242676

Token 136: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.023245595395565033
    2. 'd' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.523244857788086
    4. ' ' → logprob: -17.023244857788086
    5. '	d' → logprob: -18.523244857788086
    6. '  ' → logprob: -19.148244857788086
    7. '_d' → logprob: -21.273244857788086
    8. '<|end|>' → logprob: -21.398244857788086
    9. ' д' → logprob: -21.648244857788086
    10. ' د' → logprob: -21.773244857788086

Token 137: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023260971531271935
    2. '==' → logprob: -3.773261070251465
    3. ' ' → logprob: -12.148261070251465
    4. '<|end|>' → logprob: -12.148261070251465
    5. ' =' → logprob: -13.773261070251465
    6. '=' → logprob: -13.898261070251465
    7. ' ' → logprob: -14.023261070251465
    8. '  ' → logprob: -14.523261070251465
    9. '<|end|>' → logprob: -14.648261070251465
    10. ')==' → logprob: -14.648261070251465

Token 138: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759404897689819
    2. '0' → logprob: -0.8259404897689819
    3. '<|end|>' → logprob: -14.450940132141113
    4. ' ' → logprob: -15.075940132141113
    5. '  ' → logprob: -15.200940132141113
    6. '=' → logprob: -17.45094108581543
    7. '۰' → logprob: -17.57594108581543
    8. '<|end|>' → logprob: -18.20094108581543
    9. '   ' → logprob: -18.95094108581543
    10. ' 
' → logprob: -19.57594108581543

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004621187690645456
    2. ' ' → logprob: -5.3796210289001465
    3. '<|end|>' → logprob: -14.129621505737305
    4. '  ' → logprob: -15.754621505737305
    5. '<|end|>' → logprob: -17.504621505737305
    6. ' ' → logprob: -18.379621505737305
    7. '   ' → logprob: -18.629621505737305
    8. '۰' → logprob: -18.629621505737305
    9. '-' → logprob: -19.254621505737305
    10. ')' → logprob: -19.754621505737305

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2014492154121399
    2. ':
' → logprob: -1.7014491558074951
    3. '       ' → logprob: -10.951449394226074
    4. '           ' → logprob: -11.201449394226074
    5. '   ' → logprob: -13.701449394226074
    6. ':return' → logprob: -14.201449394226074
    7. ':
' → logprob: -14.326449394226074
    8. ' :' → logprob: -14.451449394226074
    9. ' :
' → logprob: -14.451449394226074
    10. '):
' → logprob: -14.576449394226074

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03478088229894638
    2. '       ' → logprob: -3.409780979156494
    3. '   ' → logprob: -7.034780979156494
    4. ' break' → logprob: -8.909780502319336
    5. ':' → logprob: -10.034780502319336
    6. '	break' → logprob: -10.784780502319336
    7. '	       ' → logprob: -11.159780502319336
    8. 'break' → logprob: -11.534780502319336
    9. ':
' → logprob: -12.034780502319336
    10. '
' → logprob: -12.159780502319336

Token 142: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10996241867542267
    2. 'break' (adapté à ' break') → logprob: -2.3599624633789062
    3. '           ' → logprob: -4.859962463378906
    4. 'return' → logprob: -6.984962463378906
    5. ' return' → logprob: -7.359962463378906
    6. '       ' → logprob: -8.234962463378906
    7. '	break' → logprob: -9.484962463378906
    8. '
' → logprob: -10.734962463378906
    9. '   ' → logprob: -11.109962463378906
    10. '               ' → logprob: -11.609962463378906

Token 143: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4358081817626953
    2. '
' → logprob: -1.0608081817626953
    3. '        
' → logprob: -5.185808181762695
    4. '   ' → logprob: -7.435808181762695
    5. '    
' → logprob: -7.435808181762695
    6. '<|end|>' → logprob: -8.685808181762695
    7. '  
' → logprob: -10.810808181762695
    8. '            
' → logprob: -10.935808181762695
    9. 'n' → logprob: -11.435808181762695
    10. '#' → logprob: -11.435808181762695

Token 144: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0491623654961586
    2. '       ' → logprob: -3.1741623878479004
    3. '        
' → logprob: -5.2991623878479
    4. '    
' → logprob: -7.2991623878479
    5. '   ' → logprob: -8.299161911010742
    6. '<|end|>' → logprob: -9.924161911010742
    7. '  
' → logprob: -10.049161911010742
    8. '
' → logprob: -10.299161911010742
    9. ' missiles' → logprob: -10.924161911010742
    10. '            
' → logprob: -11.049161911010742

Token 145: ' Fin' (ID: 7772)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6581159830093384
    2. '#' → logprob: -1.9081159830093384
    3. ' continue' → logprob: -2.533115863800049
    4. 'continue' → logprob: -2.658115863800049
    5. ' exit' → logprob: -3.033115863800049
    6. ' #' → logprob: -3.533115863800049
    7. ' continuer' → logprob: -3.908115863800049
    8. 'exit' → logprob: -4.158115863800049
    9. 'contin' → logprob: -4.283115863800049
    10. 'def' → logprob: -4.658115863800049

Token 146: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2191892862319946
    2. '       ' → logprob: -1.2191892862319946
    3. '<|end|>' → logprob: -1.3441892862319946
    4. '        
' → logprob: -2.844189167022705
    5. ' de' → logprob: -3.219189167022705
    6. '   ' → logprob: -3.844189167022705
    7. '    
' → logprob: -5.219189167022705
    8. 'de' → logprob: -5.469189167022705
    9. '<|end|>' → logprob: -5.594189167022705
    10. ' des' → logprob: -5.719189167022705

Token 147: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09773553162813187
    2. 'programme' → logprob: -2.972735643386841
    3. ' programme' → logprob: -4.222735404968262
    4. 'la' → logprob: -4.847735404968262
    5. ' l' → logprob: -4.972735404968262
    6. 'program' → logprob: -5.097735404968262
    7. 'input' → logprob: -5.972735404968262
    8. 'le' → logprob: -6.597735404968262
    9. 'entrée' → logprob: -7.347735404968262
    10. ' input' → logprob: -7.597735404968262

Token 148: ' sais' (ID: 30010)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.7816763520240784
    2. 'programme' → logprob: -1.0316762924194336
    3. 'bou' → logprob: -2.5316762924194336
    4. 'program' → logprob: -3.2816762924194336
    5. ' boucle' → logprob: -3.4066762924194336
    6. 'lecture' → logprob: -3.9066762924194336
    7. 'programm' → logprob: -5.406676292419434
    8. 'input' → logprob: -5.406676292419434
    9. 'entr' → logprob: -6.656676292419434
    10. 'ex' → logprob: -6.656676292419434

Token 149: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07336924970149994
    2. 's' → logprob: -3.323369264602661
    3. 'son' → logprob: -3.448369264602661
    4. 't' → logprob: -7.323369026184082
    5. 'on' → logprob: -7.823369026184082
    6. 'rie' → logprob: -8.323369026184082
    7. '#' → logprob: -8.573369026184082
    8. 'l' → logprob: -8.698369026184082
    9. 'sson' → logprob: -8.823369026184082
    10. 'ie' → logprob: -8.948369026184082

Token 150: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36298197507858276
    2. '       ' → logprob: -1.2379820346832275
    3. '<|end|>' → logprob: -4.612981796264648
    4. '        
' → logprob: -5.612981796264648
    5. '    
' → logprob: -7.737981796264648
    6. '   ' → logprob: -8.862981796264648
    7. '<|end|>' → logprob: -9.362981796264648
    8. '  
' → logprob: -9.737981796264648
    9. ')' → logprob: -10.487981796264648
    10. '            
' → logprob: -10.987981796264648

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.214948832988739
    2. '   ' → logprob: -1.9649488925933838
    3. ' missiles' → logprob: -3.839948892593384
    4. '        
' → logprob: -4.589948654174805
    5. 'capac' → logprob: -4.589948654174805
    6. '    
' → logprob: -5.089948654174805
    7. ' capacities' → logprob: -6.964948654174805
    8. 'miss' → logprob: -6.964948654174805
    9. 'caps' → logprob: -6.964948654174805
    10. 'n' → logprob: -7.714948654174805

Token 152: ' countries' (ID: 8981)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.04207907244563103
    2. 'm' → logprob: -5.042078971862793
    3. 'cap' → logprob: -5.042078971862793
    4. 'miss' → logprob: -5.292078971862793
    5. '   ' → logprob: -5.417078971862793
    6. 'p' → logprob: -5.417078971862793
    7. 'caps' → logprob: -5.542078971862793
    8. 'powers' → logprob: -5.917078971862793
    9. 'pot' → logprob: -6.417078971862793
    10. ' capacities' → logprob: -6.667078971862793

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054743703454732895
    2. '=' → logprob: -3.679743766784668
    3. '_cap' → logprob: -4.054743766784668
    4. '_' → logprob: -5.054743766784668
    5. '_caps' → logprob: -5.804743766784668
    6. '=[]' → logprob: -7.054743766784668
    7. '_capacity' → logprob: -9.054743766784668
    8. '_m' → logprob: -9.054743766784668
    9. '=[]
' → logprob: -10.804743766784668
    10. 'capac' → logprob: -10.804743766784668

Token 154: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.21465186774730682
    2. '[]' → logprob: -1.7146518230438232
    3. ' list' → logprob: -5.214652061462402
    4. ' [' → logprob: -5.589652061462402
    5. 'list' → logprob: -5.589652061462402
    6. '[list' → logprob: -8.964652061462402
    7. '[' → logprob: -9.589652061462402
    8. ' []
' → logprob: -10.964652061462402
    9. '[]
' → logprob: -11.339652061462402
    10. '[int' → logprob: -11.839652061462402

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.122561514377594
    2. 'for' → logprob: -2.872561454772949
    3. ' for' → logprob: -2.872561454772949
    4. '
' → logprob: -7.372561454772949
    5. '<|end|>' → logprob: -7.497561454772949
    6. '	for' → logprob: -7.997561454772949
    7. '   ' → logprob: -8.12256145477295
    8. '        
' → logprob: -9.24756145477295
    9. '=' → logprob: -9.99756145477295
    10. 'range' → logprob: -10.12256145477295

Token 156: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014859484508633614
    2. ' for' → logprob: -9.00014877319336
    3. 'total' (adapté à ' total') → logprob: -11.25014877319336
    4. '       ' → logprob: -12.50014877319336
    5. 'while' → logprob: -12.87514877319336
    6. 'capac' → logprob: -13.25014877319336
    7. 'capacity' → logprob: -14.12514877319336
    8. 'count' → logprob: -14.25014877319336
    9. '   ' → logprob: -14.25014877319336
    10. 'sum' → logprob: -14.50014877319336

Token 157: '_m' (ID: 1285)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.648479163646698
    2. '=' → logprob: -1.6484792232513428
    3. '_capacity' → logprob: -2.2734792232513428
    4. '_cap' → logprob: -2.5234792232513428
    5. '_' → logprob: -2.6484792232513428
    6. '_m' → logprob: -4.398478984832764
    7. '_p' → logprob: -5.898478984832764
    8. '_caps' → logprob: -5.898478984832764
    9. '_remaining' → logprob: -6.023478984832764
    10. 'capac' → logprob: -6.648478984832764

Token 158: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.09349348396062851
    2. 'is' → logprob: -3.3434934616088867
    3. 'issions' → logprob: -4.218493461608887
    4. 'isses' → logprob: -4.718493461608887
    5. 'unit' → logprob: -5.218493461608887
    6. '=' → logprob: -5.843493461608887
    7. '   ' → logprob: -5.968493461608887
    8. ' =' → logprob: -6.343493461608887
    9. 'units' → logprob: -6.343493461608887
    10. '_capacity' → logprob: -6.468493461608887

Token 159: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.006109504960477352
    2. 'ile' → logprob: -5.381109714508057
    3. 'ils' → logprob: -7.006109714508057
    4. 'les' → logprob: -8.506109237670898
    5. 'es' → logprob: -9.256109237670898
    6. 'ions' → logprob: -10.131109237670898
    7. '```' → logprob: -10.506109237670898
    8. '=' → logprob: -10.881109237670898
    9. 'il' → logprob: -10.881109237670898
    10. 'ails' → logprob: -11.068609237670898

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28315144777297974
    2. '=' → logprob: -1.408151388168335
    3. '_capacity' → logprob: -6.783151626586914
    4. '_cap' → logprob: -8.408151626586914
    5. '_remaining' → logprob: -9.408151626586914
    6. ' =
' → logprob: -9.533151626586914
    7. '   ' → logprob: -9.658151626586914
    8. '_' → logprob: -9.658151626586914
    9. '=[]' → logprob: -9.783151626586914
    10. 'capac' → logprob: -10.033151626586914

Token 161: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023527415469288826
    2. ' ' → logprob: -3.7735273838043213
    3. '[]' → logprob: -8.398527145385742
    4. 'sum' → logprob: -11.148527145385742
    5. ' []' → logprob: -11.273527145385742
    6. ' sum' → logprob: -11.523527145385742
    7. '[]
' → logprob: -12.773527145385742
    8. '   ' → logprob: -12.773527145385742
    9. 'n' → logprob: -12.898527145385742
    10. ' n' → logprob: -13.148527145385742

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00809523370116949
    2. '[]' → logprob: -4.8830952644348145
    3. ' ' → logprob: -8.383094787597656
    4. 'sum' → logprob: -8.633094787597656
    5. ' []' → logprob: -10.758094787597656
    6. '[]
' → logprob: -10.883094787597656
    7. '[' → logprob: -11.383094787597656
    8. '   ' → logprob: -12.258094787597656
    9. 'int' → logprob: -12.383094787597656
    10. 'n' → logprob: -12.383094787597656

Token 163: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42788535356521606
    2. '       ' → logprob: -1.8028852939605713
    3. '<|end|>' → logprob: -1.8028852939605713
    4. ' for' → logprob: -4.55288553237915
    5. '<|end|>' → logprob: -5.55288553237915
    6. 'for' → logprob: -6.05288553237915
    7. '        
' → logprob: -7.17788553237915
    8. ',' → logprob: -9.052885055541992
    9. '  
' → logprob: -9.427885055541992
    10. ')' → logprob: -9.552885055541992

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043266020715236664
    2. ' for' → logprob: -3.7932660579681396
    3. 'for' → logprob: -4.6682658195495605
    4. '
' → logprob: -5.1682658195495605
    5. '<|end|>' → logprob: -5.9182658195495605
    6. '        
' → logprob: -7.0432658195495605
    7. '   ' → logprob: -7.6682658195495605
    8. '	for' → logprob: -8.668266296386719
    9. '<|end|>' → logprob: -8.918266296386719
    10. ',' → logprob: -9.543266296386719

Token 165: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05668254196643829
    2. ' for' → logprob: -2.931682586669922
    3. 'capac' → logprob: -7.556682586669922
    4. 'max' → logprob: -7.806682586669922
    5. 'min' → logprob: -8.556682586669922
    6. ' capacities' → logprob: -8.806682586669922
    7. '
' → logprob: -8.931682586669922
    8. '       ' → logprob: -8.931682586669922
    9. 'current' → logprob: -10.056682586669922
    10. 'ranges' → logprob: -10.931682586669922

Token 166: ' Lecture' (ID: 106534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07911505550146103
    2. ' for' → logprob: -2.579115152359009
    3. '       ' → logprob: -9.32911491394043
    4. 'countries' → logprob: -9.70411491394043
    5. ' countries' → logprob: -11.07911491394043
    6. 'while' → logprob: -12.45411491394043
    7. 'max' → logprob: -12.57911491394043
    8. '   ' → logprob: -12.57911491394043
    9. 'capac' → logprob: -12.70411491394043
    10. 'total' → logprob: -12.70411491394043

Token 167: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.30735841393470764
    2. '       ' → logprob: -1.9323583841323853
    3. 'des' → logprob: -2.807358503341675
    4. ' for' → logprob: -3.682358503341675
    5. '   ' → logprob: -4.682358264923096
    6. ' de' → logprob: -4.682358264923096
    7. ' of' → logprob: -4.682358264923096
    8. 'for' → logprob: -5.307358264923096
    9. 'de' → logprob: -7.807358264923096
    10. ' ' → logprob: -8.932358741760254

Token 168: ' données' (ID: 30580)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.1262316107749939
    2. ' capacités' → logprob: -2.5012316703796387
    3. ' missiles' → logprob: -4.126231670379639
    4. ' capacities' → logprob: -4.501231670379639
    5. 'cap' → logprob: -6.626231670379639
    6. ' for' → logprob: -6.751231670379639
    7. ' capac' → logprob: -6.751231670379639
    8. 'miss' → logprob: -7.126231670379639
    9. 'for' → logprob: -7.376231670379639
    10. ' puiss' → logprob: -7.751231670379639

Token 169: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14930234849452972
    2. ' for' → logprob: -2.1493022441864014
    3. 'for' → logprob: -3.8993022441864014
    4. '   ' → logprob: -7.1493024826049805
    5. '	for' → logprob: -7.8993024826049805
    6. ' pour' → logprob: -8.02430248260498
    7. 'pour' → logprob: -8.52430248260498
    8. ' des' → logprob: -9.77430248260498
    9. 'des' → logprob: -10.02430248260498
    10. ' ' → logprob: -10.64930248260498

Token 170: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2879968583583832
    2. ' _' → logprob: -1.5379968881607056
    3. ' i' → logprob: -4.037996768951416
    4. ' chaque' → logprob: -4.787996768951416
    5. 'i' → logprob: -5.162996768951416
    6. '_i' → logprob: -6.662996768951416
    7. ' ' → logprob: -7.162996768951416
    8. ' each' → logprob: -7.287996768951416
    9. 'each' → logprob: -8.287997245788574
    10. ' range' → logprob: -8.787997245788574

Token 171: ' pays' (ID: 15236)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2042596936225891
    2. ' pays' → logprob: -1.7042596340179443
    3. 'country' → logprob: -7.204259872436523
    4. ' p' → logprob: -7.329259872436523
    5. ' country' → logprob: -7.954259872436523
    6. '_' → logprob: -8.204259872436523
    7. '_p' → logprob: -8.329259872436523
    8. 'pay' → logprob: -8.454259872436523
    9. 'countries' → logprob: -9.704259872436523
    10. ' pay' → logprob: -10.454259872436523

Token 172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01270847488194704
    2. ' for' → logprob: -4.63770866394043
    3. '<|end|>' → logprob: -6.38770866394043
    4. 'for' → logprob: -7.13770866394043
    5. '<|end|>' → logprob: -9.26270866394043
    6. ',' → logprob: -9.26270866394043
    7. '        
' → logprob: -9.63770866394043
    8. '
' → logprob: -10.01270866394043
    9. '	for' → logprob: -10.13770866394043
    10. '	' → logprob: -10.38770866394043

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004971518646925688
    2. ' for' → logprob: -7.875497341156006
    3. 'for' → logprob: -9.500496864318848
    4. '   ' → logprob: -11.000496864318848
    5. '<|end|>' → logprob: -11.625496864318848
    6. '
' → logprob: -11.750496864318848
    7. ',' → logprob: -13.000496864318848
    8. '        
' → logprob: -13.250496864318848
    9. '	   ' → logprob: -14.375496864318848
    10. '	for' → logprob: -14.375496864318848

Token 174: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2146361917257309
    2. ' for' → logprob: -1.714636206626892
    3. '       ' → logprob: -4.339636325836182
    4. 'countries' → logprob: -9.964635848999023
    5. '	for' → logprob: -10.964635848999023
    6. '   ' → logprob: -11.089635848999023
    7. ' countries' → logprob: -12.214635848999023
    8. '
' → logprob: -13.214635848999023
    9. ' ' → logprob: -13.714635848999023
    10. '        
' → logprob: -13.964635848999023

Token 175: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.009540975093841553
    2. '_' → logprob: -5.134541034698486
    3. ' i' → logprob: -5.634541034698486
    4. 'i' → logprob: -11.259540557861328
    5. ' ' → logprob: -11.384540557861328
    6. ' country' → logprob: -12.509540557861328
    7. '_i' → logprob: -12.759540557861328
    8. ' range' → logprob: -13.759540557861328
    9. '_country' → logprob: -13.884540557861328
    10. ' ' → logprob: -15.759540557861328

Token 176: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06834294646978378
    2. 'in' → logprob: -2.943342924118042
    3. 'range' → logprob: -5.068343162536621
    4. ' range' → logprob: -5.318343162536621
    5. '_' → logprob: -6.818343162536621
    6. ' _' → logprob: -7.693343162536621
    7. ' i' → logprob: -8.193343162536621
    8. 'i' → logprob: -8.693343162536621
    9. ' ' → logprob: -8.818343162536621
    10. 'n' → logprob: -10.818343162536621

Token 177: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. '	range' → logprob: -16.875911712646484
    4. '(range' → logprob: -17.250911712646484
    5. 'rang' → logprob: -17.375911712646484
    6. 'ange' → logprob: -18.500911712646484
    7. 'n' → logprob: -19.000911712646484
    8. 'r' → logprob: -19.625911712646484
    9. 'ranges' → logprob: -20.625911712646484
    10. '.range' → logprob: -20.750911712646484

Token 178: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001617035741219297
    2. '(' → logprob: -9.625162124633789
    3. ' (' → logprob: -9.625162124633789
    4. ' n' → logprob: -10.500162124633789
    5. 'n' → logprob: -13.250162124633789
    6. '(
' → logprob: -15.875162124633789
    7. '	n' → logprob: -17.00016212463379
    8. '(int' → logprob: -17.62516212463379
    9. ' ' → logprob: -18.37516212463379
    10. '
' → logprob: -19.50016212463379

Token 179: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2259761244058609
    2. '):' → logprob: -1.6009761095046997
    3. ' ):
' → logprob: -8.60097599029541
    4. ' ):' → logprob: -9.35097599029541
    5. '       ' → logprob: -9.47597599029541
    6. ')' → logprob: -9.60097599029541
    7. '):
' → logprob: -9.72597599029541
    8. '   ' → logprob: -10.47597599029541
    9. ':' → logprob: -10.47597599029541
    10. '():
' → logprob: -11.72597599029541

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021459776908159256
    2. '
' → logprob: -6.877145767211914
    3. '   ' → logprob: -8.252145767211914
    4. ':' → logprob: -8.752145767211914
    5. '       ' → logprob: -9.002145767211914
    6. ',' → logprob: -9.252145767211914
    7. '    
' → logprob: -9.502145767211914
    8. '            
' → logprob: -9.502145767211914
    9. '	       ' → logprob: -9.627145767211914
    10. '	   ' → logprob: -10.127145767211914

Token 181: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.0261709690093994
    2. ' line' → logprob: -1.7761709690093994
    3. ' m' → logprob: -2.6511709690093994
    4. ' country' → logprob: -2.9011709690093994
    5. ' p' → logprob: -3.2761709690093994
    6. ' missiles' → logprob: -3.2761709690093994
    7. ' capacities' → logprob: -3.5261709690093994
    8. ' parts' → logprob: -3.5261709690093994
    9. ' c' → logprob: -3.6511709690093994
    10. 'data' (adapté à ' data') → logprob: -3.7761709690093994

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015899270772934
    2. '=' → logprob: -1.7015899419784546
    3. '=line' → logprob: -9.701589584350586
    4. '_line' → logprob: -10.701589584350586
    5. 'line' → logprob: -10.951589584350586
    6. ' =
' → logprob: -11.201589584350586
    7. '   ' → logprob: -11.451589584350586
    8. 's' → logprob: -11.951589584350586
    9. '=
' → logprob: -11.951589584350586
    10. '_tokens' → logprob: -12.326589584350586

Token 183: ' sys' (ID: 12228)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10071134567260742
    2. 'list' → logprob: -2.3507113456726074
    3. ' input' → logprob: -8.100711822509766
    4. 'input' → logprob: -8.600711822509766
    5. ' sys' → logprob: -11.475711822509766
    6. ' tuple' → logprob: -12.475711822509766
    7. 'sys' → logprob: -13.350711822509766
    8. 'tuple' → logprob: -14.100711822509766
    9. '	list' → logprob: -15.600711822509766
    10. ' ' → logprob: -15.725711822509766

Token 184: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004997743526473641
    2. '.' → logprob: -7.625499725341797
    3. 'stdin' → logprob: -12.000499725341797
    4. '.stdout' → logprob: -13.000499725341797
    5. '.argv' → logprob: -13.375499725341797
    6. '.readline' → logprob: -13.875499725341797
    7. '.std' → logprob: -14.375499725341797
    8. ' stdin' → logprob: -17.000499725341797
    9. '(stdin' → logprob: -17.125499725341797
    10. '.stderr' → logprob: -17.375499725341797

Token 185: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002966127940453589
    2. '.' → logprob: -8.125296592712402
    3. '().' → logprob: -15.250296592712402
    4. '.stdin' → logprob: -15.375296592712402
    5. ' readline' → logprob: -16.75029754638672
    6. '.readlines' → logprob: -17.50029754638672
    7. '.next' → logprob: -18.12529754638672
    8. '.read' → logprob: -18.75029754638672
    9. '.rstrip' → logprob: -18.75029754638672
    10. '   ' → logprob: -19.25029754638672

Token 186: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020449401927180588
    2. '()' → logprob: -8.500204086303711
    3. '.strip' → logprob: -14.500204086303711
    4. '()
' → logprob: -14.750204086303711
    5. '()).' → logprob: -18.00020408630371
    6. ' ().' → logprob: -18.62520408630371
    7. '       ' → logprob: -18.62520408630371
    8. '           ' → logprob: -18.75020408630371
    9. '()

' → logprob: -18.75020408630371
    10. '.split' → logprob: -19.12520408630371

Token 187: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00026336227892898023
    2. 'split' → logprob: -8.250263214111328
    3. 'rstrip' → logprob: -13.500263214111328
    4. ' strip' → logprob: -14.375263214111328
    5. '.strip' → logprob: -19.125263214111328
    6. '(strip' → logprob: -20.500263214111328
    7. ' split' → logprob: -20.625263214111328
    8. 'stripe' → logprob: -20.750263214111328
    9. '_strip' → logprob: -20.875263214111328
    10. 'str' → logprob: -21.000263214111328

Token 188: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25953370332717896
    2. '().' → logprob: -1.5095336437225342
    3. '()
' → logprob: -4.884533882141113
    4. '()

' → logprob: -12.509533882141113
    5. '()
' → logprob: -12.759533882141113
    6. '           ' → logprob: -13.259533882141113
    7. '()).' → logprob: -13.884533882141113
    8. '(),' → logprob: -14.009533882141113
    9. '())' → logprob: -14.009533882141113
    10. '().
' → logprob: -14.259533882141113

Token 189: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.236549335066229e-05
    2. ' split' → logprob: -11.000021934509277
    3. 'rstrip' → logprob: -12.500021934509277
    4. 'spl' → logprob: -13.500021934509277
    5. '(split' → logprob: -15.750021934509277
    6. '.split' → logprob: -16.000022888183594
    7. '_split' → logprob: -16.125022888183594
    8. '           ' → logprob: -16.250022888183594
    9. 'strip' → logprob: -17.375022888183594
    10. ' splits' → logprob: -18.000022888183594

Token 190: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062020447105169296
    2. '()
' → logprob: -2.8120205402374268
    3. '(' → logprob: -10.812020301818848
    4. '           ' → logprob: -11.687020301818848
    5. '())' → logprob: -11.937020301818848
    6. '(
' → logprob: -12.312020301818848
    7. ')' → logprob: -12.562020301818848
    8. '()
' → logprob: -12.937020301818848
    9. '       ' → logprob: -13.062020301818848
    10. '()

' → logprob: -13.562020301818848

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004074720665812492
    2. '       ' → logprob: -6.129074573516846
    3. ',' → logprob: -7.629074573516846
    4. '   ' → logprob: -8.504075050354004
    5. '	       ' → logprob: -8.504075050354004
    6. '            
' → logprob: -8.754075050354004
    7. ' ,' → logprob: -9.004075050354004
    8. ' =' → logprob: -9.129075050354004
    9. '		' → logprob: -9.629075050354004
    10. '	   ' → logprob: -9.879075050354004

Token 192: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.7784066200256348
    2. 'k' → logprob: -1.1534066200256348
    3. ' k' → logprob: -3.4034066200256348
    4. '           ' → logprob: -3.5284066200256348
    5. 'count' → logprob: -3.7784066200256348
    6. 'capac' → logprob: -4.028406620025635
    7. '       ' → logprob: -4.153406620025635
    8. 'c' → logprob: -4.153406620025635
    9. 'cap' → logprob: -4.278406620025635
    10. ' m' → logprob: -4.278406620025635

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43286600708961487
    2. ' =' → logprob: -1.0578659772872925
    3. '=int' → logprob: -6.682866096496582
    4. '=[]' → logprob: -7.182866096496582
    5. ',' → logprob: -7.432866096496582
    6. '   ' → logprob: -7.682866096496582
    7. '_count' → logprob: -7.807866096496582
    8. 'count' → logprob: -9.932866096496582
    9. '    ' → logprob: -9.932866096496582
    10. 's' → logprob: -10.057866096496582

Token 194: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024756586644798517
    2. ' int' → logprob: -6.002475738525391
    3. 'len' → logprob: -19.12747573852539
    4. ' ' → logprob: -19.25247573852539
    5. '[int' → logprob: -19.75247573852539
    6. '(int' → logprob: -21.62747573852539
    7. '  ' → logprob: -22.00247573852539
    8. '=int' → logprob: -22.37747573852539
    9. '	int' → logprob: -22.62747573852539
    10. ']int' → logprob: -23.25247573852539

Token 195: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -6.301394023466855e-05
    2. '(' → logprob: -9.875062942504883
    3. 'data' → logprob: -11.375062942504883
    4. ' (' → logprob: -17.250062942504883
    5. ' data' → logprob: -17.750062942504883
    6. '(
' → logprob: -18.000062942504883
    7. '=data' → logprob: -18.250062942504883
    8. ')data' → logprob: -18.250062942504883
    9. '[data' → logprob: -18.625062942504883
    10. ',data' → logprob: -18.750062942504883

Token 196: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002204378368332982
    2. '(' → logprob: -6.127204418182373
    3. ')' → logprob: -11.752203941345215
    4. '()[' → logprob: -12.127203941345215
    5. '(
' → logprob: -13.127203941345215
    6. '
' → logprob: -13.377203941345215
    7. '0' → logprob: -14.002203941345215
    8. '[
' → logprob: -14.502203941345215
    9. ' [' → logprob: -14.627203941345215
    10. ' (' → logprob: -16.00220489501953

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015085970517247915
    2. '[' → logprob: -9.000150680541992
    3. '1' → logprob: -11.250150680541992
    4. '
' → logprob: -12.000150680541992
    5. ' ' → logprob: -12.250150680541992
    6. '   ' → logprob: -13.500150680541992
    7. ')' → logprob: -14.500150680541992
    8. '(' → logprob: -14.812650680541992
    9. ']' → logprob: -15.875150680541992
    10. '][' → logprob: -16.000150680541992

Token 198: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13653776049613953
    2. '])' → logprob: -2.261537790298462
    3. ')
' → logprob: -3.886537790298462
    4. '])
' → logprob: -5.886537551879883
    5. ')]' → logprob: -9.886537551879883
    6. ']' → logprob: -10.886537551879883
    7. ')])' → logprob: -10.886537551879883
    8. ' )' → logprob: -11.636537551879883
    9. ')
' → logprob: -11.636537551879883
    10. '})' → logprob: -12.011537551879883

Token 199: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4748997688293457
    2. '           ' → logprob: -1.2248997688293457
    3. ' missiles' → logprob: -3.4748997688293457
    4. 'capac' → logprob: -3.8498997688293457
    5. ' capacities' → logprob: -4.099899768829346
    6. ',' → logprob: -5.099899768829346
    7. 'caps' → logprob: -6.474899768829346
    8. 'cap' → logprob: -7.349899768829346
    9. '   ' → logprob: -7.349899768829346
    10. '        
' → logprob: -7.599899768829346

Token 200: ' missiles' (ID: 97169)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.3530128300189972
    2. 'miss' → logprob: -1.8530128002166748
    3. ' missiles' → logprob: -2.603012800216675
    4. ' capacities' → logprob: -3.728012800216675
    5. 'caps' → logprob: -4.103013038635254
    6. 'cap' → logprob: -4.228013038635254
    7. 'powers' → logprob: -5.353013038635254
    8. 'capacity' → logprob: -6.728013038635254
    9. ' missile' → logprob: -7.478013038635254
    10. 'c' → logprob: -7.603013038635254

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17982977628707886
    2. ' =' → logprob: -1.8048298358917236
    3. 's' → logprob: -9.929829597473145
    4. 'capac' → logprob: -11.054829597473145
    5. '_cap' → logprob: -12.304829597473145
    6. '=[]' → logprob: -12.804829597473145
    7. '=
' → logprob: -13.179829597473145
    8. 'cap' → logprob: -13.304829597473145
    9. '<|end|>' → logprob: -13.804829597473145
    10. ')' → logprob: -14.054829597473145

Token 202: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12693114578723907
    2. 'list' → logprob: -2.1269311904907227
    3. ' [' → logprob: -14.001931190490723
    4. '[' → logprob: -14.126931190490723
    5. ' data' → logprob: -14.501931190490723
    6. '[list' → logprob: -15.001931190490723
    7. ' ' → logprob: -15.626931190490723
    8. '	list' → logprob: -16.126930236816406
    9. 'data' → logprob: -16.126930236816406
    10. ' sorted' → logprob: -16.501930236816406

Token 203: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.019362466409802437
    2. '(' → logprob: -4.019362449645996
    3. '(data' → logprob: -6.769362449645996
    4. '(
' → logprob: -10.519362449645996
    5. '(int' → logprob: -10.519362449645996
    6. '(m' → logprob: -11.894362449645996
    7. '()' → logprob: -13.894362449645996
    8. '(

' → logprob: -14.144362449645996
    9. '(range' → logprob: -14.894362449645996
    10. ' (' → logprob: -15.519362449645996

Token 204: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009380202973261476
    2. 'int' → logprob: -7.0009379386901855
    3. '(' → logprob: -10.750938415527344
    4. ')' → logprob: -13.250938415527344
    5. ',int' → logprob: -13.750938415527344
    6. ' int' → logprob: -14.250938415527344
    7. '=int' → logprob: -14.750938415527344
    8. '(
' → logprob: -15.250938415527344
    9. '[int' → logprob: -15.375938415527344
    10. '
' → logprob: -15.500938415527344

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.836362898349762
    2. ',data' → logprob: -0.961362898349762
    3. '(data' → logprob: -1.7113628387451172
    4. ',int' → logprob: -6.211362838745117
    5. '(int' → logprob: -7.211362838745117
    6. ' ,' → logprob: -7.711362838745117
    7. '(' → logprob: -7.836362838745117
    8. 'data' → logprob: -9.836362838745117
    9. ' (' → logprob: -10.836362838745117
    10. ',(' → logprob: -11.211362838745117

Token 206: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0788925439119339
    2. ' data' → logprob: -2.578892469406128
    3. 'int' → logprob: -13.578892707824707
    4. '
' → logprob: -15.203892707824707
    5. '   ' → logprob: -15.203892707824707
    6. 'str' → logprob: -15.578892707824707
    7. ' ' → logprob: -15.578892707824707
    8. ')' → logprob: -15.828892707824707
    9. '(data' → logprob: -16.07889175415039
    10. 'lambda' → logprob: -16.07889175415039

Token 207: '[' (ID: 58)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.15161512792110443
    2. '[data' → logprob: -2.1516151428222656
    3. ',data' → logprob: -4.026615142822266
    4. 'data' → logprob: -6.651615142822266
    5. ')data' → logprob: -6.776615142822266
    6. '=data' → logprob: -7.401615142822266
    7. '.split' → logprob: -7.401615142822266
    8. ' data' → logprob: -7.776615142822266
    9. '.data' → logprob: -7.776615142822266
    10. ':data' → logprob: -8.026615142822266

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002116462419508025
    2. 'data' → logprob: -8.500211715698242
    3. ' data' → logprob: -13.000211715698242
    4. ' ' → logprob: -13.625211715698242
    5. 'split' → logprob: -13.625211715698242
    6. '   ' → logprob: -14.250211715698242
    7. '
' → logprob: -14.375211715698242
    8. ')' → logprob: -14.625211715698242
    9. '2' → logprob: -14.750211715698242
    10. '0' → logprob: -15.000211715698242

Token 209: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5790972709655762
    2. ':]' → logprob: -0.8290972709655762
    3. ':].' → logprob: -5.954097270965576
    4. ']))' → logprob: -8.204097747802734
    5. ' :' → logprob: -9.204097747802734
    6. ':],' → logprob: -9.329097747802734
    7. '():' → logprob: -10.579097747802734
    8. ':]
' → logprob: -10.829097747802734
    9. ' :]' → logprob: -11.579097747802734
    10. '::' → logprob: -11.954097747802734

Token 210: ' ))
' (ID: 43705)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003002423793077469
    2. '))
' → logprob: -5.878002643585205
    3. ' ))' → logprob: -8.878002166748047
    4. '           ' → logprob: -10.753002166748047
    5. ')))' → logprob: -11.878002166748047
    6. '       ' → logprob: -12.003002166748047
    7. '()))' → logprob: -12.128002166748047
    8. '));' → logprob: -12.378002166748047
    9. ' ' → logprob: -12.628002166748047
    10. '   ' → logprob: -12.878002166748047

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012979383580386639
    2. ')' → logprob: -4.512979507446289
    3. ',' → logprob: -7.762979507446289
    4. '<|end|>' → logprob: -7.762979507446289
    5. '       ' → logprob: -8.262979507446289
    6. '
' → logprob: -8.512979507446289
    7. '            
' → logprob: -8.637979507446289
    8. '		' → logprob: -9.262979507446289
    9. '	       ' → logprob: -9.262979507446289
    10. '          ' → logprob: -10.512979507446289

Token 212: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23042558133602142
    2. ' countries' → logprob: -1.8554255962371826
    3. 'countries' → logprob: -3.1054255962371826
    4. '   ' → logprob: -6.7304253578186035
    5. ' if' → logprob: -7.4804253578186035
    6. ' total' → logprob: -7.6054253578186035
    7. '           ' → logprob: -7.7304253578186035
    8. '        
' → logprob: -8.355425834655762
    9. '
' → logprob: -8.355425834655762
    10. ' ' → logprob: -8.605425834655762

Token 213: ' On' (ID: 2160)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.47601547837257385
    2. ' countries' → logprob: -1.6010154485702515
    3. 'total' → logprob: -2.226015567779541
    4. ' total' → logprob: -3.726015567779541
    5. '       ' → logprob: -3.851015567779541
    6. 'max' → logprob: -5.351015567779541
    7. '   ' → logprob: -5.601015567779541
    8. 'assert' → logprob: -5.726015567779541
    9. 'sum' → logprob: -6.101015567779541
    10. '#' → logprob: -6.476015567779541

Token 214: ' stock' (ID: 6546)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.25910332798957825
    2. ' countries' → logprob: -1.8841032981872559
    3. 'contin' → logprob: -4.134103298187256
    4. 'total' → logprob: -4.384103298187256
    5. '.append' → logprob: -4.384103298187256
    6. 'for' → logprob: -4.884103298187256
    7. 's' → logprob: -5.634103298187256
    8. 'sort' → logprob: -6.009103298187256
    9. 'sum' → logprob: -6.009103298187256
    10. 'continue' → logprob: -6.134103298187256

Token 215: 'e' (ID: 68)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.9071012735366821
    2. '           ' → logprob: -1.4071012735366821
    3. '.append' → logprob: -2.0321011543273926
    4. 'e' → logprob: -2.5321011543273926
    5. 'er' → logprob: -3.1571011543273926
    6. '       ' → logprob: -3.6571011543273926
    7. ' countries' → logprob: -3.7821011543273926
    8. ')' → logprob: -4.782101154327393
    9. 're' → logprob: -4.907101154327393
    10. '   ' → logprob: -5.032101154327393

Token 216: ' la' (ID: 557)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.45251381397247314
    2. 'countries' → logprob: -1.7025138139724731
    3. '(m' → logprob: -2.7025136947631836
    4. 'miss' → logprob: -3.2025136947631836
    5. 'c' → logprob: -3.9525136947631836
    6. '(' → logprob: -3.9525136947631836
    7. ' (' → logprob: -4.077513694763184
    8. '   ' → logprob: -4.702513694763184
    9. ' countries' → logprob: -6.452513694763184
    10. 'sum' → logprob: -6.827513694763184

Token 217: ' liste' (ID: 31719)
  Prédit: 'miss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'miss' → logprob: -0.2244500070810318
    2. 'countries' → logprob: -2.22445011138916
    3. '(' → logprob: -3.47445011138916
    4. '(m' → logprob: -4.22445011138916
    5. 'c' → logprob: -4.34945011138916
    6. 'sorted' → logprob: -4.97445011138916
    7. 'sum' → logprob: -5.34945011138916
    8. '(c' → logprob: -5.59945011138916
    9. 'mis' → logprob: -5.84945011138916
    10. '(
' → logprob: -5.84945011138916

Token 218: ' dans' (ID: 2671)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8948323726654053
    2. 'des' → logprob: -1.2698323726654053
    3. ' missiles' → logprob: -2.3948323726654053
    4. '.append' → logprob: -2.8948323726654053
    5. '<|end|>' → logprob: -3.0198323726654053
    6. '(m' → logprob: -3.1448323726654053
    7. ' (' → logprob: -4.394832611083984
    8. 'miss' → logprob: -4.519832611083984
    9. '(' → logprob: -4.644832611083984
    10. 'countries' → logprob: -5.144832611083984

Token 219: ' l' (ID: 305)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.0022499379701912403
    2. ' countries' → logprob: -6.127249717712402
    3. 'c' → logprob: -11.127249717712402
    4. '   ' → logprob: -11.627249717712402
    5. '(c' → logprob: -12.252249717712402
    6. '(' → logprob: -12.502249717712402
    7. 'tuple' → logprob: -12.502249717712402
    8. 'a' → logprob: -12.752249717712402
    9. ')' → logprob: -12.877249717712402
    10. 'contin' → logprob: -13.127249717712402

Token 220: ''ordre' (ID: 124753)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.0028433911502361298
    2. ' countries' → logprob: -6.377843379974365
    3. 'c' → logprob: -8.002843856811523
    4. 'p' → logprob: -8.252843856811523
    5. 'country' → logprob: -8.877843856811523
    6. 'list' → logprob: -9.752843856811523
    7. 'liste' → logprob: -9.877843856811523
    8. 'tuple' → logprob: -9.877843856811523
    9. '[' → logprob: -10.252843856811523
    10. '[]' → logprob: -10.502843856811523

Token 221: ' donné' (ID: 52079)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.342383474111557
    2. '           ' → logprob: -2.34238338470459
    3. 'des' → logprob: -3.59238338470459
    4. 'countries' → logprob: -3.59238338470459
    5. 'append' → logprob: -3.71738338470459
    6. '.reverse' → logprob: -3.71738338470459
    7. '               ' → logprob: -3.84238338470459
    8. '[::-' → logprob: -3.96738338470459
    9. 're' → logprob: -4.34238338470459
    10. 'reverse' → logprob: -4.96738338470459

Token 222: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011600388213992119
    2. ',' → logprob: -5.261600494384766
    3. '       ' → logprob: -5.511600494384766
    4. 'countries' → logprob: -6.511600494384766
    5. ' countries' → logprob: -7.511600494384766
    6. ')' → logprob: -9.261600494384766
    7. ' ,' → logprob: -10.136600494384766
    8. ',
' → logprob: -10.386600494384766
    9. ',c' → logprob: -10.761600494384766
    10. '
' → logprob: -11.011600494384766

Token 223: 'du' (ID: 698)
  Prédit: ' missiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' missiles' → logprob: -1.2972384691238403
    2. 'miss' → logprob: -2.172238349914551
    3. 'countries' → logprob: -2.422238349914551
    4. ')' → logprob: -2.422238349914551
    5. ',' → logprob: -2.797238349914551
    6. '),' → logprob: -3.422238349914551
    7. ')
' → logprob: -3.422238349914551
    8. '])' → logprob: -3.422238349914551
    9. '[::-' → logprob: -3.422238349914551
    10. '])
' → logprob: -3.672238349914551

Token 224: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3768214285373688
    2. ' plus' → logprob: -2.751821517944336
    3. 'p' → logprob: -3.001821517944336
    4. 'prem' → logprob: -3.126821517944336
    5. 'bas' → logprob: -4.001821517944336
    6. 'dé' → logprob: -4.501821517944336
    7. 'm' → logprob: -4.626821517944336
    8. 'max' → logprob: -4.751821517944336
    9. 'min' → logprob: -4.876821517944336
    10. 'mil' → logprob: -5.001821517944336

Token 225: ' récent' (ID: 189647)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.4066688120365143
    2. 'grand' → logprob: -1.906668782234192
    3. 'fort' → logprob: -2.1566689014434814
    4. 'pro' → logprob: -3.7816689014434814
    5. 'g' → logprob: -4.656668663024902
    6. 'pet' → logprob: -4.781668663024902
    7. '
' → logprob: -5.281668663024902
    8. ' puissant' → logprob: -5.406668663024902
    9. 'loin' → logprob: -6.156668663024902
    10. 'près' → logprob: -6.281668663024902

Token 226: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.016478167846798897
    2. 'au' → logprob: -4.766478061676025
    3. ')' → logprob: -5.516478061676025
    4. ' aux' → logprob: -6.391478061676025
    5. ',' → logprob: -7.516478061676025
    6. ' vers' → logprob: -7.516478061676025
    7. 'aux' → logprob: -8.391478538513184
    8. ' à' → logprob: -8.641478538513184
    9. ' )' → logprob: -8.766478538513184
    10. '),' → logprob: -9.766478538513184

Token 227: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.1702793389558792
    2. 'ancien' → logprob: -1.9202793836593628
    3. ' plus' → logprob: -5.420279502868652
    4. 'moins' → logprob: -6.170279502868652
    5. 'dern' → logprob: -6.795279502868652
    6. 'anc' → logprob: -7.420279502868652
    7. ' ancien' → logprob: -7.920279502868652
    8. 'loin' → logprob: -8.170279502868652
    9. 'v' → logprob: -8.670279502868652
    10. 'old' → logprob: -8.795279502868652

Token 228: ' ancien' (ID: 81732)
  Prédit: 'ancien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancien' → logprob: -0.15344080328941345
    2. 'v' → logprob: -2.1534407138824463
    3. 'anc' → logprob: -4.403440952301025
    4. 'l' → logprob: -5.528440952301025
    5. 'loin' → logprob: -5.903440952301025
    6. 'vie' → logprob: -6.403440952301025
    7. 'anci' → logprob: -6.528440952301025
    8. '
' → logprob: -6.903440952301025
    9. 'ancienne' → logprob: -7.653440952301025
    10. ' ancien' → logprob: -7.778440952301025

Token 229: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07874932140111923
    2. ' )' → logprob: -3.203749418258667
    3. '           ' → logprob: -3.953749418258667
    4. '),' → logprob: -4.828749179840088
    5. ',' → logprob: -5.828749179840088
    6. ' missiles' → logprob: -6.328749179840088
    7. ' ),' → logprob: -7.328749179840088
    8. ').' → logprob: -7.578749179840088
    9. ')
' → logprob: -7.578749179840088
    10. ' des' → logprob: -8.078749656677246

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007351400796324015
    2. '            
' → logprob: -5.382351398468018
    3. ')' → logprob: -6.507351398468018
    4. '            ' → logprob: -7.882351398468018
    5. ' )' → logprob: -9.007351875305176
    6. '          ' → logprob: -9.382351875305176
    7. ' mais' → logprob: -9.632351875305176
    8. '       ' → logprob: -9.757351875305176
    9. '		' → logprob: -9.757351875305176
    10. ' ' → logprob: -10.257351875305176

Token 231: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031777262687683105
    2. '       ' → logprob: -4.156777381896973
    3. ')' → logprob: -5.281777381896973
    4. ' )' → logprob: -5.781777381896973
    5. ' mais' → logprob: -6.406777381896973
    6. '            
' → logprob: -6.531777381896973
    7. '#' (adapté à ' #') → logprob: -7.156777381896973
    8. '            ' → logprob: -7.531777381896973
    9. 'mais' → logprob: -7.531777381896973
    10. '   ' → logprob: -8.031777381896973

Token 232: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.774871826171875
    2. '           ' → logprob: -1.649871826171875
    3. '#' → logprob: -1.899871826171875
    4. 'mais' → logprob: -2.649871826171875
    5. ' mais' → logprob: -2.774871826171875
    6. ' ce' → logprob: -4.024871826171875
    7. ' #' → logprob: -4.774871826171875
    8. 'et' → logprob: -4.899871826171875
    9. 'ce' → logprob: -4.899871826171875
    10. ' et' → logprob: -5.774871826171875

Token 233: ' comme' (ID: 7971)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6722816228866577
    2. 'on' → logprob: -1.1722816228866577
    3. '#' → logprob: -2.5472817420959473
    4. 'les' → logprob: -4.047281742095947
    5. ' les' → logprob: -4.172281742095947
    6. '           ' → logprob: -4.547281742095947
    7. 'reverse' → logprob: -5.047281742095947
    8. 'inverse' → logprob: -5.172281742095947
    9. ' #' → logprob: -5.547281742095947
    10. ' nous' → logprob: -6.047281742095947

Token 234: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6941801905632019
    2. ' nous' → logprob: -1.8191802501678467
    3. 'on' → logprob: -1.9441802501678467
    4. 'nous' → logprob: -2.3191802501678467
    5. 'les' → logprob: -4.069180011749268
    6. 'we' → logprob: -4.194180011749268
    7. ' missiles' → logprob: -4.444180011749268
    8. 'la' → logprob: -4.569180011749268
    9. ' la' → logprob: -4.694180011749268
    10. ' les' → logprob: -4.944180011749268

Token 235: ' destruction' (ID: 37700)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -1.2013040781021118
    2. '#' → logprob: -2.5763039588928223
    3. 'solution' → logprob: -2.7013039588928223
    4. 'liste' → logprob: -2.9513039588928223
    5. 'question' → logprob: -3.0763039588928223
    6. 'mission' → logprob: -3.0763039588928223
    7. 'condition' → logprob: -3.4513039588928223
    8. ' suite' → logprob: -3.5763039588928223
    9. ' question' → logprob: -3.9513039588928223
    10. 'problem' → logprob: -3.9513039588928223

Token 236: ' se' (ID: 458)
  Prédit: ' se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -0.3876037299633026
    2. ' des' → logprob: -2.262603759765625
    3. 'se' → logprob: -2.512603759765625
    4. 'des' → logprob: -3.137603759765625
    5. ' doit' → logprob: -4.137603759765625
    6. ' est' → logprob: -4.387603759765625
    7. 's' → logprob: -4.387603759765625
    8. ' s' → logprob: -4.637603759765625
    9. ' devra' → logprob: -4.762603759765625
    10. ' is' → logprob: -5.762603759765625

Token 237: ' fait' (ID: 7473)
  Prédit: ' fait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fait' → logprob: -0.36130306124687195
    2. 'fait' → logprob: -1.3613030910491943
    3. ' fera' → logprob: -3.4863030910491943
    4. 'f' → logprob: -4.861302852630615
    5. ' produit' → logprob: -5.736302852630615
    6. 'produ' → logprob: -6.111302852630615
    7. '
' → logprob: -7.236302852630615
    8. '#' → logprob: -8.111303329467773
    9. 'ffect' → logprob: -8.111303329467773
    10. 'effect' → logprob: -8.861303329467773

Token 238: ' du' (ID: 1462)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -1.2550969123840332
    2. 'dans' → logprob: -1.3800969123840332
    3. ' à' → logprob: -1.7550969123840332
    4. ' en' → logprob: -2.130096912384033
    5. 'en' → logprob: -2.880096912384033
    6. ' du' → logprob: -3.505096912384033
    7. 'à' → logprob: -4.380096912384033
    8. 'du' → logprob: -4.505096912384033
    9. 'de' → logprob: -4.630096912384033
    10. ' de' → logprob: -4.630096912384033

Token 239: ' plus' (ID: 2932)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.8247842788696289
    2. 'plus' → logprob: -1.074784278869629
    3. 'c' → logprob: -2.199784278869629
    4. ' plus' → logprob: -2.949784278869629
    5. ' dernier' → logprob: -4.574784278869629
    6. 'cot' → logprob: -4.699784278869629
    7. ' missile' → logprob: -4.699784278869629
    8. 'bas' → logprob: -5.449784278869629
    9. 'ancien' → logprob: -5.449784278869629
    10. 'fin' → logprob: -6.074784278869629

Token 240: ' ancien' (ID: 81732)
  Prédit: 'ancien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancien' → logprob: -0.06052430719137192
    2. 'v' → logprob: -4.0605244636535645
    3. 'dern' → logprob: -4.1855244636535645
    4. 'ré' → logprob: -4.3105244636535645
    5. 'anc' → logprob: -5.6855244636535645
    6. ' récent' → logprob: -6.3105244636535645
    7. 'recent' → logprob: -6.6855244636535645
    8. 'c' → logprob: -6.6855244636535645
    9. '```' → logprob: -7.0605244636535645
    10. ' ancien' → logprob: -7.3105244636535645

Token 241: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.022664932534098625
    2. ' vers' → logprob: -4.272665023803711
    3. 'au' → logprob: -5.022665023803711
    4. ')' → logprob: -8.022665023803711
    5. ',' → logprob: -8.147665023803711
    6. ' aux' → logprob: -8.397665023803711
    7. 'vers' → logprob: -8.522665023803711
    8. '),' → logprob: -9.147665023803711
    9. ' à' → logprob: -9.272665023803711
    10. ' missile' → logprob: -9.397665023803711

Token 242: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5237131714820862
    2. 'dern' → logprob: -1.1487131118774414
    3. 'prem' → logprob: -3.2737131118774414
    4. 'la' → logprob: -3.6487131118774414
    5. ' plus' → logprob: -5.148713111877441
    6. 'le' → logprob: -5.273713111877441
    7. ' dernier' → logprob: -5.523713111877441
    8. 'dé' → logprob: -6.148713111877441
    9. 'der' → logprob: -6.773713111877441
    10. 'de' → logprob: -6.898713111877441

Token 243: ' récent' (ID: 189647)
  Prédit: 'ancien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancien' → logprob: -1.3211010694503784
    2. 'dern' → logprob: -1.5711010694503784
    3. 'recent' → logprob: -1.8211010694503784
    4. 'ré' → logprob: -1.8211010694503784
    5. 'loin' → logprob: -2.321101188659668
    6. 'près' → logprob: -4.196101188659668
    7. ' récent' → logprob: -4.196101188659668
    8. 'r' → logprob: -4.321101188659668
    9. 'prem' → logprob: -4.821101188659668
    10. 'dé' → logprob: -4.821101188659668

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007600007578730583
    2. ',
' → logprob: -5.507599830627441
    3. '           ' → logprob: -6.507599830627441
    4. ' ,' → logprob: -6.632599830627441
    5. ')' → logprob: -7.632599830627441
    6. '),' → logprob: -9.007599830627441
    7. '#' → logprob: -11.507599830627441
    8. '               ' → logprob: -11.507599830627441
    9. ' (' → logprob: -11.632599830627441
    10. ' )' → logprob: -11.757599830627441

Token 245: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06177058070898056
    2. ' missiles' → logprob: -3.3117706775665283
    3. 'countries' → logprob: -5.436770439147949
    4. ' on' → logprob: -5.436770439147949
    5. '       ' → logprob: -5.811770439147949
    6. '#' → logprob: -6.061770439147949
    7. '            ' → logprob: -6.436770439147949
    8. '            
' → logprob: -6.686770439147949
    9. ' ' → logprob: -6.936770439147949
    10. ' #' → logprob: -7.311770439147949

Token 246: '
' (ID: 198)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.5312830805778503
    2. ' reverse' → logprob: -1.4062831401824951
    3. '.reverse' → logprob: -2.031283140182495
    4. 're' → logprob: -4.031282901763916
    5. ' revers' → logprob: -6.031282901763916
    6. 'ré' → logprob: -6.281282901763916
    7. ' missiles' → logprob: -6.781282901763916
    8. ' stock' → logprob: -6.906282901763916
    9. 'stock' → logprob: -7.031282901763916
    10. 'countries' → logprob: -7.031282901763916

Token 247: '           ' (ID: 352)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.5352506041526794
    2. '.reverse' → logprob: -1.7852506637573242
    3. 'reverse' → logprob: -2.285250663757324
    4. ' les' → logprob: -3.285250663757324
    5. ' stock' → logprob: -4.160250663757324
    6. ' inverse' → logprob: -4.285250663757324
    7. 'inverse' → logprob: -4.535250663757324
    8. '           ' → logprob: -4.660250663757324
    9. 're' → logprob: -4.660250663757324
    10. ' invers' → logprob: -4.785250663757324

Token 248: ' #' (ID: 1069)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.6861545443534851
    2. 'reverse' → logprob: -1.4361546039581299
    3. '.reverse' → logprob: -2.43615460395813
    4. ' missiles' → logprob: -2.43615460395813
    5. 're' → logprob: -3.93615460395813
    6. ' stock' → logprob: -4.061154365539551
    7. 'inverse' → logprob: -4.686154365539551
    8. ' les' → logprob: -4.936154365539551
    9. 'miss' → logprob: -5.311154365539551
    10. ' inverse' → logprob: -5.311154365539551

Token 249: ' invers' (ID: 38721)
  Prédit: 'miss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'miss' → logprob: -0.8558502793312073
    2. ' missiles' → logprob: -0.9808502793312073
    3. 'reverse' → logprob: -1.9808502197265625
    4. ' reverse' → logprob: -3.1058502197265625
    5. '.reverse' → logprob: -4.3558502197265625
    6. 'mis' → logprob: -6.9808502197265625
    7. '   ' → logprob: -7.8558502197265625
    8. 're' → logprob: -7.9808502197265625
    9. 'rev' → logprob: -7.9808502197265625
    10. 'countries' → logprob: -7.9808502197265625

Token 250: 'era' (ID: 2060)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.18482768535614014
    2. ')' → logprob: -3.1848278045654297
    3. 'erse' → logprob: -3.3098278045654297
    4. 'ert' → logprob: -3.6848278045654297
    5. 'e' → logprob: -4.30982780456543
    6. 'ate' → logprob: -4.80982780456543
    7. 'et' → logprob: -4.80982780456543
    8. 'es' → logprob: -4.93482780456543
    9. 'erte' → logprob: -5.68482780456543
    10. 'ite' → logprob: -5.80982780456543

Token 251: ' cette' (ID: 7696)
  Prédit: ' missiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' missiles' → logprob: -0.16494224965572357
    2. ' la' → logprob: -2.5399422645568848
    3. 'miss' → logprob: -3.9149422645568848
    4. 'les' → logprob: -4.414942264556885
    5. 'la' → logprob: -4.414942264556885
    6. ' les' → logprob: -4.414942264556885
    7. ')' → logprob: -5.539942264556885
    8. ' ' → logprob: -5.789942264556885
    9. '<|end|>' → logprob: -6.039942264556885
    10. ' )' → logprob: -6.664942264556885

Token 252: ' liste' (ID: 31719)
  Prédit: ' missiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' missiles' → logprob: -0.7345098853111267
    2. 'list' → logprob: -1.7345099449157715
    3. 'liste' → logprob: -2.2345099449157715
    4. ' liste' → logprob: -2.4845099449157715
    5. ' list' → logprob: -2.7345099449157715
    6. 'miss' → logprob: -2.7345099449157715
    7. ')' → logprob: -5.9845099449157715
    8. 'lists' → logprob: -6.1095099449157715
    9. 's' → logprob: -6.2345099449157715
    10. ' missile' → logprob: -6.4845099449157715

Token 253: ' lors' (ID: 15456)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00333087588660419
    2. ',' → logprob: -6.753330707550049
    3. ' missiles' → logprob: -7.753330707550049
    4. '[::-' → logprob: -7.753330707550049
    5. '.' → logprob: -7.878330707550049
    6. ')' → logprob: -8.003331184387207
    7. '.reverse' → logprob: -9.378331184387207
    8. ',
' → logprob: -9.503331184387207
    9. '            
' → logprob: -9.628331184387207
    10. ')
' → logprob: -9.878331184387207

Token 254: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7301943302154541
    2. 'l' → logprob: -1.480194330215454
    3. 'de' → logprob: -2.230194330215454
    4. ' la' → logprob: -2.480194330215454
    5. 'la' → logprob: -3.105194330215454
    6. ' l' → logprob: -4.105194091796875
    7. ' du' → logprob: -4.855194091796875
    8. 'd' → logprob: -4.980194091796875
    9. '   ' → logprob: -5.105194091796875
    10. 'du' → logprob: -5.605194091796875

Token 255: ' traitement' (ID: 42434)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.15950249135494232
    2. ' l' → logprob: -2.4095025062561035
    3. ' stockage' → logprob: -3.9095025062561035
    4. 'la' → logprob: -4.0345025062561035
    5. ' la' → logprob: -4.7845025062561035
    6. 'son' → logprob: -6.2845025062561035
    7. ' traitement' → logprob: -6.5345025062561035
    8. 'append' → logprob: -7.0345025062561035
    9. 'len' → logprob: -7.1595025062561035
    10. ' son' → logprob: -7.1595025062561035

Token 256: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012724967673420906
    2. '.' → logprob: -8.001272201538086
    3. ',' → logprob: -8.126272201538086
    4. '            
' → logprob: -8.251272201538086
    5. '<|end|>' → logprob: -9.001272201538086
    6. ')' → logprob: -9.001272201538086
    7. '       ' → logprob: -10.626272201538086
    8. '<|end|>' → logprob: -10.876272201538086
    9. '          ' → logprob: -11.001272201538086
    10. ',
' → logprob: -11.626272201538086

Token 257: ' ou' (ID: 2031)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13473212718963623
    2. ')' → logprob: -2.884732246398926
    3. '       ' → logprob: -3.509732246398926
    4. '            
' → logprob: -4.134732246398926
    5. ' )' → logprob: -4.634732246398926
    6. ')
' → logprob: -6.009732246398926
    7. ' afin' → logprob: -6.384732246398926
    8. '        
' → logprob: -6.759732246398926
    9. ' )
' → logprob: -6.759732246398926
    10. '
' → logprob: -6.884732246398926

Token 258: ' on' (ID: 402)
  Prédit: ' bien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bien' → logprob: -0.649833619594574
    2. 'bien' → logprob: -2.1498336791992188
    3. ' on' → logprob: -2.6498336791992188
    4. ' au' → logprob: -3.1498336791992188
    5. ' simplement' → logprob: -3.7748336791992188
    6. ' les' → logprob: -4.274833679199219
    7. ' continuer' → logprob: -4.524833679199219
    8. 'contin' → logprob: -4.524833679199219
    9. '<|end|>' → logprob: -4.649833679199219
    10. ' stock' → logprob: -4.774833679199219

Token 259: ' travaille' (ID: 92596)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.7198951840400696
    2. 'stock' → logprob: -1.3448951244354248
    3. 'pop' → logprob: -2.969895124435425
    4. ' les' → logprob: -3.094895124435425
    5. 'les' → logprob: -3.594895124435425
    6. 'tra' → logprob: -4.094895362854004
    7. 'trait' → logprob: -4.219895362854004
    8. 'l' → logprob: -4.719895362854004
    9. ' peut' → logprob: -4.844895362854004
    10. 'util' → logprob: -4.969895362854004

Token 260: ' directement' (ID: 52317)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.4342982769012451
    2. ' directement' → logprob: -2.184298276901245
    3. 'avec' → logprob: -2.559298276901245
    4. 'direct' → logprob: -2.559298276901245
    5. ' with' → logprob: -3.434298276901245
    6. '[::-' → logprob: -4.684298515319824
    7. 'with' → logprob: -4.934298515319824
    8. 'sur' → logprob: -5.309298515319824
    9. ' à' → logprob: -5.809298515319824
    10. ' en' → logprob: -5.934298515319824

Token 261: ' en' (ID: 469)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.06265999376773834
    2. 'avec' → logprob: -3.687659978866577
    3. ' with' → logprob: -4.062660217285156
    4. 'sur' → logprob: -5.437660217285156
    5. ' en' → logprob: -5.687660217285156
    6. ' sur' → logprob: -5.812660217285156
    7. 'with' → logprob: -6.437660217285156
    8. ' à' → logprob: -7.062660217285156
    9. '[::-' → logprob: -7.812660217285156
    10. ' reversed' → logprob: -7.812660217285156

Token 262: ' ordre' (ID: 103061)
  Prédit: 'mode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mode' → logprob: -0.6976105570793152
    2. 'reverse' → logprob: -1.44761061668396
    3. ' sens' → logprob: -2.69761061668396
    4. 'sens' → logprob: -2.94761061668396
    5. 'inverse' → logprob: -3.32261061668396
    6. 're' → logprob: -3.44761061668396
    7. ' mode' → logprob: -4.322610378265381
    8. 'ordre' → logprob: -4.447610378265381
    9. 'pile' → logprob: -4.697610378265381
    10. 'append' → logprob: -5.197610378265381

Token 263: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.39081111550331116
    2. ' invers' → logprob: -1.3908110857009888
    3. 'inverse' → logprob: -2.7658112049102783
    4. '_inverse' → logprob: -5.390810966491699
    5. ' reversed' → logprob: -6.015810966491699
    6. ' reverse' → logprob: -6.640810966491699
    7. '[::-' → logprob: -6.890810966491699
    8. '.reverse' → logprob: -7.640810966491699
    9. 'reverse' → logprob: -7.640810966491699
    10. 're' → logprob: -8.2658109664917

Token 264: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06111790984869003
    2. '       ' → logprob: -3.3111178874969482
    3. '.' → logprob: -3.9361178874969482
    4. ',' → logprob: -6.686118125915527
    5. ')' → logprob: -8.061118125915527
    6. '<|end|>' → logprob: -8.186118125915527
    7. '.
' → logprob: -8.561118125915527
    8. 's' → logprob: -8.561118125915527
    9. '          ' → logprob: -8.811118125915527
    10. ').' → logprob: -9.061118125915527

Token 265: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010493416339159012
    2. '           ' → logprob: -5.135493278503418
    3. 'countries' → logprob: -6.385493278503418
    4. '<|end|>' → logprob: -6.510493278503418
    5. ' countries' → logprob: -8.010493278503418
    6. '        
' → logprob: -8.260493278503418
    7. '   ' → logprob: -8.385493278503418
    8. '
' → logprob: -8.760493278503418
    9. ')' → logprob: -9.260493278503418
    10. '<|end|>' → logprob: -9.635493278503418

Token 266: ' #' (ID: 1069)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.3762371242046356
    2. '       ' → logprob: -1.376237154006958
    3. ' countries' → logprob: -3.001237154006958
    4. '           ' → logprob: -4.876236915588379
    5. '   ' → logprob: -6.126236915588379
    6. ' missiles' → logprob: -7.501236915588379
    7. '
' → logprob: -8.376236915588379
    8. 'c' → logprob: -8.376236915588379
    9. 'miss' → logprob: -9.126236915588379
    10. '#' (adapté à ' #') → logprob: -9.751236915588379

Token 267: ' Pour' (ID: 13931)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.8361355066299438
    2. ' countries' → logprob: -1.2111355066299438
    3. '       ' → logprob: -1.3361355066299438
    4. '           ' → logprob: -6.336135387420654
    5. '
' → logprob: -6.836135387420654
    6. '   ' → logprob: -7.086135387420654
    7. ' missiles' → logprob: -7.711135387420654
    8. 'c' → logprob: -7.961135387420654
    9. '#' → logprob: -8.586135864257812
    10. 'for' → logprob: -9.086135864257812

Token 268: ' simpl' (ID: 15693)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9090311527252197
    2. 'i' → logprob: -2.0340311527252197
    3. ' l' → logprob: -2.4090311527252197
    4. '_' → logprob: -2.5340311527252197
    5. ' _' → logprob: -2.6590311527252197
    6. 'l' → logprob: -3.5340311527252197
    7. ' missile' → logprob: -3.7840311527252197
    8. ' m' → logprob: -3.9090311527252197
    9. ' la' → logprob: -4.034030914306641
    10. ' missiles' → logprob: -4.409030914306641

Token 269: 'ification' (ID: 3166)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.042219191789627075
    2. 'ité' → logprob: -3.5422191619873047
    3. 'icit' → logprob: -4.917219161987305
    4. 'icity' → logprob: -6.917219161987305
    5. 'ici' → logprob: -7.667219161987305
    6. 'ity' → logprob: -7.792219161987305
    7. '```' → logprob: -8.167219161987305
    8. 'city' → logprob: -8.292219161987305
    9. 'c' → logprob: -8.292219161987305
    10. 'e' → logprob: -8.417219161987305

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042909324169158936
    2. ' ,' → logprob: -4.167909145355225
    3. '           ' → logprob: -4.292909145355225
    4. ',c' → logprob: -4.917909145355225
    5. ',
' → logprob: -6.042909145355225
    6. 'countries' → logprob: -6.542909145355225
    7. ')' → logprob: -7.667909145355225
    8. '),' → logprob: -8.167909622192383
    9. '   ' → logprob: -9.042909622192383
    10. ',m' → logprob: -9.292909622192383

Token 271: ' on' (ID: 402)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.3647759258747101
    2. ' countries' → logprob: -1.8647758960723877
    3. 'contin' → logprob: -3.3647758960723877
    4. ' missiles' → logprob: -3.7397758960723877
    5. 'pass' → logprob: -3.8647758960723877
    6. ' on' → logprob: -4.239776134490967
    7. '           ' → logprob: -4.489776134490967
    8. 'continue' → logprob: -4.864776134490967
    9. 'for' → logprob: -4.989776134490967
    10. ' continue' → logprob: -5.114776134490967

Token 272: ' inverse' (ID: 53743)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.74602872133255
    2. ' stock' → logprob: -1.1210286617279053
    3. ' travaille' → logprob: -2.7460286617279053
    4. 'reverse' → logprob: -3.1210286617279053
    5. ' reverse' → logprob: -4.121028900146484
    6. 'tr' → logprob: -4.121028900146484
    7. 'op' → logprob: -4.121028900146484
    8. 'append' → logprob: -4.621028900146484
    9. 'inverse' → logprob: -5.371028900146484
    10. 'store' → logprob: -5.621028900146484

Token 273: ' la' (ID: 557)
  Prédit: ' missiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' missiles' → logprob: -0.3534415066242218
    2. ' la' → logprob: -1.7284414768218994
    3. 'les' → logprob: -3.9784414768218994
    4. ' les' → logprob: -4.1034417152404785
    5. 'la' → logprob: -4.3534417152404785
    6. 's' → logprob: -4.4784417152404785
    7. '           ' → logprob: -4.4784417152404785
    8. 'er' → logprob: -5.2284417152404785
    9. ')' → logprob: -5.2284417152404785
    10. 'r' → logprob: -5.4784417152404785

Token 274: ' liste' (ID: 31719)
  Prédit: 'miss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'miss' → logprob: -0.1745993196964264
    2. ' missiles' → logprob: -2.0495994091033936
    3. 'list' → logprob: -4.6745991706848145
    4. 'countries' → logprob: -4.7995991706848145
    5. 'liste' → logprob: -5.4245991706848145
    6. 'mis' → logprob: -5.4245991706848145
    7. ' missile' → logprob: -6.6745991706848145
    8. ' list' → logprob: -7.6745991706848145
    9. ' miss' → logprob: -7.6745991706848145
    10. 'lists' → logprob: -7.6745991706848145

Token 275: ' ici' (ID: 27994)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07128851115703583
    2. ' missiles' → logprob: -3.321288585662842
    3. ',' → logprob: -4.571288585662842
    4. '[::-' → logprob: -5.321288585662842
    5. '.' → logprob: -5.821288585662842
    6. ')' → logprob: -5.821288585662842
    7. '               ' → logprob: -5.946288585662842
    8. 's' → logprob: -6.696288585662842
    9. '(m' → logprob: -6.696288585662842
    10. '.reverse' → logprob: -7.446288585662842

Token 276: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016439244151115417
    2. '[::-' → logprob: -4.391439437866211
    3. ',' → logprob: -6.141439437866211
    4. '       ' → logprob: -7.766439437866211
    5. ' missiles' → logprob: -7.891439437866211
    6. '.reverse' → logprob: -8.391439437866211
    7. '.' → logprob: -9.016439437866211
    8. ')' → logprob: -9.141439437866211
    9. '               ' → logprob: -9.891439437866211
    10. '
' → logprob: -9.891439437866211

Token 277: ' avoir' (ID: 16595)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.7175211906433105
    2. 'les' → logprob: -2.4675211906433105
    3. 'mettre' → logprob: -2.5925211906433105
    4. ' missiles' → logprob: -3.4675211906433105
    5. 'fac' → logprob: -3.4675211906433105
    6. ' les' → logprob: -3.5925211906433105
    7. 'la' → logprob: -3.5925211906433105
    8. ' travailler' → logprob: -3.7175211906433105
    9. 'miss' → logprob: -3.8425211906433105
    10. 'trait' → logprob: -3.8425211906433105

Token 278: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8060249090194702
    2. ' les' → logprob: -0.9310249090194702
    3. ' missiles' → logprob: -2.1810250282287598
    4. ' la' → logprob: -3.9310250282287598
    5. 'la' → logprob: -4.30602502822876
    6. 'le' → logprob: -5.55602502822876
    7. ' le' → logprob: -6.18102502822876
    8. ' l' → logprob: -6.30602502822876
    9. 'miss' → logprob: -6.93102502822876
    10. 'l' → logprob: -7.18102502822876

Token 279: ' destruction' (ID: 37700)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.6583166718482971
    2. ' missiles' → logprob: -2.0333166122436523
    3. 'miss' → logprob: -2.1583166122436523
    4. ' plus' → logprob: -2.1583166122436523
    5. 'old' → logprob: -3.1583166122436523
    6. 'ancien' → logprob: -3.6583166122436523
    7. ' oldest' → logprob: -4.908316612243652
    8. 'ancienne' → logprob: -5.033316612243652
    9. 'ordre' → logprob: -5.283316612243652
    10. 'older' → logprob: -5.533316612243652

Token 280: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.3901939392089844
    2. 'en' → logprob: -1.5151939392089844
    3. ' en' → logprob: -1.7651939392089844
    4. ' dans' → logprob: -2.0151939392089844
    5. 'ordre' → logprob: -2.5151939392089844
    6. 'du' → logprob: -3.8901939392089844
    7. ' du' → logprob: -4.390193939208984
    8. 'de' → logprob: -4.515193939208984
    9. ' in' → logprob: -4.640193939208984
    10. ' de' → logprob: -4.640193939208984

Token 281: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.32266199588775635
    2. ' l' → logprob: -1.3226619958877563
    3. 'ordre' → logprob: -5.072661876678467
    4. 'la' → logprob: -7.322661876678467
    5. 'le' → logprob: -7.322661876678467
    6. ' sens' → logprob: -8.072662353515625
    7. 'sens' → logprob: -8.197662353515625
    8. ' la' → logprob: -9.322662353515625
    9. 'leur' → logprob: -9.447662353515625
    10. ''ordre' → logprob: -9.447662353515625

Token 282: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.011664717458188534
    2. 'ordre' → logprob: -4.511664867401123
    3. '’ordre' → logprob: -7.636664867401123
    4. ''' → logprob: -9.761664390563965
    5. '[' → logprob: -10.886664390563965
    6. ' ordre' → logprob: -10.886664390563965
    7. '['' → logprob: -12.136664390563965
    8. ''[' → logprob: -12.136664390563965
    9. ''espace' → logprob: -12.261664390563965
    10. ''ex' → logprob: -12.761664390563965

Token 283: ' d' (ID: 272)
  Prédit: ' inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.20115657150745392
    2. 'inverse' → logprob: -2.3261566162109375
    3. ' invers' → logprob: -3.2011566162109375
    4. ' reverse' → logprob: -4.0761566162109375
    5. 'reverse' → logprob: -4.9511566162109375
    6. '.reverse' → logprob: -5.4511566162109375
    7. '           ' → logprob: -5.8261566162109375
    8. '_inverse' → logprob: -5.8261566162109375
    9. ' reversed' → logprob: -6.3261566162109375
    10. '[::-' → logprob: -6.8261566162109375

Token 284: ''accès' (ID: 116356)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2082573026418686
    2. 'es' → logprob: -1.8332573175430298
    3. ''' → logprob: -4.83325719833374
    4. 'des' → logprob: -5.45825719833374
    5. ' destruction' → logprob: -5.45825719833374
    6. ''arrivée' → logprob: -7.08325719833374
    7. 'é' → logprob: -7.33325719833374
    8. 'u' → logprob: -7.58325719833374
    9. ''entrée' → logprob: -7.58325719833374
    10. ''utilisation' → logprob: -7.58325719833374

Token 285: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005499718710780144
    2. '       ' → logprob: -6.130499839782715
    3. ')' → logprob: -7.255499839782715
    4. ',' → logprob: -7.755499839782715
    5. '               ' → logprob: -7.880499839782715
    6. '.' → logprob: -8.005499839782715
    7. '   ' → logprob: -8.005499839782715
    8. '(m' → logprob: -8.380499839782715
    9. ')
' → logprob: -8.630499839782715
    10. '[::-' → logprob: -9.255499839782715

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060119397938251495
    2. '   ' → logprob: -3.685119390487671
    3. '[::-' → logprob: -4.68511962890625
    4. '       ' → logprob: -4.93511962890625
    5. ')' → logprob: -5.06011962890625
    6. '.reverse' → logprob: -6.18511962890625
    7. ' missiles' → logprob: -6.18511962890625
    8. '               ' → logprob: -7.18511962890625
    9. ')
' → logprob: -7.31011962890625
    10. ',' → logprob: -7.43511962890625

Token 287: ' missiles' (ID: 97169)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.749043345451355
    2. ' missiles' → logprob: -0.749043345451355
    3. 'miss' → logprob: -3.9990434646606445
    4. 'countries' → logprob: -4.3740434646606445
    5. '       ' → logprob: -4.4990434646606445
    6. '   ' → logprob: -5.1240434646606445
    7. ' countries' → logprob: -6.1240434646606445
    8. 'm' → logprob: -7.4990434646606445
    9. 'c' → logprob: -7.7490434646606445
    10. 'mil' → logprob: -7.8740434646606445

Token 288: '.reverse' (ID: 65426)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010668235830962658
    2. ' =' → logprob: -4.8856682777404785
    3. '.reverse' → logprob: -5.8856682777404785
    4. '=m' → logprob: -9.13566780090332
    5. '.' → logprob: -9.26066780090332
    6. '=.' → logprob: -10.63566780090332
    7. '.append' → logprob: -11.13566780090332
    8. '=re' → logprob: -11.26066780090332
    9. '.=' → logprob: -11.63566780090332
    10. '[::-' → logprob: -12.88566780090332

Token 289: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4742704927921295
    2. '()
' → logprob: -0.9742704629898071
    3. '()
' → logprob: -8.724270820617676
    4. '           ' → logprob: -10.974270820617676
    5. '()

' → logprob: -11.599270820617676
    6. '       ' → logprob: -12.849270820617676
    7. ')' → logprob: -14.849270820617676
    8. '(' → logprob: -15.099270820617676
    9. '())' → logprob: -15.224270820617676
    10. '()\' → logprob: -15.849270820617676

Token 290: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015803009271621704
    2. '           ' → logprob: -4.64080286026001
    3. '<|end|>' → logprob: -5.39080286026001
    4. '
' → logprob: -7.89080286026001
    5. ')' → logprob: -8.015803337097168
    6. '   ' → logprob: -8.515803337097168
    7. '        
' → logprob: -9.015803337097168
    8. ',' → logprob: -9.390803337097168
    9. '<|end|>' → logprob: -9.390803337097168
    10. '#' → logprob: -10.140803337097168

Token 291: ' countries' (ID: 8981)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'countries' (adapté à ' countries') → logprob: -0.06678459048271179
    2. ' countries' → logprob: -3.316784620285034
    3. '       ' → logprob: -3.566784620285034
    4. '   ' → logprob: -10.316784858703613
    5. '
' → logprob: -11.066784858703613
    6. 'country' → logprob: -11.316784858703613
    7. 'c' → logprob: -12.066784858703613
    8. '           ' → logprob: -12.441784858703613
    9. 'total' → logprob: -12.441784858703613
    10. '```' → logprob: -12.816784858703613

Token 292: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00038980069803074
    2. '.' → logprob: -7.875389575958252
    3. ' .' → logprob: -12.87539005279541
    4. ').' → logprob: -13.12539005279541
    5. '.extend' → logprob: -13.25039005279541
    6. '.app' → logprob: -13.87539005279541
    7. '.setdefault' → logprob: -14.25039005279541
    8. '.ap' → logprob: -14.87539005279541
    9. '.push' → logprob: -15.00039005279541
    10. '.add' → logprob: -15.37539005279541

Token 293: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.011597682721912861
    2. '((' → logprob: -4.511597633361816
    3. '(' → logprob: -7.511597633361816
    4. '({'' → logprob: -14.011597633361816
    5. '({
' → logprob: -14.136597633361816
    6. '([' → logprob: -14.636597633361816
    7. ' (' → logprob: -15.511597633361816
    8. '(s' → logprob: -15.761597633361816
    9. '(
' → logprob: -16.011598587036133
    10. '({' → logprob: -16.261598587036133

Token 294: 'iss' (ID: 1009)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0399167574942112
    2. ',m' → logprob: -3.664916753768921
    3. ')' → logprob: -4.7899169921875
    4. '(m' → logprob: -6.4149169921875
    5. 'm' → logprob: -7.0399169921875
    6. 'miss' → logprob: -7.5399169921875
    7. 'iss' → logprob: -7.9149169921875
    8. '[' → logprob: -7.9149169921875
    9. '),' → logprob: -8.0399169921875
    10. '[m' → logprob: -8.5399169921875

Token 295: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.00018446780450176448
    2. 'les' → logprob: -8.625184059143066
    3. 'ile' → logprob: -13.000184059143066
    4. 'eles' → logprob: -14.125184059143066
    5. 'ils' → logprob: -14.250184059143066
    6. '```' → logprob: -15.500184059143066
    7. 'ails' → logprob: -15.625184059143066
    8. '[' → logprob: -15.625184059143066
    9. 'els' → logprob: -16.125185012817383
    10. 'es' → logprob: -16.250185012817383

Token 296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013047587708570063
    2. '<|end|>' → logprob: -9.750130653381348
    3. ')
' → logprob: -10.000130653381348
    4. '       ' → logprob: -11.375130653381348
    5. ' )' → logprob: -11.750130653381348
    6. '
' → logprob: -12.875130653381348
    7. '   ' → logprob: -13.125130653381348
    8. ')return' → logprob: -14.000130653381348
    9. '<|end|>' → logprob: -14.375130653381348
    10. ' ' → logprob: -14.750130653381348

Token 297: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5826730132102966
    2. '<|end|>' → logprob: -1.3326730728149414
    3. '
' → logprob: -2.0826730728149414
    4. 'total' → logprob: -3.5826730728149414
    5. '        
' → logprob: -4.457673072814941
    6. ' total' → logprob: -4.957673072814941
    7. '   ' → logprob: -6.207673072814941
    8. '	total' → logprob: -7.207673072814941
    9. '<|end|>' → logprob: -7.207673072814941
    10. '    
' → logprob: -7.582673072814941

Token 298: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07850766181945801
    2. 'total' (adapté à ' total') → logprob: -2.703507661819458
    3. ' total' → logprob: -5.203507423400879
    4. '           ' → logprob: -6.453507423400879
    5. '   ' → logprob: -6.703507423400879
    6. '	total' → logprob: -9.703507423400879
    7. '
' → logprob: -10.078507423400879
    8. 'for' → logprob: -10.328507423400879
    9. '	' → logprob: -10.828507423400879
    10. ' for' → logprob: -11.203507423400879

Token 299: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -2.7133641196996905e-05
    2. '_' → logprob: -10.62502670288086
    3. '+=' → logprob: -13.37502670288086
    4. ' +=' → logprob: -13.75002670288086
    5. '=' → logprob: -16.12502670288086
    6. '_=' → logprob: -17.87502670288086
    7. ' missiles' → logprob: -18.50002670288086
    8. '_max' → logprob: -18.50002670288086
    9. '_total' → logprob: -18.62502670288086
    10. '=_' → logprob: -18.75002670288086

Token 300: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.0019680082332342863
    2. 'is' → logprob: -6.251967906951904
    3. 'ss' → logprob: -11.751968383789062
    4. 'isses' → logprob: -12.251968383789062
    5. ' missiles' → logprob: -12.376968383789062
    6. 'miss' → logprob: -12.501968383789062
    7. 'unit' → logprob: -12.626968383789062
    8. '   ' → logprob: -13.251968383789062
    9. 's' → logprob: -13.751968383789062
    10. 'issi' → logprob: -13.876968383789062

Token 301: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -6.511406809295295e-06
    2. 'les' → logprob: -12.125006675720215
    3. 'ile' → logprob: -14.625006675720215
    4. 'ils' → logprob: -15.250006675720215
    5. 'eles' → logprob: -15.750006675720215
    6. 'ILES' → logprob: -16.3750057220459
    7. 'els' → logprob: -17.0000057220459
    8. '#' → logprob: -18.2500057220459
    9. '   ' → logprob: -18.3750057220459
    10. '>' → logprob: -18.6250057220459

Token 302: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006715967319905758
    2. ' +=' → logprob: -5.006715774536133
    3. ']+=' → logprob: -14.506715774536133
    4. '+' → logprob: -16.506715774536133
    5. '=' → logprob: -16.631715774536133
    6. '+=(' → logprob: -17.381715774536133
    7. '+="' → logprob: -19.006715774536133
    8. '+='' → logprob: -19.506715774536133
    9. '```' → logprob: -21.006715774536133
    10. '	' → logprob: -21.381715774536133

Token 303: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.8624639324116288e-06
    2. ' m' → logprob: -13.625001907348633
    3. 'len' → logprob: -14.250001907348633
    4. 'sum' → logprob: -19.625001907348633
    5. '	m' → logprob: -21.250001907348633
    6. '   ' → logprob: -22.125001907348633
    7. '(m' → logprob: -23.125001907348633
    8. ' len' → logprob: -23.500001907348633
    9. ' ' → logprob: -24.000001907348633
    10. '  ' → logprob: -24.625001907348633

Token 304: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12390585243701935
    2. '       ' → logprob: -2.998905897140503
    3. '<|end|>' → logprob: -3.248905897140503
    4. '        
' → logprob: -4.498905658721924
    5. '

' → logprob: -6.248905658721924
    6. '   ' → logprob: -6.373905658721924
    7. '#' → logprob: -6.373905658721924
    8. ')' → logprob: -6.623905658721924
    9. 'countries' → logprob: -6.748905658721924
    10. '
        
' → logprob: -6.873905658721924

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4749072790145874
    2. 'max' → logprob: -1.4749072790145874
    3. '   ' → logprob: -1.7249072790145874
    4. 'current' → logprob: -2.849907398223877
    5. 'remaining' → logprob: -3.224907398223877
    6. '        
' → logprob: -3.349907398223877
    7. '
' → logprob: -3.349907398223877
    8. 'rest' → logprob: -3.599907398223877
    9. '    
' → logprob: -3.724907398223877
    10. '#' → logprob: -4.224907398223877

Token 306: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.2575470209121704
    2. '       ' → logprob: -1.5075470209121704
    3. 'pot' → logprob: -2.257546901702881
    4. 'remaining' → logprob: -2.382546901702881
    5. 'potential' → logprob: -2.632546901702881
    6. 'capac' → logprob: -2.882546901702881
    7. 'possible' → logprob: -3.507546901702881
    8. 'miss' → logprob: -3.632546901702881
    9. 'from' → logprob: -4.507546901702881
    10. 'dp' → logprob: -4.757546901702881

Token 307: ' Initial' (ID: 9209)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2266992330551147
    2. 'remaining' → logprob: -1.7266992330551147
    3. 'pot' → logprob: -1.8516992330551147
    4. 'all' → logprob: -2.8516993522644043
    5. 'potential' → logprob: -2.9766993522644043
    6. 'miss' → logprob: -2.9766993522644043
    7. 'from' → logprob: -3.4766993522644043
    8. 'stack' → logprob: -3.4766993522644043
    9. 'possible' → logprob: -4.226699352264404
    10. 'capac' → logprob: -4.226699352264404

Token 308: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.26345887780189514
    2. 'ization' → logprob: -2.5134589672088623
    3. 'iser' → logprob: -3.0134589672088623
    4. 'ize' → logprob: -4.263458728790283
    5. 'min' → logprob: -4.263458728790283
    6. 'ise' → logprob: -4.263458728790283
    7. '#' → logprob: -4.388458728790283
    8. 'max' → logprob: -4.513458728790283
    9. 'potential' → logprob: -4.763458728790283
    10. 'ement' → logprob: -4.888458728790283

Token 309: ' des' (ID: 731)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -1.7861199378967285
    2. '   ' → logprob: -2.0361199378967285
    3. 'remaining' → logprob: -2.0361199378967285
    4. 'min' → logprob: -2.2861199378967285
    5. 'potential' → logprob: -2.6611199378967285
    6. 'active' → logprob: -2.7861199378967285
    7. 'possible' → logprob: -3.0361199378967285
    8. 'max' → logprob: -3.2861199378967285
    9. 'capac' → logprob: -3.7861199378967285
    10. 'counts' → logprob: -4.0361199378967285

Token 310: ' potent' (ID: 35668)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1361812353134155
    2. 'capac' → logprob: -1.1361812353134155
    3. 'from' → logprob: -2.511181354522705
    4. 'min' → logprob: -2.636181354522705
    5. 'pot' → logprob: -3.011181354522705
    6. 'p' → logprob: -3.386181354522705
    7. 'indices' → logprob: -3.761181354522705
    8. 'max' → logprob: -4.261181354522705
    9. 'positions' → logprob: -4.261181354522705
    10. 'current' → logprob: -5.011181354522705

Token 311: 'iels' (ID: 25833)
  Prédit: 'iels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iels' → logprob: -0.006928850896656513
    2. 'ials' → logprob: -5.50692892074585
    3. 'iaux' → logprob: -7.00692892074585
    4. 'i' → logprob: -7.50692892074585
    5. 'iel' → logprob: -7.50692892074585
    6. '#' → logprob: -8.381928443908691
    7. 'ial' → logprob: -8.506928443908691
    8. '```' → logprob: -8.756928443908691
    9. '_' → logprob: -10.006928443908691
    10. '[' → logprob: -10.381928443908691

Token 312: ' :' (ID: 712)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.8158664703369141
    2. ' =' → logprob: -1.440866470336914
    3. '   ' → logprob: -1.565866470336914
    4. '=' → logprob: -3.690866470336914
    5. 'min' → logprob: -3.940866470336914
    6. 'potential' → logprob: -4.190866470336914
    7. ' potentials' → logprob: -4.315866470336914
    8. 'max' → logprob: -4.815866470336914
    9. ',' → logprob: -4.940866470336914
    10. '       ' → logprob: -5.315866470336914

Token 313: ' somme' (ID: 64484)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.0307423397898674
    2. 'potential' → logprob: -3.7807424068450928
    3. 'current' → logprob: -5.655742168426514
    4. ' potentials' → logprob: -7.155742168426514
    5. 'pots' → logprob: -7.280742168426514
    6. 'min' → logprob: -7.280742168426514
    7. 'import' → logprob: -7.905742168426514
    8. 'curr' → logprob: -8.155742645263672
    9. 'max' → logprob: -8.155742645263672
    10. 'p' → logprob: -8.530742645263672

Token 314: ' totale' (ID: 52898)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20633703470230103
    2. '=' → logprob: -2.2063369750976562
    3. '_p' → logprob: -3.8313369750976562
    4. 'pot' → logprob: -3.9563369750976562
    5. 'rest' → logprob: -5.081336975097656
    6. 'par' → logprob: -5.206336975097656
    7. 'p' → logprob: -5.206336975097656
    8. '_' → logprob: -5.706336975097656
    9. 'des' → logprob: -5.831336975097656
    10. 's' → logprob: -5.956336975097656

Token 315: ' des' (ID: 731)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.9153295159339905
    2. '=' → logprob: -1.0403294563293457
    3. ' =' → logprob: -1.5403294563293457
    4. 'des' → logprob: -4.915329456329346
    5. 'potential' → logprob: -5.165329456329346
    6. '   ' → logprob: -5.665329456329346
    7. 's' → logprob: -5.790329456329346
    8. 'par' → logprob: -6.165329456329346
    9. '_p' → logprob: -6.290329456329346
    10. '_' → logprob: -6.540329456329346

Token 316: ' missiles' (ID: 97169)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.40060704946517944
    2. 'miss' → logprob: -1.6506071090698242
    3. ' missiles' → logprob: -2.900607109069824
    4. '[' → logprob: -3.900607109069824
    5. 'mis' → logprob: -4.275607109069824
    6. 'cap' → logprob: -4.275607109069824
    7. ' capacités' → logprob: -5.400607109069824
    8. '[i' → logprob: -5.650607109069824
    9. ' capacities' → logprob: -5.775607109069824
    10. 'caps' → logprob: -5.900607109069824

Token 317: ' pour' (ID: 1930)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.18749991059303284
    2. ' =' → logprob: -2.5625
    3. 'potential' → logprob: -3.1875
    4. '=' → logprob: -4.0625
    5. ' potentials' → logprob: -4.5625
    6. 'par' → logprob: -5.1875
    7. '   ' → logprob: -5.4375
    8. 'current' → logprob: -5.5625
    9. 'remaining' → logprob: -5.8125
    10. 'rest' → logprob: -6.5625

Token 318: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.8905528783798218
    2. 'p' → logprob: -1.6405528783798218
    3. 'each' → logprob: -2.1405529975891113
    4. 'cha' → logprob: -2.3905529975891113
    5. 'country' → logprob: -2.5155529975891113
    6. 'c' → logprob: -3.1405529975891113
    7. 'ch' → logprob: -3.3905529975891113
    8. ' each' → logprob: -4.390552997589111
    9. ' country' → logprob: -5.265552997589111
    10. ' pays' → logprob: -5.640552997589111

Token 319: ' pays' (ID: 15236)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.161588653922081
    2. 'country' → logprob: -2.036588668823242
    3. ' pays' → logprob: -4.411588668823242
    4. ' country' → logprob: -5.786588668823242
    5. 'countries' → logprob: -6.911588668823242
    6. 'pay' → logprob: -7.599088668823242
    7. 'c' → logprob: -7.599088668823242
    8. '   ' → logprob: -9.036588668823242
    9. ' p' → logprob: -9.411588668823242
    10. 'range' → logprob: -9.786588668823242

Token 320: '
' (ID: 198)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.23797866702079773
    2. '       ' → logprob: -2.36297869682312
    3. '   ' → logprob: -2.48797869682312
    4. 'potential' → logprob: -3.86297869682312
    5. ' potentials' → logprob: -5.237978458404541
    6. ' potent' → logprob: -6.362978458404541
    7. 'pots' → logprob: -6.737978458404541
    8. ' =' → logprob: -6.862978458404541
    9. ',' → logprob: -7.112978458404541
    10. ' pot' → logprob: -7.237978458404541

Token 321: '       ' (ID: 309)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.7699349522590637
    2. '       ' → logprob: -1.144934892654419
    3. '   ' → logprob: -1.644934892654419
    4. ' potentials' → logprob: -4.644935131072998
    5. 'potential' → logprob: -5.019935131072998
    6. ' pot' → logprob: -5.519935131072998
    7. ' potent' → logprob: -6.144935131072998
    8. 'pots' → logprob: -7.019935131072998
    9. ' potential' → logprob: -7.394935131072998
    10. 'current' → logprob: -8.76993465423584

Token 322: ' potentials' (ID: 150885)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.014162685722112656
    2. 'potential' → logprob: -4.389162540435791
    3. 'current' → logprob: -7.264162540435791
    4. 'pots' → logprob: -8.26416301727295
    5. 'curr' → logprob: -8.63916301727295
    6. 'country' → logprob: -9.26416301727295
    7. 'sum' → logprob: -9.38916301727295
    8. 'p' → logprob: -9.76416301727295
    9. 's' → logprob: -10.26416301727295
    10. 'capac' → logprob: -10.38916301727295

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002117469906807
    2. '=' → logprob: -2.3502118587493896
    3. '=[' → logprob: -13.350212097167969
    4. '[' → logprob: -13.600212097167969
    5. 's' → logprob: -13.850212097167969
    6. ' =[' → logprob: -14.100212097167969
    7. '=[]' → logprob: -15.600212097167969
    8. '＝' → logprob: -16.35021209716797
    9. ')' → logprob: -16.72521209716797
    10. '[:]' → logprob: -17.10021209716797

Token 324: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.44259175658226013
    2. '[' → logprob: -1.4425917863845825
    3. '[c' → logprob: -2.192591667175293
    4. '[m' → logprob: -4.942591667175293
    5. '[list' → logprob: -6.317591667175293
    6. '[i' → logprob: -8.942591667175293
    7. '[s' → logprob: -9.317591667175293
    8. '[count' → logprob: -9.567591667175293
    9. '[int' → logprob: -9.692591667175293
    10. '   ' → logprob: -9.942591667175293

Token 325: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0009131324477493763
    2. ' sum' → logprob: -7.000913143157959
    3. '   ' → logprob: -13.6259126663208
    4. '(sum' → logprob: -15.7509126663208
    5. '	sum' → logprob: -16.375913619995117
    6. ' ' → logprob: -16.500913619995117
    7. '0' → logprob: -17.250913619995117
    8. '  ' → logprob: -17.375913619995117
    9. '       ' → logprob: -17.500913619995117
    10. '=sum' → logprob: -18.000913619995117

Token 326: '(c' (ID: 2410)
  Prédit: '(country'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(country' → logprob: -0.42556217312812805
    2. '(c' → logprob: -1.1755621433258057
    3. '(m' → logprob: -3.4255621433258057
    4. 'country' → logprob: -5.300562381744385
    5. '(p' → logprob: -8.925561904907227
    6. 'c' → logprob: -9.550561904907227
    7. '(' → logprob: -9.800561904907227
    8. '(cnt' → logprob: -9.925561904907227
    9. '(ct' → logprob: -10.550561904907227
    10. '(count' → logprob: -10.800561904907227

Token 327: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3991836905479431
    2. 'ountry' → logprob: -1.274183750152588
    3. 'country' → logprob: -4.149183750152588
    4. 'c' → logprob: -4.149183750152588
    5. 'try' → logprob: -4.774183750152588
    6. ')]' → logprob: -6.399183750152588
    7. 'ountries' → logprob: -6.524183750152588
    8. 'tries' → logprob: -6.899183750152588
    9. ']' → logprob: -7.524183750152588
    10. ')c' → logprob: -7.649183750152588

Token 328: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07404959946870804
    2. 'for' → logprob: -3.449049711227417
    3. ' for' → logprob: -3.699049711227417
    4. '()' → logprob: -4.324049472808838
    5. ' )' → logprob: -7.199049472808838
    6. '())' → logprob: -7.824049472808838
    7. '   ' → logprob: -8.949049949645996
    8. '(c' → logprob: -9.824049949645996
    9. 'countries' → logprob: -10.074049949645996
    10. ')c' → logprob: -10.449049949645996

Token 329: ' c' (ID: 274)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.34900984168052673
    2. ' countries' → logprob: -1.2240098714828491
    3. 'c' → logprob: -7.599009990692139
    4. 'country' → logprob: -10.47400951385498
    5. 'ountries' → logprob: -11.22400951385498
    6. ' c' → logprob: -11.59900951385498
    7. ' country' → logprob: -12.22400951385498
    8. '	c' → logprob: -12.47400951385498
    9. ' países' → logprob: -14.59900951385498
    10. '_' → logprob: -14.59900951385498

Token 330: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.056603919714689255
    2. 'in' → logprob: -2.9316039085388184
    3. 'ountries' → logprob: -6.431603908538818
    4. 'ountry' → logprob: -10.056604385375977
    5. 'ont' → logprob: -10.681604385375977
    6. ' ' → logprob: -11.056604385375977
    7. '	in' → logprob: -12.431604385375977
    8. 'n' → logprob: -12.681604385375977
    9. 'countries' → logprob: -12.681604385375977
    10. 'ount' → logprob: -12.931604385375977

Token 331: ' countries' (ID: 8981)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.02985936962068081
    2. ' countries' → logprob: -3.5298593044281006
    3. 'ountries' → logprob: -9.15485954284668
    4. 'c' → logprob: -13.52985954284668
    5. 'country' → logprob: -13.77985954284668
    6. '   ' → logprob: -16.02985954284668
    7. ' ' → logprob: -16.40485954284668
    8. 'Countries' → logprob: -16.40485954284668
    9. '	c' → logprob: -16.52985954284668
    10. '[c' → logprob: -16.77985954284668

Token 332: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008213033434003592
    2. ' ]' → logprob: -7.250821113586426
    3. '       ' → logprob: -9.250821113586426
    4. ']
' → logprob: -11.625821113586426
    5. '   ' → logprob: -12.375821113586426
    6. ']

' → logprob: -14.000821113586426
    7. ')' → logprob: -14.750821113586426
    8. ')]' → logprob: -15.875821113586426
    9. ']
' → logprob: -16.125822067260742
    10. '()]' → logprob: -16.375822067260742

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16339386999607086
    2. '
' → logprob: -2.538393974304199
    3. '   ' → logprob: -3.288393974304199
    4. '        
' → logprob: -3.913393974304199
    5. '    
' → logprob: -5.288393974304199
    6. 'current' → logprob: -6.538393974304199
    7. ')' → logprob: -6.913393974304199
    8. 'indices' → logprob: -7.288393974304199
    9. ',' → logprob: -7.413393974304199
    10. '```' → logprob: -7.788393974304199

Token 334: ' #' (ID: 1069)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.0205903053283691
    2. '       ' → logprob: -2.145590305328369
    3. 'max' → logprob: -2.395590305328369
    4. '   ' → logprob: -2.645590305328369
    5. 'for' → logprob: -2.895590305328369
    6. 'min' → logprob: -2.895590305328369
    7. '#' (adapté à ' #') → logprob: -3.020590305328369
    8. 'positions' → logprob: -3.520590305328369
    9. 'current' → logprob: -3.520590305328369
    10. 'destroy' → logprob: -4.270590305328369

Token 335: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.776070237159729
    2. 'import' → logprob: -2.0260701179504395
    3. 'indices' → logprob: -2.5260701179504395
    4. '#' → logprob: -2.6510701179504395
    5. 'stack' → logprob: -3.2760701179504395
    6. 'destroy' → logprob: -3.2760701179504395
    7. 'positions' → logprob: -3.4010701179504395
    8. 'index' → logprob: -3.5260701179504395
    9. 'current' → logprob: -4.1510701179504395
    10. 'indexes' → logprob: -4.4010701179504395

Token 336: ' it' (ID: 480)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12827202677726746
    2. '#' → logprob: -3.50327205657959
    3. 'for' → logprob: -3.50327205657959
    4. 'import' → logprob: -4.25327205657959
    5. 'possible' → logprob: -4.50327205657959
    6. 'min' → logprob: -5.25327205657959
    7. ' from' → logprob: -5.37827205657959
    8. 'max' → logprob: -5.50327205657959
    9. 'stack' → logprob: -5.50327205657959
    10. '   ' → logprob: -6.00327205657959

Token 337: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.2914656698703766
    2. 're' → logprob: -2.0414657592773438
    3. 'er' → logprob: -2.2914657592773438
    4. 'ere' → logprob: -4.541465759277344
    5. 'e' → logprob: -6.416465759277344
    6. 't' → logprob: -6.416465759277344
    7. 'n' → logprob: -6.916465759277344
    8. '#' → logprob: -6.916465759277344
    9. 'ére' → logprob: -7.541465759277344
    10. '_re' → logprob: -7.916465759277344

Token 338: ' le' (ID: 505)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.1866355836391449
    2. ' for' → logprob: -2.8116354942321777
    3. ' i' → logprob: -3.1866354942321777
    4. 'for' → logprob: -3.8116354942321777
    5. '   ' → logprob: -4.561635494232178
    6. ' sur' → logprob: -4.811635494232178
    7. ' through' → logprob: -5.186635494232178
    8. 'i' → logprob: -5.436635494232178
    9. ' ' → logprob: -5.561635494232178
    10. 'over' → logprob: -5.811635494232178

Token 339: ' nombre' (ID: 9733)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.807602047920227
    2. ' total' → logprob: -1.432602047920227
    3. 'for' → logprob: -2.4326019287109375
    4. 's' → logprob: -2.8076019287109375
    5. ' for' → logprob: -3.9326019287109375
    6. 'r' → logprob: -4.3076019287109375
    7. 'nombre' → logprob: -4.3076019287109375
    8. 'temps' → logprob: -4.3076019287109375
    9. 'n' → logprob: -4.5576019287109375
    10. 'range' → logprob: -4.8076019287109375

Token 340: ' maximal' (ID: 65414)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.8666754364967346
    2. '_de' → logprob: -1.3666753768920898
    3. '_' → logprob: -2.11667537689209
    4. ' de' → logprob: -2.49167537689209
    5. 'total' → logprob: -3.49167537689209
    6. ' =' → logprob: -3.86667537689209
    7. ' total' → logprob: -4.24167537689209
    8. '=' → logprob: -4.24167537689209
    9. '_des' → logprob: -4.49167537689209
    10. 'de' → logprob: -4.61667537689209

Token 341: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8933885097503662
    2. 'de' → logprob: -1.0183885097503662
    3. 'total' → logprob: -2.268388509750366
    4. '_de' → logprob: -2.893388509750366
    5. ' total' → logprob: -3.268388509750366
    6. '_' → logprob: -4.143388748168945
    7. 'd' → logprob: -4.893388748168945
    8. '_total' → logprob: -5.518388748168945
    9. ' d' → logprob: -6.268388748168945
    10. 'des' → logprob: -7.143388748168945

Token 342: ' missiles' (ID: 97169)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7962139248847961
    2. 'total' → logprob: -0.9212139248847961
    3. ' missiles' → logprob: -2.5462138652801514
    4. 'steps' → logprob: -3.4212138652801514
    5. 'miss' → logprob: -4.1712141036987305
    6. ' steps' → logprob: -5.1712141036987305
    7. ' étapes' → logprob: -6.0462141036987305
    8. 't' → logprob: -6.2962141036987305
    9. 'destroy' → logprob: -6.6712141036987305
    10. 'pot' → logprob: -6.8587141036987305

Token 343: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1869614124298096
    2. 'rest' → logprob: -1.6869614124298096
    3. 'total' → logprob: -1.8119614124298096
    4. '_rest' → logprob: -2.0619614124298096
    5. '_total' → logprob: -2.8119614124298096
    6. ' total' → logprob: -3.1869614124298096
    7. ' rest' → logprob: -3.9369614124298096
    8. 'possible' → logprob: -4.5619611740112305
    9. '_remaining' → logprob: -4.5619611740112305
    10. 'for' → logprob: -4.5619611740112305

Token 344: ' dé' (ID: 2393)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.3036075830459595
    2. 'd' → logprob: -1.6786075830459595
    3. 'ret' → logprob: -1.6786075830459595
    4. 'placer' → logprob: -2.30360746383667
    5. 'dé' → logprob: -2.80360746383667
    6. 'dis' → logprob: -3.30360746383667
    7. 'dés' → logprob: -3.67860746383667
    8. 'det' → logprob: -3.92860746383667
    9. ' retirer' → logprob: -4.05360746383667
    10. 'sup' → logprob: -4.17860746383667

Token 345: 'tru' (ID: 49970)
  Prédit: 'tru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tru' → logprob: -0.011206974275410175
    2. 'tr' → logprob: -4.761207103729248
    3. 'placer' → logprob: -7.011207103729248
    4. 'tir' → logprob: -7.136207103729248
    5. 'ployer' → logprob: -8.88620662689209
    6. 'faire' → logprob: -9.26120662689209
    7. 't' → logprob: -9.88620662689209
    8. 'tu' → logprob: -10.01120662689209
    9. 'cou' → logprob: -10.13620662689209
    10. 'mettre' → logprob: -10.26120662689209

Token 346: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.01745445467531681
    2. 'ir' → logprob: -4.642454624176025
    3. 're' → logprob: -6.267454624176025
    4. 'i' → logprob: -6.517454624176025
    5. 'uire' → logprob: -6.517454624176025
    6. '   ' → logprob: -6.892454624176025
    7. '"' → logprob: -8.392454147338867
    8. '#' → logprob: -8.517454147338867
    9. 'ires' → logprob: -9.017454147338867
    10. '**' → logprob: -9.017454147338867

Token 347: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5574958920478821
    2. 'total' → logprob: -1.6824958324432373
    3. ' for' → logprob: -2.6824958324432373
    4. ':' → logprob: -3.0574958324432373
    5. ' total' → logprob: -3.9324958324432373
    6. 'possible' → logprob: -4.182496070861816
    7. '+' → logprob: -4.307496070861816
    8. ' +' → logprob: -4.307496070861816
    9. ',' → logprob: -4.682496070861816
    10. '.' → logprob: -4.932496070861816

Token 348: 'maximum' (ID: 78601)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16379408538341522
    2. ' total' → logprob: -1.9137940406799316
    3. 'for' → logprob: -6.538794040679932
    4. ' for' → logprob: -7.163794040679932
    5. ')' → logprob: -7.413794040679932
    6. 'range' → logprob: -9.03879451751709
    7. '=' → logprob: -9.41379451751709
    8. ' )' → logprob: -9.78879451751709
    9. 'possible' → logprob: -9.78879451751709
    10. ',' → logprob: -10.03879451751709

Token 349: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6273840069770813
    2. '=' → logprob: -1.0023839473724365
    3. 'total' → logprob: -3.3773839473724365
    4. ')' → logprob: -3.8773839473724365
    5. '_total' → logprob: -4.627384185791016
    6. ' total' → logprob: -4.752384185791016
    7. ' +' → logprob: -5.627384185791016
    8. '+' → logprob: -5.627384185791016
    9. 'possible' → logprob: -5.752384185791016
    10. ' ' → logprob: -6.252384185791016

Token 350: ' mi' (ID: 3997)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.0661146491765976
    2. ' potentials' → logprob: -3.066114664077759
    3. ' pot' → logprob: -5.06611442565918
    4. 'potential' → logprob: -5.81611442565918
    5. 'len' → logprob: -6.81611442565918
    6. 'm' → logprob: -6.81611442565918
    7. 'total' → logprob: -7.19111442565918
    8. ' potential' → logprob: -7.44111442565918
    9. ' potent' → logprob: -7.62861442565918
    10. ' total' → logprob: -7.94111442565918

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7242811918258667
    2. 's' → logprob: -1.7242811918258667
    3. ']' → logprob: -2.2242813110351562
    4. '+' → logprob: -2.8492813110351562
    5. '])' → logprob: -3.2242813110351562
    6. ' )' → logprob: -3.7242813110351562
    7. ' +' → logprob: -3.9742813110351562
    8. 'n' → logprob: -3.9742813110351562
    9. 'x' → logprob: -5.099281311035156
    10. ' -' → logprob: -5.224281311035156

Token 352: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.027095913887024
    2. '
' → logprob: -2.2770957946777344
    3. ' =' → logprob: -2.2770957946777344
    4. '   ' → logprob: -2.6520957946777344
    5. 'max' → logprob: -2.7770957946777344
    6. ' for' → logprob: -2.7770957946777344
    7. '+' → logprob: -3.0270957946777344
    8. ' +' → logprob: -3.1520957946777344
    9. ')' → logprob: -4.152095794677734
    10. 'while' → logprob: -4.277095794677734

Token 353: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5843074321746826
    2. ' max' → logprob: -0.8343074321746826
    3. ' for' → logprob: -5.084307670593262
    4. 'for' → logprob: -6.709307670593262
    5. '   ' → logprob: -8.709307670593262
    6. ' maximum' → logprob: -9.584307670593262
    7. ' i' → logprob: -9.959307670593262
    8. ',' → logprob: -10.084307670593262
    9. '	max' → logprob: -10.084307670593262
    10. '(max' → logprob: -10.084307670593262

Token 354: ' Dans' (ID: 22082)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07472163438796997
    2. ' max' → logprob: -2.699721574783325
    3. 'for' → logprob: -6.199721813201904
    4. ' for' → logprob: -6.949721813201904
    5. '#' → logprob: -8.074721336364746
    6. 'destroy' → logprob: -8.324721336364746
    7. 'current' → logprob: -8.574721336364746
    8. ' destroyed' → logprob: -8.574721336364746
    9. 'steps' → logprob: -8.949721336364746
    10. '```' → logprob: -9.324721336364746

Token 355: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0025349983479827642
    2. ' range' → logprob: -6.502534866333008
    3. 'for' → logprob: -7.627534866333008
    4. 'n' → logprob: -9.127534866333008
    5. 'le' → logprob: -9.377534866333008
    6. 'la' → logprob: -9.752534866333008
    7. 'total' → logprob: -10.377534866333008
    8. 'c' → logprob: -10.377534866333008
    9. '#' → logprob: -10.627534866333008
    10. '   ' → logprob: -10.752534866333008

Token 356: ' étape' (ID: 83661)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.045242760330438614
    2. 'for' → logprob: -3.7952427864074707
    3. ' range' → logprob: -3.9202427864074707
    4. ' for' → logprob: -6.920242786407471
    5. 'while' → logprob: -7.795242786407471
    6. 'countries' → logprob: -9.670242309570312
    7. '   ' → logprob: -10.045242309570312
    8. 'rang' → logprob: -10.170242309570312
    9. '#' → logprob: -10.295242309570312
    10. '(range' → logprob: -10.545242309570312

Token 357: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23356862366199493
    2. ',' → logprob: -2.4835686683654785
    3. '   ' → logprob: -2.6085686683654785
    4. 'for' → logprob: -3.6085686683654785
    5. ':
' → logprob: -4.6085686683654785
    6. ' for' → logprob: -4.6085686683654785
    7. ' :' → logprob: -5.9835686683654785
    8. '       ' → logprob: -7.7335686683654785
    9. ' ,' → logprob: -8.23356819152832
    10. ' :
' → logprob: -8.98356819152832

Token 358: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23855166137218475
    2. ' for' → logprob: -2.238551616668701
    3. '#' → logprob: -3.488551616668701
    4. 'current' → logprob: -4.238551616668701
    5. 'max' → logprob: -4.488551616668701
    6. ' destroyed' → logprob: -4.988551616668701
    7. 'remaining' → logprob: -5.113551616668701
    8. 'destroy' → logprob: -5.738551616668701
    9. 'idx' → logprob: -5.738551616668701
    10. 'step' → logprob: -6.238551616668701

Token 359: ' pays' (ID: 15236)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.951044499874115
    2. ' pays' → logprob: -1.0760445594787598
    3. 'for' → logprob: -2.4510445594787598
    4. 'country' → logprob: -3.2010445594787598
    5. ' for' → logprob: -3.5760445594787598
    6. ' country' → logprob: -4.07604455947876
    7. ' missile' → logprob: -4.32604455947876
    8. ' step' → logprob: -4.70104455947876
    9. '#' → logprob: -4.95104455947876
    10. ' i' → logprob: -5.07604455947876

Token 360: ' est' (ID: 893)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.6708022356033325
    2. ' peut' → logprob: -1.2958022356033325
    3. 'poss' → logprob: -3.170802116394043
    4. 'pot' → logprob: -3.420802116394043
    5. 'potential' → logprob: -4.295802116394043
    6. ' doit' → logprob: -4.670802116394043
    7. ' n' → logprob: -4.670802116394043
    8. '#' → logprob: -4.795802116394043
    9. '   ' → logprob: -4.795802116394043
    10. ' a' → logprob: -4.920802116394043

Token 361: ' cens' (ID: 55288)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2172291874885559
    2. ' range' → logprob: -1.9672291278839111
    3. ' not' → logprob: -5.09222936630249
    4. '   ' → logprob: -5.21722936630249
    5. 'visited' → logprob: -5.34222936630249
    6. '0' → logprob: -5.46722936630249
    7. ' visited' → logprob: -5.46722936630249
    8. 'not' → logprob: -5.59222936630249
    9. ' ' → logprob: -5.71722936630249
    10. 'for' → logprob: -5.96722936630249

Token 362: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00039158877916634083
    2. 'ée' → logprob: -9.000391960144043
    3. 'és' → logprob: -9.125391960144043
    4. 'e' → logprob: -9.250391960144043
    5. 'u' → logprob: -10.250391960144043
    6. 'es' → logprob: -10.750391960144043
    7. 'è' → logprob: -12.500391960144043
    8. 'ées' → logprob: -14.750391960144043
    9. 'se' → logprob: -15.500391960144043
    10. '=' → logprob: -15.500391960144043

Token 363: ' dé' (ID: 2393)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6874405145645142
    2. 'destroy' → logprob: -2.5624403953552246
    3. '   ' → logprob: -2.8124403953552246
    4. '#' → logprob: -2.9374403953552246
    5. ' détr' → logprob: -2.9374403953552246
    6. 'dé' → logprob: -3.0624403953552246
    7. ' dé' → logprob: -3.9374403953552246
    8. ' retirer' → logprob: -3.9374403953552246
    9. ' avoir' → logprob: -4.187440395355225
    10. 'dés' → logprob: -4.187440395355225

Token 364: 'tru' (ID: 49970)
  Prédit: 'tru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tru' → logprob: -0.15412229299545288
    2. 'tr' → logprob: -2.4041223526000977
    3. 'stru' → logprob: -4.029122352600098
    4. 'étr' → logprob: -4.529122352600098
    5. 'st' → logprob: -5.154122352600098
    6. 't' → logprob: -6.029122352600098
    7. 'é' → logprob: -6.029122352600098
    8. 'str' → logprob: -6.529122352600098
    9. '
' → logprob: -7.716622352600098
    10. 'struct' → logprob: -7.716622352600098

Token 365: 'ire' (ID: 594)
  Prédit: 'urer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urer' → logprob: -1.1220074892044067
    2. 'er' → logprob: -1.3720074892044067
    3. 'é' → logprob: -1.6220074892044067
    4. 'u' → logprob: -2.497007369995117
    5. 'érer' → logprob: -2.622007369995117
    6. 'uré' → logprob: -3.497007369995117
    7. 're' → logprob: -4.372007369995117
    8. 'rer' → logprob: -4.997007369995117
    9. 'e' → logprob: -5.622007369995117
    10. 'ure' → logprob: -5.747007369995117

Token 366: ' un' (ID: 537)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -1.4610061645507812
    2. 'un' → logprob: -1.5860061645507812
    3. ' un' → logprob: -1.8360061645507812
    4. 'au' → logprob: -2.0860061645507812
    5. 'le' → logprob: -2.4610061645507812
    6. 'son' → logprob: -3.0860061645507812
    7. ' son' → logprob: -3.2110061645507812
    8. ' le' → logprob: -3.7110061645507812
    9. 'exact' → logprob: -3.7110061645507812
    10. ' exactement' → logprob: -3.8360061645507812

Token 367: ' missile' (ID: 73870)
  Prédit: ' missile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' missile' → logprob: -0.023597165942192078
    2. 'miss' → logprob: -3.773597240447998
    3. ' missiles' → logprob: -8.89859676361084
    4. ' miss' → logprob: -9.77359676361084
    5. ' ' → logprob: -10.14859676361084
    6. 'mis' → logprob: -11.02359676361084
    7. ' misil' → logprob: -11.52359676361084
    8. ' de' → logprob: -11.64859676361084
    9. 'e' → logprob: -11.64859676361084
    10. ' projectile' → logprob: -11.77359676361084

Token 368: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7147512435913086
    2. ' for' → logprob: -1.5897512435913086
    3. '   ' → logprob: -1.8397512435913086
    4. 'for' → logprob: -2.7147512435913086
    5. '       ' → logprob: -4.089751243591309
    6. 'if' → logprob: -4.214751243591309
    7. '#' → logprob: -4.464751243591309
    8. '.' → logprob: -4.839751243591309
    9. ',' → logprob: -5.089751243591309
    10. ' #' → logprob: -6.089751243591309

Token 369: 'si' (ID: 4778)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2915445864200592
    2. ' )' → logprob: -2.0415446758270264
    3. ' if' → logprob: -2.5415446758270264
    4. 'if' → logprob: -3.4165446758270264
    5. '   ' → logprob: -5.666544437408447
    6. ' si' → logprob: -6.041544437408447
    7. 'for' → logprob: -7.166544437408447
    8. 'si' → logprob: -7.291544437408447
    9. '#' → logprob: -7.541544437408447
    10. ' for' → logprob: -7.916544437408447

Token 370: ' possible' (ID: 4149)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3027152717113495
    2. ' potentials' → logprob: -2.052715301513672
    3. 'len' → logprob: -3.177715301513672
    4. ' pot' → logprob: -3.802715301513672
    5. ' i' → logprob: -3.927715301513672
    6. 'pot' → logprob: -4.552715301513672
    7. ' missiles' → logprob: -4.802715301513672
    8. ' potentiel' → logprob: -5.177715301513672
    9. ' m' → logprob: -5.427715301513672
    10. ' potential' → logprob: -5.427715301513672

Token 371: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09933654218912125
    2. '),' → logprob: -2.599336624145508
    3. ').' → logprob: -4.724336624145508
    4. '       ' → logprob: -5.599336624145508
    5. ' )' → logprob: -5.724336624145508
    6. '   ' → logprob: -6.224336624145508
    7. '):' → logprob: -6.724336624145508
    8. ',' → logprob: -8.224336624145508
    9. ' ),' → logprob: -8.349336624145508
    10. '):
' → logprob: -8.474336624145508

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20313869416713715
    2. '   ' → logprob: -2.578138589859009
    3. '#' → logprob: -3.328138589859009
    4. ' et' → logprob: -3.328138589859009
    5. ' #' → logprob: -4.703138828277588
    6. ' ' → logprob: -5.578138828277588
    7. 'et' → logprob: -5.828138828277588
    8. ' puis' → logprob: -5.828138828277588
    9. ')' → logprob: -6.578138828277588
    10. '    ' → logprob: -6.703138828277588

Token 373: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8281797766685486
    2. ' et' → logprob: -1.7031798362731934
    3. 'et' → logprob: -2.2031798362731934
    4. '   ' → logprob: -2.4531798362731934
    5. ' sinon' → logprob: -3.5781798362731934
    6. ' else' → logprob: -3.8281798362731934
    7. 'else' → logprob: -4.078179836273193
    8. '#' (adapté à ' #') → logprob: -4.203179836273193
    9. ' sauf' → logprob: -4.203179836273193
    10. ' mais' → logprob: -4.328179836273193

Token 374: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6609371900558472
    2. 'et' → logprob: -1.7859371900558472
    3. ' et' → logprob: -2.1609373092651367
    4. '       ' → logprob: -2.9109373092651367
    5. '   ' → logprob: -3.5359373092651367
    6. ' ce' → logprob: -4.160937309265137
    7. 'for' → logprob: -4.285937309265137
    8. 'mais' → logprob: -4.285937309265137
    9. 'ce' → logprob: -4.535937309265137
    10. ' #' → logprob: -4.535937309265137

Token 375: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6191379427909851
    2. 'l' → logprob: -0.8691379427909851
    3. 'range' → logprob: -3.86913800239563
    4. ' range' → logprob: -4.994137763977051
    5. 'ordre' → logprob: -5.244137763977051
    6. 'le' → logprob: -6.494137763977051
    7. ' la' → logprob: -6.494137763977051
    8. 'order' → logprob: -7.369137763977051
    9. 'la' → logprob: -7.369137763977051
    10. ' order' → logprob: -7.619137763977051

Token 376: ''ordre' (ID: 124753)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.6975811123847961
    2. ''ordre' → logprob: -0.6975811123847961
    3. 'range' → logprob: -6.9475812911987305
    4. ''ensemble' → logprob: -6.9475812911987305
    5. ''' → logprob: -7.5725812911987305
    6. '’ordre' → logprob: -7.6975812911987305
    7. 'for' → logprob: -7.8225812911987305
    8. 'e' → logprob: -7.8225812911987305
    9. 'es' → logprob: -8.94758129119873
    10. ''espace' → logprob: -9.07258129119873

Token 377: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9021417498588562
    2. ' for' → logprob: -1.152141809463501
    3. 'des' → logprob: -2.152141809463501
    4. ' des' → logprob: -2.152141809463501
    5. ' inverse' → logprob: -4.277141571044922
    6. 'inverse' → logprob: -5.152141571044922
    7. ' range' → logprob: -5.402141571044922
    8. 'range' → logprob: -5.527141571044922
    9. '   ' → logprob: -5.527141571044922
    10. 'de' → logprob: -5.777141571044922

Token 378: ' plus' (ID: 2932)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38618600368499756
    2. 'nombre' → logprob: -2.386186122894287
    3. 'n' → logprob: -3.636186122894287
    4. 'for' → logprob: -3.761186122894287
    5. 'reverse' → logprob: -3.761186122894287
    6. 'range' → logprob: -4.136186122894287
    7. 'len' → logprob: -4.261186122894287
    8. 'code' → logprob: -4.261186122894287
    9. 'dern' → logprob: -4.261186122894287
    10. 'plus' → logprob: -4.386186122894287

Token 379: ' ancien' (ID: 81732)
  Prédit: 'ancien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ancien' → logprob: -0.07941845059394836
    2. 'dern' → logprob: -3.079418420791626
    3. 'anc' → logprob: -4.704418659210205
    4. 'ré' → logprob: -5.454418659210205
    5. ' récent' → logprob: -5.704418659210205
    6. 'recent' → logprob: -5.954418659210205
    7. 'p' → logprob: -6.454418659210205
    8. 'plus' → logprob: -6.704418659210205
    9. '```' → logprob: -7.079418659210205
    10. 'grand' → logprob: -7.079418659210205

Token 380: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8507999777793884
    2. ')' → logprob: -1.3508000373840332
    3. '<|end|>' → logprob: -2.600800037384033
    4. 'des' → logprob: -3.975800037384033
    5. ' )' → logprob: -4.100800037384033
    6. 'def' → logprob: -4.350800037384033
    7. ' missile' → logprob: -4.350800037384033
    8. ' missiles' → logprob: -4.475800037384033
    9. ' (' → logprob: -4.538300037384033
    10. ' pays' → logprob: -4.663300037384033

Token 381: 'car' (ID: 6830)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4589901864528656
    2. ')' → logprob: -2.0839900970458984
    3. 'plus' → logprob: -3.4589900970458984
    4. 'for' → logprob: -3.8339900970458984
    5. 'countries' → logprob: -3.8339900970458984
    6. 'à' → logprob: -3.9589900970458984
    7. 'miss' → logprob: -4.208990097045898
    8. ' plus' → logprob: -4.208990097045898
    9. 'pour' → logprob: -4.458990097045898
    10. '#' → logprob: -4.708990097045898

Token 382: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.4257020950317383
    2. ' for' → logprob: -1.8007020950317383
    3. 'for' → logprob: -2.1757020950317383
    4. ' code' → logprob: -2.8007020950317383
    5. ' missiles' → logprob: -3.0507020950317383
    6. ' les' → logprob: -3.1757020950317383
    7. ' ils' → logprob: -3.4257020950317383
    8. ' le' → logprob: -3.5507020950317383
    9. 'countries' → logprob: -4.175702095031738
    10. 'le' → logprob: -4.300702095031738

Token 383: ' liste' (ID: 31719)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.363247036933899
    2. 'for' → logprob: -1.488247036933899
    3. ' for' → logprob: -2.1132469177246094
    4. '#' → logprob: -2.4882469177246094
    5. 'code' → logprob: -3.2382469177246094
    6. 'p' → logprob: -3.6132469177246094
    7. 'd' → logprob: -3.7382469177246094
    8. 'n' → logprob: -3.8632469177246094
    9. 'plus' → logprob: -4.113246917724609
    10. ' pays' → logprob: -4.238246917724609

Token 384: ' est' (ID: 893)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.860601544380188
    2. ' des' → logprob: -1.735601544380188
    3. ' de' → logprob: -2.7356014251708984
    4. 'de' → logprob: -3.2356014251708984
    5. ' est' → logprob: -3.4856014251708984
    6. '.reverse' → logprob: -3.4856014251708984
    7. ' inverse' → logprob: -3.6106014251708984
    8. ')' → logprob: -3.7356014251708984
    9. 'inverse' → logprob: -3.9856014251708984
    10. ' détr' → logprob: -4.235601425170898

Token 385: ' invers' (ID: 38721)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.161564826965332
    2. 'in' → logprob: -2.161564826965332
    3. 'stock' → logprob: -2.161564826965332
    4. 'reverse' → logprob: -2.786564826965332
    5. 'index' → logprob: -2.911564826965332
    6. 'ren' → logprob: -2.911564826965332
    7. ' invers' → logprob: -2.911564826965332
    8. ' stock' → logprob: -3.161564826965332
    9. 'inverse' → logprob: -3.161564826965332
    10. 'ré' → logprob: -4.161564826965332

Token 386: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.22306667268276215
    2. 'er' → logprob: -2.473066568374634
    3. 'ers' → logprob: -3.723066568374634
    4. 's' → logprob: -3.723066568374634
    5. 'ert' → logprob: -4.348066806793213
    6. 'e' → logprob: -4.348066806793213
    7. 'érée' → logprob: -4.348066806793213
    8. 't' → logprob: -5.598066806793213
    9. 'es' → logprob: -6.098066806793213
    10. '#' → logprob: -6.098066806793213

Token 387: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5848901271820068
    2. ').' → logprob: -1.0848901271820068
    3. '),' → logprob: -2.584890127182007
    4. ' )' → logprob: -4.834890365600586
    5. ' des' → logprob: -5.084890365600586
    6. '):' → logprob: -5.709890365600586
    7. ',' → logprob: -5.959890365600586
    8. ' ).' → logprob: -6.209890365600586
    9. ' ),' → logprob: -6.459890365600586
    10. 'des' → logprob: -6.459890365600586

Token 388: ' prend' (ID: 37463)
  Prédit: ' travaille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' travaille' → logprob: -0.649345874786377
    2. ' continue' → logprob: -1.649345874786377
    3. ' a' → logprob: -3.649345874786377
    4. 'n' → logprob: -3.899345874786377
    5. ' travaill' → logprob: -3.899345874786377
    6. '#' → logprob: -4.149345874786377
    7. ' reverse' → logprob: -4.274345874786377
    8. 'range' → logprob: -4.524345874786377
    9. ' access' → logprob: -4.649345874786377
    10. 'len' → logprob: -4.774345874786377

Token 389: ' en' (ID: 469)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7495594024658203
    2. '[' → logprob: -1.4995594024658203
    3. ' i' → logprob: -2.6245594024658203
    4. ' ' → logprob: -2.7495594024658203
    5. ' [' → logprob: -3.8745594024658203
    6. '   ' → logprob: -3.8745594024658203
    7. 'i' → logprob: -4.37455940246582
    8. '[-' → logprob: -4.37455940246582
    9. ' for' → logprob: -4.62455940246582
    10. ')' → logprob: -4.74955940246582

Token 390: ' premier' (ID: 15506)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.36285728216171265
    2. 'indice' → logprob: -2.3628573417663574
    3. 'p' → logprob: -2.9878573417663574
    4. 'pop' → logprob: -3.2378573417663574
    5. '0' → logprob: -3.4878573417663574
    6. 'pot' → logprob: -3.8628573417663574
    7. '[' → logprob: -3.8628573417663574
    8. '[i' → logprob: -4.737857341766357
    9. 'range' → logprob: -4.737857341766357
    10. 'indices' → logprob: -5.612857341766357

Token 391: ')
' (ID: 446)
  Prédit: ' missile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' missile' → logprob: -0.5417752861976624
    2. ')' → logprob: -1.7917752265930176
    3. ' missiles' → logprob: -3.2917752265930176
    4. 'miss' → logprob: -3.4167752265930176
    5. 'p' → logprob: -3.7917752265930176
    6. 'index' → logprob: -4.166775226593018
    7. 'indice' → logprob: -4.541775226593018
    8. ' index' → logprob: -4.666775226593018
    9. 'élé' → logprob: -4.666775226593018
    10. 'element' → logprob: -4.666775226593018

Token 392: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18891455233097076
    2. '       ' → logprob: -2.0639145374298096
    3. ':' → logprob: -3.6889145374298096
    4. ' for' → logprob: -5.188914775848389
    5. ')' → logprob: -6.063914775848389
    6. '    ' → logprob: -6.313914775848389
    7. ' ' → logprob: -6.438914775848389
    8. ' :' → logprob: -6.563914775848389
    9. '):' → logprob: -6.688914775848389
    10. '.' → logprob: -6.938914775848389

Token 393: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5959286689758301
    2. ' for' → logprob: -1.59592866897583
    3. 'for' → logprob: -1.97092866897583
    4. '   ' → logprob: -2.84592866897583
    5. '
' → logprob: -3.34592866897583
    6. '        
' → logprob: -5.59592866897583
    7. '    
' → logprob: -6.22092866897583
    8. 'current' → logprob: -7.09592866897583
    9. 'max' → logprob: -7.34592866897583
    10. '#' (adapté à ' #') → logprob: -7.47092866897583

Token 394: ' Après' (ID: 47562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21148927509784698
    2. ' for' → logprob: -3.461489200592041
    3. ' destroyed' → logprob: -3.586489200592041
    4. 'current' → logprob: -3.711489200592041
    5. 'destroy' → logprob: -3.711489200592041
    6. '       ' → logprob: -3.836489200592041
    7. 'index' → logprob: -4.586489200592041
    8. 'idx' → logprob: -4.711489200592041
    9. 'max' → logprob: -5.211489200592041
    10. '   ' → logprob: -5.211489200592041

Token 395: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.3302319049835205
    2. '#' → logprob: -2.0802319049835205
    3. 'for' → logprob: -2.4552319049835205
    4. 'cha' → logprob: -2.5802319049835205
    5. 'each' → logprob: -2.5802319049835205
    6. ' la' → logprob: -2.5802319049835205
    7. 'la' → logprob: -2.8302319049835205
    8. ' each' → logprob: -3.2052319049835205
    9. 'l' → logprob: -3.4552319049835205
    10. ' step' → logprob: -3.7052319049835205

Token 396: ' étape' (ID: 83661)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.8530818819999695
    2. ' missile' → logprob: -1.4780819416046143
    3. 'step' → logprob: -2.1030819416046143
    4. ' étape' → logprob: -2.4780819416046143
    5. ' destruction' → logprob: -3.8530819416046143
    6. 'des' → logprob: -3.8530819416046143
    7. 'miss' → logprob: -4.103081703186035
    8. 'pas' → logprob: -4.228081703186035
    9. 'destroy' → logprob: -4.228081703186035
    10. 'dé' → logprob: -4.853081703186035

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0203784704208374
    2. '   ' → logprob: -1.3953784704208374
    3. '       ' → logprob: -1.5203784704208374
    4. ':' → logprob: -1.7703784704208374
    5. ' ,' → logprob: -6.270378589630127
    6. ' :' → logprob: -7.770378589630127
    7. ' for' → logprob: -8.395378112792969
    8. 'for' → logprob: -9.520378112792969
    9. ':
' → logprob: -10.020378112792969
    10. '           ' → logprob: -10.145378112792969

Token 398: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.553389847278595
    2. 'pot' → logprob: -2.17838978767395
    3. ' potentials' → logprob: -2.42838978767395
    4. ' #' → logprob: -2.92838978767395
    5. '   ' → logprob: -3.05338978767395
    6. ' on' → logprob: -3.55338978767395
    7. ' pot' → logprob: -4.053390026092529
    8. '       ' → logprob: -4.053390026092529
    9. 'max' → logprob: -4.553390026092529
    10. ' les' → logprob: -4.928390026092529

Token 399: ' vér' (ID: 42524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4892549514770508
    2. '       ' → logprob: -1.9892549514770508
    3. '#' → logprob: -2.364254951477051
    4. 'v' → logprob: -2.364254951477051
    5. 'for' → logprob: -2.489254951477051
    6. 'update' → logprob: -2.489254951477051
    7. 'met' → logprob: -2.864254951477051
    8. 'calc' → logprob: -3.364254951477051
    9. 'cal' → logprob: -3.739254951477051
    10. 'check' → logprob: -3.864254951477051

Token 400: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -2.1054253011243418e-05
    2. 'ife' → logprob: -11.875020980834961
    3. 'if' → logprob: -12.375020980834961
    4. '   ' → logprob: -12.875020980834961
    5. 'ifier' → logprob: -13.500020980834961
    6. '#' → logprob: -14.125020980834961
    7. '[' → logprob: -14.125020980834961
    8. 'ifié' → logprob: -14.250020980834961
    9. '```' → logprob: -14.375020980834961
    10. '
' → logprob: -14.625020980834961

Token 401: ' la' (ID: 557)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5659869909286499
    2. 'if' → logprob: -1.56598699092865
    3. '   ' → logprob: -2.0659871101379395
    4. ' si' → logprob: -3.6909871101379395
    5. ' que' → logprob: -3.8159871101379395
    6. ' la' → logprob: -4.3159871101379395
    7. 'si' → logprob: -4.9409871101379395
    8. '       ' → logprob: -5.0659871101379395
    9. ' ' → logprob: -5.3159871101379395
    10. '    ' → logprob: -5.3159871101379395

Token 402: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7730969190597534
    2. 'if' → logprob: -1.5230969190597534
    3. 'max' → logprob: -2.273097038269043
    4. 'min' → logprob: -3.023097038269043
    5. 'pot' → logprob: -3.023097038269043
    6. 'difference' → logprob: -3.148097038269043
    7. 'potential' → logprob: -3.398097038269043
    8. '#' → logprob: -4.148097038269043
    9. 'possible' → logprob: -4.648097038269043
    10. ' if' → logprob: -5.523097038269043

Token 403: ' max' (ID: 2999)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.9795222282409668
    2. ' de' → logprob: -1.9795222282409668
    3. '=' → logprob: -2.604522228240967
    4. '   ' → logprob: -2.729522228240967
    5. 'max' → logprob: -2.729522228240967
    6. ' entre' → logprob: -2.729522228240967
    7. ' =' → logprob: -3.229522228240967
    8. '_' → logprob: -3.229522228240967
    9. 'between' → logprob: -3.354522228240967
    10. ' if' → logprob: -4.104522228240967

Token 404: '-min' (ID: 20045)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29035335779190063
    2. '_p' → logprob: -1.9153532981872559
    3. 'pot' → logprob: -2.540353298187256
    4. '(' → logprob: -5.165353298187256
    5. '   ' → logprob: -5.665353298187256
    6. '=' → logprob: -5.915353298187256
    7. 'imum' → logprob: -6.165353298187256
    8. ' =' → logprob: -6.415353298187256
    9. 'potential' → logprob: -7.165353298187256
    10. ')' → logprob: -7.415353298187256

Token 405: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5867562890052795
    2. '   ' → logprob: -1.5867562294006348
    3. '
' → logprob: -2.3367562294006348
    4. 'for' → logprob: -2.3367562294006348
    5. ' for' → logprob: -3.4617562294006348
    6. 'max' → logprob: -5.211756229400635
    7. '        
' → logprob: -6.586756229400635
    8. '    
' → logprob: -7.086756229400635
    9. ' step' → logprob: -7.211756229400635
    10. 'step' → logprob: -7.461756229400635

Token 406: ' potent' (ID: 35668)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.5326356291770935
    2. ' potentials' → logprob: -0.9076356291770935
    3. 'potential' → logprob: -5.657635688781738
    4. ' potential' → logprob: -6.032635688781738
    5. ' pot' → logprob: -6.532635688781738
    6. ' potent' → logprob: -6.657635688781738
    7. ' potenti' → logprob: -8.407635688781738
    8. 'pots' → logprob: -8.907635688781738
    9. ' potentiel' → logprob: -9.032635688781738
    10. ' potencial' → logprob: -9.532635688781738

Token 407: 'iels' (ID: 25833)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.12052673101425171
    2. 'entials' → logprob: -2.2455267906188965
    3. 'ial' → logprob: -5.7455267906188965
    4. 'iaux' → logprob: -6.9955267906188965
    5. ' potentials' → logprob: -7.1205267906188965
    6. 'als' → logprob: -7.1205267906188965
    7. '#' → logprob: -7.7455267906188965
    8. '   ' → logprob: -7.8705267906188965
    9. 'ails' → logprob: -7.8705267906188965
    10. 'aux' → logprob: -8.745526313781738

Token 408: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06876726448535919
    2. '
' → logprob: -3.3187673091888428
    3. 'for' → logprob: -4.068767070770264
    4. ' for' → logprob: -4.943767070770264
    5. '        
' → logprob: -5.943767070770264
    6. '   ' → logprob: -5.943767070770264
    7. '    
' → logprob: -8.818767547607422
    8. ',' → logprob: -9.693767547607422
    9. '        

' → logprob: -10.068767547607422
    10. '       
' → logprob: -10.193767547607422

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003198273479938507
    2. '        
' → logprob: -6.253198146820068
    3. '
' → logprob: -7.878198146820068
    4. '   ' → logprob: -8.128198623657227
    5. ' for' → logprob: -8.753198623657227
    6. '<|end|>' → logprob: -9.503198623657227
    7. ',' → logprob: -9.878198623657227
    8. 'for' → logprob: -10.003198623657227
    9. '	' → logprob: -10.378198623657227
    10. '           ' → logprob: -10.753198623657227

Token 410: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5935011506080627
    2. 'for' → logprob: -0.9685011506080627
    3. '
' → logprob: -3.468501091003418
    4. ' for' → logprob: -4.343501091003418
    5. 'step' → logprob: -5.218501091003418
    6. 'max' → logprob: -5.593501091003418
    7. 'steps' → logprob: -5.718501091003418
    8. 'current' → logprob: -5.968501091003418
    9. 'destroy' → logprob: -6.468501091003418
    10. '   ' → logprob: -7.093501091003418

Token 411: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12393344938755035
    2. '       ' → logprob: -3.1239335536956787
    3. ' for' → logprob: -3.7489335536956787
    4. 'max' → logprob: -4.2489333152771
    5. 'step' → logprob: -4.6239333152771
    6. 'steps' → logprob: -4.7489333152771
    7. '
' → logprob: -4.8739333152771
    8. 'current' → logprob: -5.7489333152771
    9. 'destroy' → logprob: -6.8739333152771
    10. '   ' → logprob: -7.3739333152771

Token 412: ' elle' (ID: 11451)
  Prédit: ' potentials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' potentials' → logprob: -0.26096853613853455
    2. ' max' → logprob: -2.3859684467315674
    3. ' not' → logprob: -3.0109684467315674
    4. ' total' → logprob: -3.6359684467315674
    5. ' pot' → logprob: -3.8859684467315674
    6. ' len' → logprob: -4.0109686851501465
    7. ' potential' → logprob: -4.5109686851501465
    8. 'pot' → logprob: -5.6359686851501465
    9. ' ' → logprob: -5.8859686851501465
    10. ' any' → logprob: -6.6359686851501465

Token 413: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.15325938165187836
    2. '>' → logprob: -2.52825927734375
    3. ' dépasse' → logprob: -2.90325927734375
    4. ' <=' → logprob: -5.27825927734375
    5. ' dépass' → logprob: -7.65325927734375
    6. 'ex' → logprob: -7.90325927734375
    7. ' >=' → logprob: -7.90325927734375
    8. ' exceeds' → logprob: -8.27825927734375
    9. '<=' → logprob: -8.90325927734375
    10. 's' → logprob: -9.15325927734375

Token 414: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2522600293159485
    2. 'd' → logprob: -1.5022599697113037
    3. ' ' → logprob: -8.127260208129883
    4. '	d' → logprob: -11.252260208129883
    5. ' ' → logprob: -11.877260208129883
    6. '   ' → logprob: -12.252260208129883
    7. '  ' → logprob: -12.502260208129883
    8. '=' → logprob: -13.002260208129883
    9. '>' → logprob: -13.877260208129883
    10. ' ' → logprob: -14.252260208129883

Token 415: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0076241339556872845
    2. ',' → logprob: -5.13262414932251
    3. ':
' → logprob: -6.75762414932251
    4. ' :' → logprob: -7.63262414932251
    5. '           ' → logprob: -11.507623672485352
    6. ' continue' → logprob: -11.757623672485352
    7. ':
' → logprob: -12.257623672485352
    8. 'continue' → logprob: -12.257623672485352
    9. ' ,' → logprob: -12.632623672485352
    10. '>' → logprob: -12.632623672485352

Token 416: ' on' (ID: 402)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7211412787437439
    2. '           ' → logprob: -1.2211413383483887
    3. 'break' → logprob: -1.5961413383483887
    4. '       ' → logprob: -4.346141338348389
    5. ' on' → logprob: -6.596141338348389
    6. '               ' → logprob: -7.471141338348389
    7. '	break' → logprob: -7.596141338348389
    8. '   ' → logprob: -8.47114086151123
    9. '		' → logprob: -8.84614086151123
    10. '#' → logprob: -9.47114086151123

Token 417: ' imprime' (ID: 195564)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6349316835403442
    2. ' break' → logprob: -1.3849316835403442
    3. 'print' → logprob: -2.3849315643310547
    4. ' print' → logprob: -2.3849315643310547
    5. '           ' → logprob: -4.134931564331055
    6. '       ' → logprob: -4.634931564331055
    7. 'continue' → logprob: -6.009931564331055
    8. ' continue' → logprob: -6.759931564331055
    9. '#' → logprob: -6.759931564331055
    10. 'return' → logprob: -6.884931564331055

Token 418: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03080180659890175
    2. ' "' → logprob: -4.280801773071289
    3. '"No' → logprob: -6.155801773071289
    4. '"O' → logprob: -6.280801773071289
    5. 'Impossible' → logprob: -6.405801773071289
    6. '   ' → logprob: -6.530801773071289
    7. 'im' → logprob: -6.905801773071289
    8. ' ' → logprob: -7.030801773071289
    9. '-' → logprob: -7.155801773071289
    10. ''' → logprob: -7.155801773071289

Token 419: 'No' (ID: 3160)
  Prédit: 'NON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NON' → logprob: -0.48872703313827515
    2. 'NO' → logprob: -1.61372709274292
    3. 'Impossible' → logprob: -2.73872709274292
    4. '"' → logprob: -3.36372709274292
    5. 'IMP' → logprob: -3.36372709274292
    6. 'Non' → logprob: -3.86372709274292
    7. 'IM' → logprob: -5.23872709274292
    8. 'N' → logprob: -5.23872709274292
    9. 'im' → logprob: -5.36372709274292
    10. 'YES' → logprob: -6.23872709274292

Token 420: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006061278749257326
    2. '\n' → logprob: -5.75606107711792
    3. '")' → logprob: -6.00606107711792
    4. ' "' → logprob: -8.881061553955078
    5. 'n' → logprob: -9.256061553955078
    6. ')' → logprob: -10.631061553955078
    7. 't' → logprob: -10.631061553955078
    8. '"No' → logprob: -11.381061553955078
    9. '"\' → logprob: -11.506061553955078
    10. 'e' → logprob: -11.506061553955078

Token 421: ' sinon' (ID: 52915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8064529895782471
    2. ' continue' → logprob: -0.9314529895782471
    3. ' else' → logprob: -2.306452989578247
    4. ' print' → logprob: -4.431452751159668
    5. 'else' → logprob: -4.681452751159668
    6. 'continue' → logprob: -5.056452751159668
    7. ' puis' → logprob: -5.181452751159668
    8. '"' → logprob: -5.306452751159668
    9. ' return' → logprob: -5.681452751159668
    10. 'print' → logprob: -5.681452751159668

Token 422: ' "' (ID: 392)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.11479491740465164
    2. 'print' → logprob: -2.364794969558716
    3. ' "' → logprob: -5.239794731140137
    4. '"' → logprob: -5.739794731140137
    5. '       ' → logprob: -6.114794731140137
    6. '   ' → logprob: -6.489794731140137
    7. ' continue' → logprob: -7.114794731140137
    8. '    
' → logprob: -7.739794731140137
    9. '        
' → logprob: -8.364794731140137
    10. ' ' → logprob: -8.739794731140137

Token 423: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.03474218770861626
    2. ' Yes' → logprob: -3.4097421169281006
    3. 'Oui' → logprob: -7.53474235534668
    4. '"' → logprob: -7.78474235534668
    5. ' Oui' → logprob: -9.90974235534668
    6. 'Ok' → logprob: -11.15974235534668
    7. '   ' → logprob: -11.65974235534668
    8. 'O' → logprob: -11.65974235534668
    9. ' yes' → logprob: -11.90974235534668
    10. ' "' → logprob: -12.15974235534668

Token 424: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0022846683859825134
    2. '\n' → logprob: -6.502284526824951
    3. '"
' → logprob: -8.25228500366211
    4. '   ' → logprob: -8.62728500366211
    5. '":' → logprob: -9.50228500366211
    6. '```' → logprob: -9.75228500366211
    7. 'def' → logprob: -9.87728500366211
    8. ':' → logprob: -10.50228500366211
    9. '")' → logprob: -10.87728500366211
    10. '       ' → logprob: -10.87728500366211

Token 425: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5310230255126953
    2. '
' → logprob: -0.9060230255126953
    3. '   ' → logprob: -5.031023025512695
    4. '        
' → logprob: -7.031023025512695
    5. '    
' → logprob: -8.906023025512695
    6. ':' → logprob: -9.906023025512695
    7. '
' → logprob: -10.156023025512695
    8. '  
' → logprob: -10.281023025512695
    9. 'def' → logprob: -10.406023025512695
    10. '       
' → logprob: -10.781023025512695

Token 426: ' toutes' (ID: 17502)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.30372506380081177
    2. ' all' → logprob: -2.553725004196167
    3. ' on' → logprob: -2.678725004196167
    4. ' total' → logprob: -3.053725004196167
    5. 'True' → logprob: -3.928725004196167
    6. 'all' → logprob: -4.553725242614746
    7. 'total' → logprob: -4.803725242614746
    8. 'on' → logprob: -4.928725242614746
    9. ' possible' → logprob: -6.303725242614746
    10. ' the' → logprob: -6.678725242614746

Token 427: ' les' (ID: 1341)
  Prédit: ' missiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' missiles' → logprob: -0.38702908158302307
    2. ' destroyed' → logprob: -2.0120291709899902
    3. 'pot' → logprob: -2.6370291709899902
    4. ' pot' → logprob: -3.2620291709899902
    5. 'miss' → logprob: -3.8870291709899902
    6. ' potential' → logprob: -5.01202917098999
    7. '_' → logprob: -5.13702917098999
    8. ' les' → logprob: -5.26202917098999
    9. 'destroy' → logprob: -5.76202917098999
    10. ' potentials' → logprob: -5.88702917098999

Token 428: ' étapes' (ID: 96583)
  Prédit: 'miss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'miss' → logprob: -0.32488781213760376
    2. ' missiles' → logprob: -1.574887752532959
    3. ' étapes' → logprob: -3.449887752532959
    4. 'destroy' → logprob: -4.699887752532959
    5. ' destru' → logprob: -5.574887752532959
    6. 'missions' → logprob: -5.824887752532959
    7. '   ' → logprob: -6.074887752532959
    8. 'd' → logprob: -6.324887752532959
    9. 'm' → logprob: -6.324887752532959
    10. 'p' → logprob: -6.574887752532959

Token 429: ' passent' (ID: 156258)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.1412169188261032
    2. ' are' → logprob: -2.516216993331909
    3. 's' → logprob: -3.766216993331909
    4. ' ont' → logprob: -4.64121675491333
    5. 'ont' → logprob: -5.14121675491333
    6. 'are' → logprob: -5.39121675491333
    7. '_completed' → logprob: -7.01621675491333
    8. '_' → logprob: -7.14121675491333
    9. 'completed' → logprob: -7.39121675491333
    10. ' complet' → logprob: -7.39121675491333

Token 430: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2101936936378479
    2. '
' → logprob: -2.085193634033203
    3. 'max' → logprob: -3.085193634033203
    4. 'for' → logprob: -5.085193634033203
    5. '        
' → logprob: -5.585193634033203
    6. ' for' → logprob: -5.710193634033203
    7. '   ' → logprob: -6.460193634033203
    8. 'steps' → logprob: -6.460193634033203
    9. ' max' → logprob: -6.710193634033203
    10. 'step' → logprob: -7.585193634033203

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4406186640262604
    2. '
' → logprob: -1.065618634223938
    3. 'for' → logprob: -5.565618515014648
    4. '   ' → logprob: -6.440618515014648
    5. '        
' → logprob: -6.565618515014648
    6. 'steps' → logprob: -6.815618515014648
    7. 'step' → logprob: -6.940618515014648
    8. ' for' → logprob: -6.940618515014648
    9. 'max' → logprob: -7.065618515014648
    10. ' step' → logprob: -7.940618515014648

Token 432: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28077149391174316
    2. 'for' → logprob: -2.155771493911743
    3. 'steps' → logprob: -2.780771493911743
    4. '       ' → logprob: -3.905771493911743
    5. ' max' → logprob: -4.280771255493164
    6. 'step' → logprob: -4.655771255493164
    7. ' for' → logprob: -4.780771255493164
    8. 'possible' → logprob: -4.905771255493164
    9. '
' → logprob: -6.530771255493164
    10. '   ' → logprob: -6.780771255493164

Token 433: ' On' (ID: 2160)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13430552184581757
    2. 'steps' → logprob: -3.009305477142334
    3. 'for' → logprob: -3.134305477142334
    4. 'step' → logprob: -4.009305477142334
    5. 'possible' → logprob: -4.759305477142334
    6. 'can' → logprob: -6.009305477142334
    7. ' max' → logprob: -6.634305477142334
    8. 'min' → logprob: -7.509305477142334
    9. ' for' → logprob: -8.009305953979492
    10. '   ' → logprob: -8.384305953979492

Token 434: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48949360847473145
    2. 'max' → logprob: -1.3644936084747314
    3. 'def' → logprob: -3.2394936084747314
    4. '#' → logprob: -3.6144936084747314
    5. 'step' → logprob: -3.9894936084747314
    6. ' for' → logprob: -4.489493370056152
    7. 'continue' → logprob: -5.114493370056152
    8. '   ' → logprob: -5.239493370056152
    9. 'steps' → logprob: -5.614493370056152
    10. '       ' → logprob: -5.864493370056152

Token 435: ' dé' (ID: 2393)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6761042475700378
    2. 'max' → logprob: -2.0511043071746826
    3. ' for' → logprob: -2.3011043071746826
    4. ' sim' → logprob: -2.9261043071746826
    5. 'sim' → logprob: -3.1761043071746826
    6. ' continuer' → logprob: -3.9261043071746826
    7. 'step' → logprob: -4.3011040687561035
    8. 'destroy' → logprob: -4.4261040687561035
    9. 'contin' → logprob: -4.4261040687561035
    10. 'pas' → logprob: -4.4261040687561035

Token 436: 'tru' (ID: 49970)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14376220107078552
    2. 'fin' → logprob: -2.3937621116638184
    3. 'for' → logprob: -4.143762111663818
    4. 'but' → logprob: -4.893762111663818
    5. 'termin' → logprob: -5.393762111663818
    6. 'placer' → logprob: -5.518762111663818
    7. 'pass' → logprob: -6.268762111663818
    8. 'caler' → logprob: -7.143762111663818
    9. 'forcer' → logprob: -7.143762111663818
    10. 'velop' → logprob: -7.393762111663818

Token 437: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.018118221312761307
    2. 'irer' → logprob: -4.893118381500244
    3. 'iter' → logprob: -5.268118381500244
    4. 'er' → logprob: -6.518118381500244
    5. 'iser' → logprob: -6.643118381500244
    6. 'oyer' → logprob: -7.143118381500244
    7. 'iner' → logprob: -7.518118381500244
    8. 're' → logprob: -8.018117904663086
    9. 'ires' → logprob: -8.518117904663086
    10. 'ider' → logprob: -8.893117904663086

Token 438: ' missile' (ID: 73870)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.7556036710739136
    2. ' for' → logprob: -2.505603790283203
    3. ' i' → logprob: -2.630603790283203
    4. ' max' → logprob: -2.880603790283203
    5. ' total' → logprob: -3.130603790283203
    6. 'max' → logprob: -3.130603790283203
    7. 'total' → logprob: -3.130603790283203
    8. ' missiles' → logprob: -3.255603790283203
    9. 'step' → logprob: -3.380603790283203
    10. 'i' → logprob: -3.755603790283203

Token 439: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6403486728668213
    2. '_index' → logprob: -1.1403486728668213
    3. '_par' → logprob: -2.7653486728668213
    4. '_idx' → logprob: -3.1403486728668213
    5. '_indices' → logprob: -4.265348434448242
    6. '_counts' → logprob: -4.765348434448242
    7. '_indexes' → logprob: -4.890348434448242
    8. '_count' → logprob: -5.765348434448242
    9. '_by' → logprob: -5.890348434448242
    10. 'par' → logprob: -5.890348434448242

Token 440: ' missile' (ID: 73870)
  Prédit: ' missile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' missile' → logprob: -1.137457251548767
    2. ' étape' → logprob: -1.387457251548767
    3. 'miss' → logprob: -1.887457251548767
    4. 'step' → logprob: -3.1374573707580566
    5. ' étapes' → logprob: -3.2624573707580566
    6. 'pas' → logprob: -3.3874573707580566
    7. 'ét' → logprob: -3.6374573707580566
    8. '1' → logprob: -3.7624573707580566
    9. 'munition' → logprob: -3.7624573707580566
    10. ' missiles' → logprob: -4.137457370758057

Token 441: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7586586475372314
    2. ' step' → logprob: -1.8836586475372314
    3. 'for' → logprob: -1.8836586475372314
    4. ' max' → logprob: -3.1336586475372314
    5. 'max' → logprob: -3.1336586475372314
    6. ' i' → logprob: -3.2586586475372314
    7. 'step' → logprob: -3.6336586475372314
    8. 'i' → logprob: -3.8836586475372314
    9. '   ' → logprob: -4.633658409118652
    10. 'count' → logprob: -4.883658409118652

Token 442: ' chaque' (ID: 21194)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5630168914794922
    2. 'step' → logprob: -1.5630168914794922
    3. ' étape' → logprob: -2.563016891479492
    4. ' i' → logprob: -2.688016891479492
    5. 'i' → logprob: -3.313016891479492
    6. ' _' → logprob: -4.188016891479492
    7. '_step' → logprob: -4.188016891479492
    8. '_' → logprob: -6.063016891479492
    9. ' missile' → logprob: -6.313016891479492
    10. 'et' → logprob: -6.938016891479492

Token 443: ' pays' (ID: 15236)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5989464521408081
    2. 'step' → logprob: -2.3489465713500977
    3. ' étape' → logprob: -2.5989465713500977
    4. ' range' → logprob: -2.9739465713500977
    5. ' country' → logprob: -3.2239465713500977
    6. 'range' → logprob: -3.3489465713500977
    7. 'p' → logprob: -3.4739465713500977
    8. ' pays' → logprob: -3.5989465713500977
    9. 'country' → logprob: -3.7239465713500977
    10. 'pas' → logprob: -3.9739465713500977

Token 444: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5286920666694641
    2. 'for' → logprob: -1.7786920070648193
    3. ' for' → logprob: -1.9036920070648193
    4. 'max' → logprob: -3.4036920070648193
    5. '
' → logprob: -4.028692245483398
    6. ' step' → logprob: -4.278692245483398
    7. 'step' → logprob: -4.653692245483398
    8. 'steps' → logprob: -5.153692245483398
    9. '   ' → logprob: -5.653692245483398
    10. ' max' → logprob: -5.653692245483398

Token 445: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004159007221460342
    2. ' range' → logprob: -5.504158973693848
    3. '	range' → logprob: -10.754158973693848
    4. '   ' → logprob: -11.129158973693848
    5. 're' → logprob: -11.379158973693848
    6. ' ' → logprob: -12.004158973693848
    7. '
' → logprob: -12.254158973693848
    8. '(range' → logprob: -12.879158973693848
    9. 'rang' → logprob: -12.879158973693848
    10. 'total' → logprob: -13.254158973693848

Token 446: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02072242833673954
    2. ' range' → logprob: -3.8957223892211914
    3. '   ' → logprob: -10.145722389221191
    4. 'rang' → logprob: -10.645722389221191
    5. '	range' → logprob: -10.645722389221191
    6. 'for' → logprob: -11.645722389221191
    7. 'le' → logprob: -11.770722389221191
    8. 'ange' → logprob: -11.770722389221191
    9. '(range' → logprob: -11.895722389221191
    10. 'countries' → logprob: -12.145722389221191

Token 447: ' inverse' (ID: 53743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.787004292011261
    2. '       ' → logprob: -1.4120042324066162
    3. 'for' → logprob: -1.7870042324066162
    4. ' for' → logprob: -2.662004232406616
    5. '
' → logprob: -3.287004232406616
    6. 'max' → logprob: -4.537004470825195
    7. ':' → logprob: -6.037004470825195
    8. ',' → logprob: -6.287004470825195
    9. '#' → logprob: -6.787004470825195
    10. '        
' → logprob: -7.162004470825195

Token 448: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.427093744277954
    2. ',' → logprob: -1.552093744277954
    3. '   ' → logprob: -1.927093744277954
    4. '.' → logprob: -1.927093744277954
    5. 'de' → logprob: -2.427093744277954
    6. ' for' → logprob: -3.302093744277954
    7. 'des' → logprob: -3.802093744277954
    8. '       ' → logprob: -3.927093744277954
    9. ' de' → logprob: -4.052093505859375
    10. 'countries' → logprob: -4.677093505859375

Token 449: ' production' (ID: 7142)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1997954249382019
    2. 'n' → logprob: -2.8247954845428467
    3. 'la' → logprob: -3.0747954845428467
    4. ' range' → logprob: -3.5747954845428467
    5. 'l' → logprob: -3.8247954845428467
    6. 'countries' → logprob: -4.574795246124268
    7. 'len' → logprob: -4.824795246124268
    8. ' la' → logprob: -5.949795246124268
    9. 'p' → logprob: -6.574795246124268
    10. 'leurs' → logprob: -7.449795246124268

Token 450: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6535414457321167
    2. '   ' → logprob: -1.0285414457321167
    3. ' for' → logprob: -2.7785415649414062
    4. 'countries' → logprob: -3.9035415649414062
    5. '       ' → logprob: -4.903541564941406
    6. ',' → logprob: -5.153541564941406
    7. '.' → logprob: -5.278541564941406
    8. '#' → logprob: -5.778541564941406
    9. 'max' → logprob: -5.778541564941406
    10. ':' → logprob: -6.153541564941406

Token 451: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29376086592674255
    2. '       ' → logprob: -2.7937607765197754
    3. 'for' → logprob: -3.4187607765197754
    4. ' for' → logprob: -3.5437607765197754
    5. 'index' → logprob: -3.6687607765197754
    6. ',' → logprob: -4.043760776519775
    7. '
' → logprob: -4.043760776519775
    8. 'max' → logprob: -4.293760776519775
    9. 'i' → logprob: -4.668760776519775
    10. 'idx' → logprob: -4.793760776519775

Token 452: ' #' (ID: 1069)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.9515960812568665
    2. 'max' → logprob: -1.7015960216522217
    3. 'indexes' → logprob: -2.3265960216522217
    4. 'index' → logprob: -2.7015960216522217
    5. 'p' → logprob: -2.7015960216522217
    6. ' indices' → logprob: -2.9515960216522217
    7. '   ' → logprob: -3.0765960216522217
    8. 'positions' → logprob: -3.9515960216522217
    9. 'idx' → logprob: -4.201596260070801
    10. 'destroy' → logprob: -4.451596260070801

Token 453: ' La' (ID: 3038)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3296512365341187
    2. 'indices' → logprob: -1.8296512365341187
    3. 'p' → logprob: -2.079651355743408
    4. 'index' → logprob: -2.454651355743408
    5. 'idx' → logprob: -2.579651355743408
    6. 'indexes' → logprob: -3.079651355743408
    7. 'steps' → logprob: -3.204651355743408
    8. 'positions' → logprob: -3.204651355743408
    9. 'for' → logprob: -3.329651355743408
    10. '   ' → logprob: -3.454651355743408

Token 454: ' condition' (ID: 7060)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34652772545814514
    2. 'max' → logprob: -1.9715276956558228
    3. '#' → logprob: -2.5965278148651123
    4. ' for' → logprob: -4.096527576446533
    5. 'from' → logprob: -4.346527576446533
    6. 'steps' → logprob: -4.721527576446533
    7. 'i' → logprob: -4.846527576446533
    8. 'step' → logprob: -5.346527576446533
    9. 'remaining' → logprob: -5.471527576446533
    10. 'while' → logprob: -6.096527576446533

Token 455: ' nous' (ID: 6176)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2988324165344238
    2. 'for' → logprob: -1.7988324165344238
    3. 'max' → logprob: -2.048832416534424
    4. '=' → logprob: -2.298832416534424
    5. 's' → logprob: -2.298832416534424
    6. 'if' → logprob: -2.798832416534424
    7. '_max' → logprob: -3.798832416534424
    8. 'des' → logprob: -4.048832416534424
    9. 'de' → logprob: -4.173832416534424
    10. 'rest' → logprob: -4.173832416534424

Token 456: ' dit' (ID: 4758)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6667575240135193
    2. '#' → logprob: -1.291757583618164
    3. 'continue' → logprob: -3.166757583618164
    4. ' for' → logprob: -3.541757583618164
    5. 'contin' → logprob: -4.416757583618164
    6. 'import' → logprob: -4.791757583618164
    7. 'v' → logprob: -4.916757583618164
    8. 's' → logprob: -5.041757583618164
    9. ' permet' → logprob: -5.166757583618164
    10. 'voy' → logprob: -5.291757583618164

Token 457: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.5508460402488708
    2. ':' → logprob: -1.6758460998535156
    3. ' qu' → logprob: -1.9258460998535156
    4. '   ' → logprob: -3.5508460998535156
    5. '#' → logprob: -3.9258460998535156
    6. ' :' → logprob: -5.050846099853516
    7. 'if' → logprob: -5.425846099853516
    8. 'def' → logprob: -5.425846099853516
    9. ' #' → logprob: -5.425846099853516
    10. ' that' → logprob: -5.925846099853516

Token 458: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7955714464187622
    2. ' for' → logprob: -2.1705713272094727
    3. 'la' → logprob: -2.9205713272094727
    4. 'les' → logprob: -2.9205713272094727
    5. 'le' → logprob: -3.1705713272094727
    6. '#' → logprob: -3.1705713272094727
    7. 'pour' → logprob: -3.1705713272094727
    8. 'cha' → logprob: -3.5455713272094727
    9. ' chaque' → logprob: -3.7955713272094727
    10. ' la' → logprob: -3.9205713272094727

Token 459: ' différence' (ID: 79196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41115856170654297
    2. '#' → logprob: -2.036158561706543
    3. ' for' → logprob: -3.286158561706543
    4. 'potential' → logprob: -3.536158561706543
    5. 'def' → logprob: -3.786158561706543
    6. 'diff' → logprob: -4.161158561706543
    7. 'max' → logprob: -4.911158561706543
    8. 'next' → logprob: -5.036158561706543
    9. 'pot' → logprob: -5.161158561706543
    10. 'i' → logprob: -5.161158561706543

Token 460: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2807997763156891
    2. '_max' → logprob: -2.4057998657226562
    3. ' max' → logprob: -3.0307998657226562
    4. '_' → logprob: -3.4057998657226562
    5. ' between' → logprob: -4.405799865722656
    6. ' =' → logprob: -4.655799865722656
    7. ' maximale' → logprob: -4.905799865722656
    8. '=' → logprob: -5.030799865722656
    9. '   ' → logprob: -5.155799865722656
    10. ' entre' → logprob: -5.280799865722656

Token 461: '-min' (ID: 20045)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.125502347946167
    2. ' =' → logprob: -1.250502347946167
    3. 'pot' → logprob: -1.625502347946167
    4. '>' → logprob: -3.000502347946167
    5. '_' → logprob: -3.625502347946167
    6. ' des' → logprob: -4.250502586364746
    7. '=max' → logprob: -4.250502586364746
    8. ' >' → logprob: -4.500502586364746
    9. 'max' → logprob: -4.625502586364746
    10. '   ' → logprob: -4.875502586364746

Token 462: ' ne' (ID: 453)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4041428565979004
    2. ' doit' → logprob: -2.0291428565979004
    3. '<=' → logprob: -2.2791428565979004
    4. ' ne' → logprob: -3.0291428565979004
    5. ' =' → logprob: -4.6541428565979
    6. '=' → logprob: -5.0291428565979
    7. ' est' → logprob: -5.4041428565979
    8. '   ' → logprob: -5.7791428565979
    9. ' >' → logprob: -5.7791428565979
    10. ' dépasse' → logprob: -5.9041428565979

Token 463: ' dépasse' (ID: 165701)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.7697824239730835
    2. 'do' → logprob: -1.0197824239730835
    3. ' dépasse' → logprob: -2.269782543182373
    4. 'pas' → logprob: -3.769782543182373
    5. ' dépass' → logprob: -4.394782543182373
    6. ' peut' → logprob: -4.519782543182373
    7. ' devra' → logprob: -5.269782543182373
    8. '>' → logprob: -5.519782543182373
    9. 's' → logprob: -6.144782543182373
    10. 'dev' → logprob: -6.394782543182373

Token 464: ' pas' (ID: 2173)
  Prédit: ' jamais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jamais' → logprob: -0.3283997178077698
    2. ' pas' → logprob: -1.328399658203125
    3. 'pas' → logprob: -4.328399658203125
    4. ' plus' → logprob: -6.828399658203125
    5. ' ' → logprob: -7.453399658203125
    6. 'plus' → logprob: -10.203399658203125
    7. ' ' → logprob: -10.203399658203125
    8. '_pas' → logprob: -10.953399658203125
    9. ' toujours' → logprob: -11.328399658203125
    10. '   ' → logprob: -11.703399658203125

Token 465: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.006359943654388189
    2. ' ' → logprob: -5.756360054016113
    3. 'd' → logprob: -5.881360054016113
    4. ' ' → logprob: -8.631360054016113
    5. ' space' → logprob: -10.631360054016113
    6. ' pas' → logprob: -11.006360054016113
    7. ' jamais' → logprob: -11.006360054016113
    8. ' a' → logprob: -11.256360054016113
    9. ' un' → logprob: -11.381360054016113
    10. ' l' → logprob: -11.381360054016113

Token 466: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.42794424295425415
    2. ' at' → logprob: -1.8029441833496094
    3. ' à' → logprob: -2.6779441833496094
    4. ':' → logprob: -3.4279441833496094
    5. ' ' → logprob: -3.8029441833496094
    6. '   ' → logprob: -3.9279441833496094
    7. ',' → logprob: -3.9279441833496094
    8. ' durant' → logprob: -5.552944183349609
    9. '  ' → logprob: -5.927944183349609
    10. ' .' → logprob: -6.427944183349609

Token 467: ' aucun' (ID: 41678)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.17557582259178162
    2. 'auc' → logprob: -2.5505757331848145
    3. 'tout' → logprob: -3.4255757331848145
    4. 'ce' → logprob: -4.0505757331848145
    5. ' chaque' → logprob: -4.5505757331848145
    6. 't' → logprob: -4.9255757331848145
    7. 'la' → logprob: -5.3005757331848145
    8. 'un' → logprob: -5.9255757331848145
    9. 'any' → logprob: -6.5505757331848145
    10. 'l' → logprob: -6.8005757331848145

Token 468: ' moment' (ID: 4205)
  Prédit: 'moment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moment' → logprob: -0.45477840304374695
    2. ' moment' → logprob: -1.4547784328460693
    3. 'instant' → logprob: -3.0797784328460693
    4. ' instant' → logprob: -3.2047784328460693
    5. 'point' → logprob: -4.82977819442749
    6. ' ' → logprob: -5.57977819442749
    7. '```' → logprob: -5.57977819442749
    8. '\n' → logprob: -5.57977819442749
    9. 'es' → logprob: -6.07977819442749
    10. 'niveau' → logprob: -6.20477819442749

Token 469: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06704125553369522
    2. '
' → logprob: -3.5670411586761475
    3. 'max' → logprob: -4.067041397094727
    4. '   ' → logprob: -4.817041397094727
    5. '        
' → logprob: -6.192041397094727
    6. 'for' → logprob: -6.192041397094727
    7. 'step' → logprob: -6.567041397094727
    8. '#' → logprob: -7.192041397094727
    9. ' for' → logprob: -7.192041397094727
    10. ' step' → logprob: -7.567041397094727

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054669659584760666
    2. '   ' → logprob: -3.6796696186065674
    3. ' ' → logprob: -4.8046698570251465
    4. '    ' → logprob: -5.9296698570251465
    5. '        ' → logprob: -6.0546698570251465
    6. '           ' → logprob: -6.4296698570251465
    7. ' donc' → logprob: -6.5546698570251465
    8. ' et' → logprob: -6.5546698570251465
    9. ' ' → logprob: -6.6796698570251465
    10. ' while' → logprob: -7.3046698570251465

Token 471: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9905548691749573
    2. '       ' → logprob: -1.4905548095703125
    3. 'for' → logprob: -1.4905548095703125
    4. '   ' → logprob: -2.4905548095703125
    5. ' while' → logprob: -3.2405548095703125
    6. '    ' → logprob: -4.6155548095703125
    7. 'while' → logprob: -4.9905548095703125
    8. ' pas' → logprob: -5.2405548095703125
    9. ' step' → logprob: -5.3655548095703125
    10. ' if' → logprob: -5.4905548095703125

Token 472: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.088090181350708
    2. ' donc' → logprob: -1.713090181350708
    3. ' for' → logprob: -2.213090181350708
    4. 'for' → logprob: -2.588090181350708
    5. ' while' → logprob: -2.713090181350708
    6. '   ' → logprob: -2.963090181350708
    7. 'while' → logprob: -3.088090181350708
    8. ' on' → logprob: -3.963090181350708
    9. ' pour' → logprob: -4.088089942932129
    10. 'import' → logprob: -4.588089942932129

Token 473: ' vér' (ID: 42524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7977573275566101
    2. ' for' → logprob: -1.1727573871612549
    3. ' continue' → logprob: -2.297757387161255
    4. '   ' → logprob: -3.672757387161255
    5. '       ' → logprob: -3.922757387161255
    6. 'def' → logprob: -4.047757148742676
    7. '
' → logprob: -4.672757148742676
    8. '#' → logprob: -4.797757148742676
    9. 'continue' → logprob: -4.797757148742676
    10. 'max' → logprob: -4.922757148742676

Token 474: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.005563024897128344
    2. 'if' → logprob: -5.380563259124756
    3. 'ifi' → logprob: -7.505563259124756
    4. 'ifier' → logprob: -8.005562782287598
    5. 'er' → logprob: -10.380562782287598
    6. 'era' → logprob: -12.005562782287598
    7. 'ef' → logprob: -12.630562782287598
    8. 'éf' → logprob: -12.880562782287598
    9. 'ifiez' → logprob: -13.130562782287598
    10. 'ifié' → logprob: -13.130562782287598

Token 475: ' donc' (ID: 14206)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3305374383926392
    2. '   ' → logprob: -1.5805374383926392
    3. ' if' → logprob: -1.5805374383926392
    4. 'if' → logprob: -2.0805373191833496
    5. '       ' → logprob: -2.5805373191833496
    6. ' for' → logprob: -2.7055373191833496
    7. ' i' → logprob: -4.83053731918335
    8. ' si' → logprob: -4.83053731918335
    9. ' step' → logprob: -4.95553731918335
    10. 'i' → logprob: -5.70553731918335

Token 476: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3593667149543762
    2. 'if' → logprob: -2.3593666553497314
    3. '   ' → logprob: -2.8593666553497314
    4. ' for' → logprob: -3.1093666553497314
    5. 'step' → logprob: -3.7343666553497314
    6. ' step' → logprob: -3.7343666553497314
    7. ' if' → logprob: -3.7343666553497314
    8. '       ' → logprob: -4.4843668937683105
    9. 'max' → logprob: -6.2343668937683105
    10. 'miss' → logprob: -6.3593668937683105

Token 477: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.004377786535769701
    2. ' chaque' → logprob: -5.504377841949463
    3. 'ch' → logprob: -8.879377365112305
    4. 'each' → logprob: -9.379377365112305
    5. 't' → logprob: -10.129377365112305
    6. 'tout' → logprob: -11.004377365112305
    7. 'every' → logprob: -12.254377365112305
    8. 'l' → logprob: -13.004377365112305
    9. 'Chaque' → logprob: -13.129377365112305
    10. 'la' → logprob: -13.129377365112305

Token 478: ' étape' (ID: 83661)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.49349531531333923
    2. ' step' → logprob: -1.8684953451156616
    3. ' étape' → logprob: -1.8684953451156616
    4. 'pas' → logprob: -2.743495225906372
    5. 'ét' → logprob: -5.368495464324951
    6. 'pass' → logprob: -6.118495464324951
    7. 'for' → logprob: -6.243495464324951
    8. ' pas' → logprob: -6.868495464324951
    9. ']' → logprob: -7.243495464324951
    10. ')' → logprob: -7.368495464324951

Token 479: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005177662707865238
    2. '
' → logprob: -6.6301774978637695
    3. '        
' → logprob: -6.7551774978637695
    4. '   ' → logprob: -7.1301774978637695
    5. 'max' → logprob: -7.1301774978637695
    6. ',' → logprob: -8.63017749786377
    7. 'for' → logprob: -8.75517749786377
    8. ' for' → logprob: -9.00517749786377
    9. 'step' → logprob: -9.50517749786377
    10. '           ' → logprob: -9.75517749786377

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12777456641197205
    2. 'max' → logprob: -2.377774477005005
    3. '   ' → logprob: -4.377774715423584
    4. ' max' → logprob: -4.752774715423584
    5. '
' → logprob: -6.377774715423584
    6. 'steps' → logprob: -7.002774715423584
    7. '        
' → logprob: -7.502774715423584
    8. 'step' → logprob: -8.002774238586426
    9. '```' → logprob: -8.252774238586426
    10. 'current' → logprob: -8.252774238586426

Token 481: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00439652893692255
    2. 'steps' → logprob: -6.629396438598633
    3. ' max' → logprob: -6.754396438598633
    4. '       ' → logprob: -6.879396438598633
    5. '#' (adapté à ' #') → logprob: -7.879396438598633
    6. '   ' → logprob: -8.254396438598633
    7. 'step' → logprob: -9.129396438598633
    8. 'for' → logprob: -9.879396438598633
    9. '
' → logprob: -10.504396438598633
    10. 'min' → logprob: -10.754396438598633

Token 482: ' Il' (ID: 5329)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.019284944981336594
    2. '   ' → logprob: -5.269284725189209
    3. 'steps' → logprob: -5.894284725189209
    4. 'indices' → logprob: -6.019284725189209
    5. 'for' → logprob: -6.644284725189209
    6. '#' → logprob: -6.644284725189209
    7. 'p' → logprob: -6.769284725189209
    8. ' max' → logprob: -7.019284725189209
    9. 'idx' → logprob: -7.144284725189209
    10. '
' → logprob: -7.644284725189209

Token 483: ' faut' (ID: 17821)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7575666308403015
    2. ' n' → logprob: -1.8825666904449463
    3. ' faut' → logprob: -2.1325666904449463
    4. 'max' → logprob: -2.8825666904449463
    5. 'rest' → logprob: -3.5075666904449463
    6. ' rest' → logprob: -3.7575666904449463
    7. 'n' → logprob: -3.7575666904449463
    8. ' faudrait' → logprob: -4.007566452026367
    9. 'def' → logprob: -4.132566452026367
    10. 'f' → logprob: -4.132566452026367

Token 484: ' gérer' (ID: 86786)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.9726505875587463
    2. 'sim' → logprob: -1.7226505279541016
    3. 'contin' → logprob: -2.0976505279541016
    4. 'd' → logprob: -2.3476505279541016
    5. 'dé' → logprob: -2.9726505279541016
    6. 'v' → logprob: -3.3476505279541016
    7. 'g' → logprob: -3.3476505279541016
    8. 'don' → logprob: -4.472650527954102
    9. 'égal' → logprob: -4.597650527954102
    10. 'initial' → logprob: -5.347650527954102

Token 485: ' que' (ID: 661)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.34872961044311523
    2. 'les' → logprob: -1.9737296104431152
    3. 'indices' → logprob: -2.8487296104431152
    4. 'une' → logprob: -3.2237296104431152
    5. 'des' → logprob: -3.5987296104431152
    6. 'indexes' → logprob: -4.348729610443115
    7. 'l' → logprob: -5.223729610443115
    8. ' les' → logprob: -6.348729610443115
    9. ' un' → logprob: -6.473729610443115
    10. 'pos' → logprob: -6.598729610443115

Token 486: ' certains' (ID: 30681)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.1464804410934448
    2. 'les' → logprob: -1.2714804410934448
    3. ' les' → logprob: -1.5214804410934448
    4. 'indexes' → logprob: -2.2714805603027344
    5. ' indices' → logprob: -3.6464805603027344
    6. 'index' → logprob: -4.271480560302734
    7. 'l' → logprob: -4.771480560302734
    8. 'indice' → logprob: -5.396480560302734
    9. 'idx' → logprob: -5.521480560302734
    10. ' des' → logprob: -5.771480560302734

Token 487: ' pays' (ID: 15236)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.33274126052856445
    2. ' pays' → logprob: -1.5827412605285645
    3. 'countries' → logprob: -2.7077412605285645
    4. ' countries' → logprob: -4.9577412605285645
    5. '#' → logprob: -6.7077412605285645
    6. 'country' → logprob: -6.8327412605285645
    7. 'pay' → logprob: -8.332740783691406
    8. 'des' → logprob: -8.582740783691406
    9. ' países' → logprob: -8.832740783691406
    10. 'Pays' → logprob: -9.207740783691406

Token 488: ' ont' (ID: 4930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5915846228599548
    2. '#' → logprob: -2.3415846824645996
    3. ' n' → logprob: -2.3415846824645996
    4. ' aient' → logprob: -2.3415846824645996
    5. 'may' → logprob: -2.4665846824645996
    6. ' puissent' → logprob: -3.7165846824645996
    7. 'ont' → logprob: -3.8415846824645996
    8. 'pe' → logprob: -5.0915846824646
    9. ' may' → logprob: -5.3415846824646
    10. 'might' → logprob: -5.7165846824646

Token 489: ' moins' (ID: 15924)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.1527242511510849
    2. 'plus' → logprob: -2.652724266052246
    3. 'moins' → logprob: -3.277724266052246
    4. 'une' → logprob: -4.027724266052246
    5. ' des' → logprob: -5.652724266052246
    6. 'pu' → logprob: -5.902724266052246
    7. 'diff' → logprob: -6.027724266052246
    8. 'un' → logprob: -6.902724266052246
    9. 'd' → logprob: -7.152724266052246
    10. 'pe' → logprob: -7.152724266052246

Token 490: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6446989178657532
    2. ' de' → logprob: -0.7696989178657532
    3. '   ' → logprob: -5.8946990966796875
    4. '_de' → logprob: -6.2696990966796875
    5. 'd' → logprob: -7.0196990966796875
    6. 'que' → logprob: -7.1446990966796875
    7. 'ieurs' → logprob: -7.1446990966796875
    8. ' ' → logprob: -7.2696990966796875
    9. '    ' → logprob: -7.3946990966796875
    10. 'def' → logprob: -7.3946990966796875

Token 491: ' missiles' (ID: 97169)
  Prédit: 'miss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'miss' → logprob: -0.0017455116612836719
    2. ' missiles' → logprob: -6.376745700836182
    3. 'mis' → logprob: -10.876745223999023
    4. '```' → logprob: -12.001745223999023
    5. '0' → logprob: -12.626745223999023
    6. '1' → logprob: -12.751745223999023
    7. ' missile' → logprob: -13.251745223999023
    8. 'bomb' → logprob: -13.751745223999023
    9. ' ' → logprob: -13.876745223999023
    10. 'tokens' → logprob: -14.251745223999023

Token 492: ' que' (ID: 661)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029633499681949615
    2. ' max' → logprob: -4.154633522033691
    3. '#' → logprob: -5.279633522033691
    4. '
' → logprob: -5.779633522033691
    5. '       ' → logprob: -6.154633522033691
    6. '   ' → logprob: -7.154633522033691
    7. 'maxlength' → logprob: -7.529633522033691
    8. 'for' → logprob: -8.154633522033691
    9. 'step' → logprob: -8.279633522033691
    10. '_max' → logprob: -8.404633522033691

Token 493: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6219069957733154
    2. 'others' → logprob: -1.4969069957733154
    3. 'max' → logprob: -2.1219069957733154
    4. '_' → logprob: -2.8719069957733154
    5. 'n' → logprob: -3.7469069957733154
    6. ' others' → logprob: -4.6219072341918945
    7. 'total' → logprob: -4.7469072341918945
    8. 'les' → logprob: -5.1219072341918945
    9. ' d' → logprob: -5.2469072341918945
    10. '#' → logprob: -5.7469072341918945

Token 494: ''autres' (ID: 38753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18779703974723816
    2. ''ét' → logprob: -2.0627970695495605
    3. 'u' → logprob: -3.4377970695495605
    4. 'ans' → logprob: -5.8127970695495605
    5. ''autres' → logprob: -6.0627970695495605
    6. 'es' → logprob: -6.3127970695495605
    7. 'ét' → logprob: -7.0627970695495605
    8. '’ét' → logprob: -7.1877970695495605
    9. 'et' → logprob: -7.1877970695495605
    10. ''é' → logprob: -7.9377970695495605

Token 495: '.
' (ID: 558)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014031040482223034
    2. '       ' → logprob: -4.639030933380127
    3. '#' → logprob: -6.139030933380127
    4. ' max' → logprob: -6.764030933380127
    5. '
' → logprob: -7.514030933380127
    6. 'steps' → logprob: -8.514031410217285
    7. '```' → logprob: -10.264031410217285
    8. '   ' → logprob: -10.389031410217285
    9. 'step' → logprob: -10.514031410217285
    10. '        
' → logprob: -10.514031410217285

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7402967810630798
    2. 'max' → logprob: -0.7402967810630798
    3. 'index' → logprob: -4.615296840667725
    4. 'indices' → logprob: -4.990296840667725
    5. 'indexes' → logprob: -4.990296840667725
    6. '#' → logprob: -5.115296840667725
    7. 'positions' → logprob: -6.240296840667725
    8. 'steps' → logprob: -6.240296840667725
    9. 'idx' → logprob: -6.490296840667725
    10. 'destroy' → logprob: -6.615296840667725

Token 497: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002489691600203514
    2. 'steps' → logprob: -6.8774895668029785
    3. '#' (adapté à ' #') → logprob: -7.2524895668029785
    4. 'indices' → logprob: -8.877490043640137
    5. 'step' → logprob: -9.127490043640137
    6. 'for' → logprob: -9.252490043640137
    7. ' max' → logprob: -9.377490043640137
    8. 'm' → logprob: -10.127490043640137
    9. 'idx' → logprob: -10.127490043640137
    10. 'min' → logprob: -10.502490043640137

Token 498: ' Le' (ID: 2018)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005815077456645668
    2. 'steps' → logprob: -7.625581741333008
    3. ' max' → logprob: -9.875581741333008
    4. 'step' → logprob: -11.000581741333008
    5. '#' → logprob: -11.875581741333008
    6. '
' → logprob: -12.000581741333008
    7. 'for' → logprob: -12.250581741333008
    8. 'min' → logprob: -13.125581741333008
    9. 'm' → logprob: -13.250581741333008
    10. '   ' → logprob: -14.000581741333008

Token 499: ' processus' (ID: 49849)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01478856522589922
    2. '#' → logprob: -5.389788627624512
    3. 'steps' → logprob: -5.389788627624512
    4. 'for' → logprob: -6.139788627624512
    5. 'step' → logprob: -6.139788627624512
    6. 'min' → logprob: -8.389788627624512
    7. 'i' → logprob: -8.389788627624512
    8. 'et' → logprob: -8.889788627624512
    9. ' max' → logprob: -9.264788627624512
    10. 'current' → logprob: -9.639788627624512

Token 500: ' s' (ID: 265)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.6608299612998962
    2. 'continue' → logprob: -1.660830020904541
    3. 'max' → logprob: -2.160830020904541
    4. '#' → logprob: -2.410830020904541
    5. 'for' → logprob: -3.660830020904541
    6. ' continues' → logprob: -4.410830020904541
    7. 'est' → logprob: -4.410830020904541
    8. 'se' → logprob: -5.285830020904541
    9. 'n' → logprob: -5.410830020904541
    10. 'indices' → logprob: -5.785830020904541

Token 501: ''arr' (ID: 49695)
  Prédit: 'oit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oit' → logprob: -0.746589183807373
    2. 'o' → logprob: -0.871589183807373
    3. 'e' → logprob: -2.371589183807373
    4. 'é' → logprob: -5.121589183807373
    5. 'ef' → logprob: -6.121589183807373
    6. 'ep' → logprob: -6.621589183807373
    7. 'ev' → logprob: -6.871589183807373
    8. 'éf' → logprob: -7.371589183807373
    9. 'do' → logprob: -7.746589183807373
    10. '#' → logprob: -7.871589183807373

Token 502: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.006287925876677036
    2. 'ète' → logprob: -6.131288051605225
    3. 'êt' → logprob: -6.256288051605225
    4. 'ete' → logprob: -6.756288051605225
    5. 'ive' → logprob: -7.506288051605225
    6. 'ê' → logprob: -7.881288051605225
    7. 'ette' → logprob: -10.881287574768066
    8. 'êter' → logprob: -10.881287574768066
    9. 'êtes' → logprob: -11.631287574768066
    10. 'iv' → logprob: -11.756287574768066

Token 503: ' quand' (ID: 18026)
  Prédit: ' lorsque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lorsque' → logprob: -1.0000710487365723
    2. ' lorsqu' → logprob: -1.1250710487365723
    3. ' dès' → logprob: -1.8750710487365723
    4. 'if' → logprob: -3.2500710487365723
    5. '   ' → logprob: -3.3750710487365723
    6. ' when' → logprob: -4.000071048736572
    7. 'when' → logprob: -4.125071048736572
    8. ' quand' → logprob: -4.625071048736572
    9. ' if' → logprob: -4.875071048736572
    10. ' ici' → logprob: -5.000071048736572

Token 504: ' tous' (ID: 10688)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.47894978523254395
    2. 'all' → logprob: -1.103949785232544
    3. ' any' → logprob: -4.103949546813965
    4. ' not' → logprob: -4.853949546813965
    5. ' toutes' → logprob: -5.103949546813965
    6. 'not' → logprob: -5.353949546813965
    7. ' True' → logprob: -5.853949546813965
    8. ' tous' → logprob: -5.978949546813965
    9. 'any' → logprob: -6.103949546813965
    10. 'total' → logprob: -6.353949546813965

Token 505: ' les' (ID: 1341)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2061773538589478
    2. ' all' → logprob: -1.8311773538589478
    3. ' not' → logprob: -2.331177234649658
    4. 'all' → logprob: -2.456177234649658
    5. ' len' → logprob: -2.706177234649658
    6. 'pot' → logprob: -2.831177234649658
    7. ' les' → logprob: -3.206177234649658
    8. 'i' → logprob: -3.831177234649658
    9. 'not' → logprob: -4.081177234649658
    10. ' missiles' → logprob: -4.206177234649658

Token 506: ' missiles' (ID: 97169)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.06754858791828156
    2. ' potentials' → logprob: -3.4425485134124756
    3. 'len' → logprob: -4.192548751831055
    4. 'potential' → logprob: -5.192548751831055
    5. ' missiles' → logprob: -5.942548751831055
    6. ' pot' → logprob: -5.942548751831055
    7. 'countries' → logprob: -6.692548751831055
    8. 'miss' → logprob: -6.942548751831055
    9. ' potential' → logprob: -7.067548751831055
    10. ' len' → logprob: -7.317548751831055

Token 507: ' sont' (ID: 5242)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.18986782431602478
    2. 's' → logprob: -2.1898677349090576
    3. 'destroy' → logprob: -4.189867973327637
    4. 'are' → logprob: -5.064867973327637
    5. 'have' → logprob: -5.064867973327637
    6. ' sont' → logprob: -5.439867973327637
    7. ' have' → logprob: -5.564867973327637
    8. ' are' → logprob: -5.564867973327637
    9. ' ont' → logprob: -5.689867973327637
    10. '<|end|>' → logprob: -5.689867973327637

Token 508: ' détr' (ID: 123084)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08075593411922455
    2. 'destroy' → logprob: -3.2057559490203857
    3. ' détr' → logprob: -3.5807559490203857
    4. 'dé' → logprob: -5.330755710601807
    5. 'dés' → logprob: -5.830755710601807
    6. 'sup' → logprob: -7.205755710601807
    7. 'det' → logprob: -8.705756187438965
    8. '0' → logprob: -8.705756187438965
    9. 'cons' → logprob: -9.580756187438965
    10. 'dest' → logprob: -10.330756187438965

Token 509: 'uits' (ID: 17317)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -1.160546898841858
    2. 'uits' → logprob: -1.285546898841858
    3. 'is' → logprob: -1.535546898841858
    4. 'uis' → logprob: -1.910546898841858
    5. 'u' → logprob: -3.7855467796325684
    6. 'its' → logprob: -4.160546779632568
    7. 'ints' → logprob: -5.785546779632568
    8. 'uit' → logprob: -6.785546779632568
    9. 'aits' → logprob: -7.535546779632568
    10. 'ur' → logprob: -7.785546779632568

Token 510: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3938024342060089
    2. 'max' → logprob: -1.2688024044036865
    3. '   ' → logprob: -4.268802642822266
    4. ' max' → logprob: -4.393802642822266
    5. '
' → logprob: -4.393802642822266
    6. '        
' → logprob: -6.643802642822266
    7. '#' → logprob: -6.893802642822266
    8. 'steps' → logprob: -7.018802642822266
    9. 'step' → logprob: -7.768802642822266
    10. ' step' → logprob: -8.018802642822266

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3089894950389862
    2. '   ' → logprob: -1.8089895248413086
    3. 'max' → logprob: -3.4339895248413086
    4. '
' → logprob: -3.6839895248413086
    5. '        
' → logprob: -4.558989524841309
    6. 'current' → logprob: -4.808989524841309
    7. '    
' → logprob: -4.933989524841309
    8. 'index' → logprob: -5.808989524841309
    9. 'indices' → logprob: -5.933989524841309
    10. 'idx' → logprob: -6.683989524841309

Token 512: ' #' (ID: 1069)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.79111647605896
    2. 'max' → logprob: -1.91611647605896
    3. 'index' → logprob: -2.04111647605896
    4. 'indexes' → logprob: -2.41611647605896
    5. 'p' → logprob: -2.66611647605896
    6. 'idx' → logprob: -2.91611647605896
    7. '#' (adapté à ' #') → logprob: -4.416116714477539
    8. 'steps' → logprob: -4.666116714477539
    9. 'positions' → logprob: -4.791116714477539
    10. 'destroy' → logprob: -5.041116714477539

Token 513: ' Pour' (ID: 13931)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4391899108886719
    2. 'indices' → logprob: -2.064189910888672
    3. 'steps' → logprob: -2.939189910888672
    4. 'index' → logprob: -3.064189910888672
    5. 'idx' → logprob: -3.064189910888672
    6. '#' → logprob: -4.064189910888672
    7. 'step' → logprob: -4.189189910888672
    8. 'indexes' → logprob: -4.314189910888672
    9. 'p' → logprob: -4.689189910888672
    10. 'positions' → logprob: -4.939189910888672

Token 514: ' sim' (ID: 1845)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8701344728469849
    2. 'step' → logprob: -1.3701344728469849
    3. ' step' → logprob: -1.3701344728469849
    4. ' i' → logprob: -2.9951343536376953
    5. '_step' → logprob: -5.120134353637695
    6. 'pas' → logprob: -5.245134353637695
    7. ' étape' → logprob: -5.995134353637695
    8. 'max' → logprob: -6.120134353637695
    9. ' _' → logprob: -6.495134353637695
    10. ' idx' → logprob: -6.620134353637695

Token 515: 'uler' (ID: 11802)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.37889930605888367
    2. 'pl' → logprob: -2.128899335861206
    3. 'ple' → logprob: -2.253899335861206
    4. 'uler' → logprob: -3.253899335861206
    5. 'u' → logprob: -4.003899097442627
    6. 'pler' → logprob: -4.253899097442627
    7. 'ulate' → logprob: -5.628899097442627
    8. '#' → logprob: -6.003899097442627
    9. 'i' → logprob: -6.253899097442627
    10. 'plic' → logprob: -6.378899097442627

Token 516: ' la' (ID: 557)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.15478453040122986
    2. 'step' → logprob: -2.4047844409942627
    3. ' i' → logprob: -3.7797844409942627
    4. 'i' → logprob: -4.779784679412842
    5. ' _' → logprob: -5.154784679412842
    6. ' steps' → logprob: -5.404784679412842
    7. 'steps' → logprob: -5.404784679412842
    8. '_step' → logprob: -5.654784679412842
    9. ' étape' → logprob: -6.279784679412842
    10. '_' → logprob: -7.904784679412842

Token 517: ' destruction' (ID: 37700)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.20428788661956787
    2. ' step' → logprob: -1.9542878866195679
    3. 'steps' → logprob: -4.079288005828857
    4. '_step' → logprob: -4.829288005828857
    5. 'i' → logprob: -5.329288005828857
    6. 'pas' → logprob: -6.329288005828857
    7. ' destruction' → logprob: -6.579288005828857
    8. 'total' → logprob: -6.704288005828857
    9. ' steps' → logprob: -7.329288005828857
    10. ' i' → logprob: -7.329288005828857

Token 518: ' missile' (ID: 73870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5588023662567139
    2. ',' → logprob: -1.3088023662567139
    3. ' for' → logprob: -3.308802366256714
    4. ' i' → logprob: -3.433802366256714
    5. 'for' → logprob: -4.183802604675293
    6. ':' → logprob: -4.308802604675293
    7. '       ' → logprob: -4.433802604675293
    8. ' step' → logprob: -4.558802604675293
    9. '.' → logprob: -5.683802604675293
    10. 'index' → logprob: -5.683802604675293

Token 519: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.14864499866962433
    2. '-by' → logprob: -2.7736449241638184
    3. ' by' → logprob: -3.2736449241638184
    4. 'par' → logprob: -3.8986449241638184
    5. '   ' → logprob: -5.148644924163818
    6. '_by' → logprob: -5.648644924163818
    7. 's' → logprob: -6.398644924163818
    8. 'by' → logprob: -6.523644924163818
    9. '_par' → logprob: -6.773644924163818
    10. ' missile' → logprob: -7.273644924163818

Token 520: ' missile' (ID: 73870)
  Prédit: ' missile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' missile' → logprob: -0.5454591512680054
    2. 'miss' → logprob: -1.0454591512680054
    3. 'pas' → logprob: -3.920459270477295
    4. 'step' → logprob: -4.545459270477295
    5. 'mis' → logprob: -4.545459270477295
    6. ' étape' → logprob: -4.920459270477295
    7. 'p' → logprob: -5.045459270477295
    8. 'munition' → logprob: -5.795459270477295
    9. 'mission' → logprob: -6.170459270477295
    10. '1' → logprob: -7.045459270477295

Token 521: ' dans' (ID: 2671)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.042646884918213
    2. 'for' → logprob: -1.292646884918213
    3. ' step' → logprob: -2.292646884918213
    4. 'max' → logprob: -2.792646884918213
    5. '   ' → logprob: -2.917646884918213
    6. 'step' → logprob: -3.292646884918213
    7. ' i' → logprob: -3.542646884918213
    8. 'steps' → logprob: -3.667646884918213
    9. 'i' → logprob: -3.792646884918213
    10. ' max' → logprob: -4.292646884918213

Token 522: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2553700804710388
    2. ' range' → logprob: -1.5053701400756836
    3. 're' → logprob: -6.880370140075684
    4. ' reversed' → logprob: -7.630370140075684
    5. 'countries' → logprob: -8.130370140075684
    6. 'l' → logprob: -8.255370140075684
    7. 'reverse' → logprob: -8.255370140075684
    8. 'la' → logprob: -8.380370140075684
    9. 'for' → logprob: -8.380370140075684
    10. 'le' → logprob: -8.880370140075684

Token 523: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41658496856689453
    2. 'ordre' → logprob: -1.7915849685668945
    3. ''ordre' → logprob: -2.0415849685668945
    4. 'e' → logprob: -3.9165849685668945
    5. 'reverse' → logprob: -5.1665849685668945
    6. ''ensemble' → logprob: -5.4165849685668945
    7. 'for' → logprob: -5.6665849685668945
    8. ' range' → logprob: -6.4165849685668945
    9. 'inverse' → logprob: -6.9165849685668945
    10. '[::-' → logprob: -7.0415849685668945

Token 524: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6537550091743469
    2. ' for' → logprob: -1.5287549495697021
    3. 'reverse' → logprob: -2.028754949569702
    4. ' reverse' → logprob: -3.028754949569702
    5. 'range' → logprob: -4.028755187988281
    6. ' range' → logprob: -4.153755187988281
    7. 'countries' → logprob: -5.028755187988281
    8. 'rev' → logprob: -5.153755187988281
    9. 'inverse' → logprob: -5.278755187988281
    10. 'des' → logprob: -5.278755187988281

Token 525: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.14203183352947235
    2. ' plus' → logprob: -3.0170319080352783
    3. 'quel' → logprob: -3.7670319080352783
    4. 'inverse' → logprob: -3.7670319080352783
    5. 's' → logprob: -4.267031669616699
    6. 'p' → logprob: -6.017031669616699
    7. '_plus' → logprob: -6.267031669616699
    8. '#' → logprob: -6.392031669616699
    9. 't' → logprob: -6.517031669616699
    10. 'g' → logprob: -6.892031669616699

Token 526: ' ancien' (ID: 81732)
  Prédit: 'ancien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancien' → logprob: -0.0394342876970768
    2. ' ancien' → logprob: -3.7894341945648193
    3. 'anc' → logprob: -5.414434432983398
    4. ' récent' → logprob: -5.664434432983398
    5. 'recent' → logprob: -5.914434432983398
    6. 'v' → logprob: -6.039434432983398
    7. 'ré' → logprob: -6.664434432983398
    8. 'inverse' → logprob: -8.039434432983398
    9. 'ancienne' → logprob: -8.414434432983398
    10. 'é' → logprob: -8.914434432983398

Token 527: ' vers' (ID: 3640)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1823254823684692
    2. '   ' → logprob: -1.3073254823684692
    3. 'for' → logprob: -1.5573254823684692
    4. '       ' → logprob: -2.9323253631591797
    5. ' for' → logprob: -3.3073253631591797
    6. 'des' → logprob: -3.9323253631591797
    7. ' ,' → logprob: -4.05732536315918
    8. '    ' → logprob: -4.30732536315918
    9. ')' → logprob: -4.30732536315918
    10. '  ' → logprob: -4.93232536315918

Token 528: ' plus' (ID: 2932)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.04334375634789467
    2. 'l' → logprob: -3.2933437824249268
    3. 'la' → logprob: -5.668343544006348
    4. ' le' → logprob: -7.543343544006348
    5. 'les' → logprob: -7.793343544006348
    6. '_le' → logprob: -8.043343544006348
    7. '#' → logprob: -8.293343544006348
    8. 'len' → logprob: -9.668343544006348
    9. ' l' → logprob: -9.793343544006348
    10. 'leur' → logprob: -10.043343544006348

Token 529: ' récent' (ID: 189647)
  Prédit: 'ancien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ancien' → logprob: -0.4425751566886902
    2. '   ' → logprob: -1.817575216293335
    3. '_' → logprob: -2.942575216293335
    4. ' ancien' → logprob: -3.317575216293335
    5. 'anc' → logprob: -3.692575216293335
    6. '_v' → logprob: -4.567574977874756
    7. 'ancienne' → logprob: -4.817574977874756
    8. '#' → logprob: -4.942574977874756
    9. ' ancienne' → logprob: -5.192574977874756
    10. ' vieux' → logprob: -5.192574977874756

Token 530: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09277589619159698
    2. ',' → logprob: -3.592775821685791
    3. 'for' → logprob: -3.717775821685791
    4. ':' → logprob: -3.967775821685791
    5. '   ' → logprob: -4.592775821685791
    6. ' for' → logprob: -5.217775821685791
    7. '.' → logprob: -6.717775821685791
    8. 'indices' → logprob: -8.96777629852295
    9. 'index' → logprob: -9.09277629852295
    10. '#' → logprob: -9.59277629852295

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007577527314424515
    2. ' for' → logprob: -6.007577419281006
    3. 'for' → logprob: -6.257577419281006
    4. '   ' → logprob: -6.757577419281006
    5. ' i' → logprob: -7.632577419281006
    6. 'index' → logprob: -8.257577896118164
    7. 'max' → logprob: -8.382577896118164
    8. '#' → logprob: -8.632577896118164
    9. 'i' → logprob: -8.882577896118164
    10. 'indices' → logprob: -8.882577896118164

Token 532: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4678807258605957
    2. ' for' → logprob: -1.8428807258605957
    3. 'for' → logprob: -1.9678807258605957
    4. '   ' → logprob: -4.342880725860596
    5. 'index' → logprob: -4.592880725860596
    6. ' i' → logprob: -4.592880725860596
    7. 'indices' → logprob: -5.092880725860596
    8. ' indices' → logprob: -5.342880725860596
    9. ' index' → logprob: -5.842880725860596
    10. ' on' → logprob: -5.842880725860596

Token 533: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7757335305213928
    2. 'index' → logprob: -1.650733470916748
    3. 'idx' → logprob: -2.525733470916748
    4. 'indices' → logprob: -2.525733470916748
    5. ' for' → logprob: -2.650733470916748
    6. '#' → logprob: -3.525733470916748
    7. 'indexes' → logprob: -4.525733470916748
    8. ' index' → logprob: -4.775733470916748
    9. 'max' → logprob: -5.150733470916748
    10. ' idx' → logprob: -5.150733470916748

Token 534: ' détr' (ID: 123084)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5279970169067383
    2. 'continue' → logprob: -1.2779970169067383
    3. ' continue' → logprob: -3.5279970169067383
    4. ' for' → logprob: -4.027997016906738
    5. 'def' → logprob: -4.152997016906738
    6. '#' → logprob: -4.277997016906738
    7. 'contin' → logprob: -4.527997016906738
    8. '       ' → logprob: -4.902997016906738
    9. 'simulate' → logprob: -5.402997016906738
    10. 'can' → logprob: -5.402997016906738

Token 535: 'uit' (ID: 2136)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.054669659584760666
    2. 'uire' → logprob: -3.8046696186065674
    3. 'uit' → logprob: -4.1796698570251465
    4. 'u' → logprob: -4.4296698570251465
    5. 'uite' → logprob: -6.6796698570251465
    6. 'oit' → logprob: -7.1796698570251465
    7. 'uir' → logprob: -7.5546698570251465
    8. 'oire' → logprob: -8.054669380187988
    9. '```' → logprob: -8.929669380187988
    10. 'a' → logprob: -9.054669380187988

Token 536: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6185382008552551
    2. ' for' → logprob: -1.4935381412506104
    3. 'for' → logprob: -2.6185381412506104
    4. ' une' → logprob: -2.9935381412506104
    5. ' one' → logprob: -2.9935381412506104
    6. ' missiles' → logprob: -4.2435383796691895
    7. 'un' → logprob: -4.7435383796691895
    8. ' missile' → logprob: -4.8685383796691895
    9. '   ' → logprob: -5.6185383796691895
    10. 'miss' → logprob: -5.8685383796691895

Token 537: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.9145812392234802
    2. 'miss' → logprob: -1.289581298828125
    3. 'plus' → logprob: -2.664581298828125
    4. ' missile' → logprob: -2.914581298828125
    5. ' première' → logprob: -3.164581298828125
    6. 'first' → logprob: -4.164581298828125
    7. ' dernière' → logprob: -4.414581298828125
    8. 'p' → logprob: -4.727081298828125
    9. 'der' → logprob: -4.727081298828125
    10. 'for' → logprob: -4.852081298828125

Token 538: ' (' (ID: 350)
  Prédit: ' missile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' missile' → logprob: -0.8720982074737549
    2. 'miss' → logprob: -1.1220982074737549
    3. '[' → logprob: -2.747098207473755
    4. ']' → logprob: -3.372098207473755
    5. 'country' → logprob: -3.497098207473755
    6. ' country' → logprob: -3.622098207473755
    7. '_' → logprob: -4.372097969055176
    8. 'munition' → logprob: -4.997097969055176
    9. ')' → logprob: -5.059597969055176
    10. 'pop' → logprob: -5.372097969055176

Token 539: 'index' (ID: 2257)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0173317193984985
    2. ']' → logprob: -1.8923317193984985
    3. '0' → logprob: -2.642331600189209
    4. ' missile' → logprob: -2.642331600189209
    5. '[' → logprob: -2.892331600189209
    6. 'miss' → logprob: -3.017331600189209
    7. 'pop' → logprob: -3.267331600189209
    8. '])' → logprob: -3.392331600189209
    9. ' )' → logprob: -4.017331600189209
    10. 'indice' → logprob: -4.267331600189209

Token 540: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016018999740481377
    2. ' ' → logprob: -4.266018867492676
    3. '[' → logprob: -7.141018867492676
    4. ')' → logprob: -8.016018867492676
    5. '=' → logprob: -8.016018867492676
    6. ']' → logprob: -8.641018867492676
    7. ' =' → logprob: -9.516018867492676
    8. '][' → logprob: -10.391018867492676
    9. 'def' → logprob: -10.641018867492676
    10. ' zero' → logprob: -10.766018867492676

Token 541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01023869588971138
    2. ' ' → logprob: -4.6352386474609375
    3. '=' → logprob: -8.385238647460938
    4. '[' → logprob: -8.760238647460938
    5. ')' → logprob: -10.635238647460938
    6. ']' → logprob: -10.885238647460938
    7. ' =' → logprob: -11.260238647460938
    8. '][' → logprob: -11.635238647460938
    9. ' [' → logprob: -11.760238647460938
    10. ' zero' → logprob: -12.135238647460938

Token 542: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07888328284025192
    2. ']' → logprob: -2.703883171081543
    3. '])' → logprob: -4.953883171081543
    4. ' )' → logprob: -6.953883171081543
    5. ')]' → logprob: -8.078883171081543
    6. ')
' → logprob: -8.703883171081543
    7. ' ]' → logprob: -8.703883171081543
    8. ')])' → logprob: -9.078883171081543
    9. '[' → logprob: -10.453883171081543
    10. '])]' → logprob: -11.078883171081543

Token 543: ' valeur' (ID: 41664)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30652064085006714
    2. ')' → logprob: -1.806520700454712
    3. '<|end|>' → logprob: -3.181520700454712
    4. ' ]' → logprob: -3.306520700454712
    5. '   ' → logprob: -5.556520462036133
    6. ' )' → logprob: -5.806520462036133
    7. '[' → logprob: -6.431520462036133
    8. ' for' → logprob: -6.431520462036133
    9. '       ' → logprob: -6.806520462036133
    10. '    ' → logprob: -6.931520462036133

Token 544: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7386131882667542
    2. ']' → logprob: -1.2386131286621094
    3. '   ' → logprob: -3.1136131286621094
    4. ' ]' → logprob: -3.2386131286621094
    5. ',' → logprob: -3.3636131286621094
    6. '<|end|>' → logprob: -3.7386131286621094
    7. ' )' → logprob: -3.8636131286621094
    8. '[' → logprob: -4.363613128662109
    9. '       ' → logprob: -4.863613128662109
    10. '    ' → logprob: -4.863613128662109

Token 545: ' la' (ID: 557)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.447491317987442
    2. 'each' → logprob: -1.8224912881851196
    3. ' chaque' → logprob: -2.697491407394409
    4. 'la' → logprob: -3.072491407394409
    5. 'ch' → logprob: -3.697491407394409
    6. 'cha' → logprob: -4.07249116897583
    7. ' missiles' → logprob: -4.57249116897583
    8. ' each' → logprob: -4.94749116897583
    9. 'country' → logprob: -5.07249116897583
    10. 'miss' → logprob: -5.32249116897583

Token 546: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5950395464897156
    2. 'list' → logprob: -0.9700395464897156
    3. ' liste' → logprob: -3.3450396060943604
    4. 'miss' → logprob: -4.970039367675781
    5. 'country' → logprob: -4.970039367675781
    6. 'lists' → logprob: -5.220039367675781
    7. ' list' → logprob: -5.720039367675781
    8. 'lista' → logprob: -6.095039367675781
    9. ' missiles' → logprob: -6.095039367675781
    10. 'p' → logprob: -6.720039367675781

Token 547: ' missiles' (ID: 97169)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1926853656768799
    2. '   ' → logprob: -1.6926853656768799
    3. '<|end|>' → logprob: -1.6926853656768799
    4. ']' → logprob: -1.9426853656768799
    5. ',' → logprob: -3.19268536567688
    6. ')' → logprob: -3.56768536567688
    7. '.' → logprob: -3.69268536567688
    8. ' ' → logprob: -4.067685127258301
    9. ':' → logprob: -4.067685127258301
    10. '[' → logprob: -4.317685127258301

Token 548: '[i' (ID: 1768)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2016531527042389
    2. '   ' → logprob: -1.9516531229019165
    3. ' for' → logprob: -3.951653242111206
    4. 'for' → logprob: -4.951653003692627
    5. '[' → logprob: -6.201653003692627
    6. ']' → logprob: -6.451653003692627
    7. ',' → logprob: -6.576653003692627
    8. '<|end|>' → logprob: -6.576653003692627
    9. '.' → logprob: -6.826653003692627
    10. ' ' → logprob: -6.951653003692627

Token 549: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39563584327697754
    2. '])' → logprob: -1.1456358432769775
    3. '][' → logprob: -5.020635604858398
    4. '].' → logprob: -6.895635604858398
    5. '],' → logprob: -7.645635604858398
    6. '])]' → logprob: -9.020635604858398
    7. ']
' → logprob: -9.145635604858398
    8. ']);' → logprob: -10.020635604858398
    9. ')' → logprob: -10.020635604858398
    10. ']).' → logprob: -10.270635604858398

Token 550: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9083782434463501
    2. '       ' → logprob: -1.28337824344635
    3. ':' → logprob: -1.53337824344635
    4. 'for' → logprob: -3.0333781242370605
    5. ' for' → logprob: -4.1583781242370605
    6. '[' → logprob: -4.2833781242370605
    7. ']' → logprob: -5.7833781242370605
    8. '.' → logprob: -6.0333781242370605
    9. 'index' → logprob: -6.1583781242370605
    10. 'def' → logprob: -6.4083781242370605

Token 551: ' possible' (ID: 4149)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.09075988829135895
    2. 'countries' → logprob: -3.2157599925994873
    3. ' len' → logprob: -3.4657599925994873
    4. 'i' → logprob: -4.340759754180908
    5. ' countries' → logprob: -6.840759754180908
    6. ' i' → logprob: -6.965759754180908
    7. ' missiles' → logprob: -9.465760231018066
    8. 'c' → logprob: -9.715760231018066
    9. 'miss' → logprob: -10.590760231018066
    10. '0' → logprob: -10.715760231018066

Token 552: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19262872636318207
    2. 'for' → logprob: -2.9426286220550537
    3. ' for' → logprob: -2.9426286220550537
    4. '   ' → logprob: -3.3176286220550537
    5. '<|end|>' → logprob: -4.442628860473633
    6. '
' → logprob: -5.692628860473633
    7. ':' → logprob: -6.067628860473633
    8. '.' → logprob: -6.067628860473633
    9. ',' → logprob: -6.317628860473633
    10. '<|end|>' → logprob: -6.692628860473633

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1761043667793274
    2. 'step' → logprob: -2.1761043071746826
    3. 'for' → logprob: -3.9261043071746826
    4. 'steps' → logprob: -5.051104545593262
    5. ' step' → logprob: -5.426104545593262
    6. 'i' → logprob: -5.426104545593262
    7. ' for' → logprob: -5.801104545593262
    8. 'current' → logprob: -6.176104545593262
    9. '   ' → logprob: -6.176104545593262
    10. 'index' → logprob: -6.301104545593262

Token 554: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.023520903661847115
    2. 'steps' → logprob: -4.8985209465026855
    3. 'step' → logprob: -5.5235209465026855
    4. '       ' → logprob: -5.6485209465026855
    5. 'for' → logprob: -6.5235209465026855
    6. 'destroy' → logprob: -6.6485209465026855
    7. '   ' → logprob: -6.6485209465026855
    8. '#' (adapté à ' #') → logprob: -7.1485209465026855
    9. 'indices' → logprob: -7.5235209465026855
    10. 'index' → logprob: -7.5235209465026855

Token 555: ' Alg' (ID: 31776)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2966247797012329
    2. 'step' → logprob: -2.6716246604919434
    3. 'index' → logprob: -2.7966246604919434
    4. 'idx' → logprob: -3.0466246604919434
    5. 'for' → logprob: -3.6716246604919434
    6. 'steps' → logprob: -4.046624660491943
    7. 'pos' → logprob: -4.296624660491943
    8. 'indices' → logprob: -4.921624660491943
    9. 'destroy' → logprob: -6.046624660491943
    10. '#' → logprob: -6.296624660491943

Token 556: 'orith' (ID: 9996)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.9894201755523682
    2. 'orith' → logprob: -1.3644201755523682
    3. 'orithm' → logprob: -1.8644201755523682
    4. 'or' → logprob: -1.9894201755523682
    5. '   ' → logprob: -3.239420175552368
    6. 'orithms' → logprob: -3.614420175552368
    7. '#' → logprob: -5.364419937133789
    8. '       ' → logprob: -6.239419937133789
    9. '    ' → logprob: -6.489419937133789
    10. 'r' → logprob: -6.739419937133789

Token 557: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0005687602679245174
    2. 'e' → logprob: -8.000568389892578
    3. 'm' → logprob: -8.500568389892578
    4. '   ' → logprob: -11.125568389892578
    5. 'mes' → logprob: -12.875568389892578
    6. 'ème' → logprob: -13.125568389892578
    7. '#' → logprob: -13.125568389892578
    8. 'hme' → logprob: -13.375568389892578
    9. 'def' → logprob: -14.000568389892578
    10. 'ime' → logprob: -14.000568389892578

Token 558: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7362424731254578
    2. 'max' → logprob: -1.1112425327301025
    3. ' max' → logprob: -2.1112425327301025
    4. '
' → logprob: -3.4862425327301025
    5. '   ' → logprob: -4.236242294311523
    6. '#' → logprob: -4.986242294311523
    7. ' step' → logprob: -5.236242294311523
    8. 'steps' → logprob: -5.611242294311523
    9. 'step' → logprob: -6.236242294311523
    10. '```' → logprob: -6.611242294311523

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08854371309280396
    2. 'max' → logprob: -2.838543653488159
    3. ' max' → logprob: -4.088543891906738
    4. '   ' → logprob: -4.838543891906738
    5. 'steps' → logprob: -7.838543891906738
    6. ' step' → logprob: -7.963543891906738
    7. 'step' → logprob: -8.463543891906738
    8. '
' → logprob: -8.838543891906738
    9. ' steps' → logprob: -9.088543891906738
    10. '        
' → logprob: -9.463543891906738

Token 560: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04051472991704941
    2. ' max' → logprob: -4.040514945983887
    3. '   ' → logprob: -5.165514945983887
    4. '#' (adapté à ' #') → logprob: -5.540514945983887
    5. 'steps' → logprob: -5.540514945983887
    6. 'step' → logprob: -5.790514945983887
    7. 'for' → logprob: -6.165514945983887
    8. '       ' → logprob: -6.540514945983887
    9. 'destroy' → logprob: -8.165514945983887
    10. 'from' → logprob: -8.290514945983887

Token 561: ' à' (ID: 1221)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10272038727998734
    2. ' max' → logprob: -3.2277204990386963
    3. 'steps' → logprob: -3.9777204990386963
    4. 'step' → logprob: -4.102720260620117
    5. '#' → logprob: -4.852720260620117
    6. ' step' → logprob: -6.227720260620117
    7. 'for' → logprob: -6.727720260620117
    8. '
' → logprob: -6.852720260620117
    9. 'idx' → logprob: -6.852720260620117
    10. '   ' → logprob: -6.977720260620117

Token 562: ' chaque' (ID: 21194)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9916590452194214
    2. 'pas' → logprob: -1.7416590452194214
    3. 'destroy' → logprob: -2.116659164428711
    4. 'step' → logprob: -2.491659164428711
    5. 'det' → logprob: -2.491659164428711
    6. 'i' → logprob: -3.366659164428711
    7. 'd' → logprob: -3.866659164428711
    8. 'dé' → logprob: -3.866659164428711
    9. 'faire' → logprob: -4.241659164428711
    10. '#' → logprob: -4.241659164428711

Token 563: ' étape' (ID: 83661)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.48154136538505554
    2. ' étape' → logprob: -1.106541395187378
    3. 'step' → logprob: -3.231541395187378
    4. 'pas' → logprob: -5.106541156768799
    5. 'tour' → logprob: -6.606541156768799
    6. 'é' → logprob: -6.856541156768799
    7. '#' → logprob: -7.356541156768799
    8. 't' → logprob: -7.606541156768799
    9. 'iteration' → logprob: -7.981541156768799
    10. 'i' → logprob: -8.106541633605957

Token 564: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7803249359130859
    2. '   ' → logprob: -1.155324935913086
    3. ':' → logprob: -2.280324935913086
    4. ' for' → logprob: -2.780324935913086
    5. ',' → logprob: -3.530324935913086
    6. 'for' → logprob: -3.530324935913086
    7. '    ' → logprob: -7.155324935913086
    8. '           ' → logprob: -7.280324935913086
    9. ' :' → logprob: -7.905324935913086
    10. ':
' → logprob: -8.155324935913086

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02896425686776638
    2. ' for' → logprob: -3.7789642810821533
    3. 'for' → logprob: -5.403964042663574
    4. '   ' → logprob: -6.778964042663574
    5. 'while' → logprob: -11.528964042663574
    6. ' while' → logprob: -11.778964042663574
    7. '           ' → logprob: -11.778964042663574
    8. ' step' → logprob: -11.903964042663574
    9. '```' → logprob: -12.653964042663574
    10. ' i' → logprob: -12.903964042663574

Token 566: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1762453019618988
    2. ' for' → logprob: -2.0512452125549316
    3. 'for' → logprob: -3.6762452125549316
    4. '   ' → logprob: -5.051245212554932
    5. ' step' → logprob: -8.17624568939209
    6. 'step' → logprob: -8.80124568939209
    7. ' i' → logprob: -9.30124568939209
    8. 'steps' → logprob: -9.42624568939209
    9. '    ' → logprob: -9.55124568939209
    10. 'count' → logprob: -10.05124568939209

Token 567: '  ' (ID: 256)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40621018409729004
    2. 'for' → logprob: -1.15621018409729
    3. '   ' → logprob: -4.531209945678711
    4. '       ' → logprob: -4.906209945678711
    5. '    ' → logprob: -7.656209945678711
    6. ' ' → logprob: -9.281209945678711
    7. '	for' → logprob: -10.156209945678711
    8. 'possible' → logprob: -10.156209945678711
    9. '    
' → logprob: -10.281209945678711
    10. '        
' → logprob: -10.531209945678711

Token 568: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3788730502128601
    2. 'all' → logprob: -2.003873109817505
    3. 'can' → logprob: -2.503873109817505
    4. 'destroy' → logprob: -3.128873109817505
    5. 'possible' → logprob: -3.878873109817505
    6. '   ' → logprob: -5.003872871398926
    7. 'step' → logprob: -5.253872871398926
    8. 't' → logprob: -5.503872871398926
    9. ' for' → logprob: -6.253872871398926
    10. 'poss' → logprob: -6.253872871398926

Token 569: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15046417713165283
    2. 'i' → logprob: -2.4004640579223633
    3. ' country' → logprob: -3.2754640579223633
    4. 'country' → logprob: -5.025464057922363
    5. 'p' → logprob: -6.525464057922363
    6. ' p' → logprob: -6.900464057922363
    7. ' pays' → logprob: -7.025464057922363
    8. ' c' → logprob: -7.650464057922363
    9. 'c' → logprob: -8.275464057922363
    10. ' each' → logprob: -9.525464057922363

Token 570: ' pays' (ID: 15236)
  Prédit: ' country'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' country' → logprob: -0.9847894310951233
    2. 'country' → logprob: -0.9847894310951233
    3. ' i' → logprob: -1.6097893714904785
    4. 'i' → logprob: -3.1097893714904785
    5. 'p' → logprob: -6.1097893714904785
    6. ' pays' → logprob: -6.1097893714904785
    7. 'countries' → logprob: -6.3597893714904785
    8. ' countries' → logprob: -7.4847893714904785
    9. 'c' → logprob: -7.6097893714904785
    10. ' país' → logprob: -8.109789848327637

Token 571: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3053130805492401
    2. ':' → logprob: -1.5553131103515625
    3. ' in' → logprob: -3.8053131103515625
    4. '       ' → logprob: -4.9303131103515625
    5. '[i' → logprob: -5.0553131103515625
    6. ' :' → logprob: -5.1803131103515625
    7. ' i' → logprob: -5.6803131103515625
    8. ',' → logprob: -5.8053131103515625
    9. ' if' → logprob: -6.8053131103515625
    10. '    ' → logprob: -7.4303131103515625

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008416939526796341
    2. '           ' → logprob: -4.883417129516602
    3. '   ' → logprob: -7.883417129516602
    4. '	       ' → logprob: -8.508417129516602
    5. '	   ' → logprob: -9.008417129516602
    6. ' ' → logprob: -10.258417129516602
    7. '	' → logprob: -12.008417129516602
    8. ',' → logprob: -12.008417129516602
    9. '<|end|>' → logprob: -12.008417129516602
    10. '    	   ' → logprob: -12.258417129516602

Token 573: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017851853743195534
    2. '           ' → logprob: -4.142851829528809
    3. '   ' → logprob: -7.642851829528809
    4. 'if' → logprob: -7.642851829528809
    5. ' if' → logprob: -7.642851829528809
    6. '	   ' → logprob: -9.142851829528809
    7. '        ' → logprob: -9.267851829528809
    8. '	       ' → logprob: -9.892851829528809
    9. ' ' → logprob: -10.142851829528809
    10. '    ' → logprob: -11.017851829528809

Token 574: '      ' (ID: 1699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4355042576789856
    2. '       ' → logprob: -1.0605041980743408
    3. ' if' → logprob: -5.93550443649292
    4. ' i' → logprob: -6.18550443649292
    5. ' for' → logprob: -7.18550443649292
    6. 'if' → logprob: -7.43550443649292
    7. '   ' → logprob: -8.435503959655762
    8. 'for' → logprob: -8.810503959655762
    9. '           ' → logprob: -9.185503959655762
    10. 'i' → logprob: -9.810503959655762

Token 575: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02923380769789219
    2. ' if' → logprob: -4.154233932495117
    3. 'for' → logprob: -4.654233932495117
    4. '   ' → logprob: -6.029233932495117
    5. '       ' → logprob: -7.404233932495117
    6. ' for' → logprob: -8.154233932495117
    7. '           ' → logprob: -8.779233932495117
    8. 'i' → logprob: -9.654233932495117
    9. '```' → logprob: -10.279233932495117
    10. 'idx' → logprob: -11.904233932495117

Token 576: ' missiles' (ID: 97169)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4032566249370575
    2. 'len' → logprob: -1.1532566547393799
    3. 'countries' → logprob: -5.028256416320801
    4. ' countries' → logprob: -5.653256416320801
    5. ' potentials' → logprob: -5.903256416320801
    6. 'pot' → logprob: -6.653256416320801
    7. ' missiles' → logprob: -7.403256416320801
    8. ' i' → logprob: -7.903256416320801
    9. 'i' → logprob: -8.0282564163208
    10. '   ' → logprob: -8.4032564163208

Token 577: ' rest' (ID: 2867)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004546254931483418
    2. '[' → logprob: -7.750454425811768
    3. 's' → logprob: -12.125454902648926
    4. '   ' → logprob: -12.625454902648926
    5. 'i' → logprob: -13.125454902648926
    6. '```' → logprob: -13.125454902648926
    7. 'and' → logprob: -13.625454902648926
    8. '       ' → logprob: -13.625454902648926
    9. '               ' → logprob: -13.750454902648926
    10. ' [' → logprob: -13.875454902648926

Token 578: 'ants' (ID: 2027)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8625612258911133
    2. '[' → logprob: -0.9875612258911133
    3. ']' → logprob: -3.2375612258911133
    4. '][' → logprob: -3.6125612258911133
    5. '           ' → logprob: -3.6125612258911133
    6. 'ant' → logprob: -3.8625612258911133
    7. '               ' → logprob: -4.112561225891113
    8. 'e' → logprob: -4.237561225891113
    9. '       ' → logprob: -4.862561225891113
    10. '   ' → logprob: -5.612561225891113

Token 579: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0904524028301239
    2. ':
' → logprob: -3.3404524326324463
    3. '           ' → logprob: -3.9654524326324463
    4. '[i' → logprob: -4.090452194213867
    5. '[' → logprob: -4.965452194213867
    6. '   ' → logprob: -5.840452194213867
    7. '       ' → logprob: -6.590452194213867
    8. '               ' → logprob: -6.715452194213867
    9. ' and' → logprob: -7.090452194213867
    10. '```' → logprob: -7.465452194213867

Token 580: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023578100372105837
    2. '       ' → logprob: -7.0023579597473145
    3. ' if' → logprob: -7.3773579597473145
    4. '               ' → logprob: -7.7523579597473145
    5. 'if' → logprob: -8.502357482910156
    6. '	       ' → logprob: -9.377357482910156
    7. '```' → logprob: -11.252357482910156
    8. ' ' → logprob: -11.502357482910156
    9. '   ' → logprob: -11.627357482910156
    10. '[' → logprob: -11.877357482910156

Token 581: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02478371001780033
    2. ' if' → logprob: -4.149783611297607
    3. 'if' → logprob: -5.399783611297607
    4. '       ' → logprob: -6.024783611297607
    5. ' for' → logprob: -7.399783611297607
    6. '               ' → logprob: -7.399783611297607
    7. 'for' → logprob: -9.399784088134766
    8. '   ' → logprob: -9.524784088134766
    9. '	       ' → logprob: -9.524784088134766
    10. ' ' → logprob: -9.774784088134766

Token 582: '          ' (ID: 3550)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049223072826862335
    2. '       ' → logprob: -3.9242231845855713
    3. ' if' → logprob: -4.549222946166992
    4. 'if' → logprob: -4.799222946166992
    5. '               ' → logprob: -5.799222946166992
    6. ' for' → logprob: -6.424222946166992
    7. 'for' → logprob: -7.174222946166992
    8. '   ' → logprob: -7.424222946166992
    9. '#' → logprob: -7.674222946166992
    10. ' missiles' → logprob: -7.674222946166992

Token 583: ' retirer' (ID: 136490)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.03368327394127846
    2. 'potential' → logprob: -4.1586833000183105
    3. ' potentials' → logprob: -4.6586833000183105
    4. '           ' → logprob: -6.1586833000183105
    5. ' potentiel' → logprob: -6.5336833000183105
    6. 'val' → logprob: -7.0336833000183105
    7. ' potential' → logprob: -7.5336833000183105
    8. ' pot' → logprob: -7.7836833000183105
    9. 'p' → logprob: -7.7836833000183105
    10. 'cap' → logprob: -7.9086833000183105

Token 584: ' le' (ID: 505)
  Prédit: ' missiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' missiles' → logprob: -0.962157130241394
    2. 'miss' → logprob: -1.087157130241394
    3. '0' → logprob: -2.0871572494506836
    4. '           ' → logprob: -2.8371572494506836
    5. '[' → logprob: -3.4621572494506836
    6. '1' → logprob: -3.9621572494506836
    7. '               ' → logprob: -4.087157249450684
    8. 'pot' → logprob: -5.337157249450684
    9. 'mis' → logprob: -5.462157249450684
    10. '   ' → logprob: -5.712157249450684

Token 585: ' missile' (ID: 73870)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6006153225898743
    2. 'prem' → logprob: -1.4756152629852295
    3. '[' → logprob: -2.1006152629852295
    4. ' premier' → logprob: -3.1006152629852295
    5. 'miss' → logprob: -3.4756152629852295
    6. ' ' → logprob: -4.600615501403809
    7. ' missile' → logprob: -5.600615501403809
    8. 'dern' → logprob: -6.100615501403809
    9. '1' → logprob: -6.350615501403809
    10. ' first' → logprob: -6.725615501403809

Token 586: ' le' (ID: 505)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.7384732961654663
    2. '[' → logprob: -0.9884732961654663
    3. '           ' → logprob: -2.613473415374756
    4. ' =' → logprob: -3.613473415374756
    5. 'pop' → logprob: -4.238473415374756
    6. '(' → logprob: -4.863473415374756
    7. 's' → logprob: -5.113473415374756
    8. ' at' → logprob: -5.113473415374756
    9. '               ' → logprob: -5.488473415374756
    10. ' pop' → logprob: -5.988473415374756

Token 587: ' plus' (ID: 2932)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8835302591323853
    2. 'plus' → logprob: -1.0085302591323853
    3. 'ft' → logprob: -3.2585301399230957
    4. 't' → logprob: -3.6335301399230957
    5. 'ment' → logprob: -4.133530139923096
    6. 'ast' → logprob: -4.133530139923096
    7. '1' → logprob: -4.383530139923096
    8. ' plus' → logprob: -4.758530139923096
    9. 'vel' → logprob: -4.883530139923096
    10. 'e' → logprob: -5.008530139923096

Token 588: ' ancien' (ID: 81732)
  Prédit: 'ancien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancien' → logprob: -0.30865371227264404
    2. 'à' → logprob: -1.558653712272644
    3. '0' → logprob: -3.9336538314819336
    4. ' à' → logprob: -4.433653831481934
    5. '[' → logprob: -4.933653831481934
    6. ' ancien' → logprob: -5.058653831481934
    7. 'anc' → logprob: -5.808653831481934
    8. '```' → logprob: -6.183653831481934
    9. 'dern' → logprob: -6.683653831481934
    10. ' récent' → logprob: -7.433653831481934

Token 589: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06228158250451088
    2. '               ' → logprob: -3.312281608581543
    3. '.pop' → logprob: -4.437281608581543
    4. '[' → logprob: -4.812281608581543
    5. ' =' → logprob: -6.812281608581543
    6. '                   ' → logprob: -7.187281608581543
    7. '                       ' → logprob: -8.312281608581543
    8. '       ' → logprob: -8.437281608581543
    9. ' (' → logprob: -8.562281608581543
    10. '	       ' → logprob: -9.062281608581543

Token 590: 'le' (ID: 282)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2533371150493622
    2. 'pop' → logprob: -2.5033371448516846
    3. 'countries' → logprob: -3.1283371448516846
    4. ')' → logprob: -3.2533371448516846
    5. ' missiles' → logprob: -3.6283371448516846
    6. 'miss' → logprob: -4.1283369064331055
    7. '1' → logprob: -6.0033369064331055
    8. '```' → logprob: -6.0033369064331055
    9. '[' → logprob: -6.2533369064331055
    10. ' ' → logprob: -6.8783369064331055

Token 591: ' premier' (ID: 15506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04792921245098114
    2. 'pop' → logprob: -3.672929286956787
    3. '[' → logprob: -4.047929286956787
    4. '```' → logprob: -6.297929286956787
    5. '.pop' → logprob: -7.297929286956787
    6. 'prem' → logprob: -8.797928810119629
    7. 'miss' → logprob: -8.797928810119629
    8. ' ' → logprob: -9.672928810119629
    9. 'plus' → logprob: -9.672928810119629
    10. '`' → logprob: -9.797928810119629

Token 592: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31861984729766846
    2. ']' → logprob: -2.068619728088379
    3. '()' → logprob: -2.693619728088379
    4. '[' → logprob: -3.943619728088379
    5. ')
' → logprob: -4.568619728088379
    6. '])' → logprob: -4.693619728088379
    7. '()
' → logprob: -5.068619728088379
    8. '())' → logprob: -5.568619728088379
    9. '```' → logprob: -5.568619728088379
    10. 'pop' → logprob: -5.693619728088379

Token 593: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007755621336400509
    2. '          ' → logprob: -8.125775337219238
    3. '               ' → logprob: -8.250775337219238
    4. '       ' → logprob: -9.000775337219238
    5. '                   ' → logprob: -10.750775337219238
    6. '```' → logprob: -11.250775337219238
    7. '                       ' → logprob: -11.625775337219238
    8. '         ' → logprob: -11.750775337219238
    9. ',' → logprob: -12.125775337219238
    10. '		' → logprob: -12.250775337219238

Token 594: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008172504603862762
    2. '       ' → logprob: -8.00081729888916
    3. '               ' → logprob: -8.50081729888916
    4. '          ' → logprob: -8.50081729888916
    5. ',' → logprob: -11.25081729888916
    6. '                   ' → logprob: -11.62581729888916
    7. '```' → logprob: -11.87581729888916
    8. '         ' → logprob: -12.12581729888916
    9. '	       ' → logprob: -12.50081729888916
    10. '<|end|>' → logprob: -12.62581729888916

Token 595: '          ' (ID: 3550)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00855913944542408
    2. '       ' → logprob: -5.133559226989746
    3. '               ' → logprob: -6.758559226989746
    4. 'for' → logprob: -7.133559226989746
    5. '          ' → logprob: -8.383559226989746
    6. ' for' → logprob: -8.508559226989746
    7. '   ' → logprob: -9.633559226989746
    8. '                   ' → logprob: -10.133559226989746
    9. ' ' → logprob: -10.633559226989746
    10. '#' → logprob: -10.883559226989746

Token 596: ' dimin' (ID: 33870)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.04031505808234215
    2. '           ' → logprob: -3.4153151512145996
    3. '       ' → logprob: -5.2903151512146
    4. 'potential' → logprob: -7.5403151512146
    5. ' potentials' → logprob: -7.9153151512146
    6. 'for' → logprob: -8.165314674377441
    7. '               ' → logprob: -8.540314674377441
    8. 'pots' → logprob: -9.915314674377441
    9. '   ' → logprob: -10.165314674377441
    10. '```' → logprob: -10.165314674377441

Token 597: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.00012356207298580557
    2. 'ue' → logprob: -9.500123977661133
    3. 'u' → logprob: -10.500123977661133
    4. 'uter' → logprob: -12.500123977661133
    5. '       ' → logprob: -13.000123977661133
    6. 'uire' → logprob: -13.125123977661133
    7. 'uera' → logprob: -13.250123977661133
    8. '               ' → logprob: -13.750123977661133
    9. '   ' → logprob: -13.875123977661133
    10. 'ure' → logprob: -14.125123977661133

Token 598: ' le' (ID: 505)
  Prédit: ' potentials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' potentials' → logprob: -0.10030695050954819
    2. 'pot' → logprob: -2.350306987762451
    3. ' potential' → logprob: -10.350306510925293
    4. ' pot' → logprob: -10.600306510925293
    5. 'potential' → logprob: -10.600306510925293
    6. ' potent' → logprob: -11.475306510925293
    7. ' potenti' → logprob: -13.225306510925293
    8. 'pots' → logprob: -13.475306510925293
    9. ' потен' → logprob: -13.975306510925293
    10. ' potencial' → logprob: -14.100306510925293

Token 599: ' potentiel' (ID: 113761)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.6709743738174438
    2. ' potentials' → logprob: -1.4209743738174438
    3. ' potentiel' → logprob: -1.9209743738174438
    4. 'potential' → logprob: -2.5459742546081543
    5. ' potential' → logprob: -3.9209742546081543
    6. ' pot' → logprob: -6.420974254608154
    7. ' potencial' → logprob: -7.670974254608154
    8. ' потен' → logprob: -8.295974731445312
    9. ' potent' → logprob: -9.295974731445312
    10. 'pots' → logprob: -10.545974731445312

Token 600: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2552175223827362
    2. '       ' → logprob: -1.5052175521850586
    3. '               ' → logprob: -6.505217552185059
    4. 'for' → logprob: -7.255217552185059
    5. ' for' → logprob: -8.380217552185059
    6. '   ' → logprob: -8.755217552185059
    7. '                   ' → logprob: -9.130217552185059
    8. '          ' → logprob: -9.130217552185059
    9. '
' → logprob: -9.255217552185059
    10. ',' → logprob: -9.505217552185059

Token 601: ' conséquence' (ID: 138042)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.3523710072040558
    2. '1' → logprob: -1.6023709774017334
    3. 'countries' → logprob: -2.6023709774017334
    4. ' pot' → logprob: -5.6023712158203125
    5. ' potentials' → logprob: -5.8523712158203125
    6. '   ' → logprob: -5.8523712158203125
    7. ' ' → logprob: -5.9773712158203125
    8. 'miss' → logprob: -6.3523712158203125
    9. ' missiles' → logprob: -6.6023712158203125
    10. '```' → logprob: -6.8523712158203125

Token 602: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6935816407203674
    2. '           ' → logprob: -0.6935816407203674
    3. '               ' → logprob: -8.193581581115723
    4. '   ' → logprob: -9.943581581115723
    5. '                   ' → logprob: -10.568581581115723
    6. '          ' → logprob: -10.693581581115723
    7. 'for' → logprob: -10.943581581115723
    8. '        
' → logprob: -12.068581581115723
    9. '            
' → logprob: -12.193581581115723
    10. '                       ' → logprob: -12.318581581115723

Token 603: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010184423066675663
    2. '       ' → logprob: -4.635184288024902
    3. '               ' → logprob: -8.385184288024902
    4. '          ' → logprob: -9.885184288024902
    5. '                   ' → logprob: -10.260184288024902
    6. '            
' → logprob: -10.260184288024902
    7. '   ' → logprob: -11.010184288024902
    8. 'for' → logprob: -11.510184288024902
    9. '                       ' → logprob: -11.635184288024902
    10. ' for' → logprob: -11.760184288024902

Token 604: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42910894751548767
    2. '           ' → logprob: -1.05410897731781
    3. '   ' → logprob: -8.554108619689941
    4. 'for' → logprob: -9.429108619689941
    5. '               ' → logprob: -9.929108619689941
    6. ' for' → logprob: -10.929108619689941
    7. '          ' → logprob: -10.929108619689941
    8. '         ' → logprob: -11.929108619689941
    9. ' ' → logprob: -12.054108619689941
    10. '            
' → logprob: -12.304108619689941

Token 605: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03026539646089077
    2. '           ' → logprob: -3.5302653312683105
    3. '   ' → logprob: -8.405265808105469
    4. 'for' → logprob: -8.530265808105469
    5. '
' → logprob: -9.530265808105469
    6. ' for' → logprob: -11.780265808105469
    7. '               ' → logprob: -11.905265808105469
    8. '          ' → logprob: -13.155265808105469
    9. '      ' → logprob: -14.030265808105469
    10. '        
' → logprob: -14.155265808105469

Token 606: ' calcul' (ID: 7559)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1066882312297821
    2. 'max' → logprob: -2.7316882610321045
    3. '           ' → logprob: -3.9816882610321045
    4. '   ' → logprob: -4.856688022613525
    5. 'for' → logprob: -5.856688022613525
    6. 'step' → logprob: -6.106688022613525
    7. 'if' → logprob: -7.106688022613525
    8. '#' → logprob: -7.481688022613525
    9. 'def' → logprob: -7.481688022613525
    10. 'diff' → logprob: -7.606688022613525

Token 607: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0027661214116960764
    2. 'ate' → logprob: -6.377766132354736
    3. '       ' → logprob: -7.502766132354736
    4. '   ' → logprob: -7.752766132354736
    5. 'e' → logprob: -10.252765655517578
    6. '           ' → logprob: -10.752765655517578
    7. '#' → logprob: -11.627765655517578
    8. '
' → logprob: -12.752765655517578
    9. '               ' → logprob: -12.752765655517578
    10. '    
' → logprob: -13.502765655517578

Token 608: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.45084065198898315
    2. '   ' → logprob: -1.450840711593628
    3. 'min' → logprob: -2.700840711593628
    4. ' max' → logprob: -4.075840473175049
    5. 'pot' → logprob: -4.700840473175049
    6. 'le' → logprob: -4.700840473175049
    7. ' potentials' → logprob: -5.325840473175049
    8. 'diff' → logprob: -5.450840473175049
    9. ' min' → logprob: -5.700840473175049
    10. '       ' → logprob: -5.700840473175049

Token 609: ' et' (ID: 859)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.06189664453268051
    2. '_' → logprob: -3.436896562576294
    3. 'pot' → logprob: -3.811896562576294
    4. '_val' → logprob: -5.811896800994873
    5. '_diff' → logprob: -7.061896800994873
    6. 'potential' → logprob: -7.561896800994873
    7. '_value' → logprob: -8.061896324157715
    8. '(p' → logprob: -8.186896324157715
    9. ' potentiel' → logprob: -9.186896324157715
    10. 'diff' → logprob: -9.186896324157715

Token 610: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20147308707237244
    2. ' min' → logprob: -1.7014731168746948
    3. '(min' → logprob: -10.326473236083984
    4. ' minimum' → logprob: -11.201473236083984
    5. 'minimum' → logprob: -11.951473236083984
    6. '_min' → logprob: -12.701473236083984
    7. '	min' → logprob: -13.076473236083984
    8. '  ' → logprob: -14.201473236083984
    9. 'max' → logprob: -15.076473236083984
    10. '   ' → logprob: -15.701473236083984

Token 611: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009956293739378452
    2. 'pot' → logprob: -5.759956359863281
    3. '_p' → logprob: -6.134956359863281
    4. '           ' → logprob: -6.634956359863281
    5. '   ' → logprob: -7.259956359863281
    6. '_' → logprob: -7.384956359863281
    7. 'potential' → logprob: -7.509956359863281
    8. ',' → logprob: -8.884956359863281
    9. 'import' → logprob: -9.134956359863281
    10. '()' → logprob: -9.134956359863281

Token 612: ' potentials' (ID: 150885)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.03391089290380478
    2. ' potentials' → logprob: -3.4089109897613525
    3. 'potential' → logprob: -8.283910751342773
    4. 'pots' → logprob: -12.283910751342773
    5. ' pot' → logprob: -12.408910751342773
    6. ' potential' → logprob: -13.033910751342773
    7. '   ' → logprob: -13.908910751342773
    8. '```' → logprob: -15.783910751342773
    9. ' potenti' → logprob: -16.158910751342773
    10. ' potent' → logprob: -16.283910751342773

Token 613: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009142052149400115
    2. '
' → logprob: -7.875914096832275
    3. '           ' → logprob: -7.875914096832275
    4. '        
' → logprob: -9.875914573669434
    5. 'max' → logprob: -10.500914573669434
    6. '   ' → logprob: -10.750914573669434
    7. ',' → logprob: -11.125914573669434
    8. '
' → logprob: -11.750914573669434
    9. '               ' → logprob: -12.375914573669434
    10. '  
' → logprob: -12.625914573669434

Token 614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015211685094982386
    2. '#' → logprob: -6.751521110534668
    3. '           ' → logprob: -8.751521110534668
    4. '        
' → logprob: -9.626521110534668
    5. '
' → logprob: -10.251521110534668
    6. '   ' → logprob: -10.376521110534668
    7. '```' → logprob: -11.126521110534668
    8. '  
' → logprob: -11.876521110534668
    9. '      ' → logprob: -12.126521110534668
    10. '#
' → logprob: -12.251521110534668

Token 615: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010416212026029825
    2. '           ' → logprob: -7.251041412353516
    3. '        
' → logprob: -8.376041412353516
    4. '   ' → logprob: -10.501041412353516
    5. '
' → logprob: -11.501041412353516
    6. '      ' → logprob: -11.626041412353516
    7. '  
' → logprob: -12.126041412353516
    8. '        ' → logprob: -12.251041412353516
    9. '    
' → logprob: -12.251041412353516
    10. '```' → logprob: -12.251041412353516

Token 616: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021625140216201544
    2. 'if' → logprob: -6.627162456512451
    3. '           ' → logprob: -8.12716293334961
    4. '   ' → logprob: -8.37716293334961
    5. 'max' → logprob: -9.25216293334961
    6. '        
' → logprob: -9.75216293334961
    7. '
' → logprob: -9.87716293334961
    8. ' if' → logprob: -9.87716293334961
    9. '#' → logprob: -11.62716293334961
    10. '```' → logprob: -11.62716293334961

Token 617: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.043213509023189545
    2. '       ' → logprob: -3.2932136058807373
    3. ' if' → logprob: -5.918213367462158
    4. '   ' → logprob: -6.168213367462158
    5. '           ' → logprob: -8.043213844299316
    6. '  ' → logprob: -11.668213844299316
    7. '```' → logprob: -11.793213844299316
    8. '      ' → logprob: -12.168213844299316
    9. '	if' → logprob: -12.293213844299316
    10. ' ' → logprob: -12.543213844299316

Token 618: ' diff' (ID: 8868)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2561643719673157
    2. ' max' → logprob: -1.506164312362671
    3. '(max' → logprob: -5.50616455078125
    4. 'abs' → logprob: -9.50616455078125
    5. ' (' → logprob: -9.75616455078125
    6. ' abs' → logprob: -11.63116455078125
    7. '   ' → logprob: -11.75616455078125
    8. '	max' → logprob: -11.88116455078125
    9. '(' → logprob: -13.00616455078125
    10. ' ' → logprob: -13.00616455078125

Token 619: ' >' (ID: 1424)
  Prédit: 'érence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érence' → logprob: -0.2729480564594269
    2. ' >' → logprob: -2.7729480266571045
    3. 'érences' → logprob: -3.2729480266571045
    4. '>' → logprob: -3.5229480266571045
    5. 'ér' → logprob: -3.6479480266571045
    6. 'er' → logprob: -3.7729480266571045
    7. 'érents' → logprob: -4.272948265075684
    8. '   ' → logprob: -4.522948265075684
    9. 'é' → logprob: -4.647948265075684
    10. 'érent' → logprob: -5.397948265075684

Token 620: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07889407873153687
    2. 'd' → logprob: -2.5788941383361816
    3. '	d' → logprob: -13.578893661499023
    4. ' ' → logprob: -13.578893661499023
    5. '   ' → logprob: -14.328893661499023
    6. ' ' → logprob: -14.328893661499023
    7. '_d' → logprob: -15.078893661499023
    8. '>d' → logprob: -16.203893661499023
    9. ' ' → logprob: -16.328893661499023
    10. '  ' → logprob: -17.953893661499023

Token 621: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8209036588668823
    2. ' >' → logprob: -1.3209036588668823
    3. '>' → logprob: -1.6959036588668823
    4. ':' → logprob: -2.820903778076172
    5. ':
' → logprob: -3.820903778076172
    6. '       ' → logprob: -3.945903778076172
    7. '               ' → logprob: -5.445903778076172
    8. '=' → logprob: -6.445903778076172
    9. ' =' → logprob: -6.945903778076172
    10. '   ' → logprob: -7.195903778076172

Token 622: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006297638174146414
    2. ' print' → logprob: -5.506297588348389
    3. '           ' → logprob: -6.131297588348389
    4. '       ' → logprob: -10.381298065185547
    5. '   ' → logprob: -12.131298065185547
    6. '               ' → logprob: -12.381298065185547
    7. '	print' → logprob: -13.756298065185547
    8. '```' → logprob: -14.131298065185547
    9. 'break' → logprob: -15.506298065185547
    10. '
' → logprob: -16.131298065185547

Token 623: ' No' (ID: 3004)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0006912283133715391
    2. '('' → logprob: -8.375691413879395
    3. '(' → logprob: -8.500691413879395
    4. '"' → logprob: -8.750691413879395
    5. '   ' → logprob: -10.625691413879395
    6. 'No' → logprob: -10.750691413879395
    7. '"No' → logprob: -10.875691413879395
    8. ' "' → logprob: -12.000691413879395
    9. ' ("' → logprob: -12.125691413879395
    10. '(
' → logprob: -12.250691413879395

Token 624: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015208975411951542
    2. '
' → logprob: -4.390209197998047
    3. '           ' → logprob: -6.265209197998047
    4. '        
' → logprob: -8.015209197998047
    5. ',' → logprob: -9.265209197998047
    6. 'else' → logprob: -9.515209197998047
    7. 'import' → logprob: -10.015209197998047
    8. 'def' → logprob: -10.015209197998047
    9. '   ' → logprob: -10.140209197998047
    10. '
' → logprob: -10.265209197998047

Token 625: ' passer' (ID: 27727)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004180733114480972
    2. ' return' → logprob: -5.504180908203125
    3. 'break' → logprob: -9.629180908203125
    4. '   ' → logprob: -10.504180908203125
    5. '```' → logprob: -12.629180908203125
    6. 'exit' → logprob: -13.379180908203125
    7. '	return' → logprob: -13.629180908203125
    8. 'ret' → logprob: -13.629180908203125
    9. '
' → logprob: -14.504180908203125
    10. '       ' → logprob: -14.629180908203125

Token 626: ' au' (ID: 2791)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05283375829458237
    2. '   ' → logprob: -3.5528337955474854
    3. '           ' → logprob: -5.177833557128906
    4. ' à' → logprob: -5.552833557128906
    5. '               ' → logprob: -5.802833557128906
    6. '
' → logprob: -5.802833557128906
    7. 'continue' → logprob: -5.802833557128906
    8. 'à' → logprob: -6.177833557128906
    9. '```' → logprob: -7.302833557128906
    10. '        
' → logprob: -7.802833557128906

Token 627: ' dataset' (ID: 20830)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1418481469154358
    2. 'break' → logprob: -2.141848087310791
    3. 'pro' → logprob: -4.891848087310791
    4. 'su' → logprob: -6.516848087310791
    5. ' next' → logprob: -6.516848087310791
    6. '   ' → logprob: -7.266848087310791
    7. 'continue' → logprob: -7.766848087310791
    8. ' suivant' → logprob: -7.766848087310791
    9. ' prochain' → logprob: -7.891848087310791
    10. 'n' → logprob: -8.01684856414795

Token 628: ' suivant' (ID: 68705)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014539661817252636
    2. '
' → logprob: -4.38953971862793
    3. '        
' → logprob: -6.51453971862793
    4. '           ' → logprob: -8.26453971862793
    5. '   ' → logprob: -9.51453971862793
    6. 'else' → logprob: -10.26453971862793
    7. 'def' → logprob: -10.26453971862793
    8. '
' → logprob: -10.63953971862793
    9. 'import' → logprob: -11.01453971862793
    10. '            
' → logprob: -11.38953971862793

Token 629: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00228894897736609
    2. '
' → logprob: -6.127288818359375
    3. '        
' → logprob: -9.877288818359375
    4. '           ' → logprob: -10.127288818359375
    5. '   ' → logprob: -12.002288818359375
    6. 'def' → logprob: -13.752288818359375
    7. 'for' → logprob: -13.752288818359375
    8. '    
' → logprob: -14.002288818359375
    9. '
' → logprob: -14.127288818359375
    10. '```' → logprob: -14.252288818359375

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024643904180265963
    2. '
' → logprob: -9.500246047973633
    3. '           ' → logprob: -9.625246047973633
    4. '        
' → logprob: -9.625246047973633
    5. '   ' → logprob: -10.375246047973633
    6. '    
' → logprob: -13.250246047973633
    7. '```' → logprob: -13.750246047973633
    8. '            
' → logprob: -13.875246047973633
    9. 'for' → logprob: -14.000246047973633
    10. 'indent' → logprob: -14.375246047973633

Token 631: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004394036717712879
    2. '   ' → logprob: -5.629394054412842
    3. 'steps' → logprob: -8.254393577575684
    4. 'step' → logprob: -8.504393577575684
    5. '
' → logprob: -9.129393577575684
    6. 'current' → logprob: -9.879393577575684
    7. 'for' → logprob: -9.879393577575684
    8. '        
' → logprob: -10.879393577575684
    9. 'index' → logprob: -11.004393577575684
    10. '           ' → logprob: -11.129393577575684

Token 632: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6416473984718323
    2. '_m' → logprob: -1.3916473388671875
    3. '_steps' → logprob: -2.1416473388671875
    4. '_p' → logprob: -3.0166473388671875
    5. '_step' → logprob: -4.0166473388671875
    6. '_height' → logprob: -4.2666473388671875
    7. '_depth' → logprob: -5.1416473388671875
    8. '_len' → logprob: -5.2666473388671875
    9. '_diff' → logprob: -5.7666473388671875
    10. '_count' → logprob: -5.8916473388671875

Token 633: 'iss' (ID: 1009)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.14740875363349915
    2. '_' → logprob: -2.3974087238311768
    3. '_i' → logprob: -3.5224087238311768
    4. 'i' → logprob: -4.647408962249756
    5. 'is' → logprob: -5.647408962249756
    6. 'iss' → logprob: -6.647408962249756
    7. 'issing' → logprob: -7.397408962249756
    8. '_steps' → logprob: -8.647408485412598
    9. 'isses' → logprob: -8.772408485412598
    10. ' =' → logprob: -8.772408485412598

Token 634: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.0009433844243176281
    2. 'ile' → logprob: -7.125943183898926
    3. '_m' → logprob: -10.250943183898926
    4. 'ils' → logprob: -10.375943183898926
    5. 'ires' → logprob: -10.375943183898926
    6. 'els' → logprob: -11.375943183898926
    7. 'il' → logprob: -12.250943183898926
    8. 'les' → logprob: -12.375943183898926
    9. 'm' → logprob: -12.500943183898926
    10. '=' → logprob: -13.000943183898926

Token 635: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2839042544364929
    2. '=' → logprob: -1.4089043140411377
    3. '=max' → logprob: -6.408904075622559
    4. '_' → logprob: -8.158904075622559
    5. '_length' → logprob: -8.408904075622559
    6. '_len' → logprob: -8.658904075622559
    7. '_count' → logprob: -8.783904075622559
    8. '_per' → logprob: -9.908904075622559
    9. '=_' → logprob: -10.408904075622559
    10. '_step' → logprob: -10.783904075622559

Token 636: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.018155913800001144
    2. ' max' → logprob: -4.018156051635742
    3. '   ' → logprob: -12.268156051635742
    4. '	max' → logprob: -14.768156051635742
    5. '(max' → logprob: -14.768156051635742
    6. '[max' → logprob: -15.518156051635742
    7. ' ' → logprob: -16.518156051635742
    8. 'maximum' → logprob: -16.643156051635742
    9. 'min' → logprob: -16.768156051635742
    10. '=max' → logprob: -17.143156051635742

Token 637: '(len' (ID: 14990)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.0558149814605713
    2. '(p' → logprob: -1.0558149814605713
    3. '([' → logprob: -1.3058149814605713
    4. '(len' → logprob: -4.430814743041992
    5. 'pot' → logprob: -4.555814743041992
    6. '(total' → logprob: -5.180814743041992
    7. '(' → logprob: -6.430814743041992
    8. '(c' → logprob: -6.430814743041992
    9. '(max' → logprob: -7.305814743041992
    10. '(x' → logprob: -7.805814743041992

Token 638: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.36598336696624756
    2. '(m' → logprob: -1.6159833669662476
    3. '(country' → logprob: -2.240983486175537
    4. 'country' → logprob: -7.490983486175537
    5. 'countries' → logprob: -8.615983009338379
    6. '(' → logprob: -9.115983009338379
    7. 'c' → logprob: -9.240983009338379
    8. '(ms' → logprob: -9.365983009338379
    9. '(p' → logprob: -9.740983009338379
    10. '(lst' → logprob: -9.990983009338379

Token 639: ')' (ID: 8)
  Prédit: 'ountries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ountries' → logprob: -0.28230077028274536
    2. ')' → logprob: -1.5323007106781006
    3. '(c' → logprob: -4.15730094909668
    4. 'ountry' → logprob: -5.90730094909668
    5. 'ount' → logprob: -6.03230094909668
    6. '[' → logprob: -6.15730094909668
    7. 'countries' → logprob: -6.15730094909668
    8. '(' → logprob: -6.78230094909668
    9. '(m' → logprob: -7.40730094909668
    10. '[c' → logprob: -7.78230094909668

Token 640: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0048474459908902645
    2. 'for' → logprob: -6.004847526550293
    3. ' for' → logprob: -6.129847526550293
    4. ' )' → logprob: -9.754847526550293
    5. 's' → logprob: -10.129847526550293
    6. '))' → logprob: -10.504847526550293
    7. '(c' → logprob: -10.754847526550293
    8. ')
' → logprob: -11.754847526550293
    9. ')c' → logprob: -12.004847526550293
    10. '[' → logprob: -12.379847526550293

Token 641: ' c' (ID: 274)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.028001219034194946
    2. ' countries' → logprob: -3.653001308441162
    3. 'c' → logprob: -6.403001308441162
    4. 'country' → logprob: -10.528000831604004
    5. 'ountries' → logprob: -12.153000831604004
    6. ' c' → logprob: -12.903000831604004
    7. '	c' → logprob: -12.903000831604004
    8. 'count' → logprob: -14.653000831604004
    9. '   ' → logprob: -14.653000831604004
    10. ' country' → logprob: -14.778000831604004

Token 642: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4302160441875458
    2. ' in' → logprob: -1.0552160739898682
    3. 'countries' → logprob: -7.180215835571289
    4. 'ountries' → logprob: -7.305215835571289
    5. 'c' → logprob: -9.930215835571289
    6. 's' → logprob: -12.305215835571289
    7. ')' → logprob: -12.430215835571289
    8. '#' → logprob: -12.430215835571289
    9. 'ont' → logprob: -12.805215835571289
    10. ' countries' → logprob: -12.805215835571289

Token 643: ' countries' (ID: 8981)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.00029685118352063
    2. ' countries' → logprob: -8.125296592712402
    3. 'c' → logprob: -14.875296592712402
    4. 'ountries' → logprob: -15.125296592712402
    5. 'companies' → logprob: -16.25029754638672
    6. 'country' → logprob: -17.12529754638672
    7. 'cities' → logprob: -17.62529754638672
    8. ')' → logprob: -17.75029754638672
    9. 'categories' → logprob: -18.25029754638672
    10. '```' → logprob: -18.62529754638672

Token 644: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38810330629348755
    2. ')
' → logprob: -1.1381032466888428
    3. '       ' → logprob: -7.013103485107422
    4. '   ' → logprob: -9.013103485107422
    5. ')
' → logprob: -9.263103485107422
    6. ')

' → logprob: -9.763103485107422
    7. ')+' → logprob: -10.638103485107422
    8. ' )
' → logprob: -11.013103485107422
    9. ' )' → logprob: -11.513103485107422
    10. '
' → logprob: -13.388103485107422

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2706561088562012
    2. '
' → logprob: -1.5206561088562012
    3. '   ' → logprob: -1.5206561088562012
    4. 'for' → logprob: -1.7706561088562012
    5. ' for' → logprob: -3.020656108856201
    6. '    
' → logprob: -3.770656108856201
    7. '        
' → logprob: -3.895656108856201
    8. '```' → logprob: -4.895656108856201
    9. 'step' → logprob: -5.520656108856201
    10. 'steps' → logprob: -6.395656108856201

Token 646: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.056722305715084076
    2. 'step' → logprob: -3.306722402572632
    3. '       ' → logprob: -4.431722164154053
    4. 'steps' → logprob: -5.556722164154053
    5. ' for' → logprob: -7.056722164154053
    6. '   ' → logprob: -7.431722164154053
    7. 'result' → logprob: -7.806722164154053
    8. 'current' → logprob: -8.681722640991211
    9. '
' → logprob: -8.806722640991211
    10. 'destroy' → logprob: -8.806722640991211

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05584538355469704
    2. '=' → logprob: -2.9308454990386963
    3. ':' → logprob: -7.055845260620117
    4. '=True' → logprob: -9.430845260620117
    5. '   ' → logprob: -11.555845260620117
    6. '=False' → logprob: -12.805845260620117
    7. ' ' → logprob: -13.055845260620117
    8. '_' → logprob: -13.305845260620117
    9. '  ' → logprob: -13.555845260620117
    10. ',' → logprob: -14.180845260620117

Token 648: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.001928329467773
    4. '(True' → logprob: -18.126928329467773
    5. '=True' → logprob: -19.876928329467773
    6. 'true' → logprob: -21.876928329467773
    7. 'False' → logprob: -22.626928329467773
    8. ' ' → logprob: -23.751928329467773
    9. 'Tr' → logprob: -24.251928329467773
    10. '       ' → logprob: -24.501928329467773

Token 649: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028468716889619827
    2. '   ' → logprob: -3.903468608856201
    3. 'for' → logprob: -5.653468608856201
    4. '        
' → logprob: -5.778468608856201
    5. '    
' → logprob: -7.278468608856201
    6. '
' → logprob: -7.778468608856201
    7. ' for' → logprob: -8.90346908569336
    8. '```' → logprob: -11.27846908569336
    9. '       
' → logprob: -11.77846908569336
    10. '  
' → logprob: -12.02846908569336

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043065641075372696
    2. '   ' → logprob: -3.4180655479431152
    3. '
' → logprob: -5.293065547943115
    4. '        
' → logprob: -6.043065547943115
    5. '    
' → logprob: -6.293065547943115
    6. 'for' → logprob: -10.043066024780273
    7. ' for' → logprob: -10.043066024780273
    8. '           ' → logprob: -11.668066024780273
    9. '            
' → logprob: -12.293066024780273
    10. '```' → logprob: -12.293066024780273

Token 651: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009120406582951546
    2. '       ' → logprob: -5.134120464324951
    3. 'while' → logprob: -7.009120464324951
    4. 'index' → logprob: -7.134120464324951
    5. 'step' → logprob: -7.134120464324951
    6. 'current' → logprob: -8.134119987487793
    7. 'idx' → logprob: -9.009119987487793
    8. 'pos' → logprob: -9.634119987487793
    9. 'i' → logprob: -10.009119987487793
    10. 'steps' → logprob: -10.884119987487793

Token 652: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.07155756652355194
    2. 'step' → logprob: -2.9465575218200684
    3. '_step' → logprob: -4.821557521820068
    4. ' _' → logprob: -5.571557521820068
    5. ' i' → logprob: -5.821557521820068
    6. '_' → logprob: -6.946557521820068
    7. 'i' → logprob: -7.321557521820068
    8. '	step' → logprob: -10.321557998657227
    9. '_i' → logprob: -11.321557998657227
    10. '   ' → logprob: -11.446557998657227

Token 653: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01822005957365036
    2. 'in' → logprob: -4.018219947814941
    3. '   ' → logprob: -10.643219947814941
    4. ' ' → logprob: -11.768219947814941
    5. '_' → logprob: -11.893219947814941
    6. ',' → logprob: -11.893219947814941
    7. ' i' → logprob: -12.018219947814941
    8. '    ' → logprob: -12.768219947814941
    9. ' _' → logprob: -12.893219947814941
    10. '_in' → logprob: -13.018219947814941

Token 654: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031781906727701426
    2. ' range' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.628178596496582
    4. '	range' → logprob: -15.753178596496582
    5. ' ' → logprob: -16.503177642822266
    6. '(range' → logprob: -17.253177642822266
    7. 'r' → logprob: -17.878177642822266
    8. ')' → logprob: -17.878177642822266
    9. '  ' → logprob: -18.503177642822266
    10. 'rang' → logprob: -18.753177642822266

Token 655: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.011105479672551155
    2. '(' → logprob: -4.511105537414551
    3. ' (' → logprob: -9.88610553741455
    4. 'max' → logprob: -12.63610553741455
    5. '(
' → logprob: -13.63610553741455
    6. '   ' → logprob: -13.88610553741455
    7. ' max' → logprob: -14.26110553741455
    8. '(len' → logprob: -14.88610553741455
    9. '((' → logprob: -15.88610553741455
    10. '(m' → logprob: -16.011104583740234

Token 656: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0001628956088097766
    2. '_' → logprob: -9.375163078308105
    3. '_max' → logprob: -10.375163078308105
    4. '(' → logprob: -10.625163078308105
    5. '(_' → logprob: -11.500163078308105
    6. ')' → logprob: -12.625163078308105
    7. ')_' → logprob: -13.375163078308105
    8. '(m' → logprob: -13.500163078308105
    9. '(max' → logprob: -13.625163078308105
    10. '_)' → logprob: -13.875163078308105

Token 657: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.4835120737552643
    2. 'miss' → logprob: -1.608512043952942
    3. '_m' → logprob: -1.983512043952942
    4. 'ax' → logprob: -3.3585121631622314
    5. 'm' → logprob: -5.733511924743652
    6. '_' → logprob: -6.233511924743652
    7. 'max' → logprob: -6.483511924743652
    8. 'is' → logprob: -7.108511924743652
    9. 'isses' → logprob: -8.608511924743652
    10. '_max' → logprob: -8.858511924743652

Token 658: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.0003812217037193477
    2. 'les' → logprob: -8.250381469726562
    3. 'ires' → logprob: -10.000381469726562
    4. 'p' → logprob: -11.500381469726562
    5. 'ile' → logprob: -11.625381469726562
    6. '_' → logprob: -11.750381469726562
    7. 'ules' → logprob: -11.875381469726562
    8. 'eles' → logprob: -12.500381469726562
    9. 'illes' → logprob: -12.625381469726562
    10. 'e' → logprob: -12.875381469726562

Token 659: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1817987859249115
    2. '):
' → logprob: -1.8067988157272339
    3. '   ' → logprob: -6.306798934936523
    4. ' ):' → logprob: -9.181798934936523
    5. '       ' → logprob: -9.431798934936523
    6. ':' → logprob: -10.931798934936523
    7. '):
' → logprob: -11.181798934936523
    8. ' ):
' → logprob: -11.806798934936523
    9. '           ' → logprob: -13.306798934936523
    10. '+' → logprob: -14.306798934936523

Token 660: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16977760195732117
    2. '           ' → logprob: -1.9197776317596436
    3. '   ' → logprob: -4.6697773933410645
    4. '```' → logprob: -9.294777870178223
    5. '	       ' → logprob: -11.169777870178223
    6. '	   ' → logprob: -11.419777870178223
    7. '        
' → logprob: -12.544777870178223
    8. 'for' → logprob: -12.919777870178223
    9. '    
' → logprob: -13.044777870178223
    10. ' for' → logprob: -13.669777870178223

Token 661: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02897919900715351
    2. '       ' → logprob: -3.7789793014526367
    3. '   ' → logprob: -5.278979301452637
    4. 'for' (adapté à ' for') → logprob: -7.403979301452637
    5. ' for' → logprob: -11.528979301452637
    6. '               ' → logprob: -14.778979301452637
    7. '	   ' → logprob: -15.778979301452637
    8. '	       ' → logprob: -15.778979301452637
    9. '         ' → logprob: -17.15397834777832
    10. '          ' → logprob: -17.40397834777832

Token 662: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2844596207141876
    2. ' i' → logprob: -1.5344595909118652
    3. 'country' → logprob: -4.159459590911865
    4. ' country' → logprob: -4.284459590911865
    5. 'c' → logprob: -6.159459590911865
    6. ' c' → logprob: -7.784459590911865
    7. 'idx' → logprob: -10.159460067749023
    8. ' idx' → logprob: -10.659460067749023
    9. 'countries' → logprob: -12.534460067749023
    10. '	i' → logprob: -12.784460067749023

Token 663: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014428675174713
    2. 'in' → logprob: -1.701442837715149
    3. '	in' → logprob: -11.45144271850586
    4. ',' → logprob: -11.95144271850586
    5. ' ' → logprob: -12.70144271850586
    6. ')' → logprob: -13.20144271850586
    7. '   ' → logprob: -13.82644271850586
    8. ' ,' → logprob: -13.95144271850586
    9. 'import' → logprob: -14.07644271850586
    10. '_in' → logprob: -14.57644271850586

Token 664: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416398212313652
    2. ' range' → logprob: -4.264163970947266
    3. '(range' → logprob: -15.764163970947266
    4. '	range' → logprob: -16.014163970947266
    5. ')' → logprob: -16.389163970947266
    6. 'countries' → logprob: -16.639163970947266
    7. 'ranges' → logprob: -17.264163970947266
    8. 'len' → logprob: -17.514163970947266
    9. 'n' → logprob: -17.764163970947266
    10. '   ' → logprob: -18.389163970947266

Token 665: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08306531608104706
    2. 'n' → logprob: -2.5830652713775635
    3. '(len' → logprob: -5.833065509796143
    4. 'len' → logprob: -6.708065509796143
    5. ' n' → logprob: -11.708065032958984
    6. '(' → logprob: -11.958065032958984
    7. ' (' → logprob: -14.083065032958984
    8. ' len' → logprob: -14.583065032958984
    9. '   ' → logprob: -15.708065032958984
    10. '	n' → logprob: -15.708065032958984

Token 666: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2014937400817871
    2. '):' → logprob: -1.701493740081787
    3. '):
' → logprob: -9.576494216918945
    4. '):

' → logprob: -13.201494216918945
    5. '       ' → logprob: -13.451494216918945
    6. ')' → logprob: -13.576494216918945
    7. '   ' → logprob: -13.576494216918945
    8. ' ):
' → logprob: -13.576494216918945
    9. ' ):' → logprob: -13.576494216918945
    10. ':' → logprob: -14.076494216918945

Token 667: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.056093718856573105
    2. '           ' → logprob: -2.931093692779541
    3. '       ' → logprob: -6.931093692779541
    4. '	       ' → logprob: -10.1810941696167
    5. '	           ' → logprob: -10.1810941696167
    6. ' if' → logprob: -10.4310941696167
    7. '<|end|>' → logprob: -10.4310941696167
    8. '                   ' → logprob: -11.3060941696167
    9. ',' → logprob: -11.4310941696167
    10. '		       ' → logprob: -11.4310941696167

Token 668: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7813081741333008
    2. 'if' (adapté à ' if') → logprob: -1.2813081741333008
    3. '               ' → logprob: -1.9063081741333008
    4. ' if' → logprob: -2.156308174133301
    5. '	       ' → logprob: -10.0313081741333
    6. '	           ' → logprob: -10.1563081741333
    7. '       ' → logprob: -10.7813081741333
    8. '	if' → logprob: -12.0313081741333
    9. '		' → logprob: -12.1563081741333
    10. '		       ' → logprob: -12.2813081741333

Token 669: ' len' (ID: 4631)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -1.0906692743301392
    2. 'step' → logprob: -1.2156692743301392
    3. ' len' → logprob: -1.5906692743301392
    4. 'len' → logprob: -1.8406692743301392
    5. 'countries' → logprob: -5.59066915512085
    6. ' countries' → logprob: -6.84066915512085
    7. '	step' → logprob: -10.215669631958008
    8. 'steps' → logprob: -10.215669631958008
    9. '   ' → logprob: -11.090669631958008
    10. ' ' → logprob: -11.090669631958008

Token 670: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00011272187111899257
    2. '(' → logprob: -9.125112533569336
    3. 'countries' → logprob: -12.875112533569336
    4. ' (' → logprob: -14.375112533569336
    5. '(country' → logprob: -15.375112533569336
    6. '(
' → logprob: -15.875112533569336
    7. '(m' → logprob: -16.500112533569336
    8. ' countries' → logprob: -17.625112533569336
    9. '(categories' → logprob: -17.750112533569336
    10. '(count' → logprob: -17.875112533569336

Token 671: 'ountries' (ID: 42578)
  Prédit: 'ountries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ountries' → logprob: -0.0009398083784617484
    2. 'countries' → logprob: -7.125939846038818
    3. '[c' → logprob: -9.62593936920166
    4. 'ount' → logprob: -10.12593936920166
    5. '[' → logprob: -11.00093936920166
    6. '[i' → logprob: -12.50093936920166
    7. '(c' → logprob: -12.62593936920166
    8. 'oun' → logprob: -13.50093936920166
    9. 'ountry' → logprob: -14.12593936920166
    10. 'un' → logprob: -14.37593936920166

Token 672: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9623810658231378e-05
    2. '[' → logprob: -12.000020027160645
    3. ')' → logprob: -12.125020027160645
    4. ' [' → logprob: -12.750020027160645
    5. 'i' → logprob: -13.250020027160645
    6. ')[' → logprob: -14.125020027160645
    7. '[c' → logprob: -14.750020027160645
    8. '[
' → logprob: -14.750020027160645
    9. '[j' → logprob: -14.875020027160645
    10. '][' → logprob: -15.375020027160645

Token 673: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014810653403401375
    2. '])' → logprob: -4.264810562133789
    3. '][' → logprob: -7.889810562133789
    4. '[' → logprob: -8.639810562133789
    5. ')' → logprob: -9.889810562133789
    6. '           ' → logprob: -12.139810562133789
    7. ')>' → logprob: -12.139810562133789
    8. '[c' → logprob: -12.389810562133789
    9. '               ' → logprob: -12.389810562133789
    10. '   ' → logprob: -12.889810562133789

Token 674: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.055041491985321045
    2. ' >' → logprob: -2.930041551589966
    3. ')>' → logprob: -9.055041313171387
    4. '()>' → logprob: -10.555041313171387
    5. ')' → logprob: -11.555041313171387
    6. ':' → logprob: -13.055041313171387
    7. '   ' → logprob: -13.930041313171387
    8. '>:' → logprob: -14.680041313171387
    9. ']>' → logprob: -14.930041313171387
    10. '{' → logprob: -15.055041313171387

Token 675: ' ' (ID: 220)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.4451224207878113
    2. '0' → logprob: -1.070122480392456
    3. ' step' → logprob: -4.320122241973877
    4. ' ' → logprob: -5.820122241973877
    5. '>' → logprob: -12.070122718811035
    6. '	step' → logprob: -12.445122718811035
    7. '(step' → logprob: -12.820122718811035
    8. '   ' → logprob: -12.820122718811035
    9. '  ' → logprob: -13.632622718811035
    10. '```' → logprob: -14.382622718811035

Token 676: '0' (ID: 15)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.11321134865283966
    2. '0' → logprob: -2.2382113933563232
    3. ' step' → logprob: -8.113211631774902
    4. ' ' → logprob: -9.363211631774902
    5. '   ' → logprob: -14.238211631774902
    6. '	step' → logprob: -14.363211631774902
    7. '(step' → logprob: -14.613211631774902
    8. '```' → logprob: -15.238211631774902
    9. 'Step' → logprob: -15.363211631774902
    10. '  ' → logprob: -15.613211631774902

Token 677: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6464333534240723
    2. '                   ' → logprob: -1.2714333534240723
    3. ':' → logprob: -2.1464333534240723
    4. ' and' → logprob: -2.6464333534240723
    5. '):
' → logprob: -5.646433353424072
    6. 'and' → logprob: -6.396433353424072
    7. '               ' → logprob: -6.771433353424072
    8. '                       ' → logprob: -7.521433353424072
    9. ',' → logprob: -9.146432876586914
    10. ':
' → logprob: -9.396432876586914

Token 678: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00028040475444868207
    2. '               ' → logprob: -9.500280380249023
    3. '                       ' → logprob: -10.375280380249023
    4. ' missile' → logprob: -10.625280380249023
    5. ' potential' → logprob: -10.875280380249023
    6. '           ' → logprob: -10.875280380249023
    7. ' missiles' → logprob: -11.000280380249023
    8. 'm' → logprob: -11.125280380249023
    9. ',' → logprob: -11.250280380249023
    10. '   ' → logprob: -11.625280380249023

Token 679: ' missile' (ID: 73870)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.22773712873458862
    2. 'potential' → logprob: -2.2277371883392334
    3. 'miss' → logprob: -2.7277371883392334
    4. 'removed' → logprob: -4.602736949920654
    5. '                   ' → logprob: -5.477736949920654
    6. 'p' → logprob: -6.352736949920654
    7. 'pop' → logprob: -6.352736949920654
    8. ' missile' → logprob: -6.602736949920654
    9. 'm' → logprob: -6.602736949920654
    10. ' potential' → logprob: -6.602736949920654

Token 680: '_to' (ID: 5089)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40868210792541504
    2. '=' → logprob: -2.283682107925415
    3. '_capacity' → logprob: -2.408682107925415
    4. '_cap' → logprob: -2.658682107925415
    5. '_value' → logprob: -3.408682107925415
    6. '_power' → logprob: -3.908682107925415
    7. '_damage' → logprob: -5.158681869506836
    8. '_val' → logprob: -5.783681869506836
    9. '_p' → logprob: -6.033681869506836
    10. '_strength' → logprob: -6.283681869506836

Token 681: '_destroy' (ID: 45749)
  Prédit: 'destroy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destroy' → logprob: -0.4717276990413666
    2. 'pop' → logprob: -1.096727728843689
    3. 'remove' → logprob: -3.2217276096343994
    4. 'del' → logprob: -7.2217278480529785
    5. '_destroy' → logprob: -7.4717278480529785
    6. '=' → logprob: -7.7217278480529785
    7. '_pop' → logprob: -9.34672737121582
    8. '_remove' → logprob: -9.59672737121582
    9. ' destroy' → logprob: -9.97172737121582
    10. 'des' → logprob: -10.22172737121582

Token 682: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132619559764862
    2. '=' → logprob: -1.3132619857788086
    3. '	' → logprob: -16.563261032104492
    4. ' ' → logprob: -16.688261032104492
    5. '＝' → logprob: -17.063261032104492
    6. '=c' → logprob: -17.313261032104492
    7. '   ' → logprob: -17.688261032104492
    8. ')=' → logprob: -17.813261032104492
    9. ']=' → logprob: -18.063261032104492
    10. '=cut' → logprob: -18.313261032104492

Token 683: ' countries' (ID: 8981)
  Prédit: 'countries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'countries' → logprob: -0.029751529917120934
    2. ' countries' → logprob: -3.5297515392303467
    3. 'categories' → logprob: -14.279751777648926
    4. 'country' → logprob: -15.529751777648926
    5. 'c' → logprob: -16.15475082397461
    6. 'ountries' → logprob: -16.90475082397461
    7. 'cities' → logprob: -17.15475082397461
    8. 'Countries' → logprob: -17.90475082397461
    9. '	c' → logprob: -17.90475082397461
    10. 'companies' → logprob: -18.40475082397461

Token 684: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.125000953674316
    3. '[' → logprob: -15.625000953674316
    4. 'i' → logprob: -16.0
    5. ' [' → logprob: -17.5
    6. '[
' → logprob: -17.625
    7. '][' → logprob: -17.75
    8. '\[' → logprob: -17.875
    9. '
' → logprob: -18.625
    10. '   ' → logprob: -18.75

Token 685: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04867320507764816
    2. '][' → logprob: -3.048673152923584
    3. 'i' → logprob: -9.548673629760742
    4. '[' → logprob: -11.798673629760742
    5. ']' → logprob: -12.173673629760742
    6. '].' → logprob: -14.923673629760742
    7. ')[' → logprob: -15.048673629760742
    8. ' ][' → logprob: -15.423673629760742
    9. '(i' → logprob: -15.673673629760742
    10. '   ' → logprob: -15.798673629760742

Token 686: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: 0.0
    2. '.pop' → logprob: -16.75
    3. '0' → logprob: -18.25
    4. ' pop' → logprob: -21.125
    5. '(pop' → logprob: -22.0
    6. '_pop' → logprob: -23.125
    7. '	pop' → logprob: -23.375
    8. '```' → logprob: -23.5
    9. 'Pop' → logprob: -24.0
    10. 'POP' → logprob: -25.25

Token 687: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1994775377388578e-05
    2. '()' → logprob: -11.375012397766113
    3. '0' → logprob: -14.625012397766113
    4. ' (' → logprob: -18.375011444091797
    5. '(
' → logprob: -19.250011444091797
    6. '()
' → logprob: -19.875011444091797
    7. '(-' → logprob: -20.125011444091797
    8. '()(' → logprob: -22.500011444091797
    9. '[' → logprob: -22.625011444091797
    10. '().' → logprob: -22.750011444091797

Token 688: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -15.75
    3. ' ' → logprob: -19.75
    4. ')
' → logprob: -21.125
    5. '[' → logprob: -21.625
    6. '(' → logprob: -21.75
    7. '
' → logprob: -21.75
    8. '```' → logprob: -21.75
    9. '-' → logprob: -22.875
    10. '   ' → logprob: -23.125

Token 689: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3134496510028839
    2. ')
' → logprob: -1.3134496212005615
    3. '                   ' → logprob: -8.68844985961914
    4. ')
' → logprob: -11.56344985961914
    5. '               ' → logprob: -12.31344985961914
    6. ')`
' → logprob: -13.56344985961914
    7. ')

' → logprob: -14.06344985961914
    8. ']' → logprob: -14.18844985961914
    9. ' )
' → logprob: -14.31344985961914
    10. ' )' → logprob: -14.81344985961914

Token 690: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003589736996218562
    2. '
' → logprob: -5.753589630126953
    3. '           ' → logprob: -8.128589630126953
    4. '               ' → logprob: -9.253589630126953
    5. '                    
' → logprob: -11.753589630126953
    6. '       ' → logprob: -12.128589630126953
    7. '   ' → logprob: -12.753589630126953
    8. ',' → logprob: -14.128589630126953
    9. '				' → logprob: -14.128589630126953
    10. '                       ' → logprob: -14.378589630126953

Token 691: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04248006269335747
    2. '
' → logprob: -3.792479991912842
    3. '           ' → logprob: -4.542479991912842
    4. 'pot' → logprob: -5.292479991912842
    5. '               ' → logprob: -6.042479991912842
    6. '                    
' → logprob: -8.04248046875
    7. ' potentials' → logprob: -8.41748046875
    8. '       ' → logprob: -8.41748046875
    9. 'potential' → logprob: -9.79248046875
    10. '            
' → logprob: -9.91748046875

Token 692: ' plus' (ID: 2932)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pot' → logprob: -0.005391107406467199
    2. ' potentials' → logprob: -5.2553911209106445
    3. 'potential' → logprob: -9.630391120910645
    4. '                   ' → logprob: -10.255391120910645
    5. '           ' → logprob: -10.880391120910645
    6. '               ' → logprob: -11.755391120910645
    7. '                       ' → logprob: -11.880391120910645
    8. ' pot' → logprob: -12.005391120910645
    9. '
' → logprob: -12.380391120910645
    10. 'pots' → logprob: -12.380391120910645

Token 693: ' ancien' (ID: 81732)
  Prédit: 'ancien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancien' → logprob: -0.5313891768455505
    2. ' ancien' → logprob: -0.9063891768455505
    3. '_' → logprob: -5.281389236450195
    4. ' récent' → logprob: -6.406389236450195
    5. ' ancienne' → logprob: -7.406389236450195
    6. 'ancienne' → logprob: -8.031389236450195
    7. 'anc' → logprob: -8.281389236450195
    8. ' vieux' → logprob: -9.031389236450195
    9. ' anciens' → logprob: -10.406389236450195
    10. ' ' → logprob: -10.406389236450195

Token 694: ' missile' (ID: 73870)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009016919881105423
    2. '           ' → logprob: -5.134016990661621
    3. '               ' → logprob: -6.384016990661621
    4. '
' → logprob: -6.634016990661621
    5. '<|end|>' → logprob: -11.384016990661621
    6. ')' → logprob: -11.509016990661621
    7. '                    
' → logprob: -11.759016990661621
    8. '       ' → logprob: -12.009016990661621
    9. ',' → logprob: -12.259016990661621
    10. '		           ' → logprob: -12.259016990661621

Token 695: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004475924652069807
    2. '
' → logprob: -8.875447273254395
    3. '               ' → logprob: -8.875447273254395
    4. '           ' → logprob: -9.125447273254395
    5. '                    
' → logprob: -10.875447273254395
    6. '       ' → logprob: -11.000447273254395
    7. '   ' → logprob: -12.125447273254395
    8. '<|end|>' → logprob: -12.500447273254395
    9. '                  ' → logprob: -12.750447273254395
    10. ',' → logprob: -13.250447273254395

Token 696: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07293980568647385
    2. '           ' → logprob: -2.697939872741699
    3. '               ' → logprob: -5.947939872741699
    4. '       ' → logprob: -9.0729398727417
    5. 'pot' → logprob: -9.1979398727417
    6. '   ' → logprob: -9.5729398727417
    7. '
' → logprob: -9.8229398727417
    8. ' potentials' → logprob: -11.3229398727417
    9. '                    
' → logprob: -11.5729398727417
    10. '```' → logprob: -11.9479398727417

Token 697: ' potentials' (ID: 150885)
  Prédit: 'pot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pot' → logprob: -2.081584716506768e-05
    2. '           ' → logprob: -11.875020980834961
    3. '                   ' → logprob: -12.000020980834961
    4. ' potentials' → logprob: -12.375020980834961
    5. 'potential' → logprob: -13.125020980834961
    6. '               ' → logprob: -14.250020980834961
    7. '                       ' → logprob: -15.500020980834961
    8. '       ' → logprob: -15.750020980834961
    9. 'pots' → logprob: -15.875020980834961
    10. '                           ' → logprob: -16.00002098083496

Token 698: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. ' [' → logprob: -16.750001907348633
    4. '[I' → logprob: -16.875001907348633
    5. '```' → logprob: -17.375001907348633
    6. '[
' → logprob: -18.500001907348633
    7. '\[' → logprob: -19.875001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '
' → logprob: -20.375001907348633
    10. '[j' → logprob: -20.500001907348633

Token 699: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.578994631767273
    2. '-=' → logprob: -0.828994631767273
    3. '-' → logprob: -5.8289947509765625
    4. '=' → logprob: -10.203994750976562
    5. ')' → logprob: -10.953994750976562
    6. ' -' → logprob: -11.328994750976562
    7. ']-' → logprob: -11.328994750976562
    8. ']' → logprob: -11.453994750976562
    9. '+=' → logprob: -11.703994750976562
    10. '   ' → logprob: -12.828994750976562

Token 700: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.024396030232310295
    2. ' -=' → logprob: -3.7743959426879883
    3. '-' → logprob: -6.774395942687988
    4. '=' → logprob: -12.274395942687988
    5. '+=' → logprob: -13.649395942687988
    6. '   ' → logprob: -13.899395942687988
    7. ' -' → logprob: -15.774395942687988
    8. '[' → logprob: -16.024396896362305
    9. '>' → logprob: -16.649396896362305
    10. '[-' → logprob: -17.024396896362305

Token 701: ' missile' (ID: 73870)
  Prédit: 'miss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'miss' → logprob: -0.005240275990217924
    2. ' missile' → logprob: -5.255240440368652
    3. 'mis' → logprob: -12.005240440368652
    4. 'mil' → logprob: -15.505240440368652
    5. 'mi' → logprob: -17.755239486694336
    6. 'm' → logprob: -17.755239486694336
    7. 'mist' → logprob: -17.880239486694336
    8. ' miss' → logprob: -18.130239486694336
    9. 'mill' → logprob: -18.630239486694336
    10. 'mission' → logprob: -19.255239486694336

Token 702: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -16.875
    3. '\' → logprob: -18.75
    4. '_' → logprob: -18.75
    5. 'To' → logprob: -19.125
    6. '_TO' → logprob: -19.125
    7. 's' → logprob: -19.625
    8. '__' → logprob: -20.125
    9. '[' → logprob: -20.625
    10. '_t' → logprob: -20.625

Token 703: '_destroy' (ID: 45749)
  Prédit: 'destroy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destroy' → logprob: -0.026374151930212975
    2. '_destroy' → logprob: -3.901374101638794
    3. 'estroy' → logprob: -5.151374340057373
    4. 'st' → logprob: -11.276373863220215
    5. 'Destroy' → logprob: -12.526373863220215
    6. ' destroy' → logprob: -13.026373863220215
    7. '.destroy' → logprob: -13.526373863220215
    8. 'dest' → logprob: -14.276373863220215
    9. 'storm' → logprob: -14.651373863220215
    10. '
' → logprob: -15.526373863220215

Token 704: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38767826557159424
    2. '           ' → logprob: -1.1376782655715942
    3. '            
' → logprob: -7.887678146362305
    4. '
' → logprob: -9.012678146362305
    5. '       ' → logprob: -9.137678146362305
    6. '        
' → logprob: -9.387678146362305
    7. '    
' → logprob: -9.387678146362305
    8. '  
' → logprob: -11.137678146362305
    9. '   ' → logprob: -12.512678146362305
    10. '   
' → logprob: -12.637678146362305

Token 705: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.128733292222023
    2. '
' → logprob: -2.1287333965301514
    3. '       ' → logprob: -6.878733158111572
    4. '            
' → logprob: -8.00373363494873
    5. '        
' → logprob: -8.62873363494873
    6. '    
' → logprob: -8.75373363494873
    7. '
' → logprob: -9.87873363494873
    8. '   ' → logprob: -10.62873363494873
    9. '  
' → logprob: -11.50373363494873
    10. '```' → logprob: -11.87873363494873

Token 706: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12983223795890808
    2. '       ' → logprob: -2.8798322677612305
    3. 'max' → logprob: -3.2548322677612305
    4. '   ' → logprob: -3.6298322677612305
    5. 'current' → logprob: -8.50483226776123
    6. 'diff' → logprob: -8.87983226776123
    7. '            
' → logprob: -10.62983226776123
    8. '
' → logprob: -10.75483226776123
    9. ' max' → logprob: -10.75483226776123
    10. '    
' → logprob: -10.87983226776123

Token 707: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0003361774142831564
    2. '(max' → logprob: -8.250336647033691
    3. ' max' → logprob: -9.500336647033691
    4. '(' → logprob: -17.375335693359375
    5. 'pot' → logprob: -19.125335693359375
    6. '	max' → logprob: -19.375335693359375
    7. '=max' → logprob: -19.500335693359375
    8. ' (' → logprob: -19.875335693359375
    9. '[max' → logprob: -20.250335693359375
    10. '   ' → logprob: -20.250335693359375

Token 708: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.347765181795694e-05
    2. '(' → logprob: -9.875053405761719
    3. ' (' → logprob: -13.500053405761719
    4. 'pot' → logprob: -15.250053405761719
    5. '(
' → logprob: -16.00005340576172
    6. '```' → logprob: -17.12505340576172
    7. '()' → logprob: -17.25005340576172
    8. '_p' → logprob: -17.37505340576172
    9. '   ' → logprob: -17.50005340576172
    10. ' ' → logprob: -17.62505340576172

Token 709: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.00031174797913990915
    2. 'pot' → logprob: -8.250311851501465
    3. 'otential' → logprob: -10.000311851501465
    4. ' potentials' → logprob: -12.750311851501465
    5. '(' → logprob: -13.500311851501465
    6. '[' → logprob: -15.250311851501465
    7. ')' → logprob: -15.875311851501465
    8. 'oten' → logprob: -16.00031089782715
    9. 'entials' → logprob: -16.50031089782715
    10. '(p' → logprob: -16.62531089782715

Token 710: 'entials' (ID: 13494)
  Prédit: 'entials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entials' → logprob: -0.0007139815716072917
    2. 'ials' → logprob: -7.62571382522583
    3. 'als' → logprob: -8.875714302062988
    4. ' potentials' → logprob: -10.000714302062988
    5. 'ot' → logprob: -10.500714302062988
    6. 'ent' → logprob: -12.125714302062988
    7. 'pot' → logprob: -12.500714302062988
    8. '[' → logprob: -14.250714302062988
    9. 's' → logprob: -14.375714302062988
    10. 'ential' → logprob: -14.500714302062988

Token 711: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4312345087528229
    2. ' -' → logprob: -1.0562344789505005
    3. '-' → logprob: -6.431234359741211
    4. ')-' → logprob: -7.431234359741211
    5. ' )' → logprob: -8.181234359741211
    6. '()' → logprob: -10.681234359741211
    7. '-)' → logprob: -12.056234359741211
    8. '[' → logprob: -12.681234359741211
    9. '   ' → logprob: -12.681234359741211
    10. ')>' → logprob: -12.931234359741211

Token 712: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132629990577698
    2. '-' → logprob: -1.313262939453125
    3. '   ' → logprob: -14.688262939453125
    4. '>' → logprob: -15.563262939453125
    5. ' ' → logprob: -15.688262939453125
    6. ' ' → logprob: -15.813262939453125
    7. '```' → logprob: -15.938262939453125
    8. ')' → logprob: -16.313262939453125
    9. '—' → logprob: -17.688262939453125
    10. '–' → logprob: -17.688262939453125

Token 713: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.493430894101039e-05
    2. ' min' → logprob: -9.500075340270996
    3. 'max' → logprob: -16.75007438659668
    4. 'minimum' → logprob: -20.00007438659668
    5. '(min' → logprob: -20.50007438659668
    6. '	min' → logprob: -20.50007438659668
    7. 'mini' → logprob: -22.25007438659668
    8. '_min' → logprob: -22.62507438659668
    9. '=min' → logprob: -23.00007438659668
    10. '[min' → logprob: -23.25007438659668

Token 714: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.000146687583765015
    2. ' (' → logprob: -9.125146865844727
    3. '(' → logprob: -10.250146865844727
    4. 'pot' → logprob: -13.625146865844727
    5. ')' → logprob: -15.000146865844727
    6. '```' → logprob: -15.250146865844727
    7. '_' → logprob: -16.375146865844727
    8. 'space' → logprob: -16.375146865844727
    9. '[' → logprob: -16.500146865844727
    10. '(space' → logprob: -17.125146865844727

Token 715: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.578959584236145
    2. 'pot' → logprob: -0.828959584236145
    3. 'otential' → logprob: -6.5789594650268555
    4. '(p' → logprob: -6.5789594650268555
    5. ' potentials' → logprob: -8.828959465026855
    6. 'potential' → logprob: -10.578959465026855
    7. 'p' → logprob: -11.203959465026855
    8. '```' → logprob: -11.953959465026855
    9. '   ' → logprob: -12.203959465026855
    10. '[' → logprob: -12.328959465026855

Token 716: 'entials' (ID: 13494)
  Prédit: 'entials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entials' → logprob: -0.14379534125328064
    2. 'ot' → logprob: -2.0187952518463135
    3. 'ent' → logprob: -7.143795490264893
    4. ' potentials' → logprob: -9.643795013427734
    5. 'otential' → logprob: -9.768795013427734
    6. '[' → logprob: -9.893795013427734
    7. 'pot' → logprob: -10.143795013427734
    8. 'ential' → logprob: -10.143795013427734
    9. '(' → logprob: -10.393795013427734
    10. '#' → logprob: -11.268795013427734

Token 717: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.19585539400577545
    2. ' >' → logprob: -1.8208553791046143
    3. ')' → logprob: -4.195855617523193
    4. ')>' → logprob: -7.195855617523193
    5. '<=' → logprob: -9.695855140686035
    6. ' <=' → logprob: -9.945855140686035
    7. ']' → logprob: -10.820855140686035
    8. '">' → logprob: -11.195855140686035
    9. ']>' → logprob: -11.320855140686035
    10. '[' → logprob: -12.195855140686035

Token 718: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2520406246185303
    2. '>' → logprob: -1.5020406246185303
    3. ' <=' → logprob: -9.25204086303711
    4. '<=' → logprob: -11.25204086303711
    5. '>d' → logprob: -14.50204086303711
    6. ')' → logprob: -14.62704086303711
    7. '()>' → logprob: -14.87704086303711
    8. '   ' → logprob: -15.25204086303711
    9. ')>' → logprob: -15.50204086303711
    10. ' ' → logprob: -15.75204086303711

Token 719: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03804194927215576
    2. 'd' → logprob: -3.2880420684814453
    3. '	d' → logprob: -15.288042068481445
    4. ' ' → logprob: -15.413042068481445
    5. 'int' → logprob: -18.538042068481445
    6. ' ' → logprob: -19.038042068481445
    7. ')d' → logprob: -19.038042068481445
    8. '>d' → logprob: -19.288042068481445
    9. '(d' → logprob: -19.538042068481445
    10. '_d' → logprob: -19.538042068481445

Token 720: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048747468739748
    2. ':
' → logprob: -3.0487475395202637
    3. '           ' → logprob: -9.173747062683105
    4. '               ' → logprob: -10.798747062683105
    5. ':
' → logprob: -11.048747062683105
    6. '       ' → logprob: -11.798747062683105
    7. '):
' → logprob: -12.173747062683105
    8. '):' → logprob: -13.298747062683105
    9. ':

' → logprob: -13.923747062683105
    10. '():
' → logprob: -14.173747062683105

Token 721: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002619297243654728
    2. '           ' → logprob: -6.12761926651001
    3. 'print' → logprob: -7.87761926651001
    4. '
' → logprob: -10.752619743347168
    5. '                   ' → logprob: -11.252619743347168
    6. ' print' → logprob: -11.502619743347168
    7. '```' → logprob: -12.252619743347168
    8. '       ' → logprob: -12.502619743347168
    9. '                       ' → logprob: -14.877619743347168
    10. '   ' → logprob: -15.252619743347168

Token 722: ' possible' (ID: 4149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008733349852263927
    2. '           ' → logprob: -5.50873327255249
    3. '               ' → logprob: -5.75873327255249
    4. ' print' → logprob: -7.13373327255249
    5. 'possible' (adapté à ' possible') → logprob: -7.88373327255249
    6. '                   ' → logprob: -8.758733749389648
    7. '   ' → logprob: -9.133733749389648
    8. '       ' → logprob: -10.258733749389648
    9. '```' → logprob: -12.258733749389648
    10. ' possible' → logprob: -12.258733749389648

Token 723: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06213405355811119
    2. ' =' → logprob: -2.812134027481079
    3. '=False' → logprob: -8.8121337890625
    4. '=True' → logprob: -12.0621337890625
    5. '==' → logprob: -12.4371337890625
    6. ':' → logprob: -12.8121337890625
    7. '           ' → logprob: -13.3121337890625
    8. '   ' → logprob: -13.9371337890625
    9. '       ' → logprob: -14.5621337890625
    10. '               ' → logprob: -14.9371337890625

Token 724: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.088346359931165e-07
    2. ' False' → logprob: -14.000000953674316
    3. '(False' → logprob: -18.625
    4. 'false' → logprob: -19.875
    5. '=False' → logprob: -20.375
    6. '   ' → logprob: -22.875
    7. 'True' → logprob: -23.0
    8. '_false' → logprob: -23.25
    9. 'F' → logprob: -23.75
    10. '.False' → logprob: -24.0

Token 725: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011605957115534693
    2. '           ' → logprob: -9.625116348266602
    3. '
' → logprob: -10.875116348266602
    4. '                   ' → logprob: -11.250116348266602
    5. '       ' → logprob: -12.000116348266602
    6. '                
' → logprob: -12.000116348266602
    7. '            
' → logprob: -13.875116348266602
    8. '              ' → logprob: -14.000116348266602
    9. '<|end|>' → logprob: -14.125116348266602
    10. '		       ' → logprob: -14.625116348266602

Token 726: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.901345038088039e-05
    2. '           ' → logprob: -9.625099182128906
    3. '       ' → logprob: -10.750099182128906
    4. '```' → logprob: -12.375099182128906
    5. '                
' → logprob: -12.750099182128906
    6. '                   ' → logprob: -13.625099182128906
    7. '<|end|>' → logprob: -13.625099182128906
    8. '   ' → logprob: -15.125099182128906
    9. '			' → logprob: -15.250099182128906
    10. '            
' → logprob: -15.375099182128906

Token 727: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2696002423763275
    2. '               ' → logprob: -2.0196001529693604
    3. 'print' → logprob: -2.2696001529693604
    4. '           ' → logprob: -9.144599914550781
    5. ' break' → logprob: -9.144599914550781
    6. '                   ' → logprob: -10.519599914550781
    7. '```' → logprob: -12.394599914550781
    8. ' print' → logprob: -12.644599914550781
    9. '
' → logprob: -12.769599914550781
    10. '       ' → logprob: -13.894599914550781

Token 728: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06530255079269409
    2. '       ' → logprob: -2.815302610397339
    3. '
' → logprob: -6.69030237197876
    4. '    
' → logprob: -6.81530237197876
    5. 'if' → logprob: -7.94030237197876
    6. '        
' → logprob: -8.065302848815918
    7. 'print' → logprob: -8.440302848815918
    8. '```' → logprob: -9.440302848815918
    9. '           ' → logprob: -11.815302848815918
    10. '            
' → logprob: -12.315302848815918

Token 729: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021601058542728424
    2. '       ' → logprob: -4.02160120010376
    3. '
' → logprob: -6.39660120010376
    4. '    
' → logprob: -7.14660120010376
    5. 'print' → logprob: -8.146600723266602
    6. 'if' → logprob: -8.271600723266602
    7. '        
' → logprob: -8.271600723266602
    8. '```' → logprob: -8.646600723266602
    9. ' if' → logprob: -12.396600723266602
    10. '  
' → logprob: -12.521600723266602

Token 730: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5624517798423767
    2. 'if' → logprob: -1.0624518394470215
    3. '       ' → logprob: -2.5624518394470215
    4. 'print' (adapté à ' print') → logprob: -5.0624518394470215
    5. ' if' → logprob: -6.9374518394470215
    6. '```' → logprob: -8.812451362609863
    7. '        
' → logprob: -11.812451362609863
    8. '    
' → logprob: -12.562451362609863
    9. '
' → logprob: -13.312451362609863
    10. ' print' → logprob: -13.437451362609863

Token 731: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.171581091824919e-05
    2. '(' → logprob: -9.75007152557373
    3. '('' → logprob: -11.25007152557373
    4. '(("' → logprob: -15.50007152557373
    5. '(""' → logprob: -16.125072479248047
    6. ' ("' → logprob: -16.750072479248047
    7. '(
' → logprob: -17.250072479248047
    8. '"' → logprob: -18.125072479248047
    9. '()' → logprob: -19.875072479248047
    10. '("")' → logprob: -21.625072479248047

Token 732: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.00013846253568772227
    2. 'No' → logprob: -9.125138282775879
    3. '"' → logprob: -10.625138282775879
    4. 'YES' → logprob: -12.375138282775879
    5. 'Oui' → logprob: -14.125138282775879
    6. '"No' → logprob: -16.000139236450195
    7. '“Yes' → logprob: -16.500139236450195
    8. ' Yes' → logprob: -16.625139236450195
    9. 'Possible' → logprob: -17.750139236450195
    10. 'yes' → logprob: -19.750139236450195

Token 733: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.935296834039036e-06
    2. '")' → logprob: -12.75000286102295
    3. '")
' → logprob: -18.875003814697266
    4. '```' → logprob: -19.875003814697266
    5. ''' → logprob: -20.375003814697266
    6. 'if' → logprob: -21.125003814697266
    7. '"""' → logprob: -21.250003814697266
    8. '()"' → logprob: -21.250003814697266
    9. '""' → logprob: -21.750003814697266
    10. ')"' → logprob: -21.750003814697266

Token 734: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10777731984853745
    2. ')' → logprob: -2.8577773571014404
    3. 'if' → logprob: -3.1077773571014404
    4. '"' → logprob: -9.60777759552002
    5. '   ' → logprob: -12.60777759552002
    6. '")' → logprob: -12.98277759552002
    7. '()' → logprob: -13.35777759552002
    8. ' ' → logprob: -14.48277759552002
    9. '	if' → logprob: -14.85777759552002
    10. ')
' → logprob: -15.23277759552002

Token 735: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.16022412478923798
    2. ' possible' → logprob: -1.9102240800857544
    3. '_possible' → logprob: -18.41022491455078
    4. ' posible' → logprob: -19.03522491455078
    5. 'Possible' → logprob: -19.53522491455078
    6. 'poss' → logprob: -19.66022491455078
    7. ' possibile' → logprob: -20.28522491455078
    8. ' possível' → logprob: -20.41022491455078
    9. ' ' → logprob: -21.91022491455078
    10. ' ' → logprob: -22.16022491455078

Token 736: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3486948311328888
    2. 'else' → logprob: -1.2236948013305664
    3. ')' → logprob: -8.473694801330566
    4. '```' → logprob: -11.098694801330566
    5. '       ' → logprob: -12.098694801330566
    6. ' )' → logprob: -12.223694801330566
    7. '        ' → logprob: -12.348694801330566
    8. ' ' → logprob: -12.723694801330566
    9. '	else' → logprob: -12.973694801330566
    10. '   ' → logprob: -13.598694801330566

Token 737: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12704065442085266
    2. '"No' → logprob: -2.1270406246185303
    3. ' "' → logprob: -9.12704086303711
    4. ''' → logprob: -13.25204086303711
    5. '("' → logprob: -14.12704086303711
    6. 'No' → logprob: -14.37704086303711
    7. ')' → logprob: -14.50204086303711
    8. '   ' → logprob: -16.62704086303711
    9. ' ' → logprob: -17.00204086303711
    10. ' No' → logprob: -17.87704086303711

Token 738: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.5048530030981055e-06
    2. ' No' → logprob: -13.750001907348633
    3. '"No' → logprob: -14.750001907348633
    4. 'NO' → logprob: -21.375001907348633
    5. '"' → logprob: -21.500001907348633
    6. '_No' → logprob: -22.000001907348633
    7. 'Yes' → logprob: -22.875001907348633
    8. '.No' → logprob: -23.750001907348633
    9. '```' → logprob: -24.875001907348633
    10. '_no' → logprob: -25.000001907348633

Token 739: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16469113528728485
    2. '")' → logprob: -1.9146910905838013
    3. ')")' → logprob: -5.414690971374512
    4. ')"' → logprob: -12.914690971374512
    5. '}")' → logprob: -14.039690971374512
    6. ' )' → logprob: -14.164690971374512
    7. ')
' → logprob: -14.164690971374512
    8. '')' → logprob: -15.039690971374512
    9. ')")
' → logprob: -15.164690971374512
    10. '`)' → logprob: -15.289690971374512

Token 740: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 741: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04366583377122879
    2. '__' → logprob: -3.168665885925293
    3. '_' → logprob: -7.543665885925293
    4. '_name' → logprob: -9.668665885925293
    5. ' _' → logprob: -10.418665885925293
    6. '___' → logprob: -10.543665885925293
    7. '_main' → logprob: -11.918665885925293
    8. ' ' → logprob: -12.168665885925293
    9. ' ___' → logprob: -13.418665885925293
    10. ' ' → logprob: -14.543665885925293

Token 742: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6301592588424683
    2. ' ==' → logprob: -1.3801592588424683
    3. '==' → logprob: -1.6301592588424683
    4. '.__' → logprob: -5.380159378051758
    5. 'name' → logprob: -5.505159378051758
    6. '=="' → logprob: -5.755159378051758
    7. '__.__' → logprob: -6.380159378051758
    8. '[' → logprob: -6.505159378051758
    9. ' __' → logprob: -6.630159378051758
    10. '.' → logprob: -7.630159378051758

Token 743: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.455048449221067e-05
    2. '__.__' → logprob: -9.875054359436035
    3. '==' → logprob: -13.750054359436035
    4. '__.' → logprob: -14.125054359436035
    5. '__["' → logprob: -15.000054359436035
    6. '```' → logprob: -15.500054359436035
    7. '__
' → logprob: -16.00005531311035
    8. '___' → logprob: -16.12505531311035
    9. '__":
' → logprob: -16.25005531311035
    10. '=="' → logprob: -16.25005531311035

Token 744: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020763995125889778
    2. '==' → logprob: -4.395763874053955
    3. ' ==' → logprob: -4.895763874053955
    4. '=="' → logprob: -7.270763874053955
    5. '=='' → logprob: -10.645764350891113
    6. '__.__' → logprob: -11.895764350891113
    7. '___' → logprob: -12.645764350891113
    8. '_' → logprob: -12.895764350891113
    9. '===' → logprob: -13.395764350891113
    10. '=' → logprob: -13.520764350891113

Token 745: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002486476907506585
    2. ''' → logprob: -6.002486705780029
    3. '__' → logprob: -11.752486228942871
    4. ' "__' → logprob: -12.752486228942871
    5. '"name' → logprob: -17.002487182617188
    6. '"user' → logprob: -17.502487182617188
    7. ' '__' → logprob: -17.877487182617188
    8. ''"' → logprob: -18.502487182617188
    9. '"<?' → logprob: -19.252487182617188
    10. '("__' → logprob: -19.377487182617188

Token 746: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1341703236103058
    2. '"' → logprob: -3.1341702938079834
    3. ''' → logprob: -3.1341702938079834
    4. 'main' → logprob: -3.2591702938079834
    5. '__":
' → logprob: -10.634170532226562
    6. 'name' → logprob: -11.009170532226562
    7. '```' → logprob: -12.134170532226562
    8. ' "__' → logprob: -13.009170532226562
    9. '___' → logprob: -13.009170532226562
    10. '   ' → logprob: -13.134170532226562

Token 747: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20209456980228424
    2. '__' → logprob: -1.702094554901123
    3. '__':
' → logprob: -7.577094554901123
    4. '__:' → logprob: -8.952095031738281
    5. '__.' → logprob: -11.577095031738281
    6. '__["' → logprob: -11.827095031738281
    7. '__.__' → logprob: -12.327095031738281
    8. '__",' → logprob: -12.452095031738281
    9. '==' → logprob: -12.827095031738281
    10. '_' → logprob: -13.327095031738281

Token 748: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22938670217990875
    2. ' main' → logprob: -1.9793866872787476
    3. 'main' → logprob: -3.229386806488037
    4. '	main' → logprob: -3.604386806488037
    5. '   ' → logprob: -10.729386329650879
    6. '_main' → logprob: -11.479386329650879
    7. '(main' → logprob: -12.979386329650879
    8. '    
' → logprob: -13.604386329650879
    9. ' ' → logprob: -13.979386329650879
    10. ' ' → logprob: -13.979386329650879

Token 749: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.2729995988775045e-06
    2. ' main' → logprob: -12.000006675720215
    3. '	main' → logprob: -20.0000057220459
    4. '   ' → logprob: -21.6250057220459
    5. '.main' → logprob: -23.7500057220459
    6. '(main' → logprob: -23.8750057220459
    7. '_main' → logprob: -24.2500057220459
    8. 'import' → logprob: -25.1250057220459
    9. 'Main' → logprob: -25.7500057220459
    10. 'ma' → logprob: -26.6250057220459

Token 750: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 748
Tokens correctement prédits (1ère position, stricte): 214
Tokens correctement prédits (1ère position, avec adaptation): 222
Tokens correctement prédits (top 10): 460
Précision stricte (1ère position): 28.61%
Précision adaptée (1ère position): 29.68%
Précision (top 10): 61.50%
================================================================================
