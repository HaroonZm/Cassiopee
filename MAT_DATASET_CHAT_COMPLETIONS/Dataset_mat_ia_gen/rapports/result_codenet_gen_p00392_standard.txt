================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

N = int(input())
A = list(map(int, input().split()))

MAX_A = 10**5
spf = [0]*(MAX_A+1)  # smallest prime factor
for i in range(2, MAX_A+1):
    if spf[i] == 0:
        spf[i] = i
        for j in range(i*i, MAX_A+1, i):
            if spf[j] == 0:
                spf[j] = i

def prime_factors(x):
    factors = set()
    while x > 1:
        factors.add(spf[x])
        x //= spf[x]
    return factors

parent = list(range(N))
def find(x):
    while parent[x] != x:
        parent[x] = parent[parent[x]]
        x = parent[x]
    return x
def union(x,y):
    x, y = find(x), find(y)
    if x != y:
        parent[y] = x

prime_to_index = dict()
for i, v in enumerate(A):
    for p in prime_factors(v):
        if p in prime_to_index:
            union(i, prime_to_index[p])
        prime_to_index[p] = i

B = sorted(A)
comp_A = [[] for _ in range(N)]
comp_B = [[] for _ in range(N)]

for i, v in enumerate(A):
    comp_A[find(i)].append(v)
for i, v in enumerate(B):
    comp_B[find(i)].append(v)  # safe because ordering by index wouldn't matter as union find keys by original indices

for i in range(N):
    if sorted(comp_A[i]) != sorted(comp_B[i]):
        print(0)
        break
else:
    print(1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.607391408877447e-05
    2. ' .' → logprob: -11.500036239624023
    3. '.import' → logprob: -12.250036239624023
    4. '[' → logprob: -12.750036239624023
    5. '.readline' → logprob: -13.125036239624023
    6. '.`' → logprob: -13.375036239624023
    7. '.user' → logprob: -13.375036239624023
    8. '.stdout' → logprob: -13.750036239624023
    9. '.exit' → logprob: -14.000036239624023
    10. '."""' → logprob: -14.125036239624023

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.027227746322751045
    2. '_trace' → logprob: -4.277227878570557
    3. '_encoding' → logprob: -6.027227878570557
    4. '_version' → logprob: -6.277227878570557
    5. '_exc' → logprob: -6.402227878570557
    6. '_ex' → logprob: -6.527227878570557
    7. ' _' → logprob: -7.027227878570557
    8. '_set' → logprob: -7.777227878570557
    9. '_attr' → logprob: -7.902227878570557
    10. '_default' → logprob: -8.027227401733398

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.259079363080673e-05
    2. ' (' → logprob: -11.875012397766113
    3. '(
' → logprob: -12.625012397766113
    4. '(

' → logprob: -13.375012397766113
    5. '("("' → logprob: -15.375012397766113
    6. '((' → logprob: -15.750012397766113
    7. '('' → logprob: -15.875012397766113
    8. '(.' → logprob: -16.75001335144043
    9. '(
' → logprob: -17.12501335144043
    10. '()' → logprob: -17.50001335144043

Token 9: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5762726664543152
    2. '10' → logprob: -0.8262726664543152
    3. '500' → logprob: -8.951272964477539
    4. '300' → logprob: -8.951272964477539
    5. '999' → logprob: -10.201272964477539
    6. ' ' → logprob: -11.451272964477539
    7. '1' → logprob: -11.701272964477539
    8. '150' → logprob: -12.201272964477539
    9. '200' → logprob: -12.326272964477539
    10. '250' → logprob: -12.826272964477539

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09284054487943649
    2. '000' → logprob: -2.7178404331207275
    3. '00' → logprob: -3.8428404331207275
    4. '4' → logprob: -7.092840671539307
    5. '6' → logprob: -8.217840194702148
    6. '**' → logprob: -9.967840194702148
    7. '```' → logprob: -10.842840194702148
    8. '5' → logprob: -11.092840194702148
    9. '3' → logprob: -11.592840194702148
    10. '2' → logprob: -12.092840194702148

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028600357472896576
    2. '6' → logprob: -6.252860069274902
    3. '9' → logprob: -7.002860069274902
    4. '8' → logprob: -10.752860069274902
    5. ' ' → logprob: -15.502860069274902
    6. '(' → logprob: -16.502859115600586
    7. '```' → logprob: -17.377859115600586
    8. '3' → logprob: -18.377859115600586
    9. ')' → logprob: -19.002859115600586
    10. '0' → logprob: -19.502859115600586

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -16.750003814697266
    5. ')))' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '）' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.750003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9265931248664856
    2. '(' → logprob: -1.5515930652618408
    3. '\' → logprob: -1.6765930652618408
    4. '\n' → logprob: -2.676593065261841
    5. '()' → logprob: -2.926593065261841
    6. ')' → logprob: -3.926593065261841
    7. '(
' → logprob: -4.05159330368042
    8. '
' → logprob: -4.80159330368042
    9. '' → logprob: -4.92659330368042
    10. '#' → logprob: -5.05159330368042

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0258511770516634
    2. '()' → logprob: -3.775851249694824
    3. '.' → logprob: -7.150851249694824
    4. '40' → logprob: -8.025851249694824
    5. '('' → logprob: -8.400851249694824
    6. ')' → logprob: -8.775851249694824
    7. '```' → logprob: -8.900851249694824
    8. '("")' → logprob: -9.025851249694824
    9. '("("' → logprob: -9.150851249694824
    10. '(
' → logprob: -9.400851249694824

Token 15: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4987809658050537
    2. ' sys' → logprob: -0.9987809658050537
    3. 'input' → logprob: -3.8737809658050537
    4. 'sys' → logprob: -6.248781204223633
    5. ' open' → logprob: -7.623781204223633
    6. ' raw' → logprob: -7.623781204223633
    7. ' ' → logprob: -7.873781204223633
    8. ' lambda' → logprob: -8.748781204223633
    9. ' eval' → logprob: -10.123781204223633
    10. '```' → logprob: -10.498781204223633

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003644376527518034
    2. '.readline' → logprob: -6.3786444664001465
    3. '.stdin' → logprob: -6.7536444664001465
    4. ' .' → logprob: -7.5036444664001465
    5. '.input' → logprob: -10.253643989562988
    6. '.)' → logprob: -10.503643989562988
    7. ')' → logprob: -11.128643989562988
    8. '.import' → logprob: -11.128643989562988
    9. '.stdout' → logprob: -11.128643989562988
    10. '.read' → logprob: -11.503643989562988

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0010784220648929477
    2. '.read' → logprob: -7.5010786056518555
    3. '.' → logprob: -7.6260786056518555
    4. '.buffer' → logprob: -10.376078605651855
    5. '.readlines' → logprob: -12.376078605651855
    6. '.Read' → logprob: -13.751078605651855
    7. 'read' → logprob: -14.376078605651855
    8. 'buffer' → logprob: -15.501078605651855
    9. '.stdin' → logprob: -15.876078605651855
    10. ' .' → logprob: -16.12607765197754

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39599570631980896
    2. '(' → logprob: -1.3959957361221313
    3. 'def' → logprob: -3.645995616912842
    4. '\n' → logprob: -4.395995616912842
    5. '(n' → logprob: -4.770995616912842
    6. '()
' → logprob: -5.270995616912842
    7. '(
' → logprob: -5.395995616912842
    8. 'for' → logprob: -5.520995616912842
    9. ')' → logprob: -5.645995616912842
    10. 'n' → logprob: -5.895995616912842

Token 19: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4745829403400421
    2. 'n' → logprob: -0.9745829105377197
    3. 'N' → logprob: -8.22458267211914
    4. 'd' → logprob: -9.09958267211914
    5. '```' → logprob: -10.22458267211914
    6. 't' → logprob: -10.72458267211914
    7. 'a' → logprob: -10.97458267211914
    8. 'class' → logprob: -11.09958267211914
    9. 'for' → logprob: -12.09958267211914
    10. '\' → logprob: -12.09958267211914

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3106442093849182
    2. '=' → logprob: -1.4356441497802734
    3. ',' → logprob: -4.185644149780273
    4. ' ' → logprob: -4.560644149780273
    5. ')' → logprob: -6.310644149780273
    6. '<|end|>' → logprob: -7.560644149780273
    7. '.' → logprob: -8.435644149780273
    8. '=int' → logprob: -8.435644149780273
    9. ' ,' → logprob: -9.060644149780273
    10. '>' → logprob: -9.435644149780273

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.005238856188952923
    2. 'int' → logprob: -5.255239009857178
    3. ' ' → logprob: -12.38023853302002
    4. '10' → logprob: -14.88023853302002
    5. '=int' → logprob: -15.25523853302002
    6. '<int' → logprob: -16.630239486694336
    7. '(int' → logprob: -16.755239486694336
    8. ' input' → logprob: -17.255239486694336
    9. '20' → logprob: -18.130239486694336
    10. '[int' → logprob: -18.380239486694336

Token 22: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004127672873437405
    2. '(input' → logprob: -5.504127502441406
    3. '('' → logprob: -10.629127502441406
    4. '(N' → logprob: -11.504127502441406
    5. '(
' → logprob: -12.254127502441406
    6. '()' → logprob: -12.504127502441406
    7. '(

' → logprob: -13.629127502441406
    8. '(sys' → logprob: -13.754127502441406
    9. '(`' → logprob: -14.129127502441406
    10. '("' → logprob: -14.504127502441406

Token 23: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02565681003034115
    2. '()' → logprob: -4.025656700134277
    3. ')' → logprob: -4.900656700134277
    4. '(' → logprob: -10.775656700134277
    5. ' ())' → logprob: -11.775656700134277
    6. '())
' → logprob: -13.150656700134277
    7. '()))' → logprob: -13.650656700134277
    8. '`)' → logprob: -13.650656700134277
    9. '().' → logprob: -13.650656700134277
    10. '();)' → logprob: -14.650656700134277

Token 24: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5003986358642578
    2. 'A' → logprob: -2.625398635864258
    3. 'for' → logprob: -2.875398635864258
    4. 'dp' → logprob: -3.000398635864258
    5. '\n' → logprob: -3.125398635864258
    6. 'data' → logprob: -3.375398635864258
    7. 'd' → logprob: -3.500398635864258
    8. 'arr' → logprob: -4.125398635864258
    9. 's' → logprob: -4.125398635864258
    10. '\' → logprob: -4.875398635864258

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1022084429860115
    2. '[' → logprob: -2.477208375930786
    3. '.' → logprob: -4.852208614349365
    4. '=' → logprob: -5.852208614349365
    5. '[]' → logprob: -6.727208614349365
    6. '.append' → logprob: -8.102208137512207
    7. '[:]' → logprob: -8.102208137512207
    8. '[i' → logprob: -8.602208137512207
    9. ' ' → logprob: -9.602208137512207
    10. '[int' → logprob: -9.727208137512207

Token 26: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2530934512615204
    2. ' list' → logprob: -1.5030934810638428
    3. '[list' → logprob: -7.128093242645264
    4. '[' → logprob: -8.878093719482422
    5. ' [' → logprob: -8.878093719482422
    6. '[]' → logprob: -10.128093719482422
    7. ' []' → logprob: -10.628093719482422
    8. '[int' → logprob: -12.003093719482422
    9. '[input' → logprob: -12.003093719482422
    10. 'input' → logprob: -13.503093719482422

Token 27: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002147762104868889
    2. '(input' → logprob: -6.627147674560547
    3. '(int' → logprob: -8.002147674560547
    4. '(range' → logprob: -9.002147674560547
    5. '(A' → logprob: -9.502147674560547
    6. '()' → logprob: -9.502147674560547
    7. '(map' → logprob: -9.627147674560547
    8. '(
' → logprob: -11.127147674560547
    9. '([' → logprob: -11.252147674560547
    10. '(eval' → logprob: -11.377147674560547

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05100681260228157
    2. '(' → logprob: -3.05100679397583
    3. '(lambda' → logprob: -6.67600679397583
    4. '(str' → logprob: -6.92600679397583
    5. '(input' → logprob: -10.051007270812988
    6. '[int' → logprob: -10.301007270812988
    7. '<int' → logprob: -10.801007270812988
    8. 'int' → logprob: -11.051007270812988
    9. '(eval' → logprob: -11.551007270812988
    10. '<|end|>' → logprob: -11.801007270812988

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08649939298629761
    2. ',input' → logprob: -2.5864994525909424
    3. '(' → logprob: -5.211499214172363
    4. ',' → logprob: -6.211499214172363
    5. 'input' → logprob: -9.461499214172363
    6. '(int' → logprob: -11.211499214172363
    7. ' (' → logprob: -11.836499214172363
    8. ' ,' → logprob: -12.086499214172363
    9. ')' → logprob: -12.711499214172363
    10. '=input' → logprob: -12.836499214172363

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019299437990412116
    2. ' input' → logprob: -6.251929759979248
    3. '(input' → logprob: -13.751930236816406
    4. ',input' → logprob: -16.251930236816406
    5. ' ' → logprob: -16.626930236816406
    6. '	input' → logprob: -17.251930236816406
    7. '=input' → logprob: -17.626930236816406
    8. '<input' → logprob: -18.126930236816406
    9. ')' → logprob: -19.126930236816406
    10. '_input' → logprob: -19.251930236816406

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8312570318812504e-05
    2. '()' → logprob: -11.000018119812012
    3. '()))' → logprob: -14.000018119812012
    4. '())' → logprob: -14.875018119812012
    5. '(' → logprob: -15.625018119812012
    6. ' ().' → logprob: -16.375019073486328
    7. 'split' → logprob: -17.375019073486328
    8. '()));' → logprob: -17.375019073486328
    9. '())))' → logprob: -18.000019073486328
    10. '()
' → logprob: -18.000019073486328

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.025665057823061943
    2. 'strip' → logprob: -3.775665044784546
    3. 'rstrip' → logprob: -6.025665283203125
    4. '(split' → logprob: -15.525665283203125
    5. ' split' → logprob: -15.775665283203125
    6. 'read' → logprob: -16.150665283203125
    7. ')' → logprob: -16.150665283203125
    8. 'rs' → logprob: -17.400665283203125
    9. 'spl' → logprob: -18.150665283203125
    10. '```' → logprob: -18.775665283203125

Token 33: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09018296003341675
    2. ')' → logprob: -2.5901830196380615
    3. '()))' → logprob: -4.590182781219482
    4. '())' → logprob: -7.340182781219482
    5. '(' → logprob: -8.21518325805664
    6. '()' → logprob: -9.21518325805664
    7. ')))' → logprob: -9.96518325805664
    8. ' ))' → logprob: -12.34018325805664
    9. '),' → logprob: -13.59018325805664
    10. '```' → logprob: -13.71518325805664

Token 34: 'MAX' (ID: 21911)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40711966156959534
    2. 'A' → logprob: -1.907119631767273
    3. 'd' → logprob: -2.7821197509765625
    4. 'def' → logprob: -3.1571197509765625
    5. ')' → logprob: -3.5321197509765625
    6. '_' → logprob: -5.0321197509765625
    7. 'count' → logprob: -5.0321197509765625
    8. 'a' → logprob: -5.2821197509765625
    9. 'max' → logprob: -5.5321197509765625
    10. '#' → logprob: -5.7821197509765625

Token 35: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0862751305103302
    2. '_VAL' → logprob: -3.336275100708008
    3. '_A' → logprob: -3.461275100708008
    4. '_VALUE' → logprob: -4.711275100708008
    5. '_V' → logprob: -5.836275100708008
    6. '_SUM' → logprob: -6.961275100708008
    7. '_NUM' → logprob: -7.586275100708008
    8. '_DEPTH' → logprob: -7.711275100708008
    9. '(' → logprob: -7.711275100708008
    10. '_SIZE' → logprob: -8.461275100708008

Token 36: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6611754298210144
    2. '[' → logprob: -1.6611754894256592
    3. '(' → logprob: -2.161175489425659
    4. '=' → logprob: -2.536175489425659
    5. ' =' → logprob: -3.161175489425659
    6. '+' → logprob: -3.161175489425659
    7. ')' → logprob: -4.66117525100708
    8. ' +' → logprob: -6.66117525100708
    9. '[:]' → logprob: -7.28617525100708
    10. ' ' → logprob: -7.41117525100708

Token 37: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.156005397439003
    2. 'max' → logprob: -2.156005382537842
    3. ' max' → logprob: -4.281005382537842
    4. ' ' → logprob: -4.656005382537842
    5. '100' → logprob: -5.281005382537842
    6. '200' → logprob: -9.906005859375
    7. '0' → logprob: -9.906005859375
    8. '1' → logprob: -10.031005859375
    9. '2' → logprob: -10.406005859375
    10. '500' → logprob: -11.781005859375

Token 38: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.39541375637054443
    2. 'max' → logprob: -1.1454137563705444
    3. '100' → logprob: -4.895413875579834
    4. ' max' → logprob: -7.770413875579834
    5. '200' → logprob: -9.145413398742676
    6. ' ' → logprob: -9.270413398742676
    7. '1' → logprob: -9.395413398742676
    8. '2' → logprob: -9.520413398742676
    9. '0' → logprob: -9.770413398742676
    10. '500' → logprob: -10.395413398742676

Token 39: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.3501858115196228
    2. '7' → logprob: -1.6001858711242676
    3. '5' → logprob: -2.8501858711242676
    4. '8' → logprob: -3.7251858711242676
    5. '**' → logprob: -5.100185871124268
    6. '9' → logprob: -5.350185871124268
    7. '0' → logprob: -7.475185871124268
    8. '4' → logprob: -8.72518539428711
    9. '1' → logprob: -10.35018539428711
    10. '2' → logprob: -11.72518539428711

Token 40: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.25430378317832947
    2. '5' → logprob: -2.2543036937713623
    3. '9' → logprob: -2.3793036937713623
    4. '6' → logprob: -3.6293036937713623
    5. '8' → logprob: -8.254303932189941
    6. '10' → logprob: -9.004303932189941
    7. '12' → logprob: -10.754303932189941
    8. '18' → logprob: -11.004303932189941
    9. '4' → logprob: -11.754303932189941
    10. '```' → logprob: -12.004303932189941

Token 41: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21334266662597656
    2. '
' → logprob: -1.7133426666259766
    3. ' 
' → logprob: -5.963342666625977
    4. '*' → logprob: -6.088342666625977
    5. '#' → logprob: -6.338342666625977
    6. ' +' → logprob: -6.713342666625977
    7. '+
' → logprob: -7.213342666625977
    8. '' → logprob: -7.338342666625977
    9. '```' → logprob: -7.838342666625977
    10. 'n' → logprob: -8.338342666625977

Token 42: 'spf' (ID: 113737)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24027127027511597
    2. 'freq' → logprob: -1.9902713298797607
    3. 'count' → logprob: -3.6152713298797607
    4. 'div' → logprob: -3.8652713298797607
    5. 'counts' → logprob: -4.865271091461182
    6. 'cnt' → logprob: -4.990271091461182
    7. 'd' → logprob: -6.115271091461182
    8. 'frequency' → logprob: -6.115271091461182
    9. 'f' → logprob: -6.365271091461182
    10. ' dp' → logprob: -6.365271091461182

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056315045803785324
    2. '=' → logprob: -2.9313149452209473
    3. '[' → logprob: -6.931314945220947
    4. '_' → logprob: -7.806314945220947
    5. '[]' → logprob: -11.181315422058105
    6. 's' → logprob: -11.181315422058105
    7. '[:]' → logprob: -11.806315422058105
    8. ' ' → logprob: -12.556315422058105
    9. ',' → logprob: -13.306315422058105
    10. ']' → logprob: -13.806315422058105

Token 44: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023270171135663986
    2. ' [' → logprob: -3.7732701301574707
    3. '[-' → logprob: -10.773270606994629
    4. '[MAX' → logprob: -13.773270606994629
    5. '[int' → logprob: -14.398270606994629
    6. '[max' → logprob: -14.648270606994629
    7. '[list' → logprob: -14.648270606994629
    8. ' [-' → logprob: -15.273270606994629
    9. '[min' → logprob: -15.398270606994629
    10. '[a' → logprob: -16.148269653320312

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.126521035796031e-05
    2. 'i' → logprob: -9.375091552734375
    3. ' ' → logprob: -12.375091552734375
    4. '-' → logprob: -13.125091552734375
    5. ' i' → logprob: -15.875091552734375
    6. ' -' → logprob: -17.500091552734375
    7. '_' → logprob: -18.250091552734375
    8. 'x' → logprob: -18.375091552734375
    9. '-i' → logprob: -18.375091552734375
    10. ']' → logprob: -18.875091552734375

Token 46: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6843118667602539
    2. ' ]' → logprob: -0.8093118667602539
    3. ',' → logprob: -3.559311866760254
    4. ' for' → logprob: -4.059311866760254
    5. ' ' → logprob: -5.559311866760254
    6. 'for' → logprob: -8.559311866760254
    7. ')' → logprob: -8.809311866760254
    8. ']*(' → logprob: -9.184311866760254
    9. ']*' → logprob: -9.434311866760254
    10. ' ,' → logprob: -9.684311866760254

Token 47: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -6.153795766294934e-06
    2. '(MAX' → logprob: -12.250005722045898
    3. ' MAX' → logprob: -13.625005722045898
    4. '10' → logprob: -17.3750057220459
    5. '_MAX' → logprob: -18.6250057220459
    6. 'MA' → logprob: -19.0000057220459
    7. 'Max' → logprob: -19.1250057220459
    8. '100' → logprob: -19.2500057220459
    9. 'max' → logprob: -19.7500057220459
    10. 'M' → logprob: -20.3750057220459

Token 48: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -2.935296834039036e-06
    2. '+' → logprob: -13.37500286102295
    3. '```' → logprob: -14.00000286102295
    4. 'A' → logprob: -14.62500286102295
    5. '_' → logprob: -17.125003814697266
    6. '_B' → logprob: -18.250003814697266
    7. '+A' → logprob: -18.250003814697266
    8. ' _' → logprob: -18.250003814697266
    9. '`' → logprob: -18.500003814697266
    10. '_S' → logprob: -18.625003814697266

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006284446571953595
    2. ' +' → logprob: -7.375628471374512
    3. '+
' → logprob: -14.250628471374512
    4. ')' → logprob: -14.375628471374512
    5. '1' → logprob: -14.750628471374512
    6. '+)' → logprob: -15.375628471374512
    7. ')+' → logprob: -16.625627517700195
    8. '＋' → logprob: -17.250627517700195
    9. ' +
' → logprob: -18.750627517700195
    10. '+

' → logprob: -18.875627517700195

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.875001907348633
    3. '2' → logprob: -14.750001907348633
    4. '0' → logprob: -14.875001907348633
    5. '6' → logprob: -15.375001907348633
    6. '5' → logprob: -15.625001907348633
    7. '１' → logprob: -17.000001907348633
    8. '7' → logprob: -18.000001907348633
    9. '10' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017004783148877323
    2. ')
' → logprob: -8.75016975402832
    3. ' )' → logprob: -12.25016975402832
    4. '<|end|>' → logprob: -12.87516975402832
    5. ')
' → logprob: -13.50016975402832
    6. ')

' → logprob: -13.62516975402832
    7. '```' → logprob: -14.75016975402832
    8. '),' → logprob: -15.50016975402832
    9. '}' → logprob: -16.37516975402832
    10. ')`' → logprob: -16.37516975402832

Token 52: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07783627510070801
    2. ' for' → logprob: -2.702836275100708
    3. '
' → logprob: -5.827836036682129
    4. '#' → logprob: -6.327836036682129
    5. 'i' → logprob: -6.452836036682129
    6. ' 
' → logprob: -7.702836036682129
    7. '[' → logprob: -8.202836036682129
    8. '  
' → logprob: -8.327836036682129
    9. '<|end|>' → logprob: -8.952836036682129
    10. 'spf' → logprob: -9.202836036682129

Token 53: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004116038326174021
    2. ' for' → logprob: -6.254116058349609
    3. '#' → logprob: -6.879116058349609
    4. '
' → logprob: -7.129116058349609
    5. 'i' → logprob: -9.00411605834961
    6. '[' → logprob: -9.37911605834961
    7. '1' → logprob: -9.50411605834961
    8. '  
' → logprob: -11.50411605834961
    9. '\n' → logprob: -11.62911605834961
    10. '
' → logprob: -12.00411605834961

Token 54: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.1563219130039215
    2. '#' → logprob: -2.9063220024108887
    3. 'small' → logprob: -3.1563220024108887
    4. ' shortest' → logprob: -4.656322002410889
    5. 's' → logprob: -5.031322002410889
    6. 'prime' → logprob: -5.281322002410889
    7. 'spf' → logprob: -5.531322002410889
    8. ' #' → logprob: -6.031322002410889
    9. 'sp' → logprob: -6.031322002410889
    10. ''s' → logprob: -6.281322002410889

Token 55: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.24030201137065887
    2. ' prime' → logprob: -1.8653019666671753
    3. 'prime' → logprob: -2.865302085876465
    4. ' factor' → logprob: -7.490302085876465
    5. '_' → logprob: -7.990302085876465
    6. '_factor' → logprob: -8.365302085876465
    7. '_p' → logprob: -8.615302085876465
    8. '_pr' → logprob: -8.740302085876465
    9. 'factor' → logprob: -9.615302085876465
    10. ' primes' → logprob: -9.615302085876465

Token 56: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.04125054553151131
    2. '_factor' → logprob: -3.291250467300415
    3. ' factor' → logprob: -5.791250705718994
    4. '_f' → logprob: -9.416250228881836
    5. 'f' → logprob: -10.166250228881836
    6. '```' → logprob: -11.416250228881836
    7. '_' → logprob: -12.291250228881836
    8. 'div' → logprob: -12.541250228881836
    9. ' фактор' → logprob: -13.041250228881836
    10. ' ' → logprob: -13.416250228881836

Token 57: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.317799836397171
    2. ' for' → logprob: -1.5677998065948486
    3. '[' → logprob: -3.1927998065948486
    4. ')' → logprob: -5.567800045013428
    5. '=' → logprob: -5.567800045013428
    6. ' ' → logprob: -5.692800045013428
    7. 'i' → logprob: -6.067800045013428
    8. '<|end|>' → logprob: -6.442800045013428
    9. ' =' → logprob: -6.817800045013428
    10. '[i' → logprob: -6.942800045013428

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004336475860327482
    2. ' for' → logprob: -5.879336357116699
    3. 'i' → logprob: -7.004336357116699
    4. 'p' → logprob: -8.0043363571167
    5. 'def' → logprob: -8.7543363571167
    6. '[' → logprob: -10.3793363571167
    7. '#' → logprob: -10.6293363571167
    8. '
' → logprob: -10.7543363571167
    9. 'import' → logprob: -11.2543363571167
    10. '1' → logprob: -11.6293363571167

Token 59: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16026200354099274
    2. 'i' → logprob: -1.9102619886398315
    3. ' p' → logprob: -10.910262107849121
    4. 'p' → logprob: -11.285262107849121
    5. 'x' → logprob: -13.035262107849121
    6. '	i' → logprob: -13.535262107849121
    7. ' x' → logprob: -13.660262107849121
    8. ' ' → logprob: -14.285262107849121
    9. 'a' → logprob: -14.910262107849121
    10. 'd' → logprob: -15.160262107849121

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04920446500182152
    2. 'in' → logprob: -3.0492043495178223
    3. ' ' → logprob: -7.424204349517822
    4. '	in' → logprob: -11.67420482635498
    5. 'n' → logprob: -12.79920482635498
    6. 'range' → logprob: -13.79920482635498
    7. '  ' → logprob: -14.04920482635498
    8. ',' → logprob: -14.04920482635498
    9. '1' → logprob: -14.17420482635498
    10. 'i' → logprob: -14.29920482635498

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023304294794797897
    2. ' range' → logprob: -3.7733042240142822
    3. '2' → logprob: -9.773303985595703
    4. '	range' → logprob: -13.773303985595703
    5. '(range' → logprob: -14.648303985595703
    6. ' ' → logprob: -15.148303985595703
    7. '[' → logprob: -16.148303985595703
    8. '.range' → logprob: -17.898303985595703
    9. ' xrange' → logprob: -18.273303985595703
    10. 'rang' → logprob: -19.148303985595703

Token 62: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007615509908646345
    2. '(' → logprob: -4.882615566253662
    3. ' ' → logprob: -11.632615089416504
    4. '```' → logprob: -15.382615089416504
    5. ' (' → logprob: -16.38261604309082
    6. ')' → logprob: -17.25761604309082
    7. '２' → logprob: -17.50761604309082
    8. '[' → logprob: -17.50761604309082
    9. '۲' → logprob: -17.75761604309082
    10. '	' → logprob: -17.88261604309082

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '(' → logprob: -17.500001907348633
    4. '２' → logprob: -18.500001907348633
    5. ')' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '```' → logprob: -19.250001907348633
    8. '۲' → logprob: -19.625001907348633
    9. '
' → logprob: -19.750001907348633
    10. '

' → logprob: -20.250001907348633

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003608386032283306
    2. ' ,' → logprob: -5.628608226776123
    3. ',int' → logprob: -12.753608703613281
    4. ' ' → logprob: -13.003608703613281
    5. ',len' → logprob: -13.878608703613281
    6. ',max' → logprob: -14.878608703613281
    7. ',i' → logprob: -15.003608703613281
    8. ',N' → logprob: -15.003608703613281
    9. '‌,' → logprob: -15.253608703613281
    10. ',num' → logprob: -15.628608703613281

Token 65: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.018336882814764977
    2. 'int' → logprob: -4.018336772918701
    3. '(MAX' → logprob: -9.14333724975586
    4. ' MAX' → logprob: -10.01833724975586
    5. 'len' → logprob: -11.14333724975586
    6. ' int' → logprob: -11.14333724975586
    7. 'INT' → logprob: -13.14333724975586
    8. 'MIN' → logprob: -13.64333724975586
    9. '(int' → logprob: -14.26833724975586
    10. '100' → logprob: -14.51833724975586

Token 66: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -1.0445127372804563e-05
    2. 'A' → logprob: -11.50001049041748
    3. '```' → logprob: -16.750009536743164
    4. '_AI' → logprob: -17.000009536743164
    5. '_B' → logprob: -17.125009536743164
    6. '+' → logprob: -17.125009536743164
    7. '	A' → logprob: -17.875009536743164
    8. '+A' → logprob: -18.500009536743164
    9. '_I' → logprob: -18.625009536743164
    10. '_' → logprob: -18.625009536743164

Token 67: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012439649435691535
    2. ' +' → logprob: -9.000123977661133
    3. '//' → logprob: -14.375123977661133
    4. '1' → logprob: -15.625123977661133
    5. ' ' → logprob: -16.000123977661133
    6. '```' → logprob: -16.875123977661133
    7. '＋' → logprob: -18.250123977661133
    8. '[' → logprob: -18.375123977661133
    9. '2' → logprob: -18.500123977661133
    10. '+
' → logprob: -18.625123977661133

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014513806439936161
    2. '+' → logprob: -4.889513969421387
    3. '6' → logprob: -5.389513969421387
    4. '5' → logprob: -6.639513969421387
    5. '2' → logprob: -7.139513969421387
    6. ' ' → logprob: -9.264513969421387
    7. '501' → logprob: -9.764513969421387
    8. '0' → logprob: -11.264513969421387
    9. '```' → logprob: -11.889513969421387
    10. ' +' → logprob: -12.014513969421387

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007090669125318527
    2. '):
' → logprob: -5.3820905685424805
    3. ':' → logprob: -6.2570905685424805
    4. ' ):' → logprob: -7.8820905685424805
    5. ')' → logprob: -8.75709056854248
    6. ',' → logprob: -12.25709056854248
    7. '):
' → logprob: -12.63209056854248
    8. ' ):
' → logprob: -12.75709056854248
    9. ' :' → logprob: -13.75709056854248
    10. ' ' → logprob: -13.75709056854248

Token 70: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4229588210582733
    2. ' if' → logprob: -1.1729588508605957
    3. '   ' → logprob: -4.047958850860596
    4. '1' → logprob: -4.797958850860596
    5. ' ' → logprob: -5.797958850860596
    6. '0' → logprob: -5.922958850860596
    7. 'i' → logprob: -6.422958850860596
    8. ' i' → logprob: -6.922958850860596
    9. '2' → logprob: -7.422958850860596
    10. '```' → logprob: -8.547958374023438

Token 71: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3025805950164795
    2. ' if' → logprob: -1.8025805950164795
    3. 'i' → logprob: -3.5525805950164795
    4. '0' → logprob: -3.6775805950164795
    5. ' i' → logprob: -3.8025805950164795
    6. '2' → logprob: -5.427580833435059
    7. 'spf' → logprob: -5.427580833435059
    8. '   ' → logprob: -5.677580833435059
    9. ' sp' → logprob: -6.052580833435059
    10. '1' → logprob: -6.052580833435059

Token 72: ' sp' (ID: 1014)
  Prédit: ' sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sp' → logprob: -0.06200454384088516
    2. 'spf' → logprob: -2.812004566192627
    3. '	sp' → logprob: -10.687004089355469
    4. 'sp' → logprob: -11.562004089355469
    5. ' not' → logprob: -13.312004089355469
    6. '(sp' → logprob: -13.937004089355469
    7. ' ' → logprob: -14.312004089355469
    8. ' SPF' → logprob: -14.562004089355469
    9. '_sp' → logprob: -15.562004089355469
    10. '   ' → logprob: -15.812004089355469

Token 73: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003408263437449932
    2. '[i' → logprob: -8.125340461730957
    3. '[f' → logprob: -10.500340461730957
    4. '[' → logprob: -11.125340461730957
    5. 'ф' → logprob: -13.750340461730957
    6. '[
' → logprob: -15.000340461730957
    7. '```' → logprob: -15.125340461730957
    8. '[int' → logprob: -15.750340461730957
    9. '   ' → logprob: -16.750341415405273
    10. 'i' → logprob: -16.875341415405273

Token 74: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9027791495318525e-05
    2. '[' → logprob: -10.875019073486328
    3. '[I' → logprob: -17.125019073486328
    4. ' [' → logprob: -17.250019073486328
    5. '```' → logprob: -17.750019073486328
    6. '\[' → logprob: -17.875019073486328
    7. 'i' → logprob: -17.875019073486328
    8. '[
' → logprob: -19.625019073486328
    9. '[j' → logprob: -19.750019073486328
    10. ' ' → logprob: -20.500019073486328

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48307549953460693
    2. ']==' → logprob: -0.9830754995346069
    3. '==' → logprob: -4.9830756187438965
    4. ' ==' → logprob: -6.9830756187438965
    5. ' ]' → logprob: -7.2330756187438965
    6. ')' → logprob: -8.108075141906738
    7. ')==' → logprob: -9.108075141906738
    8. ' ' → logprob: -11.358075141906738
    9. '[' → logprob: -11.858075141906738
    10. '=' → logprob: -11.983075141906738

Token 76: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.062330421060323715
    2. ' ==' → logprob: -2.812330484390259
    3. ']==' → logprob: -8.31233024597168
    4. ')==' → logprob: -9.93733024597168
    5. '===' → logprob: -10.56233024597168
    6. '=' → logprob: -10.93733024597168
    7. ')' → logprob: -12.31233024597168
    8. '==
' → logprob: -12.31233024597168
    9. '```' → logprob: -12.68733024597168
    10. '0' → logprob: -12.93733024597168

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '۰' → logprob: -21.250431060791016
    4. '  ' → logprob: -22.625431060791016
    5. ' ' → logprob: -22.875431060791016
    6. '1' → logprob: -22.937931060791016
    7. ' ' → logprob: -23.312931060791016
    8. '   ' → logprob: -23.437931060791016
    9. '０' → logprob: -23.562931060791016
    10. '00' → logprob: -23.625431060791016

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '1' → logprob: -22.62500762939453
    4. ' ' → logprob: -22.87500762939453
    5. '```' → logprob: -22.87500762939453
    6. '۰' → logprob: -23.00000762939453
    7. 'i' → logprob: -23.12500762939453
    8. '00' → logprob: -23.37500762939453
    9. '  ' → logprob: -24.50000762939453
    10. '000' → logprob: -24.50000762939453

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010306637705070898
    2. ' :' → logprob: -10.000102996826172
    3. '):' → logprob: -10.625102996826172
    4. ':
' → logprob: -10.750102996826172
    5. ':i' → logprob: -11.500102996826172
    6. ':**' → logprob: -14.500102996826172
    7. ',' → logprob: -14.875102996826172
    8. '[i' → logprob: -16.000102996826172
    9. ')' → logprob: -16.125102996826172
    10. ' i' → logprob: -16.625102996826172

Token 80: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37994080781936646
    2. ' sp' → logprob: -2.1299407482147217
    3. '       ' → logprob: -2.2549407482147217
    4. ':' → logprob: -3.6299407482147217
    5. ' i' → logprob: -3.7549407482147217
    6. 'i' → logprob: -4.504940986633301
    7. ' ' → logprob: -5.129940986633301
    8. 'sp' → logprob: -5.129940986633301
    9. '    ' → logprob: -5.504940986633301
    10. ' for' → logprob: -5.629940986633301

Token 81: ' sp' (ID: 1014)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09255553781986237
    2. 'i' → logprob: -3.092555522918701
    3. ' for' → logprob: -3.217555522918701
    4. 'spf' → logprob: -5.967555522918701
    5. 'sp' (adapté à ' sp') → logprob: -8.59255599975586
    6. ' i' → logprob: -8.84255599975586
    7. 'j' → logprob: -10.34255599975586
    8. '   ' → logprob: -11.34255599975586
    9. 's' → logprob: -11.59255599975586
    10. ' sp' → logprob: -12.34255599975586

Token 82: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003623831318691373
    2. '[i' → logprob: -5.628623962402344
    3. 'i' → logprob: -11.378623962402344
    4. 'ф' → logprob: -12.628623962402344
    5. 'for' → logprob: -12.878623962402344
    6. '[f' → logprob: -13.503623962402344
    7. '```' → logprob: -13.503623962402344
    8. '\[' → logprob: -14.253623962402344
    9. ' f' → logprob: -15.003623962402344
    10. '`' → logprob: -15.378623962402344

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006298751104623079
    2. '[' → logprob: -7.375629901885986
    3. '=' → logprob: -12.875629425048828
    4. '[
' → logprob: -15.500629425048828
    5. 'i' → logprob: -15.625629425048828
    6. '[I' → logprob: -15.750629425048828
    7. '```' → logprob: -16.375629425048828
    8. '[j' → logprob: -16.625629425048828
    9. '\[' → logprob: -16.750629425048828
    10. '=i' → logprob: -17.125629425048828

Token 84: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0033134082332253456
    2. '=' → logprob: -6.2533135414123535
    3. ']=' → logprob: -6.7533135414123535
    4. '[i' → logprob: -8.878313064575195
    5. ' ]' → logprob: -10.003313064575195
    6. ' =' → logprob: -11.253313064575195
    7. '=i' → logprob: -11.503313064575195
    8. '[' → logprob: -11.878313064575195
    9. 'i' → logprob: -14.253313064575195
    10. ')' → logprob: -14.378313064575195

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3139403462409973
    2. ' =' → logprob: -1.3139402866363525
    3. '=i' → logprob: -7.313940525054932
    4. '[i' → logprob: -11.688940048217773
    5. '[' → logprob: -13.563940048217773
    6. '＝' → logprob: -13.813940048217773
    7. ' ' → logprob: -14.438940048217773
    8. '=

' → logprob: -15.688940048217773
    9. '=int' → logprob: -15.813940048217773
    10. '=j' → logprob: -16.313940048217773

Token 86: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.4121114822482923e-06
    2. ' i' → logprob: -12.625003814697266
    3. '	i' → logprob: -19.125003814697266
    4. ''i' → logprob: -21.500003814697266
    5. ')i' → logprob: -23.000003814697266
    6. '2' → logprob: -23.250003814697266
    7. ' ' → logprob: -23.750003814697266
    8. '`' → logprob: -23.875003814697266
    9. '*i' → logprob: -24.000003814697266
    10. '{i' → logprob: -24.125003814697266

Token 87: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1863579899072647
    2. '<|end|>' → logprob: -2.5613579750061035
    3. 'for' → logprob: -3.0613579750061035
    4. ' 
' → logprob: -3.9363579750061035
    5. '  
' → logprob: -5.1863579750061035
    6. ' ' → logprob: -5.3113579750061035
    7. '   ' → logprob: -5.3113579750061035
    8. '    
' → logprob: -5.6863579750061035
    9. '```' → logprob: -6.4363579750061035
    10. '	for' → logprob: -6.4363579750061035

Token 88: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6591882705688477
    2. '<|end|>' → logprob: -1.5341882705688477
    3. ' 
' → logprob: -2.5341882705688477
    4. '```' → logprob: -2.6591882705688477
    5. 'for' → logprob: -3.0341882705688477
    6. '   ' → logprob: -3.6591882705688477
    7. ' ' → logprob: -4.284188270568848
    8. '  
' → logprob: -4.534188270568848
    9. '    
' → logprob: -4.784188270568848
    10. '\n' → logprob: -5.534188270568848

Token 89: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002788551209960133
    2. 'j' → logprob: -8.50027847290039
    3. ' for' → logprob: -9.50027847290039
    4. 'if' → logprob: -15.37527847290039
    5. '   ' → logprob: -15.87527847290039
    6. '	for' → logprob: -16.37527847290039
    7. 'k' → logprob: -18.12527847290039
    8. '```' → logprob: -18.25027847290039
    9. 'print' → logprob: -18.37527847290039
    10. ' j' → logprob: -18.37527847290039

Token 90: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.16022737324237823
    2. 'j' → logprob: -1.9102274179458618
    3. ' ' → logprob: -13.03522777557373
    4. '	j' → logprob: -13.78522777557373
    5. '```' → logprob: -17.785226821899414
    6. ' x' → logprob: -18.910226821899414
    7. '$j' → logprob: -19.160226821899414
    8. ' ' → logprob: -19.160226821899414
    9. '`' → logprob: -19.535226821899414
    10. '   ' → logprob: -19.535226821899414

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026310749351978302
    2. 'in' → logprob: -3.651310682296753
    3. 'range' → logprob: -12.401310920715332
    4. ' ' → logprob: -12.651310920715332
    5. '```' → logprob: -13.651310920715332
    6. '	in' → logprob: -14.401310920715332
    7. ' i' → logprob: -14.776310920715332
    8. 's' → logprob: -15.151310920715332
    9. 'i' → logprob: -15.526310920715332
    10. '   ' → logprob: -16.026309967041016

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519315779209137
    2. 'range' → logprob: -1.5019315481185913
    3. '(range' → logprob: -13.376931190490723
    4. '	range' → logprob: -14.751931190490723
    5. ' i' → logprob: -15.376931190490723
    6. 'i' → logprob: -15.626931190490723
    7. ' xrange' → logprob: -16.50193214416504
    8. ' ' → logprob: -16.50193214416504
    9. 'rang' → logprob: -17.62693214416504
    10. '   ' → logprob: -18.50193214416504

Token 93: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.774276774493046e-05
    2. '(' → logprob: -10.500038146972656
    3. 'i' → logprob: -11.500038146972656
    4. ' i' → logprob: -17.250038146972656
    5. '	i' → logprob: -18.125038146972656
    6. '2' → logprob: -18.500038146972656
    7. ' (' → logprob: -19.125038146972656
    8. '(ii' → logprob: -19.250038146972656
    9. '(j' → logprob: -20.000038146972656
    10. ',i' → logprob: -20.125038146972656

Token 94: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.023488763719797134
    2. '*' → logprob: -3.773488759994507
    3. ',' → logprob: -8.773488998413086
    4. 'i' → logprob: -9.648488998413086
    5. ' *' → logprob: -10.898488998413086
    6. ',i' → logprob: -13.148488998413086
    7. '*,' → logprob: -13.398488998413086
    8. '2' → logprob: -14.648488998413086
    9. ' ' → logprob: -14.898488998413086
    10. ' i' → logprob: -14.898488998413086

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. ' ,' → logprob: -10.500027656555176
    3. 'MAX' → logprob: -15.375027656555176
    4. ',max' → logprob: -16.500028610229492
    5. ',
' → logprob: -16.625028610229492
    6. '(MAX' → logprob: -17.375028610229492
    7. ',i' → logprob: -19.125028610229492
    8. ' MAX' → logprob: -19.250028610229492
    9. ',(' → logprob: -19.625028610229492
    10. '[MAX' → logprob: -19.875028610229492

Token 96: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0005984273157082498
    2. ' MAX' → logprob: -7.500598430633545
    3. '(MAX' → logprob: -10.000597953796387
    4. '[MAX' → logprob: -17.375598907470703
    5. '10' → logprob: -17.500598907470703
    6. '/MAX' → logprob: -17.625598907470703
    7. '_MAX' → logprob: -18.000598907470703
    8. '   ' → logprob: -18.000598907470703
    9. ' ' → logprob: -18.750598907470703
    10. '.MAX' → logprob: -19.375598907470703

Token 97: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -1.5928495486150496e-05
    2. 'A' → logprob: -11.125016212463379
    3. '+' → logprob: -14.000016212463379
    4. '```' → logprob: -16.125015258789062
    5. '+A' → logprob: -16.250015258789062
    6. '	A' → logprob: -18.500015258789062
    7. 'MAX' → logprob: -18.750015258789062
    8. '_AI' → logprob: -18.750015258789062
    9. '"A' → logprob: -19.125015258789062
    10. '_MAX' → logprob: -19.250015258789062

Token 98: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9361264946837764e-07
    2. ' +' → logprob: -15.625
    3. '+,' → logprob: -19.25
    4. '```' → logprob: -19.625
    5. '+
' → logprob: -19.875
    6. '+i' → logprob: -20.0
    7. '＋' → logprob: -20.125
    8. '1' → logprob: -21.0
    9. '<|end|>' → logprob: -21.375
    10. ')+' → logprob: -21.5

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. '+' → logprob: -12.000006675720215
    3. ' ' → logprob: -15.375006675720215
    4. '5' → logprob: -15.875006675720215
    5. '```' → logprob: -16.37500762939453
    6. '6' → logprob: -16.50000762939453
    7. '2' → logprob: -17.50000762939453
    8. '7' → logprob: -18.75000762939453
    9. '   ' → logprob: -19.12500762939453
    10. '0' → logprob: -19.25000762939453

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03816542401909828
    2. ',i' → logprob: -3.288165330886841
    3. ' ,' → logprob: -9.038165092468262
    4. 'i' → logprob: -13.038165092468262
    5. ' i' → logprob: -13.288165092468262
    6. ',j' → logprob: -14.538165092468262
    7. ',
' → logprob: -15.038165092468262
    8. ':i' → logprob: -15.788165092468262
    9. '   ' → logprob: -16.038166046142578
    10. '，' → logprob: -16.288166046142578

Token 101: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002476135268807411
    2. ' i' → logprob: -6.002476215362549
    3. '	i' → logprob: -14.50247573852539
    4. ' ' → logprob: -17.25247573852539
    5. ')i' → logprob: -19.12747573852539
    6. ' ' → logprob: -19.50247573852539
    7. '   ' → logprob: -20.37747573852539
    8. '*i' → logprob: -20.37747573852539
    9. '  ' → logprob: -20.62747573852539
    10. ')' → logprob: -20.62747573852539

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00037895687273703516
    2. ')' → logprob: -8.375378608703613
    3. '):
' → logprob: -9.000378608703613
    4. ':' → logprob: -11.500378608703613
    5. ',' → logprob: -11.750378608703613
    6. ' ):' → logprob: -12.250378608703613
    7. '):
' → logprob: -14.500378608703613
    8. ',i' → logprob: -14.875378608703613
    9. '*i' → logprob: -15.750378608703613
    10. ']:' → logprob: -15.875378608703613

Token 103: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8229825496673584
    2. ' ' → logprob: -1.3229825496673584
    3. 'spf' → logprob: -2.4479825496673584
    4. '<|end|>' → logprob: -3.3229825496673584
    5. '               ' → logprob: -3.5729825496673584
    6. ')' → logprob: -3.9479825496673584
    7. 'sp' → logprob: -4.0729827880859375
    8. '           ' → logprob: -4.4479827880859375
    9. '            
' → logprob: -4.5729827880859375
    10. 'i' → logprob: -4.6979827880859375

Token 104: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20720787346363068
    2. 'spf' → logprob: -1.9572079181671143
    3. ' if' → logprob: -3.0822079181671143
    4. 'sp' → logprob: -11.957207679748535
    5. '```' → logprob: -12.082207679748535
    6. '0' → logprob: -12.332207679748535
    7. ' ' → logprob: -12.457207679748535
    8. ' 
' → logprob: -12.707207679748535
    9. 'i' → logprob: -13.582207679748535
    10. 'ifl' → logprob: -13.832207679748535

Token 105: ' sp' (ID: 1014)
  Prédit: 'spf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spf' → logprob: -0.07891049981117249
    2. ' sp' → logprob: -2.5789105892181396
    3. '	sp' → logprob: -10.953910827636719
    4. '(sp' → logprob: -14.203910827636719
    5. ' ' → logprob: -14.203910827636719
    6. 'spd' → logprob: -14.453910827636719
    7. ' SPF' → logprob: -14.703910827636719
    8. 'sp' → logprob: -15.828910827636719
    9. '   ' → logprob: -16.20391082763672
    10. '```' → logprob: -16.20391082763672

Token 106: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00016241880075540394
    2. '[j' → logprob: -8.750162124633789
    3. 'fj' → logprob: -12.750162124633789
    4. 'jf' → logprob: -14.750162124633789
    5. 'pf' → logprob: -14.875162124633789
    6. 'ф' → logprob: -15.250162124633789
    7. '```' → logprob: -17.37516212463379
    8. '[' → logprob: -17.37516212463379
    9. '[f' → logprob: -17.62516212463379
    10. 'j' → logprob: -18.12516212463379

Token 107: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.625003814697266
    3. 'j' → logprob: -15.250003814697266
    4. '[i' → logprob: -17.250003814697266
    5. '[js' → logprob: -17.250003814697266
    6. '```' → logprob: -17.625003814697266
    7. '[
' → logprob: -18.625003814697266
    8. '\[' → logprob: -19.625003814697266
    9. ' [' → logprob: -19.875003814697266
    10. '][' → logprob: -20.500003814697266

Token 108: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.649071216583252
    2. '==' → logprob: -1.274071216583252
    3. ']' → logprob: -1.649071216583252
    4. ' ==' → logprob: -5.524071216583252
    5. ')==' → logprob: -7.399071216583252
    6. ')' → logprob: -7.649071216583252
    7. '[j' → logprob: -8.649070739746094
    8. '']==' → logprob: -8.649070739746094
    9. '```' → logprob: -10.274070739746094
    10. '[' → logprob: -10.399070739746094

Token 109: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.034538377076387405
    2. ' ==' → logprob: -3.4095382690429688
    3. ']==' → logprob: -7.659538269042969
    4. '[j' → logprob: -8.159538269042969
    5. ')==' → logprob: -9.534538269042969
    6. '==
' → logprob: -10.909538269042969
    7. '```' → logprob: -11.159538269042969
    8. '=' → logprob: -11.534538269042969
    9. '[' → logprob: -11.909538269042969
    10. '===' → logprob: -12.784538269042969

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. ' ' → logprob: -20.750335693359375
    4. '۰' → logprob: -21.250335693359375
    5. '   ' → logprob: -22.375335693359375
    6. '０' → logprob: -22.375335693359375
    7. '```' → logprob: -23.000335693359375
    8. '=' → logprob: -23.375335693359375
    9. '٠' → logprob: -24.000335693359375
    10. '०' → logprob: -24.250335693359375

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -21.125001907348633
    4. '   ' → logprob: -22.250001907348633
    5. '０' → logprob: -22.625001907348633
    6. '०' → logprob: -23.375001907348633
    7. ' ' → logprob: -23.625001907348633
    8. '```' → logprob: -24.250001907348633
    9. '০' → logprob: -24.375001907348633
    10. 'i' → logprob: -24.375001907348633

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5143811702728271
    2. '=' → logprob: -1.8893811702728271
    3. ':
' → logprob: -2.514381170272827
    4. ')' → logprob: -2.764381170272827
    5. '               ' → logprob: -2.764381170272827
    6. '):
' → logprob: -4.139381408691406
    7. '<|end|>' → logprob: -4.389381408691406
    8. '):' → logprob: -5.514381408691406
    9. ' =' → logprob: -6.389381408691406
    10. ',' → logprob: -6.389381408691406

Token 113: '               ' (ID: 506)
  Prédit: 'spf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spf' → logprob: -0.01784108392894268
    2. '               ' → logprob: -4.14284086227417
    3. 'sp' → logprob: -7.14284086227417
    4. 'j' → logprob: -7.64284086227417
    5. 'opf' → logprob: -9.392841339111328
    6. '                
' → logprob: -9.892841339111328
    7. 'jf' → logprob: -10.017841339111328
    8. 'jsp' → logprob: -10.142841339111328
    9. '	sp' → logprob: -10.142841339111328
    10. ' sp' → logprob: -10.267841339111328

Token 114: ' sp' (ID: 1014)
  Prédit: 'spf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spf' → logprob: -1.5928495486150496e-05
    2. 'sp' (adapté à ' sp') → logprob: -11.125016212463379
    3. 'spd' → logprob: -14.625016212463379
    4. 'spi' → logprob: -15.250016212463379
    5. 'spo' → logprob: -16.000015258789062
    6. ' sp' → logprob: -16.000015258789062
    7. 'ssp' → logprob: -16.250015258789062
    8. 'spa' → logprob: -17.125015258789062
    9. 'opf' → logprob: -17.500015258789062
    10. '	sp' → logprob: -17.625015258789062

Token 115: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2519386410713196
    2. '[j' → logprob: -1.5019385814666748
    3. '[f' → logprob: -12.626938819885254
    4. 'fj' → logprob: -12.876938819885254
    5. 'j' → logprob: -13.126938819885254
    6. '```' → logprob: -14.876938819885254
    7. '[' → logprob: -15.001938819885254
    8. '[i' → logprob: -15.626938819885254
    9. 'ф' → logprob: -15.626938819885254
    10. ' f' → logprob: -15.876938819885254

Token 116: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. '[i' → logprob: -17.375001907348633
    4. 'j' → logprob: -18.250001907348633
    5. '\[' → logprob: -19.125001907348633
    6. '```' → logprob: -19.375001907348633
    7. '[js' → logprob: -19.500001907348633
    8. '[int' → logprob: -21.125001907348633
    9. '[
' → logprob: -21.875001907348633
    10. '	j' → logprob: -22.250001907348633

Token 117: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5154995918273926
    2. ']' → logprob: -1.3904995918273926
    3. ' =' → logprob: -1.8904995918273926
    4. ']=' → logprob: -6.140499591827393
    5. ')' → logprob: -7.640499591827393
    6. '=j' → logprob: -9.265499114990234
    7. ' ]' → logprob: -9.515499114990234
    8. '[j' → logprob: -10.515499114990234
    9. ')=' → logprob: -11.390499114990234
    10. 'j' → logprob: -12.890499114990234

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2626047134399414
    2. '[j' → logprob: -1.5126047134399414
    3. ' =' → logprob: -4.637604713439941
    4. '=j' → logprob: -7.012604713439941
    5. '[' → logprob: -10.387604713439941
    6. '＝' → logprob: -13.637604713439941
    7. '=
' → logprob: -13.887604713439941
    8. ']=' → logprob: -14.012604713439941
    9. ']' → logprob: -14.512604713439941
    10. '[js' → logprob: -14.762604713439941

Token 119: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033558503491804004
    2. ' i' → logprob: -8.000335693359375
    3. '	i' → logprob: -16.625335693359375
    4. ' ' → logprob: -19.500335693359375
    5. ''i' → logprob: -19.750335693359375
    6. '*i' → logprob: -20.250335693359375
    7. '%i' → logprob: -20.250335693359375
    8. '```' → logprob: -20.375335693359375
    9. ')i' → logprob: -20.500335693359375
    10. '<|end|>' → logprob: -20.750335693359375

Token 120: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08057260513305664
    2. '<|end|>' → logprob: -3.5805726051330566
    3. 'for' → logprob: -3.7055726051330566
    4. ')' → logprob: -5.205572605133057
    5. '```' → logprob: -5.705572605133057
    6. '

' → logprob: -5.705572605133057
    7. 'def' → logprob: -5.830572605133057
    8. ' 
' → logprob: -5.955572605133057
    9. 'n' → logprob: -6.080572605133057
    10. '#' → logprob: -6.205572605133057

Token 121: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.7032508850097656
    2. 'div' → logprob: -2.0782508850097656
    3. 'def' → logprob: -2.0782508850097656
    4. 'result' → logprob: -2.3282508850097656
    5. 'prime' → logprob: -2.7032508850097656
    6. 'factor' → logprob: -2.7032508850097656
    7. 'res' → logprob: -2.9532508850097656
    8. 'fact' → logprob: -3.0782508850097656
    9. 'ans' → logprob: -3.5782508850097656
    10. 'freq' → logprob: -3.5782508850097656

Token 122: ' prime' (ID: 9197)
  Prédit: ' factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.10610657930374146
    2. ' prime' → logprob: -2.3561065196990967
    3. 'factor' → logprob: -5.356106758117676
    4. 'prime' → logprob: -7.731106758117676
    5. ' get' → logprob: -7.856106758117676
    6. '_factor' → logprob: -9.356106758117676
    7. ' ' → logprob: -9.481106758117676
    8. ' factorial' → logprob: -10.106106758117676
    9. ' fact' → logprob: -10.481106758117676
    10. ' f' → logprob: -10.731106758117676

Token 123: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.5803948044776917
    2. '_factor' → logprob: -0.8303948044776917
    3. '_' → logprob: -5.455394744873047
    4. 'f' → logprob: -9.455394744873047
    5. '_fac' → logprob: -10.080394744873047
    6. '_fact' → logprob: -10.580394744873047
    7. 'factor' → logprob: -12.455394744873047
    8. '```' → logprob: -12.580394744873047
    9. ' _' → logprob: -12.705394744873047
    10. '_div' → logprob: -12.955394744873047

Token 124: 'actors' (ID: 37126)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.023742694407701492
    2. 'actors' → logprob: -4.39874267578125
    3. '_' → logprob: -4.64874267578125
    4. '_actor' → logprob: -6.89874267578125
    5. '_factor' → logprob: -7.77374267578125
    6. 'act' → logprob: -10.52374267578125
    7. '()' → logprob: -10.52374267578125
    8. '(' → logprob: -10.64874267578125
    9. '```' → logprob: -10.89874267578125
    10. '`' → logprob: -11.39874267578125

Token 125: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014695538207888603
    2. '(n' → logprob: -4.514695644378662
    3. '(x' → logprob: -5.889695644378662
    4. '(i' → logprob: -7.889695644378662
    5. '(a' → logprob: -8.264695167541504
    6. '(num' → logprob: -9.139695167541504
    7. '(A' → logprob: -10.264695167541504
    8. '(k' → logprob: -10.764695167541504
    9. '(
' → logprob: -10.889695167541504
    10. '(value' → logprob: -11.139695167541504

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015239100903272629
    2. '):
' → logprob: -6.751523971557617
    3. ')' → logprob: -8.001523971557617
    4. ' ):' → logprob: -11.501523971557617
    5. '):
' → logprob: -12.126523971557617
    6. ':' → logprob: -13.001523971557617
    7. ')：' → logprob: -15.251523971557617
    8. '):

' → logprob: -16.001523971557617
    9. '}:' → logprob: -16.251523971557617
    10. ',' → logprob: -16.626523971557617

Token 127: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20151986181735992
    2. '   ' → logprob: -2.0765199661254883
    3. '[]' → logprob: -2.9515199661254883
    4. '[' → logprob: -6.201519966125488
    5. ':
' → logprob: -7.201519966125488
    6. '[:]' → logprob: -7.701519966125488
    7. '[]
' → logprob: -7.701519966125488
    8. '():' → logprob: -7.951519966125488
    9. '):' → logprob: -9.201519966125488
    10. '(' → logprob: -9.326519966125488

Token 128: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.01686340570449829
    2. 'res' → logprob: -4.3918633460998535
    3. ' res' → logprob: -6.3918633460998535
    4. 'factor' → logprob: -6.5168633460998535
    5. '[]' → logprob: -7.6418633460998535
    6. 'result' → logprob: -7.7668633460998535
    7. 'fact' → logprob: -9.766863822937012
    8. ' []' → logprob: -9.891863822937012
    9. 'fac' → logprob: -9.891863822937012
    10. 'f' → logprob: -10.516863822937012

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602584570646286
    2. ' =' → logprob: -1.910258412361145
    3. '=[]' → logprob: -10.660258293151855
    4. ' ' → logprob: -12.910258293151855
    5. '[]' → logprob: -13.160258293151855
    6. '   ' → logprob: -13.285258293151855
    7. '={}' → logprob: -13.410258293151855
    8. '[' → logprob: -13.660258293151855
    9. '=[]
' → logprob: -14.285258293151855
    10. ',' → logprob: -14.660258293151855

Token 130: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16102449595928192
    2. '{}' → logprob: -1.9110244512557983
    3. ' []' → logprob: -7.161024570465088
    4. '[]
' → logprob: -11.03602409362793
    5. ' {}' → logprob: -12.28602409362793
    6. 'set' → logprob: -13.41102409362793
    7. '{}
' → logprob: -14.28602409362793
    8. '[]}' → logprob: -14.41102409362793
    9. '[]

' → logprob: -16.28602409362793
    10. 'dict' → logprob: -16.41102409362793

Token 131: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008647187612950802
    2. '(' → logprob: -4.7586469650268555
    3. '()
' → logprob: -11.008646965026855
    4. '(x' → logprob: -12.008646965026855
    5. '();' → logprob: -13.133646965026855
    6. '([]' → logprob: -13.758646965026855
    7. '()

' → logprob: -13.883646965026855
    8. '([' → logprob: -14.008646965026855
    9. ' ()' → logprob: -14.258646965026855
    10. '(){' → logprob: -14.258646965026855

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38335543870925903
    2. ':' → logprob: -2.0083553791046143
    3. '
' → logprob: -3.3833553791046143
    4. '(' → logprob: -3.6333553791046143
    5. ' ' → logprob: -3.7583553791046143
    6. ')' → logprob: -4.008355617523193
    7. '' → logprob: -4.633355617523193
    8. ' while' → logprob: -4.633355617523193
    9. '	while' → logprob: -4.758355617523193
    10. '    
' → logprob: -4.883355617523193

Token 133: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.35180070996284485
    2. 'while' (adapté à ' while') → logprob: -1.2268006801605225
    3. '	while' → logprob: -6.351800918579102
    4. ' ' → logprob: -6.976800918579102
    5. '   ' → logprob: -8.226800918579102
    6. ' 
' → logprob: -8.476800918579102
    7. '    
' → logprob: -9.476800918579102
    8. 'x' → logprob: -10.226800918579102
    9. '    ' → logprob: -10.601800918579102
    10. 'While' → logprob: -11.726800918579102

Token 134: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067154900170862675
    2. ' x' → logprob: -5.006715297698975
    3. '	x' → logprob: -15.881715774536133
    4. '(x' → logprob: -19.131715774536133
    5. 'sp' → logprob: -20.256715774536133
    6. ' ' → logprob: -20.256715774536133
    7. ' ' → logprob: -20.256715774536133
    8. '```' → logprob: -20.506715774536133
    9. 'spf' → logprob: -20.631715774536133
    10. '{x' → logprob: -20.881715774536133

Token 135: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3956086337566376
    2. ' >' → logprob: -1.14560866355896
    3. '%' → logprob: -5.895608425140381
    4. ' !=' → logprob: -6.395608425140381
    5. '>=' → logprob: -6.645608425140381
    6. '!=' → logprob: -6.770608425140381
    7. ' >=' → logprob: -6.895608425140381
    8. ' ' → logprob: -8.270608901977539
    9. ' %' → logprob: -8.270608901977539
    10. '">' → logprob: -9.520608901977539

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -17.375009536743164
    4. '>' → logprob: -18.250009536743164
    5. '
' → logprob: -18.750009536743164
    6. '`' → logprob: -19.875009536743164
    7. '=' → logprob: -20.000009536743164
    8. ' ' → logprob: -20.125009536743164
    9. '   ' → logprob: -20.500009536743164
    10. '0' → logprob: -20.500009536743164

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -16.875001907348633
    4. '
' → logprob: -18.250001907348633
    5. '>' → logprob: -18.750001907348633
    6. '`' → logprob: -19.750001907348633
    7. '１' → logprob: -20.000001907348633
    8. '=' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.375001907348633
    10. '``' → logprob: -20.625001907348633

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006968740373849869
    2. ':
' → logprob: -5.131968975067139
    3. '   ' → logprob: -7.006968975067139
    4. ' :' → logprob: -9.88196849822998
    5. ',' → logprob: -10.25696849822998
    6. '):' → logprob: -11.50696849822998
    7. '       ' → logprob: -11.75696849822998
    8. ' and' → logprob: -12.38196849822998
    9. ' ' → logprob: -12.75696849822998
    10. ')' → logprob: -12.75696849822998

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.413919061422348
    2. ' 
' → logprob: -1.6639190912246704
    3. '   ' → logprob: -2.413918972015381
    4. '    
' → logprob: -3.913918972015381
    5. '
' → logprob: -4.538918972015381
    6. '        
' → logprob: -4.913918972015381
    7. ' ' → logprob: -5.038918972015381
    8. '    ' → logprob: -5.413918972015381
    9. '   
' → logprob: -6.288918972015381
    10. '  
' → logprob: -6.288918972015381

Token 140: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.020152796059846878
    2. ' factors' → logprob: -4.020152568817139
    3. ' f' → logprob: -6.270152568817139
    4. 'p' → logprob: -9.895153045654297
    5. '
' → logprob: -10.645153045654297
    6. '	f' → logprob: -11.895153045654297
    7. ' p' → logprob: -12.145153045654297
    8. '   ' → logprob: -12.270153045654297
    9. 'factor' → logprob: -12.270153045654297
    10. '```' → logprob: -12.770153045654297

Token 141: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005239564459770918
    2. '.' → logprob: -5.255239486694336
    3. 'add' → logprob: -12.505239486694336
    4. '.update' → logprob: -14.130239486694336
    5. '.=' → logprob: -14.630239486694336
    6. ' .' → logprob: -14.755239486694336
    7. '.Add' → logprob: -15.255239486694336
    8. '.remove' → logprob: -16.880239486694336
    9. '.append' → logprob: -17.130239486694336
    10. '.ad' → logprob: -17.380239486694336

Token 142: '(sp' (ID: 33591)
  Prédit: '(sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sp' → logprob: -0.0015028368216007948
    2. '(' → logprob: -6.501502990722656
    3. '(sf' → logprob: -15.126502990722656
    4. '(x' → logprob: -16.251502990722656
    5. 'spf' → logprob: -16.751502990722656
    6. '(
' → logprob: -17.251502990722656
    7. '((' → logprob: -17.876502990722656
    8. ' (' → logprob: -19.126502990722656
    9. '/sp' → logprob: -19.876502990722656
    10. '(fp' → logprob: -20.376502990722656

Token 143: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2664456789934775e-06
    2. 'x' → logprob: -14.875000953674316
    3. '[x' → logprob: -15.250000953674316
    4. 'F' → logprob: -15.625000953674316
    5. '```' → logprob: -15.875000953674316
    6. '[' → logprob: -16.250001907348633
    7. '[i' → logprob: -16.875001907348633
    8. '[f' → logprob: -17.125001907348633
    9. '
' → logprob: -17.250001907348633
    10. 'ф' → logprob: -17.500001907348633

Token 144: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.0280383548888494e-06
    2. 'x' → logprob: -14.375000953674316
    3. '[' → logprob: -14.875000953674316
    4. '[
' → logprob: -18.250001907348633
    5. '```' → logprob: -18.500001907348633
    6. ' [' → logprob: -19.375001907348633
    7. '(x' → logprob: -19.750001907348633
    8. ')x' → logprob: -20.500001907348633
    9. '{x' → logprob: -21.125001907348633
    10. '[i' → logprob: -21.250001907348633

Token 145: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -6.742448022123426e-05
    2. '])
' → logprob: -10.250067710876465
    3. ' ])' → logprob: -11.000067710876465
    4. ']' → logprob: -11.250067710876465
    5. '[x' → logprob: -14.000067710876465
    6. ')' → logprob: -14.000067710876465
    7. '[' → logprob: -15.125067710876465
    8. '])
' → logprob: -16.50006675720215
    9. '[i' → logprob: -16.75006675720215
    10. '])

' → logprob: -16.87506675720215

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4035989046096802
    2. 'x' → logprob: -1.2785989046096802
    3. ' x' → logprob: -3.0285987854003906
    4. '   ' → logprob: -5.778598785400391
    5. '        
' → logprob: -7.653598785400391
    6. '    
' → logprob: -7.903598785400391
    7. ' 
' → logprob: -8.02859878540039
    8. ' ' → logprob: -8.27859878540039
    9. '	' → logprob: -8.77859878540039
    10. '	x' → logprob: -8.77859878540039

Token 147: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -4.5491004129871726e-05
    2. ' x' → logprob: -10.000045776367188
    3. '	x' → logprob: -19.125045776367188
    4. '       ' → logprob: -20.375045776367188
    5. ')x' → logprob: -23.125045776367188
    6. '
' → logprob: -23.250045776367188
    7. '   ' → logprob: -23.625045776367188
    8. ' ' → logprob: -24.250045776367188
    9. '"x' → logprob: -24.250045776367188
    10. '           ' → logprob: -24.500045776367188

Token 148: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.16357922554016113
    2. ' //' → logprob: -1.9135792255401611
    3. '//' → logprob: -5.788578987121582
    4. '=' → logprob: -8.163578987121582
    5. ' =' → logprob: -13.288578987121582
    6. '//
' → logprob: -16.1635799407959
    7. ' ' → logprob: -16.4135799407959
    8. '/=' → logprob: -16.7885799407959
    9. ')//' → logprob: -16.9135799407959
    10. '```' → logprob: -16.9135799407959

Token 149: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.45848218582978e-06
    2. '=_' → logprob: -14.50000286102295
    3. '=.' → logprob: -14.62500286102295
    4. '='' → logprob: -15.25000286102295
    5. '=

' → logprob: -15.37500286102295
    6. '=s' → logprob: -15.62500286102295
    7. '=}' → logprob: -15.62500286102295
    8. '=:' → logprob: -16.125001907348633
    9. '=sys' → logprob: -16.125001907348633
    10. '=
' → logprob: -16.625001907348633

Token 150: ' sp' (ID: 1014)
  Prédit: 'spf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spf' → logprob: -3.070975071750581e-05
    2. ' sp' → logprob: -10.500030517578125
    3. 'sp' → logprob: -13.250030517578125
    4. 'spd' → logprob: -14.250030517578125
    5. 'opf' → logprob: -14.750030517578125
    6. '	sp' → logprob: -16.875030517578125
    7. 'sf' → logprob: -17.250030517578125
    8. 'pf' → logprob: -17.500030517578125
    9. ' ' → logprob: -17.500030517578125
    10. 's' → logprob: -17.500030517578125

Token 151: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.017797283828258514
    2. 'p' → logprob: -4.517797470092773
    3. 'pf' → logprob: -5.017797470092773
    4. 'ф' → logprob: -10.767797470092773
    5. '[f' → logprob: -10.892797470092773
    6. 'A' → logprob: -11.142797470092773
    7. 'factor' → logprob: -11.267797470092773
    8. '[' → logprob: -11.892797470092773
    9. 'fp' → logprob: -12.017797470092773
    10. '_f' → logprob: -12.017797470092773

Token 152: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.20586878061294556
    2. '[' → logprob: -2.205868721008301
    3. 'x' → logprob: -2.580868721008301
    4. 'spf' → logprob: -9.0808687210083
    5. '[f' → logprob: -9.7058687210083
    6. 'xf' → logprob: -11.9558687210083
    7. 'sp' → logprob: -12.5808687210083
    8. '[s' → logprob: -12.9558687210083
    9. '[
' → logprob: -13.5808687210083
    10. '[i' → logprob: -13.7058687210083

Token 153: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012782112462446094
    2. ']' → logprob: -6.751278400421143
    3. '])' → logprob: -9.876277923583984
    4. ')
' → logprob: -10.751277923583984
    5. ' )' → logprob: -11.001277923583984
    6. '）' → logprob: -11.751277923583984
    7. '[' → logprob: -12.251277923583984
    8. '<|end|>' → logprob: -13.751277923583984
    9. '}' → logprob: -14.001277923583984
    10. '>' → logprob: -14.501277923583984

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23751598596572876
    2. ' return' → logprob: -1.862515926361084
    3. 'return' → logprob: -3.362515926361084
    4. ' 
' → logprob: -4.487515926361084
    5. '    
' → logprob: -5.487515926361084
    6. ' ' → logprob: -6.362515926361084
    7. '\n' → logprob: -6.612515926361084
    8. ')' → logprob: -7.362515926361084
    9. ':return' → logprob: -7.737515926361084
    10. '    ' → logprob: -7.862515926361084

Token 155: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6417186260223389
    2. ' return' → logprob: -0.7667186260223389
    3. '   ' → logprob: -5.391718864440918
    4. ' 
' → logprob: -6.141718864440918
    5. ' ' → logprob: -6.266718864440918
    6. '	return' → logprob: -8.266718864440918
    7. '
' → logprob: -9.391718864440918
    8. '    
' → logprob: -10.266718864440918
    9. ':return' → logprob: -10.266718864440918
    10. '  ' → logprob: -11.266718864440918

Token 156: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.16023437678813934
    2. ' factors' → logprob: -1.9102343320846558
    3. 'factor' → logprob: -11.785234451293945
    4. 'fac' → logprob: -13.785234451293945
    5. ' f' → logprob: -13.910234451293945
    6. 'fact' → logprob: -14.910234451293945
    7. ' ' → logprob: -16.160234451293945
    8. 'facts' → logprob: -16.160234451293945
    9. '	f' → logprob: -16.535234451293945
    10. ' factores' → logprob: -17.160234451293945

Token 157: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.031413789838552475
    2. 'max' → logprob: -4.906413555145264
    3. 'div' → logprob: -5.031413555145264
    4. 'count' → logprob: -5.656413555145264
    5. 'ans' → logprob: -6.281413555145264
    6. 'counts' → logprob: -6.406413555145264
    7. 'result' → logprob: -6.906413555145264
    8. 'used' → logprob: -7.031413555145264
    9. 'answer' → logprob: -7.031413555145264
    10. 'visited' → logprob: -7.156413555145264

Token 158: 'parent' (ID: 4903)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09209075570106506
    2. 'from' → logprob: -3.9670908451080322
    3. 'count' → logprob: -4.467090606689453
    4. 'div' → logprob: -4.592090606689453
    5. 'ans' → logprob: -4.842090606689453
    6. 'max' → logprob: -4.967090606689453
    7. 'last' → logprob: -5.467090606689453
    8. 'color' → logprob: -5.842090606689453
    9. 'graph' → logprob: -5.967090606689453
    10. 'left' → logprob: -6.342090606689453

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03399961441755295
    2. '=' → logprob: -3.4089996814727783
    3. ' =[' → logprob: -8.4089994430542
    4. '[' → logprob: -9.5339994430542
    5. '=[' → logprob: -10.5339994430542
    6. '_' → logprob: -11.2839994430542
    7. ' ' → logprob: -11.4089994430542
    8. '=[]' → logprob: -12.7839994430542
    9. ',' → logprob: -13.2839994430542
    10. 's' → logprob: -14.5339994430542

Token 160: ' list' (ID: 1562)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7266106605529785
    2. '[list' → logprob: -1.4766106605529785
    3. 'list' → logprob: -1.7266106605529785
    4. '[' → logprob: -2.2266106605529785
    5. '{}' → logprob: -7.1016106605529785
    6. ' [-' → logprob: -7.6016106605529785
    7. ' [' → logprob: -7.6016106605529785
    8. ' list' → logprob: -8.22661018371582
    9. '{' → logprob: -9.35161018371582
    10. '[i' → logprob: -10.35161018371582

Token 161: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.5570885807392187e-05
    2. 'range' → logprob: -11.250015258789062
    3. '(' → logprob: -13.250015258789062
    4. '```' → logprob: -14.375015258789062
    5. '`' → logprob: -16.625015258789062
    6. '[' → logprob: -17.000015258789062
    7. '	range' → logprob: -17.500015258789062
    8. '=' → logprob: -17.875015258789062
    9. ' range' → logprob: -18.375015258789062
    10. ')' → logprob: -18.625015258789062

Token 162: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001691727084107697
    2. 'N' → logprob: -6.876691818237305
    3. '(MAX' → logprob: -7.376691818237305
    4. '(' → logprob: -10.376691818237305
    5. 'MAX' → logprob: -14.126691818237305
    6. '(n' → logprob: -15.501691818237305
    7. ')' → logprob: -15.626691818237305
    8. '(NUM' → logprob: -16.001691818237305
    9. '	N' → logprob: -16.126691818237305
    10. ' N' → logprob: -16.126691818237305

Token 163: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.5954712075181305e-05
    2. '))
' → logprob: -11.000036239624023
    3. ')' → logprob: -11.375036239624023
    4. ' ))' → logprob: -12.000036239624023
    5. '+' → logprob: -13.875036239624023
    6. ')))' → logprob: -15.375036239624023
    7. '))

' → logprob: -15.500036239624023
    8. ' ' → logprob: -16.125036239624023
    9. '))
' → logprob: -17.750036239624023
    10. '*' → logprob: -18.125036239624023

Token 164: 'def' (ID: 1314)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.3148907721042633
    2. 'def' → logprob: -1.314890742301941
    3. 'size' → logprob: -6.4398908615112305
    4. '
' → logprob: -11.56489086151123
    5. '```' → logprob: -11.56489086151123
    6. 'depth' → logprob: -12.43989086151123
    7. ' rank' → logprob: -13.06489086151123
    8. ' def' → logprob: -13.68989086151123
    9. ' 
' → logprob: -13.93989086151123
    10. '_rank' → logprob: -14.06489086151123

Token 165: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.001356667373329401
    2. ' def' → logprob: -6.751356601715088
    3. ' ' → logprob: -9.126357078552246
    4. 'find' → logprob: -9.876357078552246
    5. ' fin' → logprob: -11.751357078552246
    6. 'def' → logprob: -12.376357078552246
    7. '	find' → logprob: -12.376357078552246
    8. '_find' → logprob: -12.751357078552246
    9. ' parent' → logprob: -13.251357078552246
    10. ' union' → logprob: -13.376357078552246

Token 166: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005568959750235081
    2. '(parent' → logprob: -5.880568981170654
    3. '_parent' → logprob: -6.005568981170654
    4. '(x' → logprob: -9.005568504333496
    5. ' (' → logprob: -9.755568504333496
    6. 'parent' → logprob: -10.505568504333496
    7. '(u' → logprob: -11.005568504333496
    8. '_' → logprob: -11.005568504333496
    9. '(i' → logprob: -11.255568504333496
    10. '(p' → logprob: -11.255568504333496

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00036537862615659833
    2. ')' → logprob: -8.500365257263184
    3. '):
' → logprob: -8.875365257263184
    4. ' ):' → logprob: -10.875365257263184
    5. '(x' → logprob: -13.375365257263184
    6. '():' → logprob: -14.125365257263184
    7. '(' → logprob: -14.750365257263184
    8. '):
' → logprob: -15.250365257263184
    9. ':' → logprob: -16.2503662109375
    10. '):

' → logprob: -16.2503662109375

Token 168: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1359959989786148
    2. 'if' → logprob: -2.135996103286743
    3. '   ' → logprob: -4.885995864868164
    4. ' while' → logprob: -6.885995864868164
    5. '	if' → logprob: -8.260995864868164
    6. 'while' → logprob: -8.760995864868164
    7. ' 
' → logprob: -11.135995864868164
    8. '
' → logprob: -11.760995864868164
    9. '	while' → logprob: -12.135995864868164
    10. ' return' → logprob: -13.135995864868164

Token 169: ' while' (ID: 2049)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2617112100124359
    2. ' parent' → logprob: -2.0117111206054688
    3. 'if' → logprob: -3.2617111206054688
    4. 'x' → logprob: -3.5117111206054688
    5. ' x' → logprob: -3.8867111206054688
    6. ' if' → logprob: -4.886711120605469
    7. '(parent' → logprob: -9.886711120605469
    8. '0' → logprob: -10.011711120605469
    9. '	parent' → logprob: -10.386711120605469
    10. 'return' → logprob: -10.636711120605469

Token 170: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.001198562909848988
    2. ' parent' → logprob: -6.751198768615723
    3. 'x' → logprob: -10.501198768615723
    4. '(parent' → logprob: -14.251198768615723
    5. ' x' → logprob: -15.751198768615723
    6. '	parent' → logprob: -17.251197814941406
    7. '_parent' → logprob: -19.501197814941406
    8. ',parent' → logprob: -20.126197814941406
    9. '[parent' → logprob: -20.126197814941406
    10. 'Parent' → logprob: -20.501197814941406

Token 171: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.250007629394531
    3. '[parent' → logprob: -13.000007629394531
    4. 'x' → logprob: -16.00000762939453
    5. '[
' → logprob: -16.62500762939453
    6. ' [' → logprob: -18.37500762939453
    7. '[i' → logprob: -18.62500762939453
    8. '```' → logprob: -19.37500762939453
    9. '
' → logprob: -19.87500762939453
    10. '[user' → logprob: -20.00000762939453

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023345639929175377
    2. ']!=' → logprob: -3.773345708847046
    3. '!=' → logprob: -9.273345947265625
    4. '[' → logprob: -12.898345947265625
    5. 'x' → logprob: -13.148345947265625
    6. ')!=' → logprob: -14.523345947265625
    7. '[
' → logprob: -15.648345947265625
    8. ' !=' → logprob: -15.648345947265625
    9. '']' → logprob: -15.898345947265625
    10. ' ]' → logprob: -15.898345947265625

Token 173: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0019940626807510853
    2. ' !=' → logprob: -6.2519941329956055
    3. '()!=' → logprob: -10.376994132995605
    4. ']!=' → logprob: -10.751994132995605
    5. ')!=' → logprob: -12.001994132995605
    6. '!==' → logprob: -13.251994132995605
    7. '!=-' → logprob: -13.751994132995605
    8. '!=(' → logprob: -13.751994132995605
    9. '[' → logprob: -14.251994132995605
    10. 'x' → logprob: -14.376994132995605

Token 174: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001584850688232109
    2. ' x' → logprob: -8.750158309936523
    3. '	x' → logprob: -17.375158309936523
    4. ')x' → logprob: -21.875158309936523
    5. '<|end|>' → logprob: -22.500158309936523
    6. '
' → logprob: -23.000158309936523
    7. '"x' → logprob: -23.125158309936523
    8. '$x' → logprob: -23.375158309936523
    9. 'parent' → logprob: -23.500158309936523
    10. '<x' → logprob: -23.625158309936523

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002534521510824561
    2. ':
' → logprob: -6.00253438949585
    3. '):' → logprob: -11.002534866333008
    4. ' :' → logprob: -11.377534866333008
    5. 'x' → logprob: -11.877534866333008
    6. ',' → logprob: -12.127534866333008
    7. ':x' → logprob: -12.127534866333008
    8. ')' → logprob: -12.752534866333008
    9. ' x' → logprob: -13.252534866333008
    10. '):
' → logprob: -13.502534866333008

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8892184495925903
    2. 'x' → logprob: -1.0142184495925903
    3. ' x' → logprob: -1.5142184495925903
    4. '   ' → logprob: -6.014218330383301
    5. ' parent' → logprob: -6.514218330383301
    6. 'parent' → logprob: -6.639218330383301
    7. '	x' → logprob: -7.639218330383301
    8. '
' → logprob: -7.764218330383301
    9. '	parent' → logprob: -9.0142183303833
    10. ' 
' → logprob: -11.2642183303833

Token 177: ' parent' (ID: 5980)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.024414530023932457
    2. ' x' → logprob: -4.524414539337158
    3. 'parent' (adapté à ' parent') → logprob: -4.524414539337158
    4. ' parent' → logprob: -6.024414539337158
    5. '	parent' → logprob: -11.6494140625
    6. '   ' → logprob: -12.2744140625
    7. '	x' → logprob: -12.5244140625
    8. '_parent' → logprob: -15.5244140625
    9. '.parent' → logprob: -15.6494140625
    10. '
' → logprob: -16.3994140625

Token 178: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00018029935017693788
    2. '[' → logprob: -8.7501802444458
    3. 'x' → logprob: -11.0001802444458
    4. '[
' → logprob: -12.8751802444458
    5. '=' → logprob: -13.5001802444458
    6. '[parent' → logprob: -15.0001802444458
    7. ' =' → logprob: -15.3751802444458
    8. '```' → logprob: -15.8751802444458
    9. '(x' → logprob: -16.125181198120117
    10. ' [' → logprob: -16.625181198120117

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0065470971167087555
    2. '=' → logprob: -5.506546974182129
    3. ']=' → logprob: -6.006546974182129
    4. ' =' → logprob: -13.006546974182129
    5. ' ]' → logprob: -14.256546974182129
    6. ')' → logprob: -15.881546974182129
    7. 'x' → logprob: -17.006547927856445
    8. ']==' → logprob: -17.506547927856445
    9. ']+=' → logprob: -17.631547927856445
    10. ']!=' → logprob: -18.006547927856445

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. '＝' → logprob: -17.881715774536133
    4. '=x' → logprob: -19.381715774536133
    5. ' ' → logprob: -20.506715774536133
    6. '=
' → logprob: -20.506715774536133
    7. '=

' → logprob: -20.756715774536133
    8. ',' → logprob: -21.381715774536133
    9. '.=' → logprob: -21.381715774536133
    10. ')=' → logprob: -22.381715774536133

Token 181: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0001234428636962548
    2. ' parent' → logprob: -9.000123023986816
    3. '	parent' → logprob: -17.500123977661133
    4. '(parent' → logprob: -19.250123977661133
    5. '[parent' → logprob: -20.375123977661133
    6. ',parent' → logprob: -21.875123977661133
    7. '.parent' → logprob: -22.625123977661133
    8. '_parent' → logprob: -22.875123977661133
    9. 'paren' → logprob: -23.750123977661133
    10. 'Parent' → logprob: -24.250123977661133

Token 182: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -2.236549335066229e-05
    2. 'parent' → logprob: -10.750021934509277
    3. '[' → logprob: -14.125021934509277
    4. '(parent' → logprob: -16.625022888183594
    5. '	parent' → logprob: -18.125022888183594
    6. ' parent' → logprob: -18.250022888183594
    7. '[player' → logprob: -18.500022888183594
    8. '[
' → logprob: -19.375022888183594
    9. '.parent' → logprob: -19.750022888183594
    10. ',parent' → logprob: -19.875022888183594

Token 183: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00043460296001285315
    2. 'x' → logprob: -7.750434398651123
    3. '[parent' → logprob: -12.625434875488281
    4. '[' → logprob: -15.750434875488281
    5. '[
' → logprob: -16.25043487548828
    6. ' x' → logprob: -16.25043487548828
    7. '{x' → logprob: -16.50043487548828
    8. '```' → logprob: -16.62543487548828
    9. '(x' → logprob: -16.87543487548828
    10. '	x' → logprob: -16.87543487548828

Token 184: ']]
' (ID: 29446)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3863860070705414
    2. '[x' → logprob: -1.6363860368728638
    3. ']' → logprob: -2.386385917663574
    4. ']]' → logprob: -3.386385917663574
    5. '(x' → logprob: -12.011385917663574
    6. ' x' → logprob: -12.136385917663574
    7. '[' → logprob: -13.761385917663574
    8. ' ]]' → logprob: -14.136385917663574
    9. ')]' → logprob: -14.136385917663574
    10. ' ]' → logprob: -14.636385917663574

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.296603798866272
    2. 'x' → logprob: -1.921603798866272
    3. '   ' → logprob: -2.4216036796569824
    4. ' x' → logprob: -3.9216036796569824
    5. '	x' → logprob: -6.546603679656982
    6. '     ' → logprob: -9.92160415649414
    7. 'return' → logprob: -10.29660415649414
    8. ',' → logprob: -10.42160415649414
    9. '	' → logprob: -10.54660415649414
    10. '           ' → logprob: -10.67160415649414

Token 186: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00015860427811276168
    2. ' x' → logprob: -8.750158309936523
    3. '	x' → logprob: -15.625158309936523
    4. '   ' → logprob: -18.125158309936523
    5. ')x' → logprob: -22.000158309936523
    6. '       ' → logprob: -22.500158309936523
    7. ' ' → logprob: -22.875158309936523
    8. '=' → logprob: -23.000158309936523
    9. '=x' → logprob: -23.000158309936523
    10. '
' → logprob: -23.125158309936523

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '=

' → logprob: -17.625709533691406
    4. '=
' → logprob: -18.375709533691406
    5. '＝' → logprob: -19.625709533691406
    6. '.=' → logprob: -19.875709533691406
    7. ')' → logprob: -20.125709533691406
    8. ' ' → logprob: -20.125709533691406
    9. '=}' → logprob: -20.375709533691406
    10. ',' → logprob: -20.375709533691406

Token 188: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.014163747429847717
    2. ' parent' → logprob: -4.264163970947266
    3. '	parent' → logprob: -16.264163970947266
    4. '(parent' → logprob: -16.639163970947266
    5. '[parent' → logprob: -18.389163970947266
    6. '_parent' → logprob: -19.139163970947266
    7. '.parent' → logprob: -19.264163970947266
    8. 'Parent' → logprob: -20.139163970947266
    9. ',parent' → logprob: -20.139163970947266
    10. ' ' → logprob: -20.514163970947266

Token 189: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.000918008794542402
    2. 'x' → logprob: -7.000917911529541
    3. '[parent' → logprob: -12.1259183883667
    4. 'parent' → logprob: -14.6259183883667
    5. '```' → logprob: -15.2509183883667
    6. '[' → logprob: -15.5009183883667
    7. '(x' → logprob: -16.750917434692383
    8. '[
' → logprob: -17.250917434692383
    9. ' x' → logprob: -17.500917434692383
    10. '	x' → logprob: -18.125917434692383

Token 190: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.055590689182281494
    2. ')' → logprob: -2.9305906295776367
    3. ']
' → logprob: -7.805590629577637
    4. ' ]' → logprob: -8.805590629577637
    5. ')
' → logprob: -9.930590629577637
    6. 'return' → logprob: -10.430590629577637
    7. ')]' → logprob: -10.430590629577637
    8. '])' → logprob: -11.430590629577637
    9. ')return' → logprob: -11.555590629577637
    10. ' )' → logprob: -11.555590629577637

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16098949313163757
    2. 'return' → logprob: -1.91098952293396
    3. ' return' → logprob: -7.410989284515381
    4. '	return' → logprob: -8.785989761352539
    5. ':return' → logprob: -13.160989761352539
    6. 'def' → logprob: -13.285989761352539
    7. '```' → logprob: -13.285989761352539
    8. '       ' → logprob: -13.910989761352539
    9. '
' → logprob: -15.035989761352539
    10. 'eturn' → logprob: -15.285989761352539

Token 192: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015135504072532058
    2. ' return' → logprob: -6.501513481140137
    3. '   ' → logprob: -11.751513481140137
    4. '	return' → logprob: -12.751513481140137
    5. 'x' → logprob: -15.126513481140137
    6. 'eturn' → logprob: -16.626514434814453
    7. ' ' → logprob: -17.001514434814453
    8. '
' → logprob: -17.376514434814453
    9. ':return' → logprob: -18.126514434814453
    10. '    
' → logprob: -18.751514434814453

Token 193: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011047814972698689
    2. ' x' → logprob: -4.511047840118408
    3. 'parent' → logprob: -17.13604736328125
    4. ' parent' → logprob: -19.13604736328125
    5. '	x' → logprob: -21.13604736328125
    6. '(x' → logprob: -21.63604736328125
    7. ' ' → logprob: -22.51104736328125
    8. ')x' → logprob: -23.76104736328125
    9. ' ' → logprob: -24.76104736328125
    10. '$x' → logprob: -24.88604736328125

Token 194: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002726601669564843
    2. '
' → logprob: -8.750272750854492
    3. '```' → logprob: -9.375272750854492
    4. ' def' → logprob: -11.375272750854492
    5. ' 
' → logprob: -11.750272750854492
    6. '  
' → logprob: -12.375272750854492
    7. '    
' → logprob: -13.375272750854492
    8. '<|end|>' → logprob: -14.125272750854492
    9. ')' → logprob: -14.375272750854492
    10. '#' → logprob: -14.625272750854492

Token 195: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.008129963040119e-06
    2. 'rank' → logprob: -12.625003814697266
    3. 'union' → logprob: -15.000003814697266
    4. ' def' → logprob: -15.500003814697266
    5. '```' → logprob: -16.625003814697266
    6. 'size' → logprob: -19.250003814697266
    7. 'parent' → logprob: -19.375003814697266
    8. '    
' → logprob: -19.625003814697266
    9. '
' → logprob: -20.125003814697266
    10. '	def' → logprob: -20.625003814697266

Token 196: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.007633247412741184
    2. 'union' → logprob: -5.007633209228516
    3. ' unite' → logprob: -7.007633209228516
    4. ' merge' → logprob: -11.757633209228516
    5. 'Union' → logprob: -13.507633209228516
    6. '_union' → logprob: -13.632633209228516
    7. ' ' → logprob: -14.007633209228516
    8. ' def' → logprob: -14.507633209228516
    9. 'un' → logprob: -15.132633209228516
    10. '	union' → logprob: -15.507633209228516

Token 197: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1168719157576561
    2. '(x' → logprob: -2.2418718338012695
    3. '(parent' → logprob: -5.9918718338012695
    4. ' (' → logprob: -6.8668718338012695
    5. '(a' → logprob: -7.7418718338012695
    6. '(
' → logprob: -10.74187183380127
    7. '(find' → logprob: -10.74187183380127
    8. '(u' → logprob: -12.36687183380127
    9. '(i' → logprob: -12.36687183380127
    10. '_parent' → logprob: -12.86687183380127

Token 198: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028482675552368164
    2. ' ,' → logprob: -5.877848148345947
    3. ',y' → logprob: -10.252848625183105
    4. ',x' → logprob: -12.002848625183105
    5. '‌,' → logprob: -14.877848625183105
    6. ',int' → logprob: -15.002848625183105
    7. ',b' → logprob: -15.377848625183105
    8. ',u' → logprob: -15.877848625183105
    9. ',
' → logprob: -16.00284767150879
    10. ',n' → logprob: -16.25284767150879

Token 199: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.5213274309644476e-05
    2. ')' → logprob: -11.750015258789062
    3. '):
' → logprob: -12.125015258789062
    4. ' ):' → logprob: -13.375015258789062
    5. '):
' → logprob: -16.250015258789062
    6. ':' → logprob: -16.250015258789062
    7. ')：' → logprob: -18.125015258789062
    8. '）：' → logprob: -19.000015258789062
    9. '}:' → logprob: -19.625015258789062
    10. '):

' → logprob: -19.625015258789062

Token 200: '   ' (ID: 271)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.2514187097549438
    2. ' find' → logprob: -1.3764187097549438
    3. 'x' → logprob: -1.5014187097549438
    4. ' x' → logprob: -2.1264185905456543
    5. '
' → logprob: -2.6264185905456543
    6. ' px' → logprob: -3.3764185905456543
    7. 'parent' → logprob: -5.501418590545654
    8. 'px' → logprob: -5.751418590545654
    9. ' parent' → logprob: -6.501418590545654
    10. ' 
' → logprob: -6.751418590545654

Token 201: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.1905241459608078
    2. 'px' → logprob: -2.190524101257324
    3. 'parent' → logprob: -3.440524101257324
    4. ' x' → logprob: -4.440524101257324
    5. ' px' → logprob: -4.440524101257324
    6. '
' → logprob: -5.315524101257324
    7. 'root' → logprob: -7.190524101257324
    8. ' parent' → logprob: -8.940524101257324
    9. 'rx' → logprob: -10.065524101257324
    10. '    
' → logprob: -10.565524101257324

Token 202: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058149490505456924
    2. '=' → logprob: -3.058149576187134
    3. '=find' → logprob: -4.683149337768555
    4. '_parent' → logprob: -9.058149337768555
    5. '_root' → logprob: -9.683149337768555
    6. 'root' → logprob: -10.058149337768555
    7. '=root' → logprob: -11.558149337768555
    8. ',' → logprob: -11.683149337768555
    9. 'parent' → logprob: -11.808149337768555
    10. 'find' → logprob: -12.183149337768555

Token 203: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0024780353996902704
    2. ' y' → logprob: -6.002478122711182
    3. '=' → logprob: -14.127477645874023
    4. '
' → logprob: -14.377477645874023
    5. ' =' → logprob: -15.127477645874023
    6. '<|end|>' → logprob: -15.252477645874023
    7. '=y' → logprob: -16.002477645874023
    8. 'find' → logprob: -16.127477645874023
    9. '=find' → logprob: -16.252477645874023
    10. ' ' → logprob: -16.377477645874023

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007877984084188938
    2. ' =' → logprob: -5.007877826690674
    3. '=find' → logprob: -6.757877826690674
    4. '＝' → logprob: -16.507877349853516
    5. '=get' → logprob: -16.757877349853516
    6. ')=' → logprob: -17.007877349853516
    7. '=}' → logprob: -18.882877349853516
    8. '=create' → logprob: -18.882877349853516
    9. '=f' → logprob: -19.007877349853516
    10. '=

' → logprob: -19.007877349853516

Token 205: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.02975662797689438
    2. ' find' → logprob: -3.529756546020508
    3. '(find' → logprob: -12.029756546020508
    4. '	find' → logprob: -16.654756546020508
    5. '=find' → logprob: -17.904756546020508
    6. ' ' → logprob: -19.904756546020508
    7. ')find' → logprob: -20.404756546020508
    8. '.find' → logprob: -21.779756546020508
    9. '   ' → logprob: -21.904756546020508
    10. '  ' → logprob: -22.154756546020508

Token 206: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.500003814697266
    3. 'x' → logprob: -14.750003814697266
    4. '(y' → logprob: -18.625003814697266
    5. ' (' → logprob: -19.375003814697266
    6. '(
' → logprob: -20.375003814697266
    7. '()' → logprob: -21.750003814697266
    8. ' x' → logprob: -22.500003814697266
    9. '((' → logprob: -22.625003814697266
    10. ',x' → logprob: -22.625003814697266

Token 207: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00025108797126449645
    2. ')' → logprob: -8.875250816345215
    3. ',' → logprob: -9.875250816345215
    4. ',y' → logprob: -10.500250816345215
    5. ' ),' → logprob: -11.000250816345215
    6. '(y' → logprob: -12.375250816345215
    7. '),(' → logprob: -12.875250816345215
    8. ')
' → logprob: -12.875250816345215
    9. ')y' → logprob: -13.000250816345215
    10. 'y' → logprob: -13.625250816345215

Token 208: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.3135988414287567
    2. ' find' → logprob: -1.313598871231079
    3. 'y' → logprob: -8.3135986328125
    4. ' y' → logprob: -9.3135986328125
    5. '(find' → logprob: -13.8135986328125
    6. '	find' → logprob: -14.9385986328125
    7. '=find' → logprob: -15.5635986328125
    8. ' ' → logprob: -16.8135986328125
    9. '.find' → logprob: -16.9385986328125
    10. '<|end|>' → logprob: -17.1885986328125

Token 209: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.06199278309941292
    2. 'y' → logprob: -2.811992883682251
    3. ' y' → logprob: -11.186992645263672
    4. '(' → logprob: -11.561992645263672
    5. '	y' → logprob: -14.561992645263672
    6. 'find' → logprob: -14.936992645263672
    7. '(find' → logprob: -15.311992645263672
    8. ' (' → logprob: -15.686992645263672
    9. ')y' → logprob: -15.936992645263672
    10. ')' → logprob: -16.686992645263672

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002639582962729037
    2. ')
' → logprob: -8.250264167785645
    3. ' )' → logprob: -13.125264167785645
    4. '<|end|>' → logprob: -14.875264167785645
    5. '))' → logprob: -16.750263214111328
    6. ')x' → logprob: -17.000263214111328
    7. ')
' → logprob: -17.500263214111328
    8. 'def' → logprob: -17.500263214111328
    9. '())' → logprob: -17.500263214111328
    10. '   ' → logprob: -17.625263214111328

Token 211: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15822263062000275
    2. '   ' → logprob: -2.1582226753234863
    3. ' if' → logprob: -3.5332226753234863
    4. '	if' → logprob: -7.158222675323486
    5. '
' → logprob: -7.533222675323486
    6. 'parent' → logprob: -9.158222198486328
    7. ')
' → logprob: -9.908222198486328
    8. ' 
' → logprob: -10.283222198486328
    9. '    
' → logprob: -10.908222198486328
    10. 'def' → logprob: -11.158222198486328

Token 212: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1761743277311325
    2. ' if' → logprob: -1.926174283027649
    3. 'x' → logprob: -4.926174163818359
    4. ' 
' → logprob: -5.551174163818359
    5. 'parent' → logprob: -6.176174163818359
    6. ' x' → logprob: -7.176174163818359
    7. '
' → logprob: -7.301174163818359
    8. ' parent' → logprob: -7.926174163818359
    9. '    
' → logprob: -8.17617416381836
    10. '   ' → logprob: -8.30117416381836

Token 213: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.10020699352025986
    2. 'x' → logprob: -2.3502070903778076
    3. '(x' → logprob: -15.975207328796387
    4. ' ' → logprob: -15.975207328796387
    5. '	x' → logprob: -16.47520637512207
    6. '_x' → logprob: -18.97520637512207
    7. ')x' → logprob: -19.10020637512207
    8. '   ' → logprob: -19.22520637512207
    9. '"x' → logprob: -19.60020637512207
    10. '<|end|>' → logprob: -19.60020637512207

Token 214: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02326318249106407
    2. ' !=' → logprob: -3.7732632160186768
    3. ']!=' → logprob: -12.523262977600098
    4. '()!=' → logprob: -12.648262977600098
    5. '!==' → logprob: -12.773262977600098
    6. ')!=' → logprob: -13.148262977600098
    7. '==' → logprob: -13.398262977600098
    8. '!=(' → logprob: -13.648262977600098
    9. '<>' → logprob: -14.023262977600098
    10. '!=-' → logprob: -14.273262977600098

Token 215: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048408225178719
    2. ' y' → logprob: -4.511048316955566
    3. '	y' → logprob: -14.386048316955566
    4. ' ' → logprob: -17.261049270629883
    5. ''y' → logprob: -17.511049270629883
    6. '   ' → logprob: -18.136049270629883
    7. '
' → logprob: -18.761049270629883
    8. '<|end|>' → logprob: -19.386049270629883
    9. '_y' → logprob: -19.511049270629883
    10. ',y' → logprob: -19.761049270629883

Token 216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015135504072532058
    2. ':
' → logprob: -6.501513481140137
    3. '=' → logprob: -12.501513481140137
    4. '):' → logprob: -13.001513481140137
    5. ')' → logprob: -13.501513481140137
    6. '   ' → logprob: -14.376513481140137
    7. ' :' → logprob: -14.501513481140137
    8. ',' → logprob: -14.751513481140137
    9. ' and' → logprob: -15.001513481140137
    10. '):
' → logprob: -15.126513481140137

Token 217: '       ' (ID: 309)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.1948232501745224
    2. '   ' → logprob: -1.9448232650756836
    3. 'parent' → logprob: -3.4448232650756836
    4. '       ' → logprob: -6.569823265075684
    5. '	parent' → logprob: -7.319823265075684
    6. '
' → logprob: -11.319823265075684
    7. ',parent' → logprob: -11.569823265075684
    8. '    
' → logprob: -13.069823265075684
    9. '(parent' → logprob: -13.194823265075684
    10. '_parent' → logprob: -13.319823265075684

Token 218: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.0019287518225610256
    2. ' parent' → logprob: -6.251928806304932
    3. '	parent' → logprob: -16.001928329467773
    4. '.parent' → logprob: -17.751928329467773
    5. '   ' → logprob: -18.126928329467773
    6. '
' → logprob: -18.251928329467773
    7. '_parent' → logprob: -18.251928329467773
    8. '[parent' → logprob: -18.501928329467773
    9. '(parent' → logprob: -18.876928329467773
    10. ',parent' → logprob: -19.001928329467773

Token 219: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.005235887598246336
    2. '[x' → logprob: -5.25523567199707
    3. '[parent' → logprob: -13.75523567199707
    4. '[' → logprob: -13.88023567199707
    5. 'y' → logprob: -17.13023567199707
    6. '```' → logprob: -17.38023567199707
    7. '[s' → logprob: -17.88023567199707
    8. '[root' → logprob: -18.25523567199707
    9. '[u' → logprob: -18.63023567199707
    10. '[user' → logprob: -19.00523567199707

Token 220: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012574045918881893
    2. ']=' → logprob: -4.637574195861816
    3. '=' → logprob: -5.887574195861816
    4. ' =' → logprob: -10.387574195861816
    5. ' ]' → logprob: -11.887574195861816
    6. ')' → logprob: -13.887574195861816
    7. '[' → logprob: -14.137574195861816
    8. '<|end|>' → logprob: -14.887574195861816
    9. ']+=' → logprob: -15.387574195861816
    10. ']
' → logprob: -15.637574195861816

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005237668287009001
    2. ' =' → logprob: -5.255237579345703
    3. '=x' → logprob: -12.505237579345703
    4. '＝' → logprob: -15.755237579345703
    5. '=y' → logprob: -17.255237579345703
    6. '=
' → logprob: -17.505237579345703
    7. '=s' → logprob: -18.255237579345703
    8. ')=' → logprob: -18.880237579345703
    9. '=user' → logprob: -19.005237579345703
    10. '=int' → logprob: -19.005237579345703

Token 222: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.2729995988775045e-06
    2. ' x' → logprob: -12.000006675720215
    3. '	x' → logprob: -21.7500057220459
    4. ')x' → logprob: -23.1250057220459
    5. '"x' → logprob: -23.6250057220459
    6. '>x' → logprob: -24.5000057220459
    7. '<|end|>' → logprob: -25.2500057220459
    8. '<x' → logprob: -25.3750057220459
    9. '%x' → logprob: -25.5000057220459
    10. '$x' → logprob: -25.7500057220459

Token 223: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: 'prime' (ID: 46441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008927369490265846
    2. 'from' → logprob: -5.758927345275879
    3. 'count' → logprob: -6.633927345275879
    4. 'result' → logprob: -7.633927345275879
    5. 'res' → logprob: -7.883927345275879
    6. 'answer' → logprob: -8.008927345275879
    7. 'component' → logprob: -8.008927345275879
    8. 'edges' → logprob: -8.008927345275879
    9. 'group' → logprob: -8.133927345275879
    10. 'last' → logprob: -8.258927345275879

Token 225: '_to' (ID: 5089)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.05833245813846588
    2. '_' → logprob: -4.058332443237305
    3. 'f' → logprob: -4.308332443237305
    4. '_to' → logprob: -4.558332443237305
    5. '_factor' → logprob: -5.308332443237305
    6. '_set' → logprob: -5.433332443237305
    7. 's' → logprob: -6.558332443237305
    8. '_sets' → logprob: -6.683332443237305
    9. '_indices' → logprob: -7.308332443237305
    10. '_map' → logprob: -7.558332443237305

Token 226: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.011805039830505848
    2. '_index' → logprob: -4.761805057525635
    3. 'idx' → logprob: -6.011805057525635
    4. 'node' → logprob: -7.761805057525635
    5. 'indices' → logprob: -8.761804580688477
    6. 'id' → logprob: -9.886804580688477
    7. '_nodes' → logprob: -10.386804580688477
    8. '_idx' → logprob: -10.761804580688477
    9. 'nodes' → logprob: -10.886804580688477
    10. '_node' → logprob: -11.511804580688477

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287720024585724
    2. '=' → logprob: -1.05377197265625
    3. '={}' → logprob: -9.92877197265625
    4. 's' → logprob: -11.55377197265625
    5. '[' → logprob: -12.42877197265625
    6. ')' → logprob: -13.55377197265625
    7. '_' → logprob: -13.67877197265625
    8. '{}' → logprob: -14.05377197265625
    9. ',' → logprob: -14.17877197265625
    10. '{' → logprob: -14.42877197265625

Token 228: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00012368128227535635
    2. 'dict' → logprob: -9.000123977661133
    3. '{' → logprob: -16.625123977661133
    4. '{})' → logprob: -17.375123977661133
    5. '{}
' → logprob: -17.750123977661133
    6. ' {}' → logprob: -18.000123977661133
    7. ' dict' → logprob: -18.000123977661133
    8. '[-' → logprob: -18.875123977661133
    9. '{}

' → logprob: -18.875123977661133
    10. '{-' → logprob: -19.000123977661133

Token 229: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00045379105722531676
    2. '{}' → logprob: -8.75045394897461
    3. '(' → logprob: -9.00045394897461
    4. '{' → logprob: -9.62545394897461
    5. '()
' → logprob: -9.87545394897461
    6. '={}' → logprob: -10.75045394897461
    7. '()]' → logprob: -11.37545394897461
    8. '({' → logprob: -11.50045394897461
    9. '();' → logprob: -13.50045394897461
    10. '()}' → logprob: -13.50045394897461

Token 230: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.7385154428193346e-05
    2. ' for' → logprob: -10.37503719329834
    3. 'next' → logprob: -13.12503719329834
    4. 'idx' → logprob: -13.62503719329834
    5. 'index' → logprob: -13.75003719329834
    6. 'answer' → logprob: -14.62503719329834
    7. 'ans' → logprob: -14.87503719329834
    8. 'count' → logprob: -15.75003719329834
    9. 'result' → logprob: -16.000038146972656
    10. 'current' → logprob: -16.250038146972656

Token 231: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02325025200843811
    2. ' i' → logprob: -3.7732503414154053
    3. 'idx' → logprob: -12.523250579833984
    4. ' idx' → logprob: -14.648250579833984
    5. 'index' → logprob: -14.898250579833984
    6. '   ' → logprob: -16.148250579833984
    7. '	i' → logprob: -16.273250579833984
    8. ' ' → logprob: -16.648250579833984
    9. ' index' → logprob: -18.898250579833984
    10. '_i' → logprob: -18.898250579833984

Token 232: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07028518617153168
    2. 'in' → logprob: -2.6952850818634033
    3. ',' → logprob: -8.070284843444824
    4. ' ' → logprob: -10.945284843444824
    5. ' ,' → logprob: -12.195284843444824
    6. '	in' → logprob: -12.570284843444824
    7. 'In' → logprob: -13.070284843444824
    8. 'n' → logprob: -13.820284843444824
    9. ' i' → logprob: -13.945284843444824
    10. '0' → logprob: -13.945284843444824

Token 233: ' v' (ID: 323)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009138364344835281
    2. ' a' → logprob: -5.509138584136963
    3. 'num' → logprob: -5.509138584136963
    4. 'val' → logprob: -7.759138584136963
    5. ' num' → logprob: -8.009138107299805
    6. 'v' → logprob: -9.134138107299805
    7. ' val' → logprob: -9.384138107299805
    8. 'value' → logprob: -10.384138107299805
    9. 'x' → logprob: -11.634138107299805
    10. 'ai' → logprob: -12.634138107299805

Token 234: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4740924537181854
    2. ' in' → logprob: -0.9740924835205078
    3. ',' → logprob: -12.099092483520508
    4. 'n' → logprob: -12.599092483520508
    5. ' ' → logprob: -12.849092483520508
    6. '	in' → logprob: -13.599092483520508
    7. 'v' → logprob: -14.599092483520508
    8. 'i' → logprob: -15.349092483520508
    9. 'import' → logprob: -15.474092483520508
    10. 's' → logprob: -15.599092483520508

Token 235: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.000553151941858232
    2. ' enumerate' → logprob: -7.500553131103516
    3. 'en' → logprob: -16.625553131103516
    4. '```' → logprob: -16.625553131103516
    5. 'enum' → logprob: -17.625553131103516
    6. '
' → logprob: -18.000553131103516
    7. '(en' → logprob: -19.625553131103516
    8. '.enumer' → logprob: -19.750553131103516
    9. 'A' → logprob: -19.875553131103516
    10. 'enqueue' → logprob: -19.875553131103516

Token 236: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.01109497994184494
    2. 'A' → logprob: -4.51109504699707
    3. ' A' → logprob: -10.01109504699707
    4. ',A' → logprob: -14.13609504699707
    5. ' (' → logprob: -14.26109504699707
    6. '(' → logprob: -14.76109504699707
    7. '
' → logprob: -15.76109504699707
    8. ',' → logprob: -15.76109504699707
    9. '	A' → logprob: -16.76109504699707
    10. ')' → logprob: -17.26109504699707

Token 237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005241702310740948
    2. '):
' → logprob: -5.255241870880127
    3. '):
' → logprob: -12.005241394042969
    4. ':' → logprob: -13.630241394042969
    5. ' ):' → logprob: -14.630241394042969
    6. '}:' → logprob: -17.25524139404297
    7. ')' → logprob: -18.13024139404297
    8. '   ' → logprob: -18.38024139404297
    9. ']:' → logprob: -18.38024139404297
    10. '():' → logprob: -18.88024139404297

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010241173207759857
    2. ' for' → logprob: -4.8852410316467285
    3. 'for' → logprob: -7.0102410316467285
    4. ' factors' → logprob: -7.2602410316467285
    5. '    
' → logprob: -7.8852410316467285
    6. 'f' → logprob: -8.260241508483887
    7. ',' → logprob: -9.260241508483887
    8. '   ' → logprob: -10.135241508483887
    9. ',f' → logprob: -10.635241508483887
    10. ' ' → logprob: -10.760241508483887

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3554534614086151
    2. 'f' → logprob: -1.3554534912109375
    3. 'pf' → logprob: -3.3554534912109375
    4. '   ' → logprob: -5.2304534912109375
    5. 'pr' → logprob: -7.9804534912109375
    6. 'p' → logprob: -8.105453491210938
    7. 'fs' → logprob: -8.980453491210938
    8. 'prime' → logprob: -9.355453491210938
    9. 'ps' → logprob: -9.480453491210938
    10. 'prs' → logprob: -10.480453491210938

Token 240: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18635067343711853
    2. ' p' → logprob: -2.1863505840301514
    3. 'pf' → logprob: -2.9363505840301514
    4. ' pf' → logprob: -5.8113508224487305
    5. 'f' → logprob: -6.6863508224487305
    6. 'factor' → logprob: -8.93635082244873
    7. 'prime' → logprob: -9.31135082244873
    8. ' f' → logprob: -9.56135082244873
    9. ' factor' → logprob: -10.31135082244873
    10. ' prime' → logprob: -10.43635082244873

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015346735715866
    2. 'in' → logprob: -1.701534628868103
    3. 'p' → logprob: -9.451534271240234
    4. 's' → logprob: -11.826534271240234
    5. ' ' → logprob: -12.076534271240234
    6. 'n' → logprob: -12.201534271240234
    7. '_in' → logprob: -12.576534271240234
    8. '(p' → logprob: -12.826534271240234
    9. '	in' → logprob: -12.826534271240234
    10. 'v' → logprob: -12.951534271240234

Token 242: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.10020904988050461
    2. ' prime' → logprob: -2.3502089977264404
    3. 'pr' → logprob: -13.22520923614502
    4. '   ' → logprob: -15.85020923614502
    5. '_prime' → logprob: -15.85020923614502
    6. '(pr' → logprob: -16.350208282470703
    7. ' ' → logprob: -16.475208282470703
    8. 'prim' → logprob: -17.225208282470703
    9. '
' → logprob: -17.475208282470703
    10. 'primer' → logprob: -17.475208282470703

Token 243: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.981667537620524e-06
    2. 'f' → logprob: -13.625001907348633
    3. '_factor' → logprob: -15.625001907348633
    4. ' _' → logprob: -15.875001907348633
    5. '```' → logprob: -16.375001907348633
    6. '_' → logprob: -16.500001907348633
    7. ''_' → logprob: -17.250001907348633
    8. '"_' → logprob: -17.375001907348633
    9. ')_' → logprob: -17.375001907348633
    10. '(_' → logprob: -17.625001907348633

Token 244: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.0006833644583821297
    2. 'f' → logprob: -7.375683307647705
    3. 'acters' → logprob: -11.000683784484863
    4. 'ctors' → logprob: -11.125683784484863
    5. '_f' → logprob: -11.250683784484863
    6. '_' → logprob: -13.000683784484863
    7. '```' → logprob: -13.125683784484863
    8. 'act' → logprob: -13.250683784484863
    9. 'Factors' → logprob: -13.500683784484863
    10. '   ' → logprob: -13.750683784484863

Token 245: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0001438266917830333
    2. '(' → logprob: -8.875144004821777
    3. '(p' → logprob: -12.875144004821777
    4. ' (' → logprob: -14.125144004821777
    5. 'v' → logprob: -14.625144004821777
    6. '(V' → logprob: -17.00014305114746
    7. '(
' → logprob: -17.50014305114746
    8. '[v' → logprob: -17.62514305114746
    9. '((' → logprob: -17.87514305114746
    10. ')' → logprob: -18.12514305114746

Token 246: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12702512741088867
    2. '):
' → logprob: -2.1270251274108887
    3. '):
' → logprob: -9.502025604248047
    4. ':' → logprob: -11.627025604248047
    5. '   ' → logprob: -12.377025604248047
    6. ')' → logprob: -12.377025604248047
    7. ' ):' → logprob: -13.002025604248047
    8. '       ' → logprob: -13.377025604248047
    9. ' ):
' → logprob: -14.877025604248047
    10. '}:' → logprob: -15.502025604248047

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01655837520956993
    2. 'if' → logprob: -4.5165581703186035
    3. ' if' → logprob: -5.2665581703186035
    4. '   ' → logprob: -8.016558647155762
    5. '```' → logprob: -13.766558647155762
    6. '	if' → logprob: -14.141558647155762
    7. ',' → logprob: -14.516558647155762
    8. '	   ' → logprob: -15.016558647155762
    9. '	' → logprob: -15.266558647155762
    10. '           ' → logprob: -15.391558647155762

Token 248: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004137887619435787
    2. ' if' → logprob: -5.629137992858887
    3. '       ' → logprob: -7.879137992858887
    4. '   ' → logprob: -9.254137992858887
    5. 'prime' → logprob: -10.254137992858887
    6. '	if' → logprob: -11.129137992858887
    7. 'union' → logprob: -11.754137992858887
    8. '           ' → logprob: -12.879137992858887
    9. ' ' → logprob: -13.754137992858887
    10. ' prime' → logprob: -14.379137992858887

Token 249: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04858771339058876
    2. ' p' → logprob: -3.0485877990722656
    3. 'prime' → logprob: -16.173587799072266
    4. ' ' → logprob: -16.423587799072266
    5. '	p' → logprob: -16.923587799072266
    6. '   ' → logprob: -16.923587799072266
    7. '<p' → logprob: -17.798587799072266
    8. 'f' → logprob: -18.173587799072266
    9. '_p' → logprob: -18.298587799072266
    10. 'not' → logprob: -18.673587799072266

Token 250: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.019084159284830093
    2. ' in' → logprob: -4.2690839767456055
    3. 'in' → logprob: -6.0190839767456055
    4. 'not' → logprob: -6.1440839767456055
    5. ')' → logprob: -8.144083976745605
    6. ']' → logprob: -11.269083976745605
    7. ' )' → logprob: -11.769083976745605
    8. ' no' → logprob: -11.769083976745605
    9. ' ' → logprob: -12.269083976745605
    10. '	not' → logprob: -13.394083976745605

Token 251: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.014163747429847717
    2. ' prime' → logprob: -4.264163970947266
    3. 'pr' → logprob: -15.889163970947266
    4. '_prime' → logprob: -15.889163970947266
    5. '
' → logprob: -18.014163970947266
    6. 'prim' → logprob: -18.639163970947266
    7. '```' → logprob: -18.639163970947266
    8. 'primer' → logprob: -19.014163970947266
    9. '   ' → logprob: -19.014163970947266
    10. 'python' → logprob: -19.139163970947266

Token 252: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -18.0
    3. 'To' → logprob: -18.625
    4. '\' → logprob: -19.125
    5. '_' → logprob: -19.625
    6. '```' → logprob: -19.875
    7. '_t' → logprob: -20.125
    8. '_TO' → logprob: -20.375
    9. '-to' → logprob: -20.375
    10. '_prime' → logprob: -20.5

Token 253: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.04859543219208717
    2. 'index' → logprob: -3.048595428466797
    3. 'prime' → logprob: -12.548595428466797
    4. '_to' → logprob: -12.673595428466797
    5. ' index' → logprob: -14.048595428466797
    6. '_prime' → logprob: -15.423595428466797
    7. '```' → logprob: -16.673595428466797
    8. '_' → logprob: -17.048595428466797
    9. '#index' → logprob: -17.048595428466797
    10. '	index' → logprob: -17.173595428466797

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28194087743759155
    2. ':
' → logprob: -1.4069409370422363
    3. '):
' → logprob: -7.781940937042236
    4. '):' → logprob: -9.156940460205078
    5. '=' → logprob: -9.531940460205078
    6. '==' → logprob: -10.031940460205078
    7. '():
' → logprob: -10.406940460205078
    8. ':
' → logprob: -10.531940460205078
    9. ':

' → logprob: -10.781940460205078
    10. ')' → logprob: -11.156940460205078

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041282689198851585
    2. ' union' → logprob: -6.129128456115723
    3. 'union' → logprob: -6.754128456115723
    4. ':
' → logprob: -7.754128456115723
    5. '```' → logprob: -9.129128456115723
    6. ':' → logprob: -10.254128456115723
    7. '       ' → logprob: -10.629128456115723
    8. '.union' → logprob: -10.629128456115723
    9. '_union' → logprob: -10.754128456115723
    10. '            
' → logprob: -10.754128456115723

Token 256: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' (adapté à ' union') → logprob: -0.0851571187376976
    2. ' union' → logprob: -3.2101571559906006
    3. '           ' → logprob: -3.3351571559906006
    4. '               ' → logprob: -5.4601569175720215
    5. '       ' → logprob: -6.9601569175720215
    6. '   ' → logprob: -8.08515739440918
    7. '	union' → logprob: -9.71015739440918
    8. '.union' → logprob: -10.08515739440918
    9. ' ' → logprob: -10.71015739440918
    10. '```' → logprob: -11.08515739440918

Token 257: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.474526584148407
    2. '(pr' → logprob: -0.974526584148407
    3. 'prime' → logprob: -8.349526405334473
    4. '(' → logprob: -8.974526405334473
    5. '(p' → logprob: -9.599526405334473
    6. 'i' → logprob: -11.099526405334473
    7. '(parent' → logprob: -13.224526405334473
    8. ' prime' → logprob: -14.349526405334473
    9. ' (' → logprob: -14.974526405334473
    10. ' i' → logprob: -15.349526405334473

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011846343986690044
    2. ',p' → logprob: -6.876184463500977
    3. ' ,' → logprob: -8.876184463500977
    4. ',
' → logprob: -11.751184463500977
    5. 'prime' → logprob: -13.126184463500977
    6. ',i' → logprob: -13.626184463500977
    7. 'p' → logprob: -14.751184463500977
    8. ' prime' → logprob: -15.626184463500977
    9. ',n' → logprob: -16.501184463500977
    10. ',s' → logprob: -16.501184463500977

Token 259: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.07895786315202713
    2. ' prime' → logprob: -2.5789577960968018
    3. 'p' → logprob: -9.828957557678223
    4. ' p' → logprob: -12.328957557678223
    5. '   ' → logprob: -12.703957557678223
    6. 'i' → logprob: -12.953957557678223
    7. '
' → logprob: -13.328957557678223
    8. ' ' → logprob: -13.453957557678223
    9. ' i' → logprob: -14.953957557678223
    10. '    
' → logprob: -15.828957557678223

Token 260: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.045823566731997e-05
    2. ')' → logprob: -12.375020027160645
    3. 'to' → logprob: -12.375020027160645
    4. 'p' → logprob: -12.875020027160645
    5. 'To' → logprob: -13.625020027160645
    6. '[i' → logprob: -13.625020027160645
    7. 'index' → logprob: -13.875020027160645
    8. '[p' → logprob: -14.625020027160645
    9. '_f' → logprob: -14.750020027160645
    10. '_t' → logprob: -14.875020027160645

Token 261: '_index' (ID: 7748)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1369231939315796
    2. 'index' → logprob: -2.136923313140869
    3. 'x' → logprob: -5.011923313140869
    4. 'ex' → logprob: -6.011923313140869
    5. 'p' → logprob: -7.511923313140869
    6. '_index' → logprob: -9.386922836303711
    7. ' i' → logprob: -9.511922836303711
    8. ')' → logprob: -9.761922836303711
    9. '   ' → logprob: -11.261922836303711
    10. ' index' → logprob: -11.636922836303711

Token 262: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.306760805164231e-05
    2. 'p' → logprob: -11.50001335144043
    3. '][' → logprob: -13.87501335144043
    4. '[' → logprob: -14.50001335144043
    5. ' [' → logprob: -15.00001335144043
    6. ')[' → logprob: -15.50001335144043
    7. '
' → logprob: -15.62501335144043
    8. '(p' → logprob: -15.62501335144043
    9. '[v' → logprob: -15.62501335144043
    10. '```' → logprob: -16.00001335144043

Token 263: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012023737654089928
    2. ')' → logprob: -7.126202583312988
    3. ' ])' → logprob: -8.626202583312988
    4. ']' → logprob: -9.251202583312988
    5. '])
' → logprob: -9.501202583312988
    6. '[i' → logprob: -11.001202583312988
    7. 'p' → logprob: -11.626202583312988
    8. '[p' → logprob: -12.126202583312988
    9. '],' → logprob: -12.501202583312988
    10. ')])' → logprob: -12.876202583312988

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017636561824474484
    2. 'else' → logprob: -8.750176429748535
    3. ' else' → logprob: -11.250176429748535
    4. '```' → logprob: -13.000176429748535
    5. '<|end|>' → logprob: -13.875176429748535
    6. '        
' → logprob: -15.000176429748535
    7. '[' → logprob: -15.375176429748535
    8. '​' → logprob: -16.00017547607422
    9. ')' → logprob: -16.00017547607422
    10. '           ' → logprob: -16.12517547607422

Token 265: ' prime' (ID: 9197)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5084038972854614
    2. 'prime' (adapté à ' prime') → logprob: -1.0084038972854614
    3. ' prime' → logprob: -3.508403778076172
    4. 'else' → logprob: -5.633403778076172
    5. ' else' → logprob: -8.758403778076172
    6. '   ' → logprob: -10.633403778076172
    7. '_prime' → logprob: -11.133403778076172
    8. '```' → logprob: -12.133403778076172
    9. 'pr' → logprob: -12.383403778076172
    10. '           ' → logprob: -12.883403778076172

Token 266: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -15.000000953674316
    3. 'To' → logprob: -15.875000953674316
    4. ''_' → logprob: -16.5
    5. '##_' → logprob: -16.625
    6. ']_' → logprob: -17.125
    7. 'to' → logprob: -17.125
    8. ')_' → logprob: -17.25
    9. '_' → logprob: -17.375
    10. '[_' → logprob: -17.75

Token 267: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.03804677724838257
    2. '_index' → logprob: -3.2880468368530273
    3. ' index' → logprob: -12.288046836853027
    4. 'ind' → logprob: -15.663046836853027
    5. '	index' → logprob: -16.53804588317871
    6. 'p' → logprob: -16.91304588317871
    7. 'indexed' → logprob: -17.03804588317871
    8. 'Index' → logprob: -17.03804588317871
    9. 'prime' → logprob: -17.16304588317871
    10. 'in' → logprob: -17.28804588317871

Token 268: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.125005722045898
    3. 'p' → logprob: -14.750005722045898
    4. ' [' → logprob: -16.6250057220459
    5. '```' → logprob: -17.5000057220459
    6. '[P' → logprob: -18.0000057220459
    7. '[v' → logprob: -18.1250057220459
    8. '\[' → logprob: -18.1250057220459
    9. '[c' → logprob: -18.5000057220459
    10. '<p' → logprob: -19.0000057220459

Token 269: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010902122594416142
    2. '=' → logprob: -7.626090049743652
    3. ']=' → logprob: -7.626090049743652
    4. ' ]' → logprob: -9.126090049743652
    5. ' =' → logprob: -12.126090049743652
    6. ')' → logprob: -15.126090049743652
    7. '[' → logprob: -17.00109100341797
    8. ']
' → logprob: -18.12609100341797
    9. '']' → logprob: -18.37609100341797
    10. ']

' → logprob: -19.00109100341797

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00842119101434946
    2. ' =' → logprob: -4.883421421051025
    3. '[i' → logprob: -7.758421421051025
    4. '[p' → logprob: -8.133420944213867
    5. '[' → logprob: -9.883420944213867
    6. '=p' → logprob: -10.508420944213867
    7. '=i' → logprob: -11.383420944213867
    8. ']' → logprob: -13.133420944213867
    9. '=
' → logprob: -14.258420944213867
    10. ']=' → logprob: -14.383420944213867

Token 271: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.676292231422849e-05
    2. ' i' → logprob: -11.000017166137695
    3. '	i' → logprob: -22.250017166137695
    4. '```' → logprob: -25.375017166137695
    5. '[i' → logprob: -25.500017166137695
    6. '   ' → logprob: -26.000017166137695
    7. '_i' → logprob: -26.125017166137695
    8. '*i' → logprob: -26.750017166137695
    9. '{i' → logprob: -26.875017166137695
    10. ')i' → logprob: -27.000017166137695

Token 272: '

' (ID: 279)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.11320198327302933
    2. '<|end|>' → logprob: -3.9882020950317383
    3. 'max' → logprob: -4.363202095031738
    4. 'count' → logprob: -4.488202095031738
    5. 'q' → logprob: -4.488202095031738
    6. 'for' → logprob: -4.738202095031738
    7. 'queries' → logprob: -4.988202095031738
    8. 'answer' → logprob: -5.113202095031738
    9. 'query' → logprob: -5.488202095031738
    10. 'print' → logprob: -5.613202095031738

Token 273: 'B' (ID: 33)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.11915364861488342
    2. 'answer' → logprob: -3.1191537380218506
    3. 'from' → logprob: -4.4941534996032715
    4. 'result' → logprob: -4.6191534996032715
    5. 'print' → logprob: -4.6191534996032715
    6. 'answers' → logprob: -4.6191534996032715
    7. 'res' → logprob: -5.2441534996032715
    8. 'count' → logprob: -5.2441534996032715
    9. 'ans' → logprob: -5.4941534996032715
    10. 'max' → logprob: -5.9941534996032715

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006318732164800167
    2. '=' → logprob: -5.13131856918335
    3. '_' → logprob: -8.881319046020508
    4. '_counts' → logprob: -10.256319046020508
    5. '=set' → logprob: -10.631319046020508
    6. '_set' → logprob: -10.756319046020508
    7. '_count' → logprob: -10.881319046020508
    8. '_parent' → logprob: -11.506319046020508
    9. '_groups' → logprob: -11.631319046020508
    10. '=[]' → logprob: -11.756319046020508

Token 275: ' sorted' (ID: 20099)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.523463249206543
    2. '[A' → logprob: -1.523463249206543
    3. '[parent' → logprob: -1.773463249206543
    4. 'A' → logprob: -2.023463249206543
    5. 'list' → logprob: -2.523463249206543
    6. '[]' → logprob: -2.523463249206543
    7. 'set' → logprob: -2.898463249206543
    8. 'sorted' → logprob: -4.398463249206543
    9. 'parent' → logprob: -4.648463249206543
    10. '[list' → logprob: -5.023463249206543

Token 276: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.07043729722499847
    2. '(parent' → logprob: -3.32043719291687
    3. '(set' → logprob: -3.69543719291687
    4. '((' → logprob: -6.195437431335449
    5. '([' → logprob: -6.570437431335449
    6. '(range' → logprob: -7.320437431335449
    7. '([(' → logprob: -7.320437431335449
    8. '(' → logprob: -7.445437431335449
    9. '({' → logprob: -7.695437431335449
    10. 'parent' → logprob: -7.695437431335449

Token 277: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001051507773809135
    2. ',' → logprob: -6.876051425933838
    3. '))' → logprob: -12.376051902770996
    4. ')
' → logprob: -12.626051902770996
    5. ' )' → logprob: -12.751051902770996
    6. '[' → logprob: -12.876051902770996
    7. ',)' → logprob: -13.626051902770996
    8. '[::-' → logprob: -14.126051902770996
    9. ')[' → logprob: -14.626051902770996
    10. '())' → logprob: -14.751051902770996

Token 278: 'comp' (ID: 3697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3480253517627716
    2. 'if' → logprob: -2.473025321960449
    3. 'print' → logprob: -2.848025321960449
    4. 'ans' → logprob: -3.098025321960449
    5. 'answer' → logprob: -3.098025321960449
    6. 'result' → logprob: -3.973025321960449
    7. 'count' → logprob: -4.348025321960449
    8. 'res' → logprob: -4.973025321960449
    9. 'answers' → logprob: -5.098025321960449
    10. 'possible' → logprob: -5.598025321960449

Token 279: '_A' (ID: 6829)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.4043923318386078
    2. 'onent' → logprob: -2.4043922424316406
    3. 's' → logprob: -2.7793922424316406
    4. ' =' → logprob: -3.0293922424316406
    5. '_indices' → logprob: -3.7793922424316406
    6. '_idx' → logprob: -4.029392242431641
    7. '_map' → logprob: -4.029392242431641
    8. '_sizes' → logprob: -4.404392242431641
    9. '_ro' → logprob: -4.654392242431641
    10. '=' → logprob: -4.904392242431641

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.090979665517807
    2. 's' → logprob: -3.96597957611084
    3. '_root' → logprob: -4.09097957611084
    4. '_idx' → logprob: -4.34097957611084
    5. '=' → logprob: -4.46597957611084
    6. '_indices' → logprob: -5.71597957611084
    7. 'root' → logprob: -5.84097957611084
    8. '_parent' → logprob: -6.09097957611084
    9. '_index' → logprob: -6.34097957611084
    10. '=[]
' → logprob: -6.34097957611084

Token 281: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07946160435676575
    2. '[parent' → logprob: -2.7044615745544434
    3. '[A' → logprob: -5.704461574554443
    4. '[list' → logprob: -6.204461574554443
    5. '{}' → logprob: -6.579461574554443
    6. '[B' → logprob: -7.454461574554443
    7. '{' → logprob: -7.954461574554443
    8. '[min' → logprob: -8.329462051391602
    9. '[len' → logprob: -8.454462051391602
    10. 'dict' → logprob: -8.829462051391602

Token 282: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06169604882597923
    2. ' for' → logprob: -2.9366960525512695
    3. ']' → logprob: -5.0616960525512695
    4. '
' → logprob: -8.81169605255127
    5. ')' → logprob: -9.06169605255127
    6. ',' → logprob: -10.06169605255127
    7. '()' → logprob: -10.18669605255127
    8. ' ' → logprob: -10.68669605255127
    9. ']
' → logprob: -10.81169605255127
    10. '   ' → logprob: -11.31169605255127

Token 283: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000204851632588543
    2. '_range' → logprob: -9.000205039978027
    3. '_parent' → logprob: -9.875205039978027
    4. ' _' → logprob: -11.375205039978027
    5. ' range' → logprob: -11.500205039978027
    6. 'range' → logprob: -12.875205039978027
    7. ' in' → logprob: -13.125205039978027
    8. '_in' → logprob: -13.625205039978027
    9. '_
' → logprob: -13.875205039978027
    10. '_i' → logprob: -14.250205039978027

Token 284: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012811839114874601
    2. ' range' → logprob: -7.376281261444092
    3. 'in' → logprob: -7.376281261444092
    4. 'parent' → logprob: -11.001280784606934
    5. ' in' → logprob: -12.126280784606934
    6. '(range' → logprob: -12.376280784606934
    7. 'ange' → logprob: -13.626280784606934
    8. ' ' → logprob: -14.876280784606934
    9. 'i' → logprob: -16.12628173828125
    10. '   ' → logprob: -16.37628173828125

Token 285: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004204250581096858
    2. ' range' → logprob: -8.250420570373535
    3. 'parent' → logprob: -8.750420570373535
    4. '(range' → logprob: -14.500420570373535
    5. '
' → logprob: -16.87541961669922
    6. ' parent' → logprob: -16.87541961669922
    7. 'rang' → logprob: -17.62541961669922
    8. 'A' → logprob: -18.25041961669922
    9. '	range' → logprob: -18.75041961669922
    10. ' ' → logprob: -18.75041961669922

Token 286: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007238718098960817
    2. 'N' → logprob: -7.250723838806152
    3. 'parent' → logprob: -11.875723838806152
    4. '(len' → logprob: -12.875723838806152
    5. '(n' → logprob: -13.625723838806152
    6. '(' → logprob: -13.625723838806152
    7. '(parent' → logprob: -14.000723838806152
    8. '
' → logprob: -15.250723838806152
    9. ' (' → logprob: -15.500723838806152
    10. ' N' → logprob: -15.875723838806152

Token 287: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0799611359834671
    2. ')]
' → logprob: -2.579961061477661
    3. ']' → logprob: -7.32996129989624
    4. ')' → logprob: -8.704960823059082
    5. ')]

' → logprob: -9.079960823059082
    6. ')]
' → logprob: -9.204960823059082
    7. ']
' → logprob: -10.579960823059082
    8. ' )' → logprob: -12.579960823059082
    9. '])' → logprob: -13.079960823059082
    10. ')
' → logprob: -13.329960823059082

Token 288: 'comp' (ID: 3697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.0
    3. '```' → logprob: -17.875
    4. '
' → logprob: -20.125
    5. '``' → logprob: -21.125
    6. '	for' → logprob: -21.125
    7. 'parent' → logprob: -21.5
    8. '  
' → logprob: -21.75
    9. '    
' → logprob: -22.375
    10. 'from' → logprob: -22.75

Token 289: '_B' (ID: 3201)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.017045190557837486
    2. '_sizes' → logprob: -4.892045021057129
    3. '_' → logprob: -5.517045021057129
    4. '_size' → logprob: -6.767045021057129
    5. '_indices' → logprob: -6.767045021057129
    6. 'A' → logprob: -7.267045021057129
    7. '_parent' → logprob: -7.642045021057129
    8. '=' → logprob: -7.892045021057129
    9. '_idx' → logprob: -8.017045021057129
    10. '_a' → logprob: -8.767045021057129

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048881884664297104
    2. ' =' → logprob: -3.048881769180298
    3. '[' → logprob: -8.673881530761719
    4. '=[]' → logprob: -9.673881530761719
    5. '=[' → logprob: -9.798881530761719
    6. 'for' → logprob: -13.548881530761719
    7. ']' → logprob: -13.673881530761719
    8. '=[[' → logprob: -15.173881530761719
    9. ' ' → logprob: -15.423881530761719
    10. '[:]' → logprob: -15.423881530761719

Token 291: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04859066382050514
    2. ' [[]' → logprob: -3.048590660095215
    3. '[[' → logprob: -13.548590660095215
    4. '[]' → logprob: -13.923590660095215
    5. '[len' → logprob: -14.673590660095215
    6. '[:]' → logprob: -16.04859161376953
    7. 'sorted' → logprob: -16.29859161376953
    8. '[N' → logprob: -16.67359161376953
    9. '[List' → logprob: -16.67359161376953
    10. '[]
' → logprob: -16.67359161376953

Token 292: ' for' (ID: 395)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.26166149973869324
    2. 'for' → logprob: -1.5116615295410156
    3. ' for' → logprob: -4.761661529541016
    4. ' (' → logprob: -7.761661529541016
    5. '(' → logprob: -8.261661529541016
    6. ' in' → logprob: -8.511661529541016
    7. 'range' → logprob: -9.761661529541016
    8. '(n' → logprob: -10.011661529541016
    9. 'in' → logprob: -10.011661529541016
    10. '(range' → logprob: -10.136661529541016

Token 293: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0773705542087555
    2. ' range' → logprob: -3.2023706436157227
    3. 'range' → logprob: -3.8273706436157227
    4. ' _' → logprob: -4.952370643615723
    5. ' in' → logprob: -5.452370643615723
    6. '_range' → logprob: -8.202370643615723
    7. 'x' → logprob: -8.952370643615723
    8. 'in' → logprob: -9.577370643615723
    9. ' x' → logprob: -10.077370643615723
    10. ' ' → logprob: -10.452370643615723

Token 294: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.73446003627032e-05
    2. ' range' → logprob: -9.250097274780273
    3. 'N' → logprob: -14.250097274780273
    4. '(range' → logprob: -14.625097274780273
    5. '
' → logprob: -17.750097274780273
    6. '(N' → logprob: -17.875097274780273
    7. 'n' → logprob: -19.250097274780273
    8. '   ' → logprob: -19.625097274780273
    9. 'len' → logprob: -20.500097274780273
    10. '_range' → logprob: -20.500097274780273

Token 295: ' range' (ID: 3352)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1637164789135568e-05
    2. '(N' → logprob: -11.750011444091797
    3. ' N' → logprob: -12.875011444091797
    4. 'range' → logprob: -13.750011444091797
    5. '(' → logprob: -17.375011444091797
    6. ' range' → logprob: -17.625011444091797
    7. '```' → logprob: -18.000011444091797
    8. '   ' → logprob: -18.250011444091797
    9. '
' → logprob: -18.375011444091797
    10. ' ' → logprob: -18.375011444091797

Token 296: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.24169327318668365
    2. 'N' → logprob: -1.7416932582855225
    3. 'range' → logprob: -3.2416932582855225
    4. ' range' → logprob: -8.366693496704102
    5. '
' → logprob: -9.991693496704102
    6. '(range' → logprob: -10.491693496704102
    7. '(' → logprob: -10.741693496704102
    8. '   ' → logprob: -11.741693496704102
    9. 'parent' → logprob: -11.991693496704102
    10. '```' → logprob: -12.241693496704102

Token 297: ')]

' (ID: 56882)
  Prédit: ')]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.25330713391304016
    2. ')]' → logprob: -1.5033071041107178
    3. ')]

' → logprob: -7.003307342529297
    4. ')]
' → logprob: -8.003307342529297
    5. ')' → logprob: -9.128307342529297
    6. ']' → logprob: -11.378307342529297
    7. ')
' → logprob: -12.253307342529297
    8. ']
' → logprob: -12.253307342529297
    9. ' )' → logprob: -13.253307342529297
    10. '])' → logprob: -14.128307342529297

Token 298: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -15.75
    3. '```' → logprob: -18.25
    4. '
' → logprob: -19.75
    5. 'For' → logprob: -21.625
    6. '	for' → logprob: -21.875
    7. '``' → logprob: -22.0
    8. 'from' → logprob: -22.125
    9. '#' → logprob: -22.375
    10. ')' → logprob: -22.75

Token 299: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012535012501757592
    2. ' i' → logprob: -9.00012493133545
    3. 'v' → logprob: -13.87512493133545
    4. 'x' → logprob: -14.25012493133545
    5. 'idx' → logprob: -15.25012493133545
    6. 'k' → logprob: -17.875125885009766
    7. '	i' → logprob: -18.125125885009766
    8. '_i' → logprob: -18.750125885009766
    9. '   ' → logprob: -18.875125885009766
    10. '(i' → logprob: -19.250125885009766

Token 300: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6691989898681641
    2. 'in' → logprob: -0.9191989898681641
    3. ',' → logprob: -2.419198989868164
    4. ' ,' → logprob: -10.294198989868164
    5. 'range' → logprob: -12.044198989868164
    6. ' ' → logprob: -12.419198989868164
    7. ',in' → logprob: -13.544198989868164
    8. '   ' → logprob: -14.044198989868164
    9. '_,' → logprob: -14.794198989868164
    10. 'In' → logprob: -14.919198989868164

Token 301: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0026797023601830006
    2. 'a' → logprob: -6.502679824829102
    3. 'x' → logprob: -7.002679824829102
    4. 'val' → logprob: -8.252679824829102
    5. ' v' → logprob: -12.627679824829102
    6. 'num' → logprob: -13.127679824829102
    7. 'value' → logprob: -14.002679824829102
    8. '_v' → logprob: -15.752679824829102
    9. 'b' → logprob: -16.0026798248291
    10. 'ai' → logprob: -16.6276798248291

Token 302: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6207956075668335
    2. ',' → logprob: -1.2457956075668335
    3. ' in' → logprob: -1.7457956075668335
    4. ' ,' → logprob: -8.620795249938965
    5. ',in' → logprob: -10.245795249938965
    6. ',v' → logprob: -11.245795249938965
    7. ' ' → logprob: -11.995795249938965
    8. '	in' → logprob: -12.370795249938965
    9. ')' → logprob: -12.370795249938965
    10. ',(' → logprob: -13.120795249938965

Token 303: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -2.7729658540920354e-05
    2. ' enumerate' → logprob: -10.500027656555176
    3. 'en' → logprob: -16.375028610229492
    4. 'enum' → logprob: -18.000028610229492
    5. '
' → logprob: -18.250028610229492
    6. '```' → logprob: -19.500028610229492
    7. ' ' → logprob: -20.250028610229492
    8. '   ' → logprob: -20.500028610229492
    9. 'enqueue' → logprob: -20.500028610229492
    10. '.enumer' → logprob: -22.375028610229492

Token 304: '(A' (ID: 10706)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012566749937832355
    2. '(A' → logprob: -4.512566566467285
    3. 'range' → logprob: -7.637566566467285
    4. ' A' → logprob: -7.637566566467285
    5. '(' → logprob: -8.887566566467285
    6. 'B' → logprob: -9.262566566467285
    7. 'comp' → logprob: -9.387566566467285
    8. '(range' → logprob: -9.637566566467285
    9. ')' → logprob: -10.012566566467285
    10. 'enumer' → logprob: -10.137566566467285

Token 305: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006038885097950697
    2. '):' → logprob: -5.131038665771484
    3. '):
' → logprob: -9.131038665771484
    4. ')' → logprob: -14.381038665771484
    5. '):

' → logprob: -14.506038665771484
    6. ':
' → logprob: -14.881038665771484
    7. ' ):
' → logprob: -15.256038665771484
    8. '   ' → logprob: -15.506038665771484
    9. '():
' → logprob: -16.881038665771484
    10. ':' → logprob: -16.881038665771484

Token 306: '   ' (ID: 271)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.019246358424425125
    2. ' comp' → logprob: -4.394246578216553
    3. '   ' → logprob: -5.019246578216553
    4. '	comp' → logprob: -9.394246101379395
    5. 'c' → logprob: -11.394246101379395
    6. 'root' → logprob: -12.394246101379395
    7. '```' → logprob: -13.519246101379395
    8. 'com' → logprob: -13.769246101379395
    9. 'x' → logprob: -14.394246101379395
    10. '_comp' → logprob: -14.644246101379395

Token 307: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.0004744023026432842
    2. ' comp' → logprob: -7.750474452972412
    3. 'root' → logprob: -10.250473976135254
    4. '   ' → logprob: -12.000473976135254
    5. '	comp' → logprob: -14.875473976135254
    6. 'com' → logprob: -15.000473976135254
    7. 'rep' → logprob: -15.000473976135254
    8. 'p' → logprob: -15.500473976135254
    9. 'r' → logprob: -15.500473976135254
    10. 'ri' → logprob: -15.750473976135254

Token 308: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0022118736524134874
    2. 'A' → logprob: -6.752212047576904
    3. '[' → logprob: -7.127212047576904
    4. '[parent' → logprob: -9.252211570739746
    5. '=find' → logprob: -10.002211570739746
    6. '[A' → logprob: -10.627211570739746
    7. '_parent' → logprob: -11.252211570739746
    8. '=' → logprob: -11.752211570739746
    9. '_B' → logprob: -11.877211570739746
    10. 'find' → logprob: -11.877211570739746

Token 309: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000680265249684453
    2. '[parent' → logprob: -7.375680446624756
    3. 'find' → logprob: -10.375679969787598
    4. '=find' → logprob: -12.125679969787598
    5. '_parent' → logprob: -12.375679969787598
    6. 'parent' → logprob: -12.500679969787598
    7. '[i' → logprob: -12.875679969787598
    8. '_find' → logprob: -13.000679969787598
    9. '[[' → logprob: -13.875679969787598
    10. '[root' → logprob: -14.250679969787598

Token 310: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -3.3451433409936726e-05
    2. ' find' → logprob: -10.375033378601074
    3. 'parent' → logprob: -13.500033378601074
    4. '(find' → logprob: -14.625033378601074
    5. '
' → logprob: -16.50003433227539
    6. '   ' → logprob: -16.75003433227539
    7. '	find' → logprob: -17.00003433227539
    8. ')find' → logprob: -17.12503433227539
    9. '=find' → logprob: -17.75003433227539
    10. 'i' → logprob: -17.75003433227539

Token 311: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.125000953674316
    3. 'i' → logprob: -15.875000953674316
    4. ' (' → logprob: -16.125001907348633
    5. '(parent' → logprob: -16.375001907348633
    6. 'parent' → logprob: -17.000001907348633
    7. '(
' → logprob: -18.250001907348633
    8. '(x' → logprob: -18.250001907348633
    9. '](' → logprob: -18.375001907348633
    10. ')(' → logprob: -19.000001907348633

Token 312: ')].' (ID: 58800)
  Prédit: ')].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')].' → logprob: -0.001389996730722487
    2. '].' → logprob: -6.626389980316162
    3. ']].' → logprob: -10.12639045715332
    4. ')]' → logprob: -11.00139045715332
    5. ' )' → logprob: -13.12639045715332
    6. ').' → logprob: -13.62639045715332
    7. '()].' → logprob: -13.75139045715332
    8. '   ' → logprob: -14.00139045715332
    9. ']' → logprob: -14.50139045715332
    10. '(i' → logprob: -15.37639045715332

Token 313: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.25
    3. ' append' → logprob: -17.625
    4. 'appen' → logprob: -18.625
    5. 'app' → logprob: -20.75
    6. '	append' → logprob: -21.0
    7. ' ' → logprob: -22.5
    8. 'Append' → logprob: -22.625
    9. '   ' → logprob: -22.875
    10. 'appe' → logprob: -23.25

Token 314: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2014733850955963
    2. 'v' → logprob: -1.701473355293274
    3. '(' → logprob: -9.826473236083984
    4. '(i' → logprob: -12.701473236083984
    5. ' v' → logprob: -13.576473236083984
    6. '(
' → logprob: -15.076473236083984
    7. ')v' → logprob: -15.201473236083984
    8. '((' → logprob: -15.326473236083984
    9. ' (' → logprob: -15.326473236083984
    10. '(A' → logprob: -15.451473236083984

Token 315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.875006675720215
    4. '),' → logprob: -17.7500057220459
    5. ')

' → logprob: -17.7500057220459
    6. ')`' → logprob: -18.1250057220459
    7. ')v' → logprob: -18.2500057220459
    8. ')#' → logprob: -18.6250057220459
    9. '))' → logprob: -19.0000057220459
    10. '`)' → logprob: -19.3750057220459

Token 316: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2352385965641588e-05
    2. ' for' → logprob: -12.125012397766113
    3. '```' → logprob: -12.375012397766113
    4. ')' → logprob: -13.750012397766113
    5. '
' → logprob: -14.000012397766113
    6. '<|end|>' → logprob: -15.250012397766113
    7. ')
' → logprob: -16.250011444091797
    8. '  
' → logprob: -16.875011444091797
    9. 'from' → logprob: -16.875011444091797
    10. 'For' → logprob: -17.000011444091797

Token 317: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011729635298252106
    2. ' i' → logprob: -6.75117301940918
    3. ',' → logprob: -13.37617301940918
    4. ' ' → logprob: -15.25117301940918
    5. '	i' → logprob: -15.25117301940918
    6. 'j' → logprob: -15.50117301940918
    7. '   ' → logprob: -15.75117301940918
    8. ',i' → logprob: -15.87617301940918
    9. '_,' → logprob: -16.87617301940918
    10. 'B' → logprob: -17.12617301940918

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. ' in' → logprob: -11.00003719329834
    3. ' ,' → logprob: -11.37503719329834
    4. 'in' → logprob: -11.62503719329834
    5. '_,' → logprob: -15.62503719329834
    6. ',v' → logprob: -16.125038146972656
    7. ',_' → logprob: -17.000038146972656
    8. ',
' → logprob: -17.375038146972656
    9. ' ' → logprob: -17.500038146972656
    10. 'range' → logprob: -17.500038146972656

Token 319: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014479031786322594
    2. ' v' → logprob: -4.264479160308838
    3. '(v' → logprob: -8.38947868347168
    4. 'b' → logprob: -9.76447868347168
    5. ' (' → logprob: -11.76447868347168
    6. '_v' → logprob: -11.88947868347168
    7. ' b' → logprob: -12.76447868347168
    8. '(b' → logprob: -12.76447868347168
    9. '(' → logprob: -13.13947868347168
    10. '(_,' → logprob: -13.51447868347168

Token 320: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.018574446439743042
    2. ' in' → logprob: -4.518574237823486
    3. ',' → logprob: -4.893574237823486
    4. ' ' → logprob: -12.768574714660645
    5. ' ,' → logprob: -15.143574714660645
    6. '   ' → logprob: -15.143574714660645
    7. 'enumer' → logprob: -16.018573760986328
    8. '  ' → logprob: -16.268573760986328
    9. 'B' → logprob: -16.518573760986328
    10. '	in' → logprob: -17.018573760986328

Token 321: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -6.392202976712724e-06
    2. ' enumerate' → logprob: -12.000006675720215
    3. 'range' → logprob: -16.1250057220459
    4. 'enum' → logprob: -17.2500057220459
    5. 'en' → logprob: -17.8750057220459
    6. '   ' → logprob: -19.0000057220459
    7. 'B' → logprob: -19.5000057220459
    8. ' ' → logprob: -20.6250057220459
    9. '  ' → logprob: -20.6250057220459
    10. '
' → logprob: -21.0000057220459

Token 322: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.007025919388979673
    2. 'B' → logprob: -5.382025718688965
    3. '(range' → logprob: -6.507025718688965
    4. 'enumer' → logprob: -7.257025718688965
    5. 'range' → logprob: -8.882025718688965
    6. '(' → logprob: -10.757025718688965
    7. '(en' → logprob: -11.007025718688965
    8. '(b' → logprob: -11.007025718688965
    9. '((' → logprob: -12.632025718688965
    10. '(zip' → logprob: -13.132025718688965

Token 323: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002205451251938939
    2. '):' → logprob: -6.2522053718566895
    3. '[' → logprob: -8.377205848693848
    4. '):
' → logprob: -10.252205848693848
    5. '   ' → logprob: -12.627205848693848
    6. '):

' → logprob: -12.877205848693848
    7. ':
' → logprob: -13.752205848693848
    8. ' ):
' → logprob: -13.752205848693848
    9. ')' → logprob: -13.877205848693848
    10. ']:
' → logprob: -14.252205848693848

Token 324: '   ' (ID: 271)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -8.578184497309849e-05
    2. '   ' → logprob: -9.625085830688477
    3. ' comp' → logprob: -10.875085830688477
    4. '	comp' → logprob: -14.250085830688477
    5. 'com' → logprob: -17.250085830688477
    6. '
' → logprob: -17.250085830688477
    7. '.comp' → logprob: -17.375085830688477
    8. ' ' → logprob: -17.750085830688477
    9. '(comp' → logprob: -17.750085830688477
    10. '  ' → logprob: -19.125085830688477

Token 325: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -4.320199877838604e-07
    2. ' comp' → logprob: -16.0
    3. '   ' → logprob: -16.5
    4. 'component' → logprob: -16.625
    5. 'parent' → logprob: -16.75
    6. 'for' → logprob: -18.0
    7. 'root' → logprob: -18.875
    8. '	comp' → logprob: -19.0
    9. 'find' → logprob: -19.125
    10. 'com' → logprob: -19.5

Token 326: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0025504580698907375
    2. '_A' → logprob: -6.0025506019592285
    3. 'find' → logprob: -10.25255012512207
    4. '_b' → logprob: -11.87755012512207
    5. '=find' → logprob: -11.87755012512207
    6. '=' → logprob: -12.50255012512207
    7. '
' → logprob: -12.62755012512207
    8. '_' → logprob: -12.75255012512207
    9. 'ind' → logprob: -13.25255012512207
    10. 'B' → logprob: -13.37755012512207

Token 327: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '[i' → logprob: -15.125000953674316
    3. '[get' → logprob: -15.375000953674316
    4. '[f' → logprob: -16.500001907348633
    5. '[len' → logprob: -16.625001907348633
    6. '[parent' → logprob: -16.875001907348633
    7. ' [' → logprob: -17.000001907348633
    8. '[[' → logprob: -17.000001907348633
    9. '
' → logprob: -17.125001907348633
    10. '   ' → logprob: -17.750001907348633

Token 328: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.25414004921913147
    2. '[' → logprob: -1.504140019416809
    3. '(find' → logprob: -6.1291399002075195
    4. ' find' → logprob: -10.87913990020752
    5. '=find' → logprob: -12.37913990020752
    6. '	find' → logprob: -13.37913990020752
    7. ')find' → logprob: -13.37913990020752
    8. 'comp' → logprob: -13.75413990020752
    9. '[get' → logprob: -14.37913990020752
    10. '[i' → logprob: -14.37913990020752

Token 329: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00027432903880253434
    2. '(find' → logprob: -8.750274658203125
    3. 'i' → logprob: -9.250274658203125
    4. '(parent' → logprob: -11.250274658203125
    5. '(' → logprob: -12.250274658203125
    6. 'find' → logprob: -14.875274658203125
    7. '((' → logprob: -15.000274658203125
    8. 'parent' → logprob: -15.000274658203125
    9. '[i' → logprob: -15.875274658203125
    10. '(next' → logprob: -16.000274658203125

Token 330: ')].' (ID: 58800)
  Prédit: ')].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')].' → logprob: -0.07369076460599899
    2. '].' → logprob: -2.94869065284729
    3. ').' → logprob: -4.073690891265869
    4. '()].' → logprob: -7.323690891265869
    5. '(i' → logprob: -7.698690891265869
    6. '(' → logprob: -8.698690414428711
    7. '[' → logprob: -9.573690414428711
    8. '(v' → logprob: -9.573690414428711
    9. ']).' → logprob: -10.073690414428711
    10. ')' → logprob: -10.948690414428711

Token 331: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. 'appen' → logprob: -15.375
    3. ' append' → logprob: -15.75
    4. '.append' → logprob: -17.625
    5. 'app' → logprob: -19.375
    6. 'Append' → logprob: -19.875
    7. '	append' → logprob: -19.875
    8. 'add' → logprob: -20.625
    9. 'pp' → logprob: -20.75
    10. 'insert' → logprob: -21.0

Token 332: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -9.686778503237292e-05
    2. 'v' → logprob: -9.250097274780273
    3. '(' → logprob: -14.250097274780273
    4. ' (' → logprob: -19.375097274780273
    5. '(i' → logprob: -20.250097274780273
    6. '	v' → logprob: -20.625097274780273
    7. '(int' → logprob: -20.750097274780273
    8. '(
' → logprob: -21.000097274780273
    9. '((' → logprob: -21.625097274780273
    10. '(value' → logprob: -22.000097274780273

Token 333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. '])' → logprob: -14.875001907348633
    3. '())' → logprob: -14.875001907348633
    4. '))' → logprob: -15.000001907348633
    5. '[])' → logprob: -15.375001907348633
    6. ')`' → logprob: -15.500001907348633
    7. ')
' → logprob: -15.750001907348633
    8. ' )' → logprob: -16.000001907348633
    9. ')

' → logprob: -16.875001907348633
    10. '`)' → logprob: -17.625001907348633

Token 334: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017840604996308684
    2. 'if' → logprob: -6.501783847808838
    3. ' for' → logprob: -9.626784324645996
    4. 'correct' → logprob: -10.001784324645996
    5. '```' → logprob: -10.251784324645996
    6. 'valid' → logprob: -10.626784324645996
    7. 'i' → logprob: -10.876784324645996
    8. 'ok' → logprob: -11.126784324645996
    9. ')' → logprob: -11.126784324645996
    10. '
' → logprob: -11.376784324645996

Token 335: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020042958203703165
    2. 'if' → logprob: -7.627004146575928
    3. ' for' → logprob: -7.627004146575928
    4. 'i' → logprob: -8.002004623413086
    5. 'print' → logprob: -8.627004623413086
    6. 'correct' → logprob: -8.627004623413086
    7. 'valid' → logprob: -9.752004623413086
    8. 'ok' → logprob: -10.002004623413086
    9. 'possible' → logprob: -10.252004623413086
    10. 'answer' → logprob: -10.502004623413086

Token 336: ' safe' (ID: 7703)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010663634166121483
    2. 'i' → logprob: -5.3856635093688965
    3. '0' → logprob: -6.0106635093688965
    4. '#' → logprob: -6.8856635093688965
    5. '(' → logprob: -7.2606635093688965
    6. 'for' → logprob: -8.135663986206055
    7. '(i' → logprob: -8.385663986206055
    8. 'Index' → logprob: -8.510663986206055
    9. '=' → logprob: -8.635663986206055
    10. '[i' → logprob: -9.510663986206055

Token 337: ' because' (ID: 2236)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10633566230535507
    2. '
' → logprob: -2.7313356399536133
    3. ')' → logprob: -4.356335639953613
    4. 'if' → logprob: -4.856335639953613
    5. ' for' → logprob: -5.481335639953613
    6. '<|end|>' → logprob: -6.231335639953613
    7. '#' → logprob: -6.356335639953613
    8. ')
' → logprob: -6.731335639953613
    9. 'assert' → logprob: -6.981335639953613
    10. 'print' → logprob: -6.981335639953613

Token 338: ' ordering' (ID: 30931)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.46243998408317566
    2. 'N' → logprob: -2.337440013885498
    3. 'B' → logprob: -2.462440013885498
    4. 'comp' → logprob: -3.087440013885498
    5. '0' → logprob: -3.337440013885498
    6. 'parent' → logprob: -3.462440013885498
    7. 'len' → logprob: -3.587440013885498
    8. 'A' → logprob: -4.087440013885498
    9. 'range' → logprob: -4.587440013885498
    10. 'sorted' → logprob: -4.712440013885498

Token 339: ' by' (ID: 656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036592145916074514
    2. 'possible' → logprob: -6.378659248352051
    3. 'valid' → logprob: -7.753659248352051
    4. 'is' → logprob: -8.12865924835205
    5. 'correct' → logprob: -8.12865924835205
    6. 'if' → logprob: -8.62865924835205
    7. 'ok' → logprob: -8.75365924835205
    8. ' for' → logprob: -8.87865924835205
    9. 'result' → logprob: -9.75365924835205
    10. 'answer' → logprob: -9.75365924835205

Token 340: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8243446946144104
    2. 'index' → logprob: -0.8243446946144104
    3. 'range' → logprob: -2.5743446350097656
    4. 'value' → logprob: -3.4493446350097656
    5. 'find' → logprob: -4.824344635009766
    6. 'original' → logprob: -6.574344635009766
    7. 'indices' → logprob: -6.574344635009766
    8. 'sorted' → logprob: -7.199344635009766
    9. ' index' → logprob: -7.324344635009766
    10. 'position' → logprob: -7.824344635009766

Token 341: ' wouldn't' (ID: 24791)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001462619286030531
    2. ')' → logprob: -7.626462459564209
    3. ' for' → logprob: -7.876462459564209
    4. 'correct' → logprob: -8.876462936401367
    5. '#' → logprob: -9.251462936401367
    6. 'if' → logprob: -9.626462936401367
    7. 'pass' → logprob: -9.876462936401367
    8. 'valid' → logprob: -9.876462936401367
    9. 'assert' → logprob: -10.501462936401367
    10. 'print' → logprob: -10.501462936401367

Token 342: ' matter' (ID: 7165)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7169061899185181
    2. 'not' → logprob: -0.8419061899185181
    3. 'be' → logprob: -3.7169060707092285
    4. ' be' → logprob: -4.0919060707092285
    5. 'break' → logprob: -5.2169060707092285
    6. ' work' → logprob: -5.3419060707092285
    7. 'fail' → logprob: -5.3419060707092285
    8. 'cause' → logprob: -5.8419060707092285
    9. ' cause' → logprob: -6.2169060707092285
    10. '#' → logprob: -6.2169060707092285

Token 343: ' as' (ID: 472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002152165398001671
    2. ' for' → logprob: -6.752151966094971
    3. 'correct' → logprob: -7.877151966094971
    4. ')' → logprob: -8.752152442932129
    5. 'i' → logprob: -9.002152442932129
    6. 'valid' → logprob: -9.502152442932129
    7. 'assert' → logprob: -9.877152442932129
    8. 'if' → logprob: -10.127152442932129
    9. '```' → logprob: -10.252152442932129
    10. 'print' → logprob: -10.377152442932129

Token 344: ' union' (ID: 22208)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.7510896921157837
    2. 'find' → logprob: -1.5010896921157837
    3. 'B' → logprob: -2.376089572906494
    4. 'all' → logprob: -3.001089572906494
    5. 'the' → logprob: -3.126089572906494
    6. 'i' → logprob: -3.501089572906494
    7. 'for' → logprob: -4.126089572906494
    8. 'A' → logprob: -4.251089572906494
    9. 'values' → logprob: -4.251089572906494
    10. '#' → logprob: -4.876089572906494

Token 345: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020782900974154472
    2. '```' → logprob: -7.877078056335449
    3. 'correct' → logprob: -8.00207805633545
    4. ' for' → logprob: -8.12707805633545
    5. 'is' → logprob: -8.50207805633545
    6. ')
' → logprob: -8.50207805633545
    7. 'valid' → logprob: -9.12707805633545
    8. 'possible' → logprob: -9.37707805633545
    9. ')' → logprob: -9.50207805633545
    10. '#' → logprob: -9.62707805633545

Token 346: ' keys' (ID: 12994)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005146674811840057
    2. 'correct' → logprob: -8.37551498413086
    3. ' for' → logprob: -9.37551498413086
    4. 'valid' → logprob: -10.00051498413086
    5. 'possible' → logprob: -10.00051498413086
    6. 'ok' → logprob: -10.50051498413086
    7. 'assert' → logprob: -10.62551498413086
    8. 'flag' → logprob: -11.75051498413086
    9. '```' → logprob: -11.75051498413086
    10. 'print' → logprob: -11.87551498413086

Token 347: ' by' (ID: 656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016234104987233877
    2. ' for' → logprob: -7.251623630523682
    3. 'correct' → logprob: -7.626623630523682
    4. 'ok' → logprob: -9.251623153686523
    5. 'valid' → logprob: -9.376623153686523
    6. 'possible' → logprob: -9.751623153686523
    7. 'print' → logprob: -10.251623153686523
    8. 'pass' → logprob: -10.251623153686523
    9. '```' → logprob: -11.126623153686523
    10. 'if' → logprob: -11.376623153686523

Token 348: ' original' (ID: 4756)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.245462104678154
    2. 'find' → logprob: -1.7454620599746704
    3. 'range' → logprob: -3.87046217918396
    4. 'parent' → logprob: -4.245461940765381
    5. 'A' → logprob: -6.120461940765381
    6. ' find' → logprob: -6.370461940765381
    7. 'lambda' → logprob: -7.120461940765381
    8. 'v' → logprob: -7.370461940765381
    9. ' i' → logprob: -7.620461940765381
    10. 'input' → logprob: -7.745461940765381

Token 349: ' indices' (ID: 30378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008720364421606064
    2. ' for' → logprob: -8.250871658325195
    3. 'i' → logprob: -8.875871658325195
    4. '
' → logprob: -9.125871658325195
    5. 'parent' → logprob: -9.500871658325195
    6. ')' → logprob: -9.750871658325195
    7. '```' → logprob: -9.875871658325195
    8. '#' → logprob: -10.250871658325195
    9. 'correct' → logprob: -10.250871658325195
    10. ')
' → logprob: -10.500871658325195

Token 350: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021954562980681658
    2. 'correct' → logprob: -7.127195358276367
    3. 'possible' → logprob: -7.627195358276367
    4. ' for' → logprob: -7.877195358276367
    5. 'valid' → logprob: -8.502195358276367
    6. 'print' → logprob: -9.377195358276367
    7. 'ok' → logprob: -9.377195358276367
    8. 'answer' → logprob: -9.877195358276367
    9. 'result' → logprob: -10.627195358276367
    10. 'flag' → logprob: -10.877195358276367

Token 351: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0034070396795868874
    2. 'possible' → logprob: -6.378407001495361
    3. 'ok' → logprob: -7.628407001495361
    4. 'correct' → logprob: -8.12840747833252
    5. 'valid' → logprob: -8.25340747833252
    6. 'flag' → logprob: -8.50340747833252
    7. 'print' → logprob: -8.62840747833252
    8. 'ans' → logprob: -9.50340747833252
    9. 'if' → logprob: -10.00340747833252
    10. ' for' → logprob: -10.12840747833252

Token 352: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002678629709407687
    2. ' i' → logprob: -6.252678394317627
    3. 'c' → logprob: -7.502678394317627
    4. 'r' → logprob: -9.877678871154785
    5. 'root' → logprob: -9.877678871154785
    6. 'p' → logprob: -10.002678871154785
    7. 'idx' → logprob: -10.877678871154785
    8. 'comp' → logprob: -11.252678871154785
    9. 'k' → logprob: -11.877678871154785
    10. 'u' → logprob: -12.877678871154785

Token 353: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5797823071479797
    2. 'in' → logprob: -0.8297823071479797
    3. ',' → logprob: -5.579782485961914
    4. ' ' → logprob: -10.079782485961914
    5. ' ,' → logprob: -11.079782485961914
    6. '_' → logprob: -14.079782485961914
    7. ',in' → logprob: -14.079782485961914
    8. 'range' → logprob: -14.579782485961914
    9. '	in' → logprob: -14.704782485961914
    10. 'import' → logprob: -15.079782485961914

Token 354: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.611323624383658e-05
    2. ' range' → logprob: -9.625065803527832
    3. ' ' → logprob: -18.12506675720215
    4. '(range' → logprob: -18.12506675720215
    5. '   ' → logprob: -18.50006675720215
    6. '
' → logprob: -18.75006675720215
    7. '	range' → logprob: -19.25006675720215
    8. '  ' → logprob: -19.37506675720215
    9. 'ran' → logprob: -19.50006675720215
    10. 'r' → logprob: -19.62506675720215

Token 355: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.31326910853385925
    2. '(N' → logprob: -1.3132691383361816
    3. '(' → logprob: -11.938268661499023
    4. ' N' → logprob: -15.063268661499023
    5. '	N' → logprob: -15.188268661499023
    6. '   ' → logprob: -15.688268661499023
    7. '(
' → logprob: -16.563268661499023
    8. ',N' → logprob: -17.063268661499023
    9. '
' → logprob: -17.313268661499023
    10. '(len' → logprob: -17.688268661499023

Token 356: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02329101227223873
    2. '):
' → logprob: -3.7732911109924316
    3. '):
' → logprob: -10.773290634155273
    4. ')' → logprob: -11.273290634155273
    5. ' ):' → logprob: -11.648290634155273
    6. ':' → logprob: -13.523290634155273
    7. '):

' → logprob: -14.023290634155273
    8. '   ' → logprob: -15.523290634155273
    9. ' ' → logprob: -15.523290634155273
    10. ' ):
' → logprob: -15.648290634155273

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011962895281612873
    2. 'comp' → logprob: -4.511962890625
    3. ' comp' → logprob: -7.761962890625
    4. 'if' → logprob: -7.886962890625
    5. ' if' → logprob: -10.011962890625
    6. '       ' → logprob: -10.011962890625
    7. '	comp' → logprob: -11.011962890625
    8. '```' → logprob: -13.511962890625
    9. ' ' → logprob: -13.636962890625
    10. '.comp' → logprob: -13.886962890625

Token 358: ' if' (ID: 538)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0005600620643235743
    2. 'if' (adapté à ' if') → logprob: -7.750560283660889
    3. ' comp' → logprob: -9.25055980682373
    4. '   ' → logprob: -10.50055980682373
    5. '
' → logprob: -12.50055980682373
    6. ' if' → logprob: -14.12555980682373
    7. '	comp' → logprob: -15.00055980682373
    8. 'com' → logprob: -15.37555980682373
    9. 'cmp' → logprob: -16.125560760498047
    10. 'Comp' → logprob: -16.500560760498047

Token 359: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.009224479086697102
    2. 'comp' → logprob: -4.8842244148254395
    3. 'len' → logprob: -6.5092244148254395
    4. ' sorted' → logprob: -9.384224891662598
    5. 'sort' → logprob: -10.884224891662598
    6. '(sorted' → logprob: -12.009224891662598
    7. 'counter' → logprob: -12.134224891662598
    8. '   ' → logprob: -12.134224891662598
    9. 'Counter' → logprob: -13.384224891662598
    10. 'Comp' → logprob: -13.634224891662598

Token 360: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -3.8889261304575484e-06
    2. 'comp' → logprob: -12.625003814697266
    3. '(' → logprob: -14.625003814697266
    4. '(com' → logprob: -16.125003814697266
    5. '	comp' → logprob: -18.500003814697266
    6. ' (' → logprob: -19.000003814697266
    7. ' comp' → logprob: -20.125003814697266
    8. '(c' → logprob: -21.000003814697266
    9. '(cont' → logprob: -21.375003814697266
    10. '(
' → logprob: -21.375003814697266

Token 361: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -5.319370302458992e-06
    2. '[i' → logprob: -12.750005722045898
    3. 'A' → logprob: -13.000005722045898
    4. '_B' → logprob: -17.1250057220459
    5. '[A' → logprob: -17.3750057220459
    6. '```' → logprob: -17.6250057220459
    7. '(i' → logprob: -18.6250057220459
    8. '[_' → logprob: -18.7500057220459
    9. '[' → logprob: -19.5000057220459
    10. '   ' → logprob: -19.7500057220459

Token 362: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.625000953674316
    3. ')[' → logprob: -15.875000953674316
    4. ')' → logprob: -17.125
    5. 'i' → logprob: -17.375
    6. '```' → logprob: -17.375
    7. '[
' → logprob: -17.625
    8. '(i' → logprob: -17.625
    9. '[I' → logprob: -17.875
    10. ' [' → logprob: -18.125

Token 363: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02334645204246044
    2. '])' → logprob: -3.898346424102783
    3. ')!=' → logprob: -5.898346424102783
    4. '())' → logprob: -11.148346900939941
    5. ' )' → logprob: -11.648346900939941
    6. '）' → logprob: -11.773346900939941
    7. '})' → logprob: -12.148346900939941
    8. ']!=' → logprob: -12.273346900939941
    9. ')!' → logprob: -13.023346900939941
    10. '`)' → logprob: -13.023346900939941

Token 364: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.009841437451541424
    2. ' !=' → logprob: -4.634841442108154
    3. '()!=' → logprob: -9.759840965270996
    4. ')!=' → logprob: -11.509840965270996
    5. '==' → logprob: -12.384840965270996
    6. '!==' → logprob: -12.509840965270996
    7. ']!=' → logprob: -12.634840965270996
    8. '   ' → logprob: -12.884840965270996
    9. '```' → logprob: -13.759840965270996
    10. '<>' → logprob: -14.009840965270996

Token 365: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.010720713064074516
    2. ' sorted' → logprob: -5.135720729827881
    3. 'comp' → logprob: -5.385720729827881
    4. '   ' → logprob: -8.635720252990723
    5. ' comp' → logprob: -11.510720252990723
    6. '    
' → logprob: -13.010720252990723
    7. '    ' → logprob: -13.260720252990723
    8. '(sorted' → logprob: -13.385720252990723
    9. '  ' → logprob: -13.760720252990723
    10. '
' → logprob: -13.760720252990723

Token 366: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -9.088346359931165e-07
    2. 'comp' → logprob: -14.000000953674316
    3. '(' → logprob: -17.25
    4. ' (' → logprob: -17.5
    5. '	comp' → logprob: -19.375
    6. '(com' → logprob: -20.25
    7. '```' → logprob: -20.25
    8. ' comp' → logprob: -20.25
    9. '(component' → logprob: -22.0
    10. '(
' → logprob: -22.625

Token 367: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -8.180258191714529e-06
    2. 'B' → logprob: -11.750008583068848
    3. 'comp' → logprob: -16.37500762939453
    4. 'i' → logprob: -16.37500762939453
    5. '[i' → logprob: -18.00000762939453
    6. '_A' → logprob: -18.75000762939453
    7. '```' → logprob: -19.25000762939453
    8. '   ' → logprob: -19.75000762939453
    9. '(comp' → logprob: -20.25000762939453
    10. '(i' → logprob: -20.25000762939453

Token 368: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '(i' → logprob: -13.625001907348633
    3. 'i' → logprob: -16.375001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '[' → logprob: -17.375001907348633
    6. '```' → logprob: -17.500001907348633
    7. ' [' → logprob: -17.750001907348633
    8. ')[' → logprob: -18.125001907348633
    9. '[
' → logprob: -18.250001907348633
    10. ')' → logprob: -19.125001907348633

Token 369: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.3215172588825226
    2. '):' → logprob: -1.3215172290802002
    3. ']):
' → logprob: -5.946517467498779
    4. ')' → logprob: -6.321517467498779
    5. ']:' → logprob: -6.696517467498779
    6. ']' → logprob: -7.071517467498779
    7. '])' → logprob: -7.196517467498779
    8. '):
' → logprob: -7.321517467498779
    9. '   ' → logprob: -8.571516990661621
    10. '       ' → logprob: -10.321516990661621

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009149204124696553
    2. 'print' → logprob: -7.250915050506592
    3. ' print' → logprob: -8.750914573669434
    4. '```' → logprob: -10.375914573669434
    5. '   ' → logprob: -11.500914573669434
    6. '
' → logprob: -13.000914573669434
    7. '           ' → logprob: -13.875914573669434
    8. '        
' → logprob: -14.125914573669434
    9. '``' → logprob: -15.375914573669434
    10. '	print' → logprob: -15.500914573669434

Token 371: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.857719275401905e-05
    2. '   ' → logprob: -10.250038146972656
    3. ' print' → logprob: -13.250038146972656
    4. '```' → logprob: -13.750038146972656
    5. '
' → logprob: -15.625038146972656
    6. '       ' → logprob: -16.000038146972656
    7. '    
' → logprob: -17.500038146972656
    8. '	print' → logprob: -17.875038146972656
    9. '``' → logprob: -18.125038146972656
    10. '           ' → logprob: -20.125038146972656

Token 372: '(' (ID: 7)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.23367300629615784
    2. '"No' → logprob: -1.6086729764938354
    3. '"' → logprob: -5.608673095703125
    4. '("' → logprob: -5.608673095703125
    5. 'NO' → logprob: -7.608673095703125
    6. '(No' → logprob: -8.608673095703125
    7. '“No' → logprob: -9.108673095703125
    8. '('' → logprob: -10.733673095703125
    9. 'Yes' → logprob: -11.108673095703125
    10. ''' → logprob: -11.358673095703125

Token 373: '0' (ID: 15)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.03209662437438965
    2. '"' → logprob: -3.5320966243743896
    3. 'No' → logprob: -6.157096862792969
    4. ''' → logprob: -8.657096862792969
    5. '“No' → logprob: -10.282096862792969
    6. 'NO' → logprob: -11.657096862792969
    7. '"N' → logprob: -12.907096862792969
    8. '":' → logprob: -13.407096862792969
    9. '"H' → logprob: -14.782096862792969
    10. '>No' → logprob: -14.782096862792969

Token 374: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03153149411082268
    2. ')' → logprob: -3.906531572341919
    3. '       ' → logprob: -4.53153133392334
    4. '   ' → logprob: -9.53153133392334
    5. ')return' → logprob: -9.78153133392334
    6. ')
' → logprob: -11.15653133392334
    7. '           ' → logprob: -12.28153133392334
    8. '
' → logprob: -12.53153133392334
    9. ',' → logprob: -12.53153133392334
    10. ')`
' → logprob: -12.65653133392334

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033117449493147433
    2. '   ' → logprob: -8.625330924987793
    3. 'else' → logprob: -9.500330924987793
    4. '
' → logprob: -10.000330924987793
    5. '<|end|>' → logprob: -11.625330924987793
    6. '           ' → logprob: -12.500330924987793
    7. ' ' → logprob: -12.750330924987793
    8. '0' → logprob: -12.875330924987793
    9. 'print' → logprob: -13.500330924987793
    10. ' else' → logprob: -13.625330924987793

Token 376: ' break' (ID: 2338)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.024651357904076576
    2. 'sys' → logprob: -4.399651527404785
    3. '       ' → logprob: -4.899651527404785
    4. 'break' (adapté à ' break') → logprob: -5.649651527404785
    5. ' exit' → logprob: -8.399651527404785
    6. '   ' → logprob: -8.774651527404785
    7. 'print' → logprob: -8.899651527404785
    8. 'import' → logprob: -9.024651527404785
    9. '	exit' → logprob: -9.024651527404785
    10. '        
' → logprob: -9.399651527404785

Token 377: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.816093228830141e-06
    2. ' else' → logprob: -12.87500286102295
    3. '```' → logprob: -15.87500286102295
    4. '#else' → logprob: -17.000001907348633
    5. '_else' → logprob: -17.250001907348633
    6. '``' → logprob: -18.250001907348633
    7. '}else' → logprob: -18.375001907348633
    8. 'Else' → logprob: -18.500001907348633
    9. '	else' → logprob: -19.750001907348633
    10. '
' → logprob: -19.750001907348633

Token 378: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -5.676981345459353e-06
    2. ' else' → logprob: -12.125005722045898
    3. '```' → logprob: -16.1250057220459
    4. 'Else' → logprob: -18.0000057220459
    5. '	else' → logprob: -18.0000057220459
    6. '``' → logprob: -18.1250057220459
    7. '_else' → logprob: -18.1250057220459
    8. '#else' → logprob: -18.5000057220459
    9. '}else' → logprob: -18.8750057220459
    10. 'print' → logprob: -19.7500057220459

Token 379: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7357413172721863
    2. 'print' → logprob: -0.9857413172721863
    3. ':
' → logprob: -2.610741376876831
    4. ':' → logprob: -3.360741376876831
    5. '       ' → logprob: -3.860741376876831
    6. ' print' → logprob: -4.110741138458252
    7. '(' → logprob: -7.610741138458252
    8. '1' → logprob: -7.735741138458252
    9. '(print' → logprob: -7.860741138458252
    10. '           ' → logprob: -9.11074161529541

Token 380: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02994452230632305
    2. '   ' → logprob: -3.52994441986084
    3. '       ' → logprob: -9.27994441986084
    4. ' print' → logprob: -9.40494441986084
    5. '1' → logprob: -11.02994441986084
    6. '	print' → logprob: -13.77994441986084
    7. ' ' → logprob: -14.90494441986084
    8. '0' → logprob: -14.90494441986084
    9. '```' → logprob: -15.27994441986084
    10. '  ' → logprob: -16.279945373535156

Token 381: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.857719275401905e-05
    2. '   ' → logprob: -10.250038146972656
    3. ' print' → logprob: -12.750038146972656
    4. '1' → logprob: -15.500038146972656
    5. '	print' → logprob: -17.500038146972656
    6. '       ' → logprob: -20.000038146972656
    7. '```' → logprob: -20.250038146972656
    8. '
' → logprob: -20.625038146972656
    9. '0' → logprob: -20.750038146972656
    10. '100' → logprob: -21.750038146972656

Token 382: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197384372353554
    2. '(' → logprob: -2.811973810195923
    3. '("' → logprob: -12.311973571777344
    4. '"' → logprob: -13.561973571777344
    5. ' ' → logprob: -16.061973571777344
    6. '100' → logprob: -16.936973571777344
    7. '
' → logprob: -17.186973571777344
    8. '('' → logprob: -17.561973571777344
    9. '   ' → logprob: -17.686973571777344
    10. 'print' → logprob: -18.061973571777344

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '"' → logprob: -18.0
    4. '
' → logprob: -19.0
    5. '100' → logprob: -19.875
    6. '   ' → logprob: -22.0
    7. '１' → logprob: -22.125
    8. ')' → logprob: -22.375
    9. '`' → logprob: -22.75
    10. '

' → logprob: -22.875

Token 384: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -13.000004768371582
    3. ' )' → logprob: -13.750004768371582
    4. '```' → logprob: -14.500004768371582
    5. '())' → logprob: -15.875004768371582
    6. '
' → logprob: -16.000003814697266
    7. '')' → logprob: -16.375003814697266
    8. '()' → logprob: -16.875003814697266
    9. '`)' → logprob: -17.125003814697266
    10. '")' → logprob: -17.625003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 382
Tokens correctement prédits (1ère position, stricte): 148
Tokens correctement prédits (1ère position, avec adaptation): 165
Tokens correctement prédits (top 10): 331
Précision stricte (1ère position): 38.74%
Précision adaptée (1ère position): 43.19%
Précision (top 10): 86.65%
================================================================================
