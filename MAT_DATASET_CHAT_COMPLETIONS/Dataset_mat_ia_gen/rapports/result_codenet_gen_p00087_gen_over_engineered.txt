================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Union, Callable, Dict, Optional
import sys
import math

# --- Abstraction for Tokens ---

class Token(ABC):
    @abstractmethod
    def is_operator(self) -> bool:
        pass

class NumberToken(Token):
    def __init__(self, value: float):
        self.value = value

    def is_operator(self) -> bool:
        return False

    def __repr__(self):
        return f"NumberToken({self.value})"

class OperatorToken(Token):
    def __init__(self, symbol: str, func: Callable[[float, float], float]):
        self.symbol = symbol
        self.func = func

    def is_operator(self) -> bool:
        return True

    def __repr__(self):
        return f"OperatorToken('{self.symbol}')"

# --- Tokenizer ---

class Tokenizer:
    def __init__(self, operator_map: Dict[str, Callable[[float, float], float]]):
        self.operator_map = operator_map

    def tokenize(self, expression: str) -> List[Token]:
        tokens: List[Token] = []
        parts = expression.strip().split()
        for part in parts:
            if part in self.operator_map:
                tokens.append(OperatorToken(part, self.operator_map[part]))
            else:
                # Allow int or float parsing
                try:
                    val = float(part)
                except ValueError:
                    raise ValueError(f"Invalid token: {part}")
                tokens.append(NumberToken(val))
        return tokens

# --- Stack With Explicit Interface ---

class Stack:
    def __init__(self):
        self._container: List[float] = []

    def push(self, value: float) -> None:
        self._container.append(value)

    def pop(self) -> float:
        if not self._container:
            raise IndexError("Pop from empty stack")
        return self._container.pop()

    def size(self) -> int:
        return len(self._container)

    def __repr__(self):
        return f"Stack({self._container})"

# --- RPN Evaluator Abstraction ---

class Evaluator(ABC):
    @abstractmethod
    def evaluate(self, tokens: List[Token]) -> float:
        pass

class RPNEvaluator(Evaluator):
    def __init__(self, stack_factory: Callable[[], Stack]):
        self.stack_factory = stack_factory

    def evaluate(self, tokens: List[Token]) -> float:
        stack = self.stack_factory()
        for token in tokens:
            if token.is_operator():
                if stack.size() < 2:
                    raise ValueError("Not enough operands in stack for operator")

                rhs = stack.pop()
                lhs = stack.pop()
                result = token.func(lhs, rhs)
                stack.push(result)
            else:
                stack.push(token.value)
        if stack.size() != 1:
            raise ValueError("Invalid RPN expression: stack should have exactly one element after evaluation")
        return stack.pop()

# --- Factory for operators ---

def get_operator_map() -> Dict[str, Callable[[float, float], float]]:
    return {
        '+': lambda x, y: x + y,
        '-': lambda x, y: x - y,
        '*': lambda x, y: x * y,
        '/': lambda x, y: x / y
    }

# --- Main Controller to handle multiple datasets ---

class RPNCalculatorController:
    def __init__(self,
                 evaluator: Evaluator,
                 tokenizer: Tokenizer,
                 output_precision: int = 6):
        self.evaluator = evaluator
        self.tokenizer = tokenizer
        self.output_precision = output_precision

    def run(self, input_lines: List[str]) -> List[str]:
        results: List[str] = []
        for line in input_lines:
            if not line.strip():
                continue
            tokens = self.tokenizer.tokenize(line)
            value = self.evaluator.evaluate(tokens)
            # Format result with required precision and absolute tolerance on error
            formatted = f"{value:.{self.output_precision}f}"
            results.append(formatted)
        return results

# --- Main execution logic ---

def main():
    operator_map = get_operator_map()
    tokenizer = Tokenizer(operator_map=operator_map)
    evaluator = RPNEvaluator(stack_factory=Stack)
    controller = RPNCalculatorController(evaluator, tokenizer)

    input_lines = [line.rstrip('\n') for line in sys.stdin if line.strip()]
    results = controller.run(input_lines)

    print("\n".join(results))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.42944446206092834
    2. 'ABC' → logprob: -1.054444432258606
    3. 'AB' → logprob: -7.804444313049316
    4. ' A' → logprob: -9.179444313049316
    5. 'ABCDE' → logprob: -9.429444313049316
    6. 'import' → logprob: -9.929444313049316
    7. 'abstract' → logprob: -10.554444313049316
    8. 'A' → logprob: -10.679444313049316
    9. 'abc' → logprob: -10.929444313049316
    10. 'ABS' → logprob: -12.054444313049316

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28183513879776
    2. ',' → logprob: -1.4068350791931152
    3. 'import' → logprob: -8.156835556030273
    4. '```' → logprob: -9.406835556030273
    5. ' ,' → logprob: -9.906835556030273
    6. '' → logprob: -10.156835556030273
    7. ' ' → logprob: -10.281835556030273
    8. ',
' → logprob: -10.281835556030273
    9. ':' → logprob: -10.406835556030273
    10. ' .' → logprob: -10.781835556030273

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.48451441526412964
    2. ' abstract' → logprob: -0.9845144152641296
    3. 'Abstract' → logprob: -4.609514236450195
    4. ' ' → logprob: -9.109514236450195
    5. '.abstract' → logprob: -9.234514236450195
    6. 'Meta' → logprob: -10.109514236450195
    7. ' Abstract' → logprob: -10.359514236450195
    8. ' ABC' → logprob: -10.359514236450195
    9. ' A' → logprob: -10.859514236450195
    10. '```' → logprob: -10.984514236450195

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -9.805981972021982e-05
    2. 'classmethod' → logprob: -10.00009822845459
    3. 'm' → logprob: -11.00009822845459
    4. '_method' → logprob: -12.00009822845459
    5. 'meth' → logprob: -12.00009822845459
    6. 'staticmethod' → logprob: -12.25009822845459
    7. ' method' → logprob: -12.50009822845459
    8. 'abstract' → logprob: -12.75009822845459
    9. 'import' → logprob: -13.37509822845459
    10. 'ethod' → logprob: -13.37509822845459

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48189130425453186
    2. '```' → logprob: -1.4818912744522095
    3. 'class' → logprob: -2.356891393661499
    4. '

' → logprob: -4.23189115524292
    5. '<|end|>' → logprob: -4.35689115524292
    6. '' → logprob: -4.60689115524292
    7. '\n' → logprob: -4.85689115524292
    8. ' class' → logprob: -5.98189115524292
    9. '\' → logprob: -6.10689115524292
    10. '
' → logprob: -6.10689115524292

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '


' → logprob: -8.672632217407227

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5059148073196411
    2. 'import' → logprob: -1.2559148073196411
    3. '.' → logprob: -2.2559146881103516
    4. '.import' → logprob: -6.005914688110352
    5. '<|end|>' → logprob: -6.755914688110352
    6. ' ' → logprob: -7.005914688110352
    7. '```' → logprob: -7.380914688110352
    8. '[' → logprob: -7.505914688110352
    9. ' .' → logprob: -8.130914688110352
    10. '.space' → logprob: -8.505914688110352

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.35420724749565125
    2. 'Any' → logprob: -1.4792072772979736
    3. ' List' → logprob: -3.8542072772979736
    4. ' Union' → logprob: -4.1042070388793945
    5. ' Protocol' → logprob: -4.3542070388793945
    6. ' Callable' → logprob: -4.7292070388793945
    7. 'List' → logprob: -5.8542070388793945
    8. 'Protocol' → logprob: -6.3542070388793945
    9. ' Optional' → logprob: -6.3542070388793945
    10. 'Union' → logprob: -6.4792070388793945

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4726979434490204
    2. '
' → logprob: -1.2226979732513428
    3. '```' → logprob: -2.8476979732513428
    4. 'class' → logprob: -3.9726979732513428
    5. '``' → logprob: -6.347697734832764
    6. '\n' → logprob: -6.722697734832764
    7. '<|end|>' → logprob: -6.972697734832764
    8. '


' → logprob: -7.597697734832764
    9. ' class' → logprob: -8.222698211669922
    10. '
' → logprob: -8.472698211669922

Token 13: ' Union' (ID: 14746)
  Prédit: ' Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.1447416543960571
    2. ' Optional' → logprob: -1.1447416543960571
    3. ' Callable' → logprob: -1.5197416543960571
    4. 'Optional' → logprob: -3.1447415351867676
    5. ' Any' → logprob: -3.5197415351867676
    6. ' Protocol' → logprob: -4.394741535186768
    7. 'Any' → logprob: -4.519741535186768
    8. ' Tuple' → logprob: -4.519741535186768
    9. 'Union' → logprob: -4.769741535186768
    10. 'Callable' → logprob: -4.894741535186768

Token 14: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.156125009059906
    2. '

' → logprob: -2.656125068664551
    3. 'class' → logprob: -2.656125068664551
    4. '```' → logprob: -5.656125068664551
    5. '\n' → logprob: -8.40612506866455
    6. '
' → logprob: -8.40612506866455
    7. '``' → logprob: -9.28112506866455
    8. '


' → logprob: -11.28112506866455
    9. '<class' → logprob: -11.28112506866455
    10. ' class' → logprob: -11.28112506866455

Token 15: ' Callable' (ID: 94560)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.38094034790992737
    2. ' Callable' → logprob: -2.2559404373168945
    3. 'Optional' → logprob: -2.6309404373168945
    4. ' Any' → logprob: -2.6309404373168945
    5. 'Any' → logprob: -3.2559404373168945
    6. ' Dict' → logprob: -4.6309404373168945
    7. 'Callable' → logprob: -5.0059404373168945
    8. ' Tuple' → logprob: -5.0059404373168945
    9. 'Dict' → logprob: -6.1309404373168945
    10. 'Tuple' → logprob: -6.2559404373168945

Token 16: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6456177830696106
    2. '
' → logprob: -1.1456177234649658
    3. '

' → logprob: -2.020617723464966
    4. '```' → logprob: -3.895617723464966
    5. '\n' → logprob: -5.770617961883545
    6. '


' → logprob: -7.645617961883545
    7. '``' → logprob: -7.770617961883545
    8. '
' → logprob: -8.395617485046387
    9. ' class' → logprob: -9.020617485046387
    10. '<class' → logprob: -9.145617485046387

Token 17: ' Dict' (ID: 55179)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.8697992563247681
    2. 'Any' → logprob: -1.244799256324768
    3. 'Optional' → logprob: -1.869799256324768
    4. ' Any' → logprob: -1.994799256324768
    5. 'Iterable' → logprob: -7.1197991371154785
    6. ' Tuple' → logprob: -7.7447991371154785
    7. ' Iterable' → logprob: -7.7447991371154785
    8. 'Tuple' → logprob: -8.494799613952637
    9. ' Protocol' → logprob: -8.619799613952637
    10. 'Type' → logprob: -8.744799613952637

Token 18: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4812760353088379
    2. '
' → logprob: -1.356276035308838
    3. '

' → logprob: -2.231276035308838
    4. '```' → logprob: -4.231276035308838
    5. ' class' → logprob: -7.231276035308838
    6. '


' → logprob: -7.731276035308838
    7. '\n' → logprob: -7.856276035308838
    8. '``' → logprob: -8.10627555847168
    9. '
' → logprob: -8.85627555847168
    10. '<class' → logprob: -9.23127555847168

Token 19: ' Optional' (ID: 19351)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.897942066192627
    2. ' Any' → logprob: -1.022942066192627
    3. ' Optional' → logprob: -1.772942066192627
    4. 'Optional' → logprob: -2.772942066192627
    5. 'Iterable' → logprob: -8.522941589355469
    6. ' Tuple' → logprob: -8.897941589355469
    7. ' Protocol' → logprob: -9.272941589355469
    8. 'Type' → logprob: -9.522941589355469
    9. 'Tuple' → logprob: -9.522941589355469
    10. 'Protocol' → logprob: -9.897941589355469

Token 20: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6086359024047852
    2. '

' → logprob: -1.2336359024047852
    3. '
' → logprob: -1.8586359024047852
    4. ' class' → logprob: -5.608635902404785
    5. '```' → logprob: -5.983635902404785
    6. '


' → logprob: -7.108635902404785
    7. '\n' → logprob: -7.483635902404785
    8. '<class' → logprob: -8.608635902404785
    9. ' 

' → logprob: -8.983635902404785
    10. '
' → logprob: -8.983635902404785

Token 21: 'import' (ID: 561)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3052190840244293
    2. '
' → logprob: -1.430219054222107
    3. '

' → logprob: -3.8052191734313965
    4. '```' → logprob: -7.0552191734313965
    5. ' class' → logprob: -7.9302191734313965
    6. '
' → logprob: -9.430218696594238
    7. '


' → logprob: -9.930218696594238
    8. '\n' → logprob: -10.430218696594238
    9. ' 

' → logprob: -10.555218696594238
    10. '<class' → logprob: -10.680218696594238

Token 22: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.032098934054374695
    2. ' typing' → logprob: -4.407098770141602
    3. ' re' → logprob: -4.532098770141602
    4. ' json' → logprob: -5.157098770141602
    5. ' sys' → logprob: -7.407098770141602
    6. ' numpy' → logprob: -7.657098770141602
    7. ' ' → logprob: -7.907098770141602
    8. ' pandas' → logprob: -8.157098770141602
    9. ' collections' → logprob: -8.407098770141602
    10. ' datetime' → logprob: -8.407098770141602

Token 23: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.43320170044898987
    2. '
' → logprob: -1.1832016706466675
    3. 'class' → logprob: -3.808201789855957
    4. '\n' → logprob: -4.183201789855957
    5. '


' → logprob: -5.808201789855957
    6. '' → logprob: -6.183201789855957
    7. '```' → logprob: -7.433201789855957
    8. 'import' → logprob: -7.933201789855957
    9. '
' → logprob: -8.183201789855957
    10. '\' → logprob: -8.183201789855957

Token 24: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.0769946575164795
    2. 'class' → logprob: -1.0769946575164795
    3. '
' → logprob: -1.2019946575164795
    4. '\n' → logprob: -4.826994895935059
    5. '```' → logprob: -5.201994895935059
    6. ' class' → logprob: -6.326994895935059
    7. '' → logprob: -7.451994895935059
    8. '


' → logprob: -7.576994895935059
    9. '<|end|>' → logprob: -7.576994895935059
    10. 'import' → logprob: -8.076994895935059

Token 25: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0005533903022296727
    2. ' io' → logprob: -8.000553131103516
    3. ' typing' → logprob: -9.250553131103516
    4. 'os' → logprob: -9.625553131103516
    5. ' traceback' → logprob: -11.250553131103516
    6. ' pathlib' → logprob: -11.500553131103516
    7. ' functools' → logprob: -11.750553131103516
    8. ' ' → logprob: -12.375553131103516
    9. ' re' → logprob: -12.625553131103516
    10. ' math' → logprob: -12.750553131103516

Token 26: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1246948093175888
    2. '
' → logprob: -2.24969482421875
    3. 'class' → logprob: -4.87469482421875
    4. '\n' → logprob: -6.49969482421875
    5. '```' → logprob: -6.74969482421875
    6. '' → logprob: -7.74969482421875
    7. '
' → logprob: -8.12469482421875
    8. '#' → logprob: -8.62469482421875
    9. '


' → logprob: -8.62469482421875
    10. 'import' → logprob: -9.12469482421875

Token 27: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06647053360939026
    2. '
' → logprob: -3.0664706230163574
    3. '

' → logprob: -4.066470623016357
    4. '```' → logprob: -8.1914701461792
    5. '\n' → logprob: -8.8164701461792
    6. ' class' → logprob: -10.1914701461792
    7. 'c' → logprob: -10.3164701461792
    8. '
' → logprob: -10.6914701461792
    9. '' → logprob: -10.9414701461792
    10. '#' → logprob: -11.9414701461792

Token 28: ' ---' (ID: 26691)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6054908037185669
    2. ' class' → logprob: -0.8554908037185669
    3. ' ' → logprob: -3.7304906845092773
    4. ' 
' → logprob: -6.230490684509277
    5. ' 

' → logprob: -6.480490684509277
    6. '#' → logprob: -6.980490684509277
    7. 'c' → logprob: -8.605490684509277
    8. '```' → logprob: -9.480490684509277
    9. ' ```' → logprob: -9.855490684509277
    10. ' #' → logprob: -9.855490684509277

Token 29: ' Ab' (ID: 3483)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0108925336971879
    2. ' class' → logprob: -5.510892391204834
    3. ' 
' → logprob: -5.510892391204834
    4. '
' → logprob: -7.135892391204834
    5. ' 

' → logprob: -7.260892391204834
    6. '#' → logprob: -7.885892391204834
    7. '```' → logprob: -8.010892868041992
    8. 'c' → logprob: -8.635892868041992
    9. '

' → logprob: -9.260892868041992
    10. ' ' → logprob: -9.510892868041992

Token 30: 'straction' (ID: 79887)
  Prédit: 'stract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stract' → logprob: -0.24320688843727112
    2. 'c' → logprob: -1.6182068586349487
    3. 's' → logprob: -4.493206977844238
    4. 'st' → logprob: -5.493206977844238
    5. 'str' → logprob: -6.618206977844238
    6. 'stra' → logprob: -7.618206977844238
    7. 'cs' → logprob: -8.868206977844238
    8. '#' → logprob: -9.243206977844238
    9. 'straction' → logprob: -9.368206977844238
    10. '```' → logprob: -9.868206977844238

Token 31: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2152632176876068
    2. '
' → logprob: -1.7152632474899292
    3. '

' → logprob: -4.590263366699219
    4. ' class' → logprob: -6.840263366699219
    5. '
' → logprob: -7.090263366699219
    6. '```' → logprob: -7.340263366699219
    7. '\n' → logprob: -8.215263366699219
    8. '' → logprob: -8.715263366699219
    9. '_' → logprob: -8.840263366699219
    10. '#' → logprob: -9.090263366699219

Token 32: ' Tokens' (ID: 124325)
  Prédit: ' Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Data' → logprob: -1.895292043685913
    2. ' data' → logprob: -2.645292043685913
    3. ' Geometry' → logprob: -2.770292043685913
    4. ' the' → logprob: -2.895292043685913
    5. ' a' → logprob: -3.020292043685913
    6. ' Shape' → logprob: -3.270292043685913
    7. ' shapes' → logprob: -3.395292043685913
    8. ' an' → logprob: -3.770292043685913
    9. ' Model' → logprob: -4.020292282104492
    10. ' Layer' → logprob: -4.145292282104492

Token 33: ' --' (ID: 2230)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6264752149581909
    2. '
' → logprob: -1.251475214958191
    3. '

' → logprob: -1.751475214958191
    4. '```' → logprob: -5.7514753341674805
    5. ' class' → logprob: -7.2514753341674805
    6. '
' → logprob: -7.6264753341674805
    7. '#' → logprob: -8.00147533416748
    8. '\n' → logprob: -8.37647533416748
    9. '<|end|>' → logprob: -8.50147533416748
    10. '<|end|>' → logprob: -8.62647533416748

Token 34: '-

' (ID: 16364)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.045982908457517624
    2. '```' → logprob: -3.920982837677002
    3. '-' → logprob: -4.920982837677002
    4. '
' → logprob: -5.170982837677002
    5. ':' → logprob: -5.420982837677002
    6. '#' → logprob: -5.420982837677002
    7. ' class' → logprob: -6.545982837677002
    8. '-
' → logprob: -8.17098331451416
    9. '.' → logprob: -8.79598331451416
    10. '\n' → logprob: -8.92098331451416

Token 35: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0025040784385055304
    2. '
' → logprob: -6.002503871917725
    3. ' class' → logprob: -10.877504348754883
    4. '```' → logprob: -12.127504348754883
    5. '

' → logprob: -13.877504348754883
    6. '\n' → logprob: -14.252504348754883
    7. '<class' → logprob: -14.627504348754883
    8. ' 
' → logprob: -14.752504348754883
    9. 'clas' → logprob: -14.877504348754883
    10. '
' → logprob: -15.252504348754883

Token 36: ' Token' (ID: 17951)
  Prédit: ' Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Token' → logprob: -2.3557529857498594e-05
    2. 'Token' → logprob: -11.62502384185791
    3. ' Abstract' → logprob: -12.12502384185791
    4. ' ' → logprob: -12.25002384185791
    5. '	Token' → logprob: -12.87502384185791
    6. ' ' → logprob: -14.12502384185791
    7. ' Parser' → logprob: -15.50002384185791
    8. ' Space' → logprob: -15.50002384185791
    9. ' Tokens' → logprob: -15.62502384185791
    10. 'Tokenizer' → logprob: -15.75002384185791

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47488465905189514
    2. ':' → logprob: -0.9748846292495728
    3. '(Abstract' → logprob: -7.224884510040283
    4. ' :' → logprob: -10.474884986877441
    5. ':
' → logprob: -10.974884986877441
    6. '():' → logprob: -11.349884986877441
    7. '<|end|>' → logprob: -12.474884986877441
    8. '(object' → logprob: -12.849884986877441
    9. '(:' → logprob: -12.974884986877441
    10. '(Token' → logprob: -13.224884986877441

Token 38: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.14411544799804688
    2. ' ABC' → logprob: -2.019115447998047
    3. ')' → logprob: -7.019115447998047
    4. '):' → logprob: -8.019115447998047
    5. ' )' → logprob: -9.519115447998047
    6. ' ):' → logprob: -10.269115447998047
    7. 'object' → logprob: -10.769115447998047
    8. 'abc' → logprob: -10.769115447998047
    9. 'Abstract' → logprob: -10.894115447998047
    10. ' ' → logprob: -11.269115447998047

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003939728485420346
    2. ')' → logprob: -8.125393867492676
    3. ':' → logprob: -9.375393867492676
    4. ' ):' → logprob: -11.625393867492676
    5. '):
' → logprob: -12.625393867492676
    6. ',' → logprob: -14.625393867492676
    7. '>:' → logprob: -16.500394821166992
    8. '):

' → logprob: -16.875394821166992
    9. '():' → logprob: -17.000394821166992
    10. ':)' → logprob: -17.250394821166992

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014730898663401604
    2. '):' → logprob: -4.264730930328369
    3. ' :' → logprob: -7.764730930328369
    4. ')' → logprob: -9.139730453491211
    5. ':
' → logprob: -11.514730453491211
    6. '   ' → logprob: -11.639730453491211
    7. '():' → logprob: -12.639730453491211
    8. ',' → logprob: -12.889730453491211
    9. ':**' → logprob: -12.889730453491211
    10. ' ):' → logprob: -13.514730453491211

Token 41: ' @' (ID: 759)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0022693872451782
    2. '   ' → logprob: -1.2522693872451782
    3. '@' (adapté à ' @') → logprob: -1.6272693872451782
    4. 'def' → logprob: -2.3772692680358887
    5. ' def' → logprob: -3.6272692680358887
    6. ' @' → logprob: -4.377269268035889
    7. '    ' → logprob: -5.127269268035889
    8. ' pass' → logprob: -5.252269268035889
    9. 'pass' → logprob: -6.377269268035889
    10. ' ' → logprob: -6.877269268035889

Token 42: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0015634235460311174
    2. 'property' → logprob: -6.501563549041748
    3. 'init' → logprob: -9.87656307220459
    4. 'ab' → logprob: -13.00156307220459
    5. 'staticmethod' → logprob: -13.12656307220459
    6. 'abc' → logprob: -13.25156307220459
    7. 'classmethod' → logprob: -13.62656307220459
    8. ' abstract' → logprob: -14.00156307220459
    9. 'abs' → logprob: -14.12656307220459
    10. 'stract' → logprob: -14.37656307220459

Token 43: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.006730287801474333
    2. '_method' → logprob: -5.006730079650879
    3. 'meth' → logprob: -12.506730079650879
    4. 'classmethod' → logprob: -13.006730079650879
    5. '_' → logprob: -13.256730079650879
    6. '	method' → logprob: -13.756730079650879
    7. ' ' → logprob: -13.756730079650879
    8. 'def' → logprob: -13.881730079650879
    9. '   ' → logprob: -14.131730079650879
    10. 'Method' → logprob: -14.631730079650879

Token 44: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09665178507566452
    2. ' def' → logprob: -2.596651792526245
    3. '(' → logprob: -4.971651554107666
    4. '
' → logprob: -5.346651554107666
    5. '   ' → logprob: -6.346651554107666
    6. ' ' → logprob: -6.846651554107666
    7. '    
' → logprob: -7.096651554107666
    8. 'method' → logprob: -7.471651554107666
    9. ')' → logprob: -7.971651554107666
    10. '(def' → logprob: -8.096652030944824

Token 45: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08372005820274353
    2. '(' → logprob: -2.8337199687957764
    3. ' def' → logprob: -4.0837202072143555
    4. '   ' → logprob: -6.9587202072143555
    5. '(
' → logprob: -7.2087202072143555
    6. '<|end|>' → logprob: -7.2087202072143555
    7. 'method' → logprob: -7.5837202072143555
    8. '(def' → logprob: -7.8337202072143555
    9. '    
' → logprob: -8.083720207214355
    10. ':def' → logprob: -8.708720207214355

Token 46: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04792682081460953
    2. 'method' → logprob: -3.297926902770996
    3. ' def' → logprob: -4.797926902770996
    4. 'str' → logprob: -7.422926902770996
    5. 'call' → logprob: -8.172926902770996
    6. 'classmethod' → logprob: -8.547926902770996
    7. 'property' → logprob: -8.797926902770996
    8. '
' → logprob: -9.172926902770996
    9. '```' → logprob: -9.672926902770996
    10. 'meth' → logprob: -10.297926902770996

Token 47: ' is' (ID: 382)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7990022897720337
    2. ' evaluate' → logprob: -1.7990022897720337
    3. ' execute' → logprob: -2.049002170562744
    4. ' tokenize' → logprob: -2.424002170562744
    5. ' validate' → logprob: -3.299002170562744
    6. ' get' → logprob: -3.299002170562744
    7. ' process' → logprob: -3.674002170562744
    8. ' calculate' → logprob: -4.924002170562744
    9. ' apply' → logprob: -4.924002170562744
    10. ' decode' → logprob: -5.049002170562744

Token 48: '_operator' (ID: 97926)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.02510032430291176
    2. '_operator' → logprob: -4.150100231170654
    3. '_' → logprob: -6.025100231170654
    4. '_operand' → logprob: -6.150100231170654
    5. '_equal' → logprob: -7.025100231170654
    6. '_match' → logprob: -7.400100231170654
    7. '_terminal' → logprob: -7.525100231170654
    8. '_token' → logprob: -7.900100231170654
    9. '_literal' → logprob: -8.400100708007812
    10. '_number' → logprob: -8.525100708007812

Token 49: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11351744830608368
    2. '(' → logprob: -2.2385175228118896
    3. 'self' → logprob: -7.8635172843933105
    4. '(s' → logprob: -8.988517761230469
    5. ' (' → logprob: -9.238517761230469
    6. 's' → logprob: -10.488517761230469
    7. '_token' → logprob: -11.363517761230469
    8. '_self' → logprob: -11.738517761230469
    9. ' self' → logprob: -11.988517761230469
    10. '_' → logprob: -12.113517761230469

Token 50: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6488622426986694
    2. '):' → logprob: -1.1488622426986694
    3. ')' → logprob: -2.273862361907959
    4. 'self' → logprob: -2.898862361907959
    5. '(self' → logprob: -6.898862361907959
    6. '):
' → logprob: -7.773862361907959
    7. ' ,' → logprob: -8.2738618850708
    8. ':' → logprob: -8.7738618850708
    9. ',self' → logprob: -8.7738618850708
    10. 's' → logprob: -9.2738618850708

Token 51: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028022676706314087
    2. '(' → logprob: -6.12780237197876
    3. 'self' → logprob: -8.502801895141602
    4. '()' → logprob: -8.627801895141602
    5. ')' → logprob: -9.627801895141602
    6. '(s' → logprob: -10.127801895141602
    7. ' ->' → logprob: -10.502801895141602
    8. '->' → logprob: -10.627801895141602
    9. '():' → logprob: -10.627801895141602
    10. '   ' → logprob: -11.127801895141602

Token 52: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.03804344683885574
    2. 'bool' → logprob: -3.28804349899292
    3. ' ' → logprob: -13.788043022155762
    4. ' True' → logprob: -14.663043022155762
    5. '	bool' → logprob: -15.413043022155762
    6. ' None' → logprob: -16.163043975830078
    7. '<bool' → logprob: -16.163043975830078
    8. ' ' → logprob: -16.663043975830078
    9. '  ' → logprob: -17.288043975830078
    10. 'True' → logprob: -17.663043975830078

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017767686222214252
    2. ':
' → logprob: -9.625177383422852
    3. ':return' → logprob: -9.625177383422852
    4. '<|end|>' → logprob: -11.000177383422852
    5. '():' → logprob: -11.125177383422852
    6. '):' → logprob: -12.125177383422852
    7. ':def' → logprob: -12.625177383422852
    8. '.' → logprob: -13.750177383422852
    9. '   ' → logprob: -14.000177383422852
    10. ' :' → logprob: -14.000177383422852

Token 54: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.05261187627911568
    2. '       ' → logprob: -3.677611827850342
    3. 'pass' (adapté à ' pass') → logprob: -3.677611827850342
    4. ' raise' → logprob: -8.5526123046875
    5. '<|end|>' → logprob: -8.8026123046875
    6. '...' → logprob: -8.9276123046875
    7. '   ' → logprob: -9.4276123046875
    8. '    ' → logprob: -10.5526123046875
    9. '	pass' → logprob: -10.5526123046875
    10. ' return' → logprob: -10.8026123046875

Token 56: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35480543971061707
    2. '<|end|>' → logprob: -1.4798054695129395
    3. '   ' → logprob: -3.1048054695129395
    4. '\n' → logprob: -4.6048054695129395
    5. '    
' → logprob: -4.7298054695129395
    6. '<|end|>' → logprob: -5.6048054695129395
    7. ' 
' → logprob: -6.4798054695129395
    8. '

' → logprob: -7.7298054695129395
    9. '    ' → logprob: -8.479804992675781
    10. '```' → logprob: -8.479804992675781

Token 57: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' Number' (ID: 9184)
  Prédit: ' Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Number' → logprob: -0.1309962421655655
    2. ' Operand' → logprob: -2.3809962272644043
    3. ' Literal' → logprob: -4.130996227264404
    4. ' Identifier' → logprob: -5.005996227264404
    5. 'Number' → logprob: -5.505996227264404
    6. ' Token' → logprob: -6.755996227264404
    7. ' Value' → logprob: -7.005996227264404
    8. ' ' → logprob: -8.130996704101562
    9. ' Numeric' → logprob: -8.255996704101562
    10. 'Operand' → logprob: -8.505996704101562

Token 59: 'Token' (ID: 4421)
  Prédit: '(Token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Token' → logprob: -0.09536987543106079
    2. 'Token' → logprob: -2.595369815826416
    3. '(' → logprob: -4.970369815826416
    4. ':' → logprob: -5.470369815826416
    5. '):' → logprob: -5.845369815826416
    6. '	Token' → logprob: -6.720369815826416
    7. ' Token' → logprob: -7.470369815826416
    8. ')' → logprob: -8.345370292663574
    9. '<Token' → logprob: -8.845370292663574
    10. '_token' → logprob: -9.970370292663574

Token 60: '(Token' (ID: 78497)
  Prédit: '(Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Token' → logprob: -0.5538017749786377
    2. '(' → logprob: -1.5538017749786377
    3. ':' → logprob: -1.5538017749786377
    4. '():' → logprob: -7.053801536560059
    5. ' :' → logprob: -7.303801536560059
    6. '):' → logprob: -7.553801536560059
    7. '(token' → logprob: -10.053801536560059
    8. '(T' → logprob: -10.303801536560059
    9. '<Token' → logprob: -10.303801536560059
    10. ')' → logprob: -10.678801536560059

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006403613369911909
    2. ')' → logprob: -7.625640392303467
    3. ' ):' → logprob: -9.000639915466309
    4. '):
' → logprob: -10.750639915466309
    5. ':' → logprob: -12.375639915466309
    6. ',' → logprob: -13.625639915466309
    7. '):
' → logprob: -14.125639915466309
    8. '():' → logprob: -14.750639915466309
    9. '(' → logprob: -15.625639915466309
    10. '):

' → logprob: -15.875639915466309

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018083451315760612
    2. ':' → logprob: -4.268083572387695
    3. '    ' → logprob: -6.143083572387695
    4. ')' → logprob: -7.768083572387695
    5. '  ' → logprob: -8.018083572387695
    6. ' ' → logprob: -8.393083572387695
    7. '):' → logprob: -8.518083572387695
    8. '       ' → logprob: -8.768083572387695
    9. ' :' → logprob: -8.893083572387695
    10. '<|end|>' → logprob: -9.393083572387695

Token 63: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045877136290073395
    2. ' def' → logprob: -3.29587721824646
    3. '    ' → logprob: -5.045876979827881
    4. 'def' (adapté à ' def') → logprob: -7.170876979827881
    5. ' ' → logprob: -8.295877456665039
    6. '    
' → logprob: -8.670877456665039
    7. '  ' → logprob: -9.170877456665039
    8. ' 
' → logprob: -11.170877456665039
    9. ':' → logprob: -11.795877456665039
    10. ' int' → logprob: -11.795877456665039

Token 64: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04438506439328194
    2. ' __' → logprob: -3.5443849563598633
    3. ' def' → logprob: -4.294384956359863
    4. ' init' → logprob: -7.919384956359863
    5. ' ```' → logprob: -8.294384956359863
    6. ' ' → logprob: -9.294384956359863
    7. '_init' → logprob: -9.919384956359863
    8. ' _' → logprob: -10.794384956359863
    9. 'init' → logprob: -10.919384956359863
    10. '  ' → logprob: -11.044384956359863

Token 65: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0034607292618602514
    2. 'it' → logprob: -5.878460884094238
    3. 'nit' → logprob: -7.503460884094238
    4. ' init' → logprob: -9.753460884094238
    5. '   ' → logprob: -11.003460884094238
    6. '	init' → logprob: -12.128460884094238
    7. 'ini' → logprob: -12.253460884094238
    8. ' ' → logprob: -12.628460884094238
    9. '(init' → logprob: -13.003460884094238
    10. '```' → logprob: -13.128460884094238

Token 66: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0032763411290943623
    2. '__' → logprob: -6.503276348114014
    3. '(self' → logprob: -7.003276348114014
    4. '(' → logprob: -7.378276348114014
    5. '__(
' → logprob: -8.753275871276855
    6. '__((' → logprob: -10.003275871276855
    7. ' (' → logprob: -10.878275871276855
    8. '__('' → logprob: -12.503275871276855
    9. '__(*' → logprob: -12.503275871276855
    10. 'self' → logprob: -13.253275871276855

Token 67: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002052954863756895
    2. ' self' → logprob: -6.2520527839660645
    3. 'value' → logprob: -9.002053260803223
    4. ' value' → logprob: -13.752053260803223
    5. '	self' → logprob: -16.627052307128906
    6. '(self' → logprob: -17.502052307128906
    7. ' ' → logprob: -17.627052307128906
    8. 'number' → logprob: -17.877052307128906
    9. '   ' → logprob: -18.127052307128906
    10. '       ' → logprob: -20.127052307128906

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013294934295117855
    2. ' ,' → logprob: -4.888294696807861
    3. ',value' → logprob: -5.388294696807861
    4. 'value' → logprob: -6.888294696807861
    5. '(value' → logprob: -9.88829517364502
    6. ' value' → logprob: -11.76329517364502
    7. '_value' → logprob: -12.13829517364502
    8. 'self' → logprob: -12.26329517364502
    9. ' ' → logprob: -12.63829517364502
    10. 'number' → logprob: -12.76329517364502

Token 69: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.25201359391212463
    2. 'value' → logprob: -1.5020135641098022
    3. 'self' → logprob: -9.752013206481934
    4. ' self' → logprob: -11.252013206481934
    5. ' ' → logprob: -11.502013206481934
    6. ' number' → logprob: -14.127013206481934
    7. '```' → logprob: -14.502013206481934
    8. '   ' → logprob: -14.627013206481934
    9. '	value' → logprob: -14.752013206481934
    10. 'number' → logprob: -15.002013206481934

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.2576454335358e-05
    2. ' :' → logprob: -9.500092506408691
    3. '):' → logprob: -11.625092506408691
    4. ':int' → logprob: -12.125092506408691
    5. ')' → logprob: -13.250092506408691
    6. ' ):' → logprob: -14.000092506408691
    7. '<|end|>' → logprob: -15.250092506408691
    8. ' )' → logprob: -15.500092506408691
    9. '=' → logprob: -15.750092506408691
    10. '<|end|>' → logprob: -16.000093460083008

Token 71: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.02424687333405018
    2. 'float' → logprob: -4.149246692657471
    3. ' int' → logprob: -4.899246692657471
    4. 'int' → logprob: -7.524246692657471
    5. ' Union' → logprob: -8.899247169494629
    6. ' ' → logprob: -10.149247169494629
    7. '	float' → logprob: -13.024247169494629
    8. 'Union' → logprob: -13.274247169494629
    9. '=float' → logprob: -13.524247169494629
    10. '(float' → logprob: -13.649247169494629

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003110930323600769
    2. ')' → logprob: -5.878110885620117
    3. '):
' → logprob: -8.503110885620117
    4. ' ):' → logprob: -9.503110885620117
    5. ':' → logprob: -10.503110885620117
    6. ' )' → logprob: -14.378110885620117
    7. '   ' → logprob: -15.378110885620117
    8. ' ' → logprob: -16.253110885620117
    9. '):
' → logprob: -16.503110885620117
    10. ' ):
' → logprob: -17.378110885620117

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015581895131617785
    2. 'self' → logprob: -7.001558303833008
    3. ' self' → logprob: -7.376558303833008
    4. ' ' → logprob: -11.876558303833008
    5. '   ' → logprob: -12.376558303833008
    6. '      ' → logprob: -13.376558303833008
    7. '        ' → logprob: -13.376558303833008
    8. ')' → logprob: -13.626558303833008
    9. '    ' → logprob: -14.376558303833008
    10. ',' → logprob: -14.376558303833008

Token 74: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.39043980836868286
    2. 'self' (adapté à ' self') → logprob: -1.140439748764038
    3. '       ' → logprob: -5.640439987182617
    4. ' ' → logprob: -12.765439987182617
    5. '   ' → logprob: -12.890439987182617
    6. ' super' → logprob: -13.140439987182617
    7. '        ' → logprob: -13.390439987182617
    8. '	self' → logprob: -14.015439987182617
    9. 'super' → logprob: -14.265439987182617
    10. ' ' → logprob: -15.515439987182617

Token 75: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.08748430013656616
    2. '.' → logprob: -2.587484359741211
    3. ' value' → logprob: -5.337484359741211
    4. 'value' → logprob: -6.087484359741211
    5. ' .' → logprob: -6.712484359741211
    6. ' ' → logprob: -8.462484359741211
    7. ' =' → logprob: -10.587484359741211
    8. '   ' → logprob: -12.337484359741211
    9. '=' → logprob: -12.712484359741211
    10. '    ' → logprob: -12.712484359741211

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029765525832772255
    2. '=' → logprob: -3.5297656059265137
    3. ' ' → logprob: -11.529765129089355
    4. ':' → logprob: -12.654765129089355
    5. '<|end|>' → logprob: -14.029765129089355
    6. ' =)' → logprob: -14.654765129089355
    7. '=value' → logprob: -15.029765129089355
    8. '<|end|>' → logprob: -15.529765129089355
    9. ')' → logprob: -16.029766082763672
    10. ' =
' → logprob: -16.654766082763672

Token 77: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.061968132853507996
    2. 'value' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.436967849731445
    4. '(value' → logprob: -16.311967849731445
    5. '"value' → logprob: -16.436967849731445
    6. ')value' → logprob: -16.811967849731445
    7. ' ' → logprob: -17.061967849731445
    8. '	value' → logprob: -17.061967849731445
    9. '$value' → logprob: -17.686967849731445
    10. ''value' → logprob: -18.311967849731445

Token 78: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3538569211959839
    2. '
' → logprob: -1.6038569211959839
    3. '    
' → logprob: -3.1038570404052734
    4. '<|end|>' → logprob: -3.7288570404052734
    5. ' 
' → logprob: -4.478857040405273
    6. 'def' → logprob: -5.353857040405273
    7. ' def' → logprob: -5.978857040405273
    8. ' ' → logprob: -6.103857040405273
    9. '  
' → logprob: -6.103857040405273
    10. '        
' → logprob: -6.978857040405273

Token 80: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008710421621799469
    2. ' def' → logprob: -4.7587103843688965
    3. '   ' → logprob: -9.258710861206055
    4. '	def' → logprob: -15.383710861206055
    5. ' ' → logprob: -15.508710861206055
    6. '
' → logprob: -16.758710861206055
    7. '    
' → logprob: -17.633710861206055
    8. ')' → logprob: -18.008710861206055
    9. '    ' → logprob: -18.133710861206055
    10. '  ' → logprob: -18.258710861206055

Token 81: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0031791406217962503
    2. 'is' → logprob: -5.75317907333374
    3. ' ' → logprob: -14.003179550170898
    4. ' def' → logprob: -14.628179550170898
    5. '_is' → logprob: -15.753179550170898
    6. ' ' → logprob: -17.0031795501709
    7. '.is' → logprob: -18.1281795501709
    8. 'def' → logprob: -18.6281795501709
    9. ' isinstance' → logprob: -19.2531795501709
    10. ' return' → logprob: -19.3781795501709

Token 82: '_operator' (ID: 97926)
  Prédit: '_operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operator' → logprob: -0.00015979631280060858
    2. '_' → logprob: -8.750160217285156
    3. '_OPERATOR' → logprob: -14.750160217285156
    4. ' _' → logprob: -14.875160217285156
    5. 'operator' → logprob: -15.625160217285156
    6. '_operation' → logprob: -16.000160217285156
    7. '_operand' → logprob: -16.125160217285156
    8. '_oper' → logprob: -17.000160217285156
    9. '_op' → logprob: -17.000160217285156
    10. '_separator' → logprob: -18.250160217285156

Token 83: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007610293570905924
    2. '(self' → logprob: -5.382610321044922
    3. '(' → logprob: -5.882610321044922
    4. ' ()' → logprob: -8.632610321044922
    5. '():' → logprob: -11.257610321044922
    6. ' (' → logprob: -13.132610321044922
    7. '())' → logprob: -14.007610321044922
    8. '(

' → logprob: -14.007610321044922
    9. '()(' → logprob: -14.132610321044922
    10. '(
' → logprob: -14.757610321044922

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09672722220420837
    2. '()' → logprob: -2.596727132797241
    3. '())' → logprob: -4.59672737121582
    4. '():' → logprob: -5.09672737121582
    5. '):' → logprob: -7.22172737121582
    6. '(' → logprob: -8.09672737121582
    7. ' )' → logprob: -8.09672737121582
    8. ' ' → logprob: -10.34672737121582
    9. ' ()' → logprob: -10.84672737121582
    10. '   ' → logprob: -10.84672737121582

Token 85: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19581855833530426
    2. '()' → logprob: -1.945818543434143
    3. '(' → logprob: -4.0708184242248535
    4. '():' → logprob: -4.1958184242248535
    5. 'self' → logprob: -6.4458184242248535
    6. ')' → logprob: -6.9458184242248535
    7. ' ->' → logprob: -9.445818901062012
    8. ':' → logprob: -10.070818901062012
    9. 'return' → logprob: -10.195818901062012
    10. '->' → logprob: -10.570818901062012

Token 86: ' bool' (ID: 3792)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3135344386100769
    2. ' False' → logprob: -1.3135344982147217
    3. ' ' → logprob: -8.6885347366333
    4. 'False' → logprob: -9.4385347366333
    5. 'True' → logprob: -10.8135347366333
    6. ' bool' → logprob: -12.4385347366333
    7. ' space' → logprob: -15.5635347366333
    8. ' )' → logprob: -15.5635347366333
    9. ' None' → logprob: -16.813533782958984
    10. '(False' → logprob: -17.438533782958984

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10083022713661194
    2. '():' → logprob: -2.350830316543579
    3. ' :' → logprob: -7.600830078125
    4. '):' → logprob: -9.475830078125
    5. '():
' → logprob: -11.225830078125
    6. ':return' → logprob: -11.600830078125
    7. ':
' → logprob: -11.850830078125
    8. '()' → logprob: -12.225830078125
    9. '   ' → logprob: -12.600830078125
    10. '       ' → logprob: -12.725830078125

Token 88: '       ' (ID: 309)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.47614753246307373
    2. ' False' → logprob: -0.9761475324630737
    3. 'False' → logprob: -6.601147651672363
    4. 'True' → logprob: -7.476147651672363
    5. '    ' → logprob: -9.226147651672363
    6. ' return' → logprob: -10.351147651672363
    7. '   ' → logprob: -12.601147651672363
    8. ' 
' → logprob: -12.726147651672363
    9. ' ' → logprob: -12.851147651672363
    10. ' ' → logprob: -12.976147651672363

Token 89: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3932355046272278
    2. ' False' → logprob: -1.393235445022583
    3. 'True' → logprob: -3.143235445022583
    4. ' True' → logprob: -3.393235445022583
    5. 'return' (adapté à ' return') → logprob: -9.643235206604004
    6. ' return' → logprob: -9.893235206604004
    7. '       ' → logprob: -13.643235206604004
    8. '   ' → logprob: -15.643235206604004
    9. '(False' → logprob: -17.64323616027832
    10. '    ' → logprob: -19.01823616027832

Token 90: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.17392224073410034
    2. 'False' → logprob: -2.423922300338745
    3. ' True' → logprob: -2.673922300338745
    4. 'True' → logprob: -6.173922061920166
    5. '(False' → logprob: -18.048921585083008
    6. ' ' → logprob: -20.673921585083008
    7. '=False' → logprob: -21.048921585083008
    8. '(True' → logprob: -21.173921585083008
    9. '=True' → logprob: -22.923921585083008
    10. ' Tru' → logprob: -23.048921585083008

Token 91: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09814388304948807
    2. '<|end|>' → logprob: -2.5981438159942627
    3. '    
' → logprob: -5.098144054412842
    4. '   ' → logprob: -5.348144054412842
    5. '\n' → logprob: -6.223144054412842
    6. '

' → logprob: -6.473144054412842
    7. '<|end|>' → logprob: -6.848144054412842
    8. '```' → logprob: -6.973144054412842
    9. 'newline' → logprob: -7.098144054412842
    10. ' 
' → logprob: -7.098144054412842

Token 92: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0020091719925403595
    2. '

' → logprob: -7.627009391784668
    3. '<|end|>' → logprob: -7.627009391784668
    4. '```' → logprob: -8.377009391784668
    5. 'class' → logprob: -8.502009391784668
    6. '    
' → logprob: -8.502009391784668
    7. '\n' → logprob: -9.002009391784668
    8. '   ' → logprob: -9.377009391784668
    9. ' 
' → logprob: -9.627009391784668
    10. '<|end|>' → logprob: -10.502009391784668

Token 93: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.10450728237628937
    2. '
' → logprob: -2.6045072078704834
    3. '   ' → logprob: -3.8545072078704834
    4. ' class' → logprob: -6.6045074462890625
    5. '\n' → logprob: -6.9795074462890625
    6. '```' → logprob: -7.6045074462890625
    7. '    
' → logprob: -8.354507446289062
    8. ' ' → logprob: -8.354507446289062
    9. '<|end|>' → logprob: -8.604507446289062
    10. '

' → logprob: -9.104507446289062

Token 94: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12903885543346405
    2. ' def' → logprob: -2.1290388107299805
    3. '__' → logprob: -7.1290388107299805
    4. '_repr' → logprob: -7.3790388107299805
    5. 'repr' → logprob: -8.37903881072998
    6. ' repr' → logprob: -8.62903881072998
    7. ' str' → logprob: -9.25403881072998
    8. ' ' → logprob: -9.62903881072998
    9. ' ' → logprob: -10.37903881072998
    10. 'def' → logprob: -10.37903881072998

Token 95: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.2519512474536896
    2. 'str' → logprob: -1.5019512176513672
    3. 'eq' → logprob: -10.751951217651367
    4. 'float' → logprob: -15.376951217651367
    5. 're' → logprob: -15.376951217651367
    6. ' str' → logprob: -16.001951217651367
    7. 'rep' → logprob: -16.001951217651367
    8. ' repr' → logprob: -16.876951217651367
    9. 'init' → logprob: -18.126951217651367
    10. 'r' → logprob: -18.251951217651367

Token 96: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.17966203391551971
    2. '__' → logprob: -1.9296619892120361
    3. '(' → logprob: -4.679662227630615
    4. '__('' → logprob: -4.804662227630615
    5. '__(
' → logprob: -6.804662227630615
    6. '__("' → logprob: -7.679662227630615
    7. '_' → logprob: -9.054661750793457
    8. '__((' → logprob: -10.179661750793457
    9. '(self' → logprob: -10.929661750793457
    10. '__(*' → logprob: -11.554661750793457

Token 97: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029121272265911102
    2. 'f' → logprob: -3.654121160507202
    3. ')' → logprob: -5.904121398925781
    4. ' self' → logprob: -9.654121398925781
    5. '(self' → logprob: -11.779121398925781
    6. ' f' → logprob: -12.279121398925781
    7. ' )' → logprob: -12.779121398925781
    8. '{' → logprob: -12.904121398925781
    9. '	self' → logprob: -13.279121398925781
    10. ''f' → logprob: -13.779121398925781

Token 98: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9446077346801758
    2. '__' → logprob: -1.0696077346801758
    3. '__('' → logprob: -1.5696077346801758
    4. '__)' → logprob: -3.694607734680176
    5. '__("' → logprob: -4.819607734680176
    6. '<|end|>' → logprob: -4.819607734680176
    7. '__(' → logprob: -5.694607734680176
    8. '__(
' → logprob: -5.819607734680176
    9. ')__' → logprob: -6.194607734680176
    10. '__(*' → logprob: -6.569607734680176

Token 99: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.126930832862854
    2. ' f' → logprob: -2.1269307136535645
    3. '   ' → logprob: -13.501931190490723
    4. '       ' → logprob: -14.876931190490723
    5. ' ' → logprob: -15.126931190490723
    6. '    ' → logprob: -15.251931190490723
    7. ''f' → logprob: -15.376931190490723
    8. '	f' → logprob: -16.126930236816406
    9. 'str' → logprob: -17.126930236816406
    10. ' str' → logprob: -17.251930236816406

Token 100: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00011415231710998341
    2. 'return' (adapté à ' return') → logprob: -9.750114440917969
    3. 'str' → logprob: -10.000114440917969
    4. ' f' → logprob: -11.500114440917969
    5. '   ' → logprob: -15.625114440917969
    6. 'repr' → logprob: -16.50011444091797
    7. '       ' → logprob: -17.62511444091797
    8. ' str' → logprob: -19.37511444091797
    9. '<f' → logprob: -20.12511444091797
    10. ' return' → logprob: -20.37511444091797

Token 101: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5759403705596924
    2. 'f' → logprob: -0.8259403705596924
    3. '	f' → logprob: -14.825940132141113
    4. 'str' → logprob: -15.325940132141113
    5. ' str' → logprob: -15.450940132141113
    6. '(f' → logprob: -17.45094108581543
    7. ' ' → logprob: -17.70094108581543
    8. ' ' → logprob: -17.82594108581543
    9. 'F' → logprob: -17.95094108581543
    10. '"' → logprob: -18.20094108581543

Token 102: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001730510382913053
    2. 'f' → logprob: -6.626730442047119
    3. ''' → logprob: -8.751730918884277
    4. 'Number' → logprob: -8.876730918884277
    5. '(Number' → logprob: -10.126730918884277
    6. '"(' → logprob: -10.876730918884277
    7. '"<' → logprob: -11.001730918884277
    8. '(f' → logprob: -11.251730918884277
    9. '("' → logprob: -11.626730918884277
    10. '"N' → logprob: -12.376730918884277

Token 103: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.00026181264547631145
    2. '{' → logprob: -8.250262260437012
    3. ' Number' → logprob: -15.000262260437012
    4. '(Number' → logprob: -15.875262260437012
    5. ''' → logprob: -18.125261306762695
    6. ''{' → logprob: -18.375261306762695
    7. 'Num' → logprob: -18.500261306762695
    8. '"' → logprob: -18.750261306762695
    9. '_Number' → logprob: -18.750261306762695
    10. '<' → logprob: -19.375261306762695

Token 104: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -3.128163257315464e-07
    2. '(Token' → logprob: -16.125
    3. '<Token' → logprob: -16.375
    4. '(' → logprob: -17.0
    5. '(value' → logprob: -17.375
    6. '(f' → logprob: -17.875
    7. '{' → logprob: -17.875
    8. '(token' → logprob: -18.0
    9. 'token' → logprob: -18.0
    10. 'Value' → logprob: -19.375

Token 105: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.00013607845176011324
    2. '(' → logprob: -9.250136375427246
    3. '(value' → logprob: -11.000136375427246
    4. '(self' → logprob: -11.125136375427246
    5. '{' → logprob: -11.750136375427246
    6. '(f' → logprob: -15.625136375427246
    7. '({"' → logprob: -16.00013542175293
    8. '({
' → logprob: -16.12513542175293
    9. '("{' → logprob: -16.37513542175293
    10. '(({' → logprob: -17.62513542175293

Token 106: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4617256056226324e-05
    2. ' self' → logprob: -11.250014305114746
    3. '{' → logprob: -13.375014305114746
    4. '
' → logprob: -19.125015258789062
    5. 'repr' → logprob: -20.125015258789062
    6. 'f' → logprob: -20.250015258789062
    7. '{
' → logprob: -20.625015258789062
    8. '(self' → logprob: -20.875015258789062
    9. '	self' → logprob: -20.875015258789062
    10. '   ' → logprob: -20.875015258789062

Token 107: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.9146995327901095e-05
    2. '.' → logprob: -10.875019073486328
    3. ' .' → logprob: -16.625019073486328
    4. '.val' → logprob: -17.375019073486328
    5. '.number' → logprob: -17.500019073486328
    6. ').' → logprob: -17.625019073486328
    7. 'value' → logprob: -19.125019073486328
    8. '.values' → logprob: -19.375019073486328
    9. '.Value' → logprob: -20.125019073486328
    10. '}.' → logprob: -20.250019073486328

Token 108: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.5385913252830505
    2. ')' → logprob: -1.0385913848876953
    3. ')"' → logprob: -2.7885913848876953
    4. '}' → logprob: -7.538591384887695
    5. '}")' → logprob: -8.663591384887695
    6. '}"' → logprob: -9.288591384887695
    7. ')")' → logprob: -9.288591384887695
    8. ')}' → logprob: -9.788591384887695
    9. ' })' → logprob: -12.163591384887695
    10. ')`' → logprob: -12.288591384887695

Token 109: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5268940925598145
    2. '
' → logprob: -0.9018940925598145
    3. '

' → logprob: -5.9018940925598145
    4. '    
' → logprob: -8.276893615722656
    5. '<|end|>' → logprob: -8.276893615722656
    6. ' class' → logprob: -8.901893615722656
    7. '```' → logprob: -9.026893615722656
    8. '  
' → logprob: -9.276893615722656
    9. '   ' → logprob: -9.651893615722656
    10. ' 
' → logprob: -10.526893615722656

Token 111: ' Operator' (ID: 52567)
  Prédit: ' Operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Operator' → logprob: -0.014240018092095852
    2. 'Operator' → logprob: -4.26423978805542
    3. 'operator' → logprob: -10.514240264892578
    4. ' Plus' → logprob: -10.889240264892578
    5. 'class' → logprob: -11.139240264892578
    6. ' operator' → logprob: -11.764240264892578
    7. 'Plus' → logprob: -12.764240264892578
    8. ' Identifier' → logprob: -13.389240264892578
    9. '_operator' → logprob: -13.639240264892578
    10. ' Operators' → logprob: -14.389240264892578

Token 112: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -2.236549335066229e-05
    2. '(Token' → logprob: -11.000021934509277
    3. '	Token' → logprob: -12.875021934509277
    4. ' Token' → logprob: -12.875021934509277
    5. '<Token' → logprob: -15.500021934509277
    6. 'Tokenizer' → logprob: -15.875021934509277
    7. 'To' → logprob: -17.375022888183594
    8. '_token' → logprob: -17.625022888183594
    9. 'Tok' → logprob: -18.000022888183594
    10. '(T' → logprob: -18.375022888183594

Token 113: '(Token' (ID: 78497)
  Prédit: '(Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Token' → logprob: -0.0007164848502725363
    2. '(' → logprob: -7.250716686248779
    3. ' (' → logprob: -12.500716209411621
    4. '<Token' → logprob: -13.750716209411621
    5. '	Token' → logprob: -14.375716209411621
    6. '(token' → logprob: -14.750716209411621
    7. '(T' → logprob: -15.375716209411621
    8. '(Task' → logprob: -15.625716209411621
    9. ' Token' → logprob: -16.125717163085938
    10. ')(' → logprob: -16.875717163085938

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003091081976890564
    2. '(Token' → logprob: -5.878090858459473
    3. ')' → logprob: -9.378090858459473
    4. '):
' → logprob: -9.503090858459473
    5. '(' → logprob: -9.878090858459473
    6. ' ):' → logprob: -10.253090858459473
    7. ':' → logprob: -11.253090858459473
    8. '<Token' → logprob: -11.628090858459473
    9. '):
' → logprob: -12.628090858459473
    10. ',' → logprob: -12.878090858459473

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14258863031864166
    2. ':' → logprob: -3.0175886154174805
    3. '(Token' → logprob: -3.1425886154174805
    4. '):' → logprob: -4.0175886154174805
    5. '(' → logprob: -4.5175886154174805
    6. ' Token' → logprob: -5.7675886154174805
    7. ')' → logprob: -5.8925886154174805
    8. '	Token' → logprob: -6.1425886154174805
    9. '):
' → logprob: -6.5175886154174805
    10. '  ' → logprob: -7.5175886154174805

Token 116: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6284608840942383
    2. '   ' → logprob: -1.0034608840942383
    3. ' def' → logprob: -2.3784608840942383
    4. 'class' → logprob: -5.878460884094238
    5. '(' → logprob: -6.003460884094238
    6. 'ABC' → logprob: -7.003460884094238
    7. ' ' → logprob: -8.128460884094238
    8. ':' → logprob: -8.378460884094238
    9. '  ' → logprob: -9.003460884094238
    10. ' ABC' → logprob: -9.253460884094238

Token 117: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.744201123714447
    2. ' __' → logprob: -1.1192011833190918
    3. ' def' → logprob: -2.119201183319092
    4. 'def' → logprob: -3.494201183319092
    5. ' init' → logprob: -4.119201183319092
    6. '_init' → logprob: -4.369201183319092
    7. '__' → logprob: -4.619201183319092
    8. '```' → logprob: -5.619201183319092
    9. ' ' → logprob: -6.119201183319092
    10. 'abstract' → logprob: -7.369201183319092

Token 118: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.75
    3. '(init' → logprob: -20.125
    4. '_init' → logprob: -20.375
    5. 'repr' → logprob: -20.625
    6. 'def' → logprob: -22.5
    7. 'ini' → logprob: -22.75
    8. '.init' → logprob: -23.375
    9. 'str' → logprob: -23.5
    10. '```' → logprob: -23.5

Token 119: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.055579524487257004
    2. '__(' → logprob: -2.930579423904419
    3. '(' → logprob: -7.805579662322998
    4. ' (' → logprob: -8.30557918548584
    5. '__' → logprob: -10.93057918548584
    6. 'self' → logprob: -11.55557918548584
    7. '_(' → logprob: -12.43057918548584
    8. '__(
' → logprob: -12.55557918548584
    9. '(this' → logprob: -13.43057918548584
    10. ',' → logprob: -14.30557918548584

Token 120: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011105302110081539
    2. ' self' → logprob: -9.125110626220703
    3. '(self' → logprob: -14.125110626220703
    4. '
' → logprob: -14.250110626220703
    5. ',' → logprob: -14.875110626220703
    6. '       ' → logprob: -16.625110626220703
    7. '	self' → logprob: -17.125110626220703
    8. 'value' → logprob: -17.250110626220703
    9. '   ' → logprob: -17.250110626220703
    10. 'def' → logprob: -18.000110626220703

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003191501135006547
    2. 'self' → logprob: -5.7531914710998535
    3. ' ,' → logprob: -11.378191947937012
    4. '(self' → logprob: -13.878191947937012
    5. ',self' → logprob: -15.128191947937012
    6. 'value' → logprob: -15.253191947937012
    7. 'operator' → logprob: -15.503191947937012
    8. '   ' → logprob: -16.003190994262695
    9. '__,' → logprob: -16.128190994262695
    10. ',value' → logprob: -16.128190994262695

Token 122: ' symbol' (ID: 10038)
  Prédit: 'symbol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -0.049492791295051575
    2. ' symbol' → logprob: -3.049492835998535
    3. 'operator' → logprob: -7.674492835998535
    4. 'value' → logprob: -8.174492835998535
    5. 'op' → logprob: -9.299492835998535
    6. ' op' → logprob: -10.049492835998535
    7. ' operator' → logprob: -11.174492835998535
    8. ' value' → logprob: -12.299492835998535
    9. 'self' → logprob: -12.799492835998535
    10. '_symbol' → logprob: -14.424492835998535

Token 123: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004420386161655188
    2. '):' → logprob: -5.879420280456543
    3. ':str' → logprob: -6.879420280456543
    4. ',' → logprob: -7.504420280456543
    5. ')' → logprob: -10.754420280456543
    6. ' :' → logprob: -11.754420280456543
    7. '):
' → logprob: -12.754420280456543
    8. ' ):' → logprob: -13.754420280456543
    9. '   ' → logprob: -14.754420280456543
    10. ' ' → logprob: -15.504420280456543

Token 124: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.42887842655181885
    2. 'str' → logprob: -1.0538784265518188
    3. ' ' → logprob: -10.053878784179688
    4. ')' → logprob: -10.178878784179688
    5. ''' → logprob: -10.553878784179688
    6. ':str' → logprob: -10.678878784179688
    7. '[str' → logprob: -11.428878784179688
    8. ''s' → logprob: -11.803878784179688
    9. ' '' → logprob: -11.928878784179688
    10. '(str' → logprob: -12.053878784179688

Token 125: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01129007339477539
    2. ',' → logprob: -4.636290073394775
    3. '):
' → logprob: -6.636290073394775
    4. ' ):' → logprob: -9.011289596557617
    5. ')' → logprob: -9.636289596557617
    6. ':' → logprob: -10.636289596557617
    7. ' ,' → logprob: -12.636289596557617
    8. '):
' → logprob: -13.011289596557617
    9. '   ' → logprob: -13.136289596557617
    10. ' ' → logprob: -14.386289596557617

Token 126: ' func' (ID: 4660)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.31347396969795227
    2. ' precedence' → logprob: -1.3134739398956299
    3. 'priority' → logprob: -8.81347370147705
    4. 'prec' → logprob: -10.56347370147705
    5. ' prec' → logprob: -11.31347370147705
    6. ' preced' → logprob: -12.06347370147705
    7. 'arity' → logprob: -12.06347370147705
    8. ' priority' → logprob: -12.31347370147705
    9. '   ' → logprob: -12.81347370147705
    10. 'func' → logprob: -12.93847370147705

Token 127: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027349460287950933
    2. '):' → logprob: -8.250273704528809
    3. ')' → logprob: -11.625273704528809
    4. ' :' → logprob: -13.125273704528809
    5. ',' → logprob: -14.000273704528809
    6. ' ):' → logprob: -15.000273704528809
    7. '):
' → logprob: -16.625272750854492
    8. '_:' → logprob: -17.375272750854492
    9. ']:' → logprob: -18.125272750854492
    10. '=' → logprob: -18.250272750854492

Token 128: ' Callable' (ID: 94560)
  Prédit: ' Callable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Callable' → logprob: -0.5759484171867371
    2. 'Callable' → logprob: -0.8259484171867371
    3. ' Optional' → logprob: -12.700948715209961
    4. '_callable' → logprob: -12.950948715209961
    5. 'Optional' → logprob: -13.200948715209961
    6. ' callable' → logprob: -13.450948715209961
    7. 'Call' → logprob: -16.32594871520996
    8. 'call' → logprob: -16.32594871520996
    9. ' ' → logprob: -17.57594871520996
    10. ' Call' → logprob: -18.45094871520996

Token 129: '[[' (ID: 26245)
  Prédit: '[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.8072031140327454
    2. '):' → logprob: -1.3072030544281006
    3. ',' → logprob: -1.6822030544281006
    4. '[...,' → logprob: -2.4322030544281006
    5. ')' → logprob: -4.80720329284668
    6. '[' → logprob: -7.43220329284668
    7. '[['' → logprob: -7.80720329284668
    8. '):
' → logprob: -8.55720329284668
    9. '[,' → logprob: -9.93220329284668
    10. ' ,' → logprob: -10.93220329284668

Token 130: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0014514251379296184
    2. 'List' → logprob: -6.62645149230957
    3. ' float' → logprob: -9.12645149230957
    4. '[' → logprob: -12.12645149230957
    5. ',float' → logprob: -13.00145149230957
    6. '(float' → logprob: -13.12645149230957
    7. '	float' → logprob: -13.25145149230957
    8. 'flo' → logprob: -13.75145149230957
    9. '[List' → logprob: -13.87645149230957
    10. 'Optional' → logprob: -14.25145149230957

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007199380779638886
    2. ',float' → logprob: -7.250720024108887
    3. ' ,' → logprob: -11.625720024108887
    4. '],' → logprob: -15.250720024108887
    5. ',double' → logprob: -15.625720024108887
    6. ',
' → logprob: -15.625720024108887
    7. ',List' → logprob: -16.37571907043457
    8. 'float' → logprob: -16.50071907043457
    9. ',int' → logprob: -16.50071907043457
    10. ',bool' → logprob: -16.75071907043457

Token 132: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.020569678395986557
    2. ' float' → logprob: -3.8955695629119873
    3. 'Optional' → logprob: -11.145569801330566
    4. '	float' → logprob: -12.395569801330566
    5. ' ' → logprob: -13.020569801330566
    6. 'List' → logprob: -13.645569801330566
    7. ',float' → logprob: -13.895569801330566
    8. ' Optional' → logprob: -14.145569801330566
    9. 'flo' → logprob: -14.520569801330566
    10. '<float' → logprob: -14.520569801330566

Token 133: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -1.3306015716807451e-05
    2. ',' → logprob: -11.75001335144043
    3. ' ],' → logprob: -12.50001335144043
    4. ']' → logprob: -13.75001335144043
    5. '],
' → logprob: -15.12501335144043
    6. '),' → logprob: -16.12501335144043
    7. ''],' → logprob: -16.75001335144043
    8. ']],' → logprob: -17.00001335144043
    9. 'Optional' → logprob: -17.37501335144043
    10. '],
' → logprob: -18.25001335144043

Token 134: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10021033883094788
    2. ' float' → logprob: -2.350210428237915
    3. '	float' → logprob: -13.600210189819336
    4. ' ' → logprob: -14.850210189819336
    5. '<float' → logprob: -14.850210189819336
    6. 'Optional' → logprob: -15.100210189819336
    7. 'flo' → logprob: -15.100210189819336
    8. '=float' → logprob: -15.225210189819336
    9. 'Union' → logprob: -15.475210189819336
    10. '(float' → logprob: -15.600210189819336

Token 135: ']):
' (ID: 51989)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.09943875670433044
    2. ']):' → logprob: -3.0994386672973633
    3. '])' → logprob: -3.3494386672973633
    4. ']' → logprob: -4.974438667297363
    5. ',' → logprob: -5.349438667297363
    6. ']:' → logprob: -6.099438667297363
    7. '):' → logprob: -8.349438667297363
    8. ')' → logprob: -8.474438667297363
    9. '],
' → logprob: -9.974438667297363
    10. '),' → logprob: -10.099438667297363

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2383214831352234
    2. ',' → logprob: -2.113321542739868
    3. '):' → logprob: -3.238321542739868
    4. ':' → logprob: -3.613321542739868
    5. '):
' → logprob: -3.863321542739868
    6. ')' → logprob: -6.488321304321289
    7. ':
' → logprob: -7.113321304321289
    8. '<|end|>' → logprob: -7.238321304321289
    9. '   ' → logprob: -7.363321304321289
    10. '<|end|>' → logprob: -9.113321304321289

Token 137: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2851962745189667
    2. 'self' (adapté à ' self') → logprob: -1.410196304321289
    3. '       ' → logprob: -5.535196304321289
    4. '	self' → logprob: -10.410196304321289
    5. ' ' → logprob: -10.660196304321289
    6. '   ' → logprob: -11.285196304321289
    7. ' super' → logprob: -11.410196304321289
    8. 'super' → logprob: -12.160196304321289
    9. '        ' → logprob: -12.910196304321289
    10. ' ' → logprob: -13.410196304321289

Token 138: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.01732160523533821
    2. 'symbol' → logprob: -4.517321586608887
    3. '.' → logprob: -5.142321586608887
    4. ' symbol' → logprob: -7.892321586608887
    5. ' .' → logprob: -10.767321586608887
    6. '_symbol' → logprob: -12.392321586608887
    7. '.sym' → logprob: -12.642321586608887
    8. '.Symbol' → logprob: -13.267321586608887
    9. '(symbol' → logprob: -13.892321586608887
    10. 'Symbol' → logprob: -14.267321586608887

Token 139: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2299680858850479
    2. '<|end|>' → logprob: -2.3549680709838867
    3. ' =' → logprob: -2.8549680709838867
    4. '=' → logprob: -3.2299680709838867
    5. ':' → logprob: -4.979968070983887
    6. ')' → logprob: -5.729968070983887
    7. ' ,' → logprob: -6.104968070983887
    8. ' ' → logprob: -7.229968070983887
    9. '<|end|>' → logprob: -8.604968070983887
    10. ' )' → logprob: -10.354968070983887

Token 140: ' symbol' (ID: 10038)
  Prédit: ' symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbol' → logprob: -0.4741332530975342
    2. 'symbol' → logprob: -0.9741332530975342
    3. ' ' → logprob: -10.349133491516113
    4. '(symbol' → logprob: -11.474133491516113
    5. '_symbol' → logprob: -12.349133491516113
    6. ' ' → logprob: -12.474133491516113
    7. ' symbole' → logprob: -13.599133491516113
    8. ' simbol' → logprob: -14.474133491516113
    9. 'ymbol' → logprob: -14.474133491516113
    10. 'sym' → logprob: -14.599133491516113

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004883344518020749
    2. '<|end|>' → logprob: -8.00048828125
    3. ',' → logprob: -9.37548828125
    4. 'self' → logprob: -10.12548828125
    5. '<|end|>' → logprob: -11.12548828125
    6. '   ' → logprob: -12.50048828125
    7. ' self' → logprob: -12.50048828125
    8. ' ' → logprob: -13.75048828125
    9. '      ' → logprob: -14.25048828125
    10. '
' → logprob: -14.50048828125

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022940391500014812
    2. '<|end|>' → logprob: -8.625229835510254
    3. 'self' → logprob: -10.250229835510254
    4. ' self' → logprob: -11.875229835510254
    5. '<|end|>' → logprob: -12.750229835510254
    6. ',' → logprob: -13.125229835510254
    7. '   ' → logprob: -13.500229835510254
    8. ' ' → logprob: -14.625229835510254
    9. '        
' → logprob: -15.875229835510254
    10. '	self' → logprob: -16.125228881835938

Token 143: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.575563020305708e-05
    2. ' self' → logprob: -9.750065803527832
    3. '       ' → logprob: -11.875065803527832
    4. 'func' → logprob: -15.125065803527832
    5. 'super' → logprob: -16.375064849853516
    6. '   ' → logprob: -17.375064849853516
    7. 'this' → logprob: -18.750064849853516
    8. '	self' → logprob: -19.000064849853516
    9. '           ' → logprob: -19.250064849853516
    10. '```' → logprob: -19.750064849853516

Token 144: '.func' (ID: 39446)
  Prédit: '.func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.func' → logprob: -0.25571563839912415
    2. 'func' → logprob: -1.8807156085968018
    3. ' func' → logprob: -2.6307156085968018
    4. '.' → logprob: -7.255715847015381
    5. ' .' → logprob: -8.130715370178223
    6. '	func' → logprob: -10.005715370178223
    7. '.function' → logprob: -10.130715370178223
    8. '_func' → logprob: -10.380715370178223
    9. 'function' → logprob: -12.380715370178223
    10. '   ' → logprob: -12.630715370178223

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3870019316673279
    2. ' =' → logprob: -1.1370019912719727
    3. '<|end|>' → logprob: -9.012001991271973
    4. ',' → logprob: -12.512001991271973
    5. ' ' → logprob: -13.387001991271973
    6. ')' → logprob: -13.762001991271973
    7. '=lambda' → logprob: -13.887001991271973
    8. '<|end|>' → logprob: -14.512001991271973
    9. '(' → logprob: -15.762001991271973
    10. '=}' → logprob: -15.762001991271973

Token 146: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.2519327998161316
    2. ' func' → logprob: -1.5019328594207764
    3. '(func' → logprob: -13.126933097839355
    4. '	func' → logprob: -13.501933097839355
    5. '_func' → logprob: -16.12693214416504
    6. ' ' → logprob: -16.50193214416504
    7. 'fun' → logprob: -16.50193214416504
    8. '.func' → logprob: -17.25193214416504
    9. 'Func' → logprob: -18.75193214416504
    10. 'f' → logprob: -19.00193214416504

Token 147: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019074546871706843
    2. '
' → logprob: -7.1269073486328125
    3. '<|end|>' → logprob: -7.1269073486328125
    4. '    
' → logprob: -8.626907348632812
    5. 'def' → logprob: -9.376907348632812
    6. '<|end|>' → logprob: -11.001907348632812
    7. ' def' → logprob: -12.126907348632812
    8. '  
' → logprob: -12.251907348632812
    9. '

' → logprob: -13.376907348632812
    10. '```' → logprob: -13.376907348632812

Token 149: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0010699660051614046
    2. ' def' → logprob: -7.001070022583008
    3. '   ' → logprob: -8.751070022583008
    4. '	def' → logprob: -16.626070022583008
    5. '    
' → logprob: -16.751070022583008
    6. '
' → logprob: -17.001070022583008
    7. '@property' → logprob: -17.626070022583008
    8. ' ' → logprob: -17.876070022583008
    9. '  ' → logprob: -19.126070022583008
    10. '       ' → logprob: -19.376070022583008

Token 150: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.31335049867630005
    2. 'is' → logprob: -1.3133504390716553
    3. 'def' → logprob: -9.813350677490234
    4. ' def' → logprob: -10.563350677490234
    5. ' ' → logprob: -13.188350677490234
    6. '.is' → logprob: -13.313350677490234
    7. '_is' → logprob: -13.688350677490234
    8. '```' → logprob: -14.188350677490234
    9. '   ' → logprob: -14.750850677490234
    10. ' be' → logprob: -14.875850677490234

Token 151: '_operator' (ID: 97926)
  Prédit: '_operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operator' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.125
    3. '_OPERATOR' → logprob: -17.0
    4. '_operation' → logprob: -17.0
    5. '_operand' → logprob: -17.875
    6. '_oper' → logprob: -18.0
    7. 'operator' → logprob: -18.25
    8. '_op' → logprob: -19.375
    9. ' _' → logprob: -20.75
    10. '_override' → logprob: -21.0

Token 152: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.625015258789062
    3. '()' → logprob: -12.125015258789062
    4. ' (' → logprob: -15.375015258789062
    5. ')' → logprob: -16.000015258789062
    6. 'self' → logprob: -16.375015258789062
    7. '(
' → logprob: -16.625015258789062
    8. '(s' → logprob: -17.125015258789062
    9. '   ' → logprob: -17.250015258789062
    10. 'return' → logprob: -18.250015258789062

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023352276533842087
    2. '(self' → logprob: -4.023352146148682
    3. 'self' → logprob: -5.273352146148682
    4. '   ' → logprob: -10.77335262298584
    5. '()' → logprob: -11.02335262298584
    6. ' )' → logprob: -11.89835262298584
    7. '(' → logprob: -11.89835262298584
    8. '       ' → logprob: -12.64835262298584
    9. '):
' → logprob: -12.77335262298584
    10. ' ' → logprob: -13.39835262298584

Token 154: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4933602809906006
    2. ')' → logprob: -0.9933602809906006
    3. ' ->' → logprob: -4.61836051940918
    4. '()' → logprob: -5.24336051940918
    5. 'self' → logprob: -6.74336051940918
    6. '(' → logprob: -6.99336051940918
    7. ' (' → logprob: -7.24336051940918
    8. '->' → logprob: -7.36836051940918
    9. ' )' → logprob: -8.24336051940918
    10. '       ' → logprob: -9.99336051940918

Token 155: ' bool' (ID: 3792)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.004097993019968271
    2. 'True' → logprob: -5.754097938537598
    3. ' bool' → logprob: -7.004097938537598
    4. 'bool' → logprob: -11.379097938537598
    5. ' ' → logprob: -15.629097938537598
    6. ' return' → logprob: -17.504098892211914
    7. ' true' → logprob: -17.504098892211914
    8. '(True' → logprob: -17.754098892211914
    9. '=True' → logprob: -18.254098892211914
    10. ' def' → logprob: -18.254098892211914

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036719252821058035
    2. ':
' → logprob: -6.253672122955322
    3. ')' → logprob: -7.003672122955322
    4. '->' → logprob: -7.503672122955322
    5. ':return' → logprob: -8.878671646118164
    6. ' ->' → logprob: -10.003671646118164
    7. '():' → logprob: -10.628671646118164
    8. '):' → logprob: -10.753671646118164
    9. '       ' → logprob: -11.128671646118164
    10. '   ' → logprob: -11.878671646118164

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008594118990004063
    2. '        ' → logprob: -7.500859260559082
    3. ' return' → logprob: -8.250859260559082
    4. ' True' → logprob: -10.375859260559082
    5. 'return' → logprob: -11.875859260559082
    6. 'True' → logprob: -13.250859260559082
    7. ' ' → logprob: -13.500859260559082
    8. '    ' → logprob: -13.500859260559082
    9. ' true' → logprob: -14.250859260559082
    10. '   ' → logprob: -14.750859260559082

Token 158: ' return' (ID: 622)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.09714799374341965
    2. 'return' (adapté à ' return') → logprob: -2.5971479415893555
    3. ' True' → logprob: -4.3471479415893555
    4. ' return' → logprob: -5.8471479415893555
    5. '       ' → logprob: -6.0971479415893555
    6. '   ' → logprob: -11.472147941589355
    7. '           ' → logprob: -14.597147941589355
    8. '    ' → logprob: -15.847147941589355
    9. 'true' → logprob: -15.972147941589355
    10. '=True' → logprob: -16.472148895263672

Token 159: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4740770161151886
    2. ' True' → logprob: -0.9740769863128662
    3. '(True' → logprob: -19.349077224731445
    4. '=True' → logprob: -20.224077224731445
    5. ' Tru' → logprob: -20.974077224731445
    6. ' ' → logprob: -22.474077224731445
    7. ' ' → logprob: -23.599077224731445
    8. 'true' → logprob: -23.724077224731445
    9. ' true' → logprob: -23.724077224731445
    10. '.True' → logprob: -23.724077224731445

Token 160: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033443020656704903
    2. '
' → logprob: -6.003344535827637
    3. '<|end|>' → logprob: -7.253344535827637
    4. 'def' → logprob: -9.503344535827637
    5. '    
' → logprob: -10.503344535827637
    6. '<|end|>' → logprob: -10.628344535827637
    7. '```' → logprob: -11.003344535827637
    8. ' ' → logprob: -12.003344535827637
    9. '  ' → logprob: -12.253344535827637
    10. ' def' → logprob: -13.253344535827637

Token 162: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16040974855422974
    2. '   ' → logprob: -1.910409688949585
    3. ' def' → logprob: -8.785409927368164
    4. '
' → logprob: -11.410409927368164
    5. '    
' → logprob: -12.035409927368164
    6. ' ' → logprob: -12.285409927368164
    7. '```' → logprob: -12.785409927368164
    8. '<|end|>' → logprob: -12.785409927368164
    9. '  ' → logprob: -13.160409927368164
    10. '	def' → logprob: -13.535409927368164

Token 163: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4318852126598358
    2. ' __' → logprob: -1.0568852424621582
    3. 'repr' → logprob: -6.306885242462158
    4. 'def' → logprob: -7.556885242462158
    5. ' def' → logprob: -7.681885242462158
    6. '_repr' → logprob: -8.306884765625
    7. '```' → logprob: -10.306884765625
    8. ' repr' → logprob: -10.681884765625
    9. ' ' → logprob: -10.806884765625
    10. '.__' → logprob: -10.931884765625

Token 164: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -1.9361264946837764e-07
    2. 'str' → logprob: -15.75
    3. '_repr' → logprob: -19.125
    4. 'rep' → logprob: -20.125
    5. ' repr' → logprob: -21.0
    6. '```' → logprob: -22.125
    7. 'r' → logprob: -23.875
    8. 'represent' → logprob: -24.375
    9. 'eq' → logprob: -24.375
    10. 'call' → logprob: -24.875

Token 165: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0043478719890117645
    2. '(self' → logprob: -5.629347801208496
    3. '__' → logprob: -7.879347801208496
    4. '__(
' → logprob: -8.004347801208496
    5. '__((' → logprob: -11.254347801208496
    6. '(' → logprob: -11.504347801208496
    7. '__('' → logprob: -11.879347801208496
    8. '__("' → logprob: -12.629347801208496
    9. 'self' → logprob: -14.379347801208496
    10. '__[' → logprob: -14.879347801208496

Token 166: 'self' (ID: 1156)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.31328898668289185
    2. 'self' → logprob: -1.313288927078247
    3. ')' → logprob: -11.563288688659668
    4. ' f' → logprob: -11.688288688659668
    5. ' self' → logprob: -12.063288688659668
    6. '(self' → logprob: -12.688288688659668
    7. '(f' → logprob: -15.813288688659668
    8. '   ' → logprob: -16.438289642333984
    9. 'Self' → logprob: -16.688289642333984
    10. '       ' → logprob: -16.813289642333984

Token 167: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6387671828269958
    2. '(self' → logprob: -1.0137672424316406
    3. 'self' → logprob: -2.3887672424316406
    4. '__' → logprob: -5.263767242431641
    5. '       ' → logprob: -5.638767242431641
    6. ')' → logprob: -5.763767242431641
    7. '__(
' → logprob: -6.138767242431641
    8. 'f' → logprob: -6.263767242431641
    9. '(' → logprob: -7.888767242431641
    10. ')(' → logprob: -8.13876724243164

Token 168: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003680005669593811
    2. '       ' → logprob: -6.003680229187012
    3. ' f' → logprob: -6.753680229187012
    4. 'return' → logprob: -10.253680229187012
    5. '           ' → logprob: -14.628680229187012
    6. '   ' → logprob: -14.628680229187012
    7. '```' → logprob: -15.503680229187012
    8. ' ' → logprob: -15.753680229187012
    9. '
' → logprob: -16.253679275512695
    10. ' return' → logprob: -16.378679275512695

Token 169: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0021999788004904985
    2. '       ' → logprob: -6.252200126647949
    3. ' f' → logprob: -8.25220012664795
    4. 'return' (adapté à ' return') → logprob: -11.62720012664795
    5. '   ' → logprob: -14.00220012664795
    6. '           ' → logprob: -14.37720012664795
    7. '      ' → logprob: -16.002199172973633
    8. '     ' → logprob: -16.002199172973633
    9. '        ' → logprob: -17.002199172973633
    10. '    ' → logprob: -17.377199172973633

Token 170: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03804149478673935
    2. ' f' → logprob: -3.288041591644287
    3. '	f' → logprob: -18.413042068481445
    4. '(f' → logprob: -19.163042068481445
    5. 'F' → logprob: -20.788042068481445
    6. '

' → logprob: -21.163042068481445
    7. ' ' → logprob: -21.413042068481445
    8. '   ' → logprob: -21.538042068481445
    9. '       ' → logprob: -21.663042068481445
    10. '"' → logprob: -21.663042068481445

Token 171: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005123580805957317
    2. '"' → logprob: -5.380123615264893
    3. ' f' → logprob: -8.630123138427734
    4. 'Operator' → logprob: -8.755123138427734
    5. '(f' → logprob: -8.880123138427734
    6. '(' → logprob: -10.755123138427734
    7. '`' → logprob: -13.005123138427734
    8. ''' → logprob: -13.255123138427734
    9. '.Operator' → logprob: -14.130123138427734
    10. '("' → logprob: -14.380123138427734

Token 172: 'Operator' (ID: 21693)
  Prédit: 'Operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operator' → logprob: -1.9504606825648807e-05
    2. 'f' → logprob: -10.875019073486328
    3. ' Operator' → logprob: -15.625019073486328
    4. 'operator' → logprob: -15.750019073486328
    5. '"' → logprob: -16.500019073486328
    6. '.Operator' → logprob: -17.125019073486328
    7. ''' → logprob: -17.500019073486328
    8. 'Operation' → logprob: -18.000019073486328
    9. ' f' → logprob: -18.250019073486328
    10. '`' → logprob: -19.000019073486328

Token 173: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: 0.0
    2. 'token' → logprob: -19.75
    3. ' Token' → logprob: -20.625
    4. '	Token' → logprob: -21.125
    5. '<Token' → logprob: -21.375
    6. 'Tokenizer' → logprob: -21.5
    7. 'Operator' → logprob: -21.625
    8. 'Tok' → logprob: -21.875
    9. '(Token' → logprob: -22.25
    10. '_token' → logprob: -22.25

Token 174: '('{' (ID: 79246)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.3132728636264801
    2. '('{' → logprob: -1.3132728338241577
    3. '("{' → logprob: -11.688272476196289
    4. '(' → logprob: -13.688272476196289
    5. '({'' → logprob: -14.438272476196289
    6. '('' → logprob: -14.563272476196289
    7. ''{' → logprob: -15.813272476196289
    8. '(({' → logprob: -16.06327247619629
    9. '{' → logprob: -16.06327247619629
    10. '(\'' → logprob: -16.31327247619629

Token 175: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.100220687687397
    2. '{' → logprob: -2.3502206802368164
    3. '{
' → logprob: -11.725220680236816
    4. ' self' → logprob: -12.975220680236816
    5. '[self' → logprob: -12.975220680236816
    6. ''' → logprob: -14.850220680236816
    7. '"' → logprob: -15.225220680236816
    8. '
' → logprob: -15.600220680236816
    9. '(self' → logprob: -15.850220680236816
    10. '+self' → logprob: -16.100221633911133

Token 176: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -1.9385402993066236e-05
    2. '.' → logprob: -11.000019073486328
    3. ' .' → logprob: -14.000019073486328
    4. '.sym' → logprob: -14.250019073486328
    5. '.operator' → logprob: -14.625019073486328
    6. '.s' → logprob: -15.000019073486328
    7. 'symbol' → logprob: -15.125019073486328
    8. '.token' → logprob: -17.500019073486328
    9. '.Symbol' → logprob: -18.000019073486328
    10. '.
' → logprob: -18.625019073486328

Token 177: '}')' (ID: 155700)
  Prédit: '')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')"' → logprob: -0.004103335086256266
    2. '')' → logprob: -5.879103183746338
    3. '',' → logprob: -6.754103183746338
    4. ''' → logprob: -9.004103660583496
    5. ')' → logprob: -12.754103660583496
    6. ')"' → logprob: -13.004103660583496
    7. '',"' → logprob: -13.129103660583496
    8. '}' → logprob: -15.254103660583496
    9. ''"' → logprob: -15.379103660583496
    10. '','' → logprob: -15.504103660583496

Token 178: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5067945122718811
    2. 'class' → logprob: -1.2567944526672363
    3. '#' → logprob: -2.2567944526672363
    4. '<|end|>' → logprob: -5.131794452667236
    5. '

' → logprob: -6.756794452667236
    6. '  
' → logprob: -7.881794452667236
    7. ')' → logprob: -8.131794929504395
    8. '<|end|>' → logprob: -8.881794929504395
    9. ' class' → logprob: -9.006794929504395
    10. '```' → logprob: -9.506794929504395

Token 180: ' ---' (ID: 26691)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0011874916963279247
    2. '#' → logprob: -6.751187324523926
    3. 'def' → logprob: -12.251187324523926
    4. 'from' → logprob: -12.251187324523926
    5. 'operator' → logprob: -12.376187324523926
    6. ' class' → logprob: -13.626187324523926
    7. 'import' → logprob: -14.126187324523926
    8. 'operators' → logprob: -14.751187324523926
    9. '
' → logprob: -15.251187324523926
    10. 'tokens' → logprob: -16.251188278198242

Token 181: ' Token' (ID: 17951)
  Prédit: ' Parsing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Parsing' → logprob: -0.9323018193244934
    2. 'Parsing' → logprob: -1.4323017597198486
    3. 'Parser' → logprob: -2.3073017597198486
    4. 'Token' → logprob: -2.4323017597198486
    5. ' Token' → logprob: -2.9323017597198486
    6. ' Parser' → logprob: -3.1823017597198486
    7. 'Evaluation' → logprob: -4.057301998138428
    8. ' Evaluation' → logprob: -4.182301998138428
    9. 'Tokenizer' → logprob: -4.932301998138428
    10. ' Utilities' → logprob: -5.557301998138428

Token 182: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.0028507597744464874
    2. 'ization' → logprob: -5.877850532531738
    3. 'ize' → logprob: -11.252850532531738
    4. 'IZER' → logprob: -11.377850532531738
    5. 'Parser' → logprob: -11.752850532531738
    6. 'Stream' → logprob: -12.127850532531738
    7. 'izers' → logprob: -12.752850532531738
    8. 'Type' → logprob: -13.752850532531738
    9. 'Processor' → logprob: -14.002850532531738
    10. 'izing' → logprob: -14.502850532531738

Token 183: ' --' (ID: 2230)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.008443537168204784
    2. 'def' → logprob: -4.883443355560303
    3. '
' → logprob: -7.383443355560303
    4. ' class' → logprob: -9.133443832397461
    5. '<|end|>' → logprob: -10.258443832397461
    6. '

' → logprob: -10.633443832397461
    7. 'import' → logprob: -11.383443832397461
    8. '<|end|>' → logprob: -11.508443832397461
    9. ')' → logprob: -12.258443832397461
    10. '(class' → logprob: -12.383443832397461

Token 184: '-

' (ID: 16364)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07287673652172089
    2. ' class' → logprob: -2.6978766918182373
    3. 'def' → logprob: -6.697876930236816
    4. '
' → logprob: -7.072876930236816
    5. '<|end|>' → logprob: -7.447876930236816
    6. ' def' → logprob: -9.572876930236816
    7. '<|end|>' → logprob: -9.822876930236816
    8. '

' → logprob: -10.322876930236816
    9. ':' → logprob: -10.572876930236816
    10. '(class' → logprob: -10.697876930236816

Token 185: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00016396844875998795
    2. 'def' → logprob: -9.125164031982422
    3. 'import' → logprob: -10.125164031982422
    4. ' class' → logprob: -11.125164031982422
    5. 'token' → logprob: -16.750164031982422
    6. 'from' → logprob: -17.000164031982422
    7. 'TOKEN' → logprob: -17.500164031982422
    8. '"class' → logprob: -19.125164031982422
    9. '```' → logprob: -19.500164031982422
    10. ' def' → logprob: -19.625164031982422

Token 186: ' Token' (ID: 17951)
  Prédit: ' Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Token' → logprob: -0.24291998147964478
    2. ' Calculator' → logprob: -2.492919921875
    3. 'Tokenizer' → logprob: -2.742919921875
    4. ' Expression' → logprob: -2.867919921875
    5. 'Expression' → logprob: -5.117919921875
    6. ' Lexer' → logprob: -6.242919921875
    7. 'Token' → logprob: -7.242919921875
    8. ' Parser' → logprob: -7.242919921875
    9. ' Expr' → logprob: -7.367919921875
    10. 'Calculator' → logprob: -7.367919921875

Token 187: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -9.088346359931165e-07
    2. 'IZER' → logprob: -14.000000953674316
    3. 'zier' → logprob: -19.375
    4. 'ize' → logprob: -19.5
    5. '```' → logprob: -20.5
    6. '(' → logprob: -20.625
    7. 'Stream' → logprob: -21.125
    8. 'izr' → logprob: -21.875
    9. 'Tokenizer' → logprob: -22.25
    10. 'Recognizer' → logprob: -22.5

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0046349456533789635
    2. ':
' → logprob: -5.379634857177734
    3. ' :' → logprob: -12.004634857177734
    4. '):' → logprob: -12.379634857177734
    5. ':def' → logprob: -13.379634857177734
    6. '(' → logprob: -13.629634857177734
    7. '(object' → logprob: -15.004634857177734
    8. '   ' → logprob: -15.129634857177734
    9. ':

' → logprob: -15.129634857177734
    10. '():' → logprob: -15.379634857177734

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4751502573490143
    2. ' def' → logprob: -0.9751502275466919
    3. 'def' → logprob: -6.850150108337402
    4. '	def' → logprob: -12.475150108337402
    5. ':' → logprob: -12.725150108337402
    6. '    
' → logprob: -12.975150108337402
    7. ')' → logprob: -14.350150108337402
    8. '   ' → logprob: -14.475150108337402
    9. '    ' → logprob: -14.975150108337402
    10. ' indentation' → logprob: -15.100150108337402

Token 190: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4741050899028778
    2. 'def' (adapté à ' def') → logprob: -0.9741051197052002
    3. '   ' → logprob: -10.974104881286621
    4. ' SYMBOL' → logprob: -12.599104881286621
    5. '	def' → logprob: -13.349104881286621
    6. 'pattern' → logprob: -13.474104881286621
    7. 'import' → logprob: -14.349104881286621
    8. 'SY' → logprob: -14.474104881286621
    9. ' ' → logprob: -14.599104881286621
    10. '__' → logprob: -14.724104881286621

Token 191: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.006068152841180563
    2. 'def' → logprob: -5.631068229675293
    3. ' __' → logprob: -6.131068229675293
    4. 'init' → logprob: -8.506068229675293
    5. '_init' → logprob: -10.131068229675293
    6. ' init' → logprob: -10.756068229675293
    7. '__' → logprob: -11.756068229675293
    8. ' ' → logprob: -11.881068229675293
    9. '   ' → logprob: -12.006068229675293
    10. '  ' → logprob: -13.381068229675293

Token 192: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'call' → logprob: -18.0
    3. ' init' → logprob: -18.5
    4. 'ini' → logprob: -18.75
    5. '   ' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. 'in' → logprob: -19.625
    8. '_init' → logprob: -20.125
    9. 'inite' → logprob: -20.5
    10. '
' → logprob: -20.875

Token 193: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.003877031384035945
    2. '(self' → logprob: -5.62887716293335
    3. '__(
' → logprob: -8.753876686096191
    4. '__' → logprob: -9.503876686096191
    5. '(' → logprob: -10.378876686096191
    6. 'self' → logprob: -11.628876686096191
    7. '_(' → logprob: -13.253876686096191
    8. ' (' → logprob: -13.753876686096191
    9. ')(' → logprob: -15.128876686096191
    10. '__((' → logprob: -15.253876686096191

Token 194: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021995019633322954
    2. ' self' → logprob: -6.127199649810791
    3. '   ' → logprob: -12.002199172973633
    4. '
' → logprob: -12.752199172973633
    5. ')' → logprob: -13.252199172973633
    6. '(self' → logprob: -13.252199172973633
    7. '       ' → logprob: -14.002199172973633
    8. ',' → logprob: -15.127199172973633
    9. '	self' → logprob: -15.252199172973633
    10. ' ' → logprob: -15.752199172973633

Token 195: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1535157412290573
    2. ',' → logprob: -2.0285158157348633
    3. ' self' → logprob: -5.153515815734863
    4. '):' → logprob: -6.278515815734863
    5. '   ' → logprob: -6.528515815734863
    6. '):
' → logprob: -7.028515815734863
    7. '(self' → logprob: -8.028515815734863
    8. ')' → logprob: -8.653515815734863
    9. 'text' → logprob: -9.028515815734863
    10. '       ' → logprob: -10.028515815734863

Token 196: ' operator' (ID: 11019)
  Prédit: ' expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' expression' → logprob: -0.7103675007820129
    2. 'expression' → logprob: -0.8353675007820129
    3. 'expr' → logprob: -3.085367441177368
    4. 'text' → logprob: -4.460367679595947
    5. ' expr' → logprob: -4.710367679595947
    6. ' text' → logprob: -5.085367679595947
    7. 'input' → logprob: -7.210367679595947
    8. ' input' → logprob: -7.710367679595947
    9. 'self' → logprob: -8.210367202758789
    10. ')' → logprob: -8.210367202758789

Token 197: '_map' (ID: 11824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.455048449221067e-05
    2. '_map' → logprob: -10.375054359436035
    3. '_symbols' → logprob: -11.375054359436035
    4. '_funcs' → logprob: -11.750054359436035
    5. '_functions' → logprob: -13.500054359436035
    6. '_table' → logprob: -13.875054359436035
    7. '_mapping' → logprob: -14.500054359436035
    8. '_defs' → logprob: -15.000054359436035
    9. '_chars' → logprob: -15.750054359436035
    10. '_def' → logprob: -16.12505531311035

Token 198: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010083963861688972
    2. '):' → logprob: -7.0010085105896
    3. '):
' → logprob: -9.876008033752441
    4. 'self' → logprob: -10.876008033752441
    5. ' :' → logprob: -11.251008033752441
    6. '}:' → logprob: -12.626008033752441
    7. '   ' → logprob: -13.001008033752441
    8. ':self' → logprob: -13.251008033752441
    9. '```' → logprob: -13.251008033752441
    10. ')' → logprob: -13.751008033752441

Token 199: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.08944407850503922
    2. ' Dict' → logprob: -2.464444160461426
    3. 'dict' → logprob: -7.964444160461426
    4. '{' → logprob: -9.464444160461426
    5. ' dict' → logprob: -10.089444160461426
    6. 'Optional' → logprob: -11.589444160461426
    7. '_dict' → logprob: -12.089444160461426
    8. ' {' → logprob: -12.214444160461426
    9. ' Optional' → logprob: -12.464444160461426
    10. ')' → logprob: -12.839444160461426

Token 200: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -12.125009536743164
    3. '   ' → logprob: -13.875009536743164
    4. ')' → logprob: -14.000009536743164
    5. 'str' → logprob: -14.000009536743164
    6. ' [' → logprob: -14.750009536743164
    7. '):' → logprob: -15.125009536743164
    8. '):
' → logprob: -15.250009536743164
    9. '       ' → logprob: -15.875009536743164
    10. ' ' → logprob: -16.375009536743164

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.991464786347933e-05
    2. ' ,' → logprob: -10.375060081481934
    3. '[' → logprob: -11.250060081481934
    4. ',float' → logprob: -11.500060081481934
    5. '   ' → logprob: -13.000060081481934
    6. ',List' → logprob: -14.625060081481934
    7. ',str' → logprob: -15.000060081481934
    8. ',function' → logprob: -15.250060081481934
    9. '```' → logprob: -15.250060081481934
    10. '       ' → logprob: -15.250060081481934

Token 202: ' Callable' (ID: 94560)
  Prédit: 'Callable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Callable' → logprob: -0.03386606276035309
    2. ' Callable' → logprob: -3.4088661670684814
    3. 'Union' → logprob: -9.033865928649902
    4. 'Operator' → logprob: -9.783865928649902
    5. 'Call' → logprob: -11.158865928649902
    6. 'Tuple' → logprob: -11.408865928649902
    7. 'call' → logprob: -12.283865928649902
    8. ' ' → logprob: -13.033865928649902
    9. '_callable' → logprob: -13.158865928649902
    10. 'Caller' → logprob: -13.533865928649902

Token 203: '[[' (ID: 26245)
  Prédit: '[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00021879478299524635
    2. '])' → logprob: -9.375218391418457
    3. '[' → logprob: -9.750218391418457
    4. '[...,' → logprob: -9.875218391418457
    5. ']):' → logprob: -12.000218391418457
    6. ']' → logprob: -12.250218391418457
    7. ']])' → logprob: -12.750218391418457
    8. '],' → logprob: -13.375218391418457
    9. '[
' → logprob: -13.625218391418457
    10. '[['' → logprob: -13.625218391418457

Token 204: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0076362090185284615
    2. ' float' → logprob: -4.882636070251465
    3. ',float' → logprob: -10.632636070251465
    4. '	float' → logprob: -13.507636070251465
    5. '(float' → logprob: -13.882636070251465
    6. ',' → logprob: -14.007636070251465
    7. '<float' → logprob: -14.007636070251465
    8. '=float' → logprob: -14.382636070251465
    9. 'flo' → logprob: -15.132636070251465
    10. '.float' → logprob: -15.382636070251465

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001454955490771681
    2. ',float' → logprob: -9.00014591217041
    3. ' ,' → logprob: -10.75014591217041
    4. ',double' → logprob: -15.62514591217041
    5. ',int' → logprob: -16.125144958496094
    6. '   ' → logprob: -16.250144958496094
    7. 'float' → logprob: -17.375144958496094
    8. ' ' → logprob: -17.375144958496094
    9. ',
' → logprob: -17.375144958496094
    10. ',bool' → logprob: -17.375144958496094

Token 206: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5231833457946777
    2. ' float' → logprob: -0.8981833457946777
    3. ' ' → logprob: -10.523183822631836
    4. ',float' → logprob: -11.773183822631836
    5. '	float' → logprob: -12.273183822631836
    6. '
' → logprob: -12.398183822631836
    7. '   ' → logprob: -12.648183822631836
    8. ',' → logprob: -13.398183822631836
    9. '    ' → logprob: -13.523183822631836
    10. ' ' → logprob: -13.710683822631836

Token 207: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -3.7697225252486533e-06
    2. '"],' → logprob: -13.375003814697266
    3. '],
' → logprob: -14.750003814697266
    4. ',' → logprob: -14.750003814697266
    5. ']' → logprob: -14.875003814697266
    6. ' ],' → logprob: -15.000003814697266
    7. ']],' → logprob: -15.000003814697266
    8. ''],' → logprob: -16.250003814697266
    9. '),' → logprob: -16.250003814697266
    10. '```' → logprob: -16.750003814697266

Token 208: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.018159428611397743
    2. ' float' → logprob: -4.01815938949585
    3. ' ' → logprob: -12.268159866333008
    4. 'Optional' → logprob: -13.268159866333008
    5. '   ' → logprob: -14.643159866333008
    6. '	float' → logprob: -14.768159866333008
    7. '(float' → logprob: -15.018159866333008
    8. 'bool' → logprob: -15.143159866333008
    9. '```' → logprob: -15.268159866333008
    10. '  ' → logprob: -15.518159866333008

Token 209: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.002199621172621846
    2. ']):' → logprob: -7.002199649810791
    3. ']' → logprob: -7.752199649810791
    4. ']])' → logprob: -7.877199649810791
    5. ']):
' → logprob: -8.002199172973633
    6. ']],' → logprob: -9.502199172973633
    7. '],' → logprob: -10.752199172973633
    8. ']]:
' → logprob: -11.252199172973633
    9. '])' → logprob: -11.752199172973633
    10. ']])
' → logprob: -12.002199172973633

Token 210: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03223041072487831
    2. '):
' → logprob: -3.5322303771972656
    3. ')' → logprob: -6.782230377197266
    4. ']):' → logprob: -6.907230377197266
    5. ']):
' → logprob: -8.907230377197266
    6. ' ):' → logprob: -9.157230377197266
    7. ',' → logprob: -10.157230377197266
    8. ':' → logprob: -11.157230377197266
    9. ']:' → logprob: -11.782230377197266
    10. '   ' → logprob: -11.782230377197266

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.412610233994201e-05
    2. 'self' → logprob: -9.750094413757324
    3. ' self' → logprob: -11.125094413757324
    4. '   ' → logprob: -11.375094413757324
    5. ',' → logprob: -12.250094413757324
    6. ')' → logprob: -13.375094413757324
    7. 'def' → logprob: -13.750094413757324
    8. ':' → logprob: -14.000094413757324
    9. '):
' → logprob: -14.625094413757324
    10. '<|end|>' → logprob: -15.250094413757324

Token 212: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6480469107627869
    2. 'self' (adapté à ' self') → logprob: -1.0230469703674316
    3. ' self' → logprob: -2.1480469703674316
    4. '   ' → logprob: -7.273046970367432
    5. '	self' → logprob: -11.273046493530273
    6. ' ' → logprob: -11.648046493530273
    7. '           ' → logprob: -13.273046493530273
    8. '      ' → logprob: -13.398046493530273
    9. '     ' → logprob: -13.648046493530273
    10. '  ' → logprob: -14.273046493530273

Token 213: '.operator' (ID: 105010)
  Prédit: '.operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.operator' → logprob: -3.643152740551159e-05
    2. '.' → logprob: -10.500036239624023
    3. 'operator' → logprob: -12.500036239624023
    4. '.token' → logprob: -12.625036239624023
    5. ' .' → logprob: -13.375036239624023
    6. '.op' → logprob: -16.625036239624023
    7. '	operator' → logprob: -16.750036239624023
    8. '.user' → logprob: -17.000036239624023
    9. '.operation' → logprob: -17.000036239624023
    10. '._' → logprob: -17.000036239624023

Token 214: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0024808887392282486
    2. 's' → logprob: -6.002480983734131
    3. '_' → logprob: -13.127480506896973
    4. 'map' → logprob: -13.502480506896973
    5. '_mapping' → logprob: -15.252480506896973
    6. '_to' → logprob: -15.252480506896973
    7. '_tokens' → logprob: -15.377480506896973
    8. '_symbols' → logprob: -15.377480506896973
    9. 'Map' → logprob: -15.627480506896973
    10. '_s' → logprob: -15.752480506896973

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931591629981995
    2. ' =' → logprob: -0.6931591629981995
    3. ':' → logprob: -11.443159103393555
    4. ' ' → logprob: -13.943159103393555
    5. ')' → logprob: -16.068159103393555
    6. '={}' → logprob: -16.193159103393555
    7. '   ' → logprob: -16.943159103393555
    8. '.' → logprob: -17.568159103393555
    9. ' ={' → logprob: -17.818159103393555
    10. '={}
' → logprob: -17.943159103393555

Token 216: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.014164102263748646
    2. ' operator' → logprob: -4.264163970947266
    3. '	operator' → logprob: -15.014163970947266
    4. '{' → logprob: -16.264163970947266
    5. '(operator' → logprob: -16.389163970947266
    6. '.operator' → logprob: -17.014163970947266
    7. '{}' → logprob: -18.264163970947266
    8. '{
' → logprob: -19.514163970947266
    9. '_operator' → logprob: -19.889163970947266
    10. ' ' → logprob: -20.014163970947266

Token 217: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -12.00001049041748
    3. 'map' → logprob: -13.00001049041748
    4. ')' → logprob: -14.25001049041748
    5. 'Map' → logprob: -14.87501049041748
    6. '.' → logprob: -15.62501049041748
    7. '}' → logprob: -15.75001049041748
    8. '   ' → logprob: -16.125011444091797
    9. '._' → logprob: -16.250011444091797
    10. 's' → logprob: -16.375011444091797

Token 218: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.614940881729126
    2. '
' → logprob: -1.114940881729126
    3. '    
' → logprob: -2.614940881729126
    4. '<|end|>' → logprob: -3.364940881729126
    5. 'def' → logprob: -4.739940643310547
    6. '

' → logprob: -5.114940643310547
    7. '<|end|>' → logprob: -5.739940643310547
    8. '  
' → logprob: -5.989940643310547
    9. '       ' → logprob: -7.239940643310547
    10. ')' → logprob: -7.614940643310547

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025416729971766472
    2. '
' → logprob: -4.275416851043701
    3. '    
' → logprob: -4.650416851043701
    4. 'def' → logprob: -6.650416851043701
    5. '        
' → logprob: -8.775416374206543
    6. '  
' → logprob: -9.775416374206543
    7. '<|end|>' → logprob: -10.525416374206543
    8. ' def' → logprob: -10.900416374206543
    9. '       ' → logprob: -10.900416374206543
    10. ' 
' → logprob: -11.025416374206543

Token 220: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0028053484857082367
    2. ' def' → logprob: -5.877805233001709
    3. ')' → logprob: -15.252805709838867
    4. '   ' → logprob: -16.252805709838867
    5. '
' → logprob: -17.627805709838867
    6. 'import' → logprob: -17.752805709838867
    7. 'space' → logprob: -17.877805709838867
    8. '    
' → logprob: -18.502805709838867
    9. '        
' → logprob: -18.627805709838867
    10. ' ' → logprob: -18.627805709838867

Token 221: ' tokenize' (ID: 192720)
  Prédit: ' tokenize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokenize' → logprob: -0.011062435805797577
    2. 'token' → logprob: -4.5110626220703125
    3. ' token' → logprob: -11.386062622070312
    4. '_token' → logprob: -12.761062622070312
    5. ' tokenizer' → logprob: -15.761062622070312
    6. ' ' → logprob: -16.511062622070312
    7. '.token' → logprob: -16.761062622070312
    8. 'def' → logprob: -17.511062622070312
    9. ' Token' → logprob: -17.886062622070312
    10. 'Token' → logprob: -18.011062622070312

Token 222: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -12.125009536743164
    3. ' (' → logprob: -12.375009536743164
    4. 'self' → logprob: -16.250009536743164
    5. '(
' → logprob: -18.000009536743164
    6. ' self' → logprob: -18.125009536743164
    7. '(s' → logprob: -18.250009536743164
    8. '(sel' → logprob: -19.625009536743164
    9. ' ' → logprob: -21.750009536743164
    10. '(Self' → logprob: -21.875009536743164

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016342396847903728
    2. 'self' → logprob: -6.626634120941162
    3. ' ,' → logprob: -8.12663459777832
    4. ',self' → logprob: -12.25163459777832
    5. ' self' → logprob: -12.87663459777832
    6. 's' → logprob: -13.25163459777832
    7. ',input' → logprob: -13.62663459777832
    8. ',
' → logprob: -14.75163459777832
    9. ',s' → logprob: -14.87663459777832
    10. ')' → logprob: -15.00163459777832

Token 224: ' expression' (ID: 12973)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1024067401885986
    2. 'expression' → logprob: -1.1024067401885986
    3. ' expression' → logprob: -1.4774067401885986
    4. ' self' → logprob: -2.6024067401885986
    5. 'expr' → logprob: -4.1024065017700195
    6. 'text' → logprob: -4.6024065017700195
    7. ' text' → logprob: -5.4774065017700195
    8. ' expr' → logprob: -5.9774065017700195
    9. 'input' → logprob: -9.47740650177002
    10. 's' → logprob: -9.60240650177002

Token 225: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012773419439326972
    2. 'self' → logprob: -9.250127792358398
    3. ':str' → logprob: -10.875127792358398
    4. ' :' → logprob: -11.875127792358398
    5. ')' → logprob: -13.375127792358398
    6. '   ' → logprob: -13.750127792358398
    7. '):' → logprob: -13.875127792358398
    8. '(self' → logprob: -14.000127792358398
    9. ':self' → logprob: -14.500127792358398
    10. ' self' → logprob: -14.875127792358398

Token 226: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.12696653604507446
    2. ' str' → logprob: -2.1269664764404297
    3. ')' → logprob: -10.25196647644043
    4. '[str' → logprob: -13.62696647644043
    5. ' ' → logprob: -13.87696647644043
    6. '   ' → logprob: -15.25196647644043
    7. ' )' → logprob: -15.87696647644043
    8. '(str' → logprob: -16.00196647644043
    9. ':str' → logprob: -16.50196647644043
    10. '	str' → logprob: -16.62696647644043

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ' )' → logprob: -11.625015258789062
    3. '):' → logprob: -12.125015258789062
    4. '   ' → logprob: -14.875015258789062
    5. ')->' → logprob: -15.500015258789062
    6. '):
' → logprob: -15.625015258789062
    7. ':' → logprob: -17.125015258789062
    8. '       ' → logprob: -17.375015258789062
    9. '")' → logprob: -17.625015258789062
    10. '`)' → logprob: -18.375015258789062

Token 228: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48934710025787354
    2. '->' → logprob: -1.2393471002578735
    3. ' ->' → logprob: -2.364346981048584
    4. ')' → logprob: -6.114346981048584
    5. '   ' → logprob: -7.864346981048584
    6. ')->' → logprob: -7.989346981048584
    7. ':
' → logprob: -8.364347457885742
    8. '       ' → logprob: -8.739347457885742
    9. '()->' → logprob: -11.364347457885742
    10. '):' → logprob: -11.364347457885742

Token 229: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.07889782637357712
    2. 'List' → logprob: -2.578897714614868
    3. '[List' → logprob: -11.828897476196289
    4. '	List' → logprob: -14.578897476196289
    5. ' Optional' → logprob: -15.578897476196289
    6. ' ' → logprob: -16.82889747619629
    7. 'Optional' → logprob: -17.20389747619629
    8. '_list' → logprob: -17.70389747619629
    9. '_List' → logprob: -17.95389747619629
    10. ' list' → logprob: -17.95389747619629

Token 230: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '<Token' → logprob: -14.625000953674316
    3. '[
' → logprob: -16.0
    4. '	Token' → logprob: -16.375
    5. '[token' → logprob: -17.0
    6. 'Token' → logprob: -18.0
    7. '```' → logprob: -19.0
    8. '[str' → logprob: -19.125
    9. ' [' → logprob: -19.25
    10. '['' → logprob: -19.75

Token 231: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -2.8087270038668066e-05
    2. 'Union' → logprob: -10.500027656555176
    3. ' Token' → logprob: -14.625027656555176
    4. '	Token' → logprob: -17.500028610229492
    5. 'token' → logprob: -17.625028610229492
    6. '[' → logprob: -18.000028610229492
    7. 'Optional' → logprob: -19.125028610229492
    8. 'Number' → logprob: -20.250028610229492
    9. '_token' → logprob: -20.375028610229492
    10. '<Token' → logprob: -20.375028610229492

Token 232: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.01831885799765587
    2. ']:
' → logprob: -4.0183186531066895
    3. ']:
' → logprob: -9.518319129943848
    4. ']' → logprob: -10.018319129943848
    5. ':' → logprob: -10.393319129943848
    6. '):' → logprob: -11.143319129943848
    7. ']:

' → logprob: -13.268319129943848
    8. '):
' → logprob: -13.393319129943848
    9. '"]:' → logprob: -13.893319129943848
    10. '']:' → logprob: -14.643319129943848

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001366744691040367
    2. ' tokens' → logprob: -9.500136375427246
    3. 'tokens' → logprob: -9.750136375427246
    4. '        ' → logprob: -13.125136375427246
    5. '      ' → logprob: -14.125136375427246
    6. '        
' → logprob: -15.125136375427246
    7. '   ' → logprob: -15.625136375427246
    8. '    ' → logprob: -16.000137329101562
    9. '     ' → logprob: -16.875137329101562
    10. '_tokens' → logprob: -17.125137329101562

Token 234: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.008768199943006039
    2. ' tokens' → logprob: -4.758768081665039
    3. 'import' → logprob: -9.258768081665039
    4. '       ' → logprob: -9.758768081665039
    5. ' import' → logprob: -15.258768081665039
    6. '   ' → logprob: -15.883768081665039
    7. 'result' → logprob: -16.38376808166504
    8. '.tokens' → logprob: -16.50876808166504
    9. 'parts' → logprob: -18.13376808166504
    10. '        ' → logprob: -18.50876808166504

Token 235: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00018923594325315207
    2. '=' → logprob: -9.000188827514648
    3. ' ' → logprob: -11.125188827514648
    4. '=[]' → logprob: -11.125188827514648
    5. ':' → logprob: -11.250188827514648
    6. '   ' → logprob: -11.750188827514648
    7. '[]' → logprob: -12.000188827514648
    8. '       ' → logprob: -13.000188827514648
    9. '_tokens' → logprob: -13.500188827514648
    10. 'tokens' → logprob: -13.875188827514648

Token 236: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.00643173698335886
    2. 'List' → logprob: -5.381431579589844
    3. ' []' → logprob: -6.381431579589844
    4. ' ' → logprob: -10.131431579589844
    5. ' =' → logprob: -10.131431579589844
    6. '[]' → logprob: -10.881431579589844
    7. '=[]' → logprob: -11.506431579589844
    8. '[List' → logprob: -12.631431579589844
    9. '=' → logprob: -13.256431579589844
    10. ' list' → logprob: -13.506431579589844

Token 237: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024084746837615967
    2. '<Token' → logprob: -9.25024127960205
    3. '[str' → logprob: -9.37524127960205
    4. ' =' → logprob: -11.37524127960205
    5. '=' → logprob: -11.37524127960205
    6. '[token' → logprob: -11.62524127960205
    7. '	Token' → logprob: -11.62524127960205
    8. 'Token' → logprob: -12.37524127960205
    9. ']' → logprob: -12.75024127960205
    10. '[
' → logprob: -12.87524127960205

Token 238: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -8.77627644513268e-06
    2. 'Union' → logprob: -12.000008583068848
    3. ' Token' → logprob: -13.125008583068848
    4. 'str' → logprob: -15.625008583068848
    5. '	Token' → logprob: -15.625008583068848
    6. ']' → logprob: -16.125009536743164
    7. 'token' → logprob: -16.875009536743164
    8. '[' → logprob: -17.500009536743164
    9. ')' → logprob: -17.875009536743164
    10. '<Token' → logprob: -18.250009536743164

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.816093228830141e-06
    2. ' ]' → logprob: -13.00000286102295
    3. '[' → logprob: -15.37500286102295
    4. ']=' → logprob: -15.62500286102295
    5. ')' → logprob: -17.250001907348633
    6. '[]' → logprob: -18.000001907348633
    7. '"]' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '']' → logprob: -19.500001907348633
    10. ' =' → logprob: -19.625001907348633

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519311308860779
    2. '=' → logprob: -1.5019311904907227
    3. ' ' → logprob: -14.001931190490723
    4. '=[]' → logprob: -14.251931190490723
    5. '[]' → logprob: -15.251931190490723
    6. 'tokens' → logprob: -16.876930236816406
    7. '   ' → logprob: -17.001930236816406
    8. '=[]
' → logprob: -17.001930236816406
    9. 'token' → logprob: -17.126930236816406
    10. '        ' → logprob: -17.126930236816406

Token 241: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0015218837652355433
    2. ' []' → logprob: -6.501522064208984
    3. '[]
' → logprob: -10.876522064208984
    4. '[' → logprob: -15.876522064208984
    5. ' []
' → logprob: -15.876522064208984
    6. ' ' → logprob: -16.501522064208984
    7. '[]>' → logprob: -16.876522064208984
    8. '[])' → logprob: -17.001522064208984
    9. '[]}' → logprob: -17.126522064208984
    10. '=[]' → logprob: -17.251522064208984

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.794061770662665e-05
    2. ' i' → logprob: -10.12509822845459
    3. '        
' → logprob: -11.00009822845459
    4. '        ' → logprob: -11.37509822845459
    5. '   ' → logprob: -12.00009822845459
    6. '      ' → logprob: -12.25009822845459
    7. 'i' → logprob: -12.50009822845459
    8. 'pos' → logprob: -13.12509822845459
    9. 'tokens' → logprob: -13.25009822845459
    10. '	' → logprob: -13.50009822845459

Token 243: ' parts' (ID: 7881)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021898623555898666
    2. 'current' → logprob: -4.2718987464904785
    3. 'pos' → logprob: -5.5218987464904785
    4. ' i' → logprob: -6.5218987464904785
    5. 'index' → logprob: -6.6468987464904785
    6. 'number' → logprob: -8.02189826965332
    7. 'idx' → logprob: -8.64689826965332
    8. 'num' → logprob: -8.64689826965332
    9. '       ' → logprob: -9.39689826965332
    10. 'buffer' → logprob: -9.64689826965332

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01251129899173975
    2. '=' → logprob: -4.387511253356934
    3. ' ' → logprob: -14.012511253356934
    4. ')' → logprob: -15.887511253356934
    5. ' in' → logprob: -16.01251220703125
    6. '(expression' → logprob: -16.26251220703125
    7. '       ' → logprob: -16.76251220703125
    8. ':' → logprob: -17.01251220703125
    9. 'expression' → logprob: -17.13751220703125
    10. '.' → logprob: -17.26251220703125

Token 245: ' expression' (ID: 12973)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.12695635855197906
    2. ' expression' → logprob: -2.1269564628601074
    3. '(expression' → logprob: -10.50195598602295
    4. '   ' → logprob: -14.50195598602295
    5. '.expression' → logprob: -15.75195598602295
    6. ' ' → logprob: -16.376956939697266
    7. '       ' → logprob: -17.126956939697266
    8. 'express' → logprob: -17.126956939697266
    9. '  ' → logprob: -18.376956939697266
    10. '    ' → logprob: -18.751956939697266

Token 246: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.03680175915360451
    2. '.strip' → logprob: -3.536801815032959
    3. '.' → logprob: -5.036801815032959
    4. '.replace' → logprob: -7.661801815032959
    5. ' .' → logprob: -10.0368013381958
    6. '().' → logprob: -11.5368013381958
    7. 'split' → logprob: -11.7868013381958
    8. '.rstrip' → logprob: -15.6618013381958
    9. 'strip' → logprob: -16.286802291870117
    10. '   ' → logprob: -16.661802291870117

Token 247: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.5597102396423e-05
    2. '()' → logprob: -10.250035285949707
    3. ' ().' → logprob: -15.875035285949707
    4. '('' → logprob: -17.375036239624023
    5. '()
' → logprob: -18.750036239624023
    6. '(' → logprob: -19.000036239624023
    7. '().'' → logprob: -19.250036239624023
    8. '.split' → logprob: -20.250036239624023
    9. 'split' → logprob: -20.625036239624023
    10. '("' → logprob: -20.625036239624023

Token 248: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'replace' → logprob: -16.0
    3. ' split' → logprob: -16.75
    4. '(split' → logprob: -19.5
    5. 'spl' → logprob: -20.75
    6. '.split' → logprob: -22.875
    7. '```' → logprob: -23.125
    8. 'partition' → logprob: -24.25
    9. 'strip' → logprob: -24.5
    10. 'sp' → logprob: -25.375

Token 249: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029860058799386024
    2. '('' → logprob: -3.529860019683838
    3. '("' → logprob: -9.279860496520996
    4. '(' → logprob: -11.154860496520996
    5. ' ()' → logprob: -14.279860496520996
    6. ''' → logprob: -15.029860496520996
    7. '()
' → logprob: -15.279860496520996
    8. '())' → logprob: -15.404860496520996
    9. '()"' → logprob: -16.02985954284668
    10. '()]' → logprob: -16.52985954284668

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21063445508480072
    2. 'for' → logprob: -1.710634469985962
    3. ' for' → logprob: -4.710634231567383
    4. '	' → logprob: -9.460634231567383
    5. '	for' → logprob: -10.085634231567383
    6. '        
' → logprob: -10.335634231567383
    7. '   ' → logprob: -11.585634231567383
    8. '      ' → logprob: -12.085634231567383
    9. '        ' → logprob: -12.835634231567383
    10. ' ' → logprob: -13.210634231567383

Token 251: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.6934557505883276e-05
    2. ' for' → logprob: -10.250057220458984
    3. '       ' → logprob: -10.750057220458984
    4. '	for' → logprob: -18.750057220458984
    5. '   ' → logprob: -20.500057220458984
    6. '        
' → logprob: -20.625057220458984
    7. '```' → logprob: -21.250057220458984
    8. '
' → logprob: -22.625057220458984
    9. ' ' → logprob: -22.625057220458984
    10. 'For' → logprob: -23.000057220458984

Token 252: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.25193390250205994
    2. 'part' → logprob: -1.5019339323043823
    3. '	part' → logprob: -12.751934051513672
    4. 'p' → logprob: -14.501934051513672
    5. 'Part' → logprob: -14.501934051513672
    6. '(part' → logprob: -14.751934051513672
    7. '_part' → logprob: -16.001934051513672
    8. ' p' → logprob: -16.001934051513672
    9. ' ' → logprob: -16.251934051513672
    10. '   ' → logprob: -16.751934051513672

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021874953527003527
    2. 'in' → logprob: -6.127187728881836
    3. ' ' → logprob: -14.252187728881836
    4. '       ' → logprob: -14.752187728881836
    5. '   ' → logprob: -15.002187728881836
    6. 's' → logprob: -15.252187728881836
    7. '        ' → logprob: -15.627187728881836
    8. '    ' → logprob: -15.752187728881836
    9. '           ' → logprob: -15.877187728881836
    10. '  ' → logprob: -16.002187728881836

Token 254: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0003357006062287837
    2. ' parts' → logprob: -8.000335693359375
    3. 'part' → logprob: -16.625335693359375
    4. '(parts' → logprob: -16.625335693359375
    5. '   ' → logprob: -16.875335693359375
    6. '       ' → logprob: -18.000335693359375
    7. ' ' → logprob: -18.125335693359375
    8. '           ' → logprob: -19.250335693359375
    9. '.parts' → logprob: -19.875335693359375
    10. 'pieces' → logprob: -20.250335693359375

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023252464830875397
    2. ':
' → logprob: -3.773252487182617
    3. '):
' → logprob: -13.398252487182617
    4. '       ' → logprob: -13.523252487182617
    5. '):' → logprob: -13.648252487182617
    6. '           ' → logprob: -13.773252487182617
    7. ':

' → logprob: -14.023252487182617
    8. ':
' → logprob: -14.898252487182617
    9. ' :' → logprob: -15.273252487182617
    10. ' if' → logprob: -15.898252487182617

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002636006975080818
    2. ' try' → logprob: -9.125263214111328
    3. 'try' → logprob: -9.625263214111328
    4. ' if' → logprob: -9.625263214111328
    5. 'if' → logprob: -11.000263214111328
    6. '       ' → logprob: -13.625263214111328
    7. '          ' → logprob: -13.750263214111328
    8. '               ' → logprob: -13.875263214111328
    9. '            
' → logprob: -14.250263214111328
    10. '```' → logprob: -14.625263214111328

Token 257: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3827153444290161
    2. 'try' → logprob: -1.3827153444290161
    3. ' if' → logprob: -2.8827152252197266
    4. '           ' → logprob: -5.132715225219727
    5. ' try' → logprob: -5.257715225219727
    6. '               ' → logprob: -12.632715225219727
    7. '       ' → logprob: -14.132715225219727
    8. '.try' → logprob: -14.632715225219727
    9. '            ' → logprob: -15.007715225219727
    10. '#' → logprob: -15.007715225219727

Token 258: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.038055602461099625
    2. 'part' → logprob: -3.288055658340454
    3. '(part' → logprob: -11.413055419921875
    4. '	part' → logprob: -13.163055419921875
    5. 'self' → logprob: -14.788055419921875
    6. ' ' → logprob: -14.913055419921875
    7. '_part' → logprob: -15.038055419921875
    8. 'Part' → logprob: -16.163055419921875
    9. '.part' → logprob: -17.538055419921875
    10. ' self' → logprob: -18.163055419921875

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005606173072010279
    2. 'in' → logprob: -5.255606174468994
    3. '.is' → logprob: -8.005605697631836
    4. ' ' → logprob: -10.630605697631836
    5. '.' → logprob: -12.005605697631836
    6. 'isdigit' → logprob: -12.880605697631836
    7. '.in' → logprob: -13.505605697631836
    8. '[' → logprob: -13.755605697631836
    9. '	in' → logprob: -14.130605697631836
    10. 'is' → logprob: -14.130605697631836

Token 260: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023252815008163452
    2. ' self' → logprob: -3.7732527256011963
    3. '           ' → logprob: -12.523252487182617
    4. '(self' → logprob: -13.523252487182617
    5. '[self' → logprob: -14.148252487182617
    6. '	self' → logprob: -14.273252487182617
    7. '       ' → logprob: -15.023252487182617
    8. '=self' → logprob: -15.523252487182617
    9. '```' → logprob: -16.398252487182617
    10. '$self' → logprob: -16.773252487182617

Token 261: '.operator' (ID: 105010)
  Prédit: '.operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.operator' → logprob: -0.00032390307751484215
    2. 'operator' → logprob: -8.250324249267578
    3. '.' → logprob: -9.875324249267578
    4. ' .' → logprob: -11.750324249267578
    5. '	operator' → logprob: -13.375324249267578
    6. '.token' → logprob: -14.500324249267578
    7. ' operator' → logprob: -14.750324249267578
    8. '.op' → logprob: -14.750324249267578
    9. '.user' → logprob: -16.125324249267578
    10. '(operator' → logprob: -16.500324249267578

Token 262: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -5.512236498361744e-07
    2. 'map' → logprob: -15.000000953674316
    3. 's' → logprob: -16.25
    4. '_' → logprob: -17.875
    5. 'Map' → logprob: -19.75
    6. '_m' → logprob: -20.0
    7. '_MAP' → logprob: -20.375
    8. ' map' → logprob: -20.625
    9. '_maps' → logprob: -21.0
    10. '
' → logprob: -22.5

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008634308353066444
    2. ':
' → logprob: -4.758634090423584
    3. '):' → logprob: -11.258634567260742
    4. ' :' → logprob: -12.633634567260742
    5. '):
' → logprob: -13.883634567260742
    6. '           ' → logprob: -13.883634567260742
    7. ':
' → logprob: -14.633634567260742
    8. ':

' → logprob: -15.008634567260742
    9. ')' → logprob: -15.508634567260742
    10. ' :
' → logprob: -15.508634567260742

Token 264: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019594302400946617
    2. ' tokens' → logprob: -4.644594192504883
    3. 'tokens' → logprob: -4.769594192504883
    4. '(tokens' → logprob: -7.269594192504883
    5. '.tokens' → logprob: -7.894594192504883
    6. '           ' → logprob: -8.894594192504883
    7. '_tokens' → logprob: -9.769594192504883
    8. ')' → logprob: -11.394594192504883
    9. ',' → logprob: -11.519594192504883
    10. '                
' → logprob: -11.769594192504883

Token 265: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.025149153545498848
    2. ' tokens' → logprob: -3.77514910697937
    3. '               ' → logprob: -6.275149345397949
    4. 'token' → logprob: -11.90014934539795
    5. '           ' → logprob: -12.27514934539795
    6. '.tokens' → logprob: -12.77514934539795
    7. '(tokens' → logprob: -13.02514934539795
    8. '
' → logprob: -14.15014934539795
    9. '                   ' → logprob: -14.40014934539795
    10. '                
' → logprob: -14.52514934539795

Token 266: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.627176768844947e-05
    2. '.' → logprob: -9.250096321105957
    3. '.ap' → logprob: -16.87509536743164
    4. '.app' → logprob: -17.12509536743164
    5. 'append' → logprob: -17.75009536743164
    6. ' .' → logprob: -18.25009536743164
    7. '.Append' → logprob: -18.87509536743164
    8. '.extend' → logprob: -20.12509536743164
    9. '.add' → logprob: -20.50009536743164
    10. '.push' → logprob: -20.62509536743164

Token 267: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.537868779967539e-06
    2. 'Operator' → logprob: -11.750008583068848
    3. ' Operator' → logprob: -15.625008583068848
    4. '(
' → logprob: -15.625008583068848
    5. '(operator' → logprob: -16.12500762939453
    6. '(Operation' → logprob: -17.25000762939453
    7. 'operator' → logprob: -17.62500762939453
    8. ' (' → logprob: -17.87500762939453
    9. '(Op' → logprob: -18.87500762939453
    10. '.Operator' → logprob: -19.75000762939453

Token 268: 'Operator' (ID: 21693)
  Prédit: 'Operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operator' → logprob: -1.8624639324116288e-06
    2. ' Operator' → logprob: -13.250001907348633
    3. 'operator' → logprob: -21.500001907348633
    4. '           ' → logprob: -24.500001907348633
    5. 'Agent' → logprob: -25.000001907348633
    6. '       ' → logprob: -25.125001907348633
    7. '   ' → logprob: -25.375001907348633
    8. '_operator' → logprob: -25.375001907348633
    9. ' operator' → logprob: -25.750001907348633
    10. '               ' → logprob: -26.125001907348633

Token 269: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -4.320199877838604e-07
    2. 'token' → logprob: -15.875
    3. '	Token' → logprob: -16.625
    4. 'Operator' → logprob: -17.125
    5. 'Tokens' → logprob: -17.625
    6. ' Token' → logprob: -18.0
    7. '_token' → logprob: -18.25
    8. 'Tokenizer' → logprob: -18.5
    9. '<Token' → logprob: -18.5
    10. '(Token' → logprob: -19.125

Token 270: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.00026455431361682713
    2. '(' → logprob: -8.250264167785645
    3. '(
' → logprob: -13.125264167785645
    4. ' (' → logprob: -14.250264167785645
    5. 'part' → logprob: -15.500264167785645
    6. ')' → logprob: -15.625264167785645
    7. ' part' → logprob: -16.62526512145996
    8. ')(' → logprob: -17.00026512145996
    9. '(parts' → logprob: -17.12526512145996
    10. '(

' → logprob: -17.25026512145996

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.269565634895116e-05
    2. ' ,' → logprob: -9.875092506408691
    3. ',self' → logprob: -10.125092506408691
    4. 'self' → logprob: -14.375092506408691
    5. ',
' → logprob: -14.625092506408691
    6. ')' → logprob: -16.750093460083008
    7. '),' → logprob: -16.875093460083008
    8. ' self' → logprob: -17.875093460083008
    9. '   ' → logprob: -18.000093460083008
    10. ',

' → logprob: -18.250093460083008

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048587825149297714
    2. ' self' → logprob: -3.0485877990722656
    3. '	self' → logprob: -15.923587799072266
    4. '[self' → logprob: -16.048587799072266
    5. '           ' → logprob: -16.423587799072266
    6. '       ' → logprob: -16.673587799072266
    7. '(self' → logprob: -16.923587799072266
    8. '   ' → logprob: -17.048587799072266
    9. '
' → logprob: -17.423587799072266
    10. '               ' → logprob: -18.048587799072266

Token 273: '.operator' (ID: 105010)
  Prédit: '.operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.operator' → logprob: -0.0007202956476248801
    2. 'operator' → logprob: -7.250720500946045
    3. '.' → logprob: -11.750720024108887
    4. '	operator' → logprob: -13.625720024108887
    5. '.op' → logprob: -14.625720024108887
    6. ' .' → logprob: -15.625720024108887
    7. '.user' → logprob: -15.625720024108887
    8. ').' → logprob: -15.750720024108887
    9. ' operator' → logprob: -16.750720977783203
    10. '.operation' → logprob: -17.000720977783203

Token 274: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.015693645924329758
    2. '.operator' → logprob: -4.390693664550781
    3. 'operator' → logprob: -5.765693664550781
    4. '_operator' → logprob: -10.640693664550781
    5. '.map' → logprob: -12.265693664550781
    6. '._' → logprob: -12.390693664550781
    7. ' operator' → logprob: -13.140693664550781
    8. '.' → logprob: -13.140693664550781
    9. '           ' → logprob: -13.765693664550781
    10. '[' → logprob: -13.890693664550781

Token 275: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.625000953674316
    3. '[
' → logprob: -16.375
    4. ')[' → logprob: -16.5
    5. 'part' → logprob: -16.75
    6. '(part' → logprob: -17.5
    7. '[param' → logprob: -17.5
    8. '```' → logprob: -17.5
    9. '[pos' → logprob: -17.75
    10. '   ' → logprob: -17.75

Token 276: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -2.3438327843905427e-05
    2. '[' → logprob: -10.75002384185791
    3. ' part' → logprob: -13.50002384185791
    4. '(part' → logprob: -15.00002384185791
    5. ')' → logprob: -16.375022888183594
    6. ')[' → logprob: -17.375022888183594
    7. '   ' → logprob: -18.125022888183594
    8. '	part' → logprob: -18.250022888183594
    9. ']' → logprob: -19.000022888183594
    10. '][' → logprob: -19.125022888183594

Token 277: ']))
' (ID: 24801)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.3078964352607727
    2. '))' → logprob: -1.557896375656128
    3. ']))
' → logprob: -3.057896375656128
    4. ']))' → logprob: -4.932896614074707
    5. ']' → logprob: -9.807896614074707
    6. '))
' → logprob: -10.182896614074707
    7. '])
' → logprob: -10.557896614074707
    8. '))

' → logprob: -10.557896614074707
    9. ')))
' → logprob: -10.932896614074707
    10. '])' → logprob: -10.932896614074707

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.897412822581828e-05
    2. 'elif' → logprob: -10.125068664550781
    3. 'else' → logprob: -10.500068664550781
    4. ' else' → logprob: -15.250068664550781
    5. ')' → logprob: -15.375068664550781
    6. '		' → logprob: -15.500068664550781
    7. ' elif' → logprob: -15.625068664550781
    8. '               ' → logprob: -15.875068664550781
    9. '```' → logprob: -15.875068664550781
    10. '       ' → logprob: -16.62506866455078

Token 279: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19162118434906006
    2. 'elif' → logprob: -2.4416213035583496
    3. 'else' (adapté à ' else') → logprob: -2.4416213035583496
    4. ' else' → logprob: -8.691620826721191
    5. ' elif' → logprob: -8.691620826721191
    6. '       ' → logprob: -12.691620826721191
    7. '               ' → logprob: -14.066620826721191
    8. '```' → logprob: -14.691620826721191
    9. '          ' → logprob: -15.316620826721191
    10. 'elseif' → logprob: -15.566620826721191

Token 280: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25262215733528137
    2. ':
' → logprob: -1.502622127532959
    3. '               ' → logprob: -7.377622127532959
    4. '           ' → logprob: -9.752622604370117
    5. 'try' → logprob: -12.752622604370117
    6. ':
' → logprob: -12.877622604370117
    7. ':

' → logprob: -13.502622604370117
    8. ',' → logprob: -14.127622604370117
    9. '):
' → logprob: -14.627622604370117
    10. ' try' → logprob: -15.127622604370117

Token 281: '               ' (ID: 506)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.31770119071006775
    2. '               ' → logprob: -1.3177012205123901
    3. ' try' → logprob: -5.56770133972168
    4. 'tokens' → logprob: -8.06770133972168
    5. '           ' → logprob: -8.44270133972168
    6. '       ' → logprob: -10.06770133972168
    7. '   ' → logprob: -11.31770133972168
    8. '                   ' → logprob: -11.56770133972168
    9. '```' → logprob: -11.94270133972168
    10. ' tokens' → logprob: -12.56770133972168

Token 282: ' #' (ID: 1069)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.7775015830993652
    2. ' tokens' → logprob: -1.0275015830993652
    3. 'try' → logprob: -2.2775015830993652
    4. 'tokens' → logprob: -2.5275015830993652
    5. '               ' → logprob: -9.652502059936523
    6. '           ' → logprob: -9.902502059936523
    7. '.tokens' → logprob: -11.402502059936523
    8. 'Number' → logprob: -12.277502059936523
    9. ' number' → logprob: -12.527502059936523
    10. '(tokens' → logprob: -12.652502059936523

Token 283: ' Allow' (ID: 33421)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.4743136763572693
    2. ' try' → logprob: -0.9743136763572693
    3. ' tokens' → logprob: -9.099313735961914
    4. 'tokens' → logprob: -9.224313735961914
    5. '               ' → logprob: -10.974313735961914
    6. '           ' → logprob: -12.224313735961914
    7. '
' → logprob: -13.849313735961914
    8. 'Try' → logprob: -13.974313735961914
    9. 'value' → logprob: -14.224313735961914
    10. '                   ' → logprob: -14.724313735961914

Token 284: ' int' (ID: 677)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.4312082529067993
    2. ' try' → logprob: -1.0562082529067993
    3. 'float' → logprob: -7.05620813369751
    4. '               ' → logprob: -7.18120813369751
    5. ' float' → logprob: -7.93120813369751
    6. 'tokens' → logprob: -8.556208610534668
    7. ' tokens' → logprob: -9.181208610534668
    8. '           ' → logprob: -9.306208610534668
    9. '.try' → logprob: -9.681208610534668
    10. '                   ' → logprob: -11.181208610534668

Token 285: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.14251834154129028
    2. 'or' → logprob: -2.5175182819366455
    3. ' and' → logprob: -3.7675182819366455
    4. 'and' → logprob: -4.392518520355225
    5. 'try' → logprob: -5.392518520355225
    6. 'eger' → logprob: -6.017518520355225
    7. '()' → logprob: -6.142518520355225
    8. 's' → logprob: -6.392518520355225
    9. 'er' → logprob: -7.017518520355225
    10. ',' → logprob: -7.017518520355225

Token 286: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.12692968547344208
    2. ' float' → logprob: -2.126929759979248
    3. '.' → logprob: -14.62692928314209
    4. '.float' → logprob: -14.75192928314209
    5. '_float' → logprob: -15.87692928314209
    6. '<float' → logprob: -15.87692928314209
    7. '=float' → logprob: -16.001930236816406
    8. 'flo' → logprob: -16.251930236816406
    9. '	float' → logprob: -16.626930236816406
    10. '(float' → logprob: -17.001930236816406

Token 287: ' parsing' (ID: 51039)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9151662588119507
    2. '               ' → logprob: -1.9151662588119507
    3. '                   ' → logprob: -2.4151663780212402
    4. 'try' → logprob: -2.5401663780212402
    5. '           ' → logprob: -2.7901663780212402
    6. '(tokens' → logprob: -3.0401663780212402
    7. 'tokens' → logprob: -3.5401663780212402
    8. ':' → logprob: -3.5401663780212402
    9. '(value' → logprob: -3.6651663780212402
    10. '(token' → logprob: -4.04016637802124

Token 288: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2036142647266388
    2. 'try' → logprob: -2.0786142349243164
    3. ' try' → logprob: -3.4536142349243164
    4. '           ' → logprob: -4.203614234924316
    5. '                   ' → logprob: -4.453614234924316
    6. ',' → logprob: -9.078614234924316
    7. '.try' → logprob: -9.078614234924316
    8. ':
' → logprob: -9.203614234924316
    9. '                
' → logprob: -9.203614234924316
    10. 'tokens' → logprob: -9.203614234924316

Token 289: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25384441018104553
    2. '           ' → logprob: -2.0038444995880127
    3. 'try' → logprob: -2.5038444995880127
    4. ' try' → logprob: -5.128844261169434
    5. '                   ' → logprob: -6.878844261169434
    6. 'token' → logprob: -8.378844261169434
    7. '.try' → logprob: -9.878844261169434
    8. ',' → logprob: -10.003844261169434
    9. 'number' → logprob: -10.253844261169434
    10. 'tokens' → logprob: -10.503844261169434

Token 290: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.07945246994495392
    2. ' try' → logprob: -2.5794525146484375
    3. '               ' → logprob: -7.5794525146484375
    4. 'tokens' → logprob: -10.829452514648438
    5. '           ' → logprob: -11.079452514648438
    6. '                   ' → logprob: -11.829452514648438
    7. ' tokens' → logprob: -12.329452514648438
    8. '```' → logprob: -13.454452514648438
    9. 'num' → logprob: -14.079452514648438
    10. 'number' → logprob: -14.329452514648438

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030310142785310745
    2. ':
' → logprob: -3.9053101539611816
    3. '                   ' → logprob: -4.655310153961182
    4. '               ' → logprob: -8.780309677124023
    5. '                       ' → logprob: -10.655309677124023
    6. ' :' → logprob: -11.780309677124023
    7. '                    ' → logprob: -12.030309677124023
    8. '           ' → logprob: -12.405309677124023
    9. '   ' → logprob: -12.780309677124023
    10. '                ' → logprob: -13.155309677124023

Token 292: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011889220913872123
    2. ':' → logprob: -7.8761887550354
    3. '   ' → logprob: -7.8761887550354
    4. '                       ' → logprob: -8.501189231872559
    5. '               ' → logprob: -9.251189231872559
    6. ':
' → logprob: -10.376189231872559
    7. 'tokens' → logprob: -10.501189231872559
    8. 'token' → logprob: -10.626189231872559
    9. '           ' → logprob: -11.001189231872559
    10. '                  ' → logprob: -11.751189231872559

Token 293: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.11834689229726791
    2. 'num' → logprob: -2.868346929550171
    3. '                   ' → logprob: -3.493346929550171
    4. ' value' → logprob: -4.118346691131592
    5. 'number' → logprob: -5.118346691131592
    6. ' num' → logprob: -7.118346691131592
    7. '                       ' → logprob: -7.618346691131592
    8. ' number' → logprob: -7.868346691131592
    9. 'token' → logprob: -8.49334716796875
    10. 'val' (adapté à ' val') → logprob: -8.61834716796875

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5552657246589661
    2. ' =' → logprob: -1.0552656650543213
    3. ':' → logprob: -2.5552656650543213
    4. '                   ' → logprob: -9.055265426635742
    5. ':
' → logprob: -9.305265426635742
    6. '                       ' → logprob: -10.430265426635742
    7. '               ' → logprob: -10.805265426635742
    8. ')' → logprob: -11.930265426635742
    9. '   ' → logprob: -11.930265426635742
    10. '=int' → logprob: -12.055265426635742

Token 295: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008737481199204922
    2. ' float' → logprob: -4.758737564086914
    3. 'int' → logprob: -9.008737564086914
    4. ' int' → logprob: -15.133737564086914
    5. '   ' → logprob: -15.633737564086914
    6. '	float' → logprob: -16.633737564086914
    7. '(float' → logprob: -17.758737564086914
    8. 'flo' → logprob: -18.258737564086914
    9. '=float' → logprob: -18.383737564086914
    10. ' ' → logprob: -19.758737564086914

Token 296: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -8.77627644513268e-06
    2. 'part' → logprob: -11.750008583068848
    3. '(' → logprob: -14.125008583068848
    4. '(parts' → logprob: -18.125009536743164
    5. 'Part' → logprob: -19.375009536743164
    6. '(
' → logprob: -19.500009536743164
    7. '	part' → logprob: -19.500009536743164
    8. ' part' → logprob: -19.875009536743164
    9. '_part' → logprob: -21.500009536743164
    10. '```' → logprob: -21.875009536743164

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00672211404889822
    2. ')
' → logprob: -5.0067219734191895
    3. ')
' → logprob: -13.381722450256348
    4. '                   ' → logprob: -13.631722450256348
    5. '               ' → logprob: -13.631722450256348
    6. ' )' → logprob: -14.131722450256348
    7. ')`' → logprob: -14.506722450256348
    8. '           ' → logprob: -14.756722450256348
    9. ')

' → logprob: -15.006722450256348
    10. ')`
' → logprob: -15.506722450256348

Token 298: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08384426683187485
    2. ')' → logprob: -2.9588441848754883
    3. '               ' → logprob: -3.5838441848754883
    4. '                       ' → logprob: -8.458844184875488
    5. '<|end|>' → logprob: -8.583844184875488
    6. ',' → logprob: -9.083844184875488
    7. '           ' → logprob: -9.333844184875488
    8. '                    
' → logprob: -10.083844184875488
    9. '<|end|>' → logprob: -10.833844184875488
    10. '                  ' → logprob: -11.333844184875488

Token 299: ' except' (ID: 6384)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025922497734427452
    2. '               ' → logprob: -3.7759225368499756
    3. ' except' → logprob: -6.5259222984313965
    4. ')' → logprob: -7.5259222984313965
    5. 'except' (adapté à ' except') → logprob: -8.525922775268555
    6. ',' → logprob: -9.150922775268555
    7. '<|end|>' → logprob: -9.650922775268555
    8. '                       ' → logprob: -10.025922775268555
    9. '                  ' → logprob: -10.275922775268555
    10. '           ' → logprob: -10.400922775268555

Token 300: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.02582329325377941
    2. 'Value' → logprob: -3.9008233547210693
    3. '(Value' → logprob: -5.27582311630249
    4. '	Value' → logprob: -9.400823593139648
    5. ' (' → logprob: -11.150823593139648
    6. ' ' → logprob: -11.150823593139648
    7. '_Value' → logprob: -11.775823593139648
    8. '_value' → logprob: -11.900823593139648
    9. '<Value' → logprob: -11.900823593139648
    10. ' Exception' → logprob: -11.900823593139648

Token 301: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.0024895723909139633
    2. 'Error' → logprob: -6.0024895668029785
    3. 'ror' → logprob: -11.752490043640137
    4. 'error' → logprob: -12.752490043640137
    5. 'x' → logprob: -13.002490043640137
    6. 'rr' → logprob: -15.127490043640137
    7. 'r' → logprob: -15.377490043640137
    8. 'Exception' → logprob: -16.62748908996582
    9. 'or' → logprob: -16.87748908996582
    10. '_error' → logprob: -17.62748908996582

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38138267397880554
    2. ':
' → logprob: -1.881382703781128
    3. '                   ' → logprob: -1.881382703781128
    4. ' as' → logprob: -5.131382465362549
    5. '               ' → logprob: -5.381382465362549
    6. '                       ' → logprob: -7.131382465362549
    7. '(' → logprob: -7.631382465362549
    8. ',' → logprob: -9.381382942199707
    9. '           ' → logprob: -9.756382942199707
    10. ')' → logprob: -10.006382942199707

Token 303: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007597190560773015
    2. '               ' → logprob: -7.250759601593018
    3. '                       ' → logprob: -10.375760078430176
    4. '                  ' → logprob: -12.500760078430176
    5. '           ' → logprob: -13.000760078430176
    6. ' raise' → logprob: -13.000760078430176
    7. '                    ' → logprob: -13.500760078430176
    8. ' continue' → logprob: -13.500760078430176
    9. ' return' → logprob: -13.625760078430176
    10. '                    
' → logprob: -13.750760078430176

Token 304: ' raise' (ID: 9338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.905505895614624
    2. 'raise' (adapté à ' raise') → logprob: -0.905505895614624
    3. ' raise' → logprob: -1.655505895614624
    4. '                       ' → logprob: -8.655506134033203
    5. 'sys' → logprob: -10.405506134033203
    6. '   ' → logprob: -10.405506134033203
    7. '                    ' → logprob: -10.655506134033203
    8. ' sys' → logprob: -10.780506134033203
    9. '               ' → logprob: -10.780506134033203
    10. '	raise' → logprob: -10.905506134033203

Token 305: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.1269969791173935
    2. ' Value' → logprob: -2.1269969940185547
    3. 'Syntax' → logprob: -9.626996994018555
    4. 'Runtime' → logprob: -13.501996994018555
    5. 'Exception' → logprob: -14.126996994018555
    6. ' Syntax' → logprob: -14.626996994018555
    7. '(Value' → logprob: -15.126996994018555
    8. ' Runtime' → logprob: -16.376996994018555
    9. '_Value' → logprob: -17.501996994018555
    10. '	Value' → logprob: -17.751996994018555

Token 306: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.127333340875339e-06
    2. 'rror' → logprob: -12.500003814697266
    3. '(f' → logprob: -15.500003814697266
    4. '("' → logprob: -16.375003814697266
    5. 'error' → logprob: -16.750003814697266
    6. 'Token' → logprob: -19.000003814697266
    7. '('' → logprob: -19.750003814697266
    8. 'f' → logprob: -19.875003814697266
    9. '_error' → logprob: -20.375003814697266
    10. '   ' → logprob: -20.375003814697266

Token 307: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0017677661962807178
    2. '(' → logprob: -6.376767635345459
    3. '("' → logprob: -9.751768112182617
    4. '(
' → logprob: -12.376768112182617
    5. 'f' → logprob: -13.251768112182617
    6. '                       ' → logprob: -14.626768112182617
    7. '                   ' → logprob: -14.876768112182617
    8. '(F' → logprob: -15.251768112182617
    9. '               ' → logprob: -16.376768112182617
    10. '('' → logprob: -16.626768112182617

Token 308: '"' (ID: 1)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.015471464022994041
    2. '"' → logprob: -5.015471458435059
    3. 'Invalid' → logprob: -5.515471458435059
    4. 'f' → logprob: -5.890471458435059
    5. '(' → logprob: -7.015471458435059
    6. '("' → logprob: -7.140471458435059
    7. 'Unexpected' → logprob: -9.140471458435059
    8. 'invalid' → logprob: -10.265471458435059
    9. ' f' → logprob: -10.265471458435059
    10. 'Unknown' → logprob: -10.515471458435059

Token 309: 'Invalid' (ID: 12278)
  Prédit: 'Invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.640708327293396
    2. 'f' → logprob: -1.015708327293396
    3. '"' → logprob: -2.2657084465026855
    4. 'Unknown' → logprob: -5.3907084465026855
    5. 'Unexpected' → logprob: -6.7657084465026855
    6. ' f' → logprob: -6.8907084465026855
    7. 'Un' → logprob: -8.640707969665527
    8. 'Unsupported' → logprob: -8.890707969665527
    9. 'Illegal' → logprob: -10.390707969665527
    10. ''' → logprob: -10.640707969665527

Token 310: ' token' (ID: 6602)
  Prédit: ' token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.01895011030137539
    2. 'token' → logprob: -4.01894998550415
    3. ' number' → logprob: -8.018950462341309
    4. ' expression' → logprob: -8.143950462341309
    5. ' character' → logprob: -9.268950462341309
    6. ' numeric' → logprob: -9.893950462341309
    7. 'Token' → logprob: -11.268950462341309
    8. ' part' → logprob: -12.268950462341309
    9. 'number' → logprob: -12.393950462341309
    10. ' operand' → logprob: -12.643950462341309

Token 311: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03129687160253525
    2. ' encountered' → logprob: -3.656296968460083
    3. '{' → logprob: -6.531296730041504
    4. ' token' → logprob: -7.281296730041504
    5. ''{' → logprob: -7.406296730041504
    6. ' '{' → logprob: -7.406296730041504
    7. ' in' → logprob: -7.531296730041504
    8. ' part' → logprob: -8.031296730041504
    9. 'token' → logprob: -8.156296730041504
    10. ' found' → logprob: -8.281296730041504

Token 312: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.49174633622169495
    2. '{' → logprob: -1.4917463064193726
    3. ' '{' → logprob: -2.366746425628662
    4. ''{' → logprob: -2.991746425628662
    5. ' part' → logprob: -3.991746425628662
    6. 'part' → logprob: -6.991746425628662
    7. ''' → logprob: -9.991745948791504
    8. '"{' → logprob: -10.991745948791504
    9. ' '' → logprob: -11.491745948791504
    10. ' `{' → logprob: -12.116745948791504

Token 313: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -5.037835580878891e-05
    2. '{' → logprob: -10.25005054473877
    3. ' part' → logprob: -11.12505054473877
    4. '(part' → logprob: -16.375049591064453
    5. '	part' → logprob: -16.875049591064453
    6. 'p' → logprob: -17.625049591064453
    7. ''{' → logprob: -17.750049591064453
    8. ' {' → logprob: -18.250049591064453
    9. '   ' → logprob: -18.500049591064453
    10. '}' → logprob: -18.625049591064453

Token 314: '}")
' (ID: 23577)
  Prédit: '}")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")
' → logprob: -0.7414133548736572
    2. '")' → logprob: -1.4914133548736572
    3. '")
' → logprob: -1.4914133548736572
    4. '}")' → logprob: -2.6164133548736572
    5. ')")
' → logprob: -8.991413116455078
    6. '")
' → logprob: -9.491413116455078
    7. '}' → logprob: -9.741413116455078
    8. ' }' → logprob: -10.241413116455078
    9. ''")
' → logprob: -10.616413116455078
    10. ')")' → logprob: -11.116413116455078

Token 315: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010718696285039186
    2. '           ' → logprob: -7.376071929931641
    3. '                
' → logprob: -8.12607192993164
    4. ' else' → logprob: -9.25107192993164
    5. '                   ' → logprob: -10.75107192993164
    6. '            
' → logprob: -11.75107192993164
    7. 'else' → logprob: -12.25107192993164
    8. ')' → logprob: -12.62607192993164
    9. '                ' → logprob: -12.75107192993164
    10. '
' → logprob: -13.12607192993164

Token 316: ' tokens' (ID: 20290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3570024371147156
    2. ' tokens' → logprob: -1.6070024967193604
    3. 'tokens' (adapté à ' tokens') → logprob: -2.3570024967193604
    4. '           ' → logprob: -5.482002258300781
    5. '
' → logprob: -7.732002258300781
    6. '(tokens' → logprob: -8.232002258300781
    7. '.tokens' → logprob: -9.482002258300781
    8. '                
' → logprob: -10.107002258300781
    9. '                   ' → logprob: -10.857002258300781
    10. '_tokens' → logprob: -11.232002258300781

Token 317: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.56102097814437e-05
    2. '.' → logprob: -10.000045776367188
    3. 'append' → logprob: -16.500045776367188
    4. '.app' → logprob: -17.500045776367188
    5. '.Append' → logprob: -18.375045776367188
    6. '.push' → logprob: -19.625045776367188
    7. '.extend' → logprob: -19.750045776367188
    8. '.ap' → logprob: -20.000045776367188
    9. '.add' → logprob: -20.625045776367188
    10. ' .' → logprob: -20.875045776367188

Token 318: '(Number' (ID: 76564)
  Prédit: '(Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Number' → logprob: -0.0052392068319022655
    2. 'Number' → logprob: -5.255239009857178
    3. ' Number' → logprob: -12.130239486694336
    4. '_Number' → logprob: -17.380239486694336
    5. ':Number' → logprob: -17.755239486694336
    6. '(' → logprob: -18.755239486694336
    7. '.Number' → logprob: -18.880239486694336
    8. ' (' → logprob: -19.505239486694336
    9. '   ' → logprob: -20.380239486694336
    10. '_number' → logprob: -21.380239486694336

Token 319: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: 0.0
    2. 'token' → logprob: -17.625
    3. 'Tokens' → logprob: -19.0
    4. '	Token' → logprob: -19.0
    5. 'Tokenizer' → logprob: -19.375
    6. 'To' → logprob: -19.875
    7. ' Token' → logprob: -20.125
    8. '```' → logprob: -20.375
    9. '<Token' → logprob: -20.375
    10. 'Tok' → logprob: -20.625

Token 320: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -1.6405310816480778e-05
    2. '(' → logprob: -11.125016212463379
    3. 'val' → logprob: -14.375016212463379
    4. ' (' → logprob: -15.000016212463379
    5. '[val' → logprob: -15.375016212463379
    6. ',val' → logprob: -15.750016212463379
    7. ')' → logprob: -15.750016212463379
    8. '(value' → logprob: -16.375017166137695
    9. ')(' → logprob: -17.375017166137695
    10. '(valor' → logprob: -17.500017166137695

Token 321: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0032753876876085997
    2. '))
' → logprob: -5.753275394439697
    3. ')' → logprob: -9.253274917602539
    4. ')
' → logprob: -13.753274917602539
    5. ' ))' → logprob: -15.003274917602539
    6. '           ' → logprob: -15.628274917602539
    7. '       ' → logprob: -15.753274917602539
    8. '))

' → logprob: -16.50327491760254
    9. ')))' → logprob: -17.62827491760254
    10. '               ' → logprob: -18.12827491760254

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006271339952945709
    2. '
' → logprob: -5.8812713623046875
    3. 'return' → logprob: -5.8812713623046875
    4. ' return' → logprob: -7.6312713623046875
    5. '        
' → logprob: -9.006271362304688
    6. '<|end|>' → logprob: -10.381271362304688
    7. '	return' → logprob: -12.006271362304688
    8. ':return' → logprob: -12.256271362304688
    9. '```' → logprob: -12.506271362304688
    10. ' 
' → logprob: -13.131271362304688

Token 323: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20399832725524902
    2. 'return' (adapté à ' return') → logprob: -1.703998327255249
    3. ' return' → logprob: -6.203998565673828
    4. '
' → logprob: -7.828998565673828
    5. '        
' → logprob: -9.828998565673828
    6. '	return' → logprob: -9.953998565673828
    7. '   ' → logprob: -10.203998565673828
    8. ':return' → logprob: -11.953998565673828
    9. '```' → logprob: -12.328998565673828
    10. '	' → logprob: -12.578998565673828

Token 324: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.3868713080883026
    2. ' tokens' → logprob: -1.136871337890625
    3. 'token' → logprob: -15.761871337890625
    4. '(tokens' → logprob: -16.636871337890625
    5. 'Tokens' → logprob: -19.136871337890625
    6. 'okens' → logprob: -19.261871337890625
    7. '_tokens' → logprob: -19.511871337890625
    8. '.tokens' → logprob: -19.636871337890625
    9. 't' → logprob: -20.886871337890625
    10. ' token' → logprob: -22.011871337890625

Token 325: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4066551625728607
    2. '
' → logprob: -1.531655192375183
    3. '<|end|>' → logprob: -2.1566550731658936
    4. '<|end|>' → logprob: -6.906655311584473
    5. 'class' → logprob: -7.156655311584473
    6. '

' → logprob: -7.906655311584473
    7. '    
' → logprob: -10.906655311584473
    8. '```' → logprob: -10.906655311584473
    9. '  
' → logprob: -11.656655311584473
    10. '        
' → logprob: -11.781655311584473

Token 326: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0003146088565699756
    2. 'class' → logprob: -8.125314712524414
    3. '
' → logprob: -11.125314712524414
    4. '<|end|>' → logprob: -13.375314712524414
    5. '```' → logprob: -13.875314712524414
    6. '<|end|>' → logprob: -14.750314712524414
    7. '

' → logprob: -15.625314712524414
    8. '\n' → logprob: -15.750314712524414
    9. ' #' → logprob: -16.250314712524414
    10. '  
' → logprob: -16.375314712524414

Token 327: ' ---' (ID: 26691)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25193557143211365
    2. 'class' → logprob: -1.501935601234436
    3. 'import' → logprob: -13.126935958862305
    4. 'def' → logprob: -13.751935958862305
    5. ' class' → logprob: -14.001935958862305
    6. 'from' → logprob: -14.001935958862305
    7. '```' → logprob: -14.126935958862305
    8. '
' → logprob: -15.001935958862305
    9. ' #' → logprob: -16.251935958862305
    10. '@dat' → logprob: -16.376935958862305

Token 328: ' Stack' (ID: 25134)
  Prédit: 'Evaluator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Evaluator' → logprob: -1.0188125371932983
    2. 'class' → logprob: -1.6438125371932983
    3. 'Parser' → logprob: -1.6438125371932983
    4. '#' → logprob: -2.018812656402588
    5. ' Parser' → logprob: -2.268812656402588
    6. 'Interpreter' → logprob: -5.643812656402588
    7. ' class' → logprob: -6.018812656402588
    8. 'parser' → logprob: -6.393812656402588
    9. ' Evalu' → logprob: -6.518812656402588
    10. 'Evaluation' → logprob: -6.518812656402588

Token 329: ' With' (ID: 3813)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010738871991634369
    2. ' class' → logprob: -5.135738849639893
    3. '<|end|>' → logprob: -6.260738849639893
    4. '<|end|>' → logprob: -6.385738849639893
    5. '#' → logprob: -7.510738849639893
    6. '
' → logprob: -8.38573932647705
    7. '---

' → logprob: -8.76073932647705
    8. '<class' → logprob: -9.88573932647705
    9. ':' → logprob: -9.88573932647705
    10. '(Stack' → logprob: -11.13573932647705

Token 330: ' Explicit' (ID: 169846)
  Prédit: 'Peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Peek' → logprob: -0.7229216694831848
    2. 'Max' → logprob: -1.97292160987854
    3. 'Overflow' → logprob: -2.59792160987854
    4. 'Capacity' → logprob: -2.72292160987854
    5. 'Limit' → logprob: -2.97292160987854
    6. 'peek' → logprob: -3.34792160987854
    7. 'Gener' → logprob: -3.97292160987854
    8. 'Push' → logprob: -4.222921848297119
    9. 'Maximum' → logprob: -4.597921848297119
    10. ' peek' → logprob: -4.597921848297119

Token 331: ' Interface' (ID: 36222)
  Prédit: 'Frames'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Frames' → logprob: -0.8834909796714783
    2. 'Frame' → logprob: -1.133491039276123
    3. 'Methods' → logprob: -3.258491039276123
    4. 'Operations' → logprob: -3.633491039276123
    5. 'Overflow' → logprob: -3.633491039276123
    6. 'Pointer' → logprob: -3.633491039276123
    7. 'Size' → logprob: -3.758491039276123
    8. 'Memory' → logprob: -4.258491039276123
    9. 'Typing' → logprob: -4.258491039276123
    10. 'Limits' → logprob: -4.508491039276123

Token 332: ' --' (ID: 2230)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010453778319060802
    2. '
' → logprob: -4.885453701019287
    3. '

' → logprob: -6.010453701019287
    4. ' class' → logprob: -8.510454177856445
    5. '(class' → logprob: -9.385454177856445
    6. '(' → logprob: -10.010454177856445
    7. '<class' → logprob: -10.635454177856445
    8. '<|end|>' → logprob: -11.260454177856445
    9. '  
' → logprob: -12.135454177856445
    10. '[' → logprob: -12.760454177856445

Token 333: '-

' (ID: 16364)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.030024003237485886
    2. 'from' → logprob: -3.5300240516662598
    3. ' class' → logprob: -8.530023574829102
    4. '
' → logprob: -9.905023574829102
    5. 'ABC' → logprob: -11.280023574829102
    6. ' from' → logprob: -11.780023574829102
    7. 'import' → logprob: -13.280023574829102
    8. ' 
' → logprob: -13.655023574829102
    9. '  
' → logprob: -14.405023574829102
    10. '<class' → logprob: -14.655023574829102

Token 334: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0015036711702123284
    2. 'from' → logprob: -6.5015034675598145
    3. 'import' → logprob: -14.126503944396973
    4. ' class' → logprob: -14.501503944396973
    5. '
' → logprob: -16.751502990722656
    6. '#' → logprob: -17.626502990722656
    7. '<class' → logprob: -17.876502990722656
    8. ' from' → logprob: -18.626502990722656
    9. 'interface' → logprob: -19.126502990722656
    10. 'T' → logprob: -19.251502990722656

Token 335: ' Stack' (ID: 25134)
  Prédit: 'Stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stack' → logprob: -0.013707151636481285
    2. ' Stack' → logprob: -4.388707160949707
    3. 'Abstract' → logprob: -8.513707160949707
    4. 'Explicit' → logprob: -8.638707160949707
    5. 'Token' → logprob: -8.888707160949707
    6. 'Calculator' → logprob: -9.013707160949707
    7. 'Simple' → logprob: -9.263707160949707
    8. '_stack' → logprob: -9.513707160949707
    9. 'Evaluation' → logprob: -9.638707160949707
    10. 'List' → logprob: -9.763707160949707

Token 336: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012224898673593998
    2. ':
' → logprob: -6.876222610473633
    3. '[List' → logprob: -9.376222610473633
    4. '(Generic' → logprob: -9.626222610473633
    5. '():' → logprob: -11.001222610473633
    6. '[' → logprob: -11.501222610473633
    7. '(List' → logprob: -12.001222610473633
    8. ':
' → logprob: -13.251222610473633
    9. '[list' → logprob: -13.251222610473633
    10. '[T' → logprob: -14.501222610473633

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006992113194428384
    2. ':' → logprob: -7.875699043273926
    3. ':
' → logprob: -8.125699043273926
    4. '):
' → logprob: -11.875699043273926
    5. '(object' → logprob: -12.125699043273926
    6. '(' → logprob: -12.875699043273926
    7. 'def' → logprob: -13.250699043273926
    8. '():' → logprob: -13.875699043273926
    9. '(List' → logprob: -13.875699043273926
    10. '():
' → logprob: -13.875699043273926

Token 338: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0625486969947815
    2. '   ' → logprob: -3.4375486373901367
    3. ' def' → logprob: -3.5625486373901367
    4. ':' → logprob: -9.312548637390137
    5. '	def' → logprob: -11.187548637390137
    6. '    ' → logprob: -12.437548637390137
    7. '  ' → logprob: -12.562548637390137
    8. ':def' → logprob: -12.812548637390137
    9. ':
' → logprob: -12.937548637390137
    10. ' ' → logprob: -13.187548637390137

Token 339: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4035029411315918
    2. ' __' → logprob: -1.1535029411315918
    3. 'init' → logprob: -4.653502941131592
    4. '_init' → logprob: -5.403502941131592
    5. 'def' → logprob: -7.278502941131592
    6. '[]' → logprob: -7.403502941131592
    7. '```' → logprob: -7.653502941131592
    8. ' []' → logprob: -8.40350341796875
    9. '____' → logprob: -9.27850341796875
    10. '___' → logprob: -9.27850341796875

Token 340: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0007044489029794931
    2. 'nit' → logprob: -7.875704288482666
    3. 'def' → logprob: -9.000704765319824
    4. 'it' → logprob: -9.250704765319824
    5. 'int' → logprob: -10.125704765319824
    6. '   ' → logprob: -10.375704765319824
    7. '```' → logprob: -10.750704765319824
    8. '__' → logprob: -12.750704765319824
    9. '_init' → logprob: -13.000704765319824
    10. '  ' → logprob: -13.875704765319824

Token 341: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31333377957344055
    2. '__(' → logprob: -1.3133337497711182
    3. '__' → logprob: -10.563333511352539
    4. '_(' → logprob: -11.563333511352539
    5. '()' → logprob: -11.688333511352539
    6. '()(' → logprob: -11.938333511352539
    7. '(' → logprob: -12.188333511352539
    8. ')(' → logprob: -12.188333511352539
    9. '():
' → logprob: -12.563333511352539
    10. ' (' → logprob: -12.938333511352539

Token 342: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.694766489090398e-05
    2. ')' → logprob: -10.250066757202148
    3. ' self' → logprob: -10.750066757202148
    4. '):
' → logprob: -11.750066757202148
    5. '):' → logprob: -14.375066757202148
    6. '   ' → logprob: -14.875066757202148
    7. '
' → logprob: -14.875066757202148
    8. '	self' → logprob: -15.375066757202148
    9. '```' → logprob: -15.625066757202148
    10. '(self' → logprob: -15.875066757202148

Token 343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04530154913663864
    2. '):
' → logprob: -3.1703014373779297
    3. 'self' → logprob: -6.54530143737793
    4. ')' → logprob: -7.67030143737793
    5. '():' → logprob: -8.42030143737793
    6. '   ' → logprob: -8.92030143737793
    7. ',' → logprob: -11.79530143737793
    8. '):
' → logprob: -11.92030143737793
    9. '()' → logprob: -12.42030143737793
    10. ':' → logprob: -12.42030143737793

Token 344: '       ' (ID: 309)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0020476016215980053
    2. '   ' → logprob: -7.127047538757324
    3. ' []' → logprob: -7.377047538757324
    4. '       ' → logprob: -8.627047538757324
    5. 'self' → logprob: -8.877047538757324
    6. '[]):' → logprob: -8.877047538757324
    7. ')' → logprob: -9.627047538757324
    8. '()' → logprob: -10.377047538757324
    9. '[]
' → logprob: -10.627047538757324
    10. '[])' → logprob: -11.752047538757324

Token 345: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009217040496878326
    2. '       ' → logprob: -7.000921726226807
    3. ' self' → logprob: -11.500921249389648
    4. '   ' → logprob: -17.25092124938965
    5. '	self' → logprob: -17.25092124938965
    6. '           ' → logprob: -19.00092124938965
    7. '(self' → logprob: -19.37592124938965
    8. '[self' → logprob: -19.37592124938965
    9. '[]' → logprob: -21.12592124938965
    10. '0' → logprob: -21.50092124938965

Token 346: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.26420843601226807
    2. '.items' → logprob: -1.514208436012268
    3. '.stack' → logprob: -4.8892083168029785
    4. '.elements' → logprob: -6.2642083168029785
    5. '_items' → logprob: -6.7642083168029785
    6. '.data' → logprob: -7.0142083168029785
    7. 'items' → logprob: -8.264208793640137
    8. '.' → logprob: -9.139208793640137
    9. '_stack' → logprob: -9.389208793640137
    10. '.contents' → logprob: -9.639208793640137

Token 347: 'container' (ID: 6896)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.4181680381298065
    2. 'stack' → logprob: -1.668168067932129
    3. 'data' → logprob: -1.918168067932129
    4. 'container' → logprob: -5.418168067932129
    5. 'elements' → logprob: -6.418168067932129
    6. '_stack' → logprob: -9.043168067932129
    7. 'list' → logprob: -10.293168067932129
    8. '_items' → logprob: -10.293168067932129
    9. 'storage' → logprob: -11.043168067932129
    10. '_data' → logprob: -11.918168067932129

Token 348: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007564503233879805
    2. ' =' → logprob: -5.007564544677734
    3. '=[]' → logprob: -7.257564544677734
    4. ':' → logprob: -8.882564544677734
    5. '[:]' → logprob: -13.007564544677734
    6. '   ' → logprob: -13.632564544677734
    7. '[]' → logprob: -13.632564544677734
    8. '=[]
' → logprob: -15.007564544677734
    9. '=[]
' → logprob: -16.007564544677734
    10. ' ' → logprob: -17.132564544677734

Token 349: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.01105300523340702
    2. 'list' → logprob: -4.511053085327148
    3. '[]' → logprob: -12.761053085327148
    4. ' List' → logprob: -13.761053085327148
    5. ' list' → logprob: -13.886053085327148
    6. '[List' → logprob: -14.886053085327148
    7. '_list' → logprob: -18.01105308532715
    8. ' []' → logprob: -19.88605308532715
    9. '   ' → logprob: -19.88605308532715
    10. '	List' → logprob: -20.01105308532715

Token 350: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006217670626938343
    2. '[int' → logprob: -5.7562174797058105
    3. ' =' → logprob: -6.0062174797058105
    4. '[token' → logprob: -8.381217956542969
    5. '=' → logprob: -9.006217956542969
    6. '[Any' → logprob: -9.256217956542969
    7. '=[]' → logprob: -10.381217956542969
    8. '<Token' → logprob: -10.881217956542969
    9. 'Token' → logprob: -11.631217956542969
    10. '[]' → logprob: -11.756217956542969

Token 351: 'float' (ID: 7829)
  Prédit: 'Token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -0.0028387531638145447
    2. 'float' → logprob: -6.127838611602783
    3. 'Union' → logprob: -7.377838611602783
    4. 'Number' → logprob: -11.377839088439941
    5. ' Token' → logprob: -11.752839088439941
    6. 'object' → logprob: -12.627839088439941
    7. 'Optional' → logprob: -12.752839088439941
    8. '[' → logprob: -14.002839088439941
    9. 'any' → logprob: -14.877839088439941
    10. 'Float' → logprob: -14.877839088439941

Token 352: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5048530030981055e-06
    2. ']=' → logprob: -13.750001907348633
    3. ' ]' → logprob: -16.000001907348633
    4. '']' → logprob: -16.000001907348633
    5. '"]' → logprob: -16.125001907348633
    6. '`]' → logprob: -16.625001907348633
    7. '[' → logprob: -18.250001907348633
    8. ']
' → logprob: -18.500001907348633
    9. ')' → logprob: -18.750001907348633
    10. '()]' → logprob: -19.500001907348633

Token 353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31335633993148804
    2. ' =' → logprob: -1.3133563995361328
    3. '=[]' → logprob: -9.438356399536133
    4. '<|end|>' → logprob: -12.063356399536133
    5. '[]' → logprob: -12.563356399536133
    6. ']' → logprob: -13.188356399536133
    7. ')' → logprob: -13.188356399536133
    8. ' ' → logprob: -14.063356399536133
    9. '[:]' → logprob: -14.938356399536133
    10. '=[]
' → logprob: -14.938356399536133

Token 354: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.7697225252486533e-06
    2. '[]
' → logprob: -13.000003814697266
    3. '[]}' → logprob: -13.875003814697266
    4. ' []' → logprob: -15.500003814697266
    5. '[])' → logprob: -15.875003814697266
    6. '[]

' → logprob: -16.250003814697266
    7. '[]>' → logprob: -16.625003814697266
    8. '[]"' → logprob: -17.000003814697266
    9. 'list' → logprob: -18.125003814697266
    10. '=[]' → logprob: -18.250003814697266

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21129988133907318
    2. '
' → logprob: -1.7112998962402344
    3. 'def' → logprob: -5.211299896240234
    4. '    
' → logprob: -5.586299896240234
    5. ' def' → logprob: -8.461299896240234
    6. '<|end|>' → logprob: -8.961299896240234
    7. ' 
' → logprob: -9.336299896240234
    8. '  
' → logprob: -9.836299896240234
    9. '        
' → logprob: -10.086299896240234
    10. '```' → logprob: -10.836299896240234

Token 356: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006103330524638295
    2. ' def' → logprob: -7.7506103515625
    3. '   ' → logprob: -8.6256103515625
    4. '@property' → logprob: -15.5006103515625
    5. '    
' → logprob: -16.7506103515625
    6. '	def' → logprob: -17.6256103515625
    7. '
' → logprob: -17.7506103515625
    8. '```' → logprob: -19.1256103515625
    9. '@' → logprob: -19.6256103515625
    10. ' ' → logprob: -19.6256103515625

Token 357: ' push' (ID: 9349)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.008659370243549347
    2. ' push' → logprob: -4.758659362792969
    3. 'is' → logprob: -10.633659362792969
    4. 'pop' → logprob: -10.883659362792969
    5. '_push' → logprob: -14.633659362792969
    6. ' is' → logprob: -14.883659362792969
    7. 'empty' → logprob: -15.133659362792969
    8. '.push' → logprob: -15.258659362792969
    9. 'append' → logprob: -15.758659362792969
    10. 'size' → logprob: -15.883659362792969

Token 358: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014859484508633614
    2. '(' → logprob: -9.12514877319336
    3. '(value' → logprob: -10.25014877319336
    4. ' (' → logprob: -12.62514877319336
    5. '(element' → logprob: -14.75014877319336
    6. '(item' → logprob: -14.87514877319336
    7. '(token' → logprob: -17.00014877319336
    8. 'self' → logprob: -17.25014877319336
    9. '(
' → logprob: -17.37514877319336
    10. '()' → logprob: -17.50014877319336

Token 359: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07091036438941956
    2. '(' → logprob: -3.9459104537963867
    3. '(value' → logprob: -3.9459104537963867
    4. ',' → logprob: -4.695910453796387
    5. '<|end|>' → logprob: -4.820910453796387
    6. '(token' → logprob: -4.945910453796387
    7. ' )' → logprob: -6.320910453796387
    8. '(self' → logprob: -6.695910453796387
    9. '(item' → logprob: -7.695910453796387
    10. '(element' → logprob: -7.945910453796387

Token 360: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.2178633064031601
    2. 'item' → logprob: -1.7178633213043213
    3. ' value' → logprob: -4.217863082885742
    4. ' item' → logprob: -6.467863082885742
    5. 'val' → logprob: -10.967863082885742
    6. 'element' → logprob: -11.342863082885742
    7. 'x' → logprob: -13.217863082885742
    8. ' val' → logprob: -13.842863082885742
    9. '   ' → logprob: -15.342863082885742
    10. 'elem' → logprob: -15.342863082885742

Token 361: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7269060015678406
    2. ':' → logprob: -1.1019060611724854
    3. ')' → logprob: -1.7269060611724854
    4. ',' → logprob: -5.726905822753906
    5. ' ):' → logprob: -6.101905822753906
    6. ' )' → logprob: -7.351905822753906
    7. 'value' → logprob: -8.976905822753906
    8. '):
' → logprob: -9.226905822753906
    9. ' :' → logprob: -10.101905822753906
    10. '   ' → logprob: -10.851905822753906

Token 362: ' float' (ID: 4428)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.05235453322529793
    2. ' value' → logprob: -3.302354574203491
    3. 'float' → logprob: -4.302354335784912
    4. ' float' → logprob: -7.302354335784912
    5. ')' → logprob: -15.80235481262207
    6. 'val' → logprob: -15.92735481262207
    7. ' ' → logprob: -15.92735481262207
    8. '   ' → logprob: -16.55235481262207
    9. ')value' → logprob: -16.92735481262207
    10. '"value' → logprob: -17.30235481262207

Token 363: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08486684411764145
    2. ')' → logprob: -3.084866762161255
    3. '):
' → logprob: -3.334866762161255
    4. '):
' → logprob: -12.459866523742676
    5. ')->' → logprob: -12.834866523742676
    6. ':' → logprob: -13.709866523742676
    7. '   ' → logprob: -14.209866523742676
    8. '):

' → logprob: -14.334866523742676
    9. ' ):' → logprob: -14.459866523742676
    10. ' )' → logprob: -16.084867477416992

Token 364: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13039395213127136
    2. ':
' → logprob: -2.1303939819335938
    3. '):
' → logprob: -6.005393981933594
    4. '):' → logprob: -7.130393981933594
    5. ')' → logprob: -8.755393981933594
    6. ':
' → logprob: -11.380393981933594
    7. '->' → logprob: -12.130393981933594
    8. '       ' → logprob: -12.255393981933594
    9. '   ' → logprob: -12.630393981933594
    10. '():
' → logprob: -12.755393981933594

Token 365: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004078401252627373
    2. ' None' → logprob: -5.504078388214111
    3. 'none' → logprob: -19.504077911376953
    4. '   ' → logprob: -20.504077911376953
    5. 'void' → logprob: -20.879077911376953
    6. '_None' → logprob: -21.504077911376953
    7. '(None' → logprob: -21.629077911376953
    8. ' ' → logprob: -22.004077911376953
    9. 'No' → logprob: -22.004077911376953
    10. 'float' → logprob: -22.504077911376953

Token 366: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47576919198036194
    2. ':
' → logprob: -0.9757691621780396
    3. '):
' → logprob: -6.85076904296875
    4. '       ' → logprob: -7.72576904296875
    5. '):' → logprob: -8.85076904296875
    6. '   ' → logprob: -10.97576904296875
    7. ':
' → logprob: -11.85076904296875
    8. '():
' → logprob: -12.47576904296875
    9. '<|end|>' → logprob: -12.47576904296875
    10. ')' → logprob: -12.85076904296875

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001931696751853451
    2. 'self' → logprob: -9.25019359588623
    3. ' self' → logprob: -9.25019359588623
    4. '   ' → logprob: -14.12519359588623
    5. '```' → logprob: -15.62519359588623
    6. '           ' → logprob: -17.375192642211914
    7. '	' → logprob: -18.000192642211914
    8. '        
' → logprob: -18.125192642211914
    9. '	self' → logprob: -18.250192642211914
    10. '      ' → logprob: -18.750192642211914

Token 368: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0034280545078217983
    2. '       ' → logprob: -6.253427982330322
    3. ' self' → logprob: -6.503427982330322
    4. '	self' → logprob: -17.378427505493164
    5. '   ' → logprob: -18.878427505493164
    6. '(self' → logprob: -20.503427505493164
    7. '	' → logprob: -21.378427505493164
    8. ' ' → logprob: -21.378427505493164
    9. ' ' → logprob: -21.378427505493164
    10. '[self' → logprob: -21.378427505493164

Token 369: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00024192029377445579
    2. '.' → logprob: -8.375242233276367
    3. ' .' → logprob: -12.375242233276367
    4. '.append' → logprob: -12.875242233276367
    5. '.push' → logprob: -13.125242233276367
    6. '   ' → logprob: -13.250242233276367
    7. '_push' → logprob: -15.500242233276367
    8. '       ' → logprob: -16.250242233276367
    9. ']._' → logprob: -16.500242233276367
    10. ')._' → logprob: -16.500242233276367

Token 370: 'container' (ID: 6896)
  Prédit: 'container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'container' → logprob: -1.0280383548888494e-06
    2. '_container' → logprob: -14.250000953674316
    3. '.container' → logprob: -15.000000953674316
    4. '	container' → logprob: -17.000001907348633
    5. '(container' → logprob: -19.000001907348633
    6. 'controller' → logprob: -19.000001907348633
    7. '-container' → logprob: -19.250001907348633
    8. '_' → logprob: -20.000001907348633
    9. ' container' → logprob: -20.000001907348633
    10. 'contain' → logprob: -21.125001907348633

Token 371: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.2994620242971e-06
    2. '.' → logprob: -11.750008583068848
    3. '.app' → logprob: -15.125008583068848
    4. 'append' → logprob: -16.75000762939453
    5. '.extend' → logprob: -17.62500762939453
    6. '.insert' → logprob: -17.75000762939453
    7. ' .' → logprob: -19.25000762939453
    8. '.push' → logprob: -20.12500762939453
    9. '.ap' → logprob: -20.37500762939453
    10. ').' → logprob: -20.50000762939453

Token 372: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00020532844064291567
    2. '(' → logprob: -8.500205039978027
    3. 'value' → logprob: -13.250205039978027
    4. ' (' → logprob: -18.500205993652344
    5. ' value' → logprob: -19.000205993652344
    6. ')value' → logprob: -19.375205993652344
    7. '(
' → logprob: -19.500205993652344
    8. ',value' → logprob: -20.625205993652344
    9. '=value' → logprob: -21.000205993652344
    10. '$value' → logprob: -21.625205993652344

Token 373: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.637786231702194e-05
    2. '<|end|>' → logprob: -9.500086784362793
    3. ')
' → logprob: -11.750086784362793
    4. ')return' → logprob: -13.875086784362793
    5. ' )' → logprob: -14.250086784362793
    6. '   ' → logprob: -14.250086784362793
    7. '<|end|>' → logprob: -14.375086784362793
    8. ')

' → logprob: -14.750086784362793
    9. '       ' → logprob: -16.625085830688477
    10. ' ' → logprob: -16.875085830688477

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4146142601966858
    2. '
' → logprob: -1.164614200592041
    3. 'def' → logprob: -4.164614200592041
    4. '<|end|>' → logprob: -5.164614200592041
    5. '    
' → logprob: -5.664614200592041
    6. ' def' → logprob: -6.664614200592041
    7. ' 
' → logprob: -7.539614200592041
    8. '  
' → logprob: -7.789614200592041
    9. ' ' → logprob: -8.7896146774292
    10. '```' → logprob: -8.9146146774292

Token 375: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007101670489646494
    2. ' def' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.000709533691406
    4. '
' → logprob: -16.500709533691406
    5. '    
' → logprob: -18.500709533691406
    6. '```' → logprob: -19.875709533691406
    7. '	def' → logprob: -19.875709533691406
    8. ' 
' → logprob: -20.625709533691406
    9. '`' → logprob: -21.750709533691406
    10. '        
' → logprob: -21.875709533691406

Token 376: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0619712732732296
    2. ' pop' → logprob: -2.8119711875915527
    3. 'def' → logprob: -12.936971664428711
    4. '.pop' → logprob: -14.186971664428711
    5. ' def' → logprob: -15.811971664428711
    6. '_pop' → logprob: -16.31197166442871
    7. '	pop' → logprob: -16.43697166442871
    8. 'peek' → logprob: -16.43697166442871
    9. 'float' → logprob: -16.93697166442871
    10. 'Pop' → logprob: -17.93697166442871

Token 377: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021987867075949907
    2. '(self' → logprob: -6.127198696136475
    3. '(' → logprob: -11.377199172973633
    4. '()
' → logprob: -14.627199172973633
    5. 'self' → logprob: -14.752199172973633
    6. ' ()' → logprob: -14.752199172973633
    7. '())' → logprob: -15.377199172973633
    8. '()`' → logprob: -15.377199172973633
    9. '()

' → logprob: -16.127199172973633
    10. '()\' → logprob: -16.502199172973633

Token 378: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.479561448097229
    2. ')' → logprob: -0.979561448097229
    3. '())' → logprob: -5.2295613288879395
    4. ' )' → logprob: -9.604561805725098
    5. '():' → logprob: -10.604561805725098
    6. '()
' → logprob: -12.104561805725098
    7. ' ()' → logprob: -12.729561805725098
    8. ' ())' → logprob: -12.729561805725098
    9. '()`' → logprob: -13.104561805725098
    10. '(),' → logprob: -13.604561805725098

Token 379: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008074867073446512
    2. '(self' → logprob: -7.250807285308838
    3. '(' → logprob: -9.500807762145996
    4. '()->' → logprob: -12.000807762145996
    5. 'self' → logprob: -12.125807762145996
    6. ' ()' → logprob: -12.250807762145996
    7. ' ->' → logprob: -13.250807762145996
    8. '():' → logprob: -13.625807762145996
    9. '->' → logprob: -13.875807762145996
    10. ')' → logprob: -13.875807762145996

Token 380: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02975824475288391
    2. ' float' → logprob: -3.5297582149505615
    3. 'Optional' → logprob: -11.90475845336914
    4. ' Optional' → logprob: -14.27975845336914
    5. '   ' → logprob: -16.15475845336914
    6. ' ' → logprob: -16.15475845336914
    7. '	float' → logprob: -16.65475845336914
    8. 'flo' → logprob: -16.90475845336914
    9. 'Float' → logprob: -17.40475845336914
    10. '(float' → logprob: -17.77975845336914

Token 381: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1105402484536171
    2. ':' → logprob: -2.9855401515960693
    3. '():
' → logprob: -3.1105401515960693
    4. '()' → logprob: -5.235540390014648
    5. ':
' → logprob: -5.485540390014648
    6. '):' → logprob: -10.235540390014648
    7. '       ' → logprob: -10.610540390014648
    8. '():
' → logprob: -11.235540390014648
    9. '):
' → logprob: -11.485540390014648
    10. '()
' → logprob: -13.610540390014648

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014042791444808245
    2. ' return' → logprob: -6.751404285430908
    3. ' if' → logprob: -9.00140380859375
    4. 'return' → logprob: -9.12640380859375
    5. 'if' → logprob: -13.37640380859375
    6. '	return' → logprob: -15.50140380859375
    7. '	' → logprob: -16.12640380859375
    8. '           ' → logprob: -16.87640380859375
    9. '   ' → logprob: -17.25140380859375
    10. '      ' → logprob: -17.37640380859375

Token 383: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03558879718184471
    2. 'if' (adapté à ' if') → logprob: -4.03558874130249
    3. ' return' → logprob: -4.28558874130249
    4. '       ' → logprob: -6.03558874130249
    5. ' if' → logprob: -6.78558874130249
    6. '	return' → logprob: -16.53558921813965
    7. 'try' → logprob: -16.78558921813965
    8. '   ' → logprob: -18.53558921813965
    9. '```' → logprob: -18.66058921813965
    10. 'self' → logprob: -19.16058921813965

Token 384: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25311344861984253
    2. 'not' → logprob: -1.5031135082244873
    3. 'len' → logprob: -7.128113269805908
    4. ' len' → logprob: -7.878113269805908
    5. '       ' → logprob: -14.253113746643066
    6. '   ' → logprob: -14.378113746643066
    7. 'self' → logprob: -14.503113746643066
    8. ' ' → logprob: -15.128113746643066
    9. '	not' → logprob: -15.378113746643066
    10. ' self' → logprob: -16.12811279296875

Token 385: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067154900170862675
    2. ' self' → logprob: -5.006715297698975
    3. '(self' → logprob: -16.506715774536133
    4. '	self' → logprob: -17.006715774536133
    5. '[self' → logprob: -17.756715774536133
    6. ' ' → logprob: -18.631715774536133
    7. '_self' → logprob: -18.631715774536133
    8. '
' → logprob: -18.756715774536133
    9. 'len' → logprob: -19.006715774536133
    10. 'Self' → logprob: -19.006715774536133

Token 386: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.750004768371582
    3. '_empty' → logprob: -13.625004768371582
    4. '_' → logprob: -15.500004768371582
    5. '_push' → logprob: -15.875004768371582
    6. ' ' → logprob: -16.0000057220459
    7. '
' → logprob: -16.2500057220459
    8. '_is' → logprob: -16.3750057220459
    9. ' .' → logprob: -16.5000057220459
    10. '.is' → logprob: -16.8750057220459

Token 387: 'container' (ID: 6896)
  Prédit: 'container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'container' → logprob: -1.9361264946837764e-07
    2. '.container' → logprob: -16.625
    3. '_container' → logprob: -17.5
    4. 'controller' → logprob: -17.625
    5. '	container' → logprob: -18.0
    6. '(container' → logprob: -18.75
    7. 'cont' → logprob: -20.125
    8. ' container' → logprob: -20.25
    9. 'stack' → logprob: -20.25
    10. 'contain' → logprob: -20.375

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020739475265145302
    2. ':
' → logprob: -4.145739555358887
    3. '.pop' → logprob: -5.395739555358887
    4. '):' → logprob: -9.270739555358887
    5. ':return' → logprob: -10.770739555358887
    6. ')' → logprob: -11.270739555358887
    7. '):
' → logprob: -11.645739555358887
    8. 'pop' → logprob: -12.020739555358887
    9. '<|end|>' → logprob: -12.020739555358887
    10. ':
' → logprob: -13.020739555358887

Token 389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004931025905534625
    2. ' raise' → logprob: -8.250493049621582
    3. 'raise' → logprob: -9.000493049621582
    4. '       ' → logprob: -10.625493049621582
    5. 'Index' → logprob: -10.875493049621582
    6. ':' → logprob: -10.875493049621582
    7. '            ' → logprob: -11.375493049621582
    8. ':
' → logprob: -11.875493049621582
    9. ',' → logprob: -12.125493049621582
    10. '          ' → logprob: -12.625493049621582

Token 390: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.12758077681064606
    2. ' raise' → logprob: -2.1275808811187744
    3. '           ' → logprob: -7.377580642700195
    4. 'Index' → logprob: -11.252580642700195
    5. 'Raise' → logprob: -12.127580642700195
    6. '       ' → logprob: -12.377580642700195
    7. '            ' → logprob: -13.252580642700195
    8. '	raise' → logprob: -13.502580642700195
    9. '_raise' → logprob: -14.752580642700195
    10. 'raises' → logprob: -15.252580642700195

Token 391: ' Index' (ID: 14580)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.023256778717041016
    2. ' Index' → logprob: -3.773256778717041
    3. 'Runtime' → logprob: -11.523256301879883
    4. 'Value' → logprob: -14.398256301879883
    5. '(Index' → logprob: -14.523256301879883
    6. ' Runtime' → logprob: -15.398256301879883
    7. '_index' → logprob: -17.148256301879883
    8. '_Index' → logprob: -17.273256301879883
    9. 'index' → logprob: -18.023256301879883
    10. 'Exception' → logprob: -18.273256301879883

Token 392: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'Erro' → logprob: -18.5
    3. 'Er' → logprob: -20.375
    4. 'Errors' → logprob: -22.25
    5. '
' → logprob: -22.875
    6. '[' → logprob: -22.875
    7. 'error' → logprob: -23.0
    8. '   ' → logprob: -23.0
    9. 'rror' → logprob: -23.0
    10. ' Error' → logprob: -23.125

Token 393: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.002481246367096901
    2. '('' → logprob: -6.002481460571289
    3. '(' → logprob: -12.127481460571289
    4. '()' → logprob: -16.37748146057129
    5. '"' → logprob: -17.50248146057129
    6. '("'' → logprob: -20.37748146057129
    7. '("")' → logprob: -20.50248146057129
    8. '(
' → logprob: -20.62748146057129
    9. '(":' → logprob: -22.25248146057129
    10. '("_' → logprob: -22.37748146057129

Token 394: 'Pop' (ID: 10640)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0001801801408873871
    2. 'Pop' → logprob: -8.8751802444458
    3. ' pop' → logprob: -10.1251802444458
    4. '.pop' → logprob: -16.125179290771484
    5. '"' → logprob: -17.000179290771484
    6. '_pop' → logprob: -17.125179290771484
    7. ' Pop' → logprob: -17.625179290771484
    8. ''' → logprob: -18.375179290771484
    9. '	pop' → logprob: -18.750179290771484
    10. 'POP' → logprob: -19.000179290771484

Token 395: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.03804975748062134
    2. 'from' → logprob: -3.2880496978759766
    3. '	from' → logprob: -12.413049697875977
    4. ' ' → logprob: -13.538049697875977
    5. ':' → logprob: -13.663049697875977
    6. '(' → logprob: -14.913049697875977
    7. '   ' → logprob: -15.038049697875977
    8. '()' → logprob: -15.413049697875977
    9. ' called' → logprob: -15.913049697875977
    10. '  ' → logprob: -16.038049697875977

Token 396: ' empty' (ID: 8213)
  Prédit: ' empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.0491190068423748
    2. 'empty' → logprob: -3.049118995666504
    3. ' an' → logprob: -7.549118995666504
    4. '_empty' → logprob: -12.799118995666504
    5. 'an' → logprob: -13.799118995666504
    6. ' ' → logprob: -15.424118995666504
    7. 'empt' → logprob: -15.424118995666504
    8. 'Empty' → logprob: -15.549118995666504
    9. '-empty' → logprob: -15.549118995666504
    10. '(empty' → logprob: -16.17411994934082

Token 397: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.06245989724993706
    2. 'stack' → logprob: -2.812459945678711
    3. '_stack' → logprob: -7.812459945678711
    4. ' container' → logprob: -10.437459945678711
    5. ' list' → logprob: -10.687459945678711
    6. 'Stack' → logprob: -11.562459945678711
    7. ')' → logprob: -11.687459945678711
    8. 'container' → logprob: -12.187459945678711
    9. ' Stack' → logprob: -12.812459945678711
    10. 'list' → logprob: -12.937459945678711

Token 398: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.0007045681122690439
    2. '")' → logprob: -7.375704765319824
    3. '")
' → logprob: -9.625704765319824
    4. '()' → logprob: -11.875704765319824
    5. '       ' → logprob: -13.750704765319824
    6. ')")
' → logprob: -13.875704765319824
    7. '")

' → logprob: -14.000704765319824
    8. ''")
' → logprob: -14.000704765319824
    9. '')
' → logprob: -14.500704765319824
    10. '.")
' → logprob: -15.375704765319824

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3319124011322856e-05
    2. '   ' → logprob: -11.250022888183594
    3. 'return' → logprob: -12.375022888183594
    4. '<|end|>' → logprob: -13.500022888183594
    5. '        
' → logprob: -13.875022888183594
    6. '	' → logprob: -13.875022888183594
    7. '
' → logprob: -14.375022888183594
    8. ' return' → logprob: -14.875022888183594
    9. '    
' → logprob: -14.875022888183594
    10. '      ' → logprob: -15.125022888183594

Token 400: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03917822986841202
    2. '       ' → logprob: -3.2891781330108643
    3. ' return' → logprob: -6.789178371429443
    4. '	return' → logprob: -11.539177894592285
    5. '	' → logprob: -15.539177894592285
    6. '   ' → logprob: -15.664177894592285
    7. ':return' → logprob: -16.7891788482666
    8. '```' → logprob: -17.4141788482666
    9. '
' → logprob: -18.5391788482666
    10. '           ' → logprob: -18.6641788482666

Token 401: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031777136027812958
    2. ' self' → logprob: -5.753177642822266
    3. '(self' → logprob: -17.753177642822266
    4. '[self' → logprob: -18.628177642822266
    5. '	self' → logprob: -18.628177642822266
    6. '=self' → logprob: -19.628177642822266
    7. '   ' → logprob: -20.128177642822266
    8. 'Self' → logprob: -20.253177642822266
    9. '`' → logprob: -20.503177642822266
    10. '_self' → logprob: -20.503177642822266

Token 402: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.375000953674316
    3. '.' → logprob: -15.500000953674316
    4. '_.' → logprob: -17.125
    5. ')._' → logprob: -17.375
    6. ']._' → logprob: -17.625
    7. '.pop' → logprob: -18.125
    8. '._
' → logprob: -19.0
    9. ' .' → logprob: -19.0
    10. '->_' → logprob: -19.25

Token 403: 'container' (ID: 6896)
  Prédit: 'container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'container' → logprob: -2.339278580620885e-06
    2. '_container' → logprob: -13.500001907348633
    3. '.container' → logprob: -14.000001907348633
    4. '	container' → logprob: -17.750001907348633
    5. 'controller' → logprob: -18.000001907348633
    6. '(container' → logprob: -18.750001907348633
    7. '-container' → logprob: -19.000001907348633
    8. ' container' → logprob: -19.125001907348633
    9. 'contain' → logprob: -20.375001907348633
    10. 'Container' → logprob: -21.000001907348633

Token 404: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.5491004129871726e-05
    2. 'pop' → logprob: -10.000045776367188
    3. '.' → logprob: -17.125045776367188
    4. ' .' → logprob: -17.875045776367188
    5. '_pop' → logprob: -18.000045776367188
    6. 'Pop' → logprob: -18.750045776367188
    7. '[-' → logprob: -18.875045776367188
    8. '	pop' → logprob: -20.000045776367188
    9. ' pop' → logprob: -20.125045776367188
    10. '-pop' → logprob: -20.500045776367188

Token 405: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.054500666621607e-06
    2. '()
' → logprob: -13.12500286102295
    3. '()

' → logprob: -14.37500286102295
    4. '(' → logprob: -15.50000286102295
    5. '()`' → logprob: -16.625003814697266
    6. '()\' → logprob: -17.250003814697266
    7. '()"' → logprob: -17.750003814697266
    8. '()?' → logprob: -18.500003814697266
    9. '().' → logprob: -18.625003814697266
    10. '())' → logprob: -18.875003814697266

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021623454988002777
    2. 'def' → logprob: -4.146623611450195
    3. '<|end|>' → logprob: -5.271623611450195
    4. '    
' → logprob: -9.021623611450195
    5. '@property' → logprob: -9.146623611450195
    6. '```' → logprob: -9.646623611450195
    7. '<|end|>' → logprob: -9.646623611450195
    8. ' def' → logprob: -10.771623611450195
    9. ')' → logprob: -11.646623611450195
    10. ' ' → logprob: -11.771623611450195

Token 407: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00018220659694634378
    2. ' def' → logprob: -9.250182151794434
    3. '@property' → logprob: -9.750182151794434
    4. '   ' → logprob: -10.500182151794434
    5. '	def' → logprob: -16.25018310546875
    6. '<|end|>' → logprob: -16.75018310546875
    7. ' ' → logprob: -17.12518310546875
    8. '```' → logprob: -17.25018310546875
    9. 'from' → logprob: -17.87518310546875
    10. '    
' → logprob: -18.25018310546875

Token 408: ' size' (ID: 2349)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.05331217497587204
    2. 'is' → logprob: -3.553312063217163
    3. ' peek' → logprob: -4.053312301635742
    4. '__' → logprob: -5.678312301635742
    5. 'size' → logprob: -7.053312301635742
    6. ' is' → logprob: -7.053312301635742
    7. 'top' → logprob: -7.553312301635742
    8. ' __' → logprob: -8.928312301635742
    9. 'clear' → logprob: -10.053312301635742
    10. ' top' → logprob: -10.553312301635742

Token 409: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25266730785369873
    2. '()' → logprob: -1.5026673078536987
    3. '(' → logprob: -7.252667427062988
    4. '()>' → logprob: -11.877667427062988
    5. 'self' → logprob: -12.627667427062988
    6. ' ()' → logprob: -12.627667427062988
    7. '()(' → logprob: -12.752667427062988
    8. '   ' → logprob: -12.877667427062988
    9. '<|end|>' → logprob: -12.877667427062988
    10. ' (' → logprob: -13.752667427062988

Token 410: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005627035163342953
    2. '()' → logprob: -5.380627155303955
    3. '())' → logprob: -7.005627155303955
    4. ' )' → logprob: -9.380626678466797
    5. '   ' → logprob: -12.380626678466797
    6. ')return' → logprob: -12.630626678466797
    7. ' ' → logprob: -13.130626678466797
    8. '(' → logprob: -14.255626678466797
    9. ' ())' → logprob: -14.380626678466797
    10. ' ()' → logprob: -14.505626678466797

Token 411: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007621031254529953
    2. '()' → logprob: -7.250761985778809
    3. '(' → logprob: -10.250761985778809
    4. 'self' → logprob: -11.250761985778809
    5. ')' → logprob: -12.875761985778809
    6. '   ' → logprob: -14.750761985778809
    7. 'def' → logprob: -15.125761985778809
    8. ' (' → logprob: -16.125762939453125
    9. '->' → logprob: -16.500762939453125
    10. '       ' → logprob: -16.750762939453125

Token 412: ' int' (ID: 677)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3008447587490082
    2. 'int' → logprob: -1.5508447885513306
    3. ')' → logprob: -3.050844669342041
    4. 'self' → logprob: -8.3008451461792
    5. ' ()' → logprob: -9.6758451461792
    6. ' int' → logprob: -9.8008451461792
    7. '0' → logprob: -10.6758451461792
    8. ' )' → logprob: -11.6758451461792
    9. '   ' → logprob: -12.1758451461792
    10. '()->' → logprob: -12.6758451461792

Token 413: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.024197187274694443
    2. '(' → logprob: -3.7741971015930176
    3. '()' → logprob: -7.024197101593018
    4. 'self' → logprob: -10.274197578430176
    5. '():' → logprob: -11.024197578430176
    6. '(
' → logprob: -12.149197578430176
    7. '   ' → logprob: -13.399197578430176
    8. ')' → logprob: -14.149197578430176
    9. ' (' → logprob: -14.399197578430176
    10. '       ' → logprob: -14.524197578430176

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33238109946250916
    2. 'return' → logprob: -1.8323811292648315
    3. ' return' → logprob: -2.707381010055542
    4. 'len' → logprob: -3.582381010055542
    5. '(len' → logprob: -4.207381248474121
    6. ' len' → logprob: -4.832381248474121
    7. '   ' → logprob: -5.957381248474121
    8. '=len' → logprob: -6.957381248474121
    9. '0' → logprob: -7.207381248474121
    10. '()' → logprob: -8.082381248474121

Token 415: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008073674980551004
    2. ' return' → logprob: -7.250807285308838
    3. 'len' → logprob: -9.250807762145996
    4. '       ' → logprob: -13.500807762145996
    5. ' len' → logprob: -18.12580680847168
    6. '	return' → logprob: -19.37580680847168
    7. '   ' → logprob: -20.12580680847168
    8. ' ' → logprob: -22.37580680847168
    9. '```' → logprob: -22.62580680847168
    10. '(len' → logprob: -23.37580680847168

Token 416: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12692810595035553
    2. ' len' → logprob: -2.1269280910491943
    3. '(len' → logprob: -17.376928329467773
    4. '	len' → logprob: -18.126928329467773
    5. '   ' → logprob: -19.001928329467773
    6. ' ' → logprob: -21.501928329467773
    7. '=len' → logprob: -21.751928329467773
    8. '[len' → logprob: -21.751928329467773
    9. '       ' → logprob: -22.751928329467773
    10. '0' → logprob: -23.126928329467773

Token 417: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012356207298580557
    2. '(' → logprob: -9.000123977661133
    3. 'self' → logprob: -16.750123977661133
    4. '(this' → logprob: -18.375123977661133
    5. ' (' → logprob: -19.625123977661133
    6. '(
' → logprob: -20.625123977661133
    7. '()' → logprob: -21.000123977661133
    8. '(s' → logprob: -22.125123977661133
    9. ' self' → logprob: -22.375123977661133
    10. '[self' → logprob: -22.875123977661133

Token 418: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0007734165410511196
    2. '(self' → logprob: -7.2507734298706055
    3. 'self' → logprob: -10.500773429870605
    4. '.' → logprob: -10.625773429870605
    5. '(' → logprob: -13.000773429870605
    6. ' .' → logprob: -13.250773429870605
    7. '_self' → logprob: -13.625773429870605
    8. '_container' → logprob: -13.750773429870605
    9. '   ' → logprob: -13.875773429870605
    10. '_' → logprob: -14.250773429870605

Token 419: 'container' (ID: 6896)
  Prédit: 'container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'container' → logprob: -3.531315314830863e-06
    2. '_container' → logprob: -12.750003814697266
    3. '.container' → logprob: -14.750003814697266
    4. '	container' → logprob: -16.250003814697266
    5. 'controller' → logprob: -16.875003814697266
    6. ' container' → logprob: -17.250003814697266
    7. '(container' → logprob: -17.875003814697266
    8. 'cont' → logprob: -19.000003814697266
    9. '-container' → logprob: -19.125003814697266
    10. ' контей' → logprob: -19.750003814697266

Token 420: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026860725483857095
    2. '()' → logprob: -8.750268936157227
    3. '())' → logprob: -9.125268936157227
    4. ')
' → logprob: -13.875268936157227
    5. ' )' → logprob: -15.875268936157227
    6. '<|end|>' → logprob: -16.500268936157227
    7. '()
' → logprob: -17.250268936157227
    8. '   ' → logprob: -18.000268936157227
    9. '}' → logprob: -18.375268936157227
    10. ')

' → logprob: -18.625268936157227

Token 421: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0032092039473354816
    2. '   ' → logprob: -5.753209114074707
    3. ' def' → logprob: -10.503209114074707
    4. 'from' → logprob: -13.003209114074707
    5. '	def' → logprob: -13.753209114074707
    6. 'class' → logprob: -15.128209114074707
    7. '```' → logprob: -16.253210067749023
    8. '#' → logprob: -16.378210067749023
    9. ' ' → logprob: -16.628210067749023
    10. '  ' → logprob: -16.878210067749023

Token 423: ' __' (ID: 2516)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.23899981379508972
    2. 'is' → logprob: -2.488999843597412
    3. 'clear' → logprob: -2.988999843597412
    4. ' peek' → logprob: -3.113999843597412
    5. ' is' → logprob: -4.363999843597412
    6. ' clear' → logprob: -4.738999843597412
    7. 'top' → logprob: -4.988999843597412
    8. '__' → logprob: -5.363999843597412
    9. ' top' → logprob: -7.113999843597412
    10. ' __' → logprob: -7.738999843597412

Token 424: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.030230116099119186
    2. 'len' → logprob: -3.5302300453186035
    3. 'str' → logprob: -8.030230522155762
    4. 'bool' → logprob: -8.780230522155762
    5. 'iter' → logprob: -14.780230522155762
    6. 'getitem' → logprob: -17.780229568481445
    7. 'init' → logprob: -19.530229568481445
    8. 'rep' → logprob: -20.030229568481445
    9. 'contains' → logprob: -20.280229568481445
    10. ' repr' → logprob: -20.655229568481445

Token 425: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00044127836008556187
    2. '(self' → logprob: -7.750441074371338
    3. '__' → logprob: -11.750441551208496
    4. '__(
' → logprob: -13.000441551208496
    5. '__('' → logprob: -16.00044059753418
    6. '_(' → logprob: -16.62544059753418
    7. '__("' → logprob: -16.62544059753418
    8. 'self' → logprob: -16.62544059753418
    9. '(' → logprob: -17.12544059753418
    10. '```' → logprob: -17.12544059753418

Token 426: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.975612187583465e-05
    2. 'f' → logprob: -10.750029563903809
    3. ')' → logprob: -11.875029563903809
    4. ' self' → logprob: -13.625029563903809
    5. '(self' → logprob: -16.625030517578125
    6. 'str' → logprob: -17.750030517578125
    7. '")' → logprob: -17.875030517578125
    8. '	self' → logprob: -18.750030517578125
    9. '')' → logprob: -18.875030517578125
    10. ')<' → logprob: -19.000030517578125

Token 427: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26353657245635986
    2. '__' → logprob: -2.5135364532470703
    3. '):
' → logprob: -2.8885364532470703
    4. '__(' → logprob: -3.1385364532470703
    5. ')' → logprob: -3.6385364532470703
    6. '(self' → logprob: -3.8885364532470703
    7. '__)' → logprob: -6.13853645324707
    8. '):' → logprob: -7.13853645324707
    9. ')__' → logprob: -8.38853645324707
    10. '__)
' → logprob: -8.51353645324707

Token 428: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0002553793019615114
    2. 'repr' → logprob: -9.000255584716797
    3. 'return' → logprob: -9.625255584716797
    4. '       ' → logprob: -10.125255584716797
    5. ' f' → logprob: -11.375255584716797
    6. 'self' → logprob: -11.625255584716797
    7. '   ' → logprob: -12.875255584716797
    8. '"' → logprob: -13.375255584716797
    9. '"<' → logprob: -14.125255584716797
    10. '           ' → logprob: -15.625255584716797

Token 429: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006849996279925108
    2. 'repr' → logprob: -5.006849765777588
    3. 'return' (adapté à ' return') → logprob: -9.006850242614746
    4. ' f' → logprob: -11.506850242614746
    5. ' repr' → logprob: -13.256850242614746
    6. 'str' → logprob: -16.50684928894043
    7. '   ' → logprob: -17.00684928894043
    8. 'rep' → logprob: -17.38184928894043
    9. 're' → logprob: -17.88184928894043
    10. '"' → logprob: -17.88184928894043

Token 430: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.8590300139039755e-05
    2. ' f' → logprob: -10.500048637390137
    3. 'repr' → logprob: -11.000048637390137
    4. 'str' → logprob: -12.500048637390137
    5. 'self' → logprob: -14.500048637390137
    6. '"' → logprob: -16.62504768371582
    7. ' repr' → logprob: -17.50004768371582
    8. '"<' → logprob: -18.75004768371582
    9. ''f' → logprob: -19.25004768371582
    10. '	f' → logprob: -19.62504768371582

Token 431: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3886197507381439
    2. 'Stack' → logprob: -1.3886197805404663
    3. 'f' → logprob: -2.6386196613311768
    4. '(Stack' → logprob: -7.388619899749756
    5. '"<' → logprob: -8.388619422912598
    6. '"{' → logprob: -9.013619422912598
    7. ' Stack' → logprob: -9.513619422912598
    8. ' f' → logprob: -10.763619422912598
    9. ''S' → logprob: -11.013619422912598
    10. '.Stack' → logprob: -11.138619422912598

Token 432: 'Stack' (ID: 5622)
  Prédit: 'Stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stack' → logprob: -6.511406809295295e-06
    2. '{' → logprob: -12.125006675720215
    3. 'stack' → logprob: -14.500006675720215
    4. ' Stack' → logprob: -15.250006675720215
    5. '"' → logprob: -15.625006675720215
    6. '_stack' → logprob: -17.7500057220459
    7. '(Stack' → logprob: -18.0000057220459
    8. 'f' → logprob: -18.1250057220459
    9. '{'' → logprob: -18.3750057220459
    10. 'Number' → logprob: -18.6250057220459

Token 433: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.0011782010551542044
    2. '{' → logprob: -6.75117826461792
    3. '(self' → logprob: -11.876177787780762
    4. '([{' → logprob: -14.751177787780762
    5. '(' → logprob: -14.876177787780762
    6. '({_' → logprob: -15.626177787780762
    7. '(({' → logprob: -17.751178741455078
    8. '[{' → logprob: -17.751178741455078
    9. '<{' → logprob: -18.126178741455078
    10. '({
' → logprob: -18.251178741455078

Token 434: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0280383548888494e-06
    2. '',' → logprob: -14.750000953674316
    3. ' self' → logprob: -15.000000953674316
    4. ''' → logprob: -15.875000953674316
    5. '[self' → logprob: -17.750001907348633
    6. ''.' → logprob: -17.875001907348633
    7. '{' → logprob: -20.000001907348633
    8. ''s' → logprob: -20.250001907348633
    9. 'repr' → logprob: -20.250001907348633
    10. '''.' → logprob: -20.625001907348633

Token 435: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.873571692267433e-05
    2. '.' → logprob: -9.750068664550781
    3. '_' → logprob: -11.875068664550781
    4. ' .' → logprob: -13.500068664550781
    5. '{' → logprob: -14.625068664550781
    6. '_.' → logprob: -14.875068664550781
    7. ')._' → logprob: -15.000068664550781
    8. '.__' → logprob: -15.500068664550781
    9. ')_' → logprob: -16.12506866455078
    10. '._
' → logprob: -16.62506866455078

Token 436: 'container' (ID: 6896)
  Prédit: 'container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'container' → logprob: -4.320199877838604e-07
    2. '_container' → logprob: -16.0
    3. '.container' → logprob: -16.375
    4. 'controller' → logprob: -16.625
    5. '(container' → logprob: -17.625
    6. '	container' → logprob: -17.75
    7. '{' → logprob: -18.125
    8. 'stack' → logprob: -18.25
    9. 'repr' → logprob: -18.25
    10. 'token' → logprob: -18.875

Token 437: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01840674877166748
    2. '})' → logprob: -4.018406867980957
    3. ')"' → logprob: -8.393406867980957
    4. ')")' → logprob: -11.143406867980957
    5. ')`' → logprob: -11.893406867980957
    6. ')}' → logprob: -12.768406867980957
    7. ')">' → logprob: -13.143406867980957
    8. '])' → logprob: -14.143406867980957
    9. '}")' → logprob: -14.143406867980957
    10. '}' → logprob: -14.268406867980957

Token 438: '"

' (ID: 2678)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2065761685371399
    2. '<|end|>' → logprob: -1.8315761089324951
    3. '<|end|>' → logprob: -4.581576347351074
    4. '#' → logprob: -4.706576347351074
    5. 'class' → logprob: -5.581576347351074
    6. '

' → logprob: -5.831576347351074
    7. '\n' → logprob: -8.831576347351074
    8. ')' → logprob: -9.581576347351074
    9. '   ' → logprob: -9.831576347351074
    10. '  
' → logprob: -10.081576347351074

Token 439: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.001589131192304194
    2. 'class' → logprob: -6.501589298248291
    3. '
' → logprob: -9.376588821411133
    4. '

' → logprob: -13.876588821411133
    5. '\n' → logprob: -14.876588821411133
    6. '   ' → logprob: -15.501588821411133
    7. '  
' → logprob: -16.126588821411133
    8. '<|end|>' → logprob: -16.126588821411133
    9. '+' → logprob: -16.251588821411133
    10. '```' → logprob: -16.876588821411133

Token 440: ' ---' (ID: 26691)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.47409185767173767
    2. '#' → logprob: -0.9740918874740601
    3. 'from' → logprob: -12.474091529846191
    4. '
' → logprob: -12.474091529846191
    5. 'import' → logprob: -12.974091529846191
    6. 'def' → logprob: -12.974091529846191
    7. ' class' → logprob: -13.474091529846191
    8. '

' → logprob: -14.599091529846191
    9. 'operator' → logprob: -16.224092483520508
    10. ' #' → logprob: -16.599092483520508

Token 441: ' R' (ID: 460)
  Prédit: 'Evaluator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluator' → logprob: -0.12481401115655899
    2. 'class' → logprob: -2.874814033508301
    3. '#' → logprob: -3.499814033508301
    4. 'R' → logprob: -4.374814033508301
    5. 'Calculator' → logprob: -4.749814033508301
    6. 'Evaluation' → logprob: -5.874814033508301
    7. 'Parser' → logprob: -6.249814033508301
    8. 'Interpreter' → logprob: -6.374814033508301
    9. 'Expression' → logprob: -6.999814033508301
    10. ' R' → logprob: -7.999814033508301

Token 442: 'PN' (ID: 14513)
  Prédit: 'PN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PN' → logprob: -0.055978525429964066
    2. 'pn' → logprob: -3.055978536605835
    3. 'ever' → logprob: -5.430978298187256
    4. 'P' → logprob: -6.930978298187256
    5. 'unner' → logprob: -7.180978298187256
    6. 'e' → logprob: -7.555978298187256
    7. 'PE' → logprob: -9.180978775024414
    8. '**' → logprob: -9.555978775024414
    9. '#' → logprob: -10.055978775024414
    10. 'E' → logprob: -10.180978775024414

Token 443: ' Evalu' (ID: 81321)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.03836436569690704
    2. 'Evaluator' → logprob: -3.2883644104003906
    3. 'Interpreter' → logprob: -9.03836441040039
    4. 'Parser' → logprob: -9.03836441040039
    5. 'class' → logprob: -11.03836441040039
    6. 'Processor' → logprob: -11.16336441040039
    7. 'Expression' → logprob: -11.41336441040039
    8. '_E' → logprob: -11.41336441040039
    9. 'calculator' → logprob: -11.66336441040039
    10. ' Calculator' → logprob: -12.03836441040039

Token 444: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -9.610702363715973e-06
    2. 'ATOR' → logprob: -12.125009536743164
    3. 'ater' → logprob: -13.000009536743164
    4. 'uator' → logprob: -13.875009536743164
    5. 'lator' → logprob: -14.750009536743164
    6. '#' → logprob: -16.000009536743164
    7. 'valuator' → logprob: -16.875009536743164
    8. 'ation' → logprob: -17.000009536743164
    9. 'ulator' → logprob: -17.125009536743164
    10. '**' → logprob: -17.250009536743164

Token 445: ' Ab' (ID: 3483)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00038539018714800477
    2. '
' → logprob: -7.875385284423828
    3. ' class' → logprob: -12.250385284423828
    4. '(class' → logprob: -15.875385284423828
    5. '  
' → logprob: -16.125385284423828
    6. '

' → logprob: -16.750385284423828
    7. '"class' → logprob: -17.125385284423828
    8. 'def' → logprob: -17.250385284423828
    9. '    
' → logprob: -17.500385284423828
    10. '<class' → logprob: -17.500385284423828

Token 446: 'straction' (ID: 79887)
  Prédit: 'stract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stract' → logprob: -0.002227452350780368
    2. 'str' → logprob: -6.502227306365967
    3. 'class' → logprob: -7.377227306365967
    4. 'st' → logprob: -10.127227783203125
    5. 's' → logprob: -10.627227783203125
    6. 'structor' → logprob: -11.252227783203125
    7. '#' → logprob: -11.752227783203125
    8. 'stra' → logprob: -12.127227783203125
    9. 'straction' → logprob: -12.627227783203125
    10. 'solver' → logprob: -13.127227783203125

Token 447: ' --' (ID: 2230)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.051301877945661545
    2. '
' → logprob: -3.051301956176758
    3. '

' → logprob: -5.926301956176758
    4. '(class' → logprob: -11.051301956176758
    5. '(' → logprob: -11.676301956176758
    6. ' class' → logprob: -11.801301956176758
    7. '
' → logprob: -11.926301956176758
    8. '<class' → logprob: -13.801301956176758
    9. '  
' → logprob: -14.301301956176758
    10. '<|end|>' → logprob: -14.551301956176758

Token 448: '-

' (ID: 16364)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.8193366486229934e-05
    2. '
' → logprob: -11.250018119812012
    3. ' class' → logprob: -12.625018119812012
    4. 'abstract' → logprob: -14.125018119812012
    5. '

' → logprob: -14.875018119812012
    6. 'ABC' → logprob: -15.750018119812012
    7. '<class' → logprob: -15.875018119812012
    8. '"class' → logprob: -16.000019073486328
    9. '-class' → logprob: -16.000019073486328
    10. '<|end|>' → logprob: -16.125019073486328

Token 449: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. 'from' → logprob: -19.0
    3. 'abstract' → logprob: -20.5
    4. ' class' → logprob: -21.0
    5. '<class' → logprob: -21.625
    6. '
' → logprob: -23.0
    7. '"class' → logprob: -24.0
    8. 'import' → logprob: -24.625
    9. 'classmethod' → logprob: -25.25
    10. '-class' → logprob: -25.5

Token 450: ' Evalu' (ID: 81321)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.49505603313446045
    2. 'RP' → logprob: -0.9950560331344604
    3. 'Evaluator' → logprob: -4.24505615234375
    4. 'RN' → logprob: -5.99505615234375
    5. 'Abstract' → logprob: -6.24505615234375
    6. ' RP' → logprob: -7.12005615234375
    7. 'Rp' → logprob: -7.99505615234375
    8. 'Evalu' → logprob: -8.74505615234375
    9. 'Base' → logprob: -8.99505615234375
    10. ' R' → logprob: -9.12005615234375

Token 451: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -4.320199877838604e-07
    2. 'ATOR' → logprob: -15.25
    3. 'valuator' → logprob: -18.0
    4. 'tor' → logprob: -18.25
    5. 'uator' → logprob: -18.5
    6. 'ater' → logprob: -18.625
    7. ' ator' → logprob: -18.625
    8. '```' → logprob: -18.75
    9. 'lator' → logprob: -18.875
    10. '   ' → logprob: -19.125

Token 452: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026685968041419983
    2. ':' → logprob: -3.651685953140259
    3. ':
' → logprob: -7.901686191558838
    4. '(Abstract' → logprob: -11.27668571472168
    5. '():' → logprob: -13.52668571472168
    6. ':

' → logprob: -14.77668571472168
    7. '(object' → logprob: -15.27668571472168
    8. ' (' → logprob: -15.65168571472168
    9. '):' → logprob: -16.27668571472168
    10. '(AST' → logprob: -16.40168571472168

Token 453: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -1.5048530030981055e-06
    2. ' ABC' → logprob: -13.750001907348633
    3. '):
' → logprob: -15.750001907348633
    4. 'abc' → logprob: -17.000001907348633
    5. 'AB' → logprob: -17.250001907348633
    6. 'Token' → logprob: -17.500001907348633
    7. ')' → logprob: -17.750001907348633
    8. '):' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '(' → logprob: -18.375001907348633

Token 454: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04339192435145378
    2. '):
' → logprob: -3.1683919429779053
    3. '):
' → logprob: -7.918391704559326
    4. '):

' → logprob: -11.293392181396484
    5. ')' → logprob: -11.793392181396484
    6. ':' → logprob: -11.918392181396484
    7. '):

' → logprob: -13.793392181396484
    8. ',' → logprob: -15.168392181396484
    9. ' ):' → logprob: -15.793392181396484
    10. '[' → logprob: -16.043392181396484

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001940040965564549
    2. ':' → logprob: -9.00019359588623
    3. '    
' → logprob: -11.00019359588623
    4. ')' → logprob: -11.12519359588623
    5. ' def' → logprob: -11.37519359588623
    6. '
' → logprob: -11.75019359588623
    7. '):
' → logprob: -12.00019359588623
    8. 'def' → logprob: -12.37519359588623
    9. '@' → logprob: -12.50019359588623
    10. ':
' → logprob: -13.75019359588623

Token 456: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.7333804368972778
    2. '   ' → logprob: -0.7333804368972778
    3. ' @' → logprob: -3.2333803176879883
    4. 'def' → logprob: -11.733380317687988
    5. ' def' → logprob: -13.358380317687988
    6. '
' → logprob: -14.483380317687988
    7. '    
' → logprob: -15.733380317687988
    8. '@
' → logprob: -15.733380317687988
    9. '```' → logprob: -16.983381271362305
    10. 'from' → logprob: -16.983381271362305

Token 457: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.128163257315464e-07
    2. ' abstract' → logprob: -15.875
    3. 'abc' → logprob: -16.0
    4. 'property' → logprob: -17.375
    5. 'staticmethod' → logprob: -20.125
    6. 'classmethod' → logprob: -20.75
    7. 'abs' → logprob: -22.375
    8. '.abstract' → logprob: -22.75
    9. 'ab' → logprob: -23.375
    10. 'method' → logprob: -23.875

Token 458: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00021605310030281544
    2. 'def' → logprob: -8.750216484069824
    3. '_method' → logprob: -9.875216484069824
    4. 'token' → logprob: -13.375216484069824
    5. 'classmethod' → logprob: -13.750216484069824
    6. '_token' → logprob: -14.000216484069824
    7. ' method' → logprob: -14.250216484069824
    8. 'staticmethod' → logprob: -14.250216484069824
    9. 'meth' → logprob: -14.625216484069824
    10. '.method' → logprob: -14.875216484069824

Token 459: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05105869844555855
    2. '
' → logprob: -3.801058769226074
    3. ' def' → logprob: -3.926058769226074
    4. '   ' → logprob: -4.926058769226074
    5. 'method' → logprob: -8.801058769226074
    6. '(' → logprob: -9.051058769226074
    7. '    
' → logprob: -9.676058769226074
    8. ' ' → logprob: -10.176058769226074
    9. '	def' → logprob: -10.926058769226074
    10. '  ' → logprob: -11.426058769226074

Token 460: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003858389565721154
    2. '
' → logprob: -5.75385856628418
    3. '   ' → logprob: -7.75385856628418
    4. ' def' → logprob: -8.75385856628418
    5. 'method' → logprob: -9.37885856628418
    6. '```' → logprob: -12.62885856628418
    7. 'classmethod' → logprob: -14.00385856628418
    8. ' ' → logprob: -14.37885856628418
    9. '    
' → logprob: -14.50385856628418
    10. '	def' → logprob: -14.87885856628418

Token 461: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.9424725148128346e-05
    2. ' def' → logprob: -10.125049591064453
    3. 'method' → logprob: -12.000049591064453
    4. '
' → logprob: -13.125049591064453
    5. 'property' → logprob: -15.125049591064453
    6. 'classmethod' → logprob: -15.125049591064453
    7. 'staticmethod' → logprob: -15.125049591064453
    8. 'float' → logprob: -16.500049591064453
    9. '   ' → logprob: -16.500049591064453
    10. '```' → logprob: -17.750049591064453

Token 462: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.003044143319129944
    2. ' evaluate' → logprob: -5.878044128417969
    3. 'eval' → logprob: -8.378044128417969
    4. 'execute' → logprob: -12.503044128417969
    5. 'e' → logprob: -13.003044128417969
    6. 'def' → logprob: -14.503044128417969
    7. 'calculate' → logprob: -14.878044128417969
    8. ' eval' → logprob: -15.003044128417969
    9. '.evaluate' → logprob: -15.253044128417969
    10. 'process' → logprob: -15.253044128417969

Token 463: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -15.00000286102295
    4. 'self' → logprob: -15.00000286102295
    5. '(tokens' → logprob: -17.125003814697266
    6. 'tokens' → logprob: -17.750003814697266
    7. '(
' → logprob: -19.125003814697266
    8. '   ' → logprob: -19.750003814697266
    9. '       ' → logprob: -19.750003814697266
    10. '_tokens' → logprob: -20.125003814697266

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006398845580406487
    2. 'tokens' → logprob: -8.125639915466309
    3. '_tokens' → logprob: -9.000639915466309
    4. ' ,' → logprob: -9.000639915466309
    5. ')' → logprob: -10.250639915466309
    6. 'self' → logprob: -10.750639915466309
    7. '(tokens' → logprob: -11.375639915466309
    8. ',t' → logprob: -12.000639915466309
    9. 'expression' → logprob: -12.125639915466309
    10. '       ' → logprob: -12.500639915466309

Token 465: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.0035519623197615147
    2. 'expression' → logprob: -5.753551959991455
    3. 'self' → logprob: -8.253552436828613
    4. ' tokens' → logprob: -9.253552436828613
    5. 'expr' → logprob: -12.003552436828613
    6. 'token' → logprob: -12.753552436828613
    7. 'express' → logprob: -13.003552436828613
    8. 'List' → logprob: -13.378552436828613
    9. ' expression' → logprob: -13.503552436828613
    10. '(tokens' → logprob: -14.003552436828613

Token 466: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3663626305060461e-05
    2. ')' → logprob: -11.25001335144043
    3. '):' → logprob: -15.25001335144043
    4. '```' → logprob: -16.25001335144043
    5. '_:' → logprob: -16.75001335144043
    6. '[' → logprob: -16.87501335144043
    7. '   ' → logprob: -17.00001335144043
    8. 'self' → logprob: -17.12501335144043
    9. ' :' → logprob: -17.50001335144043
    10. '       ' → logprob: -17.62501335144043

Token 467: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -5.88418151892256e-05
    2. ' List' → logprob: -9.750059127807617
    3. ')' → logprob: -14.500059127807617
    4. '[List' → logprob: -18.250059127807617
    5. '   ' → logprob: -18.500059127807617
    6. '	List' → logprob: -19.500059127807617
    7. ' ' → logprob: -20.625059127807617
    8. '       ' → logprob: -20.875059127807617
    9. 'list' → logprob: -21.250059127807617
    10. 'Union' → logprob: -21.500059127807617

Token 468: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. '<Token' → logprob: -12.125007629394531
    3. '[token' → logprob: -13.875007629394531
    4. '	Token' → logprob: -14.250007629394531
    5. '[
' → logprob: -15.125007629394531
    6. 'Token' → logprob: -16.00000762939453
    7. '```' → logprob: -16.00000762939453
    8. ')' → logprob: -16.12500762939453
    9. '(Token' → logprob: -16.12500762939453
    10. '[[' → logprob: -18.25000762939453

Token 469: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -9.088346359931165e-07
    2. ' Token' → logprob: -14.000000953674316
    3. 'token' → logprob: -16.875
    4. '	Token' → logprob: -17.875
    5. 'Union' → logprob: -20.125
    6. '_token' → logprob: -21.125
    7. '<Token' → logprob: -21.25
    8. 'Tokenizer' → logprob: -21.375
    9. '[' → logprob: -21.875
    10. ')' → logprob: -23.5

Token 470: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002533528604544699
    2. '])' → logprob: -8.500253677368164
    3. ' )' → logprob: -10.125253677368164
    4. '   ' → logprob: -11.750253677368164
    5. '`)' → logprob: -13.875253677368164
    6. '       ' → logprob: -15.250253677368164
    7. ' ])' → logprob: -15.375253677368164
    8. ']' → logprob: -16.375253677368164
    9. '[' → logprob: -16.375253677368164
    10. ')->' → logprob: -16.625253677368164

Token 471: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.07084961235523224
    2. '->' → logprob: -3.320849657058716
    3. ')' → logprob: -3.445849657058716
    4. ')->' → logprob: -8.070849418640137
    5. '   ' → logprob: -9.945849418640137
    6. ' ' → logprob: -10.945849418640137
    7. ':' → logprob: -11.570849418640137
    8. '  ' → logprob: -12.695849418640137
    9. ' )' → logprob: -13.195849418640137
    10. '       ' → logprob: -13.195849418640137

Token 472: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.062239013612270355
    2. ' float' → logprob: -2.812238931655884
    3. 'Optional' → logprob: -8.312238693237305
    4. ' Optional' → logprob: -11.562238693237305
    5. 'Union' → logprob: -11.562238693237305
    6. '	float' → logprob: -12.687238693237305
    7. ' ' → logprob: -14.062238693237305
    8. ' Union' → logprob: -14.062238693237305
    9. '(float' → logprob: -14.437238693237305
    10. '   ' → logprob: -14.437238693237305

Token 473: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010223710909485817
    2. '<|end|>' → logprob: -4.885223865509033
    3. ':
' → logprob: -6.510223865509033
    4. '   ' → logprob: -7.635223865509033
    5. '):' → logprob: -8.135223388671875
    6. '<|end|>' → logprob: -8.635223388671875
    7. ')' → logprob: -10.010223388671875
    8. ':return' → logprob: -10.010223388671875
    9. '       ' → logprob: -11.010223388671875
    10. '```' → logprob: -11.635223388671875

Token 474: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.6137219667434692
    2. '       ' → logprob: -0.8637219667434692
    3. '...' → logprob: -3.6137218475341797
    4. ' pass' → logprob: -4.61372184753418
    5. '	pass' → logprob: -9.23872184753418
    6. '   ' → logprob: -9.36372184753418
    7. ' ...' → logprob: -11.61372184753418
    8. '      ' → logprob: -12.11372184753418
    9. 'raise' → logprob: -12.98872184753418
    10. '```' → logprob: -12.98872184753418

Token 476: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01834835298359394
    2. '
' → logprob: -4.018348217010498
    3. '

' → logprob: -8.643348693847656
    4. '#' → logprob: -10.893348693847656
    5. '
' → logprob: -13.643348693847656
    6. '<class' → logprob: -14.268348693847656
    7. ' class' → logprob: -14.643348693847656
    8. '  
' → logprob: -14.893348693847656
    9. '<|end|>' → logprob: -15.018348693847656
    10. '```' → logprob: -15.643348693847656

Token 477: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005234356038272381
    2. '#' → logprob: -5.255234241485596
    3. '
' → logprob: -15.255234718322754
    4. 'import' → logprob: -15.880234718322754
    5. ' class' → logprob: -16.380233764648438
    6. '<class' → logprob: -16.880233764648438
    7. '<|end|>' → logprob: -17.755233764648438
    8. '```' → logprob: -18.130233764648438
    9. '

' → logprob: -18.380233764648438
    10. '@dat' → logprob: -19.130233764648438

Token 478: ' RP' (ID: 71830)
  Prédit: 'RP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RP' → logprob: -0.5245459675788879
    2. 'R' → logprob: -1.5245459079742432
    3. 'Simple' → logprob: -2.274545907974243
    4. ' RP' → logprob: -3.399545907974243
    5. 'Stack' → logprob: -3.649545907974243
    6. 'Basic' → logprob: -4.649546146392822
    7. ' R' → logprob: -5.149546146392822
    8. ' Simple' → logprob: -5.774546146392822
    9. 'RN' → logprob: -6.149546146392822
    10. 'Standard' → logprob: -6.274546146392822

Token 479: 'NE' (ID: 8553)
  Prédit: 'NE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NE' → logprob: -0.04325540363788605
    2. 'N' → logprob: -3.16825532913208
    3. 'Ne' → logprob: -8.668255805969238
    4. ' NE' → logprob: -11.418255805969238
    5. 'Ｎ' → logprob: -11.418255805969238
    6. 'NR' → logprob: -12.043255805969238
    7. 'Ν' → logprob: -12.043255805969238
    8. 'NEG' → logprob: -12.418255805969238
    9. 'НЕ' → logprob: -12.543255805969238
    10. 'NER' → logprob: -12.668255805969238

Token 480: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -0.08520112186670303
    2. 'Evaluator' → logprob: -2.5852010250091553
    3. 'Evalu' → logprob: -6.210201263427734
    4. 'valu' → logprob: -6.335201263427734
    5. 'val' → logprob: -7.335201263427734
    6. 'valuate' → logprob: -8.085201263427734
    7. 'Calculator' → logprob: -8.335201263427734
    8. 'NE' → logprob: -8.460201263427734
    9. 'EE' → logprob: -8.710201263427734
    10. 'AE' → logprob: -8.710201263427734

Token 481: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0008322591311298311
    2. ':' → logprob: -7.1258320808410645
    3. '(' → logprob: -11.125832557678223
    4. '(Abstract' → logprob: -11.875832557678223
    5. ' :' → logprob: -13.250832557678223
    6. ':
' → logprob: -13.500832557678223
    7. '(R' → logprob: -13.750832557678223
    8. 'Evaluator' → logprob: -14.250832557678223
    9. ' (' → logprob: -14.875832557678223
    10. '(S' → logprob: -15.375832557678223

Token 482: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -0.00016718693950679153
    2. '(' → logprob: -10.000166893005371
    3. 'valu' → logprob: -10.000166893005371
    4. 'val' → logprob: -10.750166893005371
    5. 'VALU' → logprob: -11.125166893005371
    6. 'P' → logprob: -12.250166893005371
    7. '(P' → logprob: -12.500166893005371
    8. 'V' → logprob: -12.500166893005371
    9. 'valuate' → logprob: -12.750166893005371
    10. '(R' → logprob: -12.875166893005371

Token 483: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011070695705711842
    2. '):
' → logprob: -4.511070728302002
    3. ')' → logprob: -11.636070251464844
    4. ':' → logprob: -11.761070251464844
    5. '):
' → logprob: -12.386070251464844
    6. '   ' → logprob: -14.011070251464844
    7. ' ):' → logprob: -14.261070251464844
    8. '):

' → logprob: -15.136070251464844
    9. 'def' → logprob: -15.261070251464844
    10. '():' → logprob: -17.011070251464844

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007145775598473847
    2. ':' → logprob: -7.7507147789001465
    3. ' def' → logprob: -8.375714302062988
    4. 'def' → logprob: -10.250714302062988
    5. ':
' → logprob: -11.000714302062988
    6. ':def' → logprob: -14.750714302062988
    7. '):
' → logprob: -15.250714302062988
    8. ')' → logprob: -15.625714302062988
    9. '
' → logprob: -15.750714302062988
    10. '```' → logprob: -16.250715255737305

Token 485: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3875729739665985
    2. ' def' → logprob: -1.137573003768921
    3. '   ' → logprob: -7.262572765350342
    4. 'class' → logprob: -15.3875732421875
    5. '	def' → logprob: -15.7625732421875
    6. '```' → logprob: -17.5125732421875
    7. ' ' → logprob: -17.7625732421875
    8. '
' → logprob: -17.8875732421875
    9. ':' → logprob: -18.8875732421875
    10. ':def' → logprob: -19.1375732421875

Token 486: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.08808275312185287
    2. ' __' → logprob: -2.838082790374756
    3. ' evaluate' → logprob: -3.963082790374756
    4. ' ' → logprob: -5.463082790374756
    5. 'def' → logprob: -6.463082790374756
    6. 'valuate' → logprob: -7.463082790374756
    7. 'evaluate' → logprob: -8.088082313537598
    8. ' _' → logprob: -10.088082313537598
    9. '__' → logprob: -11.338082313537598
    10. ' ' → logprob: -11.463082313537598

Token 487: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00033879990223795176
    2. 'def' → logprob: -8.625338554382324
    3. 'nit' → logprob: -9.000338554382324
    4. 'val' → logprob: -10.625338554382324
    5. '_init' → logprob: -12.500338554382324
    6. '(init' → logprob: -12.750338554382324
    7. 'in' → logprob: -14.000338554382324
    8. 'it' → logprob: -14.000338554382324
    9. 'valuate' → logprob: -14.375338554382324
    10. '   ' → logprob: -14.875338554382324

Token 488: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02356036938726902
    2. ' (' → logprob: -3.8985602855682373
    3. '__(' → logprob: -6.148560523986816
    4. '(' → logprob: -8.023560523986816
    5. 'self' → logprob: -8.398560523986816
    6. '   ' → logprob: -8.898560523986816
    7. '(
' → logprob: -9.398560523986816
    8. '       ' → logprob: -10.023560523986816
    9. '__(
' → logprob: -10.898560523986816
    10. ' self' → logprob: -11.398560523986816

Token 489: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002441741817165166
    2. 'operator' → logprob: -9.125244140625
    3. '):
' → logprob: -9.500244140625
    4. ')' → logprob: -10.000244140625
    5. ' self' → logprob: -12.000244140625
    6. '       ' → logprob: -12.250244140625
    7. '(self' → logprob: -13.375244140625
    8. '   ' → logprob: -13.625244140625
    9. '
' → logprob: -15.625244140625
    10. '0' → logprob: -15.625244140625

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22879590094089508
    2. 'self' → logprob: -1.6037958860397339
    3. '):
' → logprob: -6.103796005249023
    4. '(self' → logprob: -7.853796005249023
    5. '       ' → logprob: -8.103796005249023
    6. '   ' → logprob: -8.853796005249023
    7. ',self' → logprob: -9.978796005249023
    8. '):' → logprob: -10.103796005249023
    9. ' self' → logprob: -10.103796005249023
    10. '__(' → logprob: -10.228796005249023

Token 491: ' stack' (ID: 10825)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.001189041300676763
    2. ' operator' → logprob: -6.876189231872559
    3. ')' → logprob: -9.751189231872559
    4. 'operators' → logprob: -10.126189231872559
    5. 'token' → logprob: -10.626189231872559
    6. 'stack' → logprob: -11.376189231872559
    7. '	operator' → logprob: -12.751189231872559
    8. '   ' → logprob: -12.751189231872559
    9. '):
' → logprob: -12.876189231872559
    10. ' )' → logprob: -13.126189231872559

Token 492: '_factory' (ID: 57891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013391503132879734
    2. '=' → logprob: -4.513391494750977
    3. '):' → logprob: -6.888391494750977
    4. '=None' → logprob: -7.013391494750977
    5. ' =' → logprob: -7.888391494750977
    6. ' :' → logprob: -11.263391494750977
    7. '():' → logprob: -11.388391494750977
    8. ')' → logprob: -11.638391494750977
    9. ' ):' → logprob: -12.513391494750977
    10. ':=' → logprob: -13.013391494750977

Token 493: ':' (ID: 25)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.7879655957221985
    2. '):' → logprob: -1.6629655361175537
    3. ':' → logprob: -1.7879655361175537
    4. '):
' → logprob: -2.0379655361175537
    5. '=None' → logprob: -3.1629655361175537
    6. '=' → logprob: -4.287965774536133
    7. ')' → logprob: -6.787965774536133
    8. ' =' → logprob: -7.537965774536133
    9. '):
' → logprob: -9.287965774536133
    10. '=create' → logprob: -9.662965774536133

Token 494: ' Callable' (ID: 94560)
  Prédit: 'Callable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Callable' → logprob: -0.04023810848593712
    2. 'Stack' → logprob: -3.54023814201355
    3. 'lambda' → logprob: -4.915237903594971
    4. 'call' → logprob: -6.165237903594971
    5. '):
' → logprob: -7.665237903594971
    6. ')' → logprob: -7.915237903594971
    7. '   ' → logprob: -10.540238380432129
    8. '=lambda' → logprob: -10.665238380432129
    9. ' callable' → logprob: -10.790238380432129
    10. 'Call' → logprob: -10.915238380432129

Token 495: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006041369866579771
    2. ')' → logprob: -5.631041526794434
    3. '):' → logprob: -7.256041526794434
    4. '[[' → logprob: -7.506041526794434
    5. '):
' → logprob: -7.756041526794434
    6. '()' → logprob: -7.756041526794434
    7. '[...,' → logprob: -8.506041526794434
    8. '=' → logprob: -10.256041526794434
    9. 'self' → logprob: -10.881041526794434
    10. '():' → logprob: -11.131041526794434

Token 496: '[],' (ID: 25409)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9174634218215942
    2. ')' → logprob: -1.4174634218215942
    3. '[]' → logprob: -2.0424633026123047
    4. '[],' → logprob: -2.1674633026123047
    5. '()' → logprob: -3.4174633026123047
    6. 'None' → logprob: -3.4174633026123047
    7. ']' → logprob: -3.7924633026123047
    8. '],' → logprob: -4.917463302612305
    9. '[])' → logprob: -5.542463302612305
    10. 'List' → logprob: -6.042463302612305

Token 497: ' Stack' (ID: 25134)
  Prédit: 'Stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stack' → logprob: -2.935296834039036e-06
    2. ' Stack' → logprob: -12.75000286102295
    3. 'List' → logprob: -18.750003814697266
    4. 'stack' → logprob: -20.625003814697266
    5. '(Stack' → logprob: -21.750003814697266
    6. '_stack' → logprob: -23.000003814697266
    7. 'Queue' → logprob: -23.625003814697266
    8. '.Stack' → logprob: -24.250003814697266
    9. 'Stock' → logprob: -25.250003814697266
    10. 'float' → logprob: -25.500003814697266

Token 498: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010268784128129482
    2. '):
' → logprob: -4.635268688201904
    3. ')' → logprob: -7.635268688201904
    4. ' ):' → logprob: -11.260269165039062
    5. ']):' → logprob: -11.760269165039062
    6. '):
' → logprob: -12.760269165039062
    7. ')):' → logprob: -12.885269165039062
    8. '   ' → logprob: -13.760269165039062
    9. ':' → logprob: -14.510269165039062
    10. ',' → logprob: -14.760269165039062

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.813969957875088e-05
    2. ':' → logprob: -9.750067710876465
    3. 'self' → logprob: -12.875067710876465
    4. ' self' → logprob: -13.000067710876465
    5. '   ' → logprob: -13.500067710876465
    6. ',' → logprob: -13.875067710876465
    7. '):' → logprob: -14.000067710876465
    8. '<|end|>' → logprob: -15.000067710876465
    9. '):
' → logprob: -15.250067710876465
    10. ')' → logprob: -15.500067710876465

Token 500: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001105683040805161
    2. ' self' → logprob: -7.501105785369873
    3. '       ' → logprob: -7.501105785369873
    4. '	self' → logprob: -16.25110626220703
    5. '(self' → logprob: -18.37610626220703
    6. '   ' → logprob: -19.37610626220703
    7. '[self' → logprob: -20.87610626220703
    8. ' ' → logprob: -21.37610626220703
    9. '_self' → logprob: -22.12610626220703
    10. 'super' → logprob: -22.12610626220703

Token 501: '.stack' (ID: 45133)
  Prédit: '.stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stack' → logprob: -0.014292089268565178
    2. '._' → logprob: -4.264292240142822
    3. '.' → logprob: -9.764291763305664
    4. '_stack' → logprob: -10.389291763305664
    5. '   ' → logprob: -11.014291763305664
    6. 'stack' → logprob: -11.389291763305664
    7. ' .' → logprob: -12.139291763305664
    8. '	stack' → logprob: -12.764291763305664
    9. '.factory' → logprob: -13.764291763305664
    10. '       ' → logprob: -13.889291763305664

Token 502: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -0.02953871339559555
    2. '=' → logprob: -3.779538631439209
    3. ' =' → logprob: -5.154538631439209
    4. '_stack' → logprob: -8.779539108276367
    5. '_' → logprob: -8.904539108276367
    6. '=_' → logprob: -9.279539108276367
    7. '_fac' → logprob: -10.529539108276367
    8. '=f' → logprob: -11.154539108276367
    9. '   ' → logprob: -11.154539108276367
    10. '       ' → logprob: -11.529539108276367

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029824301600456238
    2. ' =' → logprob: -3.5298242568969727
    3. ':' → logprob: -9.779824256896973
    4. ')' → logprob: -11.654824256896973
    5. '   ' → logprob: -13.029824256896973
    6. '=self' → logprob: -13.154824256896973
    7. ' ' → logprob: -13.654824256896973
    8. 'self' → logprob: -14.029824256896973
    9. '=None' → logprob: -14.154824256896973
    10. '       ' → logprob: -15.029824256896973

Token 504: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -2.7729658540920354e-05
    2. ' stack' → logprob: -10.500027656555176
    3. '(stack' → logprob: -16.625028610229492
    4. '	stack' → logprob: -17.375028610229492
    5. '_stack' → logprob: -18.500028610229492
    6. 'Stack' → logprob: -18.875028610229492
    7. '   ' → logprob: -19.875028610229492
    8. '       ' → logprob: -20.250028610229492
    9. '.stack' → logprob: -20.750028610229492
    10. 'queue' → logprob: -21.000028610229492

Token 505: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -0.00022034443099983037
    2. '()' → logprob: -9.25022029876709
    3. 'Factory' → logprob: -9.37522029876709
    4. 'factory' → logprob: -11.12522029876709
    5. '_factor' → logprob: -11.37522029876709
    6. ')' → logprob: -12.37522029876709
    7. '_fact' → logprob: -13.12522029876709
    8. '(factory' → logprob: -13.50022029876709
    9. '_FACTORY' → logprob: -13.75022029876709
    10. '()
' → logprob: -14.00022029876709

Token 506: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8916959762573242
    2. '       ' → logprob: -1.1416959762573242
    3. '
' → logprob: -1.5166959762573242
    4. '<|end|>' → logprob: -3.391695976257324
    5. '    
' → logprob: -4.641695976257324
    6. ')' → logprob: -6.391695976257324
    7. ':' → logprob: -6.641695976257324
    8. ',' → logprob: -6.766695976257324
    9. '<|end|>' → logprob: -7.016695976257324
    10. '  
' → logprob: -7.266695976257324

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006669781636446714
    2. 'def' → logprob: -5.131669998168945
    3. '
' → logprob: -7.631669998168945
    4. '    
' → logprob: -8.756669998168945
    5. ' def' → logprob: -9.381669998168945
    6. '```' → logprob: -12.131669998168945
    7. '        
' → logprob: -12.631669998168945
    8. '       ' → logprob: -13.506669998168945
    9. '	def' → logprob: -13.756669998168945
    10. ')' → logprob: -13.756669998168945

Token 508: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.627176768844947e-05
    2. ' def' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.625096321105957
    4. '
' → logprob: -17.75009536743164
    5. '	def' → logprob: -20.00009536743164
    6. '    
' → logprob: -20.37509536743164
    7. 'de' → logprob: -21.75009536743164
    8. '@' → logprob: -22.62509536743164
    9. '        
' → logprob: -23.00009536743164
    10. '```' → logprob: -23.12509536743164

Token 509: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.02637624368071556
    2. ' evaluate' → logprob: -3.651376247406006
    3. 'def' → logprob: -9.776375770568848
    4. ' def' → logprob: -11.526375770568848
    5. 'valuate' → logprob: -13.026375770568848
    6. '.evaluate' → logprob: -13.276375770568848
    7. 'e' → logprob: -13.776375770568848
    8. ' ' → logprob: -13.776375770568848
    9. 'eval' → logprob: -14.401375770568848
    10. 'execute' → logprob: -14.526375770568848

Token 510: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. 'self' → logprob: -15.25000286102295
    4. '(
' → logprob: -16.250001907348633
    5. '       ' → logprob: -17.875001907348633
    6. ' (' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '[self' → logprob: -20.125001907348633
    9. '(tokens' → logprob: -20.625001907348633
    10. '	self' → logprob: -20.750001907348633

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21262753009796143
    2. '(self' → logprob: -1.8376275300979614
    3. 'self' → logprob: -3.462627410888672
    4. 'tokens' → logprob: -8.337627410888672
    5. ')' → logprob: -8.712627410888672
    6. ' (' → logprob: -8.837627410888672
    7. '_tokens' → logprob: -8.837627410888672
    8. '       ' → logprob: -9.462627410888672
    9. ' self' → logprob: -9.587627410888672
    10. '(tokens' → logprob: -9.962627410888672

Token 512: ' tokens' (ID: 20290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.29222372174263
    2. 'tokens' → logprob: -1.4172236919403076
    3. ' self' → logprob: -4.792223930358887
    4. ' tokens' → logprob: -5.917223930358887
    5. '       ' → logprob: -11.042223930358887
    6. '   ' → logprob: -13.292223930358887
    7. '(self' → logprob: -13.417223930358887
    8. 'token' → logprob: -13.417223930358887
    9. '.tokens' → logprob: -13.417223930358887
    10. '[self' → logprob: -14.042223930358887

Token 513: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9749305844306946
    2. ')' → logprob: -1.5999305248260498
    3. 'self' → logprob: -1.9749305248260498
    4. '(self' → logprob: -2.22493052482605
    5. ',' → logprob: -2.34993052482605
    6. '       ' → logprob: -2.59993052482605
    7. '   ' → logprob: -6.474930763244629
    8. ' self' → logprob: -6.724930763244629
    9. '):' → logprob: -7.224930763244629
    10. '[self' → logprob: -7.724930763244629

Token 514: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.02211809530854225
    2. ' List' → logprob: -3.897118091583252
    3. 'self' → logprob: -6.772118091583252
    4. ')' → logprob: -8.39711856842041
    5. '[List' → logprob: -9.02211856842041
    6. 'list' → logprob: -9.89711856842041
    7. ' self' → logprob: -11.14711856842041
    8. ' list' → logprob: -11.64711856842041
    9. 'tokens' → logprob: -13.14711856842041
    10. '[' → logprob: -13.52211856842041

Token 515: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.306760805164231e-05
    2. '<Token' → logprob: -11.62501335144043
    3. '[token' → logprob: -13.50001335144043
    4. ')' → logprob: -13.75001335144043
    5. '[
' → logprob: -14.62501335144043
    6. '```' → logprob: -14.87501335144043
    7. 'Token' → logprob: -15.00001335144043
    8. '(Token' → logprob: -15.12501335144043
    9. '	Token' → logprob: -16.50001335144043
    10. ' [' → logprob: -16.62501335144043

Token 516: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -3.128163257315464e-07
    2. ' Token' → logprob: -15.375
    3. 'token' → logprob: -16.875
    4. '	Token' → logprob: -18.625
    5. '[' → logprob: -19.25
    6. ')' → logprob: -20.75
    7. '<Token' → logprob: -20.75
    8. '(Token' → logprob: -20.875
    9. '_token' → logprob: -21.875
    10. '   ' → logprob: -21.875

Token 517: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. '):' → logprob: -12.500008583068848
    3. '])' → logprob: -12.875008583068848
    4. '):
' → logprob: -13.500008583068848
    5. ' )' → logprob: -13.750008583068848
    6. '   ' → logprob: -16.000009536743164
    7. '`)' → logprob: -16.375009536743164
    8. '）' → logprob: -17.875009536743164
    9. '})' → logprob: -18.125009536743164
    10. '))' → logprob: -18.375009536743164

Token 518: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2402077168226242
    2. '->' → logprob: -1.9902076721191406
    3. ' ->' → logprob: -2.7402076721191406
    4. ':
' → logprob: -4.865207672119141
    5. '(self' → logprob: -6.240207672119141
    6. ')' → logprob: -6.740207672119141
    7. '       ' → logprob: -7.115207672119141
    8. '   ' → logprob: -8.36520767211914
    9. ')->' → logprob: -8.36520767211914
    10. '(' → logprob: -9.99020767211914

Token 519: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005234475247561932
    2. ' float' → logprob: -5.255234241485596
    3. 'None' → logprob: -14.755234718322754
    4. 'Optional' → logprob: -15.630234718322754
    5. '(float' → logprob: -16.005233764648438
    6. 'flo' → logprob: -16.880233764648438
    7. 'Float' → logprob: -17.005233764648438
    8. '<float' → logprob: -18.880233764648438
    9. '[' → logprob: -19.005233764648438
    10. 'fl' → logprob: -19.255233764648438

Token 520: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4423087537288666
    2. ':' → logprob: -1.067308783531189
    3. '       ' → logprob: -4.4423089027404785
    4. '):
' → logprob: -6.8173089027404785
    5. '(self' → logprob: -7.8173089027404785
    6. '():
' → logprob: -9.06730842590332
    7. '):' → logprob: -9.94230842590332
    8. '   ' → logprob: -10.69230842590332
    9. 'self' → logprob: -10.81730842590332
    10. '():' → logprob: -11.31730842590332

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.847109812544659e-05
    2. 'stack' → logprob: -10.000048637390137
    3. ' stack' → logprob: -13.375048637390137
    4. '   ' → logprob: -14.750048637390137
    5. 'self' → logprob: -14.875048637390137
    6. '	' → logprob: -15.500048637390137
    7. '        
' → logprob: -16.00004768371582
    8. '      ' → logprob: -16.37504768371582
    9. '	stack' → logprob: -16.62504768371582
    10. '```' → logprob: -16.75004768371582

Token 522: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.00037085101939737797
    2. ' stack' → logprob: -8.000370979309082
    3. '       ' → logprob: -10.250370979309082
    4. '	stack' → logprob: -18.250370025634766
    5. 's' → logprob: -18.875370025634766
    6. '   ' → logprob: -20.125370025634766
    7. '_stack' → logprob: -20.125370025634766
    8. 'self' → logprob: -20.250370025634766
    9. 'stk' → logprob: -20.250370025634766
    10. 'st' → logprob: -20.375370025634766

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038043100386857986
    2. '=' → logprob: -3.2880430221557617
    3. ':' → logprob: -13.413043022155762
    4. ' ' → logprob: -16.788043975830078
    5. '   ' → logprob: -16.788043975830078
    6. '=self' → logprob: -17.538043975830078
    7. '.' → logprob: -18.538043975830078
    8. ')' → logprob: -19.038043975830078
    9. '  ' → logprob: -19.288043975830078
    10. '	' → logprob: -19.538043975830078

Token 524: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009115827269852161
    2. ' self' → logprob: -7.000911712646484
    3. '(self' → logprob: -16.750911712646484
    4. '       ' → logprob: -17.375911712646484
    5. '           ' → logprob: -19.625911712646484
    6. '=self' → logprob: -20.125911712646484
    7. '	self' → logprob: -20.375911712646484
    8. '[self' → logprob: -20.875911712646484
    9. '   ' → logprob: -22.000911712646484
    10. '        ' → logprob: -22.625911712646484

Token 525: '.stack' (ID: 45133)
  Prédit: '.stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stack' → logprob: -2.0219828002154827e-05
    2. 'stack' → logprob: -10.875020027160645
    3. '.' → logprob: -14.000020027160645
    4. '._' → logprob: -15.500020027160645
    5. '	stack' → logprob: -16.50002098083496
    6. '_stack' → logprob: -16.62502098083496
    7. ' .' → logprob: -18.62502098083496
    8. '(stack' → logprob: -19.25002098083496
    9. '.Stack' → logprob: -19.25002098083496
    10. '.s' → logprob: -19.50002098083496

Token 526: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -4.320199877838604e-07
    2. 'Factory' → logprob: -15.25
    3. 'factory' → logprob: -16.875
    4. '_FACTORY' → logprob: -17.75
    5. '_factor' → logprob: -18.375
    6. '_fact' → logprob: -18.5
    7. '_fac' → logprob: -18.875
    8. '(factory' → logprob: -20.125
    9. '.Factory' → logprob: -21.0
    10. '.factory' → logprob: -21.75

Token 527: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.7848862373502925e-05
    2. '()
' → logprob: -10.500027656555176
    3. '()`' → logprob: -16.250028610229492
    4. '()

' → logprob: -16.625028610229492
    5. '()
' → logprob: -16.625028610229492
    6. '()"' → logprob: -17.750028610229492
    7. ' ()' → logprob: -19.125028610229492
    8. '(' → logprob: -19.625028610229492
    9. '()\' → logprob: -19.750028610229492
    10. '())' → logprob: -21.000028610229492

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021284611895680428
    2. '
' → logprob: -4.521284580230713
    3. '        
' → logprob: -5.146284580230713
    4. 'for' → logprob: -6.521284580230713
    5. ' for' → logprob: -6.771284580230713
    6. '```' → logprob: -8.146285057067871
    7. '  
' → logprob: -8.146285057067871
    8. ' 
' → logprob: -8.396285057067871
    9. '<|end|>' → logprob: -8.396285057067871
    10. '\' → logprob: -9.021285057067871

Token 529: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.580929347255733e-05
    2. '       ' → logprob: -11.750016212463379
    3. ' for' → logprob: -11.750016212463379
    4. '```' → logprob: -21.375015258789062
    5. '	for' → logprob: -21.625015258789062
    6. '   ' → logprob: -21.750015258789062
    7. '
' → logprob: -23.125015258789062
    8. '           ' → logprob: -23.625015258789062
    9. '        
' → logprob: -23.625015258789062
    10. 'try' → logprob: -24.250015258789062

Token 530: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -5.860340752406046e-05
    2. ' token' → logprob: -9.7500581741333
    3. 'tok' → logprob: -15.5000581741333
    4. 't' → logprob: -17.375059127807617
    5. '	token' → logprob: -19.500059127807617
    6. 'tk' → logprob: -21.250059127807617
    7. 'Token' → logprob: -22.625059127807617
    8. '_token' → logprob: -22.750059127807617
    9. '(token' → logprob: -22.875059127807617
    10. '.token' → logprob: -23.125059127807617

Token 531: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38687628507614136
    2. 'in' → logprob: -1.1368763446807861
    3. 'token' → logprob: -12.511876106262207
    4. ' ' → logprob: -15.011876106262207
    5. 's' → logprob: -15.261876106262207
    6. '	in' → logprob: -15.636876106262207
    7. 'import' → logprob: -15.761876106262207
    8. 'tokens' → logprob: -16.011877059936523
    9. '.' → logprob: -16.136877059936523
    10. '_in' → logprob: -16.636877059936523

Token 532: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00020354038861114532
    2. ' tokens' → logprob: -8.500203132629395
    3. 'token' → logprob: -19.37520408630371
    4. '(tokens' → logprob: -19.87520408630371
    5. '.tokens' → logprob: -20.37520408630371
    6. 'okens' → logprob: -21.62520408630371
    7. '   ' → logprob: -22.00020408630371
    8. ' ' → logprob: -22.25020408630371
    9. 't' → logprob: -22.62520408630371
    10. '_tokens' → logprob: -23.25020408630371

Token 533: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038111720234155655
    2. ':
' → logprob: -3.288111686706543
    3. '           ' → logprob: -10.038111686706543
    4. '):' → logprob: -12.038111686706543
    5. '       ' → logprob: -12.163111686706543
    6. '):
' → logprob: -12.163111686706543
    7. ',' → logprob: -12.413111686706543
    8. '.' → logprob: -13.538111686706543
    9. ':

' → logprob: -13.538111686706543
    10. ':
' → logprob: -13.913111686706543

Token 534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008901407127268612
    2. ' if' → logprob: -7.250890254974365
    3. 'if' → logprob: -8.625889778137207
    4. '   ' → logprob: -14.875889778137207
    5. '       ' → logprob: -15.750889778137207
    6. '          ' → logprob: -16.750890731811523
    7. '               ' → logprob: -17.125890731811523
    8. '```' → logprob: -17.250890731811523
    9. '		' → logprob: -18.000890731811523
    10. '         ' → logprob: -18.375890731811523

Token 535: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005896099028177559
    2. ' if' → logprob: -7.750589847564697
    3. '           ' → logprob: -8.750589370727539
    4. '       ' → logprob: -14.875589370727539
    5. '   ' → logprob: -15.875589370727539
    6. '               ' → logprob: -16.00058937072754
    7. '            ' → logprob: -18.75058937072754
    8. '    ' → logprob: -19.62558937072754
    9. '        ' → logprob: -19.62558937072754
    10. ' ' → logprob: -20.37558937072754

Token 536: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.01255732774734497
    2. 'not' → logprob: -4.387557506561279
    3. ' token' → logprob: -10.887557029724121
    4. ' not' → logprob: -11.387557029724121
    5. 'is' → logprob: -11.637557029724121
    6. '   ' → logprob: -12.137557029724121
    7. '(token' → logprob: -14.137557029724121
    8. '	token' → logprob: -14.387557029724121
    9. '.token' → logprob: -15.137557029724121
    10. 'tokens' → logprob: -15.262557029724121

Token 537: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00020461321400944144
    2. '.' → logprob: -8.500205039978027
    3. 'is' → logprob: -13.875205039978027
    4. ' .' → logprob: -15.875205039978027
    5. '.isnan' → logprob: -17.75020408630371
    6. '.token' → logprob: -18.12520408630371
    7. '.operator' → logprob: -18.25020408630371
    8. '.has' → logprob: -19.25020408630371
    9. '.
' → logprob: -19.62520408630371
    10. '.Is' → logprob: -19.87520408630371

Token 538: '_operator' (ID: 97926)
  Prédit: '_operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operator' → logprob: -3.173704271830502e-06
    2. 'operator' → logprob: -13.12500286102295
    3. '_' → logprob: -14.37500286102295
    4. '_OPERATOR' → logprob: -15.00000286102295
    5. '_operation' → logprob: -16.000003814697266
    6. '_operand' → logprob: -17.500003814697266
    7. '_op' → logprob: -18.000003814697266
    8. '_oper' → logprob: -18.250003814697266
    9. 'Operator' → logprob: -18.250003814697266
    10. ' operator' → logprob: -18.625003814697266

Token 539: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0025742328725755215
    2. '():
' → logprob: -6.002574443817139
    3. '()' → logprob: -9.25257396697998
    4. '():
' → logprob: -13.75257396697998
    5. ' ():' → logprob: -14.00257396697998
    6. '():

' → logprob: -14.87757396697998
    7. '(' → logprob: -15.62757396697998
    8. '()):
' → logprob: -16.502574920654297
    9. ':' → logprob: -16.752574920654297
    10. '()==' → logprob: -16.877574920654297

Token 540: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.888622522354126
    2. ':
' → logprob: -1.138622522354126
    3. '           ' → logprob: -2.013622522354126
    4. '               ' → logprob: -2.013622522354126
    5. '):
' → logprob: -7.638622283935547
    6. '):' → logprob: -8.638622283935547
    7. ' and' → logprob: -8.888622283935547
    8. ',' → logprob: -9.388622283935547
    9. ' :
' → logprob: -9.388622283935547
    10. '            
' → logprob: -9.638622283935547

Token 541: ' if' (ID: 538)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8275178670883179
    2. 'right' → logprob: -1.5775178670883179
    3. 'if' (adapté à ' if') → logprob: -1.9525178670883179
    4. '               ' → logprob: -2.4525179862976074
    5. 'rhs' → logprob: -2.4525179862976074
    6. ' if' → logprob: -4.077517986297607
    7. ' right' → logprob: -4.577517986297607
    8. ' b' → logprob: -4.952517986297607
    9. ' rhs' → logprob: -5.327517986297607
    10. 'operand' → logprob: -6.827517986297607

Token 542: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.12695540487766266
    2. ' stack' → logprob: -2.126955509185791
    3. '                   ' → logprob: -11.626955032348633
    4. '               ' → logprob: -11.876955032348633
    5. '	stack' → logprob: -11.876955032348633
    6. '(stack' → logprob: -13.001955032348633
    7. '.stack' → logprob: -14.126955032348633
    8. '_stack' → logprob: -14.876955032348633
    9. 'Stack' → logprob: -15.126955032348633
    10. '   ' → logprob: -15.376955032348633

Token 543: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -1.1398757123970427e-05
    2. '.' → logprob: -11.750011444091797
    3. 'size' → logprob: -13.375011444091797
    4. '.stack' → logprob: -14.250011444091797
    5. '                   ' → logprob: -14.375011444091797
    6. ' .' → logprob: -15.250011444091797
    7. '               ' → logprob: -15.500011444091797
    8. '.pop' → logprob: -16.375011444091797
    9. '                       ' → logprob: -17.250011444091797
    10. '                               ' → logprob: -17.625011444091797

Token 544: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008619893342256546
    2. '()<' → logprob: -4.758619785308838
    3. '<' → logprob: -12.258620262145996
    4. ' <' → logprob: -15.008620262145996
    5. ' ()' → logprob: -15.758620262145996
    6. ')' → logprob: -16.00861930847168
    7. '()>' → logprob: -18.38361930847168
    8. '```' → logprob: -18.63361930847168
    9. '()==' → logprob: -18.75861930847168
    10. '(' → logprob: -19.00861930847168

Token 545: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.007762669585645199
    2. '()<' → logprob: -5.257762432098389
    3. ' <' → logprob: -6.507762432098389
    4. '()' → logprob: -6.882762432098389
    5. ')' → logprob: -12.257762908935547
    6. ')<' → logprob: -13.507762908935547
    7. '<size' → logprob: -14.007762908935547
    8. ' ' → logprob: -15.382762908935547
    9. '<class' → logprob: -16.007762908935547
    10. '<int' → logprob: -16.007762908935547

Token 546: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.25001335144043
    4. '۲' → logprob: -17.50001335144043
    5. '```' → logprob: -17.93751335144043
    6. '>' → logprob: -18.06251335144043
    7. '[' → logprob: -18.25001335144043
    8. 'two' → logprob: -18.56251335144043
    9. '२' → logprob: -19.25001335144043
    10. '２' → logprob: -19.31251335144043

Token 547: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۲' → logprob: -18.375
    4. 'two' → logprob: -19.625
    5. '```' → logprob: -20.0
    6. '   ' → logprob: -20.0
    7. '２' → logprob: -20.375
    8. '٢' → logprob: -20.5
    9. '२' → logprob: -20.625
    10. '২' → logprob: -21.0

Token 548: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28187793493270874
    2. ':
' → logprob: -1.4068779945373535
    3. '                   ' → logprob: -7.4068779945373535
    4. '               ' → logprob: -9.781877517700195
    5. '):
' → logprob: -11.531877517700195
    6. '           ' → logprob: -11.531877517700195
    7. '):' → logprob: -11.656877517700195
    8. ':
' → logprob: -11.781877517700195
    9. ' or' → logprob: -12.281877517700195
    10. ':return' → logprob: -12.281877517700195

Token 549: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00033581978641450405
    2. '           ' → logprob: -9.125335693359375
    3. '               ' → logprob: -9.125335693359375
    4. '                       ' → logprob: -10.250335693359375
    5. '                  ' → logprob: -11.000335693359375
    6. '                    
' → logprob: -11.125335693359375
    7. ' raise' → logprob: -11.500335693359375
    8. '                    ' → logprob: -11.625335693359375
    9. ':
' → logprob: -11.750335693359375
    10. '                ' → logprob: -11.875335693359375

Token 550: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.03352385759353638
    2. '                   ' → logprob: -3.5335237979888916
    3. ' raise' → logprob: -5.658524036407471
    4. '                       ' → logprob: -8.783523559570312
    5. '	raise' → logprob: -9.158523559570312
    6. '   ' → logprob: -11.908523559570312
    7. '                    ' → logprob: -12.908523559570312
    8. '                  ' → logprob: -13.158523559570312
    9. '                    
' → logprob: -13.283523559570312
    10. 'Raise' → logprob: -13.533523559570312

Token 551: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.08921010792255402
    2. ' Value' → logprob: -2.589210033416748
    3. 'Index' → logprob: -4.839210033416748
    4. 'Runtime' → logprob: -6.214210033416748
    5. ' Runtime' → logprob: -8.339210510253906
    6. ' Index' → logprob: -9.339210510253906
    7. '(Value' → logprob: -11.214210510253906
    8. 'Exception' → logprob: -11.714210510253906
    9. '_value' → logprob: -13.839210510253906
    10. '.Value' → logprob: -14.214210510253906

Token 552: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.25260066986083984
    2. 'Error' → logprob: -1.5026006698608398
    3. 'ror' → logprob: -7.37760066986084
    4. 'or' → logprob: -10.50260066986084
    5. 'Value' → logprob: -12.75260066986084
    6. 'r' → logprob: -13.12760066986084
    7. 'error' → logprob: -13.25260066986084
    8. '               ' → logprob: -13.50260066986084
    9. '("' → logprob: -13.50260066986084
    10. '       ' → logprob: -13.75260066986084

Token 553: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.643152740551159e-05
    2. '(' → logprob: -10.250036239624023
    3. '('' → logprob: -14.125036239624023
    4. '(f' → logprob: -16.000036239624023
    5. '(
' → logprob: -16.750036239624023
    6. '("'' → logprob: -18.875036239624023
    7. '"' → logprob: -19.000036239624023
    8. '()' → logprob: -22.000036239624023
    9. '("(' → logprob: -22.000036239624023
    10. '(("' → logprob: -22.125036239624023

Token 554: 'Not' (ID: 2874)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02546832710504532
    2. 'Ins' → logprob: -3.775468349456787
    3. 'Not' → logprob: -6.150468349456787
    4. ''' → logprob: -9.525467872619629
    5. ' "' → logprob: -12.275467872619629
    6. 'f' → logprob: -12.650467872619629
    7. 'Invalid' → logprob: -13.150467872619629
    8. 'ins' → logprob: -13.900467872619629
    9. ' Ins' → logprob: -13.900467872619629
    10. 'not' → logprob: -14.275467872619629

Token 555: ' enough' (ID: 4951)
  Prédit: ' enough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enough' → logprob: -0.048611659556627274
    2. 'en' → logprob: -3.048611640930176
    3. 'Enough' → logprob: -11.423611640930176
    4. 's' → logprob: -12.673611640930176
    5. '_en' → logprob: -12.798611640930176
    6. '<|end|>' → logprob: -13.048611640930176
    7. ' sufficient' → logprob: -13.923611640930176
    8. ' en' → logprob: -13.923611640930176
    9. '-en' → logprob: -14.048611640930176
    10. ' Enough' → logprob: -14.173611640930176

Token 556: ' operands' (ID: 126381)
  Prédit: ' operands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operands' → logprob: -0.009725982323288918
    2. ' values' → logprob: -5.384726047515869
    3. 'oper' → logprob: -5.509726047515869
    4. 'values' → logprob: -7.134726047515869
    5. ' elements' → logprob: -9.009725570678711
    6. ' oper' → logprob: -9.884725570678711
    7. ' items' → logprob: -11.009725570678711
    8. 'elements' → logprob: -11.134725570678711
    9. 'Operands' → logprob: -11.259725570678711
    10. 'arguments' → logprob: -11.634725570678711

Token 557: ' in' (ID: 306)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.39511507749557495
    2. ' for' → logprob: -1.1451151371002197
    3. '")' → logprob: -5.395114898681641
    4. 'for' → logprob: -6.145114898681641
    5. ' on' → logprob: -7.395114898681641
    6. 'to' → logprob: -7.770114898681641
    7. ' ")' → logprob: -8.52011489868164
    8. '")
' → logprob: -9.02011489868164
    9. ' ")
' → logprob: -9.64511489868164
    10. ')' → logprob: -10.27011489868164

Token 558: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.021447863429784775
    2. ' stack' → logprob: -4.396447658538818
    3. 'the' → logprob: -4.771447658538818
    4. ' the' → logprob: -7.771447658538818
    5. 'expression' → logprob: -12.771448135375977
    6. 'Stack' → logprob: -13.146448135375977
    7. '	stack' → logprob: -14.271448135375977
    8. '(stack' → logprob: -14.646448135375977
    9. ')' → logprob: -15.021448135375977
    10. '_stack' → logprob: -15.146448135375977

Token 559: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.20413276553153992
    2. ' for' → logprob: -1.7041327953338623
    3. 'for' → logprob: -6.204132556915283
    4. 'to' → logprob: -7.704132556915283
    5. '")' → logprob: -8.454133033752441
    6. '")
' → logprob: -11.079133033752441
    7. ' before' → logprob: -12.579133033752441
    8. ' ")' → logprob: -12.579133033752441
    9. ')' → logprob: -13.329133033752441
    10. ' ")
' → logprob: -13.329133033752441

Token 560: ' operator' (ID: 11019)
  Prédit: 'operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operation' → logprob: -0.1484534740447998
    2. ' operation' → logprob: -2.1484534740448
    3. 'operator' → logprob: -3.8984534740448
    4. ' operator' → logprob: -6.898453712463379
    5. ' the' → logprob: -12.273453712463379
    6. 'oper' → logprob: -12.648453712463379
    7. 'the' → logprob: -12.898453712463379
    8. 'an' → logprob: -13.773453712463379
    9. ' an' → logprob: -14.648453712463379
    10. 'evaluation' → logprob: -15.148453712463379

Token 561: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.44324520230293274
    2. '")
' → logprob: -1.0682451725006104
    3. '"' → logprob: -5.5682454109191895
    4. ''' → logprob: -5.6932454109191895
    5. ''")
' → logprob: -6.5682454109191895
    6. '')' → logprob: -6.8182454109191895
    7. '")
' → logprob: -6.8182454109191895
    8. '.")
' → logprob: -7.1932454109191895
    9. '.")' → logprob: -7.1932454109191895
    10. ' operation' → logprob: -8.193244934082031

Token 562: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05778118222951889
    2. '
' → logprob: -3.432781219482422
    3. '                
' → logprob: -4.432781219482422
    4. ' 
' → logprob: -5.182781219482422
    5. '  
' → logprob: -5.307781219482422
    6. '                    
' → logprob: -7.932781219482422
    7. '                   ' → logprob: -8.557781219482422
    8. '    
' → logprob: -8.682781219482422
    9. '            
' → logprob: -9.057781219482422
    10. '\n' → logprob: -9.682781219482422

Token 563: ' rhs' (ID: 29564)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.42109155654907227
    2. 'b' → logprob: -1.1710915565490723
    3. 'rhs' (adapté à ' rhs') → logprob: -3.7960915565490723
    4. '               ' → logprob: -5.171091556549072
    5. ' right' → logprob: -5.421091556549072
    6. ' rhs' → logprob: -7.671091556549072
    7. ' b' → logprob: -7.921091556549072
    8. '           ' → logprob: -9.046091079711914
    9. '       ' → logprob: -10.171091079711914
    10. 'op' → logprob: -10.296091079711914

Token 564: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324605919420719
    2. '=' → logprob: -3.7732460498809814
    3. '_value' → logprob: -15.523245811462402
    4. ' ' → logprob: -16.27324676513672
    5. ',' → logprob: -16.39824676513672
    6. '_val' → logprob: -16.64824676513672
    7. 'value' → logprob: -17.02324676513672
    8. '    ' → logprob: -18.14824676513672
    9. ')' → logprob: -18.27324676513672
    10. ' =
' → logprob: -18.77324676513672

Token 565: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.005233763717114925
    2. ' stack' → logprob: -5.2552337646484375
    3. '	stack' → logprob: -17.380233764648438
    4. '(stack' → logprob: -18.755233764648438
    5. '   ' → logprob: -19.755233764648438
    6. '           ' → logprob: -19.755233764648438
    7. 'self' → logprob: -20.005233764648438
    8. '.stack' → logprob: -20.130233764648438
    9. 'Stack' → logprob: -20.255233764648438
    10. '               ' → logprob: -20.380233764648438

Token 566: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -9.088346359931165e-07
    2. 'pop' → logprob: -14.250000953674316
    3. '.' → logprob: -15.500000953674316
    4. ' .' → logprob: -17.75
    5. '	pop' → logprob: -18.375
    6. '.Pop' → logprob: -18.875
    7. ' pop' → logprob: -20.0
    8. '_pop' → logprob: -20.125
    9. '().' → logprob: -20.125
    10. '(pop' → logprob: -20.25

Token 567: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04317697137594223
    2. '()
' → logprob: -3.7931768894195557
    3. '()' → logprob: -4.043177127838135
    4. '                
' → logprob: -7.543177127838135
    5. '(rhs' → logprob: -8.293176651000977
    6. ')' → logprob: -8.418176651000977
    7. '<|end|>' → logprob: -8.418176651000977
    8. '(' → logprob: -9.168176651000977
    9. '.' → logprob: -9.168176651000977
    10. 'rhs' → logprob: -9.418176651000977

Token 568: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026624323800206184
    2. '                
' → logprob: -4.2766242027282715
    3. ' 
' → logprob: -5.0266242027282715
    4. '                ' → logprob: -5.6516242027282715
    5. ' ' → logprob: -7.4016242027282715
    6. ' ' → logprob: -7.5266242027282715
    7. '                 
' → logprob: -8.65162467956543
    8. '                
                
' → logprob: -9.27662467956543
    9. '.' → logprob: -9.40162467956543
    10. '                

' → logprob: -9.52662467956543

Token 569: ' lhs' (ID: 51302)
  Prédit: ' lhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lhs' → logprob: -0.16055209934711456
    2. 'lhs' (adapté à ' lhs') → logprob: -1.9105521440505981
    3. '               ' → logprob: -8.660552024841309
    4. 'stack' → logprob: -10.285552024841309
    5. ' stack' → logprob: -11.035552024841309
    6. ' ' → logprob: -11.160552024841309
    7. '(lhs' → logprob: -11.285552024841309
    8. 'rhs' → logprob: -11.285552024841309
    9. ' rhs' → logprob: -11.660552024841309
    10. 'self' → logprob: -11.785552024841309

Token 570: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324652671813965
    2. '=' → logprob: -3.7732465267181396
    3. ')' → logprob: -14.273246765136719
    4. ' ' → logprob: -15.023246765136719
    5. ' =
' → logprob: -16.64824676513672
    6. '<|end|>' → logprob: -17.14824676513672
    7. ' ' → logprob: -17.64824676513672
    8. '               ' → logprob: -17.64824676513672
    9. ',' → logprob: -17.89824676513672
    10. ':' → logprob: -18.02324676513672

Token 571: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.4740796685218811
    2. 'stack' → logprob: -0.9740796685218811
    3. '(stack' → logprob: -13.349080085754395
    4. '	stack' → logprob: -13.974080085754395
    5. '.stack' → logprob: -16.099079132080078
    6. '_stack' → logprob: -16.974079132080078
    7. 'stackoverflow' → logprob: -17.724079132080078
    8. 'Stack' → logprob: -17.849079132080078
    9. ' ' → logprob: -18.724079132080078
    10. '               ' → logprob: -18.724079132080078

Token 572: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.620622712536715e-05
    2. '.' → logprob: -10.000045776367188
    3. 'pop' → logprob: -14.375045776367188
    4. ' .' → logprob: -16.625045776367188
    5. '.push' → logprob: -17.125045776367188
    6. '.Pop' → logprob: -17.875045776367188
    7. ' pop' → logprob: -18.750045776367188
    8. '	pop' → logprob: -18.875045776367188
    9. ').' → logprob: -20.625045776367188
    10. '(pop' → logprob: -21.000045776367188

Token 573: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0054858373478055
    2. ')' → logprob: -5.755486011505127
    3. '<|end|>' → logprob: -7.005486011505127
    4. '                
' → logprob: -7.255486011505127
    5. '                ' → logprob: -8.255485534667969
    6. '           ' → logprob: -9.505485534667969
    7. ',' → logprob: -10.130485534667969
    8. '			' → logprob: -10.130485534667969
    9. '              ' → logprob: -10.255485534667969
    10. '  
' → logprob: -10.630485534667969

Token 574: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5311679244041443
    2. 'result' → logprob: -1.031167984008789
    3. ' result' → logprob: -2.906167984008789
    4. '                
' → logprob: -7.406167984008789
    5. '
' → logprob: -9.031167984008789
    6. 'value' → logprob: -11.281167984008789
    7. 'res' → logprob: -11.281167984008789
    8. '                ' → logprob: -12.031167984008789
    9. '			' → logprob: -12.156167984008789
    10. '                   ' → logprob: -12.281167984008789

Token 575: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0049589513801038265
    2. ' result' → logprob: -5.5049591064453125
    3. '               ' → logprob: -7.3799591064453125
    4. 'stack' → logprob: -8.504959106445312
    5. 'try' → logprob: -10.254959106445312
    6. 'res' → logprob: -11.129959106445312
    7. '```' → logprob: -13.379959106445312
    8. ' stack' → logprob: -13.504959106445312
    9. '                
' → logprob: -15.004959106445312
    10. ' try' → logprob: -15.629959106445312

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.65475082397461
    4. ':' → logprob: -18.15475082397461
    5. '.' → logprob: -20.27975082397461
    6. ' ' → logprob: -20.40475082397461
    7. ')' → logprob: -20.52975082397461
    8. ',' → logprob: -20.90475082397461
    9. 's' → logprob: -21.02975082397461
    10. 'token' → logprob: -21.52975082397461

Token 577: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.03804171830415726
    2. ' token' → logprob: -3.288041830062866
    3. '	token' → logprob: -15.663042068481445
    4. '(token' → logprob: -16.788042068481445
    5. '[token' → logprob: -17.913042068481445
    6. '   ' → logprob: -18.288042068481445
    7. '           ' → logprob: -18.663042068481445
    8. '               ' → logprob: -19.413042068481445
    9. 'tok' → logprob: -19.413042068481445
    10. '_token' → logprob: -19.788042068481445

Token 578: '.func' (ID: 39446)
  Prédit: '.func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.func' → logprob: -5.836499985889532e-05
    2. '.' → logprob: -10.0000581741333
    3. '.function' → logprob: -11.6250581741333
    4. '.fun' → logprob: -13.5000581741333
    5. ' .' → logprob: -13.6250581741333
    6. '.Func' → logprob: -14.2500581741333
    7. '.operator' → logprob: -15.7500581741333
    8. '.symbol' → logprob: -15.8750581741333
    9. '.f' → logprob: -16.500059127807617
    10. '.functional' → logprob: -16.500059127807617

Token 579: '(lhs' (ID: 142432)
  Prédit: '(lhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lhs' → logprob: -1.3856492842023727e-06
    2. '(rhs' → logprob: -14.000000953674316
    3. '(' → logprob: -14.750000953674316
    4. '(l' → logprob: -17.375001907348633
    5. '(left' → logprob: -18.625001907348633
    6. '(ls' → logprob: -18.750001907348633
    7. '(
' → logprob: -19.000001907348633
    8. 'lhs' → logprob: -19.125001907348633
    9. '(lst' → logprob: -20.250001907348633
    10. ' (' → logprob: -20.625001907348633

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007161272224038839
    2. ' ,' → logprob: -7.250716209411621
    3. ',r' → logprob: -12.125716209411621
    4. ',
' → logprob: -14.500716209411621
    5. ' rhs' → logprob: -16.125715255737305
    6. ',s' → logprob: -16.875715255737305
    7. 'rhs' → logprob: -17.000715255737305
    8. ',right' → logprob: -17.375715255737305
    9. ',b' → logprob: -18.250715255737305
    10. '(rhs' → logprob: -18.375715255737305

Token 581: ' rhs' (ID: 29564)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' → logprob: -0.008616935461759567
    2. ' rhs' → logprob: -4.758616924285889
    3. '(rhs' → logprob: -13.008617401123047
    4. '_rhs' → logprob: -16.133617401123047
    5. '   ' → logprob: -19.133617401123047
    6. 'r' → logprob: -19.883617401123047
    7. 'rh' → logprob: -20.258617401123047
    8. ' ' → logprob: -20.633617401123047
    9. 'rsa' → logprob: -21.258617401123047
    10. '
' → logprob: -21.383617401123047

Token 582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031812789384275675
    2. ')
' → logprob: -5.753181457519531
    3. '               ' → logprob: -13.128181457519531
    4. ')
' → logprob: -14.003181457519531
    5. ' )' → logprob: -15.128181457519531
    6. ')

' → logprob: -16.00318145751953
    7. ')`' → logprob: -16.62818145751953
    8. '           ' → logprob: -17.12818145751953
    9. '<|end|>' → logprob: -17.12818145751953
    10. '                   ' → logprob: -17.37818145751953

Token 583: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.810037742368877e-05
    2. 'stack' → logprob: -11.375038146972656
    3. '                
' → logprob: -11.375038146972656
    4. '           ' → logprob: -12.375038146972656
    5. '```' → logprob: -12.625038146972656
    6. ' stack' → logprob: -13.000038146972656
    7. '                   ' → logprob: -13.125038146972656
    8. '       ' → logprob: -14.375038146972656
    9. '<|end|>' → logprob: -14.625038146972656
    10. '              ' → logprob: -14.750038146972656

Token 584: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -4.572941179503687e-05
    2. ' stack' → logprob: -10.250045776367188
    3. '               ' → logprob: -11.500045776367188
    4. '           ' → logprob: -15.875045776367188
    5. '	stack' → logprob: -17.500045776367188
    6. '                   ' → logprob: -18.625045776367188
    7. '       ' → logprob: -18.750045776367188
    8. '                
' → logprob: -19.375045776367188
    9. '.stack' → logprob: -19.375045776367188
    10. 'self' → logprob: -19.375045776367188

Token 585: '.push' (ID: 4885)
  Prédit: '.push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -4.5491004129871726e-05
    2. '.' → logprob: -10.000045776367188
    3. '.pop' → logprob: -17.875045776367188
    4. ' .' → logprob: -18.500045776367188
    5. 'push' → logprob: -18.625045776367188
    6. '.Push' → logprob: -18.875045776367188
    7. '.put' → logprob: -19.000045776367188
    8. ').' → logprob: -19.125045776367188
    9. '.enqueue' → logprob: -19.500045776367188
    10. '.append' → logprob: -19.875045776367188

Token 586: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -7.493430894101039e-05
    2. 'result' → logprob: -9.500075340270996
    3. '(' → logprob: -17.62507438659668
    4. ' result' → logprob: -18.12507438659668
    5. '=result' → logprob: -20.50007438659668
    6. ',result' → logprob: -22.12507438659668
    7. '	result' → logprob: -22.25007438659668
    8. '[result' → logprob: -22.37507438659668
    9. '(results' → logprob: -22.50007438659668
    10. '(
' → logprob: -23.00007438659668

Token 587: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20276501774787903
    2. ')' → logprob: -1.7027649879455566
    3. ')
' → logprob: -7.452764987945557
    4. '<|end|>' → logprob: -7.702764987945557
    5. '       ' → logprob: -8.577765464782715
    6. '
' → logprob: -10.327765464782715
    7. '<|end|>' → logprob: -10.952765464782715
    8. '               ' → logprob: -11.077765464782715
    9. ')return' → logprob: -11.327765464782715
    10. '```' → logprob: -11.827765464782715

Token 588: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015337858349084854
    2. '       ' → logprob: -6.5015339851379395
    3. '
' → logprob: -10.626533508300781
    4. 'else' → logprob: -12.626533508300781
    5. '        
' → logprob: -13.876533508300781
    6. 'return' → logprob: -14.001533508300781
    7. '	       ' → logprob: -14.876533508300781
    8. '            
' → logprob: -15.001533508300781
    9. 'elif' → logprob: -15.001533508300781
    10. '		' → logprob: -15.001533508300781

Token 589: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1609409749507904
    2. 'else' (adapté à ' else') → logprob: -1.9109410047531128
    3. ' else' → logprob: -7.535941123962402
    4. 'elif' → logprob: -9.160941123962402
    5. '       ' → logprob: -9.535941123962402
    6. '          ' → logprob: -13.285941123962402
    7. '	       ' → logprob: -13.660941123962402
    8. '         ' → logprob: -14.035941123962402
    9. ' elif' → logprob: -14.785941123962402
    10. '```' → logprob: -14.910941123962402

Token 590: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25683829188346863
    2. ':' → logprob: -1.506838321685791
    3. '               ' → logprob: -5.381838321685791
    4. '           ' → logprob: -9.006837844848633
    5. '       ' → logprob: -9.381837844848633
    6. ':
' → logprob: -11.006837844848633
    7. '):
' → logprob: -11.131837844848633
    8. ' :
' → logprob: -11.256837844848633
    9. ':

' → logprob: -11.756837844848633
    10. '                   ' → logprob: -12.131837844848633

Token 591: '               ' (ID: 506)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.01267716009169817
    2. '       ' → logprob: -5.137677192687988
    3. '               ' → logprob: -5.137677192687988
    4. ' stack' → logprob: -7.137677192687988
    5. '           ' → logprob: -10.137677192687988
    6. '   ' → logprob: -11.387677192687988
    7. '	stack' → logprob: -12.387677192687988
    8. '                   ' → logprob: -13.637677192687988
    9. '```' → logprob: -13.762677192687988
    10. ' ' → logprob: -14.512677192687988

Token 592: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0003469057264737785
    2. ' stack' → logprob: -8.000347137451172
    3. '               ' → logprob: -11.500347137451172
    4. '           ' → logprob: -14.250347137451172
    5. '   ' → logprob: -15.000347137451172
    6. '       ' → logprob: -16.000347137451172
    7. '                   ' → logprob: -16.125347137451172
    8. '	stack' → logprob: -16.625347137451172
    9. ' ' → logprob: -17.375347137451172
    10. '  ' → logprob: -18.250347137451172

Token 593: '.push' (ID: 4885)
  Prédit: '.push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -1.7432603272027336e-06
    2. '.' → logprob: -13.500001907348633
    3. '.pop' → logprob: -15.625001907348633
    4. 'push' → logprob: -16.250001907348633
    5. ').' → logprob: -17.375001907348633
    6. '.append' → logprob: -18.625001907348633
    7. ' .' → logprob: -18.750001907348633
    8. '().' → logprob: -20.000001907348633
    9. '.Push' → logprob: -20.500001907348633
    10. '_push' → logprob: -20.500001907348633

Token 594: '(token' (ID: 23460)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -9.686778503237292e-05
    2. ' token' → logprob: -9.250097274780273
    3. '(token' → logprob: -14.250097274780273
    4. '	token' → logprob: -21.375097274780273
    5. 'float' → logprob: -21.750097274780273
    6. '   ' → logprob: -22.500097274780273
    7. '[token' → logprob: -22.500097274780273
    8. 'ticket' → logprob: -23.500097274780273
    9. ' ' → logprob: -23.875097274780273
    10. '.token' → logprob: -24.000097274780273

Token 595: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0007175540085881948
    2. '.' → logprob: -7.250717639923096
    3. ' .' → logprob: -11.875717163085938
    4. ').' → logprob: -14.250717163085938
    5. '.val' → logprob: -16.375717163085938
    6. '.values' → logprob: -17.250717163085938
    7. 'value' → logprob: -17.375717163085938
    8. '.Value' → logprob: -18.500717163085938
    9. ')' → logprob: -18.750717163085938
    10. ' ' → logprob: -19.375717163085938

Token 596: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.570319702499546e-05
    2. ')
' → logprob: -11.250025749206543
    3. ' )' → logprob: -11.375025749206543
    4. '       ' → logprob: -14.125025749206543
    5. ')return' → logprob: -14.875025749206543
    6. '           ' → logprob: -16.625024795532227
    7. '<|end|>' → logprob: -17.250024795532227
    8. '               ' → logprob: -18.375024795532227
    9. ')#' → logprob: -18.625024795532227
    10. '   ' → logprob: -18.625024795532227

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003054301778320223
    2. 'return' → logprob: -8.25030517578125
    3. ' return' → logprob: -10.75030517578125
    4. '        
' → logprob: -11.37530517578125
    5. '
' → logprob: -11.75030517578125
    6. '<|end|>' → logprob: -13.37530517578125
    7. '	' → logprob: -15.00030517578125
    8. '      ' → logprob: -15.12530517578125
    9. '   ' → logprob: -15.62530517578125
    10. '	return' → logprob: -15.75030517578125

Token 598: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.019198182970285416
    2. '       ' → logprob: -4.019198417663574
    3. ' return' → logprob: -6.894198417663574
    4. 'if' (adapté à ' if') → logprob: -10.394198417663574
    5. '	return' → logprob: -13.394198417663574
    6. ' if' → logprob: -13.894198417663574
    7. '
' → logprob: -15.144198417663574
    8. '```' → logprob: -15.144198417663574
    9. 'result' → logprob: -15.769198417663574
    10. 'assert' → logprob: -16.519197463989258

Token 599: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.07889430224895477
    2. 'stack' → logprob: -2.5788943767547607
    3. '	stack' → logprob: -12.82889461517334
    4. '(stack' → logprob: -13.45389461517334
    5. ' ' → logprob: -16.078893661499023
    6. '   ' → logprob: -16.078893661499023
    7. '_stack' → logprob: -16.953893661499023
    8. 'Stack' → logprob: -17.078893661499023
    9. '>' → logprob: -17.328893661499023
    10. '.stack' → logprob: -17.578893661499023

Token 600: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -7.672236824873835e-05
    2. '.' → logprob: -9.500076293945312
    3. ' .' → logprob: -13.375076293945312
    4. 'size' → logprob: -16.000076293945312
    5. '.stack' → logprob: -16.750076293945312
    6. '().' → logprob: -17.375076293945312
    7. ').' → logprob: -17.750076293945312
    8. '	size' → logprob: -18.375076293945312
    9. ' size' → logprob: -18.625076293945312
    10. '.score' → logprob: -18.875076293945312

Token 601: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005891331238672137
    2. '()!=' → logprob: -7.500589370727539
    3. '()==' → logprob: -10.750589370727539
    4. '()<' → logprob: -11.250589370727539
    5. ' ()' → logprob: -13.375589370727539
    6. '()>' → logprob: -16.37558937072754
    7. '()<<' → logprob: -16.62558937072754
    8. ')' → logprob: -17.75058937072754
    9. '()
' → logprob: -18.50058937072754
    10. ' !=' → logprob: -18.62558937072754

Token 602: ' !=' (ID: 1666)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10103218257427216
    2. '()!=' → logprob: -2.726032257080078
    3. ' !=' → logprob: -3.601032257080078
    4. '!=' → logprob: -6.726032257080078
    5. '1' → logprob: -6.976032257080078
    6. '()==' → logprob: -8.101032257080078
    7. ' ' → logprob: -8.601032257080078
    8. ')' → logprob: -8.976032257080078
    9. '()<' → logprob: -9.101032257080078
    10. '0' → logprob: -9.351032257080078

Token 603: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004886920796707273
    2. ' ' → logprob: -7.625488758087158
    3. '   ' → logprob: -14.37548828125
    4. '```' → logprob: -16.62548828125
    5. '  ' → logprob: -17.87548828125
    6. '<|end|>' → logprob: -18.12548828125
    7. '    ' → logprob: -18.50048828125
    8. '0' → logprob: -18.75048828125
    9. '(' → logprob: -19.00048828125
    10. '[' → logprob: -19.25048828125

Token 604: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -20.75
    5. '۱' → logprob: -21.875
    6. 'exact' → logprob: -23.25
    7. '１' → logprob: -23.625
    8. '  ' → logprob: -23.875
    9. '<|end|>' → logprob: -24.125
    10. '    ' → logprob: -24.375

Token 605: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038061462342739105
    2. ':
' → logprob: -3.2880613803863525
    3. ':return' → logprob: -11.163061141967773
    4. '       ' → logprob: -13.538061141967773
    5. ' or' → logprob: -14.038061141967773
    6. ':

' → logprob: -14.038061141967773
    7. '.' → logprob: -14.538061141967773
    8. ':
' → logprob: -14.663061141967773
    9. ')' → logprob: -15.038061141967773
    10. ' :' → logprob: -15.288061141967773

Token 606: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048633918166160583
    2. ':' → logprob: -3.4236338138580322
    3. ':
' → logprob: -4.423634052276611
    4. ' raise' → logprob: -6.423634052276611
    5. '       ' → logprob: -7.298634052276611
    6. 'raise' → logprob: -7.673634052276611
    7. '               ' → logprob: -10.173633575439453
    8. '          ' → logprob: -11.173633575439453
    9. ',' → logprob: -11.673633575439453
    10. '	raise' → logprob: -11.673633575439453

Token 607: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.5770959854125977
    2. 'raise' (adapté à ' raise') → logprob: -0.8270959854125977
    3. '           ' → logprob: -7.202095985412598
    4. '	raise' → logprob: -7.827095985412598
    5. '_raise' → logprob: -12.202095985412598
    6. '   ' → logprob: -13.577095985412598
    7. '```' → logprob: -13.702095985412598
    8. 'Raise' → logprob: -13.952095985412598
    9. '.raise' → logprob: -14.327095985412598
    10. '            ' → logprob: -14.452095985412598

Token 608: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.04858975484967232
    2. ' Value' → logprob: -3.0485897064208984
    3. 'value' → logprob: -14.173589706420898
    4. 'Runtime' → logprob: -14.673589706420898
    5. '	Value' → logprob: -15.048589706420898
    6. ' ' → logprob: -15.298589706420898
    7. ' value' → logprob: -15.423589706420898
    8. '_value' → logprob: -15.423589706420898
    9. ' Runtime' → logprob: -16.5485897064209
    10. '(Value' → logprob: -16.5485897064209

Token 609: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.4849443838757e-06
    2. 'Value' → logprob: -12.625004768371582
    3. 'rror' → logprob: -13.750004768371582
    4. 'alue' → logprob: -16.750003814697266
    5. 'SError' → logprob: -18.250003814697266
    6. 'LError' → logprob: -20.125003814697266
    7. 'Errors' → logprob: -21.000003814697266
    8. '   ' → logprob: -21.250003814697266
    9. '               ' → logprob: -21.750003814697266
    10. 'Exception' → logprob: -22.000003814697266

Token 610: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00020425561524461955
    2. '(' → logprob: -8.500204086303711
    3. '(f' → logprob: -14.625204086303711
    4. '(
' → logprob: -16.62520408630371
    5. '('' → logprob: -16.62520408630371
    6. '(("' → logprob: -19.50020408630371
    7. '()' → logprob: -19.62520408630371
    8. '"' → logprob: -19.87520408630371
    9. '("")' → logprob: -20.25020408630371
    10. '("'' → logprob: -21.37520408630371

Token 611: 'Invalid' (ID: 12278)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.2984643578529358
    2. 'Invalid' → logprob: -1.548464298248291
    3. 'Too' → logprob: -3.548464298248291
    4. 'Malformed' → logprob: -4.923464298248291
    5. ' The' → logprob: -5.548464298248291
    6. '"' → logprob: -5.798464298248291
    7. '"The' → logprob: -7.173464298248291
    8. 'Stack' → logprob: -7.173464298248291
    9. ' Invalid' → logprob: -8.79846477508545
    10. 'Incomplete' → logprob: -8.92346477508545

Token 612: ' R' (ID: 460)
  Prédit: ' expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expression' → logprob: -0.07277864962816238
    2. 'expression' → logprob: -2.6977787017822266
    3. 'Expression' → logprob: -6.197778701782227
    4. 'R' → logprob: -8.447778701782227
    5. ' R' → logprob: -8.697778701782227
    6. ' input' → logprob: -9.197778701782227
    7. ' syntax' → logprob: -9.572778701782227
    8. 'syntax' → logprob: -9.822778701782227
    9. ' Expression' → logprob: -10.322778701782227
    10. 'token' → logprob: -10.572778701782227

Token 613: 'PN' (ID: 14513)
  Prédit: 'PN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PN' → logprob: 0.0
    2. 'P' → logprob: -16.875
    3. ' PN' → logprob: -19.375
    4. 'NP' → logprob: -20.375
    5. 'PAN' → logprob: -21.5
    6. 'pn' → logprob: -21.75
    7. 'PT' → logprob: -22.0
    8. ' expression' → logprob: -22.0
    9. ' stack' → logprob: -22.25
    10. '_expression' → logprob: -22.25

Token 614: ' expression' (ID: 12973)
  Prédit: ' expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expression' → logprob: -0.006745447404682636
    2. 'expression' → logprob: -5.006745338439941
    3. '_expression' → logprob: -10.756745338439941
    4. 'Expression' → logprob: -11.881745338439941
    5. ':' → logprob: -14.506745338439941
    6. ' Expression' → logprob: -14.631745338439941
    7. '(expression' → logprob: -15.006745338439941
    8. '-expression' → logprob: -15.381745338439941
    9. ' input' → logprob: -16.006746292114258
    10. ')' → logprob: -16.506746292114258

Token 615: ':' (ID: 25)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.6192355751991272
    2. '       ' → logprob: -0.9942355751991272
    3. '")' → logprob: -2.9942355155944824
    4. ')
' → logprob: -3.4942355155944824
    5. ')' → logprob: -4.619235515594482
    6. ':' → logprob: -7.494235515594482
    7. ')")
' → logprob: -8.61923599243164
    8. ',' → logprob: -8.86923599243164
    9. '"' → logprob: -8.99423599243164
    10. ' ")
' → logprob: -9.36923599243164

Token 616: ' stack' (ID: 10825)
  Prédit: ' Stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stack' → logprob: -0.9917545318603516
    2. ' stack' → logprob: -1.1167545318603516
    3. '"' → logprob: -2.1167545318603516
    4. ' f' → logprob: -2.4917545318603516
    5. 'Stack' → logprob: -2.9917545318603516
    6. ')' → logprob: -4.741754531860352
    7. ' More' → logprob: -5.116754531860352
    8. ' The' → logprob: -5.116754531860352
    9. ' Multiple' → logprob: -5.366754531860352
    10. '")' → logprob: -5.491754531860352

Token 617: ' should' (ID: 1757)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.6521337628364563
    2. ' has' → logprob: -1.6521337032318115
    3. 'size' → logprob: -2.0271337032318115
    4. ' contains' → logprob: -2.2771337032318115
    5. ' does' → logprob: -3.1521337032318115
    6. ' should' → logprob: -5.402133941650391
    7. '.size' → logprob: -5.902133941650391
    8. 'has' → logprob: -7.152133941650391
    9. '.' → logprob: -7.277133941650391
    10. 'contains' → logprob: -7.277133941650391

Token 618: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.26140156388282776
    2. ' contain' → logprob: -1.6364015340805054
    3. 'have' → logprob: -3.511401653289795
    4. 'contain' → logprob: -5.511401653289795
    5. '_have' → logprob: -7.136401653289795
    6. '<|end|>' → logprob: -7.886401653289795
    7. 'size' → logprob: -9.511401176452637
    8. ' size' → logprob: -10.136401176452637
    9. '.have' → logprob: -10.386401176452637
    10. ' be' → logprob: -10.761401176452637

Token 619: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.49541938304901123
    2. 'exact' → logprob: -1.2454193830490112
    3. '1' → logprob: -2.370419502258301
    4. ' one' → logprob: -5.120419502258301
    5. 'one' → logprob: -6.245419502258301
    6. 'only' → logprob: -7.495419502258301
    7. ' only' → logprob: -7.495419502258301
    8. ' ' → logprob: -8.3704195022583
    9. ' exact' → logprob: -9.3704195022583
    10. 'size' → logprob: -11.1204195022583

Token 620: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.34661099314689636
    2. '1' → logprob: -1.3466110229492188
    3. 'one' → logprob: -3.8466110229492188
    4. ' ' → logprob: -4.471611022949219
    5. 'One' → logprob: -11.471611022949219
    6. '_one' → logprob: -12.721611022949219
    7. '   ' → logprob: -13.096611022949219
    8. '```' → logprob: -14.096611022949219
    9. ' exactly' → logprob: -14.221611022949219
    10. '  ' → logprob: -14.596611022949219

Token 621: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.060933202505111694
    2. 'element' → logprob: -3.5609331130981445
    3. ' value' → logprob: -3.8109331130981445
    4. ' item' → logprob: -5.4359331130981445
    5. 'value' → logprob: -6.0609331130981445
    6. ' result' → logprob: -6.8109331130981445
    7. 'item' → logprob: -7.4359331130981445
    8. 'result' → logprob: -8.685933113098145
    9. ' ' → logprob: -11.685933113098145
    10. '```' → logprob: -12.310933113098145

Token 622: ' after' (ID: 1934)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.4807768762111664
    2. '       ' → logprob: -1.1057769060134888
    3. ')
' → logprob: -3.605776786804199
    4. ',' → logprob: -4.105776786804199
    5. '")' → logprob: -5.480776786804199
    6. ')' → logprob: -7.230776786804199
    7. ' but' → logprob: -7.355776786804199
    8. '
' → logprob: -7.730776786804199
    9. '.")
' → logprob: -7.730776786804199
    10. ')")
' → logprob: -8.1057767868042

Token 623: ' evaluation' (ID: 21407)
  Prédit: ' evaluation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluation' → logprob: -0.4740963280200958
    2. 'evaluation' → logprob: -0.9740962982177734
    3. 'completion' → logprob: -12.349096298217773
    4. ' processing' → logprob: -12.474096298217773
    5. 'evalu' → logprob: -12.599096298217773
    6. 'evaluate' → logprob: -12.599096298217773
    7. 'processing' → logprob: -13.099096298217773
    8. ' evaluating' → logprob: -13.974096298217773
    9. ' completion' → logprob: -14.224096298217773
    10. 'eval' → logprob: -15.349096298217773

Token 624: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.10344234108924866
    2. ')
' → logprob: -3.228442430496216
    3. ')")
' → logprob: -3.353442430496216
    4. '       ' → logprob: -3.978442430496216
    5. '")' → logprob: -5.853442192077637
    6. ')' → logprob: -6.728442192077637
    7. '.")
' → logprob: -7.478442192077637
    8. '")
' → logprob: -9.353442192077637
    9. '}")
' → logprob: -9.603442192077637
    10. '   ' → logprob: -9.728442192077637

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024217949248850346
    2. '
' → logprob: -6.752421855926514
    3. '	' → logprob: -7.502421855926514
    4. 'return' → logprob: -7.752421855926514
    5. ' return' → logprob: -8.502421379089355
    6. '	return' → logprob: -10.377421379089355
    7. '<|end|>' → logprob: -11.627421379089355
    8. '        
' → logprob: -11.877421379089355
    9. '
' → logprob: -12.002421379089355
    10. '   ' → logprob: -12.002421379089355

Token 626: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04898381978273392
    2. 'return' (adapté à ' return') → logprob: -3.0489838123321533
    3. ' return' → logprob: -7.923984050750732
    4. '	' → logprob: -10.423983573913574
    5. '	return' → logprob: -12.798983573913574
    6. '```' → logprob: -14.048983573913574
    7. '   ' → logprob: -14.298983573913574
    8. '
' → logprob: -15.048983573913574
    9. '        
' → logprob: -16.54898452758789
    10. '      ' → logprob: -16.79898452758789

Token 627: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07889000326395035
    2. ' stack' → logprob: -2.578890085220337
    3. '	stack' → logprob: -16.078889846801758
    4. '(stack' → logprob: -16.453889846801758
    5. '   ' → logprob: -18.453889846801758
    6. ' ' → logprob: -19.328889846801758
    7. 'stock' → logprob: -19.328889846801758
    8. '_stack' → logprob: -19.453889846801758
    9. '.stack' → logprob: -19.578889846801758
    10. 'Stack' → logprob: -19.828889846801758

Token 628: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -1.3856492842023727e-06
    2. '._' → logprob: -14.000000953674316
    3. 'pop' → logprob: -15.250000953674316
    4. '.' → logprob: -15.375000953674316
    5. '.peek' → logprob: -18.125001907348633
    6. ' .' → logprob: -18.750001907348633
    7. '	pop' → logprob: -19.250001907348633
    8. '.Pop' → logprob: -19.875001907348633
    9. '.top' → logprob: -20.375001907348633
    10. ' pop' → logprob: -20.750001907348633

Token 629: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043925188947468996
    2. '()
' → logprob: -7.750439167022705
    3. '(' → logprob: -12.250439643859863
    4. '()\' → logprob: -13.125439643859863
    5. '()

' → logprob: -13.750439643859863
    6. '()`' → logprob: -15.375439643859863
    7. '(
' → logprob: -15.625439643859863
    8. ' ()' → logprob: -16.250438690185547
    9. '()
' → logprob: -16.250438690185547
    10. '()"' → logprob: -17.250438690185547

Token 630: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0015516405692324042
    2. 'def' → logprob: -6.751551628112793
    3. 'class' → logprob: -8.626551628112793
    4. '```' → logprob: -9.001551628112793
    5. '<|end|>' → logprob: -9.751551628112793
    6. 'import' → logprob: -12.001551628112793
    7. '<|end|>' → logprob: -12.751551628112793
    8. '[' → logprob: -12.876551628112793
    9. '
' → logprob: -13.626551628112793
    10. ' #' → logprob: -13.626551628112793

Token 631: ' ---' (ID: 26691)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0009281373349949718
    2. 'operator' → logprob: -7.375927925109863
    3. 'def' → logprob: -8.250927925109863
    4. 'import' → logprob: -10.625927925109863
    5. 'if' → logprob: -11.625927925109863
    6. '```' → logprob: -12.750927925109863
    7. 'class' → logprob: -13.125927925109863
    8. '(operator' → logprob: -15.125927925109863
    9. 'OP' → logprob: -15.750927925109863
    10. '@' → logprob: -16.12592887878418

Token 632: ' Factory' (ID: 28905)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2873052656650543
    2. 'def' → logprob: -1.537305235862732
    3. 'import' → logprob: -4.0373053550720215
    4. 'if' → logprob: -4.5373053550720215
    5. 'class' → logprob: -5.2873053550720215
    6. 'operator' → logprob: -7.0373053550720215
    7. 'from' → logprob: -9.287304878234863
    8. 'Custom' → logprob: -9.537304878234863
    9. 'Operator' → logprob: -9.662304878234863
    10. 'Tests' → logprob: -10.037304878234863

Token 633: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02979261800646782
    2. 'def' → logprob: -3.529792547225952
    3. ' class' → logprob: -10.904792785644531
    4. '
' → logprob: -11.404792785644531
    5. '(class' → logprob: -12.154792785644531
    6. '<|end|>' → logprob: -12.279792785644531
    7. '<|end|>' → logprob: -14.404792785644531
    8. '(
' → logprob: -14.779792785644531
    9. '(' → logprob: -15.154792785644531
    10. '```' → logprob: -15.404792785644531

Token 634: ' operators' (ID: 29893)
  Prédit: 'Stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Stack' → logprob: -0.5328210592269897
    2. ' Stack' → logprob: -1.1578210592269897
    3. ' stack' → logprob: -3.4078211784362793
    4. 'stack' → logprob: -4.907821178436279
    5. 'Evaluator' → logprob: -4.907821178436279
    6. ' creating' → logprob: -5.032821178436279
    7. 'default' → logprob: -5.157821178436279
    8. 'the' → logprob: -5.157821178436279
    9. ' the' → logprob: -5.282821178436279
    10. 'Stacks' → logprob: -5.782821178436279

Token 635: ' --' (ID: 2230)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35876545310020447
    2. 'operator' → logprob: -1.3587654829025269
    3. 'class' → logprob: -3.2337653636932373
    4. '_operator' → logprob: -5.608765602111816
    5. '(operator' → logprob: -7.608765602111816
    6. '

' → logprob: -8.358765602111816
    7. '_OPERATOR' → logprob: -8.733765602111816
    8. '#' → logprob: -8.858765602111816
    9. ' operator' → logprob: -9.358765602111816
    10. '```' → logprob: -9.733765602111816

Token 636: '-

' (ID: 16364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025130433961749077
    2. 'operator' → logprob: -4.275130271911621
    3. 'class' → logprob: -4.525130271911621
    4. '_operator' → logprob: -9.900130271911621
    5. 'import' → logprob: -11.900130271911621
    6. ' operator' → logprob: -12.150130271911621
    7. '```' → logprob: -12.650130271911621
    8. ' def' → logprob: -13.150130271911621
    9. '
' → logprob: -13.275130271911621
    10. '_OPERATOR' → logprob: -13.525130271911621

Token 637: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014900978654623032
    2. 'operator' → logprob: -4.264901161193848
    3. 'class' → logprob: -7.264901161193848
    4. 'default' → logprob: -10.514901161193848
    5. 'DEFAULT' → logprob: -12.389901161193848
    6. 'import' → logprob: -13.389901161193848
    7. ' def' → logprob: -13.639901161193848
    8. '```' → logprob: -13.639901161193848
    9. 'OP' → logprob: -14.389901161193848
    10. '_operator' → logprob: -14.639901161193848

Token 638: ' get' (ID: 717)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.8164910078048706
    2. ' get' → logprob: -1.5664910078048706
    3. ' default' → logprob: -2.31649112701416
    4. ' create' → logprob: -2.56649112701416
    5. 'get' → logprob: -2.69149112701416
    6. 'operator' → logprob: -2.94149112701416
    7. 'create' → logprob: -3.69149112701416
    8. ' operator' → logprob: -3.94149112701416
    9. ' basic' → logprob: -6.06649112701416
    10. 'standard' → logprob: -6.44149112701416

Token 639: '_operator' (ID: 97926)
  Prédit: '_operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operator' → logprob: -0.20224785804748535
    2. '_default' → logprob: -2.4522478580474854
    3. '_standard' → logprob: -2.7022478580474854
    4. '_basic' → logprob: -3.7022478580474854
    5. 'operator' → logprob: -5.577247619628906
    6. 'default' → logprob: -7.202247619628906
    7. '_builtin' → logprob: -7.452247619628906
    8. 'standard' → logprob: -9.452247619628906
    9. 'basic' → logprob: -9.952247619628906
    10. '_' → logprob: -11.202247619628906

Token 640: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.007772490382194519
    2. '_function' → logprob: -5.632772445678711
    3. '_functions' → logprob: -6.132772445678711
    4. 's' → logprob: -6.757772445678711
    5. '_func' → logprob: -7.757772445678711
    6. '_factory' → logprob: -9.007772445678711
    7. '_mapping' → logprob: -9.382772445678711
    8. '_funcs' → logprob: -9.382772445678711
    9. '_symbol' → logprob: -9.632772445678711
    10. '_fn' → logprob: -11.257772445678711

Token 641: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029986632987856865
    2. '():' → logprob: -3.529986619949341
    3. '():
' → logprob: -8.404986381530762
    4. '()->' → logprob: -11.529986381530762
    5. ' ()' → logprob: -13.404986381530762
    6. ' ():' → logprob: -14.529986381530762
    7. '():
' → logprob: -15.404986381530762
    8. '()>' → logprob: -16.404987335205078
    9. '()=>' → logprob: -16.779987335205078
    10. '():

' → logprob: -17.029987335205078

Token 642: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16211003065109253
    2. '():' → logprob: -1.9121100902557373
    3. '()->' → logprob: -6.537109851837158
    4. '():
' → logprob: -7.787109851837158
    5. '->' → logprob: -11.162110328674316
    6. ' ():' → logprob: -13.287110328674316
    7. ' ()' → logprob: -13.412110328674316
    8. '():
' → logprob: -13.662110328674316
    9. ' ->' → logprob: -14.162110328674316
    10. ':' → logprob: -14.912110328674316

Token 643: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.0001129602751461789
    2. ' Dict' → logprob: -9.250112533569336
    3. 'dict' → logprob: -11.000112533569336
    4. '{' → logprob: -17.250112533569336
    5. ' dict' → logprob: -17.250112533569336
    6. '{
' → logprob: -17.625112533569336
    7. '_dict' → logprob: -19.750112533569336
    8. '```' → logprob: -19.750112533569336
    9. '.Dict' → logprob: -20.000112533569336
    10. 'Dic' → logprob: -22.750112533569336

Token 644: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.87500286102295
    3. '[
' → logprob: -15.00000286102295
    4. 'str' → logprob: -16.000003814697266
    5. '```' → logprob: -17.625003814697266
    6. '[String' → logprob: -18.250003814697266
    7. '(str' → logprob: -18.875003814697266
    8. '[string' → logprob: -19.000003814697266
    9. ' [' → logprob: -19.750003814697266
    10. '\[' → logprob: -20.375003814697266

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8921695047756657e-05
    2. '[' → logprob: -10.625028610229492
    3. ' ,' → logprob: -12.500028610229492
    4. ',[' → logprob: -15.000028610229492
    5. ',
' → logprob: -15.500028610229492
    6. ',float' → logprob: -15.875028610229492
    7. '```' → logprob: -16.500028610229492
    8. '   ' → logprob: -16.625028610229492
    9. ' ' → logprob: -18.750028610229492
    10. ',C' → logprob: -18.875028610229492

Token 646: ' Callable' (ID: 94560)
  Prédit: 'Callable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Callable' → logprob: -0.003178901970386505
    2. ' Callable' → logprob: -5.75317907333374
    3. 'Call' → logprob: -14.503178596496582
    4. '```' → logprob: -15.253178596496582
    5. ' ' → logprob: -15.753178596496582
    6. 'call' → logprob: -16.1281795501709
    7. '_callable' → logprob: -16.3781795501709
    8. 'float' → logprob: -16.7531795501709
    9. '   ' → logprob: -17.2531795501709
    10. '  ' → logprob: -17.3781795501709

Token 647: '[[' (ID: 26245)
  Prédit: '[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.125005722045898
    3. '[...,' → logprob: -14.625005722045898
    4. ']' → logprob: -17.3750057220459
    5. '```' → logprob: -18.1250057220459
    6. '[
' → logprob: -18.5000057220459
    7. '[['' → logprob: -19.2500057220459
    8. ' [[' → logprob: -19.5000057220459
    9. '
' → logprob: -19.8750057220459
    10. ']:' → logprob: -20.3750057220459

Token 648: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.451116051815916e-05
    2. ' float' → logprob: -10.625024795532227
    3. '(float' → logprob: -16.875024795532227
    4. ',float' → logprob: -16.875024795532227
    5. 'flo' → logprob: -17.750024795532227
    6. '   ' → logprob: -17.750024795532227
    7. '```' → logprob: -18.000024795532227
    8. '	float' → logprob: -18.125024795532227
    9. '<float' → logprob: -18.250024795532227
    10. '=float' → logprob: -18.750024795532227

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007628281135112047
    2. ',float' → logprob: -4.882628440856934
    3. ' ,' → logprob: -11.007628440856934
    4. 'float' → logprob: -12.507628440856934
    5. ',double' → logprob: -14.007628440856934
    6. ',f' → logprob: -14.757628440856934
    7. ',int' → logprob: -15.257628440856934
    8. ',bool' → logprob: -16.007627487182617
    9. ',
' → logprob: -17.257627487182617
    10. ',None' → logprob: -17.382627487182617

Token 650: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.009757863357663155
    2. ' float' → logprob: -4.634757995605469
    3. ' ' → logprob: -13.759757995605469
    4. '   ' → logprob: -15.259757995605469
    5. '	float' → logprob: -15.884757995605469
    6. ',float' → logprob: -16.13475799560547
    7. '  ' → logprob: -16.88475799560547
    8. '(float' → logprob: -16.88475799560547
    9. '```' → logprob: -17.13475799560547
    10. 'flo' → logprob: -17.38475799560547

Token 651: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -2.339278580620885e-06
    2. ',' → logprob: -14.250001907348633
    3. '],
' → logprob: -14.750001907348633
    4. ']' → logprob: -14.750001907348633
    5. ' ],' → logprob: -15.375001907348633
    6. '"],' → logprob: -15.625001907348633
    7. '),' → logprob: -16.250001907348633
    8. ']],' → logprob: -16.250001907348633
    9. '```' → logprob: -17.000001907348633
    10. '>,' → logprob: -17.000001907348633

Token 652: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.000915039679966867
    2. ' float' → logprob: -7.000915050506592
    3. '```' → logprob: -14.375914573669434
    4. '(float' → logprob: -14.500914573669434
    5. '=float' → logprob: -14.500914573669434
    6. '	float' → logprob: -15.000914573669434
    7. '<float' → logprob: -15.500914573669434
    8. 'Optional' → logprob: -15.500914573669434
    9. '[' → logprob: -15.625914573669434
    10. 'flo' → logprob: -15.625914573669434

Token 653: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.444084107875824
    2. ']:
' → logprob: -1.1940841674804688
    3. ']]:
' → logprob: -2.9440841674804688
    4. ']:
' → logprob: -6.194084167480469
    5. ']]' → logprob: -7.319084167480469
    6. ']' → logprob: -8.569084167480469
    7. ']:

' → logprob: -10.819084167480469
    8. ']>' → logprob: -10.819084167480469
    9. '"]:' → logprob: -11.819084167480469
    10. '"]:
' → logprob: -12.194084167480469

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002028251619776711
    2. ':' → logprob: -9.625203132629395
    3. ' return' → logprob: -10.000203132629395
    4. 'def' → logprob: -10.500203132629395
    5. '```' → logprob: -10.625203132629395
    6. 'return' → logprob: -11.250203132629395
    7. '{' → logprob: -11.875203132629395
    8. '{
' → logprob: -12.125203132629395
    9. ':
' → logprob: -12.500203132629395
    10. '       ' → logprob: -12.875203132629395

Token 655: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3715459406375885
    2. 'return' (adapté à ' return') → logprob: -1.3715459108352661
    3. ' return' → logprob: -2.8715460300445557
    4. '	return' → logprob: -12.621545791625977
    5. '```' → logprob: -13.496545791625977
    6. '{
' → logprob: -13.996545791625977
    7. 'import' → logprob: -14.746545791625977
    8. 'operator' → logprob: -14.746545791625977
    9. '{return' → logprob: -16.246545791625977
    10. '   ' → logprob: -16.371545791625977

Token 656: ' {
' (ID: 405)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.0477617047727108
    2. '{' → logprob: -3.6727616786956787
    3. ' {
' → logprob: -3.9227616786956787
    4. ' {' → logprob: -6.547761917114258
    5. '   ' → logprob: -11.922761917114258
    6. '{'' → logprob: -12.922761917114258
    7. '{
' → logprob: -13.547761917114258
    8. '{"' → logprob: -13.547761917114258
    9. '{

' → logprob: -15.297761917114258
    10. ' ' → logprob: -15.422761917114258

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08904186636209488
    2. ''+' → logprob: -3.3390419483184814
    3. ''' → logprob: -3.4640419483184814
    4. '"' → logprob: -4.464041709899902
    5. '"+' → logprob: -5.464041709899902
    6. '"+"' → logprob: -6.089041709899902
    7. '   ' → logprob: -8.339041709899902
    8. '           ' → logprob: -9.589041709899902
    9. '+' → logprob: -10.714041709899902
    10. ''*' → logprob: -11.589041709899902

Token 658: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' (adapté à ' '+') → logprob: -0.0926114022731781
    2. '"+' → logprob: -2.467611312866211
    3. ''' → logprob: -6.467611312866211
    4. '       ' → logprob: -7.092611312866211
    5. '"+"' → logprob: -7.342611312866211
    6. '   ' → logprob: -7.467611312866211
    7. '"' → logprob: -10.967611312866211
    8. '           ' → logprob: -11.092611312866211
    9. ' '+' → logprob: -11.092611312866211
    10. '+' → logprob: -12.592611312866211

Token 659: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.01419076882302761
    2. ''' → logprob: -4.264190673828125
    3. ' ':' → logprob: -10.764190673828125
    4. '',' → logprob: -12.514190673828125
    5. 'lambda' → logprob: -14.389190673828125
    6. '":' → logprob: -14.514190673828125
    7. ''+' → logprob: -15.139190673828125
    8. ':' → logprob: -15.514190673828125
    9. '':'' → logprob: -15.639190673828125
    10. ''):' → logprob: -15.639190673828125

Token 660: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.16027651727199554
    2. ' lambda' → logprob: -1.9102765321731567
    3. '(lambda' → logprob: -9.910276412963867
    4. 'float' → logprob: -13.160276412963867
    5. '   ' → logprob: -14.910276412963867
    6. 'operator' → logprob: -15.785276412963867
    7. ' ' → logprob: -16.285276412963867
    8. ' float' → logprob: -16.785276412963867
    9. '=lambda' → logprob: -17.035276412963867
    10. '```' → logprob: -17.035276412963867

Token 661: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.579120397567749
    2. 'x' → logprob: -0.829120397567749
    3. 'a' → logprob: -5.954120635986328
    4. ' a' → logprob: -7.454120635986328
    5. ' ' → logprob: -14.204120635986328
    6. 'lambda' → logprob: -14.579120635986328
    7. '	x' → logprob: -15.704120635986328
    8. ' lambda' → logprob: -15.954120635986328
    9. 'l' → logprob: -16.079120635986328
    10. 'lhs' → logprob: -16.829120635986328

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.813969957875088e-05
    2. ',x' → logprob: -10.500067710876465
    3. ',y' → logprob: -10.875067710876465
    4. ' ,' → logprob: -11.375067710876465
    5. 'x' → logprob: -11.875067710876465
    6. 'y' → logprob: -13.000067710876465
    7. '_,' → logprob: -16.00006866455078
    8. 'a' → logprob: -16.25006866455078
    9. 'e' → logprob: -16.50006866455078
    10. ' x' → logprob: -16.75006866455078

Token 663: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0485873706638813
    2. ' y' → logprob: -3.0485873222351074
    3. ' ' → logprob: -16.923587799072266
    4. '   ' → logprob: -18.048587799072266
    5. 'x' → logprob: -18.673587799072266
    6. '	y' → logprob: -18.923587799072266
    7. '  ' → logprob: -19.298587799072266
    8. '    ' → logprob: -20.048587799072266
    9. ' ' → logprob: -21.048587799072266
    10. ''y' → logprob: -22.173587799072266

Token 664: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015169414109550416
    2. ' :' → logprob: -8.875151634216309
    3. ',' → logprob: -11.375151634216309
    4. 'x' → logprob: -15.750151634216309
    5. ':x' → logprob: -16.000152587890625
    6. ' ,' → logprob: -18.500152587890625
    7. '=' → logprob: -18.875152587890625
    8. 'y' → logprob: -19.000152587890625
    9. ' x' → logprob: -19.500152587890625
    10. ',x' → logprob: -19.875152587890625

Token 665: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02324547804892063
    2. ' x' → logprob: -3.7732455730438232
    3. '	x' → logprob: -17.023244857788086
    4. ' ' → logprob: -19.898244857788086
    5. '   ' → logprob: -19.898244857788086
    6. '(x' → logprob: -20.023244857788086
    7. '{x' → logprob: -20.648244857788086
    8. '"x' → logprob: -21.523244857788086
    9. ')x' → logprob: -21.648244857788086
    10. '$x' → logprob: -21.898244857788086

Token 666: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31337839365005493
    2. ' +' → logprob: -1.3133783340454102
    3. '+y' → logprob: -9.06337833404541
    4. '+x' → logprob: -14.81337833404541
    5. 'y' → logprob: -16.063379287719727
    6. '+
' → logprob: -16.313379287719727
    7. ' ' → logprob: -16.313379287719727
    8. ' ' → logprob: -16.438379287719727
    9. ' +
' → logprob: -17.813379287719727
    10. ' plus' → logprob: -18.438379287719727

Token 667: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931474208831787
    2. ' y' → logprob: -0.6931474208831787
    3. '    ' → logprob: -15.693147659301758
    4. '	y' → logprob: -16.318147659301758
    5. ' ' → logprob: -17.318147659301758
    6. '        ' → logprob: -18.568147659301758
    7. '       ' → logprob: -18.693147659301758
    8. '   ' → logprob: -18.693147659301758
    9. ' ' → logprob: -19.318147659301758
    10. '_y' → logprob: -19.693147659301758

Token 668: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011139074340462685
    2. ',
' → logprob: -4.511138916015625
    3. '       ' → logprob: -9.386138916015625
    4. ',
' → logprob: -12.636138916015625
    5. '   ' → logprob: -13.386138916015625
    6. ',

' → logprob: -13.636138916015625
    7. ' ,' → logprob: -13.761138916015625
    8. ',\
' → logprob: -16.261138916015625
    9. ' ,
' → logprob: -16.261138916015625
    10. '.' → logprob: -16.886138916015625

Token 669: '       ' (ID: 309)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.26478299498558044
    2. '       ' → logprob: -1.5147830247879028
    3. ''' → logprob: -4.514782905578613
    4. ' '-' → logprob: -7.264782905578613
    5. '   ' → logprob: -7.389782905578613
    6. '        ' → logprob: -9.139782905578613
    7. '-' → logprob: -9.514782905578613
    8. ''*' → logprob: -9.514782905578613
    9. ' ' → logprob: -9.889782905578613
    10. ''s' → logprob: -10.139782905578613

Token 670: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' (adapté à ' '-') → logprob: -1.8789383830153383e-05
    2. '   ' → logprob: -12.125019073486328
    3. ''*' → logprob: -12.125019073486328
    4. ' '-' → logprob: -12.375019073486328
    5. '       ' → logprob: -13.625019073486328
    6. '-' → logprob: -13.750019073486328
    7. ''' → logprob: -14.125019073486328
    8. '"-' → logprob: -14.750019073486328
    9. ' ' → logprob: -15.875019073486328
    10. '’-' → logprob: -18.375019073486328

Token 671: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5610435009002686
    2. ':' → logprob: -0.9360435009002686
    3. ' :' → logprob: -3.9360435009002686
    4. ' ':' → logprob: -4.061043739318848
    5. ''' → logprob: -8.311043739318848
    6. '   ' → logprob: -10.061043739318848
    7. '       ' → logprob: -10.436043739318848
    8. '":' → logprob: -10.561043739318848
    9. ' ' → logprob: -10.936043739318848
    10. '':'' → logprob: -11.436043739318848

Token 672: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3132745921611786
    2. 'lambda' → logprob: -1.313274621963501
    3. '(lambda' → logprob: -11.438274383544922
    4. '=lambda' → logprob: -13.688274383544922
    5. '   ' → logprob: -14.938274383544922
    6. ' lamb' → logprob: -15.063274383544922
    7. ' ' → logprob: -16.188274383544922
    8. '```' → logprob: -16.813274383544922
    9. '.lambda' → logprob: -16.813274383544922
    10. '_lambda' → logprob: -17.063274383544922

Token 673: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.048589304089546204
    2. 'x' → logprob: -3.0485892295837402
    3. ' ' → logprob: -13.798589706420898
    4. 'lambda' → logprob: -15.548589706420898
    5. ',' → logprob: -15.923589706420898
    6. '	x' → logprob: -16.1735897064209
    7. '   ' → logprob: -16.4235897064209
    8. ' lambda' → logprob: -16.5485897064209
    9. '    ' → logprob: -16.7985897064209
    10. '(x' → logprob: -16.7985897064209

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002963203703984618
    2. ' ,' → logprob: -5.877963066101074
    3. ' x' → logprob: -9.252963066101074
    4. ',x' → logprob: -10.377963066101074
    5. 'x' → logprob: -10.752963066101074
    6. ',y' → logprob: -12.502963066101074
    7. 'y' → logprob: -13.002963066101074
    8. ' ' → logprob: -13.002963066101074
    9. ' y' → logprob: -14.627963066101074
    10. '_,' → logprob: -15.752963066101074

Token 675: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25857317447662354
    2. ' y' → logprob: -1.7585731744766235
    3. 'x' → logprob: -3.133573055267334
    4. 'lambda' → logprob: -5.383573055267334
    5. ' x' → logprob: -5.383573055267334
    6. ' lambda' → logprob: -5.883573055267334
    7. ' ' → logprob: -10.883573532104492
    8. '    ' → logprob: -13.383573532104492
    9. '  ' → logprob: -13.633573532104492
    10. '   ' → logprob: -13.883573532104492

Token 676: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22835493087768555
    2. ',' → logprob: -1.6033549308776855
    3. ' :' → logprob: -6.1033549308776855
    4. ' ,' → logprob: -7.6033549308776855
    5. ' x' → logprob: -8.853355407714844
    6. ',x' → logprob: -10.603355407714844
    7. 'x' → logprob: -10.853355407714844
    8. ':x' → logprob: -11.478355407714844
    9. ' ' → logprob: -13.853355407714844
    10. '=' → logprob: -13.978355407714844

Token 677: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2014147937297821
    2. 'x' → logprob: -1.7014148235321045
    3. 'lambda' → logprob: -14.951415061950684
    4. '	x' → logprob: -15.076415061950684
    5. ' lambda' → logprob: -15.201415061950684
    6. ' ' → logprob: -15.576415061950684
    7. ' y' → logprob: -15.826415061950684
    8. 'y' → logprob: -16.076414108276367
    9. ' ' → logprob: -16.826414108276367
    10. ''x' → logprob: -17.201414108276367

Token 678: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02632201462984085
    2. '-' → logprob: -3.65132212638855
    3. ' ' → logprob: -11.401322364807129
    4. ',' → logprob: -11.776322364807129
    5. 'y' → logprob: -13.776322364807129
    6. ' y' → logprob: -14.901322364807129
    7. '1' → logprob: -15.151322364807129
    8. '   ' → logprob: -15.776322364807129
    9. 'x' → logprob: -16.026321411132812
    10. ' x' → logprob: -16.026321411132812

Token 679: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.011047935113310814
    2. 'y' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.13604736328125
    4. '	y' → logprob: -17.88604736328125
    5. ' ' → logprob: -18.63604736328125
    6. ' x' → logprob: -19.13604736328125
    7. ',' → logprob: -19.51104736328125
    8. '       ' → logprob: -19.88604736328125
    9. '    ' → logprob: -20.01104736328125
    10. '   ' → logprob: -20.13604736328125

Token 680: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013799945591017604
    2. ',
' → logprob: -6.62637996673584
    3. '       ' → logprob: -9.87637996673584
    4. '   ' → logprob: -13.75137996673584
    5. ',
' → logprob: -14.12637996673584
    6. ' ,' → logprob: -14.75137996673584
    7. ',

' → logprob: -15.50137996673584
    8. ',\
' → logprob: -16.001380920410156
    9. '.' → logprob: -17.001380920410156
    10. '	' → logprob: -17.876380920410156

Token 681: '       ' (ID: 309)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.0006820533308200538
    2. '       ' → logprob: -8.00068187713623
    3. ' '*' → logprob: -8.00068187713623
    4. '"*' → logprob: -11.62568187713623
    5. ''' → logprob: -13.50068187713623
    6. '   ' → logprob: -14.50068187713623
    7. ''/' → logprob: -15.50068187713623
    8. '('*' → logprob: -17.000682830810547
    9. '	' → logprob: -17.125682830810547
    10. ' ' → logprob: -17.125682830810547

Token 682: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' (adapté à ' '*') → logprob: -0.00014358828775584698
    2. ' '*' → logprob: -8.875144004821777
    3. '"*' → logprob: -12.625144004821777
    4. ''/' → logprob: -15.750144004821777
    5. '   ' → logprob: -16.75014305114746
    6. ''' → logprob: -17.12514305114746
    7. '('*' → logprob: -17.37514305114746
    8. '*' → logprob: -17.50014305114746
    9. '*:' → logprob: -17.62514305114746
    10. '       ' → logprob: -18.00014305114746

Token 683: '':' (ID: 2337)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.26949045062065125
    2. 'lambda' → logprob: -1.8944904804229736
    3. ':' → logprob: -2.8944904804229736
    4. '':' → logprob: -4.2694902420043945
    5. '=lambda' → logprob: -5.1444902420043945
    6. ' x' → logprob: -5.6444902420043945
    7. ',' → logprob: -5.7694902420043945
    8. '<|end|>' → logprob: -6.8944902420043945
    9. ' ':' → logprob: -7.2694902420043945
    10. '(lambda' → logprob: -7.6444902420043945

Token 684: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.12692862749099731
    2. 'lambda' → logprob: -2.1269285678863525
    3. '(lambda' → logprob: -14.626928329467773
    4. '=lambda' → logprob: -16.376928329467773
    5. ' lamb' → logprob: -17.626928329467773
    6. '.lambda' → logprob: -19.376928329467773
    7. ' ' → logprob: -19.626928329467773
    8. '_lambda' → logprob: -19.751928329467773
    9. '```' → logprob: -20.126928329467773
    10. '   ' → logprob: -20.501928329467773

Token 685: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931503415107727
    2. ' x' → logprob: -0.6931503415107727
    3. 'lambda' → logprob: -13.568150520324707
    4. ' ' → logprob: -13.818150520324707
    5. ' lambda' → logprob: -14.568150520324707
    6. ',' → logprob: -16.19314956665039
    7. '	x' → logprob: -16.69314956665039
    8. '*x' → logprob: -17.81814956665039
    9. '(x' → logprob: -17.94314956665039
    10. ',x' → logprob: -17.94314956665039

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005771008436568081
    2. ' ,' → logprob: -7.875576972961426
    3. ' x' → logprob: -9.125576972961426
    4. ' ' → logprob: -10.500576972961426
    5. 'y' → logprob: -11.125576972961426
    6. '*,' → logprob: -11.375576972961426
    7. '*' → logprob: -11.500576972961426
    8. 'x' → logprob: -12.000576972961426
    9. ':' → logprob: -12.250576972961426
    10. ' y' → logprob: -12.500576972961426

Token 687: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07995112240314484
    2. ' y' → logprob: -2.579951047897339
    3. 'lambda' → logprob: -7.204951286315918
    4. ' lambda' → logprob: -8.079951286315918
    5. 'x' → logprob: -11.829951286315918
    6. ' ' → logprob: -14.704951286315918
    7. ' x' → logprob: -14.954951286315918
    8. '<|end|>' → logprob: -16.8299503326416
    9. '*y' → logprob: -17.3299503326416
    10. ''y' → logprob: -17.9549503326416

Token 688: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008781121578067541
    2. ',' → logprob: -7.37587833404541
    3. ' :' → logprob: -8.37587833404541
    4. 'lambda' → logprob: -11.87587833404541
    5. ' lambda' → logprob: -12.87587833404541
    6. '*' → logprob: -13.25087833404541
    7. ' x' → logprob: -13.37587833404541
    8. ':x' → logprob: -13.62587833404541
    9. ' ,' → logprob: -13.75087833404541
    10. 'y' → logprob: -13.87587833404541

Token 689: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4741930067539215
    2. ' x' → logprob: -0.9741929769515991
    3. 'lambda' → logprob: -9.22419261932373
    4. ' lambda' → logprob: -10.97419261932373
    5. '	x' → logprob: -16.349193572998047
    6. 'y' → logprob: -17.474193572998047
    7. ' ' → logprob: -17.724193572998047
    8. '(x' → logprob: -18.224193572998047
    9. '"x' → logprob: -18.474193572998047
    10. ''x' → logprob: -18.849193572998047

Token 690: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018167153000831604
    2. '*' → logprob: -4.018167018890381
    3. '*y' → logprob: -11.268167495727539
    4. ' ' → logprob: -12.518167495727539
    5. ',' → logprob: -15.643167495727539
    6. 'y' → logprob: -15.643167495727539
    7. ' y' → logprob: -15.893167495727539
    8. '<|end|>' → logprob: -16.14316749572754
    9. ' ' → logprob: -16.39316749572754
    10. '.' → logprob: -16.89316749572754

Token 691: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06196768581867218
    2. ' y' → logprob: -2.811967611312866
    3. '<|end|>' → logprob: -18.061967849731445
    4. '	y' → logprob: -18.561967849731445
    5. ''y' → logprob: -18.686967849731445
    6. '*y' → logprob: -18.811967849731445
    7. ' ' → logprob: -19.311967849731445
    8. ')y' → logprob: -19.686967849731445
    9. ',' → logprob: -20.061967849731445
    10. '‘y' → logprob: -20.311967849731445

Token 692: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44840312004089355
    2. ',
' → logprob: -1.0734031200408936
    3. '       ' → logprob: -3.9484031200408936
    4. '   ' → logprob: -8.573403358459473
    5. ',
' → logprob: -11.073403358459473
    6. ','' → logprob: -12.823403358459473
    7. ' ,' → logprob: -12.948403358459473
    8. ',\
' → logprob: -12.948403358459473
    9. ' ,
' → logprob: -13.073403358459473
    10. ',

' → logprob: -13.198403358459473

Token 693: '       ' (ID: 309)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -6.742448022123426e-05
    2. '       ' → logprob: -9.750067710876465
    3. ''' → logprob: -12.250067710876465
    4. ' '/' → logprob: -12.750067710876465
    5. '"/' → logprob: -13.875067710876465
    6. '   ' → logprob: -15.625067710876465
    7. '/' → logprob: -16.00006675720215
    8. ''^' → logprob: -16.25006675720215
    9. '('/' → logprob: -17.87506675720215
    10. ' ' → logprob: -18.50006675720215

Token 694: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' (adapté à ' '/') → logprob: -4.000763510703109e-05
    2. ' '/' → logprob: -10.750040054321289
    3. ''' → logprob: -11.250040054321289
    4. '/' → logprob: -12.500040054321289
    5. 'lambda' → logprob: -14.500040054321289
    6. '   ' → logprob: -14.750040054321289
    7. '"/' → logprob: -14.875040054321289
    8. '/:' → logprob: -15.500040054321289
    9. '       ' → logprob: -15.875040054321289
    10. ' ' → logprob: -15.875040054321289

Token 695: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5000272989273071
    2. '':' → logprob: -1.0000272989273071
    3. 'lambda' → logprob: -3.8750271797180176
    4. ' lambda' → logprob: -6.250027179718018
    5. '=lambda' → logprob: -7.000027179718018
    6. ' ':' → logprob: -7.375027179718018
    7. ' :' → logprob: -7.375027179718018
    8. ''' → logprob: -8.125027656555176
    9. '(lambda' → logprob: -8.375027656555176
    10. '":' → logprob: -10.250027656555176

Token 696: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.023471178486943245
    2. ' lambda' → logprob: -3.7734711170196533
    3. '(lambda' → logprob: -8.398470878601074
    4. '   ' → logprob: -15.648470878601074
    5. '```' → logprob: -16.14847183227539
    6. '=lambda' → logprob: -16.27347183227539
    7. ' ' → logprob: -17.39847183227539
    8. '_lambda' → logprob: -18.14847183227539
    9. '     ' → logprob: -18.52347183227539
    10. 'λ' → logprob: -18.89847183227539

Token 697: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3927246034145355
    2. 'lambda' → logprob: -1.142724633216858
    3. ' lambda' → logprob: -5.267724514007568
    4. ' x' → logprob: -7.392724514007568
    5. '(lambda' → logprob: -9.767724990844727
    6. '   ' → logprob: -12.517724990844727
    7. '```' → logprob: -13.767724990844727
    8. '(x' → logprob: -13.892724990844727
    9. ' ' → logprob: -13.892724990844727
    10. '=lambda' → logprob: -14.892724990844727

Token 698: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14742635190486908
    2. ',' → logprob: -2.0224263668060303
    3. ' x' → logprob: -5.647426128387451
    4. 'y' → logprob: -7.647426128387451
    5. 'lambda' → logprob: -8.39742660522461
    6. '/x' → logprob: -8.77242660522461
    7. ',x' → logprob: -9.02242660522461
    8. ':' → logprob: -9.27242660522461
    9. '(x' → logprob: -10.39742660522461
    10. '   ' → logprob: -11.14742660522461

Token 699: ' y' (ID: 342)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.03169585391879082
    2. 'x' → logprob: -3.53169584274292
    3. ' lambda' → logprob: -6.28169584274292
    4. '(lambda' → logprob: -9.656696319580078
    5. 'y' → logprob: -12.281696319580078
    6. '=lambda' → logprob: -13.281696319580078
    7. ' x' → logprob: -13.531696319580078
    8. '   ' → logprob: -13.781696319580078
    9. '```' → logprob: -15.156696319580078
    10. '       ' → logprob: -17.031696319580078

Token 700: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5690089639974758e-05
    2. ',' → logprob: -12.375015258789062
    3. ' :' → logprob: -12.375015258789062
    4. '   ' → logprob: -12.875015258789062
    5. 'x' → logprob: -14.250015258789062
    6. ':x' → logprob: -14.250015258789062
    7. 'y' → logprob: -14.375015258789062
    8. '       ' → logprob: -14.500015258789062
    9. '           ' → logprob: -14.875015258789062
    10. 'if' → logprob: -15.000015258789062

Token 701: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02285020984709263
    2. ' x' → logprob: -4.522850036621094
    3. 'lambda' → logprob: -4.522850036621094
    4. '(lambda' → logprob: -7.647850036621094
    5. ' lambda' → logprob: -8.147850036621094
    6. '(x' → logprob: -9.522850036621094
    7. ' (' → logprob: -10.647850036621094
    8. '(' → logprob: -11.897850036621094
    9. 'operator' → logprob: -13.022850036621094
    10. '   ' → logprob: -14.022850036621094

Token 702: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.46417081356048584
    2. ' /' → logprob: -2.0891709327697754
    3. 'if' → logprob: -2.3391709327697754
    4. 'and' → logprob: -2.4641709327697754
    5. '/x' → logprob: -3.2141709327697754
    6. ' if' → logprob: -4.089170932769775
    7. '/y' → logprob: -5.214170932769775
    8. ' and' → logprob: -6.714170932769775
    9. '/math' → logprob: -7.089170932769775
    10. 'x' → logprob: -7.339170932769775

Token 703: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16022443771362305
    2. ' y' → logprob: -1.910224437713623
    3. 'x' → logprob: -15.285224914550781
    4. '	y' → logprob: -17.66022491455078
    5. ' ' → logprob: -18.66022491455078
    6. '(y' → logprob: -19.16022491455078
    7. ''y' → logprob: -19.66022491455078
    8. ' x' → logprob: -19.66022491455078
    9. '```' → logprob: -20.41022491455078
    10. '_y' → logprob: -20.53522491455078

Token 704: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2794346213340759
    2. '       ' → logprob: -1.9044346809387207
    3. ',' → logprob: -2.6544346809387207
    4. '   ' → logprob: -4.279434680938721
    5. 'if' → logprob: -4.779434680938721
    6. ',
' → logprob: -6.654434680938721
    7. '}' → logprob: -7.779434680938721
    8. '           ' → logprob: -8.154434204101562
    9. '},' → logprob: -9.529434204101562
    10. ' ' → logprob: -10.029434204101562

Token 705: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19127410650253296
    2. '   ' → logprob: -1.9412741661071777
    3. '}' → logprob: -3.8162741661071777
    4. ',
' → logprob: -4.816274166107178
    5. '       ' → logprob: -7.816274166107178
    6. ' }' → logprob: -10.06627368927002
    7. '<|end|>' → logprob: -12.06627368927002
    8. ',
' → logprob: -12.31627368927002
    9. '	' → logprob: -12.56627368927002
    10. ')' → logprob: -13.31627368927002

Token 706: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00011546355381142348
    2. ',' → logprob: -9.250115394592285
    3. '   ' → logprob: -12.250115394592285
    4. '<|end|>' → logprob: -12.250115394592285
    5. ' }' → logprob: -12.625115394592285
    6. '}
' → logprob: -12.625115394592285
    7. ',
' → logprob: -12.750115394592285
    8. '	' → logprob: -16.1251163482666
    9. '}

' (adapté à ' }

') → logprob: -16.3751163482666
    10. ')' → logprob: -16.8751163482666

Token 707: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 708: ' ---' (ID: 26691)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.056047722697257996
    2. 'def' → logprob: -2.9310476779937744
    3. 'import' → logprob: -7.5560479164123535
    4. 'class' → logprob: -8.431047439575195
    5. '```' → logprob: -8.556047439575195
    6. '<|end|>' → logprob: -8.681047439575195
    7. 'if' → logprob: -10.306047439575195
    8. '<|end|>' → logprob: -11.056047439575195
    9. '#!/' → logprob: -13.181047439575195
    10. '@pytest' → logprob: -13.306047439575195

Token 709: ' Main' (ID: 7956)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01227451954036951
    2. 'def' → logprob: -4.512274742126465
    3. 'import' → logprob: -7.512274742126465
    4. 'class' → logprob: -7.887274742126465
    5. 'if' → logprob: -8.637274742126465
    6. '```' → logprob: -9.512274742126465
    7. 'Additional' → logprob: -11.262274742126465
    8. 'Testing' → logprob: -11.762274742126465
    9. '<|end|>' → logprob: -11.762274742126465
    10. ' #' → logprob: -11.887274742126465

Token 710: ' Controller' (ID: 19801)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1723615527153015
    2. 'if' → logprob: -1.9223616123199463
    3. 'class' → logprob: -4.422361373901367
    4. ' if' → logprob: -10.672361373901367
    5. '#' → logprob: -11.297361373901367
    6. 'import' → logprob: -11.797361373901367
    7. '```' → logprob: -12.297361373901367
    8. ' def' → logprob: -12.422361373901367
    9. '()' → logprob: -12.797361373901367
    10. '
' → logprob: -13.422361373901367

Token 711: ' to' (ID: 316)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -13.00000286102295
    3. ' class' → logprob: -15.12500286102295
    4. 'def' → logprob: -17.250001907348633
    5. '"class' → logprob: -20.375001907348633
    6. '<class' → logprob: -20.875001907348633
    7. '```' → logprob: -21.875001907348633
    8. '

' → logprob: -22.000001907348633
    9. '-class' → logprob: -22.250001907348633
    10. 'import' → logprob: -22.250001907348633

Token 712: ' handle' (ID: 5318)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.64183109998703
    2. 'run' → logprob: -1.1418311595916748
    3. ' run' → logprob: -2.516831159591675
    4. ' evaluate' → logprob: -3.266831159591675
    5. 'execute' → logprob: -4.641830921173096
    6. 'process' → logprob: -4.891830921173096
    7. 'parse' → logprob: -5.391830921173096
    8. 'complete' → logprob: -5.391830921173096
    9. ' complete' → logprob: -6.016830921173096
    10. ' process' → logprob: -7.016830921173096

Token 713: ' multiple' (ID: 7598)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.4653051495552063
    2. ' evaluation' → logprob: -2.4653050899505615
    3. 'expression' → logprob: -2.4653050899505615
    4. 'evaluation' → logprob: -2.7153050899505615
    5. ' expressions' → logprob: -2.9653050899505615
    6. 'R' → logprob: -3.9653050899505615
    7. ' expression' → logprob: -4.465305328369141
    8. ' input' → logprob: -4.590305328369141
    9. 'input' → logprob: -4.715305328369141
    10. 'execution' → logprob: -4.840305328369141

Token 714: ' datasets' (ID: 57711)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.18170595169067383
    2. ' expressions' → logprob: -1.9317059516906738
    3. 'expression' → logprob: -4.806705951690674
    4. ' lines' → logprob: -5.056705951690674
    5. 'def' → logprob: -6.181705951690674
    6. 'lines' → logprob: -6.306705951690674
    7. ' expression' → logprob: -7.556705951690674
    8. ' test' → logprob: -7.931705951690674
    9. 'inputs' → logprob: -8.181705474853516
    10. 'line' → logprob: -8.681705474853516

Token 715: ' --' (ID: 2230)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.014526262879371643
    2. '
' → logprob: -4.2645263671875
    3. '

' → logprob: -8.1395263671875
    4. 'def' → logprob: -9.8895263671875
    5. ' class' → logprob: -11.0145263671875
    6. '<|end|>' → logprob: -13.3895263671875
    7. '
' → logprob: -14.1395263671875
    8. '```' → logprob: -14.7645263671875
    9. ',class' → logprob: -15.1395263671875
    10. '(class' → logprob: -16.0145263671875

Token 716: '-

' (ID: 16364)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0007100477814674377
    2. 'def' → logprob: -7.2507100105285645
    3. ' class' → logprob: -16.625709533691406
    4. 'import' → logprob: -18.375709533691406
    5. 'if' → logprob: -19.375709533691406
    6. '
' → logprob: -19.500709533691406
    7. 'from' → logprob: -19.875709533691406
    8. '@dat' → logprob: -21.375709533691406
    9. '```' → logprob: -21.750709533691406
    10. '<class' → logprob: -22.750709533691406

Token 717: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00033546582562848926
    2. 'def' → logprob: -8.000335693359375
    3. ' class' → logprob: -18.500335693359375
    4. 'import' → logprob: -18.750335693359375
    5. 'from' → logprob: -20.375335693359375
    6. 'if' → logprob: -21.500335693359375
    7. '
' → logprob: -21.875335693359375
    8. '```' → logprob: -22.750335693359375
    9. '@dat' → logprob: -24.625335693359375
    10. '#' → logprob: -24.625335693359375

Token 718: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.13957513868808746
    2. 'Evaluator' → logprob: -2.639575242996216
    3. 'RP' → logprob: -4.014575004577637
    4. 'Calculator' → logprob: -4.389575004577637
    5. 'Main' → logprob: -4.639575004577637
    6. 'Controller' → logprob: -4.639575004577637
    7. 'Expression' → logprob: -6.139575004577637
    8. 'Input' → logprob: -6.514575004577637
    9. 'Processor' → logprob: -6.639575004577637
    10. 'Multi' → logprob: -7.014575004577637

Token 719: 'PN' (ID: 14513)
  Prédit: 'PN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PN' → logprob: -0.0009694644249975681
    2. 'P' → logprob: -7.000969409942627
    3. 'unner' → logprob: -10.375969886779785
    4. 'pn' → logprob: -11.125969886779785
    5. 'unnable' → logprob: -13.000969886779785
    6. 'e' → logprob: -13.125969886779785
    7. 'PM' → logprob: -13.625969886779785
    8. 'outer' → logprob: -14.000969886779785
    9. 'Pn' → logprob: -14.250969886779785
    10. '```' → logprob: -14.625969886779785

Token 720: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.10177344083786011
    2. 'Evaluator' → logprob: -2.351773500442505
    3. 'Processor' → logprob: -6.726773262023926
    4. 'Controller' → logprob: -8.226773262023926
    5. 'Solver' → logprob: -10.101773262023926
    6. 'Parser' → logprob: -10.351773262023926
    7. 'Handler' → logprob: -11.851773262023926
    8. 'Interpreter' → logprob: -12.226773262023926
    9. 'Executor' → logprob: -12.851773262023926
    10. 'Calc' → logprob: -12.976773262023926

Token 721: 'Controller' (ID: 2947)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026314467191696167
    2. ':
' → logprob: -3.6513144969940186
    3. '):' → logprob: -12.151314735412598
    4. ' :' → logprob: -13.026314735412598
    5. '():' → logprob: -13.401314735412598
    6. ':def' → logprob: -13.901314735412598
    7. '(' → logprob: -14.151314735412598
    8. ':

' → logprob: -14.276314735412598
    9. '):
' → logprob: -14.276314735412598
    10. '(object' → logprob: -14.651314735412598

Token 722: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008621077984571457
    2. ':
' → logprob: -4.7586212158203125
    3. '():' → logprob: -13.258621215820312
    4. ' :' → logprob: -13.633621215820312
    5. '):' → logprob: -14.008621215820312
    6. ':def' → logprob: -14.008621215820312
    7. ':

' → logprob: -14.508621215820312
    8. '(object' → logprob: -14.883621215820312
    9. '():
' → logprob: -15.258621215820312
    10. '(' → logprob: -15.258621215820312

Token 723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040791230276227
    2. ' def' → logprob: -7.875407695770264
    3. 'def' → logprob: -10.500408172607422
    4. '   ' → logprob: -16.375408172607422
    5. '```' → logprob: -16.625408172607422
    6. '	def' → logprob: -16.875408172607422
    7. '
' → logprob: -17.750408172607422
    8. '    
' → logprob: -17.875408172607422
    9. ':' → logprob: -18.000408172607422
    10. ')' → logprob: -18.125408172607422

Token 724: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023256659507751465
    2. ' def' → logprob: -3.773256778717041
    3. '   ' → logprob: -11.398256301879883
    4. 'de' → logprob: -18.148256301879883
    5. '	def' → logprob: -19.148256301879883
    6. '
' → logprob: -19.898256301879883
    7. ' ' → logprob: -20.398256301879883
    8. 'class' → logprob: -20.523256301879883
    9. ':def' → logprob: -21.023256301879883
    10. '__' → logprob: -21.648256301879883

Token 725: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005799740087240934
    2. '__' → logprob: -5.880799770355225
    3. ' def' → logprob: -5.880799770355225
    4. 'def' → logprob: -9.505799293518066
    5. '_init' → logprob: -10.005799293518066
    6. '_' → logprob: -10.005799293518066
    7. ' ' → logprob: -11.505799293518066
    8. ' _' → logprob: -11.630799293518066
    9. ' init' → logprob: -12.380799293518066
    10. 'init' → logprob: -12.755799293518066

Token 726: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.129266067640856e-05
    2. 'nit' → logprob: -11.000020980834961
    3. 'new' → logprob: -13.625020980834961
    4. 'def' → logprob: -13.875020980834961
    5. 'int' → logprob: -14.125020980834961
    6. '_init' → logprob: -15.000020980834961
    7. '```' → logprob: -15.000020980834961
    8. '__' → logprob: -15.750020980834961
    9. 'name' → logprob: -16.12502098083496
    10. 'it' → logprob: -16.37502098083496

Token 727: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12761297821998596
    2. '(self' → logprob: -2.127613067626953
    3. '__(
' → logprob: -7.752613067626953
    4. '__' → logprob: -9.377613067626953
    5. '(' → logprob: -9.502613067626953
    6. 'self' → logprob: -9.877613067626953
    7. '_(' → logprob: -11.002613067626953
    8. ' (' → logprob: -11.127613067626953
    9. '   ' → logprob: -13.002613067626953
    10. '(
' → logprob: -13.252613067626953

Token 728: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.463036435074173e-05
    2. '):
' → logprob: -11.375024795532227
    3. ')' → logprob: -11.625024795532227
    4. ' self' → logprob: -12.625024795532227
    5. '       ' → logprob: -14.625024795532227
    6. '
' → logprob: -15.750024795532227
    7. '(self' → logprob: -16.875024795532227
    8. '   ' → logprob: -17.125024795532227
    9. ')
' → logprob: -17.500024795532227
    10. ')(' → logprob: -17.875024795532227

Token 729: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07914897799491882
    2. '):
' → logprob: -2.954149007797241
    3. '):' → logprob: -4.454148769378662
    4. 'self' → logprob: -4.454148769378662
    5. ',
' → logprob: -8.32914924621582
    6. ')' → logprob: -8.32914924621582
    7. '(self' → logprob: -9.57914924621582
    8. '   ' → logprob: -9.82914924621582
    9. ' self' → logprob: -10.07914924621582
    10. ',self' → logprob: -11.07914924621582

Token 730: '                ' (ID: 408)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24564431607723236
    2. ' self' → logprob: -2.8706443309783936
    3. '                ' → logprob: -2.9956443309783936
    4. '       ' → logprob: -3.4956443309783936
    5. 'operator' → logprob: -3.8706443309783936
    6. ' operator' → logprob: -4.2456440925598145
    7. '                    ' → logprob: -4.9956440925598145
    8. '                     ' → logprob: -5.1206440925598145
    9. ' datasets' → logprob: -5.1206440925598145
    10. '                 ' → logprob: -5.2456440925598145

Token 731: ' evaluator' (ID: 153499)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3407752513885498
    2. 'operator' → logprob: -2.09077525138855
    3. 'input' → logprob: -2.46577525138855
    4. 'token' → logprob: -3.09077525138855
    5. 'expression' → logprob: -4.340775489807129
    6. 'e' → logprob: -4.590775489807129
    7. 'num' → logprob: -5.340775489807129
    8. 'r' → logprob: -6.840775489807129
    9. ' stack' → logprob: -6.840775489807129
    10. 'express' → logprob: -7.090775489807129

Token 732: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.600714161526412e-05
    2. ' :' → logprob: -10.125076293945312
    3. '=' → logprob: -10.375076293945312
    4. ' =' → logprob: -13.000076293945312
    5. '=None' → logprob: -14.250076293945312
    6. '   ' → logprob: -14.500076293945312
    7. '):' → logprob: -15.250076293945312
    8. ')' → logprob: -15.375076293945312
    9. '_:' → logprob: -15.375076293945312
    10. '_factory' → logprob: -15.500076293945312

Token 733: ' Evalu' (ID: 81321)
  Prédit: 'Evaluator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluator' → logprob: -0.3457081615924835
    2. 'RP' → logprob: -1.7207081317901611
    3. 'Callable' → logprob: -2.220708131790161
    4. ' RP' → logprob: -5.97070837020874
    5. 'Evalu' → logprob: -6.47070837020874
    6. ' Callable' → logprob: -7.97070837020874
    7. ' ' → logprob: -9.220707893371582
    8. '   ' → logprob: -9.345707893371582
    9. ' Evalu' → logprob: -10.220707893371582
    10. '  ' → logprob: -10.345707893371582

Token 734: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -1.9361264946837764e-07
    2. 'ATOR' → logprob: -16.625
    3. 'uator' → logprob: -20.625
    4. 'valuator' → logprob: -21.125
    5. 'lator' → logprob: -21.625
    6. 'атор' → logprob: -21.875
    7. 'tor' → logprob: -22.125
    8. 'ulator' → logprob: -22.375
    9. 'utor' → logprob: -22.625
    10. 'Evaluator' → logprob: -23.375

Token 735: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029600979760289192
    2. ',
' → logprob: -3.7796010971069336
    3. '):' → logprob: -5.154601097106934
    4. '):
' → logprob: -8.029601097106934
    5. ')' → logprob: -8.654601097106934
    6. '   ' → logprob: -10.154601097106934
    7. '       ' → logprob: -11.654601097106934
    8. ' ,' → logprob: -12.904601097106934
    9. ' ' → logprob: -13.029601097106934
    10. ',
' → logprob: -13.029601097106934

Token 736: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.031918715685606
    2. 'stack' → logprob: -3.90691876411438
    3. '                 ' → logprob: -5.031918525695801
    4. ' stack' → logprob: -5.656918525695801
    5. 'token' → logprob: -7.656918525695801
    6. 'operator' → logprob: -8.0319185256958
    7. '               ' → logprob: -8.9069185256958
    8. '):
' → logprob: -9.4069185256958
    9. '                 
' → logprob: -9.4069185256958
    10. '                  ' → logprob: -10.0319185256958

Token 737: ' tokenizer' (ID: 99665)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.48401546478271484
    2. 'operator' → logprob: -2.109015464782715
    3. 'token' → logprob: -2.109015464782715
    4. 'input' → logprob: -2.234015464782715
    5. ' tokenizer' → logprob: -4.859015464782715
    6. ' stack' → logprob: -5.359015464782715
    7. 'num' → logprob: -5.609015464782715
    8. 'max' → logprob: -6.109015464782715
    9. 'expression' → logprob: -6.109015464782715
    10. 'output' → logprob: -6.234015464782715

Token 738: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005736440070904791
    2. '):' → logprob: -8.375574111938477
    3. ')' → logprob: -9.125574111938477
    4. '   ' → logprob: -9.625574111938477
    5. ',' → logprob: -9.750574111938477
    6. '):
' → logprob: -10.125574111938477
    7. ' :' → logprob: -10.625574111938477
    8. '=None' → logprob: -10.750574111938477
    9. '=' → logprob: -11.500574111938477
    10. ',
' → logprob: -12.500574111938477

Token 739: ' Token' (ID: 17951)
  Prédit: 'Tokenizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tokenizer' → logprob: -0.0003466673369985074
    2. 'Token' → logprob: -8.625347137451172
    3. ' Token' → logprob: -8.750347137451172
    4. 'Callable' → logprob: -11.750347137451172
    5. 'token' → logprob: -14.750347137451172
    6. 'Optional' → logprob: -14.875347137451172
    7. '	Token' → logprob: -17.250347137451172
    8. ' tokenizer' → logprob: -17.375347137451172
    9. '   ' → logprob: -17.750347137451172
    10. ' Callable' → logprob: -18.000347137451172

Token 740: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -6.2729995988775045e-06
    2. 'IZER' → logprob: -12.000006675720215
    3. 'Tokenizer' → logprob: -17.6250057220459
    4. 'zier' → logprob: -20.6250057220459
    5. ' tokenizer' → logprob: -20.7500057220459
    6. 'erializer' → logprob: -20.8750057220459
    7. 'izr' → logprob: -21.1250057220459
    8. 'ize' → logprob: -21.7500057220459
    9. 'izador' → logprob: -22.8750057220459
    10. 'Recognizer' → logprob: -23.1250057220459

Token 741: ',
' (ID: 412)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05000569298863411
    2. '):' → logprob: -3.5500056743621826
    3. '                ' → logprob: -4.425005912780762
    4. ')' → logprob: -6.050005912780762
    5. '   ' → logprob: -6.050005912780762
    6. ',
' → logprob: -6.550005912780762
    7. ',' → logprob: -6.675005912780762
    8. '               ' → logprob: -7.550005912780762
    9. '       ' → logprob: -9.550005912780762
    10. '           ' → logprob: -10.550005912780762

Token 742: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.0067771850153803825
    2. 'operator' → logprob: -6.381777286529541
    3. 'stack' → logprob: -6.381777286529541
    4. '                 ' → logprob: -7.006777286529541
    5. '):
' → logprob: -7.256777286529541
    6. ' stack' → logprob: -7.631777286529541
    7. ')' → logprob: -8.131776809692383
    8. '   ' → logprob: -8.381776809692383
    9. '               ' → logprob: -8.631776809692383
    10. '):' → logprob: -9.256776809692383

Token 743: ' output' (ID: 4733)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.30526652932167053
    2. 'output' (adapté à ' output') → logprob: -2.4302666187286377
    3. 'datasets' → logprob: -2.8052666187286377
    4. 'operator' → logprob: -3.3052666187286377
    5. ' input' → logprob: -3.6802666187286377
    6. 'stack' → logprob: -4.180266380310059
    7. 'num' → logprob: -4.680266380310059
    8. 'dataset' → logprob: -5.055266380310059
    9. ' datasets' → logprob: -5.055266380310059
    10. ' operator' → logprob: -5.805266380310059

Token 744: '_precision' (ID: 134656)
  Prédit: '_stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.09066343307495117
    2. '_func' → logprob: -3.215663433074951
    3. ':' → logprob: -3.715663433074951
    4. '_handler' → logprob: -4.340663433074951
    5. '_writer' → logprob: -5.840663433074951
    6. '_function' → logprob: -5.965663433074951
    7. '=sys' → logprob: -6.840663433074951
    8. '_sink' → logprob: -7.090663433074951
    9. ')' → logprob: -7.715663433074951
    10. 'stream' → logprob: -8.21566390991211

Token 745: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.491498531133402e-06
    2. ':int' → logprob: -11.875009536743164
    3. '=' → logprob: -13.125009536743164
    4. ' :' → logprob: -14.625009536743164
    5. '_:' → logprob: -17.250009536743164
    6. ')' → logprob: -18.000009536743164
    7. '):' → logprob: -18.000009536743164
    8. 'int' → logprob: -19.250009536743164
    9. '```' → logprob: -19.500009536743164
    10. '   ' → logprob: -19.875009536743164

Token 746: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05747678503394127
    2. ' int' → logprob: -3.307476758956909
    3. 'Optional' → logprob: -5.057476997375488
    4. '6' → logprob: -5.557476997375488
    5. ':int' → logprob: -6.057476997375488
    6. ' Optional' → logprob: -6.057476997375488
    7. '2' → logprob: -6.682476997375488
    8. '3' → logprob: -7.182476997375488
    9. '[int' → logprob: -7.682476997375488
    10. ' ' → logprob: -7.807476997375488

Token 747: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010648299008607864
    2. ':' → logprob: -5.260648250579834
    3. '):' → logprob: -5.385648250579834
    4. ' =' → logprob: -7.635648250579834
    5. ')' → logprob: -8.135648727416992
    6. '=None' → logprob: -10.510648727416992
    7. ',' → logprob: -11.885648727416992
    8. ':int' → logprob: -12.635648727416992
    9. '=int' → logprob: -13.260648727416992
    10. '):
' → logprob: -13.510648727416992

Token 748: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.15495453774929047
    2. '2' → logprob: -2.154954433441162
    3. '4' → logprob: -4.529954433441162
    4. '10' → logprob: -4.779954433441162
    5. ' ' → logprob: -5.279954433441162
    6. '8' → logprob: -6.654954433441162
    7. '5' → logprob: -6.779954433441162
    8. '3' → logprob: -7.154954433441162
    9. '12' → logprob: -9.52995491027832
    10. '7' → logprob: -9.52995491027832

Token 749: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.17966234683990479
    2. '4' → logprob: -2.5546622276306152
    3. '5' → logprob: -3.3046622276306152
    4. '2' → logprob: -3.6796622276306152
    5. '10' → logprob: -4.304662227630615
    6. '3' → logprob: -4.804662227630615
    7. '8' → logprob: -5.929662227630615
    8. '7' → logprob: -8.679662704467773
    9. '9' → logprob: -9.054662704467773
    10. '12' → logprob: -9.304662704467773

Token 750: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1615850180387497
    2. '):' → logprob: -1.9115849733352661
    3. '   ' → logprob: -7.036584854125977
    4. ',' → logprob: -8.036584854125977
    5. ')' → logprob: -9.786584854125977
    6. ',
' → logprob: -9.911584854125977
    7. '):
' → logprob: -10.161584854125977
    8. '       ' → logprob: -11.911584854125977
    9. '                ' → logprob: -13.661584854125977
    10. ':' → logprob: -13.911584854125977

Token 751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010488852858543396
    2. '   ' → logprob: -6.876049041748047
    3. ':' → logprob: -11.751049041748047
    4. 'self' → logprob: -13.001049041748047
    5. ',' → logprob: -13.251049041748047
    6. ')' → logprob: -13.751049041748047
    7. ' self' → logprob: -14.376049041748047
    8. '<|end|>' → logprob: -14.501049041748047
    9. '        
' → logprob: -15.001049041748047
    10. '):
' → logprob: -15.126049041748047

Token 752: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20199473202228546
    2. '       ' → logprob: -1.701994776725769
    3. ' self' → logprob: -7.451994895935059
    4. '   ' → logprob: -13.951994895935059
    5. '	self' → logprob: -15.951994895935059
    6. '(self' → logprob: -17.826993942260742
    7. '      ' → logprob: -18.701993942260742
    8. ' ' → logprob: -18.951993942260742
    9. '     ' → logprob: -19.326993942260742
    10. '	' → logprob: -19.451993942260742

Token 753: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.0002613358374219388
    2. '.' → logprob: -8.500261306762695
    3. '.output' → logprob: -10.250261306762695
    4. '._' → logprob: -10.875261306762695
    5. '.evaluate' → logprob: -13.875261306762695
    6. '   ' → logprob: -14.250261306762695
    7. 'e' → logprob: -14.375261306762695
    8. ' .' → logprob: -14.875261306762695
    9. '.token' → logprob: -15.875261306762695
    10. '.operator' → logprob: -16.250261306762695

Token 754: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -5.438573680294212e-06
    2. 'val' → logprob: -12.750005722045898
    3. 'valu' → logprob: -13.750005722045898
    4. 'valuate' → logprob: -14.500005722045898
    5. '   ' → logprob: -15.375005722045898
    6. 'x' → logprob: -15.625005722045898
    7. 'v' → logprob: -15.750005722045898
    8. 'valuer' → logprob: -16.3750057220459
    9. 'valuation' → logprob: -16.5000057220459
    10. 'e' → logprob: -17.1250057220459

Token 755: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5240765810012817
    2. '=' → logprob: -0.8990765810012817
    3. '=e' → logprob: -7.149076461791992
    4. '   ' → logprob: -9.524076461791992
    5. '        ' → logprob: -11.024076461791992
    6. ',' → logprob: -11.399076461791992
    7. ' ' → logprob: -11.649076461791992
    8. '         ' → logprob: -11.649076461791992
    9. '    ' → logprob: -11.649076461791992
    10. ':' → logprob: -11.774076461791992

Token 756: ' evaluator' (ID: 153499)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0016498296754434705
    2. ' evaluator' → logprob: -6.751649856567383
    3. 'evalu' → logprob: -7.751649856567383
    4. 'evaluate' → logprob: -11.126649856567383
    5. 'Evaluator' → logprob: -11.501649856567383
    6. ' e' → logprob: -12.126649856567383
    7. 'evaluation' → logprob: -12.126649856567383
    8. 'valuator' → logprob: -12.501649856567383
    9. '	e' → logprob: -12.876649856567383
    10. 'eval' → logprob: -13.001649856567383

Token 757: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.347765181795694e-05
    2. '
' → logprob: -10.125053405761719
    3. ',' → logprob: -12.250053405761719
    4. ',
' → logprob: -12.500053405761719
    5. '<|end|>' → logprob: -13.125053405761719
    6. 'self' → logprob: -13.250053405761719
    7. '   ' → logprob: -14.375053405761719
    8. '        
' → logprob: -15.500053405761719
    9. '      ' → logprob: -16.00005340576172
    10. ' ' → logprob: -16.75005340576172

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.200166469876422e-06
    2. 'self' → logprob: -12.750004768371582
    3. '<|end|>' → logprob: -13.625004768371582
    4. '   ' → logprob: -15.000004768371582
    5. ',' → logprob: -15.000004768371582
    6. ' self' → logprob: -15.125004768371582
    7. '	' → logprob: -17.5000057220459
    8. '
' → logprob: -17.5000057220459
    9. '      ' → logprob: -17.8750057220459
    10. '               ' → logprob: -18.3750057220459

Token 759: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012735659256577492
    2. '       ' → logprob: -6.8762736320495605
    3. ' self' → logprob: -8.626273155212402
    4. 'token' → logprob: -9.751273155212402
    5. '   ' → logprob: -12.876273155212402
    6. 'Tokenizer' → logprob: -15.376273155212402
    7. ' tokenizer' → logprob: -16.12627410888672
    8. '
' → logprob: -16.25127410888672
    9. '	self' → logprob: -16.37627410888672
    10. '           ' → logprob: -16.62627410888672

Token 760: '.token' (ID: 26675)
  Prédit: '.token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.token' → logprob: -4.246537173457909e-06
    2. '.output' → logprob: -12.500003814697266
    3. 'token' → logprob: -15.375003814697266
    4. '.' → logprob: -16.500003814697266
    5. '.tokens' → logprob: -16.750003814697266
    6. '.input' → logprob: -18.000003814697266
    7. '._' → logprob: -18.125003814697266
    8. '.encoder' → logprob: -18.625003814697266
    9. '   ' → logprob: -18.875003814697266
    10. '.Token' → logprob: -19.375003814697266

Token 761: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -1.2664456789934775e-06
    2. 'IZER' → logprob: -13.750000953674316
    3. 'ize' → logprob: -16.000001907348633
    4. 'zier' → logprob: -19.125001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '
' → logprob: -20.375001907348633
    7. 'iz' → logprob: -20.875001907348633
    8. '```' → logprob: -21.375001907348633
    9. 'er' → logprob: -21.750001907348633
    10. '_generator' → logprob: -21.875001907348633

Token 762: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1128472238779068
    2. ' =' → logprob: -2.237847328186035
    3. '       ' → logprob: -11.487847328186035
    4. '   ' → logprob: -11.612847328186035
    5. '=self' → logprob: -13.737847328186035
    6. '.' → logprob: -13.862847328186035
    7. ',' → logprob: -13.862847328186035
    8. ' ' → logprob: -14.737847328186035
    9. '    ' → logprob: -14.987847328186035
    10. '        ' → logprob: -15.612847328186035

Token 763: ' tokenizer' (ID: 99665)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.0007136239437386394
    2. ' tokenizer' → logprob: -7.25071382522583
    3. ' token' → logprob: -12.625713348388672
    4. 'Tokenizer' → logprob: -15.500713348388672
    5. '(token' → logprob: -16.250713348388672
    6. '[token' → logprob: -16.875713348388672
    7. '.token' → logprob: -17.250713348388672
    8. '	token' → logprob: -17.500713348388672
    9. '/token' → logprob: -18.375713348388672
    10. '_token' → logprob: -18.375713348388672

Token 764: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003757383383344859
    2. '
' → logprob: -8.125375747680664
    3. '   ' → logprob: -9.875375747680664
    4. '<|end|>' → logprob: -11.000375747680664
    5. ',' → logprob: -11.750375747680664
    6. ',
' → logprob: -14.000375747680664
    7. 'self' → logprob: -14.250375747680664
    8. '      ' → logprob: -14.375375747680664
    9. '    
' → logprob: -14.750375747680664
    10. '        
' → logprob: -15.500375747680664

Token 765: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3676733690081164e-05
    2. '   ' → logprob: -10.75002384185791
    3. '
' → logprob: -13.62502384185791
    4. 'self' → logprob: -14.50002384185791
    5. ' self' → logprob: -15.87502384185791
    6. '<|end|>' → logprob: -16.125022888183594
    7. ',' → logprob: -16.750022888183594
    8. '      ' → logprob: -17.000022888183594
    9. '	' → logprob: -17.375022888183594
    10. '	self' → logprob: -17.625022888183594

Token 766: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0017095671501010656
    2. '       ' → logprob: -6.501709461212158
    3. ' self' → logprob: -8.501709938049316
    4. '   ' → logprob: -12.501709938049316
    5. '
' → logprob: -15.751709938049316
    6. '	self' → logprob: -15.876709938049316
    7. ' ' → logprob: -17.876708984375
    8. '     ' → logprob: -18.251708984375
    9. '      ' → logprob: -18.251708984375
    10. 'output' → logprob: -18.626708984375

Token 767: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.282920129597187e-05
    2. '.' → logprob: -11.750012397766113
    3. '._' → logprob: -13.000012397766113
    4. 'output' → logprob: -14.000012397766113
    5. ' .' → logprob: -14.375012397766113
    6. '.input' → logprob: -14.750012397766113
    7. '.out' → logprob: -14.875012397766113
    8. '.stdout' → logprob: -15.375012397766113
    9. '.outputs' → logprob: -16.87501335144043
    10. '.result' → logprob: -17.00001335144043

Token 768: '_precision' (ID: 134656)
  Prédit: '_precision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_precision' → logprob: -0.0002703953068703413
    2. '_' → logprob: -8.50027084350586
    3. '_prec' → logprob: -10.37527084350586
    4. '_format' → logprob: -10.75027084350586
    5. '_resolution' → logprob: -13.25027084350586
    6. '_depth' → logprob: -13.50027084350586
    7. ' _' → logprob: -13.75027084350586
    8. '_accuracy' → logprob: -14.37527084350586
    9. '_prefix' → logprob: -14.37527084350586
    10. '_spacing' → logprob: -14.37527084350586

Token 769: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021702200174332
    2. ' =' → logprob: -2.35021710395813
    3. '   ' → logprob: -12.60021686553955
    4. ':' → logprob: -12.60021686553955
    5. ' ' → logprob: -13.47521686553955
    6. ')' → logprob: -14.60021686553955
    7. ',' → logprob: -14.72521686553955
    8. '<|end|>' → logprob: -15.22521686553955
    9. '    ' → logprob: -15.47521686553955
    10. '_' → logprob: -15.47521686553955

Token 770: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.029774097725749016
    2. ' output' → logprob: -3.5297741889953613
    3. '6' → logprob: -10.779773712158203
    4. '(output' → logprob: -13.654773712158203
    5. '   ' → logprob: -14.529773712158203
    6. '10' → logprob: -15.154773712158203
    7. '$output' → logprob: -15.279773712158203
    8. '	output' → logprob: -15.404773712158203
    9. '       ' → logprob: -15.779773712158203
    10. ' ' → logprob: -16.029773712158203

Token 771: '_precision' (ID: 134656)
  Prédit: '_precision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_precision' → logprob: -1.9266199160483666e-05
    2. 'precision' → logprob: -11.125019073486328
    3. '_output' → logprob: -13.375019073486328
    4. '_prec' → logprob: -13.500019073486328
    5. 'output' → logprob: -14.750019073486328
    6. '_' → logprob: -15.750019073486328
    7. '._' → logprob: -15.750019073486328
    8. '
' → logprob: -16.250019073486328
    9. '_accuracy' → logprob: -16.375019073486328
    10. '_resolution' → logprob: -16.375019073486328

Token 772: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3888436555862427
    2. '   ' → logprob: -1.1388436555862427
    3. '    
' → logprob: -6.263843536376953
    4. '<|end|>' → logprob: -10.638843536376953
    5. '        
' → logprob: -11.263843536376953
    6. '

' → logprob: -11.263843536376953
    7. '  
' → logprob: -12.513843536376953
    8. 'def' → logprob: -12.638843536376953
    9. '<|end|>' → logprob: -13.013843536376953
    10. ' 
' → logprob: -13.138843536376953

Token 773: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07824181020259857
    2. '
' → logprob: -2.7032418251037598
    3. 'def' → logprob: -4.82824182510376
    4. '    
' → logprob: -8.328241348266602
    5. ' def' → logprob: -11.328241348266602
    6. '	def' → logprob: -12.078241348266602
    7. '

' → logprob: -12.328241348266602
    8. '<|end|>' → logprob: -12.828241348266602
    9. '        
' → logprob: -13.953241348266602
    10. '  
' → logprob: -14.078241348266602

Token 774: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0325924449716695e-05
    2. ' def' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.250009536743164
    4. '
' → logprob: -19.250009536743164
    5. '	def' → logprob: -21.625009536743164
    6. 'de' → logprob: -22.000009536743164
    7. 'async' → logprob: -24.000009536743164
    8. '    
' → logprob: -24.750009536743164
    9. '```' → logprob: -25.375009536743164
    10. 'd' → logprob: -25.500009536743164

Token 775: ' run' (ID: 2461)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.4252170920372009
    2. ' process' → logprob: -1.9252171516418457
    3. 'run' → logprob: -2.4252171516418457
    4. ' run' → logprob: -2.6752171516418457
    5. 'calculate' → logprob: -3.5502171516418457
    6. ' calculate' → logprob: -5.175217151641846
    7. 'evaluate' → logprob: -5.300217151641846
    8. 'compute' → logprob: -6.425217151641846
    9. ' evaluate' → logprob: -6.550217151641846
    10. ' compute' → logprob: -7.425217151641846

Token 776: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003188286442309618
    2. '(' → logprob: -5.753188133239746
    3. 'self' → logprob: -12.253188133239746
    4. '(
' → logprob: -12.253188133239746
    5. ' (' → logprob: -13.878188133239746
    6. '   ' → logprob: -17.378189086914062
    7. '(sel' → logprob: -17.628189086914062
    8. '()' → logprob: -17.753189086914062
    9. '       ' → logprob: -18.503189086914062
    10. ' self' → logprob: -19.128189086914062

Token 777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008650857023894787
    2. '):' → logprob: -4.883650779724121
    3. ',input' → logprob: -7.758650779724121
    4. '):
' → logprob: -7.883650779724121
    5. ')' → logprob: -8.758650779724121
    6. 'self' → logprob: -9.633650779724121
    7. ',
' → logprob: -11.758650779724121
    8. ' ,' → logprob: -13.008650779724121
    9. ',self' → logprob: -13.758650779724121
    10. ',args' → logprob: -13.758650779724121

Token 778: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.19075873494148254
    2. ' input' → logprob: -2.06575870513916
    3. 'lines' → logprob: -3.94075870513916
    4. ' lines' → logprob: -4.56575870513916
    5. 'self' → logprob: -4.69075870513916
    6. 'inputs' → logprob: -5.69075870513916
    7. 'express' → logprob: -6.56575870513916
    8. ')' → logprob: -6.81575870513916
    9. ' self' → logprob: -7.31575870513916
    10. ' inputs' → logprob: -7.56575870513916

Token 779: '_lines' (ID: 42980)
  Prédit: '_stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.1768363118171692
    2. '):' → logprob: -2.0518362522125244
    3. '_lines' → logprob: -4.0518364906311035
    4. ')' → logprob: -4.8018364906311035
    5. '_source' → logprob: -5.9268364906311035
    6. '()' → logprob: -7.4268364906311035
    7. '   ' → logprob: -7.5518364906311035
    8. '):
' → logprob: -7.5518364906311035
    9. '_data' → logprob: -7.6768364906311035
    10. 'stream' → logprob: -7.8018364906311035

Token 780: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.117698073387146
    2. 'self' → logprob: -2.8676981925964355
    3. ')' → logprob: -4.1176981925964355
    4. '):' → logprob: -4.2426981925964355
    5. '       ' → logprob: -4.7426981925964355
    6. '):
' → logprob: -4.7426981925964355
    7. '(self' → logprob: -5.3676981925964355
    8. '   ' → logprob: -7.1176981925964355
    9. ',' → logprob: -8.617697715759277
    10. ':self' → logprob: -8.742697715759277

Token 781: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.004155210684984922
    2. 'self' → logprob: -5.629155158996582
    3. ' List' → logprob: -7.754155158996582
    4. 'Iterable' → logprob: -9.504155158996582
    5. ')' → logprob: -10.754155158996582
    6. 'Iterator' → logprob: -11.379155158996582
    7. ' self' → logprob: -11.629155158996582
    8. 'iter' → logprob: -12.879155158996582
    9. 'list' → logprob: -12.879155158996582
    10. 'Optional' → logprob: -13.129155158996582

Token 782: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. 'str' → logprob: -16.75
    4. '[
' → logprob: -18.25
    5. ')' → logprob: -18.5
    6. '[String' → logprob: -19.75
    7. '   ' → logprob: -20.625
    8. '
' → logprob: -20.625
    9. '[List' → logprob: -20.75
    10. '```' → logprob: -20.75

Token 783: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10027676075696945
    2. '])' → logprob: -2.3502767086029053
    3. '   ' → logprob: -10.725276947021484
    4. '):
' → logprob: -10.975276947021484
    5. '       ' → logprob: -12.225276947021484
    6. ']):
' → logprob: -12.475276947021484
    7. ' )' → logprob: -12.600276947021484
    8. '):' → logprob: -12.725276947021484
    9. '`)' → logprob: -12.850276947021484
    10. ''])' → logprob: -12.975276947021484

Token 784: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8819832801818848
    2. '->' → logprob: -1.0069832801818848
    3. ' ->' → logprob: -2.0069832801818848
    4. '       ' → logprob: -3.1319832801818848
    5. ':
' → logprob: -3.5069832801818848
    6. ')' → logprob: -4.881983280181885
    7. ')->' → logprob: -5.631983280181885
    8. '   ' → logprob: -7.256983280181885
    9. '(self' → logprob: -7.881983280181885
    10. '(' → logprob: -9.631982803344727

Token 785: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00010413920972496271
    2. 'None' → logprob: -9.750103950500488
    3. ' List' → logprob: -10.000103950500488
    4. '[List' → logprob: -14.750103950500488
    5. '	List' → logprob: -18.375104904174805
    6. ' None' → logprob: -18.750104904174805
    7. '   ' → logprob: -18.875104904174805
    8. 'list' → logprob: -19.125104904174805
    9. 'str' → logprob: -20.000104904174805
    10. '_list' → logprob: -20.750104904174805

Token 786: '[str' (ID: 33439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011796683247666806
    2. '[str' → logprob: -9.250118255615234
    3. 'float' → logprob: -10.875118255615234
    4. '[
' → logprob: -14.500118255615234
    5. '[List' → logprob: -14.500118255615234
    6. '<float' → logprob: -14.625118255615234
    7. '[int' → logprob: -14.750118255615234
    8. ':' → logprob: -14.875118255615234
    9. '```' → logprob: -16.125118255615234
    10. '   ' → logprob: -16.500118255615234

Token 787: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9866740703582764
    2. ':' → logprob: -1.3616740703582764
    3. ')' → logprob: -1.8616740703582764
    4. '   ' → logprob: -2.8616740703582764
    5. '):' → logprob: -2.9866740703582764
    6. ':
' → logprob: -3.1116740703582764
    7. ']:
' → logprob: -3.7366740703582764
    8. '       ' → logprob: -4.1116743087768555
    9. ']:' → logprob: -4.2366743087768555
    10. ']' → logprob: -5.1116743087768555

Token 788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002212704159319401
    2. 'results' → logprob: -6.7522125244140625
    3. 'result' → logprob: -7.0022125244140625
    4. 'outputs' → logprob: -9.627212524414062
    5. 'output' → logprob: -10.127212524414062
    6. ' results' → logprob: -10.877212524414062
    7. ' result' → logprob: -13.002212524414062
    8. '   ' → logprob: -13.502212524414062
    9. 'tokens' → logprob: -14.002212524414062
    10. '```' → logprob: -14.127212524414062

Token 789: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.03344777226448059
    2. '       ' → logprob: -3.533447742462158
    3. ' results' → logprob: -6.283447742462158
    4. 'output' → logprob: -7.033447742462158
    5. 'outputs' → logprob: -7.033447742462158
    6. 'result' → logprob: -9.783448219299316
    7. ' output' → logprob: -13.158448219299316
    8. ' outputs' → logprob: -14.158448219299316
    9. '	results' → logprob: -14.533448219299316
    10. 'responses' → logprob: -15.908448219299316

Token 790: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935046315193176
    2. ' =' → logprob: -0.6935046315193176
    3. ':' → logprob: -7.943504810333252
    4. '=[]' → logprob: -13.068504333496094
    5. '   ' → logprob: -15.818504333496094
    6. '=[]
' → logprob: -16.193504333496094
    7. ' ' → logprob: -16.443504333496094
    8. ' :' → logprob: -17.818504333496094
    9. '  ' → logprob: -18.818504333496094
    10. '[]' → logprob: -18.943504333496094

Token 791: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.09351518750190735
    2. ' List' → logprob: -2.593515157699585
    3. '[]' → logprob: -4.343515396118164
    4. '[List' → logprob: -6.593515396118164
    5. ' []' → logprob: -8.843515396118164
    6. '[]
' → logprob: -11.593515396118164
    7. '[' → logprob: -12.468515396118164
    8. '   ' → logprob: -14.343515396118164
    9. ' []
' → logprob: -14.968515396118164
    10. '=[]' → logprob: -15.468515396118164

Token 792: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.625000953674316
    3. 'str' → logprob: -17.125001907348633
    4. ' =' → logprob: -17.875001907348633
    5. '[int' → logprob: -18.375001907348633
    6. '=str' → logprob: -18.875001907348633
    7. '[
' → logprob: -19.000001907348633
    8. 'Optional' → logprob: -20.750001907348633
    9. ']' → logprob: -21.000001907348633
    10. '```' → logprob: -21.000001907348633

Token 793: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02380066178739071
    2. ' =' → logprob: -3.7738006114959717
    3. ']' → logprob: -7.523800849914551
    4. ')' → logprob: -11.64880084991455
    5. ']=' → logprob: -12.14880084991455
    6. '       ' → logprob: -15.14880084991455
    7. '=[]' → logprob: -15.14880084991455
    8. '   ' → logprob: -16.523799896240234
    9. ')=' → logprob: -16.773799896240234
    10. '[]' → logprob: -16.898799896240234

Token 794: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196970492601395
    2. ' =' → logprob: -2.811969757080078
    3. '       ' → logprob: -13.561969757080078
    4. '=[]' → logprob: -14.561969757080078
    5. '=
' → logprob: -15.936969757080078
    6. '[]' → logprob: -16.561969757080078
    7. '=[]
' → logprob: -16.561969757080078
    8. '	' → logprob: -17.311969757080078
    9. '   ' → logprob: -17.311969757080078
    10. ')' → logprob: -17.436969757080078

Token 795: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000808082812000066
    2. '[]
' → logprob: -7.250808238983154
    3. ' []' → logprob: -9.250807762145996
    4. '       ' → logprob: -13.500807762145996
    5. '[]

' → logprob: -15.125807762145996
    6. '[' → logprob: -15.625807762145996
    7. ' []
' → logprob: -16.000808715820312
    8. '[])' → logprob: -16.875808715820312
    9. '[]}' → logprob: -17.125808715820312
    10. '   ' → logprob: -17.625808715820312

Token 796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015229015843942761
    2. 'for' → logprob: -9.000152587890625
    3. ' for' → logprob: -10.750152587890625
    4. '   ' → logprob: -12.375152587890625
    5. '
' → logprob: -12.875152587890625
    6. '```' → logprob: -15.750152587890625
    7. '        
' → logprob: -15.750152587890625
    8. '	' → logprob: -16.625152587890625
    9. '	   ' → logprob: -17.375152587890625
    10. '           ' → logprob: -17.500152587890625

Token 797: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00010008628305513412
    2. '       ' → logprob: -9.250100135803223
    3. ' for' → logprob: -12.500100135803223
    4. '```' → logprob: -15.375100135803223
    5. '   ' → logprob: -17.500099182128906
    6. '
' → logprob: -17.625099182128906
    7. '	for' → logprob: -19.125099182128906
    8. '``' → logprob: -22.000099182128906
    9. '        
' → logprob: -23.500099182128906
    10. '`' → logprob: -23.625099182128906

Token 798: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.010647352784872055
    2. ' line' → logprob: -4.760647296905518
    3. 'expression' → logprob: -6.260647296905518
    4. ' expression' → logprob: -9.635647773742676
    5. 'expr' → logprob: -9.885647773742676
    6. '   ' → logprob: -13.010647773742676
    7. 'input' → logprob: -13.885647773742676
    8. ' expr' → logprob: -14.385647773742676
    9. '	line' → logprob: -15.260647773742676
    10. ' ' → logprob: -16.01064682006836

Token 799: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011708177626132965
    2. 'in' → logprob: -6.751170635223389
    3. '       ' → logprob: -15.626171112060547
    4. '	in' → logprob: -15.751171112060547
    5. ' ' → logprob: -16.251171112060547
    6. '   ' → logprob: -16.876171112060547
    7. '_in' → logprob: -17.001171112060547
    8. '        ' → logprob: -17.251171112060547
    9. '    ' → logprob: -17.626171112060547
    10. 'line' → logprob: -17.876171112060547

Token 800: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00010950337309623137
    2. ' input' → logprob: -9.125109672546387
    3. '(input' → logprob: -15.125109672546387
    4. '[input' → logprob: -16.12510871887207
    5. 'line' → logprob: -16.87510871887207
    6. 'filter' → logprob: -17.62510871887207
    7. 'output' → logprob: -17.75010871887207
    8. '<input' → logprob: -17.87510871887207
    9. '   ' → logprob: -18.00010871887207
    10. '	input' → logprob: -18.12510871887207

Token 801: '_lines' (ID: 42980)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22200042009353638
    2. '_lines' → logprob: -2.7220003604888916
    3. '_' → logprob: -3.0970003604888916
    4. '.strip' → logprob: -3.2220003604888916
    5. '_line' → logprob: -3.3470003604888916
    6. 'in' → logprob: -4.972000598907471
    7. 'line' → logprob: -6.597000598907471
    8. ':' → logprob: -6.722000598907471
    9. 's' → logprob: -7.597000598907471
    10. '.rstrip' → logprob: -7.722000598907471

Token 802: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1322619765996933
    2. ':
' → logprob: -2.1322619915008545
    3. '           ' → logprob: -5.257261753082275
    4. '.strip' → logprob: -10.257262229919434
    5. '):
' → logprob: -10.632262229919434
    6. '.rstrip' → logprob: -11.382262229919434
    7. ',' → logprob: -12.007262229919434
    8. ':

' → logprob: -12.382262229919434
    9. '.' → logprob: -12.382262229919434
    10. ' if' → logprob: -12.507262229919434

Token 803: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.77627644513268e-06
    2. ' if' → logprob: -12.125008583068848
    3. 'tokens' → logprob: -13.375008583068848
    4. 'if' → logprob: -14.750008583068848
    5. '            
' → logprob: -15.000008583068848
    6. 'token' → logprob: -15.625008583068848
    7. '```' → logprob: -15.625008583068848
    8. '          ' → logprob: -15.750008583068848
    9. '               ' → logprob: -16.125009536743164
    10. '            ' → logprob: -16.500009536743164

Token 804: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3436084985733032
    2. 'try' → logprob: -2.2186083793640137
    3. 'if' (adapté à ' if') → logprob: -2.5936083793640137
    4. 'line' → logprob: -2.7186083793640137
    5. 'tokens' → logprob: -3.3436083793640137
    6. ' if' → logprob: -5.593608379364014
    7. ' line' → logprob: -6.843608379364014
    8. ' try' → logprob: -7.593608379364014
    9. '               ' → logprob: -8.218608856201172
    10. ' tokens' → logprob: -9.218608856201172

Token 805: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.13672025501728058
    2. 'line' → logprob: -2.6367201805114746
    3. ' not' → logprob: -2.8867201805114746
    4. ' line' → logprob: -7.761720180511475
    5. '   ' → logprob: -12.636720657348633
    6. '(not' → logprob: -14.636720657348633
    7. '(line' → logprob: -14.636720657348633
    8. '#line' → logprob: -15.011720657348633
    9. '=line' → logprob: -15.136720657348633
    10. 'len' → logprob: -15.261720657348633

Token 806: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0067154900170862675
    2. ' line' → logprob: -5.006715297698975
    3. '(line' → logprob: -16.381715774536133
    4. '	line' → logprob: -19.631715774536133
    5. '=line' → logprob: -20.131715774536133
    6. '#line' → logprob: -20.131715774536133
    7. '
' → logprob: -20.881715774536133
    8. '[line' → logprob: -21.131715774536133
    9. '_line' → logprob: -21.381715774536133
    10. 'Line' → logprob: -22.256715774536133

Token 807: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.023247109726071358
    2. '.' → logprob: -3.773247003555298
    3. 'strip' → logprob: -13.898246765136719
    4. ' or' → logprob: -15.023246765136719
    5. '.trim' → logprob: -15.523246765136719
    6. '.rstrip' → logprob: -16.77324676513672
    7. ' .' → logprob: -16.89824676513672
    8. ':' → logprob: -17.02324676513672
    9. ':
' → logprob: -17.89824676513672
    10. '.
' → logprob: -18.02324676513672

Token 808: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.4789593517780304
    2. '():' → logprob: -0.978959321975708
    3. ':' → logprob: -5.478959560394287
    4. ':
' → logprob: -7.728959560394287
    5. '()' → logprob: -8.478959083557129
    6. '():
' → logprob: -10.478959083557129
    7. 'continue' → logprob: -10.978959083557129
    8. ' or' → logprob: -13.853959083557129
    9. '():

' → logprob: -14.228959083557129
    10. ':return' → logprob: -14.978959083557129

Token 809: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003473825636319816
    2. 'continue' → logprob: -8.625347137451172
    3. '           ' → logprob: -9.250347137451172
    4. ' continue' → logprob: -9.750347137451172
    5. ':' → logprob: -11.875347137451172
    6. '                   ' → logprob: -13.125347137451172
    7. '_continue' → logprob: -13.875347137451172
    8. '	           ' → logprob: -14.250347137451172
    9. '```' → logprob: -14.625347137451172
    10. ' continues' → logprob: -14.750347137451172

Token 810: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0034726131707429886
    2. '               ' → logprob: -6.003472805023193
    3. '           ' → logprob: -7.503472805023193
    4. ' continue' → logprob: -7.753472805023193
    5. 'break' → logprob: -11.503472328186035
    6. '                   ' → logprob: -12.628472328186035
    7. '	continue' → logprob: -13.503472328186035
    8. '   ' → logprob: -13.753472328186035
    9. '_continue' → logprob: -15.753472328186035
    10. '       ' → logprob: -17.00347328186035

Token 811: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3557529857498594e-05
    2. '            
' → logprob: -10.87502384185791
    3. '
' → logprob: -13.25002384185791
    4. '               ' → logprob: -13.62502384185791
    5. ',' → logprob: -15.00002384185791
    6. '          ' → logprob: -15.50002384185791
    7. '<|end|>' → logprob: -15.62502384185791
    8. '		' → logprob: -16.125022888183594
    9. ' try' → logprob: -16.125022888183594
    10. 'tokens' → logprob: -16.125022888183594

Token 812: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3557529857498594e-05
    2. '
' → logprob: -11.00002384185791
    3. 'tokens' → logprob: -12.50002384185791
    4. '            
' → logprob: -14.00002384185791
    5. ' tokens' → logprob: -14.00002384185791
    6. 'token' → logprob: -14.50002384185791
    7. '       ' → logprob: -15.12502384185791
    8. '```' → logprob: -15.62502384185791
    9. 'try' → logprob: -16.500022888183594
    10. '               ' → logprob: -16.500022888183594

Token 813: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.08825039863586426
    2. 'try' → logprob: -2.9632503986358643
    3. '           ' → logprob: -3.4632503986358643
    4. ' tokens' → logprob: -6.588250160217285
    5. ' try' → logprob: -9.338250160217285
    6. '```' → logprob: -11.963250160217285
    7. 'token' → logprob: -12.463250160217285
    8. '               ' → logprob: -12.463250160217285
    9. '.tokens' → logprob: -12.963250160217285
    10. '_tokens' → logprob: -13.088250160217285

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. ':' → logprob: -15.886871337890625
    4. '＝' → logprob: -18.261871337890625
    5. '.=' → logprob: -18.761871337890625
    6. '.' → logprob: -18.886871337890625
    7. ')' → logprob: -19.011871337890625
    8. 'tokens' → logprob: -19.261871337890625
    9. ',' → logprob: -19.386871337890625
    10. ' =)' → logprob: -20.261871337890625

Token 815: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858827963471413
    2. ' self' → logprob: -3.048588275909424
    3. '[self' → logprob: -14.798588752746582
    4. '(self' → logprob: -15.298588752746582
    5. '	self' → logprob: -15.548588752746582
    6. '=self' → logprob: -16.423587799072266
    7. '<|end|>' → logprob: -17.798587799072266
    8. '           ' → logprob: -18.298587799072266
    9. '$self' → logprob: -19.173587799072266
    10. '_self' → logprob: -20.173587799072266

Token 816: '.token' (ID: 26675)
  Prédit: '.token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.token' → logprob: -1.0206720617134124e-05
    2. 'token' → logprob: -11.50001049041748
    3. '.' → logprob: -17.875009536743164
    4. '	token' → logprob: -17.875009536743164
    5. 'Tokenizer' → logprob: -18.375009536743164
    6. '       ' → logprob: -18.625009536743164
    7. '           ' → logprob: -19.500009536743164
    8. '   ' → logprob: -19.625009536743164
    9. '[token' → logprob: -19.875009536743164
    10. '_token' → logprob: -20.250009536743164

Token 817: 'izer' (ID: 4492)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.3868841528892517
    2. 'izer' → logprob: -1.1368842124938965
    3. 'er' → logprob: -11.886883735656738
    4. 'token' → logprob: -13.386883735656738
    5. 'IZER' → logprob: -13.886883735656738
    6. '.token' → logprob: -14.011883735656738
    7. 'IZE' → logprob: -14.636883735656738
    8. '       ' → logprob: -14.761883735656738
    9. 'izeit' → logprob: -15.011883735656738
    10. 'itize' → logprob: -15.511883735656738

Token 818: '.token' (ID: 26675)
  Prédit: '.token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.token' → logprob: -0.0001234428636962548
    2. 'token' → logprob: -9.000123023986816
    3. '_token' → logprob: -18.250123977661133
    4. '	token' → logprob: -18.750123977661133
    5. '.' → logprob: -18.875123977661133
    6. '(token' → logprob: -19.375123977661133
    7. '.tokens' → logprob: -19.500123977661133
    8. '-token' → logprob: -20.125123977661133
    9. ' .' → logprob: -20.250123977661133
    10. '.Token' → logprob: -21.125123977661133

Token 819: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.0007534049218520522
    2. 'token' → logprob: -7.250753402709961
    3. ' tokenize' → logprob: -10.250753402709961
    4. '```' → logprob: -13.250753402709961
    5. 'tokens' → logprob: -13.375753402709961
    6. '_token' → logprob: -14.000753402709961
    7. '(token' → logprob: -14.125753402709961
    8. 't' → logprob: -14.375753402709961
    9. 'oken' → logprob: -14.750753402709961
    10. 'e' → logprob: -15.000753402709961

Token 820: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. '[line' → logprob: -16.875
    4. '=line' → logprob: -16.875
    5. '#line' → logprob: -17.625
    6. '           ' → logprob: -18.125
    7. ' line' → logprob: -18.5
    8. ' (' → logprob: -18.625
    9. '(
' → logprob: -19.125
    10. ',line' → logprob: -19.375

Token 821: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10246230661869049
    2. ')
' → logprob: -2.3524622917175293
    3. '           ' → logprob: -6.102462291717529
    4. ')
' → logprob: -11.227462768554688
    5. '       ' → logprob: -14.477462768554688
    6. '               ' → logprob: -14.602462768554688
    7. ' )' → logprob: -14.852462768554688
    8. ')`
' → logprob: -14.977462768554688
    9. '          ' → logprob: -15.227462768554688
    10. ')

' → logprob: -15.602462768554688

Token 822: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012913089012727141
    2. 'result' → logprob: -6.876291275024414
    3. ' result' → logprob: -8.376291275024414
    4. ' try' → logprob: -11.376291275024414
    5. '```' → logprob: -12.001291275024414
    6. 'try' → logprob: -12.126291275024414
    7. '       ' → logprob: -13.376291275024414
    8. '               ' → logprob: -14.501291275024414
    9. ' results' → logprob: -14.626291275024414
    10. 'results' → logprob: -14.751291275024414

Token 823: ' value' (ID: 1432)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.22732846438884735
    2. 'try' → logprob: -1.7273284196853638
    3. '           ' → logprob: -3.8523285388946533
    4. ' result' → logprob: -5.852328300476074
    5. ' try' → logprob: -6.602328300476074
    6. 'value' (adapté à ' value') → logprob: -9.227328300476074
    7. 'res' → logprob: -12.102328300476074
    8. '```' → logprob: -12.102328300476074
    9. '               ' → logprob: -12.477328300476074
    10. 'answer' → logprob: -12.727328300476074

Token 824: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889044284820557
    2. '=' → logprob: -2.578890323638916
    3. '        ' → logprob: -15.453890800476074
    4. ':' → logprob: -15.828890800476074
    5. '   ' → logprob: -16.203889846801758
    6. '       ' → logprob: -16.453889846801758
    7. '           ' → logprob: -16.578889846801758
    8. ' ' → logprob: -16.828889846801758
    9. '    ' → logprob: -17.078889846801758
    10. ')' → logprob: -17.828889846801758

Token 825: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007100477814674377
    2. ' self' → logprob: -7.2507100105285645
    3. '           ' → logprob: -16.625709533691406
    4. '(self' → logprob: -17.000709533691406
    5. 'round' → logprob: -17.125709533691406
    6. '   ' → logprob: -18.750709533691406
    7. '	self' → logprob: -18.875709533691406
    8. '       ' → logprob: -19.375709533691406
    9. '=self' → logprob: -20.125709533691406
    10. 'float' → logprob: -20.125709533691406

Token 826: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.03602183610200882
    2. 'e' → logprob: -4.036021709442139
    3. 'valuator' → logprob: -4.036021709442139
    4. 'evalu' → logprob: -11.286022186279297
    5. ' evaluator' → logprob: -11.661022186279297
    6. 'evaluate' → logprob: -12.036022186279297
    7. 'valuate' → logprob: -12.161022186279297
    8. 'Evaluator' → logprob: -12.286022186279297
    9. 'valu' → logprob: -13.161022186279297
    10. '.evaluate' → logprob: -13.161022186279297

Token 827: 'valuator' (ID: 144940)
  Prédit: 'valuate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuate' → logprob: -0.008626751601696014
    2. 'val' → logprob: -5.258626937866211
    3. 'valuator' → logprob: -6.008626937866211
    4. 'value' → logprob: -7.008626937866211
    5. 'v' → logprob: -11.258626937866211
    6. 'vate' → logprob: -11.883626937866211
    7. 'alu' → logprob: -12.633626937866211
    8. 'valu' → logprob: -13.883626937866211
    9. 'valuer' → logprob: -14.383626937866211
    10. 'evaluate' → logprob: -14.633626937866211

Token 828: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -5.538490950129926e-05
    2. 'evaluate' → logprob: -9.875055313110352
    3. '.' → logprob: -12.625055313110352
    4. ' .' → logprob: -14.750055313110352
    5. '   ' → logprob: -17.00005531311035
    6. '.calculate' → logprob: -18.25005531311035
    7. '       ' → logprob: -18.37505531311035
    8. '           ' → logprob: -18.50005531311035
    9. '.validate' → logprob: -19.12505531311035
    10. '```' → logprob: -19.12505531311035

Token 829: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -8.180258191714529e-06
    2. 'tokens' → logprob: -11.750008583068848
    3. '(token' → logprob: -16.50000762939453
    4. '(t' → logprob: -16.50000762939453
    5. '(' → logprob: -17.37500762939453
    6. '.tokens' → logprob: -18.37500762939453
    7. ' tokens' → logprob: -19.00000762939453
    8. '(tasks' → logprob: -20.00000762939453
    9. '(
' → logprob: -20.62500762939453
    10. '_tokens' → logprob: -21.00000762939453

Token 830: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17233586311340332
    2. ')
' → logprob: -1.9223358631134033
    3. '           ' → logprob: -4.422335624694824
    4. ')
' → logprob: -10.922335624694824
    5. '               ' → logprob: -11.672335624694824
    6. '          ' → logprob: -13.672335624694824
    7. '       ' → logprob: -14.297335624694824
    8. ')\
' → logprob: -14.297335624694824
    9. ' )
' → logprob: -14.422335624694824
    10. ')

' → logprob: -14.672335624694824

Token 831: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.574251918005757e-05
    2. '```' → logprob: -10.875055313110352
    3. '<|end|>' → logprob: -11.250055313110352
    4. '            
' → logprob: -11.500055313110352
    5. '
' → logprob: -12.125055313110352
    6. '               ' → logprob: -13.250055313110352
    7. '<|end|>' → logprob: -13.500055313110352
    8. 'result' → logprob: -14.000055313110352
    9. '       ' → logprob: -14.125055313110352
    10. ' results' → logprob: -14.375055313110352

Token 832: ' #' (ID: 1069)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.65084308385849
    2. 'results' → logprob: -0.90084308385849
    3. '           ' → logprob: -2.6508431434631348
    4. ' formatted' → logprob: -7.150843143463135
    5. 'formatted' → logprob: -7.275843143463135
    6. 'result' → logprob: -9.525842666625977
    7. ' result' → logprob: -11.150842666625977
    8. '	results' → logprob: -12.400842666625977
    9. 'output' → logprob: -13.150842666625977
    10. '_results' → logprob: -13.900842666625977

Token 833: ' Format' (ID: 26193)
  Prédit: 'formatted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'formatted' → logprob: -0.6341753005981445
    2. 'results' → logprob: -1.1341753005981445
    3. ' formatted' → logprob: -2.1341753005981445
    4. ' results' → logprob: -4.0091753005981445
    5. '           ' → logprob: -4.8841753005981445
    6. 'result' → logprob: -5.6341753005981445
    7. 'format' → logprob: -8.884175300598145
    8. ' result' → logprob: -9.134175300598145
    9. 'output' → logprob: -10.009175300598145
    10. 'fmt' → logprob: -12.009175300598145

Token 834: ' result' (ID: 1534)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.290713906288147
    2. 'result' → logprob: -1.790713906288147
    3. '_result' → logprob: -3.1657137870788574
    4. 'value' → logprob: -4.415713787078857
    5. '_value' → logprob: -4.915713787078857
    6. 'f' → logprob: -5.040713787078857
    7. '(value' → logprob: -5.165713787078857
    8. '(result' → logprob: -5.790713787078857
    9. '(' → logprob: -6.165713787078857
    10. '           ' → logprob: -6.290713787078857

Token 835: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17560753226280212
    2. '=' → logprob: -2.550607442855835
    3. '(f' → logprob: -3.175607442855835
    4. '           ' → logprob: -3.550607442855835
    5. '(' → logprob: -5.300607681274414
    6. 'f' → logprob: -6.300607681274414
    7. '(value' → logprob: -6.925607681274414
    8. 'result' → logprob: -7.050607681274414
    9. '{' → logprob: -7.425607681274414
    10. 'value' → logprob: -7.550607681274414

Token 836: ' required' (ID: 3759)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0012144023785367608
    2. ' f' → logprob: -6.751214504241943
    3. 'format' → logprob: -10.251214027404785
    4. '{' → logprob: -12.126214027404785
    5. 'round' → logprob: -13.376214027404785
    6. '(f' → logprob: -14.126214027404785
    7. 'precision' → logprob: -14.376214027404785
    8. '```' → logprob: -16.1262149810791
    9. '	f' → logprob: -16.2512149810791
    10. ' format' → logprob: -16.6262149810791

Token 837: ' precision' (ID: 27303)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3285861313343048
    2. 'format' → logprob: -2.0785861015319824
    3. 'precision' → logprob: -2.0785861015319824
    4. ' f' → logprob: -3.9535861015319824
    5. '_precision' → logprob: -5.828586101531982
    6. ' precision' → logprob: -5.953586101531982
    7. ' format' → logprob: -6.078586101531982
    8. '.' → logprob: -6.953586101531982
    9. 'formatted' → logprob: -7.953586101531982
    10. '{' → logprob: -8.07858657836914

Token 838: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015038357116281986
    2. 'result' → logprob: -5.01503849029541
    3. 'results' → logprob: -5.64003849029541
    4. 'formatted' → logprob: -5.76503849029541
    5. ' results' → logprob: -7.89003849029541
    6. ' formatted' → logprob: -7.89003849029541
    7. '{' → logprob: -8.14003849029541
    8. '            
' → logprob: -8.76503849029541
    9. '
' → logprob: -9.01503849029541
    10. ' result' → logprob: -9.51503849029541

Token 839: ' absolute' (ID: 17786)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.5458496809005737
    2. 'append' → logprob: -1.5458496809005737
    3. 'round' → logprob: -2.7958498001098633
    4. 'strip' → logprob: -3.2958498001098633
    5. ' append' → logprob: -3.2958498001098633
    6. 'trim' → logprob: -3.9208498001098633
    7. 'f' → logprob: -4.170849800109863
    8. ' rounding' → logprob: -4.295849800109863
    9. 'remove' → logprob: -5.545849800109863
    10. ' f' → logprob: -5.670849800109863

Token 840: ' tolerance' (ID: 46581)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.2059202939271927
    2. '_value' → logprob: -1.8309203386306763
    3. 'format' → logprob: -4.455920219421387
    4. '(value' → logprob: -5.330920219421387
    5. '_precision' → logprob: -6.080920219421387
    6. ' value' → logprob: -6.330920219421387
    7. 'val' → logprob: -6.830920219421387
    8. '_format' → logprob: -6.830920219421387
    9. '=format' → logprob: -7.705920219421387
    10. 'precision' → logprob: -7.705920219421387

Token 841: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6803747415542603
    2. 'result' → logprob: -1.1803747415542603
    3. 'formatted' → logprob: -2.9303746223449707
    4. '{' → logprob: -3.6803746223449707
    5. 'value' → logprob: -4.055374622344971
    6. 'f' → logprob: -4.055374622344971
    7. '(f' → logprob: -4.430374622344971
    8. ' =' → logprob: -4.930374622344971
    9. '=' → logprob: -4.930374622344971
    10. '("{' → logprob: -5.055374622344971

Token 842: ' error' (ID: 2915)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4650371074676514
    2. 'round' → logprob: -1.5900371074676514
    3. 'value' → logprob: -2.3400371074676514
    4. '0' → logprob: -2.4650371074676514
    5. '.' → logprob: -2.7150371074676514
    6. 'abs' → logprob: -2.8400371074676514
    7. 'f' → logprob: -2.8400371074676514
    8. '10' → logprob: -2.9650371074676514
    9. ' rounding' → logprob: -3.2150371074676514
    10. ' value' → logprob: -3.4650371074676514

Token 843: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03863118216395378
    2. 'formatted' → logprob: -4.038630962371826
    3. 'result' → logprob: -4.163630962371826
    4. '{' → logprob: -6.413630962371826
    5. ' formatted' → logprob: -7.288630962371826
    6. 'results' → logprob: -7.538630962371826
    7. 'format' → logprob: -7.538630962371826
    8. 'output' → logprob: -7.788630962371826
    9. '```' → logprob: -8.538631439208984
    10. 'value' → logprob: -8.913631439208984

Token 844: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029964817222207785
    2. 'result' → logprob: -6.252996444702148
    3. 'formatted' → logprob: -7.502996444702148
    4. 'results' → logprob: -8.627996444702148
    5. '{' → logprob: -9.127996444702148
    6. 'output' → logprob: -9.752996444702148
    7. ' formatted' → logprob: -10.252996444702148
    8. 'format' → logprob: -10.627996444702148
    9. 'f' → logprob: -10.627996444702148
    10. ' result' → logprob: -11.627996444702148

Token 845: ' formatted' (ID: 43831)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.1723113059997559
    2. 'formatted' (adapté à ' formatted') → logprob: -1.1723113059997559
    3. '           ' → logprob: -1.6723113059997559
    4. 'result' → logprob: -2.172311305999756
    5. ' formatted' → logprob: -3.172311305999756
    6. ' results' → logprob: -3.422311305999756
    7. ' result' → logprob: -5.672311305999756
    8. '```' → logprob: -8.047311782836914
    9. 'output' → logprob: -8.297311782836914
    10. 'format' → logprob: -8.797311782836914

Token 846: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.1112363338470459
    2. '_result' → logprob: -2.486236333847046
    3. ' =' → logprob: -4.611236572265625
    4. '=' → logprob: -4.736236572265625
    5. '(' → logprob: -6.736236572265625
    6. 'value' → logprob: -7.111236572265625
    7. '(f' → logprob: -7.611236572265625
    8. 'result' → logprob: -8.361236572265625
    9. '_output' → logprob: -8.611236572265625
    10. '(value' → logprob: -9.361236572265625

Token 847: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002483031013980508
    2. ' f' → logprob: -6.002482891082764
    3. 'format' → logprob: -11.877483367919922
    4. '(f' → logprob: -15.877483367919922
    5. '{' → logprob: -16.627483367919922
    6. 'round' → logprob: -16.752483367919922
    7. ' format' → logprob: -17.502483367919922
    8. '	f' → logprob: -18.627483367919922
    9. '   ' → logprob: -18.752483367919922
    10. '       ' → logprob: -19.627483367919922

Token 848: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.03887361288070679
    2. '{' → logprob: -3.2888736724853516
    3. 'f' → logprob: -7.663873672485352
    4. '(f' → logprob: -8.038873672485352
    5. ''{' → logprob: -10.663873672485352
    6. '("{' → logprob: -11.163873672485352
    7. '{{' → logprob: -14.163873672485352
    8. '"' → logprob: -14.413873672485352
    9. ' f' → logprob: -14.788873672485352
    10. '{"' → logprob: -16.03887367248535

Token 849: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.00029708960209973156
    2. 'round' → logprob: -8.125297546386719
    3. 'abs' → logprob: -14.750297546386719
    4. ' value' → logprob: -15.125297546386719
    5. 'format' → logprob: -15.625297546386719
    6. '(value' → logprob: -16.25029754638672
    7. ''value' → logprob: -16.50029754638672
    8. 'val' → logprob: -18.00029754638672
    9. 'float' → logprob: -18.12529754638672
    10. '"value' → logprob: -18.25029754638672

Token 850: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -1.2664456789934775e-06
    2. ' :.' → logprob: -13.625000953674316
    3. '.' → logprob: -17.000001907348633
    4. '.{' → logprob: -17.125001907348633
    5. ' .' → logprob: -17.750001907348633
    6. ':{' → logprob: -18.500001907348633
    7. ':' → logprob: -19.250001907348633
    8. '{' → logprob: -20.375001907348633
    9. ',.' → logprob: -20.625001907348633
    10. '.:' → logprob: -21.000001907348633

Token 851: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00024370834580622613
    2. 'self' → logprob: -8.750244140625
    3. '6' → logprob: -9.375244140625
    4. ' {' → logprob: -16.625244140625
    5. ' self' → logprob: -16.875244140625
    6. '[self' → logprob: -16.875244140625
    7. '```' → logprob: -17.125244140625
    8. '{
' → logprob: -17.625244140625
    9. '(self' → logprob: -18.375244140625
    10. '{i' → logprob: -18.500244140625

Token 852: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.816093228830141e-06
    2. ' self' → logprob: -12.87500286102295
    3. '{' → logprob: -15.62500286102295
    4. '6' → logprob: -16.875001907348633
    5. '(self' → logprob: -17.750001907348633
    6. '[self' → logprob: -20.250001907348633
    7. '7' → logprob: -20.625001907348633
    8. '	self' → logprob: -20.875001907348633
    9. 's' → logprob: -20.875001907348633
    10. '=self' → logprob: -21.000001907348633

Token 853: '.output' (ID: 27521)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.00671584764495492
    2. '.output' → logprob: -5.006715774536133
    3. ' output' → logprob: -15.256715774536133
    4. '.' → logprob: -16.131715774536133
    5. '(output' → logprob: -16.756715774536133
    6. '{' → logprob: -17.256715774536133
    7. '	output' → logprob: -17.256715774536133
    8. '$output' → logprob: -17.631715774536133
    9. ' ' → logprob: -17.881715774536133
    10. 'Output' → logprob: -18.256715774536133

Token 854: '_precision' (ID: 134656)
  Prédit: '_precision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_precision' → logprob: -0.005255218595266342
    2. 'precision' → logprob: -5.255255222320557
    3. 'Precision' → logprob: -10.880254745483398
    4. 'output' → logprob: -13.505254745483398
    5. '6' → logprob: -13.880254745483398
    6. ' Precision' → logprob: -16.8802547454834
    7. 'f' → logprob: -17.0052547454834
    8. '{' → logprob: -17.1302547454834
    9. ' precision' → logprob: -17.2552547454834
    10. '_PREC' → logprob: -17.5052547454834

Token 855: '}' (ID: 92)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00013858173042535782
    2. '}' → logprob: -9.000138282775879
    3. '}"' → logprob: -11.125138282775879
    4. '}}"' → logprob: -15.125138282775879
    5. 'g' → logprob: -16.875139236450195
    6. ' f' → logprob: -17.125139236450195
    7. '6' → logprob: -17.250139236450195
    8. '```' → logprob: -17.625139236450195
    9. '
' → logprob: -18.250139236450195
    10. '"' → logprob: -18.875139236450195

Token 856: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0564331205387134e-05
    2. 'g' → logprob: -12.25001049041748
    3. '}"' → logprob: -12.62501049041748
    4. '}' → logprob: -13.00001049041748
    5. '```' → logprob: -16.375011444091797
    6. '6' → logprob: -16.625011444091797
    7. '
' → logprob: -17.625011444091797
    8. '"' → logprob: -17.875011444091797
    9. 'lf' → logprob: -18.250011444091797
    10. '}}"' → logprob: -18.625011444091797

Token 857: '}"
' (ID: 26189)
  Prédit: '}"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"
' → logprob: -0.25197163224220276
    2. '}"' → logprob: -1.5019716024398804
    3. '}' → logprob: -10.376971244812012
    4. '}".' → logprob: -11.751971244812012
    5. '}"

' → logprob: -12.751971244812012
    6. ' }' → logprob: -15.751971244812012
    7. '"' → logprob: -15.876971244812012
    8. '"
' → logprob: -16.376972198486328
    9. '}
' → logprob: -16.626972198486328
    10. '}">
' → logprob: -17.251972198486328

Token 858: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001605115394340828
    2. 'results' → logprob: -9.500160217285156
    3. '
' → logprob: -9.875160217285156
    4. '<|end|>' → logprob: -10.750160217285156
    5. ' results' → logprob: -12.250160217285156
    6. '            
' → logprob: -12.875160217285156
    7. '       ' → logprob: -14.000160217285156
    8. ',' → logprob: -14.125160217285156
    9. '```' → logprob: -14.125160217285156
    10. '<|end|>' → logprob: -14.375160217285156

Token 859: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0037497254088521004
    2. '           ' → logprob: -5.753749847412109
    3. ' results' → logprob: -7.503749847412109
    4. '       ' → logprob: -11.25374984741211
    5. '(results' → logprob: -12.50374984741211
    6. '
' → logprob: -13.00374984741211
    7. '	results' → logprob: -14.00374984741211
    8. '.results' → logprob: -14.37874984741211
    9. '            
' → logprob: -15.12874984741211
    10. '```' → logprob: -16.00374984741211

Token 860: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.248469718324486e-05
    2. '.' → logprob: -10.750022888183594
    3. 'append' → logprob: -14.875022888183594
    4. '.app' → logprob: -15.125022888183594
    5. '.ap' → logprob: -15.750022888183594
    6. '.extend' → logprob: -16.125022888183594
    7. '.Append' → logprob: -16.750022888183594
    8. ' .' → logprob: -18.625022888183594
    9. '_append' → logprob: -19.250022888183594
    10. '.push' → logprob: -19.500022888183594

Token 861: '(form' (ID: 33445)
  Prédit: '(form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -7.941850526549388e-06
    2. 'formatted' → logprob: -11.750007629394531
    3. '(f' → logprob: -18.62500762939453
    4. 'form' → logprob: -19.25000762939453
    5. '(' → logprob: -21.00000762939453
    6. ' formatted' → logprob: -21.00000762939453
    7. 'Formatted' → logprob: -22.25000762939453
    8. '	form' → logprob: -22.37500762939453
    9. '(filtered' → logprob: -23.00000762939453
    10. '(parsed' → logprob: -23.37500762939453

Token 862: 'atted' (ID: 19639)
  Prédit: 'atted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atted' → logprob: -0.0014511867193505168
    2. 'at' → logprob: -6.751451015472412
    3. 'formatted' → logprob: -8.62645149230957
    4. 'ated' → logprob: -9.25145149230957
    5. 'att' → logprob: -13.25145149230957
    6. 'Formatted' → logprob: -13.75145149230957
    7. 'atting' → logprob: -14.25145149230957
    8. 'atter' → logprob: -14.25145149230957
    9. 'attered' → logprob: -15.00145149230957
    10. '```' → logprob: -15.00145149230957

Token 863: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007672398816794157
    2. ')
' → logprob: -4.882672309875488
    3. '       ' → logprob: -9.882672309875488
    4. ')return' → logprob: -11.257672309875488
    5. '<|end|>' → logprob: -14.007672309875488
    6. ')
' → logprob: -14.382672309875488
    7. '```' → logprob: -15.757672309875488
    8. ')\
' → logprob: -15.757672309875488
    9. ')

' → logprob: -16.132673263549805
    10. '),' → logprob: -16.382673263549805

Token 864: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07595609128475189
    2. '
' → logprob: -3.325956106185913
    3. 'return' → logprob: -3.325956106185913
    4. ' return' → logprob: -7.325955867767334
    5. '<|end|>' → logprob: -8.325956344604492
    6. '```' → logprob: -8.825956344604492
    7. '        
' → logprob: -9.325956344604492
    8. '
' → logprob: -9.575956344604492
    9. '	return' → logprob: -11.450956344604492
    10. '\
' → logprob: -11.825956344604492

Token 865: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06362278759479523
    2. '       ' → logprob: -2.8136227130889893
    3. ' return' → logprob: -6.563622951507568
    4. '
' → logprob: -9.06362247467041
    5. '   ' → logprob: -9.06362247467041
    6. '	return' → logprob: -12.31362247467041
    7. '```' → logprob: -12.43862247467041
    8. '        
' → logprob: -14.31362247467041
    9. '<|end|>' → logprob: -14.56362247467041
    10. '           ' → logprob: -14.93862247467041

Token 866: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -7.493430894101039e-05
    2. ' results' → logprob: -9.500075340270996
    3. '(results' → logprob: -18.62507438659668
    4. '	results' → logprob: -19.62507438659668
    5. '.results' → logprob: -23.12507438659668
    6. 'result' → logprob: -23.50007438659668
    7. '
' → logprob: -23.62507438659668
    8. 'values' → logprob: -24.25007438659668
    9. '_results' → logprob: -24.75007438659668
    10. 'Results' → logprob: -25.37507438659668

Token 867: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 868: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16831345856189728
    2. 'def' → logprob: -2.668313503265381
    3. 'if' → logprob: -3.168313503265381
    4. '<|end|>' → logprob: -3.418313503265381
    5. '```' → logprob: -4.668313503265381
    6. 'import' → logprob: -6.793313503265381
    7. '<|end|>' → logprob: -9.418313026428223
    8. 'class' → logprob: -10.918313026428223
    9. ' if' → logprob: -11.168313026428223
    10. '@pytest' → logprob: -11.293313026428223

Token 869: ' ---' (ID: 26691)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03055378422141075
    2. 'def' → logprob: -3.7805538177490234
    3. 'if' → logprob: -5.030553817749023
    4. 'import' → logprob: -7.405553817749023
    5. '```' → logprob: -9.405553817749023
    6. '<|end|>' → logprob: -9.905553817749023
    7. '#if' → logprob: -13.030553817749023
    8. '@pytest' → logprob: -13.780553817749023
    9. 'class' → logprob: -13.905553817749023
    10. '#!/' → logprob: -14.655553817749023

Token 870: ' Main' (ID: 7956)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03599170967936516
    2. '#' → logprob: -3.535991668701172
    3. 'def' → logprob: -5.410991668701172
    4. 'import' → logprob: -6.785991668701172
    5. ' if' → logprob: -7.535991668701172
    6. '```' → logprob: -9.535991668701172
    7. 'If' → logprob: -11.785991668701172
    8. 'from' → logprob: -11.910991668701172
    9. 'class' → logprob: -12.785991668701172
    10. '__' → logprob: -13.660991668701172

Token 871: ' execution' (ID: 20860)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011093211360275745
    2. 'def' → logprob: -4.5110931396484375
    3. ' if' → logprob: -10.261093139648438
    4. 'import' → logprob: -12.386093139648438
    5. '#' → logprob: -12.511093139648438
    6. '```' → logprob: -12.886093139648438
    7. '
' → logprob: -17.386093139648438
    8. '#if' → logprob: -17.761093139648438
    9. 'from' → logprob: -17.886093139648438
    10. '#!/' → logprob: -18.511093139648438

Token 872: ' logic' (ID: 18485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0031848405487835407
    2. 'def' → logprob: -5.753184795379639
    3. ' if' → logprob: -12.253185272216797
    4. '```' → logprob: -13.128185272216797
    5. 'import' → logprob: -15.128185272216797
    6. '#' → logprob: -18.628185272216797
    7. 'from' → logprob: -19.378185272216797
    8. ':' → logprob: -19.628185272216797
    9. '
' → logprob: -19.878185272216797
    10. 'ifdef' → logprob: -21.128185272216797

Token 873: ' --' (ID: 2230)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12693630158901215
    2. 'def' → logprob: -2.126936197280884
    3. ' if' → logprob: -11.876935958862305
    4. '```' → logprob: -14.251935958862305
    5. 'import' → logprob: -14.376935958862305
    6. ' def' → logprob: -17.001935958862305
    7. 'from' → logprob: -18.751935958862305
    8. '
' → logprob: -19.001935958862305
    9. '#' → logprob: -20.001935958862305
    10. '

' → logprob: -20.501935958862305

Token 874: '-

' (ID: 16364)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006718925200402737
    2. 'def' → logprob: -5.00671911239624
    3. ' if' → logprob: -12.631718635559082
    4. '```' → logprob: -15.381718635559082
    5. 'import' → logprob: -17.3817195892334
    6. '#' → logprob: -19.8817195892334
    7. ' def' → logprob: -20.1317195892334
    8. 'input' → logprob: -20.8817195892334
    9. 'ifdef' → logprob: -21.0067195892334
    10. 'class' → logprob: -21.1317195892334

Token 875: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3132660686969757
    2. 'def' → logprob: -1.3132660388946533
    3. ' if' → logprob: -12.813265800476074
    4. '```' → logprob: -14.188265800476074
    5. 'import' → logprob: -14.438265800476074
    6. '#' → logprob: -15.813265800476074
    7. 'operator' → logprob: -16.56326675415039
    8. ' def' → logprob: -16.68826675415039
    9. 'class' → logprob: -16.81326675415039
    10. 'from' → logprob: -17.18826675415039

Token 876: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0007118358626030385
    2. 'main' → logprob: -7.250711917877197
    3. ' run' → logprob: -13.250711441040039
    4. '_main' → logprob: -15.875711441040039
    5. '	main' → logprob: -17.37571144104004
    6. 'run' → logprob: -20.37571144104004
    7. ' solve' → logprob: -20.62571144104004
    8. ' parse' → logprob: -21.75071144104004
    9. ' mains' → logprob: -22.00071144104004
    10. 'm' → logprob: -22.12571144104004

Token 877: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.12258882028982e-05
    2. ' ():' → logprob: -10.37506103515625
    3. '()' → logprob: -10.87506103515625
    4. '():
' → logprob: -11.50006103515625
    5. '(argv' → logprob: -14.37506103515625
    6. '(args' → logprob: -16.12506103515625
    7. '(' → logprob: -16.75006103515625
    8. '():
' → logprob: -16.75006103515625
    9. '()>' → logprob: -17.37506103515625
    10. ' ()' → logprob: -18.25006103515625

Token 878: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2777583599090576
    2. ' operator' → logprob: -2.2777583599090576
    3. 'operator' → logprob: -2.6527583599090576
    4. 'input' → logprob: -3.6527583599090576
    5. ' input' → logprob: -3.6527583599090576
    6. ' lines' → logprob: -4.402758598327637
    7. 'import' → logprob: -5.652758598327637
    8. 'lines' → logprob: -6.777758598327637
    9. ' import' → logprob: -7.402758598327637
    10. '	operator' → logprob: -10.152758598327637

Token 879: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' (adapté à ' operator') → logprob: -0.31570950150489807
    2. ' operator' → logprob: -1.4407094717025757
    3. 'import' → logprob: -3.6907095909118652
    4. ' import' → logprob: -5.940709590911865
    5. '   ' → logprob: -6.065709590911865
    6. 'input' → logprob: -6.065709590911865
    7. ' input' → logprob: -7.190709590911865
    8. 'op' → logprob: -7.940709590911865
    9. ' op' → logprob: -8.190709114074707
    10. ' lines' → logprob: -8.815709114074707

Token 880: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.7491250875755213e-05
    2. '_' → logprob: -11.250027656555176
    3. 's' → logprob: -11.250027656555176
    4. '_mapping' → logprob: -13.875027656555176
    5. '_maps' → logprob: -15.375027656555176
    6. '_factory' → logprob: -16.87502670288086
    7. 'map' → logprob: -17.37502670288086
    8. '=_' → logprob: -17.37502670288086
    9. '_m' → logprob: -18.00002670288086
    10. '=' → logprob: -18.12502670288086

Token 881: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -18.40475082397461
    4. ':' → logprob: -18.90475082397461
    5. ')' → logprob: -19.02975082397461
    6. ' =
' → logprob: -19.02975082397461
    7. '()' → logprob: -19.77975082397461
    8. '=get' → logprob: -19.90475082397461
    9. '   ' → logprob: -20.15475082397461
    10. ' ' → logprob: -20.40475082397461

Token 882: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00012356207298580557
    2. ' get' → logprob: -9.000123977661133
    3. '{
' → logprob: -15.750123977661133
    4. '{' → logprob: -18.500123977661133
    5. '	get' → logprob: -19.875123977661133
    6. '(get' → logprob: -21.875123977661133
    7. '.get' → logprob: -22.500123977661133
    8. '=get' → logprob: -22.625123977661133
    9. '_get' → logprob: -23.250123977661133
    10. ' ' → logprob: -23.250123977661133

Token 883: '_operator' (ID: 97926)
  Prédit: '_operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operator' → logprob: -5.512236498361744e-07
    2. 'operator' → logprob: -14.625000953674316
    3. '_OPERATOR' → logprob: -18.875
    4. '_operation' → logprob: -21.125
    5. 'Operator' → logprob: -21.125
    6. '_operand' → logprob: -21.25
    7. '_controller' → logprob: -22.0
    8. '_' → logprob: -22.375
    9. ' operator' → logprob: -22.375
    10. '_op' → logprob: -22.625

Token 884: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.9361264946837764e-07
    2. 'map' → logprob: -15.625
    3. 'Map' → logprob: -18.0
    4. '_' → logprob: -18.75
    5. '()' → logprob: -19.125
    6. '_MAP' → logprob: -20.875
    7. '_maps' → logprob: -21.5
    8. ' map' → logprob: -22.375
    9. '```' → logprob: -22.75
    10. 's' → logprob: -22.75

Token 885: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02462797984480858
    2. '
' → logprob: -3.774627923965454
    3. '    
' → logprob: -6.899628162384033
    4. 'token' → logprob: -9.024627685546875
    5. 'stack' → logprob: -9.524627685546875
    6. ' tokenizer' → logprob: -10.024627685546875
    7. 'Tokenizer' → logprob: -10.649627685546875
    8. ')' → logprob: -10.649627685546875
    9. '<|end|>' → logprob: -11.274627685546875
    10. '()' → logprob: -11.774627685546875

Token 886: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43560728430747986
    2. ' tokenizer' → logprob: -1.0606073141098022
    3. 'token' → logprob: -5.310607433319092
    4. ' token' → logprob: -6.310607433319092
    5. '
' → logprob: -9.435606956481934
    6. 'Tokenizer' → logprob: -10.935606956481934
    7. '   ' → logprob: -11.935606956481934
    8. '    
' → logprob: -12.060606956481934
    9. ' tokenize' → logprob: -12.185606956481934
    10. '	token' → logprob: -12.435606956481934

Token 887: ' tokenizer' (ID: 99665)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.00136678502894938
    2. 'stack' → logprob: -7.00136661529541
    3. ' tokenizer' → logprob: -7.75136661529541
    4. ' token' → logprob: -11.12636661529541
    5. '   ' → logprob: -11.87636661529541
    6. ' stack' → logprob: -13.50136661529541
    7. '
' → logprob: -14.00136661529541
    8. 'Tokenizer' → logprob: -14.50136661529541
    9. '    
' → logprob: -15.50136661529541
    10. 'e' → logprob: -15.87636661529541

Token 888: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587486147880554
    2. '=' → logprob: -3.0485875606536865
    3. ' ' → logprob: -17.798587799072266
    4. '   ' → logprob: -18.423587799072266
    5. '  ' → logprob: -18.798587799072266
    6. ' =
' → logprob: -18.798587799072266
    7. ' ' → logprob: -19.048587799072266
    8. ')' → logprob: -19.048587799072266
    9. '=
' → logprob: -19.298587799072266
    10. ',' → logprob: -19.548587799072266

Token 889: ' Token' (ID: 17951)
  Prédit: 'Tokenizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tokenizer' → logprob: -8.061054359131958e-06
    2. ' Token' → logprob: -12.000007629394531
    3. 'Token' → logprob: -13.250007629394531
    4. '	Token' → logprob: -21.12500762939453
    5. ' tokenizer' → logprob: -21.75000762939453
    6. 'token' → logprob: -21.87500762939453
    7. '   ' → logprob: -23.12500762939453
    8. 'Lexer' → logprob: -23.75000762939453
    9. 'TOKEN' → logprob: -23.87500762939453
    10. 'Serializer' → logprob: -24.62500762939453

Token 890: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.0067170290276408195
    2. 'Tokenizer' → logprob: -5.006717205047607
    3. 'IZER' → logprob: -13.75671672821045
    4. 'zier' → logprob: -15.25671672821045
    5. 'zer' → logprob: -16.131717681884766
    6. 'ize' → logprob: -16.506717681884766
    7. 'Token' → logprob: -16.631717681884766
    8. 'token' → logprob: -17.756717681884766
    9. 'oken' → logprob: -17.881717681884766
    10. 'Analyzer' → logprob: -18.256717681884766

Token 891: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.0030087267514318228
    2. '(token' → logprob: -6.003008842468262
    3. '(' → logprob: -7.878008842468262
    4. 'operator' → logprob: -9.003008842468262
    5. '(
' → logprob: -10.878008842468262
    6. '(Token' → logprob: -12.253008842468262
    7. '   ' → logprob: -13.253008842468262
    8. ' (' → logprob: -13.378008842468262
    9. 'token' → logprob: -13.503008842468262
    10. '(op' → logprob: -14.503008842468262

Token 892: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -9.088346359931165e-07
    2. 'map' → logprob: -14.750000953674316
    3. '=' → logprob: -15.250000953674316
    4. '=_' → logprob: -16.625
    5. ')' → logprob: -16.75
    6. 'Map' → logprob: -18.375
    7. '   ' → logprob: -18.625
    8. '_' → logprob: -18.75
    9. ')_' → logprob: -19.125
    10. '_token' → logprob: -19.125

Token 893: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10055277496576309
    2. ')
' → logprob: -2.350552797317505
    3. '   ' → logprob: -7.975552558898926
    4. ')
' → logprob: -13.350552558898926
    5. ' )' → logprob: -14.975552558898926
    6. ' )
' → logprob: -15.350552558898926
    7. ' ' → logprob: -16.600553512573242
    8. ')e' → logprob: -16.850553512573242
    9. ')

' → logprob: -18.100553512573242
    10. '       ' → logprob: -18.350553512573242

Token 894: 'operator' (ID: 15184)
  Prédit: 'operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -4.842555426876061e-06
    2. ' operator' → logprob: -12.250004768371582
    3. ')' → logprob: -18.2500057220459
    4. '	operator' → logprob: -18.6250057220459
    5. '(operator' → logprob: -19.0000057220459
    6. '.operator' → logprob: -19.6250057220459
    7. 'get' → logprob: -21.5000057220459
    8. '{' → logprob: -21.5000057220459
    9. '_operator' → logprob: -22.0000057220459
    10. ')
' → logprob: -23.6250057220459

Token 895: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.259079363080673e-05
    2. 'izer' → logprob: -11.875012397766113
    3. 'map' → logprob: -12.250012397766113
    4. ')' → logprob: -15.500012397766113
    5. '._' → logprob: -16.25001335144043
    6. 'er' → logprob: -16.25001335144043
    7. ')_' → logprob: -16.62501335144043
    8. '   ' → logprob: -16.75001335144043
    9. '.map' → logprob: -16.87501335144043
    10. 'Map' → logprob: -17.12501335144043

Token 896: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49270814657211304
    2. ')
' → logprob: -0.992708146572113
    3. '   ' → logprob: -3.992708206176758
    4. ')
' → logprob: -12.992708206176758
    5. ')e' → logprob: -13.367708206176758
    6. '
' → logprob: -13.742708206176758
    7. ',' → logprob: -13.992708206176758
    8. 'e' → logprob: -13.992708206176758
    9. ' ' → logprob: -14.617708206176758
    10. ' )
' → logprob: -14.742708206176758

Token 897: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.477769672870636
    2. ' evaluator' → logprob: -1.3527696132659912
    3. 'e' → logprob: -2.227769613265991
    4. ' stack' → logprob: -4.97776985168457
    5. 'stack' → logprob: -5.35276985168457
    6. ' e' → logprob: -6.85276985168457
    7. 'evalu' → logprob: -7.97776985168457
    8. '_e' → logprob: -9.22776985168457
    9. '	e' → logprob: -9.60276985168457
    10. 'Evaluator' → logprob: -10.10276985168457

Token 898: ' evaluator' (ID: 153499)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0030422434210777283
    2. 'stack' → logprob: -6.253042221069336
    3. ' evaluator' → logprob: -8.003042221069336
    4. 'rp' → logprob: -8.378042221069336
    5. 'r' → logprob: -8.628042221069336
    6. 'evalu' → logprob: -8.878042221069336
    7. 'calculator' → logprob: -8.878042221069336
    8. 'eval' → logprob: -9.628042221069336
    9. ' e' → logprob: -12.253042221069336
    10. 'valuator' → logprob: -12.753042221069336

Token 899: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. '   ' → logprob: -16.91022491455078
    4. ' ' → logprob: -18.28522491455078
    5. ')' → logprob: -19.16022491455078
    6. '=

' → logprob: -19.78522491455078
    7. '=}' → logprob: -20.03522491455078
    8. '  ' → logprob: -20.28522491455078
    9. '＝' → logprob: -20.41022491455078
    10. ' ' → logprob: -20.41022491455078

Token 900: ' RP' (ID: 71830)
  Prédit: 'RP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RP' → logprob: -0.011047814972698689
    2. ' RP' → logprob: -4.511047840118408
    3. ' ' → logprob: -19.63604736328125
    4. 'R' → logprob: -19.63604736328125
    5. '   ' → logprob: -20.63604736328125
    6. 'Rp' → logprob: -20.88604736328125
    7. 'RPC' → logprob: -21.01104736328125
    8. 'RS' → logprob: -21.63604736328125
    9. 'PR' → logprob: -22.13604736328125
    10. ' ' → logprob: -22.26104736328125

Token 901: 'NE' (ID: 8553)
  Prédit: 'NE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NE' → logprob: -2.3557529857498594e-05
    2. 'N' → logprob: -10.75002384185791
    3. '
' → logprob: -14.00002384185791
    4. 'E' → logprob: -15.25002384185791
    5. ' NE' → logprob: -15.50002384185791
    6. 'Ne' → logprob: -15.75002384185791
    7. '

' → logprob: -16.250022888183594
    8. 'ne' → logprob: -16.500022888183594
    9. '\' → logprob: -16.750022888183594
    10. '`' → logprob: -17.000022888183594

Token 902: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -0.06208924204111099
    2. 'Evaluator' → logprob: -2.812089204788208
    3. 'val' → logprob: -9.062088966369629
    4. 'Calculator' → logprob: -13.312088966369629
    5. 'e' → logprob: -13.937088966369629
    6. 'valu' → logprob: -14.187088966369629
    7. 'Val' → logprob: -14.312088966369629
    8. 'v' → logprob: -14.812088966369629
    9. ' evaluator' → logprob: -15.062088966369629
    10. 'valuer' → logprob: -15.062088966369629

Token 903: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.042032334953546524
    2. '(Stack' → logprob: -3.292032241821289
    3. '(lambda' → logprob: -5.542032241821289
    4. '(' → logprob: -10.667032241821289
    5. 'stack' → logprob: -10.792032241821289
    6. '(
' → logprob: -11.042032241821289
    7. 'Stack' → logprob: -13.667032241821289
    8. 'lambda' → logprob: -14.167032241821289
    9. '(Token' → logprob: -15.292032241821289
    10. '()' → logprob: -15.292032241821289

Token 904: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -0.0008145124302245677
    2. 'Factory' → logprob: -7.875814437866211
    3. ')' → logprob: -8.375814437866211
    4. 'factory' → logprob: -9.000814437866211
    5. '=' → logprob: -10.625814437866211
    6. '_stack' → logprob: -11.000814437866211
    7. '()' → logprob: -11.625814437866211
    8. '   ' → logprob: -12.125814437866211
    9. '_fac' → logprob: -12.375814437866211
    10. '_factor' → logprob: -12.750814437866211

Token 905: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13919973373413086
    2. 'Stack' → logprob: -2.139199733734131
    3. '=lambda' → logprob: -4.764199733734131
    4. '(Stack' → logprob: -5.764199733734131
    5. ' Stack' → logprob: -7.889199733734131
    6. 'stack' → logprob: -9.889200210571289
    7. ')' → logprob: -10.139200210571289
    8. 'lambda' → logprob: -10.264200210571289
    9. ' lambda' → logprob: -11.139200210571289
    10. '   ' → logprob: -12.514200210571289

Token 906: 'Stack' (ID: 5622)
  Prédit: 'Stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stack' → logprob: -8.180258191714529e-06
    2. 'lambda' → logprob: -11.750008583068848
    3. ' Stack' → logprob: -16.62500762939453
    4. 'stack' → logprob: -17.00000762939453
    5. '(Stack' → logprob: -17.62500762939453
    6. 'Lambda' → logprob: -19.87500762939453
    7. '_stack' → logprob: -20.00000762939453
    8. ' lambda' → logprob: -20.25000762939453
    9. 'Queue' → logprob: -21.00000762939453
    10. '(lambda' → logprob: -21.62500762939453

Token 907: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003005464968737215
    2. ')
' → logprob: -8.125300407409668
    3. '))' → logprob: -12.875300407409668
    4. ' )' → logprob: -13.750300407409668
    5. ')

' → logprob: -14.750300407409668
    6. '())' → logprob: -15.000300407409668
    7. '),' → logprob: -16.750301361083984
    8. ')
' → logprob: -16.875301361083984
    9. '
' → logprob: -17.000301361083984
    10. ' ' → logprob: -17.000301361083984

Token 908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030067605897784233
    2. 'controller' → logprob: -3.5300676822662354
    3. 'calculator' → logprob: -8.905067443847656
    4. 'input' → logprob: -9.405067443847656
    5. ' controller' → logprob: -10.030067443847656
    6. '
' → logprob: -11.280067443847656
    7. 'import' → logprob: -11.530067443847656
    8. '    
' → logprob: -11.530067443847656
    9. '	controller' → logprob: -12.280067443847656
    10. '```' → logprob: -12.655067443847656

Token 909: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' (adapté à ' controller') → logprob: -0.001446545124053955
    2. 'import' → logprob: -6.876446723937988
    3. '   ' → logprob: -8.501446723937988
    4. 'calculator' → logprob: -8.626446723937988
    5. 'input' → logprob: -11.251446723937988
    6. ' controller' → logprob: -11.876446723937988
    7. 'ctrl' → logprob: -12.126446723937988
    8. 'calc' → logprob: -12.626446723937988
    9. 'output' → logprob: -14.626446723937988
    10. '```' → logprob: -15.001446723937988

Token 910: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04302157461643219
    2. '=' → logprob: -3.1680216789245605
    3. '.' → logprob: -10.918021202087402
    4. ' ' → logprob: -14.043021202087402
    5. ' =
' → logprob: -14.668021202087402
    6. '(' → logprob: -14.793021202087402
    7. '.run' → logprob: -14.918021202087402
    8. '.=' → logprob: -15.168021202087402
    9. ' .' → logprob: -15.293021202087402
    10. ')' → logprob: -15.293021202087402

Token 911: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3132616877555847
    2. ' R' → logprob: -1.3132617473602295
    3. '	R' → logprob: -18.938261032104492
    4. '_R' → logprob: -19.063261032104492
    5. '   ' → logprob: -19.438261032104492
    6. ' ' → logprob: -19.563261032104492
    7. ' ' → logprob: -20.188261032104492
    8. '```' → logprob: -20.938261032104492
    9. '`' → logprob: -21.188261032104492
    10. '<R' → logprob: -21.438261032104492

Token 912: 'PN' (ID: 14513)
  Prédit: 'PN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PN' → logprob: 0.0
    2. 'P' → logprob: -17.125
    3. 'pn' → logprob: -20.75
    4. 'N' → logprob: -20.75
    5. 'R' → logprob: -20.875
    6. ' PN' → logprob: -24.5
    7. 'Pn' → logprob: -24.75
    8. 'NP' → logprob: -25.25
    9. 'PIN' → logprob: -25.5
    10. 'PNG' → logprob: -25.5

Token 913: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: 0.0
    2. ' Calculator' → logprob: -17.625
    3. 'calculator' → logprob: -17.75
    4. 'Calculate' → logprob: -19.875
    5. 'Calcul' → logprob: -21.125
    6. 'Cal' → logprob: -21.875
    7. '
' → logprob: -22.0
    8. 'C' → logprob: -22.0
    9. 'Calc' → logprob: -22.0
    10. ' calculator' → logprob: -22.5

Token 914: 'Controller' (ID: 2947)
  Prédit: 'Controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Controller' → logprob: -1.2664456789934775e-06
    2. 'controller' → logprob: -13.625000953674316
    3. '@Controller' → logprob: -19.500001907348633
    4. 'Control' → logprob: -20.000001907348633
    5. 'Calculator' → logprob: -20.000001907348633
    6. '_controller' → logprob: -20.750001907348633
    7. '_Controller' → logprob: -22.625001907348633
    8. 'Ctrl' → logprob: -22.625001907348633
    9. 'Cont' → logprob: -22.750001907348633
    10. 'Container' → logprob: -23.000001907348633

Token 915: '(e' (ID: 3454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4559234380722046
    2. '(
' → logprob: -1.5809234380722046
    3. '(e' → logprob: -1.8309234380722046
    4. '(
' → logprob: -10.455923080444336
    5. '(

' → logprob: -10.705923080444336
    6. '   ' → logprob: -11.205923080444336
    7. '(eval' → logprob: -12.205923080444336
    8. 'e' → logprob: -12.330923080444336
    9. '(token' → logprob: -12.455923080444336
    10. '(`' → logprob: -13.205923080444336

Token 916: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -9.253090865968261e-06
    2. 'alu' → logprob: -12.250009536743164
    3. 'valu' → logprob: -12.750009536743164
    4. 'val' → logprob: -13.625009536743164
    5. 'v' → logprob: -15.500009536743164
    6. 'e' → logprob: -16.625009536743164
    7. 'vel' → logprob: -18.500009536743164
    8. 'value' → logprob: -18.500009536743164
    9. 'valuer' → logprob: -18.500009536743164
    10. 'al' → logprob: -18.625009536743164

Token 917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07463622838258743
    2. ',e' → logprob: -3.199636220932007
    3. '=' → logprob: -3.949636220932007
    4. '=e' → logprob: -4.449636459350586
    5. ',
' → logprob: -9.574636459350586
    6. 'e' → logprob: -9.699636459350586
    7. '   ' → logprob: -10.324636459350586
    8. 'Evaluator' → logprob: -10.949636459350586
    9. ' ,' → logprob: -12.324636459350586
    10. ' evaluator' → logprob: -13.074636459350586

Token 918: ' tokenizer' (ID: 99665)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.0005536287208087742
    2. ' tokenizer' → logprob: -7.500553607940674
    3. ' token' → logprob: -14.500554084777832
    4. 'Tokenizer' → logprob: -16.500553131103516
    5. '           ' → logprob: -17.750553131103516
    6. '(token' → logprob: -19.000553131103516
    7. '       ' → logprob: -19.500553131103516
    8. '               ' → logprob: -20.125553131103516
    9. '[token' → logprob: -20.250553131103516
    10. '   ' → logprob: -20.250553131103516

Token 919: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002204024465754628
    2. ',' → logprob: -6.377203941345215
    3. '   ' → logprob: -7.627203941345215
    4. ' )' → logprob: -12.252203941345215
    5. ',)' → logprob: -12.252203941345215
    6. ')
' → logprob: -13.002203941345215
    7. '       ' → logprob: -14.752203941345215
    8. '<|end|>' → logprob: -14.877203941345215
    9. '),' → logprob: -15.127203941345215
    10. '<|end|>' → logprob: -15.752203941345215

Token 920: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1042958498001099
    2. 'import' → logprob: -1.1042958498001099
    3. 'input' → logprob: -1.1042958498001099
    4. ' input' → logprob: -6.10429573059082
    5. 'if' → logprob: -6.47929573059082
    6. ' import' → logprob: -7.72929573059082
    7. 'lines' → logprob: -7.85429573059082
    8. ' lines' → logprob: -8.10429573059082
    9. 'inputs' → logprob: -8.35429573059082
    10. '
' → logprob: -8.72929573059082

Token 921: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.0012732120230793953
    2. 'for' → logprob: -7.501273155212402
    3. 'lines' → logprob: -7.751273155212402
    4. 'import' → logprob: -9.001273155212402
    5. 'if' → logprob: -9.251273155212402
    6. 'inputs' → logprob: -10.376273155212402
    7. ' input' → logprob: -10.501273155212402
    8. 'try' → logprob: -11.501273155212402
    9. '#' → logprob: -13.876273155212402
    10. ' lines' → logprob: -14.626273155212402

Token 922: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.002320460742339492
    2. '_data' → logprob: -6.752320289611816
    3. '_' → logprob: -6.877320289611816
    4. '_text' → logprob: -9.502320289611816
    5. '()' → logprob: -11.377320289611816
    6. '_line' → logprob: -11.377320289611816
    7. '_strings' → logprob: -11.877320289611816
    8. ' =' → logprob: -12.502320289611816
    9. 'lines' → logprob: -12.752320289611816
    10. '_=' → logprob: -13.627320289611816

Token 923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47411486506462097
    2. ' =' → logprob: -0.9741148948669434
    3. '=sys' → logprob: -10.474114418029785
    4. ':' → logprob: -12.224114418029785
    5. '   ' → logprob: -12.974114418029785
    6. '=[]' → logprob: -13.599114418029785
    7. 'for' → logprob: -15.599114418029785
    8. '	' → logprob: -15.849114418029785
    9. ' ' → logprob: -15.974114418029785
    10. '[:]' → logprob: -16.0991153717041

Token 924: ' [' (ID: 723)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.23569148778915405
    2. ' sys' → logprob: -1.6106915473937988
    3. '[' → logprob: -4.985691547393799
    4. ' [' → logprob: -5.735691547393799
    5. '(sys' → logprob: -10.11069107055664
    6. '[]
' → logprob: -10.48569107055664
    7. '   ' → logprob: -10.73569107055664
    8. '[]' → logprob: -10.73569107055664
    9. '	sys' → logprob: -11.11069107055664
    10. '[s' → logprob: -11.23569107055664

Token 925: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0016140079824253917
    2. ' line' → logprob: -6.626614093780518
    3. 'sys' → logprob: -8.62661361694336
    4. '   ' → logprob: -9.25161361694336
    5. ' sys' → logprob: -12.87661361694336
    6. '"' → logprob: -13.00161361694336
    7. '       ' → logprob: -13.25161361694336
    8. 'input' → logprob: -13.37661361694336
    9. '```' → logprob: -13.62661361694336
    10. '	line' → logprob: -13.75161361694336

Token 926: '.rstrip' (ID: 161629)
  Prédit: '.rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.030913924798369408
    2. '.strip' → logprob: -4.030913829803467
    3. ' for' → logprob: -4.780913829803467
    4. 'for' → logprob: -5.530913829803467
    5. 'rstrip' → logprob: -8.405914306640625
    6. '().' → logprob: -9.530914306640625
    7. '   ' → logprob: -11.280914306640625
    8. '()' → logprob: -11.905914306640625
    9. '.readline' → logprob: -12.280914306640625
    10. '[:-' → logprob: -12.530914306640625

Token 927: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.1275043934583664
    2. '()' → logprob: -2.127504348754883
    3. '("\' → logprob: -8.127504348754883
    4. ''\' → logprob: -8.252504348754883
    5. '()\' → logprob: -11.752504348754883
    6. 'for' → logprob: -11.877504348754883
    7. '()
' → logprob: -13.002504348754883
    8. '"\' → logprob: -13.752504348754883
    9. '\n' → logprob: -14.127504348754883
    10. '(' → logprob: -14.627504348754883

Token 928: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. '\n' → logprob: -14.125000953674316
    3. 'r' → logprob: -17.375
    4. 'newline' → logprob: -21.625
    5. '')' → logprob: -22.5
    6. 't' → logprob: -22.75
    7. '0' → logprob: -23.375
    8. ' n' → logprob: -23.75
    9. '```' → logprob: -23.875
    10. '\' → logprob: -23.875

Token 929: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00014966767048463225
    2. ')' → logprob: -8.875149726867676
    3. '")' → logprob: -12.625149726867676
    4. '()' → logprob: -12.875149726867676
    5. '')
' → logprob: -13.875149726867676
    6. '\n' → logprob: -14.000149726867676
    7. ''))' → logprob: -14.375149726867676
    8. '\r' → logprob: -14.750149726867676
    9. '   ' → logprob: -15.250149726867676
    10. '').' → logprob: -15.750149726867676

Token 930: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10049165040254593
    2. 'for' → logprob: -2.350491762161255
    3. '   ' → logprob: -8.350491523742676
    4. '()' → logprob: -10.850491523742676
    5. '       ' → logprob: -11.475491523742676
    6. '    ' → logprob: -11.600491523742676
    7. '	for' → logprob: -12.475491523742676
    8. '           ' → logprob: -12.850491523742676
    9. ')' → logprob: -13.475491523742676
    10. ' ' → logprob: -14.725491523742676

Token 931: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6733996868133545
    2. ' line' → logprob: -0.9233996868133545
    3. 'sys' → logprob: -2.6733996868133545
    4. ' sys' → logprob: -3.7983996868133545
    5. '_' → logprob: -6.673399925231934
    6. '_line' → logprob: -9.048399925231934
    7. '=sys' → logprob: -10.923399925231934
    8. '	line' → logprob: -11.048399925231934
    9. ' _' → logprob: -11.673399925231934
    10. '	sys' → logprob: -12.798399925231934

Token 932: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11313257366418839
    2. 'in' → logprob: -2.2381324768066406
    3. 'sys' → logprob: -8.86313247680664
    4. 'import' → logprob: -9.61313247680664
    5. '=sys' → logprob: -9.98813247680664
    6. 's' → logprob: -10.73813247680664
    7. ' sys' → logprob: -11.48813247680664
    8. 'stdin' → logprob: -12.73813247680664
    9. '<|end|>' → logprob: -12.73813247680664
    10. 'input' → logprob: -12.98813247680664

Token 933: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.029750952497124672
    2. ' sys' → logprob: -3.5297510623931885
    3. '	sys' → logprob: -15.02975082397461
    4. '=sys' → logprob: -17.02975082397461
    5. '(sys' → logprob: -17.15475082397461
    6. '   ' → logprob: -20.15475082397461
    7. ' ' → logprob: -21.02975082397461
    8. '```' → logprob: -21.40475082397461
    9. 'stdin' → logprob: -21.77975082397461
    10. '.sys' → logprob: -22.90475082397461

Token 934: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.5690089639974758e-05
    2. 'stdin' → logprob: -11.250015258789062
    3. '.' → logprob: -13.125015258789062
    4. '.argv' → logprob: -15.000015258789062
    5. '(stdin' → logprob: -16.250015258789062
    6. '.std' → logprob: -17.000015258789062
    7. ' stdin' → logprob: -17.250015258789062
    8. '.stdout' → logprob: -18.125015258789062
    9. '.stderr' → logprob: -19.625015258789062
    10. '   ' → logprob: -20.000015258789062

Token 935: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009411195642314851
    2. '   ' → logprob: -7.125941276550293
    3. '       ' → logprob: -9.625941276550293
    4. ' if' → logprob: -10.500941276550293
    5. ' ]' → logprob: -10.625941276550293
    6. 'if' → logprob: -11.500941276550293
    7. ']
' → logprob: -13.125941276550293
    8. ')' → logprob: -13.375941276550293
    9. '()]' → logprob: -13.500941276550293
    10. '    ' → logprob: -14.000941276550293

Token 936: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.15310683415737e-05
    2. ' line' → logprob: -10.750021934509277
    3. 'len' → logprob: -18.75002098083496
    4. '(line' → logprob: -18.87502098083496
    5. 'True' → logprob: -20.00002098083496
    6. '	line' → logprob: -20.12502098083496
    7. ' ' → logprob: -20.62502098083496
    8. '#line' → logprob: -20.62502098083496
    9. '
' → logprob: -20.75002098083496
    10. '   ' → logprob: -21.37502098083496

Token 937: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.007608989719301462
    2. '.' → logprob: -5.507608890533447
    3. ']' → logprob: -5.757608890533447
    4. '<|end|>' → logprob: -8.757609367370605
    5. '.rstrip' → logprob: -9.382609367370605
    6. '.readline' → logprob: -10.507609367370605
    7. 'strip' → logprob: -10.507609367370605
    8. '].' → logprob: -10.632609367370605
    9. '.trim' → logprob: -10.882609367370605
    10. '<|end|>' → logprob: -12.257609367370605

Token 938: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00026753442944027483
    2. '()' → logprob: -8.25026798248291
    3. '()]
' → logprob: -12.37526798248291
    4. ']' → logprob: -13.12526798248291
    5. '()!=' → logprob: -18.125267028808594
    6. '()>' → logprob: -18.625267028808594
    7. '()],' → logprob: -18.625267028808594
    8. '())' → logprob: -18.750267028808594
    9. ']()' → logprob: -18.875267028808594
    10. '()][' → logprob: -19.375267028808594

Token 939: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025941552594304085
    2. 'results' → logprob: -3.7759416103363037
    3. ' results' → logprob: -6.900941371917725
    4. 'output' → logprob: -7.525941371917725
    5. '    
' → logprob: -7.775941371917725
    6. 'outputs' → logprob: -8.025941848754883
    7. '
' → logprob: -8.900941848754883
    8. 'for' → logprob: -8.900941848754883
    9. ' for' → logprob: -9.650941848754883
    10. 'result' → logprob: -10.525941848754883

Token 940: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0031760523561388254
    2. 'outputs' → logprob: -6.253176212310791
    3. 'output' → logprob: -6.753176212310791
    4. ' results' → logprob: -9.503175735473633
    5. 'result' → logprob: -12.253175735473633
    6. ' outputs' → logprob: -16.628175735473633
    7. ' output' → logprob: -16.753175735473633
    8. '```' → logprob: -17.503175735473633
    9. 'for' → logprob: -17.628175735473633
    10. '	results' → logprob: -18.878175735473633

Token 941: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25208011269569397
    2. '=' → logprob: -1.5020800828933716
    3. '=[]' → logprob: -9.252079963684082
    4. '<|end|>' → logprob: -11.127079963684082
    5. '.append' → logprob: -11.752079963684082
    6. ':' → logprob: -11.752079963684082
    7. '.' → logprob: -12.627079963684082
    8. '=[]
' → logprob: -12.627079963684082
    9. ' =
' → logprob: -12.627079963684082
    10. '.extend' → logprob: -12.752079963684082

Token 942: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' → logprob: -0.0015023599844425917
    2. ' controller' → logprob: -6.501502513885498
    3. '	controller' → logprob: -18.376502990722656
    4. 'container' → logprob: -18.751502990722656
    5. '(controller' → logprob: -20.376502990722656
    6. '   ' → logprob: -20.376502990722656
    7. 'control' → logprob: -21.126502990722656
    8. '_controller' → logprob: -21.751502990722656
    9. '.controller' → logprob: -22.501502990722656
    10. 'controllers' → logprob: -23.001502990722656

Token 943: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -9.841743303695694e-05
    2. '.' → logprob: -9.37509822845459
    3. ' .' → logprob: -11.25009822845459
    4. '.mainloop' → logprob: -15.87509822845459
    5. '.Run' → logprob: -16.125099182128906
    6. '   ' → logprob: -16.750099182128906
    7. '.process' → logprob: -16.750099182128906
    8. '.findall' → logprob: -17.250099182128906
    9. '.perform' → logprob: -17.500099182128906
    10. '.execute' → logprob: -17.875099182128906

Token 944: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00024512779782526195
    2. '(results' → logprob: -8.500245094299316
    3. '(' → logprob: -10.250245094299316
    4. '(inputs' → logprob: -12.750245094299316
    5. '(
' → logprob: -13.125245094299316
    6. '(output' → logprob: -14.500245094299316
    7. '(lines' → logprob: -14.750245094299316
    8. 'input' → logprob: -16.000246047973633
    9. '(result' → logprob: -16.250246047973633
    10. '(inp' → logprob: -16.375246047973633

Token 945: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.8624639324116288e-06
    2. '(input' → logprob: -13.875001907348633
    3. 'lines' → logprob: -15.625001907348633
    4. 's' → logprob: -15.875001907348633
    5. '(lines' → logprob: -15.875001907348633
    6. '_' → logprob: -16.375001907348633
    7. '```' → logprob: -16.750001907348633
    8. '_inputs' → logprob: -16.875001907348633
    9. '_input' → logprob: -17.125001907348633
    10. ')' → logprob: -17.250001907348633

Token 946: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08901133388280869
    2. ')' → logprob: -2.4640114307403564
    3. '   ' → logprob: -9.839011192321777
    4. ')
' → logprob: -11.214011192321777
    5. ')

' → logprob: -13.339011192321777
    6. ' )
' → logprob: -13.714011192321777
    7. '<|end|>' → logprob: -14.714011192321777
    8. '
' → logprob: -15.089011192321777
    9. '       ' → logprob: -15.214011192321777
    10. 'for' → logprob: -15.464011192321777

Token 947: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029765989631414413
    2. '   ' → logprob: -3.529766082763672
    3. ' for' → logprob: -11.154766082763672
    4. '	for' → logprob: -13.779766082763672
    5. '```' → logprob: -16.279766082763672
    6. '
' → logprob: -16.654766082763672
    7. '       ' → logprob: -19.029766082763672
    8. 'import' → logprob: -19.529766082763672
    9. '    
' → logprob: -19.904766082763672
    10. 'print' → logprob: -20.154766082763672

Token 948: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.25
    3. '   ' → logprob: -18.5
    4. 'print' (adapté à ' print') → logprob: -19.25
    5. '
' → logprob: -20.0
    6. '    
' → logprob: -23.125
    7. '	for' → logprob: -23.5
    8. '```' → logprob: -23.625
    9. 'import' → logprob: -24.5
    10. '       ' → logprob: -25.125

Token 949: '("\' (ID: 9730)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.7189391255378723
    2. '(*' → logprob: -1.0939390659332275
    3. '("\' → logprob: -1.8439390659332275
    4. '()' → logprob: -4.093939304351807
    5. '(' → logprob: -6.218939304351807
    6. '(*(' → logprob: -7.843939304351807
    7. '*' → logprob: -8.093938827514648
    8. '(results' → logprob: -8.968938827514648
    9. '("")' → logprob: -10.468938827514648
    10. '()
' → logprob: -10.468938827514648

Token 950: 'n' (ID: 77)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.17500309646129608
    2. '.join' → logprob: -2.4250030517578125
    3. '\n' → logprob: -3.4250030517578125
    4. '"\' → logprob: -3.8000030517578125
    5. 'join' → logprob: -4.1750030517578125
    6. '.' → logprob: -7.0500030517578125
    7. 'n' → logprob: -7.6750030517578125
    8. ').' → logprob: -9.300003051757812
    9. '"' → logprob: -9.550003051757812
    10. '
' → logprob: -9.675003051757812

Token 951: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -1.1472419600977446e-06
    2. '\n' → logprob: -14.500000953674316
    3. '"' → logprob: -14.750000953674316
    4. '")' → logprob: -15.875000953674316
    5. '").' → logprob: -16.125001907348633
    6. ''.' → logprob: -17.375001907348633
    7. '.join' → logprob: -17.750001907348633
    8. 'join' → logprob: -18.625001907348633
    9. '"\' → logprob: -18.625001907348633
    10. '",' → logprob: -19.625001907348633

Token 952: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.650518920039758e-06
    2. '".' → logprob: -13.125003814697266
    3. 'j' → logprob: -13.750003814697266
    4. 'print' → logprob: -15.000003814697266
    5. 'jo' → logprob: -16.250003814697266
    6. ' join' → logprob: -17.125003814697266
    7. ''.' → logprob: -17.750003814697266
    8. '.join' → logprob: -17.875003814697266
    9. ').' → logprob: -18.000003814697266
    10. 'js' → logprob: -19.250003814697266

Token 953: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -5.848420551046729e-05
    2. 'results' → logprob: -9.7500581741333
    3. ' results' → logprob: -16.625059127807617
    4. '(' → logprob: -17.125059127807617
    5. '(map' → logprob: -17.750059127807617
    6. '(str' → logprob: -18.000059127807617
    7. '	results' → logprob: -18.250059127807617
    8. '(result' → logprob: -18.625059127807617
    9. ')' → logprob: -20.500059127807617
    10. 'Results' → logprob: -20.750059127807617

Token 954: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '())' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '))' → logprob: -15.500000953674316
    5. ' )' → logprob: -17.125
    6. '")' → logprob: -17.875
    7. ')`' → logprob: -18.625
    8. '()' → logprob: -19.125
    9. '})' → logprob: -19.375
    10. '   ' → logprob: -19.875

Token 955: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020771251001860946
    2. '<|end|>' → logprob: -9.375207901000977
    3. '```' → logprob: -9.625207901000977
    4. '
' → logprob: -10.250207901000977
    5. ' if' → logprob: -11.000207901000977
    6. '#' → logprob: -13.500207901000977
    7. '  
' → logprob: -13.750207901000977
    8. '\n' → logprob: -14.875207901000977
    9. '#if' → logprob: -15.000207901000977
    10. '    
' → logprob: -15.125207901000977

Token 956: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1302538365125656
    2. '__' → logprob: -2.130253791809082
    3. '_' → logprob: -5.755253791809082
    4. ' _' → logprob: -10.130253791809082
    5. '___' → logprob: -10.630253791809082
    6. ' ' → logprob: -10.630253791809082
    7. '_name' → logprob: -10.880253791809082
    8. ' ___' → logprob: -11.630253791809082
    9. ' ' → logprob: -11.755253791809082
    10. '"' → logprob: -11.880253791809082

Token 957: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25232282280921936
    2. '==' → logprob: -1.752322793006897
    3. ' ==' → logprob: -3.1273229122161865
    4. '=="' → logprob: -5.377322673797607
    5. '=='' → logprob: -7.002322673797607
    6. '.__' → logprob: -9.627323150634766
    7. ' __' → logprob: -9.752323150634766
    8. '__.__' → logprob: -10.252323150634766
    9. 'name' → logprob: -10.377323150634766
    10. 'if' → logprob: -10.502323150634766

Token 958: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.8550976164988242e-05
    2. '==' → logprob: -11.375018119812012
    3. '__.__' → logprob: -12.000018119812012
    4. '__.' → logprob: -14.875018119812012
    5. '=="' → logprob: -15.500018119812012
    6. '__
' → logprob: -16.625019073486328
    7. ' ==' → logprob: -16.875019073486328
    8. '___' → logprob: -17.000019073486328
    9. '____' → logprob: -17.500019073486328
    10. '=='' → logprob: -17.875019073486328

Token 959: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.24729152023792267
    2. '==' → logprob: -1.8722915649414062
    3. ' ==' → logprob: -2.9972915649414062
    4. '=="' → logprob: -4.247291564941406
    5. '=='' → logprob: -7.497291564941406
    6. '__.__' → logprob: -8.122291564941406
    7. '.__' → logprob: -8.622291564941406
    8. '.' → logprob: -10.372291564941406
    9. '__.' → logprob: -11.372291564941406
    10. '"' → logprob: -12.372291564941406

Token 960: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00408160500228405
    2. ''' → logprob: -5.504081726074219
    3. ' "__' → logprob: -13.254081726074219
    4. '__' → logprob: -13.504081726074219
    5. '"name' → logprob: -17.12908172607422
    6. '"user' → logprob: -17.25408172607422
    7. ' '__' → logprob: -17.37908172607422
    8. ''"' → logprob: -18.00408172607422
    9. ' ' → logprob: -18.12908172607422
    10. '   ' → logprob: -18.50408172607422

Token 961: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.018238674849271774
    2. '__' → logprob: -4.018238544464111
    3. '"' → logprob: -9.76823902130127
    4. 'name' → logprob: -10.76823902130127
    5. ''' → logprob: -12.26823902130127
    6. '_main' → logprob: -13.14323902130127
    7. 'python' → logprob: -13.76823902130127
    8. '-main' → logprob: -14.89323902130127
    9. ' main' → logprob: -15.26823902130127
    10. 'm' → logprob: -15.51823902130127

Token 962: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.041985806077718735
    2. '__' → logprob: -3.2919857501983643
    3. '__':
' → logprob: -5.541985988616943
    4. '__.' → logprob: -12.166985511779785
    5. '__
' → logprob: -12.166985511779785
    6. '__.__' → logprob: -12.791985511779785
    7. '__
' → logprob: -13.666985511779785
    8. '__:' → logprob: -13.791985511779785
    9. '__["' → logprob: -14.041985511779785
    10. '"' → logprob: -14.166985511779785

Token 963: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0013410773826763034
    2. '__' → logprob: -7.251340866088867
    3. ' main' → logprob: -7.876340866088867
    4. '   ' → logprob: -8.376340866088867
    5. '	main' → logprob: -11.501340866088867
    6. '_main' → logprob: -12.751340866088867
    7. '"' → logprob: -13.126340866088867
    8. '(main' → logprob: -13.251340866088867
    9. ' ' → logprob: -14.126340866088867
    10. '```' → logprob: -14.251340866088867

Token 964: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -20.5
    3. '	main' → logprob: -24.25
    4. 'mai' → logprob: -26.75
    5. '.main' → logprob: -27.125
    6. 'ma' → logprob: -27.375
    7. '(main' → logprob: -27.75
    8. '_main' → logprob: -27.875
    9. '   ' → logprob: -28.5
    10. 'm' → logprob: -29.5

Token 965: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 963
Tokens correctement prédits (1ère position, stricte): 452
Tokens correctement prédits (1ère position, avec adaptation): 507
Tokens correctement prédits (top 10): 850
Précision stricte (1ère position): 46.94%
Précision adaptée (1ère position): 52.65%
Précision (top 10): 88.27%
================================================================================
