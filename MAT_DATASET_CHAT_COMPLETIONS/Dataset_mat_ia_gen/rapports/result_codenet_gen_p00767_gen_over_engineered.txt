================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class IntegralRectangle:
    def __init__(self, height: int, width: int):
        self.height = height
        self.width = width
        if not self.is_wide():
            raise ValueError(f"Rectangle height {height} must be less than width {width}")

    def is_wide(self) -> bool:
        return self.width > self.height

    def diagonal_length_sq(self) -> int:
        return self.height * self.height + self.width * self.width

    def __lt__(self, other: 'IntegralRectangle') -> bool:
        # Compare by diagonal length squared first
        dl_self = self.diagonal_length_sq()
        dl_other = other.diagonal_length_sq()
        if dl_self != dl_other:
            return dl_self < dl_other
        # If diagonals are equal, compare by height
        return self.height < other.height

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, IntegralRectangle):
            return NotImplemented
        return self.height == other.height and self.width == other.width

    def __repr__(self):
        return f"IntegralRectangle(h={self.height}, w={self.width})"


class RectangleOrder:
    def __init__(self, max_dim: int = 150):
        # Cache all wide integral rectangles up to max_dim for quick lookup
        self.max_dim = max_dim
        self.all_rectangles = self._generate_all_wide_rectangles()
        self.sorted_rectangles = sorted(self.all_rectangles)
        # Use a dictionary for index lookup to improve efficiency
        self.rect_index_map = { (r.height, r.width): i for i,r in enumerate(self.sorted_rectangles) }

    def _generate_all_wide_rectangles(self) -> list:
        rectangles = []
        for h in range(1, self.max_dim + 1):
            for w in range(h + 1, self.max_dim + 1):
                rectangles.append(IntegralRectangle(h, w))
        return rectangles

    def next_rectangle(self, rect: IntegralRectangle) -> IntegralRectangle:
        # Get the index of rect in sorted list, then return the next rectangle in order
        idx = self.rect_index_map.get((rect.height, rect.width))
        if idx is None:
            # Safety check, but rectangle should always be in map
            raise ValueError("Rectangle not found in ordering")
        if idx + 1 == len(self.sorted_rectangles):
            raise ValueError("No larger rectangle available")
        return self.sorted_rectangles[idx + 1]


class ProblemSolver:
    def __init__(self):
        self.order = RectangleOrder()

    def parse_input_line(self, line: str) -> IntegralRectangle or None:
        h_str, w_str = line.strip().split()
        h, w = int(h_str), int(w_str)
        if h == 0 and w == 0:
            return None
        return IntegralRectangle(h, w)

    def solve_for_rect(self, rect: IntegralRectangle) -> IntegralRectangle:
        return self.order.next_rectangle(rect)

    def run(self):
        import sys
        input_lines = sys.stdin.read().strip().split('\n')
        results = []
        for line in input_lines:
            data = self.parse_input_line(line)
            if data is None:
                break
            next_rect = self.solve_for_rect(data)
            results.append(f"{next_rect.height} {next_rect.width}")
        print("\n".join(results))


if __name__ == "__main__":
    ProblemSolver().run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Integral' (ID: 121125)
  → Token d'amorce (pas de prédiction)

Token 2: 'Rectangle' (ID: 34888)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4414047598838806
    2. ':' → logprob: -1.3164048194885254
    3. '{' → logprob: -2.4414048194885254
    4. '.' → logprob: -7.566404819488525
    5. ' {' → logprob: -7.691404819488525
    6. '[' → logprob: -8.316404342651367
    7. '```' → logprob: -8.566404342651367
    8. '(:' → logprob: -8.941404342651367
    9. ' :' → logprob: -10.191404342651367
    10. ' (' → logprob: -10.316404342651367

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0866330936551094
    2. '(' → logprob: -2.9616332054138184
    3. '```' → logprob: -3.5866332054138184
    4. '   ' → logprob: -6.086633205413818
    5. '.' → logprob: -7.836633205413818
    6. ':
' → logprob: -8.46163272857666
    7. '``' → logprob: -8.96163272857666
    8. ''' → logprob: -9.21163272857666
    9. '`' → logprob: -9.33663272857666
    10. '[' → logprob: -9.58663272857666

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2766665816307068
    2. '(' → logprob: -2.0266666412353516
    3. ':' → logprob: -2.9016666412353516
    4. '```' → logprob: -3.9016666412353516
    5. 'def' (adapté à ' def') → logprob: -4.026666641235352
    6. '_' → logprob: -4.901666641235352
    7. ' def' → logprob: -5.651666641235352
    8. ' ' → logprob: -6.401666641235352
    9. '    ' → logprob: -6.651666641235352
    10. ' (' → logprob: -7.776666641235352

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11426018923521042
    2. '__' → logprob: -2.489260196685791
    3. ' ' → logprob: -3.739260196685791
    4. ' init' → logprob: -7.614260196685791
    5. ' ' → logprob: -7.739260196685791
    6. '_' → logprob: -9.114259719848633
    7. ' ▁' → logprob: -10.989259719848633
    8. ' def' → logprob: -10.989259719848633
    9. ' ___' → logprob: -10.989259719848633
    10. '```' → logprob: -11.239259719848633

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.246537173457909e-06
    2. 'ini' → logprob: -13.000003814697266
    3. ' init' → logprob: -13.750003814697266
    4. '_init' → logprob: -14.500003814697266
    5. 'i' → logprob: -15.875003814697266
    6. '__' → logprob: -16.125003814697266
    7. 'int' → logprob: -17.125003814697266
    8. 'in' → logprob: -17.125003814697266
    9. '	init' → logprob: -17.250003814697266
    10. 'inite' → logprob: -18.000003814697266

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.22639474272727966
    2. '(' → logprob: -2.2263946533203125
    3. '__' → logprob: -2.4763946533203125
    4. '__(
' → logprob: -5.1013946533203125
    5. '_' → logprob: -6.3513946533203125
    6. '(self' → logprob: -6.7263946533203125
    7. ' (' → logprob: -7.7263946533203125
    8. '__((' → logprob: -7.7263946533203125
    9. '_(' → logprob: -8.851394653320312
    10. '<|end|>' → logprob: -9.101394653320312

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001705771079286933
    2. ' self' → logprob: -6.376705646514893
    3. '(self' → logprob: -13.37670612335205
    4. ')' → logprob: -13.87670612335205
    5. ' ' → logprob: -14.62670612335205
    6. '	self' → logprob: -16.001705169677734
    7. '       ' → logprob: -16.626705169677734
    8. '   ' → logprob: -16.626705169677734
    9. '*self' → logprob: -17.001705169677734
    10. '=self' → logprob: -17.376705169677734

Token 10: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0700820684432983
    2. ',' → logprob: -1.3200820684432983
    3. '(self' → logprob: -1.8200820684432983
    4. ' self' → logprob: -1.8200820684432983
    5. ' (' → logprob: -4.320082187652588
    6. ')' → logprob: -4.445082187652588
    7. '_' → logprob: -4.695082187652588
    8. '(' → logprob: -4.820082187652588
    9. ' ,' → logprob: -4.945082187652588
    10. ' ' → logprob: -5.195082187652588

Token 11: ' height' (ID: 4679)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.28159624338150024
    2. 'self' → logprob: -1.4065961837768555
    3. ' x' → logprob: -8.281596183776855
    4. ' integral' → logprob: -9.781596183776855
    5. ' width' → logprob: -10.031596183776855
    6. 'x' → logprob: -10.656596183776855
    7. ' data' → logprob: -11.406596183776855
    8. 'width' → logprob: -11.781596183776855
    9. ' top' → logprob: -11.781596183776855
    10. ' coordinates' → logprob: -12.406596183776855

Token 12: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021871909499168396
    2. '):' → logprob: -3.89687180519104
    3. ' ,' → logprob: -7.771872043609619
    4. '=' → logprob: -7.896872043609619
    5. '   ' → logprob: -8.521871566772461
    6. ')' → logprob: -8.646871566772461
    7. ':' → logprob: -9.771871566772461
    8. ',int' → logprob: -11.021871566772461
    9. ' ' → logprob: -11.521871566772461
    10. '_' → logprob: -11.521871566772461

Token 13: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1603257805109024
    2. 'int' → logprob: -1.9103257656097412
    3. ':int' → logprob: -10.16032600402832
    4. '=int' → logprob: -10.16032600402832
    5. ' ' → logprob: -11.91032600402832
    6. ',int' → logprob: -13.03532600402832
    7. ' )' → logprob: -13.16032600402832
    8. ' ,' → logprob: -13.28532600402832
    9. '(int' → logprob: -13.41032600402832
    10. '<int' → logprob: -13.41032600402832

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000488110730657354
    2. ' ,' → logprob: -8.37548828125
    3. '):' → logprob: -9.12548828125
    4. ',int' → logprob: -9.25048828125
    5. ')' → logprob: -10.75048828125
    6. '   ' → logprob: -10.87548828125
    7. ',width' → logprob: -12.62548828125
    8. ',height' → logprob: -13.50048828125
    9. '       ' → logprob: -14.00048828125
    10. ' ' → logprob: -14.37548828125

Token 15: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.01111054327338934
    2. 'width' → logprob: -4.511110305786133
    3. ' ' → logprob: -10.011110305786133
    4. ' ' → logprob: -12.011110305786133
    5. '	width' → logprob: -12.761110305786133
    6. ')' → logprob: -13.011110305786133
    7. ',width' → logprob: -13.136110305786133
    8. '    ' → logprob: -13.886110305786133
    9. ' )' → logprob: -14.261110305786133
    10. ' ,' → logprob: -14.386110305786133

Token 16: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12803857028484344
    2. ':' → logprob: -2.3780386447906494
    3. ')' → logprob: -4.00303840637207
    4. ',' → logprob: -4.87803840637207
    5. '=' → logprob: -7.00303840637207
    6. '   ' → logprob: -8.12803840637207
    7. ' ):' → logprob: -9.12803840637207
    8. '):
' → logprob: -9.62803840637207
    9. ' ' → logprob: -10.12803840637207
    10. ' :' → logprob: -10.75303840637207

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.387220561504364
    2. ' int' → logprob: -1.1372206211090088
    3. ')' → logprob: -8.13722038269043
    4. ':int' → logprob: -10.51222038269043
    5. '=int' → logprob: -11.26222038269043
    6. ' )' → logprob: -12.01222038269043
    7. ']int' → logprob: -12.38722038269043
    8. '[int' → logprob: -13.01222038269043
    9. '(int' → logprob: -13.38722038269043
    10. '<int' → logprob: -13.76222038269043

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007265608757734299
    2. ')' → logprob: -5.132265567779541
    3. ',' → logprob: -6.757265567779541
    4. '):
' → logprob: -9.3822660446167
    5. ':' → logprob: -9.8822660446167
    6. '   ' → logprob: -11.1322660446167
    7. '```' → logprob: -11.6322660446167
    8. '),' → logprob: -12.8822660446167
    9. ''):' → logprob: -13.0072660446167
    10. '<|end|>' → logprob: -13.1322660446167

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03595975041389465
    2. '\' → logprob: -4.910959720611572
    3. '   ' → logprob: -5.035959720611572
    4. '    ' → logprob: -5.160959720611572
    5. '<|end|>' → logprob: -5.285959720611572
    6. '        
' → logprob: -5.410959720611572
    7. '```' → logprob: -6.785959720611572
    8. '        ' → logprob: -6.910959720611572
    9. 'self' → logprob: -7.285959720611572
    10. '\n' → logprob: -7.535959720611572

Token 20: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.36269718408584595
    2. '       ' → logprob: -1.2376971244812012
    3. ' self' → logprob: -4.362697124481201
    4. '   ' → logprob: -7.987697124481201
    5. '           ' → logprob: -8.11269760131836
    6. '        ' → logprob: -8.73769760131836
    7. '<|end|>' → logprob: -9.36269760131836
    8. ' ' → logprob: -9.61269760131836
    9. '```' → logprob: -9.61269760131836
    10. '_self' → logprob: -9.73769760131836

Token 21: '.height' (ID: 11682)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01295703649520874
    2. '.height' → logprob: -4.3879570960998535
    3. ' .' → logprob: -8.512956619262695
    4. 'height' → logprob: -9.262956619262695
    5. '.width' → logprob: -10.012956619262695
    6. '.Height' → logprob: -11.012956619262695
    7. '_height' → logprob: -11.137956619262695
    8. '<|end|>' → logprob: -11.512956619262695
    9. ')' → logprob: -11.637956619262695
    10. ' height' → logprob: -11.637956619262695

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6602034568786621
    2. ' =' → logprob: -0.7852034568786621
    3. '<|end|>' → logprob: -5.035203456878662
    4. '       ' → logprob: -5.160203456878662
    5. ',' → logprob: -5.535203456878662
    6. '_' → logprob: -5.660203456878662
    7. ')' → logprob: -6.285203456878662
    8. ' ' → logprob: -6.535203456878662
    9. '   ' → logprob: -6.660203456878662
    10. '.' → logprob: -6.660203456878662

Token 23: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.011050650849938393
    2. 'height' → logprob: -4.511050701141357
    3. ' ' → logprob: -13.3860502243042
    4. '(height' → logprob: -14.1360502243042
    5. '	height' → logprob: -15.0110502243042
    6. '_height' → logprob: -16.136051177978516
    7. '.height' → logprob: -16.761051177978516
    8. ' int' → logprob: -17.136051177978516
    9. ';height' → logprob: -17.136051177978516
    10. ' heights' → logprob: -17.261051177978516

Token 24: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13827402889728546
    2. '<|end|>' → logprob: -2.5132739543914795
    3. '        
' → logprob: -4.138274192810059
    4. '```' → logprob: -4.513274192810059
    5. '\' → logprob: -4.763274192810059
    6. '\n' → logprob: -5.638274192810059
    7. '        ' → logprob: -6.388274192810059
    8. '    
' → logprob: -6.513274192810059
    9. '
' → logprob: -7.263274192810059
    10. 'newline' → logprob: -7.263274192810059

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06838992983102798
    2. '<|end|>' → logprob: -3.193389892578125
    3. '        
' → logprob: -4.443389892578125
    4. '```' → logprob: -5.443389892578125
    5. '\' → logprob: -6.318389892578125
    6. '        ' → logprob: -6.693389892578125
    7. ',' → logprob: -7.318389892578125
    8. '    
' → logprob: -7.318389892578125
    9. '   ' → logprob: -7.443389892578125
    10. ')' → logprob: -7.568389892578125

Token 26: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3138214647769928
    2. '        ' → logprob: -2.06382155418396
    3. ' ' → logprob: -2.18882155418396
    4. '<|end|>' → logprob: -4.563821315765381
    5. 'self' (adapté à ' self') → logprob: -5.063821315765381
    6. ',' → logprob: -5.188821315765381
    7. ' ,' → logprob: -6.063821315765381
    8. ' self' → logprob: -6.688821315765381
    9. ')' → logprob: -7.188821315765381
    10. '\' → logprob: -7.688821315765381

Token 27: '.width' (ID: 11038)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004716703202575445
    2. '.width' → logprob: -5.754716873168945
    3. '.height' → logprob: -6.879716873168945
    4. ' .' → logprob: -7.754716873168945
    5. '<|end|>' → logprob: -10.129716873168945
    6. ' ' → logprob: -11.754716873168945
    7. ').' → logprob: -12.754716873168945
    8. '<|end|>' → logprob: -12.754716873168945
    9. ')' → logprob: -13.254716873168945
    10. '.space' → logprob: -13.504716873168945

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4783245623111725
    2. '=' → logprob: -0.9783245325088501
    3. '<|end|>' → logprob: -6.1033244132995605
    4. ' ' → logprob: -7.1033244132995605
    5. ')' → logprob: -7.1033244132995605
    6. '.' → logprob: -9.228324890136719
    7. '<|end|>' → logprob: -9.478324890136719
    8. '       ' → logprob: -9.728324890136719
    9. '   ' → logprob: -10.478324890136719
    10. '    ' → logprob: -11.103324890136719

Token 29: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.03805319964885712
    2. 'width' → logprob: -3.288053274154663
    3. ' height' → logprob: -12.163053512573242
    4. ' ' → logprob: -12.788053512573242
    5. 'height' → logprob: -13.163053512573242
    6. '(width' → logprob: -13.788053512573242
    7. '	width' → logprob: -15.038053512573242
    8. 'int' → logprob: -16.038053512573242
    9. '0' → logprob: -16.538053512573242
    10. ',width' → logprob: -16.788053512573242

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6391118764877319
    2. '<|end|>' → logprob: -1.514111876487732
    3. '   ' → logprob: -2.1391119956970215
    4. '    
' → logprob: -2.7641119956970215
    5. '\' → logprob: -3.8891119956970215
    6. '    ' → logprob: -4.2641119956970215
    7. '\n' → logprob: -4.6391119956970215
    8. ' 
' → logprob: -5.1391119956970215
    9. '```' → logprob: -5.8891119956970215
    10. '<|end|>' → logprob: -6.1391119956970215

Token 31: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17024414241313934
    2. '<|end|>' → logprob: -2.4202442169189453
    3. '\' → logprob: -3.5452442169189453
    4. '       ' → logprob: -4.295244216918945
    5. '\n' → logprob: -4.920244216918945
    6. 'def' → logprob: -5.795244216918945
    7. ' 
' → logprob: -6.170244216918945
    8. '        
' → logprob: -6.170244216918945
    9. '```' → logprob: -6.420244216918945
    10. '    
' → logprob: -6.545244216918945

Token 33: ' not' (ID: 625)
  Prédit: ' height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.4075000286102295
    2. ' self' → logprob: -2.1575000286102295
    3. ' not' → logprob: -2.4075000286102295
    4. 'height' → logprob: -2.6575000286102295
    5. ' ' → logprob: -3.0325000286102295
    6. '<|end|>' → logprob: -5.282500267028809
    7. 'self' → logprob: -5.907500267028809
    8. ' width' → logprob: -6.532500267028809
    9. '_height' → logprob: -8.282500267028809
    10. '  ' → logprob: -8.782500267028809

Token 34: ' self' (ID: 1051)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.007061193231493235
    2. ' (' → logprob: -5.007061004638672
    3. ' self' → logprob: -8.257061004638672
    4. ' ' → logprob: -10.257061004638672
    5. ' hasattr' → logprob: -10.757061004638672
    6. '(' → logprob: -12.132061004638672
    7. ' height' → logprob: -12.257061004638672
    8. 'self' → logprob: -12.507061004638672
    9. ' ' → logprob: -12.507061004638672
    10. '0' → logprob: -12.882061004638672

Token 35: '.is' (ID: 3109)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29725557565689087
    2. '.height' → logprob: -1.422255516052246
    3. ' .' → logprob: -4.297255516052246
    4. '.width' → logprob: -6.797255516052246
    5. '.is' → logprob: -7.547255516052246
    6. '._' → logprob: -8.547255516052246
    7. '.Height' → logprob: -9.422255516052246
    8. 'height' → logprob: -9.672255516052246
    9. '<|end|>' → logprob: -9.797255516052246
    10. '.__' → logprob: -10.172255516052246

Token 36: '_w' (ID: 3567)
  Prédit: 'instance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'instance' → logprob: -0.645031750202179
    2. '_integr' → logprob: -2.395031690597534
    3. 'int' → logprob: -2.895031690597534
    4. 'integr' → logprob: -3.020031690597534
    5. ' _' → logprob: -3.395031690597534
    6. '_valid' → logprob: -3.395031690597534
    7. ' ' → logprob: -3.395031690597534
    8. ' isinstance' → logprob: -3.520031690597534
    9. ' int' → logprob: -3.520031690597534
    10. 'Valid' → logprob: -3.770031690597534

Token 37: 'ide' (ID: 617)
  Prédit: 'idth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idth' → logprob: -0.0946991816163063
    2. 'e' → logprob: -3.5946991443634033
    3. 'ell' → logprob: -4.094699382781982
    4. 'hole' → logprob: -4.344699382781982
    5. 'ith' → logprob: -4.719699382781982
    6. 'ritable' → logprob: -5.094699382781982
    7. 'eight' → logprob: -5.469699382781982
    8. 'ide' → logprob: -6.344699382781982
    9. 'h' → logprob: -6.344699382781982
    10. 'i' → logprob: -6.844699382781982

Token 38: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01916157640516758
    2. ':' → logprob: -4.019161701202393
    3. '()' → logprob: -7.519161701202393
    4. ' ():' → logprob: -8.394161224365234
    5. '(' → logprob: -9.144161224365234
    6. '():
' → logprob: -9.519161224365234
    7. 'and' → logprob: -11.144161224365234
    8. '):' → logprob: -11.769161224365234
    9. ' :' → logprob: -11.894161224365234
    10. ' or' → logprob: -12.144161224365234

Token 39: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006864601746201515
    2. ':
' → logprob: -7.8756866455078125
    3. ' :' → logprob: -9.125686645507812
    4. '():' → logprob: -9.500686645507812
    5. '       ' → logprob: -9.875686645507812
    6. '):' → logprob: -10.500686645507812
    7. ':return' → logprob: -10.750686645507812
    8. '           ' → logprob: -12.375686645507812
    9. ' or' → logprob: -12.500686645507812
    10. '   ' → logprob: -12.625686645507812

Token 40: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -1.1992695331573486
    2. '           ' → logprob: -1.5742695331573486
    3. '\n' → logprob: -1.6992695331573486
    4. '\' → logprob: -2.0742695331573486
    5. ' \' → logprob: -2.4492695331573486
    6. '       ' → logprob: -3.6992695331573486
    7. 'raise' (adapté à ' raise') → logprob: -3.9492695331573486
    8. '            ' → logprob: -4.5742692947387695
    9. ' 
' → logprob: -4.9492692947387695
    10. ' return' → logprob: -5.1992692947387695

Token 41: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0007356545538641512
    2. 'Value' → logprob: -7.375735759735107
    3. ' ' → logprob: -9.37573528289795
    4. '	Value' → logprob: -11.62573528289795
    5. ' ' → logprob: -11.75073528289795
    6. '(Value' → logprob: -13.37573528289795
    7. ' Exception' → logprob: -13.62573528289795
    8. '_Value' → logprob: -13.87573528289795
    9. ' value' → logprob: -13.87573528289795
    10. '<|end|>' → logprob: -14.12573528289795

Token 42: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9862216504407115e-05
    2. 'rror' → logprob: -11.625020027160645
    3. 'Value' → logprob: -12.000020027160645
    4. ' Error' → logprob: -12.625020027160645
    5. ' ' → logprob: -15.375020027160645
    6. '   ' → logprob: -15.500020027160645
    7. 'error' → logprob: -15.750020027160645
    8. 'E' → logprob: -16.250019073486328
    9. 'Width' → logprob: -16.250019073486328
    10. '           ' → logprob: -16.375019073486328

Token 43: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010547212325036526
    2. '("' → logprob: -5.135547161102295
    3. '(
' → logprob: -5.885547161102295
    4. ' (' → logprob: -7.510547161102295
    5. ':' → logprob: -7.885547161102295
    6. '('' → logprob: -8.260547637939453
    7. ' ' → logprob: -8.385547637939453
    8. '<|end|>' → logprob: -9.385547637939453
    9. '()' → logprob: -10.010547637939453
    10. '   ' → logprob: -10.010547637939453

Token 44: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22749216854572296
    2. ''' → logprob: -1.6024922132492065
    3. '(' → logprob: -6.227492332458496
    4. '"The' → logprob: -10.102492332458496
    5. '("' → logprob: -11.477492332458496
    6. '"I' → logprob: -11.602492332458496
    7. '('' → logprob: -11.852492332458496
    8. ')' → logprob: -12.227492332458496
    9. '"This' → logprob: -12.352492332458496
    10. ''s' → logprob: -12.727492332458496

Token 45: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -0.6441160440444946
    2. 'Width' → logprob: -2.019115924835205
    3. ' Rectangle' → logprob: -2.144115924835205
    4. 'Height' → logprob: -2.144115924835205
    5. 'The' → logprob: -3.394115924835205
    6. ' Width' → logprob: -4.269115924835205
    7. ' Height' → logprob: -4.769115924835205
    8. 'Dimension' → logprob: -5.144115924835205
    9. ' rectangle' → logprob: -5.144115924835205
    10. ' The' → logprob: -5.144115924835205

Token 46: ' height' (ID: 4679)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.1906547099351883
    2. ' is' → logprob: -1.9406547546386719
    3. ' width' → logprob: -4.315654754638672
    4. ' height' → logprob: -5.065654754638672
    5. ' should' → logprob: -5.565654754638672
    6. ' too' → logprob: -5.940654754638672
    7. ' ' → logprob: -6.315654754638672
    8. ' needs' → logprob: -8.190654754638672
    9. ' cannot' → logprob: -8.315654754638672
    10. ''s' → logprob: -8.815654754638672

Token 47: ' {' (ID: 354)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.25031453371047974
    2. ' >' → logprob: -1.625314474105835
    3. ' ' → logprob: -4.500314712524414
    4. ' cannot' → logprob: -5.500314712524414
    5. ' should' → logprob: -5.500314712524414
    6. ' is' → logprob: -6.500314712524414
    7. ' greater' → logprob: -6.750314712524414
    8. ' >=' → logprob: -6.875314712524414
    9. 'must' → logprob: -7.875314712524414
    10. '>' → logprob: -8.250314712524414

Token 48: 'height' (ID: 5097)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.047665681689977646
    2. 'self' → logprob: -3.922665596008301
    3. ' }' → logprob: -4.422665596008301
    4. 'height' → logprob: -5.922665596008301
    5. '},' → logprob: -5.922665596008301
    6. ' self' → logprob: -5.922665596008301
    7. ' ' → logprob: -6.672665596008301
    8. '}{' → logprob: -6.797665596008301
    9. ',' → logprob: -6.922665596008301
    10. '{' → logprob: -7.422665596008301

Token 49: '}' (ID: 92)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.664233386516571
    2. '}' → logprob: -1.5392334461212158
    3. ' }' → logprob: -1.5392334461212158
    4. ' >' → logprob: -3.914233446121216
    5. ' should' → logprob: -4.664233207702637
    6. ' ' → logprob: -4.664233207702637
    7. ' cannot' → logprob: -5.289233207702637
    8. ' is' → logprob: -5.539233207702637
    9. ' }>' → logprob: -5.914233207702637
    10. 'must' → logprob: -6.039233207702637

Token 50: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.23128260672092438
    2. ' >' → logprob: -2.3562827110290527
    3. ' cannot' → logprob: -3.1062827110290527
    4. ' ' → logprob: -3.9812827110290527
    5. ' is' → logprob: -3.9812827110290527
    6. '>' → logprob: -4.856282711029053
    7. ' should' → logprob: -4.981282711029053
    8. 'must' → logprob: -5.731282711029053
    9. ' >=' → logprob: -5.731282711029053
    10. ' exceeds' → logprob: -5.856282711029053

Token 51: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.014317928813397884
    2. ' ' → logprob: -4.639317989349365
    3. '<|end|>' → logprob: -6.264317989349365
    4. ' <=' → logprob: -6.889317989349365
    5. ' not' → logprob: -7.014317989349365
    6. ' less' → logprob: -7.639317989349365
    7. 'be' → logprob: -9.639317512512207
    8. ' <' → logprob: -10.139317512512207
    9. ')' → logprob: -10.264317512512207
    10. 'less' → logprob: -10.514317512512207

Token 52: ' less' (ID: 3760)
  Prédit: ' less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' less' → logprob: -0.08211522549390793
    2. ' <=' → logprob: -3.2071151733398438
    3. 'less' → logprob: -3.7071151733398438
    4. ' at' → logprob: -4.832115173339844
    5. '<=' → logprob: -6.332115173339844
    6. ' greater' → logprob: -6.332115173339844
    7. ' >=' → logprob: -7.457115173339844
    8. 'greater' → logprob: -7.457115173339844
    9. ' ' → logprob: -8.582115173339844
    10. '<' → logprob: -8.582115173339844

Token 53: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.03274323418736458
    2. ' or' → logprob: -4.532743453979492
    3. '<|end|>' → logprob: -4.907743453979492
    4. 'er' → logprob: -5.282743453979492
    5. 'than' → logprob: -5.532743453979492
    6. '=' → logprob: -6.157743453979492
    7. '_than' → logprob: -6.532743453979492
    8. '-than' → logprob: -7.907743453979492
    9. '            ' → logprob: -8.407743453979492
    10. '    ' → logprob: -8.657743453979492

Token 54: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.41214606165885925
    2. ' ' → logprob: -1.2871460914611816
    3. 'width' → logprob: -3.1621460914611816
    4. ' or' → logprob: -4.287146091461182
    5. '<|end|>' → logprob: -5.787146091461182
    6. ' the' → logprob: -6.912146091461182
    7. 'or' → logprob: -8.037145614624023
    8. ' ' → logprob: -8.287145614624023
    9. '  ' → logprob: -9.037145614624023
    10. '```' → logprob: -9.287145614624023

Token 55: ' {' (ID: 354)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.03565229848027229
    2. '}")' → logprob: -4.035652160644531
    3. ' ")' → logprob: -5.035652160644531
    4. ')' → logprob: -5.285652160644531
    5. '.")' → logprob: -6.160652160644531
    6. ')")' → logprob: -6.660652160644531
    7. '")
' → logprob: -7.910652160644531
    8. '       ' → logprob: -8.035652160644531
    9. '}' → logprob: -8.285652160644531
    10. ' }' → logprob: -8.785652160644531

Token 56: 'width' (ID: 6015)
  Prédit: 'width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.105245441198349
    2. ' width' → logprob: -2.355245351791382
    3. '}' → logprob: -5.730245590209961
    4. ' }' → logprob: -6.480245590209961
    5. '(width' → logprob: -9.105245590209961
    6. 'height' → logprob: -10.105245590209961
    7. '}")' → logprob: -10.730245590209961
    8. '}{' → logprob: -11.105245590209961
    9. ' ' → logprob: -11.605245590209961
    10. '{' → logprob: -11.855245590209961

Token 57: '}")

' (ID: 119200)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5423533916473389
    2. '}")' → logprob: -1.0423533916473389
    3. ')' → logprob: -3.292353391647339
    4. ')")' → logprob: -4.042353630065918
    5. ' }' → logprob: -5.292353630065918
    6. '}' → logprob: -5.542353630065918
    7. '")
' → logprob: -7.417353630065918
    8. ' )' → logprob: -7.792353630065918
    9. '}")
' → logprob: -7.917353630065918
    10. '"' → logprob: -8.542353630065918

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7696680426597595
    2. '    
' → logprob: -1.2696681022644043
    3. '
' → logprob: -1.7696681022644043
    4. ' 
' → logprob: -3.3946681022644043
    5. '  
' → logprob: -3.6446681022644043
    6. '\n' → logprob: -5.144668102264404
    7. '        
' → logprob: -5.644668102264404
    8. '\' → logprob: -5.894668102264404
    9. 'def' → logprob: -6.269668102264404
    10. '   
' → logprob: -6.269668102264404

Token 59: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7837232351303101
    2. '   ' → logprob: -1.40872323513031
    3. '    
' → logprob: -1.90872323513031
    4. ' 
' → logprob: -2.7837233543395996
    5. 'def' (adapté à ' def') → logprob: -2.9087233543395996
    6. ' def' → logprob: -4.6587233543396
    7. '  
' → logprob: -4.7837233543396
    8. '        
' → logprob: -5.7837233543396
    9. '\n' → logprob: -6.2837233543396
    10. '```' → logprob: -6.2837233543396

Token 60: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0011345010716468096
    2. ' ' → logprob: -7.626134395599365
    3. ' space' → logprob: -8.001134872436523
    4. 'is' → logprob: -8.876134872436523
    5. ' ' → logprob: -9.626134872436523
    6. 'space' → logprob: -9.751134872436523
    7. '_' → logprob: -10.751134872436523
    8. ' _' → logprob: -11.501134872436523
    9. '_space' → logprob: -12.251134872436523
    10. 's' → logprob: -12.751134872436523

Token 61: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0009187239338643849
    2. '_' → logprob: -7.000918865203857
    3. '_width' → logprob: -13.0009183883667
    4. ' _' → logprob: -13.6259183883667
    5. '_space' → logprob: -14.3759183883667
    6. 'wide' → logprob: -14.6259183883667
    7. '_high' → logprob: -15.3759183883667
    8. '_a' → logprob: -15.5009183883667
    9. '_s' → logprob: -15.6259183883667
    10. '_n' → logprob: -15.6259183883667

Token 62: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.007639278657734394
    2. 'i' → logprob: -5.507639408111572
    3. 'wide' → logprob: -6.382639408111572
    4. '_' → logprob: -6.632639408111572
    5. 'id' → logprob: -8.882638931274414
    6. '   ' → logprob: -8.882638931274414
    7. '```' → logprob: -10.007638931274414
    8. 'e' → logprob: -10.132638931274414
    9. '_i' → logprob: -10.507638931274414
    10. 'a' → logprob: -10.882638931274414

Token 63: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016175013035535812
    2. '(' → logprob: -4.141174793243408
    3. '()' → logprob: -10.016175270080566
    4. ' (' → logprob: -10.641175270080566
    5. '   ' → logprob: -11.141175270080566
    6. '(s' → logprob: -11.141175270080566
    7. 'self' → logprob: -11.266175270080566
    8. '(
' → logprob: -11.641175270080566
    9. ' ' → logprob: -12.141175270080566
    10. '()(' → logprob: -12.391175270080566

Token 64: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07881135493516922
    2. ')' → logprob: -2.7038114070892334
    3. 'self' → logprob: -4.828811168670654
    4. '(self' → logprob: -8.203811645507812
    5. ',' → logprob: -8.453811645507812
    6. '):
' → logprob: -8.578811645507812
    7. ' ):' → logprob: -9.703811645507812
    8. '():' → logprob: -10.828811645507812
    9. ')->' → logprob: -10.953811645507812
    10. '   ' → logprob: -11.453811645507812

Token 65: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00487958500161767
    2. '(' → logprob: -5.379879474639893
    3. 'self' → logprob: -9.37987995147705
    4. ':' → logprob: -9.75487995147705
    5. '   ' → logprob: -10.37987995147705
    6. ' ->' → logprob: -10.87987995147705
    7. '       ' → logprob: -11.12987995147705
    8. '->' → logprob: -11.75487995147705
    9. '(s' → logprob: -11.87987995147705
    10. ' (' → logprob: -11.87987995147705

Token 66: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.003378761000931263
    2. 'bool' → logprob: -5.753378868103027
    3. ' ' → logprob: -8.628378868103027
    4. ' True' → logprob: -11.878378868103027
    5. '  ' → logprob: -12.253378868103027
    6. ' ' → logprob: -13.253378868103027
    7. '	bool' → logprob: -13.253378868103027
    8. '<bool' → logprob: -13.503378868103027
    9. ' None' → logprob: -13.628378868103027
    10. ' Bool' → logprob: -14.003378868103027

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002670661313459277
    2. '():' → logprob: -6.127670764923096
    3. '):' → logprob: -8.252670288085938
    4. ':return' → logprob: -9.127670288085938
    5. '<|end|>' → logprob: -10.502670288085938
    6. ' :' → logprob: -10.502670288085938
    7. '   ' → logprob: -11.002670288085938
    8. '       ' → logprob: -11.127670288085938
    9. ':
' → logprob: -11.627670288085938
    10. '(' → logprob: -12.252670288085938

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016727546229958534
    2. '<|end|>' → logprob: -4.641727447509766
    3. ':' → logprob: -5.516727447509766
    4. ':return' → logprob: -6.641727447509766
    5. '   ' → logprob: -7.391727447509766
    6. ' return' → logprob: -8.391727447509766
    7. ')' → logprob: -8.766727447509766
    8. ' 
' → logprob: -8.766727447509766
    9. ' ' → logprob: -9.516727447509766
    10. '    ' → logprob: -9.766727447509766

Token 69: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0434325635433197
    2. 'return' (adapté à ' return') → logprob: -3.7934324741363525
    3. ' return' → logprob: -5.043432712554932
    4. '
' → logprob: -5.043432712554932
    5. '<|end|>' → logprob: -5.543432712554932
    6. ' 
' → logprob: -6.543432712554932
    7. ':return' → logprob: -7.418432712554932
    8. '        
' → logprob: -7.793432712554932
    9. '   ' → logprob: -8.543432235717773
    10. '```' → logprob: -9.168432235717773

Token 70: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.004636368714272976
    2. 'self' → logprob: -5.379636287689209
    3. ' ' → logprob: -11.129636764526367
    4. ' ' → logprob: -14.504636764526367
    5. '(self' → logprob: -15.004636764526367
    6. '	self' → logprob: -15.129636764526367
    7. '   ' → logprob: -16.129636764526367
    8. '    ' → logprob: -16.629636764526367
    9. ' (' → logprob: -17.129636764526367
    10. '  ' → logprob: -17.254636764526367

Token 71: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.38837146759033203
    2. '.height' → logprob: -1.138371467590332
    3. '.' → logprob: -6.513371467590332
    4. '.w' → logprob: -11.513371467590332
    5. '.he' → logprob: -13.638371467590332
    6. ' .' → logprob: -13.888371467590332
    7. 'height' → logprob: -14.513371467590332
    8. 'width' → logprob: -14.763371467590332
    9. '.weight' → logprob: -14.763371467590332
    10. '.h' → logprob: -14.888371467590332

Token 72: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0047929915599524975
    2. '>' → logprob: -5.379793167114258
    3. ' ' → logprob: -8.754793167114258
    4. ' >=' → logprob: -11.629793167114258
    5. '<|end|>' → logprob: -13.129793167114258
    6. ' >
' → logprob: -13.254793167114258
    7. ' ' → logprob: -13.754793167114258
    8. '  ' → logprob: -15.379793167114258
    9. ' >

' → logprob: -15.504793167114258
    10. ' *' → logprob: -16.379793167114258

Token 73: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5231769680976868
    2. 'self' → logprob: -0.8981769680976868
    3. ' ' → logprob: -10.148177146911621
    4. '	self' → logprob: -12.648177146911621
    5. '<|end|>' → logprob: -12.648177146911621
    6. '0' → logprob: -13.273177146911621
    7. ' ' → logprob: -13.523177146911621
    8. '(self' → logprob: -13.773177146911621
    9. '=self' → logprob: -14.148177146911621
    10. '  ' → logprob: -14.398177146911621

Token 74: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -2.570319702499546e-05
    2. '.' → logprob: -11.500025749206543
    3. 'height' → logprob: -11.625025749206543
    4. '.width' → logprob: -12.000025749206543
    5. 'ight' → logprob: -15.375025749206543
    6. '.he' → logprob: -16.750024795532227
    7. ' .' → logprob: -17.625024795532227
    8. '	height' → logprob: -18.375024795532227
    9. '.size' → logprob: -18.750024795532227
    10. '.Height' → logprob: -19.000024795532227

Token 75: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20288735628128052
    2. '   ' → logprob: -2.3278872966766357
    3. '    
' → logprob: -3.9528872966766357
    4. '\' → logprob: -4.077887535095215
    5. '```' → logprob: -4.077887535095215
    6. '<|end|>' → logprob: -4.702887535095215
    7. '\n' → logprob: -4.827887535095215
    8. '

' → logprob: -5.577887535095215
    9. '' → logprob: -6.327887535095215
    10. ':' → logprob: -6.702887535095215

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16792987287044525
    2. '   ' → logprob: -2.9179298877716064
    3. '    
' → logprob: -3.4179298877716064
    4. '\n' → logprob: -3.6679298877716064
    5. '```' → logprob: -4.542929649353027
    6. '<|end|>' → logprob: -4.792929649353027
    7. '\' → logprob: -4.917929649353027
    8. 'def' → logprob: -5.792929649353027
    9. '

' → logprob: -6.042929649353027
    10. '  
' → logprob: -6.167929649353027

Token 77: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007491031661629677
    2. 'def' (adapté à ' def') → logprob: -5.382491111755371
    3. '    
' → logprob: -6.507491111755371
    4. '
' → logprob: -8.007491111755371
    5. ' ' → logprob: -8.007491111755371
    6. ' def' → logprob: -8.757491111755371
    7. '    ' → logprob: -9.257491111755371
    8. '  ' → logprob: -9.382491111755371
    9. '```' → logprob: -9.757491111755371
    10. '       ' → logprob: -10.132491111755371

Token 78: ' diagonal' (ID: 71638)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.022117625921964645
    2. ' calculate' → logprob: -4.522117614746094
    3. ' ' → logprob: -5.147117614746094
    4. 'area' → logprob: -5.772117614746094
    5. ' get' → logprob: -7.272117614746094
    6. '_area' → logprob: -8.022117614746094
    7. ' def' → logprob: -8.772117614746094
    8. ' calc' → logprob: -8.897117614746094
    9. ' compute' → logprob: -9.147117614746094
    10. ' are' → logprob: -9.272117614746094

Token 79: '_length' (ID: 11514)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.15136577188968658
    2. '_length' → logprob: -2.1513657569885254
    3. '(' → logprob: -3.7763657569885254
    4. '()' → logprob: -7.276365756988525
    5. '_distance' → logprob: -9.276366233825684
    6. '(
' → logprob: -9.651366233825684
    7. '_' → logprob: -9.901366233825684
    8. '   ' → logprob: -10.026366233825684
    9. '_squared' → logprob: -10.026366233825684
    10. 'length' → logprob: -10.276366233825684

Token 80: '_sq' (ID: 125541)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007650403305888176
    2. '(' → logprob: -4.882650375366211
    3. ' (' → logprob: -10.757650375366211
    4. 'self' → logprob: -11.757650375366211
    5. 's' → logprob: -12.507650375366211
    6. '(
' → logprob: -12.632650375366211
    7. '   ' → logprob: -12.882650375366211
    8. '_squared' → logprob: -14.132650375366211
    9. ' ' → logprob: -14.257650375366211
    10. '_' → logprob: -14.382650375366211

Token 81: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3157331645488739
    2. '(' → logprob: -1.3157331943511963
    3. '   ' → logprob: -7.690732955932617
    4. ' (' → logprob: -7.690732955932617
    5. 'self' → logprob: -8.065732955932617
    6. 's' → logprob: -8.565732955932617
    7. '(s' → logprob: -8.565732955932617
    8. '       ' → logprob: -8.815732955932617
    9. ' ' → logprob: -9.065732955932617
    10. '(
' → logprob: -9.065732955932617

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23036402463912964
    2. '):' → logprob: -1.6053640842437744
    3. '():' → logprob: -6.355363845825195
    4. '()' → logprob: -6.605363845825195
    5. ':' → logprob: -6.980363845825195
    6. '):
' → logprob: -8.605363845825195
    7. '   ' → logprob: -8.980363845825195
    8. ' )' → logprob: -8.980363845825195
    9. '())' → logprob: -9.105363845825195
    10. '(self' → logprob: -9.105363845825195

Token 83: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.17172642052173615
    2. '(' → logprob: -2.4217264652252197
    3. ':' → logprob: -2.7967264652252197
    4. '       ' → logprob: -5.546726226806641
    5. 'self' → logprob: -7.296726226806641
    6. '(
' → logprob: -7.421726226806641
    7. '   ' → logprob: -7.671726226806641
    8. '():' → logprob: -7.671726226806641
    9. ' ->' → logprob: -7.796726226806641
    10. ' :' → logprob: -8.04672622680664

Token 84: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04631437733769417
    2. 'int' → logprob: -3.1713144779205322
    3. ' self' → logprob: -6.296314239501953
    4. ' return' → logprob: -7.046314239501953
    5. ' (' → logprob: -8.421314239501953
    6. '(int' → logprob: -9.046314239501953
    7. 'self' → logprob: -9.296314239501953
    8. '   ' → logprob: -9.671314239501953
    9. 'return' → logprob: -10.296314239501953
    10. ' ' → logprob: -10.671314239501953

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005265804938971996
    2. '<|end|>' → logprob: -8.500526428222656
    3. ':
' → logprob: -8.875526428222656
    4. '():' → logprob: -9.750526428222656
    5. '):' → logprob: -10.000526428222656
    6. '       ' → logprob: -10.625526428222656
    7. ' :' → logprob: -11.000526428222656
    8. '(self' → logprob: -11.000526428222656
    9. '<|end|>' → logprob: -12.250526428222656
    10. ':**' → logprob: -12.500526428222656

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.40998875699006e-05
    2. '      ' → logprob: -10.75007438659668
    3. 'return' → logprob: -11.50007438659668
    4. ' return' → logprob: -11.50007438659668
    5. '        
' → logprob: -11.87507438659668
    6. '    ' → logprob: -12.00007438659668
    7. '   ' → logprob: -12.00007438659668
    8. '     ' → logprob: -12.87507438659668
    9. ':' → logprob: -13.25007438659668
    10. ' ' → logprob: -13.87507438659668

Token 87: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03942706063389778
    2. '       ' → logprob: -3.2894270420074463
    3. ' return' → logprob: -6.789427280426025
    4. 'self' → logprob: -8.289426803588867
    5. 'r' → logprob: -12.664426803588867
    6. '```' → logprob: -13.414426803588867
    7. '   ' → logprob: -13.914426803588867
    8. 'ret' → logprob: -14.039426803588867
    9. '        ' → logprob: -14.664426803588867
    10. '	return' → logprob: -15.914426803588867

Token 88: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.018169725313782692
    2. 'self' → logprob: -4.01816987991333
    3. '(self' → logprob: -11.643169403076172
    4. ' (' → logprob: -11.893169403076172
    5. ' ' → logprob: -13.393169403076172
    6. '       ' → logprob: -13.393169403076172
    7. ' ' → logprob: -15.018169403076172
    8. '	self' → logprob: -15.143169403076172
    9. '   ' → logprob: -15.643169403076172
    10. '```' → logprob: -16.893169403076172

Token 89: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.3162658214569092
    2. '.width' → logprob: -1.3162658214569092
    3. '.' → logprob: -5.816266059875488
    4. '.he' → logprob: -11.066266059875488
    5. '.h' → logprob: -13.691266059875488
    6. '.w' → logprob: -13.941266059875488
    7. '.x' → logprob: -14.441266059875488
    8. ' .' → logprob: -14.566266059875488
    9. '.di' → logprob: -14.816266059875488
    10. '.weight' → logprob: -14.941266059875488

Token 90: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.049969632178545
    2. ' **' → logprob: -3.0499696731567383
    3. '*' → logprob: -6.799969673156738
    4. ' *' → logprob: -8.299969673156738
    5. ' ' → logprob: -11.174969673156738
    6. ' ' → logprob: -13.299969673156738
    7. '2' → logprob: -13.299969673156738
    8. '*self' → logprob: -14.049969673156738
    9. '²' → logprob: -14.799969673156738
    10. '```' → logprob: -16.174968719482422

Token 91: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06513435393571854
    2. ' self' → logprob: -2.815134286880493
    3. 'height' → logprob: -5.940134525299072
    4. ' height' → logprob: -8.190134048461914
    5. '<|end|>' → logprob: -9.440134048461914
    6. ' ' → logprob: -9.565134048461914
    7. '	self' → logprob: -10.565134048461914
    8. '2' → logprob: -10.690134048461914
    9. '*self' → logprob: -10.940134048461914
    10. ' ' → logprob: -12.190134048461914

Token 92: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0022034284193068743
    2. 'height' → logprob: -6.127203464508057
    3. '.' → logprob: -11.627202987670898
    4. '	height' → logprob: -12.252202987670898
    5. '_height' → logprob: -14.127202987670898
    6. ' height' → logprob: -14.252202987670898
    7. 'ight' → logprob: -14.377202987670898
    8. '.width' → logprob: -14.502202987670898
    9. '*' → logprob: -14.877202987670898
    10. '   ' → logprob: -15.127202987670898

Token 93: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.026313884183764458
    2. '+' → logprob: -3.6513137817382812
    3. ' ' → logprob: -11.901313781738281
    4. ' +
' → logprob: -12.651313781738281
    5. '        ' → logprob: -13.776313781738281
    6. ' plus' → logprob: -14.026313781738281
    7. ' ' → logprob: -14.651313781738281
    8. '<|end|>' → logprob: -14.901313781738281
    9. '       ' → logprob: -15.401313781738281
    10. '    ' → logprob: -15.901313781738281

Token 94: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.01816457509994507
    2. 'self' → logprob: -4.01816463470459
    3. ' ' → logprob: -12.14316463470459
    4. '	self' → logprob: -12.89316463470459
    5. ' ' → logprob: -13.26816463470459
    6. '(self' → logprob: -13.64316463470459
    7. '       ' → logprob: -13.89316463470459
    8. '    ' → logprob: -13.89316463470459
    9. '   ' → logprob: -14.26816463470459
    10. '<|end|>' → logprob: -14.89316463470459

Token 95: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -6.813969957875088e-05
    2. '.' → logprob: -9.625067710876465
    3. ' .' → logprob: -13.375067710876465
    4. '.w' → logprob: -16.00006866455078
    5. '.height' → logprob: -16.75006866455078
    6. 'width' → logprob: -16.75006866455078
    7. '	width' → logprob: -17.00006866455078
    8. '.Width' → logprob: -17.12506866455078
    9. ';width' → logprob: -18.25006866455078

Token 96: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020624108612537384
    2. '*' → logprob: -3.8956241607666016
    3. '**' → logprob: -9.645624160766602
    4. ' **' → logprob: -11.395624160766602
    5. '*self' → logprob: -12.895624160766602
    6. ' ' → logprob: -13.395624160766602
    7. '*object' → logprob: -13.770624160766602
    8. ' *
' → logprob: -14.520624160766602
    9. '```' → logprob: -15.270624160766602
    10. '2' → logprob: -15.645624160766602

Token 97: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3486841917037964
    2. ' self' → logprob: -1.2236841917037964
    3. ' ' → logprob: -9.098684310913086
    4. '*self' → logprob: -10.098684310913086
    5. '	self' → logprob: -10.723684310913086
    6. '(self' → logprob: -11.223684310913086
    7. '2' → logprob: -11.348684310913086
    8. '[self' → logprob: -11.473684310913086
    9. '   ' → logprob: -11.848684310913086
    10. '<|end|>' → logprob: -12.223684310913086

Token 98: '.width' (ID: 11038)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.511581540107727
    2. 'width' → logprob: -1.011581540107727
    3. '.width' → logprob: -3.8865814208984375
    4. 'height' → logprob: -5.1365814208984375
    5. '<|end|>' → logprob: -5.6365814208984375
    6. '.' → logprob: -6.2615814208984375
    7. '_width' → logprob: -6.6365814208984375
    8. '.height' → logprob: -7.2615814208984375
    9. '	width' → logprob: -7.3865814208984375
    10. ' width' → logprob: -7.8865814208984375

Token 99: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24208328127861023
    2. '   ' → logprob: -1.9920833110809326
    3. '<|end|>' → logprob: -2.9920833110809326
    4. ' 
' → logprob: -4.7420830726623535
    5. '    
' → logprob: -4.7420830726623535
    6. '```' → logprob: -6.1170830726623535
    7. '\n' → logprob: -6.2420830726623535
    8. '\' → logprob: -6.8670830726623535
    9. '<|end|>' → logprob: -6.9920830726623535
    10. ' ' → logprob: -6.9920830726623535

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2678193151950836
    2. '
' → logprob: -1.6428192853927612
    3. '    
' → logprob: -3.767819404602051
    4. '<|end|>' → logprob: -5.517819404602051
    5. ' ' → logprob: -5.767819404602051
    6. ' 
' → logprob: -5.892819404602051
    7. 'def' → logprob: -5.892819404602051
    8. '  
' → logprob: -6.517819404602051
    9. '\n' → logprob: -6.767819404602051
    10. '\' → logprob: -7.642819404602051

Token 101: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014088163152337074
    2. '    
' → logprob: -5.389088153839111
    3. 'def' (adapté à ' def') → logprob: -5.389088153839111
    4. '
' → logprob: -5.514088153839111
    5. '<|end|>' → logprob: -8.63908863067627
    6. 'class' → logprob: -9.01408863067627
    7. ' ' → logprob: -9.51408863067627
    8. ' 
' → logprob: -9.88908863067627
    9. ' def' → logprob: -10.13908863067627
    10. '        
' → logprob: -10.26408863067627

Token 102: ' __' (ID: 2516)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.031020943075418472
    2. 'area' → logprob: -4.4060211181640625
    3. ' diagonal' → logprob: -5.0310211181640625
    4. ' perimeter' → logprob: -5.5310211181640625
    5. ' ' → logprob: -5.9060211181640625
    6. ' is' → logprob: -6.7810211181640625
    7. ' __' → logprob: -7.0310211181640625
    8. ' get' → logprob: -7.4060211181640625
    9. ' square' → logprob: -7.7810211181640625
    10. ' calculate' → logprob: -7.9060211181640625

Token 103: 'lt' (ID: 3199)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.029208112508058548
    2. 'repr' → logprob: -3.779208183288574
    3. 'str' → logprob: -5.654208183288574
    4. 'init' → logprob: -6.029208183288574
    5. 'lt' → logprob: -10.904208183288574
    6. 'e' → logprob: -12.154208183288574
    7. 'add' → logprob: -13.029208183288574
    8. 'hash' → logprob: -13.279208183288574
    9. 'int' → logprob: -13.654208183288574
    10. ' eq' → logprob: -13.779208183288574

Token 104: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31347912549972534
    2. '__(' → logprob: -1.3134791851043701
    3. '__('' → logprob: -9.31347942352295
    4. '__((' → logprob: -9.93847942352295
    5. '__(
' → logprob: -10.18847942352295
    6. '___' → logprob: -10.68847942352295
    7. '__("' → logprob: -11.43847942352295
    8. '__(*' → logprob: -12.81347942352295
    9. '__.__' → logprob: -13.43847942352295
    10. '_' → logprob: -13.93847942352295

Token 105: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001253684633411467
    2. ' self' → logprob: -6.751253604888916
    3. 'other' → logprob: -9.501254081726074
    4. ' other' → logprob: -13.126254081726074
    5. '   ' → logprob: -13.251254081726074
    6. '(self' → logprob: -13.376254081726074
    7. '       ' → logprob: -13.501254081726074
    8. 's' → logprob: -14.626254081726074
    9. ' ' → logprob: -14.626254081726074
    10. '	self' → logprob: -14.751254081726074

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1400641202926636
    2. ' ,' → logprob: -1.2650641202926636
    3. '__' → logprob: -1.3900641202926636
    4. '__,' → logprob: -2.265064239501953
    5. '_' → logprob: -3.765064239501953
    6. ' ' → logprob: -4.515064239501953
    7. ' __' → logprob: -5.265064239501953
    8. '_,' → logprob: -6.140064239501953
    9. '__(' → logprob: -6.890064239501953
    10. '<|end|>' → logprob: -7.265064239501953

Token 107: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.029771901667118073
    2. 'other' → logprob: -3.5297718048095703
    3. ' o' → logprob: -10.90477180480957
    4. '(other' → logprob: -14.15477180480957
    5. ' ' → logprob: -14.27977180480957
    6. 'o' → logprob: -14.40477180480957
    7. ' oth' → logprob: -14.65477180480957
    8. 'Other' → logprob: -15.40477180480957
    9. ' rhs' → logprob: -15.90477180480957
    10. '_other' → logprob: -16.02977180480957

Token 108: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003989115823060274
    2. ':' → logprob: -5.878989219665527
    3. ')' → logprob: -7.253989219665527
    4. ' ):' → logprob: -7.878989219665527
    5. '):
' → logprob: -9.378989219665527
    6. ' :' → logprob: -12.503989219665527
    7. ' )' → logprob: -12.753989219665527
    8. '       ' → logprob: -13.753989219665527
    9. '   ' → logprob: -13.878989219665527
    10. '<|end|>' → logprob: -14.003989219665527

Token 109: ' '' (ID: 461)
  Prédit: ' Integral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Integral' → logprob: -0.22891226410865784
    2. 'Integral' → logprob: -2.353912353515625
    3. ' )' → logprob: -2.728912353515625
    4. ' ):
' → logprob: -4.353912353515625
    5. ')' → logprob: -4.353912353515625
    6. ' ' → logprob: -4.478912353515625
    7. '):
' → logprob: -5.978912353515625
    8. ' ):' → logprob: -6.103912353515625
    9. ' integral' → logprob: -6.478912353515625
    10. '):' → logprob: -8.478912353515625

Token 110: 'Integral' (ID: 102763)
  Prédit: 'Integral'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integral' → logprob: -0.000354769523255527
    2. ' Integral' → logprob: -8.000354766845703
    3. 'Integr' → logprob: -11.500354766845703
    4. 'I' → logprob: -12.875354766845703
    5. 'Integrated' → logprob: -12.875354766845703
    6. 'In' → logprob: -13.375354766845703
    7. 'Intr' → logprob: -14.500354766845703
    8. 'Inte' → logprob: -14.750354766845703
    9. 'Int' → logprob: -14.875354766845703
    10. 'Integrity' → logprob: -15.250354766845703

Token 111: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -1.2352385965641588e-05
    2. 'Rect' → logprob: -11.500012397766113
    3. '_rectangle' → logprob: -14.125012397766113
    4. '.Rectangle' → logprob: -14.250012397766113
    5. ' Rectangle' → logprob: -14.875012397766113
    6. 'rectangle' → logprob: -15.750012397766113
    7. 'Integral' → logprob: -16.125011444091797
    8. '_Rect' → logprob: -16.250011444091797
    9. '   ' → logprob: -17.125011444091797
    10. '
' → logprob: -17.500011444091797

Token 112: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5281645655632019
    2. ')' → logprob: -1.2781646251678467
    3. ''):' → logprob: -2.2781646251678467
    4. '):' → logprob: -3.6531646251678467
    5. ''):
' → logprob: -6.278164386749268
    6. ':' → logprob: -6.653164386749268
    7. '):
' → logprob: -9.778164863586426
    8. '   ' → logprob: -10.153164863586426
    9. '':' → logprob: -10.903164863586426
    10. ''' → logprob: -11.028164863586426

Token 113: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012318959925323725
    2. '):' → logprob: -7.126231670379639
    3. ':
' → logprob: -8.376232147216797
    4. ' :' → logprob: -9.376232147216797
    5. ':return' → logprob: -10.126232147216797
    6. ' ->' → logprob: -10.876232147216797
    7. '():' → logprob: -10.876232147216797
    8. '       ' → logprob: -11.376232147216797
    9. '->' → logprob: -12.001232147216797
    10. '>:' → logprob: -12.126232147216797

Token 114: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.018386147916316986
    2. 'bool' → logprob: -4.018386363983154
    3. ' True' → logprob: -8.518385887145996
    4. 'True' → logprob: -10.518385887145996
    5. ' ' → logprob: -13.393385887145996
    6. '	bool' → logprob: -13.393385887145996
    7. ' ' → logprob: -13.518385887145996
    8. ' int' → logprob: -13.518385887145996
    9. 'int' → logprob: -13.768385887145996
    10. '<bool' → logprob: -13.893385887145996

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009530289680697024
    2. '):' → logprob: -7.500953197479248
    3. ':
' → logprob: -8.12595272064209
    4. '       ' → logprob: -10.25095272064209
    5. '():' → logprob: -10.87595272064209
    6. ':return' → logprob: -11.00095272064209
    7. ' :' → logprob: -11.25095272064209
    8. '<|end|>' → logprob: -11.75095272064209
    9. '):
' → logprob: -12.00095272064209
    10. '>:' → logprob: -13.75095272064209

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037132782745175064
    2. ' return' → logprob: -8.750370979309082
    3. '<|end|>' → logprob: -9.250370979309082
    4. '
' → logprob: -9.875370979309082
    5. 'return' → logprob: -11.000370979309082
    6. '      ' → logprob: -11.000370979309082
    7. '        
' → logprob: -11.625370979309082
    8. '   ' → logprob: -12.250370979309082
    9. '        ' → logprob: -12.500370979309082
    10. ' ' → logprob: -12.875370979309082

Token 117: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39480873942375183
    2. '       ' → logprob: -1.3948087692260742
    3. ' return' → logprob: -3.144808769226074
    4. 'self' → logprob: -3.394808769226074
    5. ' self' → logprob: -6.394808769226074
    6. '```' → logprob: -12.519808769226074
    7. '{return' → logprob: -13.144808769226074
    8. '   ' → logprob: -13.144808769226074
    9. ' ' → logprob: -13.269808769226074
    10. '
' → logprob: -13.269808769226074

Token 118: ' Compare' (ID: 38200)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5800856351852417
    2. ' return' → logprob: -0.8300856351852417
    3. ' self' → logprob: -6.455085754394531
    4. 'self' → logprob: -6.455085754394531
    5. '       ' → logprob: -6.955085754394531
    6. '
' → logprob: -11.955085754394531
    7. '        ' → logprob: -12.080085754394531
    8. '```' → logprob: -12.080085754394531
    9. '   ' → logprob: -12.205085754394531
    10. ' ' → logprob: -12.705085754394531

Token 119: ' by' (ID: 656)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20655639469623566
    2. ' self' → logprob: -2.3315563201904297
    3. '       ' → logprob: -2.4565563201904297
    4. 'return' → logprob: -6.08155632019043
    5. '(self' → logprob: -7.08155632019043
    6. ' return' → logprob: -7.45655632019043
    7. '   ' → logprob: -10.95655632019043
    8. '        ' → logprob: -11.45655632019043
    9. ' ' → logprob: -12.58155632019043
    10. '	self' → logprob: -13.20655632019043

Token 120: ' diagonal' (ID: 71638)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007893243804574013
    2. ' self' → logprob: -4.882893085479736
    3. '       ' → logprob: -8.382893562316895
    4. '   ' → logprob: -10.132893562316895
    5. '           ' → logprob: -11.757893562316895
    6. '(self' → logprob: -12.632893562316895
    7. '
' → logprob: -12.757893562316895
    8. ' ' → logprob: -13.382893562316895
    9. '```' → logprob: -14.007893562316895
    10. 'di' → logprob: -14.632893562316895

Token 121: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00010306637705070898
    2. 'length' → logprob: -9.625102996826172
    3. '()' → logprob: -11.250102996826172
    4. '_' → logprob: -11.500102996826172
    5. '_l' → logprob: -11.625102996826172
    6. 'Length' → logprob: -13.125102996826172
    7. '   ' → logprob: -14.000102996826172
    8. '```' → logprob: -14.875102996826172
    9. ' length' → logprob: -15.000102996826172
    10. 'l' → logprob: -15.250102996826172

Token 122: ' squared' (ID: 117867)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08720956742763519
    2. '()' → logprob: -2.837209463119507
    3. 'return' → logprob: -4.837209701538086
    4. '
' → logprob: -5.212209701538086
    5. ' return' → logprob: -5.837209701538086
    6. '<|end|>' → logprob: -6.212209701538086
    7. '   ' → logprob: -6.712209701538086
    8. '()
' → logprob: -6.962209701538086
    9. '(' → logprob: -7.212209701538086
    10. '        ' → logprob: -7.587209701538086

Token 123: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6720305681228638
    2. 'return' → logprob: -1.9220305681228638
    3. ':' → logprob: -2.297030448913574
    4. ':return' → logprob: -2.547030448913574
    5. '
' → logprob: -2.797030448913574
    6. ' return' → logprob: -2.922030448913574
    7. '   ' → logprob: -4.172030448913574
    8. ':
' → logprob: -4.172030448913574
    9. '\n' → logprob: -5.922030448913574
    10. ')' → logprob: -6.047030448913574

Token 124: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027772260829806328
    2. '
' → logprob: -3.9027721881866455
    3. '<|end|>' → logprob: -5.777772426605225
    4. ',' → logprob: -6.277772426605225
    5. ':' → logprob: -7.027772426605225
    6. 'return' → logprob: -8.152771949768066
    7. '        
' → logprob: -8.402771949768066
    8. '        ' → logprob: -9.027771949768066
    9. '<|end|>' → logprob: -9.402771949768066
    10. ' return' → logprob: -9.402771949768066

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005724519141949713
    2. ',' → logprob: -8.750572204589844
    3. 'return' → logprob: -9.750572204589844
    4. '        ' → logprob: -9.875572204589844
    5. '<|end|>' → logprob: -10.000572204589844
    6. '   ' → logprob: -10.125572204589844
    7. '
' → logprob: -10.250572204589844
    8. '      ' → logprob: -10.250572204589844
    9. ' return' → logprob: -10.375572204589844
    10. '        
' → logprob: -10.500572204589844

Token 126: ' dl' (ID: 28802)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09550847113132477
    2. '       ' → logprob: -2.470508575439453
    3. ' return' → logprob: -5.345508575439453
    4. 'self' → logprob: -6.345508575439453
    5. 'if' → logprob: -11.970508575439453
    6. ' self' → logprob: -12.345508575439453
    7. '```' → logprob: -12.595508575439453
    8. '        
' → logprob: -13.345508575439453
    9. '	return' → logprob: -13.720508575439453
    10. '        ' → logprob: -13.845508575439453

Token 127: '_self' (ID: 64773)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.7552412748336792
    2. 'ength' → logprob: -1.3802412748336792
    3. '_sq' → logprob: -1.8802412748336792
    4. ' =' → logprob: -3.2552413940429688
    5. 'eng' → logprob: -3.5052413940429688
    6. '_squared' → logprob: -4.255241394042969
    7. '_length' → logprob: -4.630241394042969
    8. '_' → logprob: -5.005241394042969
    9. '   ' → logprob: -5.130241394042969
    10. '=' → logprob: -5.630241394042969

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08537419140338898
    2. '=' → logprob: -3.085374116897583
    3. ' <' → logprob: -4.085374355316162
    4. '()' → logprob: -4.585374355316162
    5. ' ' → logprob: -4.835374355316162
    6. '   ' → logprob: -8.210373878479004
    7. ' ()' → logprob: -8.835373878479004
    8. '        ' → logprob: -8.960373878479004
    9. '       ' → logprob: -9.210373878479004
    10. '()<' → logprob: -9.210373878479004

Token 129: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014166918583214283
    2. ' self' → logprob: -4.264166831970215
    3. '       ' → logprob: -13.139166831970215
    4. '(self' → logprob: -14.139166831970215
    5. '	self' → logprob: -15.389166831970215
    6. '<|end|>' → logprob: -15.389166831970215
    7. '
' → logprob: -16.51416778564453
    8. '$self' → logprob: -16.76416778564453
    9. '_self' → logprob: -16.88916778564453
    10. 's' → logprob: -17.38916778564453

Token 130: '.di' (ID: 59197)
  Prédit: '.di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.di' → logprob: -0.00015908108616713434
    2. '.' → logprob: -8.75015926361084
    3. ' .' → logprob: -15.00015926361084
    4. '.diagram' → logprob: -15.75015926361084
    5. '.div' → logprob: -16.375158309936523
    6. '.da' → logprob: -17.125158309936523
    7. '.del' → logprob: -17.750158309936523
    8. '.dec' → logprob: -18.500158309936523
    9. '.d' → logprob: -18.625158309936523
    10. '.def' → logprob: -19.500158309936523

Token 131: 'agonal' (ID: 38072)
  Prédit: 'agonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agonal' → logprob: -9.849109119386412e-06
    2. 'ag' → logprob: -12.250009536743164
    3. 'agon' → logprob: -13.125009536743164
    4. 'al' → logprob: -13.875009536743164
    5. 'ago' → logprob: -14.500009536743164
    6. 'onal' → logprob: -15.125009536743164
    7. 'a' → logprob: -15.250009536743164
    8. 'agona' → logprob: -15.250009536743164
    9. 'ogonal' → logprob: -15.250009536743164
    10. 'agal' → logprob: -15.875009536743164

Token 132: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.531315314830863e-06
    2. 'length' → logprob: -12.750003814697266
    3. '_l' → logprob: -15.625003814697266
    4. 'Length' → logprob: -16.000003814697266
    5. '_' → logprob: -16.125003814697266
    6. 'ength' → logprob: -16.500003814697266
    7. ' length' → logprob: -17.375003814697266
    8. '_lengths' → logprob: -17.625003814697266
    9. '_len' → logprob: -18.000003814697266
    10. '_LENGTH' → logprob: -18.375003814697266

Token 133: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -3.452426608419046e-05
    2. '_' → logprob: -11.25003433227539
    3. '_sz' → logprob: -11.87503433227539
    4. 'sq' → logprob: -12.00003433227539
    5. '_length' → logprob: -12.87503433227539
    6. '_len' → logprob: -12.87503433227539
    7. '_squared' → logprob: -13.25003433227539
    8. '_ls' → logprob: -15.12503433227539
    9. '_s' → logprob: -15.37503433227539
    10. '__' → logprob: -15.75003433227539

Token 134: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021939214784651995
    2. '()
' → logprob: -6.127193927764893
    3. '()

' → logprob: -12.377193450927734
    4. '()<' → logprob: -13.627193450927734
    5. '()>' → logprob: -14.002193450927734
    6. '(' → logprob: -14.127193450927734
    7. ' ()' → logprob: -14.377193450927734
    8. '()
' → logprob: -14.627193450927734
    9. '()\' → logprob: -15.877193450927734
    10. '()]' → logprob: -16.252193450927734

Token 135: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2426685392856598
    2. '<|end|>' → logprob: -1.7426685094833374
    3. '       ' → logprob: -3.367668628692627
    4. '<|end|>' → logprob: -5.742668628692627
    5. 'dl' → logprob: -6.992668628692627
    6. '
' → logprob: -7.992668628692627
    7. ',' → logprob: -8.492668151855469
    8. '  
' → logprob: -8.742668151855469
    9. '        
' → logprob: -8.742668151855469
    10. ' ' → logprob: -9.242668151855469

Token 136: ' dl' (ID: 28802)
  Prédit: ' dl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dl' → logprob: -0.3766784071922302
    2. 'dl' (adapté à ' dl') → logprob: -1.251678466796875
    3. '
' → logprob: -3.751678466796875
    4. '       ' → logprob: -5.626678466796875
    5. ' 
' → logprob: -8.501678466796875
    6. '_dl' → logprob: -9.126678466796875
    7. '(dl' → logprob: -9.251678466796875
    8. '
' → logprob: -9.251678466796875
    9. '        
' → logprob: -10.126678466796875
    10. '\
' → logprob: -10.626678466796875

Token 137: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.001383805531077087
    2. '_' → logprob: -6.7513837814331055
    3. '_self' → logprob: -8.501383781433105
    4. 'other' → logprob: -12.001383781433105
    5. '_o' → logprob: -13.751383781433105
    6. ' _' → logprob: -14.251383781433105
    7. '_OTHER' → logprob: -14.251383781433105
    8. '=' → logprob: -15.001383781433105
    9. '_=' → logprob: -15.251383781433105
    10. 'Other' → logprob: -15.376383781433105

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005628581158816814
    2. '=' → logprob: -5.25562858581543
    3. '()' → logprob: -8.13062858581543
    4. ' ' → logprob: -9.38062858581543
    5. ')' → logprob: -12.00562858581543
    6. '        ' → logprob: -12.75562858581543
    7. ' ()' → logprob: -13.50562858581543
    8. ' =
' → logprob: -13.50562858581543
    9. ' )' → logprob: -14.00562858581543
    10. '    ' → logprob: -14.50562858581543

Token 139: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.474082887172699
    2. 'other' → logprob: -0.974082887172699
    3. '(other' → logprob: -12.724082946777344
    4. '.other' → logprob: -13.349082946777344
    5. 'Other' → logprob: -14.349082946777344
    6. ' oth' → logprob: -15.349082946777344
    7. '_other' → logprob: -15.474082946777344
    8. 'othe' → logprob: -15.724082946777344
    9. ' ' → logprob: -17.349082946777344
    10. '<|end|>' → logprob: -17.474082946777344

Token 140: '.di' (ID: 59197)
  Prédit: '.di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.di' → logprob: -0.0040818434208631516
    2. '.' → logprob: -5.504081726074219
    3. ' .' → logprob: -13.629081726074219
    4. '.del' → logprob: -14.004081726074219
    5. '.diagram' → logprob: -15.004081726074219
    6. '.div' → logprob: -15.254081726074219
    7. '.da' → logprob: -15.379081726074219
    8. '.dec' → logprob: -15.629081726074219
    9. '.
' → logprob: -16.25408172607422
    10. '.dialog' → logprob: -17.37908172607422

Token 141: 'agonal' (ID: 38072)
  Prédit: 'agonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agonal' → logprob: -2.6537622034084052e-05
    2. 'agon' → logprob: -11.75002670288086
    3. 'ago' → logprob: -12.37502670288086
    4. 'al' → logprob: -12.87502670288086
    5. 'agona' → logprob: -12.87502670288086
    6. 'ag' → logprob: -13.00002670288086
    7. 'agno' → logprob: -13.37502670288086
    8. 'agal' → logprob: -13.37502670288086
    9. 'onal' → logprob: -13.50002670288086
    10. 'a' → logprob: -13.62502670288086

Token 142: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0010056582977995276
    2. 'length' → logprob: -7.00100564956665
    3. 'al' → logprob: -10.126006126403809
    4. 'Length' → logprob: -10.501006126403809
    5. 'ength' → logprob: -10.876006126403809
    6. ' length' → logprob: -13.751006126403809
    7. 'di' → logprob: -14.001006126403809
    8. '_' → logprob: -14.376006126403809
    9. '_l' → logprob: -14.376006126403809
    10. 'l' → logprob: -14.626006126403809

Token 143: '_sq' (ID: 125541)
  Prédit: '_sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sq' → logprob: -0.0011899876408278942
    2. 'sq' → logprob: -7.001190185546875
    3. '_length' → logprob: -8.501190185546875
    4. 'length' → logprob: -9.626190185546875
    5. '_len' → logprob: -12.876190185546875
    6. 'Sq' → logprob: -13.251190185546875
    7. '```' → logprob: -14.126190185546875
    8. 'Length' → logprob: -14.251190185546875
    9. '_squared' → logprob: -14.251190185546875
    10. 's' → logprob: -14.251190185546875

Token 144: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.078839502763003e-05
    2. '()
' → logprob: -9.500090599060059
    3. '()>' → logprob: -11.500090599060059
    4. '())' → logprob: -12.750090599060059
    5. '()]' → logprob: -14.125090599060059
    6. '()`' → logprob: -14.750090599060059
    7. '()
' → logprob: -15.000090599060059
    8. '()

' → logprob: -15.125090599060059
    9. '()">' → logprob: -15.375090599060059
    10. ' ()' → logprob: -15.500090599060059

Token 145: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5396562814712524
    2. '       ' → logprob: -0.9146562814712524
    3. '<|end|>' → logprob: -4.914656162261963
    4. '        
' → logprob: -5.789656162261963
    5. ' return' → logprob: -6.539656162261963
    6. '  
' → logprob: -6.789656162261963
    7. 'return' → logprob: -7.164656162261963
    8. '    
' → logprob: -7.289656162261963
    9. '\n' → logprob: -7.539656162261963
    10. '   ' → logprob: -7.539656162261963

Token 146: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6656739711761475
    2. '       ' → logprob: -0.7906739711761475
    3. 'if' (adapté à ' if') → logprob: -4.415674209594727
    4. '
' → logprob: -4.540674209594727
    5. ' return' → logprob: -4.790674209594727
    6. ' if' → logprob: -7.290674209594727
    7. '   ' → logprob: -7.540674209594727
    8. '        
' → logprob: -8.915674209594727
    9. '	return' → logprob: -10.790674209594727
    10. ' 
' → logprob: -10.790674209594727

Token 147: ' dl' (ID: 28802)
  Prédit: ' dl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dl' → logprob: -0.007611601613461971
    2. 'dl' → logprob: -4.8826117515563965
    3. '(dl' → logprob: -12.257611274719238
    4. '_dl' → logprob: -14.257611274719238
    5. ' ' → logprob: -17.007612228393555
    6. ' ' → logprob: -17.007612228393555
    7. ' dll' → logprob: -17.382612228393555
    8. '	d' → logprob: -17.507612228393555
    9. '    ' → logprob: -17.632612228393555
    10. 'dll' → logprob: -18.257612228393555

Token 148: '_self' (ID: 64773)
  Prédit: '_self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_self' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -11.125015258789062
    3. 'self' → logprob: -15.250015258789062
    4. '_other' → logprob: -16.375015258789062
    5. '_s' → logprob: -16.750015258789062
    6. ' _' → logprob: -17.625015258789062
    7. '_SELF' → logprob: -18.500015258789062
    8. '__' → logprob: -18.750015258789062
    9. 'Self' → logprob: -18.750015258789062
    10. '_
' → logprob: -19.375015258789062

Token 149: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8618074655532837
    2. ' <' → logprob: -1.1118074655532837
    3. '<' → logprob: -1.7368074655532837
    4. '!=' → logprob: -2.736807346343994
    5. ' ==' → logprob: -5.736807346343994
    6. '==' → logprob: -5.861807346343994
    7. ' ' → logprob: -7.486807346343994
    8. '<|end|>' → logprob: -8.111807823181152
    9. '   ' → logprob: -8.986807823181152
    10. ' ' → logprob: -9.486807823181152

Token 150: ' dl' (ID: 28802)
  Prédit: 'dl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dl' → logprob: -0.31326884031295776
    2. ' dl' → logprob: -1.3132688999176025
    3. '(dl' → logprob: -12.688268661499023
    4. '_dl' → logprob: -13.063268661499023
    5. 'dll' → logprob: -14.188268661499023
    6. ' ' → logprob: -14.813268661499023
    7. '
' → logprob: -15.813268661499023
    8. '0' → logprob: -16.063268661499023
    9. 'other' → logprob: -16.313268661499023
    10. 'dlg' → logprob: -16.688268661499023

Token 151: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.00010139751975657418
    2. '_self' → logprob: -9.375101089477539
    3. 'other' → logprob: -11.125101089477539
    4. '_' → logprob: -14.125101089477539
    5. 'Other' → logprob: -14.750101089477539
    6. '_OTHER' → logprob: -15.125101089477539
    7. '_else' → logprob: -16.62510108947754
    8. '_o' → logprob: -16.62510108947754
    9. ' other' → logprob: -17.12510108947754
    10. '_ot' → logprob: -17.75010108947754

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006076687481254339
    2. ':
' → logprob: -5.131076812744141
    3. ':return' → logprob: -8.88107681274414
    4. '):' → logprob: -12.75607681274414
    5. '       ' → logprob: -13.63107681274414
    6. ' :' → logprob: -13.75607681274414
    7. '<|end|>' → logprob: -13.75607681274414
    8. '):
' → logprob: -14.13107681274414
    9. '           ' → logprob: -14.25607681274414
    10. ',' → logprob: -14.75607681274414

Token 153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18395613133907318
    2. ':' → logprob: -2.8089561462402344
    3. ' return' → logprob: -2.9339561462402344
    4. '       ' → logprob: -3.6839561462402344
    5. ':return' → logprob: -4.058956146240234
    6. 'return' → logprob: -4.683956146240234
    7. ':
' → logprob: -6.433956146240234
    8. '<|end|>' → logprob: -8.183956146240234
    9. '
' → logprob: -9.058956146240234
    10. '   ' → logprob: -9.183956146240234

Token 154: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25415706634521484
    2. ' return' → logprob: -1.5041570663452148
    3. '           ' → logprob: -6.254157066345215
    4. '
' → logprob: -8.879157066345215
    5. ':return' → logprob: -9.129157066345215
    6. '<|end|>' → logprob: -11.129157066345215
    7. '               ' → logprob: -11.629157066345215
    8. ')return' → logprob: -12.504157066345215
    9. 'eturn' → logprob: -12.504157066345215
    10. '{return' → logprob: -12.629157066345215

Token 155: ' dl' (ID: 28802)
  Prédit: ' dl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dl' → logprob: -0.20141440629959106
    2. 'dl' → logprob: -1.7014143466949463
    3. '(dl' → logprob: -13.951414108276367
    4. '_dl' → logprob: -16.076414108276367
    5. 'dll' → logprob: -16.951414108276367
    6. '           ' → logprob: -17.076414108276367
    7. 'dlg' → logprob: -17.326414108276367
    8. 'self' → logprob: -17.576414108276367
    9. ' dlg' → logprob: -17.701414108276367
    10. 'd' → logprob: -18.326414108276367

Token 156: '_self' (ID: 64773)
  Prédit: '_self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_self' → logprob: -1.676292231422849e-05
    2. '_' → logprob: -11.125017166137695
    3. '_other' → logprob: -13.750017166137695
    4. 'self' → logprob: -14.750017166137695
    5. ' _' → logprob: -15.375017166137695
    6. '_s' → logprob: -16.000017166137695
    7. '_SELF' → logprob: -16.875017166137695
    8. '_
' → logprob: -17.250017166137695
    9. 'Self' → logprob: -17.625017166137695
    10. '_sel' → logprob: -19.000017166137695

Token 157: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.029761260375380516
    2. '<' → logprob: -3.52976131439209
    3. ' ' → logprob: -11.52976131439209
    4. '()<' → logprob: -16.529760360717773
    5. '<|end|>' → logprob: -16.529760360717773
    6. ' >' → logprob: -16.779760360717773
    7. '[' → logprob: -16.779760360717773
    8. ' ' → logprob: -16.779760360717773
    9. ' <
' → logprob: -16.904760360717773
    10. '<size' → logprob: -17.029760360717773

Token 158: ' dl' (ID: 28802)
  Prédit: ' dl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dl' → logprob: -0.12697450816631317
    2. 'dl' → logprob: -2.126974582672119
    3. '_dl' → logprob: -10.001974105834961
    4. '(dl' → logprob: -14.626974105834961
    5. '_' → logprob: -15.251974105834961
    6. ' ' → logprob: -15.626974105834961
    7. ' ' → logprob: -15.751974105834961
    8. ' _' → logprob: -16.37697410583496
    9. 'dll' → logprob: -18.25197410583496
    10. ' Dl' → logprob: -18.87697410583496

Token 159: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.0009132515988312662
    2. 'other' → logprob: -7.000913143157959
    3. '_self' → logprob: -13.625913619995117
    4. '_' → logprob: -15.375913619995117
    5. 'Other' → logprob: -15.625913619995117
    6. '_OTHER' → logprob: -16.125913619995117
    7. '_o' → logprob: -17.000913619995117
    8. 'oth' → logprob: -17.125913619995117
    9. ' other' → logprob: -17.250913619995117
    10. '   ' → logprob: -17.750913619995117

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03471098467707634
    2. '
' → logprob: -3.4097108840942383
    3. 'return' → logprob: -7.284710884094238
    4. '        
' → logprob: -8.534710884094238
    5. ' return' → logprob: -9.284710884094238
    6. 'else' → logprob: -10.409710884094238
    7. ' else' → logprob: -10.534710884094238
    8. '  
' → logprob: -11.909710884094238
    9. '        ' → logprob: -12.034710884094238
    10. '
' → logprob: -12.284710884094238

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010822329204529524
    2. 'return' → logprob: -7.376082420349121
    3. '
' → logprob: -8.126082420349121
    4. '        
' → logprob: -9.376082420349121
    5. ' return' → logprob: -9.626082420349121
    6. '        ' → logprob: -13.126082420349121
    7. 'else' → logprob: -13.376082420349121
    8. '      ' → logprob: -14.251082420349121
    9. '```' → logprob: -14.251082420349121
    10. 'if' → logprob: -14.751082420349121

Token 162: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07082762569189072
    2. 'if' → logprob: -3.1958277225494385
    3. '       ' → logprob: -3.9458277225494385
    4. ' return' → logprob: -4.945827484130859
    5. ' if' → logprob: -7.445827484130859
    6. '#' (adapté à ' #') → logprob: -8.07082748413086
    7. '
' → logprob: -9.94582748413086
    8. '        
' → logprob: -10.94582748413086
    9. 'else' → logprob: -11.57082748413086
    10. 'ret' → logprob: -12.19582748413086

Token 163: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0977320745587349
    2. 'return' → logprob: -2.7227320671081543
    3. '#' → logprob: -3.7227320671081543
    4. '       ' → logprob: -6.347732067108154
    5. ' if' → logprob: -6.972732067108154
    6. ' return' → logprob: -8.472732543945312
    7. '   ' → logprob: -8.847732543945312
    8. 'width' → logprob: -9.972732543945312
    9. 'If' → logprob: -10.097732543945312
    10. 'else' → logprob: -10.347732543945312

Token 164: ' diagon' (ID: 146014)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6335524916648865
    2. ' self' → logprob: -0.7585524916648865
    3. ' not' → logprob: -7.508552551269531
    4. 'not' → logprob: -9.383552551269531
    5. '       ' → logprob: -9.508552551269531
    6. '
' → logprob: -9.758552551269531
    7. '(self' → logprob: -9.883552551269531
    8. '           ' → logprob: -10.633552551269531
    9. ' (' → logprob: -11.008552551269531
    10. '   ' → logprob: -11.133552551269531

Token 165: 'als' (ID: 1288)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.10688738524913788
    2. 'onal' → logprob: -2.4818873405456543
    3. '       ' → logprob: -4.356887340545654
    4. 'nal' → logprob: -6.106887340545654
    5. 'agonal' → logprob: -6.231887340545654
    6. 'ogonal' → logprob: -8.606887817382812
    7. '           ' → logprob: -9.106887817382812
    8. 'length' → logprob: -9.106887817382812
    9. '   ' → logprob: -9.231887817382812
    10. 'ional' → logprob: -9.606887817382812

Token 166: ' are' (ID: 553)
  Prédit: ' lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lengths' → logprob: -0.6577939391136169
    2. ' are' → logprob: -1.0327939987182617
    3. 'length' → logprob: -2.9077939987182617
    4. 'are' → logprob: -3.0327939987182617
    5. ' have' → logprob: -4.907793998718262
    6. '_lengths' → logprob: -5.157793998718262
    7. '_are' → logprob: -6.032793998718262
    8. ' equal' → logprob: -6.532793998718262
    9. ' length' → logprob: -6.532793998718262
    10. 'equal' → logprob: -6.657793998718262

Token 167: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.1343226134777069
    2. ' equal' → logprob: -2.1343226432800293
    3. 'the' → logprob: -5.009322643280029
    4. ' the' → logprob: -7.634322643280029
    5. '_equal' → logprob: -9.259322166442871
    6. 'equ' → logprob: -9.884322166442871
    7. ' ' → logprob: -11.009322166442871
    8. 'same' → logprob: -11.759322166442871
    9. 'Equal' → logprob: -12.259322166442871
    10. 'not' → logprob: -12.384322166442871

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011346422135829926
    2. '       ' → logprob: -4.636346340179443
    3. ':' → logprob: -7.011346340179443
    4. ' return' → logprob: -8.136346817016602
    5. ',
' → logprob: -9.136346817016602
    6. ':return' → logprob: -9.261346817016602
    7. ':
' → logprob: -9.761346817016602
    8. ' ,' → logprob: -9.761346817016602
    9. ' and' → logprob: -10.636346817016602
    10. 'return' → logprob: -10.886346817016602

Token 169: ' compare' (ID: 12221)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5829613208770752
    2. 'return' → logprob: -0.8329613208770752
    3. ' if' → logprob: -5.582961082458496
    4. 'if' → logprob: -5.957961082458496
    5. '       ' → logprob: -7.707961082458496
    6. '           ' → logprob: -8.582961082458496
    7. '        ' → logprob: -11.957961082458496
    8. '   ' → logprob: -13.707961082458496
    9. 'self' → logprob: -13.707961082458496
    10. '#' → logprob: -14.207961082458496

Token 170: ' by' (ID: 656)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07734506577253342
    2. ' self' → logprob: -2.952345132827759
    3. ' by' → logprob: -4.57734489440918
    4. '(self' → logprob: -4.57734489440918
    5. 'by' → logprob: -7.20234489440918
    6. '       ' → logprob: -7.32734489440918
    7. '           ' → logprob: -8.70234489440918
    8. '   ' → logprob: -10.45234489440918
    9. '        ' → logprob: -10.70234489440918
    10. '
' → logprob: -12.20234489440918

Token 171: ' height' (ID: 4679)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07936416566371918
    2. ' self' → logprob: -2.579364061355591
    3. '           ' → logprob: -8.079363822937012
    4. '       ' → logprob: -9.329363822937012
    5. '   ' → logprob: -10.579363822937012
    6. 'height' → logprob: -11.454363822937012
    7. '
' → logprob: -11.579363822937012
    8. '        ' → logprob: -11.829363822937012
    9. '(self' → logprob: -12.329363822937012
    10. 'width' → logprob: -12.329363822937012

Token 172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04766169935464859
    2. '
' → logprob: -3.797661781311035
    3. ' return' → logprob: -4.547661781311035
    4. 'return' → logprob: -4.922661781311035
    5. '<|end|>' → logprob: -5.672661781311035
    6. '        
' → logprob: -6.672661781311035
    7. '        ' → logprob: -7.797661781311035
    8. '   ' → logprob: -8.422661781311035
    9. '    
' → logprob: -8.797661781311035
    10. '           ' → logprob: -8.797661781311035

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018808448687195778
    2. '
' → logprob: -4.268808364868164
    3. 'return' → logprob: -5.518808364868164
    4. ' return' → logprob: -7.518808364868164
    5. '        
' → logprob: -10.143808364868164
    6. '  
' → logprob: -11.393808364868164
    7. '<|end|>' → logprob: -12.143808364868164
    8. '   ' → logprob: -12.268808364868164
    9. ' 
' → logprob: -12.518808364868164
    10. '
' → logprob: -12.643808364868164

Token 174: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05912044271826744
    2. '       ' → logprob: -3.0591204166412354
    3. ' return' → logprob: -4.5591206550598145
    4. '	return' → logprob: -12.434120178222656
    5. '   ' → logprob: -14.059120178222656
    6. '```' → logprob: -14.684120178222656
    7. '
' → logprob: -14.809120178222656
    8. '        
' → logprob: -14.934120178222656
    9. ':return' → logprob: -15.809120178222656
    10. 'if' → logprob: -15.934120178222656

Token 175: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.313264399766922
    2. 'self' → logprob: -1.3132643699645996
    3. '(self' → logprob: -13.688264846801758
    4. '	self' → logprob: -14.313264846801758
    5. ' ' → logprob: -15.313264846801758
    6. '_self' → logprob: -15.438264846801758
    7. 'Self' → logprob: -15.813264846801758
    8. '       ' → logprob: -16.688264846801758
    9. ' ' → logprob: -16.688264846801758
    10. '[self' → logprob: -16.813264846801758

Token 176: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.25000286102295
    3. ' .' → logprob: -14.50000286102295
    4. '.he' → logprob: -14.75000286102295
    5. '.width' → logprob: -14.87500286102295
    6. '.health' → logprob: -17.875003814697266
    7. '.alt' → logprob: -18.250003814697266
    8. '.Height' → logprob: -18.625003814697266
    9. '.h' → logprob: -18.875003814697266
    10. '.ht' → logprob: -18.875003814697266

Token 177: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.003207538742572069
    2. '<' → logprob: -5.753207683563232
    3. ' ' → logprob: -10.503207206726074
    4. ' >' → logprob: -13.128207206726074
    5. '  ' → logprob: -16.50320816040039
    6. ' ' → logprob: -16.87820816040039
    7. '   ' → logprob: -17.00320816040039
    8. '>' → logprob: -17.00320816040039
    9. '<int' → logprob: -17.62820816040039
    10. ')' → logprob: -17.87820816040039

Token 178: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.02975083328783512
    2. ' other' → logprob: -3.5297508239746094
    3. '(other' → logprob: -15.65475082397461
    4. '.other' → logprob: -16.15475082397461
    5. 'Other' → logprob: -16.77975082397461
    6. '_other' → logprob: -17.02975082397461
    7. 'self' → logprob: -18.90475082397461
    8. 'othe' → logprob: -19.27975082397461
    9. '   ' → logprob: -19.77975082397461
    10. '
' → logprob: -20.15475082397461

Token 179: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0004703530576080084
    2. '.' → logprob: -7.750470161437988
    3. '.width' → logprob: -10.375470161437988
    4. 'height' → logprob: -12.250470161437988
    5. ' .' → logprob: -12.750470161437988
    6. '.other' → logprob: -15.000470161437988
    7. '.he' → logprob: -15.000470161437988
    8. '.
' → logprob: -16.750471115112305
    9. '.weight' → logprob: -17.625471115112305
    10. '.health' → logprob: -17.625471115112305

Token 180: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005131999962031841
    2. '   ' → logprob: -5.63013219833374
    3. ' def' → logprob: -6.75513219833374
    4. '<|end|>' → logprob: -8.505131721496582
    5. '#' → logprob: -10.255131721496582
    6. '	def' → logprob: -10.380131721496582
    7. ' ' → logprob: -10.630131721496582
    8. 'class' → logprob: -10.755131721496582
    9. ')' → logprob: -11.755131721496582
    10. '@' → logprob: -11.755131721496582

Token 183: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2629505395889282
    2. ' area' → logprob: -2.1379504203796387
    3. '__' → logprob: -3.0129504203796387
    4. ' width' → logprob: -3.1379504203796387
    5. ' def' → logprob: -4.637950420379639
    6. 'area' → logprob: -5.387950420379639
    7. 'width' → logprob: -5.762950420379639
    8. 'def' → logprob: -6.887950420379639
    9. ' ' → logprob: -7.137950420379639
    10. '_area' → logprob: -7.387950420379639

Token 184: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0023371162824332714
    2. 'repr' → logprob: -6.1273369789123535
    3. 'gt' → logprob: -9.377337455749512
    4. 'str' → logprob: -10.252337455749512
    5. 'le' → logprob: -10.377337455749512
    6. 'hash' → logprob: -14.627337455749512
    7. 'init' → logprob: -15.627337455749512
    8. ' eq' → logprob: -16.502336502075195
    9. '_eq' → logprob: -16.627336502075195
    10. 'lt' → logprob: -16.877336502075195

Token 185: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12717890739440918
    2. '__(' → logprob: -2.127178907394409
    3. '__((' → logprob: -8.627179145812988
    4. '__(*' → logprob: -10.627179145812988
    5. '__.__' → logprob: -10.752179145812988
    6. '__(
' → logprob: -11.002179145812988
    7. '__('' → logprob: -12.377179145812988
    8. '___' → logprob: -13.002179145812988
    9. '__("' → logprob: -14.252179145812988
    10. '__[' → logprob: -14.627179145812988

Token 186: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018101456225849688
    2. ' self' → logprob: -8.625181198120117
    3. '(self' → logprob: -13.875181198120117
    4. ',' → logprob: -16.000181198120117
    5. '
' → logprob: -16.125181198120117
    6. '   ' → logprob: -16.250181198120117
    7. ')' → logprob: -16.375181198120117
    8. 's' → logprob: -17.375181198120117
    9. ' ' → logprob: -17.500181198120117
    10. '__(' → logprob: -17.500181198120117

Token 187: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1392154097557068
    2. '(self' → logprob: -2.2642154693603516
    3. '__' → logprob: -3.7642154693603516
    4. '__((' → logprob: -7.264215469360352
    5. ',' → logprob: -7.514215469360352
    6. '__(
' → logprob: -7.889215469360352
    7. '(' → logprob: -8.014215469360352
    8. 'self' → logprob: -8.139215469360352
    9. '__,' → logprob: -8.264215469360352
    10. '__('' → logprob: -8.264215469360352

Token 188: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.6936363577842712
    2. 'other' → logprob: -0.6936363577842712
    3. 'self' → logprob: -7.693636417388916
    4. ' self' → logprob: -10.318635940551758
    5. 'Other' → logprob: -15.693635940551758
    6. '(other' → logprob: -16.693635940551758
    7. ' ' → logprob: -17.318635940551758
    8. '_other' → logprob: -17.818635940551758
    9. '.other' → logprob: -18.818635940551758
    10. '   ' → logprob: -18.818635940551758

Token 189: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008792073465883732
    2. ')' → logprob: -5.508791923522949
    3. '):' → logprob: -5.508791923522949
    4. ' :' → logprob: -7.508791923522949
    5. ' ):' → logprob: -10.00879192352295
    6. ' )' → logprob: -10.50879192352295
    7. '):
' → logprob: -11.63379192352295
    8. ',' → logprob: -11.88379192352295
    9. ' ' → logprob: -12.13379192352295
    10. '   ' → logprob: -12.75879192352295

Token 190: ' object' (ID: 2817)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.39478448033332825
    2. ''' → logprob: -1.1447844505310059
    3. ' other' → logprob: -5.894784450531006
    4. ')' → logprob: -6.394784450531006
    5. ' ' → logprob: -6.769784450531006
    6. ' Integral' → logprob: -7.269784450531006
    7. 'other' → logprob: -7.519784450531006
    8. 'Integral' → logprob: -7.894784450531006
    9. ' ')' → logprob: -8.894784927368164
    10. ''autre' → logprob: -9.769784927368164

Token 191: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010425841173855588
    2. '):' → logprob: -9.500103950500488
    3. ' )' → logprob: -10.625103950500488
    4. '   ' → logprob: -13.500103950500488
    5. ')->' → logprob: -13.625103950500488
    6. ':' → logprob: -14.000103950500488
    7. '):
' → logprob: -14.250103950500488
    8. '')' → logprob: -14.375103950500488
    9. '`)' → logprob: -16.000104904174805
    10. '       ' → logprob: -16.125104904174805

Token 192: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.053305961191654205
    2. ':
' → logprob: -4.1783061027526855
    3. ' ->' → logprob: -4.3033061027526855
    4. '->' → logprob: -4.8033061027526855
    5. ')' → logprob: -5.0533061027526855
    6. ')->' → logprob: -6.1783061027526855
    7. '):
' → logprob: -6.3033061027526855
    8. '   ' → logprob: -6.3033061027526855
    9. '       ' → logprob: -6.4283061027526855
    10. '):' → logprob: -7.3033061027526855

Token 193: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.07891016453504562
    2. ' bool' → logprob: -2.5789101123809814
    3. ' ' → logprob: -11.953909873962402
    4. '   ' → logprob: -12.203909873962402
    5. '	bool' → logprob: -12.578909873962402
    6. ''' → logprob: -12.828909873962402
    7. '  ' → logprob: -13.828909873962402
    8. '<bool' → logprob: -14.953909873962402
    9. ' '' → logprob: -15.328909873962402
    10. '    ' → logprob: -15.578909873962402

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19893775880336761
    2. '(self' → logprob: -2.0739376544952393
    3. '       ' → logprob: -3.5739376544952393
    4. ':
' → logprob: -4.198937892913818
    5. '   ' → logprob: -5.698937892913818
    6. 'self' → logprob: -5.698937892913818
    7. ' ->' → logprob: -6.948937892913818
    8. '<|end|>' → logprob: -7.073937892913818
    9. ',' → logprob: -7.323937892913818
    10. ')' → logprob: -7.823937892913818

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5373125076293945
    2. ' if' → logprob: -0.9123125076293945
    3. 'if' → logprob: -4.6623125076293945
    4. '   ' → logprob: -6.1623125076293945
    5. ' isinstance' → logprob: -6.2873125076293945
    6. '    ' → logprob: -8.537312507629395
    7. ' self' → logprob: -8.662312507629395
    8. '      ' → logprob: -10.037312507629395
    9. 'self' → logprob: -10.037312507629395
    10. ' return' → logprob: -10.162312507629395

Token 196: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1604790985584259
    2. ' if' → logprob: -1.9104790687561035
    3. '       ' → logprob: -8.285479545593262
    4. '   ' → logprob: -13.160479545593262
    5. 'is' → logprob: -15.410479545593262
    6. 'return' → logprob: -15.410479545593262
    7. ' isinstance' → logprob: -15.410479545593262
    8. '    ' → logprob: -16.410478591918945
    9. '	if' → logprob: -16.785478591918945
    10. 'self' → logprob: -17.410478591918945

Token 197: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01824687235057354
    2. 'not' → logprob: -4.018246650695801
    3. ' isinstance' → logprob: -9.2682466506958
    4. ' self' → logprob: -14.0182466506958
    5. 'self' → logprob: -14.3932466506958
    6. 'is' → logprob: -14.8932466506958
    7. '	not' → logprob: -14.8932466506958
    8. '   ' → logprob: -15.2682466506958
    9. ' ' → logprob: -16.643247604370117
    10. '    ' → logprob: -16.643247604370117

Token 198: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0015024791937321424
    2. 'is' → logprob: -6.501502513885498
    3. ' hasattr' → logprob: -16.751502990722656
    4. ' is' → logprob: -17.501502990722656
    5. '(is' → logprob: -18.626502990722656
    6. '
' → logprob: -18.751502990722656
    7. '   ' → logprob: -19.251502990722656
    8. 'isa' → logprob: -20.626502990722656
    9. '    ' → logprob: -21.501502990722656
    10. ' ' → logprob: -21.626502990722656

Token 199: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.3663626305060461e-05
    2. 'other' → logprob: -11.25001335144043
    3. '(' → logprob: -14.50001335144043
    4. ' other' → logprob: -16.50001335144043
    5. 'Other' → logprob: -19.00001335144043
    6. '(self' → logprob: -20.12501335144043
    7. '.other' → logprob: -20.87501335144043
    8. '(
' → logprob: -20.87501335144043
    9. '_other' → logprob: -21.00001335144043
    10. ' (' → logprob: -21.50001335144043

Token 200: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0006022418383508921
    2. 'other' → logprob: -7.8756022453308105
    3. ',' → logprob: -8.500601768493652
    4. ' other' → logprob: -11.625601768493652
    5. '(' → logprob: -11.750601768493652
    6. ' (' → logprob: -13.625601768493652
    7. ')' → logprob: -15.250601768493652
    8. '(object' → logprob: -16.25060272216797
    9. ')(' → logprob: -16.50060272216797
    10. 'Other' → logprob: -16.62560272216797

Token 201: ' Integral' (ID: 121125)
  Prédit: 'Integral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integral' → logprob: -0.061970822513103485
    2. ' Integral' → logprob: -2.8119707107543945
    3. 'Integrated' → logprob: -13.311970710754395
    4. ' integral' → logprob: -14.311970710754395
    5. 'Integr' → logprob: -14.811970710754395
    6. 'self' → logprob: -14.936970710754395
    7. ' Integrated' → logprob: -16.81197166442871
    8. '       ' → logprob: -17.06197166442871
    9. '   ' → logprob: -17.18697166442871
    10. ' ' → logprob: -17.18697166442871

Token 202: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: 0.0
    2. ' Rectangle' → logprob: -16.875
    3. 'Rect' → logprob: -18.125
    4. '_rectangle' → logprob: -18.625
    5. '.Rectangle' → logprob: -19.5
    6. '
' → logprob: -19.5
    7. '   ' → logprob: -19.875
    8. '       ' → logprob: -20.125
    9. 'rectangle' → logprob: -20.25
    10. 'Integral' → logprob: -21.25

Token 203: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16028311848640442
    2. '):' → logprob: -1.910283088684082
    3. ')' → logprob: -10.035283088684082
    4. '):
' → logprob: -11.660283088684082
    5. '):

' → logprob: -12.535283088684082
    6. '   ' → logprob: -14.035283088684082
    7. ' ):
' → logprob: -14.285283088684082
    8. ' ):' → logprob: -14.660283088684082
    9. ':
' → logprob: -15.035283088684082
    10. ':' → logprob: -15.035283088684082

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012037218548357487
    2. ' return' → logprob: -5.01203727722168
    3. 'return' → logprob: -5.26203727722168
    4. '
' → logprob: -10.26203727722168
    5. 'True' → logprob: -10.76203727722168
    6. '               ' → logprob: -11.13703727722168
    7. '            ' → logprob: -11.26203727722168
    8. ' True' → logprob: -11.63703727722168
    9. 'False' → logprob: -11.76203727722168
    10. '            
' → logprob: -11.76203727722168

Token 205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23262903094291687
    2. ' return' → logprob: -1.7326290607452393
    3. '           ' → logprob: -3.4826290607452393
    4. '
' → logprob: -13.23262882232666
    5. ':return' → logprob: -13.23262882232666
    6. '       ' → logprob: -14.35762882232666
    7. '	return' → logprob: -14.48262882232666
    8. '   ' → logprob: -14.60762882232666
    9. '{return' → logprob: -14.60762882232666
    10. '               ' → logprob: -14.98262882232666

Token 206: ' Not' (ID: 4037)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004589094896800816
    2. ' False' → logprob: -8.000458717346191
    3. 'Not' → logprob: -9.000458717346191
    4. ' Not' → logprob: -15.875458717346191
    5. '   ' → logprob: -17.625459671020508
    6. '(False' → logprob: -18.500459671020508
    7. '_false' → logprob: -19.750459671020508
    8. 'false' → logprob: -20.250459671020508
    9. '    ' → logprob: -20.375459671020508
    10. '=False' → logprob: -20.625459671020508

Token 207: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.0008177272975444794
    2. 'implemented' → logprob: -8.25081729888916
    3. '   ' → logprob: -8.50081729888916
    4. '       ' → logprob: -8.75081729888916
    5. 'True' → logprob: -9.50081729888916
    6. 'None' → logprob: -10.25081729888916
    7. 'False' → logprob: -10.50081729888916
    8. 'Impl' → logprob: -11.75081729888916
    9. 'Integral' → logprob: -11.75081729888916
    10. '    ' → logprob: -11.87581729888916

Token 208: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06221269443631172
    2. '
' → logprob: -2.8122127056121826
    3. 'return' → logprob: -8.687212944030762
    4. '        
' → logprob: -10.187212944030762
    5. ' return' → logprob: -11.062212944030762
    6. '<|end|>' → logprob: -11.312212944030762
    7. '  
' → logprob: -12.812212944030762
    8. '   ' → logprob: -13.312212944030762
    9. '
' → logprob: -13.937212944030762
    10. '    
' → logprob: -14.187212944030762

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005897291121073067
    2. '
' → logprob: -8.125589370727539
    3. 'return' → logprob: -8.625589370727539
    4. ' return' → logprob: -9.500589370727539
    5. '        
' → logprob: -10.625589370727539
    6. '   ' → logprob: -11.500589370727539
    7. '  
' → logprob: -13.750589370727539
    8. '    
' → logprob: -14.000589370727539
    9. '```' → logprob: -14.000589370727539
    10. '<|end|>' → logprob: -14.125589370727539

Token 210: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014604850672185421
    2. '       ' → logprob: -4.2646050453186035
    3. ' return' → logprob: -7.7646050453186035
    4. '   ' → logprob: -11.014604568481445
    5. '	return' → logprob: -15.014604568481445
    6. ' ' → logprob: -17.889604568481445
    7. '      ' → logprob: -18.264604568481445
    8. '
' → logprob: -18.389604568481445
    9. '```' → logprob: -18.639604568481445
    10. '     ' → logprob: -19.014604568481445

Token 211: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31388261914253235
    2. 'self' → logprob: -1.31388258934021
    3. '(self' → logprob: -7.813882827758789
    4. ' (' → logprob: -8.438882827758789
    5. '(' → logprob: -15.938882827758789
    6. '   ' → logprob: -16.68888282775879
    7. '	self' → logprob: -16.93888282775879
    8. '(
' → logprob: -17.06388282775879
    9. ' ' → logprob: -17.31388282775879
    10. '       ' → logprob: -17.56388282775879

Token 212: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -1.3782830137643032e-05
    2. '.width' → logprob: -11.50001335144043
    3. '.' → logprob: -12.75001335144043
    4. 'height' → logprob: -14.75001335144043
    5. '.he' → logprob: -15.87501335144043
    6. ' .' → logprob: -16.75001335144043
    7. '.is' → logprob: -18.00001335144043
    8. '.Height' → logprob: -18.50001335144043
    9. '.health' → logprob: -19.25001335144043
    10. '	height' → logprob: -19.37501335144043

Token 213: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01416398212313652
    2. '==' → logprob: -4.264163970947266
    3. '=' → logprob: -15.639163970947266
    4. ' ' → logprob: -16.389163970947266
    5. '==
' → logprob: -16.639163970947266
    6. ' =' → logprob: -17.389163970947266
    7. ' ==
' → logprob: -17.389163970947266
    8. '        ' → logprob: -17.639163970947266
    9. ')==' → logprob: -17.764163970947266
    10. '()==' → logprob: -18.514163970947266

Token 214: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.3132617771625519
    2. 'other' → logprob: -1.3132617473602295
    3. '(other' → logprob: -16.938261032104492
    4. '_other' → logprob: -17.688261032104492
    5. '.other' → logprob: -17.938261032104492
    6. 'Other' → logprob: -18.063261032104492
    7. 'self' → logprob: -19.313261032104492
    8. '       ' → logprob: -20.688261032104492
    9. '   ' → logprob: -21.563261032104492
    10. ' self' → logprob: -21.688261032104492

Token 215: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -4.9186317482963204e-05
    2. '.' → logprob: -10.000049591064453
    3. '.width' → logprob: -12.750049591064453
    4. 'height' → logprob: -14.625049591064453
    5. ' .' → logprob: -14.750049591064453
    6. '   ' → logprob: -17.000049591064453
    7. '.
' → logprob: -17.875049591064453
    8. '.health' → logprob: -18.625049591064453
    9. '.he' → logprob: -18.625049591064453
    10. '	height' → logprob: -19.125049591064453

Token 216: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011116556823253632
    2. 'and' → logprob: -4.5111165046691895
    3. '        ' → logprob: -10.261116981506348
    4. '       ' → logprob: -10.386116981506348
    5. ' ' → logprob: -14.011116981506348
    6. '    ' → logprob: -14.136116981506348
    7. '<|end|>' → logprob: -14.886116981506348
    8. '      ' → logprob: -15.386116981506348
    9. '   ' → logprob: -15.511116981506348
    10. '           ' → logprob: -15.636116981506348

Token 217: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.00861468818038702
    2. 'self' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.758615493774414
    4. '(self' → logprob: -17.133615493774414
    5. '	self' → logprob: -17.258615493774414
    6. '        ' → logprob: -18.258615493774414
    7. '       ' → logprob: -18.633615493774414
    8. ' ' → logprob: -18.758615493774414
    9. ' other' → logprob: -19.133615493774414
    10. 'Self' → logprob: -20.008615493774414

Token 218: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0005557744298130274
    2. '.' → logprob: -7.500555992126465
    3. ' .' → logprob: -13.125555992126465
    4. '.height' → logprob: -14.500555992126465
    5. '.w' → logprob: -16.75055503845215
    6. 'width' → logprob: -17.25055503845215
    7. '.Width' → logprob: -17.75055503845215
    8. '.weight' → logprob: -17.87555503845215
    9. '.code' → logprob: -18.00055503845215
    10. '.user' → logprob: -18.37555503845215

Token 219: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10020849853754044
    2. '==' → logprob: -2.3502085208892822
    3. '==
' → logprob: -14.475208282470703
    4. '=' → logprob: -15.100208282470703
    5. '===' → logprob: -15.350208282470703
    6. ')==' → logprob: -15.475208282470703
    7. '<|end|>' → logprob: -15.850208282470703
    8. ' ==
' → logprob: -15.975208282470703
    9. ']==' → logprob: -16.475208282470703
    10. '[' → logprob: -16.725208282470703

Token 220: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.011047814972698689
    2. ' other' → logprob: -4.511047840118408
    3. '(other' → logprob: -19.26104736328125
    4. 'Other' → logprob: -20.26104736328125
    5. '.other' → logprob: -20.51104736328125
    6. 'self' → logprob: -21.76104736328125
    7. '_other' → logprob: -21.76104736328125
    8. '   ' → logprob: -21.76104736328125
    9. '       ' → logprob: -23.01104736328125
    10. '
' → logprob: -24.01104736328125

Token 221: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -3.941161776310764e-05
    2. '.' → logprob: -10.250039100646973
    3. ' .' → logprob: -13.250039100646973
    4. 'width' → logprob: -13.625039100646973
    5. '.height' → logprob: -14.000039100646973
    6. '.size' → logprob: -15.625039100646973
    7. '.w' → logprob: -17.75004005432129
    8. '.length' → logprob: -18.12504005432129
    9. '.right' → logprob: -18.75004005432129
    10. '.Width' → logprob: -18.87504005432129

Token 222: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06627921760082245
    2. '<|end|>' → logprob: -2.941279172897339
    3. '   ' → logprob: -4.691279411315918
    4. '    
' → logprob: -7.066279411315918
    5. '

' → logprob: -7.191279411315918
    6. '<|end|>' → logprob: -8.316279411315918
    7. 'def' → logprob: -8.941279411315918
    8. 'newline' → logprob: -10.191279411315918
    9. '  
' → logprob: -10.566279411315918
    10. '```' → logprob: -10.691279411315918

Token 223: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10672519356012344
    2. '   ' → logprob: -2.7317252159118652
    3. '<|end|>' → logprob: -3.7317252159118652
    4. 'def' → logprob: -5.106725215911865
    5. '    
' → logprob: -6.106725215911865
    6. '

' → logprob: -7.356725215911865
    7. '<|end|>' → logprob: -7.356725215911865
    8. 'class' → logprob: -7.356725215911865
    9. '```' → logprob: -7.481725215911865
    10. '[' → logprob: -7.981725215911865

Token 224: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014951115474104881
    2. '   ' → logprob: -4.264951229095459
    3. '@' → logprob: -7.764951229095459
    4. 'from' → logprob: -8.3899507522583
    5. 'import' → logprob: -10.0149507522583
    6. ' def' → logprob: -10.7649507522583
    7. '#' → logprob: -10.7649507522583
    8. '@dat' → logprob: -10.8899507522583
    9. '```' → logprob: -12.2649507522583
    10. 'class' → logprob: -12.5149507522583

Token 225: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03234628960490227
    2. ' __' → logprob: -4.032346248626709
    3. 'area' → logprob: -4.407346248626709
    4. 'repr' → logprob: -7.532346248626709
    5. 'def' → logprob: -7.657346248626709
    6. 'per' → logprob: -7.907346248626709
    7. ' area' → logprob: -8.532346725463867
    8. 'is' → logprob: -9.032346725463867
    9. '_area' → logprob: -9.657346725463867
    10. 'get' → logprob: -10.657346725463867

Token 226: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.39209064841270447
    2. 'hash' → logprob: -1.1420906782150269
    3. 'le' → logprob: -5.642090797424316
    4. 'str' → logprob: -6.517090797424316
    5. 'gt' → logprob: -8.642090797424316
    6. 'ge' → logprob: -12.892090797424316
    7. 'ne' → logprob: -13.767090797424316
    8. 'init' → logprob: -13.892090797424316
    9. 'add' → logprob: -14.267090797424316
    10. 'rep' → logprob: -14.767090797424316

Token 227: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004276650492101908
    2. '__' → logprob: -5.504276752471924
    3. '__(
' → logprob: -8.754276275634766
    4. '__('' → logprob: -10.504276275634766
    5. '(self' → logprob: -12.504276275634766
    6. '__((' → logprob: -12.629276275634766
    7. '__("' → logprob: -12.754276275634766
    8. '_' → logprob: -14.129276275634766
    9. '___' → logprob: -14.129276275634766
    10. '__[' → logprob: -14.129276275634766

Token 228: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ')' → logprob: -11.250017166137695
    3. ' self' → logprob: -13.250017166137695
    4. '   ' → logprob: -13.750017166137695
    5. '
' → logprob: -14.875017166137695
    6. '(self' → logprob: -15.750017166137695
    7. '       ' → logprob: -16.250017166137695
    8. ' ' → logprob: -16.375017166137695
    9. '  ' → logprob: -16.875017166137695
    10. 's' → logprob: -17.000017166137695

Token 229: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.42987293004989624
    2. '__' → logprob: -1.429872989654541
    3. '(self' → logprob: -2.929872989654541
    4. 'self' → logprob: -3.179872989654541
    5. '__)' → logprob: -4.929872989654541
    6. '__(
' → logprob: -5.179872989654541
    7. '__('' → logprob: -6.804872989654541
    8. ' self' → logprob: -8.554872512817383
    9. '__((' → logprob: -9.054872512817383
    10. '__,' → logprob: -9.429872512817383

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.643152740551159e-05
    2. 'return' → logprob: -11.125036239624023
    3. ' return' → logprob: -11.625036239624023
    4. 'self' → logprob: -11.875036239624023
    5. '(self' → logprob: -12.875036239624023
    6. ' self' → logprob: -13.250036239624023
    7. '           ' → logprob: -14.375036239624023
    8. '   ' → logprob: -15.000036239624023
    9. '      ' → logprob: -15.000036239624023
    10. '{return' → logprob: -16.750036239624023

Token 231: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0117900799959898
    2. '       ' → logprob: -5.1367902755737305
    3. ' return' → logprob: -5.2617902755737305
    4. 'Integral' → logprob: -7.5117902755737305
    5. '   ' → logprob: -9.38679027557373
    6. ' Integral' → logprob: -11.26179027557373
    7. 'Return' → logprob: -11.51179027557373
    8. '	return' → logprob: -13.38679027557373
    9. 'f' → logprob: -13.51179027557373
    10. '{return' → logprob: -14.01179027557373

Token 232: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10024948418140411
    2. ' f' → logprob: -2.3502495288848877
    3. ' Integral' → logprob: -10.475249290466309
    4. 'Integral' → logprob: -11.225249290466309
    5. '   ' → logprob: -14.100249290466309
    6. ' ' → logprob: -15.600249290466309
    7. '	f' → logprob: -16.100250244140625
    8. '(f' → logprob: -16.100250244140625
    9. '       ' → logprob: -16.350250244140625
    10. 'F' → logprob: -16.850250244140625

Token 233: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05069626122713089
    2. 'Integral' → logprob: -3.05069637298584
    3. '"' → logprob: -6.80069637298584
    4. ' Integral' → logprob: -7.67569637298584
    5. '(f' → logprob: -8.30069637298584
    6. ' f' → logprob: -8.42569637298584
    7. '(' → logprob: -10.42569637298584
    8. ''' → logprob: -11.30069637298584
    9. 'Intr' → logprob: -12.55069637298584
    10. ''f' → logprob: -12.92569637298584

Token 234: 'Integral' (ID: 102763)
  Prédit: 'Integral'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integral' → logprob: -1.0802738870552275e-05
    2. '{' → logprob: -12.00001049041748
    3. ' Integral' → logprob: -12.87501049041748
    4. ''' → logprob: -14.12501049041748
    5. '"' → logprob: -14.75001049041748
    6. 'Integrated' → logprob: -14.75001049041748
    7. 'Intrinsic' → logprob: -16.250011444091797
    8. '{'' → logprob: -16.375011444091797
    9. 'Integr' → logprob: -16.875011444091797
    10. 'Integrity' → logprob: -17.125011444091797

Token 235: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -1.9361264946837764e-07
    2. 'Rect' → logprob: -16.125
    3. ' Rectangle' → logprob: -17.125
    4. '.Rectangle' → logprob: -19.125
    5. '_rectangle' → logprob: -19.5
    6. 'rectangle' → logprob: -19.875
    7. '(Rect' → logprob: -20.125
    8. '```' → logprob: -20.875
    9. '   ' → logprob: -21.0
    10. '
' → logprob: -21.375

Token 236: '(h' (ID: 8120)
  Prédit: '(height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(height' → logprob: -0.1894424855709076
    2. '({' → logprob: -1.93944251537323
    3. '(' → logprob: -3.6894423961639404
    4. '{' → logprob: -6.0644426345825195
    5. '(self' → logprob: -6.5644426345825195
    6. '(h' → logprob: -10.06444263458252
    7. 'height' → logprob: -10.81444263458252
    8. '(
' → logprob: -11.93944263458252
    9. '("{' → logprob: -13.31444263458252
    10. '({
' → logprob: -13.81444263458252

Token 237: '={' (ID: 1693)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.0027355665806680918
    2. '={' → logprob: -6.002735614776611
    3. 'e' → logprob: -8.502735137939453
    4. '=' → logprob: -10.502735137939453
    5. '=e' → logprob: -11.627735137939453
    6. '{' → logprob: -12.502735137939453
    7. 'eig' → logprob: -12.752735137939453
    8. '=self' → logprob: -12.877735137939453
    9. 'ight' → logprob: -13.002735137939453
    10. ' eight' → logprob: -13.252735137939453

Token 238: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018151583150029182
    2. '{' → logprob: -4.018151760101318
    3. ' self' → logprob: -13.76815128326416
    4. 'elf' → logprob: -15.14315128326416
    5. '(self' → logprob: -16.768152236938477
    6. '       ' → logprob: -16.768152236938477
    7. '{
' → logprob: -17.143152236938477
    8. '   ' → logprob: -17.643152236938477
    9. '	self' → logprob: -17.643152236938477
    10. '
' → logprob: -18.018152236938477

Token 239: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -5.407366916188039e-05
    2. 'height' → logprob: -10.250054359436035
    3. '.' → logprob: -12.000054359436035
    4. 'ight' → logprob: -12.125054359436035
    5. 'self' → logprob: -12.875054359436035
    6. '.he' → logprob: -13.000054359436035
    7. '.width' → logprob: -14.250054359436035
    8. 'e' → logprob: -14.500054359436035
    9. 'eight' → logprob: -15.000054359436035
    10. ' .' → logprob: -15.625054359436035

Token 240: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8789383830153383e-05
    2. ',
' → logprob: -11.125019073486328
    3. ' ,' → logprob: -12.875019073486328
    4. '",' → logprob: -14.625019073486328
    5. '       ' → logprob: -15.000019073486328
    6. '‌,' → logprob: -15.375019073486328
    7. ',\
' → logprob: -16.250019073486328
    8. ',

' → logprob: -16.375019073486328
    9. ',width' → logprob: -16.750019073486328
    10. ',
' → logprob: -16.750019073486328

Token 241: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.31360650062561035
    2. ' w' → logprob: -1.3136065006256104
    3. 'width' → logprob: -8.063606262207031
    4. ' width' → logprob: -10.438606262207031
    5. ' ' → logprob: -16.18860626220703
    6. 'wd' → logprob: -16.31360626220703
    7. '   ' → logprob: -16.31360626220703
    8. '       ' → logprob: -16.93860626220703
    9. '    ' → logprob: -17.43860626220703
    10. 'f' → logprob: -17.43860626220703

Token 242: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.00782262533903122
    2. '{' → logprob: -4.882822513580322
    3. '=' → logprob: -8.75782299041748
    4. '=self' → logprob: -10.00782299041748
    5. 'self' → logprob: -12.75782299041748
    6. '={
' → logprob: -12.88282299041748
    7. ' ={' → logprob: -13.13282299041748
    8. '=
' → logprob: -13.63282299041748
    9. ']={' → logprob: -13.75782299041748
    10. '=f' → logprob: -13.88282299041748

Token 243: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004528374411165714
    2. '{' → logprob: -7.750452995300293
    3. ' self' → logprob: -10.750452995300293
    4. 'width' → logprob: -15.500452995300293
    5. ' ' → logprob: -16.375452041625977
    6. '}' → logprob: -16.750452041625977
    7. '   ' → logprob: -16.750452041625977
    8. '{
' → logprob: -17.375452041625977
    9. '	self' → logprob: -17.500452041625977
    10. '       ' → logprob: -17.500452041625977

Token 244: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -2.3438327843905427e-05
    2. 'width' → logprob: -11.00002384185791
    3. '.' → logprob: -12.50002384185791
    4. '.height' → logprob: -13.00002384185791
    5. ' .' → logprob: -15.37502384185791
    6. '	width' → logprob: -15.87502384185791
    7. ' width' → logprob: -16.000022888183594
    8. '   ' → logprob: -16.625022888183594
    9. '.size' → logprob: -16.875022888183594
    10. '.w' → logprob: -17.250022888183594

Token 245: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006894393358379602
    2. ')"' → logprob: -5.006894588470459
    3. ')")' → logprob: -9.3818941116333
    4. ')">' → logprob: -10.1318941116333
    5. '})' → logprob: -11.0068941116333
    6. ')}' → logprob: -11.5068941116333
    7. ')`' → logprob: -11.6318941116333
    8. '}' → logprob: -11.6318941116333
    9. '}")' → logprob: -12.5068941116333
    10. '")' → logprob: -12.6318941116333

Token 246: '"


' (ID: 36470)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.040114209055900574
    2. 'class' → logprob: -3.540114164352417
    3. '   ' → logprob: -5.290114402770996
    4. '@' → logprob: -6.040114402770996
    5. '[' → logprob: -7.165114402770996
    6. '#' → logprob: -7.915114402770996
    7. ' def' → logprob: -8.165114402770996
    8. 'from' → logprob: -8.290114402770996
    9. 'd' → logprob: -8.415114402770996
    10. 'import' → logprob: -8.540114402770996

Token 248: ' Rectangle' (ID: 38728)
  Prédit: ' Integral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Integral' → logprob: -0.6046366691589355
    2. ' Square' → logprob: -1.9796366691589355
    3. 'Integral' → logprob: -1.9796366691589355
    4. ' Right' → logprob: -3.1046366691589355
    5. 'Square' → logprob: -3.2296366691589355
    6. ' Rectangle' → logprob: -3.3546366691589355
    7. ' P' → logprob: -4.1046366691589355
    8. 'Rectangle' → logprob: -4.7296366691589355
    9. 'Right' → logprob: -4.8546366691589355
    10. ' Perfect' → logprob: -4.8546366691589355

Token 249: 'Order' (ID: 4861)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03669397160410881
    2. ':
' → logprob: -3.536694049835205
    3. 'Area' → logprob: -5.786694049835205
    4. 'Integral' → logprob: -6.286694049835205
    5. '(' → logprob: -7.786694049835205
    6. 'Intersection' → logprob: -8.036693572998047
    7. 'List' → logprob: -8.411693572998047
    8. 'Set' → logprob: -8.911693572998047
    9. 'Integrator' → logprob: -9.036693572998047
    10. '(Rect' → logprob: -9.161693572998047

Token 250: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007554216776043177
    2. ':
' → logprob: -5.007554054260254
    3. 'ing' → logprob: -7.757554054260254
    4. 'ed' → logprob: -9.007554054260254
    5. 'Comparer' → logprob: -9.382554054260254
    6. 'er' → logprob: -10.007554054260254
    7. 'Comparator' → logprob: -10.132554054260254
    8. '(' → logprob: -10.257554054260254
    9. 'Sorter' → logprob: -10.882554054260254
    10. '(Enum' → logprob: -11.382554054260254

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06311044842004776
    2. ' def' → logprob: -2.9381103515625
    3. 'def' → logprob: -4.8131103515625
    4. '	def' → logprob: -10.5631103515625
    5. '    
' → logprob: -11.1881103515625
    6. '  ' → logprob: -12.1881103515625
    7. ' ' → logprob: -12.3131103515625
    8. '
' → logprob: -12.5631103515625
    9. '    ' → logprob: -12.5631103515625
    10. ':' → logprob: -12.8131103515625

Token 252: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07519929111003876
    2. ' def' → logprob: -2.8251993656158447
    3. '   ' → logprob: -4.450199127197266
    4. '@' → logprob: -6.825199127197266
    5. 'from' → logprob: -8.450199127197266
    6. ' @' → logprob: -9.325199127197266
    7. 'de' → logprob: -10.575199127197266
    8. ' ' → logprob: -10.700199127197266
    9. '  ' → logprob: -11.700199127197266
    10. 'class' → logprob: -12.200199127197266

Token 253: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0968913659453392
    2. ' def' → logprob: -3.096891403198242
    3. 'init' → logprob: -3.596891403198242
    4. '__' → logprob: -4.846891403198242
    5. ' init' → logprob: -4.846891403198242
    6. 'def' → logprob: -5.721891403198242
    7. '_init' → logprob: -8.221891403198242
    8. ' ' → logprob: -8.596891403198242
    9. 'staticmethod' → logprob: -9.596891403198242
    10. '  ' → logprob: -9.721891403198242

Token 254: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0006282062386162579
    2. 'lt' → logprob: -7.3756279945373535
    3. 'call' → logprob: -14.750628471374512
    4. 'gt' → logprob: -15.125628471374512
    5. 'iter' → logprob: -15.375628471374512
    6. ' init' → logprob: -15.625628471374512
    7. 'new' → logprob: -15.625628471374512
    8. 'eq' → logprob: -15.750628471374512
    9. 'int' → logprob: -16.625627517700195
    10. '```' → logprob: -16.750627517700195

Token 255: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007081442163325846
    2. '(self' → logprob: -7.750708103179932
    3. '__' → logprob: -8.25070858001709
    4. '__(
' → logprob: -11.37570858001709
    5. '_(' → logprob: -13.12570858001709
    6. '(' → logprob: -13.87570858001709
    7. ' (' → logprob: -14.50070858001709
    8. '__((' → logprob: -15.00070858001709
    9. 'self' → logprob: -15.12570858001709
    10. '   ' → logprob: -15.62570858001709

Token 256: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015014449309092015
    2. ' self' → logprob: -8.875149726867676
    3. '0' → logprob: -12.625149726867676
    4. '
' → logprob: -13.000149726867676
    5. '):
' → logprob: -13.250149726867676
    6. ')' → logprob: -13.500149726867676
    7. '   ' → logprob: -14.750149726867676
    8. '(self' → logprob: -15.125149726867676
    9. ',' → logprob: -15.375149726867676
    10. '       ' → logprob: -15.875149726867676

Token 257: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4206095337867737
    2. ',' → logprob: -1.795609474182129
    3. '(self' → logprob: -2.670609474182129
    4. ' (' → logprob: -3.045609474182129
    5. ')' → logprob: -4.420609474182129
    6. '   ' → logprob: -4.545609474182129
    7. ')(' → logprob: -4.670609474182129
    8. '__(' → logprob: -4.920609474182129
    9. ' self' → logprob: -4.920609474182129
    10. '):
' → logprob: -5.045609474182129

Token 258: ' max' (ID: 2999)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.29567596316337585
    2. 'rect' → logprob: -1.4206759929656982
    3. ' self' → logprob: -4.670675754547119
    4. ' rectangles' → logprob: -6.420675754547119
    5. ')' → logprob: -7.670675754547119
    6. '   ' → logprob: -8.045676231384277
    7. 'reverse' → logprob: -8.045676231384277
    8. '):
' → logprob: -8.170676231384277
    9. 'criteria' → logprob: -8.295676231384277
    10. 'integr' → logprob: -8.420676231384277

Token 259: '_dim' (ID: 23809)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0858798548579216
    2. '_width' → logprob: -3.2108798027038574
    3. '_size' → logprob: -4.210879802703857
    4. '_length' → logprob: -4.835879802703857
    5. '_di' → logprob: -4.960879802703857
    6. '_rectangle' → logprob: -5.335879802703857
    7. '_value' → logprob: -5.960879802703857
    8. '_side' → logprob: -6.210879802703857
    9. '_dimension' → logprob: -7.460879802703857
    10. '_dimensions' → logprob: -8.210880279541016

Token 260: ':' (ID: 25)
  Prédit: 'ension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ension' → logprob: -0.3746146559715271
    2. '=' → logprob: -1.4996147155761719
    3. ':' → logprob: -2.749614715576172
    4. '):' → logprob: -4.249614715576172
    5. '=None' → logprob: -5.624614715576172
    6. '=int' → logprob: -6.499614715576172
    7. 'ensions' → logprob: -6.749614715576172
    8. 'ersion' → logprob: -6.999614715576172
    9. ')' → logprob: -7.124614715576172
    10. 'ent' → logprob: -7.374614715576172

Token 261: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28494957089424133
    2. ' int' → logprob: -1.409949541091919
    3. '10' → logprob: -6.034949779510498
    4. '100' → logprob: -7.909949779510498
    5. ' ' → logprob: -8.28494930267334
    6. '20' → logprob: -8.28494930267334
    7. '=int' → logprob: -8.53494930267334
    8. '=' → logprob: -9.28494930267334
    9. ':int' → logprob: -10.28494930267334
    10. ',' → logprob: -10.65994930267334

Token 262: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2738414704799652
    2. '):
' → logprob: -1.5238415002822876
    3. ':' → logprob: -3.898841381072998
    4. '=' → logprob: -6.773841381072998
    5. ')' → logprob: -9.398841857910156
    6. ',' → logprob: -9.773841857910156
    7. '):
' → logprob: -9.898841857910156
    8. '   ' → logprob: -10.398841857910156
    9. ' ):' → logprob: -10.898841857910156
    10. '=None' → logprob: -11.898841857910156

Token 263: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.23250800371170044
    2. '10' → logprob: -1.6075079441070557
    3. ' ' → logprob: -5.482508182525635
    4. '50' → logprob: -6.732508182525635
    5. '20' → logprob: -6.857508182525635
    6. '0' → logprob: -8.607507705688477
    7. '1' → logprob: -9.107507705688477
    8. '5' → logprob: -9.357507705688477
    9. '500' → logprob: -9.357507705688477
    10. '200' → logprob: -9.857507705688477

Token 264: '150' (ID: 5215)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5317625403404236
    2. '100' → logprob: -0.9067625403404236
    3. '20' → logprob: -5.406762599945068
    4. '50' → logprob: -5.656762599945068
    5. '5' → logprob: -8.40676212310791
    6. '0' → logprob: -9.15676212310791
    7. '30' → logprob: -9.40676212310791
    8. '1' → logprob: -10.15676212310791
    9. ' ' → logprob: -10.53176212310791
    10. '15' → logprob: -10.78176212310791

Token 265: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04972443729639053
    2. '):
' → logprob: -3.0497243404388428
    3. ')' → logprob: -6.799724578857422
    4. '):
' → logprob: -11.674724578857422
    5. ',' → logprob: -11.924724578857422
    6. ':' → logprob: -12.799724578857422
    7. '   ' → logprob: -13.174724578857422
    8. ' ):' → logprob: -13.924724578857422
    9. '):

' → logprob: -14.299724578857422
    10. '       ' → logprob: -14.549724578857422

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010107767302542925
    2. ':' → logprob: -7.751010894775391
    3. '
' → logprob: -9.12601089477539
    4. ',' → logprob: -9.12601089477539
    5. '):
' → logprob: -9.25101089477539
    6. '        
' → logprob: -9.62601089477539
    7. ':
' → logprob: -9.75101089477539
    8. '   ' → logprob: -10.12601089477539
    9. '<|end|>' → logprob: -11.12601089477539
    10. '):' → logprob: -11.12601089477539

Token 267: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: ' Cache' (ID: 35118)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009531057439744473
    2. 'from' → logprob: -4.884531021118164
    3. 'import' → logprob: -6.634531021118164
    4. ' self' → logprob: -7.509531021118164
    5. '       ' → logprob: -10.634531021118164
    6. ' from' → logprob: -11.009531021118164
    7. 'max' → logprob: -11.759531021118164
    8. '   ' → logprob: -12.134531021118164
    9. 'super' → logprob: -13.259531021118164
    10. ' ' → logprob: -13.884531021118164

Token 269: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6694957613945007
    2. '       ' → logprob: -0.9194957613945007
    3. ' self' → logprob: -2.5444958209991455
    4. '        ' → logprob: -5.419495582580566
    5. '<|end|>' → logprob: -6.294495582580566
    6. '(self' → logprob: -7.044495582580566
    7. '        
' → logprob: -7.294495582580566
    8. '{' → logprob: -7.419495582580566
    9. '[self' → logprob: -7.544495582580566
    10. ' ' → logprob: -8.544495582580566

Token 270: ' wide' (ID: 8174)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35501155257225037
    2. 'rect' → logprob: -2.230011463165283
    3. ' self' → logprob: -2.980011463165283
    4. 'Integral' → logprob: -3.230011463165283
    5. ' rectangles' → logprob: -3.605011463165283
    6. ' Integral' → logprob: -3.730011463165283
    7. 'integr' → logprob: -3.855011463165283
    8. ' integral' → logprob: -4.605011463165283
    9. '_integr' → logprob: -4.855011463165283
    10. 'valid' → logprob: -5.855011463165283

Token 271: ' integral' (ID: 30089)
  Prédit: ' rectangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.3369702696800232
    2. 'rect' → logprob: -1.961970329284668
    3. ' integral' → logprob: -2.836970329284668
    4. 'integr' → logprob: -3.961970329284668
    5. ' Integral' → logprob: -4.086970329284668
    6. 'Integral' → logprob: -4.086970329284668
    7. '_integr' → logprob: -4.711970329284668
    8. '_rect' → logprob: -4.961970329284668
    9. 'self' → logprob: -5.461970329284668
    10. ' self' → logprob: -5.711970329284668

Token 272: ' rectangles' (ID: 164265)
  Prédit: ' rectangles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.33524030447006226
    2. 'rect' → logprob: -1.335240364074707
    3. '_rect' → logprob: -3.960240364074707
    4. ' rect' → logprob: -7.460240364074707
    5. 'Rect' → logprob: -7.585240364074707
    6. 'rectangle' → logprob: -7.960240364074707
    7. '_rectangle' → logprob: -8.085240364074707
    8. 's' → logprob: -8.210240364074707
    9. '   ' → logprob: -9.085240364074707
    10. ' squares' → logprob: -9.085240364074707

Token 273: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3703741431236267
    2. '
' → logprob: -1.6203742027282715
    3. 'self' → logprob: -2.7453742027282715
    4. ' self' → logprob: -3.8703742027282715
    5. ' with' → logprob: -4.8703742027282715
    6. '        
' → logprob: -4.9953742027282715
    7. '(self' → logprob: -4.9953742027282715
    8. ':' → logprob: -6.7453742027282715
    9. ' for' → logprob: -6.9953742027282715
    10. '   ' → logprob: -7.6203742027282715

Token 274: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0003943304473068565
    2. ' to' → logprob: -8.250393867492676
    3. '_to' → logprob: -9.750393867492676
    4. 'ntil' → logprob: -10.375393867492676
    5. 'til' → logprob: -11.250393867492676
    6. 'until' → logprob: -12.000393867492676
    7. '   ' → logprob: -12.375393867492676
    8. 'on' → logprob: -12.500393867492676
    9. 'o' → logprob: -13.000393867492676
    10. 'pto' → logprob: -13.125393867492676

Token 275: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12755097448825836
    2. ' max' → logprob: -2.1275510787963867
    3. 'self' → logprob: -7.502551078796387
    4. '(max' → logprob: -10.377551078796387
    5. ' self' → logprob: -10.627551078796387
    6. '   ' → logprob: -11.752551078796387
    7. '       ' → logprob: -13.252551078796387
    8. '	max' → logprob: -13.502551078796387
    9. '=max' → logprob: -13.502551078796387
    10. ' ' → logprob: -14.127551078796387

Token 276: '_dim' (ID: 23809)
  Prédit: '_dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dim' → logprob: -0.001070323633030057
    2. '_dimension' → logprob: -7.376070499420166
    3. '_dims' → logprob: -9.501070022583008
    4. '       ' → logprob: -9.501070022583008
    5. 'dim' → logprob: -9.501070022583008
    6. '   ' → logprob: -9.876070022583008
    7. '_d' → logprob: -10.126070022583008
    8. '_dimensions' → logprob: -10.626070022583008
    9. 'Dim' → logprob: -10.876070022583008
    10. '_' → logprob: -11.001070022583008

Token 277: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0983295440673828
    2. 'self' → logprob: -1.7233295440673828
    3. ' for' → logprob: -2.098329544067383
    4. ' with' → logprob: -2.223329544067383
    5. ':' → logprob: -2.598329544067383
    6. '
' → logprob: -3.098329544067383
    7. ',' → logprob: -3.223329544067383
    8. ' self' → logprob: -3.348329544067383
    9. ' in' → logprob: -3.848329544067383
    10. ':
' → logprob: -3.973329544067383

Token 278: ' quick' (ID: 4853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.40045109391212463
    2. ' self' → logprob: -1.2754510641098022
    3. 'height' → logprob: -3.775451183319092
    4. ' height' → logprob: -4.400451183319092
    5. 'max' → logprob: -5.525451183319092
    6. 'width' → logprob: -5.775451183319092
    7. ' max' → logprob: -6.275451183319092
    8. '       ' → logprob: -6.525451183319092
    9. ' width' → logprob: -6.650451183319092
    10. ')' → logprob: -7.525451183319092

Token 279: ' lookup' (ID: 37342)
  Prédit: ' access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' access' → logprob: -1.1432479619979858
    2. ' retrieval' → logprob: -1.1432479619979858
    3. ' lookup' → logprob: -3.0182480812072754
    4. ' initialization' → logprob: -3.2682480812072754
    5. 'self' → logprob: -3.3932480812072754
    6. ' reuse' → logprob: -3.7682480812072754
    7. ' use' → logprob: -3.8932480812072754
    8. ' generation' → logprob: -4.018248081207275
    9. 'reuse' → logprob: -4.143248081207275
    10. 'retr' → logprob: -4.143248081207275

Token 280: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010993468575179577
    2. '
' → logprob: -5.260993480682373
    3. 'self' → logprob: -5.260993480682373
    4. '<|end|>' → logprob: -8.260993003845215
    5. '        
' → logprob: -8.760993003845215
    6. ' self' → logprob: -9.510993003845215
    7. ',' → logprob: -10.635993003845215
    8. 'import' → logprob: -11.885993003845215
    9. '   ' → logprob: -12.260993003845215
    10. '(self' → logprob: -12.385993003845215

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027266559191048145
    2. 'self' → logprob: -6.1277265548706055
    3. '
' → logprob: -7.7527265548706055
    4. ' self' → logprob: -9.627726554870605
    5. '        
' → logprob: -10.252726554870605
    6. '<|end|>' → logprob: -12.127726554870605
    7. '   ' → logprob: -13.502726554870605
    8. '      ' → logprob: -14.002726554870605
    9. 'import' → logprob: -14.002726554870605
    10. ',' → logprob: -14.752726554870605

Token 282: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004678372759371996
    2. '       ' → logprob: -5.754678249359131
    3. ' self' → logprob: -6.504678249359131
    4. '   ' → logprob: -13.879678726196289
    5. 'from' → logprob: -14.629678726196289
    6. 'def' → logprob: -14.754678726196289
    7. ' ' → logprob: -15.004678726196289
    8. 'import' → logprob: -15.129678726196289
    9. '	self' → logprob: -15.504678726196289
    10. '      ' → logprob: -16.12967872619629

Token 283: '.max' (ID: 11883)
  Prédit: '.rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rect' → logprob: -0.017587877810001373
    2. '.max' → logprob: -5.142587661743164
    3. '.cache' → logprob: -5.142587661743164
    4. '.integr' → logprob: -5.767587661743164
    5. '.w' → logprob: -7.142587661743164
    6. '.all' → logprob: -7.642587661743164
    7. '.width' → logprob: -8.267587661743164
    8. '.cached' → logprob: -8.642587661743164
    9. 'rect' → logprob: -9.017587661743164
    10. '.c' → logprob: -9.642587661743164

Token 284: '_dim' (ID: 23809)
  Prédit: '_dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dim' → logprob: -4.60414821645827e-06
    2. '_dimension' → logprob: -13.000004768371582
    3. '_dims' → logprob: -13.625004768371582
    4. '_dimensions' → logprob: -14.625004768371582
    5. '_DIM' → logprob: -15.500004768371582
    6. '_' → logprob: -15.625004768371582
    7. '_d' → logprob: -16.375003814697266
    8. 'dim' → logprob: -17.000003814697266
    9. 'Dim' → logprob: -17.875003814697266
    10. '_def' → logprob: -18.125003814697266

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740865230560303
    2. '=' → logprob: -0.9740865230560303
    3. ' ' → logprob: -11.97408676147461
    4. '=self' → logprob: -13.34908676147461
    5. ':' → logprob: -14.84908676147461
    6. 'self' → logprob: -15.34908676147461
    7. '   ' → logprob: -15.59908676147461
    8. '=int' → logprob: -15.72408676147461
    9. '    ' → logprob: -15.84908676147461
    10. ' self' → logprob: -16.09908676147461

Token 286: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889165729284286
    2. ' max' → logprob: -2.5788917541503906
    3. '150' → logprob: -13.20389175415039
    4. '=max' → logprob: -17.70389175415039
    5. '(max' → logprob: -17.82889175415039
    6. '	max' → logprob: -17.95389175415039
    7. 'int' → logprob: -18.07889175415039
    8. '[max' → logprob: -18.70389175415039
    9. '_max' → logprob: -18.82889175415039
    10. ' ' → logprob: -19.82889175415039

Token 287: '_dim' (ID: 23809)
  Prédit: '_dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dim' → logprob: -5.5577775128767826e-06
    2. 'dim' → logprob: -12.375005722045898
    3. 'Dim' → logprob: -14.375005722045898
    4. '_dims' → logprob: -15.250005722045898
    5. '_DIM' → logprob: -15.625005722045898
    6. '=' → logprob: -16.5000057220459
    7. '_dimension' → logprob: -17.2500057220459
    8. '   ' → logprob: -17.6250057220459
    9. '```' → logprob: -17.7500057220459
    10. '_dimensions' → logprob: -18.0000057220459

Token 288: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019476758316159248
    2. '
' → logprob: -6.75194787979126
    3. 'self' → logprob: -7.50194787979126
    4. '<|end|>' → logprob: -8.876947402954102
    5. ' self' → logprob: -10.001947402954102
    6. '        
' → logprob: -11.626947402954102
    7. ',' → logprob: -12.376947402954102
    8. '	self' → logprob: -12.501947402954102
    9. 'def' → logprob: -12.501947402954102
    10. '   ' → logprob: -12.751947402954102

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001478796184528619
    2. 'self' → logprob: -9.000147819519043
    3. ' self' → logprob: -11.500147819519043
    4. '<|end|>' → logprob: -11.750147819519043
    5. '   ' → logprob: -13.500147819519043
    6. '
' → logprob: -13.875147819519043
    7. 'import' → logprob: -13.875147819519043
    8. '        
' → logprob: -14.000147819519043
    9. 'from' → logprob: -14.500147819519043
    10. '	self' → logprob: -15.000147819519043

Token 290: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00017767686222214252
    2. '       ' → logprob: -8.750177383422852
    3. ' self' → logprob: -11.125177383422852
    4. 'from' → logprob: -12.875177383422852
    5. '        
' → logprob: -14.500177383422852
    6. '
' → logprob: -14.500177383422852
    7. 'import' → logprob: -14.875177383422852
    8. '   ' → logprob: -15.875177383422852
    9. '(self' → logprob: -17.00017738342285
    10. 's' → logprob: -17.12517738342285

Token 291: '.all' (ID: 14045)
  Prédit: '.rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rect' → logprob: -0.02611008659005165
    2. '._' → logprob: -4.4011101722717285
    3. '.cache' → logprob: -4.6511101722717285
    4. '.integr' → logprob: -5.9011101722717285
    5. 'rect' → logprob: -7.2761101722717285
    6. '.sorted' → logprob: -8.65110969543457
    7. '.rectangle' → logprob: -9.65110969543457
    8. '.w' → logprob: -10.15110969543457
    9. '.cached' → logprob: -10.15110969543457
    10. '.' → logprob: -10.27610969543457

Token 292: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.02125765196979046
    2. '_integr' → logprob: -4.5212578773498535
    3. '_w' → logprob: -4.6462578773498535
    4. '_rectangle' → logprob: -8.021257400512695
    5. '_' → logprob: -8.771257400512695
    6. 'rect' → logprob: -10.646257400512695
    7. '=' → logprob: -11.521257400512695
    8. '_s' → logprob: -12.396257400512695
    9. '_values' → logprob: -12.771257400512695
    10. '_pairs' → logprob: -13.021257400512695

Token 293: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0060117486864328384
    2. 's' → logprob: -5.131011962890625
    3. 'angle' → logprob: -10.006011962890625
    4. 'ang' → logprob: -10.756011962890625
    5. 'anges' → logprob: -11.881011962890625
    6. 'ANGLES' → logprob: -12.881011962890625
    7. 'angular' → logprob: -13.381011962890625
    8. 'rect' → logprob: -13.756011962890625
    9. 'ranges' → logprob: -14.006011962890625
    10. 'class' → logprob: -15.006011962890625

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890421897172928
    2. '=' → logprob: -2.578904151916504
    3. '=[]' → logprob: -11.828904151916504
    4. ':' → logprob: -11.953904151916504
    5. ' ' → logprob: -14.453904151916504
    6. ' :' → logprob: -16.45390510559082
    7. '  ' → logprob: -17.20390510559082
    8. 's' → logprob: -17.32890510559082
    9. ' =[' → logprob: -17.45390510559082
    10. ',' → logprob: -18.07890510559082

Token 295: ' self' (ID: 1051)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.23319047689437866
    2. '[' → logprob: -1.9831905364990234
    3. '[
' → logprob: -2.8581905364990234
    4. '[]
' → logprob: -4.983190536499023
    5. 'sorted' → logprob: -5.858190536499023
    6. 'set' → logprob: -6.608190536499023
    7. ' []' → logprob: -7.108190536499023
    8. '[self' → logprob: -8.358190536499023
    9. ' [' → logprob: -8.358190536499023
    10. '[]}' → logprob: -8.858190536499023

Token 296: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.19849693775177002
    2. '.generate' → logprob: -1.82349693775177
    3. '.' → logprob: -6.0734968185424805
    4. '.compute' → logprob: -6.1984968185424805
    5. '.__' → logprob: -6.1984968185424805
    6. '.create' → logprob: -6.4484968185424805
    7. '_generate' → logprob: -6.4484968185424805
    8. 'generate' → logprob: -6.5734968185424805
    9. '.get' → logprob: -6.6984968185424805
    10. '.build' → logprob: -6.8234968185424805

Token 297: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.00816038716584444
    2. 'compute' → logprob: -5.633160591125488
    3. 'cache' → logprob: -5.633160591125488
    4. 'pre' → logprob: -7.383160591125488
    5. 'build' → logprob: -8.383160591125488
    6. 'populate' → logprob: -9.758160591125488
    7. 'enumer' → logprob: -11.008160591125488
    8. 'gen' → logprob: -11.758160591125488
    9. 'collect' → logprob: -11.883160591125488
    10. 'calculate' → logprob: -12.008160591125488

Token 298: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.7178773880004883
    2. '_rect' → logprob: -1.0928773880004883
    3. '_integr' → logprob: -2.5928773880004883
    4. '()' → logprob: -2.8428773880004883
    5. '(' → logprob: -3.8428773880004883
    6. '_w' → logprob: -4.092877388000488
    7. '_rectangle' → logprob: -6.217877388000488
    8. 'all' → logprob: -6.592877388000488
    9. 'wide' → logprob: -7.592877388000488
    10. '(w' → logprob: -7.717877388000488

Token 299: '_w' (ID: 3567)
  Prédit: '_rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.17703546583652496
    2. '()' → logprob: -2.0520355701446533
    3. '_w' → logprob: -4.177035331726074
    4. '_integr' → logprob: -4.802035331726074
    5. '_rectangle' → logprob: -5.177035331726074
    6. 'rect' → logprob: -6.427035331726074
    7. '_' → logprob: -6.552035331726074
    8. 'wide' → logprob: -7.427035331726074
    9. '(' → logprob: -7.552035331726074
    10. 'w' → logprob: -9.552035331726074

Token 300: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.0017965621082112193
    2. 'wide' → logprob: -7.501796722412109
    3. '_' → logprob: -7.626796722412109
    4. '_rect' → logprob: -8.62679672241211
    5. 'id' → logprob: -9.12679672241211
    6. '(' → logprob: -9.50179672241211
    7. '   ' → logprob: -10.25179672241211
    8. 'idth' → logprob: -10.75179672241211
    9. '_id' → logprob: -10.81429672241211
    10. '=' → logprob: -10.93929672241211

Token 301: '_rect' (ID: 39269)
  Prédit: '_integr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integr' → logprob: -0.16270996630191803
    2. '_rect' → logprob: -1.9127099514007568
    3. '_rectangle' → logprob: -7.037710189819336
    4. '()' → logprob: -7.162710189819336
    5. 'integr' → logprob: -7.912710189819336
    6. '_' → logprob: -8.537710189819336
    7. 'rect' → logprob: -8.787710189819336
    8. '_int' → logprob: -10.787710189819336
    9. '_Rect' → logprob: -11.162710189819336
    10. 'Integral' → logprob: -11.162710189819336

Token 302: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0010485276579856873
    2. 'angle' → logprob: -7.001048564910889
    3. 'angular' → logprob: -9.12604808807373
    4. 'ang' → logprob: -11.00104808807373
    5. '_angles' → logprob: -12.12604808807373
    6. 'anges' → logprob: -13.25104808807373
    7. '_angle' → logprob: -14.12604808807373
    8. '_rect' → logprob: -14.37604808807373
    9. 's' → logprob: -14.50104808807373
    10. 'ANGLES' → logprob: -15.25104808807373

Token 303: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00851918663829565
    2. '(max' → logprob: -4.883519172668457
    3. '(' → logprob: -7.383519172668457
    4. '(self' → logprob: -8.758519172668457
    5. '()
' → logprob: -9.008519172668457
    6. ' ()' → logprob: -12.758519172668457
    7. '()(' → logprob: -12.758519172668457
    8. '()

' → logprob: -13.508519172668457
    9. '()]' → logprob: -14.633519172668457
    10. '())' → logprob: -14.758519172668457

Token 304: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13722307980060577
    2. '
' → logprob: -2.3872230052948
    3. '   ' → logprob: -3.6372230052948
    4. ' def' → logprob: -5.262223243713379
    5. '    
' → logprob: -6.137223243713379
    6. '```' → logprob: -6.637223243713379
    7. '	def' → logprob: -7.637223243713379
    8. '<|end|>' → logprob: -8.012223243713379
    9. '  
' → logprob: -9.012223243713379
    10. '

' → logprob: -9.387223243713379

Token 305: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005150504410266876
    2. '
' → logprob: -6.005150318145752
    3. ' def' → logprob: -6.380150318145752
    4. '   ' → logprob: -7.130150318145752
    5. '

' → logprob: -9.13015079498291
    6. '    
' → logprob: -10.38015079498291
    7. 'self' (adapté à ' self') → logprob: -12.00515079498291
    8. '<|end|>' → logprob: -12.00515079498291
    9. '```' → logprob: -12.25515079498291
    10. ')' → logprob: -12.38015079498291

Token 306: '.sorted' (ID: 165009)
  Prédit: '.sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sorted' → logprob: -0.40816953778266907
    2. '.all' → logprob: -1.1581695079803467
    3. '.current' → logprob: -5.533169746398926
    4. '.' → logprob: -5.783169746398926
    5. '._' → logprob: -6.408169746398926
    6. '.index' → logprob: -6.533169746398926
    7. '.rect' → logprob: -6.658169746398926
    8. '.unique' → logprob: -7.033169746398926
    9. '.indices' → logprob: -7.033169746398926
    10. '.by' → logprob: -7.283169746398926

Token 307: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0009314678027294576
    2. '_list' → logprob: -7.750931262969971
    3. '_' → logprob: -8.750931739807129
    4. '_rectangle' → logprob: -9.625931739807129
    5. 'rect' → logprob: -9.875931739807129
    6. '_set' → logprob: -9.875931739807129
    7. '_keys' → logprob: -10.250931739807129
    8. '_key' → logprob: -10.500931739807129
    9. '_by' → logprob: -11.000931739807129
    10. '_all' → logprob: -11.375931739807129

Token 308: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0005107374745421112
    2. 's' → logprob: -8.000511169433594
    3. 'ang' → logprob: -8.875511169433594
    4. 'angle' → logprob: -11.125511169433594
    5. 'anges' → logprob: -11.750511169433594
    6. '_list' → logprob: -12.375511169433594
    7. 'ANGLES' → logprob: -13.500511169433594
    8. '_angles' → logprob: -13.750511169433594
    9. '_rect' → logprob: -14.250511169433594
    10. 'angular' → logprob: -14.250511169433594

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699397623538971
    2. '=' → logprob: -2.6949398517608643
    3. ' ' → logprob: -13.069939613342285
    4. ' =[' → logprob: -14.569939613342285
    5. '_' → logprob: -15.069939613342285
    6. ' =
' → logprob: -15.194939613342285
    7. ',' → logprob: -16.0699405670166
    8. ':' → logprob: -16.6949405670166
    9. '<|end|>' → logprob: -17.0699405670166
    10. '[' → logprob: -17.0699405670166

Token 310: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.006721995305269957
    2. ' sorted' → logprob: -5.0067219734191895
    3. '   ' → logprob: -12.256722450256348
    4. 'tuple' → logprob: -14.006722450256348
    5. '(sorted' → logprob: -14.756722450256348
    6. 'sort' → logprob: -14.756722450256348
    7. '  ' → logprob: -16.63172149658203
    8. ' ' → logprob: -16.63172149658203
    9. 'list' → logprob: -16.88172149658203
    10. '.sorted' → logprob: -17.50672149658203

Token 311: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011736786691471934
    2. '(' → logprob: -6.751173496246338
    3. 'self' → logprob: -13.126173973083496
    4. '(
' → logprob: -13.501173973083496
    5. ' (' → logprob: -16.87617301940918
    6. '((' → logprob: -17.62617301940918
    7. '(

' → logprob: -18.50117301940918
    8. '[self' → logprob: -18.62617301940918
    9. '(sel' → logprob: -19.12617301940918
    10. ' self' → logprob: -19.37617301940918

Token 312: '.all' (ID: 14045)
  Prédit: '.all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.all' → logprob: -3.643152740551159e-05
    2. 'all' → logprob: -11.125036239624023
    3. '.' → logprob: -11.375036239624023
    4. ' .' → logprob: -11.875036239624023
    5. ').' → logprob: -13.375036239624023
    6. '	all' → logprob: -15.125036239624023
    7. ' all' → logprob: -15.250036239624023
    8. '.user' → logprob: -15.375036239624023
    9. '_all' → logprob: -15.625036239624023
    10. 'All' → logprob: -16.000036239624023

Token 313: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0008522743592038751
    2. 'rect' → logprob: -7.125852108001709
    3. 'self' → logprob: -10.250852584838867
    4. '_rectangle' → logprob: -12.000852584838867
    5. '       ' → logprob: -13.500852584838867
    6. 's' → logprob: -13.625852584838867
    7. 'Rect' → logprob: -14.000852584838867
    8. '           ' → logprob: -14.250852584838867
    9. 'rectangle' → logprob: -14.625852584838867
    10. 'all' → logprob: -14.875852584838867

Token 314: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -9.567575034452602e-05
    2. 's' → logprob: -10.00009536743164
    3. 'anges' → logprob: -10.50009536743164
    4. 'angle' → logprob: -12.00009536743164
    5. 'ANGLES' → logprob: -12.75009536743164
    6. 'ang' → logprob: -12.87509536743164
    7. 'an' → logprob: -13.62509536743164
    8. '```' → logprob: -14.00009536743164
    9. '   ' → logprob: -14.50009536743164
    10. 'ables' → logprob: -14.62509536743164

Token 315: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022513647563755512
    2. ',' → logprob: -6.752251148223877
    3. '())' → logprob: -7.252251148223877
    4. ' )' → logprob: -9.002251625061035
    5. '()' → logprob: -9.127251625061035
    6. ',key' → logprob: -9.377251625061035
    7. '(),' → logprob: -11.002251625061035
    8. '(key' → logprob: -11.627251625061035
    9. '(' → logprob: -12.002251625061035
    10. ')
' → logprob: -12.252251625061035

Token 316: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3339899182319641
    2. '   ' → logprob: -1.4589898586273193
    3. 'def' → logprob: -3.4589898586273193
    4. '    
' → logprob: -4.083990097045898
    5. '

' → logprob: -7.083990097045898
    6. '```' → logprob: -7.458990097045898
    7. '<|end|>' → logprob: -7.583990097045898
    8. ' def' → logprob: -7.583990097045898
    9. '        
' → logprob: -8.083990097045898
    10. '  
' → logprob: -8.583990097045898

Token 317: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014179028570652008
    2. '
' → logprob: -4.389179229736328
    3. '   ' → logprob: -6.764179229736328
    4. ' def' → logprob: -7.764179229736328
    5. '

' → logprob: -10.264179229736328
    6. '    
' → logprob: -10.764179229736328
    7. '```' → logprob: -11.264179229736328
    8. '	def' → logprob: -12.889179229736328
    9. '<|end|>' → logprob: -12.889179229736328
    10. '        
' → logprob: -13.014179229736328

Token 318: ' Use' (ID: 7649)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.022356517612934113
    2. 'def' → logprob: -3.8973565101623535
    3. '#' → logprob: -7.1473565101623535
    4. '       ' → logprob: -7.6473565101623535
    5. 'import' → logprob: -8.522356986999512
    6. 'from' → logprob: -8.772356986999512
    7. ' self' → logprob: -9.522356986999512
    8. '   ' → logprob: -9.522356986999512
    9. '
' → logprob: -11.147356986999512
    10. 'current' → logprob: -12.022356986999512

Token 319: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.180506706237793
    2. ' self' → logprob: -1.430506706237793
    3. 'import' → logprob: -1.555506706237793
    4. 'from' → logprob: -2.555506706237793
    5. ' a' → logprob: -2.680506706237793
    6. '{' → logprob: -3.180506706237793
    7. ' bis' → logprob: -4.180506706237793
    8. ' from' → logprob: -4.430506706237793
    9. 'a' → logprob: -4.805506706237793
    10. 'bis' → logprob: -5.055506706237793

Token 320: ' dictionary' (ID: 22131)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9833467602729797
    2. 'dict' → logprob: -1.858346700668335
    3. ' set' → logprob: -2.483346700668335
    4. ' dict' → logprob: -2.483346700668335
    5. ' dictionary' → logprob: -2.858346700668335
    6. '_dict' → logprob: -3.358346700668335
    7. 'self' → logprob: -3.483346700668335
    8. '_' → logprob: -3.483346700668335
    9. ' bis' → logprob: -3.983346700668335
    10. ' from' → logprob: -4.108346939086914

Token 321: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4459933042526245
    2. ' self' → logprob: -1.9459933042526245
    3. ' to' → logprob: -2.320993423461914
    4. 'self' → logprob: -2.320993423461914
    5. 'for' → logprob: -4.445993423461914
    6. '
' → logprob: -5.945993423461914
    7. 'to' → logprob: -5.945993423461914
    8. '(self' → logprob: -6.570993423461914
    9. '<|end|>' → logprob: -6.820993423461914
    10. '{' → logprob: -8.445993423461914

Token 322: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4319149851799011
    2. ' self' → logprob: -1.306915044784546
    3. ' fast' → logprob: -2.681915044784546
    4. 'fast' → logprob: -5.306914806365967
    5. ' quick' → logprob: -5.806914806365967
    6. '_lookup' → logprob: -7.181914806365967
    7. ' lookup' → logprob: -7.306914806365967
    8. ' indexing' → logprob: -7.681914806365967
    9. ' mapping' → logprob: -7.931914806365967
    10. 'index' → logprob: -7.931914806365967

Token 323: ' lookup' (ID: 37342)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.6959524750709534
    2. '_lookup' → logprob: -1.1959524154663086
    3. ' lookup' → logprob: -2.3209524154663086
    4. ' mapping' → logprob: -3.0709524154663086
    5. '_mapping' → logprob: -4.070952415466309
    6. 'lookup' → logprob: -4.695952415466309
    7. '_map' → logprob: -4.695952415466309
    8. 'es' → logprob: -4.820952415466309
    9. 'mapping' → logprob: -5.695952415466309
    10. 's' → logprob: -6.320952415466309

Token 324: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7402153611183167
    2. 'self' → logprob: -0.9902153611183167
    3. '
' → logprob: -1.9902153015136719
    4. ' self' → logprob: -4.490215301513672
    5. '        
' → logprob: -6.615215301513672
    6. '<|end|>' → logprob: -7.240215301513672
    7. '{' → logprob: -7.740215301513672
    8. ',' → logprob: -7.990215301513672
    9. '(self' → logprob: -8.365215301513672
    10. '   ' → logprob: -9.740215301513672

Token 325: ' improve' (ID: 8400)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24576711654663086
    2. ' self' → logprob: -2.370767116546631
    3. ' facilitate' → logprob: -3.745767116546631
    4. ' map' → logprob: -3.870767116546631
    5. ' speed' → logprob: -3.870767116546631
    6. ' enable' → logprob: -3.870767116546631
    7. ' allow' → logprob: -3.995767116546631
    8. ' provide' → logprob: -5.245767116546631
    9. ' accelerate' → logprob: -5.870767116546631
    10. ' fast' → logprob: -6.245767116546631

Token 326: ' efficiency' (ID: 17456)
  Prédit: ' performance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' performance' → logprob: -0.5049684047698975
    2. 'self' → logprob: -1.6299684047698975
    3. 'performance' → logprob: -1.8799684047698975
    4. ' lookup' → logprob: -4.004968643188477
    5. ' time' → logprob: -5.379968643188477
    6. ' self' → logprob: -5.504968643188477
    7. 'time' → logprob: -5.629968643188477
    8. ' efficiency' → logprob: -5.879968643188477
    9. ' access' → logprob: -6.129968643188477
    10. ' search' → logprob: -6.254968643188477

Token 327: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17927581071853638
    2. 'self' → logprob: -1.9292757511138916
    3. '
' → logprob: -4.054275989532471
    4. ' self' → logprob: -7.429275989532471
    5. '        
' → logprob: -7.804275989532471
    6. '<|end|>' → logprob: -8.679275512695312
    7. '	self' → logprob: -8.929275512695312
    8. '   ' → logprob: -9.304275512695312
    9. '
' → logprob: -10.429275512695312
    10. '```' → logprob: -11.054275512695312

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009386159479618073
    2. '
' → logprob: -4.88438606262207
    3. '        
' → logprob: -7.25938606262207
    4. 'self' → logprob: -7.63438606262207
    5. '   ' → logprob: -8.00938606262207
    6. '<|end|>' → logprob: -9.88438606262207
    7. '    
' → logprob: -10.13438606262207
    8. ' self' → logprob: -10.13438606262207
    9. 'def' → logprob: -10.38438606262207
    10. '```' → logprob: -11.00938606262207

Token 329: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001726584043353796
    2. '       ' → logprob: -6.7517266273498535
    3. ' self' → logprob: -7.5017266273498535
    4. '   ' → logprob: -12.751726150512695
    5. '
' → logprob: -14.376726150512695
    6. '	self' → logprob: -14.876726150512695
    7. 'def' → logprob: -16.251726150512695
    8. '  ' → logprob: -17.001726150512695
    9. '        
' → logprob: -17.251726150512695
    10. ' ' → logprob: -17.626726150512695

Token 330: '.rect' (ID: 41088)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.752329409122467
    2. '.indices' → logprob: -1.5023293495178223
    3. '.rect' → logprob: -1.8773293495178223
    4. '.rectangle' → logprob: -2.0023293495178223
    5. '._' → logprob: -4.252329349517822
    6. '.idx' → logprob: -6.877329349517822
    7. '.' → logprob: -7.502329349517822
    8. '.lookup' → logprob: -7.877329349517822
    9. '.sorted' → logprob: -8.00232982635498
    10. '.id' → logprob: -8.37732982635498

Token 331: '_index' (ID: 7748)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.6777275204658508
    2. 'angle' → logprob: -0.9277275204658508
    3. '_index' → logprob: -2.677727460861206
    4. '_indices' → logprob: -4.427727699279785
    5. 'index' → logprob: -4.677727699279785
    6. 'angles' → logprob: -6.052727699279785
    7. 'to' → logprob: -6.427727699279785
    8. '_indexes' → logprob: -6.427727699279785
    9. '_idx' → logprob: -7.802727699279785
    10. '_angle' → logprob: -8.677727699279785

Token 332: '_map' (ID: 11824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5094872117042542
    2. ' =' → logprob: -1.2594871520996094
    3. '=' → logprob: -2.8844871520996094
    4. '_map' → logprob: -3.1344871520996094
    5. 'es' → logprob: -4.509487152099609
    6. '_by' → logprob: -6.134487152099609
    7. '_lookup' → logprob: -6.134487152099609
    8. '_' → logprob: -7.884487152099609
    9. '_dict' → logprob: -10.00948715209961
    10. ':' → logprob: -10.25948715209961

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132670223712921
    2. '=' → logprob: -1.3132669925689697
    3. ' ={' → logprob: -12.93826675415039
    4. '={}' → logprob: -13.68826675415039
    5. ' ' → logprob: -14.56326675415039
    6. '={' → logprob: -15.06326675415039
    7. '{' → logprob: -15.43826675415039
    8. '[' → logprob: -15.68826675415039
    9. '={"' → logprob: -16.06326675415039
    10. '   ' → logprob: -16.06326675415039

Token 334: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.04913580045104027
    2. ' {' → logprob: -3.049135684967041
    3. '{}' → logprob: -7.674135684967041
    4. '{id' → logprob: -10.6741361618042
    5. '{i' → logprob: -10.7991361618042
    6. '{x' → logprob: -11.5491361618042
    7. ' {}' → logprob: -11.5491361618042
    8. '{
' → logprob: -12.0491361618042
    9. '{name' → logprob: -12.0491361618042
    10. '{k' → logprob: -12.5491361618042

Token 335: ' (' (ID: 350)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0014084475114941597
    2. 'r' → logprob: -7.001408576965332
    3. 'repr' → logprob: -7.876408576965332
    4. ' rect' → logprob: -9.751408576965332
    5. 'rec' → logprob: -10.501408576965332
    6. '(rect' → logprob: -10.751408576965332
    7. 'rep' → logprob: -12.376408576965332
    8. 'rectangle' → logprob: -13.001408576965332
    9. 're' → logprob: -13.751408576965332
    10. '   ' → logprob: -14.126408576965332

Token 336: 'r' (ID: 81)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -1.0206720617134124e-05
    2. '.width' → logprob: -11.62501049041748
    3. '.he' → logprob: -14.37501049041748
    4. ' .' → logprob: -15.00001049041748
    5. '.' → logprob: -15.25001049041748
    6. 'height' → logprob: -16.750009536743164
    7. '.h' → logprob: -16.750009536743164
    8. ').' → logprob: -16.875009536743164
    9. '.size' → logprob: -18.500009536743164
    10. '.length' → logprob: -18.875009536743164

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019524219678714871
    2. ',r' → logprob: -6.251952648162842
    3. ' ,' → logprob: -10.751952171325684
    4. ',
' → logprob: -13.501952171325684
    5. 'r' → logprob: -14.126952171325684
    6. ' r' → logprob: -15.626952171325684
    7. '<|end|>' → logprob: -17.251953125
    8. '   ' → logprob: -17.876953125
    9. '‌,' → logprob: -17.876953125
    10. ',

' → logprob: -17.876953125

Token 339: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06993721425533295
    2. ' r' → logprob: -2.694937229156494
    3. ' ' → logprob: -14.694936752319336
    4. '   ' → logprob: -15.319936752319336
    5. '    ' → logprob: -16.069936752319336
    6. ')' → logprob: -16.944936752319336
    7. '  ' → logprob: -16.944936752319336
    8. '	r' → logprob: -18.069936752319336
    9. '(r' → logprob: -18.319936752319336
    10. '
' → logprob: -18.319936752319336

Token 340: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -1.771655115589965e-05
    2. '.height' → logprob: -11.750018119812012
    3. 'width' → logprob: -11.750018119812012
    4. '.' → logprob: -13.875018119812012
    5. '.w' → logprob: -15.250018119812012
    6. ' .' → logprob: -15.500018119812012
    7. '.weight' → logprob: -15.750018119812012
    8. 'idth' → logprob: -16.250017166137695
    9. ').' → logprob: -16.375017166137695
    10. ',width' → logprob: -16.500017166137695

Token 341: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015812745550647378
    2. ')' → logprob: -9.125158309936523
    3. ' ):' → logprob: -10.625158309936523
    4. '   ' → logprob: -11.000158309936523
    5. '       ' → logprob: -12.000158309936523
    6. ':' → logprob: -13.875158309936523
    7. '    ' → logprob: -15.375158309936523
    8. '):
' → logprob: -16.000158309936523
    9. '           ' → logprob: -16.000158309936523
    10. '):(' → logprob: -16.125158309936523

Token 342: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003977478016167879
    2. 'idx' → logprob: -6.253977298736572
    3. ' i' → logprob: -6.253977298736572
    4. ' idx' → logprob: -9.25397777557373
    5. 'index' → logprob: -10.50397777557373
    6. ' index' → logprob: -15.00397777557373
    7. '   ' → logprob: -15.00397777557373
    8. ' ' → logprob: -16.253976821899414
    9. '	i' → logprob: -17.003976821899414
    10. '  ' → logprob: -17.003976821899414

Token 343: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.043378688395023346
    2. 'for' → logprob: -3.1683785915374756
    3. '       ' → logprob: -8.793378829956055
    4. '        ' → logprob: -9.043378829956055
    5. '           ' → logprob: -9.543378829956055
    6. ' ' → logprob: -11.668378829956055
    7. ')' → logprob: -12.043378829956055
    8. '         ' → logprob: -12.543378829956055
    9. '   ' → logprob: -12.793378829956055
    10. '
' → logprob: -13.168378829956055

Token 344: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01112823374569416
    2. ' i' → logprob: -4.5111284255981445
    3. 'r' → logprob: -9.886128425598145
    4. '   ' → logprob: -11.636128425598145
    5. ' ' → logprob: -12.011128425598145
    6. ',' → logprob: -12.386128425598145
    7. '  ' → logprob: -12.386128425598145
    8. '	i' → logprob: -12.886128425598145
    9. 'enumer' → logprob: -13.886128425598145
    10. ' r' → logprob: -14.136128425598145

Token 345: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33099275827407837
    2. ' in' → logprob: -2.2059926986694336
    3. 'n' → logprob: -2.4559926986694336
    4. 'in' → logprob: -2.5809926986694336
    5. 'self' → logprob: -5.080992698669434
    6. 'r' → logprob: -6.830992698669434
    7. ' self' → logprob: -6.955992698669434
    8. ' ,' → logprob: -7.080992698669434
    9. ',r' → logprob: -7.955992698669434
    10. ',self' → logprob: -8.205992698669434

Token 346: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1798139363527298
    2. 'in' → logprob: -1.8048139810562134
    3. 'n' → logprob: -11.054814338684082
    4. ')' → logprob: -11.304814338684082
    5. 's' → logprob: -11.804814338684082
    6. 'enumer' → logprob: -11.804814338684082
    7. '	in' → logprob: -12.054814338684082
    8. ' ' → logprob: -12.679814338684082
    9. 'inthe' → logprob: -12.929814338684082
    10. '<|end|>' → logprob: -13.179814338684082

Token 347: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.2014143168926239
    2. 'enumer' → logprob: -1.7014143466949463
    3. 'en' → logprob: -14.701414108276367
    4. 'self' → logprob: -15.076414108276367
    5. '```' → logprob: -15.951414108276367
    6. 'enum' → logprob: -16.701414108276367
    7. '.enumer' → logprob: -16.951414108276367
    8. 'Enumer' → logprob: -17.076414108276367
    9. 'e' → logprob: -17.826414108276367
    10. ' enumer' → logprob: -18.076414108276367

Token 348: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08073866367340088
    2. 'self' → logprob: -2.5807385444641113
    3. ' self' → logprob: -6.330738544464111
    4. ')' → logprob: -10.70573902130127
    5. '(' → logprob: -11.08073902130127
    6. '	self' → logprob: -12.20573902130127
    7. '=self' → logprob: -12.58073902130127
    8. '```' → logprob: -12.83073902130127
    9. '[self' → logprob: -12.95573902130127
    10. ',' → logprob: -13.08073902130127

Token 349: '.sorted' (ID: 165009)
  Prédit: '.sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sorted' → logprob: -0.0003267639840487391
    2. '.self' → logprob: -8.875327110290527
    3. 'sorted' → logprob: -9.250327110290527
    4. '.' → logprob: -9.875327110290527
    5. ' .' → logprob: -11.250327110290527
    6. 'self' → logprob: -11.250327110290527
    7. '.selected' → logprob: -12.250327110290527
    8. '       ' → logprob: -13.375327110290527
    9. '.s' → logprob: -13.500327110290527
    10. '.saved' → logprob: -13.750327110290527

Token 350: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -4.870950215263292e-05
    2. 'rect' → logprob: -10.125048637390137
    3. '_rectangle' → logprob: -12.875048637390137
    4. 'self' → logprob: -13.375048637390137
    5. '_' → logprob: -13.750048637390137
    6. ')' → logprob: -14.125048637390137
    7. '(rect' → logprob: -14.750048637390137
    8. 'r' → logprob: -15.125048637390137
    9. '_self' → logprob: -15.500048637390137
    10. '_r' → logprob: -15.500048637390137

Token 351: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -4.9424725148128346e-05
    2. 's' → logprob: -10.625049591064453
    3. 'angle' → logprob: -11.125049591064453
    4. 'anges' → logprob: -12.875049591064453
    5. 'ANGLES' → logprob: -12.875049591064453
    6. 'ang' → logprob: -13.375049591064453
    7. '_angles' → logprob: -14.125049591064453
    8. 'r' → logprob: -15.000049591064453
    9. ')' → logprob: -15.250049591064453
    10. 'an' → logprob: -15.500049591064453

Token 352: ')' (ID: 8)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.06212901324033737
    2. ')' → logprob: -2.812129020690918
    3. ' )' → logprob: -8.937129020690918
    4. '}' → logprob: -11.187129020690918
    5. '       ' → logprob: -11.812129020690918
    6. '   ' → logprob: -12.312129020690918
    7. ')}
' → logprob: -13.812129020690918
    8. ')}
' → logprob: -14.562129020690918
    9. ');}' → logprob: -14.562129020690918
    10. ')}}' → logprob: -14.687129020690918

Token 353: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.004188805818557739
    2. ' }' → logprob: -6.1291890144348145
    3. '       ' → logprob: -7.1291890144348145
    4. ')}' → logprob: -7.3791890144348145
    5. ')' → logprob: -8.004188537597656
    6. '   ' → logprob: -8.379188537597656
    7. '}
' → logprob: -11.629188537597656
    8. '})' → logprob: -13.379188537597656
    9. ' )' → logprob: -14.504188537597656
    10. ' ' → logprob: -14.629188537597656

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07769863307476044
    2. 'def' → logprob: -2.7026987075805664
    3. ' def' → logprob: -5.077698707580566
    4. '	def' → logprob: -7.077698707580566
    5. '
' → logprob: -7.702698707580566
    6. '<|end|>' → logprob: -9.452698707580566
    7. '<|end|>' → logprob: -9.702698707580566
    8. '    
' → logprob: -10.452698707580566
    9. ' ' → logprob: -11.202698707580566
    10. '```' → logprob: -12.077698707580566

Token 355: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016021024202927947
    2. ' def' → logprob: -6.7516021728515625
    3. '   ' → logprob: -7.7516021728515625
    4. '
' → logprob: -14.251602172851562
    5. '	def' → logprob: -14.251602172851562
    6. ' ' → logprob: -15.001602172851562
    7. '```' → logprob: -17.126602172851562
    8. '  ' → logprob: -18.876602172851562
    9. '_def' → logprob: -19.001602172851562
    10. 'Def' → logprob: -19.876602172851562

Token 356: ' _' (ID: 1175)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.1566754579544067
    2. ' get' → logprob: -1.1566754579544067
    3. 'index' → logprob: -2.031675338745117
    4. ' find' → logprob: -2.656675338745117
    5. ' index' → logprob: -2.656675338745117
    6. 'find' → logprob: -2.781675338745117
    7. 'contains' → logprob: -5.281675338745117
    8. 'rank' → logprob: -5.406675338745117
    9. ' contains' → logprob: -5.906675338745117
    10. ' rank' → logprob: -5.906675338745117

Token 357: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -6.511406809295295e-06
    2. '_generate' → logprob: -12.000006675720215
    3. ' generate' → logprob: -15.750006675720215
    4. '.generate' → logprob: -17.2500057220459
    5. 'enerate' → logprob: -18.0000057220459
    6. '(generate' → logprob: -18.3750057220459
    7. '   ' → logprob: -21.3750057220459
    8. '
' → logprob: -22.0000057220459
    9. 'get' → logprob: -22.0000057220459
    10. '  ' → logprob: -22.1250057220459

Token 358: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -9.088346359931165e-07
    2. 'all' → logprob: -14.000000953674316
    3. '_a' → logprob: -17.875
    4. '_' → logprob: -18.375
    5. 'All' → logprob: -19.375
    6. 'self' → logprob: -19.625
    7. '__' → logprob: -19.75
    8. '_al' → logprob: -19.875
    9. '_ALL' → logprob: -20.0
    10. ' _' → logprob: -20.25

Token 359: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.00010998018842656165
    2. '_all' → logprob: -9.125109672546387
    3. 'w' → logprob: -15.375109672546387
    4. 'wide' → logprob: -15.625109672546387
    5. '_integr' → logprob: -16.125110626220703
    6. 'def' → logprob: -16.375110626220703
    7. '   ' → logprob: -16.750110626220703
    8. ' _' → logprob: -16.750110626220703
    9. '_' → logprob: -17.250110626220703
    10. '\' → logprob: -17.250110626220703

Token 360: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.02085133083164692
    2. 'wide' → logprob: -3.8958513736724854
    3. 'generate' → logprob: -8.895851135253906
    4. '_' → logprob: -9.770851135253906
    5. 'id' → logprob: -10.020851135253906
    6. '_generate' → logprob: -11.020851135253906
    7. 'иде' → logprob: -11.645851135253906
    8. 'ideo' → logprob: -12.145851135253906
    9. 'i' → logprob: -12.395851135253906
    10. 'e' → logprob: -12.770851135253906

Token 361: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -7.707997428951785e-05
    2. '_rectangle' → logprob: -10.250077247619629
    3. '_integr' → logprob: -10.750077247619629
    4. 'rect' → logprob: -10.875077247619629
    5. '_Rect' → logprob: -14.000077247619629
    6. '_RECT' → logprob: -15.750077247619629
    7. '_' → logprob: -16.125076293945312
    8. 'rectangle' → logprob: -16.875076293945312
    9. '_rec' → logprob: -16.875076293945312
    10. ' _' → logprob: -17.000076293945312

Token 362: 'angles' (ID: 34011)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5544406771659851
    2. 'angles' → logprob: -0.9294406771659851
    3. 'angle' → logprob: -3.55444073677063
    4. '(self' → logprob: -7.929440498352051
    5. '   ' → logprob: -8.42944049835205
    6. 'til' → logprob: -8.80444049835205
    7. '(' → logprob: -8.92944049835205
    8. '       ' → logprob: -9.17944049835205
    9. 'angular' → logprob: -9.17944049835205
    10. '```' → logprob: -9.30444049835205

Token 363: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.6895233531831764e-05
    2. '(' → logprob: -11.00002670288086
    3. '   ' → logprob: -12.37502670288086
    4. 'self' → logprob: -12.50002670288086
    5. ' (' → logprob: -13.75002670288086
    6. '       ' → logprob: -14.50002670288086
    7. 'def' → logprob: -15.25002670288086
    8. ' ' → logprob: -16.25002670288086
    9. '(s' → logprob: -16.37502670288086
    10. '(
' → logprob: -17.00002670288086

Token 364: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.531242847442627
    2. 'self' → logprob: -1.156242847442627
    3. '):
' → logprob: -2.906242847442627
    4. '):' → logprob: -3.406242847442627
    5. ')' → logprob: -5.281242847442627
    6. ')(' → logprob: -5.906242847442627
    7. '   ' → logprob: -6.906242847442627
    8. '       ' → logprob: -7.906242847442627
    9. ',' → logprob: -8.906242370605469
    10. '):

' → logprob: -9.531242370605469

Token 365: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016861737822182477
    2. 'self' → logprob: -9.125168800354004
    3. '(' → logprob: -10.250168800354004
    4. '   ' → logprob: -11.125168800354004
    5. '       ' → logprob: -12.250168800354004
    6. 'def' → logprob: -13.375168800354004
    7. ' (' → logprob: -13.625168800354004
    8. '(s' → logprob: -14.500168800354004
    9. ' self' → logprob: -14.500168800354004
    10. '(Self' → logprob: -15.250168800354004

Token 366: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2156471461057663
    2. 'set' → logprob: -1.7156471014022827
    3. ' list' → logprob: -4.465647220611572
    4. '[list' → logprob: -6.590647220611572
    5. 'List' → logprob: -7.090647220611572
    6. ' set' → logprob: -8.590646743774414
    7. '[' → logprob: -9.090646743774414
    8. '[List' → logprob: -9.215646743774414
    9. '   ' → logprob: -11.090646743774414
    10. '[int' → logprob: -12.590646743774414

Token 367: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21065348386764526
    2. '       ' → logprob: -1.71065354347229
    3. '   ' → logprob: -5.960653305053711
    4. ':
' → logprob: -6.335653305053711
    5. '(' → logprob: -6.460653305053711
    6. '[' → logprob: -6.585653305053711
    7. 'self' → logprob: -7.460653305053711
    8. '(
' → logprob: -7.835653305053711
    9. '[]' → logprob: -8.585653305053711
    10. ':' → logprob: -8.835653305053711

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016038904432207346
    2. '[' → logprob: -7.126604080200195
    3. '[]' → logprob: -7.876604080200195
    4. 'result' → logprob: -8.501604080200195
    5. '   ' → logprob: -10.126604080200195
    6. 'rect' → logprob: -10.501604080200195
    7. '[
' → logprob: -10.626604080200195
    8. ':' → logprob: -11.251604080200195
    9. '```' → logprob: -11.251604080200195
    10. ' rectangles' → logprob: -11.376604080200195

Token 369: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.07074476778507233
    2. '       ' → logprob: -2.695744752883911
    3. 'result' → logprob: -7.94574499130249
    4. ' rectangles' → logprob: -8.195744514465332
    5. ' rect' → logprob: -8.945744514465332
    6. 'r' → logprob: -11.695744514465332
    7. 'all' → logprob: -11.945744514465332
    8. 'results' → logprob: -12.070744514465332
    9. 'wide' → logprob: -12.070744514465332
    10. 'res' → logprob: -12.320744514465332

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935064792633057
    2. ' =' → logprob: -0.6935064792633057
    3. '=[]' → logprob: -8.068506240844727
    4. '   ' → logprob: -11.443506240844727
    5. '       ' → logprob: -11.443506240844727
    6. ':' → logprob: -11.693506240844727
    7. '=[]
' → logprob: -11.693506240844727
    8. '[]' → logprob: -12.068506240844727
    9. '=[]
' → logprob: -15.068506240844727
    10. '[' → logprob: -15.443506240844727

Token 371: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00690848333761096
    2. '[]
' → logprob: -5.006908416748047
    3. ' []' → logprob: -8.631908416748047
    4. ' []
' → logprob: -11.381908416748047
    5. '[' → logprob: -13.506908416748047
    6. '       ' → logprob: -14.131908416748047
    7. '   ' → logprob: -14.756908416748047
    8. '[]

' → logprob: -15.006908416748047
    9. '[
' → logprob: -15.381908416748047
    10. '[]>' → logprob: -15.506908416748047

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04739217087626457
    2. ' for' → logprob: -3.5473921298980713
    3. 'for' → logprob: -4.04739236831665
    4. '	for' → logprob: -11.422391891479492
    5. '   ' → logprob: -12.172391891479492
    6. '```' → logprob: -13.422391891479492
    7. '	' → logprob: -14.297391891479492
    8. '	   ' → logprob: -14.672391891479492
    9. ' ' → logprob: -15.672391891479492
    10. '           ' → logprob: -16.672391891479492

Token 373: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003184363478794694
    2. ' for' → logprob: -6.0031843185424805
    3. '       ' → logprob: -7.2531843185424805
    4. '	for' → logprob: -14.87818431854248
    5. '   ' → logprob: -15.87818431854248
    6. '```' → logprob: -16.503185272216797
    7. ' ' → logprob: -17.753185272216797
    8. '
' → logprob: -18.003185272216797
    9. '        
' → logprob: -18.628185272216797
    10. '	' → logprob: -19.503185272216797

Token 374: ' h' (ID: 312)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.6565708518028259
    2. 'h' → logprob: -0.7815708518028259
    3. 'width' → logprob: -4.031570911407471
    4. 'w' → logprob: -5.906570911407471
    5. ' height' → logprob: -6.156570911407471
    6. ' h' → logprob: -7.031570911407471
    7. ' width' → logprob: -9.406570434570312
    8. '   ' → logprob: -9.906570434570312
    9. 'i' → logprob: -10.031570434570312
    10. ' w' → logprob: -11.906570434570312

Token 375: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08901504427194595
    2. 'in' → logprob: -2.464015007019043
    3. ' ' → logprob: -10.964015007019043
    4. '1' → logprob: -11.214015007019043
    5. '   ' → logprob: -11.214015007019043
    6. 'range' → logprob: -11.714015007019043
    7. 'n' → logprob: -12.589015007019043
    8. 'import' → logprob: -12.589015007019043
    9. '```' → logprob: -13.089015007019043
    10. 'int' → logprob: -13.214015007019043

Token 376: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067167943343520164
    2. ' range' → logprob: -5.006716728210449
    3. '   ' → logprob: -14.38171672821045
    4. '1' → logprob: -14.50671672821045
    5. ' ' → logprob: -15.38171672821045
    6. '(range' → logprob: -16.881717681884766
    7. '
' → logprob: -17.006717681884766
    8. '	range' → logprob: -17.131717681884766
    9. '  ' → logprob: -17.756717681884766
    10. 'in' → logprob: -19.131717681884766

Token 377: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3869268298149109
    2. '(' → logprob: -1.1369268894195557
    3. '(self' → logprob: -9.886926651000977
    4. 'self' → logprob: -12.886926651000977
    5. ' ' → logprob: -13.511926651000977
    6. ' (' → logprob: -14.761926651000977
    7. '   ' → logprob: -15.011926651000977
    8. '
' → logprob: -16.386926651000977
    9. '(
' → logprob: -16.511926651000977
    10. 'from' → logprob: -16.761926651000977

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. 'self' → logprob: -12.000006675720215
    3. ' ' → logprob: -15.500006675720215
    4. '   ' → logprob: -18.1250057220459
    5. '0' → logprob: -18.7500057220459
    6. '
' → logprob: -19.6250057220459
    7. ' self' → logprob: -20.0000057220459
    8. '2' → logprob: -20.3750057220459
    9. '

' → logprob: -20.7500057220459
    10. '(self' → logprob: -21.2500057220459

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014454191841650754
    2. ' ,' → logprob: -9.000144958496094
    3. '1' → logprob: -11.625144958496094
    4. ',self' → logprob: -12.000144958496094
    5. '       ' → logprob: -13.125144958496094
    6. ',
' → logprob: -13.250144958496094
    7. ',max' → logprob: -13.875144958496094
    8. ',int' → logprob: -15.750144958496094
    9. 'self' → logprob: -15.875144958496094
    10. '   ' → logprob: -16.000144958496094

Token 380: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012094692647224292
    2. ' self' → logprob: -9.125121116638184
    3. '       ' → logprob: -11.750121116638184
    4. '           ' → logprob: -12.750121116638184
    5. '   ' → logprob: -14.625121116638184
    6. '(self' → logprob: -15.500121116638184
    7. '               ' → logprob: -15.625121116638184
    8. '
' → logprob: -16.125120162963867
    9. '                   ' → logprob: -17.375120162963867
    10. '	self' → logprob: -17.500120162963867

Token 381: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -4.8232690460281447e-05
    2. 'max' → logprob: -10.125048637390137
    3. '.' → logprob: -12.250048637390137
    4. ' .' → logprob: -13.500048637390137
    5. '       ' → logprob: -14.750048637390137
    6. '.width' → logprob: -15.000048637390137
    7. '   ' → logprob: -15.750048637390137
    8. ' ' → logprob: -15.750048637390137
    9. '.min' → logprob: -16.00004768371582
    10. '	max' → logprob: -16.12504768371582

Token 382: '_dim' (ID: 23809)
  Prédit: '_dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dim' → logprob: -6.511406809295295e-06
    2. '_dims' → logprob: -12.875006675720215
    3. 'dim' → logprob: -13.625006675720215
    4. 'Dim' → logprob: -14.125006675720215
    5. '_DIM' → logprob: -14.750006675720215
    6. '_dimensions' → logprob: -15.250006675720215
    7. '   ' → logprob: -15.375006675720215
    8. '_dimension' → logprob: -15.625006675720215
    9. '       ' → logprob: -15.750006675720215
    10. '
' → logprob: -16.0000057220459

Token 383: ' +' (ID: 659)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07758479565382004
    2. '):' → logprob: -2.702584743499756
    3. '+' → logprob: -5.327584743499756
    4. ' ):
' → logprob: -6.827584743499756
    5. ' +' → logprob: -7.202584743499756
    6. ' ):' → logprob: -7.827584743499756
    7. '       ' → logprob: -8.202585220336914
    8. '   ' → logprob: -8.952585220336914
    9. '-' → logprob: -10.452585220336914
    10. '           ' → logprob: -10.702585220336914

Token 384: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016027313540689647
    2. ' ' → logprob: -8.750160217285156
    3. '0' → logprob: -13.500160217285156
    4. '   ' → logprob: -15.125160217285156
    5. '  ' → logprob: -17.125160217285156
    6. '
' → logprob: -17.875160217285156
    7. '2' → logprob: -18.062660217285156
    8. '    ' → logprob: -18.125160217285156
    9. ')' → logprob: -18.437660217285156
    10. '     ' → logprob: -18.687660217285156

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012725738633889705
    2. ' ' → logprob: -9.000126838684082
    3. '0' → logprob: -12.625126838684082
    4. '   ' → logprob: -14.875126838684082
    5. '  ' → logprob: -16.5626277923584
    6. ')' → logprob: -17.2501277923584
    7. '
' → logprob: -17.3751277923584
    8. '2' → logprob: -17.7501277923584
    9. '    ' → logprob: -17.8751277923584
    10. '-' → logprob: -18.1251277923584

Token 386: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00594065198674798
    2. '):' → logprob: -5.1309404373168945
    3. '):
' → logprob: -12.005940437316895
    4. '       ' → logprob: -13.130940437316895
    5. ' ):
' → logprob: -13.380940437316895
    6. ':
' → logprob: -13.880940437316895
    7. ':' → logprob: -14.005940437316895
    8. '   ' → logprob: -14.755940437316895
    9. '):

' → logprob: -16.00594139099121
    10. ')' → logprob: -16.00594139099121

Token 387: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30629706382751465
    2. '           ' → logprob: -1.9312970638275146
    3. ' for' → logprob: -2.8062970638275146
    4. ':' → logprob: -3.5562970638275146
    5. '   ' → logprob: -3.6812970638275146
    6. ',' → logprob: -6.681297302246094
    7. '	   ' → logprob: -7.056297302246094
    8. '	for' → logprob: -7.431297302246094
    9. '    ' → logprob: -7.681297302246094
    10. '	       ' → logprob: -7.806297302246094

Token 388: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06197284162044525
    2. ' for' → logprob: -2.8119728565216064
    3. '   ' → logprob: -12.436972618103027
    4. '       ' → logprob: -14.811972618103027
    5. '           ' → logprob: -15.436972618103027
    6. '	for' → logprob: -15.436972618103027
    7. '```' → logprob: -15.561972618103027
    8. ' ' → logprob: -15.936972618103027
    9. 'width' → logprob: -16.061973571777344
    10. 'range' → logprob: -17.311973571777344

Token 389: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0007104054093360901
    2. ' w' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.625710487365723
    4. '	w' → logprob: -16.125709533691406
    5. '```' → logprob: -16.375709533691406
    6. '
' → logprob: -17.750709533691406
    7. '_w' → logprob: -18.250709533691406
    8. 'W' → logprob: -18.500709533691406
    9. 'width' → logprob: -19.125709533691406
    10. '`' → logprob: -19.125709533691406

Token 390: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12696129083633423
    2. 'in' → logprob: -2.1269612312316895
    3. 'w' → logprob: -12.126961708068848
    4. ' ' → logprob: -12.376961708068848
    5. 'h' → logprob: -12.626961708068848
    6. 'In' → logprob: -12.626961708068848
    7. ')' → logprob: -12.751961708068848
    8. 'range' → logprob: -13.251961708068848
    9. '   ' → logprob: -13.751961708068848
    10. '_in' → logprob: -13.751961708068848

Token 391: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170460251159966
    2. ' range' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.87617015838623
    4. '   ' → logprob: -16.626171112060547
    5. '(range' → logprob: -17.251171112060547
    6. '  ' → logprob: -18.501171112060547
    7. '	range' → logprob: -19.501171112060547
    8. '
' → logprob: -19.626171112060547
    9. '    ' → logprob: -19.876171112060547
    10. 'r' → logprob: -20.126171112060547

Token 392: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00039492646465077996
    2. '(' → logprob: -7.875394821166992
    3. 'h' → logprob: -11.250394821166992
    4. ' (' → logprob: -14.125394821166992
    5. '   ' → logprob: -15.000394821166992
    6. '1' → logprob: -15.625394821166992
    7. '[h' → logprob: -16.375394821166992
    8. '(w' → logprob: -16.750394821166992
    9. '(
' → logprob: -16.750394821166992
    10. '((' → logprob: -16.750394821166992

Token 393: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693776190280914
    2. ' +' → logprob: -2.1269378662109375
    3. '1' → logprob: -12.626937866210938
    4. '2' → logprob: -13.501937866210938
    5. '+
' → logprob: -13.626937866210938
    6. ')+' → logprob: -14.001937866210938
    7. '()+' → logprob: -14.876937866210938
    8. ')' → logprob: -14.876937866210938
    9. '           ' → logprob: -15.001937866210938
    10. '+h' → logprob: -15.001937866210938

Token 394: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.250017166137695
    3. '2' → logprob: -12.500017166137695
    4. '           ' → logprob: -15.625017166137695
    5. '
' → logprob: -16.625017166137695
    6. '   ' → logprob: -16.750017166137695
    7. ',' → logprob: -17.875017166137695
    8. '       ' → logprob: -18.250017166137695
    9. '```' → logprob: -18.937517166137695
    10. '               ' → logprob: -19.125017166137695

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.000007629394531
    3. '2' → logprob: -14.000007629394531
    4. 'self' → logprob: -15.875007629394531
    5. 'h' → logprob: -16.37500762939453
    6. 'w' → logprob: -16.62500762939453
    7. ',' → logprob: -17.00000762939453
    8. '   ' → logprob: -17.00000762939453
    9. '           ' → logprob: -17.00000762939453
    10. '
' → logprob: -17.37500762939453

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.927930654550437e-05
    2. ' ,' → logprob: -10.500029563903809
    3. ',self' → logprob: -14.250029563903809
    4. '1' → logprob: -15.375029563903809
    5. ',max' → logprob: -15.875029563903809
    6. ',
' → logprob: -16.000028610229492
    7. '   ' → logprob: -16.125028610229492
    8. '
' → logprob: -16.500028610229492
    9. '           ' → logprob: -16.500028610229492
    10. '       ' → logprob: -16.625028610229492

Token 397: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014248007908463478
    2. ' self' → logprob: -4.264247894287109
    3. '           ' → logprob: -9.76424789428711
    4. '               ' → logprob: -11.51424789428711
    5. '(self' → logprob: -11.76424789428711
    6. '=self' → logprob: -13.01424789428711
    7. '                   ' → logprob: -13.26424789428711
    8. '       ' → logprob: -14.01424789428711
    9. '[self' → logprob: -14.01424789428711
    10. '
' → logprob: -14.38924789428711

Token 398: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0011023490224033594
    2. 'max' → logprob: -7.126102447509766
    3. ',' → logprob: -8.376102447509766
    4. '           ' → logprob: -11.001102447509766
    5. '       ' → logprob: -11.251102447509766
    6. 'self' → logprob: -11.751102447509766
    7. ' .' → logprob: -12.001102447509766
    8. '.' → logprob: -12.126102447509766
    9. ' +' → logprob: -12.626102447509766
    10. ',max' → logprob: -12.751102447509766

Token 399: '_dim' (ID: 23809)
  Prédit: '_dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dim' → logprob: -2.5941604690160602e-05
    2. 'Dim' → logprob: -11.000025749206543
    3. 'dim' → logprob: -12.500025749206543
    4. 'self' → logprob: -12.625025749206543
    5. '       ' → logprob: -14.500025749206543
    6. '_rect' → logprob: -14.875025749206543
    7. '_dims' → logprob: -15.000025749206543
    8. '           ' → logprob: -15.250025749206543
    9. '_DIM' → logprob: -15.250025749206543
    10. '.dim' → logprob: -16.12502670288086

Token 400: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014143168926239
    2. '+' → logprob: -1.7014143466949463
    3. ')' → logprob: -15.201414108276367
    4. ' +
' → logprob: -15.951414108276367
    5. ' ' → logprob: -16.076414108276367
    6. ')+' → logprob: -16.201414108276367
    7. '+
' → logprob: -16.201414108276367
    8. '):
' → logprob: -16.576414108276367
    9. '           ' → logprob: -16.826414108276367
    10. '1' → logprob: -16.826414108276367

Token 401: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009258725331164896
    2. '+' → logprob: -7.1259260177612305
    3. ' ' → logprob: -9.12592601776123
    4. ' +' → logprob: -11.50092601776123
    5. '2' → logprob: -13.37592601776123
    6. '   ' → logprob: -15.00092601776123
    7. '           ' → logprob: -16.375925064086914
    8. ')' → logprob: -16.625925064086914
    9. '
' → logprob: -16.750925064086914
    10. ',' → logprob: -17.000925064086914

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.875009536743164
    3. '+' → logprob: -13.125009536743164
    4. '2' → logprob: -15.750009536743164
    5. '   ' → logprob: -16.375009536743164
    6. '
' → logprob: -17.375009536743164
    7. ' +' → logprob: -18.375009536743164
    8. '           ' → logprob: -18.375009536743164
    9. '

' → logprob: -18.437509536743164
    10. '```' → logprob: -18.937509536743164

Token 403: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38712653517723083
    2. '):' → logprob: -1.1371265649795532
    3. '):
' → logprob: -9.137126922607422
    4. ':' → logprob: -9.512126922607422
    5. '               ' → logprob: -10.387126922607422
    6. '           ' → logprob: -10.512126922607422
    7. ':
' → logprob: -11.387126922607422
    8. '       ' → logprob: -14.137126922607422
    9. '):

' → logprob: -14.137126922607422
    10. ')' → logprob: -14.262126922607422

Token 404: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017445837147533894
    2. '                   ' → logprob: -10.125174522399902
    3. '                       ' → logprob: -10.375174522399902
    4. ' rectangles' → logprob: -10.375174522399902
    5. 'rect' → logprob: -11.375174522399902
    6. '(rect' → logprob: -11.375174522399902
    7. '           ' → logprob: -11.375174522399902
    8. '<|end|>' → logprob: -11.500174522399902
    9. ',' → logprob: -12.000174522399902
    10. '	           ' → logprob: -12.375174522399902

Token 405: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.05657339096069336
    2. '                   ' → logprob: -3.3065733909606934
    3. ' rectangles' → logprob: -4.056573390960693
    4. ' rect' → logprob: -7.431573390960693
    5. '               ' → logprob: -8.056573867797852
    6. '	rect' → logprob: -10.306573867797852
    7. '   ' → logprob: -10.681573867797852
    8. '(rect' → logprob: -10.931573867797852
    9. 'rectangle' → logprob: -11.181573867797852
    10. '_rect' → logprob: -11.681573867797852

Token 406: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.0722858102526516e-05
    2. '.' → logprob: -10.125041007995605
    3. 'append' → logprob: -15.250041007995605
    4. '.app' → logprob: -16.75004005432129
    5. '.Append' → logprob: -16.75004005432129
    6. '               ' → logprob: -16.87504005432129
    7. ' .' → logprob: -17.25004005432129
    8. '].' → logprob: -17.62504005432129
    9. '           ' → logprob: -17.87504005432129
    10. '.push' → logprob: -18.25004005432129

Token 407: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006743792910128832
    2. 'Integral' → logprob: -5.006743907928467
    3. ' Integral' → logprob: -10.506743431091309
    4. '(In' → logprob: -14.381743431091309
    5. '(
' → logprob: -15.256743431091309
    6. ' (' → logprob: -16.631744384765625
    7. 'Integrity' → logprob: -16.631744384765625
    8. '(in' → logprob: -16.881744384765625
    9. '   ' → logprob: -17.256744384765625
    10. '(Int' → logprob: -17.506744384765625

Token 408: 'Integral' (ID: 102763)
  Prédit: 'Integral'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integral' → logprob: -0.0002613358374219388
    2. ' Integral' → logprob: -8.250261306762695
    3. 'Integrated' → logprob: -17.375261306762695
    4. 'Integrity' → logprob: -17.875261306762695
    5. 'Intrinsic' → logprob: -18.375261306762695
    6. '           ' → logprob: -19.375261306762695
    7. ' integral' → logprob: -19.500261306762695
    8. '               ' → logprob: -20.875261306762695
    9. 'Integr' → logprob: -21.375261306762695
    10. '   ' → logprob: -21.375261306762695

Token 409: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: 0.0
    2. 'Rect' → logprob: -17.5
    3. '_rectangle' → logprob: -18.25
    4. 'rectangle' → logprob: -20.625
    5. '.Rectangle' → logprob: -20.75
    6. '
' → logprob: -21.125
    7. ' Rectangle' → logprob: -21.5
    8. '(Rect' → logprob: -22.0
    9. '```' → logprob: -22.125
    10. '   ' → logprob: -23.0

Token 410: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.500011444091797
    3. ')' → logprob: -14.375011444091797
    4. '(
' → logprob: -15.000011444091797
    5. '(height' → logprob: -15.250011444091797
    6. ')(' → logprob: -16.000011444091797
    7. ' (' → logprob: -16.625011444091797
    8. 'h' → logprob: -17.750011444091797
    9. '(w' → logprob: -18.125011444091797
    10. '           ' → logprob: -18.250011444091797

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004106658045202494
    2. ',w' → logprob: -5.504106521606445
    3. ' ,' → logprob: -11.129106521606445
    4. ',
' → logprob: -11.629106521606445
    5. 'w' → logprob: -12.754106521606445
    6. ',width' → logprob: -14.004106521606445
    7. '‌,' → logprob: -15.504106521606445
    8. ' w' → logprob: -16.504106521606445
    9. '   ' → logprob: -16.629106521606445
    10. ')' → logprob: -16.629106521606445

Token 412: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.008620012551546097
    2. ' w' → logprob: -4.758619785308838
    3. '                   ' → logprob: -12.883620262145996
    4. '               ' → logprob: -13.508620262145996
    5. '                ' → logprob: -13.883620262145996
    6. '                               ' → logprob: -15.383620262145996
    7. '                       ' → logprob: -16.13361930847168
    8. '                    ' → logprob: -16.50861930847168
    9. '   ' → logprob: -17.00861930847168
    10. '                           ' → logprob: -17.13361930847168

Token 413: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015521175228059292
    2. '))
' → logprob: -6.751552104949951
    3. ')' → logprob: -7.876552104949951
    4. '               ' → logprob: -13.87655258178711
    5. ')
' → logprob: -14.50155258178711
    6. ')))' → logprob: -15.12655258178711
    7. '           ' → logprob: -15.37655258178711
    8. '))

' → logprob: -15.75155258178711
    9. ' ))' → logprob: -16.12655258178711
    10. '                   ' → logprob: -16.62655258178711

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.5027299822540954e-05
    2. 'return' → logprob: -10.000055313110352
    3. ' return' → logprob: -11.875055313110352
    4. '	' → logprob: -13.875055313110352
    5. '<|end|>' → logprob: -14.625055313110352
    6. '```' → logprob: -14.750055313110352
    7. '	return' → logprob: -14.875055313110352
    8. '               ' → logprob: -15.875055313110352
    9. ':return' → logprob: -16.25005531311035
    10. '
' → logprob: -16.75005531311035

Token 415: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007494711899198592
    2. 'return' (adapté à ' return') → logprob: -7.250749588012695
    3. ' return' → logprob: -10.250749588012695
    4. '   ' → logprob: -12.500749588012695
    5. '	return' → logprob: -15.500749588012695
    6. '```' → logprob: -16.375749588012695
    7. '           ' → logprob: -16.500749588012695
    8. '               ' → logprob: -17.625749588012695
    9. '{return' → logprob: -17.875749588012695
    10. '
' → logprob: -18.250749588012695

Token 416: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.00015860427811276168
    2. ' rectangles' → logprob: -8.750158309936523
    3. ' rect' → logprob: -16.875158309936523
    4. '(rect' → logprob: -18.750158309936523
    5. 'rectangle' → logprob: -19.250158309936523
    6. 'Rect' → logprob: -19.750158309936523
    7. '_rect' → logprob: -20.250158309936523
    8. '	rect' → logprob: -21.000158309936523
    9. '.rect' → logprob: -21.625158309936523
    10. '```' → logprob: -21.875158309936523

Token 417: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28210487961769104
    2. '<|end|>' → logprob: -2.032104969024658
    3. '   ' → logprob: -2.282104969024658
    4. '    
' → logprob: -4.782104969024658
    5. '<|end|>' → logprob: -6.032104969024658
    6. '```' → logprob: -7.407104969024658
    7. '  
' → logprob: -7.657104969024658
    8. '

' → logprob: -8.0321044921875
    9. 'def' → logprob: -8.1571044921875
    10. '        
' → logprob: -9.4071044921875

Token 418: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2343900501728058
    2. '   ' → logprob: -1.6093900203704834
    3. ' def' → logprob: -4.7343902587890625
    4. '```' → logprob: -8.859390258789062
    5. '	def' → logprob: -12.859390258789062
    6. '    
' → logprob: -13.984390258789062
    7. '@property' → logprob: -14.359390258789062
    8. '
' → logprob: -14.359390258789062
    9. ' ' → logprob: -14.484390258789062
    10. '``' → logprob: -14.609390258789062

Token 419: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.008129963040119e-06
    2. ' def' → logprob: -12.625003814697266
    3. '   ' → logprob: -14.375003814697266
    4. '```' → logprob: -18.625003814697266
    5. '
' → logprob: -19.250003814697266
    6. '	def' → logprob: -19.375003814697266
    7. 'from' → logprob: -19.500003814697266
    8. '#' → logprob: -19.750003814697266
    9. 'class' → logprob: -20.000003814697266
    10. '    
' → logprob: -20.750003814697266

Token 420: ' next' (ID: 2613)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.2005424052476883
    2. ' index' → logprob: -2.200542449951172
    3. 'get' → logprob: -3.700542449951172
    4. ' find' → logprob: -3.950542449951172
    5. ' rank' → logprob: -4.575542449951172
    6. 'index' → logprob: -4.700542449951172
    7. ' def' → logprob: -6.200542449951172
    8. ' insert' → logprob: -6.700542449951172
    9. 'rank' → logprob: -6.950542449951172
    10. 'find' → logprob: -7.450542449951172

Token 421: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -0.13903658092021942
    2. '(self' → logprob: -2.1390366554260254
    3. '_rect' → logprob: -4.514036655426025
    4. '_integr' → logprob: -8.014036178588867
    5. '_(' → logprob: -8.014036178588867
    6. '_index' → logprob: -8.639036178588867
    7. '_in' → logprob: -9.764036178588867
    8. '_w' → logprob: -9.764036178588867
    9. '_self' → logprob: -10.639036178588867
    10. '_of' → logprob: -11.139036178588867

Token 422: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003372502396814525
    2. '(' → logprob: -8.000337600708008
    3. ' (' → logprob: -13.500337600708008
    4. '(
' → logprob: -15.500337600708008
    5. 'self' → logprob: -15.750337600708008
    6. '   ' → logprob: -17.125337600708008
    7. '       ' → logprob: -18.750337600708008
    8. '_(' → logprob: -18.750337600708008
    9. '(Self' → logprob: -18.750337600708008
    10. ' self' → logprob: -19.625337600708008

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6696149840718135e-05
    2. ' ,' → logprob: -9.875056266784668
    3. 'self' → logprob: -12.250056266784668
    4. '(self' → logprob: -15.500056266784668
    5. '   ' → logprob: -16.000057220458984
    6. ',self' → logprob: -16.125057220458984
    7. ')' → logprob: -17.000057220458984
    8. '       ' → logprob: -17.375057220458984
    9. ',
' → logprob: -18.500057220458984
    10. ' self' → logprob: -19.000057220458984

Token 424: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.28310078382492065
    2. 'current' → logprob: -1.7831008434295654
    3. ' current' → logprob: -3.2831008434295654
    4. ' rect' → logprob: -3.4081008434295654
    5. 'rectangle' → logprob: -5.158100605010986
    6. ' rectangle' → logprob: -7.158100605010986
    7. 'self' → logprob: -7.283100605010986
    8. 'r' → logprob: -8.033101081848145
    9. 'curr' → logprob: -9.408101081848145
    10. 'height' → logprob: -9.783101081848145

Token 425: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003794731106609106
    2. '):' → logprob: -5.8787946701049805
    3. 'angle' → logprob: -7.1287946701049805
    4. ')' → logprob: -9.12879467010498
    5. '):
' → logprob: -10.12879467010498
    6. 'ect' → logprob: -10.25379467010498
    7. ' :' → logprob: -13.75379467010498
    8. '   ' → logprob: -14.37879467010498
    9. '_:' → logprob: -15.12879467010498
    10. ',' → logprob: -15.37879467010498

Token 426: ' Integral' (ID: 121125)
  Prédit: 'Integral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integral' → logprob: -0.28346124291419983
    2. ' Integral' → logprob: -1.4084612131118774
    3. ')' → logprob: -7.158461093902588
    4. ' '' → logprob: -7.533461093902588
    5. ''' → logprob: -7.658461093902588
    6. ' integral' → logprob: -8.783461570739746
    7. ' )' → logprob: -9.283461570739746
    8. '   ' → logprob: -9.658461570739746
    9. ' ' → logprob: -10.158461570739746
    10. ':' → logprob: -10.533461570739746

Token 427: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -1.9361264946837764e-07
    2. 'Rect' → logprob: -16.0
    3. ' Rectangle' → logprob: -17.0
    4. '_rectangle' → logprob: -18.25
    5. 'rectangle' → logprob: -19.625
    6. ')' → logprob: -19.75
    7. '.Rectangle' → logprob: -20.0
    8. '   ' → logprob: -21.25
    9. '_Rect' → logprob: -21.375
    10. '(Rect' → logprob: -21.75

Token 428: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2113979209971149e-05
    2. '):' → logprob: -12.125012397766113
    3. '):
' → logprob: -12.375012397766113
    4. ' )' → logprob: -13.875012397766113
    5. '')' → logprob: -14.625012397766113
    6. '   ' → logprob: -14.750012397766113
    7. ')->' → logprob: -15.250012397766113
    8. ':' → logprob: -15.875012397766113
    9. '`)' → logprob: -15.875012397766113
    10. '")' → logprob: -17.875011444091797

Token 429: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003432811703532934
    2. ':
' → logprob: -6.503432750701904
    3. '->' → logprob: -6.878432750701904
    4. ' ->' → logprob: -7.378432750701904
    5. ')' → logprob: -8.753433227539062
    6. '   ' → logprob: -9.878433227539062
    7. '       ' → logprob: -10.753433227539062
    8. '):' → logprob: -10.878433227539062
    9. ')->' → logprob: -11.128433227539062
    10. '):
' → logprob: -12.378433227539062

Token 430: ' Integral' (ID: 121125)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -1.1812212467193604
    2. 'Integral' → logprob: -1.3062212467193604
    3. ' Integral' → logprob: -1.8062212467193604
    4. ' Optional' → logprob: -1.9312212467193604
    5. ''' → logprob: -2.5562212467193604
    6. ' '' → logprob: -4.056221008300781
    7. 'None' → logprob: -4.556221008300781
    8. ' None' → logprob: -5.181221008300781
    9. '(Optional' → logprob: -7.931221008300781
    10. '   ' → logprob: -8.181221008300781

Token 431: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -3.4121114822482923e-06
    2. 'Rect' → logprob: -12.625003814697266
    3. '_rectangle' → logprob: -16.500003814697266
    4. 'rectangle' → logprob: -18.125003814697266
    5. '_Rect' → logprob: -18.125003814697266
    6. ' Rectangle' → logprob: -18.625003814697266
    7. 'Integral' → logprob: -19.375003814697266
    8. '.Rectangle' → logprob: -19.875003814697266
    9. 'R' → logprob: -20.500003814697266
    10. '(Rect' → logprob: -21.125003814697266

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028749538585543633
    2. ':
' → logprob: -3.653749465942383
    3. '       ' → logprob: -6.278749465942383
    4. '   ' → logprob: -8.153749465942383
    5. '):' → logprob: -9.153749465942383
    6. '):
' → logprob: -9.278749465942383
    7. '():' → logprob: -10.778749465942383
    8. '():
' → logprob: -11.028749465942383
    9. ',' → logprob: -11.153749465942383
    10. ')' → logprob: -12.153749465942383

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010124455438926816
    2. 'index' → logprob: -7.251012325286865
    3. 'idx' → logprob: -8.376012802124023
    4. 'if' → logprob: -11.001012802124023
    5. '```' → logprob: -11.376012802124023
    6. 'i' → logprob: -11.751012802124023
    7. 'try' → logprob: -11.751012802124023
    8. '_index' → logprob: -12.001012802124023
    9. '
' → logprob: -12.626012802124023
    10. 'next' → logprob: -12.751012802124023

Token 434: ' #' (ID: 1069)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.36494681239128113
    2. 'idx' → logprob: -1.3649468421936035
    3. '       ' → logprob: -3.1149468421936035
    4. 'i' → logprob: -5.8649468421936035
    5. 'key' → logprob: -6.2399468421936035
    6. ' idx' → logprob: -7.6149468421936035
    7. 'current' → logprob: -8.114946365356445
    8. ' index' → logprob: -8.489946365356445
    9. 'next' → logprob: -10.239946365356445
    10. ' key' → logprob: -10.364946365356445

Token 435: ' Get' (ID: 2942)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.20399394631385803
    2. 'index' → logprob: -1.9539939165115356
    3. 'key' → logprob: -3.203994035720825
    4. 'i' → logprob: -7.203993797302246
    5. 'try' → logprob: -7.703993797302246
    6. ' idx' → logprob: -7.953993797302246
    7. 'current' → logprob: -8.453993797302246
    8. 'pos' → logprob: -9.203993797302246
    9. '   ' → logprob: -9.203993797302246
    10. '       ' → logprob: -9.328993797302246

Token 436: ' the' (ID: 290)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0597083568572998
    2. ' idx' → logprob: -1.0597083568572998
    3. 'index' → logprob: -1.3097083568572998
    4. ' index' → logprob: -4.059708595275879
    5. 'i' → logprob: -4.434708595275879
    6. ' i' → logprob: -5.184708595275879
    7. ' current' → logprob: -6.559708595275879
    8. 'current' → logprob: -7.684708595275879
    9. '       ' → logprob: -9.184708595275879
    10. '   ' → logprob: -9.309708595275879

Token 437: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.699037492275238
    2. 'idx' → logprob: -0.699037492275238
    3. 'key' → logprob: -5.699037551879883
    4. 'current' → logprob: -6.449037551879883
    5. 'i' → logprob: -7.074037551879883
    6. 'pos' → logprob: -9.824037551879883
    7. ' idx' → logprob: -11.074037551879883
    8. 'cur' → logprob: -11.824037551879883
    9. 'curr' → logprob: -11.824037551879883
    10. 'next' → logprob: -12.324037551879883

Token 438: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0345800556242466
    2. '=' → logprob: -3.4095799922943115
    3. '       ' → logprob: -7.034580230712891
    4. '	' → logprob: -10.53458023071289
    5. ' of' → logprob: -12.40958023071289
    6. '   ' → logprob: -12.90958023071289
    7. 'rect' → logprob: -13.03458023071289
    8. '        ' → logprob: -13.15958023071289
    9. 'of' → logprob: -13.65958023071289
    10. '_' → logprob: -13.65958023071289

Token 439: ' rect' (ID: 13107)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00234544207341969
    2. ' self' → logprob: -6.252345561981201
    3. 'rect' → logprob: -7.877345561981201
    4. 'current' → logprob: -11.127345085144043
    5. '(self' → logprob: -11.627345085144043
    6. 'next' → logprob: -12.127345085144043
    7. '       ' → logprob: -13.252345085144043
    8. ' current' → logprob: -13.377345085144043
    9. ' rect' → logprob: -13.627345085144043
    10. 'the' → logprob: -13.877345085144043

Token 440: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021058307960629463
    2. '=' → logprob: -4.021058082580566
    3. '       ' → logprob: -5.896058082580566
    4. 's' → logprob: -10.896058082580566
    5. '_key' → logprob: -10.896058082580566
    6. '        ' → logprob: -11.021058082580566
    7. '_index' → logprob: -11.146058082580566
    8. '	' → logprob: -11.146058082580566
    9. '_' → logprob: -11.396058082580566
    10. '_idx' → logprob: -11.521058082580566

Token 441: ' sorted' (ID: 20099)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.064297824399546e-05
    2. ' self' → logprob: -9.625070571899414
    3. 'the' → logprob: -13.000070571899414
    4. 'rect' → logprob: -13.250070571899414
    5. '       ' → logprob: -15.625070571899414
    6. '
' → logprob: -16.125070571899414
    7. ' the' → logprob: -17.375070571899414
    8. '[self' → logprob: -17.375070571899414
    9. 'elf' → logprob: -17.500070571899414
    10. 'this' → logprob: -17.625070571899414

Token 442: ' list' (ID: 1562)
  Prédit: '_rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.6147418022155762
    2. 'self' → logprob: -1.2397418022155762
    3. 'rect' → logprob: -1.8647418022155762
    4. '_rectangle' → logprob: -4.864741802215576
    5. '(self' → logprob: -5.614741802215576
    6. 'index' → logprob: -7.489741802215576
    7. 'rectangle' → logprob: -7.864741802215576
    8. '_self' → logprob: -7.864741802215576
    9. '_index' → logprob: -8.364742279052734
    10. '(rect' → logprob: -8.614742279052734

Token 443: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04355902224779129
    2. '
' → logprob: -4.0435590744018555
    3. 'idx' → logprob: -4.5435590744018555
    4. 'index' → logprob: -5.1685590744018555
    5. ' idx' → logprob: -6.2935590744018555
    6. 'try' → logprob: -6.4185590744018555
    7. 'rect' → logprob: -7.0435590744018555
    8. ' key' → logprob: -7.0435590744018555
    9. ',' → logprob: -7.2935590744018555
    10. '        
' → logprob: -7.6685590744018555

Token 444: ' then' (ID: 1815)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.457340270280838
    2. 'idx' → logprob: -1.3323402404785156
    3. 'index' → logprob: -3.4573402404785156
    4. ' i' → logprob: -3.5823402404785156
    5. 'i' → logprob: -3.9573402404785156
    6. '       ' → logprob: -4.707340240478516
    7. ' index' → logprob: -4.957340240478516
    8. ' current' → logprob: -5.832340240478516
    9. ' key' → logprob: -6.332340240478516
    10. 'current' → logprob: -6.832340240478516

Token 445: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4472923278808594
    2. 'index' → logprob: -1.6972923278808594
    3. 'next' → logprob: -1.8222923278808594
    4. 'idx' → logprob: -1.9472923278808594
    5. ' return' → logprob: -2.6972923278808594
    6. ' idx' → logprob: -2.9472923278808594
    7. '       ' → logprob: -3.0722923278808594
    8. 'increment' → logprob: -3.3222923278808594
    9. '
' → logprob: -4.197292327880859
    10. ' next' → logprob: -4.322292327880859

Token 446: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022564470767975
    2. ' self' → logprob: -1.9102256298065186
    3. '       ' → logprob: -13.660225868225098
    4. '```' → logprob: -16.16022491455078
    5. '	self' → logprob: -16.28522491455078
    6. ' the' → logprob: -16.41022491455078
    7. '[self' → logprob: -17.03522491455078
    8. '(self' → logprob: -17.16022491455078
    9. '   ' → logprob: -17.41022491455078
    10. 'the' → logprob: -17.53522491455078

Token 447: ' next' (ID: 2613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024584142956882715
    2. ' self' → logprob: -6.252458572387695
    3. 'next' → logprob: -7.752458572387695
    4. ' next' → logprob: -9.252458572387695
    5. '       ' → logprob: -12.877458572387695
    6. '   ' → logprob: -14.502458572387695
    7. '```' → logprob: -15.502458572387695
    8. 'rect' → logprob: -15.752458572387695
    9. 'sorted' → logprob: -15.752458572387695
    10. '(self' → logprob: -16.502458572387695

Token 448: ' rectangle' (ID: 45808)
  Prédit: '_rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -0.8014966249465942
    2. '_rect' → logprob: -1.5514966249465942
    3. 'rect' → logprob: -1.8014966249465942
    4. '[' → logprob: -3.1764965057373047
    5. 'rectangle' → logprob: -3.4264965057373047
    6. ' ' → logprob: -3.5514965057373047
    7. ' rectangle' → logprob: -3.6764965057373047
    8. ' one' → logprob: -3.9264965057373047
    9. '_' → logprob: -5.301496505737305
    10. '(rect' → logprob: -5.676496505737305

Token 449: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12194587290287018
    2. 'rect' → logprob: -3.121945858001709
    3. '(rect' → logprob: -3.621945858001709
    4. '[' → logprob: -4.246945858001709
    5. '(' → logprob: -4.996945858001709
    6. ',' → logprob: -4.996945858001709
    7. ' if' → logprob: -5.746945858001709
    8. '(self' → logprob: -6.371945858001709
    9. '
' → logprob: -6.621945858001709
    10. '   ' → logprob: -6.996945858001709

Token 450: ' order' (ID: 2569)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11162909865379333
    2. 'the' → logprob: -2.361629009246826
    3. ' the' → logprob: -4.736629009246826
    4. ' self' → logprob: -6.111629009246826
    5. '   ' → logprob: -8.361629486083984
    6. 'sequence' → logprob: -9.861629486083984
    7. '       ' → logprob: -10.611629486083984
    8. ' sequence' → logprob: -10.986629486083984
    9. 'line' → logprob: -11.611629486083984
    10. 'rect' → logprob: -11.986629486083984

Token 451: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028890134766697884
    2. '(' → logprob: -4.028890132904053
    3. '(rect' → logprob: -5.778890132904053
    4. 'rect' → logprob: -5.903890132904053
    5. '(self' → logprob: -6.528890132904053
    6. ',' → logprob: -6.528890132904053
    7. '   ' → logprob: -7.653890132904053
    8. ' (' → logprob: -8.403890609741211
    9. 'self' → logprob: -8.528890609741211
    10. '
' → logprob: -9.028890609741211

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010973571334034204
    2. '   ' → logprob: -8.126097679138184
    3. '(' → logprob: -8.751097679138184
    4. '```' → logprob: -9.001097679138184
    5. 'index' → logprob: -9.751097679138184
    6. '[' → logprob: -9.876097679138184
    7. '(
' → logprob: -10.001097679138184
    8. '(self' → logprob: -10.126097679138184
    9. '           ' → logprob: -10.126097679138184
    10. 'self' → logprob: -10.251097679138184

Token 453: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.42493531107902527
    2. 'idx' (adapté à ' idx') → logprob: -1.1749353408813477
    3. '       ' → logprob: -3.6749353408813477
    4. ' idx' → logprob: -5.549935340881348
    5. 'i' → logprob: -5.674935340881348
    6. 'key' → logprob: -5.799935340881348
    7. ' index' → logprob: -7.049935340881348
    8. 'current' → logprob: -7.799935340881348
    9. ' key' → logprob: -8.549935340881348
    10. 'try' → logprob: -9.299935340881348

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.076414108276367
    4. '=self' → logprob: -16.951414108276367
    5. '=index' → logprob: -17.326414108276367
    6. ')' → logprob: -17.826414108276367
    7. '_' → logprob: -18.076414108276367
    8. '.' → logprob: -18.201414108276367
    9. '	' → logprob: -18.326414108276367
    10. '=int' → logprob: -18.826414108276367

Token 455: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001593195047462359
    2. ' self' → logprob: -8.75015926361084
    3. '       ' → logprob: -14.00015926361084
    4. '	self' → logprob: -19.500160217285156
    5. '[self' → logprob: -19.750160217285156
    6. '(self' → logprob: -19.875160217285156
    7. '   ' → logprob: -20.375160217285156
    8. '
' → logprob: -20.375160217285156
    9. '=self' → logprob: -20.500160217285156
    10. '           ' → logprob: -21.000160217285156

Token 456: '.rect' (ID: 41088)
  Prédit: '.rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rect' → logprob: -1.2113979209971149e-05
    2. 'rect' → logprob: -11.375012397766113
    3. '.' → logprob: -14.625012397766113
    4. '.sorted' → logprob: -17.000011444091797
    5. '	rect' → logprob: -17.125011444091797
    6. '.dict' → logprob: -17.375011444091797
    7. ' .' → logprob: -17.875011444091797
    8. '.rec' → logprob: -18.375011444091797
    9. '.ret' → logprob: -19.125011444091797
    10. ' rect' → logprob: -19.250011444091797

Token 457: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.512236498361744e-07
    2. 'ex' → logprob: -15.250000953674316
    3. 'index' → logprob: -15.375000953674316
    4. 'ect' → logprob: -17.0
    5. '_' → logprob: -18.25
    6. '_rect' → logprob: -18.625
    7. '\' → logprob: -18.875
    8. '_ex' → logprob: -18.875
    9. 'rect' → logprob: -19.125
    10. ' _' → logprob: -19.125

Token 458: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -6.988221684878226e-06
    2. 'map' → logprob: -12.250006675720215
    3. 'ex' → logprob: -13.625006675720215
    4. 'self' → logprob: -15.500006675720215
    5. 'e' → logprob: -16.12500762939453
    6. 'emap' → logprob: -16.25000762939453
    7. 'ermap' → logprob: -16.50000762939453
    8. 'ect' → logprob: -16.62500762939453
    9. 'er' → logprob: -16.87500762939453
    10. 'rect' → logprob: -17.00000762939453

Token 459: '.get' (ID: 775)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.16029226779937744
    2. '.get' → logprob: -1.9102922677993774
    3. '[' → logprob: -9.660292625427246
    4. 'get' → logprob: -13.035292625427246
    5. '[get' → logprob: -14.035292625427246
    6. '(rect' → logprob: -14.535292625427246
    7. '((' → logprob: -15.285292625427246
    8. '(get' → logprob: -15.910292625427246
    9. '[((' → logprob: -16.16029167175293
    10. '[self' → logprob: -16.16029167175293

Token 460: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. ' ((' → logprob: -15.12501335144043
    4. '(rect' → logprob: -15.75001335144043
    5. ' (' → logprob: -17.25001335144043
    6. '(
' → logprob: -17.50001335144043
    7. ' ' → logprob: -17.62501335144043
    8. '[(' → logprob: -19.75001335144043
    9. '  ' → logprob: -20.00001335144043
    10. '```' → logprob: -20.37501335144043

Token 461: 'rect' (ID: 4104)
  Prédit: 'rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.8624639324116288e-06
    2. ' rect' → logprob: -13.250001907348633
    3. '(rect' → logprob: -20.625001907348633
    4. '	rect' → logprob: -21.000001907348633
    5. '   ' → logprob: -22.250001907348633
    6. '.rect' → logprob: -22.875001907348633
    7. '_rect' → logprob: -23.500001907348633
    8. '
' → logprob: -24.250001907348633
    9. '       ' → logprob: -24.875001907348633
    10. 'Rect' → logprob: -25.000001907348633

Token 462: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -1.3856492842023727e-06
    2. ' .' → logprob: -14.625000953674316
    3. '.' → logprob: -14.750000953674316
    4. '.width' → logprob: -15.125000953674316
    5. 'height' → logprob: -15.625000953674316
    6. '.he' → logprob: -17.375001907348633
    7. ').' → logprob: -18.500001907348633
    8. '.health' → logprob: -18.750001907348633
    9. '.size' → logprob: -19.125001907348633
    10. '.status' → logprob: -19.500001907348633

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.383526149671525e-05
    2. ' ,' → logprob: -9.875053405761719
    3. ',
' → logprob: -13.875053405761719
    4. '‌,' → logprob: -14.750053405761719
    5. '       ' → logprob: -14.875053405761719
    6. '   ' → logprob: -15.000053405761719
    7. '<|end|>' → logprob: -16.12505340576172
    8. ' ' → logprob: -17.12505340576172
    9. '           ' → logprob: -17.37505340576172
    10. ',user' → logprob: -17.37505340576172

Token 464: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.2519614100456238
    2. ' rect' → logprob: -1.5019614696502686
    3. '(rect' → logprob: -11.626961708068848
    4. ' ' → logprob: -11.751961708068848
    5. '	rect' → logprob: -12.001961708068848
    6. '.rect' → logprob: -12.751961708068848
    7. ',' → logprob: -13.126961708068848
    8. ' ' → logprob: -13.876961708068848
    9. ' 
' → logprob: -14.001961708068848
    10. '_rect' → logprob: -14.626961708068848

Token 465: '.width' (ID: 11038)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6502187252044678
    2. '.height' → logprob: -0.9002187252044678
    3. '.width' → logprob: -2.6502187252044678
    4. ' ,' → logprob: -7.525218963623047
    5. '.' → logprob: -8.775218963623047
    6. ',height' → logprob: -9.775218963623047
    7. ' .' → logprob: -10.025218963623047
    8. '.size' → logprob: -10.650218963623047
    9. ',width' → logprob: -10.650218963623047
    10. 'height' → logprob: -10.900218963623047

Token 466: '))
' (ID: 2210)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.49152103066444397
    2. ')' → logprob: -0.9915210008621216
    3. '))' → logprob: -4.116520881652832
    4. ')+' → logprob: -7.241520881652832
    5. '))+' → logprob: -8.616520881652832
    6. ' ),' → logprob: -10.491520881652832
    7. ',' → logprob: -10.741520881652832
    8. ' )' → logprob: -11.116520881652832
    9. ')
' → logprob: -11.491520881652832
    10. '))
' → logprob: -11.866520881652832

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29617011547088623
    2. ' if' → logprob: -1.4211701154708862
    3. 'if' → logprob: -4.546170234680176
    4. '
' → logprob: -5.546170234680176
    5. ',' → logprob: -9.296170234680176
    6. ' +' → logprob: -9.796170234680176
    7. '   ' → logprob: -10.296170234680176
    8. '           ' → logprob: -10.546170234680176
    9. ' or' → logprob: -10.546170234680176
    10. '        
' → logprob: -10.671170234680176

Token 468: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11474772542715073
    2. 'if' (adapté à ' if') → logprob: -2.3647477626800537
    3. '       ' → logprob: -4.239747524261475
    4. '
' → logprob: -11.364748001098633
    5. '```' → logprob: -12.989748001098633
    6. '\n' → logprob: -13.114748001098633
    7. '        
' → logprob: -13.114748001098633
    8. ' 
' → logprob: -13.114748001098633
    9. '   ' → logprob: -13.989748001098633
    10. '           ' → logprob: -14.364748001098633

Token 469: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.01815205067396164
    2. 'idx' → logprob: -4.018152236938477
    3. '	idx' → logprob: -13.143152236938477
    4. '(idx' → logprob: -16.393152236938477
    5. '_idx' → logprob: -18.768152236938477
    6. '    ' → logprob: -19.268152236938477
    7. ' None' → logprob: -19.393152236938477
    8. '[idx' → logprob: -19.518152236938477
    9. ' ' → logprob: -19.643152236938477
    10. '.idx' → logprob: -20.268152236938477

Token 470: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0007119550718925893
    2. 'is' → logprob: -7.250711917877197
    3. ' ' → logprob: -13.875712394714355
    4. '    ' → logprob: -14.500712394714355
    5. '        ' → logprob: -16.12571144104004
    6. ' i' → logprob: -16.37571144104004
    7. '	is' → logprob: -16.37571144104004
    8. ' ==' → logprob: -16.75071144104004
    9. '==' → logprob: -16.87571144104004
    10. ')' → logprob: -16.87571144104004

Token 471: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12692894041538239
    2. ' None' → logprob: -2.1269290447235107
    3. ' not' → logprob: -14.12692928314209
    4. 'not' → logprob: -15.87692928314209
    5. '   ' → logprob: -17.126928329467773
    6. '_None' → logprob: -18.126928329467773
    7. 'Not' → logprob: -18.376928329467773
    8. '    ' → logprob: -18.626928329467773
    9. 'none' → logprob: -18.626928329467773
    10. '=None' → logprob: -18.751928329467773

Token 472: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45001962780952454
    2. ':
' → logprob: -1.7000195980072021
    3. ' or' → logprob: -1.9500195980072021
    4. '           ' → logprob: -3.325019598007202
    5. ':return' → logprob: -7.075019836425781
    6. '       ' → logprob: -7.825019836425781
    7. 'or' → logprob: -9.700019836425781
    8. ',' → logprob: -9.700019836425781
    9. '          ' → logprob: -10.825019836425781
    10. '   ' → logprob: -10.825019836425781

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008204689365811646
    2. ' return' → logprob: -7.375820636749268
    3. 'return' → logprob: -9.12582015991211
    4. ' raise' → logprob: -9.75082015991211
    5. 'raise' → logprob: -11.00082015991211
    6. '            ' → logprob: -12.75082015991211
    7. '            
' → logprob: -13.25082015991211
    8. '
' → logprob: -14.00082015991211
    9. ' 
' → logprob: -14.25082015991211
    10. '          ' → logprob: -14.75082015991211

Token 474: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4230588376522064
    2. 'raise' → logprob: -1.4230588674545288
    3. ' raise' → logprob: -2.2980587482452393
    4. 'return' → logprob: -5.923058986663818
    5. ' return' → logprob: -7.923058986663818
    6. '```' → logprob: -9.17305850982666
    7. '	raise' → logprob: -9.42305850982666
    8. '
' → logprob: -9.42305850982666
    9. '            ' → logprob: -9.67305850982666
    10. '               ' → logprob: -9.79805850982666

Token 475: ' Safety' (ID: 25591)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.0551883801817894
    2. 'return' → logprob: -2.9301884174346924
    3. ' raise' → logprob: -8.555188179016113
    4. '       ' → logprob: -9.805188179016113
    5. 'r' → logprob: -10.805188179016113
    6. '#' → logprob: -11.180188179016113
    7. '           ' → logprob: -11.680188179016113
    8. 'rais' → logprob: -12.430188179016113
    9. '```' → logprob: -13.055188179016113
    10. 'raising' → logprob: -13.680188179016113

Token 476: ' check' (ID: 2371)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6601120829582214
    2. '       ' → logprob: -1.4101121425628662
    3. '           ' → logprob: -2.035112142562866
    4. 'return' → logprob: -2.410112142562866
    5. '               ' → logprob: -5.535111904144287
    6. '```' → logprob: -5.535111904144287
    7. ':return' → logprob: -6.535111904144287
    8. ' raise' → logprob: -6.785111904144287
    9. '   ' → logprob: -6.910111904144287
    10. '
' → logprob: -7.035111904144287

Token 477: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008269633166491985
    2. ' return' → logprob: -5.758269786834717
    3. 'return' → logprob: -6.258269786834717
    4. '
' → logprob: -6.883269786834717
    5. '               ' → logprob: -7.008269786834717
    6. 'raise' → logprob: -7.758269786834717
    7. ' raise' → logprob: -8.133269309997559
    8. '       ' → logprob: -9.008269309997559
    9. ':' → logprob: -9.258269309997559
    10. ',' → logprob: -9.383269309997559

Token 478: ' but' (ID: 889)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6399233341217041
    2. 'return' → logprob: -0.8899233341217041
    3. ' raise' → logprob: -3.514923334121704
    4. 'raise' → logprob: -4.014923095703125
    5. '           ' → logprob: -4.264923095703125
    6. '#' → logprob: -9.639923095703125
    7. ' #' → logprob: -10.764923095703125
    8. '       ' → logprob: -11.139923095703125
    9. ' if' → logprob: -11.639923095703125
    10. '	raise' → logprob: -12.264923095703125

Token 479: ' rectangle' (ID: 45808)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.7730614542961121
    2. 'raise' → logprob: -0.7730614542961121
    3. 'return' → logprob: -3.148061513900757
    4. ' return' → logprob: -3.398061513900757
    5. '	raise' → logprob: -8.898061752319336
    6. '       ' → logprob: -9.148061752319336
    7. '           ' → logprob: -9.523061752319336
    8. '
' → logprob: -10.273061752319336
    9. '_raise' → logprob: -10.523061752319336
    10. '```' → logprob: -11.148061752319336

Token 480: ' should' (ID: 1757)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14648683369159698
    2. ' is' → logprob: -2.146486759185791
    3. 'not' → logprob: -5.021486759185791
    4. ':' → logprob: -5.771486759185791
    5. ')' → logprob: -6.271486759185791
    6. ' in' → logprob: -6.896486759185791
    7. '       ' → logprob: -7.271486759185791
    8. ' should' → logprob: -7.396486759185791
    9. ' may' → logprob: -7.896486759185791
    10. '
' → logprob: -8.02148723602295

Token 481: ' always' (ID: 3324)
  Prédit: ' always'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' always' → logprob: -1.0765362977981567
    2. ' not' → logprob: -1.2015362977981567
    3. 'raise' → logprob: -2.326536178588867
    4. 'not' → logprob: -2.451536178588867
    5. 'always' → logprob: -2.576536178588867
    6. ' be' → logprob: -3.201536178588867
    7. ' raise' → logprob: -3.326536178588867
    8. ' never' → logprob: -4.201536178588867
    9. ' only' → logprob: -6.326536178588867
    10. 'never' → logprob: -6.451536178588867

Token 482: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.23370300233364105
    2. ' be' → logprob: -2.3587028980255127
    3. 'not' → logprob: -2.3587028980255127
    4. ' not' → logprob: -4.733703136444092
    5. 'exist' → logprob: -4.733703136444092
    6. 'raise' → logprob: -6.858703136444092
    7. ' exist' → logprob: -7.358703136444092
    8. 'never' → logprob: -11.233702659606934
    9. ' raise' → logprob: -11.233702659606934
    10. ' never' → logprob: -12.358702659606934

Token 483: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43256819248199463
    2. 'found' → logprob: -1.3075681924819946
    3. 'present' → logprob: -3.432568073272705
    4. ' in' → logprob: -3.807568073272705
    5. ' present' → logprob: -4.432568073272705
    6. 'valid' → logprob: -4.807568073272705
    7. ' found' → logprob: -5.307568073272705
    8. ' valid' → logprob: -7.682568073272705
    9. '```' → logprob: -8.557568550109863
    10. 'invalid' → logprob: -9.432568550109863

Token 484: ' map' (ID: 4014)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10215140134096146
    2. 'the' → logprob: -2.477151393890381
    3. ' the' → logprob: -4.602151393890381
    4. ' self' → logprob: -6.352151393890381
    5. 'rect' → logprob: -6.727151393890381
    6. '```' → logprob: -9.477151870727539
    7. 'index' → logprob: -10.227151870727539
    8. 'dict' → logprob: -10.727151870727539
    9. ')' → logprob: -11.727151870727539
    10. 'this' → logprob: -12.602151870727539

Token 485: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17607615888118744
    2. '           ' → logprob: -1.9260761737823486
    3. '
' → logprob: -4.8010759353637695
    4. ' return' → logprob: -5.6760759353637695
    5. 'return' → logprob: -6.6760759353637695
    6. '```' → logprob: -7.3010759353637695
    7. ',' → logprob: -7.4260759353637695
    8. '   ' → logprob: -8.17607593536377
    9. '               ' → logprob: -8.42607593536377
    10. ':
' → logprob: -8.55107593536377

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5360269546508789
    2. '       ' → logprob: -0.9110269546508789
    3. ' return' → logprob: -4.911026954650879
    4. 'return' → logprob: -5.911026954650879
    5. '
' → logprob: -7.036026954650879
    6. ' raise' → logprob: -7.161026954650879
    7. 'raise' → logprob: -7.536026954650879
    8. '   ' → logprob: -8.911026954650879
    9. '```' → logprob: -9.286026954650879
    10. ' if' → logprob: -9.411026954650879

Token 487: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.31400492787361145
    2. 'return' → logprob: -1.314004898071289
    3. ' raise' → logprob: -7.439004898071289
    4. ' return' → logprob: -9.689004898071289
    5. '       ' → logprob: -10.064004898071289
    6. '           ' → logprob: -10.439004898071289
    7. '```' → logprob: -11.189004898071289
    8. '   ' → logprob: -12.564004898071289
    9. 'r' → logprob: -13.939004898071289
    10. 'raising' → logprob: -14.439004898071289

Token 488: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.004154618363827467
    2. ' Value' → logprob: -6.254154682159424
    3. 'Index' → logprob: -6.504154682159424
    4. 'Key' → logprob: -7.254154682159424
    5. 'Lookup' → logprob: -11.004154205322266
    6. ' Key' → logprob: -13.129154205322266
    7. ' Index' → logprob: -14.879154205322266
    8. ' Lookup' → logprob: -16.379154205322266
    9. 'Runtime' → logprob: -17.879154205322266
    10. '(Value' → logprob: -18.129154205322266

Token 489: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.3557529857498594e-05
    2. 'Value' → logprob: -11.25002384185791
    3. 'rror' → logprob: -11.50002384185791
    4. 'Index' → logprob: -15.12502384185791
    5. 'Errors' → logprob: -16.375022888183594
    6. 'alue' → logprob: -17.875022888183594
    7. 'error' → logprob: -18.125022888183594
    8. 'Not' → logprob: -18.375022888183594
    9. 'ror' → logprob: -18.500022888183594
    10. 'SError' → logprob: -18.750022888183594

Token 490: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.016619687899947166
    2. '(f' → logprob: -4.266619682312012
    3. '(' → logprob: -6.016619682312012
    4. '('' → logprob: -11.266619682312012
    5. '(
' → logprob: -14.016619682312012
    6. '       ' → logprob: -14.141619682312012
    7. '           ' → logprob: -14.516619682312012
    8. 'f' → logprob: -15.891619682312012
    9. '("'' → logprob: -16.016620635986328
    10. '"' → logprob: -17.016620635986328

Token 491: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -0.018813248723745346
    2. 'rect' → logprob: -4.268813133239746
    3. '"' → logprob: -6.268813133239746
    4. 'Rect' → logprob: -7.143813133239746
    5. ' Rectangle' → logprob: -7.268813133239746
    6. 'Given' → logprob: -8.018813133239746
    7. 'f' → logprob: -8.143813133239746
    8. 'rectangle' → logprob: -8.518813133239746
    9. 'Requested' → logprob: -9.018813133239746
    10. ' rect' → logprob: -9.393813133239746

Token 492: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0006540587637573481
    2. 'not' → logprob: -8.000654220581055
    3. ' is' → logprob: -8.625654220581055
    4. ')' → logprob: -9.750654220581055
    5. ' (' → logprob: -9.875654220581055
    6. ' )' → logprob: -11.375654220581055
    7. ' does' → logprob: -12.000654220581055
    8. '_not' → logprob: -12.125654220581055
    9. '	not' → logprob: -13.500654220581055
    10. ' Not' → logprob: -14.500654220581055

Token 493: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.0664958506822586
    2. ' in' → logprob: -3.066495895385742
    3. 'found' → logprob: -4.066495895385742
    4. 'in' → logprob: -8.066495895385742
    5. '_found' → logprob: -8.441495895385742
    6. '	found' → logprob: -10.316495895385742
    7. '<|end|>' → logprob: -11.816495895385742
    8. ' recognized' → logprob: -11.816495895385742
    9. ' valid' → logprob: -12.066495895385742
    10. 'Found' → logprob: -12.691495895385742

Token 494: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027999714016914368
    2. '")' → logprob: -3.6529996395111084
    3. 'in' → logprob: -7.4029998779296875
    4. '")
' → logprob: -7.5279998779296875
    5. ')' → logprob: -7.6529998779296875
    6. ' )' → logprob: -10.777999877929688
    7. ')")' → logprob: -10.777999877929688
    8. ')")
' → logprob: -11.152999877929688
    9. ':' → logprob: -12.152999877929688
    10. '")
' → logprob: -12.777999877929688

Token 495: ' ordering' (ID: 30931)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.7266027331352234
    2. ' cache' → logprob: -2.101602792739868
    3. 'cache' → logprob: -2.226602792739868
    4. ' rectangle' → logprob: -2.476602792739868
    5. 'order' → logprob: -3.226602792739868
    6. ' order' → logprob: -3.476602792739868
    7. 'rectangle' → logprob: -3.601602792739868
    8. ' rect' → logprob: -3.976602792739868
    9. 'Rectangle' → logprob: -3.976602792739868
    10. ' Rectangle' → logprob: -3.976602792739868

Token 496: '")
' (ID: 1896)
  Prédit: ')")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")
' → logprob: -0.14389166235923767
    2. '")' → logprob: -2.6438915729522705
    3. ')")' → logprob: -3.1438915729522705
    4. '")
' → logprob: -4.39389181137085
    5. ')' → logprob: -5.39389181137085
    6. '       ' → logprob: -6.26889181137085
    7. '')")
' → logprob: -8.393891334533691
    8. '.")
' → logprob: -8.518891334533691
    9. '")
' → logprob: -8.643891334533691
    10. '.")' → logprob: -8.768891334533691

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007389386650174856
    2. '
' → logprob: -5.132389545440674
    3. '\n' → logprob: -7.257389545440674
    4. '   ' → logprob: -8.382389068603516
    5. '        
' → logprob: -8.382389068603516
    6. '```' → logprob: -9.882389068603516
    7. ' if' → logprob: -10.382389068603516
    8. '    
' → logprob: -10.382389068603516
    9. ' 
' → logprob: -10.507389068603516
    10. '  
' → logprob: -10.632389068603516

Token 498: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5360145568847656
    2. '       ' → logprob: -1.4110145568847656
    3. 'if' (adapté à ' if') → logprob: -1.7860145568847656
    4. 'next' → logprob: -6.161014556884766
    5. ' next' → logprob: -6.911014556884766
    6. 'return' → logprob: -9.411014556884766
    7. 'idx' → logprob: -10.036014556884766
    8. '```' → logprob: -10.036014556884766
    9. 'index' → logprob: -10.661014556884766
    10. 'n' → logprob: -10.661014556884766

Token 499: ' idx' (ID: 14016)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4819723665714264
    2. ' +' → logprob: -0.981972336769104
    3. ' ==' → logprob: -5.2319722175598145
    4. '==' → logprob: -6.2319722175598145
    5. ' <' → logprob: -7.8569722175598145
    6. '<' → logprob: -9.481972694396973
    7. ' >=' → logprob: -9.981972694396973
    8. '   ' → logprob: -11.231972694396973
    9. '>=' → logprob: -11.356972694396973
    10. ' ' → logprob: -12.356972694396973

Token 501: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '   ' → logprob: -18.500911712646484
    4. '```' → logprob: -19.125911712646484
    5. '2' → logprob: -20.875911712646484
    6. '
' → logprob: -20.875911712646484
    7. '+' → logprob: -21.375911712646484
    8. '=' → logprob: -21.750911712646484
    9. '  ' → logprob: -22.125911712646484
    10. '-' → logprob: -22.375911712646484

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '>=' → logprob: -18.875003814697266
    5. '
' → logprob: -19.000003814697266
    6. '```' → logprob: -19.125003814697266
    7. '=' → logprob: -19.625003814697266
    8. '+' → logprob: -19.625003814697266
    9. 'len' → logprob: -20.437503814697266
    10. '[' → logprob: -20.750003814697266

Token 503: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.16058997809886932
    2. '>=' → logprob: -1.9105899333953857
    3. ' ==' → logprob: -8.660590171813965
    4. '==' → logprob: -8.785590171813965
    5. ' <' → logprob: -11.660590171813965
    6. ')>=' → logprob: -11.910590171813965
    7. ']>=' → logprob: -12.035590171813965
    8. '>' → logprob: -12.035590171813965
    9. ' >' → logprob: -12.410590171813965
    10. ')' → logprob: -12.660590171813965

Token 504: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.627176768844947e-05
    2. ' len' → logprob: -9.250096321105957
    3. 'self' → logprob: -16.50009536743164
    4. '=len' → logprob: -18.37509536743164
    5. '   ' → logprob: -18.50009536743164
    6. '(len' → logprob: -19.50009536743164
    7. '	len' → logprob: -19.50009536743164
    8. '[len' → logprob: -20.12509536743164
    9. '<len' → logprob: -21.25009536743164
    10. 'length' → logprob: -21.50009536743164

Token 505: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.619311974034645e-05
    2. 'self' → logprob: -10.875036239624023
    3. '(' → logprob: -11.000036239624023
    4. ' self' → logprob: -14.875036239624023
    5. '(
' → logprob: -16.125036239624023
    6. '[self' → logprob: -17.125036239624023
    7. '=self' → logprob: -18.000036239624023
    8. ' (' → logprob: -18.250036239624023
    9. 's' → logprob: -18.375036239624023
    10. '	self' → logprob: -18.625036239624023

Token 506: '.sorted' (ID: 165009)
  Prédit: '.sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sorted' → logprob: -4.4060561776859686e-05
    2. '.self' → logprob: -10.125043869018555
    3. '.' → logprob: -13.250043869018555
    4. 'sorted' → logprob: -13.750043869018555
    5. '.selected' → logprob: -14.875043869018555
    6. 'self' → logprob: -15.000043869018555
    7. ' .' → logprob: -16.375043869018555
    8. '.s' → logprob: -16.500043869018555
    9. '.saved' → logprob: -16.625043869018555
    10. ').' → logprob: -16.750043869018555

Token 507: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.04059096798300743
    2. '(self' → logprob: -3.41559100151062
    3. 'self' → logprob: -5.290590763092041
    4. '_rectangle' → logprob: -6.540590763092041
    5. '_self' → logprob: -8.2905912399292
    6. 'rect' → logprob: -9.5405912399292
    7. '_Rect' → logprob: -10.6655912399292
    8. ' self' → logprob: -10.7905912399292
    9. '(' → logprob: -11.2905912399292
    10. '(rect' → logprob: -11.5405912399292

Token 508: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0010811600368469954
    2. '_rect' → logprob: -7.5010809898376465
    3. 'rect' → logprob: -8.751081466674805
    4. 's' → logprob: -9.376081466674805
    5. '_angles' → logprob: -9.376081466674805
    6. 'ANGLES' → logprob: -10.001081466674805
    7. 'r' → logprob: -10.376081466674805
    8. 'anges' → logprob: -10.751081466674805
    9. 'angle' → logprob: -10.751081466674805
    10. 'ang' → logprob: -11.126081466674805

Token 509: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5775303244590759
    2. '):
' → logprob: -0.8275303244590759
    3. ':' → logprob: -6.952530384063721
    4. '       ' → logprob: -8.452529907226562
    5. ':
' → logprob: -8.452529907226562
    6. ')' → logprob: -8.702529907226562
    7. '):
' → logprob: -11.327529907226562
    8. ':return' → logprob: -11.452529907226562
    9. '   ' → logprob: -11.952529907226562
    10. '           ' → logprob: -12.577529907226562

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013826489448547363
    2. ' raise' → logprob: -4.763826370239258
    3. 'raise' → logprob: -5.388826370239258
    4. '       ' → logprob: -8.638826370239258
    5. 'return' → logprob: -9.013826370239258
    6. ' return' → logprob: -9.763826370239258
    7. '	raise' → logprob: -9.763826370239258
    8. ':
' → logprob: -10.638826370239258
    9. ',' → logprob: -10.763826370239258
    10. ':' → logprob: -10.888826370239258

Token 511: ' raise' (ID: 9338)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.670815110206604
    2. ' raise' → logprob: -1.295815110206604
    3. 'return' → logprob: -2.1708149909973145
    4. '           ' → logprob: -2.9208149909973145
    5. '
' → logprob: -3.4208149909973145
    6. 'raise' (adapté à ' raise') → logprob: -4.2958149909973145
    7. '       ' → logprob: -7.6708149909973145
    8. ' 
' → logprob: -9.420815467834473
    9. '	raise' → logprob: -9.795815467834473
    10. '```' → logprob: -10.545815467834473

Token 512: ' Value' (ID: 9963)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.1830446869134903
    2. 'Index' → logprob: -2.433044672012329
    3. ' Stop' → logprob: -3.183044672012329
    4. 'Value' → logprob: -3.433044672012329
    5. ' Index' → logprob: -5.683044910430908
    6. ' Value' → logprob: -6.058044910430908
    7. 'EOF' → logprob: -12.93304443359375
    8. ' ' → logprob: -13.05804443359375
    9. 'Overflow' → logprob: -13.05804443359375
    10. '   ' → logprob: -14.05804443359375

Token 513: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.17978903651237488
    2. 'rror' → logprob: -1.8047890663146973
    3. 'ror' → logprob: -10.679788589477539
    4. 'error' → logprob: -11.929788589477539
    5. 'SError' → logprob: -12.054788589477539
    6. '       ' → logprob: -13.179788589477539
    7. '   ' → logprob: -13.304788589477539
    8. 'ption' → logprob: -14.179788589477539
    9. '           ' → logprob: -14.679788589477539
    10. '```' → logprob: -14.679788589477539

Token 514: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.375001907348633
    3. '(f' → logprob: -16.250001907348633
    4. '('' → logprob: -16.875001907348633
    5. '("'' → logprob: -19.000001907348633
    6. '(
' → logprob: -19.625001907348633
    7. '("_' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.750001907348633
    9. '("")' → logprob: -20.875001907348633
    10. '"' → logprob: -20.875001907348633

Token 515: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.19052621722221375
    2. '"No' → logprob: -2.315526247024536
    3. ' No' → logprob: -2.940526247024536
    4. '"' → logprob: -3.940526247024536
    5. 'Reached' → logprob: -7.315526008605957
    6. 'Already' → logprob: -7.440526008605957
    7. 'There' → logprob: -8.565526008605957
    8. 'Next' → logprob: -8.815526008605957
    9. ' no' → logprob: -8.815526008605957
    10. ' "' → logprob: -9.315526008605957

Token 516: ' larger' (ID: 12384)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.022676590830087662
    2. 'next' → logprob: -4.022676467895508
    3. ' more' → logprob: -5.522676467895508
    4. ' further' → logprob: -8.022676467895508
    5. 'Next' → logprob: -10.397676467895508
    6. '	next' → logprob: -10.397676467895508
    7. ' larger' → logprob: -10.647676467895508
    8. 'more' → logprob: -10.897676467895508
    9. '(next' → logprob: -11.022676467895508
    10. '_next' → logprob: -11.147676467895508

Token 517: ' rectangle' (ID: 45808)
  Prédit: ' rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangle' → logprob: -0.015723925083875656
    2. ' integral' → logprob: -4.765723705291748
    3. ' Integral' → logprob: -5.890723705291748
    4. 'rectangle' → logprob: -6.015723705291748
    5. 'Integral' → logprob: -7.015723705291748
    6. ' rectangles' → logprob: -8.015724182128906
    7. ' rectangular' → logprob: -8.265724182128906
    8. ' wide' → logprob: -8.765724182128906
    9. '_rectangle' → logprob: -9.140724182128906
    10. 'Rectangle' → logprob: -10.640724182128906

Token 518: ' available' (ID: 2839)
  Prédit: ' available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' available' → logprob: -0.08893729001283646
    2. ' exists' → logprob: -2.588937282562256
    3. '")' → logprob: -5.338937282562256
    4. 'available' → logprob: -5.588937282562256
    5. ' after' → logprob: -7.588937282562256
    6. ' is' → logprob: -7.713937282562256
    7. 'exists' → logprob: -9.088937759399414
    8. ' next' → logprob: -9.213937759399414
    9. ' in' → logprob: -9.713937759399414
    10. ')' → logprob: -9.838937759399414

Token 519: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.04712802916765213
    2. '")' → logprob: -3.5471279621124268
    3. ')")
' → logprob: -4.172128200531006
    4. '       ' → logprob: -6.922128200531006
    5. '.")
' → logprob: -7.922128200531006
    6. ')' → logprob: -8.922127723693848
    7. ')")' → logprob: -9.047127723693848
    8. ' for' → logprob: -9.172127723693848
    9. ')
' → logprob: -10.297127723693848
    10. '")
' → logprob: -10.797127723693848

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12832854688167572
    2. '
' → logprob: -2.128328561782837
    3. 'return' → logprob: -7.378328323364258
    4. '        
' → logprob: -8.503328323364258
    5. ' return' → logprob: -8.503328323364258
    6. '
' → logprob: -9.253328323364258
    7. '	' → logprob: -9.253328323364258
    8. '  
' → logprob: -10.003328323364258
    9. '    
' → logprob: -10.628328323364258
    10. '```' → logprob: -10.878328323364258

Token 521: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9456868767738342
    2. '
' → logprob: -1.4456868171691895
    3. 'return' (adapté à ' return') → logprob: -1.4456868171691895
    4. ' return' → logprob: -2.5706868171691895
    5. ' 
' → logprob: -3.3206868171691895
    6. '        
' → logprob: -3.8206868171691895
    7. '  
' → logprob: -5.5706868171691895
    8. '    
' → logprob: -7.1956868171691895
    9. '<|end|>' → logprob: -8.445687294006348
    10. '   ' → logprob: -8.820687294006348

Token 522: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3868713080883026
    2. 'self' → logprob: -1.136871337890625
    3. '	self' → logprob: -15.886871337890625
    4. '(self' → logprob: -16.761871337890625
    5. '[self' → logprob: -17.886871337890625
    6. ' ' → logprob: -18.886871337890625
    7. '```' → logprob: -19.261871337890625
    8. '       ' → logprob: -19.511871337890625
    9. 'Self' → logprob: -19.761871337890625
    10. '=self' → logprob: -19.761871337890625

Token 523: '.sorted' (ID: 165009)
  Prédit: '.sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sorted' → logprob: -0.00017970333283301443
    2. '.' → logprob: -8.750179290771484
    3. 'sorted' → logprob: -11.875179290771484
    4. ' .' → logprob: -12.250179290771484
    5. '_sorted' → logprob: -12.500179290771484
    6. '._' → logprob: -13.250179290771484
    7. '_.' → logprob: -13.375179290771484
    8. '.next' → logprob: -15.000179290771484
    9. '.serial' → logprob: -15.125179290771484
    10. '.s' → logprob: -15.250179290771484

Token 524: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0001769616355886683
    2. 'rect' → logprob: -8.750177383422852
    3. '_rectangle' → logprob: -11.000177383422852
    4. 'Rect' → logprob: -14.000177383422852
    5. '_Rect' → logprob: -14.250177383422852
    6. '_' → logprob: -16.62517738342285
    7. '_RECT' → logprob: -17.25017738342285
    8. 'rectangle' → logprob: -17.37517738342285
    9. '(rect' → logprob: -18.25017738342285
    10. 'Rectangle' → logprob: -18.50017738342285

Token 525: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -3.3213025744771585e-05
    2. '_angles' → logprob: -10.375033378601074
    3. 'angle' → logprob: -14.000033378601074
    4. 'ANGLES' → logprob: -14.500033378601074
    5. 'ang' → logprob: -15.625033378601074
    6. 'anges' → logprob: -15.750033378601074
    7. 's' → logprob: -16.000032424926758
    8. ' angles' → logprob: -17.125032424926758
    9. '_angle' → logprob: -17.375032424926758
    10. 'angular' → logprob: -17.625032424926758

Token 526: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00023238400171976537
    2. '[' → logprob: -8.375232696533203
    3. '[
' → logprob: -14.250232696533203
    4. ' [' → logprob: -14.750232696533203
    5. '```' → logprob: -14.750232696533203
    6. 'idx' → logprob: -16.750232696533203
    7. '[id' → logprob: -16.750232696533203
    8. '[index' → logprob: -16.750232696533203
    9. '   ' → logprob: -17.125232696533203
    10. ' idx' → logprob: -17.375232696533203

Token 527: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815006136894226
    2. ' +' → logprob: -4.0181498527526855
    3. '+
' → logprob: -16.518150329589844
    4. '＋' → logprob: -17.268150329589844
    5. '+i' → logprob: -17.768150329589844
    6. ']+' → logprob: -18.518150329589844
    7. '1' → logprob: -18.768150329589844
    8. '   ' → logprob: -19.143150329589844
    9. ' plus' → logprob: -19.268150329589844
    10. '+[' → logprob: -19.518150329589844

Token 528: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.250001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '  ' → logprob: -21.875001907348633
    6. '`' → logprob: -22.250001907348633
    7. '１' → logprob: -22.375001907348633
    8. '2' → logprob: -22.375001907348633
    9. '۱' → logprob: -22.875001907348633
    10. '
' → logprob: -23.000001907348633

Token 529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -20.375
    5. '0' → logprob: -22.625
    6. '2' → logprob: -23.125
    7. '
' → logprob: -23.125
    8. '１' → logprob: -23.25
    9. '۱' → logprob: -23.25
    10. '`' → logprob: -24.0

Token 530: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00025001514586620033
    2. ')' → logprob: -9.250249862670898
    3. ' ]' → logprob: -9.250249862670898
    4. '<|end|>' → logprob: -10.375249862670898
    5. ']
' → logprob: -11.125249862670898
    6. ')]' → logprob: -12.500249862670898
    7. '}' → logprob: -12.625249862670898
    8. '       ' → logprob: -13.875249862670898
    9. ']()' → logprob: -14.250249862670898
    10. '()]' → logprob: -14.500249862670898

Token 531: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' Problem' (ID: 26113)
  Prédit: ' Integral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Integral' → logprob: -0.9734911918640137
    2. ' Rectangle' → logprob: -1.3484911918640137
    3. 'Integral' → logprob: -1.7234911918640137
    4. 'Rectangle' → logprob: -2.4734911918640137
    5. ' Square' → logprob: -3.2234911918640137
    6. 'Square' → logprob: -3.3484911918640137
    7. ' Rect' → logprob: -5.723491191864014
    8. ' Solution' → logprob: -5.848491191864014
    9. 'Solution' → logprob: -6.223491191864014
    10. 'Rect' → logprob: -6.348491191864014

Token 533: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1408507376909256
    2. ':
' → logprob: -2.265850782394409
    3. '(' → logprob: -4.76585054397583
    4. 'Solver' → logprob: -5.01585054397583
    5. 'Solution' → logprob: -5.64085054397583
    6. '():' → logprob: -6.51585054397583
    7. '(Rect' → logprob: -6.89085054397583
    8. '<|end|>' → logprob: -7.01585054397583
    9. '{' → logprob: -7.14085054397583
    10. 'Statement' → logprob: -7.26585054397583

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28509363532066345
    2. ':
' → logprob: -1.4100936651229858
    3. '   ' → logprob: -5.910093784332275
    4. '<|end|>' → logprob: -7.160093784332275
    5. '(' → logprob: -9.535093307495117
    6. '<|end|>' → logprob: -9.660093307495117
    7. '):
' → logprob: -10.035093307495117
    8. '():
' → logprob: -10.285093307495117
    9. '():' → logprob: -10.535093307495117
    10. ':def' → logprob: -10.535093307495117

Token 535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008981237770058215
    2. ' def' → logprob: -7.125898361206055
    3. 'def' → logprob: -9.750898361206055
    4. ' class' → logprob: -11.375898361206055
    5. 'class' → logprob: -11.500898361206055
    6. '    
' → logprob: -11.875898361206055
    7. '```' → logprob: -12.750898361206055
    8. '<|end|>' → logprob: -13.750898361206055
    9. '
' → logprob: -14.125898361206055
    10. ':' → logprob: -14.250898361206055

Token 536: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04548666253685951
    2. 'def' (adapté à ' def') → logprob: -3.1704866886138916
    3. '   ' → logprob: -6.0454864501953125
    4. 'class' → logprob: -9.170486450195312
    5. ' class' → logprob: -12.045486450195312
    6. '```' → logprob: -12.545486450195312
    7. '    ' → logprob: -13.795486450195312
    8. '	def' → logprob: -14.420486450195312
    9. '
' → logprob: -15.295486450195312
    10. 'de' → logprob: -16.170486450195312

Token 537: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7951952815055847
    2. '__' → logprob: -1.2951953411102295
    3. 'def' → logprob: -1.6701953411102295
    4. 'init' → logprob: -3.1701953411102295
    5. ' def' → logprob: -3.4201953411102295
    6. '_init' → logprob: -5.17019510269165
    7. ' init' → logprob: -6.04519510269165
    8. '___' → logprob: -6.17019510269165
    9. '_' → logprob: -7.29519510269165
    10. ' solve' → logprob: -8.045195579528809

Token 538: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.004278784617781639
    2. '__' → logprob: -5.629278659820557
    3. 'Init' → logprob: -8.629279136657715
    4. 'def' → logprob: -8.629279136657715
    5. 'int' → logprob: -9.254279136657715
    6. ' init' → logprob: -9.379279136657715
    7. '_init' → logprob: -10.129279136657715
    8. '(init' → logprob: -10.379279136657715
    9. '```' → logprob: -11.254279136657715
    10. '   ' → logprob: -11.254279136657715

Token 539: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.39642637968063354
    2. '(self' → logprob: -1.1464264392852783
    3. ' (' → logprob: -5.021426200866699
    4. '(' → logprob: -6.396426200866699
    5. 'self' → logprob: -7.896426200866699
    6. '_(' → logprob: -8.0214262008667
    7. '__(
' → logprob: -8.7714262008667
    8. '__' → logprob: -8.8964262008667
    9. '   ' → logprob: -9.1464262008667
    10. ',' → logprob: -10.3964262008667

Token 540: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007117166533134878
    2. ' self' → logprob: -7.250711917877197
    3. '   ' → logprob: -14.625711441040039
    4. ',' → logprob: -14.750711441040039
    5. '(self' → logprob: -15.125711441040039
    6. 'max' → logprob: -15.125711441040039
    7. ')' → logprob: -15.250711441040039
    8. '
' → logprob: -17.12571144104004
    9. 'def' → logprob: -17.37571144104004
    10. ')(' → logprob: -17.62571144104004

Token 541: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003299389500170946
    2. 'self' → logprob: -6.003299236297607
    3. ' ,' → logprob: -7.503299236297607
    4. '(self' → logprob: -8.378299713134766
    5. '   ' → logprob: -11.503299713134766
    6. ' (' → logprob: -11.628299713134766
    7. ',self' → logprob: -11.628299713134766
    8. '):' → logprob: -12.628299713134766
    9. '(' → logprob: -13.003299713134766
    10. ',
' → logprob: -13.878299713134766

Token 542: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00975998304784298
    2. '       ' → logprob: -5.259759902954102
    3. ' self' → logprob: -5.634759902954102
    4. '   ' → logprob: -7.009759902954102
    5. '(self' → logprob: -10.259759902954102
    6. '           ' → logprob: -13.384759902954102
    7. ' ' → logprob: -13.884759902954102
    8. 'def' → logprob: -14.134759902954102
    9. ' (' → logprob: -14.259759902954102
    10. '(' → logprob: -14.384759902954102

Token 543: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.036456067115068436
    2. ' self' → logprob: -3.4114561080932617
    3. '       ' → logprob: -6.161456108093262
    4. 'def' → logprob: -7.411456108093262
    5. 'pass' → logprob: -10.286456108093262
    6. '   ' → logprob: -10.661456108093262
    7. ' def' → logprob: -10.786456108093262
    8. '
' → logprob: -12.661456108093262
    9. ' pass' → logprob: -12.911456108093262
    10. '        
' → logprob: -13.286456108093262

Token 544: '.order' (ID: 25549)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6424251198768616
    2. '=' → logprob: -2.392425060272217
    3. '.order' → logprob: -2.392425060272217
    4. '_order' → logprob: -2.642425060272217
    5. '.rectangle' → logprob: -2.767425060272217
    6. 'rect' → logprob: -3.267425060272217
    7. '_rectangle' → logprob: -3.267425060272217
    8. '.rect' → logprob: -3.642425060272217
    9. 'order' → logprob: -3.642425060272217
    10. 'rectangle' → logprob: -4.392425060272217

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004687868524342775
    2. '=' → logprob: -5.379687786102295
    3. 's' → logprob: -9.629688262939453
    4. ' ' → logprob: -14.379688262939453
    5. 'er' → logprob: -14.504688262939453
    6. '   ' → logprob: -15.004688262939453
    7. '_' → logprob: -15.504688262939453
    8. ' =
' → logprob: -16.254688262939453
    9. 'ing' → logprob: -16.379688262939453
    10. '_map' → logprob: -16.504688262939453

Token 546: ' Rectangle' (ID: 38728)
  Prédit: ' Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rectangle' → logprob: -0.5759395360946655
    2. 'Rectangle' → logprob: -0.8259395360946655
    3. 'Rect' → logprob: -16.200939178466797
    4. '(Rect' → logprob: -18.325939178466797
    5. '.Rectangle' → logprob: -18.450939178466797
    6. '_rectangle' → logprob: -18.700939178466797
    7. ' rectangle' → logprob: -19.825939178466797
    8. '   ' → logprob: -19.950939178466797
    9. ' Rect' → logprob: -19.950939178466797
    10. '_Rect' → logprob: -20.950939178466797

Token 547: 'Order' (ID: 4861)
  Prédit: 'Order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Order' → logprob: -3.128163257315464e-07
    2. 'order' → logprob: -16.0
    3. '_order' → logprob: -16.875
    4. 'O' → logprob: -17.375
    5. '	Order' → logprob: -18.5
    6. ' order' → logprob: -19.125
    7. '_Order' → logprob: -19.125
    8. 'Or' → logprob: -19.25
    9. ' Order' → logprob: -19.25
    10. 'Ordering' → logprob: -19.75

Token 548: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006449493113905191
    2. '
' → logprob: -5.2564496994018555
    3. 'def' → logprob: -6.8814496994018555
    4. '    
' → logprob: -9.006449699401855
    5. '<|end|>' → logprob: -10.506449699401855
    6. ' def' → logprob: -10.631449699401855
    7. '```' → logprob: -12.631449699401855
    8. '<|end|>' → logprob: -12.881449699401855
    9. '       ' → logprob: -13.006449699401855
    10. '	def' → logprob: -13.631449699401855

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039453767240047455
    2. 'def' → logprob: -3.4144537448883057
    3. ' def' → logprob: -5.289453983306885
    4. '```' → logprob: -7.539453983306885
    5. '
' → logprob: -8.914453506469727
    6. '    
' → logprob: -9.664453506469727
    7. ' ' → logprob: -12.414453506469727
    8. '`' → logprob: -13.164453506469727
    9. '``' → logprob: -13.289453506469727
    10. '        
' → logprob: -13.289453506469727

Token 550: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.896309739408025e-07
    2. ' def' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.25
    4. 'from' → logprob: -21.75
    5. 'de' → logprob: -22.375
    6. '
' → logprob: -22.5
    7. '	def' → logprob: -23.125
    8. '```' → logprob: -23.5
    9. 'class' → logprob: -23.875
    10. 'import' → logprob: -24.0

Token 551: ' parse' (ID: 8420)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.38657379150390625
    2. 'next' → logprob: -2.1365737915039062
    3. ' find' → logprob: -2.7615737915039062
    4. ' solve' → logprob: -2.8865737915039062
    5. ' get' → logprob: -3.2615737915039062
    6. 'solve' → logprob: -3.5115737915039062
    7. 'find' → logprob: -4.636573791503906
    8. 'get' → logprob: -5.761573791503906
    9. '_next' → logprob: -6.886573791503906
    10. ' def' → logprob: -8.511573791503906

Token 552: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7232206463813782
    2. '(' → logprob: -1.5982205867767334
    3. '_input' → logprob: -1.9732205867767334
    4. '_rectangle' → logprob: -2.5982205867767334
    5. '_line' → logprob: -3.2232205867767334
    6. 'self' → logprob: -3.8482205867767334
    7. '_' → logprob: -4.2232208251953125
    8. ' self' → logprob: -4.4732208251953125
    9. '_rect' → logprob: -5.3482208251953125
    10. ' (' → logprob: -6.2232208251953125

Token 553: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.527327835559845
    2. '(self' → logprob: -0.902327835559845
    3. 'self' → logprob: -6.277328014373779
    4. ' (' → logprob: -6.527328014373779
    5. '_line' → logprob: -7.277328014373779
    6. '(
' → logprob: -10.152327537536621
    7. '_' → logprob: -10.277327537536621
    8. 'line' → logprob: -10.902327537536621
    9. 's' → logprob: -11.277327537536621
    10. '(line' → logprob: -11.402327537536621

Token 554: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006831994745880365
    2. '(' → logprob: -5.006832122802734
    3. ' (' → logprob: -9.256832122802734
    4. '(line' → logprob: -11.631832122802734
    5. '(s' → logprob: -11.631832122802734
    6. 'self' → logprob: -13.381832122802734
    7. '(
' → logprob: -13.506832122802734
    8. '(Self' → logprob: -15.881832122802734
    9. ' self' → logprob: -16.381832122802734
    10. '   ' → logprob: -16.381832122802734

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003732618410140276
    2. ' ,' → logprob: -6.003732681274414
    3. 'self' → logprob: -6.753732681274414
    4. ',line' → logprob: -9.878732681274414
    5. 's' → logprob: -11.878732681274414
    6. '       ' → logprob: -11.878732681274414
    7. ')' → logprob: -12.003732681274414
    8. '   ' → logprob: -12.128732681274414
    9. ',s' → logprob: -12.253732681274414
    10. ',self' → logprob: -13.253732681274414

Token 556: ' line' (ID: 2543)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04285244643688202
    2. ' self' → logprob: -3.7928524017333984
    3. 'line' → logprob: -4.042852401733398
    4. ' line' → logprob: -6.292852401733398
    5. 's' → logprob: -11.667852401733398
    6. 'input' → logprob: -12.417852401733398
    7. ')' → logprob: -12.917852401733398
    8. ' s' → logprob: -13.292852401733398
    9. '   ' → logprob: -13.917852401733398
    10. '       ' → logprob: -14.792852401733398

Token 557: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004417297895997763
    2. '):' → logprob: -6.004417419433594
    3. 'self' → logprob: -7.379417419433594
    4. ')' → logprob: -7.379417419433594
    5. ',' → logprob: -8.629417419433594
    6. ':str' → logprob: -9.129417419433594
    7. ' :' → logprob: -9.254417419433594
    8. '):
' → logprob: -9.254417419433594
    9. '   ' → logprob: -9.504417419433594
    10. '       ' → logprob: -9.504417419433594

Token 558: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.2572605013847351
    2. ' str' → logprob: -1.5072605609893799
    3. ')' → logprob: -5.257260322570801
    4. '[str' → logprob: -10.6322603225708
    5. 'self' → logprob: -10.7572603225708
    6. ':str' → logprob: -11.0072603225708
    7. '   ' → logprob: -11.1322603225708
    8. '):
' → logprob: -11.3822603225708
    9. ' )' → logprob: -12.5072603225708
    10. '=str' → logprob: -12.5072603225708

Token 559: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 560: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.5547888875007629
    2. ' ->' → logprob: -1.0547888278961182
    3. ')' → logprob: -3.804788827896118
    4. ':' → logprob: -3.929788827896118
    5. '       ' → logprob: -4.054789066314697
    6. ')->' → logprob: -4.304789066314697
    7. '(self' → logprob: -6.429789066314697
    8. '()->' → logprob: -6.554789066314697
    9. '   ' → logprob: -7.554789066314697
    10. '):
' → logprob: -8.179788589477539

Token 561: ' Integral' (ID: 121125)
  Prédit: 'Integral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integral' → logprob: -0.010271970182657242
    2. 'tuple' → logprob: -4.760272026062012
    3. ' Integral' → logprob: -7.510272026062012
    4. 'Tuple' → logprob: -7.760272026062012
    5. 'list' → logprob: -8.260272026062012
    6. 'Optional' → logprob: -9.010272026062012
    7. ' tuple' → logprob: -9.510272026062012
    8. 'str' → logprob: -9.510272026062012
    9. 'Integrated' → logprob: -10.385272026062012
    10. '(' → logprob: -10.510272026062012

Token 562: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -9.088346359931165e-07
    2. 'Rect' → logprob: -14.250000953674316
    3. '_rectangle' → logprob: -16.375
    4. '.Rectangle' → logprob: -17.25
    5. ' Rectangle' → logprob: -17.375
    6. '_Rect' → logprob: -18.375
    7. 'rectangle' → logprob: -18.75
    8. '   ' → logprob: -19.375
    9. '       ' → logprob: -19.5
    10. '(Rect' → logprob: -19.625

Token 563: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7049144506454468
    2. ':' → logprob: -1.0799144506454468
    3. ':
' → logprob: -2.4549145698547363
    4. '(self' → logprob: -2.9549145698547363
    5. '):
' → logprob: -4.829914569854736
    6. '(' → logprob: -5.329914569854736
    7. '():
' → logprob: -6.204914569854736
    8. '   ' → logprob: -6.204914569854736
    9. '<|end|>' → logprob: -6.204914569854736
    10. ',' → logprob: -6.704914569854736

Token 564: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3136875033378601
    2. ' None' → logprob: -1.3136875629425049
    3. '   ' → logprob: -8.188687324523926
    4. ' ' → logprob: -9.563687324523926
    5. 'Value' → logprob: -10.188687324523926
    6. ' Value' → logprob: -11.063687324523926
    7. '  ' → logprob: -11.688687324523926
    8. 'int' → logprob: -12.188687324523926
    9. ' str' → logprob: -13.188687324523926
    10. '(None' → logprob: -13.188687324523926

Token 565: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04352010414004326
    2. ':
' → logprob: -3.168520212173462
    3. '):
' → logprob: -8.543519973754883
    4. '       ' → logprob: -8.668519973754883
    5. '   ' → logprob: -9.543519973754883
    6. '):' → logprob: -10.043519973754883
    7. '():
' → logprob: -11.543519973754883
    8. ',' → logprob: -12.043519973754883
    9. '<|end|>' → logprob: -12.043519973754883
    10. '{' → logprob: -12.168519973754883

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013933307491242886
    2. ' if' → logprob: -7.2513933181762695
    3. 'if' → logprob: -7.7513933181762695
    4. 'try' → logprob: -8.87639331817627
    5. '   ' → logprob: -10.00139331817627
    6. ' line' → logprob: -10.75139331817627
    7. 'tokens' → logprob: -11.00139331817627
    8. '```' → logprob: -11.75139331817627
    9. ' try' → logprob: -12.00139331817627
    10. 'line' → logprob: -12.37639331817627

Token 567: ' h' (ID: 312)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.40408971905708313
    2. 'parts' → logprob: -2.1540896892547607
    3. 'if' → logprob: -2.2790896892547607
    4. '       ' → logprob: -2.9040896892547607
    5. ' line' → logprob: -3.6540896892547607
    6. 'try' → logprob: -3.9040896892547607
    7. ' parts' → logprob: -5.27908992767334
    8. ' if' → logprob: -5.40408992767334
    9. 'tokens' → logprob: -5.77908992767334
    10. 'strip' → logprob: -9.40408992767334

Token 568: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18231052160263062
    2. ',w' → logprob: -1.8073105812072754
    3. ',width' → logprob: -6.432310581207275
    4. '_w' → logprob: -8.557310104370117
    5. ' ,' → logprob: -8.557310104370117
    6. ',int' → logprob: -8.682310104370117
    7. 'w' → logprob: -9.682310104370117
    8. '_str' → logprob: -9.932310104370117
    9. 'idth' → logprob: -10.057310104370117
    10. '_width' → logprob: -10.307310104370117

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5093824863433838
    2. '=' → logprob: -1.0093824863433838
    3. ' =' → logprob: -3.384382486343384
    4. ' ,' → logprob: -7.884382247924805
    5. ',h' → logprob: -8.384382247924805
    6. '       ' → logprob: -9.759382247924805
    7. '   ' → logprob: -9.884382247924805
    8. ',int' → logprob: -11.509382247924805
    9. 's' → logprob: -11.884382247924805
    10. ',
' → logprob: -12.384382247924805

Token 570: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6931478977203369
    2. ' w' → logprob: -0.6931478977203369
    3. '	w' → logprob: -15.193147659301758
    4. '_w' → logprob: -15.818147659301758
    5. ' ' → logprob: -15.943147659301758
    6. ' 
' → logprob: -16.318147659301758
    7. 's' → logprob: -17.068147659301758
    8. '=w' → logprob: -17.193147659301758
    9. ' s' → logprob: -17.443147659301758
    10. '_' → logprob: -17.443147659301758

Token 571: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026418033987283707
    2. ' =' → logprob: -3.6514179706573486
    3. '_str' → logprob: -9.27641773223877
    4. ',' → logprob: -10.90141773223877
    5. '_' → logprob: -13.02641773223877
    6. 'str' → logprob: -14.40141773223877
    7. '=str' → logprob: -14.52641773223877
    8. '=line' → logprob: -14.77641773223877
    9. '_=' → logprob: -15.02641773223877
    10. ')' → logprob: -15.40141773223877

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132631182670593
    2. ' =' → logprob: -1.313263177871704
    3. '=line' → logprob: -13.688262939453125
    4. ',' → logprob: -16.563262939453125
    5. '=int' → logprob: -16.688262939453125
    6. '＝' → logprob: -17.813262939453125
    7. ' ' → logprob: -18.313262939453125
    8. '=
' → logprob: -18.438262939453125
    9. '<|end|>' → logprob: -18.938262939453125
    10. '=input' → logprob: -18.938262939453125

Token 573: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015023599844425917
    2. ' line' → logprob: -6.501502513885498
    3. '	line' → logprob: -18.876502990722656
    4. '=line' → logprob: -19.251502990722656
    5. '(line' → logprob: -19.501502990722656
    6. '[line' → logprob: -19.751502990722656
    7. '_line' → logprob: -21.501502990722656
    8. 'map' → logprob: -22.376502990722656
    9. 'Line' → logprob: -23.001502990722656
    10. '#line' → logprob: -23.126502990722656

Token 574: '.strip' (ID: 40613)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0022154422476887703
    2. ' =' → logprob: -6.127215385437012
    3. '.' → logprob: -10.877215385437012
    4. '=line' → logprob: -12.002215385437012
    5. '.strip' → logprob: -12.752215385437012
    6. '.split' → logprob: -13.627215385437012
    7. '.=' → logprob: -13.752215385437012
    8. '=
' → logprob: -16.627216339111328
    9. '   ' → logprob: -16.877216339111328
    10. '＝' → logprob: -17.252216339111328

Token 575: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010473522706888616
    2. '()' → logprob: -9.375104904174805
    3. '(' → logprob: -11.625104904174805
    4. '('' → logprob: -12.625104904174805
    5. '.split' → logprob: -13.125104904174805
    6. '('='' → logprob: -13.750104904174805
    7. ' ().' → logprob: -13.875104904174805
    8. 'split' → logprob: -14.000104904174805
    9. '.' → logprob: -14.125104904174805
    10. '=' → logprob: -14.250104904174805

Token 576: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.25
    3. 'spl' → logprob: -18.625
    4. 'strip' → logprob: -18.875
    5. '(split' → logprob: -19.5
    6. 'partition' → logprob: -20.0
    7. '.split' → logprob: -20.25
    8. 'rstrip' → logprob: -22.25
    9. 's' → logprob: -23.375
    10. 'sp' → logprob: -23.5

Token 577: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008207073551602662
    2. '('' → logprob: -7.375820636749268
    3. '(' → logprob: -9.250821113586426
    4. '()
' → logprob: -9.750821113586426
    5. ''' → logprob: -10.375821113586426
    6. '("' → logprob: -13.500821113586426
    7. '(',' → logprob: -13.875821113586426
    8. '(),' → logprob: -14.375821113586426
    9. '();' → logprob: -14.375821113586426
    10. '())' → logprob: -14.500821113586426

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07163301855325699
    2. '        
' → logprob: -3.3216331005096436
    3. '
' → logprob: -4.5716328620910645
    4. '<|end|>' → logprob: -4.8216328620910645
    5. ',' → logprob: -5.4466328620910645
    6. '        ' → logprob: -5.6966328620910645
    7. ' ' → logprob: -6.3216328620910645
    8. ' 
' → logprob: -7.3216328620910645
    9. ')' → logprob: -7.5716328620910645
    10. 'if' → logprob: -8.071633338928223

Token 579: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -9.782141569303349e-05
    2. ' h' → logprob: -10.00009822845459
    3. 'height' → logprob: -10.37509822845459
    4. 'try' → logprob: -11.37509822845459
    5. 'if' → logprob: -12.25009822845459
    6. '       ' → logprob: -13.00009822845459
    7. 'return' → logprob: -13.50009822845459
    8. '```' → logprob: -14.50009822845459
    9. '        
' → logprob: -15.00009822845459
    10. '
' → logprob: -15.62509822845459

Token 580: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026123205199837685
    2. ' =' → logprob: -4.026123046875
    3. ',' → logprob: -5.151123046875
    4. '=int' → logprob: -6.151123046875
    5. ',h' → logprob: -11.901123046875
    6. 'int' → logprob: -12.401123046875
    7. '=
' → logprob: -13.526123046875
    8. ',int' → logprob: -13.651123046875
    9. '<|end|>' → logprob: -13.776123046875
    10. '   ' → logprob: -14.401123046875

Token 581: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.2014162540435791
    2. 'w' → logprob: -1.701416254043579
    3. 'int' → logprob: -12.826416015625
    4. ' ' → logprob: -15.576416015625
    5. ' int' → logprob: -16.201416015625
    6. ' ' → logprob: -17.951416015625
    7. '    ' → logprob: -18.201416015625
    8. '   ' → logprob: -18.951416015625
    9. ' =' → logprob: -19.076416015625
    10. '=' → logprob: -19.076416015625

Token 582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327322125434875
    2. ' =' → logprob: -1.3132731914520264
    3. '=int' → logprob: -11.438273429870605
    4. ',' → logprob: -15.188273429870605
    5. '=
' → logprob: -15.813273429870605
    6. '<|end|>' → logprob: -16.43827247619629
    7. ' ' → logprob: -16.56327247619629
    8. 'int' → logprob: -16.68827247619629
    9. '＝' → logprob: -16.81327247619629
    10. ' =
' → logprob: -17.31327247619629

Token 583: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.5491004129871726e-05
    2. ' int' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.250045776367188
    4. 'map' → logprob: -19.375045776367188
    5. '[int' → logprob: -19.625045776367188
    6. '(int' → logprob: -21.625045776367188
    7. '  ' → logprob: -22.000045776367188
    8. '=int' → logprob: -22.375045776367188
    9. ' ' → logprob: -22.625045776367188
    10. '<int' → logprob: -22.750045776367188

Token 584: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.392202976712724e-06
    2. 'h' → logprob: -12.000006675720215
    3. '(' → logprob: -15.875006675720215
    4. '(w' → logprob: -18.6250057220459
    5. '	h' → logprob: -20.1250057220459
    6. ' h' → logprob: -20.2500057220459
    7. ' (' → logprob: -20.7500057220459
    8. '(
' → logprob: -21.3750057220459
    9. ' ' → logprob: -22.3750057220459
    10. '   ' → logprob: -22.3750057220459

Token 585: '_str' (ID: 6182)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0002210596576333046
    2. '(w' → logprob: -9.500221252441406
    3. 'h' → logprob: -9.750221252441406
    4. ')' → logprob: -10.625221252441406
    5. '),' → logprob: -10.750221252441406
    6. '(' → logprob: -11.250221252441406
    7. ',h' → logprob: -11.625221252441406
    8. ',' → logprob: -11.750221252441406
    9. ')(' → logprob: -12.125221252441406
    10. ' (' → logprob: -12.625221252441406

Token 586: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5773710608482361
    2. ',' → logprob: -0.8273710608482361
    3. ')' → logprob: -6.702371120452881
    4. ',w' → logprob: -9.077370643615723
    5. ' ,' → logprob: -10.202370643615723
    6. 'w' → logprob: -10.827370643615723
    7. '),(' → logprob: -11.827370643615723
    8. ' ),' → logprob: -11.952370643615723
    9. ',),' → logprob: -12.452370643615723
    10. '=' → logprob: -13.202370643615723

Token 587: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00671809446066618
    2. ' int' → logprob: -5.006718158721924
    3. 'w' → logprob: -12.881717681884766
    4. ' w' → logprob: -15.881717681884766
    5. '   ' → logprob: -18.756717681884766
    6. '	int' → logprob: -19.256717681884766
    7. '(int' → logprob: -19.256717681884766
    8. '=int' → logprob: -19.506717681884766
    9. '[int' → logprob: -19.631717681884766
    10. ' ' → logprob: -19.756717681884766

Token 588: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0012935701524838805
    2. ' w' → logprob: -6.751293659210205
    3. '(w' → logprob: -9.001293182373047
    4. '	w' → logprob: -15.751293182373047
    5. '   ' → logprob: -17.751293182373047
    6. ' ' → logprob: -17.751293182373047
    7. '_w' → logprob: -18.001293182373047
    8. '(' → logprob: -18.501293182373047
    9. 'h' → logprob: -18.626293182373047
    10. ')' → logprob: -20.126293182373047

Token 589: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.2813558876514435
    2. ')' → logprob: -1.406355857849121
    3. '_STR' → logprob: -10.156355857849121
    4. '_)' → logprob: -10.406355857849121
    5. 'Str' → logprob: -10.406355857849121
    6. ')
' → logprob: -10.656355857849121
    7. 'str' → logprob: -10.906355857849121
    8. '<|end|>' → logprob: -11.156355857849121
    9. ')_' → logprob: -11.656355857849121
    10. '())' → logprob: -12.156355857849121

Token 590: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018176745623350143
    2. ')
' → logprob: -4.018176555633545
    3. '       ' → logprob: -10.768177032470703
    4. ')
' → logprob: -12.643177032470703
    5. ' )' → logprob: -13.768177032470703
    6. ')return' → logprob: -14.643177032470703
    7. '<|end|>' → logprob: -15.018177032470703
    8. ')

' → logprob: -15.268177032470703
    9. ')\
' → logprob: -16.393177032470703
    10. '   ' → logprob: -16.768177032470703

Token 591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45211970806121826
    2. '
' → logprob: -1.2021197080612183
    3. '        
' → logprob: -3.327119827270508
    4. ' 
' → logprob: -4.077119827270508
    5. '  
' → logprob: -5.702119827270508
    6. '<|end|>' → logprob: -5.827119827270508
    7. ' if' → logprob: -6.952119827270508
    8. 'if' → logprob: -7.077119827270508
    9. '```' → logprob: -7.827119827270508
    10. '    
' → logprob: -7.827119827270508

Token 592: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7113580703735352
    2. 'try' → logprob: -0.7113580703735352
    3. ' if' → logprob: -4.711358070373535
    4. '       ' → logprob: -5.336358070373535
    5. 'return' → logprob: -5.961358070373535
    6. ' try' → logprob: -6.461358070373535
    7. '
' → logprob: -9.461358070373535
    8. ' return' → logprob: -11.336358070373535
    9. '```' → logprob: -12.461358070373535
    10. '        
' → logprob: -12.586358070373535

Token 593: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.031065089628100395
    2. 'not' → logprob: -4.031064987182617
    3. ' h' → logprob: -5.156064987182617
    4. ' not' → logprob: -5.281064987182617
    5. 'w' → logprob: -6.281064987182617
    6. 'self' → logprob: -10.031064987182617
    7. '(not' → logprob: -10.906064987182617
    8. ' w' → logprob: -11.406064987182617
    9. '   ' → logprob: -11.531064987182617
    10. '	h' → logprob: -12.031064987182617

Token 594: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.10500260442495346
    2. '>=' → logprob: -2.8550026416778564
    3. ' <' → logprob: -3.2300026416778564
    4. ' ==' → logprob: -6.855002403259277
    5. '==' → logprob: -7.355002403259277
    6. ' >' → logprob: -7.855002403259277
    7. '<' → logprob: -8.230002403259277
    8. '>' → logprob: -9.355002403259277
    9. '<w' → logprob: -10.230002403259277
    10. '   ' → logprob: -10.605002403259277

Token 595: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005130696576088667
    2. 'w' → logprob: -5.380130767822266
    3. ' ' → logprob: -7.630130767822266
    4. ' w' → logprob: -11.130130767822266
    5. '-' → logprob: -11.630130767822266
    6. ' -' → logprob: -14.755130767822266
    7. '   ' → logprob: -15.755130767822266
    8. '1' → logprob: -16.130130767822266
    9. '
' → logprob: -16.255130767822266
    10. '  ' → logprob: -16.380130767822266

Token 596: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012570185353979468
    2. 'w' → logprob: -7.001256942749023
    3. '-' → logprob: -8.376256942749023
    4. ' ' → logprob: -9.126256942749023
    5. ' -' → logprob: -13.126256942749023
    6. ' w' → logprob: -13.751256942749023
    7. '
' → logprob: -13.938756942749023
    8. '1' → logprob: -15.001256942749023
    9. '-w' → logprob: -15.001256942749023
    10. 'and' → logprob: -15.688756942749023

Token 597: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3132886290550232
    2. 'and' → logprob: -1.313288688659668
    3. ' or' → logprob: -10.688288688659668
    4. ' ' → logprob: -13.188288688659668
    5. '	and' → logprob: -14.313288688659668
    6. '   ' → logprob: -14.438288688659668
    7. 'or' → logprob: -15.188288688659668
    8. ':' → logprob: -15.563288688659668
    9. '0' → logprob: -16.06328773498535
    10. '  ' → logprob: -16.06328773498535

Token 598: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01416398212313652
    2. ' w' → logprob: -4.264163970947266
    3. '   ' → logprob: -14.639163970947266
    4. '       ' → logprob: -16.889163970947266
    5. '	w' → logprob: -18.139163970947266
    6. '    ' → logprob: -18.639163970947266
    7. '           ' → logprob: -18.764163970947266
    8. '  ' → logprob: -19.014163970947266
    9. ' ' → logprob: -19.264163970947266
    10. '     ' → logprob: -20.389163970947266

Token 599: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931530237197876
    2. ' ==' → logprob: -0.6931530237197876
    3. '=' → logprob: -13.443153381347656
    4. ' ' → logprob: -13.443153381347656
    5. '0' → logprob: -13.943153381347656
    6. ')==' → logprob: -13.943153381347656
    7. '==
' → logprob: -15.318153381347656
    8. '===' → logprob: -15.318153381347656
    9. '()==' → logprob: -15.443153381347656
    10. ']==' → logprob: -15.443153381347656

Token 600: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -20.37500762939453
    4. '۰' → logprob: -20.75000762939453
    5. '
' → logprob: -20.87500762939453
    6. '  ' → logprob: -21.43750762939453
    7. '<|end|>' → logprob: -21.68750762939453
    8. '০' → logprob: -22.56250762939453
    9. '=' → logprob: -23.00000762939453
    10. '    ' → logprob: -23.00000762939453

Token 601: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.125019073486328
    4. '<|end|>' → logprob: -18.125019073486328
    5. '۰' → logprob: -19.625019073486328
    6. '```' → logprob: -20.062519073486328
    7. '  ' → logprob: -20.062519073486328
    8. '       ' → logprob: -20.312519073486328
    9. '<|end|>' → logprob: -20.375019073486328
    10. '
' → logprob: -20.750019073486328

Token 602: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5786262154579163
    2. ':' → logprob: -0.8286262154579163
    3. ':return' → logprob: -6.5786261558532715
    4. '           ' → logprob: -7.3286261558532715
    5. '       ' → logprob: -7.4536261558532715
    6. ' or' → logprob: -10.70362663269043
    7. ':
' → logprob: -11.45362663269043
    8. '   ' → logprob: -11.45362663269043
    9. '):
' → logprob: -12.57862663269043
    10. ':

' → logprob: -12.70362663269043

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.034592388459714e-06
    2. '       ' → logprob: -12.875005722045898
    3. '
' → logprob: -13.750005722045898
    4. '               ' → logprob: -14.625005722045898
    5. 'return' → logprob: -14.625005722045898
    6. ' return' → logprob: -14.750005722045898
    7. '   ' → logprob: -14.875005722045898
    8. '          ' → logprob: -15.250005722045898
    9. ':' → logprob: -16.7500057220459
    10. '	       ' → logprob: -16.7500057220459

Token 604: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05864953249692917
    2. '           ' → logprob: -3.5586495399475098
    3. ' return' → logprob: -3.5586495399475098
    4. '	return' → logprob: -12.058649063110352
    5. '   ' → logprob: -14.058649063110352
    6. ':return' → logprob: -14.558649063110352
    7. '
' → logprob: -14.683649063110352
    8. '               ' → logprob: -14.808649063110352
    9. '       ' → logprob: -15.808649063110352
    10. '{return' → logprob: -15.933649063110352

Token 605: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005233882926404476
    2. ' None' → logprob: -5.2552337646484375
    3. '(None' → logprob: -18.005233764648438
    4. '_None' → logprob: -18.630233764648438
    5. ',None' → logprob: -18.755233764648438
    6. '
' → logprob: -18.880233764648438
    7. '=None' → logprob: -20.880233764648438
    8. 'none' → logprob: -21.255233764648438
    9. '_none' → logprob: -22.255233764648438
    10. '.None' → logprob: -22.880233764648438

Token 606: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03397507593035698
    2. '
' → logprob: -3.408975124359131
    3. '        
' → logprob: -8.158974647521973
    4. '  
' → logprob: -10.908974647521973
    5. '    
' → logprob: -12.033974647521973
    6. '<|end|>' → logprob: -12.158974647521973
    7. ',' → logprob: -12.908974647521973
    8. '            
' → logprob: -12.908974647521973
    9. ' 
' → logprob: -13.408974647521973
    10. '           ' → logprob: -13.533974647521973

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.73314929776825e-05
    2. '
' → logprob: -9.50008773803711
    3. '        
' → logprob: -11.62508773803711
    4. ' if' → logprob: -14.12508773803711
    5. '           ' → logprob: -14.25008773803711
    6. '   ' → logprob: -14.75008773803711
    7. ',' → logprob: -15.00008773803711
    8. 'if' → logprob: -15.00008773803711
    9. '<|end|>' → logprob: -15.62508773803711
    10. '            
' → logprob: -15.75008773803711

Token 608: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3383534848690033
    2. 'return' (adapté à ' return') → logprob: -1.4633535146713257
    3. ' return' → logprob: -3.463353395462036
    4. 'try' → logprob: -4.088353633880615
    5. 'if' → logprob: -5.713353633880615
    6. ' if' → logprob: -6.338353633880615
    7. ' try' → logprob: -6.713353633880615
    8. '
' → logprob: -6.963353633880615
    9. '   ' → logprob: -8.588353157043457
    10. '        
' → logprob: -10.213353157043457

Token 609: ' Integral' (ID: 121125)
  Prédit: 'Integral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integral' → logprob: -0.47407880425453186
    2. ' Integral' → logprob: -0.9740787744522095
    3. ' integral' → logprob: -14.099079132080078
    4. 'Integrated' → logprob: -15.099079132080078
    5. 'Intrinsic' → logprob: -15.224079132080078
    6. 'Integrity' → logprob: -16.099079132080078
    7. 'self' → logprob: -16.474079132080078
    8. ' ' → logprob: -16.724079132080078
    9. ' Integrated' → logprob: -16.724079132080078
    10. '   ' → logprob: -17.224079132080078

Token 610: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -1.9361264946837764e-07
    2. 'Rect' → logprob: -16.0
    3. 'rectangle' → logprob: -17.875
    4. ' Rectangle' → logprob: -19.0
    5. '_rectangle' → logprob: -19.125
    6. '.Rectangle' → logprob: -20.75
    7. '       ' → logprob: -20.875
    8. ' rectangle' → logprob: -22.0
    9. '   ' → logprob: -22.25
    10. '           ' → logprob: -22.875

Token 611: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.5491004129871726e-05
    2. '(' → logprob: -10.000045776367188
    3. '(
' → logprob: -16.750045776367188
    4. '(height' → logprob: -18.125045776367188
    5. ' (' → logprob: -19.000045776367188
    6. 'h' → logprob: -19.375045776367188
    7. '((' → logprob: -19.625045776367188
    8. '(ht' → logprob: -20.125045776367188
    9. '   ' → logprob: -20.375045776367188
    10. '	h' → logprob: -21.000045776367188

Token 612: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044544681441038847
    2. ',w' → logprob: -7.750445365905762
    3. 'w' → logprob: -11.750445365905762
    4. ' ,' → logprob: -12.625445365905762
    5. ',
' → logprob: -12.875445365905762
    6. ',h' → logprob: -15.125445365905762
    7. '   ' → logprob: -15.375445365905762
    8. ' w' → logprob: -15.750445365905762
    9. ',width' → logprob: -16.125446319580078
    10. '       ' → logprob: -16.625446319580078

Token 613: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00861456897109747
    2. ' w' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.258615493774414
    4. ' ' → logprob: -17.383615493774414
    5. '    ' → logprob: -18.258615493774414
    6. '       ' → logprob: -18.758615493774414
    7. '	w' → logprob: -19.008615493774414
    8. ' ' → logprob: -19.133615493774414
    9. '  ' → logprob: -20.133615493774414
    10. '
' → logprob: -20.258615493774414

Token 614: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.500003814697266
    3. '       ' → logprob: -13.625003814697266
    4. ' )' → logprob: -14.500003814697266
    5. '   ' → logprob: -15.625003814697266
    6. ')return' → logprob: -17.500003814697266
    7. '<|end|>' → logprob: -17.750003814697266
    8. '))' → logprob: -17.750003814697266
    9. ')}' → logprob: -18.125003814697266
    10. ' ' → logprob: -18.125003814697266

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13072369992733002
    2. 'def' → logprob: -2.130723714828491
    3. '
' → logprob: -5.755723476409912
    4. ' def' → logprob: -8.75572395324707
    5. '<|end|>' → logprob: -8.88072395324707
    6. '	def' → logprob: -9.13072395324707
    7. '    
' → logprob: -9.25572395324707
    8. '```' → logprob: -9.63072395324707
    9. '<|end|>' → logprob: -10.75572395324707
    10. ' ' → logprob: -11.25572395324707

Token 616: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011079652234911919
    2. '   ' → logprob: -4.511079788208008
    3. ' def' → logprob: -10.386079788208008
    4. '
' → logprob: -14.511079788208008
    5. '	def' → logprob: -14.886079788208008
    6. '```' → logprob: -16.261079788208008
    7. ' ' → logprob: -17.261079788208008
    8. '  ' → logprob: -17.386079788208008
    9. '    
' → logprob: -18.011079788208008
    10. '<|end|>' → logprob: -18.511079788208008

Token 617: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.41865652799606323
    2. 'def' → logprob: -1.293656587600708
    3. ' solve' → logprob: -3.168656587600708
    4. ' def' → logprob: -4.293656349182129
    5. 'process' → logprob: -4.668656349182129
    6. ' process' → logprob: -6.543656349182129
    7. 'run' → logprob: -7.668656349182129
    8. 'next' → logprob: -7.918656349182129
    9. ' next' → logprob: -9.168656349182129
    10. ' run' → logprob: -9.543656349182129

Token 618: '_for' (ID: 11903)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003664404503069818
    2. '(' → logprob: -8.2503662109375
    3. '_line' → logprob: -9.5003662109375
    4. '   ' → logprob: -11.5003662109375
    5. 'self' → logprob: -11.5003662109375
    6. '(
' → logprob: -13.2503662109375
    7. '       ' → logprob: -13.3753662109375
    8. '_next' → logprob: -13.5003662109375
    9. '(line' → logprob: -13.6253662109375
    10. '_(' → logprob: -13.7503662109375

Token 619: '_rect' (ID: 39269)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18717698752880096
    2. '_line' → logprob: -1.9371769428253174
    3. 'self' → logprob: -4.0621771812438965
    4. '_input' → logprob: -5.6871771812438965
    5. 'line' → logprob: -5.8121771812438965
    6. '_next' → logprob: -6.1871771812438965
    7. '_rectangle' → logprob: -7.8121771812438965
    8. 'next' → logprob: -8.812176704406738
    9. 'input' → logprob: -9.062176704406738
    10. '_lines' → logprob: -9.687176704406738

Token 620: '(self' (ID: 2402)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.700132997939363e-05
    2. 'angles' → logprob: -11.625017166137695
    3. '(self' → logprob: -12.125017166137695
    4. '   ' → logprob: -13.875017166137695
    5. 'angular' → logprob: -14.625017166137695
    6. 'def' → logprob: -15.000017166137695
    7. 'self' → logprob: -15.500017166137695
    8. 'rectangle' → logprob: -15.500017166137695
    9. 'class' → logprob: -15.875017166137695
    10. 'ANGLE' → logprob: -16.375017166137695

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47974929213523865
    2. 'angle' → logprob: -0.979749321937561
    3. 'self' → logprob: -5.7297492027282715
    4. '(self' → logprob: -6.9797492027282715
    5. '   ' → logprob: -7.3547492027282715
    6. ')' → logprob: -8.22974967956543
    7. '       ' → logprob: -8.85474967956543
    8. 'ect' → logprob: -8.85474967956543
    9. '):' → logprob: -9.60474967956543
    10. ':' → logprob: -9.85474967956543

Token 622: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.021669533103704453
    2. ' rect' → logprob: -4.146669387817383
    3. 'self' → logprob: -5.271669387817383
    4. ' self' → logprob: -8.396669387817383
    5. '       ' → logprob: -8.896669387817383
    6. '   ' → logprob: -9.896669387817383
    7. 'rectangle' → logprob: -9.896669387817383
    8. '           ' → logprob: -11.646669387817383
    9. ' rectangle' → logprob: -12.146669387817383
    10. '	rect' → logprob: -13.146669387817383

Token 623: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059698041528463364
    2. ')' → logprob: -4.184698104858398
    3. '(self' → logprob: -4.309698104858398
    4. '):' → logprob: -4.309698104858398
    5. ',' → logprob: -5.309698104858398
    6. 'self' → logprob: -5.434698104858398
    7. '       ' → logprob: -5.684698104858398
    8. '):
' → logprob: -6.059698104858398
    9. '   ' → logprob: -7.434698104858398
    10. ' self' → logprob: -10.059698104858398

Token 624: ' Integral' (ID: 121125)
  Prédit: 'Integral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integral' → logprob: -0.024436168372631073
    2. ' Integral' → logprob: -4.024435997009277
    3. 'self' → logprob: -6.149435997009277
    4. 'rect' → logprob: -6.149435997009277
    5. '   ' → logprob: -7.274435997009277
    6. ' rect' → logprob: -7.774435997009277
    7. '       ' → logprob: -7.899435997009277
    8. ')' → logprob: -8.774435997009277
    9. 'Integrated' → logprob: -9.649435997009277
    10. ' integral' → logprob: -10.024435997009277

Token 625: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -2.3676733690081164e-05
    2. 'angle' → logprob: -10.87502384185791
    3. 'Angle' → logprob: -12.50002384185791
    4. 'rectangle' → logprob: -14.87502384185791
    5. 'Rect' → logprob: -15.37502384185791
    6. 'ANGLE' → logprob: -16.375022888183594
    7. '_rectangle' → logprob: -16.375022888183594
    8. '   ' → logprob: -16.500022888183594
    9. ' Rectangle' → logprob: -17.000022888183594
    10. 'angular' → logprob: -17.250022888183594

Token 626: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.066919301403686e-05
    2. '):
' → logprob: -10.000090599060059
    3. ' )' → logprob: -10.750090599060059
    4. '):' → logprob: -11.250090599060059
    5. '   ' → logprob: -11.625090599060059
    6. ':' → logprob: -14.125090599060059
    7. '       ' → logprob: -15.000090599060059
    8. '`)' → logprob: -15.375090599060059
    9. ')->' → logprob: -15.500090599060059
    10. '):
' → logprob: -15.750090599060059

Token 627: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21832069754600525
    2. '       ' → logprob: -1.9683207273483276
    3. ':
' → logprob: -3.093320608139038
    4. '(self' → logprob: -5.343320846557617
    5. ' ->' → logprob: -6.593320846557617
    6. '):
' → logprob: -6.718320846557617
    7. '->' → logprob: -6.843320846557617
    8. '):' → logprob: -6.843320846557617
    9. '   ' → logprob: -7.718320846557617
    10. ')->' → logprob: -8.218320846557617

Token 628: ' Integral' (ID: 121125)
  Prédit: 'Integral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integral' → logprob: -0.11806430667638779
    2. ' Integral' → logprob: -2.6180644035339355
    3. 'str' → logprob: -3.6180644035339355
    4. ' str' → logprob: -4.6180644035339355
    5. 'Optional' → logprob: -6.9930644035339355
    6. 'int' → logprob: -8.993063926696777
    7. ' integral' → logprob: -8.993063926696777
    8. ''' → logprob: -9.243063926696777
    9. 'print' → logprob: -9.368063926696777
    10. 'Intrinsic' → logprob: -9.868063926696777

Token 629: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -7.226628895296017e-06
    2. 'Rect' → logprob: -12.250007629394531
    3. 'Integral' → logprob: -13.250007629394531
    4. '_rectangle' → logprob: -15.250007629394531
    5. 'Integer' → logprob: -16.75000762939453
    6. '.Rectangle' → logprob: -16.87500762939453
    7. 'al' → logprob: -17.12500762939453
    8. 'rectangle' → logprob: -17.37500762939453
    9. '   ' → logprob: -17.62500762939453
    10. '_Rect' → logprob: -17.62500762939453

Token 630: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33008354902267456
    2. ':' → logprob: -1.8300836086273193
    3. ':
' → logprob: -2.7050836086273193
    4. '(self' → logprob: -2.9550836086273193
    5. '   ' → logprob: -7.45508337020874
    6. '):
' → logprob: -7.95508337020874
    7. '(
' → logprob: -8.705083847045898
    8. '(' → logprob: -8.705083847045898
    9. 'self' → logprob: -8.830083847045898
    10. ',' → logprob: -9.330083847045898

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026373686268925667
    2. 'return' → logprob: -6.0026373863220215
    3. ' return' → logprob: -8.752636909484863
    4. '
' → logprob: -12.877636909484863
    5. '   ' → logprob: -15.127636909484863
    6. '{return' → logprob: -15.877636909484863
    7. '```' → logprob: -16.00263786315918
    8. '           ' → logprob: -16.12763786315918
    9. 'next' → logprob: -16.25263786315918
    10. '	return' → logprob: -16.75263786315918

Token 632: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038574058562517166
    2. '       ' → logprob: -3.288573980331421
    3. ' return' → logprob: -7.53857421875
    4. '```' → logprob: -15.41357421875
    5. '   ' → logprob: -16.78857421875
    6. '	return' → logprob: -17.03857421875
    7. '
' → logprob: -17.91357421875
    8. 'try' → logprob: -18.78857421875
    9. 'result' → logprob: -18.78857421875
    10. '``' → logprob: -18.91357421875

Token 633: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007100477814674377
    2. ' self' → logprob: -7.2507100105285645
    3. '       ' → logprob: -16.250709533691406
    4. '(self' → logprob: -20.125709533691406
    5. '	self' → logprob: -21.250709533691406
    6. '   ' → logprob: -21.625709533691406
    7. '=self' → logprob: -21.625709533691406
    8. '
' → logprob: -22.375709533691406
    9. '[self' → logprob: -22.875709533691406
    10. ' ' → logprob: -23.375709533691406

Token 634: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -9.913265239447355e-05
    2. '.next' → logprob: -9.500099182128906
    3. 'order' → logprob: -10.750099182128906
    4. '.' → logprob: -13.375099182128906
    5. ' .' → logprob: -14.000099182128906
    6. '.answer' → logprob: -16.500099182128906
    7. '.orders' → logprob: -16.875099182128906
    8. ' order' → logprob: -16.875099182128906
    9. '.user' → logprob: -17.125099182128906
    10. '`.' → logprob: -17.500099182128906

Token 635: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -1.3856492842023727e-06
    2. '.' → logprob: -13.625000953674316
    3. 'next' → logprob: -16.250001907348633
    4. ' .' → logprob: -17.250001907348633
    5. ' next' → logprob: -20.625001907348633
    6. '.previous' → logprob: -21.125001907348633
    7. '	next' → logprob: -21.500001907348633
    8. '   ' → logprob: -21.625001907348633
    9. '.Next' → logprob: -21.750001907348633
    10. ').' → logprob: -21.750001907348633

Token 636: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -8.180258191714529e-06
    2. 'Rectangle' → logprob: -12.000008583068848
    3. '_' → logprob: -14.250008583068848
    4. '_rect' → logprob: -14.750008583068848
    5. '```' → logprob: -15.125008583068848
    6. 'rectangle' → logprob: -15.500008583068848
    7. '_Rect' → logprob: -16.37500762939453
    8. '.Rectangle' → logprob: -16.75000762939453
    9. '`' → logprob: -16.87500762939453
    10. '.rectangle' → logprob: -17.50000762939453

Token 637: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.100258007645607
    2. '(' → logprob: -2.3502581119537354
    3. '(
' → logprob: -10.225257873535156
    4. '(Rect' → logprob: -12.225257873535156
    5. ' (' → logprob: -12.725257873535156
    6. 'rect' → logprob: -12.850257873535156
    7. '(rest' → logprob: -14.100257873535156
    8. '<|end|>' → logprob: -14.600257873535156
    9. '(paren' → logprob: -14.600257873535156
    10. '```' → logprob: -14.725257873535156

Token 638: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.636475493200123e-05
    2. '       ' → logprob: -10.375076293945312
    3. '<|end|>' → logprob: -10.375076293945312
    4. '())' → logprob: -12.500076293945312
    5. ')
' → logprob: -12.625076293945312
    6. '()' → logprob: -13.000076293945312
    7. ' )' → logprob: -13.125076293945312
    8. '   ' → logprob: -13.625076293945312
    9. ')return' → logprob: -14.375076293945312
    10. '<|end|>' → logprob: -15.625076293945312

Token 639: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 640: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01191330049186945
    2. '   ' → logprob: -4.511913299560547
    3. '<|end|>' → logprob: -7.636913299560547
    4. '#' → logprob: -8.761913299560547
    5. '```' → logprob: -9.511913299560547
    6. 'solver' → logprob: -9.761913299560547
    7. 'if' → logprob: -10.011913299560547
    8. 'import' → logprob: -10.886913299560547
    9. ' def' → logprob: -11.511913299560547
    10. '  ' → logprob: -12.261913299560547

Token 641: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.09415163099765778
    2. 'def' → logprob: -3.469151735305786
    3. 'process' → logprob: -3.594151735305786
    4. ' run' → logprob: -3.844151735305786
    5. 'solve' → logprob: -4.969151496887207
    6. 'main' → logprob: -6.344151496887207
    7. ' process' → logprob: -7.594151496887207
    8. ' def' → logprob: -8.344151496887207
    9. ' solve' → logprob: -8.719151496887207
    10. '_run' → logprob: -9.469151496887207

Token 642: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03505197912454605
    2. '(' → logprob: -3.4100520610809326
    3. '(
' → logprob: -6.6600518226623535
    4. 'self' → logprob: -9.660052299499512
    5. '   ' → logprob: -10.535052299499512
    6. ' (' → logprob: -11.160052299499512
    7. '()' → logprob: -11.660052299499512
    8. '       ' → logprob: -13.285052299499512
    9. ' ' → logprob: -13.410052299499512
    10. '_' → logprob: -13.660052299499512

Token 643: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4502060115337372
    2. '):' → logprob: -1.3252060413360596
    3. 'self' → logprob: -3.0752060413360596
    4. ',' → logprob: -3.5752060413360596
    5. '(self' → logprob: -4.0752058029174805
    6. ')' → logprob: -6.2002058029174805
    7. '       ' → logprob: -6.7002058029174805
    8. '   ' → logprob: -6.9502058029174805
    9. '():
' → logprob: -7.8252058029174805
    10. ')(' → logprob: -8.32520580291748

Token 644: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 645: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.5537670254707336
    2. ' import' → logprob: -1.5537669658660889
    3. ' while' → logprob: -2.053766965866089
    4. 'while' → logprob: -2.803766965866089
    5. '       ' → logprob: -3.803766965866089
    6. '```' → logprob: -6.178767204284668
    7. '
' → logprob: -7.553767204284668
    8. '   ' → logprob: -10.553767204284668
    9. 'try' → logprob: -12.053767204284668
    10. '``' → logprob: -12.178767204284668

Token 646: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00861468818038702
    2. ' sys' → logprob: -4.758614540100098
    3. '=sys' → logprob: -16.508615493774414
    4. '	sys' → logprob: -17.133615493774414
    5. 'stdin' → logprob: -19.758615493774414
    6. '(sys' → logprob: -20.508615493774414
    7. '.sys' → logprob: -20.633615493774414
    8. '_sys' → logprob: -21.383615493774414
    9. '```' → logprob: -21.883615493774414
    10. 'file' → logprob: -22.883615493774414

Token 647: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.034100547432899475
    2. '       ' → logprob: -3.4091005325317383
    3. '        
' → logprob: -8.034100532531738
    4. 'for' → logprob: -9.659100532531738
    5. ' for' → logprob: -11.034100532531738
    6. '<|end|>' → logprob: -11.784100532531738
    7. '```' → logprob: -11.909100532531738
    8. '  
' → logprob: -12.034100532531738
    9. '
' → logprob: -12.159100532531738
    10. '    
' → logprob: -12.284100532531738

Token 648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010962257510982454
    2. 'for' → logprob: -9.750109672546387
    3. ' for' → logprob: -10.125109672546387
    4. '
' → logprob: -12.250109672546387
    5. '```' → logprob: -13.000109672546387
    6. '   ' → logprob: -13.250109672546387
    7. '        
' → logprob: -13.875109672546387
    8. ',' → logprob: -14.375109672546387
    9. '<|end|>' → logprob: -15.250109672546387
    10. '	' → logprob: -15.625109672546387

Token 649: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0473765954375267
    2. ' for' → logprob: -3.5473766326904297
    3. '       ' → logprob: -4.04737663269043
    4. '```' → logprob: -13.29737663269043
    5. 'while' → logprob: -14.42237663269043
    6. '   ' → logprob: -14.42237663269043
    7. '
' → logprob: -14.54737663269043
    8. '	for' → logprob: -15.92237663269043
    9. ' lines' → logprob: -16.79737663269043
    10. 'line' → logprob: -17.42237663269043

Token 650: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.7585046887397766
    2. '()' → logprob: -0.8835046887397766
    3. '_lines' → logprob: -3.008504629135132
    4. ' =' → logprob: -3.508504629135132
    5. '=' → logprob: -3.508504629135132
    6. '_' → logprob: -5.633504867553711
    7. '_data' → logprob: -6.008504867553711
    8. 'line' → logprob: -6.383504867553711
    9. '()
' → logprob: -7.508504867553711
    10. 'data' → logprob: -9.008504867553711

Token 651: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20168794691562653
    2. ' =' → logprob: -1.7016879320144653
    3. '()' → logprob: -9.201687812805176
    4. '   ' → logprob: -9.326687812805176
    5. 'for' → logprob: -10.201687812805176
    6. '_' → logprob: -11.076687812805176
    7. ' ' → logprob: -11.951687812805176
    8. '(' → logprob: -12.076687812805176
    9. '=
' → logprob: -12.451687812805176
    10. ' =
' → logprob: -13.076687812805176

Token 652: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2519298195838928
    2. ' sys' → logprob: -1.501929759979248
    3. '[' → logprob: -15.376930236816406
    4. '(sys' → logprob: -15.376930236816406
    5. '	sys' → logprob: -15.376930236816406
    6. '=sys' → logprob: -16.376930236816406
    7. ' [' → logprob: -16.751930236816406
    8. 'list' → logprob: -17.876930236816406
    9. '   ' → logprob: -18.376930236816406
    10. ' list' → logprob: -18.626930236816406

Token 653: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.833878508885391e-05
    2. 'stdin' → logprob: -10.625038146972656
    3. '.stdout' → logprob: -11.625038146972656
    4. '.argv' → logprob: -13.125038146972656
    5. '.' → logprob: -13.250038146972656
    6. '.std' → logprob: -13.875038146972656
    7. '(stdin' → logprob: -15.750038146972656
    8. ' stdin' → logprob: -16.625038146972656
    9. '.st' → logprob: -16.875038146972656
    10. '.stderr' → logprob: -16.875038146972656

Token 654: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3872649371623993
    2. '.readlines' → logprob: -1.1372649669647217
    3. '.read' → logprob: -8.8872652053833
    4. 'read' → logprob: -8.8872652053833
    5. '.' → logprob: -9.5122652053833
    6. 'for' → logprob: -10.7622652053833
    7. ' readline' → logprob: -11.8872652053833
    8. '   ' → logprob: -12.2622652053833
    9. '
' → logprob: -13.0122652053833
    10. '       ' → logprob: -13.1372652053833

Token 655: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009402852156199515
    2. '()' → logprob: -7.000940322875977
    3. 'lines' → logprob: -10.500940322875977
    4. '(' → logprob: -14.625940322875977
    5. '()
' → logprob: -15.125940322875977
    6. '_lines' → logprob: -15.750940322875977
    7. 'split' → logprob: -16.000940322875977
    8. 'line' → logprob: -16.125940322875977
    9. '.split' → logprob: -16.750940322875977
    10. '()

' → logprob: -17.250940322875977

Token 656: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1622820496559143
    2. 'split' → logprob: -1.9122819900512695
    3. 'decode' → logprob: -6.9122819900512695
    4. 'lines' → logprob: -6.9122819900512695
    5. 'read' → logprob: -10.28728199005127
    6. 'rstrip' → logprob: -10.41228199005127
    7. '_lines' → logprob: -15.28728199005127
    8. 'replace' → logprob: -16.412282943725586
    9. 'line' → logprob: -16.537282943725586
    10. '(split' → logprob: -17.037282943725586

Token 657: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011742709903046489
    2. '()' → logprob: -6.751174449920654
    3. '()
' → logprob: -12.876173973083496
    4. '()\' → logprob: -14.251173973083496
    5. '('\' → logprob: -15.126173973083496
    6. '(' → logprob: -15.251173973083496
    7. '.split' → logprob: -15.751173973083496
    8. 'split' → logprob: -16.251174926757812
    9. '()

' → logprob: -17.251174926757812
    10. '().
' → logprob: -17.376174926757812

Token 658: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.625
    3. '(split' → logprob: -20.125
    4. 'spl' → logprob: -21.625
    5. 'lines' → logprob: -22.75
    6. '.split' → logprob: -23.0
    7. 's' → logprob: -24.75
    8. '```' → logprob: -25.0
    9. 'sp' → logprob: -25.125
    10. '_split' → logprob: -25.25

Token 659: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.02996406890451908
    2. 'lines' → logprob: -3.529963970184326
    3. '("\' → logprob: -8.779964447021484
    4. '()' → logprob: -9.779964447021484
    5. '()
' → logprob: -13.154964447021484
    6. '()\' → logprob: -14.029964447021484
    7. ''\' → logprob: -15.404964447021484
    8. '(' → logprob: -16.029964447021484
    9. '('' → logprob: -16.279964447021484
    10. 'line' → logprob: -18.029964447021484

Token 660: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003365350130479783
    2. '\n' → logprob: -8.000336647033691
    3. '
' → logprob: -14.375336647033691
    4. 'lines' → logprob: -15.125336647033691
    5. '\' → logprob: -16.250335693359375
    6. 'newline' → logprob: -16.750335693359375
    7. ''\' → logprob: -17.375335693359375
    8. 'nl' → logprob: -17.625335693359375
    9. '"\' → logprob: -19.750335693359375
    10. 'ne' → logprob: -19.750335693359375

Token 661: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018701868131756783
    2. '       ' → logprob: -4.518702030181885
    3. ')
' → logprob: -5.143702030181885
    4. '')' → logprob: -6.393702030181885
    5. '")' → logprob: -9.518701553344727
    6. '')
' → logprob: -10.393701553344727
    7. '   ' → logprob: -12.518701553344727
    8. 'for' → logprob: -13.268701553344727
    9. '()' → logprob: -13.768701553344727
    10. '`)' → logprob: -13.893701553344727

Token 662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03030899353325367
    2. 'for' → logprob: -3.530308961868286
    3. ' for' → logprob: -7.655309200286865
    4. '   ' → logprob: -9.405308723449707
    5. '```' → logprob: -13.780308723449707
    6. '
' → logprob: -14.530308723449707
    7. '	for' → logprob: -14.780308723449707
    8. '	' → logprob: -15.405308723449707
    9. '           ' → logprob: -15.530308723449707
    10. '        
' → logprob: -16.905309677124023

Token 663: ' results' (ID: 4376)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 664: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038050100207328796
    2. '=' → logprob: -3.2880501747131348
    3. '=[]' → logprob: -11.913049697875977
    4. '=[]
' → logprob: -14.163049697875977
    5. '_' → logprob: -14.663049697875977
    6. '[]' → logprob: -15.163049697875977
    7. '   ' → logprob: -16.663049697875977
    8. ' =
' → logprob: -16.788049697875977
    9. ',' → logprob: -16.913049697875977
    10. ' ' → logprob: -17.038049697875977

Token 665: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.20142170786857605
    2. '[]' → logprob: -1.7014217376708984
    3. ' []
' → logprob: -12.201421737670898
    4. '[]

' → logprob: -12.951421737670898
    5. ' []' → logprob: -14.201421737670898
    6. '[' → logprob: -14.951421737670898
    7. '[
' → logprob: -17.3264217376709
    8. '[])
' → logprob: -18.7014217376709
    9. '   ' → logprob: -19.3264217376709
    10. '[]"' → logprob: -19.5764217376709

Token 666: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006906471680849791
    2. 'for' → logprob: -5.006906509399414
    3. ' for' → logprob: -8.631906509399414
    4. '   ' → logprob: -11.506906509399414
    5. '	' → logprob: -13.506906509399414
    6. '```' → logprob: -14.381906509399414
    7. '	for' → logprob: -14.506906509399414
    8. '           ' → logprob: -15.756906509399414
    9. '	   ' → logprob: -16.631906509399414
    10. '<|end|>' → logprob: -17.506906509399414

Token 667: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00013369438238441944
    2. '       ' → logprob: -9.000133514404297
    3. ' for' → logprob: -11.500133514404297
    4. '	for' → logprob: -15.625133514404297
    5. '   ' → logprob: -18.125133514404297
    6. '```' → logprob: -18.500133514404297
    7. '        
' → logprob: -22.000133514404297
    8. '``' → logprob: -22.125133514404297
    9. 'For' → logprob: -22.750133514404297
    10. '	' → logprob: -23.000133514404297

Token 668: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.014163628220558167
    2. ' line' → logprob: -4.264163494110107
    3. '   ' → logprob: -16.389163970947266
    4. '	line' → logprob: -17.639163970947266
    5. '(line' → logprob: -18.764163970947266
    6. '       ' → logprob: -19.014163970947266
    7. 'input' → logprob: -20.389163970947266
    8. '_line' → logprob: -20.514163970947266
    9. '=line' → logprob: -20.514163970947266
    10. ' ' → logprob: -21.014163970947266

Token 669: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01400600653141737
    2. '       ' → logprob: -5.5140061378479
    3. ':' → logprob: -5.7640061378479
    4. 'in' → logprob: -5.7640061378479
    5. '           ' → logprob: -6.1390061378479
    6. ':
' → logprob: -7.3890061378479
    7. ' =' → logprob: -8.389005661010742
    8. '=' → logprob: -9.389005661010742
    9. '   ' → logprob: -9.639005661010742
    10. ',' → logprob: -9.764005661010742

Token 670: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009114635176956654
    2. ' input' → logprob: -7.000911235809326
    3. 'import' → logprob: -17.625911712646484
    4. '(input' → logprob: -19.125911712646484
    5. '<input' → logprob: -20.000911712646484
    6. ' ' → logprob: -20.000911712646484
    7. 'in' → logprob: -20.625911712646484
    8. 'Input' → logprob: -20.875911712646484
    9. '	input' → logprob: -20.875911712646484
    10. 'line' → logprob: -21.000911712646484

Token 671: '_lines' (ID: 42980)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2730094790458679
    2. 'in' → logprob: -1.5230095386505127
    3. ':' → logprob: -5.148009300231934
    4. '_lines' → logprob: -5.398009300231934
    5. ':
' → logprob: -5.773009300231934
    6. '_' → logprob: -5.898009300231934
    7. '   ' → logprob: -6.898009300231934
    8. '       ' → logprob: -7.023009300231934
    9. '_in' → logprob: -7.773009300231934
    10. '           ' → logprob: -8.023009300231934

Token 672: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.680820643901825
    2. '           ' → logprob: -0.805820643901825
    3. ':
' → logprob: -3.3058207035064697
    4. '       ' → logprob: -5.055820465087891
    5. ',' → logprob: -5.930820465087891
    6. '<|end|>' → logprob: -7.805820465087891
    7. '<|end|>' → logprob: -7.805820465087891
    8. ' if' → logprob: -8.80582046508789
    9. '               ' → logprob: -9.93082046508789
    10. '=' → logprob: -10.30582046508789

Token 673: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3878469169139862
    2. '       ' → logprob: -1.1378469467163086
    3. '   ' → logprob: -7.137846946716309
    4. '```' → logprob: -10.137846946716309
    5. '	       ' → logprob: -10.262846946716309
    6. 'rect' → logprob: -10.512846946716309
    7. ' if' → logprob: -11.012846946716309
    8. '	   ' → logprob: -11.137846946716309
    9. 'if' → logprob: -11.262846946716309
    10. 'line' → logprob: -12.262846946716309

Token 674: ' data' (ID: 1238)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0014179765712469816
    2. '           ' → logprob: -7.251418113708496
    3. ' rect' → logprob: -7.626418113708496
    4. 'if' → logprob: -9.251418113708496
    5. 'parsed' → logprob: -9.251418113708496
    6. 'rec' → logprob: -11.501418113708496
    7. '	rect' → logprob: -12.501418113708496
    8. 'r' → logprob: -12.626418113708496
    9. ' if' → logprob: -12.876418113708496
    10. 'line' → logprob: -12.876418113708496

Token 675: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141996443271637
    2. '=' → logprob: -1.7014199495315552
    3. '       ' → logprob: -12.951419830322266
    4. '=line' → logprob: -14.076419830322266
    5. '=
' → logprob: -14.326419830322266
    6. '           ' → logprob: -14.701419830322266
    7. ' =
' → logprob: -14.951419830322266
    8. '   ' → logprob: -14.951419830322266
    9. '        ' → logprob: -15.076419830322266
    10. '_tokens' → logprob: -15.451419830322266

Token 676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00040648187859915197
    2. ' self' → logprob: -7.875406265258789
    3. '           ' → logprob: -10.750406265258789
    4. 'line' → logprob: -12.250406265258789
    5. '(self' → logprob: -16.50040626525879
    6. '               ' → logprob: -17.12540626525879
    7. '                   ' → logprob: -17.37540626525879
    8. ' line' → logprob: -18.62540626525879
    9. '   ' → logprob: -18.87540626525879
    10. '            
' → logprob: -18.87540626525879

Token 677: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.043214306235313416
    2. 'parse' → logprob: -3.1682143211364746
    3. '._' → logprob: -9.543213844299316
    4. '.' → logprob: -9.918213844299316
    5. '_parse' → logprob: -10.293213844299316
    6. '.strip' → logprob: -11.043213844299316
    7. '_.' → logprob: -11.668213844299316
    8. '=parse' → logprob: -11.918213844299316
    9. ' parse' → logprob: -12.418213844299316
    10. '.solve' → logprob: -12.668213844299316

Token 678: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.981667537620524e-06
    2. 'input' → logprob: -13.375001907348633
    3. '_line' → logprob: -15.625001907348633
    4. 'Input' → logprob: -16.125001907348633
    5. 'line' → logprob: -16.750001907348633
    6. '_' → logprob: -16.875001907348633
    7. '_output' → logprob: -17.750001907348633
    8. '_in' → logprob: -18.000001907348633
    9. '_Input' → logprob: -18.125001907348633
    10. '_INPUT' → logprob: -18.750001907348633

Token 679: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00023727134976070374
    2. 'line' → logprob: -8.375237464904785
    3. '(line' → logprob: -12.750237464904785
    4. '_lines' → logprob: -13.750237464904785
    5. '[line' → logprob: -13.875237464904785
    6. ' line' → logprob: -14.000237464904785
    7. '_token' → logprob: -15.375237464904785
    8. 'Line' → logprob: -15.625237464904785
    9. '=line' → logprob: -16.37523651123047
    10. '_' → logprob: -17.00023651123047

Token 680: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.250097274780273
    3. '=line' → logprob: -15.375097274780273
    4. '[line' → logprob: -15.500097274780273
    5. '           ' → logprob: -15.750097274780273
    6. '(data' → logprob: -17.625097274780273
    7. '(Line' → logprob: -17.625097274780273
    8. '(lines' → logprob: -17.750097274780273
    9. '(
' → logprob: -17.875097274780273
    10. ' (' → logprob: -17.875097274780273

Token 681: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5916963219642639
    2. ')' → logprob: -0.9666963219642639
    3. ')
' → logprob: -2.716696262359619
    4. '       ' → logprob: -9.466696739196777
    5. '               ' → logprob: -10.966696739196777
    6. '):
' → logprob: -11.466696739196777
    7. '<|end|>' → logprob: -11.466696739196777
    8. ')\
' → logprob: -12.091696739196777
    9. 'if' → logprob: -12.216696739196777
    10. ')
' → logprob: -12.216696739196777

Token 682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9027791495318525e-05
    2. '       ' → logprob: -11.125019073486328
    3. 'if' → logprob: -13.125019073486328
    4. '   ' → logprob: -13.750019073486328
    5. '	       ' → logprob: -15.125019073486328
    6. '		' → logprob: -15.250019073486328
    7. '               ' → logprob: -15.750019073486328
    8. ' if' → logprob: -15.875019073486328
    9. '          ' → logprob: -16.375019073486328
    10. '```' → logprob: -16.500019073486328

Token 683: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00423665065318346
    2. '           ' → logprob: -5.504236698150635
    3. ' if' → logprob: -8.754236221313477
    4. '       ' → logprob: -15.254236221313477
    5. '   ' → logprob: -16.129236221313477
    6. '	if' → logprob: -16.504236221313477
    7. '		' → logprob: -18.754236221313477
    8. '               ' → logprob: -19.379236221313477
    9. '	   ' → logprob: -19.629236221313477
    10. 'If' → logprob: -19.879236221313477

Token 684: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.10020752996206284
    2. 'data' → logprob: -2.350207567214966
    3. ' not' → logprob: -14.475207328796387
    4. '           ' → logprob: -15.475207328796387
    5. '	data' → logprob: -16.850208282470703
    6. '_data' → logprob: -17.600208282470703
    7. ' ' → logprob: -17.850208282470703
    8. ' dat' → logprob: -17.850208282470703
    9. '   ' → logprob: -18.225208282470703
    10. 'not' → logprob: -18.225208282470703

Token 685: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0028057026211172342
    2. 'is' → logprob: -5.877805709838867
    3. '	is' → logprob: -15.127805709838867
    4. '<|end|>' → logprob: -15.127805709838867
    5. ' ' → logprob: -16.252805709838867
    6. '<|end|>' → logprob: -17.252805709838867
    7. ')is' → logprob: -17.377805709838867
    8. ')' → logprob: -17.627805709838867
    9. ' ' → logprob: -17.877805709838867
    10. '==' → logprob: -18.002805709838867

Token 686: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.061967913061380386
    2. ' None' → logprob: -2.8119678497314453
    3. ' not' → logprob: -16.061967849731445
    4. '_None' → logprob: -16.436967849731445
    5. '=None' → logprob: -16.811967849731445
    6. '(None' → logprob: -16.936967849731445
    7. '           ' → logprob: -17.061967849731445
    8. 'not' → logprob: -17.311967849731445
    9. ',None' → logprob: -19.311967849731445
    10. '.None' → logprob: -19.811967849731445

Token 687: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12318027019500732
    2. ':
' → logprob: -2.748180389404297
    3. ':' → logprob: -2.998180389404297
    4. '           ' → logprob: -6.248180389404297
    5. '                   ' → logprob: -11.623180389404297
    6. ',' → logprob: -11.873180389404297
    7. '              ' → logprob: -12.123180389404297
    8. '):
' → logprob: -12.498180389404297
    9. '	           ' → logprob: -12.998180389404297
    10. '                       ' → logprob: -13.123180389404297

Token 688: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4974866644479334e-05
    2. '           ' → logprob: -11.750015258789062
    3. '	           ' → logprob: -13.000015258789062
    4. 'break' → logprob: -13.125015258789062
    5. '                   ' → logprob: -13.250015258789062
    6. '              ' → logprob: -15.250015258789062
    7. '			' → logprob: -15.250015258789062
    8. '		       ' → logprob: -15.500015258789062
    9. '   ' → logprob: -16.750015258789062
    10. '	break' → logprob: -16.875015258789062

Token 689: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25725919008255005
    2. 'break' (adapté à ' break') → logprob: -1.5072591304779053
    3. '           ' → logprob: -5.632259368896484
    4. ' break' → logprob: -6.507259368896484
    5. '	break' → logprob: -8.632259368896484
    6. '                   ' → logprob: -10.507259368896484
    7. '	           ' → logprob: -10.757259368896484
    8. '			' → logprob: -12.257259368896484
    9. '_break' → logprob: -12.632259368896484
    10. '   ' → logprob: -13.132259368896484

Token 690: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.249780638725497e-05
    2. '       ' → logprob: -10.875032424926758
    3. '
' → logprob: -11.750032424926758
    4. '               ' → logprob: -13.250032424926758
    5. '```' → logprob: -13.250032424926758
    6. '            
' → logprob: -13.625032424926758
    7. '          ' → logprob: -15.500032424926758
    8. '        
' → logprob: -15.750032424926758
    9. '		' → logprob: -16.250032424926758
    10. '	       ' → logprob: -16.625032424926758

Token 691: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022395893465727568
    2. '       ' → logprob: -6.12723970413208
    3. 'result' → logprob: -10.127239227294922
    4. ' result' → logprob: -12.627239227294922
    5. '```' → logprob: -12.627239227294922
    6. 'output' → logprob: -13.002239227294922
    7. 'results' → logprob: -13.127239227294922
    8. '               ' → logprob: -13.627239227294922
    9. '          ' → logprob: -14.627239227294922
    10. '   ' → logprob: -14.627239227294922

Token 692: ' next' (ID: 2613)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3515937924385071
    2. 'try' → logprob: -1.9765937328338623
    3. 'next' (adapté à ' next') → logprob: -2.6015937328338623
    4. '           ' → logprob: -3.6015937328338623
    5. ' result' → logprob: -3.6015937328338623
    6. ' try' → logprob: -4.351593971252441
    7. ' next' → logprob: -4.726593971252441
    8. '       ' → logprob: -5.476593971252441
    9. 'res' → logprob: -6.351593971252441
    10. 'answer' → logprob: -6.976593971252441

Token 693: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0034458802547305822
    2. '_rectangle' → logprob: -5.753446102142334
    3. 'rect' → logprob: -8.253445625305176
    4. '_rec' → logprob: -12.253445625305176
    5. '_Rect' → logprob: -14.128445625305176
    6. '_RECT' → logprob: -14.628445625305176
    7. ' =' → logprob: -14.878445625305176
    8. 'Rect' → logprob: -14.878445625305176
    9. '	rect' → logprob: -15.503445625305176
    10. '_' → logprob: -15.503445625305176

Token 694: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815006136894226
    2. '=' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.018150329589844
    4. ',' → logprob: -17.768150329589844
    5. '   ' → logprob: -18.143150329589844
    6. 's' → logprob: -18.143150329589844
    7. '       ' → logprob: -18.268150329589844
    8. ' =
' → logprob: -18.643150329589844
    9. '<|end|>' → logprob: -18.643150329589844
    10. '	' → logprob: -18.768150329589844

Token 695: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011050770990550518
    2. ' self' → logprob: -4.511050701141357
    3. '           ' → logprob: -12.761051177978516
    4. '(self' → logprob: -17.136051177978516
    5. '               ' → logprob: -17.636051177978516
    6. '	self' → logprob: -18.511051177978516
    7. '   ' → logprob: -18.761051177978516
    8. '       ' → logprob: -20.011051177978516
    9. '=self' → logprob: -20.136051177978516
    10. '                   ' → logprob: -20.511051177978516

Token 696: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.014205348677933216
    2. 'solve' → logprob: -4.264205455780029
    3. '.' → logprob: -10.639204978942871
    4. 'order' → logprob: -11.514204978942871
    5. '.order' → logprob: -12.639204978942871
    6. '.run' → logprob: -13.514204978942871
    7. ' solve' → logprob: -13.764204978942871
    8. '   ' → logprob: -14.014204978942871
    9. ' .' → logprob: -14.139204978942871
    10. '.save' → logprob: -15.764204978942871

Token 697: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.9361264946837764e-07
    2. 'for' → logprob: -16.125
    3. 'For' → logprob: -18.875
    4. '_' → logprob: -19.0
    5. '   ' → logprob: -19.0
    6. '_FOR' → logprob: -19.375
    7. ' _' → logprob: -19.75
    8. '_next' → logprob: -19.75
    9. '       ' → logprob: -20.5
    10. '_For' → logprob: -20.625

Token 698: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.3132641315460205
    2. 'rect' → logprob: -1.3132641315460205
    3. '(rect' → logprob: -13.438263893127441
    4. ' rect' → logprob: -15.313263893127441
    5. '	rect' → logprob: -15.688263893127441
    6. '
' → logprob: -16.438264846801758
    7. '```' → logprob: -16.438264846801758
    8. '.rect' → logprob: -16.563264846801758
    9. 'next' → logprob: -16.563264846801758
    10. 'Rect' → logprob: -17.063264846801758

Token 699: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.00015181333583313972
    2. 'data' → logprob: -8.875151634216309
    3. '(' → logprob: -11.375151634216309
    4. '(
' → logprob: -15.500151634216309
    5. '(next' → logprob: -16.000152587890625
    6. ' data' → logprob: -16.500152587890625
    7. ')data' → logprob: -17.125152587890625
    8. '(d' → logprob: -17.500152587890625
    9. '[data' → logprob: -18.125152587890625
    10. ',data' → logprob: -18.375152587890625

Token 700: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07016728073358536
    2. ')
' → logprob: -2.820167303085327
    3. '           ' → logprob: -4.820167064666748
    4. ')
' → logprob: -10.195167541503906
    5. '       ' → logprob: -11.195167541503906
    6. '               ' → logprob: -11.320167541503906
    7. '(' → logprob: -11.695167541503906
    8. '(next' → logprob: -11.695167541503906
    9. ')

' → logprob: -13.195167541503906
    10. ').' → logprob: -13.195167541503906

Token 701: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.984787902794778e-05
    2. 'results' → logprob: -9.250100135803223
    3. ' results' → logprob: -13.000100135803223
    4. '       ' → logprob: -14.625100135803223
    5. '```' → logprob: -14.750100135803223
    6. '
' → logprob: -15.375100135803223
    7. '		' → logprob: -17.000099182128906
    8. '               ' → logprob: -17.000099182128906
    9. '<|end|>' → logprob: -17.000099182128906
    10. '   ' → logprob: -17.375099182128906

Token 702: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.00837143138051033
    2. ' results' → logprob: -5.008371353149414
    3. 'print' → logprob: -6.508371353149414
    4. '           ' → logprob: -8.758371353149414
    5. '
' → logprob: -12.508371353149414
    6. ' print' → logprob: -13.008371353149414
    7. '	results' → logprob: -14.758371353149414
    8. '.results' → logprob: -15.758371353149414
    9. '       ' → logprob: -16.258371353149414
    10. 'result' → logprob: -17.008371353149414

Token 703: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001171056181192398
    2. '.' → logprob: -6.751171112060547
    3. '.extend' → logprob: -14.751171112060547
    4. 'append' → logprob: -14.876171112060547
    5. '.app' → logprob: -17.001171112060547
    6. '.Append' → logprob: -17.126171112060547
    7. '.ap' → logprob: -18.001171112060547
    8. '_append' → logprob: -18.001171112060547
    9. '.push' → logprob: -18.251171112060547
    10. ' .' → logprob: -18.751171112060547

Token 704: '(f' (ID: 1526)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.12465796619653702
    2. '(f' → logprob: -2.6246578693389893
    3. '(next' → logprob: -3.1246578693389893
    4. 'str' → logprob: -7.749658107757568
    5. '(re' → logprob: -8.37465763092041
    6. 'next' → logprob: -9.99965763092041
    7. 'f' → logprob: -10.37465763092041
    8. '(' → logprob: -10.37465763092041
    9. 'repr' → logprob: -11.12465763092041
    10. ' str' → logprob: -15.24965763092041

Token 705: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.03776361048221588
    2. 'str' → logprob: -4.162763595581055
    3. 'f' → logprob: -4.662763595581055
    4. '{' → logprob: -4.912763595581055
    5. '"' → logprob: -5.787763595581055
    6. 'next' → logprob: -6.912763595581055
    7. ''{' → logprob: -7.912763595581055
    8. ' f' → logprob: -9.287763595581055
    9. '(str' → logprob: -9.787763595581055
    10. ' str' → logprob: -10.537763595581055

Token 706: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.5570885807392187e-05
    2. ' next' → logprob: -11.125015258789062
    3. '(next' → logprob: -14.750015258789062
    4. '[next' → logprob: -15.625015258789062
    5. '{' → logprob: -16.500015258789062
    6. '   ' → logprob: -16.875015258789062
    7. '	next' → logprob: -17.000015258789062
    8. '.next' → logprob: -17.625015258789062
    9. '`' → logprob: -18.500015258789062
    10. 'n' → logprob: -18.875015258789062

Token 707: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.002497302368283272
    2. 'rect' → logprob: -6.12749719619751
    3. 'next' → logprob: -8.627497673034668
    4. 'Rect' → logprob: -9.877497673034668
    5. ' next' → logprob: -11.377497673034668
    6. '_rec' → logprob: -11.627497673034668
    7. '_RECT' → logprob: -11.877497673034668
    8. '   ' → logprob: -12.127497673034668
    9. '_rectangle' → logprob: -12.377497673034668
    10. '.rect' → logprob: -12.752497673034668

Token 708: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -2.6776029699249193e-05
    2. 'height' → logprob: -10.75002670288086
    3. ' .' → logprob: -13.12502670288086
    4. '.width' → logprob: -13.25002670288086
    5. '(height' → logprob: -14.12502670288086
    6. '   ' → logprob: -15.75002670288086
    7. '}.' → logprob: -16.00002670288086
    8. '.h' → logprob: -16.25002670288086
    9. '().' → logprob: -17.12502670288086
    10. ' height' → logprob: -17.25002670288086

Token 709: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0036132587119936943
    2. ' {' → logprob: -5.753613471984863
    3. ' }' → logprob: -8.128613471984863
    4. '{' → logprob: -9.003613471984863
    5. '}{' → logprob: -11.253613471984863
    6. ' ' → logprob: -13.003613471984863
    7. ' }}' → logprob: -14.628613471984863
    8. ' ' → logprob: -15.128613471984863
    9. '{}' → logprob: -15.253613471984863
    10. '"' → logprob: -15.628613471984863

Token 710: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0011717714369297028
    2. '{' → logprob: -6.751171588897705
    3. ' f' → logprob: -14.126172065734863
    4. ' ' → logprob: -14.751172065734863
    5. '{x' → logprob: -15.376172065734863
    6. ' {'' → logprob: -17.001171112060547
    7. '}' → logprob: -17.251171112060547
    8. '"' → logprob: -17.251171112060547
    9. ' {(' → logprob: -17.376171112060547
    10. '{name' → logprob: -17.626171112060547

Token 711: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.8889261304575484e-06
    2. ' next' → logprob: -12.500003814697266
    3. '{' → logprob: -16.875003814697266
    4. '(next' → logprob: -17.500003814697266
    5. '[next' → logprob: -17.625003814697266
    6. '	next' → logprob: -18.750003814697266
    7. '   ' → logprob: -20.125003814697266
    8. '.next' → logprob: -20.375003814697266
    9. '_next' → logprob: -20.500003814697266
    10. '`' → logprob: -21.125003814697266

Token 712: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0007191036129370332
    2. 'Rect' → logprob: -8.12571907043457
    3. 'rect' → logprob: -8.62571907043457
    4. 'next' → logprob: -9.25071907043457
    5. '.next' → logprob: -10.25071907043457
    6. '._' → logprob: -10.75071907043457
    7. ' next' → logprob: -11.37571907043457
    8. '.rect' → logprob: -11.37571907043457
    9. '_' → logprob: -11.50071907043457
    10. '_RECT' → logprob: -11.75071907043457

Token 713: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -3.416665640543215e-05
    2. '.next' → logprob: -10.62503433227539
    3. 'width' → logprob: -12.00003433227539
    4. '.' → logprob: -13.12503433227539
    5. '.height' → logprob: -14.50003433227539
    6. ' .' → logprob: -14.62503433227539
    7. '.w' → logprob: -14.87503433227539
    8. '_width' → logprob: -16.00003433227539
    9. ' width' → logprob: -17.37503433227539
    10. '   ' → logprob: -17.50003433227539

Token 714: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0007019456243142486
    2. '\n' → logprob: -7.875701904296875
    3. '")
' → logprob: -8.250701904296875
    4. '}")' → logprob: -9.750701904296875
    5. '}' → logprob: -14.250701904296875
    6. ')")' → logprob: -14.500701904296875
    7. ')' → logprob: -14.625701904296875
    8. '")}' → logprob: -15.500701904296875
    9. '")
' → logprob: -16.250701904296875
    10. '')' → logprob: -16.500701904296875

Token 715: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5243322253227234
    2. '
' → logprob: -0.8993322253227234
    3. '        
' → logprob: -7.274332046508789
    4. '<|end|>' → logprob: -8.774332046508789
    5. '   ' → logprob: -9.649332046508789
    6. '
' → logprob: -9.649332046508789
    7. '```' → logprob: -9.649332046508789
    8. '  
' → logprob: -10.024332046508789
    9. '    
' → logprob: -10.024332046508789
    10. 'print' → logprob: -11.024332046508789

Token 716: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5674641132354736
    2. 'for' → logprob: -1.3174641132354736
    3. '       ' → logprob: -1.8174641132354736
    4. '
' → logprob: -6.5674638748168945
    5. ' for' → logprob: -6.9424638748168945
    6. 'return' → logprob: -7.9424638748168945
    7. ' print' → logprob: -10.442463874816895
    8. '```' → logprob: -11.192463874816895
    9. '        
' → logprob: -11.692463874816895
    10. '   ' → logprob: -12.317463874816895

Token 717: '("\' (ID: 9730)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.5620339512825012
    2. '("\' → logprob: -1.0620338916778564
    3. '(' → logprob: -2.6870338916778564
    4. '(*' → logprob: -4.1870341300964355
    5. '(
' → logprob: -8.187033653259277
    6. '("("' → logprob: -8.437033653259277
    7. '('' → logprob: -8.562033653259277
    8. '()' → logprob: -8.687033653259277
    9. '("")' → logprob: -10.562033653259277
    10. '(len' → logprob: -11.187033653259277

Token 718: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10167212039232254
    2. '\n' → logprob: -2.3516721725463867
    3. '"\' → logprob: -6.976672172546387
    4. '
' → logprob: -7.601672172546387
    5. '".' → logprob: -10.976672172546387
    6. 'join' → logprob: -11.851672172546387
    7. '"' → logprob: -12.351672172546387
    8. '("\' → logprob: -13.976672172546387
    9. ''\' → logprob: -14.351672172546387
    10. '\
' → logprob: -15.226672172546387

Token 719: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -6.704273118884885e-07
    2. 'join' → logprob: -15.250000953674316
    3. '"' → logprob: -15.625000953674316
    4. ''.' → logprob: -16.625
    5. '.join' → logprob: -16.875
    6. '")' → logprob: -17.875
    7. '").' → logprob: -18.0
    8. '.' → logprob: -18.375
    9. '\n' → logprob: -19.75
    10. '`.' → logprob: -20.0

Token 720: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. '".' → logprob: -15.625
    3. 'print' → logprob: -17.5
    4. 'j' → logprob: -17.875
    5. 'jo' → logprob: -17.875
    6. ' join' → logprob: -18.125
    7. '.join' → logprob: -19.5
    8. ').' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '.' → logprob: -20.25

Token 721: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.0019291093340143561
    2. 'results' → logprob: -6.25192928314209
    3. ' results' → logprob: -14.87692928314209
    4. '	results' → logprob: -16.251928329467773
    5. '(' → logprob: -17.376928329467773
    6. '(
' → logprob: -17.876928329467773
    7. '```' → logprob: -18.876928329467773
    8. '(result' → logprob: -19.001928329467773
    9. 'Results' → logprob: -19.251928329467773
    10. '.results' → logprob: -20.126928329467773

Token 722: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.129266067640856e-05
    2. '))' → logprob: -11.250020980834961
    3. '())' → logprob: -11.875020980834961
    4. '()' → logprob: -15.000020980834961
    5. ' )' → logprob: -15.375020980834961
    6. ')
' → logprob: -15.500020980834961
    7. '")' → logprob: -16.25002098083496
    8. '       ' → logprob: -16.37502098083496
    9. ')}' → logprob: -16.50002098083496
    10. '   ' → logprob: -16.50002098083496

Token 723: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.893480243277736e-05
    2. ' if' → logprob: -10.500039100646973
    3. 'Problem' → logprob: -12.125039100646973
    4. '```' → logprob: -12.250039100646973
    5. '#' → logprob: -14.625039100646973
    6. 'solver' → logprob: -14.875039100646973
    7. 'ifs' → logprob: -16.000038146972656
    8. 'If' → logprob: -16.125038146972656
    9. 'ps' → logprob: -16.250038146972656
    10. 'problem' → logprob: -17.375038146972656

Token 724: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16023032367229462
    2. '__' → logprob: -1.910230278968811
    3. 'name' → logprob: -12.41023063659668
    4. '_' → logprob: -13.41023063659668
    5. ' ' → logprob: -15.28523063659668
    6. '___' → logprob: -15.66023063659668
    7. '_name' → logprob: -16.53523063659668
    8. ' ' → logprob: -17.28523063659668
    9. '/__' → logprob: -17.53523063659668
    10. '  ' → logprob: -17.66023063659668

Token 725: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.057504136115312576
    2. 'if' → logprob: -3.682504177093506
    3. ' ==' → logprob: -4.307504177093506
    4. 'name' → logprob: -4.557504177093506
    5. ' __' → logprob: -5.682504177093506
    6. '==' → logprob: -5.932504177093506
    7. ' if' → logprob: -8.682503700256348
    8. '```' → logprob: -8.807503700256348
    9. '[' → logprob: -9.682503700256348
    10. '__.__' → logprob: -9.807503700256348

Token 726: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.584239938296378e-06
    2. '__.__' → logprob: -12.125007629394531
    3. '==' → logprob: -13.875007629394531
    4. 'name' → logprob: -14.750007629394531
    5. '=="' → logprob: -15.375007629394531
    6. '__.' → logprob: -15.500007629394531
    7. '___' → logprob: -15.625007629394531
    8. '____' → logprob: -15.750007629394531
    9. '__
' → logprob: -17.37500762939453
    10. ' ==' → logprob: -17.37500762939453

Token 727: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00043591417488642037
    2. '==' → logprob: -8.000435829162598
    3. ' ==' → logprob: -9.875435829162598
    4. '=="' → logprob: -10.625435829162598
    5. '__.__' → logprob: -10.750435829162598
    6. '__.' → logprob: -14.000435829162598
    7. '___' → logprob: -14.250435829162598
    8. '_' → logprob: -14.375435829162598
    9. '____' → logprob: -15.125435829162598
    10. ' __' → logprob: -15.750435829162598

Token 728: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0031821096781641245
    2. ''' → logprob: -5.7531819343566895
    3. ' "__' → logprob: -12.503182411193848
    4. '__' → logprob: -14.753182411193848
    5. '"class' → logprob: -16.25318145751953
    6. ''"' → logprob: -16.87818145751953
    7. ' '__' → logprob: -17.12818145751953
    8. '"user' → logprob: -17.25318145751953
    9. '   ' → logprob: -17.37818145751953
    10. '"'' → logprob: -17.50318145751953

Token 729: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009155054576694965
    2. '__' → logprob: -7.00091552734375
    3. 'name' → logprob: -13.12591552734375
    4. ' main' → logprob: -14.25091552734375
    5. '"' → logprob: -14.37591552734375
    6. '_main' → logprob: -14.50091552734375
    7. '__":
' → logprob: -16.75091552734375
    8. '-main' → logprob: -17.00091552734375
    9. 'Main' → logprob: -17.37591552734375
    10. 'MAIN' → logprob: -17.50091552734375

Token 730: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07978140562772751
    2. '__' → logprob: -2.5797812938690186
    3. '__':
' → logprob: -7.079781532287598
    4. '__:' → logprob: -10.079781532287598
    5. '__.' → logprob: -12.454781532287598
    6. '__
' → logprob: -13.829781532287598
    7. '__.__' → logprob: -13.954781532287598
    8. '__
' → logprob: -14.204781532287598
    9. '__["' → logprob: -14.829781532287598
    10. '__",' → logprob: -15.954781532287598

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007857519201934338
    2. 'Problem' → logprob: -4.882857322692871
    3. 'import' → logprob: -8.757857322692871
    4. ' Problem' → logprob: -10.257857322692871
    5. 'solver' → logprob: -11.382857322692871
    6. '_problem' → logprob: -11.382857322692871
    7. 'Solver' → logprob: -11.882857322692871
    8. '```' → logprob: -12.257857322692871
    9. '   ' → logprob: -12.382857322692871
    10. '  ' → logprob: -13.007857322692871

Token 732: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' (adapté à ' Problem') → logprob: -0.20467041432857513
    2. 'solver' → logprob: -1.8296704292297363
    3. 'import' → logprob: -3.8296704292297363
    4. 'ps' → logprob: -6.454670429229736
    5. '   ' → logprob: -6.829670429229736
    6. ' solver' → logprob: -9.579669952392578
    7. 'problem' → logprob: -9.954669952392578
    8. 'PS' → logprob: -10.204669952392578
    9. ' Problem' → logprob: -10.329669952392578
    10. 'sol' → logprob: -10.579669952392578

Token 733: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -9.088346359931165e-07
    2. 'solver' → logprob: -14.000000953674316
    3. '_solver' → logprob: -17.0
    4. ' Solver' → logprob: -18.0
    5. ' solver' → logprob: -20.125
    6. 'Sol' → logprob: -20.5
    7. 'Solve' → logprob: -22.0
    8. 'olver' → logprob: -22.25
    9. 'Runner' → logprob: -22.625
    10. 'Solved' → logprob: -22.625

Token 734: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22611752152442932
    2. '().' → logprob: -1.601117491722107
    3. '().__' → logprob: -7.4761176109313965
    4. '()(' → logprob: -10.101117134094238
    5. '(' → logprob: -10.851117134094238
    6. '();' → logprob: -11.101117134094238
    7. '()>' → logprob: -11.601117134094238
    8. '()<' → logprob: -11.851117134094238
    9. '()">' → logprob: -11.976117134094238
    10. '()?>' → logprob: -12.101117134094238

Token 735: 'run' (ID: 12935)
  Prédit: 'run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: 0.0
    2. ' run' → logprob: -19.5
    3. '.run' → logprob: -24.125
    4. '	run' → logprob: -24.75
    5. '_run' → logprob: -25.625
    6. '(run' → logprob: -26.5
    7. 'running' → logprob: -27.0
    8. 'r' → logprob: -27.375
    9. 'Run' → logprob: -27.875
    10. 'runner' → logprob: -28.5

Token 736: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 734
Tokens correctement prédits (1ère position, stricte): 350
Tokens correctement prédits (1ère position, avec adaptation): 383
Tokens correctement prédits (top 10): 636
Précision stricte (1ère position): 47.68%
Précision adaptée (1ère position): 52.18%
Précision (top 10): 86.65%
================================================================================
