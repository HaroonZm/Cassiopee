================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Score:
    def __init__(self, value: int):
        if not (0 <= value <= 1000):
            raise ValueError("Score must be between 0 and 1000")
        self.value = value

    def __lt__(self, other: 'Score') -> bool:
        return self.value < other.value

    def __le__(self, other: 'Score') -> bool:
        return self.value <= other.value

    def __eq__(self, other: 'Score') -> bool:
        return self.value == other.value

    def __repr__(self):
        return f"Score({self.value})"


class JudgeCollection:
    def __init__(self):
        self.scores = []

    def add_score(self, score: Score):
        self.scores.append(score)

    def validate(self):
        n = len(self.scores)
        if not (3 <= n <= 100):
            raise ValueError("Number of judges must be between 3 and 100")
        for s in self.scores:
            if not (0 <= s.value <= 1000):
                raise ValueError("Scores must be between 0 and 1000")

    def compute_final_score(self) -> int:
        self.validate()
        sorted_scores = sorted(self.scores, key=lambda s: s.value)
        # Remove exactly one minimum and one maximum score, even if duplicates.
        trimmed_scores = sorted_scores[1:-1]
        if not trimmed_scores:
            # If after trimming there's no score left, return 0 as safe fallback
            return 0
        total = sum(s.value for s in trimmed_scores)
        avg = total // len(trimmed_scores)  # truncated down
        return avg


class ICPCScoreProcessor:
    def __init__(self):
        self.datasets = []

    def parse_input(self, lines):
        """
        lines: iterable of strings containing the input lines,
        ending with '0' line which signals the end of all datasets
        """
        lines_iter = iter(lines)
        while True:
            try:
                n_line = next(lines_iter).strip()
                if n_line == '0':
                    break
                n = int(n_line)
                collection = JudgeCollection()
                for _ in range(n):
                    score_line = next(lines_iter).strip()
                    score = Score(int(score_line))
                    collection.add_score(score)
                self.datasets.append(collection)
            except StopIteration:
                # Unexpected EOF
                break

    def process(self):
        results = []
        for dataset in self.datasets:
            score = dataset.compute_final_score()
            results.append(score)
        return results


def main():
    import sys
    processor = ICPCScoreProcessor()
    processor.parse_input(sys.stdin)
    results = processor.process()
    for r in results:
        print(r)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Score' (ID: 30731)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13173139095306396
    2. ':' → logprob: -2.1317315101623535
    3. '```' → logprob: -6.2567315101623535
    4. '():' → logprob: -7.1317315101623535
    5. '.' → logprob: -7.5067315101623535
    6. '   ' → logprob: -7.7567315101623535
    7. '\' → logprob: -8.381731033325195
    8. '(
' → logprob: -8.631731033325195
    9. ''' → logprob: -9.006731033325195
    10. ' (' → logprob: -9.631731033325195

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4099629521369934
    2. 'def' (adapté à ' def') → logprob: -1.9099628925323486
    3. '(' → logprob: -2.4099628925323486
    4. '_' → logprob: -3.1599628925323486
    5. ' def' → logprob: -4.034963130950928
    6. '```' → logprob: -4.034963130950928
    7. '    ' → logprob: -5.284963130950928
    8. '\' → logprob: -5.659963130950928
    9. ' ' → logprob: -5.659963130950928
    10. ''' → logprob: -6.534963130950928

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03239165246486664
    2. '__' → logprob: -4.532391548156738
    3. ' __' → logprob: -4.532391548156738
    4. ' ' → logprob: -5.282391548156738
    5. '    ' → logprob: -6.657391548156738
    6. ' calculate' → logprob: -6.907391548156738
    7. '     ' → logprob: -7.907391548156738
    8. 'calculate' → logprob: -8.032391548156738
    9. '  ' → logprob: -8.157391548156738
    10. '`' → logprob: -8.532391548156738

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.349075556499884e-05
    2. '_init' → logprob: -10.2500638961792
    3. ' init' → logprob: -10.5000638961792
    4. '_' → logprob: -15.6250638961792
    5. 'ini' → logprob: -15.7500638961792
    6. '	init' → logprob: -16.000062942504883
    7. '_i' → logprob: -17.000062942504883
    8. 'i' → logprob: -17.625062942504883
    9. 'int' → logprob: -18.875062942504883
    10. '  ' → logprob: -18.875062942504883

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.25259900093078613
    2. '__' → logprob: -1.5025990009307861
    3. '__(
' → logprob: -7.877598762512207
    4. '_' → logprob: -9.252598762512207
    5. '(' → logprob: -9.252598762512207
    6. '__((' → logprob: -9.627598762512207
    7. '__('' → logprob: -11.002598762512207
    8. '___' → logprob: -12.502598762512207
    9. '(self' → logprob: -12.627598762512207
    10. '__(*' → logprob: -12.627598762512207

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000652389950118959
    2. ' self' → logprob: -7.375652313232422
    3. ')' → logprob: -11.500652313232422
    4. '(self' → logprob: -11.500652313232422
    5. ' ' → logprob: -13.000652313232422
    6. ' )' → logprob: -13.875652313232422
    7. '   ' → logprob: -14.500652313232422
    8. 's' → logprob: -14.625652313232422
    9. '_self' → logprob: -15.375652313232422
    10. '       ' → logprob: -15.500652313232422

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0944240391254425
    2. ')' → logprob: -3.34442400932312
    3. '.' → logprob: -3.59442400932312
    4. '_' → logprob: -4.094424247741699
    5. 'self' → logprob: -5.594424247741699
    6. '<|end|>' → logprob: -6.594424247741699
    7. ' ,' → logprob: -6.719424247741699
    8. '):' → logprob: -6.719424247741699
    9. '(' → logprob: -6.969424247741699
    10. 's' → logprob: -7.844424247741699

Token 10: ' value' (ID: 1432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04912921413779259
    2. ' self' → logprob: -3.0491292476654053
    3. 'score' → logprob: -7.674129009246826
    4. 'player' → logprob: -10.924129486083984
    5. 'name' → logprob: -11.049129486083984
    6. ' score' → logprob: -11.299129486083984
    7. ')' → logprob: -11.424129486083984
    8. ' )' → logprob: -11.799129486083984
    9. 'value' → logprob: -12.924129486083984
    10. ' player' → logprob: -13.049129486083984

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00412446865811944
    2. ')' → logprob: -5.879124641418457
    3. ':' → logprob: -7.254124641418457
    4. '=' → logprob: -8.129124641418457
    5. ',' → logprob: -8.254124641418457
    6. '):
' → logprob: -10.379124641418457
    7. '_' → logprob: -11.754124641418457
    8. '   ' → logprob: -12.129124641418457
    9. ' ):' → logprob: -12.504124641418457
    10. 's' → logprob: -13.754124641418457

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6932817101478577
    2. ' int' → logprob: -0.6932817101478577
    3. ' )' → logprob: -9.943282127380371
    4. ')' → logprob: -10.068282127380371
    5. ' float' → logprob: -11.193282127380371
    6. 'float' → logprob: -11.693282127380371
    7. ' ' → logprob: -11.943282127380371
    8. '=int' → logprob: -12.318282127380371
    9. ':int' → logprob: -13.443282127380371
    10. '   ' → logprob: -13.443282127380371

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018296843394637108
    2. ')' → logprob: -4.018296718597412
    3. ':' → logprob: -9.76829719543457
    4. '):
' → logprob: -10.14329719543457
    5. ',' → logprob: -10.26829719543457
    6. '   ' → logprob: -11.76829719543457
    7. ' ):' → logprob: -13.01829719543457
    8. ')>' → logprob: -14.14329719543457
    9. '       ' → logprob: -14.39329719543457
    10. '),' → logprob: -14.51829719543457

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009171321988105774
    2. '    ' → logprob: -5.884171485900879
    3. '   ' → logprob: -5.884171485900879
    4. ' ' → logprob: -6.759171485900879
    5. 'self' → logprob: -7.634171485900879
    6. ')' → logprob: -8.009171485900879
    7. '<|end|>' → logprob: -8.259171485900879
    8. '        ' → logprob: -8.509171485900879
    9. ' self' → logprob: -8.759171485900879
    10. '_' → logprob: -9.134171485900879

Token 15: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1351538747549057
    2. '       ' → logprob: -2.2601537704467773
    3. ' self' → logprob: -3.8851537704467773
    4. '   ' → logprob: -7.260153770446777
    5. '        ' → logprob: -8.510153770446777
    6. '           ' → logprob: -8.510153770446777
    7. ' ' → logprob: -8.635153770446777
    8. 's' → logprob: -9.010153770446777
    9. '         ' → logprob: -10.760153770446777
    10. '```' → logprob: -10.760153770446777

Token 16: ' not' (ID: 625)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.001484747277572751
    2. 'value' → logprob: -7.2514848709106445
    3. ' not' → logprob: -7.3764848709106445
    4. ' ' → logprob: -9.126484870910645
    5. ' self' → logprob: -10.376484870910645
    6. ' score' → logprob: -12.751484870910645
    7. ' ' → logprob: -12.751484870910645
    8. '(value' → logprob: -13.376484870910645
    9. ' isinstance' → logprob: -14.251484870910645
    10. ' (' → logprob: -15.251484870910645

Token 17: ' (' (ID: 350)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0007910476415418088
    2. ' (' → logprob: -7.625791072845459
    3. 'is' → logprob: -8.6257905960083
    4. ' value' → logprob: -10.1257905960083
    5. '0' → logprob: -10.3757905960083
    6. 'value' → logprob: -11.0007905960083
    7. '(value' → logprob: -11.3757905960083
    8. ' ' → logprob: -11.6257905960083
    9. '(' → logprob: -11.6257905960083
    10. '(is' → logprob: -12.5007905960083

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01107033807784319
    2. '1' → logprob: -5.511070251464844
    3. ' ' → logprob: -5.761070251464844
    4. 'is' → logprob: -6.011070251464844
    5. ' isinstance' → logprob: -6.636070251464844
    6. 'value' → logprob: -10.886070251464844
    7. '   ' → logprob: -11.511070251464844
    8. 'type' → logprob: -11.511070251464844
    9. '-' → logprob: -12.386070251464844
    10. '100' → logprob: -12.761070251464844

Token 19: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4741511344909668
    2. '<=' → logprob: -0.9741511344909668
    3. ' ' → logprob: -10.099151611328125
    4. '<' → logprob: -11.224151611328125
    5. '=' → logprob: -11.349151611328125
    6. '0' → logprob: -12.599151611328125
    7. ' <' → logprob: -13.349151611328125
    8. '=<' → logprob: -13.974151611328125
    9. ' ' → logprob: -14.599151611328125
    10. '%' → logprob: -15.974151611328125

Token 20: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.10020732134580612
    2. ' value' → logprob: -2.3502073287963867
    3. ')value' → logprob: -14.850207328796387
    4. 'Value' → logprob: -16.97520637512207
    5. '	value' → logprob: -17.10020637512207
    6. 'alue' → logprob: -17.35020637512207
    7. 'self' → logprob: -17.35020637512207
    8. ' ' → logprob: -17.60020637512207
    9. '_value' → logprob: -18.10020637512207
    10. '   ' → logprob: -18.47520637512207

Token 21: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014517917297780514
    2. '<=' → logprob: -4.264517784118652
    3. ' <' → logprob: -8.139517784118652
    4. ' and' → logprob: -11.014517784118652
    5. '<' → logprob: -11.139517784118652
    6. ' ' → logprob: -11.389517784118652
    7. '<|end|>' → logprob: -12.139517784118652
    8. 'and' → logprob: -12.514517784118652
    9. 'value' → logprob: -12.764517784118652
    10. ')' → logprob: -13.389517784118652

Token 22: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.07034862786531448
    2. ' ' → logprob: -2.6953487396240234
    3. '10' → logprob: -7.820348739624023
    4. '1' → logprob: -12.320348739624023
    5. '   ' → logprob: -12.570348739624023
    6. '  ' → logprob: -13.695348739624023
    7. '```' → logprob: -14.195348739624023
    8. '20' → logprob: -14.820348739624023
    9. '0' → logprob: -16.070348739624023
    10. ')' → logprob: -16.195348739624023

Token 23: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0006221305229701102
    2. '10' → logprob: -7.625622272491455
    3. ' ' → logprob: -9.000621795654297
    4. '1' → logprob: -11.625621795654297
    5. '   ' → logprob: -14.375621795654297
    6. '20' → logprob: -15.000621795654297
    7. '  ' → logprob: -15.250621795654297
    8. '```' → logprob: -15.875621795654297
    9. '0' → logprob: -16.375621795654297
    10. '5' → logprob: -16.750621795654297

Token 24: '0' (ID: 15)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022642093244940042
    2. ' ):' → logprob: -6.627264022827148
    3. ':' → logprob: -7.877264022827148
    4. '):
' → logprob: -8.002264022827148
    5. ')' → logprob: -8.502264022827148
    6. '       ' → logprob: -11.877264022827148
    7. ' and' → logprob: -12.127264022827148
    8. ' :' → logprob: -13.502264022827148
    9. ' )' → logprob: -13.502264022827148
    10. '):
' → logprob: -13.502264022827148

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01575055532157421
    2. ' ):' → logprob: -4.265750408172607
    3. '):
' → logprob: -7.390750408172607
    4. ')' → logprob: -7.390750408172607
    5. ':' → logprob: -8.265750885009766
    6. ' ):
' → logprob: -10.640750885009766
    7. ' and' → logprob: -10.765750885009766
    8. ' )' → logprob: -10.765750885009766
    9. '       ' → logprob: -11.140750885009766
    10. ' :' → logprob: -12.140750885009766

Token 26: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2082468569278717
    2. ':' → logprob: -2.083246946334839
    3. ' raise' → logprob: -3.708246946334839
    4. ' :' → logprob: -3.958246946334839
    5. 'raise' → logprob: -5.45824670791626
    6. ':
' → logprob: -5.70824670791626
    7. '<|end|>' → logprob: -5.70824670791626
    8. '       ' → logprob: -6.08324670791626
    9. '\' → logprob: -6.83324670791626
    10. '\n' → logprob: -7.33324670791626

Token 27: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.12361102551221848
    2. 'raise' (adapté à ' raise') → logprob: -2.3736109733581543
    3. '           ' → logprob: -3.8736109733581543
    4. '            ' → logprob: -6.373610973358154
    5. '	raise' → logprob: -8.373611450195312
    6. '_raise' → logprob: -8.623611450195312
    7. '        ' → logprob: -9.498611450195312
    8. '               ' → logprob: -10.498611450195312
    9. ' ' → logprob: -10.873611450195312
    10. ' ' → logprob: -11.248611450195312

Token 28: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0006345203728415072
    2. 'Value' → logprob: -7.375634670257568
    3. ' Val' → logprob: -12.25063419342041
    4. ' ' → logprob: -13.00063419342041
    5. '	Value' → logprob: -14.87563419342041
    6. ' value' → logprob: -15.25063419342041
    7. '_Value' → logprob: -16.125635147094727
    8. ' Va' → logprob: -16.250635147094727
    9. '<Value' → logprob: -16.875635147094727
    10. ' ' → logprob: -17.000635147094727

Token 29: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.04860779643058777
    2. 'rror' → logprob: -3.04860782623291
    3. 'r' → logprob: -10.92360782623291
    4. 'ror' → logprob: -13.54860782623291
    5. 'rr' → logprob: -14.42360782623291
    6. 'Er' → logprob: -15.79860782623291
    7. ' Error' → logprob: -16.548606872558594
    8. 'error' → logprob: -16.798606872558594
    9. 'R' → logprob: -16.798606872558594
    10. '   ' → logprob: -16.923606872558594

Token 30: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04520779103040695
    2. '("' → logprob: -3.1702077388763428
    3. '('' → logprob: -6.670207977294922
    4. '(
' → logprob: -7.670207977294922
    5. ':' → logprob: -8.545207977294922
    6. '()' → logprob: -8.795207977294922
    7. ',' → logprob: -10.045207977294922
    8. '       ' → logprob: -11.045207977294922
    9. ' ' → logprob: -11.420207977294922
    10. '           ' → logprob: -11.795207977294922

Token 31: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.02280430868268013
    2. 'Value' → logprob: -4.022804260253906
    3. 'Invalid' → logprob: -6.022804260253906
    4. 'score' → logprob: -6.522804260253906
    5. 'value' → logprob: -7.772804260253906
    6. 'S' → logprob: -9.022804260253906
    7. 'Sc' → logprob: -9.272804260253906
    8. ' Score' → logprob: -10.522804260253906
    9. 'The' → logprob: -10.772804260253906
    10. 'Sco' → logprob: -11.272804260253906

Token 32: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0001872094871941954
    2. ' value' → logprob: -9.000186920166016
    3. ' should' → logprob: -10.375186920166016
    4. 'must' → logprob: -10.875186920166016
    5. ' out' → logprob: -11.500186920166016
    6. ' score' → logprob: -13.750186920166016
    7. ' ' → logprob: -13.875186920166016
    8. 'value' → logprob: -14.625186920166016
    9. ' cannot' → logprob: -14.875186920166016
    10. ' can' → logprob: -15.750186920166016

Token 33: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -10.125052452087402
    3. ' not' → logprob: -11.875052452087402
    4. ' between' → logprob: -13.125052452087402
    5. ' must' → logprob: -13.875052452087402
    6. '<|end|>' → logprob: -14.125052452087402
    7. ' )' → logprob: -14.625052452087402
    8. 'be' → logprob: -15.375052452087402
    9. '	be' → logprob: -16.125051498413086
    10. ' to' → logprob: -16.500051498413086

Token 34: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.0007995037594810128
    2. 'between' → logprob: -7.375799655914307
    3. ' ' → logprob: -8.875799179077148
    4. ' an' → logprob: -11.250799179077148
    5. ' a' → logprob: -11.625799179077148
    6. ' within' → logprob: -12.375799179077148
    7. '0' → logprob: -12.750799179077148
    8. ' in' → logprob: -12.875799179077148
    9. ' bet' → logprob: -14.375799179077148
    10. 'Between' → logprob: -16.00079917907715

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12692883610725403
    2. '0' → logprob: -2.1269288063049316
    3. '1' → logprob: -15.25192928314209
    4. ' ' → logprob: -15.62692928314209
    5. '```' → logprob: -16.001928329467773
    6. '  ' → logprob: -17.189428329467773
    7. ' )' → logprob: -17.251928329467773
    8. ' and' → logprob: -17.501928329467773
    9. '100' → logprob: -17.564428329467773
    10. '<|end|>' → logprob: -18.189428329467773

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -17.000051498413086
    4. '1' → logprob: -17.875051498413086
    5. '000' → logprob: -17.875051498413086
    6. '۰' → logprob: -18.125051498413086
    7. '   ' → logprob: -18.937551498413086
    8. '`' → logprob: -19.437551498413086
    9. '٠' → logprob: -19.625051498413086
    10. ')' → logprob: -19.687551498413086

Token 37: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017116911709308624
    2. ' ' → logprob: -4.392117023468018
    3. 'and' → logprob: -5.517117023468018
    4. ' a' → logprob: -7.767117023468018
    5. '0' → logprob: -9.26711654663086
    6. 'a' → logprob: -11.01711654663086
    7. '1' → logprob: -11.01711654663086
    8. '  ' → logprob: -11.14211654663086
    9. '   ' → logprob: -11.89211654663086
    10. ' an' → logprob: -13.14211654663086

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06994810700416565
    2. '100' → logprob: -2.694948196411133
    3. '1' → logprob: -12.069948196411133
    4. ' ' → logprob: -12.569948196411133
    5. '10' → logprob: -13.569948196411133
    6. '```' → logprob: -14.194948196411133
    7. '  ' → logprob: -15.319948196411133
    8. '   ' → logprob: -16.507448196411133
    9. '0' → logprob: -17.194948196411133
    10. 's' → logprob: -17.632448196411133

Token 39: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -14.000001907348633
    3. '10' → logprob: -14.125001907348633
    4. ' ' → logprob: -15.375001907348633
    5. '１００' → logprob: -16.750001907348633
    6. '```' → logprob: -17.625001907348633
    7. '999' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.312501907348633
    9. '0' → logprob: -21.500001907348633
    10. '

' → logprob: -21.625001907348633

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.5
    3. '")' → logprob: -17.125
    4. '۰' → logprob: -17.625
    5. ' ' → logprob: -18.25
    6. '   ' → logprob: -19.625
    7. '٠' → logprob: -19.75
    8. '00' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. '०' → logprob: -20.25

Token 41: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0010715120006352663
    2. '")
' → logprob: -6.876071453094482
    3. '.")' → logprob: -10.87607192993164
    4. '")
' → logprob: -11.37607192993164
    5. ')")' → logprob: -12.62607192993164
    6. '"' → logprob: -12.75107192993164
    7. ')' → logprob: -13.75107192993164
    8. ' ")' → logprob: -14.87607192993164
    9. '!")' → logprob: -15.25107192993164
    10. '.")
' → logprob: -16.00107192993164

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010845718905329704
    2. '
' → logprob: -5.51084566116333
    3. '   ' → logprob: -6.13584566116333
    4. '    
' → logprob: -6.63584566116333
    5. '        
' → logprob: -6.88584566116333
    6. 'self' → logprob: -7.26084566116333
    7. '\n' → logprob: -7.38584566116333
    8. ' 
' → logprob: -8.260846138000488
    9. ')' → logprob: -9.260846138000488
    10. '\' → logprob: -9.635846138000488

Token 43: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01433121133595705
    2. 'self' (adapté à ' self') → logprob: -4.764331340789795
    3. '   ' → logprob: -5.764331340789795
    4. '        
' → logprob: -7.764331340789795
    5. ' self' → logprob: -7.889331340789795
    6. '\n' → logprob: -8.014330863952637
    7. '    
' → logprob: -8.139330863952637
    8. ' 
' → logprob: -8.639330863952637
    9. '<|end|>' → logprob: -8.889330863952637
    10. ' ' → logprob: -9.014330863952637

Token 44: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.12734968960285187
    2. '.' → logprob: -2.127349615097046
    3. '.score' → logprob: -8.002349853515625
    4. ' .' → logprob: -10.002349853515625
    5. '._' → logprob: -10.627349853515625
    6. 'value' → logprob: -11.252349853515625
    7. ' value' → logprob: -13.002349853515625
    8. '.val' → logprob: -14.627349853515625
    9. ' ' → logprob: -14.877349853515625
    10. '.values' → logprob: -15.752349853515625

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326571106910706
    2. ' =' → logprob: -1.3132656812667847
    3. ' ' → logprob: -13.438265800476074
    4. ' =
' → logprob: -14.313265800476074
    5. '<|end|>' → logprob: -14.563265800476074
    6. '_' → logprob: -15.063265800476074
    7. ' =)' → logprob: -15.063265800476074
    8. '.' → logprob: -15.063265800476074
    9. '   ' → logprob: -15.438265800476074
    10. '=
' → logprob: -16.313264846801758

Token 46: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.07889264822006226
    2. 'value' → logprob: -2.578892707824707
    3. ' ' → logprob: -13.078892707824707
    4. '(value' → logprob: -15.453892707824707
    5. ' ' → logprob: -15.453892707824707
    6. '	value' → logprob: -16.20389175415039
    7. '"value' → logprob: -16.70389175415039
    8. ')value' → logprob: -16.82889175415039
    9. '    ' → logprob: -17.45389175415039
    10. 'Value' → logprob: -17.82889175415039

Token 47: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8108919262886047
    2. '
' → logprob: -1.43589186668396
    3. '<|end|>' → logprob: -1.43589186668396
    4. ':' → logprob: -3.43589186668396
    5. ' ' → logprob: -5.185892105102539
    6. ' 
' → logprob: -5.185892105102539
    7. ')' → logprob: -5.310892105102539
    8. '```' → logprob: -5.435892105102539
    9. '\' → logprob: -5.560892105102539
    10. '\n' → logprob: -5.685892105102539

Token 48: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45139065384864807
    2. '<|end|>' → logprob: -2.4513907432556152
    3. '.' → logprob: -2.5763907432556152
    4. '   ' → logprob: -2.7013907432556152
    5. ':' → logprob: -3.3263907432556152
    6. ' 
' → logprob: -4.201390743255615
    7. 'def' → logprob: -4.576390743255615
    8. ' ' → logprob: -4.701390743255615
    9. '  
' → logprob: -4.701390743255615
    10. '```' → logprob: -4.701390743255615

Token 49: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.48837313055992126
    2. 'def' (adapté à ' def') → logprob: -1.1133731603622437
    3. '   ' → logprob: -3.863373041152954
    4. ' ' → logprob: -4.863373279571533
    5. '
' → logprob: -4.988373279571533
    6. '    
' → logprob: -5.113373279571533
    7. ' 
' → logprob: -5.113373279571533
    8. '@' → logprob: -5.863373279571533
    9. '```' → logprob: -5.988373279571533
    10. '@property' → logprob: -6.863373279571533

Token 50: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09190057963132858
    2. '_' → logprob: -2.716900587081909
    3. ' space' → logprob: -4.34190034866333
    4. ' _' → logprob: -6.09190034866333
    5. '_space' → logprob: -6.59190034866333
    6. ' __' → logprob: -6.71690034866333
    7. ' get' → logprob: -6.84190034866333
    8. ' ' → logprob: -7.71690034866333
    9. ' `' → logprob: -7.84190034866333
    10. ' ```' → logprob: -8.091900825500488

Token 51: 'lt' (ID: 3199)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.2977839410305023
    2. 'str' → logprob: -2.047783851623535
    3. 'lt' → logprob: -2.297783851623535
    4. 'repr' → logprob: -3.797783851623535
    5. 'add' → logprob: -6.422783851623535
    6. 'gt' → logprob: -6.922783851623535
    7. 'ge' → logprob: -6.922783851623535
    8. 'init' → logprob: -7.047783851623535
    9. 'le' → logprob: -7.172783851623535
    10. 'i' → logprob: -8.422783851623535

Token 52: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.342174232006073
    2. '__(' → logprob: -1.3421742916107178
    3. '_' → logprob: -3.5921742916107178
    4. '___' → logprob: -7.467174053192139
    5. '__('' → logprob: -8.842174530029297
    6. '_(' → logprob: -9.092174530029297
    7. '__((' → logprob: -9.717174530029297
    8. '__(
' → logprob: -10.467174530029297
    9. '(' → logprob: -11.092174530029297
    10. '____' → logprob: -12.092174530029297

Token 53: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001343446783721447
    2. 'other' → logprob: -6.626343250274658
    3. ' self' → logprob: -11.001343727111816
    4. ' other' → logprob: -14.876343727111816
    5. 'o' → logprob: -15.626343727111816
    6. ' ' → logprob: -16.1263427734375
    7. 'score' → logprob: -16.7513427734375
    8. 'oth' → logprob: -17.3763427734375
    9. '   ' → logprob: -17.6263427734375
    10. 's' → logprob: -17.8763427734375

Token 54: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3875334560871124
    2. '__' → logprob: -1.26253342628479
    3. ',' → logprob: -3.38753342628479
    4. '__,' → logprob: -6.512533664703369
    5. ' ,' → logprob: -6.887533664703369
    6. '_,' → logprob: -7.762533664703369
    7. ' ' → logprob: -7.762533664703369
    8. '__(' → logprob: -8.012533187866211
    9. '(' → logprob: -8.387533187866211
    10. ')' → logprob: -8.637533187866211

Token 55: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16034963726997375
    2. ' other' → logprob: -1.9103496074676514
    3. 'self' → logprob: -9.28534984588623
    4. 'o' → logprob: -11.03534984588623
    5. ' o' → logprob: -11.78534984588623
    6. '_other' → logprob: -12.91034984588623
    7. ' self' → logprob: -13.28534984588623
    8. 'Other' → logprob: -13.28534984588623
    9. '(other' → logprob: -13.66034984588623
    10. 'othe' → logprob: -14.53534984588623

Token 56: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6731722950935364
    2. '):' → logprob: -0.7981722950935364
    3. ' )' → logprob: -3.5481722354888916
    4. ' ):' → logprob: -4.673172473907471
    5. ',' → logprob: -6.673172473907471
    6. '):
' → logprob: -9.173171997070312
    7. ' ,' → logprob: -9.423171997070312
    8. ':' → logprob: -10.048171997070312
    9. ' ' → logprob: -10.048171997070312
    10. '<|end|>' → logprob: -11.423171997070312

Token 57: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06020133197307587
    2. ' Score' → logprob: -2.935201406478882
    3. ' )' → logprob: -5.560201168060303
    4. 'Score' → logprob: -7.435201168060303
    5. ')' → logprob: -7.810201168060303
    6. ' ' → logprob: -8.435201644897461
    7. '  ' → logprob: -9.310201644897461
    8. ' '' → logprob: -10.060201644897461
    9. ' score' → logprob: -10.685201644897461
    10. ' Scores' → logprob: -10.935201644897461

Token 58: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.00029613598599098623
    2. 'S' → logprob: -8.750296592712402
    3. 'Sc' → logprob: -9.250296592712402
    4. 'Sco' → logprob: -10.250296592712402
    5. ' Score' → logprob: -12.125296592712402
    6. 'Scores' → logprob: -14.750296592712402
    7. '.Score' → logprob: -16.250295639038086
    8. '_score' → logprob: -16.625295639038086
    9. 'Scr' → logprob: -16.875295639038086
    10. 'score' → logprob: -17.000295639038086

Token 59: '')' (ID: 1542)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.4547343850135803
    2. '')' → logprob: -1.2047343254089355
    3. ')' → logprob: -2.9547343254089355
    4. '):' → logprob: -4.4547343254089355
    5. ':' → logprob: -6.8297343254089355
    6. ''' → logprob: -8.079734802246094
    7. ' ')' → logprob: -8.954734802246094
    8. ')':' → logprob: -9.454734802246094
    9. ' '' → logprob: -9.704734802246094
    10. ''):
' → logprob: -9.954734802246094

Token 60: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003909318707883358
    2. '):' → logprob: -5.628909111022949
    3. '():' → logprob: -8.62890911102295
    4. ':
' → logprob: -10.25390911102295
    5. ' :' → logprob: -10.50390911102295
    6. ':return' → logprob: -10.50390911102295
    7. ':**' → logprob: -11.50390911102295
    8. '<|end|>' → logprob: -11.62890911102295
    9. ')' → logprob: -11.75390911102295
    10. '>:' → logprob: -12.37890911102295

Token 61: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.31392624974250793
    2. 'bool' → logprob: -1.3139262199401855
    3. ' ' → logprob: -7.9389262199401855
    4. ' '' → logprob: -9.438926696777344
    5. '  ' → logprob: -10.188926696777344
    6. '   ' → logprob: -10.313926696777344
    7. ''' → logprob: -10.563926696777344
    8. ' 
' → logprob: -10.813926696777344
    9. '<bool' → logprob: -10.813926696777344
    10. ' ' → logprob: -10.938926696777344

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000712670327629894
    2. '):' → logprob: -8.125712394714355
    3. ' :' → logprob: -8.375712394714355
    4. '(' → logprob: -9.000712394714355
    5. ':
' → logprob: -10.500712394714355
    6. ':return' → logprob: -11.500712394714355
    7. '       ' → logprob: -12.000712394714355
    8. ')' → logprob: -12.125712394714355
    9. ':**' → logprob: -12.750712394714355
    10. ',' → logprob: -13.000712394714355

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01782621070742607
    2. ' return' → logprob: -4.517826080322266
    3. '        ' → logprob: -6.267826080322266
    4. 'return' → logprob: -6.642826080322266
    5. ' 
' → logprob: -6.892826080322266
    6. '
' → logprob: -7.642826080322266
    7. '<|end|>' → logprob: -7.892826080322266
    8. ' ' → logprob: -8.142826080322266
    9. '    ' → logprob: -8.267826080322266
    10. '   ' → logprob: -8.517826080322266

Token 64: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6936472654342651
    2. '       ' → logprob: -0.9436472654342651
    3. ' return' → logprob: -2.3186473846435547
    4. 'self' → logprob: -4.693647384643555
    5. 'r' → logprob: -6.818647384643555
    6. ' self' → logprob: -7.318647384643555
    7. ' ' → logprob: -8.068647384643555
    8. '   ' → logprob: -8.693647384643555
    9. ' 
' → logprob: -8.818647384643555
    10. '        
' → logprob: -8.943647384643555

Token 65: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.00407923199236393
    2. 'self' → logprob: -5.504079341888428
    3. ' ' → logprob: -14.37907886505127
    4. ' ' → logprob: -15.87907886505127
    5. '(self' → logprob: -17.379079818725586
    6. '    ' → logprob: -17.629079818725586
    7. '	self' → logprob: -17.879079818725586
    8. '_self' → logprob: -18.254079818725586
    9. '        ' → logprob: -18.379079818725586
    10. 'Self' → logprob: -18.754079818725586

Token 66: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00193149340339005
    2. '.' → logprob: -6.251931667327881
    3. '.user' → logprob: -14.501931190490723
    4. '.v' → logprob: -14.626931190490723
    5. ' .' → logprob: -14.751931190490723
    6. '.val' → logprob: -14.751931190490723
    7. '.score' → logprob: -15.126931190490723
    8. 'value' → logprob: -15.126931190490723
    9. '.values' → logprob: -15.626931190490723
    10. ').' → logprob: -16.50193214416504

Token 67: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0008068907191045582
    2. '<' → logprob: -7.12580680847168
    3. ' ' → logprob: -13.12580680847168
    4. ' <
' → logprob: -16.50080680847168
    5. '  ' → logprob: -16.62580680847168
    6. ' ' → logprob: -16.75080680847168
    7. '.' → logprob: -16.87580680847168
    8. ' *' → logprob: -17.25080680847168
    9. '   ' → logprob: -17.50080680847168
    10. '<|end|>' → logprob: -17.75080680847168

Token 68: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.004078758880496025
    2. 'other' → logprob: -5.5040788650512695
    3. '(other' → logprob: -15.75407886505127
    4. ' ' → logprob: -16.379077911376953
    5. '.other' → logprob: -16.504077911376953
    6. ' o' → logprob: -17.629077911376953
    7. '_other' → logprob: -18.129077911376953
    8. ' oth' → logprob: -18.129077911376953
    9. ' ' → logprob: -18.504077911376953
    10. 'Other' → logprob: -19.379077911376953

Token 69: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.04860507696866989
    2. '.' → logprob: -3.048604965209961
    3. 'value' → logprob: -11.173604965209961
    4. ' .' → logprob: -13.048604965209961
    5. '.values' → logprob: -15.548604965209961
    6. '.val' → logprob: -15.673604965209961
    7. '.
' → logprob: -15.798604965209961
    8. '`.' → logprob: -16.17360496520996
    9. ').' → logprob: -16.54860496520996
    10. ''.' → logprob: -16.54860496520996

Token 70: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2074057012796402
    2. '   ' → logprob: -2.2074058055877686
    3. '<|end|>' → logprob: -3.4574058055877686
    4. '

' → logprob: -3.8324058055877686
    5. '    
' → logprob: -5.0824055671691895
    6. ' ' → logprob: -5.0824055671691895
    7. ' 
' → logprob: -5.5824055671691895
    8. '  
' → logprob: -6.3324055671691895
    9. '```' → logprob: -6.4574055671691895
    10. '\n' → logprob: -6.8324055671691895

Token 72: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3586195707321167
    2. '
' → logprob: -2.1086196899414062
    3. '<|end|>' → logprob: -2.2336196899414062
    4. ' ' → logprob: -3.4836196899414062
    5. '    
' → logprob: -4.108619689941406
    6. 'def' (adapté à ' def') → logprob: -5.483619689941406
    7. ' 
' → logprob: -5.608619689941406
    8. '  
' → logprob: -5.858619689941406
    9. '```' → logprob: -5.983619689941406
    10. '  ' → logprob: -6.233619689941406

Token 73: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04749085381627083
    2. '__' → logprob: -3.1724908351898193
    3. '_' → logprob: -5.547491073608398
    4. ' ' → logprob: -8.422491073608398
    5. ' ' → logprob: -8.797491073608398
    6. ' def' → logprob: -9.172491073608398
    7. ' _' → logprob: -9.297491073608398
    8. ' ___' → logprob: -12.172491073608398
    9. 'def' → logprob: -12.172491073608398
    10. ' ▁' → logprob: -13.922491073608398

Token 74: 'le' (ID: 282)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.04102802649140358
    2. 'le' → logprob: -3.4160280227661133
    3. 'gt' → logprob: -4.916028022766113
    4. 'e' → logprob: -11.291028022766113
    5. 'repr' → logprob: -11.666028022766113
    6. 'ge' → logprob: -13.916028022766113
    7. 'add' → logprob: -14.041028022766113
    8. 'g' → logprob: -14.416028022766113
    9. 'str' → logprob: -14.541028022766113
    10. '   ' → logprob: -15.166028022766113

Token 75: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6645060777664185
    2. '_' → logprob: -1.1645060777664185
    3. '__(' → logprob: -1.7895060777664185
    4. '(' → logprob: -5.414505958557129
    5. '__(
' → logprob: -7.539505958557129
    6. '__((' → logprob: -7.789505958557129
    7. '_(' → logprob: -8.039505958557129
    8. '__('' → logprob: -9.539505958557129
    9. ' ' → logprob: -9.539505958557129
    10. '___' → logprob: -9.664505958557129

Token 76: 'self' (ID: 1156)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8517674803733826
    2. ' other' → logprob: -1.2267675399780273
    3. 'self' → logprob: -1.3517675399780273
    4. 'other' → logprob: -3.8517675399780273
    5. ' ' → logprob: -10.226767539978027
    6. '(self' → logprob: -11.476767539978027
    7. '_other' → logprob: -11.726767539978027
    8. ',' → logprob: -12.351767539978027
    9. ')' → logprob: -12.851767539978027
    10. 'space' → logprob: -12.976767539978027

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054183755069971085
    2. ')' → logprob: -3.5541837215423584
    3. ' ,' → logprob: -4.6791839599609375
    4. ' ' → logprob: -4.8041839599609375
    5. '<|end|>' → logprob: -5.4291839599609375
    6. '(' → logprob: -6.4291839599609375
    7. ' )' → logprob: -9.554183959960938
    8. '  ' → logprob: -9.554183959960938
    9. '    ' → logprob: -9.679183959960938
    10. '(self' → logprob: -9.929183959960938

Token 78: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.021216344088315964
    2. 'other' → logprob: -3.89621639251709
    3. '<|end|>' → logprob: -7.89621639251709
    4. ' ' → logprob: -8.77121639251709
    5. ' ' → logprob: -10.14621639251709
    6. ' o' → logprob: -10.14621639251709
    7. ')' → logprob: -10.64621639251709
    8. ' self' → logprob: -11.27121639251709
    9. '(other' → logprob: -11.64621639251709
    10. '_other' → logprob: -12.39621639251709

Token 79: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26731574535369873
    2. ',' → logprob: -2.6423158645629883
    3. ' )' → logprob: -3.1423158645629883
    4. '<|end|>' → logprob: -3.1423158645629883
    5. ' ' → logprob: -3.2673158645629883
    6. ' ,' → logprob: -4.142315864562988
    7. '_' → logprob: -4.767315864562988
    8. '.' → logprob: -4.767315864562988
    9. '):' → logprob: -6.267315864562988
    10. 's' → logprob: -6.767315864562988

Token 80: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47583064436912537
    2. ' ' → logprob: -1.3508306741714478
    3. ')' → logprob: -2.600830554962158
    4. ' '' → logprob: -3.475830554962158
    5. ' )' → logprob: -4.600830554962158
    6. '<|end|>' → logprob: -5.600830554962158
    7. ' ' → logprob: -8.350831031799316
    8. '"' → logprob: -8.975831031799316
    9. ''s' → logprob: -9.350831031799316
    10. '  ' → logprob: -9.975831031799316

Token 81: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.031247884035110474
    2. 'S' → logprob: -3.531247854232788
    3. 'Sc' → logprob: -6.531248092651367
    4. 'Sco' → logprob: -10.531248092651367
    5. ' Score' → logprob: -11.906248092651367
    6. 'Scores' → logprob: -12.656248092651367
    7. '.Score' → logprob: -13.656248092651367
    8. ''S' → logprob: -15.531248092651367
    9. '_score' → logprob: -15.531248092651367
    10. 'Scr' → logprob: -15.656248092651367

Token 82: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0486837700009346
    2. ')' → logprob: -3.0486838817596436
    3. ''' → logprob: -9.798684120178223
    4. ''):' → logprob: -11.048684120178223
    5. ')'' → logprob: -11.423684120178223
    6. ' ')' → logprob: -12.048684120178223
    7. '')
' → logprob: -12.923684120178223
    8. '")' → logprob: -13.798684120178223
    9. ' )' → logprob: -14.048684120178223
    10. '):' → logprob: -14.298684120178223

Token 83: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007274249102920294
    2. ' :' → logprob: -5.132274150848389
    3. '):' → logprob: -6.882274150848389
    4. ')' → logprob: -9.257274627685547
    5. '<|end|>' → logprob: -9.882274627685547
    6. ':**' → logprob: -10.382274627685547
    7. ',' → logprob: -10.507274627685547
    8. ':return' → logprob: -10.632274627685547
    9. '       ' → logprob: -11.007274627685547
    10. ' ->' → logprob: -11.132274627685547

Token 84: ' bool' (ID: 3792)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00041005798266269267
    2. '  ' → logprob: -8.250410079956055
    3. ' self' → logprob: -10.125410079956055
    4. '<|end|>' → logprob: -10.250410079956055
    5. ' ' → logprob: -11.125410079956055
    6. '_' → logprob: -12.000410079956055
    7. ' )' → logprob: -12.125410079956055
    8. ')' → logprob: -12.250410079956055
    9. ' ‌' → logprob: -12.375410079956055
    10. ' ```' → logprob: -12.500410079956055

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032521432149223983
    2. ' :' → logprob: -8.375325202941895
    3. ':return' → logprob: -10.000325202941895
    4. '):' → logprob: -11.125325202941895
    5. ':
' → logprob: -11.375325202941895
    6. ':**' → logprob: -11.500325202941895
    7. '<|end|>' → logprob: -11.875325202941895
    8. ',' → logprob: -14.000325202941895
    9. '       ' → logprob: -14.000325202941895
    10. ')' → logprob: -14.125325202941895

Token 86: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07557693868875504
    2. ' 
' → logprob: -3.3255770206451416
    3. '    ' → logprob: -4.3255767822265625
    4. '       ' → logprob: -4.7005767822265625
    5. '        ' → logprob: -5.5755767822265625
    6. ' return' → logprob: -5.8255767822265625
    7. '<|end|>' → logprob: -6.3255767822265625
    8. ' self' → logprob: -6.9505767822265625
    9. '  ' → logprob: -6.9505767822265625
    10. '  
' → logprob: -7.3255767822265625

Token 87: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9261093139648438
    2. 'return' (adapté à ' return') → logprob: -1.1761093139648438
    3. ' return' → logprob: -1.9261093139648438
    4. '       ' → logprob: -2.5511093139648438
    5. ' self' → logprob: -2.6761093139648438
    6. '   ' → logprob: -6.551109313964844
    7. ' ' → logprob: -7.676109313964844
    8. ' ' → logprob: -8.426109313964844
    9. '```' → logprob: -8.926109313964844
    10. '    ' → logprob: -9.301109313964844

Token 88: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.004016426391899586
    2. 'self' → logprob: -5.879016399383545
    3. ' ' → logprob: -7.004016399383545
    4. ' ' → logprob: -8.129016876220703
    5. '    ' → logprob: -13.254016876220703
    6. '  ' → logprob: -13.754016876220703
    7. ' (' → logprob: -14.129016876220703
    8. ' sel' → logprob: -14.629016876220703
    9. '	self' → logprob: -14.754016876220703
    10. 's' → logprob: -14.879016876220703

Token 89: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.25325021147727966
    2. '.' → logprob: -1.503250241279602
    3. '.<' → logprob: -6.8782501220703125
    4. '<' → logprob: -8.628250122070312
    5. ' .' → logprob: -10.378250122070312
    6. 'value' → logprob: -10.503250122070312
    7. '.lt' → logprob: -10.628250122070312
    8. '.user' → logprob: -11.878250122070312
    9. '.v' → logprob: -12.378250122070312
    10. '.val' → logprob: -12.503250122070312

Token 90: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0006815764936618507
    2. ' ' → logprob: -8.00068187713623
    3. '<=' → logprob: -8.00068187713623
    4. ' <' → logprob: -12.37568187713623
    5. '<|end|>' → logprob: -12.87568187713623
    6. ' ≤' → logprob: -13.37568187713623
    7. ' ' → logprob: -13.87568187713623
    8. ' <=",' → logprob: -14.25068187713623
    9. '  ' → logprob: -15.75068187713623
    10. ')<=' → logprob: -15.87568187713623

Token 91: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.0024788661394268274
    2. 'other' → logprob: -6.002479076385498
    3. '<|end|>' → logprob: -13.62747859954834
    4. ' oth' → logprob: -14.75247859954834
    5. '(other' → logprob: -14.87747859954834
    6. ' ' → logprob: -15.12747859954834
    7. ' o' → logprob: -15.12747859954834
    8. '.other' → logprob: -15.25247859954834
    9. '_other' → logprob: -16.127479553222656
    10. ' ' → logprob: -16.127479553222656

Token 92: '.value' (ID: 4683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47422245144844055
    2. '.value' → logprob: -0.9742224216461182
    3. ' .' → logprob: -9.224222183227539
    4. '.
' → logprob: -10.474222183227539
    5. 'value' → logprob: -11.474222183227539
    6. ' ' → logprob: -13.474222183227539
    7. '.<' → logprob: -13.974222183227539
    8. '.other' → logprob: -14.224222183227539
    9. '```' → logprob: -14.599222183227539
    10. '.

' → logprob: -14.599222183227539

Token 93: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14065873622894287
    2. '<|end|>' → logprob: -3.1406588554382324
    3. ' 
' → logprob: -3.2656588554382324
    4. '   ' → logprob: -3.5156588554382324
    5. ' ' → logprob: -4.515658855438232
    6. '  
' → logprob: -6.265658855438232
    7. '```' → logprob: -6.265658855438232
    8. '    
' → logprob: -6.515658855438232
    9. '

' → logprob: -7.265658855438232
    10. '' → logprob: -7.640658855438232

Token 95: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6001614928245544
    2. '   ' → logprob: -1.9751615524291992
    3. ' ' → logprob: -2.100161552429199
    4. ' 
' → logprob: -2.725161552429199
    5. '<|end|>' → logprob: -2.975161552429199
    6. '_' → logprob: -4.100161552429199
    7. '\' → logprob: -4.600161552429199
    8. 'n' → logprob: -4.600161552429199
    9. '\n' → logprob: -5.350161552429199
    10. 'd' → logprob: -5.350161552429199

Token 96: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.13141381740570068
    2. '_' → logprob: -2.6314139366149902
    3. '__' → logprob: -3.8814139366149902
    4. ' ' → logprob: -4.38141393661499
    5. ' ' → logprob: -4.63141393661499
    6. '>' → logprob: -5.88141393661499
    7. ' ​' → logprob: -6.63141393661499
    8. '  ' → logprob: -7.25641393661499
    9. ' ‌' → logprob: -7.63141393661499
    10. '  ' → logprob: -7.75641393661499

Token 97: 'eq' (ID: 21725)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.31966736912727356
    2. 'e' → logprob: -1.3196673393249512
    3. 'eq' → logprob: -5.069667339324951
    4. 'gt' → logprob: -10.06966781616211
    5. 'q' → logprob: -10.56966781616211
    6. '_' → logprob: -11.81966781616211
    7. 'r' → logprob: -12.19466781616211
    8. 'c' → logprob: -12.56966781616211
    9. 'i' → logprob: -12.94466781616211
    10. '>' → logprob: -12.94466781616211

Token 98: '__(' (ID: 8241)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6382560729980469
    2. '__(' → logprob: -1.5132560729980469
    3. '__' → logprob: -1.6382560729980469
    4. '(' → logprob: -2.888256072998047
    5. '_(' → logprob: -7.263256072998047
    6. '__(
' → logprob: -8.388256072998047
    7. '(self' → logprob: -8.513256072998047
    8. '_^(' → logprob: -8.888256072998047
    9. '__((' → logprob: -9.138256072998047
    10. '__('' → logprob: -9.888256072998047

Token 99: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4289996922016144
    2. 'other' → logprob: -1.053999662399292
    3. ' other' → logprob: -8.928999900817871
    4. ' self' → logprob: -9.178999900817871
    5. '(self' → logprob: -10.053999900817871
    6. '(other' → logprob: -12.053999900817871
    7. 'Other' → logprob: -12.428999900817871
    8. ' ' → logprob: -12.428999900817871
    9. '   ' → logprob: -13.553999900817871
    10. '_other' → logprob: -14.053999900817871

Token 100: ',' (ID: 11)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3222203850746155
    2. '__(' → logprob: -1.3222203254699707
    3. '(self' → logprob: -5.947220325469971
    4. '__((' → logprob: -6.072220325469971
    5. '__(
' → logprob: -6.322220325469971
    6. '<|end|>' → logprob: -7.572220325469971
    7. '(' → logprob: -7.572220325469971
    8. '__('' → logprob: -7.697220325469971
    9. '__(*' → logprob: -8.697220802307129
    10. '__,' → logprob: -8.947220802307129

Token 101: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.023264696821570396
    2. 'other' → logprob: -3.7732646465301514
    3. ' o' → logprob: -11.52326488494873
    4. ' ' → logprob: -12.27326488494873
    5. ' self' → logprob: -13.64826488494873
    6. '(other' → logprob: -13.89826488494873
    7. '_other' → logprob: -14.14826488494873
    8. ' oth' → logprob: -14.64826488494873
    9. 'self' → logprob: -14.77326488494873
    10. '<|end|>' → logprob: -14.89826488494873

Token 102: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00771677028387785
    2. ' :' → logprob: -5.257716655731201
    3. ')' → logprob: -6.507716655731201
    4. '<|end|>' → logprob: -7.382716655731201
    5. '):' → logprob: -8.00771713256836
    6. ' ' → logprob: -11.50771713256836
    7. '<|end|>' → logprob: -11.50771713256836
    8. ',' → logprob: -12.00771713256836
    9. ')>' → logprob: -14.13271713256836
    10. ' )' → logprob: -14.13271713256836

Token 103: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16373367607593536
    2. ' '' → logprob: -1.913733720779419
    3. '<|end|>' → logprob: -6.66373348236084
    4. ''' → logprob: -7.16373348236084
    5. '  ' → logprob: -7.53873348236084
    6. ')' → logprob: -7.66373348236084
    7. ' )' → logprob: -8.41373348236084
    8. ' ' → logprob: -9.28873348236084
    9. ''s' → logprob: -9.78873348236084
    10. ' None' → logprob: -10.66373348236084

Token 104: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -5.200166469876422e-06
    2. 'Sc' → logprob: -12.875004768371582
    3. ' Score' → logprob: -13.125004768371582
    4. 'S' → logprob: -15.125004768371582
    5. 'Sco' → logprob: -15.875004768371582
    6. 'Scores' → logprob: -16.1250057220459
    7. '.Score' → logprob: -17.3750057220459
    8. '_score' → logprob: -18.3750057220459
    9. ''S' → logprob: -18.6250057220459
    10. 'score' → logprob: -19.3750057220459

Token 105: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004162095487117767
    2. ')' → logprob: -5.879162311553955
    3. ''):' → logprob: -6.629162311553955
    4. ''' → logprob: -10.629161834716797
    5. ')'' → logprob: -12.629161834716797
    6. ''):
' → logprob: -12.629161834716797
    7. ':' → logprob: -13.629161834716797
    8. '')
' → logprob: -13.879161834716797
    9. '):' → logprob: -13.879161834716797
    10. ' ')' → logprob: -15.129161834716797

Token 106: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022577643394470215
    2. ' :' → logprob: -3.8975777626037598
    3. '):' → logprob: -6.77257776260376
    4. ')' → logprob: -7.64757776260376
    5. ':return' → logprob: -8.772577285766602
    6. ':
' → logprob: -9.147577285766602
    7. ' and' → logprob: -9.897577285766602
    8. ' ' → logprob: -10.897577285766602
    9. ' :
' → logprob: -11.272577285766602
    10. '       ' → logprob: -11.272577285766602

Token 107: ' bool' (ID: 3792)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.49854886531829834
    2. ' True' → logprob: -1.4985488653182983
    3. ' other' → logprob: -2.123548984527588
    4. 'self' → logprob: -3.623548984527588
    5. ' ' → logprob: -4.373548984527588
    6. 'other' → logprob: -5.373548984527588
    7. ' bool' → logprob: -5.998548984527588
    8. '<|end|>' → logprob: -6.748548984527588
    9. 'True' → logprob: -6.998548984527588
    10. '  ' → logprob: -7.748548984527588

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007226797170005739
    2. '<|end|>' → logprob: -8.000722885131836
    3. ':
' → logprob: -8.625722885131836
    4. '):' → logprob: -8.875722885131836
    5. ' :' → logprob: -10.250722885131836
    6. ':return' → logprob: -11.125722885131836
    7. '():' → logprob: -12.500722885131836
    8. ')' → logprob: -12.500722885131836
    9. '       ' → logprob: -12.625722885131836
    10. '<|end|>' → logprob: -13.125722885131836

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07390756905078888
    2. ' self' → logprob: -3.5739076137542725
    3. 'self' → logprob: -3.6989076137542725
    4. ' return' → logprob: -4.323907375335693
    5. 'return' → logprob: -5.448907375335693
    6. '   ' → logprob: -7.698907375335693
    7. ' ' → logprob: -8.698907852172852
    8. '(self' → logprob: -9.698907852172852
    9. ' ' → logprob: -10.073907852172852
    10. '    ' → logprob: -10.073907852172852

Token 110: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25294312834739685
    2. 'return' (adapté à ' return') → logprob: -1.5029431581497192
    3. '       ' → logprob: -7.25294303894043
    4. ' return' → logprob: -8.75294303894043
    5. ' self' → logprob: -9.37794303894043
    6. '
' → logprob: -10.25294303894043
    7. '(self' → logprob: -11.12794303894043
    8. 'is' → logprob: -12.00294303894043
    9. '   ' → logprob: -12.87794303894043
    10. '```' → logprob: -14.00294303894043

Token 111: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3149780333042145
    2. 'self' → logprob: -1.314978003501892
    3. ' isinstance' → logprob: -6.439978122711182
    4. '(self' → logprob: -9.314977645874023
    5. ' (' → logprob: -11.189977645874023
    6. ' ' → logprob: -12.189977645874023
    7. 'is' → logprob: -12.689977645874023
    8. ' ' → logprob: -14.064977645874023
    9. ' type' → logprob: -14.189977645874023
    10. '	self' → logprob: -14.439977645874023

Token 112: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.3134482800960541
    2. '.' → logprob: -1.3134483098983765
    3. ' .' → logprob: -8.813447952270508
    4. '.user' → logprob: -10.688447952270508
    5. 'value' → logprob: -11.688447952270508
    6. ').' → logprob: -13.313447952270508
    7. '.val' → logprob: -13.938447952270508
    8. '.values' → logprob: -14.188447952270508
    9. '.code' → logprob: -14.563447952270508
    10. '==' → logprob: -14.688447952270508

Token 113: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.043116576969623566
    2. '==' → logprob: -3.168116569519043
    3. '=' → logprob: -9.168116569519043
    4. ' ' → logprob: -11.918116569519043
    5. ' =' → logprob: -12.418116569519043
    6. ' ==
' → logprob: -14.543116569519043
    7. '.' → logprob: -15.043116569519043
    8. ' ' → logprob: -15.168116569519043
    9. '==
' → logprob: -15.168116569519043
    10. '===' → logprob: -15.293116569519043

Token 114: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.1269284337759018
    2. 'other' → logprob: -2.1269283294677734
    3. '(other' → logprob: -15.876928329467773
    4. 'Other' → logprob: -16.001928329467773
    5. '_other' → logprob: -17.126928329467773
    6. '.other' → logprob: -18.001928329467773
    7. ' ' → logprob: -18.376928329467773
    8. ' oth' → logprob: -19.376928329467773
    9. '<|end|>' → logprob: -19.376928329467773
    10. ' Other' → logprob: -20.001928329467773

Token 115: '.value' (ID: 4683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4741258919239044
    2. '.value' → logprob: -0.974125862121582
    3. 'value' → logprob: -10.224125862121582
    4. ' .' → logprob: -11.474125862121582
    5. ').' → logprob: -14.599125862121582
    6. '.
' → logprob: -14.599125862121582
    7. ')' → logprob: -15.474125862121582
    8. '.

' → logprob: -15.724125862121582
    9. ' value' → logprob: -16.2241268157959
    10. ' ' → logprob: -16.3491268157959

Token 116: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09522832930088043
    2. '<|end|>' → logprob: -3.220228433609009
    3. '   ' → logprob: -3.845228433609009
    4. ' 
' → logprob: -4.22022819519043
    5. '    
' → logprob: -5.47022819519043
    6. '

' → logprob: -5.47022819519043
    7. '\n' → logprob: -6.59522819519043
    8. '  
' → logprob: -6.72022819519043
    9. ' ' → logprob: -6.72022819519043
    10. '```' → logprob: -6.84522819519043

Token 117: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20968203246593475
    2. '   ' → logprob: -1.9596819877624512
    3. '<|end|>' → logprob: -4.209681987762451
    4. ' 
' → logprob: -4.584681987762451
    5. '    
' → logprob: -4.709681987762451
    6. '

' → logprob: -5.334681987762451
    7. '  
' → logprob: -5.959681987762451
    8. ' ' → logprob: -6.209681987762451
    9. '```' → logprob: -6.459681987762451
    10. '\n' → logprob: -7.459681987762451

Token 118: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44740429520606995
    2. ' 
' → logprob: -1.8224042654037476
    3. ' ' → logprob: -2.197404384613037
    4. '
' → logprob: -3.572404384613037
    5. '    
' → logprob: -3.697404384613037
    6. 'def' (adapté à ' def') → logprob: -3.947404384613037
    7. '<|end|>' → logprob: -5.697404384613037
    8. '  
' → logprob: -5.947404384613037
    9. '```' → logprob: -6.197404384613037
    10. '   
' → logprob: -6.697404384613037

Token 119: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6896012425422668
    2. '__' → logprob: -1.564601182937622
    3. ' __' → logprob: -1.814601182937622
    4. ' ' → logprob: -2.189601182937622
    5. ' ' → logprob: -4.814601421356201
    6. '>' → logprob: -6.439601421356201
    7. ' _' → logprob: -6.689601421356201
    8. 'gt' → logprob: -6.939601421356201
    9. ' >' → logprob: -7.314601421356201
    10. ' gt' → logprob: -8.189600944519043

Token 120: 'repr' (ID: 67002)
  Prédit: 'gt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gt' → logprob: -0.0014153540832921863
    2. 'g' → logprob: -6.626415252685547
    3. 'ne' → logprob: -10.126415252685547
    4. 'ge' → logprob: -10.126415252685547
    5. 'hash' → logprob: -11.751415252685547
    6. '>' → logprob: -14.501415252685547
    7. '_gt' → logprob: -15.751415252685547
    8. '
' → logprob: -15.876415252685547
    9. 'GT' → logprob: -16.126415252685547
    10. ' gt' → logprob: -16.126415252685547

Token 121: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7027893662452698
    2. '__(' → logprob: -0.7027893662452698
    3. '__('' → logprob: -5.452789306640625
    4. '__(
' → logprob: -5.452789306640625
    5. '_' → logprob: -8.077789306640625
    6. '__((' → logprob: -8.327789306640625
    7. '__("' → logprob: -8.452789306640625
    8. '__(*' → logprob: -9.327789306640625
    9. '(' → logprob: -9.577789306640625
    10. '___' → logprob: -10.077789306640625

Token 122: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.735893965815194e-05
    2. ')' → logprob: -11.750017166137695
    3. ' self' → logprob: -12.125017166137695
    4. '
' → logprob: -12.750017166137695
    5. '<|end|>' → logprob: -15.000017166137695
    6. '

' → logprob: -15.375017166137695
    7. '(self' → logprob: -15.500017166137695
    8. 's' → logprob: -16.125017166137695
    9. ' ' → logprob: -16.250017166137695
    10. '```' → logprob: -17.375017166137695

Token 123: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.022243663668632507
    2. '__(' → logprob: -4.522243499755859
    3. '__(
' → logprob: -5.397243499755859
    4. '__('' → logprob: -5.897243499755859
    5. '_' → logprob: -6.022243499755859
    6. '__)' → logprob: -7.522243499755859
    7. '__((' → logprob: -8.64724349975586
    8. '__("' → logprob: -9.02224349975586
    9. '__(*' → logprob: -9.02224349975586
    10. '__:' → logprob: -9.27224349975586

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006327504757791758
    2. '   ' → logprob: -5.5063276290893555
    3. '    ' → logprob: -7.0063276290893555
    4. '        ' → logprob: -7.6313276290893555
    5. ')' → logprob: -8.131327629089355
    6. ' ' → logprob: -9.131327629089355
    7. '      ' → logprob: -9.506327629089355
    8. '     ' → logprob: -9.631327629089355
    9. '        
' → logprob: -10.006327629089355
    10. ' 
' → logprob: -10.631327629089355

Token 125: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7543943524360657
    2. 'return' (adapté à ' return') → logprob: -0.7543943524360657
    3. '       ' → logprob: -2.879394292831421
    4. '   ' → logprob: -6.12939453125
    5. ' f' → logprob: -7.50439453125
    6. 'f' → logprob: -8.00439453125
    7. '	return' → logprob: -9.87939453125
    8. '    ' → logprob: -10.37939453125
    9. ' ' → logprob: -10.62939453125
    10. ':return' → logprob: -11.25439453125

Token 126: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.16022686660289764
    2. 'f' → logprob: -1.910226821899414
    3. ' ' → logprob: -13.535226821899414
    4. ' ' → logprob: -14.285226821899414
    5. 'F' → logprob: -15.410226821899414
    6. '	f' → logprob: -15.535226821899414
    7. ' F' → logprob: -16.285226821899414
    8. ''f' → logprob: -16.285226821899414
    9. '"' → logprob: -16.410226821899414
    10. ''' → logprob: -16.910226821899414

Token 127: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2388651818037033
    2. ''S' → logprob: -1.9888651371002197
    3. '(' → logprob: -2.7388651371002197
    4. ''' → logprob: -5.488865375518799
    5. '"S' → logprob: -5.613865375518799
    6. ''s' → logprob: -6.613865375518799
    7. 'Score' → logprob: -7.613865375518799
    8. '(f' → logprob: -8.11386489868164
    9. 'S' → logprob: -8.23886489868164
    10. '("' → logprob: -8.48886489868164

Token 128: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.0005985465249978006
    2. 'Sc' → logprob: -7.500598430633545
    3. 'Sco' → logprob: -10.625598907470703
    4. 'S' → logprob: -11.500598907470703
    5. 'Scores' → logprob: -12.250598907470703
    6. '"' → logprob: -13.375598907470703
    7. '<' → logprob: -13.500598907470703
    8. ' Score' → logprob: -13.625598907470703
    9. '<Sc' → logprob: -14.000598907470703
    10. 'Scr' → logprob: -14.250598907470703

Token 129: '({' (ID: 3972)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26112526655197144
    2. '(value' → logprob: -1.5111253261566162
    3. '({' → logprob: -4.761125087738037
    4. '(score' → logprob: -7.886125087738037
    5. '(
' → logprob: -9.636125564575195
    6. '(self' → logprob: -10.261125564575195
    7. '<|end|>' → logprob: -11.386125564575195
    8. '(f' → logprob: -11.511125564575195
    9. '{' → logprob: -11.761125564575195
    10. '(

' → logprob: -12.011125564575195

Token 130: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2200749754119897e-06
    2. '{' → logprob: -13.500001907348633
    3. ' self' → logprob: -14.250001907348633
    4. ')' → logprob: -16.875001907348633
    5. '
' → logprob: -17.250001907348633
    6. '<|end|>' → logprob: -17.625001907348633
    7. 'sel' → logprob: -17.750001907348633
    8. '$self' → logprob: -18.125001907348633
    9. ' ' → logprob: -18.250001907348633
    10. '{
' → logprob: -18.375001907348633

Token 131: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0013344056205824018
    2. '.' → logprob: -6.626334190368652
    3. ' .' → logprob: -12.501334190368652
    4. ').' → logprob: -12.876334190368652
    5. 'value' → logprob: -13.626334190368652
    6. '.score' → logprob: -14.876334190368652
    7. '}.' → logprob: -15.376334190368652
    8. '.val' → logprob: -16.25133514404297
    9. '.user' → logprob: -16.87633514404297
    10. '.
' → logprob: -16.87633514404297

Token 132: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.016367359086871147
    2. ')' → logprob: -4.766367435455322
    3. '}")' → logprob: -5.391367435455322
    4. ')"' → logprob: -6.016367435455322
    5. ')}' → logprob: -8.141366958618164
    6. ')")' → logprob: -8.641366958618164
    7. '}' → logprob: -8.766366958618164
    8. '}"' → logprob: -9.766366958618164
    9. '"})' → logprob: -11.016366958618164
    10. '")' → logprob: -11.391366958618164

Token 133: '"


' (ID: 36470)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7529617547988892
    2. '
' → logprob: -1.6279617547988892
    3. 'def' → logprob: -2.0029616355895996
    4. '   ' → logprob: -2.1279616355895996
    5. '@' → logprob: -3.3779616355895996
    6. '#' → logprob: -4.0029616355896
    7. ' ' → logprob: -5.6279616355896
    8. 'd' → logprob: -5.6279616355896
    9. '[' → logprob: -6.0029616355896
    10. '    
' → logprob: -6.0029616355896

Token 135: ' Judge' (ID: 44193)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.5217286348342896
    2. ' Leader' → logprob: -1.0217286348342896
    3. ' Score' → logprob: -3.771728515625
    4. ' Rank' → logprob: -5.271728515625
    5. ' ' → logprob: -5.396728515625
    6. ' Game' → logprob: -5.771728515625
    7. ' User' → logprob: -5.771728515625
    8. ' High' → logprob: -6.771728515625
    9. ' Ranking' → logprob: -7.021728515625
    10. ' Gamer' → logprob: -7.021728515625

Token 136: 'Collection' (ID: 4160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009512408869341016
    2. ':
' → logprob: -7.125951290130615
    3. '():' → logprob: -9.750950813293457
    4. 'Criteria' → logprob: -10.250950813293457
    5. '):' → logprob: -11.125950813293457
    6. '(' → logprob: -11.375950813293457
    7. 'Score' → logprob: -12.125950813293457
    8. ':

' → logprob: -12.750950813293457
    9. 's' → logprob: -12.875950813293457
    10. '<|end|>' → logprob: -13.250950813293457

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006035494152456522
    2. ' :' → logprob: -7.625603675842285
    3. '(' → logprob: -9.875603675842285
    4. ':
' → logprob: -10.625603675842285
    5. '):' → logprob: -11.250603675842285
    6. '():' → logprob: -11.250603675842285
    7. '<|end|>' → logprob: -12.125603675842285
    8. '(object' → logprob: -13.375603675842285
    9. '>:' → logprob: -13.750603675842285
    10. ',' → logprob: -14.250603675842285

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045029234141111374
    2. '    
' → logprob: -4.170029163360596
    3. ' 
' → logprob: -4.670029163360596
    4. '    ' → logprob: -5.295029163360596
    5. 'def' → logprob: -5.545029163360596
    6. '
' → logprob: -5.670029163360596
    7. ' def' → logprob: -5.920029163360596
    8. '<|end|>' → logprob: -6.920029163360596
    9. '```' → logprob: -7.045029163360596
    10. ':' → logprob: -7.045029163360596

Token 139: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.15240688621997833
    2. 'def' (adapté à ' def') → logprob: -2.027406930923462
    3. '   ' → logprob: -4.777406692504883
    4. 'class' → logprob: -6.777406692504883
    5. '	def' → logprob: -10.652406692504883
    6. '    ' → logprob: -10.777406692504883
    7. '```' → logprob: -10.902406692504883
    8. ' class' → logprob: -10.902406692504883
    9. ':' → logprob: -11.277406692504883
    10. ':def' → logprob: -11.652406692504883

Token 140: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6426320672035217
    2. ' ' → logprob: -0.7676320672035217
    3. ' _' → logprob: -5.267632007598877
    4. ' ' → logprob: -6.142632007598877
    5. '__' → logprob: -7.017632007598877
    6. '  ' → logprob: -7.517632007598877
    7. '_' → logprob: -7.642632007598877
    8. ' init' → logprob: -8.517632484436035
    9. '_init' → logprob: -8.892632484436035
    10. 'init' → logprob: -8.892632484436035

Token 141: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.117345684382599e-05
    2. 'i' → logprob: -10.875020980834961
    3. '_init' → logprob: -13.625020980834961
    4. ' init' → logprob: -14.500020980834961
    5. 'in' → logprob: -15.125020980834961
    6. 'ini' → logprob: -16.12502098083496
    7. '   ' → logprob: -16.50002098083496
    8. '
' → logprob: -17.75002098083496
    9. '```' → logprob: -17.87502098083496
    10. 'inite' → logprob: -18.00002098083496

Token 142: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007029473781585693
    2. '__' → logprob: -5.0070295333862305
    3. '__(
' → logprob: -8.13202953338623
    4. '_' → logprob: -11.88202953338623
    5. '__((' → logprob: -12.00702953338623
    6. '_(' → logprob: -13.13202953338623
    7. '___' → logprob: -13.63202953338623
    8. '__('' → logprob: -13.88202953338623
    9. '__(*' → logprob: -14.00702953338623
    10. '__[' → logprob: -14.38202953338623

Token 143: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008058924227952957
    2. ' self' → logprob: -5.008059024810791
    3. ')' → logprob: -6.758059024810791
    4. '
' → logprob: -9.633058547973633
    5. ' ' → logprob: -9.758058547973633
    6. '<|end|>' → logprob: -11.133058547973633
    7. ',' → logprob: -11.633058547973633
    8. '):
' → logprob: -11.883058547973633
    9. ' )' → logprob: -12.633058547973633
    10. '(self' → logprob: -12.758058547973633

Token 144: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023173606023192406
    2. ' ,' → logprob: -4.148173809051514
    3. 'self' → logprob: -5.898173809051514
    4. '<|end|>' → logprob: -6.898173809051514
    5. '):' → logprob: -7.273173809051514
    6. ')' → logprob: -7.273173809051514
    7. '_' → logprob: -7.523173809051514
    8. ' ' → logprob: -8.023173332214355
    9. '):
' → logprob: -8.648173332214355
    10. '_,' → logprob: -8.773173332214355

Token 145: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07505398243665695
    2. ')' → logprob: -2.7000539302825928
    3. '):
' → logprob: -5.950054168701172
    4. ' self' → logprob: -6.700054168701172
    5. '[]' → logprob: -7.700054168701172
    6. '   ' → logprob: -7.950054168701172
    7. '):' → logprob: -9.075054168701172
    8. '):

' → logprob: -9.075054168701172
    9. '
' → logprob: -10.200054168701172
    10. ' ' → logprob: -10.200054168701172

Token 146: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10042954236268997
    2. ' self' → logprob: -2.3504295349121094
    3. '       ' → logprob: -8.47542953491211
    4. ' ' → logprob: -12.47542953491211
    5. '	self' → logprob: -12.47542953491211
    6. '   ' → logprob: -13.72542953491211
    7. '        ' → logprob: -13.72542953491211
    8. ' ' → logprob: -13.85042953491211
    9. 's' → logprob: -14.10042953491211
    10. '0' → logprob: -14.22542953491211

Token 147: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0173451900482178
    2. '.s' → logprob: -1.0173451900482178
    3. '._' → logprob: -1.3923451900482178
    4. '_scores' → logprob: -4.267345428466797
    5. ' .' → logprob: -4.642345428466797
    6. '.j' → logprob: -6.392345428466797
    7. 's' → logprob: -7.392345428466797
    8. '_' → logprob: -7.642345428466797
    9. 'scores' → logprob: -7.892345428466797
    10. ' ' → logprob: -8.017345428466797

Token 148: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.00017529279284644872
    2. 'core' → logprob: -9.250175476074219
    3. '```' → logprob: -10.625175476074219
    4. 'co' → logprob: -11.500175476074219
    5. '_scores' → logprob: -11.625175476074219
    6. 'tores' → logprob: -11.875175476074219
    7. ' cores' → logprob: -12.000175476074219
    8. 'scores' → logprob: -12.125175476074219
    9. 'c' → logprob: -12.375175476074219
    10. 'cor' → logprob: -12.750175476074219

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006360658910125494
    2. '=' → logprob: -5.1313605308532715
    3. ' ' → logprob: -8.38136100769043
    4. ':' → logprob: -9.13136100769043
    5. 's' → logprob: -9.88136100769043
    6. '=[]' → logprob: -10.25636100769043
    7. '  ' → logprob: -12.50636100769043
    8. '<|end|>' → logprob: -13.38136100769043
    9. ' =
' → logprob: -14.50636100769043
    10. ' :' → logprob: -14.75636100769043

Token 150: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0031796174589544535
    2. '[]' → logprob: -5.753179550170898
    3. ' [' → logprob: -14.378179550170898
    4. ' []
' → logprob: -14.503179550170898
    5. '[' → logprob: -15.378179550170898
    6. '[]}' → logprob: -15.378179550170898
    7. ' ' → logprob: -16.0031795501709
    8. ' {}' → logprob: -16.2531795501709
    9. '[]>' → logprob: -16.2531795501709
    10. ' [])' → logprob: -16.7531795501709

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04196522757411003
    2. '    
' → logprob: -3.5419652462005615
    3. ' 
' → logprob: -5.791965007781982
    4. '
' → logprob: -5.791965007781982
    5. ' ' → logprob: -6.166965007781982
    6. '  
' → logprob: -6.541965007781982
    7. '<|end|>' → logprob: -6.916965007781982
    8. 'def' → logprob: -7.791965007781982
    9. '   
' → logprob: -8.16696548461914
    10. '  ' → logprob: -8.16696548461914

Token 152: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014589113183319569
    2. ' def' → logprob: -4.264589309692383
    3. '   ' → logprob: -7.764589309692383
    4. ' ' → logprob: -14.764589309692383
    5. 'de' → logprob: -14.764589309692383
    6. 'd' → logprob: -15.889589309692383
    7. '	def' → logprob: -17.389589309692383
    8. '  ' → logprob: -18.139589309692383
    9. '```' → logprob: -19.139589309692383
    10. '       ' → logprob: -19.264589309692383

Token 153: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0008621498709544539
    2. 'add' → logprob: -7.250862121582031
    3. ' append' → logprob: -9.750862121582031
    4. ' ' → logprob: -10.500862121582031
    5. '_add' → logprob: -11.125862121582031
    6. ' def' → logprob: -11.375862121582031
    7. ' a' → logprob: -11.500862121582031
    8. ' insert' → logprob: -11.625862121582031
    9. 'a' → logprob: -11.875862121582031
    10. '   ' → logprob: -12.750862121582031

Token 154: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.037864621728658676
    2. '(' → logprob: -3.9128646850585938
    3. '_' → logprob: -4.162864685058594
    4. '(self' → logprob: -6.912864685058594
    5. '_s' → logprob: -8.287864685058594
    6. '(score' → logprob: -8.912864685058594
    7. '_scores' → logprob: -9.037864685058594
    8. 'score' → logprob: -11.287864685058594
    9. '(
' → logprob: -11.412864685058594
    10. '<|end|>' → logprob: -11.662864685058594

Token 155: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5770799517631531
    2. '(' → logprob: -0.8270799517631531
    3. '(s' → logprob: -7.327079772949219
    4. '(
' → logprob: -7.827079772949219
    5. '<|end|>' → logprob: -9.702079772949219
    6. '(score' → logprob: -12.077079772949219
    7. ' (' → logprob: -12.327079772949219
    8. '(

' → logprob: -12.827079772949219
    9. '(sel' → logprob: -13.327079772949219
    10. ' ' → logprob: -14.077079772949219

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012160643935203552
    2. ' ,' → logprob: -5.012160778045654
    3. ')' → logprob: -5.512160778045654
    4. '(score' → logprob: -6.762160778045654
    5. '(' → logprob: -10.137160301208496
    6. ',s' → logprob: -10.512160301208496
    7. '<|end|>' → logprob: -10.512160301208496
    8. '_score' → logprob: -10.512160301208496
    9. '(self' → logprob: -10.637160301208496
    10. '):' → logprob: -11.512160301208496

Token 157: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.693376898765564
    2. 'score' → logprob: -0.693376898765564
    3. 'self' → logprob: -8.943376541137695
    4. ' self' → logprob: -9.318376541137695
    5. '	score' → logprob: -12.568376541137695
    6. ' ' → logprob: -12.943376541137695
    7. '_score' → logprob: -14.443376541137695
    8. '   ' → logprob: -14.568376541137695
    9. 'sc' → logprob: -15.068376541137695
    10. '(score' → logprob: -15.193376541137695

Token 158: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023841293528676033
    2. '):' → logprob: -3.773841381072998
    3. ')' → logprob: -7.523841381072998
    4. ' :' → logprob: -10.64884090423584
    5. '):
' → logprob: -11.27384090423584
    6. ' ):' → logprob: -11.39884090423584
    7. ' ' → logprob: -12.89884090423584
    8. 's' → logprob: -13.27384090423584
    9. '  ' → logprob: -14.52384090423584
    10. ' )' → logprob: -14.52384090423584

Token 159: ' Score' (ID: 30731)
  Prédit: ' Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Score' → logprob: -0.013234227895736694
    2. 'Score' → logprob: -4.5132341384887695
    3. ' score' → logprob: -6.5132341384887695
    4. ' )' → logprob: -8.13823413848877
    5. ')' → logprob: -8.26323413848877
    6. ' ' → logprob: -9.13823413848877
    7. 'score' → logprob: -10.51323413848877
    8. '_score' → logprob: -12.01323413848877
    9. ' Scores' → logprob: -12.26323413848877
    10. ' ' → logprob: -13.51323413848877

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0794241726398468
    2. ')' → logprob: -2.5794241428375244
    3. '):
' → logprob: -7.7044243812561035
    4. ':' → logprob: -9.454423904418945
    5. ' ):' → logprob: -12.954423904418945
    6. ',' → logprob: -14.204423904418945
    7. ' )' → logprob: -14.579423904418945
    8. ')->' → logprob: -14.829423904418945
    9. '):
' → logprob: -15.204423904418945
    10. '   ' → logprob: -15.204423904418945

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008223761687986553
    2. ')' → logprob: -8.000822067260742
    3. ' self' → logprob: -8.500822067260742
    4. 'self' → logprob: -9.125822067260742
    5. '   ' → logprob: -9.750822067260742
    6. '        
' → logprob: -10.625822067260742
    7. ',' → logprob: -10.875822067260742
    8. '
' → logprob: -11.500822067260742
    9. ' 
' → logprob: -11.875822067260742
    10. '    
' → logprob: -12.250822067260742

Token 162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.42456886172294617
    2. ' self' → logprob: -1.1745688915252686
    3. '       ' → logprob: -3.2995688915252686
    4. ' ' → logprob: -9.549569129943848
    5. '	self' → logprob: -11.424569129943848
    6. '   ' → logprob: -12.424569129943848
    7. ' ' → logprob: -12.924569129943848
    8. '​' → logprob: -13.549569129943848
    9. 's' → logprob: -14.049569129943848
    10. '        
' → logprob: -14.049569129943848

Token 163: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.06197742745280266
    2. '.' → logprob: -2.8119773864746094
    3. ' .' → logprob: -12.06197738647461
    4. 's' → logprob: -13.43697738647461
    5. ').' → logprob: -14.06197738647461
    6. 'scores' → logprob: -14.93697738647461
    7. '.score' → logprob: -15.31197738647461
    8. '.values' → logprob: -15.81197738647461
    9. '.codes' → logprob: -15.81197738647461
    10. '.sc' → logprob: -16.06197738647461

Token 164: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.0009512408869341016
    2. '.s' → logprob: -8.125950813293457
    3. 'core' → logprob: -8.250950813293457
    4. 'scores' → logprob: -8.375950813293457
    5. 'co' → logprob: -9.625950813293457
    6. '.c' → logprob: -10.500950813293457
    7. 'c' → logprob: -11.000950813293457
    8. 'elf' → logprob: -11.125950813293457
    9. '.' → logprob: -11.750950813293457
    10. '.add' → logprob: -11.875950813293457

Token 165: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005238025914877653
    2. '.' → logprob: -5.255238056182861
    3. '.app' → logprob: -13.380237579345703
    4. '.ap' → logprob: -13.755237579345703
    5. '.add' → logprob: -14.380237579345703
    6. '.extend' → logprob: -14.880237579345703
    7. '.setdefault' → logprob: -15.130237579345703
    8. '.Append' → logprob: -15.880237579345703
    9. '.push' → logprob: -16.755237579345703
    10. '.insert' → logprob: -16.880237579345703

Token 166: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.018151231110095978
    2. '(' → logprob: -4.01815128326416
    3. '(scores' → logprob: -13.89315128326416
    4. '(price' → logprob: -15.89315128326416
    5. '(
' → logprob: -15.89315128326416
    6. '(sc' → logprob: -16.768150329589844
    7. '(space' → logprob: -17.143150329589844
    8. 'score' → logprob: -17.643150329589844
    9. '(stock' → logprob: -18.393150329589844
    10. '(

' → logprob: -18.393150329589844

Token 167: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001314295077463612
    2. '<|end|>' → logprob: -9.375131607055664
    3. ' )' → logprob: -10.375131607055664
    4. ')
' → logprob: -11.750131607055664
    5. '<|end|>' → logprob: -13.000131607055664
    6. ')return' → logprob: -13.375131607055664
    7. '()' → logprob: -14.750131607055664
    8. ' ' → logprob: -14.875131607055664
    9. '.' → logprob: -15.000131607055664
    10. '       ' → logprob: -15.125131607055664

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4495503008365631
    2. '
' → logprob: -1.4495502710342407
    3. '<|end|>' → logprob: -2.1995503902435303
    4. '<|end|>' → logprob: -5.449550151824951
    5. ' def' → logprob: -5.824550151824951
    6. 'def' → logprob: -5.824550151824951
    7. '

' → logprob: -5.824550151824951
    8. '    
' → logprob: -6.574550151824951
    9. ' ' → logprob: -7.199550151824951
    10. '```' → logprob: -8.19955062866211

Token 169: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01737925596535206
    2. ' def' → logprob: -4.142379283905029
    3. '   ' → logprob: -6.642379283905029
    4. ' ' → logprob: -10.517378807067871
    5. '
' → logprob: -12.017378807067871
    6. '@property' → logprob: -13.267378807067871
    7. 'd' → logprob: -13.642378807067871
    8. '  ' → logprob: -13.892378807067871
    9. '    
' → logprob: -14.267378807067871
    10. ' 
' → logprob: -14.392378807067871

Token 170: ' validate' (ID: 14986)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.11975281685590744
    2. ' best' → logprob: -3.119752883911133
    3. ' def' → logprob: -3.619752883911133
    4. 'get' → logprob: -3.994752883911133
    5. ' highest' → logprob: -4.369752883911133
    6. 'best' → logprob: -5.869752883911133
    7. ' remove' → logprob: -6.119752883911133
    8. ' average' → logprob: -6.244752883911133
    9. 'def' → logprob: -6.494752883911133
    10. ' top' → logprob: -7.744752883911133

Token 171: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6833279132843018
    2. '_scores' → logprob: -1.3083279132843018
    3. '(self' → logprob: -1.6833279132843018
    4. '_' → logprob: -3.3083279132843018
    5. '_score' → logprob: -6.933327674865723
    6. '_(' → logprob: -7.808327674865723
    7. '_self' → logprob: -8.183327674865723
    8. '()' → logprob: -9.058327674865723
    9. 'self' → logprob: -9.308327674865723
    10. 'scores' → logprob: -9.433327674865723

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.052589934319257736
    2. ')' → logprob: -3.5525898933410645
    3. ',' → logprob: -4.0525898933410645
    4. '_scores' → logprob: -6.1775898933410645
    5. 'self' → logprob: -6.6775898933410645
    6. '):
' → logprob: -6.8025898933410645
    7. ')_' → logprob: -8.052590370178223
    8. '_' → logprob: -8.302590370178223
    9. ' ):' → logprob: -10.427590370178223
    10. '_self' → logprob: -10.677590370178223

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006367852329276502
    2. ' if' → logprob: -7.750636577606201
    3. '   ' → logprob: -9.87563705444336
    4. ' for' → logprob: -10.25063705444336
    5. ':' → logprob: -10.37563705444336
    6. '
' → logprob: -10.50063705444336
    7. ',' → logprob: -11.12563705444336
    8. 'if' → logprob: -11.25063705444336
    9. '      ' → logprob: -11.87563705444336
    10. '    ' → logprob: -12.00063705444336

Token 174: ' n' (ID: 297)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41758161783218384
    2. 'if' → logprob: -1.167581558227539
    3. '       ' → logprob: -4.292581558227539
    4. ' for' → logprob: -4.667581558227539
    5. 'for' → logprob: -5.292581558227539
    6. ' return' → logprob: -8.542581558227539
    7. 'return' → logprob: -8.542581558227539
    8. ' self' → logprob: -8.792581558227539
    9. ' valid' → logprob: -8.917581558227539
    10. ' previous' → logprob: -8.917581558227539

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0641523152589798
    2. '=' → logprob: -2.939152240753174
    3. ' ' → logprob: -4.939152240753174
    4. '   ' → logprob: -6.939152240753174
    5. 'o' → logprob: -7.939152240753174
    6. '       ' → logprob: -8.689152717590332
    7. '    ' → logprob: -9.064152717590332
    8. '  ' → logprob: -9.314152717590332
    9. ' >' → logprob: -9.564152717590332
    10. '_' → logprob: -9.939152717590332

Token 176: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.005236360710114241
    2. 'len' → logprob: -5.2552361488342285
    3. '=len' → logprob: -13.880236625671387
    4. '	len' → logprob: -14.130236625671387
    5. '(len' → logprob: -14.505236625671387
    6. ' ' → logprob: -15.130236625671387
    7. '[len' → logprob: -16.50523567199707
    8. ',len' → logprob: -17.13023567199707
    9. '<len' → logprob: -17.75523567199707
    10. '<|end|>' → logprob: -17.88023567199707

Token 177: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.313268780708313
    2. '(self' → logprob: -1.313268780708313
    3. '(s' → logprob: -12.563268661499023
    4. '(
' → logprob: -13.563268661499023
    5. '(this' → logprob: -13.688268661499023
    6. '(

' → logprob: -14.688268661499023
    7. 'self' → logprob: -15.438268661499023
    8. ' (' → logprob: -15.438268661499023
    9. '()' → logprob: -16.188268661499023
    10. '(sel' → logprob: -16.438268661499023

Token 178: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0017990543274208903
    2. '.' → logprob: -6.5017991065979
    3. ' .' → logprob: -8.126798629760742
    4. ').' → logprob: -14.751798629760742
    5. 'scores' → logprob: -15.626798629760742
    6. 's' → logprob: -15.876798629760742
    7. '.score' → logprob: -16.001798629760742
    8. ')' → logprob: -16.251798629760742
    9. ' ' → logprob: -16.501798629760742
    10. '.
' → logprob: -17.001798629760742

Token 179: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.009102691896259785
    2. 'scores' → logprob: -4.759102821350098
    3. 'core' → logprob: -8.134102821350098
    4. '```' → logprob: -9.884102821350098
    5. '(scores' → logprob: -10.884102821350098
    6. 'c' → logprob: -11.134102821350098
    7. ' scores' → logprob: -11.259102821350098
    8. 's' → logprob: -11.384102821350098
    9. 'ores' → logprob: -11.759102821350098
    10. '   ' → logprob: -11.884102821350098

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009372105821967125
    2. ')
' → logprob: -5.259372234344482
    3. ' )' → logprob: -5.509372234344482
    4. ' )
' → logprob: -9.509371757507324
    5. '       ' → logprob: -13.009371757507324
    6. ')

' → logprob: -13.634371757507324
    7. ' ' → logprob: -14.134371757507324
    8. '   ' → logprob: -14.134371757507324
    9. ')>' → logprob: -15.009371757507324
    10. 'if' → logprob: -15.634371757507324

Token 181: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7003084421157837
    2. '       ' → logprob: -0.7003084421157837
    3. ' for' → logprob: -5.825308322906494
    4. '        
' → logprob: -6.575308322906494
    5. ' if' → logprob: -7.075308322906494
    6. 'for' → logprob: -7.200308322906494
    7. '<|end|>' → logprob: -7.700308322906494
    8. ' 
' → logprob: -8.825308799743652
    9. 'if' → logprob: -8.825308799743652
    10. '  
' → logprob: -9.200308799743652

Token 182: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38235709071159363
    2. 'for' → logprob: -1.382357120513916
    3. ' if' → logprob: -3.007357120513916
    4. 'if' (adapté à ' if') → logprob: -4.382357120513916
    5. '       ' → logprob: -5.382357120513916
    6. ' i' → logprob: -9.507356643676758
    7. '        ' → logprob: -9.632356643676758
    8. 'return' → logprob: -10.757356643676758
    9. ' return' → logprob: -10.882356643676758
    10. '   ' → logprob: -11.007356643676758

Token 183: ' not' (ID: 625)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.009897394105792046
    2. 'n' → logprob: -4.634897232055664
    3. ' not' → logprob: -9.634897232055664
    4. ' ' → logprob: -10.259897232055664
    5. ' any' → logprob: -10.634897232055664
    6. '	n' → logprob: -11.509897232055664
    7. ' all' → logprob: -13.697397232055664
    8. '
' → logprob: -14.072397232055664
    9. '   ' → logprob: -14.072397232055664
    10. 'n't' → logprob: -14.197397232055664

Token 184: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0724107101559639
    2. '(' → logprob: -3.447410821914673
    3. ' n' → logprob: -3.697410821914673
    4. ' ' → logprob: -4.947410583496094
    5. ' all' → logprob: -5.947410583496094
    6. '(n' → logprob: -6.322410583496094
    7. '0' → logprob: -7.322410583496094
    8. ' any' → logprob: -7.572410583496094
    9. 'n' → logprob: -8.447410583496094
    10. '1' → logprob: -8.822410583496094

Token 185: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3891291916370392
    2. '1' → logprob: -1.8891291618347168
    3. '0' → logprob: -2.889129161834717
    4. ' ' → logprob: -3.139129161834717
    5. 'n' → logprob: -3.639129161834717
    6. '2' → logprob: -3.889129161834717
    7. ' n' → logprob: -4.014129161834717
    8. '5' → logprob: -5.514129161834717
    9. '4' → logprob: -6.014129161834717
    10. '(' → logprob: -8.639129638671875

Token 186: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.007672995328903198
    2. '<=' → logprob: -4.8826727867126465
    3. ' ' → logprob: -9.757673263549805
    4. ' <' → logprob: -12.007673263549805
    5. ' ≤' → logprob: -14.882673263549805
    6. '<' → logprob: -14.882673263549805
    7. ')' → logprob: -15.132673263549805
    8. ' >=' → logprob: -15.257673263549805
    9. '  ' → logprob: -15.507673263549805
    10. ' ' → logprob: -15.757673263549805

Token 187: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141461491584778
    2. ' n' → logprob: -1.7014145851135254
    3. '	n' → logprob: -14.076415061950684
    4. ')n' → logprob: -15.451415061950684
    5. '
' → logprob: -15.701415061950684
    6. ' ' → logprob: -16.201414108276367
    7. '   ' → logprob: -17.326414108276367
    8. '_n' → logprob: -17.701414108276367
    9. 'len' → logprob: -18.076414108276367
    10. ' ' → logprob: -18.326414108276367

Token 188: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01063225232064724
    2. '<=' → logprob: -5.135632038116455
    3. ' and' → logprob: -5.885632038116455
    4. ')' → logprob: -7.260632038116455
    5. ' ' → logprob: -7.760632038116455
    6. 'and' → logprob: -7.760632038116455
    7. '<|end|>' → logprob: -9.010632514953613
    8. ' )' → logprob: -10.010632514953613
    9. '       ' → logprob: -10.135632514953613
    10. '):' → logprob: -10.510632514953613

Token 189: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.942794680595398
    2. '7' → logprob: -1.192794680595398
    3. '10' → logprob: -2.0677947998046875
    4. '19' → logprob: -2.6927947998046875
    5. ' ' → logprob: -2.9427947998046875
    6. '5' → logprob: -3.9427947998046875
    7. '9' → logprob: -4.6927947998046875
    8. '50' → logprob: -4.6927947998046875
    9. '100' → logprob: -4.8177947998046875
    10. '15' → logprob: -5.0677947998046875

Token 190: '100' (ID: 1353)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.9420295357704163
    2. '10' → logprob: -1.0670294761657715
    3. '7' → logprob: -2.0670294761657715
    4. '100' → logprob: -2.8170294761657715
    5. '50' → logprob: -3.3170294761657715
    6. ' ' → logprob: -4.1920294761657715
    7. '9' → logprob: -4.6920294761657715
    8. '5' → logprob: -5.1920294761657715
    9. '15' → logprob: -5.3170294761657715
    10. '99' → logprob: -6.0670294761657715

Token 191: '):
' (ID: 1883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5275527238845825
    2. '):
' → logprob: -1.5275527238845825
    3. '):' → logprob: -1.6525527238845825
    4. ')' → logprob: -7.527552604675293
    5. '00' → logprob: -7.777552604675293
    6. ' ):
' → logprob: -9.277552604675293
    7. '000' → logprob: -9.652552604675293
    8. ' ):' → logprob: -9.777552604675293
    9. '):

' → logprob: -10.152552604675293
    10. '   ' → logprob: -10.277552604675293

Token 192: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45526042580604553
    2. '           ' → logprob: -1.7052603960037231
    3. ':
' → logprob: -2.0802605152130127
    4. '       ' → logprob: -3.2052605152130127
    5. ':return' → logprob: -5.080260276794434
    6. ' or' → logprob: -5.455260276794434
    7. ' and' → logprob: -5.580260276794434
    8. '):
' → logprob: -6.705260276794434
    9. ',' → logprob: -6.955260276794434
    10. '):' → logprob: -7.205260276794434

Token 193: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.3877384662628174
    2. 'raise' (adapté à ' raise') → logprob: -1.1377384662628174
    3. '           ' → logprob: -7.637738227844238
    4. '
' → logprob: -8.012738227844238
    5. '	raise' → logprob: -10.637738227844238
    6. '            ' → logprob: -11.512738227844238
    7. ' 
' → logprob: -12.137738227844238
    8. '   ' → logprob: -13.137738227844238
    9. '            
' → logprob: -13.137738227844238
    10. '    ' → logprob: -13.262738227844238

Token 194: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.011089201085269451
    2. 'Value' → logprob: -4.511089324951172
    3. ' Val' → logprob: -10.886089324951172
    4. ' ' → logprob: -11.261089324951172
    5. '	Value' → logprob: -12.886089324951172
    6. 'Val' → logprob: -13.761089324951172
    7. '```' → logprob: -14.011089324951172
    8. '_value' → logprob: -14.136089324951172
    9. ' Va' → logprob: -14.386089324951172
    10. '_Value' → logprob: -14.511089324951172

Token 195: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0013570250011980534
    2. 'rror' → logprob: -6.626357078552246
    3. 'Value' → logprob: -11.001357078552246
    4. 'alue' → logprob: -11.251357078552246
    5. '           ' → logprob: -14.626357078552246
    6. '   ' → logprob: -15.876357078552246
    7. 'error' → logprob: -16.12635612487793
    8. '  ' → logprob: -16.25135612487793
    9. '         ' → logprob: -16.37635612487793
    10. ' Error' → logprob: -16.37635612487793

Token 196: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001171652227640152
    2. '(' → logprob: -6.751171588897705
    3. '(
' → logprob: -13.626172065734863
    4. '('' → logprob: -16.376171112060547
    5. '(f' → logprob: -16.376171112060547
    6. '(

' → logprob: -18.251171112060547
    7. '()' → logprob: -18.626171112060547
    8. '"' → logprob: -18.876171112060547
    9. '("'' → logprob: -19.251171112060547
    10. '("")' → logprob: -19.376171112060547

Token 197: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.02819165401160717
    2. 'The' → logprob: -4.278191566467285
    3. ' Number' → logprob: -5.028191566467285
    4. 'There' → logprob: -5.778191566467285
    5. 'Judge' → logprob: -6.903191566467285
    6. '"' → logprob: -7.153191566467285
    7. 'Invalid' → logprob: -7.153191566467285
    8. 'At' → logprob: -7.278191566467285
    9. ' The' → logprob: -8.903191566467285
    10. 'Must' → logprob: -9.028191566467285

Token 198: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.00173158326651901
    2. 'of' → logprob: -6.5017313957214355
    3. ' ' → logprob: -8.626731872558594
    4. '  ' → logprob: -10.126731872558594
    5. '_of' → logprob: -12.501731872558594
    6. '   ' → logprob: -12.876731872558594
    7. '    ' → logprob: -13.501731872558594
    8. '	of' → logprob: -13.751731872558594
    9. ' ' → logprob: -14.251731872558594
    10. '<|end|>' → logprob: -15.751731872558594

Token 199: ' judges' (ID: 49388)
  Prédit: ' scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.5886797308921814
    2. ' self' → logprob: -0.8386797308921814
    3. ' judges' → logprob: -4.963679790496826
    4. 'self' → logprob: -5.838679790496826
    5. 'scores' → logprob: -6.213679790496826
    6. ' ' → logprob: -7.963679790496826
    7. ' s' → logprob: -8.463679313659668
    8. 's' → logprob: -9.838679313659668
    9. ' score' → logprob: -10.463679313659668
    10. '_scores' → logprob: -11.088679313659668

Token 200: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.013058346696197987
    2. 'must' → logprob: -4.638058185577393
    3. ' should' → logprob: -6.263058185577393
    4. ' is' → logprob: -7.263058185577393
    5. ' ' → logprob: -8.26305866241455
    6. ' scores' → logprob: -8.51305866241455
    7. 'should' → logprob: -9.76305866241455
    8. 'scores' → logprob: -10.01305866241455
    9. ')' → logprob: -11.01305866241455
    10. '   ' → logprob: -11.26305866241455

Token 201: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0003115095605608076
    2. ' ' → logprob: -8.500311851501465
    3. ' not' → logprob: -10.375311851501465
    4. '<|end|>' → logprob: -10.750311851501465
    5. ' between' → logprob: -10.875311851501465
    6. '    ' → logprob: -11.750311851501465
    7. ' have' → logprob: -12.000311851501465
    8. ')' → logprob: -12.250311851501465
    9. ' valid' → logprob: -12.625311851501465
    10. ' in' → logprob: -12.750311851501465

Token 202: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.0257139690220356
    2. 'between' → logprob: -3.7757139205932617
    3. ' at' → logprob: -6.650713920593262
    4. ' ' → logprob: -7.400713920593262
    5. '3' → logprob: -7.525713920593262
    6. 'at' → logprob: -11.400713920593262
    7. ' within' → logprob: -12.775713920593262
    8. '    ' → logprob: -13.650713920593262
    9. 'Between' → logprob: -13.775713920593262
    10. ' in' → logprob: -13.775713920593262

Token 203: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.25194650888442993
    2. ' ' → logprob: -1.5019464492797852
    3. '   ' → logprob: -11.501946449279785
    4. '```' → logprob: -12.751946449279785
    5. '    ' → logprob: -13.501946449279785
    6. '  ' → logprob: -14.126946449279785
    7. '
' → logprob: -15.001946449279785
    8. ' ' → logprob: -15.126946449279785
    9. '1' → logprob: -15.314446449279785
    10. ' three' → logprob: -15.814446449279785

Token 204: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '
' → logprob: -15.500012397766113
    4. '```' → logprob: -15.750012397766113
    5. '   ' → logprob: -16.000011444091797
    6. '    ' → logprob: -19.625011444091797
    7. '`' → logprob: -19.625011444091797
    8. '1' → logprob: -19.750011444091797
    9. '       ' → logprob: -19.750011444091797
    10. '"' → logprob: -19.937511444091797

Token 205: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0007975964690558612
    2. 'and' → logprob: -7.250797748565674
    3. ' ' → logprob: -9.375797271728516
    4. ')' → logprob: -13.375797271728516
    5. ' )' → logprob: -14.625797271728516
    6. ',' → logprob: -14.875797271728516
    7. ' ")' → logprob: -15.375797271728516
    8. ' ,' → logprob: -16.125797271728516
    9. ' to' → logprob: -16.750797271728516
    10. '")' → logprob: -16.750797271728516

Token 206: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.02632259577512741
    2. ' ' → logprob: -3.651322603225708
    3. '10' → logprob: -11.776322364807129
    4. '   ' → logprob: -12.401322364807129
    5. '
' → logprob: -12.651322364807129
    6. '  ' → logprob: -12.776322364807129
    7. '50' → logprob: -13.901322364807129
    8. '1' → logprob: -14.026322364807129
    9. '20' → logprob: -14.838822364807129
    10. '99' → logprob: -15.026322364807129

Token 207: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00034845535992644727
    2. ' ' → logprob: -8.250348091125488
    3. '10' → logprob: -9.500348091125488
    4. '1' → logprob: -11.875348091125488
    5. '50' → logprob: -13.750348091125488
    6. '99' → logprob: -13.750348091125488
    7. '
' → logprob: -13.875348091125488
    8. '3' → logprob: -14.750348091125488
    9. '   ' → logprob: -15.000348091125488
    10. '  ' → logprob: -15.000348091125488

Token 208: '")
' (ID: 1896)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.06237107515335083
    2. '")' → logprob: -2.812371015548706
    3. ')' → logprob: -8.437371253967285
    4. ')")
' → logprob: -9.062371253967285
    5. '.")' → logprob: -10.062371253967285
    6. '}")' → logprob: -11.062371253967285
    7. ')"' → logprob: -11.687371253967285
    8. ')").' → logprob: -14.187371253967285
    9. ' )' → logprob: -14.312371253967285
    10. ']' → logprob: -14.437371253967285

Token 209: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5328187942504883
    2. '       ' → logprob: -1.0328187942504883
    3. '<|end|>' → logprob: -2.9078187942504883
    4. '        
' → logprob: -6.282818794250488
    5. '   ' → logprob: -9.407818794250488
    6. '<|end|>' → logprob: -9.532818794250488
    7. '  
' → logprob: -9.782818794250488
    8. ' for' → logprob: -9.907818794250488
    9. '    
' → logprob: -10.032818794250488
    10. ')' → logprob: -10.282818794250488

Token 210: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5914759635925293
    2. '       ' → logprob: -1.3414759635925293
    3. 'for' (adapté à ' for') → logprob: -1.7164759635925293
    4. 'self' → logprob: -7.091475963592529
    5. ' if' → logprob: -7.341475963592529
    6. '#' → logprob: -7.466475963592529
    7. 'scores' → logprob: -7.466475963592529
    8. ' self' → logprob: -8.216476440429688
    9. ' scores' → logprob: -8.466476440429688
    10. '   ' → logprob: -8.466476440429688

Token 211: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4818344712257385
    2. ' i' → logprob: -0.9818344712257385
    3. 'score' → logprob: -5.606834411621094
    4. ' score' → logprob: -5.856834411621094
    5. '   ' → logprob: -6.856834411621094
    6. 'self' → logprob: -10.481834411621094
    7. ' self' → logprob: -10.856834411621094
    8. 's' → logprob: -10.981834411621094
    9. ' idx' → logprob: -11.231834411621094
    10. ' ' → logprob: -11.356834411621094

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07399602234363556
    2. 'core' → logprob: -2.698996067047119
    3. 'elf' → logprob: -5.823996067047119
    4. ' i' → logprob: -7.573996067047119
    5. ' ' → logprob: -8.948995590209961
    6. 'cor' → logprob: -9.198995590209961
    7. '1' → logprob: -9.698995590209961
    8. 'e' → logprob: -9.948995590209961
    9. 'cores' → logprob: -10.073995590209961
    10. ',' → logprob: -10.073995590209961

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067234220914542675
    2. ' self' → logprob: -5.006723403930664
    3. '
' → logprob: -12.506723403930664
    4. '   ' → logprob: -13.256723403930664
    5. '       ' → logprob: -14.131723403930664
    6. 'elf' → logprob: -14.631723403930664
    7. '(self' → logprob: -14.756723403930664
    8. ' ' → logprob: -15.006723403930664
    9. '    ' → logprob: -15.381723403930664
    10. 'range' → logprob: -16.256723403930664

Token 214: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -9.698698704596609e-05
    2. '.' → logprob: -9.375097274780273
    3. 'scores' → logprob: -11.625097274780273
    4. ' .' → logprob: -13.125097274780273
    5. 's' → logprob: -14.250097274780273
    6. '.score' → logprob: -15.750097274780273
    7. '_scores' → logprob: -16.125097274780273
    8. '.sc' → logprob: -17.000097274780273
    9. '(scores' → logprob: -17.250097274780273
    10. '.
' → logprob: -17.750097274780273

Token 215: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -6.051066520740278e-05
    2. 'scores' → logprob: -9.750060081481934
    3. 'core' → logprob: -13.750060081481934
    4. 'ores' → logprob: -14.500060081481934
    5. 'tores' → logprob: -15.750060081481934
    6. 'co' → logprob: -16.12506103515625
    7. '_scores' → logprob: -16.50006103515625
    8. 'coes' → logprob: -17.50006103515625
    9. '(scores' → logprob: -17.50006103515625
    10. '```' → logprob: -17.62506103515625

Token 216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005056094843894243
    2. ':
' → logprob: -5.630055904388428
    3. ' :' → logprob: -7.005055904388428
    4. '.' → logprob: -8.505056381225586
    5. '):' → logprob: -9.130056381225586
    6. '           ' → logprob: -9.880056381225586
    7. ',' → logprob: -10.130056381225586
    8. '[:-' → logprob: -10.130056381225586
    9. ' if' → logprob: -10.380056381225586
    10. '       ' → logprob: -11.255056381225586

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10749461501836777
    2. ' if' → logprob: -2.357494592666626
    3. 'if' → logprob: -4.982494831085205
    4. '            ' → logprob: -8.982494354248047
    5. ',' → logprob: -10.107494354248047
    6. '<|end|>' → logprob: -10.357494354248047
    7. '          ' → logprob: -10.482494354248047
    8. '       ' → logprob: -10.607494354248047
    9. ':' → logprob: -10.732494354248047
    10. '    ' → logprob: -10.857494354248047

Token 218: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07102018594741821
    2. ' if' → logprob: -2.6960201263427734
    3. '           ' → logprob: -6.946020126342773
    4. 's' → logprob: -10.196020126342773
    5. 'pass' → logprob: -10.196020126342773
    6. 'assert' → logprob: -11.071020126342773
    7. '       ' → logprob: -11.321020126342773
    8. '
' → logprob: -11.446020126342773
    9. ' s' → logprob: -13.321020126342773
    10. '_' → logprob: -13.696020126342773

Token 219: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2405918389558792
    2. 's' → logprob: -2.2405917644500732
    3. ' not' → logprob: -2.2405917644500732
    4. ' s' → logprob: -6.990592002868652
    5. '   ' → logprob: -10.115592002868652
    6. '(s' → logprob: -10.365592002868652
    7. '(not' → logprob: -10.365592002868652
    8. ' ' → logprob: -12.740592002868652
    9. '	not' → logprob: -12.990592002868652
    10. '  ' → logprob: -13.115592002868652

Token 220: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2870994508266449
    2. ' isinstance' → logprob: -1.7870994806289673
    3. 'is' → logprob: -3.1620993614196777
    4. ' (' → logprob: -3.2870993614196777
    5. '(is' → logprob: -6.537099361419678
    6. '0' → logprob: -7.037099361419678
    7. ' ' → logprob: -10.537099838256836
    8. '   ' → logprob: -10.912099838256836
    9. 's' → logprob: -11.037099838256836
    10. '```' → logprob: -11.912099838256836

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006539395544677973
    2. ' ' → logprob: -7.7506537437438965
    3. 'is' → logprob: -8.875654220581055
    4. ' isinstance' → logprob: -10.125654220581055
    5. 's' → logprob: -10.875654220581055
    6. '(' → logprob: -11.125654220581055
    7. ' (' → logprob: -12.500654220581055
    8. '   ' → logprob: -13.500654220581055
    9. 'score' → logprob: -13.625654220581055
    10. '  ' → logprob: -14.375654220581055

Token 222: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07890983670949936
    2. '<=' → logprob: -2.5789098739624023
    3. '<|end|>' → logprob: -11.953909873962402
    4. ' ' → logprob: -12.453909873962402
    5. ')<=' → logprob: -13.078909873962402
    6. '.' → logprob: -13.078909873962402
    7. ')' → logprob: -13.328909873962402
    8. '<' → logprob: -13.953909873962402
    9. '0' → logprob: -14.078909873962402
    10. '=' → logprob: -14.203909873962402

Token 223: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02054317481815815
    2. ' s' → logprob: -3.895543098449707
    3. '
' → logprob: -14.520543098449707
    4. '           ' → logprob: -14.645543098449707
    5. ' ' → logprob: -16.020544052124023
    6. '   ' → logprob: -16.645544052124023
    7. '            
' → logprob: -17.145544052124023
    8. ' 
' → logprob: -17.270544052124023
    9. 'score' → logprob: -17.270544052124023
    10. '	s' → logprob: -17.520544052124023

Token 224: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0015067668864503503
    2. '.' → logprob: -6.626506805419922
    3. '.score' → logprob: -8.751506805419922
    4. ' .' → logprob: -10.876506805419922
    5. '.s' → logprob: -13.751506805419922
    6. '.user' → logprob: -14.626506805419922
    7. '.token' → logprob: -14.751506805419922
    8. '.val' → logprob: -15.626506805419922
    9. '.values' → logprob: -15.751506805419922
    10. ').' → logprob: -15.876506805419922

Token 225: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3134761452674866
    2. '<=' → logprob: -1.3134760856628418
    3. ' and' → logprob: -9.3134765625
    4. 'and' → logprob: -9.4384765625
    5. '<' → logprob: -11.1884765625
    6. ' <' → logprob: -11.1884765625
    7. ')' → logprob: -11.5634765625
    8. ' ' → logprob: -13.0634765625
    9. ' )' → logprob: -13.1884765625
    10. ')<=' → logprob: -13.9384765625

Token 226: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0031804447062313557
    2. ' ' → logprob: -5.753180503845215
    3. '   ' → logprob: -13.128180503845215
    4. '  ' → logprob: -14.878180503845215
    5. 'score' → logprob: -16.6281795501709
    6. '１００' → logprob: -16.6281795501709
    7. '999' → logprob: -16.8781795501709
    8. '1' → logprob: -17.1906795501709
    9. '```' → logprob: -17.6906795501709
    10. '10' → logprob: -18.0031795501709

Token 227: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0003396343090571463
    2. ' ' → logprob: -8.00033950805664
    3. '   ' → logprob: -13.00033950805664
    4. '  ' → logprob: -14.50033950805664
    5. '１００' → logprob: -14.56283950805664
    6. 'score' → logprob: -15.75033950805664
    7. '10' → logprob: -16.31283950805664
    8. '1' → logprob: -16.62533950805664
    9. '999' → logprob: -16.68783950805664
    10. 's' → logprob: -16.68783950805664

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003802680876106024
    2. '):' → logprob: -8.500380516052246
    3. ')' → logprob: -8.875380516052246
    4. '):
' → logprob: -10.375380516052246
    5. '       ' → logprob: -13.000380516052246
    6. '   ' → logprob: -13.625380516052246
    7. ' ' → logprob: -14.750380516052246
    8. '    ' → logprob: -15.750380516052246
    9. '):

' → logprob: -15.750380516052246
    10. '۰' → logprob: -15.750380516052246

Token 229: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761227607727051
    2. '):' → logprob: -0.8261227607727051
    3. ')' → logprob: -9.576122283935547
    4. '):
' → logprob: -10.451122283935547
    5. '       ' → logprob: -10.701122283935547
    6. ' ):
' → logprob: -10.826122283935547
    7. ':' → logprob: -10.951122283935547
    8. '):

' → logprob: -11.576122283935547
    9. '           ' → logprob: -11.826122283935547
    10. ' ):' → logprob: -12.076122283935547

Token 230: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2047490030527115
    2. '               ' → logprob: -2.20474910736084
    3. '           ' → logprob: -2.95474910736084
    4. ':
' → logprob: -4.32974910736084
    5. ' :' → logprob: -5.57974910736084
    6. ',' → logprob: -6.57974910736084
    7. ' raise' → logprob: -6.70474910736084
    8. '):' → logprob: -6.82974910736084
    9. '):
' → logprob: -7.82974910736084
    10. 'raise' → logprob: -7.82974910736084

Token 231: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.007463704328984022
    2. 'raise' (adapté à ' raise') → logprob: -5.0074639320373535
    3. '           ' → logprob: -7.7574639320373535
    4. '               ' → logprob: -8.757463455200195
    5. '                   ' → logprob: -9.382463455200195
    6. '	raise' → logprob: -10.007463455200195
    7. '                ' → logprob: -11.132463455200195
    8. '            ' → logprob: -11.632463455200195
    9. ' 
' → logprob: -13.007463455200195
    10. '   ' → logprob: -13.507463455200195

Token 232: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.048597365617752075
    2. 'Value' → logprob: -3.0485973358154297
    3. ' value' → logprob: -12.42359733581543
    4. ' ' → logprob: -12.67359733581543
    5. '_Value' → logprob: -13.79859733581543
    6. '	Value' → logprob: -13.79859733581543
    7. '_value' → logprob: -15.42359733581543
    8. ' Val' → logprob: -15.54859733581543
    9. 'Val' → logprob: -15.92359733581543
    10. ' ' → logprob: -16.42359733581543

Token 233: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0006258221692405641
    2. 'Value' → logprob: -7.8756256103515625
    3. 'rror' → logprob: -8.375625610351562
    4. 'alue' → logprob: -11.125625610351562
    5. ' Error' → logprob: -16.250625610351562
    6. 'error' → logprob: -16.250625610351562
    7. 'SError' → logprob: -17.000625610351562
    8. '           ' → logprob: -17.125625610351562
    9. '  ' → logprob: -17.250625610351562
    10. ' ' → logprob: -17.250625610351562

Token 234: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1604679375886917
    2. '(' → logprob: -1.9104679822921753
    3. '(
' → logprob: -8.410468101501465
    4. '(f' → logprob: -11.035468101501465
    5. '("")' → logprob: -13.285468101501465
    6. '("("' → logprob: -13.660468101501465
    7. '(

' → logprob: -13.785468101501465
    8. '('' → logprob: -14.410468101501465
    9. '()' → logprob: -15.660468101501465
    10. '("
' → logprob: -15.910468101501465

Token 235: 'Scores' (ID: 63316)
  Prédit: 'Score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.11736336350440979
    2. 'Invalid' → logprob: -2.742363452911377
    3. 'Judge' → logprob: -4.117363452911377
    4. '"' → logprob: -4.492363452911377
    5. ' Score' → logprob: -4.617363452911377
    6. 'Each' → logprob: -5.117363452911377
    7. 'Scores' → logprob: -7.367363452911377
    8. 'All' → logprob: -7.367363452911377
    9. ' Judge' → logprob: -7.617363452911377
    10. 'Individual' → logprob: -8.742362976074219

Token 236: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.04438779503107071
    2. ' out' → logprob: -4.0443878173828125
    3. ' values' → logprob: -4.0443878173828125
    4. ' contain' → logprob: -6.2943878173828125
    5. ' should' → logprob: -6.6693878173828125
    6. ' can' → logprob: -7.0443878173828125
    7. '<|end|>' → logprob: -7.2943878173828125
    8. ' are' → logprob: -7.2943878173828125
    9. ' outside' → logprob: -7.5443878173828125
    10. ' value' → logprob: -7.6693878173828125

Token 237: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.002452587941661477
    2. ' not' → logprob: -6.502452373504639
    3. ' all' → logprob: -7.752452373504639
    4. ' continue' → logprob: -8.127452850341797
    5. '<|end|>' → logprob: -9.502452850341797
    6. ' always' → logprob: -10.002452850341797
    7. ' ' → logprob: -10.377452850341797
    8. ' pass' → logprob: -10.627452850341797
    9. ')' → logprob: -11.377452850341797
    10. ' validate' → logprob: -11.877452850341797

Token 238: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.029899630695581436
    2. 'between' → logprob: -3.9048995971679688
    3. '0' → logprob: -5.279899597167969
    4. ' valid' → logprob: -6.529899597167969
    5. ' within' → logprob: -6.654899597167969
    6. ' in' → logprob: -7.529899597167969
    7. ' ' → logprob: -7.529899597167969
    8. ' integers' → logprob: -8.404899597167969
    9. 'valid' → logprob: -9.904899597167969
    10. 'within' → logprob: -10.529899597167969

Token 239: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38687190413475037
    2. '0' → logprob: -1.1368719339370728
    3. '  ' → logprob: -15.261872291564941
    4. ' ' → logprob: -15.761872291564941
    5. '00' → logprob: -16.011871337890625
    6. '   ' → logprob: -16.136871337890625
    7. '<|end|>' → logprob: -16.824371337890625
    8. '100' → logprob: -16.886871337890625
    9. '000' → logprob: -17.199371337890625
    10. '1' → logprob: -17.199371337890625

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007110013975761831
    2. ' ' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.875711441040039
    4. '000' → logprob: -15.500711441040039
    5. '  ' → logprob: -16.00071144104004
    6. '00' → logprob: -17.06321144104004
    7. '```' → logprob: -17.50071144104004
    8. '۰' → logprob: -17.81321144104004
    9. '    ' → logprob: -18.12571144104004
    10. '
' → logprob: -18.12571144104004

Token 241: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4206399917602539
    2. 'and' → logprob: -1.170639991760254
    3. '0' → logprob: -3.670639991760254
    4. ' ' → logprob: -4.920639991760254
    5. '   ' → logprob: -8.170639991760254
    6. '       ' → logprob: -9.045639991760254
    7. '    ' → logprob: -11.170639991760254
    8. '100' → logprob: -11.545639991760254
    9. '  ' → logprob: -11.795639991760254
    10. '        ' → logprob: -11.920639991760254

Token 242: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12692968547344208
    2. ' ' → logprob: -2.126929759979248
    3. '   ' → logprob: -14.68942928314209
    4. '  ' → logprob: -15.75192928314209
    5. ' ' → logprob: -15.75192928314209
    6. '
' → logprob: -16.126930236816406
    7. 's' → logprob: -16.251930236816406
    8. '1' → logprob: -16.251930236816406
    9. '```' → logprob: -16.439430236816406
    10. '0' → logprob: -16.564430236816406

Token 243: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.875096321105957
    4. '１００' → logprob: -16.500097274780273
    5. '1' → logprob: -16.562597274780273
    6. '
' → logprob: -16.687597274780273
    7. '```' → logprob: -17.375097274780273
    8. '  ' → logprob: -17.375097274780273
    9. '999' → logprob: -18.312597274780273
    10. 's' → logprob: -18.437597274780273

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. ')' → logprob: -12.250005722045898
    3. '۰' → logprob: -15.500005722045898
    4. '00' → logprob: -15.750005722045898
    5. '       ' → logprob: -15.875005722045898
    6. '   ' → logprob: -16.0625057220459
    7. '")' → logprob: -16.1875057220459
    8. ')
' → logprob: -16.6875057220459
    9. ' ' → logprob: -16.9375057220459
    10. '000' → logprob: -17.0625057220459

Token 245: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.026160482317209244
    2. ')")' → logprob: -3.776160478591919
    3. ')' → logprob: -6.026160717010498
    4. '")
' → logprob: -7.776160717010498
    5. '.")' → logprob: -10.52616024017334
    6. ')")
' → logprob: -10.65116024017334
    7. ' ")' → logprob: -11.40116024017334
    8. '}")' → logprob: -12.15116024017334
    9. ')"' → logprob: -13.40116024017334
    10. ',' → logprob: -13.40116024017334

Token 246: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06643975526094437
    2. '   ' → logprob: -3.0664398670196533
    3. ' def' → logprob: -4.066439628601074
    4. '
' → logprob: -8.816439628601074
    5. '    
' → logprob: -9.191439628601074
    6. '<|end|>' → logprob: -9.191439628601074
    7. ' ' → logprob: -9.316439628601074
    8. '	def' → logprob: -10.066439628601074
    9. '```' → logprob: -11.316439628601074
    10. '<|end|>' → logprob: -11.691439628601074

Token 248: ' compute' (ID: 23864)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.14768050611019135
    2. 'best' → logprob: -3.2726805210113525
    3. 'average' → logprob: -3.6476805210113525
    4. 'calculate' → logprob: -4.147680282592773
    5. 'def' → logprob: -4.522680282592773
    6. 'max' → logprob: -4.897680282592773
    7. 'sort' → logprob: -5.022680282592773
    8. 'highest' → logprob: -5.147680282592773
    9. 'sorted' → logprob: -5.147680282592773
    10. 'remove' → logprob: -5.647680282592773

Token 249: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -0.8089192509651184
    2. '_average' → logprob: -0.9339192509651184
    3. '_score' → logprob: -2.3089191913604736
    4. '_m' → logprob: -3.9339191913604736
    5. '_total' → logprob: -4.183919429779053
    6. '_' → logprob: -4.433919429779053
    7. '(self' → logprob: -5.183919429779053
    8. '_max' → logprob: -6.183919429779053
    9. '_rank' → logprob: -6.558919429779053
    10. '_mean' → logprob: -6.808919429779053

Token 250: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0023336668964475393
    2. '_' → logprob: -6.127333641052246
    3. 'score' → logprob: -8.877333641052246
    4. '_result' → logprob: -12.627333641052246
    5. '_value' → logprob: -12.877333641052246
    6. ' score' → logprob: -13.627333641052246
    7. 'Score' → logprob: -14.752333641052246
    8. '(self' → logprob: -15.252333641052246
    9. '_scores' → logprob: -15.252333641052246
    10. ' _' → logprob: -15.377333641052246

Token 251: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.334533878136426e-05
    2. '(' → logprob: -10.125042915344238
    3. 'self' → logprob: -13.500042915344238
    4. '   ' → logprob: -13.625042915344238
    5. '(
' → logprob: -15.125042915344238
    6. ' (' → logprob: -16.375043869018555
    7. '(s' → logprob: -16.500043869018555
    8. '(sel' → logprob: -17.000043869018555
    9. ' self' → logprob: -17.375043869018555
    10. '       ' → logprob: -17.625043869018555

Token 252: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.056613489985466
    2. '):
' → logprob: -2.9316134452819824
    3. ')' → logprob: -7.056613445281982
    4. 'self' → logprob: -7.431613445281982
    5. '(self' → logprob: -8.80661392211914
    6. ' ):' → logprob: -9.80661392211914
    7. ',' → logprob: -10.68161392211914
    8. '   ' → logprob: -11.18161392211914
    9. '       ' → logprob: -11.30661392211914
    10. '):
' → logprob: -11.43161392211914

Token 253: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018846115563064814
    2. '(' → logprob: -6.501884460449219
    3. '       ' → logprob: -8.751884460449219
    4. '   ' → logprob: -9.751884460449219
    5. 'self' → logprob: -9.751884460449219
    6. ':' → logprob: -9.751884460449219
    7. '(
' → logprob: -10.251884460449219
    8. ':
' → logprob: -12.501884460449219
    9. '(s' → logprob: -12.501884460449219
    10. ' (' → logprob: -13.376884460449219

Token 254: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6552217602729797
    2. ' float' → logprob: -1.280221700668335
    3. 'int' → logprob: -2.155221700668335
    4. ' int' → logprob: -2.780221700668335
    5. 'Score' → logprob: -4.280221939086914
    6. ' Score' → logprob: -4.655221939086914
    7. 'Optional' → logprob: -7.405221939086914
    8. '   ' → logprob: -8.280221939086914
    9. ' Optional' → logprob: -8.280221939086914
    10. ' ' → logprob: -9.030221939086914

Token 255: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03612383082509041
    2. ':' → logprob: -4.161123752593994
    3. '       ' → logprob: -4.411123752593994
    4. '(' → logprob: -5.411123752593994
    5. ':
' → logprob: -6.036123752593994
    6. '(
' → logprob: -7.411123752593994
    7. '   ' → logprob: -8.786124229431152
    8. 'self' → logprob: -9.661124229431152
    9. '):
' → logprob: -11.036124229431152
    10. '():
' → logprob: -11.286124229431152

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007722244481556118
    2. ' if' → logprob: -7.500771999359131
    3. '        
' → logprob: -8.750772476196289
    4. ' sorted' → logprob: -11.500772476196289
    5. ' self' → logprob: -11.750772476196289
    6. 'if' → logprob: -12.250772476196289
    7. '```' → logprob: -12.375772476196289
    8. 'n' → logprob: -12.500772476196289
    9. '       
' → logprob: -12.500772476196289
    10. '    
' → logprob: -12.625772476196289

Token 257: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03700856864452362
    2. 'if' → logprob: -3.66200852394104
    3. '       ' → logprob: -4.787008762359619
    4. 'sorted' → logprob: -6.287008762359619
    5. ' self' → logprob: -8.412008285522461
    6. '#' → logprob: -9.162008285522461
    7. ' if' → logprob: -9.912008285522461
    8. 'scores' → logprob: -10.162008285522461
    9. 'n' → logprob: -10.662008285522461
    10. 'values' → logprob: -12.537008285522461

Token 258: '.validate' (ID: 31577)
  Prédit: '.validate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.validate' → logprob: -0.12693378329277039
    2. '.' → logprob: -2.1269338130950928
    3. ' .' → logprob: -13.501934051513672
    4. 'validate' → logprob: -13.876934051513672
    5. '.valid' → logprob: -13.876934051513672
    6. '.ensure' → logprob: -13.876934051513672
    7. '.val' → logprob: -15.501934051513672
    8. '.perform' → logprob: -15.751934051513672
    9. '.validation' → logprob: -15.751934051513672
    10. '.s' → logprob: -15.876934051513672

Token 259: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.038075003772974014
    2. '()' → logprob: -3.2880749702453613
    3. '()

' → logprob: -10.66307544708252
    4. '()
' → logprob: -11.53807544708252
    5. '       ' → logprob: -15.16307544708252
    6. '()\' → logprob: -16.538074493408203
    7. ')
' → logprob: -17.163074493408203
    8. '(
' → logprob: -17.413074493408203
    9. '
' → logprob: -17.538074493408203
    10. ')' → logprob: -17.663074493408203

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02753257006406784
    2. ' sorted' → logprob: -3.6525325775146484
    3. 'sorted' → logprob: -7.027532577514648
    4. ' if' → logprob: -8.527532577514648
    5. '        
' → logprob: -10.152532577514648
    6. ' scores' → logprob: -10.277532577514648
    7. 'scores' → logprob: -10.902532577514648
    8. '_sorted' → logprob: -11.277532577514648
    9. '   ' → logprob: -11.402532577514648
    10. 's' → logprob: -11.902532577514648

Token 261: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' (adapté à ' sorted') → logprob: -0.013372917659580708
    2. 'scores' → logprob: -4.513372898101807
    3. 'values' → logprob: -6.513372898101807
    4. 'if' → logprob: -7.888372898101807
    5. '       ' → logprob: -8.263373374938965
    6. '   ' → logprob: -9.763373374938965
    7. ' sorted' → logprob: -9.763373374938965
    8. 'vals' → logprob: -10.513373374938965
    9. 'self' → logprob: -10.638373374938965
    10. 'score' → logprob: -11.263373374938965

Token 262: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.000309840717818588
    2. '(self' → logprob: -8.375309944152832
    3. '_' → logprob: -10.750309944152832
    4. '()' → logprob: -10.750309944152832
    5. 'scores' → logprob: -11.125309944152832
    6. 's' → logprob: -11.625309944152832
    7. '(' → logprob: -12.000309944152832
    8. 'Scores' → logprob: -13.750309944152832
    9. '   ' → logprob: -14.000309944152832
    10. '_s' → logprob: -14.250309944152832

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410833835601807
    2. ' =' → logprob: -0.9741083383560181
    3. '()' → logprob: -10.599108695983887
    4. '   ' → logprob: -13.224108695983887
    5. 's' → logprob: -13.599108695983887
    6. '=self' → logprob: -13.849108695983887
    7. ' ' → logprob: -14.224108695983887
    8. '       ' → logprob: -14.974108695983887
    9. '().' → logprob: -15.474108695983887
    10. '.' → logprob: -15.599108695983887

Token 264: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.011050650849938393
    2. ' sorted' → logprob: -4.511050701141357
    3. '   ' → logprob: -12.8860502243042
    4. ' ' → logprob: -15.6360502243042
    5. '(sorted' → logprob: -16.386051177978516
    6. 'sort' → logprob: -17.761051177978516
    7. '.sorted' → logprob: -17.761051177978516
    8. '  ' → logprob: -17.886051177978516
    9. '    ' → logprob: -19.261051177978516
    10. 's' → logprob: -19.386051177978516

Token 265: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005548207554966211
    2. '(' → logprob: -7.500555038452148
    3. '(
' → logprob: -14.125555038452148
    4. 'self' → logprob: -14.250555038452148
    5. ' (' → logprob: -14.875555038452148
    6. '((' → logprob: -16.37555503845215
    7. '(s' → logprob: -18.37555503845215
    8. ' self' → logprob: -18.62555503845215
    9. '(

' → logprob: -18.62555503845215
    10. '([' → logprob: -18.75055503845215

Token 266: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.00030388421146199107
    2. '.' → logprob: -8.125304222106934
    3. ' .' → logprob: -11.875304222106934
    4. ').' → logprob: -14.500304222106934
    5. '.score' → logprob: -15.875304222106934
    6. 'scores' → logprob: -16.000303268432617
    7. 's' → logprob: -16.375303268432617
    8. '.
' → logprob: -17.500303268432617
    9. '.user' → logprob: -17.750303268432617
    10. '().' → logprob: -18.500303268432617

Token 267: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.0014955764636397362
    2. 'scores' → logprob: -6.626495361328125
    3. '.s' → logprob: -8.876495361328125
    4. 'core' → logprob: -11.376495361328125
    5. '_scores' → logprob: -12.626495361328125
    6. '(scores' → logprob: -12.876495361328125
    7. 's' → logprob: -13.001495361328125
    8. '.c' → logprob: -13.251495361328125
    9. 'c' → logprob: -13.376495361328125
    10. '```' → logprob: -13.501495361328125

Token 268: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007162758149206638
    2. '[' → logprob: -5.507162570953369
    3. ')[' → logprob: -5.882162570953369
    4. ' )' → logprob: -8.382163047790527
    5. ',' → logprob: -10.507163047790527
    6. ')
' → logprob: -10.507163047790527
    7. ' )[' → logprob: -12.757163047790527
    8. ' ' → logprob: -14.007163047790527
    9. ' ,' → logprob: -14.507163047790527
    10. ')

' → logprob: -14.757163047790527

Token 269: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.07910976558923721
    2. 'key' → logprob: -2.5791096687316895
    3. 'reverse' → logprob: -8.954110145568848
    4. ' reverse' → logprob: -9.954110145568848
    5. '       ' → logprob: -11.329110145568848
    6. ')' → logprob: -11.329110145568848
    7. '(key' → logprob: -12.079110145568848
    8. '[key' → logprob: -12.204110145568848
    9. ',key' → logprob: -13.204110145568848
    10. ')
' → logprob: -13.329110145568848

Token 270: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0024756586644798517
    2. '=' → logprob: -6.002475738525391
    3. '=len' → logprob: -16.87747573852539
    4. '=
' → logprob: -18.12747573852539
    5. '=_' → logprob: -18.62747573852539
    6. '=l' → logprob: -19.75247573852539
    7. ' =' → logprob: -19.75247573852539
    8. 'lambda' → logprob: -19.87747573852539
    9. '=

' → logprob: -19.87747573852539
    10. '=.' → logprob: -19.87747573852539

Token 271: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.388067364692688
    2. ' s' → logprob: -1.888067364692688
    3. 'score' → logprob: -1.888067364692688
    4. ' score' → logprob: -4.638067245483398
    5. 'x' → logprob: -4.888067245483398
    6. ' x' → logprob: -6.388067245483398
    7. ':' → logprob: -12.388067245483398
    8. '_score' → logprob: -12.638067245483398
    9. 'Score' → logprob: -13.638067245483398
    10. 'sc' → logprob: -14.638067245483398

Token 272: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006787605118006468
    2. 's' → logprob: -5.0067877769470215
    3. ':s' → logprob: -9.881787300109863
    4. ' :' → logprob: -11.006787300109863
    5. ' s' → logprob: -12.381787300109863
    6. ':
' → logprob: -15.506787300109863
    7. ':ss' → logprob: -16.38178825378418
    8. '_:' → logprob: -17.25678825378418
    9. 'a' → logprob: -18.00678825378418
    10. '_s' → logprob: -18.13178825378418

Token 273: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931471824645996
    2. ' s' → logprob: -0.6931471824645996
    3. '_s' → logprob: -17.568147659301758
    4. 'score' → logprob: -17.818147659301758
    5. '	s' → logprob: -17.943147659301758
    6. ')' → logprob: -17.943147659301758
    7. ' ' → logprob: -17.943147659301758
    8. '.s' → logprob: -18.693147659301758
    9. ')s' → logprob: -18.943147659301758
    10. ':' → logprob: -19.068147659301758

Token 274: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00026872646412812173
    2. '.' → logprob: -8.250268936157227
    3. '.val' → logprob: -12.625268936157227
    4. '.score' → logprob: -12.750268936157227
    5. '.s' → logprob: -14.250268936157227
    6. ' .' → logprob: -15.625268936157227
    7. '.values' → logprob: -15.750268936157227
    8. ').' → logprob: -17.000268936157227
    9. '.attribute' → logprob: -17.375268936157227
    10. '.user' → logprob: -17.625268936157227

Token 275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009599390905350447
    2. ')
' → logprob: -7.875959873199463
    3. ' )' → logprob: -8.125960350036621
    4. ')[' → logprob: -8.625960350036621
    5. '[' → logprob: -9.250960350036621
    6. ',' → logprob: -12.250960350036621
    7. ' )
' → logprob: -14.000960350036621
    8. ')

' → logprob: -14.000960350036621
    9. ')
' → logprob: -14.125960350036621
    10. ' )[' → logprob: -15.250960350036621

Token 276: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6018790602684021
    2. '       ' → logprob: -0.8518790602684021
    3. '        
' → logprob: -4.351879119873047
    4. ' if' → logprob: -5.101879119873047
    5. '[' → logprob: -6.976879119873047
    6. '#' → logprob: -7.226879119873047
    7. 'if' → logprob: -7.226879119873047
    8. ',' → logprob: -7.351879119873047
    9. ',
' → logprob: -7.476879119873047
    10. ' 
' → logprob: -7.601879119873047

Token 277: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.6972949504852295
    2. 'trim' → logprob: -1.6972949504852295
    3. 'return' → logprob: -2.1972949504852295
    4. ' if' → logprob: -2.3222949504852295
    5. 'final' → logprob: -2.3222949504852295
    6. '#' (adapté à ' #') → logprob: -2.4472949504852295
    7. 'valid' → logprob: -3.0722949504852295
    8. '       ' → logprob: -3.1972949504852295
    9. 'total' → logprob: -3.3222949504852295
    10. ' trimmed' → logprob: -3.3222949504852295

Token 278: ' Remove' (ID: 18141)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trim' → logprob: -1.3848681449890137
    2. ' trimmed' → logprob: -1.7598681449890137
    3. '#' → logprob: -2.0098681449890137
    4. 'lowest' → logprob: -2.3848681449890137
    5. 'final' → logprob: -2.8848681449890137
    6. 'if' → logprob: -3.1348681449890137
    7. ' if' → logprob: -3.2598681449890137
    8. 'return' → logprob: -3.5098681449890137
    9. 'valid' → logprob: -3.8848681449890137
    10. 'filtered' → logprob: -4.134868144989014

Token 279: ' exactly' (ID: 9707)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.45571669936180115
    2. ' sorted' → logprob: -1.7057167291641235
    3. ' the' → logprob: -2.455716609954834
    4. 'the' → logprob: -3.330716609954834
    5. ' one' → logprob: -3.455716609954834
    6. ' two' → logprob: -4.080716609954834
    7. 'one' → logprob: -5.455716609954834
    8. 'two' → logprob: -5.705716609954834
    9. '1' → logprob: -5.830716609954834
    10. ' ' → logprob: -5.955716609954834

Token 280: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.5103188753128052
    2. ' two' → logprob: -1.7603188753128052
    3. 'one' → logprob: -2.1353187561035156
    4. 'two' → logprob: -2.7603187561035156
    5. ' the' → logprob: -3.3853187561035156
    6. 'the' → logprob: -4.885318756103516
    7. ' ' → logprob: -6.260318756103516
    8. '1' → logprob: -6.510318756103516
    9. '2' → logprob: -6.635318756103516
    10. 'first' → logprob: -11.385318756103516

Token 281: ' minimum' (ID: 11085)
  Prédit: ' lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lowest' → logprob: -0.26471996307373047
    2. 'lowest' → logprob: -1.8897199630737305
    3. 'sorted' → logprob: -3.3897199630737305
    4. ' sorted' → logprob: -3.5147199630737305
    5. '(sorted' → logprob: -4.8897199630737305
    6. ' highest' → logprob: -5.2647199630737305
    7. 'highest' → logprob: -6.1397199630737305
    8. 'min' → logprob: -7.3897199630737305
    9. 'max' → logprob: -7.7647199630737305
    10. '<|end|>' → logprob: -7.8897199630737305

Token 282: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.9591535329818726
    2. ' and' → logprob: -1.2091535329818726
    3. ',' → logprob: -1.3341535329818726
    4. '_score' → logprob: -3.584153652191162
    5. 'score' → logprob: -4.084153652191162
    6. ')' → logprob: -5.709153652191162
    7. '_' → logprob: -6.459153652191162
    8. 's' → logprob: -6.584153652191162
    9. ' ,' → logprob: -6.834153652191162
    10. '()' → logprob: -7.709153652191162

Token 283: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.62459397315979
    2. ' one' → logprob: -0.87459397315979
    3. ' exactly' → logprob: -3.24959397315979
    4. 'exact' → logprob: -4.749593734741211
    5. '
' → logprob: -11.624593734741211
    6. ' ' → logprob: -12.124593734741211
    7. '```' → logprob: -12.624593734741211
    8. '1' → logprob: -12.624593734741211
    9. '         ' → logprob: -13.062093734741211
    10. '   ' → logprob: -13.187093734741211

Token 284: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.4325936436653137
    2. 'maximum' → logprob: -1.057593584060669
    3. 'max' → logprob: -5.682593822479248
    4. ' max' → logprob: -8.55759334564209
    5. '.maximum' → logprob: -9.80759334564209
    6. 'score' → logprob: -9.93259334564209
    7. ' ' → logprob: -10.05759334564209
    8. '   ' → logprob: -10.68259334564209
    9. ' maksimum' → logprob: -10.80759334564209
    10. 'maxlength' → logprob: -11.30759334564209

Token 285: ' score' (ID: 8429)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2605796754360199
    2. 'score' → logprob: -2.2605795860290527
    3. ' score' → logprob: -3.0105795860290527
    4. ' if' → logprob: -3.8855795860290527
    5. '
' → logprob: -4.135579586029053
    6. '_score' → logprob: -4.885579586029053
    7. ' value' → logprob: -5.010579586029053
    8. 'value' → logprob: -5.385579586029053
    9. '        
' → logprob: -5.635579586029053
    10. ',' → logprob: -5.760579586029053

Token 286: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1383843868970871
    2. '
' → logprob: -2.1383843421936035
    3. '        
' → logprob: -5.1383843421936035
    4. ',' → logprob: -6.1383843421936035
    5. ' if' → logprob: -6.8883843421936035
    6. 's' → logprob: -7.7633843421936035
    7. '.' → logprob: -8.513384819030762
    8. 'score' → logprob: -8.638384819030762
    9. '
' → logprob: -8.763384819030762
    10. 'if' → logprob: -8.888384819030762

Token 287: ' even' (ID: 1952)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2591966986656189
    2. ' then' → logprob: -1.8841967582702637
    3. ' and' → logprob: -2.8841967582702637
    4. 'and' → logprob: -5.009196758270264
    5. '<|end|>' → logprob: -5.384196758270264
    6. '        ' → logprob: -6.509196758270264
    7. 'then' → logprob: -6.509196758270264
    8. '
' → logprob: -7.009196758270264
    9. ' but' → logprob: -7.134196758270264
    10. '        
' → logprob: -7.134196758270264

Token 288: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25232958793640137
    2. ' if' → logprob: -1.5023295879364014
    3. 'when' → logprob: -8.37732982635498
    4. ' when' → logprob: -9.25232982635498
    5. ' in' → logprob: -10.75232982635498
    6. 'in' → logprob: -11.00232982635498
    7. '<|end|>' → logprob: -11.25232982635498
    8. '  ' → logprob: -11.37732982635498
    9. ' ' → logprob: -12.50232982635498
    10. '#' → logprob: -13.00232982635498

Token 289: ' duplicates' (ID: 91135)
  Prédit: 'there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'there' → logprob: -1.057315468788147
    2. 'they' → logprob: -1.307315468788147
    3. 'sorted' → logprob: -2.0573153495788574
    4. ' there' → logprob: -2.1823153495788574
    5. ' they' → logprob: -2.9323153495788574
    6. 'multiple' → logprob: -3.3073153495788574
    7. 'the' → logprob: -3.3073153495788574
    8. ' multiple' → logprob: -4.932315349578857
    9. ' the' → logprob: -6.307315349578857
    10. 'duplicates' → logprob: -6.432315349578857

Token 290: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010529992170631886
    2. ',' → logprob: -5.6355299949646
    3. '
' → logprob: -6.1355299949646
    4. ' if' → logprob: -6.2605299949646
    5. '        
' → logprob: -7.3855299949646
    6. 's' → logprob: -7.5105299949646
    7. '[' → logprob: -7.8855299949646
    8. '.' → logprob: -7.8855299949646
    9. '<|end|>' → logprob: -8.760529518127441
    10. '   ' → logprob: -9.510529518127441

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13684001564979553
    2. '
' → logprob: -2.3868401050567627
    3. 'min' → logprob: -4.386839866638184
    4. '        
' → logprob: -5.011839866638184
    5. ' min' → logprob: -5.511839866638184
    6. ' if' → logprob: -6.136839866638184
    7. 'minimum' → logprob: -6.386839866638184
    8. ' 
' → logprob: -6.761839866638184
    9. '```' → logprob: -7.261839866638184
    10. 'if' → logprob: -7.261839866638184

Token 292: ' trimmed' (ID: 90927)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3254159986972809
    2. '       ' → logprob: -2.575416088104248
    3. 'filtered' → logprob: -2.825416088104248
    4. ' min' → logprob: -3.325416088104248
    5. 'sorted' → logprob: -3.575416088104248
    6. 'final' → logprob: -3.825416088104248
    7. 'if' → logprob: -4.575416088104248
    8. 'middle' → logprob: -5.075416088104248
    9. 'minimum' → logprob: -5.200416088104248
    10. 'trim' → logprob: -5.325416088104248

Token 293: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.0007725820760242641
    2. '_' → logprob: -7.250772476196289
    3. ' =' → logprob: -9.875772476196289
    4. '_sorted' → logprob: -11.875772476196289
    5. '=' → logprob: -12.875772476196289
    6. '_score' → logprob: -14.750772476196289
    7. 'scores' → logprob: -15.000772476196289
    8. 's' → logprob: -15.500772476196289
    9. '_sc' → logprob: -15.750772476196289
    10. '=_' → logprob: -16.12577247619629

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002127155661583
    2. '=' → logprob: -2.350212812423706
    3. '[' → logprob: -12.350213050842285
    4. ' =
' → logprob: -14.350213050842285
    5. ' ' → logprob: -14.850213050842285
    6. ':' → logprob: -15.725213050842285
    7. '.' → logprob: -15.975213050842285
    8. ' =[' → logprob: -16.10021209716797
    9. 's' → logprob: -16.85021209716797
    10. '=

' → logprob: -17.10021209716797

Token 295: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.20141635835170746
    2. 'sorted' → logprob: -1.7014163732528687
    3. '(sorted' → logprob: -13.326416015625
    4. '.sorted' → logprob: -14.951416015625
    5. '[' → logprob: -15.326416015625
    6. ' [' → logprob: -15.701416015625
    7. 'Sorted' → logprob: -15.826416015625
    8. ' ' → logprob: -15.826416015625
    9. '   ' → logprob: -15.951416015625
    10. '_sorted' → logprob: -16.201416015625

Token 296: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.5048530030981055e-06
    2. 'scores' → logprob: -13.875001907348633
    3. '(scores' → logprob: -15.875001907348633
    4. '(sorted' → logprob: -16.125001907348633
    5. '_sorted' → logprob: -16.250001907348633
    6. '_' → logprob: -16.750001907348633
    7. 's' → logprob: -17.250001907348633
    8. 'Scores' → logprob: -17.375001907348633
    9. '(' → logprob: -18.125001907348633
    10. '_prices' → logprob: -18.250001907348633

Token 297: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '1' → logprob: -13.37500286102295
    3. ' [' → logprob: -13.75000286102295
    4. '[len' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '[
' → logprob: -17.000003814697266
    7. '\[' → logprob: -17.125003814697266
    8. '```' → logprob: -18.250003814697266
    9. ' ' → logprob: -18.375003814697266
    10. '
' → logprob: -18.500003814697266

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. '
' → logprob: -11.750020027160645
    3. ' ' → logprob: -12.125020027160645
    4. '   ' → logprob: -12.500020027160645
    5. ':' → logprob: -14.125020027160645
    6. '       ' → logprob: -14.250020027160645
    7. '```' → logprob: -14.750020027160645
    8. '    ' → logprob: -15.375020027160645
    9. '     ' → logprob: -15.875020027160645
    10. '  ' → logprob: -16.125019073486328

Token 299: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.00019865304057020694
    2. ':' → logprob: -8.750198364257812
    3. '-' → logprob: -10.500198364257812
    4. ' :' → logprob: -11.500198364257812
    5. ' :-' → logprob: -13.250198364257812
    6. ' -' → logprob: -14.750198364257812
    7. ':
' → logprob: -16.125198364257812
    8. ':]' → logprob: -16.625198364257812
    9. ':end' → logprob: -16.625198364257812
    10. '
' → logprob: -17.000198364257812

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.500000953674316
    3. '```' → logprob: -16.375
    4. '

' → logprob: -16.75
    5. '１' → logprob: -16.875
    6. '2' → logprob: -17.4375
    7. ' ' → logprob: -17.6875
    8. '۱' → logprob: -17.8125
    9. '   ' → logprob: -18.0625
    10. '१' → logprob: -18.5625

Token 301: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007420878973789513
    2. ']
' → logprob: -7.250741958618164
    3. ')' → logprob: -10.625741958618164
    4. ' ]' → logprob: -12.250741958618164
    5. ']

' → logprob: -13.875741958618164
    6. '       ' → logprob: -14.250741958618164
    7. ']
' → logprob: -14.375741958618164
    8. '<|end|>' → logprob: -14.750741958618164
    9. '])' → logprob: -15.500741958618164
    10. '   ' → logprob: -16.625741958618164

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19060583412647247
    2. '
' → logprob: -1.815605878829956
    3. 'return' → logprob: -5.940605640411377
    4. 'total' → logprob: -6.065605640411377
    5. '        
' → logprob: -6.315605640411377
    6. 'sum' → logprob: -7.065605640411377
    7. 'result' → logprob: -7.190605640411377
    8. ' total' → logprob: -7.565605640411377
    9. ' return' → logprob: -8.315606117248535
    10. ' sum' → logprob: -8.690606117248535

Token 303: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.11356917023658752
    2. 'return' → logprob: -2.9885692596435547
    3. 'sum' → logprob: -3.9885692596435547
    4. '       ' → logprob: -4.113569259643555
    5. ' total' → logprob: -4.488569259643555
    6. 'if' (adapté à ' if') → logprob: -4.738569259643555
    7. ' if' → logprob: -6.613569259643555
    8. ' return' → logprob: -7.738569259643555
    9. 'result' → logprob: -8.363569259643555
    10. ' sum' → logprob: -9.863569259643555

Token 304: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.022875383496284485
    2. 'not' → logprob: -4.0228753089904785
    3. ' len' → logprob: -5.3978753089904785
    4. 'len' → logprob: -8.647875785827637
    5. '   ' → logprob: -12.272875785827637
    6. ' no' → logprob: -13.397875785827637
    7. '	not' → logprob: -13.522875785827637
    8. 'n' → logprob: -14.210375785827637
    9. 'n't' → logprob: -14.210375785827637
    10. ' ' → logprob: -14.272875785827637

Token 305: ' trimmed' (ID: 90927)
  Prédit: ' trimmed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trimmed' → logprob: -0.048593729734420776
    2. 'trim' → logprob: -3.048593759536743
    3. '(trim' → logprob: -12.923593521118164
    4. ' trim' → logprob: -13.048593521118164
    5. '_trim' → logprob: -13.548593521118164
    6. 'Trim' → logprob: -15.673593521118164
    7. 'len' → logprob: -16.423593521118164
    8. '.trim' → logprob: -16.798593521118164
    9. 't' → logprob: -17.423593521118164
    10. 'tr' → logprob: -17.798593521118164

Token 306: '_scores' (ID: 63345)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.011495867744088173
    2. '_scores' → logprob: -4.511496067047119
    3. 'med' → logprob: -8.136495590209961
    4. 'ined' → logprob: -8.886495590209961
    5. 'ored' → logprob: -12.761495590209961
    6. 'ted' → logprob: -12.886495590209961
    7. 'scores' → logprob: -13.011495590209961
    8. 'ated' → logprob: -13.511495590209961
    9. '   ' → logprob: -13.761495590209961
    10. 'eed' → logprob: -14.011495590209961

Token 307: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0076367976143956184
    2. ':
' → logprob: -4.882637023925781
    3. ':return' → logprob: -10.507637023925781
    4. ':
' → logprob: -14.132637023925781
    5. '):' → logprob: -14.382637023925781
    6. ' :' → logprob: -14.382637023925781
    7. ' or' → logprob: -14.882637023925781
    8. '   ' → logprob: -15.382637023925781
    9. ')' → logprob: -15.632637023925781
    10. 's' → logprob: -15.882637023925781

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0051644970662891865
    2. '0' → logprob: -6.880164623260498
    3. 'return' → logprob: -6.880164623260498
    4. 'raise' → logprob: -7.005164623260498
    5. ':
' → logprob: -7.005164623260498
    6. ' raise' → logprob: -7.630164623260498
    7. ' return' → logprob: -7.630164623260498
    8. ':' → logprob: -9.25516414642334
    9. '
' → logprob: -9.88016414642334
    10. ',' → logprob: -9.88016414642334

Token 309: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7047998309135437
    2. 'raise' → logprob: -1.2047998905181885
    3. '           ' → logprob: -2.0797998905181885
    4. ' raise' → logprob: -2.9547998905181885
    5. ' return' → logprob: -3.5797998905181885
    6. '0' → logprob: -7.079799652099609
    7. '       ' → logprob: -8.95479965209961
    8. '	raise' → logprob: -10.07979965209961
    9. '
' → logprob: -10.20479965209961
    10. '   ' → logprob: -10.95479965209961

Token 310: ' If' (ID: 1843)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.14018116891384125
    2. 'return' → logprob: -2.265181064605713
    3. ' raise' → logprob: -3.890181064605713
    4. '#' → logprob: -5.640181064605713
    5. ' return' → logprob: -6.390181064605713
    6. '           ' → logprob: -7.515181064605713
    7. 'Raise' → logprob: -7.640181064605713
    8. '       ' → logprob: -8.515181541442871
    9. ' #' → logprob: -10.140181541442871
    10. 'Return' → logprob: -11.140181541442871

Token 311: ' after' (ID: 1934)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3054634630680084
    2. ' len' → logprob: -1.430463433265686
    3. ' n' → logprob: -4.5554633140563965
    4. 'n' → logprob: -4.6804633140563965
    5. ' all' → logprob: -6.3054633140563965
    6. ' there' → logprob: -6.9304633140563965
    7. ' the' → logprob: -7.8054633140563965
    8. 'all' → logprob: -7.8054633140563965
    9. '(len' → logprob: -9.180463790893555
    10. 'there' → logprob: -9.180463790893555

Token 312: ' trimming' (ID: 123447)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.05078951641917229
    2. ' trimming' → logprob: -3.1757895946502686
    3. 'rem' → logprob: -5.0507893562316895
    4. ' removing' → logprob: -7.1757893562316895
    5. 'trim' → logprob: -7.6757893562316895
    6. ' tr' → logprob: -9.300789833068848
    7. '   ' → logprob: -11.800789833068848
    8. 'len' → logprob: -11.925789833068848
    9. 'excluding' → logprob: -12.550789833068848
    10. ' slicing' → logprob: -12.675789833068848

Token 313: ' there's' (ID: 15333)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9600948691368103
    2. ' return' → logprob: -1.085094928741455
    3. ',' → logprob: -2.210094928741455
    4. ' raise' → logprob: -2.710094928741455
    5. ' the' → logprob: -3.085094928741455
    6. 'return' → logprob: -3.585094928741455
    7. 'all' → logprob: -4.460094928741455
    8. 'raise' → logprob: -4.835094928741455
    9. ' scores' → logprob: -5.835094928741455
    10. ' there' → logprob: -6.335094928741455

Token 314: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.9161698222160339
    2. 'no' → logprob: -0.9161698222160339
    3. 'only' → logprob: -2.0411698818206787
    4. ' only' → logprob: -2.6661698818206787
    5. ' nothing' → logprob: -8.416170120239258
    6. '   ' → logprob: -9.791170120239258
    7. 'nothing' → logprob: -9.791170120239258
    8. ' ' → logprob: -9.916170120239258
    9. 'not' → logprob: -10.291170120239258
    10. '1' → logprob: -10.666170120239258

Token 315: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.5492249727249146
    2. ' scores' → logprob: -1.6742249727249146
    3. 'score' → logprob: -2.049224853515625
    4. 'scores' → logprob: -2.424224853515625
    5. ' valid' → logprob: -4.174224853515625
    6. 'valid' → logprob: -7.424224853515625
    7. ' element' → logprob: -8.049224853515625
    8. ' elements' → logprob: -8.299224853515625
    9. '_scores' → logprob: -8.299224853515625
    10. '_score' → logprob: -8.424224853515625

Token 316: ' left' (ID: 3561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6114583015441895
    2. ' to' → logprob: -1.2364583015441895
    3. ' left' → logprob: -2.4864583015441895
    4. 's' → logprob: -3.1114583015441895
    5. '       ' → logprob: -4.1114583015441895
    6. 'left' → logprob: -4.6114583015441895
    7. '           ' → logprob: -5.1114583015441895
    8. 'to' → logprob: -5.8614583015441895
    9. 'return' → logprob: -6.9864583015441895
    10. ' return' → logprob: -7.1114583015441895

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04563438892364502
    2. '           ' → logprob: -3.5456342697143555
    3. ':' → logprob: -4.2956342697143555
    4. ':
' → logprob: -6.5456342697143555
    5. '       ' → logprob: -8.420634269714355
    6. ' return' → logprob: -9.170634269714355
    7. ' ,' → logprob: -9.295634269714355
    8. ':return' → logprob: -9.295634269714355
    9. ',
' → logprob: -10.045634269714355
    10. 'return' → logprob: -10.545634269714355

Token 318: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0838487148284912
    2. 'raise' → logprob: -1.3338487148284912
    3. '           ' → logprob: -1.8338487148284912
    4. ' raise' → logprob: -1.9588487148284912
    5. ' return' → logprob: -2.333848714828491
    6. '       ' → logprob: -8.83384895324707
    7. '	raise' → logprob: -9.33384895324707
    8. '0' → logprob: -9.70884895324707
    9. '#' → logprob: -10.20884895324707
    10. '_raise' → logprob: -10.33384895324707

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003724006237462163
    2. ' ' → logprob: -8.250371932983398
    3. 'trim' → logprob: -9.500371932983398
    4. '       ' → logprob: -11.375371932983398
    5. 'sum' → logprob: -11.625371932983398
    6. 'sorted' → logprob: -12.375371932983398
    7. '           ' → logprob: -12.875371932983398
    8. 'min' → logprob: -13.375371932983398
    9. 'self' → logprob: -13.625371932983398
    10. ' trimmed' → logprob: -13.625371932983398

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00042268994729965925
    2. ' ' → logprob: -8.375422477722168
    3. 'trim' → logprob: -9.750422477722168
    4. 'self' → logprob: -9.875422477722168
    5. 'sorted' → logprob: -10.000422477722168
    6. 'sum' → logprob: -11.000422477722168
    7. '   ' → logprob: -12.000422477722168
    8. '       ' → logprob: -12.125422477722168
    9. 'min' → logprob: -12.750422477722168
    10. '  ' → logprob: -14.375422477722168

Token 321: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6389878988265991
    2. '       ' → logprob: -0.7639878988265991
    3. '0' → logprob: -5.888988018035889
    4. '           ' → logprob: -7.138988018035889
    5. 'return' → logprob: -7.138988018035889
    6. '        
' → logprob: -7.138988018035889
    7. '
' → logprob: -7.763988018035889
    8. '\n' → logprob: -8.26398754119873
    9. '    
' → logprob: -9.01398754119873
    10. ',' → logprob: -9.76398754119873

Token 322: ' safe' (ID: 7703)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6068713665008545
    2. ' the' → logprob: -1.7318713665008545
    3. 'the' → logprob: -2.4818713665008545
    4. 'default' → logprob: -2.7318713665008545
    5. 'final' → logprob: -3.2318713665008545
    6. ' a' → logprob: -3.4818713665008545
    7. 'a' → logprob: -3.8568713665008545
    8. ' final' → logprob: -4.356871604919434
    9. ' default' → logprob: -4.731871604919434
    10. 'fallback' → logprob: -5.356871604919434

Token 323: ' fallback' (ID: 66264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.6595441102981567
    2. 'value' → logprob: -1.7845441102981567
    3. ' fallback' → logprob: -2.034543991088867
    4. ' return' → logprob: -2.284543991088867
    5. 'score' → logprob: -2.534543991088867
    6. ' value' → logprob: -2.909543991088867
    7. 'final' → logprob: -3.034543991088867
    8. 'fallback' → logprob: -3.284543991088867
    9. ' score' → logprob: -3.784543991088867
    10. 'default' → logprob: -3.784543991088867

Token 324: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.259098619222641
    2. '
' → logprob: -1.5090986490249634
    3. '           ' → logprob: -5.759098529815674
    4. '0' → logprob: -6.259098529815674
    5. 'return' → logprob: -7.259098529815674
    6. '        
' → logprob: -7.384098529815674
    7. '\n' → logprob: -8.384099006652832
    8. ',' → logprob: -9.384099006652832
    9. ' return' → logprob: -9.384099006652832
    10. '    
' → logprob: -9.884099006652832

Token 325: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.149448961019516
    2. '           ' → logprob: -2.024448871612549
    3. '0' → logprob: -5.524448871612549
    4. 'return' → logprob: -6.899448871612549
    5. '        
' → logprob: -7.149448871612549
    6. '   ' → logprob: -8.399449348449707
    7. ' return' → logprob: -8.649449348449707
    8. '
' → logprob: -8.774449348449707
    9. '\n' → logprob: -9.024449348449707
    10. '               ' → logprob: -9.649449348449707

Token 326: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009263215586543083
    2. '0' → logprob: -5.009263038635254
    3. '           ' → logprob: -6.634263038635254
    4. ' return' → logprob: -6.759263038635254
    5. '       ' → logprob: -9.634263038635254
    6. '   ' → logprob: -13.384263038635254
    7. '	return' → logprob: -13.884263038635254
    8. '
' → logprob: -14.509263038635254
    9. '{return' → logprob: -14.884263038635254
    10. '```' → logprob: -15.009263038635254

Token 327: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. ' ' → logprob: -21.12504005432129
    4. '   ' → logprob: -21.25004005432129
    5. '           ' → logprob: -21.62504005432129
    6. '۰' → logprob: -21.87504005432129
    7. '       ' → logprob: -22.25004005432129
    8. '
' → logprob: -22.62504005432129
    9. '```' → logprob: -23.25004005432129
    10. '  ' → logprob: -23.37504005432129

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -20.125
    4. '   ' → logprob: -20.25
    5. '```' → logprob: -21.25
    6. '000' → logprob: -21.625
    7. '０' → logprob: -21.875
    8. '  ' → logprob: -22.0
    9. '٠' → logprob: -22.1875
    10. '০' → logprob: -22.4375

Token 329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03195115923881531
    2. '
' → logprob: -3.9069511890411377
    3. '        
' → logprob: -4.656950950622559
    4. '    
' → logprob: -7.656950950622559
    5. '<|end|>' → logprob: -7.656950950622559
    6. 'return' → logprob: -8.031950950622559
    7. '  
' → logprob: -8.906950950622559
    8. ' return' → logprob: -9.656950950622559
    9. ',' → logprob: -10.031950950622559
    10. '   ' → logprob: -10.531950950622559

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02070222608745098
    2. 'return' → logprob: -5.020702362060547
    3. '
' → logprob: -5.395702362060547
    4. ' return' → logprob: -5.520702362060547
    5. 'sum' → logprob: -6.520702362060547
    6. 'total' → logprob: -7.020702362060547
    7. ' sum' → logprob: -7.145702362060547
    8. '        
' → logprob: -7.270702362060547
    9. ' total' → logprob: -7.270702362060547
    10. 'result' → logprob: -8.145702362060547

Token 331: ' total' (ID: 3609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6910346150398254
    2. 'total' (adapté à ' total') → logprob: -1.0660345554351807
    3. '       ' → logprob: -2.1910345554351807
    4. 'sum' → logprob: -3.3160345554351807
    5. ' total' → logprob: -5.69103479385376
    6. ' return' → logprob: -6.06603479385376
    7. 'average' → logprob: -8.191034317016602
    8. 'result' → logprob: -8.316034317016602
    9. 'final' → logprob: -9.191034317016602
    10. ' sum' → logprob: -9.316034317016602

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015656910836696625
    2. '=' → logprob: -4.2656569480896
    3. '_score' → logprob: -6.8906569480896
    4. '_value' → logprob: -8.515656471252441
    5. '_' → logprob: -8.890656471252441
    6. '_sum' → logprob: -9.015656471252441
    7. '_scores' → logprob: -12.640656471252441
    8. '_points' → logprob: -12.890656471252441
    9. '   ' → logprob: -13.140656471252441
    10. '=sum' → logprob: -13.265656471252441

Token 333: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5839470624923706
    2. ' sum' → logprob: -0.8339470624923706
    3. '0' → logprob: -4.83394718170166
    4. ' ' → logprob: -11.20894718170166
    5. '       ' → logprob: -13.20894718170166
    6. '   ' → logprob: -13.58394718170166
    7. '	sum' → logprob: -13.58394718170166
    8. '(sum' → logprob: -13.83394718170166
    9. '=sum' → logprob: -14.70894718170166
    10. '    ' → logprob: -15.33394718170166

Token 334: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.04491230845451355
    2. '(score' → logprob: -3.294912338256836
    3. 's' → logprob: -5.294912338256836
    4. 'score' → logprob: -6.544912338256836
    5. '(' → logprob: -8.169912338256836
    6. '([' → logprob: -9.419912338256836
    7. '(t' → logprob: -12.044912338256836
    8. '[s' → logprob: -12.169912338256836
    9. '(sc' → logprob: -12.544912338256836
    10. '(
' → logprob: -13.044912338256836

Token 335: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0022477959282696247
    2. '.' → logprob: -6.1272478103637695
    3. ' .' → logprob: -10.12724781036377
    4. '.score' → logprob: -10.87724781036377
    5. '.s' → logprob: -13.37724781036377
    6. 'value' → logprob: -14.25224781036377
    7. '_.' → logprob: -14.62724781036377
    8. ' s' → logprob: -14.87724781036377
    9. '.Value' → logprob: -15.50224781036377
    10. 's' → logprob: -15.62724781036377

Token 336: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01190470065921545
    2. 'for' → logprob: -4.511904716491699
    3. ')' → logprob: -7.136904716491699
    4. ' ' → logprob: -10.2619047164917
    5. ' )' → logprob: -10.7619047164917
    6. '	for' → logprob: -13.2619047164917
    7. '        ' → logprob: -13.7619047164917
    8. '       ' → logprob: -14.6369047164917
    9. '   ' → logprob: -14.8869047164917
    10. '  ' → logprob: -15.0119047164917

Token 337: ' s' (ID: 265)
  Prédit: ' trimmed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trimmed' → logprob: -0.0039057573303580284
    2. 'trim' → logprob: -5.628905773162842
    3. ' s' → logprob: -8.253905296325684
    4. ' trim' → logprob: -10.878905296325684
    5. 's' → logprob: -11.503905296325684
    6. ' ' → logprob: -12.253905296325684
    7. ' t' → logprob: -12.378905296325684
    8. '_trim' → logprob: -13.003905296325684
    9. ' score' → logprob: -13.378905296325684
    10. '(trim' → logprob: -13.628905296325684

Token 338: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007827003486454487
    2. 'in' → logprob: -4.882826805114746
    3. ' ' → logprob: -9.132826805114746
    4. 's' → logprob: -9.632826805114746
    5. 'trim' → logprob: -11.757826805114746
    6. '_' → logprob: -11.882826805114746
    7. ')' → logprob: -12.007826805114746
    8. '<|end|>' → logprob: -12.507826805114746
    9. '.' → logprob: -12.757826805114746
    10. '_in' → logprob: -13.007826805114746

Token 339: ' trimmed' (ID: 90927)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.16027814149856567
    2. ' trimmed' → logprob: -1.910278081893921
    3. ' trim' → logprob: -10.2852783203125
    4. '(trim' → logprob: -11.5352783203125
    5. '_trim' → logprob: -12.6602783203125
    6. '.trim' → logprob: -13.0352783203125
    7. '   ' → logprob: -13.9102783203125
    8. ' ' → logprob: -14.0352783203125
    9. '
' → logprob: -14.1602783203125
    10. ')' → logprob: -14.7852783203125

Token 340: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.12747247517108917
    2. 'med' → logprob: -2.252472400665283
    3. 'ed' → logprob: -4.252472400665283
    4. 'ined' → logprob: -8.627472877502441
    5. 'scores' → logprob: -10.627472877502441
    6. 'd' → logprob: -10.752472877502441
    7. '_score' → logprob: -11.252472877502441
    8. 'ded' → logprob: -11.627472877502441
    9. 'ted' → logprob: -11.877472877502441
    10. 'uned' → logprob: -12.127472877502441

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01664712466299534
    2. ')
' → logprob: -4.1416473388671875
    3. ' )' → logprob: -7.7666473388671875
    4. '       ' → logprob: -9.016647338867188
    5. ' )
' → logprob: -9.891647338867188
    6. ')
' → logprob: -11.766647338867188
    7. ')/' → logprob: -12.891647338867188
    8. ')return' → logprob: -13.391647338867188
    9. ')

' → logprob: -13.641647338867188
    10. ' ' → logprob: -13.766647338867188

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7802741527557373
    2. '
' → logprob: -0.9052741527557373
    3. 'return' → logprob: -2.9052741527557373
    4. ' return' → logprob: -2.9052741527557373
    5. '        
' → logprob: -5.030274391174316
    6. ' ' → logprob: -5.155274391174316
    7. ' 
' → logprob: -5.280274391174316
    8. '        ' → logprob: -5.780274391174316
    9. '<|end|>' → logprob: -5.905274391174316
    10. '/' → logprob: -7.280274391174316

Token 343: ' avg' (ID: 31686)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25424155592918396
    2. ' return' → logprob: -1.6292415857315063
    3. '       ' → logprob: -4.254241466522217
    4. 'count' → logprob: -4.379241466522217
    5. 'result' → logprob: -7.504241466522217
    6. ' count' → logprob: -7.504241466522217
    7. 'average' → logprob: -8.004241943359375
    8. '
' → logprob: -9.629241943359375
    9. 'n' → logprob: -9.754241943359375
    10. ' average' → logprob: -10.504241943359375

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0727018415927887
    2. '=' → logprob: -2.697701930999756
    3. '_score' → logprob: -6.072701930999756
    4. '_val' → logprob: -8.697701454162598
    5. '_value' → logprob: -8.947701454162598
    6. '_' → logprob: -9.447701454162598
    7. '   ' → logprob: -10.197701454162598
    8. '  ' → logprob: -12.072701454162598
    9. '       ' → logprob: -12.072701454162598
    10. 'score' → logprob: -12.322701454162598

Token 345: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2312796711921692
    2. 'total' → logprob: -1.6062796115875244
    3. ' round' → logprob: -5.6062798500061035
    4. 'round' → logprob: -6.4812798500061035
    5. ' int' → logprob: -7.9812798500061035
    6. 'int' → logprob: -8.981279373168945
    7. '(total' → logprob: -9.481279373168945
    8. ' ' → logprob: -10.106279373168945
    9. '   ' → logprob: -10.481279373168945
    10. ' len' → logprob: -12.106279373168945

Token 346: ' //' (ID: 602)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.752979040145874
    2. ' /' → logprob: -1.002979040145874
    3. ' //' → logprob: -2.002979040145874
    4. '//' → logprob: -3.627979040145874
    5. '*' → logprob: -7.627979278564453
    6. ' ' → logprob: -9.127979278564453
    7. ' *' → logprob: -9.502979278564453
    8. ' ' → logprob: -9.752979278564453
    9. '   ' → logprob: -12.377979278564453
    10. '=' → logprob: -12.502979278564453

Token 347: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008816413581371307
    2. ' len' → logprob: -4.758816242218018
    3. '(len' → logprob: -8.508816719055176
    4. '[len' → logprob: -16.38381576538086
    5. '	len' → logprob: -16.63381576538086
    6. '=len' → logprob: -17.13381576538086
    7. ' ' → logprob: -17.25881576538086
    8. '   ' → logprob: -19.50881576538086
    9. '
' → logprob: -19.50881576538086
    10. '(' → logprob: -19.75881576538086

Token 348: '(trim' (ID: 100509)
  Prédit: '(trim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(trim' → logprob: -6.468279752880335e-05
    2. '(' → logprob: -9.750064849853516
    3. 'trim' → logprob: -12.500064849853516
    4. '(tr' → logprob: -13.125064849853516
    5. '_trim' → logprob: -14.750064849853516
    6. '(
' → logprob: -16.000064849853516
    7. ' trimmed' → logprob: -16.500064849853516
    8. ' (' → logprob: -17.625064849853516
    9. '(t' → logprob: -18.750064849853516
    10. '.trim' → logprob: -19.125064849853516

Token 349: 'med' (ID: 3217)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.005392057355493307
    2. 'med' → logprob: -5.255392074584961
    3. '_scores' → logprob: -8.755392074584961
    4. 'eed' → logprob: -15.505392074584961
    5. 'ined' → logprob: -15.755392074584961
    6. 'ded' → logprob: -16.75539207458496
    7. ''ed' → logprob: -17.25539207458496
    8. 'scores' → logprob: -17.50539207458496
    9. '_score' → logprob: -17.63039207458496
    10. 'im' → logprob: -17.75539207458496

Token 350: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.3902033970225602e-05
    2. 'ed' → logprob: -11.625014305114746
    3. 'scores' → logprob: -12.500014305114746
    4. '_score' → logprob: -15.250014305114746
    5. 'Scores' → logprob: -15.625014305114746
    6. 'im' → logprob: -15.750014305114746
    7. 'trim' → logprob: -16.25001335144043
    8. 'ted' → logprob: -16.50001335144043
    9. 's' → logprob: -16.62501335144043
    10. 'ined' → logprob: -16.87501335144043

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003449984942562878
    2. ')
' → logprob: -8.000345230102539
    3. ')return' → logprob: -12.375345230102539
    4. '       ' → logprob: -13.000345230102539
    5. ' )' → logprob: -13.125345230102539
    6. ')

' → logprob: -15.250345230102539
    7. '<|end|>' → logprob: -15.250345230102539
    8. ')
' → logprob: -15.375345230102539
    9. '),' → logprob: -16.50034523010254
    10. '))' → logprob: -16.62534523010254

Token 352: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7088343501091003
    2. '       ' → logprob: -0.7088343501091003
    3. 'return' → logprob: -4.333834171295166
    4. ' return' → logprob: -6.833834171295166
    5. '<|end|>' → logprob: -7.333834171295166
    6. '        
' → logprob: -7.958834171295166
    7. '
' → logprob: -8.208834648132324
    8. '' → logprob: -11.333834648132324
    9. '  
' → logprob: -11.583834648132324
    10. ' 
' → logprob: -11.583834648132324

Token 353: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8347073793411255
    2. '       ' → logprob: -1.2097073793411255
    3. 'return' → logprob: -1.3347073793411255
    4. ' return' → logprob: -5.459707260131836
    5. '
' → logprob: -9.209707260131836
    6. '<|end|>' → logprob: -9.959707260131836
    7. '        
' → logprob: -10.459707260131836
    8. ':return' → logprob: -11.584707260131836
    9. '	return' → logprob: -11.959707260131836
    10. '' → logprob: -12.334707260131836

Token 354: ' truncated' (ID: 135947)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16031013429164886
    2. ' return' → logprob: -1.91031014919281
    3. '       ' → logprob: -9.535309791564941
    4. 'Return' → logprob: -12.160309791564941
    5. '
' → logprob: -12.285309791564941
    6. 'eturn' → logprob: -14.410309791564941
    7. '        
' → logprob: -14.535309791564941
    8. '```' → logprob: -14.535309791564941
    9. ':return' → logprob: -14.785309791564941
    10. ' Return' → logprob: -14.785309791564941

Token 355: ' down' (ID: 1917)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.791853666305542
    2. '<|end|>' → logprob: -1.166853666305542
    3. '       ' → logprob: -1.791853666305542
    4. 'return' → logprob: -3.041853666305542
    5. ' return' → logprob: -4.416853904724121
    6. '<|end|>' → logprob: -5.791853904724121
    7. ' to' → logprob: -6.166853904724121
    8. '        
' → logprob: -6.541853904724121
    9. '
' → logprob: -7.166853904724121
    10. '\n' → logprob: -7.916853904724121

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011097457259893417
    2. 'return' → logprob: -4.761097431182861
    3. ' return' → logprob: -6.011097431182861
    4. '   ' → logprob: -11.13609790802002
    5. '	return' → logprob: -11.88609790802002
    6. '<|end|>' → logprob: -13.13609790802002
    7. '
' → logprob: -13.51109790802002
    8. '	' → logprob: -13.76109790802002
    9. '           ' → logprob: -14.63609790802002
    10. ':return' → logprob: -14.76109790802002

Token 358: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.050956059247255325
    2. '       ' → logprob: -3.0509560108184814
    3. ' return' → logprob: -6.0509562492370605
    4. '	return' → logprob: -12.050955772399902
    5. '   ' → logprob: -12.925955772399902
    6. '
' → logprob: -13.675955772399902
    7. '	' → logprob: -15.425955772399902
    8. 'eturn' → logprob: -15.925955772399902
    9. ')return' → logprob: -16.17595672607422
    10. '{return' → logprob: -16.30095672607422

Token 359: ' avg' (ID: 31686)
  Prédit: ' avg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avg' → logprob: -0.5759413838386536
    2. 'avg' → logprob: -0.8259413838386536
    3. '(avg' → logprob: -13.57594108581543
    4. ' ' → logprob: -15.95094108581543
    5. 'average' → logprob: -16.07594108581543
    6. ' ' → logprob: -16.45094108581543
    7. 'av' → logprob: -16.45094108581543
    8. ' average' → logprob: -16.57594108581543
    9. 'int' → logprob: -16.95094108581543
    10. '       ' → logprob: -17.20094108581543

Token 360: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 362: ' IC' (ID: 30492)
  Prédit: ' Performance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Performance' → logprob: -1.7271353006362915
    2. ' Competition' → logprob: -1.9771353006362915
    3. ' Participant' → logprob: -2.102135181427002
    4. ' Athlete' → logprob: -2.352135181427002
    5. ' Score' → logprob: -2.602135181427002
    6. ' Contest' → logprob: -2.727135181427002
    7. 'Competition' → logprob: -2.852135181427002
    8. 'Contest' → logprob: -3.227135181427002
    9. 'Participant' → logprob: -3.352135181427002
    10. ' Player' → logprob: -3.477135181427002

Token 363: 'PC' (ID: 7349)
  Prédit: 'PC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PC' → logprob: -0.21964971721172333
    2. 'F' → logprob: -1.8446496725082397
    3. 'A' → logprob: -4.594649791717529
    4. 'C' → logprob: -5.094649791717529
    5. 'E' → logprob: -5.844649791717529
    6. 'M' → logprob: -6.094649791717529
    7. 'J' → logprob: -6.594649791717529
    8. 'S' → logprob: -6.594649791717529
    9. 'SD' → logprob: -6.844649791717529
    10. 'D' → logprob: -7.157149791717529

Token 364: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.8954704999923706
    2. 'Final' → logprob: -2.02047061920166
    3. 'Team' → logprob: -2.27047061920166
    4. 'Contest' → logprob: -2.27047061920166
    5. 'League' → logprob: -2.64547061920166
    6. 'Rank' → logprob: -3.39547061920166
    7. 'Judge' → logprob: -3.77047061920166
    8. 'Sc' → logprob: -3.89547061920166
    9. 'Ranking' → logprob: -4.39547061920166
    10. 'Competition' → logprob: -4.52047061920166

Token 365: 'Processor' (ID: 22334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27338603138923645
    2. 'Calculator' → logprob: -1.773386001586914
    3. 'Aggregator' → logprob: -4.023386001586914
    4. 'Processor' → logprob: -4.898386001586914
    5. '(' → logprob: -4.898386001586914
    6. '():' → logprob: -5.023386001586914
    7. 'Evaluator' → logprob: -5.523386001586914
    8. ':
' → logprob: -5.648386001586914
    9. 'Calculation' → logprob: -5.898386001586914
    10. 'Collection' → logprob: -6.273386001586914

Token 366: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000499297515489161
    2. ':
' → logprob: -7.625499248504639
    3. ':def' → logprob: -12.375499725341797
    4. '(' → logprob: -12.500499725341797
    5. ':

' → logprob: -13.875499725341797
    6. '():' → logprob: -14.000499725341797
    7. ' :' → logprob: -14.625499725341797
    8. '):' → logprob: -15.625499725341797
    9. '   ' → logprob: -15.750499725341797
    10. '{' → logprob: -16.000499725341797

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011813283897936344
    2. ' def' → logprob: -4.511813163757324
    3. 'def' → logprob: -7.261813163757324
    4. '    
' → logprob: -10.636813163757324
    5. '    ' → logprob: -10.761813163757324
    6. '
' → logprob: -12.511813163757324
    7. '```' → logprob: -12.636813163757324
    8. '  ' → logprob: -12.761813163757324
    9. 'class' → logprob: -13.136813163757324
    10. '	def' → logprob: -13.511813163757324

Token 368: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16071321070194244
    2. 'def' (adapté à ' def') → logprob: -1.9107131958007812
    3. '   ' → logprob: -7.660713195800781
    4. 'class' → logprob: -11.660713195800781
    5. '    ' → logprob: -11.785713195800781
    6. ' ' → logprob: -14.535713195800781
    7. '```' → logprob: -14.660713195800781
    8. ' class' → logprob: -15.535713195800781
    9. '	def' → logprob: -15.660713195800781
    10. '  ' → logprob: -15.660713195800781

Token 369: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06656735390424728
    2. ' ' → logprob: -2.9415674209594727
    3. '_' → logprob: -5.816567420959473
    4. ' init' → logprob: -5.941567420959473
    5. ' def' → logprob: -6.066567420959473
    6. '__' → logprob: -6.316567420959473
    7. ' _' → logprob: -6.816567420959473
    8. '_init' → logprob: -8.191567420959473
    9. 'init' → logprob: -8.441567420959473
    10. 'def' → logprob: -9.566567420959473

Token 370: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.0
    3. '_init' → logprob: -17.0
    4. 'def' → logprob: -17.125
    5. '(init' → logprob: -18.5
    6. 'int' → logprob: -19.375
    7. '```' → logprob: -19.5
    8. 'ini' → logprob: -19.625
    9. 'in' → logprob: -19.875
    10. '_' → logprob: -20.0

Token 371: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015320050297304988
    2. '__' → logprob: -6.501532077789307
    3. '__(
' → logprob: -10.626531600952148
    4. '_(' → logprob: -12.876531600952148
    5. '(self' → logprob: -13.876531600952148
    6. '(' → logprob: -14.376531600952148
    7. '__((' → logprob: -14.751531600952148
    8. '___' → logprob: -14.876531600952148
    9. '__('' → logprob: -15.251531600952148
    10. '_' → logprob: -15.876531600952148

Token 372: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002799279463943094
    2. ')' → logprob: -8.625280380249023
    3. ' self' → logprob: -9.375280380249023
    4. '):
' → logprob: -11.375280380249023
    5. '
' → logprob: -13.750280380249023
    6. '   ' → logprob: -14.250280380249023
    7. ')(' → logprob: -14.250280380249023
    8. ' ' → logprob: -14.750280380249023
    9. '):

' → logprob: -15.250280380249023
    10. '(self' → logprob: -15.250280380249023

Token 373: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22818899154663086
    2. '):' → logprob: -2.478188991546631
    3. 'self' → logprob: -2.603188991546631
    4. ',' → logprob: -3.103188991546631
    5. '(self' → logprob: -7.228188991546631
    6. ' self' → logprob: -8.978189468383789
    7. '):

' → logprob: -9.728189468383789
    8. '   ' → logprob: -9.853189468383789
    9. '       ' → logprob: -9.978189468383789
    10. ')' → logprob: -10.728189468383789

Token 374: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015205175441224128
    2. '       ' → logprob: -9.000151634216309
    3. ' self' → logprob: -10.875151634216309
    4. '   ' → logprob: -12.375151634216309
    5. '):
' → logprob: -12.625151634216309
    6. '
' → logprob: -13.375151634216309
    7. '(self' → logprob: -15.750151634216309
    8. '```' → logprob: -15.875151634216309
    9. '	self' → logprob: -16.125152587890625
    10. ')' → logprob: -16.500152587890625

Token 375: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004727371269837022
    2. ' self' → logprob: -7.750472545623779
    3. '       ' → logprob: -10.125473022460938
    4. '   ' → logprob: -13.625473022460938
    5. 'def' → logprob: -14.750473022460938
    6. '
' → logprob: -15.125473022460938
    7. 'Judge' → logprob: -17.375473022460938
    8. '	self' → logprob: -17.625473022460938
    9. 'class' → logprob: -17.875473022460938
    10. '        
' → logprob: -18.000473022460938

Token 376: '.datasets' (ID: 136555)
  Prédit: '.j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.j' → logprob: -0.8358706831932068
    2. ' judges' → logprob: -1.2108707427978516
    3. 'jud' → logprob: -2.7108707427978516
    4. ' judge' → logprob: -3.4608707427978516
    5. ' collection' → logprob: -3.8358707427978516
    6. ' results' → logprob: -4.085870742797852
    7. 'scores' → logprob: -4.085870742797852
    8. 'results' → logprob: -4.210870742797852
    9. ' scores' → logprob: -4.335870742797852
    10. ' collections' → logprob: -4.460870742797852

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31351640820503235
    2. '=' → logprob: -1.31351637840271
    3. '=[]' → logprob: -8.313516616821289
    4. ':' → logprob: -12.063516616821289
    5. '[]' → logprob: -14.313516616821289
    6. 's' → logprob: -14.313516616821289
    7. '<|end|>' → logprob: -14.813516616821289
    8. '=[]
' → logprob: -14.938516616821289
    9. '={}' → logprob: -15.063516616821289
    10. '_' → logprob: -15.188516616821289

Token 378: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.5570885807392187e-05
    2. ' []' → logprob: -11.250015258789062
    3. '{}' → logprob: -13.625015258789062
    4. '[]
' → logprob: -13.750015258789062
    5. '[]

' → logprob: -16.125015258789062
    6. '[]}' → logprob: -16.625015258789062
    7. '[' → logprob: -17.625015258789062
    8. '[]"' → logprob: -18.750015258789062
    9. '[])' → logprob: -18.875015258789062
    10. '[],' → logprob: -19.375015258789062

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32774677872657776
    2. '
' → logprob: -1.3277467489242554
    3. 'def' → logprob: -4.952746868133545
    4. ' def' → logprob: -5.577746868133545
    5. '<|end|>' → logprob: -6.327746868133545
    6. '    
' → logprob: -6.577746868133545
    7. '<|end|>' → logprob: -9.202746391296387
    8. '        
' → logprob: -9.827746391296387
    9. '

' → logprob: -9.952746391296387
    10. '  
' → logprob: -10.202746391296387

Token 380: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07895500212907791
    2. ' def' → logprob: -2.5789549350738525
    3. '   ' → logprob: -9.703954696655273
    4. '
' → logprob: -12.453954696655273
    5. '	def' → logprob: -16.078954696655273
    6. 'de' → logprob: -16.328954696655273
    7. '```' → logprob: -17.078954696655273
    8. ' ' → logprob: -17.328954696655273
    9. '    
' → logprob: -17.953954696655273
    10. 'd' → logprob: -18.203954696655273

Token 381: ' parse' (ID: 8420)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.3157588839530945
    2. 'add' → logprob: -1.3157589435577393
    3. 'process' → logprob: -6.69075870513916
    4. ' process' → logprob: -6.94075870513916
    5. 'def' → logprob: -9.06575870513916
    6. ' def' → logprob: -9.44075870513916
    7. ' load' → logprob: -10.19075870513916
    8. 'load' → logprob: -10.81575870513916
    9. 'append' → logprob: -11.69075870513916
    10. 'submit' → logprob: -12.19075870513916

Token 382: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.49185246229171753
    2. '(' → logprob: -1.1168525218963623
    3. '_line' → logprob: -3.7418525218963623
    4. '_input' → logprob: -3.8668525218963623
    5. '_data' → logprob: -4.991852283477783
    6. '_dataset' → logprob: -5.366852283477783
    7. '_' → logprob: -6.241852283477783
    8. '_scores' → logprob: -6.991852283477783
    9. '_score' → logprob: -7.491852283477783
    10. 'self' → logprob: -7.491852283477783

Token 383: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014176554046571255
    2. '(' → logprob: -4.264176368713379
    3. ' (' → logprob: -11.764176368713379
    4. '_line' → logprob: -12.764176368713379
    5. 'self' → logprob: -13.889176368713379
    6. '(line' → logprob: -14.014176368713379
    7. '(
' → logprob: -16.014177322387695
    8. '(s' → logprob: -16.139177322387695
    9. 'line' → logprob: -16.889177322387695
    10. '}(' → logprob: -17.014177322387695

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07889793813228607
    2. '(self' → logprob: -2.9538979530334473
    3. 'self' → logprob: -4.578897953033447
    4. '):
' → logprob: -5.078897953033447
    5. '):' → logprob: -5.453897953033447
    6. '_line' → logprob: -6.703897953033447
    7. ')(' → logprob: -7.203897953033447
    8. ' ,' → logprob: -8.453897476196289
    9. ',self' → logprob: -8.578897476196289
    10. ',line' → logprob: -9.203897476196289

Token 385: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1332664489746094
    2. ' lines' → logprob: -1.5082664489746094
    3. ' input' → logprob: -1.5082664489746094
    4. 'lines' → logprob: -1.7582664489746094
    5. 'line' → logprob: -3.5082664489746094
    6. 'self' → logprob: -4.633266448974609
    7. ' self' → logprob: -4.758266448974609
    8. ' line' → logprob: -4.883266448974609
    9. 'data' → logprob: -5.383266448974609
    10. ' data' → logprob: -6.258266448974609

Token 386: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16661681234836578
    2. 'self' → logprob: -2.916616916656494
    3. '):
' → logprob: -2.916616916656494
    4. ',' → logprob: -3.416616916656494
    5. ':' → logprob: -5.291616916656494
    6. '(self' → logprob: -5.541616916656494
    7. ')' → logprob: -5.791616916656494
    8. '   ' → logprob: -9.041616439819336
    9. ' self' → logprob: -9.291616439819336
    10. '[self' → logprob: -9.791616439819336

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05129711702466011
    2. ' for' → logprob: -3.051297187805176
    3. '[]' → logprob: -7.176297187805176
    4. ' lines' → logprob: -7.176297187805176
    5. 'for' → logprob: -7.301297187805176
    6. ' []' → logprob: -9.051297187805176
    7. ' scores' → logprob: -9.801297187805176
    8. '[' → logprob: -9.926297187805176
    9. '   ' → logprob: -10.551297187805176
    10. 'n' → logprob: -10.551297187805176

Token 388: ' """
' (ID: 7037)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5292823314666748
    2. 'for' → logprob: -1.2792823314666748
    3. '       ' → logprob: -3.529282331466675
    4. ' current' → logprob: -3.904282331466675
    5. 'index' → logprob: -4.279282569885254
    6. ' idx' → logprob: -4.404282569885254
    7. 'current' → logprob: -4.404282569885254
    8. ' i' → logprob: -4.779282569885254
    9. 'i' → logprob: -4.904282569885254
    10. ' index' → logprob: -5.154282569885254

Token 389: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.2706990242004395
    2. ' current' → logprob: -1.5206990242004395
    3. 'scores' → logprob: -2.1456990242004395
    4. 'for' → logprob: -2.6456990242004395
    5. 'score' → logprob: -3.0206990242004395
    6. ' for' → logprob: -3.0206990242004395
    7. '       ' → logprob: -3.1456990242004395
    8. ' scores' → logprob: -3.2706990242004395
    9. 'n' → logprob: -3.5206990242004395
    10. 'i' → logprob: -3.8956990242004395

Token 390: ' lines' (ID: 8698)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7511654496192932
    2. 'for' → logprob: -0.8761654496192932
    3. 'lines' (adapté à ' lines') → logprob: -3.3761653900146484
    4. '       ' → logprob: -4.251165390014648
    5. ' lines' → logprob: -4.376165390014648
    6. 'scores' → logprob: -4.626165390014648
    7. ' self' → logprob: -4.751165390014648
    8. ' scores' → logprob: -4.876165390014648
    9. 'self' → logprob: -5.001165390014648
    10. 'current' → logprob: -5.626165390014648

Token 391: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2944753170013428
    2. ' =' → logprob: -1.7944753170013428
    3. '):' → logprob: -2.7944753170013428
    4. '=' → logprob: -3.9194753170013428
    5. '):
' → logprob: -5.169475555419922
    6. ')' → logprob: -6.544475555419922
    7. ' :' → logprob: -8.419475555419922
    8. '   ' → logprob: -8.919475555419922
    9. ' is' → logprob: -9.044475555419922
    10. '=[]' → logprob: -9.419475555419922

Token 392: ' iterable' (ID: 113880)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11466768383979797
    2. ' list' → logprob: -2.6146676540374756
    3. 'List' → logprob: -3.3646676540374756
    4. 'iter' → logprob: -8.114667892456055
    5. ' List' → logprob: -8.489667892456055
    6. '   ' → logprob: -10.364667892456055
    7. ' iter' → logprob: -11.364667892456055
    8. 'Iterator' → logprob: -11.614667892456055
    9. '[list' → logprob: -12.114667892456055
    10. 'Iterable' → logprob: -12.739667892456055

Token 393: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.007105940021574497
    2. '       ' → logprob: -6.007105827331543
    3. 'of' → logprob: -6.382105827331543
    4. '   ' → logprob: -6.507105827331543
    5. '[str' → logprob: -7.882105827331543
    6. ')' → logprob: -8.132105827331543
    7. '):
' → logprob: -8.382105827331543
    8. '[' → logprob: -8.507105827331543
    9. '
' → logprob: -9.257105827331543
    10. '<|end|>' → logprob: -10.132105827331543

Token 394: ' strings' (ID: 18279)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.001989067066460848
    2. ' str' → logprob: -6.251988887786865
    3. 'strings' → logprob: -9.876989364624023
    4. '[str' → logprob: -12.001989364624023
    5. ' strings' → logprob: -13.251989364624023
    6. '(str' → logprob: -15.251989364624023
    7. '
' → logprob: -15.376989364624023
    8. 'string' → logprob: -15.501989364624023
    9. '	str' → logprob: -15.501989364624023
    10. '   ' → logprob: -16.126989364624023

Token 395: ' containing' (ID: 15683)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29260191321372986
    2. '):
' → logprob: -2.1676018238067627
    3. ')' → logprob: -2.6676018238067627
    4. '        
' → logprob: -4.042602062225342
    5. '
' → logprob: -4.292602062225342
    6. '   ' → logprob: -4.417602062225342
    7. ',' → logprob: -4.792602062225342
    8. '<|end|>' → logprob: -5.667602062225342
    9. '):' → logprob: -5.792602062225342
    10. ' ):
' → logprob: -6.667602062225342

Token 396: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4777110815048218
    2. 'the' → logprob: -1.3527110815048218
    3. 'input' → logprob: -3.7277112007141113
    4. ' input' → logprob: -4.102711200714111
    5. 'scores' → logprob: -4.227711200714111
    6. ' scores' → logprob: -4.352711200714111
    7. 'data' → logprob: -4.602711200714111
    8. ' data' → logprob: -4.727711200714111
    9. ' lines' → logprob: -5.477711200714111
    10. 'str' → logprob: -5.727711200714111

Token 397: ' input' (ID: 3422)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.3767266273498535
    2. 'data' → logprob: -1.7517266273498535
    3. 'input' → logprob: -2.1267266273498535
    4. ' data' → logprob: -2.3767266273498535
    5. ' input' → logprob: -2.3767266273498535
    6. ' number' → logprob: -2.6267266273498535
    7. 'scores' → logprob: -2.7517266273498535
    8. 'dataset' → logprob: -4.0017266273498535
    9. 'datasets' → logprob: -4.0017266273498535
    10. ' scores' → logprob: -4.1267266273498535

Token 398: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.709616482257843
    2. ')' → logprob: -1.0846164226531982
    3. ' data' → logprob: -2.3346164226531982
    4. '   ' → logprob: -3.4596164226531982
    5. 'data' → logprob: -3.9596164226531982
    6. ' for' → logprob: -5.584616661071777
    7. '_lines' → logprob: -5.584616661071777
    8. '       ' → logprob: -5.709616661071777
    9. '):
' → logprob: -6.334616661071777
    10. '"""
' → logprob: -6.459616661071777

Token 399: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02837046980857849
    2. ',' → logprob: -4.903370380401611
    3. '
' → logprob: -4.903370380401611
    4. '):
' → logprob: -5.278370380401611
    5. ')' → logprob: -6.028370380401611
    6. '   ' → logprob: -6.278370380401611
    7. ' for' → logprob: -6.903370380401611
    8. '):' → logprob: -7.403370380401611
    9. ')
' → logprob: -7.653370380401611
    10. ':' → logprob: -8.02837085723877

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006763351848348975
    2. '        ' → logprob: -7.875676155090332
    3. '           ' → logprob: -9.625676155090332
    4. '   ' → logprob: -10.125676155090332
    5. ' lines' → logprob: -10.500676155090332
    6. '        
' → logprob: -10.625676155090332
    7. 'tokens' → logprob: -10.750676155090332
    8. ' each' → logprob: -11.000676155090332
    9. ')' → logprob: -11.125676155090332
    10. ' tokens' → logprob: -11.250676155090332

Token 401: ' ending' (ID: 22013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09023579210042953
    2. ' each' → logprob: -3.340235710144043
    3. 'each' → logprob: -4.465235710144043
    4. '   ' → logprob: -4.965235710144043
    5. '"""
' → logprob: -5.840235710144043
    6. ' lines' → logprob: -5.840235710144043
    7. ' starting' → logprob: -5.965235710144043
    8. 'starting' → logprob: -5.965235710144043
    9. ' for' → logprob: -6.090235710144043
    10. '):
' → logprob: -6.340235710144043

Token 402: ' with' (ID: 483)
  Prédit: ' when'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' when' → logprob: -0.7303793430328369
    2. 'when' → logprob: -1.605379343032837
    3. 'with' → logprob: -1.605379343032837
    4. ' with' → logprob: -2.355379343032837
    5. ' at' → logprob: -3.980379343032837
    6. 'at' → logprob: -6.355379104614258
    7. ' prematurely' → logprob: -8.730379104614258
    8. ' once' → logprob: -8.855379104614258
    9. '=' → logprob: -8.855379104614258
    10. 'once' → logprob: -9.230379104614258

Token 403: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.17958226799964905
    2. ' a' → logprob: -2.804582357406616
    3. ''' → logprob: -3.179582357406616
    4. ' "' → logprob: -3.429582357406616
    5. ' '' → logprob: -4.429582118988037
    6. 'a' → logprob: -5.179582118988037
    7. '0' → logprob: -5.554582118988037
    8. ' an' → logprob: -5.679582118988037
    9. ' the' → logprob: -6.429582118988037
    10. 'the' → logprob: -6.929582118988037

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05746811628341675
    2. ''' → logprob: -3.4324681758880615
    3. ' ' → logprob: -4.932467937469482
    4. '-' → logprob: -5.057467937469482
    5. '"' → logprob: -6.057467937469482
    6. '')' → logprob: -6.432467937469482
    7. '\n' → logprob: -6.932467937469482
    8. 'end' → logprob: -7.057467937469482
    9. ''''' → logprob: -7.182467937469482
    10. ''
' → logprob: -8.05746841430664

Token 405: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03413557633757591
    2. '\n' → logprob: -3.409135580062866
    3. '0' → logprob: -8.409135818481445
    4. ''#' → logprob: -9.409135818481445
    5. '')' → logprob: -9.909135818481445
    6. '<|end|>' → logprob: -10.034135818481445
    7. ''\' → logprob: -10.159135818481445
    8. ''.' → logprob: -10.409135818481445
    9. '"' → logprob: -12.034135818481445
    10. ''
' → logprob: -12.534135818481445

Token 406: ' line' (ID: 2543)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.627418041229248
    2. '\n' → logprob: -1.627418041229248
    3. ')' → logprob: -1.752418041229248
    4. ' or' → logprob: -3.627418041229248
    5. '<|end|>' → logprob: -4.127418041229248
    6. '")' → logprob: -4.627418041229248
    7. '   ' → logprob: -4.752418041229248
    8. '       ' → logprob: -4.877418041229248
    9. '    ' → logprob: -5.127418041229248
    10. ' ' → logprob: -5.627418041229248

Token 407: ' which' (ID: 1118)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9314459562301636
    2. '       ' → logprob: -1.0564459562301636
    3. '):' → logprob: -2.306446075439453
    4. '.' → logprob: -2.556446075439453
    5. '\n' → logprob: -4.181446075439453
    6. ':' → logprob: -4.431446075439453
    7. '):
' → logprob: -4.431446075439453
    8. ''' → logprob: -4.681446075439453
    9. '
' → logprob: -4.931446075439453
    10. '   ' → logprob: -5.181446075439453

Token 408: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -1.401370644569397
    2. ' signals' → logprob: -1.526370644569397
    3. ' marks' → logprob: -1.901370644569397
    4. ' indicates' → logprob: -2.0263705253601074
    5. ' stops' → logprob: -2.6513705253601074
    6. ' termin' → logprob: -2.7763705253601074
    7. 'termin' → logprob: -3.6513705253601074
    8. ' signifies' → logprob: -3.9013705253601074
    9. 'ind' → logprob: -4.276370525360107
    10. ' ends' → logprob: -4.401370525360107

Token 409: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11432813107967377
    2. 'the' → logprob: -2.614328145980835
    3. ' end' → logprob: -3.989328145980835
    4. ' termination' → logprob: -4.739327907562256
    5. 'end' → logprob: -5.114327907562256
    6. 'termination' → logprob: -6.739327907562256
    7. ' stopping' → logprob: -9.239328384399414
    8. ' an' → logprob: -9.364328384399414
    9. 'stop' → logprob: -10.239328384399414
    10. ' input' → logprob: -10.489328384399414

Token 410: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5768687725067139
    2. ' end' → logprob: -0.8268687725067139
    3. 'termination' → logprob: -7.201869010925293
    4. 'stop' → logprob: -9.826869010925293
    5. '	end' → logprob: -10.326869010925293
    6. ' termination' → logprob: -10.576869010925293
    7. 'input' → logprob: -10.826869010925293
    8. '_end' → logprob: -11.826869010925293
    9. 'ending' → logprob: -11.951869010925293
    10. 'dataset' → logprob: -12.326869010925293

Token 411: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.23142296075820923
    2. '       ' → logprob: -1.8564229011535645
    3. 'of' → logprob: -3.4814229011535645
    4. '.' → logprob: -5.2314229011535645
    5. '   ' → logprob: -5.2314229011535645
    6. ')' → logprob: -5.3564229011535645
    7. '"""' → logprob: -6.6064229011535645
    8. '<|end|>' → logprob: -6.7314229011535645
    9. '```' → logprob: -7.7314229011535645
    10. '    ' → logprob: -8.731423377990723

Token 412: ' all' (ID: 722)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01875193975865841
    2. ' input' → logprob: -4.018752098083496
    3. 'datasets' → logprob: -8.268752098083496
    4. 'data' → logprob: -8.393752098083496
    5. 'inputs' → logprob: -9.143752098083496
    6. '_input' → logprob: -12.143752098083496
    7. ' datasets' → logprob: -13.018752098083496
    8. ' data' → logprob: -13.018752098083496
    9. 'the' → logprob: -13.893752098083496
    10. ' inputs' → logprob: -14.268752098083496

Token 413: ' datasets' (ID: 57711)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6802671551704407
    2. 'datasets' → logprob: -1.680267095565796
    3. 'data' → logprob: -1.805267095565796
    4. ' input' → logprob: -2.430267095565796
    5. 'inputs' → logprob: -3.430267095565796
    6. ' data' → logprob: -4.305267333984375
    7. ' datasets' → logprob: -5.555267333984375
    8. '_input' → logprob: -6.180267333984375
    9. ' inputs' → logprob: -7.055267333984375
    10. 'lines' → logprob: -7.430267333984375

Token 414: '
' (ID: 198)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05761239677667618
    2. '       ' → logprob: -3.182612419128418
    3. ''
' → logprob: -4.932612419128418
    4. '"' → logprob: -6.057612419128418
    5. '.' → logprob: -6.307612419128418
    6. ')' → logprob: -7.182612419128418
    7. '')' → logprob: -7.307612419128418
    8. '\n' → logprob: -7.432612419128418
    9. ')'' → logprob: -8.057612419128418
    10. '"""' → logprob: -8.932612419128418

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004228935576975346
    2. ')' → logprob: -6.6292290687561035
    3. '.' → logprob: -7.5042290687561035
    4. '
' → logprob: -7.5042290687561035
    5. '"""' → logprob: -7.6292290687561035
    6. '   ' → logprob: -7.8792290687561035
    7. '):
' → logprob: -8.504228591918945
    8. '        
' → logprob: -8.879228591918945
    9. '"' → logprob: -9.004228591918945
    10. '):' → logprob: -9.379228591918945

Token 416: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037364859133958817
    2. '"""
' (adapté à ' """
') → logprob: -4.287364959716797
    3. '
' → logprob: -4.912364959716797
    4. '"""' → logprob: -5.537364959716797
    5. '        
' → logprob: -5.662364959716797
    6. '):
' → logprob: -6.162364959716797
    7. '   ' → logprob: -6.412364959716797
    8. ')' → logprob: -6.662364959716797
    9. ')
' → logprob: -7.537364959716797
    10. '```' → logprob: -7.537364959716797

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22366996109485626
    2. ' for' → logprob: -1.7236700057983398
    3. 'for' → logprob: -3.97367000579834
    4. '   ' → logprob: -6.34867000579834
    5. ' lines' → logprob: -8.34867000579834
    6. 'score' → logprob: -8.72367000579834
    7. 'current' → logprob: -9.22367000579834
    8. ' current' → logprob: -9.47367000579834
    9. ' i' → logprob: -9.47367000579834
    10. 'lines' → logprob: -9.59867000579834

Token 418: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42999592423439026
    2. 'self' → logprob: -1.5549958944320679
    3. 'current' → logprob: -2.6799960136413574
    4. 'dataset' → logprob: -3.5549960136413574
    5. '       ' → logprob: -4.554996013641357
    6. 'iterator' → logprob: -4.929996013641357
    7. 'idx' → logprob: -5.429996013641357
    8. 'lines' (adapté à ' lines') → logprob: -5.429996013641357
    9. 'scores' → logprob: -5.554996013641357
    10. 'index' → logprob: -5.679996013641357

Token 419: '_iter' (ID: 27043)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15283885598182678
    2. ' =' → logprob: -2.277838945388794
    3. '_iter' → logprob: -3.277838945388794
    4. '_iterator' → logprob: -6.652838706970215
    5. ':' → logprob: -9.652838706970215
    6. '   ' → logprob: -10.152838706970215
    7. 'iter' → logprob: -10.652838706970215
    8. 'iterator' → logprob: -11.527838706970215
    9. '_itr' → logprob: -11.527838706970215
    10. '_' → logprob: -11.527838706970215

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132641315460205
    2. ' =' → logprob: -1.3132641315460205
    3. 'ator' → logprob: -13.188263893127441
    4. '=
' → logprob: -15.938263893127441
    5. '   ' → logprob: -16.188264846801758
    6. 'or' → logprob: -16.438264846801758
    7. ' ' → logprob: -16.563264846801758
    8. '_=' → logprob: -17.438264846801758
    9. '＝' → logprob: -17.563264846801758
    10. '=

' → logprob: -17.688264846801758

Token 421: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0067209405824542046
    2. ' iter' → logprob: -5.006721019744873
    3. '(iter' → logprob: -12.131720542907715
    4. '
' → logprob: -15.631720542907715
    5. '	iter' → logprob: -16.75672149658203
    6. '   ' → logprob: -16.88172149658203
    7. 'iterator' → logprob: -18.63172149658203
    8. '_iter' → logprob: -19.75672149658203
    9. 'enumer' → logprob: -20.13172149658203
    10. '

' → logprob: -20.38172149658203

Token 422: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0001605115394340828
    2. 'lines' → logprob: -8.750160217285156
    3. ' lines' → logprob: -13.625160217285156
    4. '(' → logprob: -14.250160217285156
    5. '	lines' → logprob: -15.500160217285156
    6. '_lines' → logprob: -17.625160217285156
    7. 'Lines' → logprob: -17.750160217285156
    8. '(
' → logprob: -18.125160217285156
    9. '(line' → logprob: -18.625160217285156
    10. '.lines' → logprob: -19.500160217285156

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0545245036482811
    2. ')
' → logprob: -3.0545244216918945
    3. '       ' → logprob: -5.1795244216918945
    4. '   ' → logprob: -9.554524421691895
    5. ' )' → logprob: -9.804524421691895
    6. ':' → logprob: -10.054524421691895
    7. ',' → logprob: -10.054524421691895
    8. ':
' → logprob: -10.679524421691895
    9. ' )
' → logprob: -11.179524421691895
    10. '
' → logprob: -11.554524421691895

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04542629420757294
    2. ' while' → logprob: -3.545426368713379
    3. 'while' → logprob: -4.170426368713379
    4. '   ' → logprob: -9.545426368713379
    5. '           ' → logprob: -11.545426368713379
    6. ' for' → logprob: -11.920426368713379
    7. 'try' → logprob: -12.295426368713379
    8. '	while' → logprob: -12.670426368713379
    9. ' next' → logprob: -13.045426368713379
    10. '```' → logprob: -13.545426368713379

Token 425: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01938432827591896
    2. '       ' → logprob: -4.019384384155273
    3. 'for' → logprob: -7.394384384155273
    4. ' while' → logprob: -7.394384384155273
    5. '   ' → logprob: -13.144384384155273
    6. 'try' → logprob: -13.769384384155273
    7. ' for' → logprob: -15.019384384155273
    8. 'scores' → logprob: -15.644384384155273
    9. '	while' → logprob: -15.894384384155273
    10. 'self' → logprob: -16.144384384155273

Token 426: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004080420359969139
    2. ' True' → logprob: -5.504080295562744
    3. '
' → logprob: -13.879080772399902
    4. '(True' → logprob: -14.004080772399902
    5. 'true' → logprob: -16.129079818725586
    6. '=True' → logprob: -16.754079818725586
    7. '   ' → logprob: -17.879079818725586
    8. '1' → logprob: -19.129079818725586
    9. 'TRUE' → logprob: -19.129079818725586
    10. ' ' → logprob: -19.254079818725586

Token 427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016849361127242446
    2. ':
' → logprob: -7.00168514251709
    3. '           ' → logprob: -7.50168514251709
    4. ',' → logprob: -9.50168514251709
    5. ' :' → logprob: -9.50168514251709
    6. '       ' → logprob: -10.25168514251709
    7. '):' → logprob: -10.87668514251709
    8. '=' → logprob: -12.37668514251709
    9. '   ' → logprob: -12.87668514251709
    10. '.' → logprob: -13.25168514251709

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19769510626792908
    2. 'try' → logprob: -2.072695016860962
    3. ' try' → logprob: -3.197695016860962
    4. 'line' → logprob: -5.072695255279541
    5. '   ' → logprob: -5.822695255279541
    6. ' line' → logprob: -6.197695255279541
    7. 'count' → logprob: -7.197695255279541
    8. '       ' → logprob: -7.947695255279541
    9. 'num' → logprob: -8.947694778442383
    10. 'score' → logprob: -9.947694778442383

Token 429: ' try' (ID: 2075)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0398467592895031
    2. 'n' → logprob: -3.789846658706665
    3. 'try' (adapté à ' try') → logprob: -4.539846897125244
    4. ' line' → logprob: -6.039846897125244
    5. 'num' → logprob: -6.289846897125244
    6. 'count' → logprob: -6.914846897125244
    7. ' try' → logprob: -8.414846420288086
    8. ' n' → logprob: -9.039846420288086
    9. 'length' → logprob: -10.039846420288086
    10. 'raw' → logprob: -10.164846420288086

Token 430: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02381894364953041
    2. '               ' → logprob: -3.8988189697265625
    3. ':
' → logprob: -6.1488189697265625
    4. ' :' → logprob: -7.0238189697265625
    5. '   ' → logprob: -9.023818969726562
    6. '           ' → logprob: -10.523818969726562
    7. '    ' → logprob: -10.898818969726562
    8. ' line' → logprob: -11.273818969726562
    9. ' ' → logprob: -11.523818969726562
    10. '            ' → logprob: -12.023818969726562

Token 431: '               ' (ID: 506)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4367941617965698
    2. ' line' → logprob: -1.1867941617965698
    3. '               ' → logprob: -3.8117942810058594
    4. '   ' → logprob: -4.311794281005859
    5. 'count' → logprob: -5.436794281005859
    6. 'n' → logprob: -5.561794281005859
    7. 'num' → logprob: -6.436794281005859
    8. 'score' → logprob: -7.061794281005859
    9. ' count' → logprob: -7.186794281005859
    10. ' n' → logprob: -7.311794281005859

Token 432: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.18903344869613647
    2. 'n' (adapté à ' n') → logprob: -1.9390335083007812
    3. ' line' → logprob: -4.564033508300781
    4. 'count' → logprob: -4.564033508300781
    5. 'num' → logprob: -5.314033508300781
    6. ' n' → logprob: -6.814033508300781
    7. 'N' → logprob: -7.939033508300781
    8. 'score' → logprob: -8.314033508300781
    9. 'raw' → logprob: -8.439033508300781
    10. 'size' → logprob: -8.689033508300781

Token 433: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.225682333111763
    2. '=' → logprob: -1.6006823778152466
    3. '_line' → logprob: -8.850682258605957
    4. '_' → logprob: -10.100682258605957
    5. '=line' → logprob: -10.475682258605957
    6. ' ' → logprob: -11.100682258605957
    7. '=int' → logprob: -11.475682258605957
    8. ')' → logprob: -11.475682258605957
    9. 'line' → logprob: -12.225682258605957
    10. '   ' → logprob: -12.475682258605957

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. ' ' → logprob: -14.50192928314209
    4. ' =
' → logprob: -17.126930236816406
    5. '=
' → logprob: -17.876930236816406
    6. '    ' → logprob: -18.251930236816406
    7. '=line' → logprob: -18.251930236816406
    8. '.' → logprob: -18.751930236816406
    9. ' ' → logprob: -18.751930236816406
    10. '   ' → logprob: -18.876930236816406

Token 435: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.38687223196029663
    2. ' next' → logprob: -1.1368722915649414
    3. '(next' → logprob: -14.011872291564941
    4. ' nex' → logprob: -16.011871337890625
    5. '	next' → logprob: -16.386871337890625
    6. '.next' → logprob: -17.011871337890625
    7. 'n' → logprob: -17.011871337890625
    8. '[next' → logprob: -17.511871337890625
    9. ',next' → logprob: -18.386871337890625
    10. '
' → logprob: -18.886871337890625

Token 436: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.03829381614923477
    2. 'lines' → logprob: -3.2882938385009766
    3. ' lines' → logprob: -8.288293838500977
    4. '	lines' → logprob: -14.413293838500977
    5. '(' → logprob: -15.038293838500977
    6. '(line' → logprob: -17.538293838500977
    7. 'line' → logprob: -18.038293838500977
    8. ' (' → logprob: -18.913293838500977
    9. '_lines' → logprob: -19.038293838500977
    10. '(
' → logprob: -19.163293838500977

Token 437: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.0002997120900545269
    2. '_lines' → logprob: -8.250299453735352
    3. '_line' → logprob: -11.500299453735352
    4. '_it' → logprob: -11.625299453735352
    5. '_iters' → logprob: -12.125299453735352
    6. '_iterator' → logprob: -12.500299453735352
    7. ')_' → logprob: -12.875299453735352
    8. ')' → logprob: -12.875299453735352
    9. '(lines' → logprob: -13.750299453735352
    10. '_itr' → logprob: -14.000299453735352

Token 438: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3944007158279419
    2. ')' → logprob: -1.144400715827942
    3. ')
' → logprob: -4.894400596618652
    4. ' ).' → logprob: -12.519400596618652
    5. ' )' → logprob: -12.769400596618652
    6. ')
' → logprob: -13.644400596618652
    7. ')

' → logprob: -13.644400596618652
    8. '()' → logprob: -14.019400596618652
    9. '()).' → logprob: -14.269400596618652
    10. ')`' → logprob: -14.519400596618652

Token 439: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.4974866644479334e-05
    2. 'rstrip' → logprob: -11.500015258789062
    3. ' strip' → logprob: -12.250015258789062
    4. '.strip' → logprob: -19.125015258789062
    5. '_strip' → logprob: -19.375015258789062
    6. 'str' → logprob: -20.625015258789062
    7. '(strip' → logprob: -20.625015258789062
    8. '-strip' → logprob: -20.750015258789062
    9. 'split' → logprob: -22.375015258789062
    10. 'Strip' → logprob: -23.000015258789062

Token 440: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017171852523460984
    2. '()
' → logprob: -6.3767170906066895
    3. ')' → logprob: -11.876717567443848
    4. '())' → logprob: -12.501717567443848
    5. '()

' → logprob: -13.626717567443848
    6. '()
' → logprob: -13.876717567443848
    7. '(' → logprob: -14.126717567443848
    8. '()\' → logprob: -15.251717567443848
    9. '()<' → logprob: -15.501717567443848
    10. '();' → logprob: -16.12671661376953

Token 441: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5876016616821289
    2. '           ' → logprob: -1.087601661682129
    3. 'if' → logprob: -2.712601661682129
    4. ' if' → logprob: -4.587601661682129
    5. ')' → logprob: -5.087601661682129
    6. '            
' → logprob: -5.712601661682129
    7. '<|end|>' → logprob: -5.837601661682129
    8. '
' → logprob: -5.837601661682129
    9. '                
' → logprob: -5.837601661682129
    10. '0' → logprob: -6.087601661682129

Token 442: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002297397702932358
    2. 'n' → logprob: -6.502297401428223
    3. ' if' → logprob: -7.252297401428223
    4. '0' → logprob: -9.627297401428223
    5. '               ' → logprob: -10.877297401428223
    6. '           ' → logprob: -14.127297401428223
    7. '
' → logprob: -15.252297401428223
    8. '                   ' → logprob: -16.127296447753906
    9. ' n' → logprob: -16.502296447753906
    10. 'num' → logprob: -16.752296447753906

Token 443: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038042180240154266
    2. ' n' → logprob: -3.2880420684814453
    3. 'n't' → logprob: -15.413042068481445
    4. '0' → logprob: -15.538042068481445
    5. ' not' → logprob: -15.663042068481445
    6. '	n' → logprob: -16.288042068481445
    7. 'not' → logprob: -16.413042068481445
    8. ')n' → logprob: -18.038042068481445
    9. ' н' → logprob: -18.538042068481445
    10. ' ' → logprob: -18.663042068481445

Token 444: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0053256661631166935
    2. '_' → logprob: -5.255325794219971
    3. '==' → logprob: -10.255325317382812
    4. ' ==' → logprob: -11.505325317382812
    5. 'ine' → logprob: -11.630325317382812
    6. '_LINE' → logprob: -11.880325317382812
    7. 'line' → logprob: -12.005325317382812
    8. '=' → logprob: -12.130325317382812
    9. '_lin' → logprob: -12.130325317382812
    10. '_lines' → logprob: -12.255325317382812

Token 445: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07908652722835541
    2. ' ==' → logprob: -2.5790865421295166
    3. '=='' → logprob: -9.079086303710938
    4. '=' → logprob: -9.579086303710938
    5. '=="' → logprob: -11.954086303710938
    6. '===' → logprob: -12.454086303710938
    7. '==
' → logprob: -13.579086303710938
    8. ')==' → logprob: -14.454086303710938
    9. '()==' → logprob: -14.829086303710938
    10. ' =='' → logprob: -14.829086303710938

Token 446: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018940286710858345
    2. '"' → logprob: -4.018940448760986
    3. '0' → logprob: -7.143940448760986
    4. '`' → logprob: -15.768939971923828
    5. ' '' → logprob: -16.393939971923828
    6. '('' → logprob: -16.393939971923828
    7. '‘' → logprob: -18.518939971923828
    8. '’' → logprob: -18.643939971923828
    9. '   ' → logprob: -19.143939971923828
    10. ' ' → logprob: -19.268939971923828

Token 447: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ''' → logprob: -16.375
    3. '')' → logprob: -18.25
    4. ' ' → logprob: -19.0
    5. '"' → logprob: -19.75
    6. '```' → logprob: -20.125
    7. ''):
' → logprob: -20.5
    8. ')' → logprob: -21.0
    9. '`' → logprob: -21.75
    10. '#' → logprob: -21.75

Token 448: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.08843874931335449
    2. '':
' → logprob: -2.5884387493133545
    3. ''' → logprob: -4.713438987731934
    4. '':
' → logprob: -7.838438987731934
    5. ':' → logprob: -9.838438987731934
    6. ''):
' → logprob: -10.713438987731934
    7. '\n' → logprob: -10.838438987731934
    8. ''):' → logprob: -11.213438987731934
    9. '":' → logprob: -11.963438987731934
    10. ')' → logprob: -12.213438987731934

Token 449: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.672236824873835e-05
    2. '               ' → logprob: -10.250076293945312
    3. '                       ' → logprob: -10.625076293945312
    4. '                  ' → logprob: -11.750076293945312
    5. 'break' → logprob: -13.125076293945312
    6. '                    ' → logprob: -13.500076293945312
    7. ' break' → logprob: -13.750076293945312
    8. '           ' → logprob: -13.875076293945312
    9. '                    
' → logprob: -14.375076293945312
    10. '				' → logprob: -14.375076293945312

Token 450: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.015999410301446915
    2. '                   ' → logprob: -4.7659993171691895
    3. ' break' → logprob: -5.0159993171691895
    4. 'return' → logprob: -7.8909993171691895
    5. '	break' → logprob: -8.515999794006348
    6. '                       ' → logprob: -9.140999794006348
    7. '               ' → logprob: -10.140999794006348
    8. '_break' → logprob: -12.890999794006348
    9. '                    
' → logprob: -14.765999794006348
    10. '   ' → logprob: -14.890999794006348

Token 451: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00924655795097351
    2. '
' → logprob: -5.259246349334717
    3. '                
' → logprob: -6.009246349334717
    4. '<|end|>' → logprob: -6.884246349334717
    5. '           ' → logprob: -9.259246826171875
    6. ',' → logprob: -9.509246826171875
    7. ')' → logprob: -9.759246826171875
    8. '              ' → logprob: -9.759246826171875
    9. '                ' → logprob: -10.259246826171875
    10. '  
' → logprob: -10.634246826171875

Token 452: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005783854518085718
    2. '                
' → logprob: -5.630784034729004
    3. '
' → logprob: -6.380784034729004
    4. '<|end|>' → logprob: -8.755784034729004
    5. 'n' → logprob: -9.380784034729004
    6. '  
' → logprob: -9.880784034729004
    7. '			' → logprob: -10.630784034729004
    8. '              ' → logprob: -10.755784034729004
    9. ' 
' → logprob: -10.880784034729004
    10. ')' → logprob: -11.130784034729004

Token 453: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.03967239707708359
    2. ' n' → logprob: -3.289672374725342
    3. '               ' → logprob: -6.539672374725342
    4. 'num' → logprob: -8.7896728515625
    5. '           ' → logprob: -10.9146728515625
    6. 'count' → logprob: -12.0396728515625
    7. ' num' → logprob: -12.9146728515625
    8. '                   ' → logprob: -13.0396728515625
    9. '   ' → logprob: -13.7896728515625
    10. 'N' → logprob: -14.4146728515625

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861303046345711
    2. '=' → logprob: -3.0486130714416504
    3. '=int' → logprob: -10.798612594604492
    4. ' ' → logprob: -13.298612594604492
    5. '           ' → logprob: -14.298612594604492
    6. '   ' → logprob: -14.423612594604492
    7. '    ' → logprob: -14.548612594604492
    8. '_scores' → logprob: -14.673612594604492
    9. ')' → logprob: -15.298612594604492
    10. ',' → logprob: -15.548612594604492

Token 455: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006715370807796717
    2. ' int' → logprob: -5.006715297698975
    3. '(int' → logprob: -19.756715774536133
    4. '               ' → logprob: -19.881715774536133
    5. '[int' → logprob: -20.256715774536133
    6. '                   ' → logprob: -21.256715774536133
    7. '=int' → logprob: -21.256715774536133
    8. ':int' → logprob: -21.756715774536133
    9. ' ' → logprob: -22.381715774536133
    10. '<int' → logprob: -22.881715774536133

Token 456: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008627578616142273
    2. '(' → logprob: -4.758627414703369
    3. 'n' → logprob: -11.383627891540527
    4. '(
' → logprob: -13.383627891540527
    5. ' (' → logprob: -16.13362693786621
    6. ' n' → logprob: -16.63362693786621
    7. '(

' → logprob: -17.50862693786621
    8. ')n' → logprob: -18.00862693786621
    9. ')' → logprob: -18.50862693786621
    10. '((' → logprob: -19.63362693786621

Token 457: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -6.630610641877865e-06
    2. 'line' → logprob: -12.250006675720215
    3. ')' → logprob: -13.750006675720215
    4. '_n' → logprob: -15.500006675720215
    5. 'Line' → logprob: -15.875006675720215
    6. '(line' → logprob: -16.2500057220459
    7. '_' → logprob: -16.7500057220459
    8. '_LINE' → logprob: -16.8750057220459
    9. '(n' → logprob: -17.0000057220459
    10. ')n' → logprob: -17.3750057220459

Token 458: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003606005571782589
    2. ')
' → logprob: -5.628605842590332
    3. ')
' → logprob: -12.628605842590332
    4. '               ' → logprob: -13.503605842590332
    5. ' )' → logprob: -14.628605842590332
    6. '           ' → logprob: -15.503605842590332
    7. ')`' → logprob: -15.878605842590332
    8. ')

' → logprob: -16.62860679626465
    9. ')`
' → logprob: -16.87860679626465
    10. '),' → logprob: -16.87860679626465

Token 459: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012976066500414163
    2. 'scores' → logprob: -10.000129699707031
    3. '           ' → logprob: -10.625129699707031
    4. 'score' → logprob: -11.125129699707031
    5. '                
' → logprob: -11.500129699707031
    6. '       ' → logprob: -11.875129699707031
    7. '<|end|>' → logprob: -12.125129699707031
    8. ' scores' → logprob: -12.500129699707031
    9. '		       ' → logprob: -12.750129699707031
    10. ' score' → logprob: -13.000129699707031

Token 460: ' collection' (ID: 5801)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.6903775930404663
    2. 'jc' → logprob: -1.0653775930404663
    3. 'collection' (adapté à ' collection') → logprob: -2.940377712249756
    4. 'score' → logprob: -3.440377712249756
    5. 'for' → logprob: -3.815377712249756
    6. 'judge' → logprob: -4.315377712249756
    7. 'dc' → logprob: -5.065377712249756
    8. 'while' → logprob: -5.565377712249756
    9. '       ' → logprob: -5.565377712249756
    10. 'jud' → logprob: -5.815377712249756

Token 461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0110534792765975
    2. '=' → logprob: -4.511053562164307
    3. ' ' → logprob: -13.261053085327148
    4. '<|end|>' → logprob: -14.011053085327148
    5. ' =
' → logprob: -14.136053085327148
    6. ':' → logprob: -14.636053085327148
    7. '        ' → logprob: -14.636053085327148
    8. ')' → logprob: -15.136053085327148
    9. 's' → logprob: -15.261053085327148
    10. '.' → logprob: -15.761053085327148

Token 462: ' Judge' (ID: 44193)
  Prédit: 'Judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Judge' → logprob: -0.02975129522383213
    2. ' Judge' → logprob: -3.5297513008117676
    3. 'Jud' → logprob: -14.15475082397461
    4. 'Score' → logprob: -16.02975082397461
    5. ' ' → logprob: -18.40475082397461
    6. 'Jug' → logprob: -18.52975082397461
    7. ' Judges' → logprob: -19.02975082397461
    8. ' judge' → logprob: -19.15475082397461
    9. ' ' → logprob: -19.40475082397461
    10. '	J' → logprob: -19.40475082397461

Token 463: 'Collection' (ID: 4160)
  Prédit: 'Collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: 0.0
    2. 'Score' → logprob: -17.125
    3. 'collection' → logprob: -18.0
    4. 'Collections' → logprob: -18.125
    5. 'Collect' → logprob: -19.375
    6. '	Collection' → logprob: -20.0
    7. 'C' → logprob: -20.375
    8. 's' → logprob: -20.5
    9. 'Scores' → logprob: -20.5
    10. 'Collector' → logprob: -20.75

Token 464: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18047121167182922
    2. '()
' → logprob: -1.8054711818695068
    3. '               ' → logprob: -7.430471420288086
    4. ' =' → logprob: -10.180471420288086
    5. '()

' → logprob: -10.555471420288086
    6. '()
' → logprob: -10.555471420288086
    7. '           ' → logprob: -11.430471420288086
    8. ')' → logprob: -11.430471420288086
    9. '=' → logprob: -11.680471420288086
    10. '()\' → logprob: -12.805471420288086

Token 465: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028648413717746735
    2. 'for' → logprob: -8.625286102294922
    3. ' for' → logprob: -9.500286102294922
    4. '		       ' → logprob: -11.750286102294922
    5. '	           ' → logprob: -11.875286102294922
    6. '           ' → logprob: -12.125286102294922
    7. '                   ' → logprob: -12.875286102294922
    8. '              ' → logprob: -13.375286102294922
    9. '	       ' → logprob: -13.750286102294922
    10. '<|end|>' → logprob: -13.750286102294922

Token 466: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021992618218064308
    2. ' for' → logprob: -4.5219926834106445
    3. '               ' → logprob: -4.5219926834106445
    4. 'scores' → logprob: -11.646992683410645
    5. 'score' → logprob: -13.146992683410645
    6. '   ' → logprob: -13.271992683410645
    7. 'count' → logprob: -13.396992683410645
    8. '           ' → logprob: -13.771992683410645
    9. '	for' → logprob: -13.896992683410645
    10. '       ' → logprob: -14.146992683410645

Token 467: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06198437884449959
    2. ' _' → logprob: -2.8119843006134033
    3. '_i' → logprob: -11.311984062194824
    4. ' i' → logprob: -12.436984062194824
    5. 'i' → logprob: -15.311984062194824
    6. ' ' → logprob: -16.68698501586914
    7. '_
' → logprob: -17.31198501586914
    8. '_score' → logprob: -17.43698501586914
    9. '_=' → logprob: -17.43698501586914
    10. '_

' → logprob: -17.68698501586914

Token 468: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0001266613689949736
    2. 'in' → logprob: -9.000126838684082
    3. ' ' → logprob: -12.750126838684082
    4. ' i' → logprob: -16.250125885009766
    5. 'import' → logprob: -16.375125885009766
    6. 'range' → logprob: -16.375125885009766
    7. '  ' → logprob: -17.000125885009766
    8. '<|end|>' → logprob: -17.500125885009766
    9. '
' → logprob: -17.625125885009766
    10. 'i' → logprob: -18.000125885009766

Token 469: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00014060820103622973
    2. ' range' → logprob: -8.875140190124512
    3. ' ' → logprob: -14.875140190124512
    4. '   ' → logprob: -15.625140190124512
    5. '  ' → logprob: -16.625141143798828
    6. '    ' → logprob: -17.375141143798828
    7. '
' → logprob: -17.625141143798828
    8. '	range' → logprob: -18.000141143798828
    9. '(range' → logprob: -18.125141143798828
    10. '```' → logprob: -18.250141143798828

Token 470: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004086828324943781
    2. 'n' → logprob: -5.504086971282959
    3. '(' → logprob: -12.3790864944458
    4. ' n' → logprob: -12.5040864944458
    5. ' (' → logprob: -15.8790864944458
    6. 'range' → logprob: -15.8790864944458
    7. '_n' → logprob: -16.629087448120117
    8. '(
' → logprob: -16.754087448120117
    9. ')n' → logprob: -17.879087448120117
    10. ' in' → logprob: -18.004087448120117

Token 471: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12698470056056976
    2. '):' → logprob: -2.1269845962524414
    3. '):
' → logprob: -11.001984596252441
    4. ':
' → logprob: -11.126984596252441
    5. ':' → logprob: -11.251984596252441
    6. ' ):
' → logprob: -13.001984596252441
    7. ')' → logprob: -13.126984596252441
    8. '           ' → logprob: -13.376984596252441
    9. ' ):' → logprob: -13.876984596252441
    10. '():
' → logprob: -14.001984596252441

Token 472: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012516580754891038
    2. 'score' → logprob: -7.501251697540283
    3. '   ' → logprob: -8.001251220703125
    4. ' score' → logprob: -8.251251220703125
    5. '               ' → logprob: -10.251251220703125
    6. '           ' → logprob: -10.376251220703125
    7. '                  ' → logprob: -11.626251220703125
    8. ' s' → logprob: -12.376251220703125
    9. '		           ' → logprob: -12.751251220703125
    10. ' scores' → logprob: -13.001251220703125

Token 473: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.007198620121926069
    2. ' score' → logprob: -5.257198810577393
    3. 'value' → logprob: -6.507198810577393
    4. '                   ' → logprob: -8.382198333740234
    5. 'line' → logprob: -8.757198333740234
    6. 'val' → logprob: -10.757198333740234
    7. 's' → logprob: -11.132198333740234
    8. ' value' → logprob: -11.257198333740234
    9. 'v' → logprob: -11.632198333740234
    10. '                    
' → logprob: -11.632198333740234

Token 474: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0820038765668869
    2. '_value' → logprob: -2.5820038318634033
    3. ' =' → logprob: -6.207004070281982
    4. '_val' → logprob: -6.957004070281982
    5. '_str' → logprob: -9.457003593444824
    6. '_' → logprob: -10.707003593444824
    7. 'line' → logprob: -11.082003593444824
    8. '=' → logprob: -11.207003593444824
    9. '_score' → logprob: -12.332003593444824
    10. 'value' → logprob: -12.832003593444824

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048642918467522
    2. '=' → logprob: -4.511048793792725
    3. ' ' → logprob: -15.011048316955566
    4. '   ' → logprob: -15.636048316955566
    5. '           ' → logprob: -16.011049270629883
    6. 's' → logprob: -16.011049270629883
    7. '    ' → logprob: -16.136049270629883
    8. '               ' → logprob: -17.011049270629883
    9. '                   ' → logprob: -17.386049270629883
    10. '       ' → logprob: -18.136049270629883

Token 476: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.22594007849693298
    2. ' next' → logprob: -1.6009401082992554
    3. 'int' → logprob: -7.850940227508545
    4. '                   ' → logprob: -9.475939750671387
    5. ' int' → logprob: -9.850939750671387
    6. '                       ' → logprob: -13.350939750671387
    7. '               ' → logprob: -13.600939750671387
    8. '   ' → logprob: -13.600939750671387
    9. 'score' → logprob: -14.350939750671387
    10. '(next' → logprob: -14.350939750671387

Token 477: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.048705801367759705
    2. 'lines' → logprob: -3.048705816268921
    3. ' lines' → logprob: -9.0487060546875
    4. '	lines' → logprob: -14.0487060546875
    5. '_lines' → logprob: -16.7987060546875
    6. '.lines' → logprob: -17.0487060546875
    7. 'line' → logprob: -17.6737060546875
    8. 'scores' → logprob: -18.4237060546875
    9. 'Lines' → logprob: -19.0487060546875
    10. '-lines' → logprob: -19.7987060546875

Token 478: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -3.7697225252486533e-06
    2. 'iter' → logprob: -12.500003814697266
    3. 'Iter' → logprob: -17.875003814697266
    4. '_iters' → logprob: -17.875003814697266
    5. '	iter' → logprob: -18.250003814697266
    6. '_iterator' → logprob: -18.750003814697266
    7. ' iter' → logprob: -19.125003814697266
    8. '(iter' → logprob: -19.250003814697266
    9. '_it' → logprob: -19.750003814697266
    10. '_inter' → logprob: -20.125003814697266

Token 479: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0009287334396503866
    2. ' ).' → logprob: -7.37592887878418
    3. ')' → logprob: -8.62592887878418
    4. '()).' → logprob: -9.37592887878418
    5. ')
' → logprob: -11.00092887878418
    6. '               ' → logprob: -12.37592887878418
    7. '           ' → logprob: -12.75092887878418
    8. '().' → logprob: -12.87592887878418
    9. '   ' → logprob: -12.87592887878418
    10. '       ' → logprob: -13.25092887878418

Token 480: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.320199877838604e-07
    2. ' strip' → logprob: -15.375
    3. 'rstrip' → logprob: -16.5
    4. 'split' → logprob: -17.375
    5. '.strip' → logprob: -18.125
    6. 'str' → logprob: -20.25
    7. '_strip' → logprob: -21.125
    8. 'stripe' → logprob: -22.125
    9. '   ' → logprob: -22.5
    10. 'Strip' → logprob: -24.0

Token 481: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011185461189597845
    2. 'score' → logprob: -8.376118659973145
    3. '()
' → logprob: -8.501118659973145
    4. '()' → logprob: -9.126118659973145
    5. '               ' → logprob: -9.501118659973145
    6. '<|end|>' → logprob: -9.501118659973145
    7. '                    
' → logprob: -9.876118659973145
    8. '		           ' → logprob: -9.876118659973145
    9. '
' → logprob: -10.001118659973145
    10. ')
' → logprob: -10.376118659973145

Token 482: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003485745983198285
    2. 'score' → logprob: -8.250349044799805
    3. 'value' → logprob: -10.500349044799805
    4. '               ' → logprob: -10.500349044799805
    5. '
' → logprob: -11.750349044799805
    6. '                  ' → logprob: -12.250349044799805
    7. '                       ' → logprob: -12.375349044799805
    8. 's' → logprob: -12.625349044799805
    9. '                    
' → logprob: -13.000349044799805
    10. 'scores' → logprob: -13.000349044799805

Token 483: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.019389593973755836
    2. 'value' → logprob: -4.269389629364014
    3. 'val' → logprob: -6.644389629364014
    4. '                   ' → logprob: -6.769389629364014
    5. 'collection' → logprob: -6.894389629364014
    6. 'values' → logprob: -7.519389629364014
    7. 'scores' → logprob: -7.519389629364014
    8. 's' → logprob: -8.894389152526855
    9. 'vals' → logprob: -9.269389152526855
    10. 'if' → logprob: -9.269389152526855

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014377268962562084
    2. '=' → logprob: -4.514377117156982
    3. '_value' → logprob: -5.764377117156982
    4. 's' → logprob: -9.01437759399414
    5. '_val' → logprob: -10.51437759399414
    6. ' ' → logprob: -11.01437759399414
    7. '_tokens' → logprob: -12.13937759399414
    8. 'value' → logprob: -12.38937759399414
    9. '   ' → logprob: -13.26437759399414
    10. '_' → logprob: -13.38937759399414

Token 485: ' Score' (ID: 30731)
  Prédit: ' Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Score' → logprob: -0.4742216169834137
    2. 'Score' → logprob: -0.9742215871810913
    3. 'int' → logprob: -9.099221229553223
    4. ' int' → logprob: -10.349221229553223
    5. '   ' → logprob: -15.099221229553223
    6. ' ' → logprob: -15.599221229553223
    7. '    ' → logprob: -15.849221229553223
    8. '  ' → logprob: -16.34922218322754
    9. 'score' → logprob: -17.09922218322754
    10. ' score' → logprob: -17.22422218322754

Token 486: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.75001335144043
    3. 'int' → logprob: -12.25001335144043
    4. '(value' → logprob: -15.00001335144043
    5. '=int' → logprob: -16.62501335144043
    6. '   ' → logprob: -16.87501335144043
    7. '((' → logprob: -17.37501335144043
    8. ' (' → logprob: -17.75001335144043
    9. '[int' → logprob: -17.75001335144043
    10. '(float' → logprob: -17.87501335144043

Token 487: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.375006675720215
    3. 'score' → logprob: -13.375006675720215
    4. '(
' → logprob: -14.000006675720215
    5. ')' → logprob: -15.375006675720215
    6. '(scores' → logprob: -17.25000762939453
    7. '	score' → logprob: -19.12500762939453
    8. '(

' → logprob: -19.87500762939453
    9. ')(' → logprob: -20.00000762939453
    10. ' (' → logprob: -20.25000762939453

Token 488: '_line' (ID: 14418)
  Prédit: '(score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.0009486184571869671
    2. '_line' → logprob: -7.625948429107666
    3. 'score' → logprob: -7.750948429107666
    4. '(' → logprob: -10.875948905944824
    5. ')' → logprob: -12.625948905944824
    6. '(
' → logprob: -12.750948905944824
    7. ' (' → logprob: -13.375948905944824
    8. '_score' → logprob: -13.375948905944824
    9. ' score' → logprob: -14.625948905944824
    10. '	score' → logprob: -15.125948905944824

Token 489: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.3191627860069275
    2. '))' → logprob: -1.3191628456115723
    3. ')' → logprob: -5.194162845611572
    4. ')
' → logprob: -8.319162368774414
    5. '))
' → logprob: -10.319162368774414
    6. ' ))
' → logprob: -10.819162368774414
    7. '()))
' → logprob: -11.694162368774414
    8. '                   ' → logprob: -11.944162368774414
    9. '))

' → logprob: -12.819162368774414
    10. ' ))' → logprob: -12.819162368774414

Token 490: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00032378386822529137
    2. '               ' → logprob: -8.625324249267578
    3. ')' → logprob: -10.000324249267578
    4. '           ' → logprob: -10.000324249267578
    5. '                       ' → logprob: -11.125324249267578
    6. '		           ' → logprob: -11.750324249267578
    7. '<|end|>' → logprob: -12.000324249267578
    8. '   ' → logprob: -12.000324249267578
    9. '       ' → logprob: -12.875324249267578
    10. 'collection' → logprob: -13.000324249267578

Token 491: ' collection' (ID: 5801)
  Prédit: 'collection'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collection' (adapté à ' collection') → logprob: -0.025176122784614563
    2. ' collection' → logprob: -3.7751760482788086
    3. '                   ' → logprob: -6.400176048278809
    4. '               ' → logprob: -8.275176048278809
    5. 'self' → logprob: -12.775176048278809
    6. '
' → logprob: -12.900176048278809
    7. '.collection' → logprob: -13.025176048278809
    8. '           ' → logprob: -13.525176048278809
    9. '   ' → logprob: -14.025176048278809
    10. '(collection' → logprob: -14.275176048278809

Token 492: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0005537479883059859
    2. '.' → logprob: -7.500553607940674
    3. ' .' → logprob: -15.375554084777832
    4. 'add' → logprob: -15.875554084777832
    5. '   ' → logprob: -15.875554084777832
    6. '.append' → logprob: -16.125553131103516
    7. '.
' → logprob: -16.625553131103516
    8. ').' → logprob: -16.875553131103516
    9. ')add' → logprob: -17.000553131103516
    10. '.Add' → logprob: -17.875553131103516

Token 493: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.00000286102295
    3. 'score' → logprob: -15.00000286102295
    4. '_s' → logprob: -17.000001907348633
    5. '_scores' → logprob: -17.250001907348633
    6. '_code' → logprob: -17.375001907348633
    7. 's' → logprob: -18.500001907348633
    8. '_SCORE' → logprob: -19.375001907348633
    9. '(score' → logprob: -19.625001907348633
    10. ' _' → logprob: -19.750001907348633

Token 494: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -6.229872087715194e-05
    2. '(' → logprob: -9.875061988830566
    3. '(
' → logprob: -11.500061988830566
    4. '(scores' → logprob: -15.125061988830566
    5. 'score' → logprob: -16.375062942504883
    6. '(

' → logprob: -16.625062942504883
    7. '(schedule' → logprob: -17.375062942504883
    8. ')' → logprob: -18.375062942504883
    9. ' (' → logprob: -18.500062942504883
    10. '()' → logprob: -18.625062942504883

Token 495: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002196763874962926
    2. ')
' → logprob: -6.127196788787842
    3. '               ' → logprob: -12.002196311950684
    4. '                   ' → logprob: -13.002196311950684
    5. '           ' → logprob: -13.752196311950684
    6. '())' → logprob: -14.252196311950684
    7. ' )' → logprob: -14.627196311950684
    8. '       ' → logprob: -15.002196311950684
    9. ')

' → logprob: -15.252196311950684
    10. ')
' → logprob: -15.502196311950684

Token 496: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4027136564254761
    2. 'self' (adapté à ' self') → logprob: -1.152713656425476
    3. ' self' → logprob: -4.652713775634766
    4. 'collection' → logprob: -5.402713775634766
    5. '       ' → logprob: -7.527713775634766
    6. 'return' → logprob: -8.027713775634766
    7. '           ' → logprob: -8.277713775634766
    8. ' collection' → logprob: -8.527713775634766
    9. '<|end|>' → logprob: -9.027713775634766
    10. ' ' → logprob: -9.902713775634766

Token 498: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.00011427151912357658
    2. 'datasets' → logprob: -9.750114440917969
    3. '.datas' → logprob: -10.250114440917969
    4. ' .' → logprob: -11.625114440917969
    5. '.collections' → logprob: -12.625114440917969
    6. '.' → logprob: -12.875114440917969
    7. '.data' → logprob: -13.000114440917969
    8. '.dat' → logprob: -13.125114440917969
    9. '.dataset' → logprob: -14.750114440917969
    10. 'atasets' → logprob: -15.500114440917969

Token 499: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.2233183042553719e-05
    2. '.' → logprob: -11.500012397766113
    3. 'append' → logprob: -13.625012397766113
    4. '.app' → logprob: -14.750012397766113
    5. '.extend' → logprob: -15.625012397766113
    6. '.add' → logprob: -16.375011444091797
    7. '.ap' → logprob: -16.875011444091797
    8. '.push' → logprob: -17.000011444091797
    9. '.Append' → logprob: -17.750011444091797
    10. ' .' → logprob: -17.875011444091797

Token 500: '(collection' (ID: 67589)
  Prédit: '(collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(collection' → logprob: -2.15310683415737e-05
    2. 'collection' → logprob: -10.750021934509277
    3. '(' → logprob: -19.12502098083496
    4. ' collection' → logprob: -19.37502098083496
    5. ' (' → logprob: -22.00002098083496
    6. 'Collection' → logprob: -23.50002098083496
    7. '(
' → logprob: -23.50002098083496
    8. '(Collection' → logprob: -23.62502098083496
    9. '.collection' → logprob: -23.87502098083496
    10. '(connection' → logprob: -24.12502098083496

Token 501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008147508488036692
    2. ')
' → logprob: -7.250814914703369
    3. '           ' → logprob: -10.375814437866211
    4. '<|end|>' → logprob: -10.375814437866211
    5. '       ' → logprob: -11.375814437866211
    6. '               ' → logprob: -11.500814437866211
    7. '<|end|>' → logprob: -11.625814437866211
    8. '
' → logprob: -13.000814437866211
    9. '())' → logprob: -13.000814437866211
    10. ')return' → logprob: -13.000814437866211

Token 502: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 503: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26647838950157166
    2. ' except' → logprob: -2.3914783000946045
    3. '           ' → logprob: -2.6414783000946045
    4. 'except' (adapté à ' except') → logprob: -2.8914783000946045
    5. '	except' → logprob: -4.641478538513184
    6. '<|end|>' → logprob: -5.641478538513184
    7. '<|end|>' → logprob: -6.641478538513184
    8. '	       ' → logprob: -8.391478538513184
    9. '   ' → logprob: -8.391478538513184
    10. '        ' → logprob: -8.641478538513184

Token 504: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.07889033854007721
    2. ' Stop' → logprob: -2.578890323638916
    3. 'EOF' → logprob: -15.203890800476074
    4. '_Stop' → logprob: -15.578890800476074
    5. '(' → logprob: -16.078889846801758
    6. 'STOP' → logprob: -17.578889846801758
    7. '_stop' → logprob: -17.828889846801758
    8. '.Stop' → logprob: -18.828889846801758
    9. ' EOF' → logprob: -19.703889846801758
    10. '_STOP' → logprob: -20.328889846801758

Token 505: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -4.320199877838604e-07
    2. 'Iterator' → logprob: -15.125
    3. 'iteration' → logprob: -17.375
    4. ' iteration' → logprob: -17.5
    5. 'Async' → logprob: -18.75
    6. 'Iter' → logprob: -19.375
    7. '_iteration' → logprob: -20.125
    8. 'Iterations' → logprob: -20.5
    9. 'Iterable' → logprob: -21.625
    10. 'Error' → logprob: -22.875

Token 506: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2567075192928314
    2. ':' → logprob: -2.1317074298858643
    3. ':
' → logprob: -2.2567074298858643
    4. '           ' → logprob: -6.131707668304443
    5. '                   ' → logprob: -8.631707191467285
    6. '	           ' → logprob: -8.631707191467285
    7. '():
' → logprob: -9.506707191467285
    8. '             ' → logprob: -9.756707191467285
    9. '              ' → logprob: -9.881707191467285
    10. '                ' → logprob: -9.881707191467285

Token 507: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00025406808708794415
    2. 'break' → logprob: -9.125253677368164
    3. '           ' → logprob: -9.750253677368164
    4. ' break' → logprob: -10.125253677368164
    5. '                   ' → logprob: -10.625253677368164
    6. '	           ' → logprob: -12.000253677368164
    7. '	break' → logprob: -12.500253677368164
    8. '   ' → logprob: -12.875253677368164
    9. '       ' → logprob: -13.250253677368164
    10. '              ' → logprob: -13.625253677368164

Token 508: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06689821928739548
    2. '               ' → logprob: -2.8168981075286865
    3. ' break' → logprob: -5.316898345947266
    4. '	break' → logprob: -11.941898345947266
    5. 'return' → logprob: -13.066898345947266
    6. '           ' → logprob: -13.941898345947266
    7. '                   ' → logprob: -14.566898345947266
    8. 'raise' → logprob: -15.816898345947266
    9. '       ' → logprob: -15.941898345947266
    10. '   ' → logprob: -16.316898345947266

Token 509: ' Unexpected' (ID: 132579)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0019419649615883827
    2. ' break' → logprob: -6.501942157745361
    3. '               ' → logprob: -7.751942157745361
    4. 'return' → logprob: -12.001941680908203
    5. '           ' → logprob: -13.126941680908203
    6. '                   ' → logprob: -13.876941680908203
    7. '	break' → logprob: -16.126941680908203
    8. '#' → logprob: -16.126941680908203
    9. 'Break' → logprob: -16.251941680908203
    10. 'raise' → logprob: -16.876941680908203

Token 510: ' EOF' (ID: 72412)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7689418792724609
    2. ' break' → logprob: -1.518941879272461
    3. '<|end|>' → logprob: -1.768941879272461
    4. '           ' → logprob: -2.268941879272461
    5. '               ' → logprob: -4.268941879272461
    6. 'return' → logprob: -5.018941879272461
    7. '            ' → logprob: -5.143941879272461
    8. '<|end|>' → logprob: -5.518941879272461
    9. '
' → logprob: -6.018941879272461
    10. ' return' → logprob: -6.393941879272461

Token 511: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18093977868556976
    2. '                   ' → logprob: -1.805939793586731
    3. '
' → logprob: -7.680939674377441
    4. '           ' → logprob: -8.180939674377441
    5. '                       ' → logprob: -9.055939674377441
    6. '   ' → logprob: -10.055939674377441
    7. '                ' → logprob: -10.180939674377441
    8. '                
' → logprob: -10.305939674377441
    9. ':' → logprob: -10.680939674377441
    10. '<|end|>' → logprob: -10.930939674377441

Token 512: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012719064950942993
    2. '           ' → logprob: -5.01271915435791
    3. '                   ' → logprob: -5.13771915435791
    4. '                ' → logprob: -10.88771915435791
    5. '                       ' → logprob: -11.13771915435791
    6. '       ' → logprob: -11.51271915435791
    7. ',' → logprob: -11.63771915435791
    8. '	           ' → logprob: -11.76271915435791
    9. ' break' → logprob: -12.13771915435791
    10. ' ' → logprob: -12.26271915435791

Token 513: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.009373998269438744
    2. ' break' → logprob: -5.259374141693115
    3. '               ' → logprob: -5.509374141693115
    4. 'raise' → logprob: -10.009373664855957
    5. 'return' → logprob: -10.384373664855957
    6. '	break' → logprob: -12.509373664855957
    7. '                   ' → logprob: -13.009373664855957
    8. '           ' → logprob: -14.134373664855957
    9. '
' → logprob: -15.509373664855957
    10. ' raise' → logprob: -16.009374618530273

Token 514: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33682894706726074
    2. '
' → logprob: -1.3368289470672607
    3. '<|end|>' → logprob: -3.9618289470672607
    4. '    
' → logprob: -6.08682918548584
    5. '<|end|>' → logprob: -6.71182918548584
    6. '

' → logprob: -7.71182918548584
    7. 'def' → logprob: -8.96182918548584
    8. '        
' → logprob: -9.33682918548584
    9. '       ' → logprob: -10.46182918548584
    10. '	def' → logprob: -11.08682918548584

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05921987444162369
    2. 'def' → logprob: -2.9342198371887207
    3. '<|end|>' → logprob: -5.559219837188721
    4. ' def' → logprob: -8.559220314025879
    5. '<|end|>' → logprob: -9.309220314025879
    6. '
' → logprob: -9.559220314025879
    7. '```' → logprob: -10.309220314025879
    8. '	def' → logprob: -10.434220314025879
    9. '    
' → logprob: -10.684220314025879
    10. '#' → logprob: -11.934220314025879

Token 516: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16063524782657623
    2. '   ' → logprob: -1.910635232925415
    3. ' def' → logprob: -8.035634994506836
    4. '
' → logprob: -9.410634994506836
    5. '	def' → logprob: -12.535634994506836
    6. '    
' → logprob: -13.535634994506836
    7. '<|end|>' → logprob: -15.910634994506836
    8. ' ' → logprob: -16.035634994506836
    9. '

' → logprob: -16.910634994506836
    10. '```' → logprob: -17.035634994506836

Token 517: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.536531388759613
    2. 'process' → logprob: -1.0365314483642578
    3. ' compute' → logprob: -3.286531448364258
    4. 'compute' → logprob: -3.786531448364258
    5. ' get' → logprob: -8.161531448364258
    6. 'get' → logprob: -8.786531448364258
    7. 'calculate' → logprob: -11.411531448364258
    8. ' calculate' → logprob: -11.661531448364258
    9. 'def' → logprob: -12.036531448364258
    10. ' output' → logprob: -12.161531448364258

Token 518: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7446826100349426
    2. '_scores' → logprob: -1.4946825504302979
    3. '_d' → logprob: -1.7446825504302979
    4. '_' → logprob: -2.619682550430298
    5. '_data' → logprob: -3.994682550430298
    6. '_results' → logprob: -4.119682788848877
    7. '(' → logprob: -4.744682788848877
    8. '_all' → logprob: -5.369682788848877
    9. '()' → logprob: -5.744682788848877
    10. '_final' → logprob: -7.369682788848877

Token 519: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006883264984935522
    2. '_scores' → logprob: -5.881883144378662
    3. '_' → logprob: -6.256883144378662
    4. '):
' → logprob: -6.631883144378662
    5. ')' → logprob: -8.25688362121582
    6. 'self' → logprob: -8.88188362121582
    7. '_data' → logprob: -9.13188362121582
    8. '_results' → logprob: -9.25688362121582
    9. ')_' → logprob: -9.63188362121582
    10. ',' → logprob: -10.38188362121582

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014737951569259167
    2. '(self' → logprob: -7.126473903656006
    3. 'self' → logprob: -7.751473903656006
    4. '(' → logprob: -9.626473426818848
    5. '   ' → logprob: -9.876473426818848
    6. 'for' → logprob: -10.126473426818848
    7. '    
' → logprob: -11.126473426818848
    8. ' for' → logprob: -11.501473426818848
    9. '```' → logprob: -11.501473426818848
    10. '        
' → logprob: -11.751473426818848

Token 521: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.6973954439163208
    2. 'results' (adapté à ' results') → logprob: -0.6973954439163208
    3. '       ' → logprob: -5.697395324707031
    4. '   ' → logprob: -7.822395324707031
    5. 'result' → logprob: -8.322395324707031
    6. 'for' → logprob: -9.947395324707031
    7. ' result' → logprob: -10.072395324707031
    8. ' final' → logprob: -10.072395324707031
    9. 'final' → logprob: -10.197395324707031
    10. 'outputs' → logprob: -10.322395324707031

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07209110260009766
    2. '=' → logprob: -2.6970911026000977
    3. '=[]' → logprob: -6.197091102600098
    4. '=[]
' → logprob: -9.572091102600098
    5. '   ' → logprob: -11.197091102600098
    6. '[]' → logprob: -11.447091102600098
    7. ' ' → logprob: -12.447091102600098
    8. '.append' → logprob: -12.572091102600098
    9. '  ' → logprob: -12.947091102600098
    10. ':' → logprob: -13.572091102600098

Token 523: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.313264399766922
    2. '[]
' → logprob: -1.3132643699645996
    3. ' []' → logprob: -13.813264846801758
    4. ' []
' → logprob: -14.063264846801758
    5. '[]

' → logprob: -14.063264846801758
    6. '[' → logprob: -16.688264846801758
    7. '[])
' → logprob: -18.438264846801758
    8. '[
' → logprob: -19.188264846801758
    9. '[]"' → logprob: -19.438264846801758
    10. '[]>' → logprob: -20.313264846801758

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009336916729807854
    2. ' for' → logprob: -4.759336948394775
    3. 'for' → logprob: -8.509336471557617
    4. '<|end|>' → logprob: -8.884336471557617
    5. '   ' → logprob: -9.134336471557617
    6. '
' → logprob: -9.509336471557617
    7. '        
' → logprob: -9.884336471557617
    8. ':' → logprob: -10.259336471557617
    9. '<|end|>' → logprob: -10.634336471557617
    10. '	for' → logprob: -11.259336471557617

Token 525: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001415618316968903
    2. ' for' → logprob: -9.250141143798828
    3. '       ' → logprob: -10.000141143798828
    4. '   ' → logprob: -17.625141143798828
    5. '	for' → logprob: -19.250141143798828
    6. '```' → logprob: -21.125141143798828
    7. ' ' → logprob: -21.500141143798828
    8. 'from' → logprob: -23.125141143798828
    9. '_for' → logprob: -23.250141143798828
    10. '
' → logprob: -23.625141143798828

Token 526: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.3413826525211334
    2. 'collection' → logprob: -1.341382622718811
    3. ' dataset' → logprob: -3.8413827419281006
    4. ' collection' → logprob: -5.0913825035095215
    5. 'dc' → logprob: -9.71638298034668
    6. 'ds' → logprob: -10.46638298034668
    7. 'data' → logprob: -10.96638298034668
    8. ' ds' → logprob: -12.21638298034668
    9. ' dc' → logprob: -13.09138298034668
    10. '   ' → logprob: -13.84138298034668

Token 527: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015072436071932316
    2. 'in' → logprob: -6.50150728225708
    3. '   ' → logprob: -12.626506805419922
    4. '       ' → logprob: -14.626506805419922
    5. ' ' → logprob: -15.126506805419922
    6. '    ' → logprob: -15.251506805419922
    7. '	in' → logprob: -15.376506805419922
    8. '  ' → logprob: -16.376506805419922
    9. 'import' → logprob: -17.001506805419922
    10. '        ' → logprob: -17.376506805419922

Token 528: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001170460251159966
    2. ' self' → logprob: -6.751170635223389
    3. '(self' → logprob: -15.75117015838623
    4. '   ' → logprob: -16.251171112060547
    5. '	self' → logprob: -18.751171112060547
    6. '       ' → logprob: -19.126171112060547
    7. ' ' → logprob: -19.376171112060547
    8. '[self' → logprob: -19.376171112060547
    9. '
' → logprob: -19.626171112060547
    10. 'this' → logprob: -19.876171112060547

Token 529: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.00012809180771000683
    2. '.datas' → logprob: -10.375127792358398
    3. 'datasets' → logprob: -10.500127792358398
    4. '.dat' → logprob: -10.750127792358398
    5. '.results' → logprob: -11.250127792358398
    6. ' .' → logprob: -11.250127792358398
    7. '.process' → logprob: -11.625127792358398
    8. '.' → logprob: -12.250127792358398
    9. '.s' → logprob: -12.500127792358398
    10. '.dataset' → logprob: -13.125127792358398

Token 530: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1131848469376564
    2. ':
' → logprob: -2.238184928894043
    3. '           ' → logprob: -8.113184928894043
    4. ',' → logprob: -10.863184928894043
    5. '):
' → logprob: -10.863184928894043
    6. ':
' → logprob: -12.363184928894043
    7. '       ' → logprob: -12.738184928894043
    8. '.' → logprob: -12.863184928894043
    9. '[' → logprob: -13.113184928894043
    10. ':

' → logprob: -13.113184928894043

Token 531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008708410896360874
    2. ' try' → logprob: -5.758708477020264
    3. ' results' → logprob: -6.383708477020264
    4. 'results' → logprob: -6.633708477020264
    5. '       ' → logprob: -6.758708477020264
    6. 'try' → logprob: -6.883708477020264
    7. '
' → logprob: -8.508708000183105
    8. 'result' → logprob: -10.258708000183105
    9. '```' → logprob: -10.258708000183105
    10. '   ' → logprob: -11.008708000183105

Token 532: ' score' (ID: 8429)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5258297324180603
    2. 'score' (adapté à ' score') → logprob: -1.525829792022705
    3. 'result' → logprob: -2.400829792022705
    4. ' results' → logprob: -3.025829792022705
    5. 'final' → logprob: -4.275829792022705
    6. ' score' → logprob: -4.400829792022705
    7. 'try' → logprob: -4.525829792022705
    8. ' result' → logprob: -4.900829792022705
    9. '           ' → logprob: -5.650829792022705
    10. ' try' → logprob: -5.775829792022705

Token 533: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2347409725189209
    2. '=' → logprob: -1.609740972518921
    3. '_value' → logprob: -4.7347412109375
    4. '_val' → logprob: -9.2347412109375
    5. 'value' → logprob: -9.3597412109375
    6. '_result' → logprob: -9.6097412109375
    7. 'final' → logprob: -9.8597412109375
    8. '_' → logprob: -9.9847412109375
    9. '_final' → logprob: -9.9847412109375
    10. 's' → logprob: -10.2347412109375

Token 534: ' dataset' (ID: 20830)
  Prédit: ' dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dataset' → logprob: -0.6931489706039429
    2. 'dataset' → logprob: -0.6931489706039429
    3. '(dataset' → logprob: -13.818148612976074
    4. 'ataset' → logprob: -14.443148612976074
    5. '.dataset' → logprob: -15.568148612976074
    6. '           ' → logprob: -17.56814956665039
    7. '_dataset' → logprob: -17.56814956665039
    8. 'score' → logprob: -18.69314956665039
    9. 'Dataset' → logprob: -18.69314956665039
    10. 'datasets' → logprob: -19.31814956665039

Token 535: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -1.4021237802808173e-05
    2. '.' → logprob: -11.250014305114746
    3. '.calculate' → logprob: -14.375014305114746
    4. 'compute' → logprob: -15.375014305114746
    5. ' .' → logprob: -15.625014305114746
    6. '.evaluate' → logprob: -17.37501335144043
    7. '.process' → logprob: -17.75001335144043
    8. '.get' → logprob: -19.12501335144043
    9. '.
' → logprob: -20.00001335144043
    10. '.collect' → logprob: -20.00001335144043

Token 536: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -4.5491004129871726e-05
    2. 'final' → logprob: -10.000045776367188
    3. '```' → logprob: -17.875045776367188
    4. ' final' → logprob: -18.250045776367188
    5. '_FINAL' → logprob: -19.125045776367188
    6. 'Final' → logprob: -19.500045776367188
    7. '__' → logprob: -19.625045776367188
    8. '	final' → logprob: -20.250045776367188
    9. '_finalize' → logprob: -20.250045776367188
    10. '_Final' → logprob: -20.875045776367188

Token 537: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.875000953674316
    3. 'score' → logprob: -16.5
    4. '_scores' → logprob: -17.25
    5. '_s' → logprob: -18.875
    6. ' _' → logprob: -19.125
    7. '_code' → logprob: -19.625
    8. '_SCORE' → logprob: -19.75
    9. '_
' → logprob: -20.0
    10. '_value' → logprob: -20.75

Token 538: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.47862496972084045
    2. '()' → logprob: -0.9786249399185181
    3. '           ' → logprob: -5.4786248207092285
    4. '()
' → logprob: -9.103625297546387
    5. '
' → logprob: -9.353625297546387
    6. ')' → logprob: -9.978625297546387
    7. '())' → logprob: -10.228625297546387
    8. 'results' → logprob: -10.478625297546387
    9. '())
' → logprob: -11.978625297546387
    10. ')
' → logprob: -11.978625297546387

Token 539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015640194760635495
    2. '
' → logprob: -7.001564025878906
    3. 'results' → logprob: -8.001564025878906
    4. ' results' → logprob: -8.251564025878906
    5. '       ' → logprob: -11.251564025878906
    6. '   ' → logprob: -11.501564025878906
    7. '<|end|>' → logprob: -11.626564025878906
    8. '	results' → logprob: -12.001564025878906
    9. '```' → logprob: -12.001564025878906
    10. '(results' → logprob: -12.501564025878906

Token 540: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.38937777280807495
    2. ' results' → logprob: -1.1393778324127197
    3. '           ' → logprob: -6.014377593994141
    4. '
' → logprob: -10.01437759399414
    5. '	results' → logprob: -11.26437759399414
    6. '.results' → logprob: -14.01437759399414
    7. '(results' → logprob: -14.76437759399414
    8. '_results' → logprob: -15.01437759399414
    9. '   ' → logprob: -15.01437759399414
    10. '       ' → logprob: -15.13937759399414

Token 541: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.88418151892256e-05
    2. '.' → logprob: -9.750059127807617
    3. '.extend' → logprob: -15.250059127807617
    4. ' .' → logprob: -15.500059127807617
    5. 'append' → logprob: -16.750059127807617
    6. '.app' → logprob: -17.250059127807617
    7. '.ap' → logprob: -18.125059127807617
    8. '       ' → logprob: -19.125059127807617
    9. '_append' → logprob: -19.750059127807617
    10. '.push' → logprob: -19.750059127807617

Token 542: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.00032259183353744447
    2. 'score' → logprob: -8.250322341918945
    3. '(str' → logprob: -9.750322341918945
    4. '(' → logprob: -12.875322341918945
    5. '(
' → logprob: -15.000322341918945
    6. ' score' → logprob: -16.125322341918945
    7. '(f' → logprob: -17.625322341918945
    8. 'str' → logprob: -17.750322341918945
    9. '(scores' → logprob: -18.125322341918945
    10. '	score' → logprob: -19.250322341918945

Token 543: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1438159942626953
    2. ')
' → logprob: -2.0188159942626953
    3. '       ' → logprob: -7.393815994262695
    4. '
' → logprob: -7.643815994262695
    5. '           ' → logprob: -11.268815994262695
    6. ')return' → logprob: -11.393815994262695
    7. ')

' → logprob: -12.143815994262695
    8. ')
' → logprob: -12.268815994262695
    9. '   ' → logprob: -12.268815994262695
    10. '<|end|>' → logprob: -13.768815994262695

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02414051443338394
    2. '
' → logprob: -4.274140357971191
    3. 'return' → logprob: -4.649140357971191
    4. ' return' → logprob: -8.149140357971191
    5. '   ' → logprob: -10.274140357971191
    6. '	' → logprob: -11.274140357971191
    7. '	return' → logprob: -11.774140357971191
    8. '
' → logprob: -12.149140357971191
    9. '        
' → logprob: -12.774140357971191
    10. '    
' → logprob: -13.524140357971191

Token 545: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011972199194133282
    2. '
' → logprob: -5.011972427368164
    3. '       ' → logprob: -5.511972427368164
    4. ' return' → logprob: -6.761972427368164
    5. '   ' → logprob: -10.386972427368164
    6. '	return' → logprob: -11.511972427368164
    7. '        
' → logprob: -12.386972427368164
    8. '    
' → logprob: -13.761972427368164
    9. '
' → logprob: -14.511972427368164
    10. ' 
' → logprob: -15.136972427368164

Token 546: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.006715370807796717
    2. ' results' → logprob: -5.006715297698975
    3. '	results' → logprob: -18.756715774536133
    4. '(results' → logprob: -18.881715774536133
    5. '
' → logprob: -21.756715774536133
    6. 'result' → logprob: -22.631715774536133
    7. '[' → logprob: -22.756715774536133
    8. 'Results' → logprob: -23.256715774536133
    9. '.results' → logprob: -23.381715774536133
    10. '_results' → logprob: -23.756715774536133

Token 547: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -6.992775888647884e-05
    2. ' run' → logprob: -10.375069618225098
    3. ' process' → logprob: -10.625069618225098
    4. ' solve' → logprob: -11.375069618225098
    5. 'main' → logprob: -13.500069618225098
    6. ' test' → logprob: -14.000069618225098
    7. ' solution' → logprob: -14.875069618225098
    8. ' parse' → logprob: -16.500070571899414
    9. ' example' → logprob: -17.125070571899414
    10. '	main' → logprob: -18.250070571899414

Token 550: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.735893965815194e-05
    2. '():
' → logprob: -11.375017166137695
    3. ' ():' → logprob: -12.125017166137695
    4. '()' → logprob: -15.500017166137695
    5. '_' → logprob: -16.625017166137695
    6. '():
' → logprob: -17.125017166137695
    7. ':' → logprob: -17.375017166137695
    8. '(":' → logprob: -18.125017166137695
    9. '().' → logprob: -18.625017166137695
    10. '(' → logprob: -18.875017166137695

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00901136826723814
    2. ' import' → logprob: -5.384011268615723
    3. 'import' → logprob: -5.634011268615723
    4. ' lines' → logprob: -7.509011268615723
    5. '	import' → logprob: -8.759011268615723
    6. '    ' → logprob: -10.134011268615723
    7. '	lines' → logprob: -11.134011268615723
    8. '<|end|>' → logprob: -11.384011268615723
    9. ' input' → logprob: -11.509011268615723
    10. '```' → logprob: -12.509011268615723

Token 552: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0028338877018541098
    2. 'import' (adapté à ' import') → logprob: -6.127833843231201
    3. ' lines' → logprob: -7.377833843231201
    4. ' processor' → logprob: -11.12783432006836
    5. ' input' → logprob: -12.37783432006836
    6. '   ' → logprob: -12.87783432006836
    7. ' if' → logprob: -14.75283432006836
    8. ' ic' → logprob: -14.87783432006836
    9. ' from' → logprob: -15.25283432006836
    10. ' i' → logprob: -15.75283432006836

Token 553: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00671584764495492
    2. 'sys' → logprob: -5.006715774536133
    3. '=sys' → logprob: -14.756715774536133
    4. '	sys' → logprob: -16.256715774536133
    5. '(sys' → logprob: -18.506715774536133
    6. '_sys' → logprob: -20.506715774536133
    7. ' ' → logprob: -21.256715774536133
    8. ' ' → logprob: -21.381715774536133
    9. '.sys' → logprob: -21.506715774536133
    10. '```' → logprob: -21.631715774536133

Token 554: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005334078334271908
    2. ' lines' → logprob: -6.13033390045166
    3. '    
' → logprob: -6.50533390045166
    4. '
' → logprob: -6.75533390045166
    5. '	lines' → logprob: -9.00533390045166
    6. 'input' → logprob: -9.25533390045166
    7. 'for' → logprob: -9.38033390045166
    8. 'lines' → logprob: -9.88033390045166
    9. ' for' → logprob: -10.38033390045166
    10. '(lines' → logprob: -10.75533390045166

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043777551501989365
    2. ' lines' → logprob: -3.1687774658203125
    3. 'lines' → logprob: -8.543777465820312
    4. '	lines' → logprob: -8.793777465820312
    5. 'input' → logprob: -9.043777465820312
    6. ' input' → logprob: -9.293777465820312
    7. '    
' → logprob: -9.418777465820312
    8. ' for' → logprob: -9.918777465820312
    9. 'for' → logprob: -10.668777465820312
    10. '_lines' → logprob: -11.293777465820312

Token 556: ' processor' (ID: 29539)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.3534391224384308
    2. 'lines' → logprob: -1.3534390926361084
    3. '   ' → logprob: -3.3534390926361084
    4. ' for' → logprob: -6.6034393310546875
    5. 'for' → logprob: -6.7284393310546875
    6. 'input' → logprob: -6.8534393310546875
    7. ' input' → logprob: -7.3534393310546875
    8. '	lines' → logprob: -9.103439331054688
    9. '_lines' → logprob: -10.603439331054688
    10. 'data' → logprob: -11.853439331054688

Token 557: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3885974586009979
    2. '=' → logprob: -1.1385974884033203
    3. '.' → logprob: -6.38859748840332
    4. '.process' → logprob: -10.26359748840332
    5. '.=' → logprob: -12.51359748840332
    6. ' ' → logprob: -12.63859748840332
    7. '   ' → logprob: -14.26359748840332
    8. ' =
' → logprob: -14.88859748840332
    9. '(process' → logprob: -15.38859748840332
    10. ')' → logprob: -15.51359748840332

Token 558: ' IC' (ID: 30492)
  Prédit: 'IC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IC' → logprob: -0.07888978719711304
    2. ' IC' → logprob: -2.578889846801758
    3. '<IC' → logprob: -17.328889846801758
    4. '_IC' → logprob: -18.078889846801758
    5. '(IC' → logprob: -19.828889846801758
    6. 'ic' → logprob: -20.328889846801758
    7. ' ' → logprob: -20.578889846801758
    8. 'IS' → logprob: -22.453889846801758
    9. '.IC' → logprob: -22.703889846801758
    10. ' ' → logprob: -22.703889846801758

Token 559: 'PC' (ID: 7349)
  Prédit: 'PC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PC' → logprob: -4.8590300139039755e-05
    2. 'P' → logprob: -10.000048637390137
    3. 'PCS' → logprob: -13.875048637390137
    4. 'PCB' → logprob: -14.500048637390137
    5. 'pc' → logprob: -14.750048637390137
    6. 'CP' → logprob: -14.875048637390137
    7. 'PCM' → logprob: -15.125048637390137
    8. 'PCR' → logprob: -15.750048637390137
    9. 'PCell' → logprob: -16.12504768371582
    10. 'PCI' → logprob: -16.12504768371582

Token 560: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -7.896309739408025e-07
    2. 'score' → logprob: -14.125000953674316
    3. '_score' → logprob: -17.75
    4. ' Score' → logprob: -18.125
    5. 'Scores' → logprob: -19.375
    6. 'S' → logprob: -19.5
    7. '_SCORE' → logprob: -19.5
    8. 'Processor' → logprob: -19.75
    9. '.Score' → logprob: -20.25
    10. 'processor' → logprob: -20.375

Token 561: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'processor' → logprob: -16.75
    3. ' processor' → logprob: -18.625
    4. ' Processor' → logprob: -19.5
    5. 'Process' → logprob: -20.625
    6. '_processor' → logprob: -21.375
    7. '   ' → logprob: -23.75
    8. 'rocess' → logprob: -24.875
    9. '.processor' → logprob: -25.0
    10. 'Processors' → logprob: -25.0

Token 562: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15939007699489594
    2. 'for' → logprob: -2.4093899726867676
    3. '
' → logprob: -4.034389972686768
    4. 'lines' → logprob: -4.159389972686768
    5. ' lines' → logprob: -4.534389972686768
    6. ' for' → logprob: -5.409389972686768
    7. 'processor' → logprob: -5.534389972686768
    8. '(lines' → logprob: -6.534389972686768
    9. '    
' → logprob: -6.659389972686768
    10. ' processor' → logprob: -6.909389972686768

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010730616049841046
    2. 'lines' → logprob: -8.001072883605957
    3. 'processor' → logprob: -8.251072883605957
    4. 'for' → logprob: -8.501072883605957
    5. ' lines' → logprob: -8.751072883605957
    6. '
' → logprob: -10.001072883605957
    7. '    
' → logprob: -10.251072883605957
    8. ' processor' → logprob: -11.626072883605957
    9. '	lines' → logprob: -11.751072883605957
    10. ' for' → logprob: -11.876072883605957

Token 564: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.04737022891640663
    2. 'lines' → logprob: -3.172370195388794
    3. ' processor' → logprob: -6.172370433807373
    4. '   ' → logprob: -6.797370433807373
    5. 'input' → logprob: -7.547370433807373
    6. ' lines' → logprob: -8.422369956970215
    7. 'for' → logprob: -8.922369956970215
    8. 'inputs' → logprob: -9.047369956970215
    9. 'data' → logprob: -9.297369956970215
    10. 'results' → logprob: -9.797369956970215

Token 565: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.750001907348633
    3. '.process' → logprob: -14.125001907348633
    4. 'parse' → logprob: -15.375001907348633
    5. '=parse' → logprob: -16.750001907348633
    6. '   ' → logprob: -18.625001907348633
    7. ' .' → logprob: -18.750001907348633
    8. '.import' → logprob: -19.000001907348633
    9. '.read' → logprob: -19.625001907348633
    10. '.load' → logprob: -19.750001907348633

Token 566: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -8.017927029868588e-05
    2. '(sys' → logprob: -10.000080108642578
    3. '_' → logprob: -10.875080108642578
    4. 'input' → logprob: -11.375080108642578
    5. 'sys' → logprob: -13.250080108642578
    6. '(' → logprob: -13.625080108642578
    7. '```' → logprob: -15.000080108642578
    8. '(_' → logprob: -15.375080108642578
    9. '_sys' → logprob: -16.000080108642578
    10. '(input' → logprob: -16.125080108642578

Token 567: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. 'sys' → logprob: -14.250001907348633
    4. '(list' → logprob: -16.250001907348633
    5. '(system' → logprob: -17.125001907348633
    6. '((' → logprob: -17.250001907348633
    7. '=sys' → logprob: -17.375001907348633
    8. '([' → logprob: -17.875001907348633
    9. ' sys' → logprob: -18.250001907348633
    10. '	sys' → logprob: -18.625001907348633

Token 568: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00023727134976070374
    2. '.argv' → logprob: -8.750237464904785
    3. '.' → logprob: -9.500237464904785
    4. '.stdout' → logprob: -13.250237464904785
    5. 'stdin' → logprob: -13.500237464904785
    6. '.std' → logprob: -14.750237464904785
    7. ' .' → logprob: -15.250237464904785
    8. '(stdin' → logprob: -17.00023651123047
    9. '   ' → logprob: -17.25023651123047
    10. '.__' → logprob: -17.37523651123047

Token 569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001694461447186768
    2. ')
' → logprob: -6.501694679260254
    3. '.readline' → logprob: -9.126694679260254
    4. '.readlines' → logprob: -9.751694679260254
    5. ' )' → logprob: -10.876694679260254
    6. '))' → logprob: -12.876694679260254
    7. '`)' → logprob: -13.751694679260254
    8. ')

' → logprob: -14.251694679260254
    9. '")' → logprob: -15.001694679260254
    10. '())' → logprob: -15.126694679260254

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008381000952795148
    2. 'results' → logprob: -7.250838279724121
    3. ' results' → logprob: -9.000838279724121
    4. 'outputs' → logprob: -13.500838279724121
    5. 'for' → logprob: -14.000838279724121
    6. '    
' → logprob: -14.250838279724121
    7. 'result' → logprob: -14.625838279724121
    8. ' for' → logprob: -14.750838279724121
    9. '
' → logprob: -14.875838279724121
    10. '	results' → logprob: -14.875838279724121

Token 571: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.007372826803475618
    2. ' results' → logprob: -5.507372856140137
    3. 'for' → logprob: -5.757372856140137
    4. ' for' → logprob: -9.882372856140137
    5. 'scores' → logprob: -10.007372856140137
    6. '   ' → logprob: -10.507372856140137
    7. 'result' → logprob: -12.507372856140137
    8. 'outputs' → logprob: -13.507372856140137
    9. '	results' → logprob: -15.007372856140137
    10. ' scores' → logprob: -15.382372856140137

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4757411479949951
    2. '=' → logprob: -0.9757411479949951
    3. '   ' → logprob: -7.475741386413574
    4. '.extend' → logprob: -8.475741386413574
    5. '.' → logprob: -8.600741386413574
    6. '_' → logprob: -8.850741386413574
    7. '[:]' → logprob: -9.350741386413574
    8. ':' → logprob: -9.475741386413574
    9. '.append' → logprob: -9.600741386413574
    10. ')' → logprob: -9.725741386413574

Token 573: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.5759397745132446
    2. ' processor' → logprob: -0.8259397745132446
    3. '   ' → logprob: -15.700940132141113
    4. '.processor' → logprob: -16.575939178466797
    5. 'processors' → logprob: -17.325939178466797
    6. 'process' → logprob: -17.575939178466797
    7. '(process' → logprob: -17.700939178466797
    8. 'results' → logprob: -17.950939178466797
    9. ' ' → logprob: -18.575939178466797
    10. ' processors' → logprob: -18.700939178466797

Token 574: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -12.625003814697266
    3. 'process' → logprob: -14.875003814697266
    4. ' .' → logprob: -16.000003814697266
    5. '.results' → logprob: -18.625003814697266
    6. ' process' → logprob: -19.250003814697266
    7. '.
' → logprob: -19.500003814697266
    8. '.print' → logprob: -19.625003814697266
    9. '.processor' → logprob: -19.750003814697266
    10. '	process' → logprob: -19.875003814697266

Token 575: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003164175897836685
    2. '
' → logprob: -6.003164291381836
    3. 'for' → logprob: -7.878164291381836
    4. ' for' → logprob: -8.503164291381836
    5. '    
' → logprob: -9.253164291381836
    6. '<|end|>' → logprob: -12.003164291381836
    7. '	for' → logprob: -13.253164291381836
    8. '  
' → logprob: -13.753164291381836
    9. ' 
' → logprob: -14.878164291381836
    10. '	
' → logprob: -15.628164291381836

Token 576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020497082732617855
    2. 'for' → logprob: -8.500205039978027
    3. ' for' → logprob: -13.875205039978027
    4. '
' → logprob: -15.000205039978027
    5. '	for' → logprob: -16.50020408630371
    6. '    
' → logprob: -16.87520408630371
    7. '```' → logprob: -18.25020408630371
    8. '       ' → logprob: -19.12520408630371
    9. '   ' → logprob: -21.37520408630371
    10. '<|end|>' → logprob: -21.50020408630371

Token 577: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005789781920611858
    2. '   ' → logprob: -5.255789756774902
    3. ' for' → logprob: -7.505789756774902
    4. '	for' → logprob: -12.505789756774902
    5. '
' → logprob: -13.005789756774902
    6. ' ' → logprob: -17.25579071044922
    7. '```' → logprob: -17.25579071044922
    8. '    
' → logprob: -17.38079071044922
    9. 'import' → logprob: -18.50579071044922
    10. 'print' → logprob: -18.75579071044922

Token 578: ' r' (ID: 428)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8783912062644958
    2. ' result' → logprob: -1.1283912658691406
    3. 'res' → logprob: -1.8783912658691406
    4. ' res' → logprob: -2.3783912658691406
    5. 'score' → logprob: -5.128391265869141
    6. ' score' → logprob: -5.378391265869141
    7. 'r' → logprob: -5.628391265869141
    8. ' r' → logprob: -6.628391265869141
    9. '   ' → logprob: -13.12839126586914
    10. ' ' → logprob: -14.50339126586914

Token 579: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2523948848247528
    2. 'es' → logprob: -1.5023949146270752
    3. ' es' → logprob: -8.627394676208496
    4. 'e' → logprob: -8.877394676208496
    5. 'ef' → logprob: -9.377394676208496
    6. ' ' → logprob: -10.252394676208496
    7. 'eturn' → logprob: -11.752394676208496
    8. 'in' → logprob: -12.627394676208496
    9. 'esize' → logprob: -12.877394676208496
    10. ' e' → logprob: -13.252394676208496

Token 580: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0031777136027812958
    2. ' results' → logprob: -5.753177642822266
    3. '	results' → logprob: -18.003177642822266
    4. '(results' → logprob: -18.378177642822266
    5. 'result' → logprob: -20.378177642822266
    6. '   ' → logprob: -21.003177642822266
    7. '.results' → logprob: -21.003177642822266
    8. '_results' → logprob: -21.003177642822266
    9. 'Results' → logprob: -21.253177642822266
    10. '
' → logprob: -22.128177642822266

Token 581: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014557128306478262
    2. 'print' → logprob: -7.501455783843994
    3. ':
' → logprob: -7.626455783843994
    4. '.' → logprob: -9.501455307006836
    5. '   ' → logprob: -9.501455307006836
    6. ' print' → logprob: -9.501455307006836
    7. '.print' → logprob: -9.751455307006836
    8. ',' → logprob: -9.751455307006836
    9. '.println' → logprob: -11.126455307006836
    10. ' in' → logprob: -11.251455307006836

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029947757720947266
    2. 'print' → logprob: -3.5299477577209473
    3. ' print' → logprob: -8.654947280883789
    4. '   ' → logprob: -10.779947280883789
    5. '```' → logprob: -13.279947280883789
    6. '           ' → logprob: -15.904947280883789
    7. '	print' → logprob: -17.02994728088379
    8. '      ' → logprob: -17.15494728088379
    9. '`' → logprob: -17.27994728088379
    10. '     ' → logprob: -17.40494728088379

Token 583: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005660186288878322
    2. ' print' → logprob: -7.500566005706787
    3. '   ' → logprob: -11.250566482543945
    4. '```' → logprob: -18.000566482543945
    5. '	print' → logprob: -19.500566482543945
    6. '
' → logprob: -19.750566482543945
    7. '       ' → logprob: -20.000566482543945
    8. 'println' → logprob: -22.125566482543945
    9. 'pr' → logprob: -22.500566482543945
    10. 'printf' → logprob: -22.625566482543945

Token 584: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.375011444091797
    3. 'r' → logprob: -15.625011444091797
    4. '(f' → logprob: -17.125011444091797
    5. '()' → logprob: -17.750011444091797
    6. '(
' → logprob: -19.125011444091797
    7. '(int' → logprob: -20.125011444091797
    8. ' r' → logprob: -20.625011444091797
    9. '((' → logprob: -21.000011444091797
    10. ' (' → logprob: -21.625011444091797

Token 585: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -15.875
    3. ' )' → logprob: -17.875
    4. '())' → logprob: -18.875
    5. ')`' → logprob: -19.375
    6. '()' → logprob: -19.75
    7. '))' → logprob: -20.0
    8. '')' → logprob: -21.125
    9. '")' → logprob: -21.5
    10. '),' → logprob: -21.625

Token 586: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.173704271830502e-06
    2. ' if' → logprob: -12.87500286102295
    3. 'main' → logprob: -15.37500286102295
    4. '```' → logprob: -15.62500286102295
    5. '#' → logprob: -15.75000286102295
    6. '__' → logprob: -17.750003814697266
    7. '
' → logprob: -18.125003814697266
    8. '<|end|>' → logprob: -19.000003814697266
    9. '#if' → logprob: -19.625003814697266
    10. '\' → logprob: -19.875003814697266

Token 587: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01955888234078884
    2. '__' → logprob: -4.019558906555176
    3. '_name' → logprob: -6.894558906555176
    4. '_' → logprob: -8.019558906555176
    5. 'name' → logprob: -10.644558906555176
    6. ' ' → logprob: -10.644558906555176
    7. '___' → logprob: -12.019558906555176
    8. ' ' → logprob: -12.894558906555176
    9. ' name' → logprob: -13.144558906555176
    10. ' _' → logprob: -13.144558906555176

Token 588: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.040639616549015045
    2. ' ==' → logprob: -3.540639638900757
    3. '==' → logprob: -4.790639400482178
    4. ' __' → logprob: -7.540639400482178
    5. '__.__' → logprob: -7.540639400482178
    6. '=="' → logprob: -7.915639400482178
    7. '.__' → logprob: -8.040639877319336
    8. 'name' → logprob: -8.165639877319336
    9. '__.' → logprob: -8.415639877319336
    10. '=='' → logprob: -9.665639877319336

Token 589: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.372294698550832e-06
    2. '==' → logprob: -11.750009536743164
    3. ' ==' → logprob: -14.375009536743164
    4. '__.__' → logprob: -14.625009536743164
    5. '___' → logprob: -16.500009536743164
    6. 'name' → logprob: -16.625009536743164
    7. '____' → logprob: -17.000009536743164
    8. '__
' → logprob: -17.250009536743164
    9. '__.' → logprob: -17.500009536743164
    10. '_' → logprob: -18.000009536743164

Token 590: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.43031734228134155
    2. '__' → logprob: -1.1803174018859863
    3. ' ==' → logprob: -3.1803174018859863
    4. '=="' → logprob: -7.180317401885986
    5. '=='' → logprob: -8.805316925048828
    6. '=' → logprob: -10.680316925048828
    7. '_' → logprob: -12.805316925048828
    8. '===' → logprob: -12.930316925048828
    9. '==
' → logprob: -13.430316925048828
    10. '___' → logprob: -13.680316925048828

Token 591: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018163522705435753
    2. ''' → logprob: -4.018163681030273
    3. ' "__' → logprob: -11.268163681030273
    4. '__' → logprob: -14.643163681030273
    5. ' '__' → logprob: -15.518163681030273
    6. '"name' → logprob: -16.643163681030273
    7. '"user' → logprob: -16.893163681030273
    8. ''"' → logprob: -17.018163681030273
    9. '("__' → logprob: -18.143163681030273
    10. '"class' → logprob: -18.268163681030273

Token 592: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3876451551914215
    2. '__' → logprob: -1.1376451253890991
    3. '"' → logprob: -7.637645244598389
    4. 'name' → logprob: -8.26264476776123
    5. ''' → logprob: -10.88764476776123
    6. '__":
' → logprob: -12.63764476776123
    7. ' main' → logprob: -12.76264476776123
    8. '__
' → logprob: -12.76264476776123
    9. '_main' → logprob: -13.76264476776123
    10. '___' → logprob: -13.88764476776123

Token 593: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.25233522057533264
    2. '__' → logprob: -1.5023351907730103
    3. '__':
' → logprob: -7.877335071563721
    4. '__.' → logprob: -11.377335548400879
    5. '__
' → logprob: -12.252335548400879
    6. '__:' → logprob: -12.502335548400879
    7. '__.__' → logprob: -12.627335548400879
    8. '__["' → logprob: -13.252335548400879
    9. '__
' → logprob: -14.002335548400879
    10. '_' → logprob: -15.127335548400879

Token 594: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002075933152809739
    2. '__' → logprob: -8.750207901000977
    3. ' main' → logprob: -10.000207901000977
    4. '	main' → logprob: -13.250207901000977
    5. '_main' → logprob: -13.750207901000977
    6. '   ' → logprob: -14.000207901000977
    7. '(main' → logprob: -17.500207901000977
    8. '____' → logprob: -18.000207901000977
    9. '___' → logprob: -18.500207901000977
    10. '    
' → logprob: -18.750207901000977

Token 595: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.0
    3. '	main' → logprob: -21.5
    4. '   ' → logprob: -22.0
    5. '.main' → logprob: -26.125
    6. '(main' → logprob: -26.375
    7. '_main' → logprob: -26.875
    8. 'import' → logprob: -28.375
    9. '  ' → logprob: -29.0
    10. 'ma' → logprob: -29.125

Token 596: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7098106741905212
    2. '<|end|>' → logprob: -0.7098106741905212
    3. '```' → logprob: -4.959810733795166
    4. '#' → logprob: -5.709810733795166
    5. '<|end|>' → logprob: -6.584810733795166
    6. ')' → logprob: -6.834810733795166
    7. '
' → logprob: -7.084810733795166
    8. '(' → logprob: -7.084810733795166
    9. '(True' → logprob: -7.334810733795166
    10. ':' → logprob: -8.209810256958008


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 594
Tokens correctement prédits (1ère position, stricte): 301
Tokens correctement prédits (1ère position, avec adaptation): 332
Tokens correctement prédits (top 10): 522
Précision stricte (1ère position): 50.67%
Précision adaptée (1ère position): 55.89%
Précision (top 10): 87.88%
================================================================================
