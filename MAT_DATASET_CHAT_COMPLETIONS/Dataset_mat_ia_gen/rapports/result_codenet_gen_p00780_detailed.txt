================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Programme pour résoudre le problème de la conjecture de Goldbach
# Pour chaque nombre pair donné en entrée, on calcule le nombre de paires de nombres premiers (p1, p2) telles que p1 + p2 = n.
# On ne compte chaque paire qu'une seule fois, c'est-à-dire (p1, p2) et (p2, p1) ne sont pas deux paires distinctes.

import sys

def sieve_of_eratosthenes(limit):
    """
    Crée une liste indiquant si un nombre est premier ou non jusqu'à la limite donnée.
    Utilisation du crible d'Ératosthène pour générer efficacement les nombres premiers.
    """
    is_prime = [True] * (limit + 1)
    is_prime[0], is_prime[1] = False, False
    for number in range(2, int(limit**0.5) + 1):
        if is_prime[number]:
            for multiple in range(number*number, limit + 1, number):
                is_prime[multiple] = False
    return is_prime

def count_goldbach_pairs(n, is_prime):
    """
    Compte le nombre de paires de nombres premiers (p1, p2) telles que p1 + p2 = n.
    On garantie p1 <= p2 pour éviter de compter deux fois la même paire.
    """
    count = 0
    for p1 in range(2, n//2 + 1):
        p2 = n - p1
        if is_prime[p1] and is_prime[p2]:
            count += 1
    return count

def main():
    # Comme la limite maximale d'entrée est < 2^15 (32768), on pré-calculera les nombres premiers jusqu'à cette limite.
    MAX_LIMIT = 32768
    is_prime = sieve_of_eratosthenes(MAX_LIMIT)

    for line in sys.stdin:
        line = line.strip()
        if line == '0':
            # Fin de lecture des entrées
            break
        n = int(line)
        # Calcul et affichage du nombre de paires pour n
        print(count_goldbach_pairs(n, is_prime))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Programme' (ID: 50667)
  → Token d'amorce (pas de prédiction)

Token 2: ' pour' (ID: 1930)
  → Token d'amorce (pas de prédiction)

Token 3: ' résoudre' (ID: 134006)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.12858141958713531
    2. ' afficher' → logprob: -2.8785815238952637
    3. ' compter' → logprob: -3.6285815238952637
    4. 'calcul' → logprob: -3.8785815238952637
    5. ' l' → logprob: -5.753581523895264
    6. ' le' → logprob: -6.003581523895264
    7. ' convertir' → logprob: -6.003581523895264
    8. ' tr' → logprob: -7.128581523895264
    9. ' analyser' → logprob: -7.253581523895264
    10. ' écrire' → logprob: -7.378581523895264

Token 4: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2460901290178299
    2. 'le' → logprob: -2.2460901737213135
    3. ' un' → logprob: -2.6210901737213135
    4. ' ' → logprob: -4.246089935302734
    5. ' de' → logprob: -5.496089935302734
    6. ' les' → logprob: -5.496089935302734
    7. ' l' → logprob: -5.746089935302734
    8. ' des' → logprob: -6.121089935302734
    9. ' la' → logprob: -6.496089935302734
    10. ' une' → logprob: -6.496089935302734

Token 5: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.5944231152534485
    2. ' sudoku' → logprob: -2.2194230556488037
    3. 's' → logprob: -2.7194230556488037
    4. '```' → logprob: -2.8444230556488037
    5. 'pro' → logprob: -3.0944230556488037
    6. '#' → logprob: -3.5944230556488037
    7. ' ' → logprob: -3.9694230556488037
    8. ' système' → logprob: -3.9694230556488037
    9. ' Sudoku' → logprob: -4.469423294067383
    10. ' plus' → logprob: -4.469423294067383

Token 6: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15320773422718048
    2. '_' → logprob: -2.903207778930664
    3. ':' → logprob: -3.153207778930664
    4. '.' → logprob: -4.403207778930664
    5. ' :' → logprob: -4.778207778930664
    6. ' d' → logprob: -5.153207778930664
    7. '#' → logprob: -5.778207778930664
    8. 's' → logprob: -5.903207778930664
    9. ' de' → logprob: -6.403207778930664
    10. '```' → logprob: -6.528207778930664

Token 7: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.21509180963039398
    2. 'l' → logprob: -2.3400917053222656
    3. 'n' → logprob: -3.2150917053222656
    4. 's' → logprob: -3.9650917053222656
    5. 'placement' → logprob: -4.840091705322266
    6. 'las' → logprob: -5.215091705322266
    7. ' la' → logprob: -5.340091705322266
    8. '```' → logprob: -5.715091705322266
    9. 'r' → logprob: -5.840091705322266
    10. 'd' → logprob: -6.465091705322266

Token 8: ' conject' (ID: 179832)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.7955108880996704
    2. 's' → logprob: -1.0455108880996704
    3. 'fer' → logprob: -3.170510768890381
    4. 'plus' → logprob: -3.545510768890381
    5. 're' → logprob: -3.795510768890381
    6. 'n' → logprob: -4.295510768890381
    7. 't' → logprob: -4.420510768890381
    8. 'voy' → logprob: -4.670510768890381
    9. 'vie' → logprob: -5.170510768890381
    10. 'voie' → logprob: -5.420510768890381

Token 9: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.0011309286346659064
    2. 'ur' → logprob: -7.001131057739258
    3. 'u' → logprob: -8.501131057739258
    4. 'urre' → logprob: -12.251131057739258
    5. 'urne' → logprob: -13.126131057739258
    6. 'urde' → logprob: -13.501131057739258
    7. 'uret' → logprob: -13.751131057739258
    8. 'ue' → logprob: -13.876131057739258
    9. 'e' → logprob: -14.001131057739258
    10. 'ural' → logprob: -14.126131057739258

Token 10: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2464337944984436
    2. ' de' → logprob: -1.6214337348937988
    3. 'd' → logprob: -4.246433734893799
    4. '_de' → logprob: -5.746433734893799
    5. '```' → logprob: -6.871433734893799
    6. '#' → logprob: -7.496433734893799
    7. 's' → logprob: -7.746433734893799
    8. ' d' → logprob: -7.996433734893799
    9. 'des' → logprob: -8.996434211730957
    10. 'u' → logprob: -9.371434211730957

Token 11: ' Gold' (ID: 9833)
  Prédit: 'Coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Coll' → logprob: -0.018553616479039192
    2. 'coll' → logprob: -4.268553733825684
    3. ' Syracuse' → logprob: -6.518553733825684
    4. 'Gold' → logprob: -7.143553733825684
    5. 'S' → logprob: -7.268553733825684
    6. 's' → logprob: -7.518553733825684
    7. ' Coll' → logprob: -8.018553733825684
    8. '3' → logprob: -8.518553733825684
    9. '_coll' → logprob: -8.768553733825684
    10. ' coll' → logprob: -10.768553733825684

Token 12: 'bach' (ID: 37754)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7355862855911255
    2. ' ' → logprob: -1.2355862855911255
    3. ' #' → logprob: -2.610586166381836
    4. ' :' → logprob: -2.860586166381836
    5. ':' → logprob: -3.110586166381836
    6. 's' → logprob: -4.360586166381836
    7. 'e' → logprob: -5.110586166381836
    8. 'u' → logprob: -5.110586166381836
    9. '```' → logprob: -5.110586166381836
    10. 'def' → logprob: -5.235586166381836

Token 13: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.889612078666687
    2. '#' → logprob: -1.889612078666687
    3. 'def' → logprob: -2.1396121978759766
    4. ' ' → logprob: -2.5146121978759766
    5. ' :' → logprob: -2.5146121978759766
    6. ''' → logprob: -2.6396121978759766
    7. '.' → logprob: -3.5146121978759766
    8. '```' → logprob: -4.139612197875977
    9. 's' → logprob: -5.014612197875977
    10. ',' → logprob: -5.264612197875977

Token 14: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7296848297119141
    2. ' :' → logprob: -1.479684829711914
    3. ':' → logprob: -2.354684829711914
    4. 'def' → logprob: -2.604684829711914
    5. '#' → logprob: -3.229684829711914
    6. ' #' → logprob: -3.979684829711914
    7. ' def' → logprob: -4.229684829711914
    8. ''' → logprob: -4.604684829711914
    9. '```' → logprob: -4.729684829711914
    10. 's' → logprob: -5.604684829711914

Token 15: ' Pour' (ID: 13931)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04068882763385773
    2. ' def' → logprob: -3.6656887531280518
    3. ' ```' → logprob: -5.165688991546631
    4. ' #' → logprob: -5.915688991546631
    5. 'def' → logprob: -6.040688991546631
    6. ' import' → logprob: -7.790688991546631
    7. ' )' → logprob: -7.790688991546631
    8. ' 

' → logprob: -7.915688991546631
    9. ' ,' → logprob: -8.290688514709473
    10. ' ' → logprob: -8.415688514709473

Token 16: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.5300471782684326
    2. ' trouver' → logprob: -1.9050471782684326
    3. ' résoudre' → logprob: -2.0300471782684326
    4. ' ' → logprob: -2.1550471782684326
    5. ' compléter' → logprob: -2.7800471782684326
    6. ' continuer' → logprob: -3.0300471782684326
    7. ' vérifier' → logprob: -3.2800471782684326
    8. ' n' → logprob: -3.6550471782684326
    9. ' tout' → logprob: -4.030047416687012
    10. ' i' → logprob: -4.155047416687012

Token 17: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.18772383034229279
    2. 'nombre' → logprob: -2.3127238750457764
    3. ' ' → logprob: -2.8127238750457764
    4. ' entier' → logprob: -5.187723636627197
    5. 'n' → logprob: -5.937723636627197
    6. ' n' → logprob: -6.312723636627197
    7. ' ' → logprob: -7.437723636627197
    8. ' nombres' → logprob: -7.687723636627197
    9. '  ' → logprob: -9.062724113464355
    10. ' paire' → logprob: -9.187724113464355

Token 18: ' pair' (ID: 10610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017454219982028008
    2. ' ' → logprob: -5.017454147338867
    3. ' pair' → logprob: -6.017454147338867
    4. 'pair' → logprob: -6.517454147338867
    5. ' n' → logprob: -6.892454147338867
    6. '  ' → logprob: -7.267454147338867
    7. ',' → logprob: -7.392454147338867
    8. '  ' → logprob: -7.517454147338867
    9. ' ,' → logprob: -7.517454147338867
    10. '```' → logprob: -7.517454147338867

Token 19: ' donné' (ID: 52079)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25697001814842224
    2. ' ,' → logprob: -1.6319700479507446
    3. ',' → logprob: -3.631969928741455
    4. ' n' → logprob: -6.256969928741455
    5. ' ' → logprob: -7.381969928741455
    6. ' :' → logprob: -7.506969928741455
    7. ' pair' → logprob: -8.256970405578613
    8. ' i' → logprob: -8.756970405578613
    9. '  ' → logprob: -8.881970405578613
    10. ' ```' → logprob: -9.131970405578613

Token 20: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5204553008079529
    2. ' ,' → logprob: -1.1454553604125977
    3. ' :' → logprob: -2.8954553604125977
    4. ' ' → logprob: -3.8954553604125977
    5. ':' → logprob: -4.520455360412598
    6. ' ' → logprob: -7.645455360412598
    7. ' #' → logprob: -9.270455360412598
    8. 'n' → logprob: -9.520455360412598
    9. 's' → logprob: -9.770455360412598
    10. ' :
' → logprob: -9.895455360412598

Token 21: ' entrée' (ID: 95590)
  Prédit: ' entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entrée' → logprob: -0.2573542296886444
    2. ' input' → logprob: -2.257354259490967
    3. ' ' → logprob: -2.632354259490967
    4. 'entrée' → logprob: -3.632354259490967
    5. ' l' → logprob: -5.007354259490967
    6. ' entr' → logprob: -5.632354259490967
    7. '```' → logprob: -6.507354259490967
    8. '_' → logprob: -6.632354259490967
    9. ' entree' → logprob: -6.757354259490967
    10. '  ' → logprob: -6.757354259490967

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2656921446323395
    2. ' ,' → logprob: -2.3906922340393066
    3. ':' → logprob: -2.5156922340393066
    4. ' :' → logprob: -3.3906922340393066
    5. ' ' → logprob: -3.7656922340393066
    6. ' ' → logprob: -6.890692234039307
    7. 'n' → logprob: -7.140692234039307
    8. ',
' → logprob: -7.765692234039307
    9. '#' → logprob: -8.515691757202148
    10. ' :
' → logprob: -8.640691757202148

Token 23: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5548415184020996
    2. ' ' → logprob: -1.4298415184020996
    3. ' je' → logprob: -2.6798415184020996
    4. ' continuer' → logprob: -3.8048415184020996
    5. ' #' → logprob: -3.9298415184020996
    6. ' afficher' → logprob: -4.0548415184021
    7. ' vérifier' → logprob: -4.4298415184021
    8. ' ' → logprob: -4.9298415184021
    9. ' calcul' → logprob: -4.9298415184021
    10. ' n' → logprob: -5.4298415184021

Token 24: ' calc' (ID: 25691)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8108446002006531
    2. ' vér' → logprob: -1.0608446598052979
    3. ' affiche' → logprob: -2.435844659805298
    4. 'cherche' → logprob: -3.560844659805298
    5. ' cherche' → logprob: -3.685844659805298
    6. ' v' → logprob: -4.685844421386719
    7. ' teste' → logprob: -5.060844421386719
    8. ' recherche' → logprob: -5.185844421386719
    9. ' vérifier' → logprob: -5.435844421386719
    10. ' ' → logprob: -5.435844421386719

Token 25: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0180014967918396
    2. 'ul' → logprob: -4.518001556396484
    3. 'uler' → logprob: -5.518001556396484
    4. '#' → logprob: -6.268001556396484
    5. 'cule' → logprob: -7.768001556396484
    6. 'ulé' → logprob: -7.768001556396484
    7. 'l' → logprob: -10.393001556396484
    8. 'ulte' → logprob: -10.768001556396484
    9. 'u' → logprob: -11.143001556396484
    10. 'ulaire' → logprob: -11.518001556396484

Token 26: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0858490467071533
    2. ' s' → logprob: -1.4608490467071533
    3. ' la' → logprob: -1.8358490467071533
    4. 's' → logprob: -2.5858490467071533
    5. ' les' → logprob: -2.8358490467071533
    6. ' l' → logprob: -3.0858490467071533
    7. 'les' → logprob: -4.460848808288574
    8. ' ' → logprob: -4.460848808288574
    9. ' si' → logprob: -4.835848808288574
    10. ' le' → logprob: -4.835848808288574

Token 27: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.47967529296875
    2. 's' → logprob: -1.47967529296875
    3. ' ' → logprob: -2.60467529296875
    4. 'nombre' → logprob: -3.72967529296875
    5. ' nombres' → logprob: -4.72967529296875
    6. ' plus' → logprob: -5.47967529296875
    7. ' premier' → logprob: -5.60467529296875
    8. ' couple' → logprob: -5.72967529296875
    9. ' s' → logprob: -5.85467529296875
    10. 'u' → logprob: -5.85467529296875

Token 28: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8869184851646423
    2. ' de' → logprob: -1.261918544769287
    3. 's' → logprob: -1.636918544769287
    4. ' d' → logprob: -3.136918544769287
    5. '_' → logprob: -4.261918544769287
    6. '(s' → logprob: -4.636918544769287
    7. '<|end|>' → logprob: -4.761918544769287
    8. 'd' → logprob: -5.261918544769287
    9. ' s' → logprob: -5.261918544769287
    10. '  ' → logprob: -5.386918544769287

Token 29: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11732350289821625
    2. ' façons' → logprob: -2.617323398590088
    3. ' man' → logprob: -3.617323398590088
    4. ' p' → logprob: -5.617323398590088
    5. '  ' → logprob: -6.492323398590088
    6. 's' → logprob: -6.617323398590088
    7. ' ways' → logprob: -6.617323398590088
    8. ' espaces' → logprob: -7.742323398590088
    9. ' ' → logprob: -8.117323875427246
    10. ' s' → logprob: -8.117323875427246

Token 30: 'aires' (ID: 8507)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.37583160400390625
    2. 'a' → logprob: -1.3758316040039062
    3. 'aires' → logprob: -3.5008316040039062
    4. 'airs' → logprob: -3.8758316040039062
    5. 'air' → logprob: -5.625831604003906
    6. 'ai' → logprob: -7.125831604003906
    7. 'i' → logprob: -7.250831604003906
    8. 'l' → logprob: -7.500831604003906
    9. '```' → logprob: -7.500831604003906
    10. ' ' → logprob: -7.750831604003906

Token 31: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7832278609275818
    2. ' de' → logprob: -0.7832278609275818
    3. '_' → logprob: -2.7832279205322266
    4. '_de' → logprob: -4.908227920532227
    5. 'de' → logprob: -5.408227920532227
    6. '  ' → logprob: -6.533227920532227
    7. '<|end|>' → logprob: -6.533227920532227
    8. ' ,' → logprob: -6.658227920532227
    9. ' (' → logprob: -6.658227920532227
    10. '_s' → logprob: -7.533227920532227

Token 32: ' nombres' (ID: 76205)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.3341832458972931
    2. 's' → logprob: -2.3341832160949707
    3. ' ' → logprob: -2.3341832160949707
    4. ' s' → logprob: -4.209183216094971
    5. ' nombres' → logprob: -4.709183216094971
    6. 'esp' → logprob: -4.834183216094971
    7. '<|end|>' → logprob: -5.084183216094971
    8. 'n' → logprob: -5.209183216094971
    9. ' p' → logprob: -5.209183216094971
    10. ' spaces' → logprob: -5.459183216094971

Token 33: ' premiers' (ID: 59140)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0946723222732544
    2. ' premiers' → logprob: -1.2196723222732544
    3. 'prem' → logprob: -1.4696723222732544
    4. '<|end|>' → logprob: -3.094672203063965
    5. ' ' → logprob: -4.719672203063965
    6. ' p' → logprob: -4.844672203063965
    7. ' espaces' → logprob: -5.094672203063965
    8. '```' → logprob: -5.219672203063965
    9. ' prém' → logprob: -5.469672203063965
    10. ' pairs' → logprob: -5.469672203063965

Token 34: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10375196486711502
    2. ' :' → logprob: -3.9787518978118896
    3. ',' → logprob: -4.353752136230469
    4. 'def' → logprob: -4.478752136230469
    5. ':' → logprob: -4.603752136230469
    6. ' ,' → logprob: -4.603752136230469
    7. ' 

' → logprob: -4.978752136230469
    8. '```' → logprob: -5.103752136230469
    9. ' ```' → logprob: -5.353752136230469
    10. '_' → logprob: -5.728752136230469

Token 35: 'p' (ID: 79)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.2814101278781891
    2. ')' → logprob: -1.4064100980758667
    3. ' ' → logprob: -9.406410217285156
    4. ' qui' → logprob: -10.156410217285156
    5. ',' → logprob: -10.406410217285156
    6. ' )
' → logprob: -10.906410217285156
    7. ' ' → logprob: -11.156410217285156
    8. ' ,' → logprob: -11.281410217285156
    9. 'qui' → logprob: -11.656410217285156
    10. '')' → logprob: -11.781410217285156

Token 36: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08347772806882858
    2. ')' → logprob: -3.833477735519409
    3. ',' → logprob: -4.08347749710083
    4. ' ' → logprob: -4.33347749710083
    5. 'u' → logprob: -4.58347749710083
    6. '_' → logprob: -5.20847749710083
    7. 'a' → logprob: -5.45847749710083
    8. ' ,' → logprob: -5.70847749710083
    9. ' )' → logprob: -6.58347749710083
    10. ''' → logprob: -6.95847749710083

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03822096064686775
    2. ' ,' → logprob: -3.2882208824157715
    3. ',p' → logprob: -9.78822135925293
    4. ')' → logprob: -10.28822135925293
    5. ' ' → logprob: -10.53822135925293
    6. '1' → logprob: -10.78822135925293
    7. '```' → logprob: -11.78822135925293
    8. ' p' → logprob: -12.16322135925293
    9. ' ' → logprob: -12.78822135925293
    10. ',)' → logprob: -12.78822135925293

Token 38: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6851388216018677
    2. ' ,' → logprob: -1.4351388216018677
    3. 'p' → logprob: -1.5601388216018677
    4. ',' → logprob: -3.560138702392578
    5. ' ' → logprob: -4.060138702392578
    6. ',p' → logprob: -6.560138702392578
    7. ' )' → logprob: -8.435138702392578
    8. ' ' → logprob: -8.810138702392578
    9. ')' → logprob: -9.185138702392578
    10. '  ' → logprob: -9.685138702392578

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002774246677290648
    2. 'r' → logprob: -8.500277519226074
    3. '1' → logprob: -9.625277519226074
    4. ',' → logprob: -12.000277519226074
    5. ',)' → logprob: -14.875277519226074
    6. '₂' → logprob: -15.000277519226074
    7. '_' → logprob: -15.625277519226074
    8. '_r' → logprob: -16.000276565551758
    9. ' ' → logprob: -16.125276565551758
    10. '```' → logprob: -16.125276565551758

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020818933262489736
    2. ' )' → logprob: -8.500207901000977
    3. ' ' → logprob: -13.875207901000977
    4. ',' → logprob: -13.875207901000977
    5. ' ' → logprob: -13.875207901000977
    6. ')#' → logprob: -14.250207901000977
    7. '),' → logprob: -14.625207901000977
    8. ')`' → logprob: -15.750207901000977
    9. '=' → logprob: -16.000207901000977
    10. ')
' → logprob: -16.500207901000977

Token 41: ' telles' (ID: 83154)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31001585721969604
    2. ' :' → logprob: -1.8100159168243408
    3. ':' → logprob: -2.935015916824341
    4. ',' → logprob: -4.560015678405762
    5. '```' → logprob: -4.810015678405762
    6. ' ,' → logprob: -4.935015678405762
    7. ' ```' → logprob: -5.185015678405762
    8. ' =' → logprob: -5.310015678405762
    9. ')' → logprob: -5.810015678405762
    10. ' )' → logprob: -6.060015678405762

Token 42: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3228147029876709
    2. ' ' → logprob: -1.572814702987671
    3. 'que' → logprob: -3.697814702987671
    4. '#' → logprob: -3.697814702987671
    5. ' that' → logprob: -5.19781494140625
    6. '_' → logprob: -5.57281494140625
    7. ''' → logprob: -6.19781494140625
    8. ' #' → logprob: -6.44781494140625
    9. '```' → logprob: -6.69781494140625
    10. ' ' → logprob: -6.82281494140625

Token 43: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.029784398153424263
    2. 'p' → logprob: -3.5297844409942627
    3. ' ' → logprob: -10.779784202575684
    4. ' ' → logprob: -12.154784202575684
    5. ' leur' → logprob: -13.654784202575684
    6. '(p' → logprob: -13.904784202575684
    7. ' (' → logprob: -14.404784202575684
    8. '```' → logprob: -14.404784202575684
    9. '<|end|>' → logprob: -14.529784202575684
    10. ' la' → logprob: -14.654784202575684

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6927407383918762
    2. '_' → logprob: -0.8177407383918762
    3. 'r' → logprob: -3.1927406787872314
    4. ' ' → logprob: -4.5677409172058105
    5. ' _' → logprob: -6.0677409172058105
    6. 'u' → logprob: -7.1927409172058105
    7. '_r' → logprob: -7.1927409172058105
    8. ',' → logprob: -7.4427409172058105
    9. 'i' → logprob: -7.4427409172058105
    10. '=' → logprob: -7.5677409172058105

Token 45: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11285275965929031
    2. '+' → logprob: -2.2378528118133545
    3. ' <=' → logprob: -11.737853050231934
    4. ',' → logprob: -12.362853050231934
    5. '<=' → logprob: -12.737853050231934
    6. ' +
' → logprob: -12.737853050231934
    7. ' ' → logprob: -13.112853050231934
    8. ' ,' → logprob: -13.487853050231934
    9. ' *' → logprob: -13.737853050231934
    10. '＋' → logprob: -13.987853050231934

Token 46: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.03018084168434143
    2. 'p' → logprob: -3.5301809310913086
    3. ' ' → logprob: -8.280180931091309
    4. '_' → logprob: -9.155180931091309
    5. ' _' → logprob: -10.280180931091309
    6. '_p' → logprob: -11.405180931091309
    7. ' ' → logprob: -12.155180931091309
    8. '=' → logprob: -12.280180931091309
    9. ' =' → logprob: -13.280180931091309
    10. '<|end|>' → logprob: -13.530180931091309

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009627534076571465
    2. '_' → logprob: -5.134627342224121
    3. '1' → logprob: -5.634627342224121
    4. 'r' → logprob: -10.134627342224121
    5. ' ' → logprob: -10.509627342224121
    6. '=' → logprob: -10.634627342224121
    7. ' _' → logprob: -11.634627342224121
    8. '3' → logprob: -12.634627342224121
    9. '```' → logprob: -12.759627342224121
    10. '_=' → logprob: -13.634627342224121

Token 48: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.45299798250198364
    2. ' =' → logprob: -1.0779979228973389
    3. '=' → logprob: -3.827997922897339
    4. '==' → logprob: -6.827998161315918
    5. ' ' → logprob: -7.202998161315918
    6. ' <=' → logprob: -8.327998161315918
    7. ' ===' → logprob: -9.327998161315918
    8. ' est' → logprob: -10.952998161315918
    9. 'est' → logprob: -11.077998161315918
    10. 's' → logprob: -11.952998161315918

Token 49: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6576374769210815
    2. ' ' → logprob: -0.7826374769210815
    3. 'n' → logprob: -3.907637596130371
    4. ' nombre' → logprob: -6.157637596130371
    5. ' le' → logprob: -6.407637596130371
    6. ' ce' → logprob: -8.907637596130371
    7. 'nombre' → logprob: -9.532637596130371
    8. '  ' → logprob: -9.657637596130371
    9. ' N' → logprob: -9.782637596130371
    10. ' l' → logprob: -10.032637596130371

Token 50: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5445243120193481
    2. '#' → logprob: -2.2945241928100586
    3. 'd' → logprob: -2.6695241928100586
    4. '
' → logprob: -2.6695241928100586
    5. 'def' → logprob: -2.7945241928100586
    6. ' ' → logprob: -3.2945241928100586
    7. '```' → logprob: -3.7945241928100586
    8. 'import' → logprob: -4.169524192810059
    9. 'n' → logprob: -5.044524192810059
    10. 'i' → logprob: -5.044524192810059

Token 51: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35822680592536926
    2. ':' → logprob: -2.108226776123047
    3. '#' → logprob: -2.608226776123047
    4. '```' → logprob: -3.358226776123047
    5. 'def' → logprob: -3.483226776123047
    6. 'i' → logprob: -4.608226776123047
    7. 'n' → logprob: -4.608226776123047
    8. ' ' → logprob: -5.108226776123047
    9. 'import' → logprob: -5.358226776123047
    10. ' 
' → logprob: -5.983226776123047

Token 52: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005485014524310827
    2. 'i' → logprob: -6.0054850578308105
    3. '#' → logprob: -7.2554850578308105
    4. 'import' → logprob: -7.2554850578308105
    5. '```' → logprob: -7.2554850578308105
    6. 'def' → logprob: -7.3804850578308105
    7. 'n' → logprob: -9.380484580993652
    8. ' 
' → logprob: -10.005484580993652
    9. 'de' → logprob: -10.505484580993652
    10. ' d' → logprob: -10.755484580993652

Token 53: ' ne' (ID: 453)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0017048174049705267
    2. '_' → logprob: -6.751704692840576
    3. ' d' → logprob: -9.001705169677734
    4. ' ' → logprob: -9.626705169677734
    5. ' #' → logprob: -9.876705169677734
    6. 'd' → logprob: -9.876705169677734
    7. ' def' → logprob: -10.126705169677734
    8. 's' → logprob: -10.501705169677734
    9. 'def' → logprob: -10.876705169677734
    10. '#' → logprob: -11.001705169677734

Token 54: ' compte' (ID: 19657)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013123761862516403
    2. '_' → logprob: -5.388123989105225
    3. ' ' → logprob: -5.638123989105225
    4. ' #' → logprob: -6.388123989105225
    5. 's' → logprob: -7.263123989105225
    6. ' ​' → logprob: -7.513123989105225
    7. 'space' → logprob: -7.638123989105225
    8. ' ﻿' → logprob: -7.763123989105225
    9. 'p' → logprob: -9.138123512268066
    10. 'd' → logprob: -9.263123512268066

Token 55: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018520615994930267
    2. ' pas' → logprob: -4.018520832061768
    3. 's' → logprob: -9.39352035522461
    4. ' que' → logprob: -9.64352035522461
    5. ' jamais' → logprob: -9.64352035522461
    6. 'pas' → logprob: -9.76852035522461
    7. '_' → logprob: -10.89352035522461
    8. '  ' → logprob: -11.01852035522461
    9. 'r' → logprob: -11.14352035522461
    10. ' seulement' → logprob: -12.14352035522461

Token 56: ' paire' (ID: 148856)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30276989936828613
    2. ' p' → logprob: -1.9277698993682861
    3. ' couple' → logprob: -3.302769899368286
    4. 'p' → logprob: -3.802769899368286
    5. 'n' → logprob: -4.052769660949707
    6. ' paire' → logprob: -4.052769660949707
    7. ' pair' → logprob: -5.302769660949707
    8. 's' → logprob: -5.427769660949707
    9. ' n' → logprob: -5.802769660949707
    10. ' nombre' → logprob: -6.302769660949707

Token 57: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07158375531435013
    2. '_' → logprob: -2.8215837478637695
    3. '\' → logprob: -6.6965837478637695
    4. ',' → logprob: -6.9465837478637695
    5. ' (' → logprob: -7.3215837478637695
    6. ')' → logprob: -7.3215837478637695
    7. 'u' → logprob: -7.4465837478637695
    8. ' )' → logprob: -7.4465837478637695
    9. 'd' → logprob: -7.9465837478637695
    10. 'une' → logprob: -8.07158374786377

Token 58: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6737732887268066
    2. ''' → logprob: -1.1737732887268066
    3. ''une' → logprob: -1.9237732887268066
    4. 'u' → logprob: -4.048773288726807
    5. ''e' → logprob: -4.923773288726807
    6. ''à' → logprob: -6.048773288726807
    7. ''u' → logprob: -6.548773288726807
    8. ''un' → logprob: -6.673773288726807
    9. 'a' → logprob: -6.673773288726807
    10. '’une' → logprob: -7.173773288726807

Token 59: ' seule' (ID: 41983)
  Prédit: ' fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.7866866588592529
    2. ' seule' → logprob: -1.036686658859253
    3. 'fois' → logprob: -1.786686658859253
    4. ' ' → logprob: -4.536686897277832
    5. ' seul' → logprob: -5.036686897277832
    6. 'se' → logprob: -5.786686897277832
    7. 'f' → logprob: -7.036686897277832
    8. 'fo' → logprob: -8.411686897277832
    9. ' f' → logprob: -8.411686897277832
    10. ' unique' → logprob: -8.661686897277832

Token 60: ' fois' (ID: 14697)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8454068303108215
    2. ' fois' → logprob: -1.0954067707061768
    3. 'fois' → logprob: -2.0954067707061768
    4. '_' → logprob: -2.3454067707061768
    5. ' f' → logprob: -4.970407009124756
    6. ' _' → logprob: -5.345407009124756
    7. 'f' → logprob: -6.345407009124756
    8. ' ' → logprob: -7.220407009124756
    9. 'fo' → logprob: -7.470407009124756
    10. ' 
' → logprob: -7.845407009124756

Token 61: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0878085270524025
    2. 'def' → logprob: -3.212808609008789
    3. '```' → logprob: -4.462808609008789
    4. '#' → logprob: -4.462808609008789
    5. 'n' → logprob: -4.712808609008789
    6. 'import' → logprob: -5.462808609008789
    7. 'i' → logprob: -5.837808609008789
    8. '
' → logprob: -6.337808609008789
    9. '\' → logprob: -7.337808609008789
    10. ':' → logprob: -7.337808609008789

Token 62: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08879713714122772
    2. ' 
' → logprob: -2.713797092437744
    3. '
' → logprob: -5.088797092437744
    4. ' i' → logprob: -5.838797092437744
    5. 'n' → logprob: -6.213797092437744
    6. ',' → logprob: -6.463797092437744
    7. ' en' → logprob: -6.838797092437744
    8. '#' → logprob: -7.713797092437744
    9. ' afin' → logprob: -8.088797569274902
    10. '```' → logprob: -8.088797569274902

Token 63: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21461880207061768
    2. 'e' → logprob: -2.089618682861328
    3. ''a' → logprob: -3.964618682861328
    4. ''e' → logprob: -4.339618682861328
    5. ''est' → logprob: -4.589618682861328
    6. ''o' → logprob: -4.964618682861328
    7. 'a' → logprob: -5.214618682861328
    8. 'o' → logprob: -5.839618682861328
    9. ''à' → logprob: -6.089618682861328
    10. ''es' → logprob: -6.839618682861328

Token 64: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.8422549366950989
    2. 'à' → logprob: -0.9672549366950989
    3. ' à' → logprob: -2.342254877090454
    4. '-' → logprob: -2.467254877090454
    5. 'p' → logprob: -6.592255115509033
    6. 'c' → logprob: -6.717255115509033
    7. 's' → logprob: -6.967255115509033
    8. ' pas' → logprob: -7.342255115509033
    9. ' ' → logprob: -7.717255115509033
    10. 'l' → logprob: -7.842255115509033

Token 65: '-dire' (ID: 76064)
  Prédit: 'ussi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ussi' → logprob: -0.6848582625389099
    2. 'ucune' → logprob: -2.1848583221435547
    3. 'fois' → logprob: -2.6848583221435547
    4. 'une' → logprob: -3.0598583221435547
    5. ' fois' → logprob: -3.3098583221435547
    6. 'comp' → logprob: -3.6848583221435547
    7. 'd' → logprob: -3.9348583221435547
    8. 'u' → logprob: -4.184858322143555
    9. '-' → logprob: -4.184858322143555
    10. 'ss' → logprob: -4.434858322143555

Token 66: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6889235377311707
    2. ' p' → logprob: -0.9389235377311707
    3. 'p' → logprob: -3.0639235973358154
    4. ' que' → logprob: -4.063923358917236
    5. ' avec' → logprob: -4.688923358917236
    6. ' en' → logprob: -5.313923358917236
    7. ' lorsque' → logprob: -5.438923358917236
    8. ' pour' → logprob: -5.813923358917236
    9. ' seulement' → logprob: -5.938923358917236
    10. ' uniquement' → logprob: -6.063923358917236

Token 67: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0024848117027431726
    2. ' p' → logprob: -6.0024847984313965
    3. ',' → logprob: -12.252485275268555
    4. '2' → logprob: -13.127485275268555
    5. ' (' → logprob: -14.002485275268555
    6. ' ' → logprob: -14.502485275268555
    7. '(' → logprob: -15.002485275268555
    8. '(p' → logprob: -15.127485275268555
    9. ' ,' → logprob: -16.127485275268555
    10. '1' → logprob: -16.252485275268555

Token 68: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6913463473320007
    2. '1' → logprob: -1.1913464069366455
    3. '_' → logprob: -1.8163464069366455
    4. 'r' → logprob: -3.5663464069366455
    5. 'a' → logprob: -6.316346168518066
    6. ')' → logprob: -7.441346168518066
    7. ' ,' → logprob: -7.441346168518066
    8. '-' → logprob: -7.691346168518066
    9. '2' → logprob: -7.816346168518066
    10. 'i' → logprob: -9.191346168518066

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001382378744892776
    2. ' ,' → logprob: -6.751382350921631
    3. ')' → logprob: -9.501382827758789
    4. ' <=' → logprob: -10.126382827758789
    5. ',p' → logprob: -10.626382827758789
    6. '=' → logprob: -11.001382827758789
    7. ',)' → logprob: -11.751382827758789
    8. ' )' → logprob: -11.876382827758789
    9. '<=' → logprob: -12.001382827758789
    10. ' ' → logprob: -12.251382827758789

Token 70: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5762277841567993
    2. 'p' → logprob: -0.8262277841567993
    3. ',' → logprob: -8.701228141784668
    4. ' ,' → logprob: -9.451228141784668
    5. ',p' → logprob: -10.201228141784668
    6. ' ' → logprob: -13.076228141784668
    7. ' ' → logprob: -13.951228141784668
    8. '<p' → logprob: -14.076228141784668
    9. ' )' → logprob: -15.201228141784668
    10. ' 

' → logprob: -15.201228141784668

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.145118848304264e-05
    2. ',' → logprob: -10.250051498413086
    3. '1' → logprob: -11.750051498413086
    4. 'p' → logprob: -12.250051498413086
    5. 'r' → logprob: -13.000051498413086
    6. ')' → logprob: -15.375051498413086
    7. ',p' → logprob: -15.625051498413086
    8. ' ' → logprob: -15.875051498413086
    9. ' p' → logprob: -16.250051498413086
    10. ' ,' → logprob: -16.500051498413086

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041327282087877393
    2. ' )' → logprob: -8.000412940979004
    3. '),' → logprob: -10.250412940979004
    4. ')p' → logprob: -11.000412940979004
    5. ',' → logprob: -11.750412940979004
    6. ')n' → logprob: -12.375412940979004
    7. ')#' → logprob: -12.500412940979004
    8. '#' → logprob: -13.875412940979004
    9. ')

' → logprob: -14.250412940979004
    10. ' ' → logprob: -14.250412940979004

Token 73: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2729458808898926
    2. ',' → logprob: -2.2729458808898926
    3. ':' → logprob: -3.6479458808898926
    4. ' )' → logprob: -3.7729458808898926
    5. 's' → logprob: -4.272945880889893
    6. ' ' → logprob: -4.522945880889893
    7. ' =' → logprob: -4.522945880889893
    8. '=' → logprob: -4.772945880889893
    9. '#' → logprob: -5.022945880889893
    10. '_' → logprob: -5.022945880889893

Token 74: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.002273127669468522
    2. '(p' → logprob: -6.252273082733154
    3. '(' → logprob: -8.127273559570312
    4. ' ' → logprob: -11.002273559570312
    5. '(n' → logprob: -12.002273559570312
    6. ' p' → logprob: -12.002273559570312
    7. '<|end|>' → logprob: -12.377273559570312
    8. 's' → logprob: -12.752273559570312
    9. '(space' → logprob: -13.002273559570312
    10. ' ' → logprob: -13.127273559570312

Token 75: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31347501277923584
    2. ' p' → logprob: -1.3134750127792358
    3. ' (' → logprob: -8.938474655151367
    4. ' ' → logprob: -10.188474655151367
    5. '(p' → logprob: -10.813474655151367
    6. '(' → logprob: -11.313474655151367
    7. ''p' → logprob: -12.313474655151367
    8. ',' → logprob: -12.563474655151367
    9. ',p' → logprob: -13.938474655151367
    10. 's' → logprob: -14.688474655151367

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5358694731257856e-05
    2. ',' → logprob: -10.625035285949707
    3. ' ' → logprob: -12.000035285949707
    4. '_' → logprob: -13.250035285949707
    5. '₂' → logprob: -13.375035285949707
    6. ' ,' → logprob: -13.625035285949707
    7. '۲' → logprob: -16.375036239624023
    8. '２' → logprob: -16.750036239624023
    9. '٢' → logprob: -17.375036239624023
    10. ')' → logprob: -17.625036239624023

Token 77: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22760231792926788
    2. ',' → logprob: -1.6026023626327515
    3. ' )' → logprob: -7.102602481842041
    4. ',)' → logprob: -7.352602481842041
    5. ')p' → logprob: -7.727602481842041
    6. '),' → logprob: -9.727602005004883
    7. ' ,' → logprob: -9.977602005004883
    8. '')' → logprob: -10.227602005004883
    9. ',p' → logprob: -10.727602005004883
    10. ')n' → logprob: -10.977602005004883

Token 78: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10032150894403458
    2. 'p' → logprob: -2.3503215312957764
    3. ' ' → logprob: -9.350321769714355
    4. ' )' → logprob: -11.350321769714355
    5. ' ' → logprob: -11.725321769714355
    6. ')' → logprob: -12.350321769714355
    7. '	p' → logprob: -13.725321769714355
    8. ',' → logprob: -14.350321769714355
    9. '(p' → logprob: -14.350321769714355
    10. ' (' → logprob: -14.600321769714355

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003809833142440766
    2. ')' → logprob: -8.000380516052246
    3. ',' → logprob: -10.125380516052246
    4. 'r' → logprob: -13.375380516052246
    5. ' )' → logprob: -14.250380516052246
    6. 'a' → logprob: -14.250380516052246
    7. '_' → logprob: -14.375380516052246
    8. '<|end|>' → logprob: -14.875380516052246
    9. '')' → logprob: -15.125380516052246
    10. ',)' → logprob: -15.500380516052246

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013762809976469725
    2. ').' → logprob: -9.625137329101562
    3. ' )' → logprob: -9.750137329101562
    4. ' ' → logprob: -12.000137329101562
    5. '),' → logprob: -13.625137329101562
    6. ')n' → logprob: -13.875137329101562
    7. 'e' → logprob: -14.250137329101562
    8. '")' → logprob: -14.375137329101562
    9. '.' → logprob: -14.500137329101562
    10. '')' → logprob: -14.500137329101562

Token 81: ' ne' (ID: 453)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43364331126213074
    2. 'def' → logprob: -1.9336433410644531
    3. 'import' → logprob: -2.308643341064453
    4. '```' → logprob: -3.308643341064453
    5. '

' → logprob: -3.683643341064453
    6. '\' → logprob: -3.933643341064453
    7. ':' → logprob: -5.058643341064453
    8. '\n' → logprob: -5.308643341064453
    9. ' 
' → logprob: -5.558643341064453
    10. ' 

' → logprob: -5.933643341064453

Token 82: ' sont' (ID: 5242)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19448129832744598
    2. 's' → logprob: -1.9444812536239624
    3. ' sont' → logprob: -4.069481372833252
    4. ' ' → logprob: -5.319481372833252
    5. 'u' → logprob: -6.444481372833252
    6. 'e' → logprob: -6.569481372833252
    7. '' → logprob: -6.694481372833252
    8. ''' → logprob: -6.819481372833252
    9. ')' → logprob: -7.319481372833252
    10. 'o' → logprob: -7.569481372833252

Token 83: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.015009133145213127
    2. 'pas' → logprob: -4.390008926391602
    3. ' ' → logprob: -6.015008926391602
    4. ' jamais' → logprob: -11.140008926391602
    5. ' p' → logprob: -11.390008926391602
    6. 'p' → logprob: -11.515008926391602
    7. '_pas' → logprob: -12.265008926391602
    8. ' compt' → logprob: -12.640008926391602
    9. '  ' → logprob: -13.015008926391602
    10. ' ' → logprob: -13.265008926391602

Token 84: ' deux' (ID: 10301)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.7359875440597534
    2. ' ' → logprob: -1.3609875440597534
    3. ' compt' → logprob: -1.6109875440597534
    4. 'comp' → logprob: -3.485987663269043
    5. 'c' → logprob: -4.485987663269043
    6. ' recomp' → logprob: -4.485987663269043
    7. ' comp' → logprob: -6.110987663269043
    8. 'r' → logprob: -6.860987663269043
    9. ' com' → logprob: -6.860987663269043
    10. 'count' → logprob: -6.860987663269043

Token 85: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6882147789001465
    2. ')' → logprob: -1.3132147789001465
    3. ' fois' → logprob: -2.9382147789001465
    4. '<|end|>' → logprob: -3.4382147789001465
    5. ' p' → logprob: -3.6882147789001465
    6. ' )' → logprob: -4.4382147789001465
    7. ' pairs' → logprob: -4.4382147789001465
    8. '.' → logprob: -4.6882147789001465
    9. '-' → logprob: -4.8132147789001465
    10. ',' → logprob: -4.8132147789001465

Token 86: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002528456738218665
    2. 'r' → logprob: -6.752528667449951
    3. 'i' → logprob: -8.127528190612793
    4. 'à' → logprob: -8.627528190612793
    5. 'o' → logprob: -8.752528190612793
    6. 'e' → logprob: -9.002528190612793
    7. ')' → logprob: -9.565028190612793
    8. 'ai' → logprob: -9.940028190612793
    9. 'u' → logprob: -10.252528190612793
    10. 'ä' → logprob: -10.565028190612793

Token 87: ' distinct' (ID: 16913)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37307092547416687
    2. 'def' → logprob: -2.3730709552764893
    3. ' 

' → logprob: -2.7480709552764893
    4. '```' → logprob: -3.3730709552764893
    5. ' def' → logprob: -3.6230709552764893
    6. ' 
' → logprob: -3.7480709552764893
    7. '
' → logprob: -4.49807071685791
    8. '_' → logprob: -4.49807071685791
    9. 'import' → logprob: -5.24807071685791
    10. ':' → logprob: -5.24807071685791

Token 88: 'es' (ID: 268)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6907625794410706
    2. '
' → logprob: -1.0657625198364258
    3. '

' → logprob: -2.940762519836426
    4. 'import' → logprob: -3.440762519836426
    5. '```' → logprob: -3.815762519836426
    6. ' 

' → logprob: -4.315762519836426
    7. ' 
' → logprob: -4.690762519836426
    8. 'd' → logprob: -5.065762519836426
    9. ':' → logprob: -5.190762519836426
    10. ' def' → logprob: -6.190762519836426

Token 89: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5957813858985901
    2. 'def' → logprob: -1.3457813262939453
    3. 'import' → logprob: -2.9707813262939453
    4. 'd' → logprob: -2.9707813262939453
    5. '```' → logprob: -3.4707813262939453
    6. ' 
' → logprob: -4.095781326293945
    7. '

' → logprob: -4.220781326293945
    8. 'n' → logprob: -5.470781326293945
    9. ':' → logprob: -5.595781326293945
    10. '#' → logprob: -5.595781326293945

Token 90: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005037832539528608
    2. 'def' → logprob: -6.005037784576416
    3. 'i' → logprob: -6.755037784576416
    4. 'import' → logprob: -6.880037784576416
    5. '```' → logprob: -8.755038261413574
    6. '#' → logprob: -9.255038261413574
    7. 'de' → logprob: -10.130038261413574
    8. ' 
' → logprob: -10.505038261413574
    9. '
' → logprob: -10.880038261413574
    10. ' d' → logprob: -12.380038261413574

Token 91: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.08639279007911682
    2. ' ' → logprob: -2.586392879486084
    3. ' space' → logprob: -5.961392879486084
    4. ' sym' → logprob: -6.086392879486084
    5. ' sys' → logprob: -6.586392879486084
    6. ' itertools' → logprob: -6.836392879486084
    7. ' ' → logprob: -9.211392402648926
    8. ' s' → logprob: -10.586392402648926
    9. '_' → logprob: -11.211392402648926
    10. 'space' → logprob: -12.211392402648926

Token 92: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13038454949855804
    2. '

' → logprob: -2.1303844451904297
    3. 'def' → logprob: -6.00538444519043
    4. '
' → logprob: -7.88038444519043
    5. 'import' → logprob: -8.50538444519043
    6. '\n' → logprob: -9.13038444519043
    7. '```' → logprob: -9.63038444519043
    8. '' → logprob: -9.75538444519043
    9. '


' → logprob: -10.25538444519043
    10. '\' → logprob: -10.25538444519043

Token 93: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014096579980105162
    2. 'd' → logprob: -9.000141143798828
    3. 'import' → logprob: -11.750141143798828
    4. 'de' → logprob: -12.375141143798828
    5. '```' → logprob: -13.000141143798828
    6. '#' → logprob: -13.375141143798828
    7. 'n' → logprob: -14.500141143798828
    8. 'for' → logprob: -14.625141143798828
    9. '
' → logprob: -15.750141143798828
    10. 'from' → logprob: -16.000141143798828

Token 94: ' sieve' (ID: 142781)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.615791916847229
    2. ' gold' → logprob: -1.365791916847229
    3. ' is' → logprob: -1.865791916847229
    4. ' count' → logprob: -3.4907917976379395
    5. ' s' → logprob: -5.3657917976379395
    6. ' g' → logprob: -5.8657917976379395
    7. '  ' → logprob: -6.1157917976379395
    8. ' sieve' → logprob: -6.1157917976379395
    9. ' compter' → logprob: -6.6157917976379395
    10. ' solve' → logprob: -6.9907917976379395

Token 95: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3218397796154022
    2. '(n' → logprob: -2.0718398094177246
    3. '(' → logprob: -2.1968398094177246
    4. '_(' → logprob: -3.6968398094177246
    5. '_s' → logprob: -4.946839809417725
    6. ' (' → logprob: -6.571839809417725
    7. '_of' → logprob: -6.696839809417725
    8. '(_' → logprob: -7.321839809417725
    9. '_n' → logprob: -7.571839809417725
    10. ' _' → logprob: -8.071839332580566

Token 96: '_' (ID: 62)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.36021721363067627
    2. 'erat' → logprob: -1.6102172136306763
    3. ' erat' → logprob: -2.6102170944213867
    4. 'Er' → logprob: -4.235217094421387
    5. ' Er' → logprob: -4.985217094421387
    6. '_' → logprob: -5.610217094421387
    7. '_er' → logprob: -6.235217094421387
    8. 'er' → logprob: -6.360217094421387
    9. 's' → logprob: -8.985217094421387
    10. 'eras' → logprob: -9.610217094421387

Token 97: 'erat' (ID: 73282)
  Prédit: 'erat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erat' → logprob: -0.00022821188031230122
    2. 'er' → logprob: -9.125227928161621
    3. 'E' → logprob: -9.750227928161621
    4. 'eras' → logprob: -10.875227928161621
    5. ' erat' → logprob: -11.500227928161621
    6. 'erad' → logprob: -11.750227928161621
    7. 'eris' → logprob: -12.375227928161621
    8. 'at' → logprob: -12.875227928161621
    9. 'erit' → logprob: -12.875227928161621
    10. 'erd' → logprob: -13.000227928161621

Token 98: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.00019054718723054975
    2. 'os' → logprob: -9.125190734863281
    3. 'osten' → logprob: -9.500190734863281
    4. 'o' → logprob: -13.625190734863281
    5. 'oste' → logprob: -13.750190734863281
    6. 'oth' → logprob: -13.875190734863281
    7. '

' → logprob: -14.500190734863281
    8. 'es' → logprob: -14.875190734863281
    9. 'oston' → logprob: -14.875190734863281
    10. 'osest' → logprob: -15.000190734863281

Token 99: 'hen' (ID: 5447)
  Prédit: 'hen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hen' → logprob: -0.002653182251378894
    2. 'h' → logprob: -6.377653121948242
    3. 'ost' → logprob: -7.377653121948242
    4. 'enes' → logprob: -8.752653121948242
    5. 'hes' → logprob: -9.377653121948242
    6. 'heses' → logprob: -10.627653121948242
    7. 'hens' → logprob: -11.377653121948242
    8. 'phen' → logprob: -11.502653121948242
    9. 'ophen' → logprob: -12.002653121948242
    10. 'o' → logprob: -12.127653121948242

Token 100: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: 0.0
    2. 's' → logprob: -18.125
    3. 'e' → logprob: -21.375
    4. 'ES' → logprob: -21.5
    5. '```' → logprob: -22.5
    6. '#' → logprob: -22.625
    7. ' es' → logprob: -23.125
    8. '``' → logprob: -23.125
    9. '`' → logprob: -23.5
    10. '

' → logprob: -23.875

Token 101: '(limit' (ID: 112473)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06203266233205795
    2. '(n' → logprob: -2.812032699584961
    3. ' (' → logprob: -10.312032699584961
    4. '(num' → logprob: -11.437032699584961
    5. '(N' → logprob: -12.687032699584961
    6. '(size' → logprob: -13.187032699584961
    7. '(:' → logprob: -13.187032699584961
    8. '(limit' → logprob: -13.187032699584961
    9. '(length' → logprob: -13.562032699584961
    10. '(max' → logprob: -13.937032699584961

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009079420939087868
    2. ')' → logprob: -4.759079456329346
    3. ' ):' → logprob: -7.759079456329346
    4. ':' → logprob: -10.384078979492188
    5. ' )' → logprob: -13.384078979492188
    6. '):
' → logprob: -13.634078979492188
    7. '(' → logprob: -14.134078979492188
    8. ' ' → logprob: -14.384078979492188
    9. '(limit' → logprob: -14.384078979492188
    10. '=' → logprob: -14.384078979492188

Token 103: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0345702171325684
    2. '
' → logprob: -1.1595702171325684
    3. '   ' → logprob: -1.6595702171325684
    4. '  
' → logprob: -2.6595702171325684
    5. '   
' → logprob: -3.6595702171325684
    6. '    
' → logprob: -3.9095702171325684
    7. ' ' → logprob: -4.284570217132568
    8. '```' → logprob: -6.284570217132568
    9. '\n' → logprob: -6.659570217132568
    10. '<|end|>' → logprob: -6.659570217132568

Token 104: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7820963859558105
    2. ' sieve' → logprob: -1.1570963859558105
    3. ' primes' → logprob: -1.5320963859558105
    4. 's' → logprob: -5.5320963859558105
    5. ' prime' → logprob: -5.5320963859558105
    6. ' is' → logprob: -6.5320963859558105
    7. 'prime' → logprob: -7.2820963859558105
    8. 'pr' → logprob: -7.4070963859558105
    9. '    
' → logprob: -7.7820963859558105
    10. ' sie' → logprob: -8.407096862792969

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0395856611430645
    2. 'c' → logprob: -3.539585590362549
    3. '    
' → logprob: -6.539585590362549
    4. '#' → logprob: -7.039585590362549
    5. '    ' → logprob: -7.164585590362549
    6. ' """' → logprob: -7.164585590362549
    7. ' ' → logprob: -7.289585590362549
    8. ' c' → logprob: -7.289585590362549
    9. 'def' → logprob: -7.664585590362549
    10. '
' → logprob: -7.664585590362549

Token 106: ' Cr' (ID: 5790)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08648452162742615
    2. ' """' → logprob: -3.336484432220459
    3. '    
' → logprob: -4.211484432220459
    4. ' 
' → logprob: -4.586484432220459
    5. ' ' → logprob: -4.836484432220459
    6. ' """
' → logprob: -6.211484432220459
    7. '   
' → logprob: -6.336484432220459
    8. '  ' → logprob: -6.461484432220459
    9. '  
' → logprob: -6.586484432220459
    10. ' c' → logprob: -6.836484432220459

Token 107: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.07783693075180054
    2. 'éer' → logprob: -3.3278369903564453
    3. 'e' → logprob: -3.8278369903564453
    4. 'é' → logprob: -4.077836990356445
    5. 'ea' → logprob: -9.327836990356445
    6. 'éal' → logprob: -9.327836990356445
    7. 'ee' → logprob: -9.577836990356445
    8. 'ées' → logprob: -10.202836990356445
    9. 'eer' → logprob: -12.202836990356445
    10. 'éan' → logprob: -12.452836990356445

Token 108: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0065179564990103245
    2. ' une' → logprob: -5.1315178871154785
    3. ' a' → logprob: -8.381518363952637
    4. ' ' → logprob: -8.506518363952637
    5. '   ' → logprob: -9.506518363952637
    6. 'un' → logprob: -9.881518363952637
    7. 's' → logprob: -12.131518363952637
    8. ' u' → logprob: -12.131518363952637
    9. 'u' → logprob: -12.631518363952637
    10. 'a' → logprob: -12.881518363952637

Token 109: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.3894819915294647
    2. ' liste' → logprob: -1.139482021331787
    3. 'list' → logprob: -6.014482021331787
    4. '[]' → logprob: -9.764481544494629
    5. 's' → logprob: -10.014481544494629
    6. ' list' → logprob: -10.764481544494629
    7. 'Liste' → logprob: -10.889481544494629
    8. 'lista' → logprob: -12.264481544494629
    9. '   ' → logprob: -12.639481544494629
    10. '[' → logprob: -12.764481544494629

Token 110: ' indiqu' (ID: 100773)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0534154176712036
    2. ' de' → logprob: -1.3034154176712036
    3. ' des' → logprob: -1.4284154176712036
    4. '<|end|>' → logprob: -2.678415298461914
    5. '[]' → logprob: -3.428415298461914
    6. 'de' → logprob: -5.178415298461914
    7. '   ' → logprob: -5.303415298461914
    8. ' of' → logprob: -5.428415298461914
    9. '<bool' → logprob: -5.428415298461914
    10. 'des' → logprob: -5.428415298461914

Token 111: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -4.227250610711053e-05
    2. 'e' → logprob: -10.625041961669922
    3. 'ent' → logprob: -11.625041961669922
    4. '[' → logprob: -12.875041961669922
    5. '   ' → logprob: -13.750041961669922
    6. ' ant' → logprob: -13.875041961669922
    7. '_ant' → logprob: -14.000041961669922
    8. '#' → logprob: -14.250041961669922
    9. '```' → logprob: -14.625041961669922
    10. '[]' → logprob: -14.750041961669922

Token 112: ' si' (ID: 1784)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8005475997924805
    2. ' si' → logprob: -0.9255475997924805
    3. ' True' → logprob: -3.0505475997924805
    4. 'si' → logprob: -3.4255475997924805
    5. ' quels' → logprob: -3.6755475997924805
    6. ' if' → logprob: -4.4255475997924805
    7. 's' → logprob: -4.9255475997924805
    8. '```' → logprob: -5.0505475997924805
    9. ' quelles' → logprob: -5.3005475997924805
    10. '(True' → logprob: -5.8005475997924805

Token 113: ' un' (ID: 537)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5689390301704407
    2. ' un' → logprob: -1.443938970565796
    3. ' ' → logprob: -1.818938970565796
    4. ' les' → logprob: -3.818938970565796
    5. ' each' → logprob: -5.568939208984375
    6. '  ' → logprob: -6.193939208984375
    7. '   ' → logprob: -6.443939208984375
    8. ' le' → logprob: -6.818939208984375
    9. ' nombre' → logprob: -7.318939208984375
    10. ' n' → logprob: -7.443939208984375

Token 114: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.01731446199119091
    2. 'nombre' → logprob: -4.767314434051514
    3. ' ' → logprob: -4.892314434051514
    4. ' nombres' → logprob: -8.017314910888672
    5. ' number' → logprob: -8.142314910888672
    6. 'n' → logprob: -8.892314910888672
    7. ' n' → logprob: -9.267314910888672
    8. '   ' → logprob: -9.892314910888672
    9. ' entier' → logprob: -9.892314910888672
    10. '_nombre' → logprob: -10.017314910888672

Token 115: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.089793361723423
    2. ' premier' → logprob: -2.8397934436798096
    3. 'prem' → logprob: -3.9647934436798096
    4. 'est' → logprob: -5.5897932052612305
    5. ' n' → logprob: -7.0897932052612305
    6. '```' → logprob: -7.3397932052612305
    7. ' ' → logprob: -7.4647932052612305
    8. 's' → logprob: -7.7147932052612305
    9. ' is' → logprob: -7.7147932052612305
    10. '   ' → logprob: -8.08979320526123

Token 116: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.6339191198348999
    2. ' premier' → logprob: -0.7589191198348999
    3. 'prime' → logprob: -7.6339192390441895
    4. ' un' → logprob: -8.383918762207031
    5. '   ' → logprob: -9.133918762207031
    6. ' prime' → logprob: -9.258918762207031
    7. '```' → logprob: -9.258918762207031
    8. ' primo' → logprob: -10.008918762207031
    9. ' premi' → logprob: -10.008918762207031
    10. 'prima' → logprob: -10.258918762207031

Token 117: ' ou' (ID: 2031)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.18448291718959808
    2. ' ou' → logprob: -2.0594828128814697
    3. ' up' → logprob: -3.4344828128814697
    4. '```' → logprob: -5.934483051300049
    5. 'ou' → logprob: -6.684483051300049
    6. ' jusque' → logprob: -7.184483051300049
    7. '[' → logprob: -7.434483051300049
    8. '.' → logprob: -7.684483051300049
    9. '   ' → logprob: -7.934483051300049
    10. 'jus' → logprob: -7.934483051300049

Token 118: ' non' (ID: 2893)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1267551183700562
    2. ' pas' → logprob: -1.5017551183700562
    3. 'pas' → logprob: -1.5017551183700562
    4. 'non' → logprob: -2.5017552375793457
    5. 'not' → logprob: -2.5017552375793457
    6. ' non' → logprob: -2.7517552375793457
    7. '   ' → logprob: -6.876755237579346
    8. '```' → logprob: -7.876755237579346
    9. ' ' → logprob: -8.126754760742188
    10. ' True' → logprob: -8.501754760742188

Token 119: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6842355728149414
    2. '.' → logprob: -1.3092355728149414
    3. ':' → logprob: -2.0592355728149414
    4. ' ' → logprob: -3.0592355728149414
    5. ',' → logprob: -4.434235572814941
    6. '[' → logprob: -4.934235572814941
    7. ' :' → logprob: -5.059235572814941
    8. '
' → logprob: -5.434235572814941
    9. ' pour' → logprob: -5.559235572814941
    10. '```' → logprob: -5.559235572814941

Token 120: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.24534375965595245
    2. ' à' → logprob: -2.1203436851501465
    3. 'à' → logprob: -3.1203436851501465
    4. ''au' → logprob: -4.1203436851501465
    5. ' ' → logprob: -4.2453436851501465
    6. '’à' → logprob: -4.6203436851501465
    7. 'au' → logprob: -4.8703436851501465
    8. '   ' → logprob: -5.9953436851501465
    9. ' au' → logprob: -6.8703436851501465
    10. '  ' → logprob: -7.6203436851501465

Token 121: ' la' (ID: 557)
  Prédit: ' limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.1450861692428589
    2. 'limit' → logprob: -2.1450862884521484
    3. ' ' → logprob: -4.145086288452148
    4. '(limit' → logprob: -7.395086288452148
    5. ' la' → logprob: -7.895086288452148
    6. ' le' → logprob: -8.145086288452148
    7. ' ' → logprob: -8.395086288452148
    8. ' limite' → logprob: -8.520086288452148
    9. ' l' → logprob: -8.895086288452148
    10. 'l' → logprob: -9.645086288452148

Token 122: ' limite' (ID: 48939)
  Prédit: ' limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.24988140165805817
    2. 'limit' → logprob: -1.874881386756897
    3. ' limite' → logprob: -2.7498815059661865
    4. 'lim' → logprob: -5.874881267547607
    5. ' ' → logprob: -7.124881267547607
    6. '(limit' → logprob: -9.999881744384766
    7. '   ' → logprob: -10.624881744384766
    8. ' ' → logprob: -10.624881744384766
    9. '```' → logprob: -11.249881744384766
    10. '  ' → logprob: -11.249881744384766

Token 123: ' donnée' (ID: 130126)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0490108728408813
    2. '.' → logprob: -1.6740108728408813
    3. ' (' → logprob: -1.7990108728408813
    4. '   ' → logprob: -2.174010753631592
    5. '(limit' → logprob: -3.049010753631592
    6. ' limit' → logprob: -3.549010753631592
    7. 'limit' → logprob: -4.049010753631592
    8. ',' → logprob: -4.174010753631592
    9. '```' → logprob: -4.299010753631592
    10. ' :' → logprob: -4.299010753631592

Token 124: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0935301780700684
    2. ' ' → logprob: -1.2185301780700684
    3. ' :' → logprob: -1.8435301780700684
    4. ':' → logprob: -2.0935301780700684
    5. '.' → logprob: -2.7185301780700684
    6. ',' → logprob: -4.343530178070068
    7. '  ' → logprob: -5.843530178070068
    8. '    ' → logprob: -6.968530178070068
    9. ' ,' → logprob: -6.968530178070068
    10. ' :
' → logprob: -7.343530178070068

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006584754679352045
    2. '    
' → logprob: -5.631584644317627
    3. '\n' → logprob: -7.506584644317627
    4. ' 
' → logprob: -7.756584644317627
    5. '
' → logprob: -7.881584644317627
    6. '   
' → logprob: -7.881584644317627
    7. '    ' → logprob: -8.256585121154785
    8. '  
' → logprob: -8.506585121154785
    9. ' ' → logprob: -8.756585121154785
    10. 'def' → logprob: -9.006585121154785

Token 126: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27410587668418884
    2. '
' → logprob: -2.7741057872772217
    3. '\n' → logprob: -3.0241057872772217
    4. '    
' → logprob: -3.3991057872772217
    5. ' 
' → logprob: -3.8991057872772217
    6. '  
' → logprob: -4.024106025695801
    7. '   
' → logprob: -4.274106025695801
    8. '"""' → logprob: -4.399106025695801
    9. '```' → logprob: -5.024106025695801
    10. 'n' → logprob: -5.649106025695801

Token 127: 'isation' (ID: 6993)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.2876843512058258
    2. 'se' → logprob: -1.6626843214035034
    3. 'iser' → logprob: -3.912684440612793
    4. 'ser' → logprob: -4.287684440612793
    5. 'isé' → logprob: -4.287684440612793
    6. 's' → logprob: -5.662684440612793
    7. 'isant' → logprob: -6.412684440612793
    8. 'isez' → logprob: -6.662684440612793
    9. 'is' → logprob: -6.787684440612793
    10. 'isation' → logprob: -7.162684440612793

Token 128: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14605996012687683
    2. ' :' → logprob: -2.646059989929199
    3. ' de' → logprob: -3.771059989929199
    4. ' du' → logprob: -4.021059989929199
    5. ' ' → logprob: -4.146059989929199
    6. ':' → logprob: -5.521059989929199
    7. 'd' → logprob: -7.146059989929199
    8. '   ' → logprob: -7.146059989929199
    9. 'de' → logprob: -7.521059989929199
    10. ' des' → logprob: -7.646059989929199

Token 129: ' cr' (ID: 1769)
  Prédit: ' cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cr' → logprob: -0.05712365359067917
    2. ' sieve' → logprob: -3.4321236610412598
    3. 's' → logprob: -4.68212366104126
    4. ' "' → logprob: -5.30712366104126
    5. 'cr' → logprob: -6.30712366104126
    6. ' sie' → logprob: -6.30712366104126
    7. '   ' → logprob: -6.55712366104126
    8. ' Cr' → logprob: -7.30712366104126
    9. ' S' → logprob: -7.43212366104126
    10. 'é' → logprob: -8.182123184204102

Token 130: 'ible' (ID: 1430)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -1.8056035041809082
    2. 'ur' → logprob: -2.430603504180908
    3. 'e' → logprob: -2.555603504180908
    4. '   ' → logprob: -2.680603504180908
    5. 'ible' → logprob: -2.680603504180908
    6. 'def' → logprob: -2.930603504180908
    7. 'é' → logprob: -3.055603504180908
    8. '#' → logprob: -3.180603504180908
    9. 'u' → logprob: -3.430603504180908
    10. ' ' → logprob: -3.805603504180908

Token 131: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1485280841588974
    2. 'd' → logprob: -2.5235280990600586
    3. '_' → logprob: -3.5235280990600586
    4. 's' → logprob: -4.523528099060059
    5. '   ' → logprob: -5.523528099060059
    6. ' de' → logprob: -5.898528099060059
    7. '_s' → logprob: -6.273528099060059
    8. '_d' → logprob: -7.023528099060059
    9. '  ' → logprob: -7.148528099060059
    10. ' erat' → logprob: -7.148528099060059

Token 132: ''É' (ID: 87944)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.9259496927261353
    2. ''' → logprob: -1.3009496927261353
    3. ''É' → logprob: -1.8009496927261353
    4. ''E' → logprob: -3.4259495735168457
    5. ''é' → logprob: -3.6759495735168457
    6. 'erat' → logprob: -3.9259495735168457
    7. '_' → logprob: -4.175949573516846
    8. 'e' → logprob: -4.175949573516846
    9. ''er' → logprob: -4.675949573516846
    10. '```' → logprob: -4.675949573516846

Token 133: 'rat' (ID: 11990)
  Prédit: 'rat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rat' → logprob: -0.011409704573452473
    2. 'r' → logprob: -4.511409759521484
    3. 'rast' → logprob: -8.636409759521484
    4. 'rats' → logprob: -9.511409759521484
    5. 'R' → logprob: -10.261409759521484
    6. 'ras' → logprob: -11.136409759521484
    7. 's' → logprob: -11.636409759521484
    8. 'S' → logprob: -12.011409759521484
    9. 'erat' → logprob: -12.011409759521484
    10. '**' → logprob: -12.011409759521484

Token 134: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.01126272976398468
    2. 'h' → logprob: -4.886262893676758
    3. ' ost' → logprob: -6.386262893676758
    4. 'os' → logprob: -6.636262893676758
    5. '
' → logprob: -8.886262893676758
    6. 'host' → logprob: -9.011262893676758
    7. 'hos' → logprob: -9.761262893676758
    8. '   ' → logprob: -10.511262893676758
    9. '=' → logprob: -10.761262893676758
    10. '"' → logprob: -11.011262893676758

Token 135: 'h' (ID: 71)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.18307217955589294
    2. 'os' → logprob: -1.8080722093582153
    3. 'oth' → logprob: -5.933072090148926
    4. 'h' → logprob: -7.683072090148926
    5. ' ost' → logprob: -9.933072090148926
    6. 'osph' → logprob: -10.183072090148926
    7. 'o' → logprob: -10.683072090148926
    8. 'oste' → logprob: -11.308072090148926
    9. 'ose' → logprob: -11.433072090148926
    10. 'es' → logprob: -11.433072090148926

Token 136: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.6296223998069763
    2. 'enes' → logprob: -1.504622459411621
    3. 'ene' → logprob: -1.504622459411621
    4. 'ènes' → logprob: -3.879622459411621
    5. '
' → logprob: -7.379622459411621
    6. 'ене' → logprob: -8.379622459411621
    7. 'en' → logprob: -8.504622459411621
    8. '#' → logprob: -8.879622459411621
    9. 'e' → logprob: -8.879622459411621
    10. '`' → logprob: -9.004622459411621

Token 137: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.052608370780944824
    2. '   ' → logprob: -4.177608489990234
    3. '.
' → logprob: -4.552608489990234
    4. '"""' → logprob: -5.302608489990234
    5. ':' → logprob: -5.802608489990234
    6. '
' → logprob: -5.802608489990234
    7. '."""' → logprob: -5.927608489990234
    8. ' ' → logprob: -6.302608489990234
    9. ',' → logprob: -6.677608489990234
    10. ' :' → logprob: -6.677608489990234

Token 138: ' génér' (ID: 18939)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.5333443880081177
    2. ' déterminer' → logprob: -1.7833443880081177
    3. ' mar' → logprob: -2.033344268798828
    4. ' détect' → logprob: -3.533344268798828
    5. ' ' → logprob: -4.533344268798828
    6. ' optimiser' → logprob: -4.658344268798828
    7. ' identifier' → logprob: -4.658344268798828
    8. ' améliorer' → logprob: -4.908344268798828
    9. '   ' → logprob: -5.033344268798828
    10. ' génér' → logprob: -5.408344268798828

Token 139: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.05852844938635826
    2. 'érer' → logprob: -4.058528423309326
    3. 'aler' → logprob: -4.433528423309326
    4. 'al' → logprob: -4.933528423309326
    5. 'iter' → logprob: -5.058528423309326
    6. 'aller' → logprob: -5.058528423309326
    7. 'ale' → logprob: -5.808528423309326
    8. 'erer' → logprob: -6.308528423309326
    9. 'uler' → logprob: -7.683528423309326
    10. 'rer' → logprob: -8.058528900146484

Token 140: ' efficacement' (ID: 155449)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.23289085924625397
    2. ' un' → logprob: -1.8578908443450928
    3. ' des' → logprob: -3.6078908443450928
    4. ' la' → logprob: -4.232891082763672
    5. ' les' → logprob: -5.482891082763672
    6. ' ' → logprob: -6.107891082763672
    7. '[' → logprob: -6.857891082763672
    8. '[]' → logprob: -7.107891082763672
    9. 'une' → logprob: -7.232891082763672
    10. '   ' → logprob: -8.357891082763672

Token 141: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5435277819633484
    2. ' une' → logprob: -1.1685278415679932
    3. ' un' → logprob: -2.918527841567993
    4. ' les' → logprob: -3.168527841567993
    5. ' la' → logprob: -4.668527603149414
    6. 'les' → logprob: -7.168527603149414
    7. 'une' → logprob: -7.168527603149414
    8. 'des' → logprob: -7.293527603149414
    9. ' ' → logprob: -8.293527603149414
    10. '[]' → logprob: -9.168527603149414

Token 142: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.2018318474292755
    2. ' primes' → logprob: -2.076831817626953
    3. ' premiers' → logprob: -2.951831817626953
    4. 'pr' → logprob: -5.951831817626953
    5. ' primal' → logprob: -7.701831817626953
    6. ' primo' → logprob: -7.951831817626953
    7. ' prime' → logprob: -7.951831817626953
    8. ' is' → logprob: -8.201831817626953
    9. 'n' → logprob: -8.201831817626953
    10. ' n' → logprob: -8.451831817626953

Token 143: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.016667645424604416
    2. 'prem' → logprob: -4.51666784286499
    3. ' ' → logprob: -6.01666784286499
    4. '_' → logprob: -6.14166784286499
    5. ' premier' → logprob: -8.016667366027832
    6. ' _' → logprob: -8.641667366027832
    7. ' primo' → logprob: -9.391667366027832
    8. '_p' → logprob: -9.391667366027832
    9. ' primi' → logprob: -9.641667366027832
    10. ' premières' → logprob: -9.766667366027832

Token 144: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7305731177330017
    2. ' jusqu' → logprob: -0.9805731177330017
    3. '   ' → logprob: -2.1055731773376465
    4. '.
' → logprob: -4.7305731773376465
    5. ':' → logprob: -5.3555731773376465
    6. ' up' → logprob: -6.3555731773376465
    7. ' :' → logprob: -6.6055731773376465
    8. 'def' → logprob: -6.6055731773376465
    9. ',' → logprob: -8.105572700500488
    10. ')' → logprob: -8.105572700500488

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005648732651025057
    2. '    
' → logprob: -5.505648612976074
    3. '
' → logprob: -7.380648612976074
    4. 'n' → logprob: -8.755648612976074
    5. '\n' → logprob: -8.880648612976074
    6. '   
' → logprob: -9.005648612976074
    7. '"""' → logprob: -9.005648612976074
    8. '  
' → logprob: -9.630648612976074
    9. '```' → logprob: -9.630648612976074
    10. ')' → logprob: -9.880648612976074

Token 146: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008877740241587162
    2. '    
' → logprob: -5.633877754211426
    3. '
' → logprob: -5.758877754211426
    4. 'n' → logprob: -7.133877754211426
    5. ' 
' → logprob: -7.758877754211426
    6. '```' → logprob: -8.383877754211426
    7. '   
' → logprob: -8.633877754211426
    8. '    ' → logprob: -9.133877754211426
    9. '  
' → logprob: -9.258877754211426
    10. '     
' → logprob: -9.758877754211426

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011022476479411125
    2. '    
' → logprob: -5.136022567749023
    3. 'n' → logprob: -6.136022567749023
    4. ' 
' → logprob: -6.386022567749023
    5. 's' → logprob: -8.511022567749023
    6. '   
' → logprob: -8.636022567749023
    7. '
' → logprob: -8.886022567749023
    8. ' ' → logprob: -9.011022567749023
    9. '    ' → logprob: -9.136022567749023
    10. '     
' → logprob: -9.261022567749023

Token 148: ' is' (ID: 382)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.14977999031543732
    2. 'is' (adapté à ' is') → logprob: -2.149780035018921
    3. ' sieve' → logprob: -4.899779796600342
    4. ' prime' → logprob: -5.149779796600342
    5. '   ' → logprob: -5.774779796600342
    6. ' is' → logprob: -6.149779796600342
    7. ' primes' → logprob: -6.149779796600342
    8. 'pr' → logprob: -6.399779796600342
    9. 's' → logprob: -8.1497802734375
    10. 'prim' → logprob: -11.8997802734375

Token 149: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.10032205283641815
    2. '_' → logprob: -2.3503220081329346
    3. '_pr' → logprob: -9.350321769714355
    4. '_p' → logprob: -11.100321769714355
    5. ' _' → logprob: -11.600321769714355
    6. '_Pr' → logprob: -12.850321769714355
    7. 'prime' → logprob: -14.850321769714355
    8. ' ' → logprob: -14.975321769714355
    9. '_valid' → logprob: -16.100322723388672
    10. '_array' → logprob: -16.100322723388672

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006724602542817593
    2. '=' → logprob: -5.006724834442139
    3. '[' → logprob: -12.25672435760498
    4. ' =[' → logprob: -13.00672435760498
    5. '=[' → logprob: -13.50672435760498
    6. ' ' → logprob: -14.25672435760498
    7. 's' → logprob: -16.381725311279297
    8. '   ' → logprob: -16.881725311279297
    9. '[]' → logprob: -17.131725311279297
    10. ' =
' → logprob: -17.381725311279297

Token 151: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25193196535110474
    2. ' [' → logprob: -1.50193190574646
    3. ' ' → logprob: -13.876932144165039
    4. '   ' → logprob: -14.251932144165039
    5. '[n' → logprob: -14.626932144165039
    6. '[start' → logprob: -16.25193214416504
    7. '[int' → logprob: -16.37693214416504
    8. '[num' → logprob: -16.50193214416504
    9. '[class' → logprob: -16.50193214416504
    10. '[type' → logprob: -16.75193214416504

Token 152: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00015872348740231246
    2. ' True' → logprob: -8.750158309936523
    3. 'False' → logprob: -15.500158309936523
    4. '(True' → logprob: -17.125158309936523
    5. 'Tr' → logprob: -19.750158309936523
    6. '   ' → logprob: -21.250158309936523
    7. '=True' → logprob: -21.375158309936523
    8. '_true' → logprob: -22.875158309936523
    9. '.True' → logprob: -23.000158309936523
    10. 'true' → logprob: -23.750158309936523

Token 153: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029391130432486534
    2. ' for' → logprob: -4.154391288757324
    3. ',' → logprob: -4.404391288757324
    4. ']*' → logprob: -7.779391288757324
    5. 'for' → logprob: -7.904391288757324
    6. ']*(' → logprob: -8.654391288757324
    7. ' ' → logprob: -9.904391288757324
    8. ' ]' → logprob: -11.404391288757324
    9. ' if' → logprob: -11.779391288757324
    10. ')' → logprob: -12.529391288757324

Token 154: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2953760623931885
    2. ']' → logprob: -1.9203760623931885
    3. ',' → logprob: -2.2953760623931885
    4. ' ' → logprob: -5.670375823974609
    5. 'for' → logprob: -6.045375823974609
    6. ' if' → logprob: -6.295375823974609
    7. ']*(' → logprob: -8.04537582397461
    8. ')' → logprob: -9.04537582397461
    9. ' ]' → logprob: -9.54537582397461
    10. '   ' → logprob: -9.67037582397461

Token 155: ' (' (ID: 350)
  Prédit: '(limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.00015181333583313972
    2. ' (' → logprob: -9.000151634216309
    3. '(' → logprob: -10.750151634216309
    4. '(max' → logprob: -12.125151634216309
    5. '(l' → logprob: -14.375151634216309
    6. 'limit' → logprob: -15.000151634216309
    7. '(len' → logprob: -15.750151634216309
    8. '((' → logprob: -16.375152587890625
    9. '(n' → logprob: -16.625152587890625
    10. '(log' → logprob: -17.500152587890625

Token 156: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -6.704273118884885e-07
    2. ' limit' → logprob: -14.500000953674316
    3. '(limit' → logprob: -17.0
    4. 'lim' → logprob: -21.125
    5. '_limit' → logprob: -22.75
    6. '-limit' → logprob: -23.5
    7. '.limit' → logprob: -23.75
    8. '   ' → logprob: -24.375
    9. 'Limit' → logprob: -25.125
    10. 'limits' → logprob: -26.0

Token 157: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02975083328783512
    2. ' +' → logprob: -3.5297508239746094
    3. '+
' → logprob: -15.27975082397461
    4. ' plus' → logprob: -16.77975082397461
    5. ' +
' → logprob: -16.77975082397461
    6. ' ' → logprob: -17.15475082397461
    7. '＋' → logprob: -17.77975082397461
    8. '()+' → logprob: -18.65475082397461
    9. '+

' → logprob: -19.15475082397461
    10. '+)' → logprob: -19.27975082397461

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.250431060791016
    4. '```' → logprob: -18.375431060791016
    5. '  ' → logprob: -18.500431060791016
    6. '１' → logprob: -19.375431060791016
    7. '2' → logprob: -19.875431060791016
    8. ')' → logprob: -20.062931060791016
    9. ' ' → logprob: -20.500431060791016
    10. '7' → logprob: -20.562931060791016

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.1250057220459
    4. '```' → logprob: -18.7500057220459
    5. '

' → logprob: -19.1250057220459
    6. '2' → logprob: -19.5625057220459
    7. '0' → logprob: -19.5625057220459
    8. '
' → logprob: -19.8750057220459
    9. '１' → logprob: -19.8750057220459
    10. '  ' → logprob: -20.0000057220459

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009826094843447208
    2. ')
' → logprob: -4.634826183319092
    3. '   ' → logprob: -9.759825706481934
    4. ')
' → logprob: -12.134825706481934
    5. ')

' → logprob: -12.884825706481934
    6. ' )' → logprob: -13.134825706481934
    7. ' ' → logprob: -14.384825706481934
    8. '
' → logprob: -14.634825706481934
    9. '),' → logprob: -15.134825706481934
    10. '<|end|>' → logprob: -15.384825706481934

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20973721146583557
    2. 'is' → logprob: -1.7097371816635132
    3. ' is' → logprob: -4.834737300872803
    4. '    
' → logprob: -8.084736824035645
    5. '
' → logprob: -11.834736824035645
    6. '  
' → logprob: -12.209736824035645
    7. '  ' → logprob: -12.209736824035645
    8. '	is' → logprob: -12.334736824035645
    9. ' ' → logprob: -12.834736824035645
    10. '   
' → logprob: -13.084736824035645

Token 162: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.00020783171930816025
    2. '   ' → logprob: -8.625207901000977
    3. ' is' → logprob: -10.500207901000977
    4. 'import' → logprob: -15.625207901000977
    5. '    
' → logprob: -15.750207901000977
    6. ' ' → logprob: -15.750207901000977
    7. '
' → logprob: -16.125207901000977
    8. '	is' → logprob: -16.500207901000977
    9. '2' → logprob: -17.000207901000977
    10. '0' → logprob: -17.625207901000977

Token 163: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0017469348385930061
    2. '_' → logprob: -6.376747131347656
    3. ' _' → logprob: -10.626747131347656
    4. '_pr' → logprob: -12.251747131347656
    5. 'prime' → logprob: -12.376747131347656
    6. '_p' → logprob: -12.501747131347656
    7. ' ' → logprob: -12.876747131347656
    8. '_prior' → logprob: -13.876747131347656
    9. '_pi' → logprob: -15.001747131347656
    10. ' prime' → logprob: -15.001747131347656

Token 164: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.0
    3. '[
' → logprob: -19.75
    4. '
' → logprob: -20.125
    5. '][' → logprob: -20.875
    6. '```' → logprob: -20.875
    7. ' ' → logprob: -21.0
    8. '\[' → logprob: -21.125
    9. ')[' → logprob: -21.375
    10. '

' → logprob: -21.5

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34863248467445374
    2. '1' → logprob: -1.2236324548721313
    3. ' ' → logprob: -8.5986328125
    4. 'False' → logprob: -13.7236328125
    5. ')' → logprob: -13.9736328125
    6. '   ' → logprob: -14.7236328125
    7. '  ' → logprob: -15.4736328125
    8. ']' → logprob: -15.4736328125
    9. ':' → logprob: -15.4736328125
    10. '2' → logprob: -16.0986328125

Token 166: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011403311509639025
    2. ' ]' → logprob: -9.375114440917969
    3. ']=' → logprob: -11.125114440917969
    4. '],' → logprob: -11.375114440917969
    5. ')' → logprob: -13.375114440917969
    6. ',' → logprob: -14.125114440917969
    7. ' ' → logprob: -15.625114440917969
    8. 'is' → logprob: -16.25011444091797
    9. ']
' → logprob: -16.37511444091797
    10. '[' → logprob: -16.75011444091797

Token 167: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0012192860012874007
    2. 'is' → logprob: -6.751219272613525
    3. ' ' → logprob: -10.626219749450684
    4. ' ' → logprob: -10.876219749450684
    5. '<|end|>' → logprob: -13.126219749450684
    6. ' False' → logprob: -14.001219749450684
    7. ' True' → logprob: -14.001219749450684
    8. '    ' → logprob: -14.501219749450684
    9. '_' → logprob: -14.751219749450684
    10. '	is' → logprob: -15.376219749450684

Token 168: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.771655115589965e-05
    2. 'prime' → logprob: -11.625018119812012
    3. '_' → logprob: -11.875018119812012
    4. '_true' → logprob: -14.625018119812012
    5. '_pr' → logprob: -15.000018119812012
    6. '_false' → logprob: -15.625018119812012
    7. '_p' → logprob: -15.750018119812012
    8. 's' → logprob: -16.000017166137695
    9. '[' → logprob: -16.500017166137695
    10. 'Prime' → logprob: -16.750017166137695

Token 169: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15080830454826355
    2. '[' → logprob: -2.025808334350586
    3. '<|end|>' → logprob: -5.150808334350586
    4. ' ' → logprob: -6.900808334350586
    5. '=' → logprob: -7.275808334350586
    6. '[
' → logprob: -8.900808334350586
    7. '<|end|>' → logprob: -9.525808334350586
    8. '=True' → logprob: -9.650808334350586
    9. 'space' → logprob: -10.025808334350586
    10. '[:]' → logprob: -10.025808334350586

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'False' → logprob: -16.750009536743164
    4. '  ' → logprob: -18.062509536743164
    5. ']' → logprob: -18.312509536743164
    6. '   ' → logprob: -19.062509536743164
    7. '۱' → logprob: -19.062509536743164
    8. 'True' → logprob: -19.187509536743164
    9. '

' → logprob: -19.187509536743164
    10. '```' → logprob: -19.375009536743164

Token 171: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12768371403217316
    2. ' =' → logprob: -2.502683639526367
    3. '=' → logprob: -3.752683639526367
    4. ')' → logprob: -4.377683639526367
    5. ' ]' → logprob: -6.502683639526367
    6. ']=' → logprob: -7.752683639526367
    7. ' )' → logprob: -10.752683639526367
    8. ')=' → logprob: -10.877683639526367
    9. ' ' → logprob: -11.502683639526367
    10. ',' → logprob: -12.252683639526367

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048054322600365
    2. '=' → logprob: -4.511047840118408
    3. '=False' → logprob: -16.51104736328125
    4. ' =
' → logprob: -16.88604736328125
    5. ' ' → logprob: -17.13604736328125
    6. '=True' → logprob: -19.38604736328125
    7. ' =[' → logprob: -19.38604736328125
    8. '＝' → logprob: -19.76104736328125
    9. ')' → logprob: -19.88604736328125
    10. ' =)' → logprob: -20.38604736328125

Token 173: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20141392946243286
    2. ' False' → logprob: -1.701413869857788
    3. '(False' → logprob: -14.701414108276367
    4. ' ' → logprob: -16.576414108276367
    5. '[' → logprob: -16.701414108276367
    6. 'F' → logprob: -16.826414108276367
    7. '=False' → logprob: -16.951414108276367
    8. '   ' → logprob: -17.201414108276367
    9. 'True' → logprob: -19.451414108276367
    10. '.False' → logprob: -19.701414108276367

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016241880075540394
    2. '<|end|>' → logprob: -9.125162124633789
    3. ',
' → logprob: -10.750162124633789
    4. ' ,' → logprob: -10.875162124633789
    5. ',None' → logprob: -12.375162124633789
    6. '<|end|>' → logprob: -12.875162124633789
    7. ',true' → logprob: -13.625162124633789
    8. ' ' → logprob: -13.625162124633789
    9. '
' → logprob: -14.000162124633789
    10. ',n' → logprob: -15.000162124633789

Token 175: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.47407791018486023
    2. ' False' → logprob: -0.9740779399871826
    3. '(False' → logprob: -14.599078178405762
    4. '=False' → logprob: -15.724078178405762
    5. ' True' → logprob: -16.724077224731445
    6. '.False' → logprob: -16.724077224731445
    7. '_false' → logprob: -16.974077224731445
    8. 'True' → logprob: -17.724077224731445
    9. ' ' → logprob: -18.349077224731445
    10. ' 
' → logprob: -18.474077224731445

Token 176: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0009088410879485309
    2. '   ' → logprob: -7.625908851623535
    3. '
' → logprob: -9.000908851623535
    4. '    
' → logprob: -9.000908851623535
    5. '  
' → logprob: -9.375908851623535
    6. ' 
' → logprob: -10.375908851623535
    7. '\n' → logprob: -10.500908851623535
    8. '<|end|>' → logprob: -11.125908851623535
    9. '

' → logprob: -12.250908851623535
    10. '' → logprob: -12.500908851623535

Token 177: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09143821895122528
    2. '   ' → logprob: -2.4664382934570312
    3. '    
' → logprob: -6.091438293457031
    4. ' 
' → logprob: -9.716438293457031
    5. '  
' → logprob: -9.716438293457031
    6. ' for' → logprob: -10.091438293457031
    7. '
' → logprob: -10.466438293457031
    8. 'for' → logprob: -11.091438293457031
    9. '   
' → logprob: -11.091438293457031
    10. '

' → logprob: -12.466438293457031

Token 178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06502298265695572
    2. ' for' → logprob: -2.8150229454040527
    3. '   ' → logprob: -5.815022945404053
    4. 'i' → logprob: -9.815023422241211
    5. ' i' → logprob: -12.315023422241211
    6. 'import' → logprob: -12.315023422241211
    7. '    
' → logprob: -13.065023422241211
    8. '	for' → logprob: -13.815023422241211
    9. '
' → logprob: -14.065023422241211
    10. '  ' → logprob: -14.565023422241211

Token 179: ' number' (ID: 2086)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0002214172709500417
    2. 'i' → logprob: -9.375221252441406
    3. ' ' → logprob: -9.750221252441406
    4. ' number' → logprob: -10.250221252441406
    5. ' p' → logprob: -10.375221252441406
    6. ' num' → logprob: -12.000221252441406
    7. '	i' → logprob: -12.375221252441406
    8. '   ' → logprob: -14.250221252441406
    9. '  ' → logprob: -15.750221252441406
    10. ' ' → logprob: -15.875221252441406

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001775499782525003
    2. 'in' → logprob: -6.37677526473999
    3. ' ' → logprob: -9.876775741577148
    4. '2' → logprob: -11.876775741577148
    5. ' i' → logprob: -12.626775741577148
    6. 's' → logprob: -13.126775741577148
    7. '	in' → logprob: -13.251775741577148
    8. '  ' → logprob: -13.376775741577148
    9. 'range' → logprob: -13.376775741577148
    10. 'import' → logprob: -14.126775741577148

Token 181: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759409070014954
    2. 'range' → logprob: -0.8259409070014954
    3. '	range' → logprob: -13.82594108581543
    4. '   ' → logprob: -14.95094108581543
    5. '2' → logprob: -16.57594108581543
    6. ' ' → logprob: -16.95094108581543
    7. '(range' → logprob: -18.32594108581543
    8. '  ' → logprob: -18.57594108581543
    9. '_range' → logprob: -19.45094108581543
    10. 'Range' → logprob: -19.45094108581543

Token 182: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008614808320999146
    2. '2' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.133614540100098
    4. '   ' → logprob: -18.633615493774414
    5. ' (' → logprob: -19.383615493774414
    6. '[' → logprob: -19.508615493774414
    7. '```' → logprob: -20.383615493774414
    8. '(
' → logprob: -20.633615493774414
    9. '	' → logprob: -21.008615493774414
    10. '  ' → logprob: -21.633615493774414

Token 183: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '  ' → logprob: -20.375001907348633
    5. '(' → logprob: -21.125001907348633
    6. '    ' → logprob: -21.375001907348633
    7. '۲' → logprob: -21.500001907348633
    8. '２' → logprob: -21.500001907348633
    9. '```' → logprob: -21.875001907348633
    10. '	' → logprob: -22.125001907348633

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005532711511477828
    2. ' ,' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.125553131103516
    4. ',int' → logprob: -16.250553131103516
    5. ',
' → logprob: -16.750553131103516
    6. '‌,' → logprob: -18.250553131103516
    7. ',

' → logprob: -19.000553131103516
    8. ',len' → logprob: -19.375553131103516
    9. ' ,
' → logprob: -19.625553131103516
    10. ',length' → logprob: -19.625553131103516

Token 185: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023406192660331726
    2. ' int' → logprob: -3.7734062671661377
    3. '   ' → logprob: -8.773406028747559
    4. ' ' → logprob: -12.648406028747559
    5. '(int' → logprob: -13.648406028747559
    6. '	int' → logprob: -14.273406028747559
    7. '  ' → logprob: -14.898406028747559
    8. '    ' → logprob: -15.273406028747559
    9. 'limit' → logprob: -16.023406982421875
    10. ':int' → logprob: -16.648406982421875

Token 186: '(limit' (ID: 112473)
  Prédit: '(limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -5.56233171664644e-05
    2. '(' → logprob: -10.000055313110352
    3. 'limit' → logprob: -12.125055313110352
    4. ' limit' → logprob: -12.750055313110352
    5. ' (' → logprob: -13.500055313110352
    6. '((' → logprob: -15.375055313110352
    7. ' ' → logprob: -16.75005531311035
    8. '(l' → logprob: -17.25005531311035
    9. '(len' → logprob: -17.37505531311035
    10. '(pow' → logprob: -17.75005531311035

Token 187: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.018193721771240234
    2. ' **' → logprob: -4.01819372177124
    3. '(' → logprob: -10.518194198608398
    4. ' ' → logprob: -11.893194198608398
    5. ' (' → logprob: -12.143194198608398
    6. '(**' → logprob: -12.768194198608398
    7. '.sqrt' → logprob: -14.268194198608398
    8. ')' → logprob: -15.893194198608398
    9. '.' → logprob: -16.1431941986084
    10. ')**' → logprob: -16.1431941986084

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '.' → logprob: -18.625
    4. '(' → logprob: -19.5
    5. '   ' → logprob: -19.875
    6. '2' → logprob: -22.25
    7. '    ' → logprob: -22.75
    8. '+' → logprob: -23.0
    9. '```' → logprob: -23.25
    10. '  ' → logprob: -23.375

Token 189: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.723352049040841e-06
    2. '5' → logprob: -12.875004768371582
    3. '0' → logprob: -13.375004768371582
    4. ' .' → logprob: -15.250004768371582
    5. '2' → logprob: -16.250003814697266
    6. '1' → logprob: -16.625003814697266
    7. ' ' → logprob: -16.750003814697266
    8. '50' → logprob: -17.250003814697266
    9. '25' → logprob: -17.375003814697266
    10. '3' → logprob: -17.625003814697266

Token 190: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.562500953674316
    3. '   ' → logprob: -15.875000953674316
    4. '.' → logprob: -16.125
    5. '4' → logprob: -16.875
    6. '
' → logprob: -17.4375
    7. '0' → logprob: -17.4375
    8. '...' → logprob: -17.75
    9. '``' → logprob: -17.8125
    10. '"' → logprob: -17.9375

Token 191: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004713066737167537
    2. ')+' → logprob: -7.750471115112305
    3. ' )' → logprob: -10.125471115112305
    4. '()' → logprob: -15.250471115112305
    5. '+' → logprob: -15.625471115112305
    6. ' +' → logprob: -16.125471115112305
    7. '())' → logprob: -17.250471115112305
    8. '   ' → logprob: -18.625471115112305
    9. '+)' → logprob: -18.625471115112305
    10. '')' → logprob: -19.375471115112305

Token 192: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2542749345302582
    2. '+' → logprob: -1.5042749643325806
    3. ')' → logprob: -6.379274845123291
    4. ')+' → logprob: -7.504274845123291
    5. ' ' → logprob: -9.37927532196045
    6. ' )' → logprob: -12.62927532196045
    7. '   ' → logprob: -13.00427532196045
    8. ' plus' → logprob: -13.25427532196045
    9. '()+' → logprob: -13.87927532196045
    10. '1' → logprob: -14.50427532196045

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.87520408630371
    4. '  ' → logprob: -18.25020408630371
    5. ')' → logprob: -18.37520408630371
    6. '2' → logprob: -18.62520408630371
    7. '```' → logprob: -19.00020408630371
    8. '    ' → logprob: -20.25020408630371
    9. ' )' → logprob: -21.25020408630371
    10. ' ' → logprob: -21.25020408630371

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -17.125017166137695
    4. '   ' → logprob: -17.625017166137695
    5. '  ' → logprob: -18.875017166137695
    6. '```' → logprob: -19.125017166137695
    7. '    ' → logprob: -19.687517166137695
    8. '

' → logprob: -19.687517166137695
    9. ')' → logprob: -20.062517166137695
    10. '(' → logprob: -20.187517166137695

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005532081704586744
    2. ':' → logprob: -5.880532264709473
    3. '):
' → logprob: -6.130532264709473
    4. ')' → logprob: -8.130532264709473
    5. '   ' → logprob: -8.380532264709473
    6. ' ):' → logprob: -10.880532264709473
    7. ',' → logprob: -13.130532264709473
    8. ' :' → logprob: -13.755532264709473
    9. ':
' → logprob: -14.505532264709473
    10. '       ' → logprob: -14.880532264709473

Token 196: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001339050941169262
    2. '   ' → logprob: -7.626338958740234
    3. '):' → logprob: -8.126338958740234
    4. ' :' → logprob: -8.251338958740234
    5. ':
' → logprob: -8.501338958740234
    6. '       ' → logprob: -9.501338958740234
    7. ')' → logprob: -12.126338958740234
    8. '    ' → logprob: -12.376338958740234
    9. '):
' → logprob: -13.376338958740234
    10. ' :
' → logprob: -13.501338958740234

Token 197: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6108562350273132
    2. '    ' → logprob: -1.985856294631958
    3. '   ' → logprob: -2.110856294631958
    4. ' if' → logprob: -2.485856294631958
    5. 'if' (adapté à ' if') → logprob: -2.735856294631958
    6. '    
' → logprob: -4.610856056213379
    7. '
' → logprob: -4.735856056213379
    8. ' 
' → logprob: -5.110856056213379
    9. ' ' → logprob: -5.360856056213379
    10. '        
' → logprob: -5.360856056213379

Token 198: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0006340435356833041
    2. 'is' → logprob: -7.37563419342041
    3. ' ' → logprob: -12.25063419342041
    4. ' ' → logprob: -13.25063419342041
    5. '	is' → logprob: -14.12563419342041
    6. ' not' → logprob: -16.625633239746094
    7. '   ' → logprob: -16.750633239746094
    8. '  ' → logprob: -17.125633239746094
    9. '    ' → logprob: -18.125633239746094
    10. ')is' → logprob: -19.500633239746094

Token 199: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -8.180258191714529e-06
    2. '_' → logprob: -12.375008583068848
    3. 'prime' → logprob: -12.500008583068848
    4. '_pr' → logprob: -16.87500762939453
    5. ' _' → logprob: -17.50000762939453
    6. '```' → logprob: -17.75000762939453
    7. ' prime' → logprob: -18.25000762939453
    8. '   ' → logprob: -18.37500762939453
    9. ' ' → logprob: -18.37500762939453
    10. '_prior' → logprob: -18.50000762939453

Token 200: '[number' (ID: 138194)
  Prédit: '[number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[number' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -11.875007629394531
    3. ' [' → logprob: -14.875007629394531
    4. 'number' → logprob: -15.250007629394531
    5. '[num' → logprob: -17.37500762939453
    6. '[
' → logprob: -18.12500762939453
    7. ' number' → logprob: -18.62500762939453
    8. '[count' → logprob: -19.62500762939453
    9. '(number' → logprob: -19.87500762939453
    10. ')[' → logprob: -19.87500762939453

Token 201: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07494672387838364
    2. ':' → logprob: -3.074946641921997
    3. '):' → logprob: -3.824946641921997
    4. ']:
' → logprob: -5.824946880340576
    5. '):
' → logprob: -7.574946880340576
    6. ']' → logprob: -7.574946880340576
    7. '   ' → logprob: -9.824946403503418
    8. ':
' → logprob: -9.949946403503418
    9. '}:' → logprob: -10.074946403503418
    10. '=' → logprob: -10.324946403503418

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011077644303441048
    2. ':' → logprob: -4.636077880859375
    3. '       ' → logprob: -7.261077880859375
    4. ':
' → logprob: -7.761077880859375
    5. ' for' → logprob: -9.136077880859375
    6. ' :' → logprob: -10.636077880859375
    7. ',' → logprob: -11.386077880859375
    8. '            
' → logprob: -11.636077880859375
    9. ' :
' → logprob: -11.761077880859375
    10. '               ' → logprob: -11.761077880859375

Token 203: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09020790457725525
    2. 'for' (adapté à ' for') → logprob: -2.590207815170288
    3. '   ' → logprob: -4.590208053588867
    4. '       ' → logprob: -6.965208053588867
    5. '           ' → logprob: -8.840208053588867
    6. '	for' → logprob: -11.965208053588867
    7. ' ' → logprob: -12.965208053588867
    8. '               ' → logprob: -13.340208053588867
    9. '
' → logprob: -14.340208053588867
    10. '    ' → logprob: -14.340208053588867

Token 204: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.003748533083125949
    2. 'multiple' → logprob: -5.628748416900635
    3. ' i' → logprob: -9.003748893737793
    4. 'Multiple' → logprob: -11.503748893737793
    5. '_multiple' → logprob: -12.378748893737793
    6. ' multiples' → logprob: -12.503748893737793
    7. ' composite' → logprob: -13.253748893737793
    8. ' multiplier' → logprob: -13.628748893737793
    9. 'i' → logprob: -14.003748893737793
    10. ' mult' → logprob: -14.378748893737793

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000818561646156013
    2. 'in' → logprob: -7.125818729400635
    3. ' ' → logprob: -11.500818252563477
    4. '    ' → logprob: -13.875818252563477
    5. '   ' → logprob: -14.125818252563477
    6. 's' → logprob: -14.500818252563477
    7. '	in' → logprob: -14.625818252563477
    8. '_in' → logprob: -15.125818252563477
    9. ' i' → logprob: -15.125818252563477
    10. '=' → logprob: -15.750818252563477

Token 206: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022615134716034
    2. ' range' → logprob: -1.9102261066436768
    3. '   ' → logprob: -13.160225868225098
    4. '	range' → logprob: -16.535226821899414
    5. ' ' → logprob: -17.285226821899414
    6. '(range' → logprob: -17.535226821899414
    7. '    ' → logprob: -17.785226821899414
    8. '  ' → logprob: -19.035226821899414
    9. '     ' → logprob: -21.660226821899414
    10. '       ' → logprob: -22.035226821899414

Token 207: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.006765460595488548
    2. 'number' → logprob: -5.006765365600586
    3. '   ' → logprob: -10.756765365600586
    4. ' number' → logprob: -11.006765365600586
    5. '(' → logprob: -11.506765365600586
    6. '	number' → logprob: -13.506765365600586
    7. ' (' → logprob: -14.881765365600586
    8. '[number' → logprob: -15.006765365600586
    9. 'Number' → logprob: -17.256765365600586
    10. '_number' → logprob: -17.506765365600586

Token 208: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00170684396289289
    2. ' *' → logprob: -6.376707077026367
    3. '   ' → logprob: -13.501707077026367
    4. 'number' → logprob: -13.626707077026367
    5. ',' → logprob: -14.001707077026367
    6. '*object' → logprob: -14.251707077026367
    7. '*,' → logprob: -15.751707077026367
    8. ' number' → logprob: -15.876707077026367
    9. '**' → logprob: -16.251707077026367
    10. '[number' → logprob: -16.876707077026367

Token 209: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.0002371521550230682
    2. '2' → logprob: -8.375237464904785
    3. ' number' → logprob: -12.000237464904785
    4. ' ' → logprob: -15.500237464904785
    5. '   ' → logprob: -16.50023651123047
    6. '	number' → logprob: -18.00023651123047
    7. '(number' → logprob: -18.62523651123047
    8. '
' → logprob: -18.62523651123047
    9. '```' → logprob: -19.37523651123047
    10. '  ' → logprob: -19.50023651123047

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1279553291387856e-05
    2. ' ,' → logprob: -11.750011444091797
    3. ',
' → logprob: -12.750011444091797
    4. ',len' → logprob: -15.250011444091797
    5. ',n' → logprob: -17.000011444091797
    6. '(limit' → logprob: -17.750011444091797
    7. ',m' → logprob: -18.000011444091797
    8. ',num' → logprob: -18.625011444091797
    9. '```' → logprob: -18.750011444091797
    10. '   ' → logprob: -18.750011444091797

Token 211: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.02324850670993328
    2. ' limit' → logprob: -3.7732484340667725
    3. '(limit' → logprob: -12.773248672485352
    4. '   ' → logprob: -16.02324867248535
    5. '    ' → logprob: -16.77324867248535
    6. '.limit' → logprob: -17.64824867248535
    7. 'lim' → logprob: -17.77324867248535
    8. ' ' → logprob: -17.89824867248535
    9. '_limit' → logprob: -18.02324867248535
    10. '-limit' → logprob: -18.14824867248535

Token 212: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001170225441455841
    2. ' +' → logprob: -6.7511701583862305
    3. ',' → logprob: -17.751171112060547
    4. '+
' → logprob: -17.751171112060547
    5. '+,' → logprob: -19.876171112060547
    6. '1' → logprob: -20.501171112060547
    7. '
' → logprob: -20.626171112060547
    8. '   ' → logprob: -21.126171112060547
    9. '```' → logprob: -21.876171112060547
    10. '＋' → logprob: -22.001171112060547

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.375009536743164
    4. '  ' → logprob: -19.125009536743164
    5. '    ' → logprob: -20.125009536743164
    6. '```' → logprob: -20.125009536743164
    7. ',' → logprob: -20.250009536743164
    8. '
' → logprob: -20.500009536743164
    9. '     ' → logprob: -20.625009536743164
    10. ')' → logprob: -20.875009536743164

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -19.000001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '

' → logprob: -20.500001907348633
    6. '  ' → logprob: -21.000001907348633
    7. '１' → logprob: -21.500001907348633
    8. '۱' → logprob: -22.625001907348633
    9. ',' → logprob: -22.750001907348633
    10. '১' → logprob: -23.062501907348633

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ' ,' → logprob: -12.750005722045898
    3. '               ' → logprob: -13.500005722045898
    4. ',m' → logprob: -15.000005722045898
    5. ',
' → logprob: -15.250005722045898
    6. '           ' → logprob: -15.500005722045898
    7. ',num' → logprob: -16.3750057220459
    8. '   ' → logprob: -16.5000057220459
    9. '                   ' → logprob: -16.7500057220459
    10. ',n' → logprob: -17.1250057220459

Token 216: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.011047814972698689
    2. ' number' → logprob: -4.511047840118408
    3. '	number' → logprob: -17.38604736328125
    4. '   ' → logprob: -18.13604736328125
    5. '[number' → logprob: -18.13604736328125
    6. ' ' → logprob: -18.63604736328125
    7. '(number' → logprob: -19.38604736328125
    8. '           ' → logprob: -20.01104736328125
    9. '               ' → logprob: -20.26104736328125
    10. '    ' → logprob: -20.26104736328125

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07075054943561554
    2. '):
' → logprob: -2.6957504749298096
    3. ',' → logprob: -7.195750713348389
    4. '               ' → logprob: -10.69575023651123
    5. ')' → logprob: -11.57075023651123
    6. '):
' → logprob: -11.94575023651123
    7. ' ):' → logprob: -12.07075023651123
    8. '           ' → logprob: -12.07075023651123
    9. '   ' → logprob: -12.32075023651123
    10. '[number' → logprob: -13.32075023651123

Token 218: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006871753721497953
    2. ' is' → logprob: -7.500687122344971
    3. 'is' → logprob: -9.000687599182129
    4. '           ' → logprob: -12.625687599182129
    5. '                   ' → logprob: -12.750687599182129
    6. '                
' → logprob: -12.750687599182129
    7. '                       ' → logprob: -14.750687599182129
    8. '              ' → logprob: -14.750687599182129
    9. '   ' → logprob: -15.125687599182129
    10. '                ' → logprob: -16.000686645507812

Token 219: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.37360838055610657
    2. ' is' → logprob: -1.3736083507537842
    3. '                   ' → logprob: -2.873608350753784
    4. '               ' → logprob: -6.248608589172363
    5. '   ' → logprob: -9.248608589172363
    6. '                       ' → logprob: -10.873608589172363
    7. '           ' → logprob: -12.123608589172363
    8. '                  ' → logprob: -12.498608589172363
    9. '       ' → logprob: -12.748608589172363
    10. '                ' → logprob: -12.873608589172363

Token 220: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0007232757634483278
    2. 'prime' → logprob: -7.250723361968994
    3. 'is' → logprob: -11.375722885131836
    4. '_' → logprob: -14.750722885131836
    5. 'Prime' → logprob: -15.125722885131836
    6. '_pr' → logprob: -15.250722885131836
    7. ' prime' → logprob: -15.375722885131836
    8. 'pr' → logprob: -15.625722885131836
    9. ' is' → logprob: -16.000722885131836
    10. '_is' → logprob: -16.250722885131836

Token 221: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. ' [' → logprob: -15.750001907348633
    4. '```' → logprob: -18.625001907348633
    5. '	m' → logprob: -19.125001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '[number' → logprob: -19.375001907348633
    8. '\[' → logprob: -19.375001907348633
    9. '               ' → logprob: -20.000001907348633
    10. '                   ' → logprob: -20.750001907348633

Token 222: 'ultiple' (ID: 127107)
  Prédit: 'ultiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultiple' → logprob: -8.149051427608356e-05
    2. 'ultip' → logprob: -10.125081062316895
    3. 'ult' → logprob: -10.375081062316895
    4. 'multiple' → logprob: -11.875081062316895
    5. 'ulti' → logprob: -13.750081062316895
    6. 'ultiply' → logprob: -14.000081062316895
    7. 'últ' → logprob: -14.875081062316895
    8. 'ul' → logprob: -16.00008201599121
    9. ' ult' → logprob: -16.12508201599121
    10. '[m' → logprob: -16.12508201599121

Token 223: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.849109119386412e-06
    2. ']=' → logprob: -11.625009536743164
    3. ' ]' → logprob: -14.000009536743164
    4. '=' → logprob: -17.000009536743164
    5. ' =' → logprob: -18.250009536743164
    6. ')' → logprob: -18.375009536743164
    7. ']
' → logprob: -18.625009536743164
    8. '[' → logprob: -20.500009536743164
    9. '']' → logprob: -21.250009536743164
    10. '   ' → logprob: -21.375009536743164

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021162778139114
    2. ' =' → logprob: -2.3502116203308105
    3. '=False' → logprob: -12.225212097167969
    4. '=True' → logprob: -16.85021209716797
    5. ']' → logprob: -17.72521209716797
    6. 'False' → logprob: -18.35021209716797
    7. ']=' → logprob: -18.35021209716797
    8. '=
' → logprob: -18.47521209716797
    9. ')' → logprob: -19.60021209716797
    10. ' ' → logprob: -19.97521209716797

Token 225: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '(False' → logprob: -20.500911712646484
    4. '=False' → logprob: -22.125911712646484
    5. 'false' → logprob: -22.625911712646484
    6. '_false' → logprob: -23.250911712646484
    7. '.False' → logprob: -23.750911712646484
    8. '   ' → logprob: -24.125911712646484
    9. 'True' → logprob: -24.625911712646484
    10. 'F' → logprob: -25.750911712646484

Token 226: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08600684255361557
    2. '
' → logprob: -2.7110068798065186
    3. '    
' → logprob: -4.2110066413879395
    4. 'return' → logprob: -6.9610066413879395
    5. '  
' → logprob: -9.586007118225098
    6. ' return' → logprob: -10.586007118225098
    7. '                
' → logprob: -11.211007118225098
    8. '
' → logprob: -11.711007118225098
    9. '        
' → logprob: -11.836007118225098
    10. '

' → logprob: -11.836007118225098

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001373326638713479
    2. '    
' → logprob: -7.001373291015625
    3. '
' → logprob: -8.126373291015625
    4. 'return' → logprob: -9.001373291015625
    5. ' return' → logprob: -10.751373291015625
    6. '       ' → logprob: -12.001373291015625
    7. '  
' → logprob: -12.376373291015625
    8. '	return' → logprob: -12.751373291015625
    9. '        
' → logprob: -13.876373291015625
    10. '                
' → logprob: -13.876373291015625

Token 228: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5772252082824707
    2. '   ' → logprob: -0.8272252082824707
    3. ' return' → logprob: -6.702225208282471
    4. '    
' → logprob: -10.327224731445312
    5. '
' → logprob: -11.327224731445312
    6. ':return' → logprob: -12.702224731445312
    7. ' ' → logprob: -12.827224731445312
    8. '	return' → logprob: -13.202224731445312
    9. 'ret' → logprob: -13.702224731445312
    10. '       ' → logprob: -14.202224731445312

Token 229: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.575939416885376
    2. 'is' → logprob: -0.825939416885376
    3. '	is' → logprob: -18.325939178466797
    4. ' ' → logprob: -20.575939178466797
    5. '   ' → logprob: -20.825939178466797
    6. '```' → logprob: -20.950939178466797
    7. '_is' → logprob: -21.200939178466797
    8. ' ' → logprob: -21.575939178466797
    9. '(is' → logprob: -22.200939178466797
    10. '"is' → logprob: -22.450939178466797

Token 230: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.3663626305060461e-05
    2. 'prime' → logprob: -11.25001335144043
    3. '_' → logprob: -14.87501335144043
    4. 'Prime' → logprob: -16.25001335144043
    5. 's' → logprob: -16.50001335144043
    6. 'r' → logprob: -16.75001335144043
    7. 'is' → logprob: -16.87501335144043
    8. '_pr' → logprob: -17.25001335144043
    9. '_p' → logprob: -17.87501335144043
    10. '   ' → logprob: -17.87501335144043

Token 231: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2584916353225708
    2. '
' → logprob: -1.5084916353225708
    3. '<|end|>' → logprob: -5.758491516113281
    4. '

' → logprob: -6.758491516113281
    5. '```' → logprob: -6.758491516113281
    6. '    
' → logprob: -7.508491516113281
    7. '  
' → logprob: -8.383491516113281
    8. '<|end|>' → logprob: -9.008491516113281
    9. ' 
' → logprob: -9.758491516113281
    10. '
' → logprob: -10.633491516113281

Token 232: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003216214943677187
    2. 'for' → logprob: -5.75321626663208
    3. 'n' → logprob: -11.253215789794922
    4. 'if' → logprob: -12.003215789794922
    5. 'limit' → logprob: -12.253215789794922
    6. '    
' → logprob: -12.753215789794922
    7. 'max' → logprob: -12.878215789794922
    8. '
' → logprob: -13.128215789794922
    9. 'import' → logprob: -13.628215789794922
    10. 'T' → logprob: -13.753215789794922

Token 233: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.565587043762207
    2. ' gold' → logprob: -1.565587043762207
    3. 'count' → logprob: -1.815587043762207
    4. 'gold' → logprob: -2.815587043762207
    5. ' main' → logprob: -8.690587043762207
    6. ' nombre' → logprob: -9.440587043762207
    7. 'nombre' → logprob: -10.565587043762207
    8. ' compter' → logprob: -10.690587043762207
    9. 'main' → logprob: -11.065587043762207
    10. '_gold' → logprob: -11.065587043762207

Token 234: '_gold' (ID: 173653)
  Prédit: '_gold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gold' → logprob: -0.2025415152311325
    2. '_pairs' → logprob: -1.702541470527649
    3. '_prime' → logprob: -6.952541351318359
    4. '_' → logprob: -9.32754135131836
    5. '_pair' → logprob: -9.82754135131836
    6. '_g' → logprob: -11.32754135131836
    7. 'pairs' → logprob: -12.45254135131836
    8. 'gold' → logprob: -13.32754135131836
    9. '_G' → logprob: -13.45254135131836
    10. '_part' → logprob: -13.70254135131836

Token 235: 'bach' (ID: 37754)
  Prédit: 'bach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bach' → logprob: -7.896309739408025e-07
    2. '_b' → logprob: -15.375000953674316
    3. ' bach' → logprob: -16.0
    4. 'b' → logprob: -16.5
    5. '   ' → logprob: -16.5
    6. '```' → logprob: -16.875
    7. '

' → logprob: -17.5
    8. '
' → logprob: -17.625
    9. '(' → logprob: -17.875
    10. '	b' → logprob: -18.0

Token 236: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.00018697108316700906
    2. '_' → logprob: -9.750186920166016
    3. '_part' → logprob: -10.000186920166016
    4. '_pair' → logprob: -10.250186920166016
    5. '_p' → logprob: -11.000186920166016
    6. '_s' → logprob: -11.250186920166016
    7. '_parts' → logprob: -11.750186920166016
    8. '(' → logprob: -13.500186920166016
    9. 'pairs' → logprob: -13.625186920166016
    10. '(p' → logprob: -14.000186920166016

Token 237: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.070975071750581e-05
    2. '(' → logprob: -10.500030517578125
    3. '(number' → logprob: -13.000030517578125
    4. '(num' → logprob: -14.625030517578125
    5. ' (' → logprob: -15.250030517578125
    6. '(limit' → logprob: -16.250030517578125
    7. '(numero' → logprob: -18.125030517578125
    8. 'n' → logprob: -18.125030517578125
    9. '(nb' → logprob: -18.625030517578125
    10. '(N' → logprob: -19.125030517578125

Token 238: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007272057700902224
    2. '):
' → logprob: -7.87572717666626
    3. ')' → logprob: -8.000727653503418
    4. ' ):' → logprob: -12.000727653503418
    5. ':' → logprob: -12.875727653503418
    6. ',' → logprob: -13.125727653503418
    7. '):
' → logprob: -14.250727653503418
    8. '   ' → logprob: -15.250727653503418
    9. '}:' → logprob: -16.6257266998291
    10. ')：' → logprob: -16.7507266998291

Token 239: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08902857452630997
    2. 'is' → logprob: -2.4640285968780518
    3. ' primes' → logprob: -9.964028358459473
    4. 'pr' → logprob: -10.339028358459473
    5. ')' → logprob: -13.089028358459473
    6. '   ' → logprob: -13.339028358459473
    7. '	is' → logprob: -13.589028358459473
    8. ' ' → logprob: -13.714028358459473
    9. ')is' → logprob: -13.839028358459473
    10. '```' → logprob: -14.339028358459473

Token 240: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.005239683669060469
    2. '_' → logprob: -5.255239486694336
    3. ' _' → logprob: -12.505239486694336
    4. '_p' → logprob: -14.130239486694336
    5. '_pr' → logprob: -14.630239486694336
    6. ')_' → logprob: -15.130239486694336
    7. '_pal' → logprob: -15.630239486694336
    8. ''_' → logprob: -15.880239486694336
    9. '_gold' → logprob: -16.130239486694336
    10. 'prime' → logprob: -16.380239486694336

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029806382954120636
    2. '):
' → logprob: -3.52980637550354
    3. '):
' → logprob: -10.029806137084961
    4. ')' → logprob: -11.779806137084961
    5. ' ):' → logprob: -13.029806137084961
    6. '):

' → logprob: -13.654806137084961
    7. '   ' → logprob: -14.404806137084961
    8. ':' → logprob: -16.52980613708496
    9. ' ' → logprob: -16.90480613708496
    10. ')):' → logprob: -17.15480613708496

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.306760805164231e-05
    2. ':' → logprob: -12.12501335144043
    3. '    
' → logprob: -12.50001335144043
    4. '   ' → logprob: -12.87501335144043
    5. '```' → logprob: -15.00001335144043
    6. '   ' → logprob: -15.00001335144043
    7. '
' → logprob: -16.12501335144043
    8. '   
' → logprob: -16.75001335144043
    9. ' :' → logprob: -16.87501335144043
    10. ':
' → logprob: -17.00001335144043

Token 243: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06547986716032028
    2. ' count' → logprob: -2.9404797554016113
    3. 'count' → logprob: -4.565479755401611
    4. ' pairs' → logprob: -9.81548023223877
    5. ' counter' → logprob: -10.69048023223877
    6. '    
' → logprob: -10.94048023223877
    7. 'pairs' → logprob: -11.44048023223877
    8. '	count' → logprob: -11.94048023223877
    9. ' result' → logprob: -12.31548023223877
    10. '   ' → logprob: -12.69048023223877

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5435959100723267
    2. 'count' → logprob: -1.0435959100723267
    3. ' count' → logprob: -2.793595790863037
    4. 'counter' → logprob: -6.293595790863037
    5. 'n' → logprob: -6.918595790863037
    6. 'def' → logprob: -7.418595790863037
    7. 'result' → logprob: -7.668595790863037
    8. ' counter' → logprob: -8.293596267700195
    9. '"' → logprob: -8.293596267700195
    10. '"""' → logprob: -8.668596267700195

Token 245: ' Comp' (ID: 5211)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00526091456413269
    2. ' count' → logprob: -5.505260944366455
    3. '   ' → logprob: -6.755260944366455
    4. 'counter' → logprob: -11.255260467529297
    5. 'counts' → logprob: -13.505260467529297
    6. 'pairs' → logprob: -13.505260467529297
    7. 'pair' → logprob: -14.630260467529297
    8. 'result' → logprob: -15.130260467529297
    9. '	count' → logprob: -15.505260467529297
    10. ' ' → logprob: -16.130260467529297

Token 246: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0041103423573076725
    2. 't' → logprob: -5.754110336303711
    3. 'tte' → logprob: -7.879110336303711
    4. 'pte' → logprob: -8.629110336303711
    5. '#' → logprob: -9.129110336303711
    6. 'ter' → logprob: -10.254110336303711
    7. 'nte' → logprob: -10.504110336303711
    8. 'те' → logprob: -10.754110336303711
    9. 'tle' → logprob: -11.379110336303711
    10. '>' → logprob: -11.379110336303711

Token 247: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7272908091545105
    2. 'le' → logprob: -1.3522908687591553
    3. '   ' → logprob: -1.6022908687591553
    4. ' les' → logprob: -4.352290630340576
    5. '_le' → logprob: -4.977290630340576
    6. '_pairs' → logprob: -4.977290630340576
    7. '(' → logprob: -5.477290630340576
    8. 'les' → logprob: -5.477290630340576
    9. ' pairs' → logprob: -5.727290630340576
    10. '  ' → logprob: -5.727290630340576

Token 248: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.3946067988872528
    2. ' nombre' → logprob: -1.1446068286895752
    3. ' nombres' → logprob: -5.769606590270996
    4. 'pairs' → logprob: -6.769606590270996
    5. '_nombre' → logprob: -7.019606590270996
    6. '_' → logprob: -7.019606590270996
    7. '_pairs' → logprob: -7.269606590270996
    8. ' pairs' → logprob: -7.644606590270996
    9. 's' → logprob: -8.769606590270996
    10. ' ' → logprob: -9.269606590270996

Token 249: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12896783649921417
    2. ' de' → logprob: -2.378967761993408
    3. '   ' → logprob: -4.253967761993408
    4. '_de' → logprob: -4.503967761993408
    5. '  ' → logprob: -6.878967761993408
    6. ' ' → logprob: -7.253967761993408
    7. 'de' → logprob: -7.878967761993408
    8. ' =' → logprob: -8.753968238830566
    9. '_d' → logprob: -8.753968238830566
    10. 'def' → logprob: -9.003968238830566

Token 250: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7279719710350037
    2. ' p' → logprob: -0.8529719710350037
    3. 'pairs' → logprob: -2.9779720306396484
    4. ' pairs' → logprob: -3.3529720306396484
    5. 'pair' → logprob: -6.102972030639648
    6. ' ' → logprob: -6.727972030639648
    7. ' paire' → logprob: -7.102972030639648
    8. ' pair' → logprob: -8.602972030639648
    9. '   ' → logprob: -8.977972030639648
    10. '_pairs' → logprob: -9.477972030639648

Token 251: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.5506258010864258
    2. 'r' → logprob: -1.5506258010864258
    3. 'airs' → logprob: -2.175625801086426
    4. '_' → logprob: -2.675625801086426
    5. 'a' → logprob: -4.675625801086426
    6. '_pairs' → logprob: -5.175625801086426
    7. 'aire' → logprob: -5.800625801086426
    8. 'air' → logprob: -6.175625801086426
    9. 'i' → logprob: -6.425625801086426
    10. '   ' → logprob: -7.175625801086426

Token 252: ' de' (ID: 334)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.509981632232666
    2. ' de' → logprob: -1.134981632232666
    3. '_de' → logprob: -3.259981632232666
    4. '_' → logprob: -4.134981632232666
    5. 'de' → logprob: -4.634981632232666
    6. '(' → logprob: -5.259981632232666
    7. '(p' → logprob: -5.384981632232666
    8. ' ' → logprob: -6.259981632232666
    9. '(de' → logprob: -7.509981632232666
    10. ' _' → logprob: -8.384981155395508

Token 253: ' nombres' (ID: 76205)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.7014771699905396
    2. 'p' → logprob: -1.8264771699905396
    3. ' primes' → logprob: -2.07647705078125
    4. ' p' → logprob: -2.57647705078125
    5. ' nombres' → logprob: -2.70147705078125
    6. 'prem' → logprob: -2.95147705078125
    7. 'n' → logprob: -4.95147705078125
    8. ' premiers' → logprob: -5.57647705078125
    9. '(pr' → logprob: -5.82647705078125
    10. 'prime' → logprob: -5.82647705078125

Token 254: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.2558431327342987
    2. 'prem' → logprob: -1.505843162536621
    3. '_' → logprob: -7.130843162536621
    4. '   ' → logprob: -7.130843162536621
    5. 'pr' → logprob: -7.755843162536621
    6. ' premier' → logprob: -7.880843162536621
    7. ' premi' → logprob: -8.005843162536621
    8. ' primo' → logprob: -8.255843162536621
    9. '_p' → logprob: -8.630843162536621
    10. 'de' → logprob: -8.880843162536621

Token 255: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5348899960517883
    2. ' (' → logprob: -0.9098899960517883
    3. '   ' → logprob: -5.534890174865723
    4. ' p' → logprob: -5.659890174865723
    5. 'p' → logprob: -6.034890174865723
    6. '(pr' → logprob: -7.409890174865723
    7. ' ' → logprob: -7.534890174865723
    8. '(' → logprob: -8.034890174865723
    9. '(n' → logprob: -8.784890174865723
    10. '  ' → logprob: -10.159890174865723

Token 256: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.016897987574338913
    2. ' p' → logprob: -4.141898155212402
    3. ')' → logprob: -7.641898155212402
    4. '   ' → logprob: -8.641898155212402
    5. ' (' → logprob: -9.516898155212402
    6. '(p' → logprob: -10.141898155212402
    7. 'n' → logprob: -10.516898155212402
    8. 'prime' → logprob: -11.266898155212402
    9. ',' → logprob: -11.641898155212402
    10. ')p' → logprob: -11.891898155212402

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0946720689535141
    2. '_' → logprob: -2.7196719646453857
    3. ',' → logprob: -3.9696719646453857
    4. ')' → logprob: -5.844672203063965
    5. ' ,' → logprob: -6.469672203063965
    6. ' _' → logprob: -8.219672203063965
    7. '_,' → logprob: -8.344672203063965
    8. ' )' → logprob: -8.469672203063965
    9. '   ' → logprob: -8.844672203063965
    10. '_)' → logprob: -9.594672203063965

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006084272637963295
    2. ' ,' → logprob: -5.131084442138672
    3. ',p' → logprob: -9.756084442138672
    4. ')' → logprob: -10.006084442138672
    5. ' p' → logprob: -10.506084442138672
    6. 'p' → logprob: -11.756084442138672
    7. ' )' → logprob: -12.756084442138672
    8. '   ' → logprob: -12.881084442138672
    9. ',
' → logprob: -13.256084442138672
    10. '
' → logprob: -13.256084442138672

Token 259: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.20439691841602325
    2. 'p' → logprob: -1.7043969631195068
    3. ',' → logprob: -6.204396724700928
    4. ' n' → logprob: -8.079397201538086
    5. ' ,' → logprob: -8.704397201538086
    6. 'n' → logprob: -8.954397201538086
    7. ')' → logprob: -9.079397201538086
    8. '   ' → logprob: -9.579397201538086
    9. '    ' → logprob: -9.829397201538086
    10. ' )' → logprob: -10.329397201538086

Token 260: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05794813856482506
    2. ',' → logprob: -2.932948112487793
    3. 'r' → logprob: -6.557948112487793
    4. ')' → logprob: -7.182948112487793
    5. '_' → logprob: -7.307948112487793
    6. '_,' → logprob: -9.432948112487793
    7. ' ,' → logprob: -9.807948112487793
    8. '_r' → logprob: -10.307948112487793
    9. ',_' → logprob: -12.182948112487793
    10. '2' → logprob: -12.182948112487793

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036561701563186944
    2. ' )' → logprob: -8.000365257263184
    3. '   ' → logprob: -10.750365257263184
    4. ' telles' → logprob: -11.875365257263184
    5. ' tels' → logprob: -14.125365257263184
    6. ',' → logprob: -15.625365257263184
    7. ')
' → logprob: -15.625365257263184
    8. ' ' → logprob: -16.2503662109375
    9. '),' → logprob: -16.3753662109375
    10. '):' → logprob: -16.5003662109375

Token 262: ' telles' (ID: 83154)
  Prédit: ' telles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' telles' → logprob: -0.07289092242717743
    2. ' tels' → logprob: -3.3228909969329834
    3. '   ' → logprob: -3.5728909969329834
    4. ' telle' → logprob: -5.822890758514404
    5. ' such' → logprob: -6.697890758514404
    6. ')' → logprob: -7.072890758514404
    7. ' pour' → logprob: -8.197891235351562
    8. ',' → logprob: -8.572891235351562
    9. ' tel' → logprob: -8.572891235351562
    10. ' tais' → logprob: -8.697891235351562

Token 263: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.002433928195387125
    2. 'qu' → logprob: -6.627433776855469
    3. ' que' → logprob: -6.877433776855469
    4. '   ' → logprob: -10.127433776855469
    5. '       ' → logprob: -11.752433776855469
    6. 'quelle' → logprob: -11.752433776855469
    7. 'that' → logprob: -12.377433776855469
    8. 'què' → logprob: -13.002433776855469
    9. '#' → logprob: -13.252433776855469
    10. 'à' → logprob: -13.377433776855469

Token 264: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.033655036240816116
    2. 'p' → logprob: -3.4086549282073975
    3. '   ' → logprob: -11.783655166625977
    4. ' ' → logprob: -14.408655166625977
    5. '(p' → logprob: -15.283655166625977
    6. ' (' → logprob: -15.658655166625977
    7. ' n' → logprob: -15.908655166625977
    8. ' ' → logprob: -16.033655166625977
    9. '    ' → logprob: -16.408655166625977
    10. '2' → logprob: -16.533655166625977

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.472211968386546e-05
    2. 'r' → logprob: -9.875094413757324
    3. '_' → logprob: -10.375094413757324
    4. '2' → logprob: -12.125094413757324
    5. ' p' → logprob: -13.875094413757324
    6. '
' → logprob: -13.875094413757324
    7. 'p' → logprob: -14.500094413757324
    8. ' _' → logprob: -14.812594413757324
    9. '```' → logprob: -14.937594413757324
    10. '_r' → logprob: -15.125094413757324

Token 266: ' +' (ID: 659)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4657405614852905
    2. '+' → logprob: -2.09074068069458
    3. '<=' → logprob: -2.09074068069458
    4. ' +' → logprob: -2.09074068069458
    5. '+p' → logprob: -6.71574068069458
    6. ' ≤' → logprob: -9.215740203857422
    7. 'le' → logprob: -9.340740203857422
    8. '≤' → logprob: -10.340740203857422
    9. ' p' → logprob: -10.965740203857422
    10. 'plus' → logprob: -11.215740203857422

Token 267: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1002788096666336
    2. ' p' → logprob: -2.350278854370117
    3. '=' → logprob: -10.475278854370117
    4. '   ' → logprob: -11.100278854370117
    5. 'n' → logprob: -11.850278854370117
    6. ' n' → logprob: -11.975278854370117
    7. '_p' → logprob: -12.225278854370117
    8. ' =' → logprob: -12.350278854370117
    9. '_' → logprob: -12.725278854370117
    10. ' ' → logprob: -13.475278854370117

Token 268: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08421450853347778
    2. '_' → logprob: -2.584214448928833
    3. '1' → logprob: -5.959214687347412
    4. '==' → logprob: -6.459214687347412
    5. ' ==' → logprob: -7.584214687347412
    6. '```' → logprob: -8.459214210510254
    7. 'r' → logprob: -9.209214210510254
    8. '=' → logprob: -9.334214210510254
    9. 'n' → logprob: -9.709214210510254
    10. '_n' → logprob: -10.084214210510254

Token 269: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2919226884841919
    2. ' <=' → logprob: -1.416922688484192
    3. '==' → logprob: -4.916922569274902
    4. '<=' → logprob: -6.041922569274902
    5. '=' → logprob: -7.291922569274902
    6. ' =' → logprob: -8.041922569274902
    7. ' ' → logprob: -12.041922569274902
    8. '   ' → logprob: -12.666922569274902
    9. ' ≤' → logprob: -13.791922569274902
    10. ')' → logprob: -14.041922569274902

Token 270: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2014141082763672
    2. 'n' → logprob: -1.7014141082763672
    3. '   ' → logprob: -14.451414108276367
    4. '	n' → logprob: -15.826414108276367
    5. ' ' → logprob: -17.201414108276367
    6. ' ' → logprob: -17.326414108276367
    7. '_n' → logprob: -17.951414108276367
    8. '(n' → logprob: -18.326414108276367
    9. '```' → logprob: -18.826414108276367
    10. '    ' → logprob: -19.201414108276367

Token 271: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01885770820081234
    2. ':' → logprob: -4.143857479095459
    3. ',' → logprob: -6.393857479095459
    4. '.' → logprob: -7.643857479095459
    5. ' :' → logprob: -8.768857955932617
    6. '
' → logprob: -9.268857955932617
    7. '):' → logprob: -9.268857955932617
    8. ')' → logprob: -9.768857955932617
    9. '(n' → logprob: -10.018857955932617
    10. '    
' → logprob: -10.268857955932617

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.842555426876061e-06
    2. '
' → logprob: -13.000004768371582
    3. '    
' → logprob: -13.125004768371582
    4. 'def' → logprob: -15.625004768371582
    5. '       ' → logprob: -16.6250057220459
    6. 'n' → logprob: -17.2500057220459
    7. '    ' → logprob: -17.2500057220459
    8. '```' → logprob: -17.3750057220459
    9. '   
' → logprob: -17.5000057220459
    10. ' for' → logprob: -17.5000057220459

Token 273: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016116275219246745
    2. 'count' → logprob: -7.126611709594727
    3. ' count' → logprob: -7.126611709594727
    4. '    
' → logprob: -13.751611709594727
    5. ' result' → logprob: -14.501611709594727
    6. 'pairs' → logprob: -14.626611709594727
    7. '	count' → logprob: -14.876611709594727
    8. ' pairs' → logprob: -15.001611709594727
    9. 'result' → logprob: -15.126611709594727
    10. '
' → logprob: -15.251611709594727

Token 274: ' garantie' (ID: 62746)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5776901841163635
    2. ' for' → logprob: -1.5776901245117188
    3. ' count' → logprob: -2.3276901245117188
    4. '    ' → logprob: -3.5776901245117188
    5. ' compte' → logprob: -3.8276901245117188
    6. 'def' → logprob: -4.327690124511719
    7. ' =' → logprob: -4.327690124511719
    8. ' n' → logprob: -4.577690124511719
    9. ' def' → logprob: -4.577690124511719
    10. ' range' → logprob: -4.952690124511719

Token 275: ' p' (ID: 275)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7187299728393555
    2. ' que' → logprob: -0.9687299728393555
    3. 'nt' → logprob: -2.9687299728393555
    4. ' ' → logprob: -4.0937299728393555
    5. 't' → logprob: -4.4687299728393555
    6. '_' → logprob: -4.4687299728393555
    7. '   ' → logprob: -4.5937299728393555
    8. 'n' → logprob: -4.7187299728393555
    9. ' la' → logprob: -5.2187299728393555
    10. ' l' → logprob: -5.4687299728393555

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3246089220046997
    2. 'our' → logprob: -1.5746089220046997
    3. '_' → logprob: -3.07460880279541
    4. 'r' → logprob: -3.94960880279541
    5. '_r' → logprob: -7.19960880279541
    6. '_p' → logprob: -7.44960880279541
    7. ' our' → logprob: -7.69960880279541
    8. '_e' → logprob: -8.07460880279541
    9. '   ' → logprob: -8.57460880279541
    10. 'e' → logprob: -8.57460880279541

Token 277: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.010064521804451942
    2. '<=' → logprob: -4.635064601898193
    3. ' ≤' → logprob: -8.260064125061035
    4. 'le' → logprob: -10.635064125061035
    5. ' <' → logprob: -11.385064125061035
    6. '   ' → logprob: -12.385064125061035
    7. '≤' → logprob: -12.510064125061035
    8. ' ' → logprob: -13.260064125061035
    9. ')<=' → logprob: -13.760064125061035
    10. ' in' → logprob: -14.760064125061035

Token 278: ' p' (ID: 275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8921326994895935
    2. ' n' → logprob: -0.8921326994895935
    3. 'p' → logprob: -2.1421327590942383
    4. ' p' → logprob: -2.7671327590942383
    5. ' ' → logprob: -9.267132759094238
    6. '	n' → logprob: -10.767132759094238
    7. 'number' → logprob: -11.017132759094238
    8. ' number' → logprob: -11.142132759094238
    9. '(n' → logprob: -11.392132759094238
    10. ' ' → logprob: -11.767132759094238

Token 279: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6459882855415344
    2. '2' → logprob: -0.7709882855415344
    3. 'r' → logprob: -5.270988464355469
    4. ' n' → logprob: -5.895988464355469
    5. 'p' → logprob: -6.270988464355469
    6. '1' → logprob: -6.270988464355469
    7. '_n' → logprob: -7.395988464355469
    8. '(n' → logprob: -7.645988464355469
    9. ' p' → logprob: -9.145988464355469
    10. '_' → logprob: -9.395988464355469

Token 280: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012733547016978264
    2. ' for' → logprob: -5.512733459472656
    3. ' and' → logprob: -6.137733459472656
    4. '.' → logprob: -6.762733459472656
    5. ' pour' → logprob: -7.012733459472656
    6. ' afin' → logprob: -7.137733459472656
    7. ',' → logprob: -7.262733459472656
    8. ' to' → logprob: -7.387733459472656
    9. ':' → logprob: -7.387733459472656
    10. ' et' → logprob: -7.512733459472656

Token 281: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.004718960728496313
    2. 'év' → logprob: -6.629718780517578
    3. 'ev' → logprob: -7.129718780517578
    4. ' evitar' → logprob: -7.129718780517578
    5. ' ev' → logprob: -7.504718780517578
    6. ' garantir' → logprob: -7.754718780517578
    7. ' év' → logprob: -8.254718780517578
    8. ' assurer' → logprob: -9.504718780517578
    9. '’éviter' → logprob: -9.504718780517578
    10. ' ne' → logprob: -9.629718780517578

Token 282: ' de' (ID: 334)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.015022879466414452
    2. 'les' → logprob: -4.7650227546691895
    3. ' le' → logprob: -5.8900227546691895
    4. '   ' → logprob: -6.6400227546691895
    5. ' double' → logprob: -7.2650227546691895
    6. ' la' → logprob: -7.6400227546691895
    7. 'double' → logprob: -7.8900227546691895
    8. ' des' → logprob: -8.015023231506348
    9. ' compter' → logprob: -9.140023231506348
    10. ' ' → logprob: -9.265023231506348

Token 283: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.1106221005320549
    2. 'comp' → logprob: -2.4856221675872803
    3. ' comp' → logprob: -4.485621929168701
    4. ' double' → logprob: -4.985621929168701
    5. ' doub' → logprob: -6.485621929168701
    6. 'double' → logprob: -7.610621929168701
    7. ' compt' → logprob: -7.985621929168701
    8. '   ' → logprob: -8.86062240600586
    9. ' recomp' → logprob: -9.11062240600586
    10. 'd' → logprob: -9.36062240600586

Token 284: ' deux' (ID: 10301)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2718265950679779
    2. 'les' → logprob: -1.6468266248703003
    3. '   ' → logprob: -4.52182674407959
    4. ' deux' → logprob: -5.02182674407959
    5. ' des' → logprob: -5.39682674407959
    6. ' chaque' → logprob: -5.89682674407959
    7. ' p' → logprob: -6.02182674407959
    8. 'd' → logprob: -6.02182674407959
    9. ' ' → logprob: -6.02182674407959
    10. ' la' → logprob: -6.14682674407959

Token 285: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.014422506093978882
    2. 'fois' → logprob: -4.514422416687012
    3. ' p' → logprob: -5.764422416687012
    4. ' pairs' → logprob: -9.139422416687012
    5. 'p' → logprob: -9.639422416687012
    6. ' ' → logprob: -10.889422416687012
    7. ' times' → logprob: -11.389422416687012
    8. ' veces' → logprob: -11.764422416687012
    9. 'pairs' → logprob: -12.264422416687012
    10. 'times' → logprob: -12.389422416687012

Token 286: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2803772985935211
    2. ' la' → logprob: -2.5303773880004883
    3. ' p' → logprob: -2.9053773880004883
    4. '.' → logprob: -3.0303773880004883
    5. '   ' → logprob: -3.7803773880004883
    6. '<|end|>' → logprob: -4.530377388000488
    7. ' chaque' → logprob: -4.905377388000488
    8. 'les' → logprob: -5.030377388000488
    9. ',' → logprob: -5.530377388000488
    10. ' des' → logprob: -6.155377388000488

Token 287: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.48275116086006165
    2. 'm' → logprob: -0.9827511310577393
    3. ' paire' → logprob: -5.232751369476318
    4. ' m' → logprob: -6.482751369476318
    5. 'pa' → logprob: -8.48275089263916
    6. 'p' → logprob: -8.73275089263916
    7. 'mé' → logprob: -8.73275089263916
    8. ' p' → logprob: -8.98275089263916
    9. '```' → logprob: -9.23275089263916
    10. ' ' → logprob: -9.23275089263916

Token 288: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.0018584381323307753
    2. ' pair' → logprob: -6.501858234405518
    3. ' p' → logprob: -8.626858711242676
    4. 'pair' → logprob: -9.876858711242676
    5. ' ' → logprob: -10.376858711242676
    6. ' pa' → logprob: -10.751858711242676
    7. 'pa' → logprob: -11.126858711242676
    8. '_p' → logprob: -11.251858711242676
    9. '_pair' → logprob: -11.376858711242676
    10. 'p' → logprob: -11.626858711242676

Token 289: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3524233400821686
    2. '.' → logprob: -1.2274233102798462
    3. ',' → logprob: -5.727423191070557
    4. '    
' → logprob: -9.102423667907715
    5. '.
' → logprob: -9.227423667907715
    6. ' .' → logprob: -9.352423667907715
    7. ':' → logprob: -9.352423667907715
    8. 'def' → logprob: -9.477423667907715
    9. ')' → logprob: -9.602423667907715
    10. ' afin' → logprob: -10.352423667907715

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0802738870552275e-05
    2. '    
' → logprob: -12.12501049041748
    3. '
' → logprob: -12.25001049041748
    4. 'def' → logprob: -16.500011444091797
    5. '```' → logprob: -16.625011444091797
    6. '   
' → logprob: -17.000011444091797
    7. '       ' → logprob: -17.000011444091797
    8. '   ' → logprob: -17.250011444091797
    9. ')' → logprob: -17.875011444091797
    10. '    ' → logprob: -18.000011444091797

Token 291: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.696889623621246e-06
    2. '    
' → logprob: -13.75000286102295
    3. '
' → logprob: -14.00000286102295
    4. ' count' → logprob: -15.12500286102295
    5. 'count' → logprob: -15.37500286102295
    6. '"""' → logprob: -16.125001907348633
    7. 'n' → logprob: -17.000001907348633
    8. ')' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '```' → logprob: -18.125001907348633

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01715792343020439
    2. 'count' → logprob: -4.392158031463623
    3. ' count' → logprob: -5.392158031463623
    4. 'pairs' → logprob: -9.892157554626465
    5. 'result' → logprob: -11.892157554626465
    6. ' pairs' → logprob: -12.142157554626465
    7. ' result' → logprob: -12.517157554626465
    8. 'counter' → logprob: -12.517157554626465
    9. '    
' → logprob: -12.642157554626465
    10. 'pair' → logprob: -12.767157554626465

Token 293: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -7.3458322731312364e-06
    2. ' count' → logprob: -12.250007629394531
    3. '   ' → logprob: -13.000007629394531
    4. 'counter' → logprob: -15.625007629394531
    5. 'pairs' → logprob: -16.25000762939453
    6. 'pair' → logprob: -17.87500762939453
    7. '	count' → logprob: -19.00000762939453
    8. ' ' → logprob: -20.00000762939453
    9. 'counts' → logprob: -20.25000762939453
    10. 'result' → logprob: -20.37500762939453

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019287518225610256
    2. '=' → logprob: -6.251928806304932
    3. ' +=' → logprob: -17.126928329467773
    4. ' ' → logprob: -17.501928329467773
    5. ' ' → logprob: -18.001928329467773
    6. ',' → logprob: -18.001928329467773
    7. 'space' → logprob: -18.751928329467773
    8. ' =
' → logprob: -18.876928329467773
    9. '  ' → logprob: -19.126928329467773
    10. '_' → logprob: -19.376928329467773

Token 295: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324547804892063
    2. ' ' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.773244857788086
    4. ' ' → logprob: -19.148244857788086
    5. '=' → logprob: -20.648244857788086
    6. '۰' → logprob: -21.210744857788086
    7. '  ' → logprob: -21.648244857788086
    8. 'n' → logprob: -21.648244857788086
    9. '```' → logprob: -21.648244857788086
    10. '1' → logprob: -21.960744857788086

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. 'sum' → logprob: -20.0
    4. '۰' → logprob: -22.375
    5. 'n' → logprob: -22.75
    6. '=' → logprob: -22.875
    7. '   ' → logprob: -23.125
    8. 'len' → logprob: -23.125
    9. '```' → logprob: -23.75
    10. '０' → logprob: -23.75

Token 297: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009978946298360825
    2. '    
' → logprob: -5.134978771209717
    3. '
' → logprob: -5.884978771209717
    4. ' for' → logprob: -7.134978771209717
    5. '   
' → logprob: -8.509979248046875
    6. ' 
' → logprob: -9.259979248046875
    7. '  
' → logprob: -9.509979248046875
    8. 'for' → logprob: -9.509979248046875
    9. '  ' → logprob: -12.509979248046875
    10. ',' → logprob: -12.884979248046875

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011772842844948173
    2. 'for' → logprob: -9.250117301940918
    3. ' for' → logprob: -10.750117301940918
    4. '    
' → logprob: -17.375118255615234
    5. '	for' → logprob: -17.750118255615234
    6. '   ' → logprob: -18.375118255615234
    7. '
' → logprob: -18.750118255615234
    8. '```' → logprob: -19.250118255615234
    9. '  ' → logprob: -19.375118255615234
    10. '       ' → logprob: -19.625118255615234

Token 299: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.686778503237292e-05
    2. 'p' → logprob: -9.500097274780273
    3. ' for' → logprob: -10.750097274780273
    4. '   ' → logprob: -14.500097274780273
    5. '	for' → logprob: -19.125097274780273
    6. 'i' → logprob: -19.500097274780273
    7. 'prime' → logprob: -20.125097274780273
    8. ' p' → logprob: -20.625097274780273
    9. '```' → logprob: -21.250097274780273
    10. 'half' → logprob: -21.250097274780273

Token 300: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0067559825256466866
    2. ' p' → logprob: -5.131755828857422
    3. 'i' → logprob: -7.256755828857422
    4. 'prime' → logprob: -9.631755828857422
    5. ' i' → logprob: -10.256755828857422
    6. 'num' → logprob: -11.131755828857422
    7. ' prime' → logprob: -12.631755828857422
    8. 'number' → logprob: -14.006755828857422
    9. ' num' → logprob: -14.006755828857422
    10. 'a' → logprob: -15.006755828857422

Token 301: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06386695057153702
    2. 'r' → logprob: -3.3138668537139893
    3. '1' → logprob: -3.6888668537139893
    4. 'in' → logprob: -7.688867092132568
    5. ' ' → logprob: -11.31386661529541
    6. '   ' → logprob: -12.18886661529541
    7. '_' → logprob: -12.56386661529541
    8. 'ri' → logprob: -12.56386661529541
    9. 'i' → logprob: -12.68886661529541
    10. '_r' → logprob: -12.93886661529541

Token 302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005235190503299236
    2. 'in' → logprob: -5.255235195159912
    3. ' ' → logprob: -13.880234718322754
    4. '   ' → logprob: -15.505234718322754
    5. 'p' → logprob: -16.25523567199707
    6. 'n' → logprob: -17.00523567199707
    7. '	in' → logprob: -17.00523567199707
    8. '  ' → logprob: -17.75523567199707
    9. ',' → logprob: -17.88023567199707
    10. '    ' → logprob: -17.88023567199707

Token 303: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07888989895582199
    2. ' range' → logprob: -2.578889846801758
    3. '	range' → logprob: -16.828889846801758
    4. ' ' → logprob: -17.078889846801758
    5. '(range' → logprob: -17.078889846801758
    6. '   ' → logprob: -17.203889846801758
    7. '  ' → logprob: -19.203889846801758
    8. '2' → logprob: -20.703889846801758
    9. '    ' → logprob: -20.703889846801758
    10. '_range' → logprob: -21.328889846801758

Token 304: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.253090865968261e-06
    2. '2' → logprob: -11.625009536743164
    3. ' (' → logprob: -15.375009536743164
    4. '(
' → logprob: -19.000009536743164
    5. '[' → logprob: -19.250009536743164
    6. ' ' → logprob: -20.250009536743164
    7. '((' → logprob: -21.000009536743164
    8. '   ' → logprob: -21.125009536743164
    9. '
' → logprob: -21.750009536743164
    10. ',' → logprob: -21.875009536743164

Token 305: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.125006675720215
    3. '(' → logprob: -13.750006675720215
    4. '   ' → logprob: -18.2500057220459
    5. '２' → logprob: -19.5000057220459
    6. 'n' → logprob: -19.8750057220459
    7. '    ' → logprob: -20.5000057220459
    8. '_' → logprob: -20.6250057220459
    9. '۲' → logprob: -20.7500057220459
    10. '(n' → logprob: -20.8750057220459

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. ',n' → logprob: -11.625017166137695
    3. ' ,' → logprob: -11.750017166137695
    4. ',(' → logprob: -15.250017166137695
    5. '   ' → logprob: -15.500017166137695
    6. ',
' → logprob: -16.375017166137695
    7. ',p' → logprob: -16.625017166137695
    8. 'n' → logprob: -16.875017166137695
    9. '(n' → logprob: -18.000017166137695
    10. ',int' → logprob: -19.125017166137695

Token 307: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006725788116455078
    2. '(n' → logprob: -5.006725788116455
    3. ' n' → logprob: -11.631725311279297
    4. '   ' → logprob: -14.256725311279297
    5. ' (' → logprob: -14.506725311279297
    6. '(' → logprob: -15.256725311279297
    7. '	n' → logprob: -15.756725311279297
    8. '_n' → logprob: -18.381725311279297
    9. '[n' → logprob: -19.131725311279297
    10. '
' → logprob: -19.881725311279297

Token 308: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04859498515725136
    2. ' //' → logprob: -3.0485949516296387
    3. '   ' → logprob: -11.923595428466797
    4. ' ' → logprob: -14.048595428466797
    5. '
' → logprob: -15.923595428466797
    6. '```' → logprob: -16.798595428466797
    7. '  ' → logprob: -17.173595428466797
    8. '    ' → logprob: -17.923595428466797
    9. '2' → logprob: -18.048595428466797
    10. '[' → logprob: -18.548595428466797

Token 309: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۲' → logprob: -18.500009536743164
    4. '   ' → logprob: -19.625009536743164
    5. '２' → logprob: -20.125009536743164
    6. '
' → logprob: -20.375009536743164
    7. '```' → logprob: -20.375009536743164
    8. '२' → logprob: -20.625009536743164
    9. '٢' → logprob: -21.125009536743164
    10. '

' → logprob: -21.250009536743164

Token 310: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693148672580719
    2. ' +' → logprob: -0.693148672580719
    3. '   ' → logprob: -14.318148612976074
    4. ' ' → logprob: -14.818148612976074
    5. ')+' → logprob: -15.318148612976074
    6. '()+' → logprob: -16.81814956665039
    7. ')' → logprob: -17.19314956665039
    8. '    ' → logprob: -17.19314956665039
    9. '1' → logprob: -17.31814956665039
    10. '＋' → logprob: -17.44314956665039

Token 311: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.2500057220459
    4. '  ' → logprob: -19.7500057220459
    5. '2' → logprob: -20.1250057220459
    6. ')' → logprob: -20.6250057220459
    7. '۱' → logprob: -20.7500057220459
    8. '    ' → logprob: -21.1250057220459
    9. '
' → logprob: -21.1250057220459
    10. '１' → logprob: -21.5000057220459

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '۱' → logprob: -20.625001907348633
    5. '2' → logprob: -20.750001907348633
    6. '１' → logprob: -21.125001907348633
    7. '  ' → logprob: -21.750001907348633
    8. '

' → logprob: -22.187501907348633
    9. '
' → logprob: -22.250001907348633
    10. '```' → logprob: -22.312501907348633

Token 313: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25270992517471313
    2. '):' → logprob: -1.5027098655700684
    3. '   ' → logprob: -7.252709865570068
    4. '):
' → logprob: -10.127710342407227
    5. ':' → logprob: -10.877710342407227
    6. '       ' → logprob: -12.252710342407227
    7. ')' → logprob: -12.377710342407227
    8. ' ):
' → logprob: -12.877710342407227
    9. ':
' → logprob: -14.127710342407227
    10. '):

' → logprob: -14.377710342407227

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014251544780563563
    2. '   ' → logprob: -9.250142097473145
    3. ' if' → logprob: -10.500142097473145
    4. '<|end|>' → logprob: -11.875142097473145
    5. '        
' → logprob: -12.250142097473145
    6. '  
' → logprob: -14.125142097473145
    7. ' 
' → logprob: -14.375142097473145
    8. '    
' → logprob: -14.375142097473145
    9. '           ' → logprob: -14.500142097473145
    10. '
' → logprob: -14.500142097473145

Token 315: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.64949631690979
    2. ' if' → logprob: -0.89949631690979
    3. 'if' → logprob: -2.64949631690979
    4. '   ' → logprob: -8.399496078491211
    5. '	if' → logprob: -13.024496078491211
    6. '           ' → logprob: -14.024496078491211
    7. ' ' → logprob: -14.399496078491211
    8. '    ' → logprob: -14.774496078491211
    9. '```' → logprob: -15.524496078491211
    10. '	   ' → logprob: -15.649496078491211

Token 316: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007755572441965342
    2. 'r' → logprob: -4.882755756378174
    3. 'if' → logprob: -8.882755279541016
    4. '   ' → logprob: -12.882755279541016
    5. ' if' → logprob: -13.507755279541016
    6. ' ' → logprob: -14.007755279541016
    7. 'ri' → logprob: -14.132755279541016
    8. 'for' → logprob: -14.507755279541016
    9. 'ython' → logprob: -14.632755279541016
    10. ' r' → logprob: -14.632755279541016

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687604665756226
    2. ' =' → logprob: -1.136876106262207
    3. '=n' → logprob: -12.761876106262207
    4. '=
' → logprob: -13.511876106262207
    5. ' =
' → logprob: -14.261876106262207
    6. '   ' → logprob: -16.38687515258789
    7. '    ' → logprob: -16.88687515258789
    8. '＝' → logprob: -16.88687515258789
    9. '=

' → logprob: -17.63687515258789
    10. '	' → logprob: -18.01187515258789

Token 318: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38687703013420105
    2. ' n' → logprob: -1.1368770599365234
    3. '   ' → logprob: -12.386877059936523
    4. '	n' → logprob: -13.386877059936523
    5. '(n' → logprob: -15.761877059936523
    6. ' ' → logprob: -17.386877059936523
    7. '    ' → logprob: -17.511877059936523
    8. ' ' → logprob: -17.636877059936523
    9. '[n' → logprob: -17.886877059936523
    10. '_n' → logprob: -18.136877059936523

Token 319: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25198671221733093
    2. '-' → logprob: -1.5019867420196533
    3. '-p' → logprob: -9.876986503601074
    4. '   ' → logprob: -12.251986503601074
    5. ' ' → logprob: -14.126986503601074
    6. ')' → logprob: -15.876986503601074
    7. '    ' → logprob: -16.00198745727539
    8. 'p' → logprob: -16.50198745727539
    9. '```' → logprob: -16.62698745727539
    10. '       ' → logprob: -16.75198745727539

Token 320: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.246537173457909e-06
    2. ' p' → logprob: -12.375003814697266
    3. '<p' → logprob: -19.500003814697266
    4. '	p' → logprob: -21.250003814697266
    5. '   ' → logprob: -21.750003814697266
    6. ' ' → logprob: -22.500003814697266
    7. '[p' → logprob: -23.250003814697266
    8. ''p' → logprob: -23.625003814697266
    9. '$p' → logprob: -23.875003814697266
    10. '(p' → logprob: -23.875003814697266

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.625
    4. '```' → logprob: -16.9375
    5. 'p' → logprob: -17.5625
    6. '_' → logprob: -18.0
    7. ',' → logprob: -18.1875
    8. ')' → logprob: -18.375
    9. '   ' → logprob: -18.375
    10. 'r' → logprob: -18.375

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022348284255713224
    2. '
' → logprob: -6.627234935760498
    3. '   ' → logprob: -7.377234935760498
    4. '        
' → logprob: -9.37723445892334
    5. '<|end|>' → logprob: -9.37723445892334
    6. ' if' → logprob: -10.37723445892334
    7. '  
' → logprob: -11.25223445892334
    8. ':' → logprob: -11.75223445892334
    9. '	' → logprob: -11.75223445892334
    10. ',' → logprob: -11.87723445892334

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018613664724398404
    2. '
' → logprob: -9.3751859664917
    3. '   ' → logprob: -9.5001859664917
    4. '        
' → logprob: -11.0001859664917
    5. '<|end|>' → logprob: -12.7501859664917
    6. '  
' → logprob: -13.3751859664917
    7. '    
' → logprob: -13.3751859664917
    8. ' if' → logprob: -14.1251859664917
    9. ',' → logprob: -14.2501859664917
    10. '           ' → logprob: -14.7501859664917

Token 324: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3590496778488159
    2. '       ' → logprob: -1.359049677848816
    3. ' if' → logprob: -3.1090497970581055
    4. '   ' → logprob: -9.234049797058105
    5. '	if' → logprob: -11.484049797058105
    6. ' ' → logprob: -13.484049797058105
    7. '	' → logprob: -13.734049797058105
    8. '           ' → logprob: -14.734049797058105
    9. '```' → logprob: -15.234049797058105
    10. '	   ' → logprob: -15.359049797058105

Token 325: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.34844884276390076
    2. 'is' → logprob: -1.2234488725662231
    3. '   ' → logprob: -13.473448753356934
    4. 'p' → logprob: -13.973448753356934
    5. ' ' → logprob: -14.473448753356934
    6. ' p' → logprob: -14.723448753356934
    7. '	is' → logprob: -14.723448753356934
    8. '(is' → logprob: -15.848448753356934
    9. '    ' → logprob: -16.59844970703125
    10. '_is' → logprob: -16.72344970703125

Token 326: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -4.632542913896032e-05
    2. '_' → logprob: -10.125046730041504
    3. 'prime' → logprob: -12.750046730041504
    4. ' _' → logprob: -13.125046730041504
    5. '_p' → logprob: -14.500046730041504
    6. '_pr' → logprob: -15.000046730041504
    7. 'p' → logprob: -15.750046730041504
    8. ''_' → logprob: -16.250045776367188
    9. ')_' → logprob: -16.875045776367188
    10. ' prime' → logprob: -17.250045776367188

Token 327: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.750001907348633
    3. 'p' → logprob: -14.625001907348633
    4. ' [' → logprob: -15.875001907348633
    5. ' p' → logprob: -19.000001907348633
    6. '(p' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.375001907348633
    8. '[P' → logprob: -19.750001907348633
    9. ')[' → logprob: -20.000001907348633
    10. '][' → logprob: -20.250001907348633

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020723124966025352
    2. '2' → logprob: -3.8957231044769287
    3. 'r' → logprob: -8.645723342895508
    4. 'p' → logprob: -14.208223342895508
    5. '```' → logprob: -14.333223342895508
    6. ']' → logprob: -14.520723342895508
    7. '])' → logprob: -15.208223342895508
    8. ')' → logprob: -15.520723342895508
    9. 'ri' → logprob: -15.583223342895508
    10. '[' → logprob: -15.895723342895508

Token 329: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009942959062755108
    2. 'and' → logprob: -5.009943008422852
    3. ']' → logprob: -5.759943008422852
    4. ' ]' → logprob: -9.759943008422852
    5. ')' → logprob: -12.134943008422852
    6. ' ' → logprob: -12.759943008422852
    7. '        ' → logprob: -12.884943008422852
    8. '    ' → logprob: -14.134943008422852
    9. '       ' → logprob: -15.009943008422852
    10. ' )' → logprob: -15.009943008422852

Token 330: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38687190413475037
    2. 'and' → logprob: -1.1368719339370728
    3. '    ' → logprob: -14.761872291564941
    4. ' ' → logprob: -15.261872291564941
    5. '   ' → logprob: -16.261871337890625
    6. '	and' → logprob: -17.011871337890625
    7. ' an' → logprob: -17.261871337890625
    8. '        ' → logprob: -17.636871337890625
    9. ' и' → logprob: -17.761871337890625
    10. ' a' → logprob: -17.886871337890625

Token 331: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20141363143920898
    2. 'is' → logprob: -1.701413631439209
    3. '   ' → logprob: -15.701414108276367
    4. ' ' → logprob: -17.076414108276367
    5. 'p' → logprob: -17.326414108276367
    6. '	is' → logprob: -17.576414108276367
    7. '    ' → logprob: -18.076414108276367
    8. ' p' → logprob: -18.326414108276367
    9. ' ' → logprob: -18.451414108276367
    10. '(is' → logprob: -18.701414108276367

Token 332: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00026634239475242794
    2. 'prime' → logprob: -8.250266075134277
    3. 'r' → logprob: -13.125266075134277
    4. 'p' → logprob: -13.250266075134277
    5. '_' → logprob: -14.250266075134277
    6. '_p' → logprob: -15.500266075134277
    7. '_pr' → logprob: -15.875266075134277
    8. 'pr' → logprob: -16.625267028808594
    9. '```' → logprob: -17.000267028808594
    10. '_true' → logprob: -17.000267028808594

Token 333: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.696889623621246e-06
    2. 'p' → logprob: -13.37500286102295
    3. '(p' → logprob: -14.37500286102295
    4. '[' → logprob: -14.62500286102295
    5. ' [' → logprob: -17.625001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '[
' → logprob: -18.375001907348633
    8. '	p' → logprob: -19.625001907348633
    9. ' p' → logprob: -19.750001907348633
    10. '[P' → logprob: -19.875001907348633

Token 334: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.625
    3. '```' → logprob: -16.25
    4. 'p' → logprob: -17.625
    5. '۲' → logprob: -17.625
    6. '₂' → logprob: -18.0
    7. '   ' → logprob: -18.3125
    8. 'r' → logprob: -18.5
    9. 'er' → logprob: -18.875
    10. ']' → logprob: -19.0625

Token 335: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.018958888947963715
    2. ':' → logprob: -4.268959045410156
    3. '):' → logprob: -5.643959045410156
    4. ']' → logprob: -7.018959045410156
    5. ']:
' → logprob: -8.518959045410156
    6. '}:' → logprob: -9.768959045410156
    7. '   ' → logprob: -10.893959045410156
    8. ' and' → logprob: -11.018959045410156
    9. ']):' → logprob: -11.393959045410156
    10. '       ' → logprob: -11.643959045410156

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.339278580620885e-06
    2. '		' → logprob: -14.250001907348633
    3. '       ' → logprob: -14.625001907348633
    4. '          ' → logprob: -15.000001907348633
    5. '
' → logprob: -15.250001907348633
    6. '               ' → logprob: -15.375001907348633
    7. ',' → logprob: -16.500001907348633
    8. '	       ' → logprob: -16.750001907348633
    9. '            
' → logprob: -16.750001907348633
    10. ':' → logprob: -16.875001907348633

Token 337: ' count' (ID: 3605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09690078347921371
    2. 'count' (adapté à ' count') → logprob: -2.846900701522827
    3. ' count' → logprob: -4.096900939941406
    4. '       ' → logprob: -4.471900939941406
    5. '               ' → logprob: -5.096900939941406
    6. '   ' → logprob: -8.971900939941406
    7. '	count' → logprob: -10.596900939941406
    8. '_count' → logprob: -12.471900939941406
    9. ',count' → logprob: -13.096900939941406
    10. '
' → logprob: -13.471900939941406

Token 338: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07889363914728165
    2. '+=' → logprob: -2.5788936614990234
    3. '+' → logprob: -13.078893661499023
    4. '   ' → logprob: -14.078893661499023
    5. ']+=' → logprob: -14.203893661499023
    6. '=' → logprob: -15.953893661499023
    7. '    ' → logprob: -17.203893661499023
    8. ' ' → logprob: -17.453893661499023
    9. ' ' → logprob: -17.578893661499023
    10. ')' → logprob: -17.828893661499023

Token 339: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -19.629077911376953
    4. ' ' → logprob: -21.379077911376953
    5. '```' → logprob: -21.629077911376953
    6. '１' → logprob: -22.504077911376953
    7. '  ' → logprob: -22.629077911376953
    8. '0' → logprob: -24.004077911376953
    9. '۱' → logprob: -24.004077911376953
    10. '	' → logprob: -24.191577911376953

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '   ' → logprob: -22.75
    4. '```' → logprob: -23.0
    5. '１' → logprob: -24.625
    6. '۱' → logprob: -26.125
    7. '
' → logprob: -27.0
    8. '  ' → logprob: -27.0
    9. '       ' → logprob: -27.5
    10. '१' → logprob: -27.5

Token 341: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00152009935118258
    2. 'return' → logprob: -7.001520156860352
    3. '
' → logprob: -8.001520156860352
    4. ' return' → logprob: -8.251520156860352
    5. '    
' → logprob: -11.501520156860352
    6. '	return' → logprob: -13.126520156860352
    7. ':return' → logprob: -16.00152015686035
    8. '  
' → logprob: -16.37652015686035
    9. '       ' → logprob: -16.37652015686035
    10. '
' → logprob: -17.25152015686035

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012123758206143975
    2. 'return' → logprob: -6.7512125968933105
    3. ' return' → logprob: -10.126212120056152
    4. '
' → logprob: -13.751212120056152
    5. '    
' → logprob: -14.501212120056152
    6. '	return' → logprob: -15.501212120056152
    7. '       ' → logprob: -16.00121307373047
    8. '```' → logprob: -16.62621307373047
    9. ':return' → logprob: -17.37621307373047
    10. ' ' → logprob: -18.25121307373047

Token 343: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3874257504940033
    2. 'return' (adapté à ' return') → logprob: -1.1374257802963257
    3. ' return' → logprob: -7.512425899505615
    4. '
' → logprob: -12.887425422668457
    5. '	return' → logprob: -13.262425422668457
    6. '    
' → logprob: -13.387425422668457
    7. ' ' → logprob: -14.262425422668457
    8. 'ret' → logprob: -14.387425422668457
    9. '       ' → logprob: -14.762425422668457
    10. 'r' → logprob: -15.262425422668457

Token 344: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.836499985889532e-05
    2. ' count' → logprob: -9.7500581741333
    3. '(count' → logprob: -22.125059127807617
    4. '[count' → logprob: -23.125059127807617
    5. '	count' → logprob: -23.750059127807617
    6. 'counts' → logprob: -24.000059127807617
    7. '$count' → logprob: -24.000059127807617
    8. '<count' → logprob: -25.625059127807617
    9. '_count' → logprob: -26.000059127807617
    10. '   ' → logprob: -26.000059127807617

Token 345: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3925793766975403
    2. 'if' → logprob: -1.6425793170928955
    3. 'def' → logprob: -2.2675793170928955
    4. 'n' → logprob: -3.7675793170928955
    5. '
' → logprob: -5.517579555511475
    6. '#' → logprob: -8.642579078674316
    7. ' for' → logprob: -9.142579078674316
    8. '    
' → logprob: -9.267579078674316
    9. '  
' → logprob: -9.892579078674316
    10. '```' → logprob: -10.892579078674316

Token 346: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1130710318684578
    2. 'if' → logprob: -2.3630709648132324
    3. 'def' → logprob: -4.363070964813232
    4. 'max' → logprob: -11.11307144165039
    5. 'n' → logprob: -11.23807144165039
    6. '#' → logprob: -11.61307144165039
    7. 'limit' → logprob: -12.48807144165039
    8. ' for' → logprob: -13.61307144165039
    9. 'input' → logprob: -14.48807144165039
    10. ' if' → logprob: -16.98807144165039

Token 347: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.25193020701408386
    2. ' main' → logprob: -1.5019302368164062
    3. 'gold' → logprob: -14.876930236816406
    4. 'solve' → logprob: -15.001930236816406
    5. ' gold' → logprob: -15.626930236816406
    6. ' solve' → logprob: -16.501930236816406
    7. 'process' → logprob: -16.626930236816406
    8. '	main' → logprob: -16.626930236816406
    9. 'read' → logprob: -18.876930236816406
    10. '_main' → logprob: -19.126930236816406

Token 348: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.36574100604048e-06
    2. '():
' → logprob: -13.000004768371582
    3. ' ():' → logprob: -13.250004768371582
    4. '()' → logprob: -15.875004768371582
    5. '(' → logprob: -17.125003814697266
    6. ':' → logprob: -17.375003814697266
    7. '():
' → logprob: -17.500003814697266
    8. '()>' → logprob: -18.750003814697266
    9. '():

' → logprob: -19.125003814697266
    10. '(":' → logprob: -19.875003814697266

Token 349: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36416271328926086
    2. '   ' → logprob: -1.6141626834869385
    3. ' n' → logprob: -3.7391626834869385
    4. 'for' → logprob: -3.7391626834869385
    5. ' input' → logprob: -4.114162921905518
    6. ' limit' → logprob: -4.489162921905518
    7. ' lines' → logprob: -4.614162921905518
    8. ' import' → logprob: -4.739162921905518
    9. 'n' → logprob: -4.739162921905518
    10. 'import' → logprob: -6.864162921905518

Token 350: ' #' (ID: 1069)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.38767582178115845
    2. 'for' → logprob: -1.3876757621765137
    3. 'max' → logprob: -2.8876757621765137
    4. 'input' → logprob: -4.262675762176514
    5. 'lines' → logprob: -7.137675762176514
    6. ' limit' → logprob: -8.262676239013672
    7. ' for' → logprob: -8.262676239013672
    8. 'import' → logprob: -8.262676239013672
    9. 'limits' → logprob: -8.887676239013672
    10. '   ' → logprob: -9.512676239013672

Token 351: ' Comme' (ID: 53252)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11983328312635422
    2. 'limit' → logprob: -2.74483323097229
    3. 'lines' → logprob: -3.61983323097229
    4. 'input' → logprob: -4.244833469390869
    5. 'max' → logprob: -5.494833469390869
    6. ' for' → logprob: -6.619833469390869
    7. 'import' → logprob: -7.244833469390869
    8. ' lines' → logprob: -7.869833469390869
    9. 'limits' → logprob: -7.994833469390869
    10. 'lim' → logprob: -8.119832992553711

Token 352: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2027168273925781
    2. ' les' → logprob: -2.327716827392578
    3. ' for' → logprob: -2.452716827392578
    4. ' limit' → logprob: -2.577716827392578
    5. 'len' → logprob: -2.952716827392578
    6. ' len' → logprob: -3.077716827392578
    7. ' le' → logprob: -3.077716827392578
    8. 'limit' → logprob: -3.202716827392578
    9. ' sys' → logprob: -3.327716827392578
    10. 'sys' → logprob: -3.577716827392578

Token 353: ' limite' (ID: 48939)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.2034820020198822
    2. 'entrée' → logprob: -2.203481912612915
    3. ' limite' → logprob: -3.203481912612915
    4. 'input' → logprob: -4.453482151031494
    5. 'entr' → logprob: -5.453482151031494
    6. 'suite' → logprob: -5.578482151031494
    7. 'description' → logprob: -5.703482151031494
    8. 'ligne' → logprob: -6.328482151031494
    9. 'plus' → logprob: -6.828482151031494
    10. 'pl' → logprob: -6.953482151031494

Token 354: ' maximale' (ID: 76380)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4812895953655243
    2. ' maximale' → logprob: -1.8562896251678467
    3. ' des' → logprob: -2.8562896251678467
    4. 'max' → logprob: -3.6062896251678467
    5. ' =' → logprob: -3.6062896251678467
    6. 'est' → logprob: -3.8562896251678467
    7. ' max' → logprob: -4.106289386749268
    8. ' est' → logprob: -4.231289386749268
    9. '_max' → logprob: -4.481289386749268
    10. ' maximum' → logprob: -4.606289386749268

Token 355: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.478615403175354
    2. '=' → logprob: -1.728615403175354
    3. 'de' → logprob: -2.3536152839660645
    4. 'des' → logprob: -3.4786152839660645
    5. 'est' → logprob: -4.1036152839660645
    6. ' de' → logprob: -4.2286152839660645
    7. 'd' → logprob: -4.2286152839660645
    8. ' ' → logprob: -5.1036152839660645
    9. ' des' → logprob: -5.2286152839660645
    10. 'pour' → logprob: -5.7286152839660645

Token 356: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.014543998055160046
    2. 'entrée' → logprob: -4.3895440101623535
    3. 'e' → logprob: -6.8895440101623535
    4. 'a' → logprob: -7.7645440101623535
    5. ''une' → logprob: -9.139543533325195
    6. 'input' → logprob: -9.139543533325195
    7. '’entrée' → logprob: -9.264543533325195
    8. ''ent' → logprob: -9.639543533325195
    9. ''un' → logprob: -9.889543533325195
    10. ''' → logprob: -10.264543533325195

Token 357: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1025540754199028
    2. 'n' → logprob: -2.4775540828704834
    3. ' est' → logprob: -4.602553844451904
    4. 'est' → logprob: -6.477553844451904
    5. ' =' → logprob: -7.852553844451904
    6. ' possible' → logprob: -8.227554321289062
    7. '=' → logprob: -8.602554321289062
    8. ',' → logprob: -8.727554321289062
    9. 'possible' → logprob: -8.977554321289062
    10. ' is' → logprob: -9.352554321289062

Token 358: ' <' (ID: 464)
  Prédit: '327'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '327' → logprob: -0.9788773655891418
    2. ' ' → logprob: -1.228877305984497
    3. '100' → logprob: -1.728877305984497
    4. '650' → logprob: -2.728877305984497
    5. '655' → logprob: -2.978877305984497
    6. '10' → logprob: -4.103877544403076
    7. '656' → logprob: -4.853877544403076
    8. '654' → logprob: -6.353877544403076
    9. 'int' → logprob: -6.603877544403076
    10. '664' → logprob: -6.853877544403076

Token 359: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3376791477203369
    2. '=' → logprob: -1.837679147720337
    3. '100' → logprob: -2.337679147720337
    4. ' =' → logprob: -4.712678909301758
    5. '655' → logprob: -4.712678909301758
    6. '650' → logprob: -5.087678909301758
    7. '10' → logprob: -6.587678909301758
    8. '300' → logprob: -6.837678909301758
    9. '327' → logprob: -7.087678909301758
    10. '656' → logprob: -7.462678909301758

Token 360: '2' (ID: 17)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.058071430772542953
    2. '327' → logprob: -3.4330713748931885
    3. '10' → logprob: -4.433071613311768
    4. '330' → logprob: -5.433071613311768
    5. '655' → logprob: -5.933071613311768
    6. '650' → logprob: -6.308071613311768
    7. '=' → logprob: -6.933071613311768
    8. '660' → logprob: -6.933071613311768
    9. 'int' → logprob: -8.05807113647461
    10. ' ' → logprob: -8.18307113647461

Token 361: '^' (ID: 61)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.018624991178512573
    2. '100' → logprob: -4.393624782562256
    3. '0' → logprob: -6.268624782562256
    4. '_' → logprob: -6.893624782562256
    5. '10' → logprob: -7.018624782562256
    6. '500' → logprob: -7.143624782562256
    7. '147' → logprob: -7.268624782562256
    8. ' ' → logprob: -8.643625259399414
    9. '00' → logprob: -8.893625259399414
    10. '1' → logprob: -9.018625259399414

Token 362: '15' (ID: 1055)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.10588634759187698
    2. '20' → logprob: -2.730886459350586
    3. '63' → logprob: -3.980886459350586
    4. '16' → logprob: -4.355886459350586
    5. '32' → logprob: -5.980886459350586
    6. '15' → logprob: -7.105886459350586
    7. '64' → logprob: -8.355886459350586
    8. '21' → logprob: -9.105886459350586
    9. '26' → logprob: -10.480886459350586
    10. '25' → logprob: -11.105886459350586

Token 363: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04991621524095535
    2. '   ' → logprob: -3.6749162673950195
    3. ':' → logprob: -4.6749162673950195
    4. ' (' → logprob: -4.9249162673950195
    5. '(' → logprob: -5.9249162673950195
    6. ' ,' → logprob: -5.9249162673950195
    7. ',
' → logprob: -7.7999162673950195
    8. '=' → logprob: -8.17491626739502
    9. ' ' → logprob: -8.79991626739502
    10. '6' → logprob: -9.54991626739502

Token 364: '327' (ID: 27394)
  Prédit: '327'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '327' → logprob: -0.051720019429922104
    2. '(' → logprob: -4.051720142364502
    3. ')' → logprob: -4.051720142364502
    4. '   ' → logprob: -5.426720142364502
    5. '),' → logprob: -5.551720142364502
    6. '=' → logprob: -6.176720142364502
    7. '2' → logprob: -6.426720142364502
    8. ',' → logprob: -6.551720142364502
    9. ' ' → logprob: -7.051720142364502
    10. ' =' → logprob: -8.426719665527344

Token 365: '68' (ID: 4625)
  Prédit: '68'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '68' → logprob: -4.961759259458631e-06
    2. '67' → logprob: -12.500004768371582
    3. '69' → logprob: -13.875004768371582
    4. '{' → logprob: -16.8750057220459
    5. '```' → logprob: -17.0000057220459
    6. '680' → logprob: -17.3750057220459
    7. '6' → logprob: -17.5000057220459
    8. '``' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.7500057220459
    10. '
' → logprob: -19.0000057220459

Token 366: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004981489852070808
    2. ')' → logprob: -5.379981517791748
    3. '   ' → logprob: -9.00498104095459
    4. ',' → logprob: -9.00498104095459
    5. ' ),' → logprob: -10.25498104095459
    6. '):
' → logprob: -10.25498104095459
    7. ')
' → logprob: -10.37998104095459
    8. '),
' → logprob: -12.12998104095459
    9. '):' → logprob: -12.37998104095459
    10. '):

' → logprob: -13.75498104095459

Token 367: ' on' (ID: 402)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5902849435806274
    2. '   ' → logprob: -0.8402849435806274
    3. ' limit' → logprob: -4.590284824371338
    4. 'max' → logprob: -6.090284824371338
    5. 'lim' → logprob: -6.465284824371338
    6. ' max' → logprob: -8.590285301208496
    7. ' limite' → logprob: -10.340285301208496
    8. 'LIMIT' → logprob: -11.340285301208496
    9. '  ' → logprob: -11.840285301208496
    10. '    ' → logprob: -12.090285301208496

Token 368: ' pré' (ID: 9424)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.8984249830245972
    2. 'lim' → logprob: -1.7734249830245972
    3. 'limit' → logprob: -1.8984249830245972
    4. ' limite' → logprob: -2.5234251022338867
    5. ' peut' → logprob: -2.6484251022338867
    6. 'pré' → logprob: -2.8984251022338867
    7. 'pr' → logprob: -3.1484251022338867
    8. 'max' → logprob: -5.023425102233887
    9. ' limit' → logprob: -5.148425102233887
    10. ' pourra' → logprob: -6.398425102233887

Token 369: '-cal' (ID: 84920)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.7141209840774536
    2. 'compute' → logprob: -0.9641209840774536
    3. 'calc' → logprob: -2.339120864868164
    4. 'calculate' → logprob: -3.964120864868164
    5. 'c' → logprob: -4.714120864868164
    6. 'compile' → logprob: -6.339120864868164
    7. 'computed' → logprob: -7.714120864868164
    8. 'calcul' → logprob: -7.839120864868164
    9. '-cal' → logprob: -8.089120864868164
    10. 's' → logprob: -8.214120864868164

Token 370: 'cul' (ID: 2885)
  Prédit: 'cule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.014827215112745762
    2. 'cul' → logprob: -4.264827251434326
    3. 'c' → logprob: -7.889827251434326
    4. 'ule' → logprob: -9.264826774597168
    5. '#' → logprob: -9.889826774597168
    6. '_' → logprob: -10.264826774597168
    7. '[' → logprob: -11.139826774597168
    8. '```' → logprob: -11.264826774597168
    9. 'cules' → logprob: -11.889826774597168
    10. '

' → logprob: -12.014826774597168

Token 371: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.009532596915960312
    2. 'er' → logprob: -5.259532451629639
    3. 'era' → logprob: -6.009532451629639
    4. 'ate' → logprob: -6.384532451629639
    5. 'le' → logprob: -10.009532928466797
    6. 'a' → logprob: -10.259532928466797
    7. 'te' → logprob: -11.009532928466797
    8. '#' → logprob: -11.634532928466797
    9. 'ons' → logprob: -12.134532928466797
    10. 'é' → logprob: -12.259532928466797

Token 372: ' les' (ID: 1341)
  Prédit: '327'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '327' → logprob: -0.21995708346366882
    2. 'is' → logprob: -1.8449571132659912
    3. 'le' → logprob: -4.219956874847412
    4. 'la' → logprob: -4.469956874847412
    5. 'les' → logprob: -4.719956874847412
    6. 'limit' → logprob: -6.469956874847412
    7. 'max' → logprob: -6.719956874847412
    8. '   ' → logprob: -8.09495735168457
    9. 'l' → logprob: -8.46995735168457
    10. ' la' → logprob: -8.59495735168457

Token 373: ' nombres' (ID: 76205)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5203587412834167
    2. 'is' → logprob: -1.7703588008880615
    3. 'n' → logprob: -2.3953588008880615
    4. 'prem' → logprob: -2.5203588008880615
    5. ' nombres' → logprob: -3.3953588008880615
    6. ' is' → logprob: -4.645358562469482
    7. ' premiers' → logprob: -4.895358562469482
    8. ' primes' → logprob: -5.020358562469482
    9. 'nombre' → logprob: -5.645358562469482
    10. 'prime' → logprob: -7.145358562469482

Token 374: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.021136870607733727
    2. ' premiers' → logprob: -3.89613676071167
    3. 'pr' → logprob: -7.52113676071167
    4. ' premier' → logprob: -11.271137237548828
    5. ' primi' → logprob: -12.146137237548828
    6. '   ' → logprob: -12.146137237548828
    7. 'prim' → logprob: -12.271137237548828
    8. ' prem' → logprob: -12.396137237548828
    9. 'prima' → logprob: -12.646137237548828
    10. ' ' → logprob: -12.896137237548828

Token 375: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08341675251722336
    2. 'limit' → logprob: -2.708416700363159
    3. 'max' → logprob: -4.708416938781738
    4. ' limit' → logprob: -6.208416938781738
    5. '(limit' → logprob: -7.083416938781738
    6. ',' → logprob: -7.958416938781738
    7. 'lim' → logprob: -8.083416938781738
    8. '_limit' → logprob: -8.583416938781738
    9. ' max' → logprob: -8.583416938781738
    10. '(max' → logprob: -9.583416938781738

Token 376: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.36816415190696716
    2. 'à' → logprob: -1.3681641817092896
    3. ' à' → logprob: -4.1181640625
    4. ''au' → logprob: -4.2431640625
    5. '’à' → logprob: -4.4931640625
    6. 'au' → logprob: -4.9931640625
    7. 'a' → logprob: -6.1181640625
    8. '327' → logprob: -7.6181640625
    9. '32' → logprob: -7.6181640625
    10. '(' → logprob: -7.9931640625

Token 377: ' cette' (ID: 7696)
  Prédit: '327'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '327' → logprob: -0.00015622020873706788
    2. ' ' → logprob: -8.87515640258789
    3. '2' → logprob: -11.37515640258789
    4. '330' → logprob: -13.25015640258789
    5. '329' → logprob: -13.87515640258789
    6. '(' → logprob: -14.37515640258789
    7. '328' → logprob: -14.75015640258789
    8. '331' → logprob: -15.25015640258789
    9. '   ' → logprob: -15.37515640258789
    10. '655' → logprob: -15.75015640258789

Token 378: ' limite' (ID: 48939)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.01566876657307148
    2. 'val' → logprob: -4.890668869018555
    3. ' limite' → logprob: -5.265668869018555
    4. 'limit' → logprob: -5.890668869018555
    5. 'borne' → logprob: -10.640668869018555
    6. ' valeur' → logprob: -11.515668869018555
    7. '327' → logprob: -11.765668869018555
    8. '_lim' → logprob: -11.765668869018555
    9. ' limit' → logprob: -12.140668869018555
    10. 'value' → logprob: -12.140668869018555

Token 379: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020612843800336123
    2. 'limit' → logprob: -7.377061367034912
    3. 'max' → logprob: -7.502061367034912
    4. ':' → logprob: -8.377060890197754
    5. ' limit' → logprob: -8.502060890197754
    6. '.' → logprob: -8.752060890197754
    7. ',' → logprob: -8.877060890197754
    8. ' max' → logprob: -9.627060890197754
    9. '327' → logprob: -10.752060890197754
    10. '(max' → logprob: -11.127060890197754

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014863856136798859
    2. 'limit' → logprob: -4.764863967895508
    3. ' limit' → logprob: -5.264863967895508
    4. 'max' → logprob: -8.139863967895508
    5. 'LIMIT' → logprob: -8.264863967895508
    6. 'MAX' → logprob: -8.389863967895508
    7. ' max' → logprob: -8.764863967895508
    8. ' LIMIT' → logprob: -9.639863967895508
    9. ' MAX' → logprob: -9.889863967895508
    10. 'import' → logprob: -13.264863967895508

Token 381: ' MAX' (ID: 16960)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.09966785460710526
    2. 'MAX' (adapté à ' MAX') → logprob: -3.34966778755188
    3. 'max' → logprob: -3.72466778755188
    4. 'LIMIT' → logprob: -3.97466778755188
    5. ' limit' → logprob: -4.474668025970459
    6. '   ' → logprob: -5.349668025970459
    7. ' max' → logprob: -7.599668025970459
    8. ' MAX' → logprob: -8.8496675491333
    9. ' LIMIT' → logprob: -10.2246675491333
    10. 'lim' → logprob: -10.9746675491333

Token 382: '_LIMIT' (ID: 64862)
  Prédit: '_LIMIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIMIT' → logprob: -0.005100695416331291
    2. ' =' → logprob: -5.630100727081299
    3. '_N' → logprob: -8.13010025024414
    4. '_' → logprob: -8.13010025024414
    5. '_VALUE' → logprob: -8.25510025024414
    6. '_NUM' → logprob: -8.63010025024414
    7. '_INPUT' → logprob: -9.00510025024414
    8. '=' → logprob: -9.13010025024414
    9. '_NUMBER' → logprob: -9.38010025024414
    10. '_VAL' → logprob: -9.50510025024414

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132619559764862
    2. '=' → logprob: -1.3132619857788086
    3. '=int' → logprob: -16.813261032104492
    4. '   ' → logprob: -16.813261032104492
    5. ',' → logprob: -17.313261032104492
    6. '＝' → logprob: -17.688261032104492
    7. ' ' → logprob: -18.063261032104492
    8. '```' → logprob: -18.188261032104492
    9. '=

' → logprob: -19.438261032104492
    10. ')' → logprob: -19.938261032104492

Token 384: ' ' (ID: 220)
  Prédit: '327'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '327' → logprob: -0.0028582511004060507
    2. ' ' → logprob: -5.8778581619262695
    3. '2' → logprob: -9.87785816192627
    4. '32' → logprob: -13.75285816192627
    5. '328' → logprob: -14.62785816192627
    6. '(' → logprob: -15.37785816192627
    7. '   ' → logprob: -16.127859115600586
    8. '326' → logprob: -16.377859115600586
    9. '325' → logprob: -16.627859115600586
    10. '  ' → logprob: -17.002859115600586

Token 385: '327' (ID: 27394)
  Prédit: '327'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '327' → logprob: -4.0126840758603066e-05
    2. '2' → logprob: -10.375040054321289
    3. ' ' → logprob: -11.750040054321289
    4. '32' → logprob: -14.500040054321289
    5. '(' → logprob: -15.500040054321289
    6. '328' → logprob: -16.12504005432129
    7. '326' → logprob: -17.00004005432129
    8. '325' → logprob: -17.37504005432129
    9. '   ' → logprob: -17.75004005432129
    10. '  ' → logprob: -18.12504005432129

Token 386: '68' (ID: 4625)
  Prédit: '68'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '68' → logprob: -1.9361264946837764e-07
    2. '6' → logprob: -16.0
    3. '680' → logprob: -17.25
    4. '67' → logprob: -17.875
    5. '28' → logprob: -19.875
    6. '66' → logprob: -20.75
    7. '
' → logprob: -20.875
    8. '69' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. '   ' → logprob: -21.75

Token 387: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009797057136893272
    2. '   ' → logprob: -4.884797096252441
    3. '    
' → logprob: -6.634797096252441
    4. '
' → logprob: -7.759797096252441
    5. 'is' → logprob: -8.384797096252441
    6. ' is' → logprob: -8.759797096252441
    7. '   
' → logprob: -11.009797096252441
    8. ' 
' → logprob: -11.009797096252441
    9. '  
' → logprob: -11.134797096252441
    10. '' → logprob: -12.259797096252441

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027413968928158283
    2. 'is' → logprob: -6.75274133682251
    3. ' is' → logprob: -7.12774133682251
    4. '
' → logprob: -7.75274133682251
    5. '    
' → logprob: -8.002741813659668
    6. '	is' → logprob: -14.252741813659668
    7. '   
' → logprob: -14.502741813659668
    8. '   ' → logprob: -15.002741813659668
    9. '
' → logprob: -15.127741813659668
    10. '```' → logprob: -15.377741813659668

Token 389: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.0003131784324068576
    2. ' is' → logprob: -8.500312805175781
    3. 'pr' → logprob: -9.375312805175781
    4. '   ' → logprob: -10.750312805175781
    5. 'prime' → logprob: -12.875312805175781
    6. ' primes' → logprob: -14.375312805175781
    7. '    
' → logprob: -16.62531280517578
    8. '	is' → logprob: -16.87531280517578
    9. '```' → logprob: -17.12531280517578
    10. ' ' → logprob: -18.00031280517578

Token 390: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0019497022731229663
    2. '_' → logprob: -6.251949787139893
    3. '_pr' → logprob: -12.001949310302734
    4. '_p' → logprob: -12.126949310302734
    5. ' _' → logprob: -12.251949310302734
    6. '_pi' → logprob: -13.626949310302734
    7. '_prior' → logprob: -14.876949310302734
    8. '_pal' → logprob: -15.001949310302734
    9. ''_' → logprob: -15.126949310302734
    10. '_private' → logprob: -15.251949310302734

Token 391: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. '＝' → logprob: -18.001928329467773
    4. '[' → logprob: -18.376928329467773
    5. ' ' → logprob: -18.501928329467773
    6. ' =
' → logprob: -18.626928329467773
    7. '   ' → logprob: -19.126928329467773
    8. ' ' → logprob: -19.251928329467773
    9. '_' → logprob: -19.501928329467773
    10. '	' → logprob: -19.626928329467773

Token 392: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0052354102954268456
    2. ' sieve' → logprob: -5.255235195159912
    3. 'sie' → logprob: -13.50523567199707
    4. '	s' → logprob: -16.13023567199707
    5. ' ' → logprob: -17.38023567199707
    6. ' ' → logprob: -17.75523567199707
    7. '```' → logprob: -18.00523567199707
    8. '   ' → logprob: -18.00523567199707
    9. ' s' → logprob: -18.13023567199707
    10. '(s' → logprob: -18.13023567199707

Token 393: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: 0.0
    2. '_' → logprob: -17.375
    3. '_OF' → logprob: -19.625
    4. ' _' → logprob: -19.75
    5. '_or' → logprob: -20.375
    6. '_o' → logprob: -20.625
    7. '_for' → logprob: -20.625
    8. '_off' → logprob: -20.75
    9. 'of' → logprob: -21.5
    10. '_is' → logprob: -22.0

Token 394: '_' (ID: 62)
  Prédit: 'erat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erat' → logprob: -0.014229914173483849
    2. '_' → logprob: -4.264229774475098
    3. 'arat' → logprob: -10.139229774475098
    4. 'rat' → logprob: -10.764229774475098
    5. 'er' → logprob: -13.639229774475098
    6. 'orat' → logprob: -13.764229774475098
    7. 'eras' → logprob: -14.514229774475098
    8. ' erat' → logprob: -14.639229774475098
    9. 'r' → logprob: -15.014229774475098
    10. 'irat' → logprob: -15.014229774475098

Token 395: 'erat' (ID: 73282)
  Prédit: 'erat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erat' → logprob: -1.981667537620524e-06
    2. 'arat' → logprob: -13.625001907348633
    3. 'rat' → logprob: -14.750001907348633
    4. ' erat' → logprob: -16.500001907348633
    5. 'eras' → logprob: -17.000001907348633
    6. 'erap' → logprob: -17.750001907348633
    7. 'erit' → logprob: -17.750001907348633
    8. 'orat' → logprob: -17.875001907348633
    9. 'er' → logprob: -17.875001907348633
    10. 'etat' → logprob: -18.375001907348633

Token 396: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0001146291324403137
    2. 'st' → logprob: -9.250114440917969
    3. 'os' → logprob: -11.375114440917969
    4. 'osten' → logprob: -12.000114440917969
    5. 'oth' → logprob: -14.875114440917969
    6. 'sten' → logprob: -15.750114440917969
    7. 'osph' → logprob: -16.37511444091797
    8. ' ost' → logprob: -17.00011444091797
    9. 's' → logprob: -17.12511444091797
    10. 'sth' → logprob: -17.25011444091797

Token 397: 'hen' (ID: 5447)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.8352843523025513
    2. 'enes' → logprob: -0.9602843523025513
    3. 'hen' → logprob: -1.7102843523025513
    4. 'en' → logprob: -6.710284233093262
    5. 'then' → logprob: -6.960284233093262
    6. 'nes' → logprob: -8.460284233093262
    7. 'os' → logprob: -9.585284233093262
    8. 'h' → logprob: -10.085284233093262
    9. 'phen' → logprob: -10.460284233093262
    10. 'hes' → logprob: -11.210284233093262

Token 398: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -6.704273118884885e-07
    2. 's' → logprob: -14.375000953674316
    3. 'nes' → logprob: -17.25
    4. 'res' → logprob: -17.875
    5. 'tes' → logprob: -17.875
    6. 'e' → logprob: -18.125
    7. '_' → logprob: -18.625
    8. 'is' → logprob: -18.625
    9. 'ses' → logprob: -18.75
    10. 'en' → logprob: -18.875

Token 399: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.00033581978641450405
    2. '(' → logprob: -8.000335693359375
    3. ' (' → logprob: -15.125335693359375
    4. '(
' → logprob: -16.750335693359375
    5. '(Max' → logprob: -17.125335693359375
    6. '(NUM' → logprob: -17.750335693359375
    7. '(max' → logprob: -17.750335693359375
    8. '(M' → logprob: -18.625335693359375
    9. '(DEFAULT' → logprob: -18.625335693359375
    10. '((' → logprob: -19.125335693359375

Token 400: '_LIMIT' (ID: 64862)
  Prédit: '_LIMIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIMIT' → logprob: -6.704273118884885e-07
    2. '_limit' → logprob: -14.750000953674316
    3. 'LIMIT' → logprob: -15.750000953674316
    4. '_MAX' → logprob: -16.625
    5. ' _' → logprob: -18.625
    6. 'Limit' → logprob: -18.625
    7. '_THRESHOLD' → logprob: -20.0
    8. '   ' → logprob: -20.5
    9. ' limit' → logprob: -20.5
    10. '_' → logprob: -20.625

Token 401: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.000000953674316
    4. '   ' → logprob: -18.500001907348633
    5. ')

' → logprob: -19.000001907348633
    6. '))' → logprob: -19.250001907348633
    7. ')`' → logprob: -19.375001907348633
    8. ')
' → logprob: -20.000001907348633
    9. '),' → logprob: -21.000001907348633
    10. ')#' → logprob: -21.375001907348633

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2066715806722641
    2. 'for' → logprob: -2.2066714763641357
    3. ' for' → logprob: -2.7066714763641357
    4. '
' → logprob: -4.706671714782715
    5. '    
' → logprob: -7.331671714782715
    6. 'while' → logprob: -9.081671714782715
    7. ' while' → logprob: -9.581671714782715
    8. ' 
' → logprob: -12.331671714782715
    9. '	for' → logprob: -12.706671714782715
    10. '  
' → logprob: -12.831671714782715

Token 403: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.25
    3. 'while' → logprob: -17.625
    4. '   ' → logprob: -19.75
    5. 'lines' → logprob: -20.125
    6. 'import' → logprob: -20.625
    7. 'try' → logprob: -22.0
    8. '	for' → logprob: -22.5
    9. '```' → logprob: -22.875
    10. 'line' → logprob: -24.125

Token 404: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.000464631273644045
    2. ' ligne' → logprob: -7.75046443939209
    3. 'line' → logprob: -10.37546443939209
    4. '	line' → logprob: -13.25046443939209
    5. ' linha' → logprob: -14.75046443939209
    6. 'ligne' → logprob: -15.00046443939209
    7. ' n' → logprob: -16.375465393066406
    8. ' lijn' → logprob: -16.500465393066406
    9. ' linea' → logprob: -17.500465393066406
    10. 'n' → logprob: -17.500465393066406

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00976199097931385
    2. 'in' → logprob: -4.634761810302734
    3. ' ' → logprob: -12.384761810302734
    4. '	in' → logprob: -14.884761810302734
    5. 'import' → logprob: -15.259761810302734
    6. ' i' → logprob: -15.509761810302734
    7. '_in' → logprob: -15.509761810302734
    8. '_' → logprob: -15.759761810302734
    9. 'en' → logprob: -15.884761810302734
    10. ' ' → logprob: -16.259761810302734

Token 406: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1269301027059555
    2. 'sys' → logprob: -2.126929998397827
    3. '=sys' → logprob: -13.751930236816406
    4. '	sys' → logprob: -14.376930236816406
    5. '(sys' → logprob: -14.751930236816406
    6. 'Sys' → logprob: -20.001930236816406
    7. 'stdin' → logprob: -20.126930236816406
    8. '.sys' → logprob: -20.251930236816406
    9. '_sys' → logprob: -20.501930236816406
    10. 'in' → logprob: -20.626930236816406

Token 407: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007175540085881948
    2. '.' → logprob: -7.375717639923096
    3. 'stdin' → logprob: -10.000717163085938
    4. '.readline' → logprob: -10.375717163085938
    5. '(stdin' → logprob: -12.125717163085938
    6. 'in' → logprob: -13.000717163085938
    7. '.stdout' → logprob: -13.125717163085938
    8. '.argv' → logprob: -13.375717163085938
    9. ' stdin' → logprob: -13.625717163085938
    10. '.in' → logprob: -14.125717163085938

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02026822790503502
    2. '.strip' → logprob: -4.145268440246582
    3. ':
' → logprob: -6.770268440246582
    4. ' in' → logprob: -6.895268440246582
    5. '():' → logprob: -7.395268440246582
    6. '.rstrip' → logprob: -7.395268440246582
    7. '.readline' → logprob: -8.270268440246582
    8. '():
' → logprob: -8.395268440246582
    9. '):' → logprob: -9.270268440246582
    10. ' :' → logprob: -9.770268440246582

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006264235358685255
    2. '   ' → logprob: -5.2562642097473145
    3. ':' → logprob: -7.2562642097473145
    4. ':
' → logprob: -8.881264686584473
    5. ' n' → logprob: -9.256264686584473
    6. 'n' → logprob: -9.881264686584473
    7. '        
' → logprob: -11.756264686584473
    8. '    
' → logprob: -12.006264686584473
    9. '.strip' → logprob: -12.256264686584473
    10. '    ' → logprob: -12.756264686584473

Token 410: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03034263662993908
    2. ' n' → logprob: -3.5303425788879395
    3. '       ' → logprob: -8.155343055725098
    4. 'number' → logprob: -8.405343055725098
    5. ' number' → logprob: -9.780343055725098
    6. '   ' → logprob: -11.530343055725098
    7. 'num' → logprob: -11.905343055725098
    8. 'line' (adapté à ' line') → logprob: -12.655343055725098
    9. '	n' → logprob: -12.655343055725098
    10. ' line' → logprob: -14.405343055725098

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013532141456380486
    2. ' =' → logprob: -6.6263532638549805
    3. '=line' → logprob: -10.87635326385498
    4. '.strip' → logprob: -12.50135326385498
    5. '_strip' → logprob: -13.12635326385498
    6. 'strip' → logprob: -13.12635326385498
    7. '=
' → logprob: -15.75135326385498
    8. 's' → logprob: -16.126352310180664
    9. 'rstrip' → logprob: -16.501352310180664
    10. '.=' → logprob: -16.626352310180664

Token 412: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01416350994259119
    2. ' line' → logprob: -4.264163494110107
    3. '=line' → logprob: -18.764163970947266
    4. '	line' → logprob: -19.264163970947266
    5. '(line' → logprob: -20.389163970947266
    6. ' ligne' → logprob: -20.764163970947266
    7. 'ligne' → logprob: -20.889163970947266
    8. '#line' → logprob: -21.139163970947266
    9. 'lin' → logprob: -21.639163970947266
    10. 'Line' → logprob: -22.514163970947266

Token 413: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0006970656104385853
    2. '.' → logprob: -7.750697135925293
    3. '.rstrip' → logprob: -8.375697135925293
    4. 'strip' → logprob: -10.375697135925293
    5. '().' → logprob: -13.125697135925293
    6. '.readline' → logprob: -13.750697135925293
    7. '.chomp' → logprob: -14.625697135925293
    8. '.trim' → logprob: -14.750697135925293
    9. ' strip' → logprob: -15.375697135925293
    10. ' .' → logprob: -15.750697135925293

Token 414: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16026952862739563
    2. '()
' → logprob: -1.9102694988250732
    3. '()
' → logprob: -10.910269737243652
    4. '()

' → logprob: -11.035269737243652
    5. '()\' → logprob: -12.285269737243652
    6. '<|end|>' → logprob: -13.785269737243652
    7. '())' → logprob: -13.910269737243652
    8. '():
' → logprob: -13.910269737243652
    9. ')' → logprob: -14.410269737243652
    10. '(' → logprob: -14.410269737243652

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015948419459164143
    2. '   ' → logprob: -7.0015950202941895
    3. ' if' → logprob: -7.7515950202941895
    4. 'if' → logprob: -8.751594543457031
    5. '<|end|>' → logprob: -10.501594543457031
    6. '        
' → logprob: -10.751594543457031
    7. ',' → logprob: -11.001594543457031
    8. '      ' → logprob: -12.376594543457031
    9. '	if' → logprob: -12.626594543457031
    10. 'n' → logprob: -12.751594543457031

Token 416: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.2603901015827432e-05
    2. ' if' → logprob: -10.750022888183594
    3. '       ' → logprob: -13.750022888183594
    4. 'If' → logprob: -17.750022888183594
    5. '        
' → logprob: -18.125022888183594
    6. '   ' → logprob: -19.375022888183594
    7. '	if' → logprob: -19.500022888183594
    8. '
' → logprob: -20.375022888183594
    9. 'n' → logprob: -20.500022888183594
    10. ';if' → logprob: -20.500022888183594

Token 417: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.18546220660209656
    2. ' line' → logprob: -2.185462236404419
    3. 'not' → logprob: -3.560462236404419
    4. 'line' → logprob: -3.560462236404419
    5. '	line' → logprob: -13.93546199798584
    6. ' ' → logprob: -14.06046199798584
    7. '#line' → logprob: -15.43546199798584
    8. '=line' → logprob: -15.81046199798584
    9. '(line' → logprob: -16.060462951660156
    10. ' ligne' → logprob: -16.185462951660156

Token 418: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932125687599182
    2. ' ==' → logprob: -0.6932125687599182
    3. '=' → logprob: -10.318212509155273
    4. '()==' → logprob: -10.943212509155273
    5. '===' → logprob: -11.693212509155273
    6. ' =' → logprob: -12.693212509155273
    7. '=="' → logprob: -13.693212509155273
    8. ')==' → logprob: -14.693212509155273
    9. '=='' → logprob: -14.693212509155273
    10. ']==' → logprob: -14.943212509155273

Token 419: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.5733786225318909
    2. '""' → logprob: -1.073378562927246
    3. '"":' → logprob: -2.823378562927246
    4. '"' → logprob: -3.823378562927246
    5. ''' → logprob: -4.323378562927246
    6. ' ''' → logprob: -12.698378562927246
    7. ' ""' → logprob: -12.698378562927246
    8. ''ex' → logprob: -13.073378562927246
    9. ' '' → logprob: -13.198378562927246
    10. '":' → logprob: -13.823378562927246

Token 420: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.43654072284698486
    2. '0' → logprob: -1.0615407228469849
    3. ''' → logprob: -4.936540603637695
    4. '''' → logprob: -8.936540603637695
    5. '":' → logprob: -9.061540603637695
    6. '':
' → logprob: -9.686540603637695
    7. '"' → logprob: -9.811540603637695
    8. '"":' → logprob: -9.811540603637695
    9. 'EOF' → logprob: -9.936540603637695
    10. 'END' → logprob: -9.936540603637695

Token 421: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0002558561391197145
    2. '':
' → logprob: -8.750255584716797
    3. ':' → logprob: -9.750255584716797
    4. ''' → logprob: -10.750255584716797
    5. '":' → logprob: -11.375255584716797
    6. '':
' → logprob: -12.250255584716797
    7. ''):' → logprob: -15.125255584716797
    8. '':'' → logprob: -15.125255584716797
    9. '):' → logprob: -15.500255584716797
    10. '<|end|>' → logprob: -16.125255584716797

Token 422: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22557856142520905
    2. '       ' → logprob: -1.6005785465240479
    3. ' break' → logprob: -9.225578308105469
    4. 'break' → logprob: -10.225578308105469
    5. ':' → logprob: -11.850578308105469
    6. '	       ' → logprob: -12.350578308105469
    7. '   ' → logprob: -12.475578308105469
    8. '	break' → logprob: -12.475578308105469
    9. '		' → logprob: -12.850578308105469
    10. '          ' → logprob: -13.100578308105469

Token 423: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.010716699995100498
    2. '           ' → logprob: -5.260716915130615
    3. ' break' → logprob: -5.260716915130615
    4. '	break' → logprob: -8.760716438293457
    5. 'return' → logprob: -9.760716438293457
    6. '       ' → logprob: -9.760716438293457
    7. '               ' → logprob: -13.385716438293457
    8. '_break' → logprob: -14.135716438293457
    9. '
' → logprob: -14.385716438293457
    10. '		' → logprob: -14.635716438293457

Token 424: ' Fin' (ID: 7772)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00151831132825464
    2. ' break' → logprob: -6.501518249511719
    3. '       ' → logprob: -11.751518249511719
    4. 'return' → logprob: -12.001518249511719
    5. '           ' → logprob: -13.251518249511719
    6. '	break' → logprob: -15.876518249511719
    7. 'Break' → logprob: -16.87651824951172
    8. '_break' → logprob: -18.75151824951172
    9. '-break' → logprob: -19.87651824951172
    10. 'BREAK' → logprob: -20.00151824951172

Token 425: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037712421268224716
    2. '       ' → logprob: -3.537712335586548
    3. '               ' → logprob: -5.162712574005127
    4. 'break' → logprob: -7.037712574005127
    5. '          ' → logprob: -8.162712097167969
    6. '<|end|>' → logprob: -8.787712097167969
    7. '            ' → logprob: -9.037712097167969
    8. '        ' → logprob: -9.162712097167969
    9. '		' → logprob: -9.287712097167969
    10. '#' → logprob: -10.162712097167969

Token 426: ' lecture' (ID: 31993)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.32382968068122864
    2. 'la' → logprob: -1.5738296508789062
    3. 'programme' → logprob: -3.4488296508789062
    4. 'program' → logprob: -3.9488296508789062
    5. 'lecture' → logprob: -4.448829650878906
    6. 'input' → logprob: -6.448829650878906
    7. ' l' → logprob: -6.698829650878906
    8. 'le' → logprob: -6.823829650878906
    9. 'ex' → logprob: -7.573829650878906
    10. 'entrée' → logprob: -7.698829650878906

Token 427: ' des' (ID: 731)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019741231575608253
    2. '       ' → logprob: -4.519741058349609
    3. '\n' → logprob: -5.769741058349609
    4. '               ' → logprob: -6.519741058349609
    5. 'break' → logprob: -6.894741058349609
    6. ' break' → logprob: -6.894741058349609
    7. '
' → logprob: -7.394741058349609
    8. '	break' → logprob: -7.644741058349609
    9. '		' → logprob: -8.01974105834961
    10. '.' → logprob: -8.51974105834961

Token 428: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.46260353922843933
    2. ' entr' → logprob: -2.0876035690307617
    3. 'entr' → logprob: -2.2126035690307617
    4. 'entrée' → logprob: -2.5876035690307617
    5. 'inputs' → logprob: -3.2126035690307617
    6. ' données' → logprob: -4.587603569030762
    7. 'input' → logprob: -4.837603569030762
    8. 'don' → logprob: -7.462603569030762
    9. 'import' → logprob: -7.587603569030762
    10. 'program' → logprob: -7.587603569030762

Token 429: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.018288305029273033
    2. 'ée' → logprob: -4.0182881355285645
    3. 'ees' → logprob: -9.268288612365723
    4. 'es' → logprob: -10.268288612365723
    5. 'rees' → logprob: -13.268288612365723
    6. 'rée' → logprob: -13.393288612365723
    7. 'ee' → logprob: -13.643288612365723
    8. 'és' → logprob: -13.768288612365723
    9. 'e' → logprob: -14.018288612365723
    10. '#' → logprob: -14.018288612365723

Token 430: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006147419568151236
    2. '       ' → logprob: -5.131147384643555
    3. 'break' → logprob: -9.756147384643555
    4. '		' → logprob: -10.006147384643555
    5. '               ' → logprob: -10.006147384643555
    6. ' break' → logprob: -10.631147384643555
    7. '
' → logprob: -10.756147384643555
    8. '	break' → logprob: -12.256147384643555
    9. '	       ' → logprob: -12.506147384643555
    10. '          ' → logprob: -12.506147384643555

Token 431: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020950057660229504
    2. '       ' → logprob: -8.50020980834961
    3. '               ' → logprob: -12.87520980834961
    4. '		' → logprob: -14.00020980834961
    5. '          ' → logprob: -14.00020980834961
    6. ' break' → logprob: -14.62520980834961
    7. '	       ' → logprob: -15.00020980834961
    8. '   ' → logprob: -15.12520980834961
    9. 'break' → logprob: -15.12520980834961
    10. ',' → logprob: -16.25020980834961

Token 432: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00048524985322728753
    2. ' break' → logprob: -7.750485420227051
    3. '           ' → logprob: -10.25048542022705
    4. 'return' → logprob: -11.25048542022705
    5. '       ' → logprob: -12.25048542022705
    6. '	break' → logprob: -13.50048542022705
    7. '               ' → logprob: -17.625484466552734
    8. '_break' → logprob: -18.000484466552734
    9. '
' → logprob: -18.500484466552734
    10. '   ' → logprob: -19.750484466552734

Token 433: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0539412796497345
    2. '
' → logprob: -3.303941249847412
    3. '        
' → logprob: -4.178941249847412
    4. '<|end|>' → logprob: -8.05394172668457
    5. '  
' → logprob: -10.30394172668457
    6. '    
' → logprob: -10.30394172668457
    7. '            
' → logprob: -10.92894172668457
    8. '       
' → logprob: -11.80394172668457
    9. '		
' → logprob: -11.92894172668457
    10. ',' → logprob: -12.05394172668457

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007948591373860836
    2. '        
' → logprob: -4.882948398590088
    3. '
' → logprob: -9.132948875427246
    4. '   ' → logprob: -9.882948875427246
    5. '    
' → logprob: -9.882948875427246
    6. '  
' → logprob: -10.132948875427246
    7. '<|end|>' → logprob: -10.257948875427246
    8. 'n' → logprob: -10.882948875427246
    9. '       
' → logprob: -11.632948875427246
    10. '		
' → logprob: -12.257948875427246

Token 435: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.005847377236932516
    2. '       ' → logprob: -5.255847454071045
    3. ' n' → logprob: -7.505847454071045
    4. 'number' → logprob: -9.880846977233887
    5. 'num' → logprob: -11.755846977233887
    6. '   ' → logprob: -13.005846977233887
    7. '        
' → logprob: -14.005846977233887
    8. '
' → logprob: -14.380846977233887
    9. '	n' → logprob: -14.880846977233887
    10. ' number' → logprob: -15.505846977233887

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029771439731121063
    2. '=' → logprob: -3.529771327972412
    3. '=int' → logprob: -10.77977180480957
    4. 'int' → logprob: -16.77977180480957
    5. '＝' → logprob: -17.15477180480957
    6. ' ' → logprob: -17.27977180480957
    7. ' =
' → logprob: -17.65477180480957
    8. '	' → logprob: -17.90477180480957
    9. '   ' → logprob: -18.02977180480957
    10. ' ' → logprob: -18.40477180480957

Token 437: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024756586644798517
    2. ' int' → logprob: -6.002475738525391
    3. '(int' → logprob: -22.50247573852539
    4. '=int' → logprob: -23.12747573852539
    5. '[int' → logprob: -23.12747573852539
    6. '<int' → logprob: -24.37747573852539
    7. '	int' → logprob: -25.00247573852539
    8. '   ' → logprob: -26.62747573852539
    9. ' ' → logprob: -26.87747573852539
    10. ':int' → logprob: -27.00247573852539

Token 438: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00020354038861114532
    2. '(' → logprob: -8.500203132629395
    3. '#line' → logprob: -17.37520408630371
    4. '(n' → logprob: -17.37520408630371
    5. '[line' → logprob: -17.75020408630371
    6. 'line' → logprob: -17.87520408630371
    7. '=line' → logprob: -18.00020408630371
    8. '(
' → logprob: -18.37520408630371
    9. '(l' → logprob: -18.75020408630371
    10. '(Line' → logprob: -19.12520408630371

Token 439: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ')
' → logprob: -12.125008583068848
    3. ' )' → logprob: -12.875008583068848
    4. '       ' → logprob: -17.12500762939453
    5. '   ' → logprob: -17.87500762939453
    6. '))' → logprob: -18.00000762939453
    7. ')

' → logprob: -18.37500762939453
    8. ')`' → logprob: -18.75000762939453
    9. ')
' → logprob: -18.75000762939453
    10. '`)' → logprob: -19.25000762939453

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001424045069143176
    2. 'print' → logprob: -6.8764238357543945
    3. ' print' → logprob: -8.376423835754395
    4. '   ' → logprob: -9.251423835754395
    5. 'count' → logprob: -10.501423835754395
    6. '        
' → logprob: -11.126423835754395
    7. '<|end|>' → logprob: -11.501423835754395
    8. 'result' → logprob: -13.126423835754395
    9. '    ' → logprob: -13.626423835754395
    10. ' count' → logprob: -13.751423835754395

Token 441: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17562122642993927
    2. 'count' → logprob: -2.425621271133423
    3. 'result' → logprob: -3.175621271133423
    4. ' print' → logprob: -3.675621271133423
    5. ' result' → logprob: -6.175621032714844
    6. ' count' → logprob: -6.300621032714844
    7. 'pairs' → logprob: -6.675621032714844
    8. '       ' → logprob: -8.175621032714844
    9. ' pairs' → logprob: -10.175621032714844
    10. 'answer' → logprob: -10.675621032714844

Token 442: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7698522806167603
    2. 'count' → logprob: -1.6448522806167603
    3. 'result' → logprob: -1.7698522806167603
    4. ' count' → logprob: -2.8948521614074707
    5. ' result' → logprob: -3.0198521614074707
    6. 'pairs' → logprob: -3.3948521614074707
    7. ' print' → logprob: -3.5198521614074707
    8. ' pairs' → logprob: -5.144852161407471
    9. 'pair' → logprob: -8.144852638244629
    10. 'answer' → logprob: -10.019852638244629

Token 443: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016529174521565437
    2. 'result' → logprob: -4.391529083251953
    3. ' result' → logprob: -6.891529083251953
    4. 'count' → logprob: -7.141529083251953
    5. ' de' → logprob: -7.516529083251953
    6. ',' → logprob: -7.766529083251953
    7. ' =' → logprob: -9.016529083251953
    8. '_result' → logprob: -9.016529083251953
    9. '   ' → logprob: -9.141529083251953
    10. ' of' → logprob: -9.141529083251953

Token 444: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47408220171928406
    2. ' print' → logprob: -0.9740822315216064
    3. '       ' → logprob: -13.099081993103027
    4. '
' → logprob: -13.349081993103027
    5. 'result' → logprob: -14.474081993103027
    6. ' result' → logprob: -15.099081993103027
    7. '	print' → logprob: -15.849081993103027
    8. '   ' → logprob: -16.099082946777344
    9. '        
' → logprob: -16.224082946777344
    10. '```' → logprob: -16.349082946777344

Token 445: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.0014065440045669675
    2. 'er' → logprob: -7.001406669616699
    3. '   ' → logprob: -8.5014066696167
    4. 'e' → logprob: -8.5014066696167
    5. 'print' → logprob: -9.6264066696167
    6. 'ge' → logprob: -11.5014066696167
    7. '       ' → logprob: -12.0014066696167
    8. '#' → logprob: -13.3764066696167
    9. 'ation' → logprob: -14.2514066696167
    10. 'AGE' → logprob: -14.5014066696167

Token 446: ' du' (ID: 1462)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.5247995257377625
    2. '       ' → logprob: -1.0247995853424072
    3. '(' → logprob: -3.2747995853424072
    4. 'count' → logprob: -6.024799346923828
    5. ',' → logprob: -6.274799346923828
    6. '(len' → logprob: -6.274799346923828
    7. ' count' → logprob: -7.024799346923828
    8. '(result' → logprob: -7.149799346923828
    9. ':' → logprob: -7.649799346923828
    10. '=count' → logprob: -8.149799346923828

Token 447: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45528003573417664
    2. 'result' → logprob: -1.205280065536499
    3. 'print' → logprob: -2.955280065536499
    4. 'nombre' → logprob: -4.45527982711792
    5. ' count' → logprob: -6.33027982711792
    6. ' nombre' → logprob: -7.70527982711792
    7. ' result' → logprob: -9.080280303955078
    8. ' résultat' → logprob: -10.580280303955078
    9. ' resultat' → logprob: -10.955280303955078
    10. 'res' → logprob: -10.955280303955078

Token 448: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06705496460199356
    2. '_' → logprob: -3.8170549869537354
    3. ' des' → logprob: -3.9420549869537354
    4. '_de' → logprob: -5.567054748535156
    5. '_des' → logprob: -6.192054748535156
    6. ')' → logprob: -6.317054748535156
    7. '(' → logprob: -6.442054748535156
    8. 'de' → logprob: -6.442054748535156
    9. '   ' → logprob: -6.567054748535156
    10. '  ' → logprob: -6.942054748535156

Token 449: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.581649661064148
    2. 'p' → logprob: -0.831649661064148
    3. 'pairs' → logprob: -5.4566497802734375
    4. ' pairs' → logprob: -7.5816497802734375
    5. ' gold' → logprob: -8.206649780273438
    6. 'gold' → logprob: -9.081649780273438
    7. ' ' → logprob: -9.331649780273438
    8. '_gold' → logprob: -9.456649780273438
    9. ' Gold' → logprob: -9.581649780273438
    10. '_' → logprob: -9.706649780273438

Token 450: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.012561452575027943
    2. 'airs' → logprob: -5.262561321258545
    3. 'a' → logprob: -5.512561321258545
    4. '_' → logprob: -6.762561321258545
    5. 'air' → logprob: -7.637561321258545
    6. 'aire' → logprob: -8.012561798095703
    7. '_gold' → logprob: -8.262561798095703
    8. '_pairs' → logprob: -8.387561798095703
    9. 'ai' → logprob: -8.887561798095703
    10. 'pairs' → logprob: -9.012561798095703

Token 451: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5905368328094482
    2. '       ' → logprob: -0.8405368328094482
    3. '   ' → logprob: -4.965537071228027
    4. ' =' → logprob: -6.465537071228027
    5. 'de' → logprob: -6.590537071228027
    6. ',' → logprob: -6.840537071228027
    7. '_gold' → logprob: -7.215537071228027
    8. ' Gold' → logprob: -7.590537071228027
    9. ' of' → logprob: -8.340537071228027
    10. ' result' → logprob: -8.590537071228027

Token 452: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4811391830444336
    2. ' n' → logprob: -0.9811391830444336
    3. '(n' → logprob: -4.981139183044434
    4. '   ' → logprob: -9.356139183044434
    5. 'print' → logprob: -10.981139183044434
    6. '       ' → logprob: -10.981139183044434
    7. ' ' → logprob: -11.731139183044434
    8. 'le' → logprob: -11.731139183044434
    9. '    ' → logprob: -12.106139183044434
    10. '	n' → logprob: -12.356139183044434

Token 453: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25143617391586304
    2. '   ' → logprob: -2.626436233520508
    3. ',' → logprob: -2.751436233520508
    4. ':' → logprob: -2.876436233520508
    5. 'print' → logprob: -3.876436233520508
    6. ' print' → logprob: -6.001436233520508
    7. '=' → logprob: -6.251436233520508
    8. ' =' → logprob: -6.501436233520508
    9. 'count' → logprob: -6.626436233520508
    10. '.' → logprob: -8.376436233520508

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003913356922566891
    2. 'print' → logprob: -5.753913402557373
    3. ' print' → logprob: -7.753913402557373
    4. '   ' → logprob: -8.878912925720215
    5. 'count' → logprob: -9.128912925720215
    6. '```' → logprob: -10.878912925720215
    7. 'result' → logprob: -11.378912925720215
    8. '<|end|>' → logprob: -11.753912925720215
    9. '        
' → logprob: -12.128912925720215
    10. ' count' → logprob: -12.628912925720215

Token 455: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005747167742811143
    2. 'count' → logprob: -8.250575065612793
    3. ' print' → logprob: -8.625575065612793
    4. 'result' → logprob: -9.000575065612793
    5. '       ' → logprob: -11.500575065612793
    6. 'pairs' → logprob: -15.250575065612793
    7. ' result' → logprob: -16.750574111938477
    8. ' count' → logprob: -16.750574111938477
    9. '	print' → logprob: -16.875574111938477
    10. 'results' → logprob: -17.500574111938477

Token 456: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0001238004770129919
    2. '(' → logprob: -9.000123977661133
    3. 'count' → logprob: -14.875123977661133
    4. '(c' → logprob: -17.750123977661133
    5. '(
' → logprob: -18.250123977661133
    6. ' count' → logprob: -18.375123977661133
    7. ' (' → logprob: -18.375123977661133
    8. '=count' → logprob: -19.625123977661133
    9. '(cnt' → logprob: -20.375123977661133
    10. '((' → logprob: -20.375123977661133

Token 457: '_gold' (ID: 173653)
  Prédit: '_gold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gold' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -12.625003814697266
    3. 'Gold' → logprob: -16.375003814697266
    4. '_green' → logprob: -17.875003814697266
    5. ' Gold' → logprob: -18.375003814697266
    6. ')' → logprob: -18.625003814697266
    7. ')_' → logprob: -18.625003814697266
    8. '_
' → logprob: -19.250003814697266
    9. '```' → logprob: -19.750003814697266
    10. '_google' → logprob: -20.000003814697266

Token 458: 'bach' (ID: 37754)
  Prédit: 'bach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bach' → logprob: -1.2664456789934775e-06
    2. 'bac' → logprob: -14.375000953674316
    3. 'buch' → logprob: -15.625000953674316
    4. 'bah' → logprob: -16.000001907348633
    5. 'бах' → logprob: -16.750001907348633
    6. 'b' → logprob: -16.875001907348633
    7. 'bau' → logprob: -17.375001907348633
    8. '_' → logprob: -17.500001907348633
    9. 'ba' → logprob: -17.625001907348633
    10. 'bas' → logprob: -17.875001907348633

Token 459: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -4.320199877838604e-07
    2. 'pairs' → logprob: -14.875
    3. '_p' → logprob: -18.25
    4. 'Pairs' → logprob: -18.5
    5. '```' → logprob: -18.625
    6. '_parts' → logprob: -18.75
    7. '_pair' → logprob: -18.875
    8. ')_' → logprob: -18.875
    9. '_' → logprob: -19.5
    10. ')' → logprob: -19.75

Token 460: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007612663321197033
    2. '(' → logprob: -4.882612705230713
    3. '(
' → logprob: -12.757612228393555
    4. ')' → logprob: -13.257612228393555
    5. ' (' → logprob: -13.382612228393555
    6. ')n' → logprob: -15.382612228393555
    7. ')(' → logprob: -16.007612228393555
    8. ' n' → logprob: -17.007612228393555
    9. '(

' → logprob: -17.382612228393555
    10. 'n' → logprob: -18.382612228393555

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016899389447644353
    2. ',is' → logprob: -6.501689910888672
    3. ',n' → logprob: -8.876689910888672
    4. ' ,' → logprob: -10.001689910888672
    5. ',
' → logprob: -13.751689910888672
    6. '(is' → logprob: -14.501689910888672
    7. ')' → logprob: -15.501689910888672
    8. '(n' → logprob: -15.626689910888672
    9. ',num' → logprob: -15.876689910888672
    10. ' is' → logprob: -15.876689910888672

Token 462: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.01815006136894226
    2. ' is' → logprob: -4.0181498527526855
    3. ')' → logprob: -16.768150329589844
    4. ')is' → logprob: -17.893150329589844
    5. ' ' → logprob: -20.018150329589844
    6. '	is' → logprob: -20.518150329589844
    7. '   ' → logprob: -20.893150329589844
    8. '```' → logprob: -21.143150329589844
    9. ' ' → logprob: -21.393150329589844
    10. '(is' → logprob: -21.768150329589844

Token 463: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0005537479883059859
    2. 'prime' → logprob: -7.500553607940674
    3. '_' → logprob: -15.125554084777832
    4. ' prime' → logprob: -15.625554084777832
    5. 'Prime' → logprob: -16.125553131103516
    6. '```' → logprob: -17.250553131103516
    7. ')' → logprob: -17.250553131103516
    8. 'p' → logprob: -17.375553131103516
    9. '_pr' → logprob: -17.625553131103516
    10. 'r' → logprob: -17.750553131103516

Token 464: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007118358626030385
    2. ')' → logprob: -7.250711917877197
    3. ' ))' → logprob: -14.250711441040039
    4. ')))' → logprob: -14.375711441040039
    5. '))
' → logprob: -14.500711441040039
    6. '()))' → logprob: -16.25071144104004
    7. '),' → logprob: -17.12571144104004
    8. '   ' → logprob: -17.25071144104004
    9. ' ' → logprob: -18.62571144104004
    10. ')}' → logprob: -19.37571144104004

Token 465: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012346350587904453
    2. '__' → logprob: -4.762346267700195
    3. '_' → logprob: -5.637346267700195
    4. ' _' → logprob: -9.637346267700195
    5. ' ' → logprob: -9.637346267700195
    6. ' ' → logprob: -11.637346267700195
    7. ' ___' → logprob: -11.762346267700195
    8. '_name' → logprob: -12.012346267700195
    9. '___' → logprob: -12.762346267700195
    10. ' ​' → logprob: -13.512346267700195

Token 467: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011766048148274422
    2. '__.__' → logprob: -4.761765956878662
    3. '__.' → logprob: -6.636765956878662
    4. '.__' → logprob: -7.386765956878662
    5. '==' → logprob: -7.761765956878662
    6. ' ==' → logprob: -8.38676643371582
    7. ' __' → logprob: -8.88676643371582
    8. '_' → logprob: -9.01176643371582
    9. '[' → logprob: -9.63676643371582
    10. '.' → logprob: -9.63676643371582

Token 468: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.729906196298543e-06
    2. '==' → logprob: -11.750009536743164
    3. '__.__' → logprob: -13.375009536743164
    4. ' ==' → logprob: -16.500009536743164
    5. '_' → logprob: -16.625009536743164
    6. '__.' → logprob: -17.250009536743164
    7. '____' → logprob: -17.875009536743164
    8. '___' → logprob: -18.375009536743164
    9. '=="' → logprob: -18.625009536743164
    10. ' __' → logprob: -18.625009536743164

Token 469: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.34408673644065857
    2. '==' → logprob: -1.469086766242981
    3. ' ==' → logprob: -2.8440866470336914
    4. '=="' → logprob: -5.969086647033691
    5. '=='' → logprob: -8.469086647033691
    6. '=' → logprob: -11.594086647033691
    7. '___' → logprob: -11.844086647033691
    8. '===' → logprob: -12.094086647033691
    9. '_' → logprob: -12.219086647033691
    10. '__.__' → logprob: -12.594086647033691

Token 470: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06199580803513527
    2. ''' → logprob: -2.8119957447052
    3. ' "__' → logprob: -10.811995506286621
    4. '__' → logprob: -11.936995506286621
    5. ' '__' → logprob: -14.561995506286621
    6. '"_' → logprob: -15.061995506286621
    7. '"user' → logprob: -15.186995506286621
    8. ''"' → logprob: -15.561995506286621
    9. '"name' → logprob: -16.811996459960938
    10. ''_' → logprob: -17.436996459960938

Token 471: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.198043699143454e-05
    2. '__' → logprob: -9.375091552734375
    3. '_main' → logprob: -12.125091552734375
    4. ' main' → logprob: -14.250091552734375
    5. 'name' → logprob: -15.125091552734375
    6. 'ma' → logprob: -15.750091552734375
    7. '"' → logprob: -16.125091552734375
    8. '_MAIN' → logprob: -16.250091552734375
    9. '	main' → logprob: -16.500091552734375
    10. 'built' → logprob: -16.500091552734375

Token 472: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0486455038189888
    2. '__' → logprob: -3.048645496368408
    3. '__':
' → logprob: -9.798645973205566
    4. '__.' → logprob: -13.298645973205566
    5. '__["' → logprob: -14.923645973205566
    6. '__:' → logprob: -15.173645973205566
    7. '__.__' → logprob: -15.798645973205566
    8. '_' → logprob: -15.923645973205566
    9. '__",' → logprob: -16.92364501953125
    10. '__
' → logprob: -17.04864501953125

Token 473: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014207348227500916
    2. ' main' → logprob: -4.264207363128662
    3. '   ' → logprob: -10.514206886291504
    4. '	main' → logprob: -11.014206886291504
    5. '_main' → logprob: -15.764206886291504
    6. ' ' → logprob: -16.26420783996582
    7. '.main' → logprob: -18.38920783996582
    8. '(main' → logprob: -18.63920783996582
    9. '  ' → logprob: -18.63920783996582
    10. '    
' → logprob: -18.88920783996582

Token 474: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0001234428636962548
    2. ' main' → logprob: -9.000123023986816
    3. '	main' → logprob: -17.750123977661133
    4. '   ' → logprob: -21.250123977661133
    5. '.main' → logprob: -23.750123977661133
    6. ' ' → logprob: -23.875123977661133
    7. '_main' → logprob: -24.875123977661133
    8. '  ' → logprob: -25.125123977661133
    9. '(main' → logprob: -25.250123977661133
    10. 'maine' → logprob: -25.625123977661133

Token 475: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 473
Tokens correctement prédits (1ère position, stricte): 221
Tokens correctement prédits (1ère position, avec adaptation): 235
Tokens correctement prédits (top 10): 392
Précision stricte (1ère position): 46.72%
Précision adaptée (1ère position): 49.68%
Précision (top 10): 82.88%
================================================================================
