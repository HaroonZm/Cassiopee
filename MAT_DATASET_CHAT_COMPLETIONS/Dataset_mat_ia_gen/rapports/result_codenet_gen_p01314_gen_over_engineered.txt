================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class SumOfConsecutiveIntegers:
    class InputHandler:
        def __init__(self):
            self._data = []

        def read_input(self):
            while True:
                line = input().strip()
                if not line.isdigit():
                    # Ignore invalid lines, although problem guarantees input format
                    continue
                value = int(line)
                if value == 0:
                    break
                self._data.append(value)

        def get_data(self):
            return self._data

    class ConsecutiveSumCounter:
        def __init__(self, n):
            self.n = n

        def count_ways(self):
            # Using a sliding window approach abstracted as iterator over ranges
            # Instead of direct math formula, do stepwise enumeration for extensibility
            sequences = SumOfConsecutiveIntegers.SequenceGenerator(self.n)
            return sequences.count_sequences()

    class SequenceGenerator:
        def __init__(self, target_sum):
            self.target = target_sum

        def count_sequences(self):
            # We consider sequences of at least length 2
            count = 0
            # Use two pointers to find all sequences
            left = 1
            right = 2
            current_sum = left + right
            while left < right and right <= self.target:
                if current_sum == self.target:
                    count += 1
                    # Move right pointer forward
                    right += 1
                    current_sum += right
                elif current_sum < self.target:
                    right += 1
                    current_sum += right
                else:
                    current_sum -= left
                    left += 1
            return count

    class OutputHandler:
        def __init__(self):
            self._results = []

        def collect_result(self, result):
            self._results.append(result)

        def output_results(self):
            for res in self._results:
                print(res)

def main():
    input_handler = SumOfConsecutiveIntegers.InputHandler()
    input_handler.read_input()
    output_handler = SumOfConsecutiveIntegers.OutputHandler()

    for n in input_handler.get_data():
        counter = SumOfConsecutiveIntegers.ConsecutiveSumCounter(n)
        ways = counter.count_ways()
        output_handler.collect_result(ways)

    output_handler.output_results()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Sum' (ID: 34138)
  → Token d'amorce (pas de prédiction)

Token 2: 'Of' (ID: 2566)
  → Token d'amorce (pas de prédiction)

Token 3: 'Con' (ID: 909)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5684087872505188
    2. '{' → logprob: -1.568408727645874
    3. 'Of' → logprob: -1.943408727645874
    4. ':' → logprob: -3.443408727645874
    5. 'S' → logprob: -5.193408966064453
    6. '```' → logprob: -5.193408966064453
    7. 'Squares' → logprob: -5.318408966064453
    8. '{s' → logprob: -5.318408966064453
    9. 'a' → logprob: -5.568408966064453
    10. '[' → logprob: -5.818408966064453

Token 4: 'secutive' (ID: 165873)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40344855189323425
    2. 't' → logprob: -1.2784485816955566
    3. 'structor' → logprob: -3.5284485816955566
    4. '```' → logprob: -5.028448581695557
    5. 'structors' → logprob: -5.153448581695557
    6. 'v' → logprob: -5.653448581695557
    7. 'f' → logprob: -6.278448581695557
    8. '{' → logprob: -6.403448581695557
    9. 'd' → logprob: -7.653448581695557
    10. 'c' → logprob: -7.653448581695557

Token 5: 'Inte' (ID: 113498)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42633840441703796
    2. '{' → logprob: -1.1763384342193604
    3. ':' → logprob: -3.3013384342193604
    4. '[' → logprob: -7.676338195800781
    5. '```' → logprob: -7.676338195800781
    6. ' {' → logprob: -7.926338195800781
    7. '(:' → logprob: -8.551338195800781
    8. '():' → logprob: -9.426338195800781
    9. 's' → logprob: -9.926338195800781
    10. ' (' → logprob: -9.926338195800781

Token 6: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.000776038970798254
    2. 'g' → logprob: -7.2507758140563965
    3. 'gr' → logprob: -10.125776290893555
    4. 'ger' → logprob: -11.125776290893555
    5. '```' → logprob: -11.625776290893555
    6. 'ers' → logprob: -13.750776290893555
    7. 'gars' → logprob: -15.375776290893555
    8. '   ' → logprob: -15.625776290893555
    9. 'r' → logprob: -16.000776290893555
    10. '``' → logprob: -16.625776290893555

Token 7: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7074989676475525
    2. '{' → logprob: -1.2074990272521973
    3. ':' → logprob: -1.5824990272521973
    4. ' {' → logprob: -6.457499027252197
    5. '(:' → logprob: -7.707499027252197
    6. ' :' → logprob: -8.582498550415039
    7. '[' → logprob: -9.082498550415039
    8. '.' → logprob: -9.582498550415039
    9. '():' → logprob: -9.582498550415039
    10. ' (' → logprob: -9.707498550415039

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44200608134269714
    2. '(' → logprob: -1.0670061111450195
    3. '```' → logprob: -4.6920061111450195
    4. '   ' → logprob: -6.0670061111450195
    5. '():' → logprob: -7.1920061111450195
    6. '{' → logprob: -8.31700611114502
    7. '(:' → logprob: -8.81700611114502
    8. '(
' → logprob: -9.31700611114502
    9. '.' → logprob: -9.44200611114502
    10. ':
' → logprob: -9.56700611114502

Token 9: ' class' (ID: 744)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1449669748544693
    2. '   ' → logprob: -2.2699670791625977
    3. 'def' → logprob: -3.8949670791625977
    4. '    ' → logprob: -4.894967079162598
    5. ' ' → logprob: -6.269967079162598
    6. '```' → logprob: -7.019967079162598
    7. ' ```' → logprob: -7.769967079162598
    8. '_' → logprob: -8.144967079162598
    9. '(' → logprob: -10.394967079162598
    10. ' """' → logprob: -10.519967079162598

Token 10: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07802847027778625
    2. ' Sum' → logprob: -3.078028440475464
    3. '  ' → logprob: -4.578028678894043
    4. '   ' → logprob: -5.078028678894043
    5. ' Method' → logprob: -5.953028678894043
    6. ' Variable' → logprob: -5.953028678894043
    7. 'method' → logprob: -6.453028678894043
    8. ' Calculator' → logprob: -7.078028678894043
    9. ' def' → logprob: -7.203028678894043
    10. '    ' → logprob: -7.328028678894043

Token 11: 'Handler' (ID: 4139)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20833882689476013
    2. '(' → logprob: -1.9583388566970825
    3. '[' → logprob: -3.708338737487793
    4. '):' → logprob: -5.208338737487793
    5. ' (' → logprob: -5.583338737487793
    6. '{' → logprob: -5.833338737487793
    7. ' :' → logprob: -6.208338737487793
    8. 'Data' → logprob: -6.583338737487793
    9. '   ' → logprob: -6.833338737487793
    10. ')' → logprob: -7.083338737487793

Token 12: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5212521553039551
    2. '.' → logprob: -1.271252155303955
    3. '(' → logprob: -2.396252155303955
    4. '[' → logprob: -4.021252155303955
    5. '```' → logprob: -5.396252155303955
    6. '   ' → logprob: -5.771252155303955
    7. '(
' → logprob: -6.271252155303955
    8. ' .' → logprob: -6.521252155303955
    9. '<|end|>' → logprob: -7.021252155303955
    10. ')' → logprob: -7.396252155303955

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25137174129486084
    2. '    ' → logprob: -2.1263718605041504
    3. '   ' → logprob: -3.7513718605041504
    4. '        
' → logprob: -4.00137186050415
    5. '(n' → logprob: -4.25137186050415
    6. 'n' → logprob: -4.87637186050415
    7. '<|end|>' → logprob: -5.00137186050415
    8. ' ' → logprob: -5.25137186050415
    9. '        ' → logprob: -5.50137186050415
    10. '    
' → logprob: -5.75137186050415

Token 14: ' def' (ID: 1056)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.7776349186897278
    2. 'def' (adapté à ' def') → logprob: -1.027634859085083
    3. ' def' → logprob: -2.652634859085083
    4. '       ' → logprob: -3.277634859085083
    5. ' ' → logprob: -3.527634859085083
    6. '    ' → logprob: -4.777635097503662
    7. 'n' → logprob: -5.152635097503662
    8. '           ' → logprob: -5.402635097503662
    9. '   ' → logprob: -5.652635097503662
    10. '         ' → logprob: -5.652635097503662

Token 15: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9501473903656006
    2. ' __' → logprob: -1.2001473903656006
    3. ' process' → logprob: -2.0751473903656006
    4. ' calculate' → logprob: -2.2001473903656006
    5. '_' → logprob: -3.3251473903656006
    6. ' _' → logprob: -4.82514762878418
    7. '__' → logprob: -5.07514762878418
    8. 'process' → logprob: -5.32514762878418
    9. ' handle' → logprob: -5.57514762878418
    10. ' get' → logprob: -6.20014762878418

Token 16: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.44312788406387e-05
    2. ' init' → logprob: -10.250054359436035
    3. '_init' → logprob: -11.125054359436035
    4. 'ini' → logprob: -13.250054359436035
    5. '	init' → logprob: -14.125054359436035
    6. '```' → logprob: -15.375054359436035
    7. '   ' → logprob: -15.625054359436035
    8. 'innit' → logprob: -15.625054359436035
    9. ' ' → logprob: -15.750054359436035
    10. 'i' → logprob: -15.750054359436035

Token 17: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16781233251094818
    2. '(' → logprob: -2.4178123474121094
    3. '__' → logprob: -2.9178123474121094
    4. ' (' → logprob: -5.292812347412109
    5. '(self' → logprob: -5.667812347412109
    6. '__(
' → logprob: -6.667812347412109
    7. '<|end|>' → logprob: -7.542812347412109
    8. '__((' → logprob: -7.667812347412109
    9. 'self' → logprob: -9.41781234741211
    10. '__('' → logprob: -9.54281234741211

Token 18: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38694050908088684
    2. ' self' → logprob: -1.1369404792785645
    3. ' ' → logprob: -11.011940956115723
    4. '(self' → logprob: -11.011940956115723
    5. ' )' → logprob: -11.011940956115723
    6. ')' → logprob: -11.261940956115723
    7. ' ' → logprob: -13.511940956115723
    8. '        ' → logprob: -14.011940956115723
    9. '       ' → logprob: -14.261940956115723
    10. '	self' → logprob: -14.386940956115723

Token 19: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16599760949611664
    2. ' ,' → logprob: -2.5409975051879883
    3. 'self' → logprob: -3.2909975051879883
    4. ' self' → logprob: -4.040997505187988
    5. ' )' → logprob: -4.790997505187988
    6. ' ' → logprob: -5.165997505187988
    7. ')' → logprob: -5.790997505187988
    8. ',self' → logprob: -6.915997505187988
    9. '(self' → logprob: -7.665997505187988
    10. '  ' → logprob: -8.040997505187988

Token 20: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3218965232372284
    2. ' self' → logprob: -1.9468965530395508
    3. '        ' → logprob: -2.571896553039551
    4. '           ' → logprob: -3.571896553039551
    5. '       ' → logprob: -4.821896553039551
    6. '            ' → logprob: -5.446896553039551
    7. ' ' → logprob: -5.571896553039551
    8. '(self' → logprob: -5.696896553039551
    9. ')' → logprob: -6.071896553039551
    10. '    ' → logprob: -6.446896553039551

Token 21: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.48269420862197876
    2. '               ' → logprob: -1.107694149017334
    3. '           ' → logprob: -3.857694149017334
    4. 'pass' → logprob: -4.357694149017334
    5. ' self' → logprob: -4.857694149017334
    6. '<|end|>' → logprob: -6.357694149017334
    7. '             ' → logprob: -6.482694149017334
    8. ' pass' → logprob: -6.732694149017334
    9. '       ' → logprob: -6.732694149017334
    10. ' ' → logprob: -7.107694149017334

Token 22: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6549355983734131
    2. '.value' → logprob: -1.654935598373413
    3. '.n' → logprob: -2.529935598373413
    4. '.data' → logprob: -2.904935598373413
    5. '.input' → logprob: -3.029935598373413
    6. '.values' → logprob: -3.779935598373413
    7. ' .' → logprob: -4.154935836791992
    8. '.count' → logprob: -4.404935836791992
    9. '.sum' → logprob: -4.904935836791992
    10. '.number' → logprob: -5.154935836791992

Token 23: 'data' (ID: 1074)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5759412050247192
    2. 'start' → logprob: -2.0759410858154297
    3. 'input' → logprob: -2.5759410858154297
    4. 'n' → logprob: -3.2009410858154297
    5. 'value' → logprob: -3.3259410858154297
    6. 'number' → logprob: -3.4509410858154297
    7. 'values' → logprob: -3.5759410858154297
    8. 'data' → logprob: -3.7009410858154297
    9. 'max' → logprob: -4.70094108581543
    10. 'sum' → logprob: -4.82594108581543

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20149773359298706
    2. '=' → logprob: -1.7014977931976318
    3. '<|end|>' → logprob: -10.701498031616211
    4. ' ' → logprob: -10.951498031616211
    5. '=[]' → logprob: -11.451498031616211
    6. ' is' → logprob: -11.451498031616211
    7. ')' → logprob: -12.076498031616211
    8. '  ' → logprob: -12.201498031616211
    9. 's' → logprob: -13.076498031616211
    10. '.' → logprob: -13.326498031616211

Token 25: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.28330421447753906
    2. '[]' → logprob: -1.408304214477539
    3. ' None' → logprob: -6.658304214477539
    4. ' {}' → logprob: -7.908304214477539
    5. ' ' → logprob: -8.658304214477539
    6. 'None' → logprob: -8.658304214477539
    7. '{}' → logprob: -9.408304214477539
    8. ' [' → logprob: -10.533304214477539
    9. '[' → logprob: -11.283304214477539
    10. '0' → logprob: -11.658304214477539

Token 26: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6877588629722595
    2. '   ' → logprob: -1.5627589225769043
    3. '<|end|>' → logprob: -1.9377589225769043
    4. '    
' → logprob: -2.9377589225769043
    5. '       ' → logprob: -3.0627589225769043
    6. '\' → logprob: -4.562758922576904
    7. '        
' → logprob: -5.187758922576904
    8. ' 
' → logprob: -5.312758922576904
    9. '\n' → logprob: -5.312758922576904
    10. ' ' → logprob: -5.562758922576904

Token 27: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.11935372650623322
    2. '   ' → logprob: -2.494353771209717
    3. ' def' → logprob: -3.869353771209717
    4. '       ' → logprob: -4.994353771209717
    5. '    
' → logprob: -6.994353771209717
    6. '
' → logprob: -7.369353771209717
    7. '        
' → logprob: -8.494353294372559
    8. ' ' → logprob: -8.994353294372559
    9. '    ' → logprob: -8.994353294372559
    10. '<|end|>' → logprob: -8.994353294372559

Token 28: ' read' (ID: 1729)
  Prédit: ' append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.33214280009269714
    2. ' add' → logprob: -1.7071428298950195
    3. 'append' → logprob: -2.3321428298950195
    4. 'add' → logprob: -6.0821428298950195
    5. ' get' → logprob: -6.5821428298950195
    6. ' process' → logprob: -9.08214282989502
    7. ' read' → logprob: -9.33214282989502
    8. 'get' → logprob: -9.45714282989502
    9. '_append' → logprob: -10.08214282989502
    10. ' def' → logprob: -10.58214282989502

Token 29: '_input' (ID: 12507)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.2127271890640259
    2. '_line' → logprob: -1.5877271890640259
    3. '(' → logprob: -1.7127271890640259
    4. '_input' → logprob: -1.8377271890640259
    5. '_' → logprob: -2.3377270698547363
    6. '(self' → logprob: -3.0877270698547363
    7. '()' → logprob: -5.087727069854736
    8. '_lines' → logprob: -6.212727069854736
    9. '_from' → logprob: -7.087727069854736
    10. '_numbers' → logprob: -7.337727069854736

Token 30: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.055673565715551376
    2. '(' → logprob: -2.930673599243164
    3. 'self' → logprob: -8.055673599243164
    4. '()' → logprob: -8.180673599243164
    5. ' (' → logprob: -10.055673599243164
    6. 's' → logprob: -10.555673599243164
    7. '```' → logprob: -10.680673599243164
    8. '<|end|>' → logprob: -11.180673599243164
    9. '   ' → logprob: -11.430673599243164
    10. '       ' → logprob: -11.555673599243164

Token 31: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6348627805709839
    2. '):' → logprob: -0.7598627805709839
    3. ' ):' → logprob: -6.884862899780273
    4. ' ,' → logprob: -7.759862899780273
    5. 'self' → logprob: -7.759862899780273
    6. '):
' → logprob: -8.759862899780273
    7. ')' → logprob: -9.134862899780273
    8. ',input' → logprob: -10.634862899780273
    9. 's' → logprob: -11.009862899780273
    10. ' ' → logprob: -11.759862899780273

Token 32: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22931715846061707
    2. '<|end|>' → logprob: -2.3543171882629395
    3. ' ' → logprob: -3.7293171882629395
    4. '       ' → logprob: -4.1043171882629395
    5. '            ' → logprob: -4.2293171882629395
    6. '(' → logprob: -4.7293171882629395
    7. '               ' → logprob: -4.7293171882629395
    8. '()' → logprob: -4.9793171882629395
    9. '        ' → logprob: -5.1043171882629395
    10. '\' → logprob: -5.1043171882629395

Token 33: ' while' (ID: 2049)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.3803248405456543
    2. 'self' → logprob: -1.6303248405456543
    3. ' self' → logprob: -1.8803248405456543
    4. ' lines' → logprob: -2.6303248405456543
    5. ' for' → logprob: -3.0053248405456543
    6. 'for' → logprob: -3.1303248405456543
    7. '       ' → logprob: -3.2553248405456543
    8. 'input' → logprob: -3.2553248405456543
    9. ' input' → logprob: -3.5053248405456543
    10. '           ' → logprob: -3.8803248405456543

Token 34: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00993835087865591
    2. 'True' → logprob: -4.6349382400512695
    3. ' len' → logprob: -9.88493824005127
    4. ' self' → logprob: -10.00993824005127
    5. '(True' → logprob: -10.00993824005127
    6. ' ' → logprob: -10.75993824005127
    7. ' not' → logprob: -11.13493824005127
    8. 'len' → logprob: -13.25993824005127
    9. 'self' → logprob: -13.88493824005127
    10. '  ' → logprob: -14.25993824005127

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0870947316288948
    2. '           ' → logprob: -3.087094783782959
    3. ' :' → logprob: -4.587094783782959
    4. ',' → logprob: -4.962094783782959
    5. '():' → logprob: -5.212094783782959
    6. '):' → logprob: -5.462094783782959
    7. '               ' → logprob: -6.087094783782959
    8. ' ' → logprob: -6.337094783782959
    9. '   ' → logprob: -6.712094783782959
    10. '            ' → logprob: -6.962094783782959

Token 36: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.048607468605041504
    2. '           ' → logprob: -3.173607349395752
    3. '            ' → logprob: -5.923607349395752
    4. ' ' → logprob: -7.048607349395752
    5. ' (' → logprob: -8.04860782623291
    6. '   ' → logprob: -8.17360782623291
    7. '(' → logprob: -8.29860782623291
    8. '                
' → logprob: -8.79860782623291
    9. ' :' → logprob: -8.92360782623291
    10. '              ' → logprob: -9.17360782623291

Token 37: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2308528572320938
    2. ' try' → logprob: -1.7308528423309326
    3. 'line' (adapté à ' line') → logprob: -4.730853080749512
    4. '   ' → logprob: -5.480853080749512
    5. 'try' → logprob: -5.480853080749512
    6. ' user' → logprob: -6.230853080749512
    7. 'n' → logprob: -6.230853080749512
    8. ' inp' → logprob: -6.480853080749512
    9. ' ' → logprob: -6.730853080749512
    10. '                   ' → logprob: -6.730853080749512

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006758475210517645
    2. '=' → logprob: -5.006758689880371
    3. ' ==' → logprob: -10.756758689880371
    4. '.strip' → logprob: -11.506758689880371
    5. '.' → logprob: -12.506758689880371
    6. 's' → logprob: -12.881758689880371
    7. '.startswith' → logprob: -13.756758689880371
    8. ':' → logprob: -13.881758689880371
    9. ' :=' → logprob: -14.131758689880371
    10. '=line' → logprob: -15.006758689880371

Token 39: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.023254098370671272
    2. 'input' → logprob: -3.773254156112671
    3. ' self' → logprob: -12.02325439453125
    4. 'self' → logprob: -13.39825439453125
    5. '=input' → logprob: -14.02325439453125
    6. '	input' → logprob: -16.64825439453125
    7. '(input' → logprob: -17.27325439453125
    8. ' inp' → logprob: -17.39825439453125
    9. '_input' → logprob: -17.77325439453125
    10. ' ' → logprob: -17.77325439453125

Token 40: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021243305876851082
    2. '(' → logprob: -4.021243095397949
    3. '('' → logprob: -5.896243095397949
    4. '())' → logprob: -8.89624309539795
    5. '("")' → logprob: -9.77124309539795
    6. '("' → logprob: -10.52124309539795
    7. '().' → logprob: -10.52124309539795
    8. '("("' → logprob: -10.64624309539795
    9. '()
' → logprob: -11.77124309539795
    10. ')' → logprob: -12.02124309539795

Token 41: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -9.627176768844947e-05
    2. 'rstrip' → logprob: -9.250096321105957
    3. 'split' → logprob: -16.37509536743164
    4. '.strip' → logprob: -18.12509536743164
    5. '_strip' → logprob: -18.37509536743164
    6. 'startswith' → logprob: -18.62509536743164
    7. ' strip' → logprob: -18.62509536743164
    8. 'isdigit' → logprob: -19.25009536743164
    9. 'str' → logprob: -19.50009536743164
    10. '```' → logprob: -20.12509536743164

Token 42: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007848527166061103
    2. '())' → logprob: -8.000784873962402
    3. '(' → logprob: -8.125784873962402
    4. '('' → logprob: -9.125784873962402
    5. ')' → logprob: -11.375784873962402
    6. '()==' → logprob: -11.625784873962402
    7. '()
' → logprob: -12.000784873962402
    8. '()`' → logprob: -12.750784873962402
    9. '().' → logprob: -13.375784873962402
    10. '()]' → logprob: -13.500784873962402

Token 43: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1309904009103775
    2. ' if' → logprob: -2.505990505218506
    3. '<|end|>' → logprob: -3.380990505218506
    4. '<|end|>' → logprob: -5.880990505218506
    5. '==' → logprob: -6.380990505218506
    6. '```' → logprob: -7.505990505218506
    7. '           ' → logprob: -7.505990505218506
    8. ')' → logprob: -8.130990028381348
    9. ' ' → logprob: -8.630990028381348
    10. '            ' → logprob: -8.755990028381348

Token 45: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.018589193001389503
    2. 'not' → logprob: -4.143589019775391
    3. ' line' → logprob: -6.018589019775391
    4. 'line' → logprob: -9.26858901977539
    5. ' ' → logprob: -10.76858901977539
    6. ' ' → logprob: -13.89358901977539
    7. '	not' → logprob: -14.26858901977539
    8. '[line' → logprob: -15.14358901977539
    9. '(line' → logprob: -15.26858901977539
    10. '   ' → logprob: -15.64358901977539

Token 46: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3868776857852936
    2. 'line' → logprob: -1.1368776559829712
    3. ' ' → logprob: -12.51187801361084
    4. '	line' → logprob: -13.13687801361084
    5. '(line' → logprob: -14.51187801361084
    6. ' lin' → logprob: -16.261877059936523
    7. '=line' → logprob: -16.386877059936523
    8. '#line' → logprob: -16.636877059936523
    9. '[line' → logprob: -16.636877059936523
    10. '   ' → logprob: -16.886877059936523

Token 47: '.is' (ID: 3109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003065030323341489
    2. ' :' → logprob: -8.750306129455566
    3. ' or' → logprob: -9.750306129455566
    4. ':
' → logprob: -10.000306129455566
    5. '):' → logprob: -10.375306129455566
    6. ':return' → logprob: -12.875306129455566
    7. '.startswith' → logprob: -13.000306129455566
    8. '.' → logprob: -13.250306129455566
    9. '<|end|>' → logprob: -13.250306129455566
    10. '<|end|>' → logprob: -13.875306129455566

Token 48: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.00040660108788870275
    2. 'decimal' → logprob: -8.000406265258789
    3. 'numeric' → logprob: -9.625406265258789
    4. 'al' → logprob: -12.875406265258789
    5. 'alpha' → logprob: -13.000406265258789
    6. '_digit' → logprob: -15.750406265258789
    7. 'd' → logprob: -16.12540626525879
    8. 'empty' → logprob: -17.37540626525879
    9. 'digits' → logprob: -17.37540626525879
    10. 'digital' → logprob: -17.75040626525879

Token 49: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002217465080320835
    2. '()' → logprob: -6.1272172927856445
    3. '(' → logprob: -10.877217292785645
    4. '():
' → logprob: -11.377217292785645
    5. ' ():' → logprob: -14.002217292785645
    6. ':' → logprob: -14.377217292785645
    7. '):' → logprob: -16.12721824645996
    8. '())' → logprob: -16.50221824645996
    9. '():
' → logprob: -16.75221824645996
    10. '():

' → logprob: -16.87721824645996

Token 50: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3329620957374573
    2. '               ' → logprob: -1.4579620361328125
    3. ':' → logprob: -3.4579620361328125
    4. '           ' → logprob: -4.2079620361328125
    5. ' break' → logprob: -6.5829620361328125
    6. ' or' → logprob: -7.0829620361328125
    7. '                    ' → logprob: -7.9579620361328125
    8. '                       ' → logprob: -8.082962036132812
    9. ':
' → logprob: -8.332962036132812
    10. '                ' → logprob: -8.582962036132812

Token 51: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4972759187221527
    2. '                   ' → logprob: -1.372275948524475
    3. 'break' → logprob: -2.6222758293151855
    4. ' break' → logprob: -2.7472758293151855
    5. '	break' → logprob: -7.4972758293151855
    6. '           ' → logprob: -7.8722758293151855
    7. '_break' → logprob: -8.997276306152344
    8. '   ' → logprob: -9.122276306152344
    9. '```' → logprob: -9.372276306152344
    10. '                ' → logprob: -9.622276306152344

Token 52: ' Ignore' (ID: 84342)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03955678269267082
    2. 'break' → logprob: -4.164556980133057
    3. '               ' → logprob: -4.289556980133057
    4. '                   ' → logprob: -4.664556980133057
    5. '                ' → logprob: -10.289556503295898
    6. '           ' → logprob: -11.164556503295898
    7. '   ' → logprob: -11.289556503295898
    8. 'Break' → logprob: -11.414556503295898
    9. ' ' → logprob: -11.539556503295898
    10. '	break' → logprob: -11.664556503295898

Token 53: ' invalid' (ID: 15796)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3875797986984253
    2. '               ' → logprob: -1.6375797986984253
    3. ' continue' → logprob: -3.137579917907715
    4. '           ' → logprob: -4.137579917907715
    5. 'break' → logprob: -4.137579917907715
    6. 'continue' → logprob: -4.262579917907715
    7. '                   ' → logprob: -4.887579917907715
    8. ' ' → logprob: -5.137579917907715
    9. '                ' → logprob: -5.137579917907715
    10. '<|end|>' → logprob: -5.137579917907715

Token 54: ' lines' (ID: 8698)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4474710524082184
    2. ' lines' → logprob: -1.197471022605896
    3. 'input' → logprob: -4.0724711418151855
    4. ' inputs' → logprob: -4.3224711418151855
    5. '<|end|>' → logprob: -5.0724711418151855
    6. '           ' → logprob: -5.1974711418151855
    7. 's' → logprob: -5.6974711418151855
    8. ')' → logprob: -5.6974711418151855
    9. '   ' → logprob: -6.1974711418151855
    10. ' ' → logprob: -6.6974711418151855

Token 55: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010814229026436806
    2. '               ' → logprob: -5.010814189910889
    3. '                       ' → logprob: -5.635814189910889
    4. '           ' → logprob: -8.135814666748047
    5. 'continue' → logprob: -9.510814666748047
    6. ' continue' → logprob: -10.135814666748047
    7. '   ' → logprob: -11.010814666748047
    8. ' or' → logprob: -11.385814666748047
    9. '<|end|>' → logprob: -11.385814666748047
    10. '       ' → logprob: -11.385814666748047

Token 56: ' although' (ID: 11943)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5114085674285889
    2. '               ' → logprob: -1.1364085674285889
    3. ' break' → logprob: -3.136408567428589
    4. ' continue' → logprob: -3.636408567428589
    5. 'continue' → logprob: -6.011408805847168
    6. '                ' → logprob: -6.261408805847168
    7. '                       ' → logprob: -6.636408805847168
    8. 'break' → logprob: -6.636408805847168
    9. '           ' → logprob: -6.886408805847168
    10. '                    ' → logprob: -7.636408805847168

Token 57: ' problem' (ID: 4792)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4508476257324219
    2. ' line' → logprob: -1.7008476257324219
    3. ' not' → logprob: -2.450847625732422
    4. 'not' → logprob: -3.075847625732422
    5. 'break' → logprob: -4.700847625732422
    6. '                   ' → logprob: -4.700847625732422
    7. ' the' → logprob: -5.450847625732422
    8. 'self' → logprob: -5.575847625732422
    9. 'the' → logprob: -5.575847625732422
    10. '                    
' → logprob: -6.200847625732422

Token 58: ' guarantees' (ID: 49460)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' input' (ID: 3422)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6252941489219666
    2. ' the' → logprob: -2.0002942085266113
    3. ' only' → logprob: -2.7502942085266113
    4. ' valid' → logprob: -3.0002942085266113
    5. ' input' → logprob: -3.2502942085266113
    6. ' at' → logprob: -3.3752942085266113
    7. ' a' → logprob: -3.7502942085266113
    8. '<|end|>' → logprob: -4.375294208526611
    9. ' numbers' → logprob: -4.500294208526611
    10. '               ' → logprob: -4.500294208526611

Token 60: ' format' (ID: 6011)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40675848722457886
    2. '                   ' → logprob: -1.2817585468292236
    3. '           ' → logprob: -4.0317583084106445
    4. '                       ' → logprob: -4.6567583084106445
    5. '<|end|>' → logprob: -5.1567583084106445
    6. '                ' → logprob: -5.4067583084106445
    7. ' is' → logprob: -5.7817583084106445
    8. ' continues' → logprob: -6.0317583084106445
    9. ' or' → logprob: -6.5317583084106445
    10. ':' → logprob: -6.6567583084106445

Token 61: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07674974203109741
    2. '               ' → logprob: -2.826749801635742
    3. '                       ' → logprob: -4.326749801635742
    4. '           ' → logprob: -7.326749801635742
    5. ':' → logprob: -7.826749801635742
    6. '       ' → logprob: -9.201749801635742
    7. '                ' → logprob: -10.076749801635742
    8. '   ' → logprob: -10.201749801635742
    9. '                    ' → logprob: -10.201749801635742
    10. '<|end|>' → logprob: -10.451749801635742

Token 62: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16135373711585999
    2. '               ' → logprob: -2.036353826522827
    3. '                       ' → logprob: -4.286353588104248
    4. ':' → logprob: -5.911353588104248
    5. '           ' → logprob: -6.786353588104248
    6. '                    
' → logprob: -9.036354064941406
    7. '                    ' → logprob: -9.286354064941406
    8. ':
' → logprob: -9.411354064941406
    9. '       ' → logprob: -9.536354064941406
    10. '   ' → logprob: -9.661354064941406

Token 63: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.525467574596405
    2. ' break' → logprob: -1.5254676342010498
    3. '               ' → logprob: -2.15046763420105
    4. '                   ' → logprob: -2.65046763420105
    5. 'continue' (adapté à ' continue') → logprob: -5.900467395782471
    6. ' continue' → logprob: -7.150467395782471
    7. '                       ' → logprob: -8.525467872619629
    8. '```' → logprob: -9.150467872619629
    9. '	break' → logprob: -9.400467872619629
    10. 'return' → logprob: -9.400467872619629

Token 64: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026468830183148384
    2. '                
' → logprob: -6.6276469230651855
    3. '<|end|>' → logprob: -7.0026469230651855
    4. '```' → logprob: -9.252646446228027
    5. 'elif' → logprob: -9.627646446228027
    6. '
' → logprob: -10.002646446228027
    7. 'else' → logprob: -10.002646446228027
    8. '           ' → logprob: -10.502646446228027
    9. '<|end|>' → logprob: -10.627646446228027
    10. '    
' → logprob: -11.127646446228027

Token 65: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011630769586190581
    2. '                
' → logprob: -7.001163005828857
    3. '```' → logprob: -9.126163482666016
    4. '<|end|>' → logprob: -9.501163482666016
    5. 'else' → logprob: -11.626163482666016
    6. '           ' → logprob: -11.626163482666016
    7. '                    
' → logprob: -12.126163482666016
    8. ' else' → logprob: -12.376163482666016
    9. '    
' → logprob: -12.376163482666016
    10. '       ' → logprob: -12.376163482666016

Token 66: ' value' (ID: 1432)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1916196197271347
    2. 'self' → logprob: -2.691619634628296
    3. 'if' → logprob: -2.941619634628296
    4. '           ' → logprob: -3.816619634628296
    5. ' if' → logprob: -3.816619634628296
    6. ' self' → logprob: -5.191619396209717
    7. 'n' → logprob: -6.566619396209717
    8. 'elif' → logprob: -7.566619396209717
    9. 's' → logprob: -7.691619396209717
    10. 'else' → logprob: -7.816619396209717

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017237268621101975
    2. '=' → logprob: -6.501723766326904
    3. 's' → logprob: -8.626723289489746
    4. ' ' → logprob: -10.376723289489746
    5. ')' → logprob: -12.626723289489746
    6. '.' → logprob: -13.126723289489746
    7. ' =
' → logprob: -13.876723289489746
    8. '=int' → logprob: -13.876723289489746
    9. '_' → logprob: -14.376723289489746
    10. '   ' → logprob: -14.501723289489746

Token 68: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.061968810856342316
    2. 'int' → logprob: -2.8119688034057617
    3. '=int' → logprob: -14.811968803405762
    4. '[int' → logprob: -14.936968803405762
    5. '(int' → logprob: -15.186968803405762
    6. ':int' → logprob: -16.561969757080078
    7. '<int' → logprob: -16.686969757080078
    8. '	int' → logprob: -16.686969757080078
    9. ' ' → logprob: -17.311969757080078
    10. ' in' → logprob: -17.686969757080078

Token 69: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.004078758880496025
    2. '(' → logprob: -5.5040788650512695
    3. ' (' → logprob: -16.379077911376953
    4. '(
' → logprob: -16.504077911376953
    5. '(value' → logprob: -16.629077911376953
    6. '(lines' → logprob: -17.004077911376953
    7. '=line' → logprob: -17.379077911376953
    8. '(token' → logprob: -17.629077911376953
    9. '(Line' → logprob: -18.129077911376953
    10. ')' → logprob: -18.129077911376953

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02705894224345684
    2. ')
' → logprob: -3.6520588397979736
    3. '               ' → logprob: -7.402059078216553
    4. ')
' → logprob: -8.902058601379395
    5. ' )' → logprob: -12.527058601379395
    6. '                   ' → logprob: -13.027058601379395
    7. '           ' → logprob: -13.402058601379395
    8. ')

' → logprob: -13.402058601379395
    9. '))' → logprob: -14.777058601379395
    10. ')`
' → logprob: -14.777058601379395

Token 71: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005620885640382767
    2. '<|end|>' → logprob: -7.6255621910095215
    3. '<|end|>' → logprob: -11.125561714172363
    4. '           ' → logprob: -11.250561714172363
    5. '                
' → logprob: -11.375561714172363
    6. ' if' → logprob: -11.750561714172363
    7. '                ' → logprob: -12.125561714172363
    8. 'if' → logprob: -12.500561714172363
    9. '	           ' → logprob: -12.625561714172363
    10. '              ' → logprob: -12.750561714172363

Token 72: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6363837122917175
    2. ' if' → logprob: -1.3863837718963623
    3. '               ' → logprob: -1.5113837718963623
    4. 'self' → logprob: -9.511384010314941
    5. '	if' → logprob: -10.386384010314941
    6. '           ' → logprob: -10.511384010314941
    7. ' ' → logprob: -11.011384010314941
    8. '<|end|>' → logprob: -11.011384010314941
    9. '                
' → logprob: -11.511384010314941
    10. '   ' → logprob: -12.011384010314941

Token 73: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0005666146171279252
    2. 'value' → logprob: -8.000566482543945
    3. ' not' → logprob: -8.500566482543945
    4. ' ' → logprob: -10.625566482543945
    5. '(value' → logprob: -13.375566482543945
    6. ')value' → logprob: -14.750566482543945
    7. '	value' → logprob: -14.750566482543945
    8. 'not' → logprob: -15.000566482543945
    9. '"value' → logprob: -15.375566482543945
    10. '0' → logprob: -16.375566482543945

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0158405564725399
    2. '==' → logprob: -4.515840530395508
    3. ' <=' → logprob: -5.390840530395508
    4. '<=' → logprob: -9.390840530395508
    5. ' ' → logprob: -10.140840530395508
    6. '<|end|>' → logprob: -10.140840530395508
    7. ' <' → logprob: -10.265840530395508
    8. '()==' → logprob: -12.140840530395508
    9. '<|end|>' → logprob: -12.265840530395508
    10. ')==' → logprob: -13.015840530395508

Token 75: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16049250960350037
    2. '0' → logprob: -1.9104925394058228
    3. ' -' → logprob: -8.660492897033691
    4. '-' → logprob: -9.535492897033691
    5. '  ' → logprob: -11.285492897033691
    6. '   ' → logprob: -11.785492897033691
    7. '    ' → logprob: -14.285492897033691
    8. ' ' → logprob: -14.910492897033691
    9. '```' → logprob: -15.472992897033691
    10. '1' → logprob: -15.535492897033691

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002656870288774371
    2. ' ' → logprob: -6.377656936645508
    3. '-' → logprob: -7.002656936645508
    4. ' -' → logprob: -10.127656936645508
    5. '   ' → logprob: -13.502656936645508
    6. '1' → logprob: -13.940156936645508
    7. '  ' → logprob: -14.315156936645508
    8. '```' → logprob: -15.252656936645508
    9. '42' → logprob: -15.377656936645508
    10. '    ' → logprob: -15.752656936645508

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009993111714720726
    2. ':
' → logprob: -4.634993076324463
    3. '           ' → logprob: -8.634993553161621
    4. '                   ' → logprob: -10.634993553161621
    5. '               ' → logprob: -11.134993553161621
    6. '<|end|>' → logprob: -12.134993553161621
    7. ':return' → logprob: -12.634993553161621
    8. '):' → logprob: -12.759993553161621
    9. ' :' → logprob: -13.384993553161621
    10. '<|end|>' → logprob: -13.384993553161621

Token 78: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00075459701474756
    2. ':' → logprob: -8.375754356384277
    3. '               ' → logprob: -8.500754356384277
    4. ' break' → logprob: -9.375754356384277
    5. '                    
' → logprob: -9.750754356384277
    6. '           ' → logprob: -9.750754356384277
    7. 'break' → logprob: -10.125754356384277
    8. ':
' → logprob: -10.750754356384277
    9. '                       ' → logprob: -11.000754356384277
    10. '<|end|>' → logprob: -11.375754356384277

Token 79: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1262013465166092
    2. 'break' (adapté à ' break') → logprob: -2.3762013912200928
    3. ' break' → logprob: -4.126201152801514
    4. '               ' → logprob: -4.751201152801514
    5. '	break' → logprob: -8.251201629638672
    6. '                       ' → logprob: -8.376201629638672
    7. '                    
' → logprob: -9.001201629638672
    8. '_break' → logprob: -9.251201629638672
    9. '```' → logprob: -9.501201629638672
    10. '           ' → logprob: -10.751201629638672

Token 80: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003741171909496188
    2. '                
' → logprob: -6.128741264343262
    3. '           ' → logprob: -7.378741264343262
    4. '
' → logprob: -7.753741264343262
    5. '<|end|>' → logprob: -8.878741264343262
    6. 'self' → logprob: -9.253741264343262
    7. '              ' → logprob: -10.378741264343262
    8. '            
' → logprob: -10.628741264343262
    9. '    
' → logprob: -10.753741264343262
    10. '                ' → logprob: -10.878741264343262

Token 81: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004867976531386375
    2. '
' → logprob: -6.129868030548096
    3. '                
' → logprob: -6.629868030548096
    4. '           ' → logprob: -6.879868030548096
    5. '<|end|>' → logprob: -9.629867553710938
    6. '                ' → logprob: -10.129867553710938
    7. '                   ' → logprob: -10.504867553710938
    8. '                    
' → logprob: -10.504867553710938
    9. '            
' → logprob: -10.629867553710938
    10. '       ' → logprob: -10.629867553710938

Token 82: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014714689925312996
    2. 'self' (adapté à ' self') → logprob: -4.26471471786499
    3. ' self' → logprob: -8.264714241027832
    4. '           ' → logprob: -8.389714241027832
    5. '```' → logprob: -10.764714241027832
    6. '                   ' → logprob: -11.014714241027832
    7. '<|end|>' → logprob: -12.014714241027832
    8. '	           ' → logprob: -12.264714241027832
    9. '                
' → logprob: -12.639714241027832
    10. '   ' → logprob: -12.889714241027832

Token 83: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0325924449716695e-05
    2. ')._' → logprob: -12.62501049041748
    3. ' .' → logprob: -12.75001049041748
    4. ']._' → logprob: -12.87501049041748
    5. '.' → logprob: -13.87501049041748
    6. '       ' → logprob: -15.75001049041748
    7. '           ' → logprob: -16.500009536743164
    8. '```' → logprob: -16.750009536743164
    9. '.data' → logprob: -16.875009536743164
    10. 'self' → logprob: -17.000009536743164

Token 84: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0005545823951251805
    2. '_data' → logprob: -7.50055456161499
    3. ' data' → logprob: -14.125555038452148
    4. '_' → logprob: -15.375555038452148
    5. '   ' → logprob: -15.875555038452148
    6. '	data' → logprob: -16.50055503845215
    7. '.data' → logprob: -16.50055503845215
    8. 'value' → logprob: -16.87555503845215
    9. '<data' → logprob: -17.12555503845215
    10. '$data' → logprob: -17.50055503845215

Token 85: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016504127415828407
    2. '.' → logprob: -8.750164985656738
    3. '.add' → logprob: -13.250164985656738
    4. '.app' → logprob: -13.500164985656738
    5. '.extend' → logprob: -13.625164985656738
    6. '.setdefault' → logprob: -13.875164985656738
    7. '.ap' → logprob: -14.375164985656738
    8. ' .' → logprob: -15.625164985656738
    9. '.Append' → logprob: -15.875164985656738
    10. 'append' → logprob: -16.375165939331055

Token 86: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.0004306692280806601
    2. '(' → logprob: -7.750430583953857
    3. '(
' → logprob: -17.875431060791016
    4. '(valor' → logprob: -18.750431060791016
    5. ')value' → logprob: -19.000431060791016
    6. ' (' → logprob: -19.000431060791016
    7. '(values' → logprob: -19.250431060791016
    8. '(v' → logprob: -19.375431060791016
    9. '(

' → logprob: -19.500431060791016
    10. '()' → logprob: -19.500431060791016

Token 87: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0206720617134124e-05
    2. ')
' → logprob: -12.00001049041748
    3. ' )' → logprob: -12.75001049041748
    4. '               ' → logprob: -14.62501049041748
    5. ')return' → logprob: -15.87501049041748
    6. '           ' → logprob: -16.000009536743164
    7. '       ' → logprob: -16.750009536743164
    8. '`)' → logprob: -16.875009536743164
    9. '))' → logprob: -17.000009536743164
    10. '<|end|>' → logprob: -17.125009536743164

Token 88: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04160841181874275
    2. '   ' → logprob: -3.2916083335876465
    3. ' def' → logprob: -6.1666083335876465
    4. '
' → logprob: -7.6666083335876465
    5. '    
' → logprob: -8.041608810424805
    6. '       ' → logprob: -8.041608810424805
    7. '<|end|>' → logprob: -8.916608810424805
    8. '        
' → logprob: -9.416608810424805
    9. ' ' → logprob: -9.666608810424805
    10. '<|end|>' → logprob: -10.541608810424805

Token 90: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.28150099515914917
    2. 'get' → logprob: -1.406501054763794
    3. ' def' → logprob: -9.156500816345215
    4. 'def' → logprob: -9.406500816345215
    5. ' process' → logprob: -9.906500816345215
    6. ' data' → logprob: -10.031500816345215
    7. 'process' → logprob: -10.156500816345215
    8. 'data' → logprob: -11.531500816345215
    9. '_get' → logprob: -12.656500816345215
    10. ' ' → logprob: -12.781500816345215

Token 91: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0011697487207129598
    2. '_' → logprob: -7.626169681549072
    3. '_input' → logprob: -8.25117015838623
    4. '_values' → logprob: -8.50117015838623
    5. '_results' → logprob: -9.62617015838623
    6. '_output' → logprob: -10.00117015838623
    7. 'data' → logprob: -10.75117015838623
    8. '_Data' → logprob: -11.12617015838623
    9. 'Data' → logprob: -11.50117015838623
    10. '()' → logprob: -11.62617015838623

Token 92: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3489668667316437
    2. '(' → logprob: -1.2239668369293213
    3. 'self' → logprob: -7.9739670753479
    4. '(
' → logprob: -9.348966598510742
    5. 's' → logprob: -10.473966598510742
    6. '()' → logprob: -10.598966598510742
    7. '   ' → logprob: -11.598966598510742
    8. '(s' → logprob: -12.098966598510742
    9. '       ' → logprob: -12.473966598510742
    10. '(Self' → logprob: -12.598966598510742

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12915076315402985
    2. ')' → logprob: -2.129150867462158
    3. '):
' → logprob: -6.129150867462158
    4. '[]):' → logprob: -11.379150390625
    5. '):

' → logprob: -11.754150390625
    6. '()' → logprob: -11.754150390625
    7. '():' → logprob: -11.879150390625
    8. ' ):' → logprob: -13.504150390625
    9. ')return' → logprob: -13.754150390625
    10. '):
' → logprob: -14.129150390625

Token 94: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8011994361877441
    2. '           ' → logprob: -0.9261994361877441
    3. ' return' → logprob: -1.9261994361877441
    4. '()' → logprob: -5.926199436187744
    5. '       ' → logprob: -5.926199436187744
    6. '               ' → logprob: -6.926199436187744
    7. ' ' → logprob: -7.426199436187744
    8. '<|end|>' → logprob: -7.676199436187744
    9. '	       ' → logprob: -8.176198959350586
    10. '[]' → logprob: -8.301198959350586

Token 95: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47668060660362244
    2. ' return' → logprob: -0.9766806364059448
    3. '           ' → logprob: -5.976680755615234
    4. '       ' → logprob: -10.101680755615234
    5. '	return' → logprob: -11.851680755615234
    6. '               ' → logprob: -12.226680755615234
    7. ' ' → logprob: -12.726680755615234
    8. '   ' → logprob: -13.101680755615234
    9. '{return' → logprob: -13.101680755615234
    10. ':return' → logprob: -13.601680755615234

Token 96: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.061967913061380386
    2. 'self' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.936967849731445
    4. '	self' → logprob: -16.811967849731445
    5. '(self' → logprob: -16.936967849731445
    6. '       ' → logprob: -18.061967849731445
    7. '           ' → logprob: -18.311967849731445
    8. '   ' → logprob: -18.686967849731445
    9. ' ' → logprob: -18.936967849731445
    10. '_self' → logprob: -19.061967849731445

Token 97: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.727905979962088e-05
    2. '.' → logprob: -10.00004768371582
    3. ' .' → logprob: -13.87504768371582
    4. '       ' → logprob: -15.00004768371582
    5. '.__' → logprob: -16.12504768371582
    6. '.
' → logprob: -16.50004768371582
    7. ')._' → logprob: -16.62504768371582
    8. '_data' → logprob: -17.12504768371582
    9. ']._' → logprob: -17.12504768371582
    10. '->_' → logprob: -17.25004768371582

Token 98: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -3.650518920039758e-06
    2. '_data' → logprob: -12.875003814697266
    3. 'da' → logprob: -14.875003814697266
    4. 'dat' → logprob: -15.125003814697266
    5. 'd' → logprob: -15.750003814697266
    6. '_' → logprob: -16.500003814697266
    7. '	data' → logprob: -16.875003814697266
    8. ' data' → logprob: -17.312503814697266
    9. '.data' → logprob: -17.625003814697266
    10. 'class' → logprob: -17.875003814697266

Token 99: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3921385109424591
    2. '<|end|>' → logprob: -1.5171384811401367
    3. '
' → logprob: -2.3921384811401367
    4. '    
' → logprob: -4.892138481140137
    5. '       ' → logprob: -6.267138481140137
    6. '    ' → logprob: -7.392138481140137
    7. '<|end|>' → logprob: -7.517138481140137
    8. ' 
' → logprob: -7.517138481140137
    9. 'class' (adapté à ' class') → logprob: -8.017138481140137
    10. '```' → logprob: -8.267138481140137

Token 102: ' Conse' (ID: 25365)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.4783887565135956
    2. ' Solver' → logprob: -1.353388786315918
    3. ' Processor' → logprob: -2.978388786315918
    4. ' Output' → logprob: -4.228388786315918
    5. 'Solution' → logprob: -4.228388786315918
    6. ' Sum' → logprob: -4.478388786315918
    7. ' Calculator' → logprob: -4.478388786315918
    8. 'Solver' → logprob: -5.478388786315918
    9. ' Result' → logprob: -5.853388786315918
    10. ' Algorithm' → logprob: -5.853388786315918

Token 103: 'cut' (ID: 9804)
  Prédit: 'cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.0009492144454270601
    2. 'Cut' → logprob: -7.875949382781982
    3. ' cut' → logprob: -7.875949382781982
    4. 'utive' → logprob: -9.125948905944824
    5. 'st' → logprob: -10.875948905944824
    6. 'secutive' → logprob: -11.000948905944824
    7. 'c' → logprob: -11.500948905944824
    8. '_cut' → logprob: -12.000948905944824
    9. 'ns' → logprob: -12.125948905944824
    10. 'ut' → logprob: -12.500948905944824

Token 104: 'ive' (ID: 585)
  Prédit: 'utive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'utive' → logprob: -0.03710712864995003
    2. 'ut' → logprob: -3.412107229232788
    3. '   ' → logprob: -5.787106990814209
    4. 'u' → logprob: -8.662107467651367
    5. 'ative' → logprob: -9.787107467651367
    6. 'uctive' → logprob: -10.037107467651367
    7. '       ' → logprob: -10.537107467651367
    8. 'ution' → logprob: -11.037107467651367
    9. 'e' → logprob: -11.162107467651367
    10. 'uitive' → logprob: -11.662107467651367

Token 105: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.5927525162696838
    2. 'Inte' → logprob: -0.9677525162696838
    3. 'Sequence' → logprob: -3.092752456665039
    4. 'Integer' → logprob: -4.342752456665039
    5. 'S' → logprob: -5.467752456665039
    6. 'Finder' → logprob: -6.342752456665039
    7. 'Sequences' → logprob: -6.842752456665039
    8. 'Numbers' → logprob: -7.467752456665039
    9. 'In' → logprob: -8.217752456665039
    10. 'Range' → logprob: -8.842752456665039

Token 106: 'Counter' (ID: 16263)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028935415670275688
    2. 'Finder' → logprob: -3.778935432434082
    3. ':
' → logprob: -6.278935432434082
    4. 'Of' → logprob: -6.778935432434082
    5. 'Calculator' → logprob: -7.403935432434082
    6. 'Solver' → logprob: -7.403935432434082
    7. '{' → logprob: -8.028935432434082
    8. '(' → logprob: -8.153935432434082
    9. '():' → logprob: -8.528935432434082
    10. 'Searcher' → logprob: -8.653935432434082

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005735247395932674
    2. ':
' → logprob: -7.500573635101318
    3. '(' → logprob: -11.37557315826416
    4. '(S' → logprob: -13.12557315826416
    5. '):' → logprob: -13.25057315826416
    6. '():' → logprob: -13.62557315826416
    7. '   ' → logprob: -13.75057315826416
    8. ' :' → logprob: -14.50057315826416
    9. ':def' → logprob: -14.50057315826416
    10. '(object' → logprob: -14.62557315826416

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037800322752445936
    2. '   ' → logprob: -8.125377655029297
    3. 'def' → logprob: -9.875377655029297
    4. ' def' → logprob: -11.125377655029297
    5. '    
' → logprob: -12.625377655029297
    6. '```' → logprob: -12.875377655029297
    7. '           ' → logprob: -13.500377655029297
    8. '
' → logprob: -13.500377655029297
    9. '<|end|>' → logprob: -13.500377655029297
    10. '     ' → logprob: -13.750377655029297

Token 109: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10503018647432327
    2. ' def' → logprob: -2.3550302982330322
    3. '   ' → logprob: -5.980030059814453
    4. '       ' → logprob: -6.105030059814453
    5. '@' → logprob: -10.605030059814453
    6. ' ' → logprob: -10.855030059814453
    7. ' @' → logprob: -13.230030059814453
    8. '  ' → logprob: -13.355030059814453
    9. '	def' → logprob: -13.605030059814453
    10. '    ' → logprob: -13.730030059814453

Token 110: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.26206982135772705
    2. 'init' → logprob: -2.0120697021484375
    3. ' init' → logprob: -3.1370697021484375
    4. ' def' → logprob: -3.6370697021484375
    5. '__' → logprob: -3.8870697021484375
    6. 'def' → logprob: -6.1370697021484375
    7. ' count' → logprob: -6.7620697021484375
    8. 'count' → logprob: -7.0120697021484375
    9. ' calculate' → logprob: -7.0120697021484375
    10. '_init' → logprob: -7.3870697021484375

Token 111: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.47807493805885315
    2. 'nit' → logprob: -0.9780749082565308
    3. 'def' → logprob: -5.85307502746582
    4. 'int' → logprob: -7.35307502746582
    5. 'it' → logprob: -8.72807502746582
    6. 'i' → logprob: -9.97807502746582
    7. 'n' → logprob: -10.10307502746582
    8. 'ni' → logprob: -10.10307502746582
    9. 'nt' → logprob: -10.47807502746582
    10. 'm' → logprob: -10.60307502746582

Token 112: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6957152485847473
    2. '__(' → logprob: -0.6957152485847473
    3. '(' → logprob: -6.070715427398682
    4. ' (' → logprob: -9.195714950561523
    5. '_(' → logprob: -9.320714950561523
    6. '__' → logprob: -10.695714950561523
    7. '__(
' → logprob: -11.320714950561523
    8. ')(' → logprob: -11.445714950561523
    9. 'self' → logprob: -11.695714950561523
    10. '   ' → logprob: -13.320714950561523

Token 113: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000169332604855299
    2. ' self' → logprob: -8.75016975402832
    3. ')' → logprob: -11.75016975402832
    4. '       ' → logprob: -13.62516975402832
    5. '):
' → logprob: -13.87516975402832
    6. '           ' → logprob: -15.62516975402832
    7. '   ' → logprob: -16.37516975402832
    8. '
' → logprob: -16.37516975402832
    9. ' ' → logprob: -16.37516975402832
    10. '):' → logprob: -16.50016975402832

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024984871968626976
    2. '):' → logprob: -3.899984836578369
    3. ' ,' → logprob: -6.149984836578369
    4. 'self' → logprob: -6.524984836578369
    5. ',self' → logprob: -8.149985313415527
    6. '):
' → logprob: -8.274985313415527
    7. ' ):' → logprob: -8.649985313415527
    8. ')' → logprob: -10.649985313415527
    9. '_self' → logprob: -10.774985313415527
    10. '(self' → logprob: -11.524985313415527

Token 115: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2579897344112396
    2. 'data' → logprob: -2.2579896450042725
    3. 'numbers' → logprob: -2.7579896450042725
    4. 'values' → logprob: -4.132989883422852
    5. 'n' → logprob: -4.257989883422852
    6. 'nums' → logprob: -4.757989883422852
    7. ' self' → logprob: -5.007989883422852
    8. '):
' → logprob: -5.757989883422852
    9. ' data' → logprob: -6.257989883422852
    10. ' numbers' → logprob: -6.507989883422852

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003695801133289933
    2. '):
' → logprob: -5.753695964813232
    3. ')' → logprob: -8.628695487976074
    4. ':' → logprob: -8.628695487976074
    5. ' ):' → logprob: -9.003695487976074
    6. '   ' → logprob: -11.128695487976074
    7. ' ' → logprob: -12.878695487976074
    8. '=None' → logprob: -13.128695487976074
    9. '):
' → logprob: -13.253695487976074
    10. ':int' → logprob: -13.253695487976074

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014101164415478706
    2. 'self' → logprob: -6.876410007476807
    3. '       ' → logprob: -8.376410484313965
    4. ' self' → logprob: -9.001410484313965
    5. '               ' → logprob: -11.126410484313965
    6. '   ' → logprob: -12.626410484313965
    7. '         ' → logprob: -13.876410484313965
    8. '          ' → logprob: -14.001410484313965
    9. ':' → logprob: -14.376410484313965
    10. ',' → logprob: -14.501410484313965

Token 118: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6232926249504089
    2. 'n' → logprob: -1.3732926845550537
    3. ' self' → logprob: -1.8732926845550537
    4. ' n' → logprob: -2.8732926845550537
    5. '           ' → logprob: -8.123292922973633
    6. '       ' → logprob: -9.373292922973633
    7. '               ' → logprob: -11.248292922973633
    8. '0' → logprob: -12.123292922973633
    9. '   ' → logprob: -12.748292922973633
    10. '_n' → logprob: -12.998292922973633

Token 119: '.n' (ID: 1835)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.09930945187807083
    2. '.' → logprob: -2.4743094444274902
    3. '.n' → logprob: -4.72430944442749
    4. ' .' → logprob: -6.84930944442749
    5. '   ' → logprob: -9.224309921264648
    6. '=' → logprob: -9.349309921264648
    7. '.value' → logprob: -9.974309921264648
    8. '.
' → logprob: -10.724309921264648
    9. ' =' → logprob: -10.849309921264648
    10. '       ' → logprob: -11.224309921264648

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740777015686035
    2. '=' → logprob: -0.9740777015686035
    3. '=n' → logprob: -15.224077224731445
    4. ' ' → logprob: -15.599077224731445
    5. ' =
' → logprob: -15.974077224731445
    6. '=
' → logprob: -17.099077224731445
    7. '   ' → logprob: -17.349077224731445
    8. '.' → logprob: -17.599077224731445
    9. '    ' → logprob: -18.099077224731445
    10. '_' → logprob: -18.224077224731445

Token 121: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06196824833750725
    2. 'n' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.061967849731445
    4. '	n' → logprob: -15.186967849731445
    5. '_n' → logprob: -17.436967849731445
    6. ')n' → logprob: -19.436967849731445
    7. '$n' → logprob: -19.561967849731445
    8. '​' → logprob: -19.686967849731445
    9. ',n' → logprob: -19.936967849731445
    10. ' ' → logprob: -19.936967849731445

Token 122: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7105832099914551
    2. '<|end|>' → logprob: -1.585583209991455
    3. '
' → logprob: -2.085583209991455
    4. 'def' → logprob: -2.585583209991455
    5. '   ' → logprob: -3.460583209991455
    6. '        
' → logprob: -3.710583209991455
    7. '    
' → logprob: -4.085583209991455
    8. ' ' → logprob: -5.085583209991455
    9. '<|end|>' → logprob: -5.210583209991455
    10. ' def' → logprob: -5.210583209991455

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43256425857543945
    2. 'def' → logprob: -1.5575642585754395
    3. '
' → logprob: -2.6825642585754395
    4. '        
' → logprob: -3.8075642585754395
    5. '<|end|>' → logprob: -4.3075642585754395
    6. '   ' → logprob: -4.4325642585754395
    7. '    
' → logprob: -4.6825642585754395
    8. '           ' → logprob: -5.1825642585754395
    9. '    ' → logprob: -6.0575642585754395
    10. '        ' → logprob: -6.4325642585754395

Token 124: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003298632800579071
    2. '   ' → logprob: -8.500329971313477
    3. ' def' → logprob: -9.000329971313477
    4. '       ' → logprob: -12.750329971313477
    5. ' ' → logprob: -17.375329971313477
    6. '    
' → logprob: -17.875329971313477
    7. '	def' → logprob: -18.000329971313477
    8. '  ' → logprob: -18.125329971313477
    9. '        
' → logprob: -18.625329971313477
    10. '    ' → logprob: -19.250329971313477

Token 125: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.020559756085276604
    2. ' count' → logprob: -3.895559787750244
    3. 'num' → logprob: -12.645559310913086
    4. 'get' → logprob: -12.895559310913086
    5. 'calculate' → logprob: -13.145559310913086
    6. 'find' → logprob: -13.270559310913086
    7. 'solve' → logprob: -13.395559310913086
    8. '_count' → logprob: -13.520559310913086
    9. 'con' → logprob: -13.520559310913086
    10. '__' → logprob: -14.270559310913086

Token 126: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.049493592232465744
    2. '_sequences' → logprob: -4.174493789672852
    3. '_con' → logprob: -4.299493789672852
    4. '_s' → logprob: -4.549493789672852
    5. '(' → logprob: -4.924493789672852
    6. '(self' → logprob: -7.924493789672852
    7. '_sum' → logprob: -8.549493789672852
    8. '_se' → logprob: -8.549493789672852
    9. '_sub' → logprob: -8.924493789672852
    10. '_self' → logprob: -8.924493789672852

Token 127: 'ways' (ID: 2771)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.05322650820016861
    2. 'ways' → logprob: -3.3032264709472656
    3. 'represent' → logprob: -4.803226470947266
    4. 'sum' → logprob: -5.428226470947266
    5. 'se' → logprob: -7.053226470947266
    6. 'sub' → logprob: -7.678226470947266
    7. '_con' → logprob: -7.928226470947266
    8. 'continuous' → logprob: -8.178226470947266
    9. 'express' → logprob: -9.053226470947266
    10. 'all' → logprob: -9.178226470947266

Token 128: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006846326403319836
    2. '(' → logprob: -5.0068464279174805
    3. ' (' → logprob: -9.25684642791748
    4. '       ' → logprob: -11.50684642791748
    5. 'self' → logprob: -11.75684642791748
    6. '(
' → logprob: -12.13184642791748
    7. '   ' → logprob: -12.25684642791748
    8. '(s' → logprob: -12.50684642791748
    9. '(Self' → logprob: -13.88184642791748
    10. ' self' → logprob: -14.13184642791748

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6387168169021606
    2. ',' → logprob: -0.7637168169021606
    3. ',n' → logprob: -6.013716697692871
    4. '):
' → logprob: -6.638716697692871
    5. 'self' → logprob: -7.013716697692871
    6. ' ):' → logprob: -7.138716697692871
    7. ' ,' → logprob: -7.513716697692871
    8. ')' → logprob: -10.013716697692871
    9. '   ' → logprob: -11.763716697692871
    10. 'n' → logprob: -11.888716697692871

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017149722203612328
    2. '       ' → logprob: -4.892149925231934
    3. ' 
' → logprob: -5.892149925231934
    4. ' ' → logprob: -6.767149925231934
    5. '        ' → logprob: -7.017149925231934
    6. ',' → logprob: -7.142149925231934
    7. '<|end|>' → logprob: -7.517149925231934
    8. '    
' → logprob: -7.767149925231934
    9. ' return' → logprob: -8.017149925231934
    10. '            ' → logprob: -8.017149925231934

Token 131: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03146380931138992
    2. ' count' → logprob: -3.531463861465454
    3. '           ' → logprob: -6.781463623046875
    4. 'result' → logprob: -8.781463623046875
    5. 'total' → logprob: -9.531463623046875
    6. 'n' → logprob: -9.781463623046875
    7. 'cnt' → logprob: -9.906463623046875
    8. 'ways' → logprob: -10.156463623046875
    9. ' ways' → logprob: -10.281463623046875
    10. '   ' → logprob: -10.656463623046875

Token 132: ' Using' (ID: 17511)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4460875391960144
    2. ' count' → logprob: -1.6960875988006592
    3. ' ways' → logprob: -2.821087598800659
    4. 'result' → logprob: -3.446087598800659
    5. 'ways' → logprob: -4.57108736038208
    6. '       ' → logprob: -4.69608736038208
    7. 'total' → logprob: -4.82108736038208
    8. 'if' → logprob: -4.94608736038208
    9. ' result' → logprob: -4.94608736038208
    10. 'target' → logprob: -5.19608736038208

Token 133: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3688128590583801
    2. ' self' → logprob: -2.2438127994537354
    3. '(self' → logprob: -3.3688127994537354
    4. '(' → logprob: -3.6188127994537354
    5. ' (' → logprob: -3.6188127994537354
    6. 'the' → logprob: -3.9938127994537354
    7. 'a' → logprob: -4.1188130378723145
    8. 'two' → logprob: -4.1188130378723145
    9. ' the' → logprob: -4.2438130378723145
    10. ' a' → logprob: -4.3688130378723145

Token 134: ' sliding' (ID: 53853)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.44775670766830444
    2. ' count' → logprob: -2.072756767272949
    3. '       ' → logprob: -2.947756767272949
    4. 'n' → logprob: -2.947756767272949
    5. ' result' → logprob: -3.322756767272949
    6. 'result' → logprob: -3.447756767272949
    7. '   ' → logprob: -4.572756767272949
    8. 'def' → logprob: -4.697756767272949
    9. ' for' → logprob: -4.947756767272949
    10. 'for' → logprob: -5.197756767272949

Token 135: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.029888873919844627
    2. ' window' → logprob: -3.529888868331909
    3. '_window' → logprob: -9.779889106750488
    4. '-window' → logprob: -10.654889106750488
    5. '   ' → logprob: -10.904889106750488
    6. 'win' → logprob: -11.279889106750488
    7. '
' → logprob: -11.779889106750488
    8. ' ' → logprob: -12.029889106750488
    9. 'sum' → logprob: -12.404889106750488
    10. 'windows' → logprob: -13.029889106750488

Token 136: ' approach' (ID: 7139)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' abstract' (ID: 13004)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8220425844192505
    2. '<|end|>' → logprob: -1.0720425844192505
    3. '       ' → logprob: -2.072042465209961
    4. '<|end|>' → logprob: -3.572042465209961
    5. '
' → logprob: -4.322042465209961
    6. '        ' → logprob: -4.447042465209961
    7. ',' → logprob: -4.947042465209961
    8. '        
' → logprob: -4.947042465209961
    9. 'n' → logprob: -5.322042465209961
    10. '    
' → logprob: -5.822042465209961

Token 138: 'ed' (ID: 295)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.018126297742128372
    2. 'ed' → logprob: -4.518126487731934
    3. '<|end|>' → logprob: -6.518126487731934
    4. '       ' → logprob: -6.768126487731934
    5. ' ion' → logprob: -7.143126487731934
    6. 'ions' → logprob: -7.393126487731934
    7. ':' → logprob: -7.518126487731934
    8. 'ation' → logprob: -8.018126487731934
    9. '   ' → logprob: -8.143126487731934
    10. ' ' → logprob: -8.393126487731934

Token 139: ' as' (ID: 472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5741997361183167
    2. '       ' → logprob: -2.199199676513672
    3. '<|end|>' → logprob: -2.449199676513672
    4. ' to' → logprob: -2.699199676513672
    5. 'for' → logprob: -3.949199676513672
    6. '           ' → logprob: -3.949199676513672
    7. 'def' → logprob: -4.449199676513672
    8. ' by' → logprob: -4.449199676513672
    9. 'from' → logprob: -4.449199676513672
    10. '<|end|>' → logprob: -4.699199676513672

Token 140: ' iterator' (ID: 30787)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8655133843421936
    2. 'def' → logprob: -1.8655133247375488
    3. 'n' → logprob: -2.740513324737549
    4. ' a' → logprob: -2.865513324737549
    5. '0' → logprob: -2.865513324737549
    6. 'f' → logprob: -2.990513324737549
    7. 'sum' → logprob: -3.240513324737549
    8. 'two' → logprob: -3.865513324737549
    9. 'start' → logprob: -4.490513324737549
    10. 'count' → logprob: -4.490513324737549

Token 141: ' over' (ID: 1072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.53761225938797
    2. '       ' → logprob: -1.4126121997833252
    3. '()' → logprob: -2.662612199783325
    4. 'def' → logprob: -3.037612199783325
    5. ':' → logprob: -4.412612438201904
    6. ',' → logprob: -5.162612438201904
    7. '<|end|>' → logprob: -5.287612438201904
    8. '   ' → logprob: -5.537612438201904
    9. '()
' → logprob: -5.662612438201904
    10. '               ' → logprob: -5.787612438201904

Token 142: ' ranges' (ID: 33269)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0574474073946476
    2. 'con' → logprob: -4.55744743347168
    3. ' range' → logprob: -4.55744743347168
    4. 'possible' → logprob: -4.55744743347168
    5. 'self' → logprob: -4.93244743347168
    6. 'the' → logprob: -5.30744743347168
    7. ' consecutive' → logprob: -6.18244743347168
    8. 'numbers' → logprob: -6.30744743347168
    9. 'inte' → logprob: -6.55744743347168
    10. '1' → logprob: -7.18244743347168

Token 143: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.488485723733902
    2. '(' → logprob: -2.363485813140869
    3. '        ' → logprob: -2.488485813140869
    4. '           ' → logprob: -2.863485813140869
    5. ' ' → logprob: -3.488485813140869
    6. '<|end|>' → logprob: -3.988485813140869
    7. '   ' → logprob: -4.113485813140869
    8. ':' → logprob: -4.238485813140869
    9. '    ' → logprob: -4.863485813140869
    10. '.' → logprob: -4.863485813140869

Token 144: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21462994813919067
    2. '           ' → logprob: -2.589629888534546
    3. '(' → logprob: -3.089629888534546
    4. ':' → logprob: -4.464630126953125
    5. '        ' → logprob: -4.589630126953125
    6. '<|end|>' → logprob: -4.714630126953125
    7. '        
' → logprob: -5.089630126953125
    8. ',' → logprob: -5.214630126953125
    9. '   ' → logprob: -5.339630126953125
    10. '(n' → logprob: -5.714630126953125

Token 145: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.23801052570343018
    2. '           ' → logprob: -2.6130104064941406
    3. ' count' → logprob: -3.1130104064941406
    4. 'result' → logprob: -3.3630104064941406
    5. 'total' → logprob: -4.363010406494141
    6. 'start' → logprob: -4.488010406494141
    7. 'n' → logprob: -4.738010406494141
    8. 'left' → logprob: -5.113010406494141
    9. 'ways' → logprob: -5.738010406494141
    10. ' result' → logprob: -5.863010406494141

Token 146: ' Instead' (ID: 21050)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4470472037792206
    2. ' count' → logprob: -1.697047233581543
    3. 'result' → logprob: -3.322047233581543
    4. '           ' → logprob: -3.447047233581543
    5. ' result' → logprob: -3.697047233581543
    6. ' ways' → logprob: -4.447047233581543
    7. 'total' → logprob: -4.572047233581543
    8. 'ways' → logprob: -4.697047233581543
    9. 'start' → logprob: -4.822047233581543
    10. 'left' → logprob: -4.947047233581543

Token 147: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4074329137802124
    2. '       ' → logprob: -1.9074329137802124
    3. 'of' → logprob: -2.532433032989502
    4. '           ' → logprob: -3.532433032989502
    5. '        ' → logprob: -3.782433032989502
    6. '    ' → logprob: -5.157433032989502
    7. '   ' → logprob: -5.282433032989502
    8. 'self' → logprob: -5.407433032989502
    9. ' to' → logprob: -5.407433032989502
    10. '=' → logprob: -5.532433032989502

Token 148: ' direct' (ID: 2823)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5705481767654419
    2. 'range' → logprob: -1.695548176765442
    3. 'sum' → logprob: -2.4455480575561523
    4. 'def' → logprob: -3.3205480575561523
    5. ' for' → logprob: -3.9455480575561523
    6. 'a' → logprob: -3.9455480575561523
    7. 'using' → logprob: -4.445548057556152
    8. 'two' → logprob: -4.570548057556152
    9. ' using' → logprob: -4.695548057556152
    10. 'self' → logprob: -4.945548057556152

Token 149: ' math' (ID: 13324)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9586523175239563
    2. 'formula' → logprob: -2.3336522579193115
    3. ' for' → logprob: -2.5836522579193115
    4. ' formula' → logprob: -2.7086522579193115
    5. ' iteration' → logprob: -3.0836522579193115
    6. 'mat' → logprob: -3.3336522579193115
    7. 'iteration' → logprob: -3.5836522579193115
    8. ' summ' → logprob: -3.5836522579193115
    9. ' mathematical' → logprob: -3.7086522579193115
    10. ' calculation' → logprob: -4.083652496337891

Token 150: ' formula' (ID: 20690)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7087706327438354
    2. '
' → logprob: -1.3337706327438354
    3. '       ' → logprob: -2.083770751953125
    4. '<|end|>' → logprob: -3.208770751953125
    5. '        
' → logprob: -3.583770751953125
    6. ' 
' → logprob: -4.333770751953125
    7. '        ' → logprob: -4.583770751953125
    8. '            
' → logprob: -5.083770751953125
    9. '<|end|>' → logprob: -5.708770751953125
    10. 'n' → logprob: -5.958770751953125

Token 152: ' do' (ID: 621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7861437797546387
    2. ' start' → logprob: -1.7861437797546387
    3. ' result' → logprob: -1.9111437797546387
    4. ' count' → logprob: -2.9111437797546387
    5. 'start' → logprob: -3.0361437797546387
    6. 'result' → logprob: -3.1611437797546387
    7. 'count' → logprob: -3.9111437797546387
    8. ' ways' → logprob: -4.161143779754639
    9. ' i' → logprob: -4.786143779754639
    10. ' left' → logprob: -4.911143779754639

Token 153: ' step' (ID: 5983)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0179749727249146
    2. '           ' → logprob: -1.3929749727249146
    3. '   ' → logprob: -3.017974853515625
    4. 'ing' → logprob: -3.017974853515625
    5. 'sum' → logprob: -3.392974853515625
    6. ' sum' → logprob: -3.767974853515625
    7. '       ' → logprob: -3.767974853515625
    8. 's' → logprob: -3.892974853515625
    9. 'for' → logprob: -4.017974853515625
    10. ' for' → logprob: -4.017974853515625

Token 154: 'wise' (ID: 7480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1037906408309937
    2. ' by' → logprob: -1.8537906408309937
    3. '   ' → logprob: -1.8537906408309937
    4. '       ' → logprob: -2.603790760040283
    5. 'wise' → logprob: -2.603790760040283
    6. '    ' → logprob: -3.228790760040283
    7. '-by' → logprob: -3.353790760040283
    8. ' s' → logprob: -3.478790760040283
    9. '           ' → logprob: -3.728790760040283
    10. '        ' → logprob: -4.103790760040283

Token 155: ' enumeration' (ID: 120596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.608645498752594
    2. ':' → logprob: -2.358645439147949
    3. ' for' → logprob: -2.483645439147949
    4. 'for' → logprob: -2.983645439147949
    5. 's' → logprob: -3.108645439147949
    6. '   ' → logprob: -3.233645439147949
    7. 'count' → logprob: -3.858645439147949
    8. '           ' → logprob: -3.983645439147949
    9. '_' → logprob: -4.608645439147949
    10. '    ' → logprob: -4.733645439147949

Token 156: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0955675840377808
    2. '           ' → logprob: -1.0955675840377808
    3. '<|end|>' → logprob: -2.0955677032470703
    4. '
' → logprob: -2.2205677032470703
    5. '<|end|>' → logprob: -3.4705677032470703
    6. '        ' → logprob: -4.34556770324707
    7. ',' → logprob: -4.47056770324707
    8. '   ' → logprob: -4.84556770324707
    9. '        
' → logprob: -5.22056770324707
    10. '    
' → logprob: -5.72056770324707

Token 157: ' extens' (ID: 34241)
  Prédit: ' clarity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clarity' → logprob: -0.7339538931846619
    2. ' self' → logprob: -1.3589539527893066
    3. 'self' → logprob: -2.4839539527893066
    4. 'i' → logprob: -3.3589539527893066
    5. ' i' → logprob: -3.4839539527893066
    6. 'count' → logprob: -4.483953952789307
    7. ' k' → logprob: -4.733953952789307
    8. 'n' → logprob: -4.858953952789307
    9. 'k' → logprob: -5.233953952789307
    10. ' better' → logprob: -5.358953952789307

Token 158: 'ibility' (ID: 4295)
  Prédit: 'eded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eded' → logprob: -0.5104485154151917
    2. 'e' → logprob: -1.3854484558105469
    3. 'ed' → logprob: -2.135448455810547
    4. '       ' → logprob: -4.760448455810547
    5. 'def' → logprob: -5.260448455810547
    6. 'ended' → logprob: -5.510448455810547
    7. 'ede' → logprob: -6.010448455810547
    8. '           ' → logprob: -6.260448455810547
    9. 'ount' → logprob: -6.385448455810547
    10. 'end' → logprob: -6.510448455810547

Token 159: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1080157458782196
    2. '<|end|>' → logprob: -3.108015775680542
    3. '       ' → logprob: -3.608015775680542
    4. '
' → logprob: -4.358015537261963
    5. '<|end|>' → logprob: -5.858015537261963
    6. '        ' → logprob: -5.858015537261963
    7. 'n' → logprob: -6.233015537261963
    8. ',' → logprob: -6.483015537261963
    9. '            ' → logprob: -6.858015537261963
    10. '            
' → logprob: -6.858015537261963

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6391271352767944
    2. '
' → logprob: -1.0141271352767944
    3. '       ' → logprob: -2.639127254486084
    4. '        
' → logprob: -4.264127254486084
    5. '    
' → logprob: -5.264127254486084
    6. ' 
' → logprob: -5.389127254486084
    7. '        ' → logprob: -6.014127254486084
    8. '\n' → logprob: -6.139127254486084
    9. '            
' → logprob: -6.139127254486084
    10. 'n' → logprob: -6.389127254486084

Token 161: ' sequences' (ID: 45665)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.717201292514801
    2. 'start' → logprob: -1.4672012329101562
    3. 'count' → logprob: -1.9672012329101562
    4. 'left' → logprob: -3.2172012329101562
    5. 'result' → logprob: -3.7172012329101562
    6. ' count' → logprob: -4.092201232910156
    7. ' start' → logprob: -4.342201232910156
    8. 'total' → logprob: -4.592201232910156
    9. ' left' → logprob: -5.342201232910156
    10. '       ' → logprob: -5.342201232910156

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02095792256295681
    2. '=' → logprob: -4.145957946777344
    3. '_count' → logprob: -5.895957946777344
    4. '_' → logprob: -6.645957946777344
    5. 's' → logprob: -8.520957946777344
    6. '_found' → logprob: -9.020957946777344
    7. '_length' → logprob: -9.020957946777344
    8. '_sum' → logprob: -9.395957946777344
    9. '_counts' → logprob: -9.645957946777344
    10. '_lengths' → logprob: -9.770957946777344

Token 163: ' Sum' (ID: 34138)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.21132081747055054
    2. '0' → logprob: -1.8363208770751953
    3. ' ' → logprob: -4.086320877075195
    4. ' []' → logprob: -4.336320877075195
    5. '[]
' → logprob: -6.961320877075195
    6. '1' → logprob: -9.711320877075195
    7. '[(' → logprob: -10.086320877075195
    8. '   ' → logprob: -10.836320877075195
    9. 'iter' → logprob: -10.836320877075195
    10. '[' → logprob: -10.961320877075195

Token 164: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -4.246537173457909e-06
    2. 'of' → logprob: -12.500003814697266
    3. '_of' → logprob: -15.500003814697266
    4. ' Of' → logprob: -15.625003814697266
    5. '[' → logprob: -17.500003814697266
    6. 'O' → logprob: -17.750003814697266
    7. '           ' → logprob: -17.875003814697266
    8. '(Of' → logprob: -18.000003814697266
    9. 'range' → logprob: -18.250003814697266
    10. '       ' → logprob: -18.250003814697266

Token 165: 'Con' (ID: 909)
  Prédit: 'Con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Con' → logprob: -3.4121114822482923e-06
    2. 'con' → logprob: -13.250003814697266
    3. '_con' → logprob: -13.375003814697266
    4. ' Con' → logprob: -17.125003814697266
    5. ' consecutive' → logprob: -18.000003814697266
    6. 'C' → logprob: -18.625003814697266
    7. 'Continuous' → logprob: -18.625003814697266
    8. ')' → logprob: -18.875003814697266
    9. '$con' → logprob: -19.250003814697266
    10. '```' → logprob: -19.250003814697266

Token 166: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.0001305950863752514
    2. 'ecut' → logprob: -9.875130653381348
    3. 'cut' → logprob: -10.500130653381348
    4. 'sect' → logprob: -10.750130653381348
    5. 'se' → logprob: -11.375130653381348
    6. 's' → logprob: -12.000130653381348
    7. 't' → logprob: -12.250130653381348
    8. 'sec' → logprob: -13.000130653381348
    9. 'es' → logprob: -14.000130653381348
    10. 'ec' → logprob: -14.250130653381348

Token 167: 'Inte' (ID: 113498)
  Prédit: 'Inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Inte' → logprob: -3.4881879400927573e-05
    2. 'inte' → logprob: -10.625035285949707
    3. 'Ints' → logprob: -12.875035285949707
    4. '
' → logprob: -13.375035285949707
    5. '   ' → logprob: -13.375035285949707
    6. '       ' → logprob: -14.000035285949707
    7. 'Integer' → logprob: -14.250035285949707
    8. '           ' → logprob: -14.375035285949707
    9. ' integers' → logprob: -14.375035285949707
    10. 'Sum' → logprob: -14.875035285949707

Token 168: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -9.507972572464496e-05
    2. 'g' → logprob: -10.00009536743164
    3. 'te' → logprob: -10.87509536743164
    4. 't' → logprob: -11.25009536743164
    5. 'ters' → logprob: -11.75009536743164
    6. 'ers' → logprob: -12.87509536743164
    7. 'ger' → logprob: -13.50009536743164
    8. 'ng' → logprob: -13.87509536743164
    9. 'nts' → logprob: -14.37509536743164
    10. '   ' → logprob: -14.50009536743164

Token 169: '.Sequence' (ID: 132514)
  Prédit: '.Con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.Con' → logprob: -0.10262969881296158
    2. '.Input' → logprob: -2.7276296615600586
    3. '.' → logprob: -3.6026296615600586
    4. 'Con' → logprob: -6.227629661560059
    5. 'Input' → logprob: -7.477629661560059
    6. '.Counter' → logprob: -7.477629661560059
    7. '   ' → logprob: -7.852629661560059
    8. '       ' → logprob: -8.102629661560059
    9. '.Count' → logprob: -8.852629661560059
    10. '
' → logprob: -8.852629661560059

Token 170: 'Generator' (ID: 14802)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.3707609176635742
    2. 'Generator' → logprob: -1.9957609176635742
    3. 's' → logprob: -2.870760917663574
    4. 'Enumerator' → logprob: -3.245760917663574
    5. 'Finder' → logprob: -3.495760917663574
    6. '.Iterator' → logprob: -3.995760917663574
    7. 'Of' → logprob: -4.870760917663574
    8. 'Counter' → logprob: -5.120760917663574
    9. '.iterator' → logprob: -6.370760917663574
    10. '._' → logprob: -6.620760917663574

Token 171: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0505499541759491
    2. '(n' → logprob: -3.1755499839782715
    3. '()' → logprob: -6.0505499839782715
    4. '.range' → logprob: -6.8005499839782715
    5. '()(' → logprob: -6.9255499839782715
    6. '().' → logprob: -7.0505499839782715
    7. '.generate' → logprob: -8.300549507141113
    8. '()
' → logprob: -8.425549507141113
    9. '.' → logprob: -8.550549507141113
    10. '(' → logprob: -8.675549507141113

Token 172: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0013432084815576673
    2. '.' → logprob: -7.751343250274658
    3. 'n' → logprob: -8.3763427734375
    4. 'self' → logprob: -8.5013427734375
    5. ').' → logprob: -8.6263427734375
    6. ',n' → logprob: -9.6263427734375
    7. ' .' → logprob: -10.0013427734375
    8. '           ' → logprob: -10.1263427734375
    9. ',' → logprob: -10.7513427734375
    10. '       ' → logprob: -10.8763427734375

Token 173: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1507105976343155
    2. ')' → logprob: -2.0257105827331543
    3. ').' → logprob: -5.025710582733154
    4. ')
' → logprob: -7.525710582733154
    5. '           ' → logprob: -8.150711059570312
    6. '       ' → logprob: -8.150711059570312
    7. ' )
' → logprob: -8.775711059570312
    8. ')

' → logprob: -9.650711059570312
    9. '   ' → logprob: -10.775711059570312
    10. '               ' → logprob: -10.775711059570312

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025204135105013847
    2. '       ' → logprob: -4.650204181671143
    3. '.next' → logprob: -5.025204181671143
    4. '.' → logprob: -5.775204181671143
    5. '.generate' → logprob: -7.025204181671143
    6. '.count' → logprob: -7.400204181671143
    7. 'return' → logprob: -7.900204181671143
    8. 'for' → logprob: -8.025203704833984
    9. '<|end|>' → logprob: -8.025203704833984
    10. '.iterator' → logprob: -8.025203704833984

Token 175: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9609838128089905
    2. 'count' → logprob: -0.9609838128089905
    3. 'return' (adapté à ' return') → logprob: -1.5859837532043457
    4. ' return' → logprob: -4.710983753204346
    5. ' count' → logprob: -4.710983753204346
    6. 'result' → logprob: -5.460983753204346
    7. 'counter' → logprob: -6.085983753204346
    8. '       ' → logprob: -6.210983753204346
    9. 'for' → logprob: -7.335983753204346
    10. 'total' → logprob: -7.710983753204346

Token 176: ' sequences' (ID: 45665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.15331460535526276
    2. 'sum' → logprob: -2.6533145904541016
    3. ' sequences' → logprob: -2.7783145904541016
    4. 'len' → logprob: -5.028314590454102
    5. ' sum' → logprob: -6.278314590454102
    6. 'list' → logprob: -7.403314590454102
    7. 'next' → logprob: -8.153314590454102
    8. ' len' → logprob: -9.028314590454102
    9. ' next' → logprob: -10.528314590454102
    10. ' list' → logprob: -10.653314590454102

Token 177: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.532152533531189
    2. '.' → logprob: -0.907152533531189
    3. '().' → logprob: -6.1571526527404785
    4. '.generate' → logprob: -6.2821526527404785
    5. '.get' → logprob: -6.4071526527404785
    6. '<|end|>' → logprob: -6.6571526527404785
    7. '.next' → logprob: -6.9071526527404785
    8. '.Count' → logprob: -9.03215217590332
    9. ' .' → logprob: -9.15715217590332
    10. ')' → logprob: -9.40715217590332

Token 178: '_sequences' (ID: 153014)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05600163713097572
    2. '()' → logprob: -2.931001663208008
    3. 's' → logprob: -8.181001663208008
    4. '_sequences' → logprob: -8.181001663208008
    5. '_s' → logprob: -9.056001663208008
    6. '_count' → logprob: -9.181001663208008
    7. '_of' → logprob: -9.681001663208008
    8. '_sum' → logprob: -10.181001663208008
    9. ' _' → logprob: -10.556001663208008
    10. '_values' → logprob: -10.806001663208008

Token 179: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03437621146440506
    2. '().' → logprob: -3.4093761444091797
    3. '.' → logprob: -7.90937614440918
    4. '(' → logprob: -8.53437614440918
    5. ' ()' → logprob: -10.03437614440918
    6. '.count' → logprob: -10.65937614440918
    7. '()
' → logprob: -10.78437614440918
    8. '().__' → logprob: -11.15937614440918
    9. '()(' → logprob: -11.53437614440918
    10. '_' → logprob: -11.90937614440918

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26861709356307983
    2. '
' → logprob: -2.1436171531677246
    3. 'class' → logprob: -2.6436171531677246
    4. '<|end|>' → logprob: -3.1436171531677246
    5. '    
' → logprob: -6.768617153167725
    6. ' class' → logprob: -6.893617153167725
    7. ' 
' → logprob: -7.893617153167725
    8. '  
' → logprob: -7.893617153167725
    9. ' ' → logprob: -8.268616676330566
    10. '<|end|>' → logprob: -8.768616676330566

Token 181: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' (adapté à ' class') → logprob: -0.010326715186238289
    2. '   ' → logprob: -4.635326862335205
    3. ' class' → logprob: -7.635326862335205
    4. '
' → logprob: -9.510326385498047
    5. '    
' → logprob: -11.635326385498047
    6. '	class' → logprob: -13.510326385498047
    7. ' ' → logprob: -13.760326385498047
    8. 'classmethod' → logprob: -14.385326385498047
    9. '"class' → logprob: -14.760326385498047
    10. '  ' → logprob: -14.885326385498047

Token 182: ' Sequence' (ID: 57144)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.5231348872184753
    2. ' Sequence' → logprob: -0.8981348872184753
    3. ' ' → logprob: -12.2731351852417
    4. '_sequence' → logprob: -13.1481351852417
    5. '.Sequence' → logprob: -14.3981351852417
    6. 'sequence' → logprob: -14.6481351852417
    7. 'Sequ' → logprob: -14.6481351852417
    8. ' sequence' → logprob: -14.7731351852417
    9. 'Sum' → logprob: -14.8981351852417
    10. '_' → logprob: -15.2106351852417

Token 183: 'Generator' (ID: 14802)
  Prédit: 'Generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Generator' → logprob: -1.1472419600977446e-06
    2. '_generator' → logprob: -14.000000953674316
    3. ' Generator' → logprob: -16.625001907348633
    4. 'Gen' → logprob: -17.000001907348633
    5. 'generator' → logprob: -17.000001907348633
    6. 'Generators' → logprob: -18.125001907348633
    7. 'enerator' → logprob: -18.875001907348633
    8. '_GENER' → logprob: -19.125001907348633
    9. 'Iterator' → logprob: -19.625001907348633
    10. 'Enumerator' → logprob: -19.875001907348633

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004220028407871723
    2. ':
' → logprob: -5.504220008850098
    3. '(S' → logprob: -9.379220008850098
    4. '(' → logprob: -10.504220008850098
    5. '(object' → logprob: -11.129220008850098
    6. ' :' → logprob: -12.254220008850098
    7. '):' → logprob: -12.504220008850098
    8. '   ' → logprob: -13.254220008850098
    9. ':

' → logprob: -13.504220008850098
    10. ':def' → logprob: -14.504220008850098

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018378552049398422
    2. '   ' → logprob: -4.268378734588623
    3. 'def' → logprob: -5.643378734588623
    4. ' def' → logprob: -7.518378734588623
    5. '     ' → logprob: -10.018378257751465
    6. '      ' → logprob: -11.018378257751465
    7. ' ' → logprob: -11.268378257751465
    8. ':
' → logprob: -11.643378257751465
    9. '    
' → logprob: -11.768378257751465
    10. '    ' → logprob: -12.143378257751465

Token 186: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.019407596439123154
    2. ' def' → logprob: -4.019407749176025
    3. '   ' → logprob: -6.769407749176025
    4. '       ' → logprob: -9.144407272338867
    5. ' ' → logprob: -13.894407272338867
    6. '	def' → logprob: -14.394407272338867
    7. '           ' → logprob: -16.269407272338867
    8. '  ' → logprob: -16.644407272338867
    9. '
' → logprob: -17.144407272338867
    10. '    ' → logprob: -17.519407272338867

Token 187: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023353558033704758
    2. ' __' → logprob: -3.7733535766601562
    3. 'def' → logprob: -9.523353576660156
    4. 'init' → logprob: -10.898353576660156
    5. ' def' → logprob: -11.273353576660156
    6. '_init' → logprob: -13.273353576660156
    7. '```' → logprob: -13.773353576660156
    8. '__(' → logprob: -15.648353576660156
    9. '___' → logprob: -15.773353576660156
    10. 'count' → logprob: -15.773353576660156

Token 188: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4617256056226324e-05
    2. 'iter' → logprob: -12.000014305114746
    3. 'it' → logprob: -13.000014305114746
    4. 'class' → logprob: -13.875014305114746
    5. '__' → logprob: -14.125014305114746
    6. '_init' → logprob: -14.125014305114746
    7. 'int' → logprob: -14.125014305114746
    8. 'new' → logprob: -14.375014305114746
    9. 'def' → logprob: -14.375014305114746
    10. '(init' → logprob: -14.750014305114746

Token 189: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006679982761852443
    2. ' (' → logprob: -8.000667572021484
    3. '__(' → logprob: -8.125667572021484
    4. '(' → logprob: -10.750667572021484
    5. '(s' → logprob: -11.375667572021484
    6. ')(' → logprob: -14.000667572021484
    7. 'self' → logprob: -14.250667572021484
    8. '_(' → logprob: -14.500667572021484
    9. ' ' → logprob: -14.625667572021484
    10. '   ' → logprob: -15.250667572021484

Token 190: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.746380237629637e-05
    2. ' self' → logprob: -9.250097274780273
    3. '       ' → logprob: -14.125097274780273
    4. ',' → logprob: -14.875097274780273
    5. '(self' → logprob: -15.875097274780273
    6. '   ' → logprob: -17.625097274780273
    7. '
' → logprob: -17.750097274780273
    8. '           ' → logprob: -18.250097274780273
    9. ')' → logprob: -18.750097274780273
    10. ',self' → logprob: -19.375097274780273

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02403368428349495
    2. 'self' → logprob: -3.774033784866333
    3. '(self' → logprob: -7.274033546447754
    4. ',self' → logprob: -9.899033546447754
    5. ' self' → logprob: -10.649033546447754
    6. ' ,' → logprob: -11.149033546447754
    7. ' (' → logprob: -12.524033546447754
    8. ',
' → logprob: -14.024033546447754
    9. ')' → logprob: -14.649033546447754
    10. '       ' → logprob: -14.774033546447754

Token 192: ' target' (ID: 3783)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8549230098724365
    2. ' n' → logprob: -0.9799230098724365
    3. 'self' → logprob: -2.2299230098724365
    4. ' self' → logprob: -2.4799230098724365
    5. ' target' → logprob: -5.604923248291016
    6. 'target' → logprob: -5.979923248291016
    7. ' value' → logprob: -8.229923248291016
    8. 'number' → logprob: -8.479923248291016
    9. ' number' → logprob: -8.604923248291016
    10. 'start' → logprob: -8.729923248291016

Token 193: '_sum' (ID: 29859)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07401970773935318
    2. '):
' → logprob: -2.69901967048645
    3. ',' → logprob: -6.449019908905029
    4. ' ):' → logprob: -6.699019908905029
    5. ':' → logprob: -7.074019908905029
    6. 'n' → logprob: -8.949019432067871
    7. '   ' → logprob: -9.324019432067871
    8. '_n' → logprob: -10.199019432067871
    9. '_' → logprob: -10.699019432067871
    10. '):
' → logprob: -10.824019432067871

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12004729360342026
    2. ',' → logprob: -2.3700473308563232
    3. '):
' → logprob: -3.9950473308563232
    4. ':' → logprob: -7.120047092437744
    5. ' ):' → logprob: -8.370047569274902
    6. ' ,' → logprob: -9.870047569274902
    7. '):
' → logprob: -10.120047569274902
    8. ',n' → logprob: -10.495047569274902
    9. '       ' → logprob: -11.120047569274902
    10. '   ' → logprob: -11.120047569274902

Token 195: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22918984293937683
    2. '       ' → logprob: -1.6041898727416992
    3. 'self' → logprob: -5.854189872741699
    4. ' self' → logprob: -7.729189872741699
    5. ',' → logprob: -9.2291898727417
    6. '   ' → logprob: -9.4791898727417
    7. '               ' → logprob: -9.7291898727417
    8. '(self' → logprob: -9.9791898727417
    9. '          ' → logprob: -10.1041898727417
    10. '	       ' → logprob: -10.4791898727417

Token 196: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004172183573246002
    2. ' self' → logprob: -5.504172325134277
    3. '           ' → logprob: -9.379172325134277
    4. '       ' → logprob: -11.754172325134277
    5. '   ' → logprob: -14.129172325134277
    6. '	self' → logprob: -14.879172325134277
    7. '               ' → logprob: -15.754172325134277
    8. ' ' → logprob: -16.00417137145996
    9. '(self' → logprob: -16.62917137145996
    10. '﻿' → logprob: -17.00417137145996

Token 197: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.07055982947349548
    2. '.' → logprob: -3.4455597400665283
    3. ' .' → logprob: -3.4455597400665283
    4. 'target' → logprob: -5.820559978485107
    5. ' =' → logprob: -7.570559978485107
    6. ' target' → logprob: -7.820559978485107
    7. '=' → logprob: -8.19555950164795
    8. '.n' → logprob: -9.44555950164795
    9. '_target' → logprob: -9.82055950164795
    10. '._' → logprob: -10.82055950164795

Token 198: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.45848218582978e-06
    2. '=_' → logprob: -13.62500286102295
    3. '_s' → logprob: -14.50000286102295
    4. 'sum' → logprob: -15.37500286102295
    5. '_' → logprob: -16.000001907348633
    6. ')_' → logprob: -16.250001907348633
    7. '=' → logprob: -17.250001907348633
    8. '_SUM' → logprob: -17.250001907348633
    9. '="_' → logprob: -17.375001907348633
    10. ' _' → logprob: -17.500001907348633

Token 199: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.20141470432281494
    2. 'target' → logprob: -1.701414704322815
    3. '(target' → logprob: -13.826415061950684
    4. '	target' → logprob: -15.951415061950684
    5. '[target' → logprob: -15.951415061950684
    6. ' ' → logprob: -17.701414108276367
    7. ' ' → logprob: -17.826414108276367
    8. 't' → logprob: -18.076414108276367
    9. ',target' → logprob: -18.201414108276367
    10. '_target' → logprob: -18.201414108276367

Token 200: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3445570766925812
    2. '<|end|>' → logprob: -1.4695570468902588
    3. '       ' → logprob: -4.469557285308838
    4. '
' → logprob: -4.594557285308838
    5. '_' → logprob: -5.344557285308838
    6. '_tokens' → logprob: -5.469557285308838
    7. 'sum' → logprob: -5.469557285308838
    8. '           ' → logprob: -5.719557285308838
    9. ',' → logprob: -5.969557285308838
    10. ' ' → logprob: -6.094557285308838

Token 201: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09060017764568329
    2. 'def' → logprob: -3.0906002521514893
    3. '           ' → logprob: -4.34060001373291
    4. '
' → logprob: -4.34060001373291
    5. '   ' → logprob: -4.59060001373291
    6. '        
' → logprob: -5.84060001373291
    7. '    
' → logprob: -6.59060001373291
    8. 'self' → logprob: -7.96560001373291
    9. ' def' → logprob: -8.59060001373291
    10. '            
' → logprob: -10.59060001373291

Token 203: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.404745439183898e-05
    2. ' def' → logprob: -11.25003433227539
    3. '   ' → logprob: -11.50003433227539
    4. '       ' → logprob: -11.50003433227539
    5. '
' → logprob: -14.50003433227539
    6. 'self' → logprob: -16.25003433227539
    7. 'from' → logprob: -16.87503433227539
    8. '	def' → logprob: -17.00003433227539
    9. 'import' → logprob: -17.87503433227539
    10. '        
' → logprob: -18.25003433227539

Token 204: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.003654241096228361
    2. ' count' → logprob: -5.6286540031433105
    3. '__' → logprob: -10.503654479980469
    4. 'generate' → logprob: -10.628654479980469
    5. '_count' → logprob: -13.753654479980469
    6. ' generate' → logprob: -14.503654479980469
    7. ' __' → logprob: -15.128654479980469
    8. 'find' → logprob: -15.253654479980469
    9. ' sequences' → logprob: -16.37865447998047
    10. '	count' → logprob: -16.75365447998047

Token 205: '_sequences' (ID: 153014)
  Prédit: '_sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -0.000919796759262681
    2. '_' → logprob: -7.000919818878174
    3. '_s' → logprob: -12.000919342041016
    4. '_ranges' → logprob: -13.875919342041016
    5. '_patterns' → logprob: -16.125919342041016
    6. '_strings' → logprob: -16.250919342041016
    7. '_se' → logprob: -16.375919342041016
    8. ' _' → logprob: -16.750919342041016
    9. '_segments' → logprob: -16.875919342041016
    10. '_steps' → logprob: -16.875919342041016

Token 206: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019336353288963437
    2. '(' → logprob: -6.251933574676514
    3. '(s' → logprob: -13.251934051513672
    4. ' (' → logprob: -13.501934051513672
    5. 'self' → logprob: -14.001934051513672
    6. '   ' → logprob: -14.751934051513672
    7. '       ' → logprob: -15.376934051513672
    8. '(Self' → logprob: -15.626934051513672
    9. '(
' → logprob: -16.251934051513672
    10. '(sel' → logprob: -17.001934051513672

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010587312281131744
    2. '):
' → logprob: -4.635587215423584
    3. ' ):' → logprob: -7.260587215423584
    4. 'self' → logprob: -9.885587692260742
    5. '():' → logprob: -10.010587692260742
    6. ')' → logprob: -12.010587692260742
    7. '(self' → logprob: -12.260587692260742
    8. '       ' → logprob: -12.385587692260742
    9. '():
' → logprob: -12.510587692260742
    10. '   ' → logprob: -12.885587692260742

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021772195759695023
    2. 'n' → logprob: -9.50021743774414
    3. '       ' → logprob: -9.75021743774414
    4. ',' → logprob: -10.50021743774414
    5. 'count' → logprob: -10.62521743774414
    6. 'total' → logprob: -11.75021743774414
    7. '```' → logprob: -12.00021743774414
    8. ' total' → logprob: -12.75021743774414
    9. ' count' → logprob: -13.12521743774414
    10. '	       ' → logprob: -13.12521743774414

Token 209: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0035922329407185316
    2. 'total' → logprob: -6.128592014312744
    3. 'start' → logprob: -7.253592014312744
    4. '           ' → logprob: -7.628592014312744
    5. ' count' → logprob: -9.253592491149902
    6. 'left' → logprob: -9.753592491149902
    7. 'result' → logprob: -10.378592491149902
    8. 'n' → logprob: -11.503592491149902
    9. 'cnt' → logprob: -12.003592491149902
    10. 'ans' → logprob: -13.003592491149902

Token 210: ' We' (ID: 1416)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0855315700173378
    2. 'start' → logprob: -3.08553147315979
    3. 'total' → logprob: -4.335531711578369
    4. 'left' → logprob: -4.460531711578369
    5. ' count' → logprob: -5.085531711578369
    6. 'result' → logprob: -6.460531711578369
    7. '       ' → logprob: -7.085531711578369
    8. '   ' → logprob: -7.210531711578369
    9. ' start' → logprob: -7.960531711578369
    10. '           ' → logprob: -8.585531234741211

Token 211: ' consider' (ID: 3331)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.777137041091919
    2. '       ' → logprob: -1.777137041091919
    3. ' start' → logprob: -1.777137041091919
    4. ' n' → logprob: -3.152137041091919
    5. ' left' → logprob: -3.652137041091919
    6. '   ' → logprob: -3.902137041091919
    7. ' can' → logprob: -4.15213680267334
    8. 'def' → logprob: -4.52713680267334
    9. ' ' → logprob: -4.65213680267334
    10. ' =' → logprob: -4.90213680267334

Token 212: ' sequences' (ID: 45665)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4021170735359192
    2. 'count' → logprob: -1.4021170139312744
    3. 'n' → logprob: -3.4021170139312744
    4. 'left' → logprob: -4.6521172523498535
    5. 'total' → logprob: -4.7771172523498535
    6. ' start' → logprob: -4.9021172523498535
    7. 'length' → logprob: -5.1521172523498535
    8. 'sum' → logprob: -5.5271172523498535
    9. '   ' → logprob: -5.7771172523498535
    10. 'current' → logprob: -6.0271172523498535

Token 213: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2657943069934845
    2. ' of' → logprob: -2.765794277191162
    3. ' that' → logprob: -2.765794277191162
    4. ' starting' → logprob: -4.015794277191162
    5. ' =' → logprob: -4.140794277191162
    6. ' with' → logprob: -4.515794277191162
    7. '=' → logprob: -4.765794277191162
    8. 'start' → logprob: -4.890794277191162
    9. 'that' → logprob: -5.015794277191162
    10. 'length' → logprob: -5.140794277191162

Token 214: ' at' (ID: 540)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.35047271847724915
    2. 'length' → logprob: -1.4754726886749268
    3. 'at' → logprob: -3.7254726886749268
    4. ' consecutive' → logprob: -4.100472927093506
    5. ' at' → logprob: -4.725472927093506
    6. 'positive' → logprob: -4.725472927093506
    7. ' length' → logprob: -5.350472927093506
    8. 'one' → logprob: -5.975472927093506
    9. ' positive' → logprob: -7.850472927093506
    10. 'different' → logprob: -8.725472450256348

Token 215: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.003258876968175173
    2. 'east' → logprob: -6.50325870513916
    3. 'length' → logprob: -7.37825870513916
    4. ' least' → logprob: -7.62825870513916
    5. 'len' → logprob: -8.12825870513916
    6. 'lease' → logprob: -9.50325870513916
    7. 'lest' → logprob: -9.50325870513916
    8. 'le' → logprob: -10.12825870513916
    9. 'list' → logprob: -10.62825870513916
    10. 'l' → logprob: -11.12825870513916

Token 216: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10950414091348648
    2. 'two' → logprob: -2.484504222869873
    3. ' length' → logprob: -4.609504222869873
    4. '2' → logprob: -5.859504222869873
    5. 'one' → logprob: -5.859504222869873
    6. ' two' → logprob: -5.859504222869873
    7. '1' → logprob: -6.359504222869873
    8. ' one' → logprob: -9.734503746032715
    9. ' ' → logprob: -10.984503746032715
    10. 'size' → logprob: -11.734503746032715

Token 217: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24089151620864868
    2. '1' → logprob: -1.615891456604004
    3. ' ' → logprob: -4.240891456604004
    4. ' two' → logprob: -7.240891456604004
    5. 'two' → logprob: -8.990891456604004
    6. '   ' → logprob: -11.115891456604004
    7. '=' → logprob: -11.115891456604004
    8. ' at' → logprob: -11.240891456604004
    9. ' one' → logprob: -11.365891456604004
    10. '>' → logprob: -11.365891456604004

Token 218: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011173609644174576
    2. '2' → logprob: -4.511173725128174
    3. ' ' → logprob: -9.011173248291016
    4. 'two' → logprob: -13.511173248291016
    5. 'one' → logprob: -14.011173248291016
    6. '```' → logprob: -14.136173248291016
    7. ' two' → logprob: -15.636173248291016
    8. ' one' → logprob: -15.636173248291016
    9. '   ' → logprob: -16.136173248291016
    10. '>' → logprob: -16.261173248291016

Token 219: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022379718720912933
    2. '
' → logprob: -4.5223798751831055
    3. '       ' → logprob: -5.1473798751831055
    4. ',' → logprob: -5.5223798751831055
    5. '        
' → logprob: -8.397379875183105
    6. '            
' → logprob: -8.772379875183105
    7. '   ' → logprob: -9.022379875183105
    8. '    
' → logprob: -9.397379875183105
    9. ' for' → logprob: -9.397379875183105
    10. 'n' → logprob: -9.522379875183105

Token 220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004969154950231314
    2. '       ' → logprob: -5.379969120025635
    3. '
' → logprob: -8.879969596862793
    4. ',' → logprob: -9.379969596862793
    5. '   ' → logprob: -10.379969596862793
    6. '        
' → logprob: -11.004969596862793
    7. 'n' → logprob: -11.129969596862793
    8. '            
' → logprob: -11.504969596862793
    9. '    
' → logprob: -11.754969596862793
    10. '<|end|>' → logprob: -11.879969596862793

Token 221: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.04770112782716751
    2. '           ' → logprob: -3.672701120376587
    3. ' count' → logprob: -3.922701120376587
    4. 'total' → logprob: -7.547701358795166
    5. 'result' → logprob: -8.297700881958008
    6. 'n' → logprob: -8.547700881958008
    7. '   ' → logprob: -8.672700881958008
    8. 'start' → logprob: -9.297700881958008
    9. 'length' → logprob: -10.422700881958008
    10. 'left' → logprob: -10.797700881958008

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198079511523247
    2. '=' → logprob: -2.811980724334717
    3. '   ' → logprob: -12.436981201171875
    4. ' ' → logprob: -12.561981201171875
    5. ',' → logprob: -12.686981201171875
    6. '  ' → logprob: -13.436981201171875
    7. '    ' → logprob: -15.186981201171875
    8. ')' → logprob: -15.686981201171875
    9. '           ' → logprob: -15.811981201171875
    10. '       ' → logprob: -16.061981201171875

Token 223: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05488600209355354
    2. ' ' → logprob: -2.9298861026763916
    3. '1' → logprob: -14.304885864257812
    4. '       ' → logprob: -14.429885864257812
    5. '   ' → logprob: -14.492385864257812
    6. '           ' → logprob: -14.992385864257812
    7. '(' → logprob: -15.554885864257812
    8. '  ' → logprob: -15.617385864257812
    9. ' ' → logprob: -16.179885864257812
    10. '=' → logprob: -16.242385864257812

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.625011444091797
    3. '1' → logprob: -13.625011444091797
    4. 'self' → logprob: -14.625011444091797
    5. '2' → logprob: -16.062511444091797
    6. '(' → logprob: -16.375011444091797
    7. 'sum' → logprob: -16.625011444091797
    8. '```' → logprob: -17.062511444091797
    9. '   ' → logprob: -17.562511444091797
    10. 'n' → logprob: -17.562511444091797

Token 225: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032753876876085997
    2. '
' → logprob: -6.503275394439697
    3. ',' → logprob: -7.253275394439697
    4. 'n' → logprob: -7.628275394439697
    5. 'start' → logprob: -9.128274917602539
    6. '       ' → logprob: -9.378274917602539
    7. '   ' → logprob: -9.503274917602539
    8. ' n' → logprob: -9.753274917602539
    9. '            
' → logprob: -9.878274917602539
    10. ' start' → logprob: -10.003274917602539

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020918536465615034
    2. 'n' → logprob: -6.627091884613037
    3. '       ' → logprob: -7.627091884613037
    4. 'start' → logprob: -8.877091407775879
    5. 'i' → logprob: -10.127091407775879
    6. ',' → logprob: -11.002091407775879
    7. '   ' → logprob: -11.252091407775879
    8. 'for' → logprob: -11.377091407775879
    9. 'length' → logprob: -11.502091407775879
    10. ' for' → logprob: -11.502091407775879

Token 227: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0972382053732872
    2. 'for' → logprob: -2.847238302230835
    3. 'max' → logprob: -4.222238063812256
    4. 'n' → logprob: -5.097238063812256
    5. ' start' → logprob: -5.597238063812256
    6. 'length' → logprob: -5.722238063812256
    7. 'left' → logprob: -6.222238063812256
    8. 'i' → logprob: -6.472238063812256
    9. 'current' → logprob: -6.972238063812256
    10. ' for' → logprob: -7.722238063812256

Token 228: ' Use' (ID: 7649)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6410461068153381
    2. 'max' → logprob: -1.2660460472106934
    3. 'for' → logprob: -2.3910460472106934
    4. 'left' → logprob: -3.1410460472106934
    5. 'n' → logprob: -4.141046047210693
    6. ' max' → logprob: -5.141046047210693
    7. 'i' → logprob: -5.141046047210693
    8. ' start' → logprob: -5.266046047210693
    9. 'limit' → logprob: -5.266046047210693
    10. 'length' → logprob: -5.266046047210693

Token 229: ' two' (ID: 1920)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0258626751601696
    2. ' start' → logprob: -4.525862693786621
    3. 'left' → logprob: -4.775862693786621
    4. 'n' → logprob: -6.275862693786621
    5. 'for' → logprob: -6.275862693786621
    6. 'length' → logprob: -6.525862693786621
    7. ' left' → logprob: -8.275862693786621
    8. ' for' → logprob: -8.400862693786621
    9. 'max' → logprob: -8.650862693786621
    10. '   ' → logprob: -9.650862693786621

Token 230: ' pointers' (ID: 58762)
  Prédit: ' pointers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pointers' → logprob: -0.04136880487203598
    2. 'p' → logprob: -4.0413689613342285
    3. 'pointer' → logprob: -4.1663689613342285
    4. '-pointer' → logprob: -5.9163689613342285
    5. '   ' → logprob: -6.5413689613342285
    6. '           ' → logprob: -7.2913689613342285
    7. 'ptr' → logprob: -7.2913689613342285
    8. '       ' → logprob: -7.6663689613342285
    9. 'sum' → logprob: -8.04136848449707
    10. '    ' → logprob: -9.16636848449707

Token 231: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7848979234695435
    2. 'left' → logprob: -2.034897804260254
    3. ' left' → logprob: -2.034897804260254
    4. ',' → logprob: -2.409897804260254
    5. ' i' → logprob: -2.659897804260254
    6. 'i' → logprob: -2.659897804260254
    7. '
' → logprob: -4.409897804260254
    8. ' start' → logprob: -4.534897804260254
    9. 'start' → logprob: -4.659897804260254
    10. '(left' → logprob: -5.784897804260254

Token 232: ' find' (ID: 1646)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.07776939868927
    2. 'left' → logprob: -1.70276939868927
    3. '           ' → logprob: -2.4527692794799805
    4. ' find' → logprob: -2.4527692794799805
    5. 'n' → logprob: -2.5777692794799805
    6. 'count' → logprob: -2.7027692794799805
    7. 'find' → logprob: -2.9527692794799805
    8. ' n' → logprob: -3.4527692794799805
    9. ' start' → logprob: -3.4527692794799805
    10. ' left' → logprob: -4.5777692794799805

Token 233: ' all' (ID: 722)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6800166368484497
    2. ' start' → logprob: -0.9300166368484497
    3. ' sequences' → logprob: -3.05501651763916
    4. '           ' → logprob: -4.68001651763916
    5. 'left' → logprob: -4.80501651763916
    6. ' the' → logprob: -4.93001651763916
    7. ' left' → logprob: -5.05501651763916
    8. ' consecutive' → logprob: -5.80501651763916
    9. ' all' → logprob: -6.05501651763916
    10. 'sum' → logprob: -6.05501651763916

Token 234: ' sequences' (ID: 45665)
  Prédit: ' sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -1.044246792793274
    2. '           ' → logprob: -1.294246792793274
    3. 'se' → logprob: -1.669246792793274
    4. 'sub' → logprob: -3.4192466735839844
    5. 'possible' → logprob: -3.5442466735839844
    6. 'start' → logprob: -3.5442466735839844
    7. 'con' → logprob: -3.9192466735839844
    8. 'valid' → logprob: -4.169246673583984
    9. 'ranges' → logprob: -4.794246673583984
    10. ' valid' → logprob: -4.919246673583984

Token 235: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019546257331967354
    2. 'i' → logprob: -5.519546031951904
    3. ' i' → logprob: -5.894546031951904
    4. 'left' → logprob: -5.894546031951904
    5. ' left' → logprob: -6.019546031951904
    6. 'start' → logprob: -6.019546031951904
    7. ' start' → logprob: -6.269546031951904
    8. ',' → logprob: -6.894546031951904
    9. '   ' → logprob: -7.269546031951904
    10. 'n' → logprob: -7.394546031951904

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011385908350348473
    2. 'i' → logprob: -5.761385917663574
    3. '       ' → logprob: -6.011385917663574
    4. ' left' → logprob: -6.636385917663574
    5. 'left' → logprob: -6.636385917663574
    6. ' i' → logprob: -7.011385917663574
    7. '   ' → logprob: -7.011385917663574
    8. 'start' → logprob: -7.511385917663574
    9. ' start' → logprob: -7.636385917663574
    10. 'n' → logprob: -9.011385917663574

Token 237: ' left' (ID: 3561)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.35396188497543335
    2. ' start' → logprob: -1.8539619445800781
    3. '           ' → logprob: -2.853961944580078
    4. 'left' (adapté à ' left') → logprob: -2.978961944580078
    5. ' left' → logprob: -3.478961944580078
    6. 'n' → logprob: -6.853961944580078
    7. 'i' → logprob: -7.228961944580078
    8. '   ' → logprob: -8.978961944580078
    9. ' n' → logprob: -9.353961944580078
    10. ' i' → logprob: -9.478961944580078

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35799440741539
    2. '=' → logprob: -1.4829944372177124
    3. ',' → logprob: -2.607994318008423
    4. '       ' → logprob: -9.357994079589844
    5. '   ' → logprob: -9.607994079589844
    6. '           ' → logprob: -9.607994079589844
    7. ' ,' → logprob: -10.107994079589844
    8. ' ' → logprob: -11.982994079589844
    9. '<|end|>' → logprob: -13.107994079589844
    10. ')' → logprob: -13.232994079589844

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031033270061016083
    2. '0' → logprob: -6.003103256225586
    3. ' ' → logprob: -7.378103256225586
    4. '           ' → logprob: -13.503103256225586
    5. '   ' → logprob: -14.378103256225586
    6. '=' → logprob: -15.628103256225586
    7. 'right' → logprob: -16.628103256225586
    8. '       ' → logprob: -16.753103256225586
    9. '     ' → logprob: -16.878103256225586
    10. '2' → logprob: -17.128103256225586

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. '0' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.500005722045898
    4. '2' → logprob: -17.6250057220459
    5. '```' → logprob: -20.2500057220459
    6. '   ' → logprob: -20.7500057220459
    7. '１' → logprob: -21.2500057220459
    8. '01' → logprob: -21.3750057220459
    9. '۱' → logprob: -21.6250057220459
    10. '  ' → logprob: -21.7500057220459

Token 241: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47004371881484985
    2. '           ' → logprob: -1.470043659210205
    3. '<|end|>' → logprob: -2.095043659210205
    4. '       ' → logprob: -4.845043659210205
    5. '<|end|>' → logprob: -5.345043659210205
    6. ',' → logprob: -6.095043659210205
    7. '            
' → logprob: -6.720043659210205
    8. ',right' → logprob: -6.845043659210205
    9. 'right' → logprob: -7.095043659210205
    10. '```' → logprob: -7.595043659210205

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10881272703409195
    2. '
' → logprob: -2.6088128089904785
    3. '<|end|>' → logprob: -4.3588128089904785
    4. '       ' → logprob: -4.7338128089904785
    5. ',' → logprob: -6.2338128089904785
    6. '            
' → logprob: -6.6088128089904785
    7. '   ' → logprob: -6.9838128089904785
    8. '<|end|>' → logprob: -7.1088128089904785
    9. 'right' → logprob: -7.6088128089904785
    10. '```' → logprob: -8.23381233215332

Token 243: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00464882655069232
    2. ' right' → logprob: -5.504648685455322
    3. '           ' → logprob: -7.754648685455322
    4. 'current' → logprob: -9.87964916229248
    5. 'total' → logprob: -10.00464916229248
    6. 'sum' → logprob: -10.37964916229248
    7. '   ' → logprob: -12.12964916229248
    8. '
' → logprob: -12.87964916229248
    9. '	right' → logprob: -13.62964916229248
    10. ' current' → logprob: -14.00464916229248

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804321587085724
    2. '=' → logprob: -3.288043260574341
    3. '1' → logprob: -14.163043022155762
    4. ' ' → logprob: -14.663043022155762
    5. ' =
' → logprob: -14.788043022155762
    6. ',' → logprob: -16.538043975830078
    7. '   ' → logprob: -16.913043975830078
    8. ')' → logprob: -17.038043975830078
    9. '<|end|>' → logprob: -17.163043975830078
    10. '0' → logprob: -17.663043975830078

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6335664391517639
    2. '2' → logprob: -1.0085663795471191
    3. ' ' → logprob: -2.258566379547119
    4. 'left' → logprob: -10.008566856384277
    5. ' left' → logprob: -11.633566856384277
    6. '0' → logprob: -12.258566856384277
    7. '   ' → logprob: -13.883566856384277
    8. '  ' → logprob: -14.383566856384277
    9. '```' → logprob: -14.758566856384277
    10. '[left' → logprob: -15.071066856384277

Token 246: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1269376575946808
    2. '1' → logprob: -2.1269376277923584
    3. ' ' → logprob: -12.126937866210938
    4. '0' → logprob: -12.626937866210938
    5. 'left' → logprob: -14.501937866210938
    6. '```' → logprob: -15.501937866210938
    7. '
' → logprob: -17.689437866210938
    8. '   ' → logprob: -18.126937866210938
    9. '``' → logprob: -18.376937866210938
    10. '  ' → logprob: -18.626937866210938

Token 247: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4293437600135803
    2. '           ' → logprob: -1.0543437004089355
    3. '            
' → logprob: -9.054344177246094
    4. '
' → logprob: -9.429344177246094
    5. 'while' → logprob: -9.429344177246094
    6. '<|end|>' → logprob: -9.554344177246094
    7. '       ' → logprob: -9.679344177246094
    8. ' while' → logprob: -9.929344177246094
    9. '    
' → logprob: -10.179344177246094
    10. '```' → logprob: -10.304344177246094

Token 248: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03968901187181473
    2. '           ' → logprob: -3.289689064025879
    3. '       ' → logprob: -7.664689064025879
    4. ' 
' → logprob: -7.664689064025879
    5. ' while' → logprob: -9.039689064025879
    6. '            
' → logprob: -9.164689064025879
    7. '        
' → logprob: -9.414689064025879
    8. '  
' → logprob: -9.539689064025879
    9. '<|end|>' → logprob: -9.539689064025879
    10. '    
' → logprob: -9.539689064025879

Token 249: ' current' (ID: 2208)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.46026432514190674
    2. '           ' → logprob: -1.5852643251419067
    3. 'current' (adapté à ' current') → logprob: -2.085264205932617
    4. 'total' → logprob: -3.835264205932617
    5. ' while' → logprob: -4.460264205932617
    6. 'sum' → logprob: -5.585264205932617
    7. ' current' → logprob: -6.210264205932617
    8. 'n' → logprob: -8.460264205932617
    9. ' total' → logprob: -8.710264205932617
    10. 'curr' → logprob: -8.960264205932617

Token 250: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.018308086320757866
    2. '_' → logprob: -4.018308162689209
    3. ' _' → logprob: -8.89330768585205
    4. ' =' → logprob: -12.01830768585205
    5. '=' → logprob: -12.26830768585205
    6. 'sum' → logprob: -12.89330768585205
    7. '_=' → logprob: -12.89330768585205
    8. '_total' → logprob: -13.76830768585205
    9. '=_' → logprob: -13.89330768585205
    10. '_s' → logprob: -14.64330768585205

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163747429847717
    2. '=' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.639163970947266
    4. ' =
' → logprob: -18.889163970947266
    5. ' ' → logprob: -19.014163970947266
    6. '   ' → logprob: -19.139163970947266
    7. '=int' → logprob: -19.389163970947266
    8. ',' → logprob: -20.014163970947266
    9. '```' → logprob: -20.014163970947266
    10. 's' → logprob: -20.389163970947266

Token 252: ' left' (ID: 3561)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023312682285904884
    2. 'left' → logprob: -3.773312568664551
    3. ' ' → logprob: -10.39831256866455
    4. ' left' → logprob: -11.14831256866455
    5. '1' → logprob: -11.77331256866455
    6. '(left' → logprob: -12.14831256866455
    7. '[left' → logprob: -12.77331256866455
    8. '   ' → logprob: -13.02331256866455
    9. 'right' → logprob: -13.27331256866455
    10. '	left' → logprob: -14.02331256866455

Token 253: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687264919281006
    2. '+' → logprob: -1.13687264919281
    3. '+
' → logprob: -13.886872291564941
    4. ' +
' → logprob: -15.261872291564941
    5. '+r' → logprob: -16.386873245239258
    6. '＋' → logprob: -16.511873245239258
    7. '[right' → logprob: -16.636873245239258
    8. ' plus' → logprob: -16.886873245239258
    9. '+self' → logprob: -17.261873245239258
    10. ' ' → logprob: -17.761873245239258

Token 254: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.000553151941858232
    2. ' right' → logprob: -7.500553131103516
    3. '2' → logprob: -17.625553131103516
    4. '	right' → logprob: -17.875553131103516
    5. '[right' → logprob: -18.250553131103516
    6. '   ' → logprob: -18.625553131103516
    7. ' ' → logprob: -19.250553131103516
    8. '
' → logprob: -19.250553131103516
    9. '```' → logprob: -19.625553131103516
    10. 'rig' → logprob: -19.625553131103516

Token 255: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22943562269210815
    2. '           ' → logprob: -1.729435682296753
    3. '\n' → logprob: -3.979435682296753
    4. '            
' → logprob: -5.854435443878174
    5. '       ' → logprob: -6.479435443878174
    6. '<|end|>' → logprob: -6.479435443878174
    7. '    
' → logprob: -7.354435443878174
    8. '```' → logprob: -7.729435443878174
    9. ' 
' → logprob: -7.979435443878174
    10. '
' → logprob: -7.979435443878174

Token 256: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10201060771942139
    2. '           ' → logprob: -2.352010726928711
    3. '\n' → logprob: -7.352010726928711
    4. '            
' → logprob: -8.227010726928711
    5. '<|end|>' → logprob: -8.352010726928711
    6. '```' → logprob: -8.477010726928711
    7. '
' → logprob: -8.977010726928711
    8. '       ' → logprob: -9.102010726928711
    9. ' 
' → logprob: -9.852010726928711
    10. '    
' → logprob: -10.227010726928711

Token 257: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12607388198375702
    2. 'while' (adapté à ' while') → logprob: -2.5010738372802734
    3. ' while' → logprob: -4.251073837280273
    4. '       ' → logprob: -4.501073837280273
    5. '
' → logprob: -4.626073837280273
    6. '```' → logprob: -7.251073837280273
    7. '   ' → logprob: -7.876073837280273
    8. '\n' → logprob: -9.626073837280273
    9. '	while' → logprob: -9.876073837280273
    10. '            
' → logprob: -11.126073837280273

Token 258: ' left' (ID: 3561)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.4741211533546448
    2. 'right' → logprob: -0.9741211533546448
    3. ' current' → logprob: -10.34912109375
    4. 'current' → logprob: -12.09912109375
    5. '(right' → logprob: -12.34912109375
    6. '	right' → logprob: -13.72412109375
    7. 'Right' → logprob: -15.34912109375
    8. 'left' → logprob: -15.59912109375
    9. '[right' → logprob: -15.59912109375
    10. '   ' → logprob: -16.22412109375

Token 259: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07035151869058609
    2. '<' → logprob: -2.6953516006469727
    3. '<n' → logprob: -9.070351600646973
    4. '<len' → logprob: -9.070351600646973
    5. ' <=' → logprob: -9.445351600646973
    6. ' ' → logprob: -9.695351600646973
    7. '   ' → logprob: -11.820351600646973
    8. '<size' → logprob: -11.945351600646973
    9. '<=' → logprob: -12.320351600646973
    10. '  ' → logprob: -12.695351600646973

Token 260: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.039558619260787964
    2. 'self' → logprob: -3.9145586490631104
    3. '=' → logprob: -4.039558410644531
    4. '=(' → logprob: -7.414558410644531
    5. '=self' → logprob: -8.039558410644531
    6. '(right' → logprob: -8.539558410644531
    7. ' right' → logprob: -9.789558410644531
    8. '(self' → logprob: -10.789558410644531
    9. '=((' → logprob: -12.039558410644531
    10. '
' → logprob: -12.289558410644531

Token 261: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14051207900047302
    2. 'and' → logprob: -2.765511989593506
    3. ':' → logprob: -2.890511989593506
    4. ':
' → logprob: -4.515511989593506
    5. '           ' → logprob: -6.890511989593506
    6. '<|end|>' → logprob: -7.890511989593506
    7. '               ' → logprob: -8.890512466430664
    8. ' :' → logprob: -10.390512466430664
    9. ' :
' → logprob: -11.265512466430664
    10. '       ' → logprob: -11.265512466430664

Token 262: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.016103584319353104
    2. ' right' → logprob: -4.641103744506836
    3. 'current' → logprob: -5.141103744506836
    4. ' current' → logprob: -7.766103744506836
    5. 'left' → logprob: -10.641103744506836
    6. '           ' → logprob: -11.891103744506836
    7. '(right' → logprob: -11.891103744506836
    8. '	right' → logprob: -12.266103744506836
    9. '   ' → logprob: -12.641103744506836
    10. '               ' → logprob: -13.141103744506836

Token 263: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3871128559112549
    2. ' <=' → logprob: -1.1371128559112549
    3. '<' → logprob: -8.512112617492676
    4. ' <' → logprob: -10.387112617492676
    5. '<len' → logprob: -12.512112617492676
    6. ' ' → logprob: -13.637112617492676
    7. ')<=' → logprob: -13.762112617492676
    8. '+' → logprob: -13.887112617492676
    9. '<|end|>' → logprob: -14.262112617492676
    10. '*' → logprob: -14.637112617492676

Token 264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004159602802246809
    2. '(self' → logprob: -5.504159450531006
    3. ' self' → logprob: -9.504159927368164
    4. ' (' → logprob: -13.004159927368164
    5. '   ' → logprob: -13.629159927368164
    6. '           ' → logprob: -13.879159927368164
    7. '(' → logprob: -14.629159927368164
    8. '       ' → logprob: -14.879159927368164
    9. '	self' → logprob: -15.004159927368164
    10. '((' → logprob: -15.379159927368164

Token 265: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.0001249925117008388
    2. 'target' → logprob: -9.00012493133545
    3. '.' → logprob: -13.75012493133545
    4. '.t' → logprob: -15.12512493133545
    5. ' target' → logprob: -17.125125885009766
    6. '	target' → logprob: -17.125125885009766
    7. ' .' → logprob: -17.875125885009766
    8. '_target' → logprob: -18.875125885009766
    9. 'arget' → logprob: -19.250125885009766
    10. ',target' → logprob: -19.375125885009766

Token 266: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11344284564256668
    2. ':' → logprob: -2.238442897796631
    3. ' and' → logprob: -7.863442897796631
    4. '):
' → logprob: -9.238442420959473
    5. '           ' → logprob: -9.863442420959473
    6. '               ' → logprob: -10.488442420959473
    7. ' :
' → logprob: -10.488442420959473
    8. 'and' → logprob: -11.363442420959473
    9. ':

' → logprob: -11.988442420959473
    10. ':
' → logprob: -12.613442420959473

Token 267: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005019563715904951
    2. '<|end|>' → logprob: -6.255019664764404
    3. ':' → logprob: -6.630019664764404
    4. '           ' → logprob: -7.130019664764404
    5. ':
' → logprob: -8.005019187927246
    6. '   ' → logprob: -8.880019187927246
    7. '<|end|>' → logprob: -9.130019187927246
    8. '                
' → logprob: -9.130019187927246
    9. '```' → logprob: -10.130019187927246
    10. '
' → logprob: -10.380019187927246

Token 268: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0632796585559845
    2. ' if' → logprob: -2.813279628753662
    3. 'if' (adapté à ' if') → logprob: -7.063279628753662
    4. '                   ' → logprob: -8.43828010559082
    5. '                ' → logprob: -9.43828010559082
    6. '   ' → logprob: -9.43828010559082
    7. '           ' → logprob: -10.43828010559082
    8. ' ' → logprob: -11.68828010559082
    9. '              ' → logprob: -11.68828010559082
    10. '	if' → logprob: -12.31328010559082

Token 269: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0052342405542731285
    2. ' current' → logprob: -5.255234241485596
    3. '(current' → logprob: -15.380233764648438
    4. '[current' → logprob: -16.130233764648438
    5. '                   ' → logprob: -16.505233764648438
    6. '$current' → logprob: -17.130233764648438
    7. '	current' → logprob: -17.380233764648438
    8. '               ' → logprob: -17.505233764648438
    9. 'urrent' → logprob: -18.380233764648438
    10. '.current' → logprob: -18.505233764648438

Token 270: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.47495681833243e-05
    2. 'sum' → logprob: -10.625024795532227
    3. '_' → logprob: -15.750024795532227
    4. 'Sum' → logprob: -17.125024795532227
    5. '_s' → logprob: -17.250024795532227
    6. 's' → logprob: -17.750024795532227
    7. ' sum' → logprob: -17.875024795532227
    8. '+' → logprob: -19.375024795532227
    9. '_SUM' → logprob: -19.375024795532227
    10. 'a' → logprob: -19.625024795532227

Token 271: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06563862413167953
    2. ' <' → logprob: -3.190638542175293
    3. '==' → logprob: -3.815638542175293
    4. '<' → logprob: -8.190638542175293
    5. ' ' → logprob: -10.190638542175293
    6. ' >=' → logprob: -11.065638542175293
    7. '   ' → logprob: -11.440638542175293
    8. '    ' → logprob: -12.440638542175293
    9. ' >' → logprob: -12.815638542175293
    10. '  ' → logprob: -13.065638542175293

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004101908300071955
    2. ' self' → logprob: -5.504101753234863
    3. '               ' → logprob: -11.129101753234863
    4. '                   ' → logprob: -12.379101753234863
    5. '           ' → logprob: -12.879101753234863
    6. '(self' → logprob: -14.004101753234863
    7. '[self' → logprob: -15.379101753234863
    8. 'target' → logprob: -15.629101753234863
    9. '   ' → logprob: -15.754101753234863
    10. '                       ' → logprob: -16.00410270690918

Token 273: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.0036403348203748465
    2. 'target' → logprob: -5.628640174865723
    3. '.' → logprob: -10.878640174865723
    4. '_target' → logprob: -12.003640174865723
    5. 'arget' → logprob: -12.378640174865723
    6. ' .' → logprob: -12.628640174865723
    7. '	target' → logprob: -13.003640174865723
    8. '.t' → logprob: -13.503640174865723
    9. ' target' → logprob: -14.003640174865723
    10. '[target' → logprob: -14.003640174865723

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05783597752451897
    2. ':
' → logprob: -2.9328360557556152
    3. '                   ' → logprob: -5.932836055755615
    4. ' and' → logprob: -8.932835578918457
    5. '               ' → logprob: -9.307835578918457
    6. ',' → logprob: -11.182835578918457
    7. '<|end|>' → logprob: -11.557835578918457
    8. ':return' → logprob: -11.682835578918457
    9. '):
' → logprob: -11.932835578918457
    10. 'and' → logprob: -11.932835578918457

Token 275: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000251326389843598
    2. '               ' → logprob: -8.375251770019531
    3. '                  ' → logprob: -12.000251770019531
    4. '           ' → logprob: -12.875251770019531
    5. '                    ' → logprob: -12.875251770019531
    6. '                       ' → logprob: -12.875251770019531
    7. '                    
' → logprob: -13.375251770019531
    8. '                ' → logprob: -13.500251770019531
    9. '   ' → logprob: -14.125251770019531
    10. '       ' → logprob: -14.500251770019531

Token 276: ' count' (ID: 3605)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1378236711025238
    2. 'count' (adapté à ' count') → logprob: -2.1378235816955566
    3. ' count' → logprob: -4.887823581695557
    4. '                       ' → logprob: -6.387823581695557
    5. '               ' → logprob: -6.512823581695557
    6. '           ' → logprob: -9.512824058532715
    7. '       ' → logprob: -10.387824058532715
    8. '[count' → logprob: -11.637824058532715
    9. '   ' → logprob: -12.262824058532715
    10. '
' → logprob: -12.387824058532715

Token 277: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20142853260040283
    2. ' +=' → logprob: -1.7014285326004028
    3. ']+=' → logprob: -11.326428413391113
    4. '   ' → logprob: -13.826428413391113
    5. '```' → logprob: -14.326428413391113
    6. '+' → logprob: -14.326428413391113
    7. '           ' → logprob: -15.201428413391113
    8. '               ' → logprob: -15.451428413391113
    9. 'increment' → logprob: -15.701428413391113
    10. '                   ' → logprob: -16.45142936706543

Token 278: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.3750057220459
    4. '```' → logprob: -20.6250057220459
    5. '           ' → logprob: -20.7500057220459
    6. '１' → logprob: -21.5000057220459
    7. '۱' → logprob: -22.0000057220459
    8. '  ' → logprob: -22.6250057220459
    9. 'one' → logprob: -22.7500057220459
    10. '       ' → logprob: -23.0625057220459

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -20.125
    4. '۱' → logprob: -22.375
    5. '１' → logprob: -22.75
    6. '   ' → logprob: -23.125
    7. '<|end|>' → logprob: -23.5
    8. 'one' → logprob: -23.75
    9. '१' → logprob: -24.0625
    10. 'value' → logprob: -24.125

Token 280: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.052418455481529236
    2. '               ' → logprob: -3.4274184703826904
    3. '
' → logprob: -4.427418231964111
    4. '                    
' → logprob: -5.177418231964111
    5. '                
' → logprob: -7.552418231964111
    6. '           ' → logprob: -8.42741870880127
    7. '                    ' → logprob: -10.05241870880127
    8. '            
' → logprob: -10.30241870880127
    9. '                ' → logprob: -10.55241870880127
    10. '    
' → logprob: -10.55241870880127

Token 281: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007817894220352173
    2. '               ' → logprob: -4.88281774520874
    3. '
' → logprob: -9.382818222045898
    4. '                    
' → logprob: -9.632818222045898
    5. '           ' → logprob: -10.382818222045898
    6. 'current' → logprob: -11.882818222045898
    7. '```' → logprob: -12.257818222045898
    8. '                       ' → logprob: -12.382818222045898
    9. ',' → logprob: -12.882818222045898
    10. '   ' → logprob: -13.132818222045898

Token 282: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16319076716899872
    2. 'right' → logprob: -1.9131907224655151
    3. '               ' → logprob: -7.163190841674805
    4. 'left' → logprob: -7.288190841674805
    5. '                   ' → logprob: -7.788190841674805
    6. ' current' → logprob: -7.913190841674805
    7. '#' (adapté à ' #') → logprob: -7.913190841674805
    8. '           ' → logprob: -8.288190841674805
    9. '   ' → logprob: -10.163190841674805
    10. ' right' → logprob: -10.413190841674805

Token 283: ' Move' (ID: 25485)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.322226345539093
    2. 'current' → logprob: -1.3222262859344482
    3. 'left' → logprob: -4.822226524353027
    4. '#' → logprob: -7.447226524353027
    5. ' current' → logprob: -9.447226524353027
    6. '   ' → logprob: -9.572226524353027
    7. ' right' → logprob: -9.822226524353027
    8. '           ' → logprob: -10.572226524353027
    9. '       ' → logprob: -11.447226524353027
    10. '               ' → logprob: -11.572226524353027

Token 284: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.03510976582765579
    2. 'left' → logprob: -3.410109758377075
    3. ' right' → logprob: -6.660109996795654
    4. ' left' → logprob: -9.035109519958496
    5. '	right' → logprob: -10.410109519958496
    6. '   ' → logprob: -11.160109519958496
    7. '	left' → logprob: -12.660109519958496
    8. '```' → logprob: -12.910109519958496
    9. '[right' → logprob: -13.410109519958496
    10. '    ' → logprob: -13.660109519958496

Token 285: ' pointer' (ID: 16233)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.26541024446487427
    2. '+=' → logprob: -1.5154101848602295
    3. 'right' → logprob: -5.140410423278809
    4. '<|end|>' → logprob: -6.140410423278809
    5. '           ' → logprob: -6.515410423278809
    6. '+' → logprob: -7.265410423278809
    7. '   ' → logprob: -7.515410423278809
    8. 'forward' → logprob: -8.015410423278809
    9. '```' → logprob: -8.265410423278809
    10. '               ' → logprob: -8.390410423278809

Token 286: ' forward' (ID: 6687)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.0875489711761475
    2. '               ' → logprob: -1.3375489711761475
    3. '                   ' → logprob: -1.3375489711761475
    4. ' +=' → logprob: -2.8375489711761475
    5. '+=' → logprob: -3.3375489711761475
    6. '           ' → logprob: -3.5875489711761475
    7. ' right' → logprob: -4.837549209594727
    8. '+' → logprob: -6.837549209594727
    9. 'to' → logprob: -6.837549209594727
    10. '	right' → logprob: -7.212549209594727

Token 287: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23113711178302765
    2. '
' → logprob: -1.6061371564865112
    3. '               ' → logprob: -5.981137275695801
    4. '                    
' → logprob: -6.231137275695801
    5. '    
' → logprob: -7.606137275695801
    6. 'right' → logprob: -8.6061372756958
    7. '           ' → logprob: -8.9811372756958
    8. ',' → logprob: -9.2311372756958
    9. ' 
' → logprob: -10.3561372756958
    10. '                
' → logprob: -10.6061372756958

Token 288: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1649494171142578
    2. '
' → logprob: -1.9149494171142578
    3. '               ' → logprob: -6.039949417114258
    4. '                    
' → logprob: -6.539949417114258
    5. '    
' → logprob: -7.914949417114258
    6. 'right' → logprob: -8.789949417114258
    7. '           ' → logprob: -8.789949417114258
    8. ' 
' → logprob: -10.289949417114258
    9. '                
' → logprob: -10.539949417114258
    10. '   ' → logprob: -10.914949417114258

Token 289: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.14521579444408417
    2. '                   ' → logprob: -2.6452157497406006
    3. 'current' → logprob: -3.3952157497406006
    4. ' right' → logprob: -3.6452157497406006
    5. ' current' → logprob: -5.77021598815918
    6. '               ' → logprob: -6.77021598815918
    7. '           ' → logprob: -10.27021598815918
    8. '                    ' → logprob: -10.27021598815918
    9. '   ' → logprob: -10.39521598815918
    10. '```' → logprob: -10.52021598815918

Token 290: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31331440806388855
    2. ' +=' → logprob: -1.313314437866211
    3. '+' → logprob: -10.063314437866211
    4. ']+=' → logprob: -11.813314437866211
    5. '   ' → logprob: -14.063314437866211
    6. '           ' → logprob: -14.313314437866211
    7. '```' → logprob: -14.813314437866211
    8. '=' → logprob: -14.938314437866211
    9. '    ' → logprob: -16.31331443786621
    10. '+='' → logprob: -16.31331443786621

Token 291: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -20.125003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '１' → logprob: -21.875003814697266
    6. '<|end|>' → logprob: -22.125003814697266
    7. '۱' → logprob: -22.250003814697266
    8. '2' → logprob: -22.500003814697266
    9. '  ' → logprob: -22.687503814697266
    10. '
' → logprob: -22.687503814697266

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.750001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '<|end|>' → logprob: -19.625001907348633
    6. '2' → logprob: -20.000001907348633
    7. '۱' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.250001907348633
    9. '0' → logprob: -21.312501907348633
    10. '１' → logprob: -21.375001907348633

Token 293: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003633521846495569
    2. '               ' → logprob: -8.75036334991455
    3. '
' → logprob: -9.00036334991455
    4. 'current' → logprob: -10.25036334991455
    5. '           ' → logprob: -10.50036334991455
    6. '   ' → logprob: -12.12536334991455
    7. '                    
' → logprob: -12.50036334991455
    8. '       ' → logprob: -13.12536334991455
    9. ',' → logprob: -13.37536334991455
    10. '                  ' → logprob: -13.50036334991455

Token 294: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012226948514580727
    2. '
' → logprob: -4.7622270584106445
    3. '               ' → logprob: -6.1372270584106445
    4. '           ' → logprob: -7.3872270584106445
    5. 'current' → logprob: -7.5122270584106445
    6. '                    
' → logprob: -9.012227058410645
    7. '       ' → logprob: -10.387227058410645
    8. ' current' → logprob: -10.637227058410645
    9. '   ' → logprob: -10.637227058410645
    10. ' 
' → logprob: -11.262227058410645

Token 295: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0017990543274208903
    2. '                   ' → logprob: -6.7517991065979
    3. ' current' → logprob: -7.3767991065979
    4. '               ' → logprob: -13.376798629760742
    5. '   ' → logprob: -14.501798629760742
    6. '           ' → logprob: -14.751798629760742
    7. '	current' → logprob: -16.001798629760742
    8. '                       ' → logprob: -16.376798629760742
    9. '$current' → logprob: -16.501798629760742
    10. ',current' → logprob: -16.626798629760742

Token 296: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.13388703338569e-06
    2. 'sum' → logprob: -11.625009536743164
    3. '_' → logprob: -15.750009536743164
    4. 'Sum' → logprob: -18.000009536743164
    5. ' sum' → logprob: -18.125009536743164
    6. '_s' → logprob: -18.375009536743164
    7. '=' → logprob: -18.375009536743164
    8. '=sum' → logprob: -19.125009536743164
    9. ' _' → logprob: -19.625009536743164
    10. '_set' → logprob: -19.625009536743164

Token 297: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.025116831064224243
    2. ' +=' → logprob: -3.9001169204711914
    3. '=' → logprob: -5.400116920471191
    4. ' =' → logprob: -10.275116920471191
    5. '+' → logprob: -12.275116920471191
    6. '-=' → logprob: -12.275116920471191
    7. '+=(' → logprob: -12.900116920471191
    8. ']+=' → logprob: -14.025116920471191
    9. '+='' → logprob: -14.400116920471191
    10. ' -=' → logprob: -15.525116920471191

Token 298: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -2.451116051815916e-05
    2. ' right' → logprob: -10.625024795532227
    3. '	right' → logprob: -17.250024795532227
    4. '(right' → logprob: -17.375024795532227
    5. '[right' → logprob: -17.875024795532227
    6. '   ' → logprob: -18.000024795532227
    7. 'rig' → logprob: -18.375024795532227
    8. '
' → logprob: -18.875024795532227
    9. 'left' → logprob: -19.625024795532227
    10. 'r' → logprob: -20.000024795532227

Token 299: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018642546609044075
    2. '                   ' → logprob: -4.518642425537109
    3. '
' → logprob: -5.018642425537109
    4. '           ' → logprob: -8.26864242553711
    5. 'elif' → logprob: -8.51864242553711
    6. '<|end|>' → logprob: -9.14364242553711
    7. ' elif' → logprob: -9.39364242553711
    8. ' else' → logprob: -9.89364242553711
    9. '       ' → logprob: -10.26864242553711
    10. '```' → logprob: -10.76864242553711

Token 300: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003753767115995288
    2. '                   ' → logprob: -5.628753662109375
    3. 'elif' → logprob: -9.003753662109375
    4. ' elif' → logprob: -11.378753662109375
    5. '           ' → logprob: -11.753753662109375
    6. 'else' → logprob: -12.878753662109375
    7. '   ' → logprob: -13.003753662109375
    8. ' else' → logprob: -13.253753662109375
    9. '       ' → logprob: -13.503753662109375
    10. '
' → logprob: -14.253753662109375

Token 301: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.11046626418828964
    2. '               ' → logprob: -2.360466241836548
    3. ' elif' → logprob: -4.610466480255127
    4. '           ' → logprob: -8.360466003417969
    5. 'else' → logprob: -10.735466003417969
    6. ' else' → logprob: -13.860466003417969
    7. '                   ' → logprob: -14.110466003417969
    8. '	elif' → logprob: -14.235466003417969
    9. 'elseif' → logprob: -14.485466003417969
    10. '```' → logprob: -14.485466003417969

Token 302: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12694837152957916
    2. ' current' → logprob: -2.126948356628418
    3. '(current' → logprob: -11.501948356628418
    4. '[current' → logprob: -12.251948356628418
    5. ' ' → logprob: -13.501948356628418
    6. '	current' → logprob: -13.751948356628418
    7. '   ' → logprob: -14.126948356628418
    8. '$current' → logprob: -14.751948356628418
    9. '_current' → logprob: -14.876948356628418
    10. '  ' → logprob: -15.126948356628418

Token 303: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.542423165636137e-05
    2. 'sum' → logprob: -9.500085830688477
    3. '_' → logprob: -12.375085830688477
    4. '_val' → logprob: -12.875085830688477
    5. '_s' → logprob: -13.625085830688477
    6. '==' → logprob: -14.000085830688477
    7. '__' → logprob: -15.250085830688477
    8. 's' → logprob: -15.375085830688477
    9. '_value' → logprob: -16.000085830688477
    10. 't' → logprob: -16.000085830688477

Token 304: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016475941985845566
    2. '<' → logprob: -4.141476154327393
    3. ' >' → logprob: -7.766476154327393
    4. '>' → logprob: -11.391475677490234
    5. '<class' → logprob: -13.641475677490234
    6. '<|end|>' → logprob: -13.641475677490234
    7. '<int' → logprob: -13.766475677490234
    8. ' ' → logprob: -14.266475677490234
    9. ' ' → logprob: -14.516475677490234
    10. '  ' → logprob: -15.766475677490234

Token 305: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20142288506031036
    2. ' self' → logprob: -1.701422929763794
    3. '               ' → logprob: -12.826422691345215
    4. '=self' → logprob: -13.701422691345215
    5. '                   ' → logprob: -13.826422691345215
    6. '           ' → logprob: -14.076422691345215
    7. 'right' → logprob: -14.076422691345215
    8. '(self' → logprob: -14.201422691345215
    9. '[self' → logprob: -14.826422691345215
    10. ' ' → logprob: -15.076422691345215

Token 306: '.target' (ID: 11090)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.2256370633840561
    2. '.target' → logprob: -1.6006370782852173
    3. ' target' → logprob: -8.850637435913086
    4. '_target' → logprob: -10.475637435913086
    5. 'arget' → logprob: -10.725637435913086
    6. '.' → logprob: -11.600637435913086
    7. '	target' → logprob: -11.975637435913086
    8. 't' → logprob: -12.600637435913086
    9. ' .' → logprob: -13.475637435913086
    10. '   ' → logprob: -13.600637435913086

Token 307: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8134141564369202
    2. ':' → logprob: -1.1884140968322754
    3. '                   ' → logprob: -1.5634140968322754
    4. '               ' → logprob: -3.1884140968322754
    5. ',' → logprob: -7.813414096832275
    6. '           ' → logprob: -8.438414573669434
    7. '                ' → logprob: -8.563414573669434
    8. '   ' → logprob: -9.438414573669434
    9. '                    ' → logprob: -9.438414573669434
    10. '):
' → logprob: -9.938414573669434

Token 308: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00012749579036608338
    2. '               ' → logprob: -9.750127792358398
    3. '                    
' → logprob: -10.875127792358398
    4. ' right' → logprob: -11.125127792358398
    5. '                    ' → logprob: -12.250127792358398
    6. '                  ' → logprob: -12.375127792358398
    7. '                       ' → logprob: -12.375127792358398
    8. '   ' → logprob: -12.500127792358398
    9. '           ' → logprob: -12.625127792358398
    10. '                ' → logprob: -12.750127792358398

Token 309: ' right' (ID: 1849)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14127519726753235
    2. ' right' → logprob: -2.26627516746521
    3. 'right' (adapté à ' right') → logprob: -3.64127516746521
    4. '                    ' → logprob: -7.016275405883789
    5. '               ' → logprob: -7.641275405883789
    6. '                       ' → logprob: -9.016275405883789
    7. '                ' → logprob: -9.391275405883789
    8. '	right' → logprob: -9.766275405883789
    9. '                    
' → logprob: -10.266275405883789
    10. '                  ' → logprob: -10.516275405883789

Token 310: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02978092059493065
    2. '+=' → logprob: -3.529780864715576
    3. '+' → logprob: -10.529781341552734
    4. ' +' → logprob: -12.904781341552734
    5. ']+=' → logprob: -14.154781341552734
    6. '    ' → logprob: -15.279781341552734
    7. '   ' → logprob: -16.904781341552734
    8. '                   ' → logprob: -17.279781341552734
    9. '+='' → logprob: -17.654781341552734
    10. '```' → logprob: -17.779781341552734

Token 311: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047935113310814
    2. ' ' → logprob: -4.511047840118408
    3. '```' → logprob: -16.63604736328125
    4. '<|end|>' → logprob: -17.38604736328125
    5. ' ' → logprob: -18.51104736328125
    6. '   ' → logprob: -18.63604736328125
    7. '2' → logprob: -19.01104736328125
    8. '۱' → logprob: -20.01104736328125
    9. '+' → logprob: -20.51104736328125
    10. '<|end|>' → logprob: -20.82354736328125

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -18.750003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '```' → logprob: -19.625003814697266
    6. '۱' → logprob: -21.375003814697266
    7. '  ' → logprob: -22.000003814697266
    8. '１' → logprob: -22.500003814697266
    9. '2' → logprob: -22.500003814697266
    10. '१' → logprob: -22.625003814697266

Token 313: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008355705998837948
    2. ' current' → logprob: -5.633355617523193
    3. 'current' → logprob: -6.133355617523193
    4. '           ' → logprob: -6.633355617523193
    5. '               ' → logprob: -7.758355617523193
    6. '   ' → logprob: -8.633356094360352
    7. '       ' → logprob: -8.883356094360352
    8. '
' → logprob: -8.883356094360352
    9. '                    
' → logprob: -8.883356094360352
    10. '[current' → logprob: -10.258356094360352

Token 314: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006590555422008038
    2. 'current' → logprob: -5.756590366363525
    3. ' current' → logprob: -6.631590366363525
    4. '           ' → logprob: -7.131590366363525
    5. '               ' → logprob: -7.506590366363525
    6. '
' → logprob: -8.006590843200684
    7. '                    
' → logprob: -8.881590843200684
    8. '[current' → logprob: -9.506590843200684
    9. '   ' → logprob: -9.881590843200684
    10. '       ' → logprob: -10.006590843200684

Token 315: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5777311325073242
    2. 'current' (adapté à ' current') → logprob: -0.8277311325073242
    3. '                   ' → logprob: -6.327731132507324
    4. '   ' → logprob: -13.952731132507324
    5. '[current' → logprob: -14.702731132507324
    6. ',current' → logprob: -14.702731132507324
    7. '_current' → logprob: -14.952731132507324
    8. '               ' → logprob: -15.077731132507324
    9. '	current' → logprob: -15.202731132507324
    10. '$current' → logprob: -15.202731132507324

Token 316: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.4121114822482923e-06
    2. 'sum' → logprob: -12.625003814697266
    3. '_' → logprob: -17.750003814697266
    4. 'Sum' → logprob: -18.000003814697266
    5. '_s' → logprob: -18.125003814697266
    6. ' _' → logprob: -18.500003814697266
    7. '_SUM' → logprob: -18.500003814697266
    8. '._' → logprob: -19.625003814697266
    9. ' sum' → logprob: -20.125003814697266
    10. '+=' → logprob: -20.125003814697266

Token 317: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1269306242465973
    2. '+=' → logprob: -2.1269307136535645
    3. '+' → logprob: -13.501930236816406
    4. ']+=' → logprob: -14.376930236816406
    5. '+='' → logprob: -15.001930236816406
    6. '+="' → logprob: -16.126930236816406
    7. '+=(' → logprob: -16.126930236816406
    8. ' +' → logprob: -17.001930236816406
    9. '=' → logprob: -18.126930236816406
    10. ' ' → logprob: -18.751930236816406

Token 318: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3868976831436157
    2. ' right' → logprob: -1.1368976831436157
    3. '1' → logprob: -10.886898040771484
    4. '	right' → logprob: -12.761898040771484
    5. '(right' → logprob: -12.886898040771484
    6. ' ' → logprob: -14.636898040771484
    7. '[right' → logprob: -14.636898040771484
    8. '.right' → logprob: -14.761898040771484
    9. '_right' → logprob: -14.886898040771484
    10. 'Right' → logprob: -15.136898040771484

Token 319: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005177667480893433
    2. ' else' → logprob: -8.250517845153809
    3. 'else' → logprob: -8.500517845153809
    4. 'elif' → logprob: -10.125517845153809
    5. ' elif' → logprob: -11.375517845153809
    6. '```' → logprob: -13.750517845153809
    7. '           ' → logprob: -15.125517845153809
    8. '
' → logprob: -16.750516891479492
    9. '       ' → logprob: -16.750516891479492
    10. '                
' → logprob: -17.250516891479492

Token 320: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.633853652398102e-05
    2. 'else' → logprob: -10.500056266784668
    3. ' else' → logprob: -10.500056266784668
    4. 'elif' → logprob: -14.250056266784668
    5. ' elif' → logprob: -15.250056266784668
    6. '```' → logprob: -16.750057220458984
    7. '           ' → logprob: -17.375057220458984
    8. '       ' → logprob: -17.375057220458984
    9. '              ' → logprob: -18.250057220458984
    10. '   ' → logprob: -18.625057220458984

Token 321: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5551032423973083
    2. '               ' → logprob: -1.0551033020019531
    3. 'else' (adapté à ' else') → logprob: -2.555103302001953
    4. ' elif' → logprob: -9.180103302001953
    5. 'elif' → logprob: -10.180103302001953
    6. '       ' → logprob: -12.805103302001953
    7. '   ' → logprob: -13.805103302001953
    8. '           ' → logprob: -14.680103302001953
    9. '```' → logprob: -15.180103302001953
    10. '_else' → logprob: -15.305103302001953

Token 322: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47698864340782166
    2. ':' → logprob: -1.101988673210144
    3. '                   ' → logprob: -3.1019885540008545
    4. '               ' → logprob: -6.226988792419434
    5. ' :
' → logprob: -9.726988792419434
    6. '           ' → logprob: -10.101988792419434
    7. '   ' → logprob: -10.351988792419434
    8. '                  ' → logprob: -11.351988792419434
    9. ':
' → logprob: -11.351988792419434
    10. ' :' → logprob: -11.476988792419434

Token 323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005905569065362215
    2. '               ' → logprob: -5.755905628204346
    3. '   ' → logprob: -6.380905628204346
    4. ' current' → logprob: -7.630905628204346
    5. 'current' → logprob: -8.005905151367188
    6. '           ' → logprob: -9.005905151367188
    7. 'left' → logprob: -11.130905151367188
    8. ' left' → logprob: -11.255905151367188
    9. '                ' → logprob: -11.380905151367188
    10. ':' → logprob: -11.380905151367188

Token 324: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.12803681194782257
    2. ' current' → logprob: -2.1280367374420166
    3. '                   ' → logprob: -6.878036975860596
    4. '   ' → logprob: -10.003036499023438
    5. '	current' → logprob: -10.878036499023438
    6. '               ' → logprob: -12.503036499023438
    7. '           ' → logprob: -13.003036499023438
    8. '_current' → logprob: -13.378036499023438
    9. 'urrent' → logprob: -13.628036499023438
    10. ' ' → logprob: -13.878036499023438

Token 325: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0010355490958318114
    2. 'sum' → logprob: -6.876035690307617
    3. 'Sum' → logprob: -13.751035690307617
    4. '-=' → logprob: -15.251035690307617
    5. '=' → logprob: -15.376035690307617
    6. '=sum' → logprob: -15.751035690307617
    7. ' sum' → logprob: -15.876035690307617
    8. '           ' → logprob: -15.876035690307617
    9. '_SUM' → logprob: -16.001035690307617
    10. '	sum' → logprob: -16.126035690307617

Token 326: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1044130027294159
    2. ' -=' → logprob: -2.3544130325317383
    3. '-' → logprob: -5.479413032531738
    4. ' -' → logprob: -11.104413032531738
    5. '=' → logprob: -12.479413032531738
    6. '+=' → logprob: -12.604413032531738
    7. '```' → logprob: -13.479413032531738
    8. '    ' → logprob: -14.229413032531738
    9. '   ' → logprob: -14.479413032531738
    10. '>' → logprob: -15.479413032531738

Token 327: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -6.2729995988775045e-06
    2. ' left' → logprob: -12.000006675720215
    3. '[left' → logprob: -18.6250057220459
    4. '	left' → logprob: -19.0000057220459
    5. '1' → logprob: -19.3750057220459
    6. 'lef' → logprob: -19.7500057220459
    7. '   ' → logprob: -20.0000057220459
    8. '.left' → logprob: -20.2500057220459
    9. '           ' → logprob: -20.5000057220459
    10. '               ' → logprob: -21.7500057220459

Token 328: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0032978474628180265
    2. '           ' → logprob: -6.378297805786133
    3. '
' → logprob: -7.128297805786133
    4. '               ' → logprob: -7.253297805786133
    5. '   ' → logprob: -10.128297805786133
    6. '       ' → logprob: -11.503297805786133
    7. '```' → logprob: -11.628297805786133
    8. '				' → logprob: -11.753297805786133
    9. '		           ' → logprob: -11.878297805786133
    10. 'left' → logprob: -13.628297805786133

Token 329: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0032200184650719166
    2. '           ' → logprob: -6.253220081329346
    3. '               ' → logprob: -7.003220081329346
    4. '   ' → logprob: -8.378219604492188
    5. 'left' → logprob: -9.878219604492188
    6. ' left' → logprob: -10.128219604492188
    7. '       ' → logprob: -10.378219604492188
    8. '```' → logprob: -11.003219604492188
    9. '[left' → logprob: -12.628219604492188
    10. '                    ' → logprob: -13.378219604492188

Token 330: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0900963544845581
    2. ' left' → logprob: -2.8400964736938477
    3. '                   ' → logprob: -3.5900964736938477
    4. '           ' → logprob: -10.090096473693848
    5. '   ' → logprob: -10.215096473693848
    6. '	left' → logprob: -10.965096473693848
    7. '               ' → logprob: -10.965096473693848
    8. '[left' → logprob: -11.465096473693848
    9. '.left' → logprob: -11.840096473693848
    10. '1' → logprob: -12.965096473693848

Token 331: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38701415061950684
    2. '+=' → logprob: -1.1370141506195068
    3. '+' → logprob: -9.262014389038086
    4. '                   ' → logprob: -10.887014389038086
    5. '                    ' → logprob: -11.762014389038086
    6. ' +' → logprob: -11.762014389038086
    7. '            ' → logprob: -12.637014389038086
    8. '```' → logprob: -12.637014389038086
    9. '           ' → logprob: -13.387014389038086
    10. '1' → logprob: -13.512014389038086

Token 332: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -20.125
    4. '   ' → logprob: -22.0
    5. '           ' → logprob: -23.75
    6. '<|end|>' → logprob: -24.625
    7. '۱' → logprob: -24.875
    8. '１' → logprob: -25.0
    9. '                   ' → logprob: -25.375
    10. '१' → logprob: -25.625

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -20.75
    4. '<|end|>' → logprob: -22.25
    5. '   ' → logprob: -22.75
    6. '１' → logprob: -23.25
    7. '۱' → logprob: -23.375
    8. '१' → logprob: -23.75
    9. '১' → logprob: -24.125
    10. '0' → logprob: -24.75

Token 334: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003314129135105759
    2. '       ' → logprob: -9.37533187866211
    3. '<|end|>' → logprob: -9.37533187866211
    4. 'return' → logprob: -9.75033187866211
    5. '          ' → logprob: -9.87533187866211
    6. '               ' → logprob: -11.12533187866211
    7. '```' → logprob: -11.50033187866211
    8. '
' → logprob: -11.50033187866211
    9. ' return' → logprob: -11.75033187866211
    10. '            
' → logprob: -13.12533187866211

Token 335: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020377879263833165
    2. 'return' → logprob: -8.750204086303711
    3. '```' → logprob: -10.750204086303711
    4. '       ' → logprob: -11.250204086303711
    5. '               ' → logprob: -12.375204086303711
    6. '          ' → logprob: -13.250204086303711
    7. '<|end|>' → logprob: -13.625204086303711
    8. ' return' → logprob: -13.625204086303711
    9. '
' → logprob: -13.875204086303711
    10. '		' → logprob: -15.000204086303711

Token 336: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0805705189704895
    2. 'return' (adapté à ' return') → logprob: -2.5805704593658447
    3. ' return' → logprob: -6.705570697784424
    4. '       ' → logprob: -7.705570697784424
    5. '   ' → logprob: -13.455570220947266
    6. '          ' → logprob: -13.830570220947266
    7. '               ' → logprob: -13.830570220947266
    8. '```' → logprob: -14.205570220947266
    9. '	return' → logprob: -14.705570220947266
    10. '         ' → logprob: -16.080570220947266

Token 337: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005233763717114925
    2. ' count' → logprob: -5.2552337646484375
    3. '	count' → logprob: -20.005233764648438
    4. '[count' → logprob: -20.630233764648438
    5. '(count' → logprob: -21.005233764648438
    6. 'counts' → logprob: -21.880233764648438
    7. '   ' → logprob: -22.755233764648438
    8. '$count' → logprob: -22.880233764648438
    9. '<count' → logprob: -23.130233764648438
    10. '_count' → logprob: -23.380233764648438

Token 338: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: ' class' (ID: 744)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' Output' (ID: 18315)
  Prédit: ' Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Output' → logprob: -1.2865289449691772
    2. 'Output' → logprob: -1.6615289449691772
    3. ' Runner' → logprob: -2.286529064178467
    4. ' Result' → logprob: -2.411529064178467
    5. 'Runner' → logprob: -2.661529064178467
    6. 'Result' → logprob: -2.786529064178467
    7. ' Tester' → logprob: -3.161529064178467
    8. ' Solution' → logprob: -3.661529064178467
    9. 'Tester' → logprob: -3.786529064178467
    10. ' Solver' → logprob: -4.036529064178467

Token 342: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.00017362393555231392
    2. ':' → logprob: -10.125173568725586
    3. 'Writer' → logprob: -10.500173568725586
    4. '_Handler' → logprob: -10.625173568725586
    5. 'Formatter' → logprob: -10.750173568725586
    6. 'andler' → logprob: -11.250173568725586
    7. 'ter' → logprob: -11.375173568725586
    8. 'handler' → logprob: -11.375173568725586
    9. 'Processor' → logprob: -11.875173568725586
    10. ':
' → logprob: -12.125173568725586

Token 343: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005250125657767057
    2. ':
' → logprob: -5.255249977111816
    3. '(' → logprob: -12.130249977111816
    4. '   ' → logprob: -12.755249977111816
    5. '):' → logprob: -12.755249977111816
    6. ':def' → logprob: -13.005249977111816
    7. ':

' → logprob: -14.505249977111816
    8. '():' → logprob: -14.630249977111816
    9. ' :' → logprob: -14.880249977111816
    10. 'def' → logprob: -15.005249977111816

Token 344: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1680978387594223
    2. '       ' → logprob: -1.9180978536605835
    3. 'def' → logprob: -4.918097972869873
    4. ' def' → logprob: -8.793097496032715
    5. '     ' → logprob: -9.793097496032715
    6. '    
' → logprob: -9.918097496032715
    7. '    ' → logprob: -9.918097496032715
    8. '   ' → logprob: -10.293097496032715
    9. '	def' → logprob: -10.418097496032715
    10. '```' → logprob: -10.418097496032715

Token 345: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.019606923684477806
    2. '   ' → logprob: -4.519607067108154
    3. ' def' → logprob: -4.769607067108154
    4. '@' → logprob: -10.519606590270996
    5. '       ' → logprob: -11.394606590270996
    6. ' ' → logprob: -15.144606590270996
    7. '	def' → logprob: -15.644606590270996
    8. ' @' → logprob: -15.894606590270996
    9. '    ' → logprob: -16.269607543945312
    10. '  ' → logprob: -16.894607543945312

Token 346: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.35403934121131897
    2. 'def' → logprob: -1.6040393114089966
    3. '__' → logprob: -3.104039430618286
    4. 'staticmethod' → logprob: -3.104039430618286
    5. ' __' → logprob: -6.229039192199707
    6. 'write' → logprob: -6.604039192199707
    7. 'print' → logprob: -6.729039192199707
    8. 'static' → logprob: -6.979039192199707
    9. 'format' → logprob: -7.229039192199707
    10. ' def' → logprob: -7.604039192199707

Token 347: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00525984913110733
    2. 'call' → logprob: -5.255259990692139
    3. 'def' → logprob: -10.63025951385498
    4. 'next' → logprob: -15.00525951385498
    5. 'print' → logprob: -15.00525951385498
    6. 'indent' → logprob: -15.25525951385498
    7. 'ini' → logprob: -15.63025951385498
    8. 'str' → logprob: -15.75525951385498
    9. 'del' → logprob: -16.130260467529297
    10. 'write' → logprob: -16.630260467529297

Token 348: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04885055124759674
    2. '(self' → logprob: -3.0488505363464355
    3. '__' → logprob: -8.548851013183594
    4. '_(' → logprob: -10.173851013183594
    5. '(' → logprob: -10.923851013183594
    6. '__(
' → logprob: -11.673851013183594
    7. 'self' → logprob: -13.548851013183594
    8. ' (' → logprob: -13.548851013183594
    9. '   ' → logprob: -14.298851013183594
    10. '_' → logprob: -15.048851013183594

Token 349: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00025954778539016843
    2. ')' → logprob: -8.750259399414062
    3. '):
' → logprob: -9.375259399414062
    4. '):' → logprob: -11.250259399414062
    5. ' self' → logprob: -13.750259399414062
    6. '   ' → logprob: -14.625259399414062
    7. '
' → logprob: -14.750259399414062
    8. '):

' → logprob: -14.875259399414062
    9. '(self' → logprob: -15.250259399414062
    10. '       ' → logprob: -15.375259399414062

Token 350: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5799247026443481
    2. '):
' → logprob: -0.8299247026443481
    3. ',' → logprob: -6.204924583435059
    4. 'self' → logprob: -6.329924583435059
    5. '):
' → logprob: -9.579924583435059
    6. '   ' → logprob: -10.329924583435059
    7. '(self' → logprob: -10.454924583435059
    8. ')' → logprob: -10.454924583435059
    9. ' ):' → logprob: -12.579924583435059
    10. ' self' → logprob: -12.704924583435059

Token 351: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07625049352645874
    2. '       ' → logprob: -2.7012505531311035
    3. 'def' → logprob: -5.9512505531311035
    4. '           ' → logprob: -6.0762505531311035
    5. ' self' → logprob: -7.4512505531311035
    6. '   ' → logprob: -7.8262505531311035
    7. '(self' → logprob: -8.201250076293945
    8. ' ' → logprob: -9.951250076293945
    9. ')' → logprob: -10.701250076293945
    10. '
' → logprob: -10.951250076293945

Token 352: ' self' (ID: 1051)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.11756601184606552
    2. 'self' (adapté à ' self') → logprob: -2.3675661087036133
    3. 'def' → logprob: -4.242566108703613
    4. '       ' → logprob: -6.492566108703613
    5. '           ' → logprob: -7.617566108703613
    6. ' pass' → logprob: -7.742566108703613
    7. '   ' → logprob: -7.992566108703613
    8. '
' → logprob: -10.742566108703613
    9. '	pass' → logprob: -10.992566108703613
    10. ')' → logprob: -12.242566108703613

Token 353: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.02843523398041725
    2. '.' → logprob: -3.778435230255127
    3. 'def' → logprob: -6.653435230255127
    4. '.data' → logprob: -6.778435230255127
    5. '.results' → logprob: -7.403435230255127
    6. '_' → logprob: -7.653435230255127
    7. 'data' → logprob: -7.903435230255127
    8. '_results' → logprob: -8.153435707092285
    9. '_data' → logprob: -8.278435707092285
    10. '   ' → logprob: -8.778435707092285

Token 354: 'results' (ID: 16570)
  Prédit: 'results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5896713733673096
    2. 'output' → logprob: -1.0896713733673096
    3. 'outputs' → logprob: -2.3396713733673096
    4. 'lines' → logprob: -4.5896711349487305
    5. 'result' → logprob: -6.8396711349487305
    6. 'buffer' → logprob: -7.0896711349487305
    7. 'data' → logprob: -7.3396711349487305
    8. 'out' → logprob: -9.96467113494873
    9. 'cache' → logprob: -10.58967113494873
    10. '_output' → logprob: -12.46467113494873

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4750325679779053
    2. '=' → logprob: -0.9750325679779053
    3. '=[]' → logprob: -6.975032806396484
    4. '<|end|>' → logprob: -11.850032806396484
    5. ')' → logprob: -12.600032806396484
    6. '.append' → logprob: -12.975032806396484
    7. '   ' → logprob: -13.100032806396484
    8. '=[]
' → logprob: -13.100032806396484
    9. ' ' → logprob: -14.600032806396484
    10. '[]' → logprob: -14.725032806396484

Token 356: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.9862216504407115e-05
    2. '[]
' → logprob: -11.000020027160645
    3. '[]

' → logprob: -12.750020027160645
    4. ' []' → logprob: -15.750020027160645
    5. '[' → logprob: -15.875020027160645
    6. '[]}' → logprob: -17.375019073486328
    7. '[]"' → logprob: -18.500019073486328
    8. '[])' → logprob: -19.250019073486328
    9. '[]>' → logprob: -19.625019073486328
    10. '{}' → logprob: -20.125019073486328

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008500047028064728
    2. '   ' → logprob: -5.133500099182129
    3. 'def' → logprob: -6.258500099182129
    4. '<|end|>' → logprob: -7.633500099182129
    5. '
' → logprob: -9.383500099182129
    6. ' def' → logprob: -10.258500099182129
    7. '        
' → logprob: -10.633500099182129
    8. '    
' → logprob: -11.508500099182129
    9. '	def' → logprob: -11.758500099182129
    10. '<|end|>' → logprob: -12.133500099182129

Token 358: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0012216555187478662
    2. '       ' → logprob: -7.251221656799316
    3. '   ' → logprob: -7.751221656799316
    4. ' def' → logprob: -9.626221656799316
    5. '
' → logprob: -11.501221656799316
    6. '	def' → logprob: -12.376221656799316
    7. ' ' → logprob: -14.126221656799316
    8. '        
' → logprob: -15.876221656799316
    9. '  ' → logprob: -16.001220703125
    10. '    
' → logprob: -16.876220703125

Token 359: ' collect' (ID: 7916)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.2633698284626007
    2. 'append' → logprob: -1.5133697986602783
    3. 'store' → logprob: -4.513370037078857
    4. 'write' → logprob: -8.7633695602417
    5. ' add' → logprob: -9.2633695602417
    6. 'record' → logprob: -9.7633695602417
    7. ' append' → logprob: -10.2633695602417
    8. 'process' → logprob: -10.5133695602417
    9. 'print' → logprob: -11.2633695602417
    10. ' store' → logprob: -11.6383695602417

Token 360: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7154838442802429
    2. '(self' → logprob: -0.8404838442802429
    3. '_result' → logprob: -2.8404839038848877
    4. '_results' → logprob: -3.9654839038848877
    5. '_data' → logprob: -6.965483665466309
    6. '_output' → logprob: -8.090483665466309
    7. '_' → logprob: -8.090483665466309
    8. '_input' → logprob: -8.965483665466309
    9. '(_' → logprob: -9.840483665466309
    10. '(results' → logprob: -9.965483665466309

Token 361: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04861314222216606
    2. '(' → logprob: -3.0486130714416504
    3. '(
' → logprob: -11.298613548278809
    4. ' (' → logprob: -11.298613548278809
    5. '       ' → logprob: -14.923613548278809
    6. '(s' → logprob: -15.423613548278809
    7. '   ' → logprob: -15.423613548278809
    8. 'self' → logprob: -16.423612594604492
    9. '(sel' → logprob: -17.173612594604492
    10. '(Self' → logprob: -17.173612594604492

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.392824874026701e-05
    2. ',value' → logprob: -10.75003433227539
    3. ',self' → logprob: -12.25003433227539
    4. ' ,' → logprob: -12.25003433227539
    5. 'self' → logprob: -13.00003433227539
    6. ',result' → logprob: -16.00003433227539
    7. ',s' → logprob: -16.62503433227539
    8. ',n' → logprob: -17.12503433227539
    9. '):' → logprob: -17.25003433227539
    10. ',data' → logprob: -17.37503433227539

Token 363: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4775366187095642
    2. 'n' → logprob: -1.102536678314209
    3. 'count' → logprob: -4.102536678314209
    4. 'value' → logprob: -4.227536678314209
    5. ' n' → logprob: -4.727536678314209
    6. ' result' → logprob: -5.102536678314209
    7. ' count' → logprob: -7.602536678314209
    8. ' value' → logprob: -7.727536678314209
    9. 'res' → logprob: -8.22753620147705
    10. 'self' → logprob: -8.35253620147705

Token 364: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3882693946361542
    2. '):
' → logprob: -1.1382694244384766
    3. ',' → logprob: -6.763269424438477
    4. ':' → logprob: -9.388269424438477
    5. '           ' → logprob: -9.888269424438477
    6. '(self' → logprob: -10.013269424438477
    7. '       ' → logprob: -11.263269424438477
    8. ')' → logprob: -11.263269424438477
    9. 'self' → logprob: -11.263269424438477
    10. '):
' → logprob: -11.763269424438477

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000241085872403346
    2. '               ' → logprob: -8.87524127960205
    3. ' self' → logprob: -9.62524127960205
    4. 'self' → logprob: -11.12524127960205
    5. '       ' → logprob: -11.25024127960205
    6. '   ' → logprob: -12.75024127960205
    7. '(self' → logprob: -13.25024127960205
    8. '```' → logprob: -14.12524127960205
    9. ',' → logprob: -14.37524127960205
    10. '                   ' → logprob: -14.87524127960205

Token 366: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10070984810590744
    2. ' self' → logprob: -2.350709915161133
    3. '           ' → logprob: -7.600709915161133
    4. '               ' → logprob: -13.350709915161133
    5. '   ' → logprob: -13.975709915161133
    6. '       ' → logprob: -15.100709915161133
    7. ' ' → logprob: -16.350709915161133
    8. '	self' → logprob: -16.725709915161133
    9. ' ' → logprob: -17.350709915161133
    10. '                   ' → logprob: -17.725709915161133

Token 367: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.226628895296017e-06
    2. '.' → logprob: -12.875007629394531
    3. '_results' → logprob: -13.500007629394531
    4. ' .' → logprob: -13.625007629394531
    5. '       ' → logprob: -14.000007629394531
    6. '           ' → logprob: -15.000007629394531
    7. '   ' → logprob: -15.125007629394531
    8. '_' → logprob: -15.625007629394531
    9. ')._' → logprob: -16.25000762939453
    10. '.__' → logprob: -16.87500762939453

Token 368: 'results' (ID: 16570)
  Prédit: 'results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.2664456789934775e-06
    2. '	results' → logprob: -14.375000953674316
    3. '_results' → logprob: -15.000000953674316
    4. ' results' → logprob: -15.500000953674316
    5. '(results' → logprob: -16.750001907348633
    6. 'data' → logprob: -17.375001907348633
    7. 'result' → logprob: -17.750001907348633
    8. '.results' → logprob: -18.000001907348633
    9. 'res' → logprob: -18.125001907348633
    10. '   ' → logprob: -19.625001907348633

Token 369: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033665422233752906
    2. '.' → logprob: -8.000336647033691
    3. '.app' → logprob: -14.250336647033691
    4. '.ap' → logprob: -15.500336647033691
    5. '.extend' → logprob: -15.750336647033691
    6. 'append' → logprob: -16.375337600708008
    7. ' .' → logprob: -16.500337600708008
    8. '.Append' → logprob: -17.250337600708008
    9. '.add' → logprob: -17.500337600708008
    10. '.push' → logprob: -19.125337600708008

Token 370: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00020663968462031335
    2. '(' → logprob: -8.50020694732666
    3. 'result' → logprob: -12.75020694732666
    4. '(results' → logprob: -16.500205993652344
    5. '(
' → logprob: -16.750205993652344
    6. '(res' → logprob: -17.250205993652344
    7. '(str' → logprob: -17.750205993652344
    8. '=result' → logprob: -18.250205993652344
    9. ' (' → logprob: -18.375205993652344
    10. '(f' → logprob: -18.500205993652344

Token 371: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027492138906382024
    2. '<|end|>' → logprob: -9.125274658203125
    3. '       ' → logprob: -9.375274658203125
    4. ')
' → logprob: -9.625274658203125
    5. ' )' → logprob: -12.000274658203125
    6. ')

' → logprob: -12.625274658203125
    7. '
' → logprob: -13.250274658203125
    8. '   ' → logprob: -13.750274658203125
    9. '           ' → logprob: -14.750274658203125
    10. '<|end|>' → logprob: -14.875274658203125

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21577569842338562
    2. '
' → logprob: -1.715775728225708
    3. 'def' → logprob: -5.090775489807129
    4. '   ' → logprob: -5.215775489807129
    5. '        
' → logprob: -6.465775489807129
    6. '<|end|>' → logprob: -7.090775489807129
    7. '    
' → logprob: -8.715775489807129
    8. '```' → logprob: -10.340775489807129
    9. ' def' → logprob: -10.465775489807129
    10. '	def' → logprob: -10.965775489807129

Token 373: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011373884975910187
    2. '       ' → logprob: -4.761373996734619
    3. ' def' → logprob: -6.261373996734619
    4. '
' → logprob: -7.136373996734619
    5. '   ' → logprob: -10.136373519897461
    6. '        
' → logprob: -11.886373519897461
    7. '	def' → logprob: -12.761373519897461
    8. '    
' → logprob: -13.636373519897461
    9. ' ' → logprob: -14.886373519897461
    10. ' 
' → logprob: -16.38637351989746

Token 374: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030270826071500778
    2. 'get' → logprob: -4.280271053314209
    3. 'display' → logprob: -4.530271053314209
    4. ' print' → logprob: -5.780271053314209
    5. 'output' → logprob: -6.530271053314209
    6. 'write' → logprob: -8.28027057647705
    7. ' display' → logprob: -8.53027057647705
    8. ' output' → logprob: -8.90527057647705
    9. ' get' → logprob: -9.78027057647705
    10. 'format' → logprob: -12.53027057647705

Token 375: '_results' (ID: 31049)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025901947170495987
    2. '()' → logprob: -4.400901794433594
    3. '_results' → logprob: -5.525901794433594
    4. '(' → logprob: -5.775901794433594
    5. 'self' → logprob: -5.775901794433594
    6. '_all' → logprob: -6.150901794433594
    7. '_' → logprob: -8.150901794433594
    8. '_self' → logprob: -9.025901794433594
    9. '(s' → logprob: -9.150901794433594
    10. 's' → logprob: -9.150901794433594

Token 376: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.861651490908116e-05
    2. '(' → logprob: -9.750068664550781
    3. 'self' → logprob: -12.000068664550781
    4. ' (' → logprob: -12.750068664550781
    5. '   ' → logprob: -14.125068664550781
    6. '       ' → logprob: -15.375068664550781
    7. '(
' → logprob: -16.12506866455078
    8. ' self' → logprob: -16.37506866455078
    9. 'def' → logprob: -17.25006866455078
    10. '(s' → logprob: -17.37506866455078

Token 377: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005409253761172295
    2. '):
' → logprob: -5.255409240722656
    3. 'self' → logprob: -9.005409240722656
    4. ')' → logprob: -10.005409240722656
    5. ' ):' → logprob: -12.255409240722656
    6. '):

' → logprob: -14.255409240722656
    7. '():' → logprob: -14.630409240722656
    8. '(self' → logprob: -14.630409240722656
    9. '   ' → logprob: -14.755409240722656
    10. '):
' → logprob: -15.005409240722656

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004375830467324704
    2. ' for' → logprob: -8.62543773651123
    3. 'for' → logprob: -8.62543773651123
    4. '       ' → logprob: -9.75043773651123
    5. '               ' → logprob: -11.37543773651123
    6. 'self' → logprob: -13.00043773651123
    7. '(self' → logprob: -13.12543773651123
    8. '	       ' → logprob: -14.00043773651123
    9. '          ' → logprob: -14.25043773651123
    10. '   ' → logprob: -14.25043773651123

Token 379: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0041271997615695
    2. ' for' → logprob: -5.504127025604248
    3. '           ' → logprob: -10.254127502441406
    4. '               ' → logprob: -11.254127502441406
    5. '       ' → logprob: -15.004127502441406
    6. '```' → logprob: -15.504127502441406
    7. '	for' → logprob: -16.879127502441406
    8. '   ' → logprob: -17.004127502441406
    9. 'print' → logprob: -17.879127502441406
    10. 'import' → logprob: -19.129127502441406

Token 380: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2766343951225281
    2. 'res' → logprob: -1.5266344547271729
    3. ' result' → logprob: -4.026634216308594
    4. ' res' → logprob: -5.026634216308594
    5. 'r' → logprob: -12.026634216308594
    6. '   ' → logprob: -13.651634216308594
    7. ' r' → logprob: -15.026634216308594
    8. '       ' → logprob: -16.526634216308594
    9. '	result' → logprob: -17.776634216308594
    10. ' ' → logprob: -18.151634216308594

Token 381: ' in' (ID: 306)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.004610980395227671
    2. ' in' → logprob: -6.254611015319824
    3. '   ' → logprob: -7.379611015319824
    4. 'u' → logprob: -7.379611015319824
    5. 'ut' → logprob: -8.379611015319824
    6. ' ult' → logprob: -8.504611015319824
    7. 't' → logprob: -9.004611015319824
    8. '       ' → logprob: -9.129611015319824
    9. '           ' → logprob: -9.254611015319824
    10. 'ul' → logprob: -9.254611015319824

Token 382: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009139667963609099
    2. ' self' → logprob: -7.000914096832275
    3. '           ' → logprob: -13.750913619995117
    4. '   ' → logprob: -14.250913619995117
    5. '       ' → logprob: -14.750913619995117
    6. '(self' → logprob: -15.000913619995117
    7. '
' → logprob: -17.250913619995117
    8. '               ' → logprob: -18.000913619995117
    9. '	self' → logprob: -18.000913619995117
    10. '    ' → logprob: -18.500913619995117

Token 383: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -16.125
    3. ' .' → logprob: -16.875
    4. '   ' → logprob: -17.375
    5. '.__' → logprob: -17.875
    6. '._
' → logprob: -18.125
    7. '_' → logprob: -19.0
    8. '       ' → logprob: -19.5
    9. '_output' → logprob: -19.75
    10. '.\' → logprob: -20.125

Token 384: 'results' (ID: 16570)
  Prédit: 'results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.10025455802679062
    2. '_results' → logprob: -2.350254535675049
    3. '.results' → logprob: -10.100255012512207
    4. ' results' → logprob: -13.225255012512207
    5. 'res' → logprob: -13.350255012512207
    6. '	results' → logprob: -14.100255012512207
    7. '._' → logprob: -14.600255012512207
    8. 'Results' → logprob: -14.975255012512207
    9. 'r' → logprob: -15.225255012512207
    10. 'output' → logprob: -15.350255012512207

Token 385: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3345116078853607
    2. '               ' → logprob: -1.959511637687683
    3. ':' → logprob: -2.5845115184783936
    4. ':
' → logprob: -2.8345115184783936
    5. 'print' → logprob: -5.084511756896973
    6. ' print' → logprob: -6.209511756896973
    7. ',' → logprob: -7.709511756896973
    8. '   ' → logprob: -8.584511756896973
    9. '       ' → logprob: -9.584511756896973
    10. '.print' → logprob: -9.709511756896973

Token 386: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6218801736831665
    2. 'print' → logprob: -0.8718801736831665
    3. '           ' → logprob: -3.246880054473877
    4. ' print' → logprob: -5.121880054473877
    5. '   ' → logprob: -10.871880531311035
    6. '       ' → logprob: -11.871880531311035
    7. '```' → logprob: -12.871880531311035
    8. '	           ' → logprob: -12.996880531311035
    9. '	print' → logprob: -13.121880531311035
    10. '                   ' → logprob: -13.121880531311035

Token 387: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007141007808968425
    2. ' print' → logprob: -7.250714302062988
    3. '               ' → logprob: -12.625714302062988
    4. '                   ' → logprob: -14.375714302062988
    5. '   ' → logprob: -15.875714302062988
    6. '           ' → logprob: -16.375713348388672
    7. '```' → logprob: -16.625713348388672
    8. '       ' → logprob: -18.750713348388672
    9. '	print' → logprob: -19.125713348388672
    10. '                       ' → logprob: -20.750713348388672

Token 388: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.004110103938728571
    2. 'res' → logprob: -5.504110336303711
    3. '(' → logprob: -10.879110336303711
    4. '(f' → logprob: -11.504110336303711
    5. '()' → logprob: -13.629110336303711
    6. ' res' → logprob: -14.504110336303711
    7. 'f' → logprob: -15.129110336303711
    8. '(str' → logprob: -15.129110336303711
    9. '$res' → logprob: -16.00411033630371
    10. '("' → logprob: -16.12911033630371

Token 389: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. '()' → logprob: -11.875012397766113
    3. '())' → logprob: -12.500012397766113
    4. ')
' → logprob: -13.625012397766113
    5. ' )' → logprob: -15.000012397766113
    6. ')`' → logprob: -17.12501335144043
    7. '))' → logprob: -17.87501335144043
    8. '       ' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '')' → logprob: -18.50001335144043

Token 390: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05613935366272926
    2. 'if' → logprob: -3.0561394691467285
    3. '   ' → logprob: -4.9311394691467285
    4. '```' → logprob: -8.80613899230957
    5. 'class' → logprob: -9.55613899230957
    6. ' if' → logprob: -10.93113899230957
    7. '    
' → logprob: -10.93113899230957
    8. ' def' → logprob: -11.05613899230957
    9. 'sum' → logprob: -11.43113899230957
    10. '#' → logprob: -11.43113899230957

Token 391: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00016897499153856188
    2. 'main' → logprob: -9.125168800354004
    3. ' run' → logprob: -9.750168800354004
    4. ' sum' → logprob: -14.500168800354004
    5. ' solve' → logprob: -14.625168800354004
    6. '	main' → logprob: -15.125168800354004
    7. '_main' → logprob: -15.750168800354004
    8. ' process' → logprob: -15.875168800354004
    9. ' solution' → logprob: -17.37516975402832
    10. ' test' → logprob: -17.62516975402832

Token 392: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1160349458805285e-05
    2. '():
' → logprob: -11.625011444091797
    3. ' ():' → logprob: -13.125011444091797
    4. '()' → logprob: -15.750011444091797
    5. '():
' → logprob: -17.375011444091797
    6. '(' → logprob: -18.000011444091797
    7. '_' → logprob: -18.625011444091797
    8. '().' → logprob: -19.000011444091797
    9. ':' → logprob: -19.500011444091797
    10. '(":' → logprob: -20.250011444091797

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011482899077236652
    2. ' input' → logprob: -5.0114827156066895
    3. ' ih' → logprob: -5.6364827156066895
    4. ' handler' → logprob: -7.5114827156066895
    5. 'input' → logprob: -8.136483192443848
    6. 'ih' → logprob: -8.261483192443848
    7. '   ' → logprob: -10.386483192443848
    8. 'handler' → logprob: -10.511483192443848
    9. ' inputs' → logprob: -11.136483192443848
    10. ' ioh' → logprob: -12.261483192443848

Token 394: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.2772662937641144
    2. ' input' → logprob: -1.902266263961792
    3. '   ' → logprob: -3.152266263961792
    4. 'handler' → logprob: -3.277266263961792
    5. 'ih' → logprob: -4.652266502380371
    6. ' handler' → logprob: -6.277266502380371
    7. ' ih' → logprob: -7.402266502380371
    8. 'inputs' → logprob: -9.027266502380371
    9. 'inp' → logprob: -9.527266502380371
    10. ' ioh' → logprob: -10.152266502380371

Token 395: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.0001968649885384366
    2. '_data' → logprob: -9.37519645690918
    3. 'Handler' → logprob: -10.50019645690918
    4. '_' → logprob: -10.62519645690918
    5. 'handler' → logprob: -10.87519645690918
    6. 's' → logprob: -11.00019645690918
    7. '_reader' → logprob: -12.37519645690918
    8. '_handle' → logprob: -12.50019645690918
    9. '_instance' → logprob: -12.62519645690918
    10. '_h' → logprob: -12.87519645690918

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038047123700380325
    2. '=' → logprob: -3.2880470752716064
    3. '   ' → logprob: -12.163046836853027
    4. ' ' → logprob: -15.413046836853027
    5. '  ' → logprob: -16.038047790527344
    6. '()' → logprob: -16.163047790527344
    7. '    ' → logprob: -17.038047790527344
    8. ' =
' → logprob: -17.163047790527344
    9. '=input' → logprob: -18.038047790527344
    10. '	' → logprob: -18.163047790527344

Token 397: ' Sum' (ID: 34138)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -6.704273118884885e-07
    2. ' Sum' → logprob: -14.250000953674316
    3. 'Summ' → logprob: -18.625
    4. '   ' → logprob: -21.625
    5. 'Input' → logprob: -23.875
    6. 'S' → logprob: -24.0
    7. '_sum' → logprob: -24.125
    8. ' ' → logprob: -24.5
    9. 'Code' → logprob: -24.75
    10. 'Data' → logprob: -24.875

Token 398: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -7.941850526549388e-06
    2. ' Of' → logprob: -11.750007629394531
    3. 'O' → logprob: -18.12500762939453
    4. 'of' → logprob: -18.37500762939453
    5. '_of' → logprob: -18.50000762939453
    6. '(Of' → logprob: -18.50000762939453
    7. ' of' → logprob: -18.75000762939453
    8. '[' → logprob: -20.50000762939453
    9. '   ' → logprob: -21.62500762939453
    10. '_OF' → logprob: -22.12500762939453

Token 399: 'Con' (ID: 909)
  Prédit: 'Con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Con' → logprob: -3.128163257315464e-07
    2. 'con' → logprob: -15.625
    3. '_con' → logprob: -16.125
    4. ' Con' → logprob: -18.875
    5. '-Con' → logprob: -19.0
    6. 'C' → logprob: -20.125
    7. 'Concurrent' → logprob: -20.625
    8. '.Con' → logprob: -21.125
    9. 'Cong' → logprob: -21.25
    10. '```' → logprob: -21.375

Token 400: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -7.822646693966817e-06
    2. 's' → logprob: -12.375007629394531
    3. 'se' → logprob: -13.000007629394531
    4. 'ecut' → logprob: -14.750007629394531
    5. 't' → logprob: -15.000007629394531
    6. 'sec' → logprob: -15.125007629394531
    7. 'secut' → logprob: -16.87500762939453
    8. 'sect' → logprob: -16.87500762939453
    9. 'e' → logprob: -17.25000762939453
    10. 'cut' → logprob: -17.37500762939453

Token 401: 'Inte' (ID: 113498)
  Prédit: 'Inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Inte' → logprob: -1.0564331205387134e-05
    2. 'Ints' → logprob: -12.00001049041748
    3. ' Inte' → logprob: -12.50001049041748
    4. 'Int' → logprob: -15.50001049041748
    5. 'inte' → logprob: -15.62501049041748
    6. 'Integer' → logprob: -16.625011444091797
    7. ' integers' → logprob: -17.625011444091797
    8. '   ' → logprob: -18.375011444091797
    9. '_' → logprob: -19.625011444091797
    10. '```' → logprob: -19.625011444091797

Token 402: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -2.7491250875755213e-05
    2. 'ers' → logprob: -10.625027656555176
    3. 'gr' → logprob: -13.875027656555176
    4. 'ger' → logprob: -13.875027656555176
    5. 't' → logprob: -14.625027656555176
    6. 'g' → logprob: -14.625027656555176
    7. 'ts' → logprob: -16.25002670288086
    8. 'te' → logprob: -17.00002670288086
    9. 'ters' → logprob: -17.25002670288086
    10. 'rs' → logprob: -17.62502670288086

Token 403: '.Input' (ID: 22638)
  Prédit: '.Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Input' → logprob: -0.0008211841923184693
    2. '().' → logprob: -7.750821113586426
    3. '.' → logprob: -8.125821113586426
    4. 'Input' → logprob: -9.750821113586426
    5. ' .' → logprob: -11.000821113586426
    6. '()' → logprob: -11.750821113586426
    7. '.Output' → logprob: -13.125821113586426
    8. '.I' → logprob: -13.125821113586426
    9. '   ' → logprob: -13.375821113586426
    10. '<Input' → logprob: -13.375821113586426

Token 404: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.9361264946837764e-07
    2. '_Handler' → logprob: -16.125
    3. '_handler' → logprob: -17.0
    4. '_HANDLER' → logprob: -19.625
    5. 'handler' → logprob: -19.75
    6. '.Handler' → logprob: -21.0
    7. ' Handler' → logprob: -21.5
    8. 'Handlers' → logprob: -23.625
    9. 'andler' → logprob: -24.375
    10. 'Handling' → logprob: -25.0

Token 405: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002661266131326556
    2. '()
' → logprob: -6.002661228179932
    3. '   ' → logprob: -8.62766170501709
    4. '()
' → logprob: -12.87766170501709
    5. '().' → logprob: -13.87766170501709
    6. '(' → logprob: -14.12766170501709
    7. '()

' → logprob: -14.25266170501709
    8. '()`' → logprob: -15.12766170501709
    9. '();' → logprob: -15.25266170501709
    10. '()\' → logprob: -15.37766170501709

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023333527147769928
    2. 'input' → logprob: -3.7733335494995117
    3. ' input' → logprob: -9.398333549499512
    4. '    
' → logprob: -13.648333549499512
    5. '  ' → logprob: -13.898333549499512
    6. '
' → logprob: -14.398333549499512
    7. ' ' → logprob: -14.523333549499512
    8. 'while' → logprob: -14.898333549499512
    9. '	input' → logprob: -15.148333549499512
    10. 'data' → logprob: -15.398333549499512

Token 407: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.002585408743470907
    2. '   ' → logprob: -6.002585411071777
    3. ' input' → logprob: -9.252585411071777
    4. 'output' → logprob: -12.127585411071777
    5. 'while' → logprob: -12.252585411071777
    6. 'for' → logprob: -14.127585411071777
    7. 'con' → logprob: -14.252585411071777
    8. '	input' → logprob: -14.627585411071777
    9. 'data' → logprob: -15.127585411071777
    10. '    
' → logprob: -15.502585411071777

Token 408: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -6.2729995988775045e-06
    2. 'handler' → logprob: -13.625006675720215
    3. '_handle' → logprob: -13.875006675720215
    4. '_Handler' → logprob: -14.000006675720215
    5. '_' → logprob: -14.250006675720215
    6. 'Handler' → logprob: -14.250006675720215
    7. '   ' → logprob: -14.500006675720215
    8. '_controller' → logprob: -15.250006675720215
    9. '_handlers' → logprob: -15.250006675720215
    10. '_data' → logprob: -15.500006675720215

Token 409: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -13.625000953674316
    3. 'read' → logprob: -17.500001907348633
    4. ' .' → logprob: -19.000001907348633
    5. '.readline' → logprob: -19.250001907348633
    6. '.write' → logprob: -19.375001907348633
    7. '.run' → logprob: -20.250001907348633
    8. '._' → logprob: -20.375001907348633
    9. '.readlines' → logprob: -21.375001907348633
    10. '.load' → logprob: -21.375001907348633

Token 410: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -9.014684110297821e-06
    2. '_' → logprob: -12.000008583068848
    3. '_line' → logprob: -14.500008583068848
    4. ' _' → logprob: -14.500008583068848
    5. '_output' → logprob: -14.750008583068848
    6. '()' → logprob: -14.875008583068848
    7. '_in' → logprob: -14.875008583068848
    8. '_inputs' → logprob: -15.500008583068848
    9. ')_' → logprob: -16.125009536743164
    10. '```' → logprob: -16.250009536743164

Token 411: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023253517225384712
    2. '()
' → logprob: -3.7732534408569336
    3. '   ' → logprob: -12.398253440856934
    4. '()
' → logprob: -13.023253440856934
    5. '()

' → logprob: -13.648253440856934
    6. '()\' → logprob: -15.773253440856934
    7. ' ()' → logprob: -15.898253440856934
    8. '()`' → logprob: -16.39825439453125
    9. '(' → logprob: -16.52325439453125
    10. '())' → logprob: -17.27325439453125

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036897400859743357
    2. 'output' → logprob: -6.503689765930176
    3. ' output' → logprob: -6.503689765930176
    4. ' for' → logprob: -8.128689765930176
    5. '
' → logprob: -8.628689765930176
    6. '    
' → logprob: -9.753689765930176
    7. 'for' → logprob: -10.378689765930176
    8. 'con' → logprob: -10.378689765930176
    9. ' results' → logprob: -10.628689765930176
    10. 'outputs' → logprob: -11.128689765930176

Token 413: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.13080988824367523
    2. 'for' → logprob: -2.380809783935547
    3. ' output' → logprob: -4.005809783935547
    4. '   ' → logprob: -4.880809783935547
    5. ' for' → logprob: -5.505809783935547
    6. 'while' → logprob: -8.880809783935547
    7. 'counter' → logprob: -10.130809783935547
    8. 'results' → logprob: -10.505809783935547
    9. 'outputs' → logprob: -10.880809783935547
    10. 'input' → logprob: -11.505809783935547

Token 414: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.5048530030981055e-06
    2. 'Handler' → logprob: -14.750001907348633
    3. '_handle' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.000001907348633
    5. '_Handler' → logprob: -15.750001907348633
    6. 'handler' → logprob: -15.875001907348633
    7. '_' → logprob: -16.625001907348633
    8. '_output' → logprob: -16.875001907348633
    9. '_HANDLER' → logprob: -17.375001907348633
    10. '_controller' → logprob: -17.875001907348633

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861468818038702
    2. '=' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.008615493774414
    4. ' ' → logprob: -17.133615493774414
    5. ' =
' → logprob: -18.383615493774414
    6. '    ' → logprob: -19.258615493774414
    7. ' ' → logprob: -19.383615493774414
    8. '```' → logprob: -19.508615493774414
    9. '  ' → logprob: -20.133615493774414
    10. '	' → logprob: -20.258615493774414

Token 416: ' Sum' (ID: 34138)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.5759395360946655
    2. ' Sum' → logprob: -0.8259395360946655
    3. 'Summ' → logprob: -17.450939178466797
    4. '   ' → logprob: -17.450939178466797
    5. ' sum' → logprob: -17.575939178466797
    6. ' ' → logprob: -17.950939178466797
    7. '	S' → logprob: -18.075939178466797
    8. '_sum' → logprob: -19.325939178466797
    9. 'S' → logprob: -19.450939178466797
    10. ' Summ' → logprob: -19.825939178466797

Token 417: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -6.630610641877865e-06
    2. ' Of' → logprob: -12.000006675720215
    3. '(Of' → logprob: -15.500006675720215
    4. ' of' → logprob: -16.0000057220459
    5. 'O' → logprob: -17.3750057220459
    6. '=' → logprob: -18.8750057220459
    7. '   ' → logprob: -19.1250057220459
    8. '[' → logprob: -19.3750057220459
    9. 'of' → logprob: -19.6250057220459
    10. '_of' → logprob: -19.7500057220459

Token 418: 'Con' (ID: 909)
  Prédit: 'Con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Con' → logprob: -0.002225787378847599
    2. 'Sum' → logprob: -6.127225875854492
    3. '(S' → logprob: -10.377225875854492
    4. 'con' → logprob: -12.002225875854492
    5. 'Cons' → logprob: -13.877225875854492
    6. 'С' → logprob: -14.377225875854492
    7. 'Summ' → logprob: -14.502225875854492
    8. 'S' → logprob: -15.002225875854492
    9. '_con' → logprob: -15.127225875854492
    10. '_S' → logprob: -15.877225875854492

Token 419: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.0005099030095152557
    2. 'secut' → logprob: -7.750509738922119
    3. 's' → logprob: -10.000510215759277
    4. 'se' → logprob: -11.125510215759277
    5. 'Handler' → logprob: -11.625510215759277
    6. 'handler' → logprob: -12.500510215759277
    7. 'ecut' → logprob: -12.875510215759277
    8. 'cut' → logprob: -13.375510215759277
    9. 't' → logprob: -14.125510215759277
    10. 'sec' → logprob: -15.500510215759277

Token 420: 'Inte' (ID: 113498)
  Prédit: 'Inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Inte' → logprob: -1.5094070477061905e-05
    2. 'Ints' → logprob: -11.750015258789062
    3. 'inte' → logprob: -12.500015258789062
    4. 'Int' → logprob: -13.750015258789062
    5. ' Inte' → logprob: -13.875015258789062
    6. 'Sum' → logprob: -14.000015258789062
    7. 'Handler' → logprob: -15.375015258789062
    8. 'Integer' → logprob: -15.375015258789062
    9. 'Numbers' → logprob: -16.375015258789062
    10. ' integers' → logprob: -17.125015258789062

Token 421: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.053993016481399536
    2. 'nts' → logprob: -3.053992986679077
    3. 'ts' → logprob: -6.053993225097656
    4. 'gr' → logprob: -6.303993225097656
    5. 'ger' → logprob: -7.178993225097656
    6. 't' → logprob: -9.053993225097656
    7. 'ters' → logprob: -9.303993225097656
    8. 'tes' → logprob: -9.303993225097656
    9. 'ers' → logprob: -9.803993225097656
    10. 'nt' → logprob: -10.678993225097656

Token 422: '.Output' (ID: 52068)
  Prédit: '.Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Output' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -12.500004768371582
    3. ' .' → logprob: -14.625004768371582
    4. 'Output' → logprob: -15.250004768371582
    5. '().' → logprob: -15.750004768371582
    6. '(Output' → logprob: -18.125003814697266
    7. '.output' → logprob: -19.125003814697266
    8. '.Input' → logprob: -19.250003814697266
    9. '.Out' → logprob: -19.625003814697266
    10. '   ' → logprob: -19.875003814697266

Token 423: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. '_handler' → logprob: -17.0
    3. '_Handler' → logprob: -18.375
    4. ' Handler' → logprob: -20.75
    5. 'handler' → logprob: -20.875
    6. '_HANDLER' → logprob: -20.875
    7. 'andler' → logprob: -21.0
    8. '.Handler' → logprob: -21.875
    9. '-handler' → logprob: -23.375
    10. 'Handle' → logprob: -23.5

Token 424: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012942852918058634
    2. 'for' → logprob: -7.251294136047363
    3. '
' → logprob: -8.001294136047363
    4. '    
' → logprob: -8.876294136047363
    5. ' for' → logprob: -9.126294136047363
    6. ' 
' → logprob: -15.751294136047363
    7. '  
' → logprob: -16.00129508972168
    8. '   
' → logprob: -16.00129508972168
    9. '        
' → logprob: -16.25129508972168
    10. '```' → logprob: -17.12629508972168

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018479427322745323
    2. 'for' → logprob: -4.018479347229004
    3. ' for' → logprob: -8.018479347229004
    4. '    
' → logprob: -16.01848030090332
    5. '
' → logprob: -17.01848030090332
    6. '```' → logprob: -17.39348030090332
    7. '	for' → logprob: -18.51848030090332
    8. '       ' → logprob: -18.89348030090332
    9. '  ' → logprob: -18.89348030090332
    10. '   ' → logprob: -19.51848030090332

Token 426: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.0484450437361374e-05
    2. ' for' → logprob: -11.000040054321289
    3. 'data' → logprob: -11.000040054321289
    4. '   ' → logprob: -11.875040054321289
    5. 'while' → logprob: -17.87504005432129
    6. 'numbers' → logprob: -18.25004005432129
    7. '	for' → logprob: -18.62504005432129
    8. '    
' → logprob: -19.00004005432129
    9. '```' → logprob: -19.37504005432129
    10. '
' → logprob: -19.50004005432129

Token 427: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7597127556800842
    2. ' n' → logprob: -1.0097126960754395
    3. ' value' → logprob: -2.5097126960754395
    4. 'value' → logprob: -2.7597126960754395
    5. 'num' → logprob: -4.7597126960754395
    6. ' number' → logprob: -5.0097126960754395
    7. 'number' → logprob: -5.7597126960754395
    8. ' num' → logprob: -5.7597126960754395
    9. 'data' → logprob: -7.3847126960754395
    10. ' data' → logprob: -7.3847126960754395

Token 428: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001930420519784093
    2. 'in' → logprob: -6.251930236816406
    3. ' ' → logprob: -14.251930236816406
    4. '_in' → logprob: -15.001930236816406
    5. '   ' → logprob: -15.376930236816406
    6. 'n' → logprob: -16.251930236816406
    7. '	in' → logprob: -16.626930236816406
    8. ' i' → logprob: -16.876930236816406
    9. '_' → logprob: -17.001930236816406
    10. '  ' → logprob: -17.001930236816406

Token 429: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029750484973192215
    2. ' input' → logprob: -3.5297505855560303
    3. 'Input' → logprob: -17.90475082397461
    4. '(input' → logprob: -17.90475082397461
    5. '	input' → logprob: -18.27975082397461
    6. '<input' → logprob: -18.52975082397461
    7. 'output' → logprob: -18.65475082397461
    8. '=input' → logprob: -19.02975082397461
    9. '[input' → logprob: -19.15475082397461
    10. ' ' → logprob: -19.40475082397461

Token 430: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -2.856408536899835e-05
    2. 'handler' → logprob: -11.000028610229492
    3. '_' → logprob: -11.875028610229492
    4. '_hand' → logprob: -13.125028610229492
    5. '   ' → logprob: -13.875028610229492
    6. '(_' → logprob: -14.500028610229492
    7. '_HANDLER' → logprob: -15.000028610229492
    8. '(handler' → logprob: -15.875028610229492
    9. 's' → logprob: -16.000028610229492
    10. '_handle' → logprob: -16.125028610229492

Token 431: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.125000953674316
    3. ' .' → logprob: -14.625000953674316
    4. '().' → logprob: -17.625001907348633
    5. '   ' → logprob: -18.125001907348633
    6. 'get' → logprob: -19.000001907348633
    7. '._' → logprob: -20.000001907348633
    8. '.
' → logprob: -20.625001907348633
    9. '  ' → logprob: -20.750001907348633
    10. ').' → logprob: -22.000001907348633

Token 432: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. 'data' → logprob: -18.0
    4. '_input' → logprob: -18.25
    5. ' _' → logprob: -19.0
    6. '(_' → logprob: -19.875
    7. '()' → logprob: -19.875
    8. '   ' → logprob: -19.875
    9. '```' → logprob: -19.875
    10. '_n' → logprob: -20.75

Token 433: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014447420835494995
    2. '():' → logprob: -4.264447212219238
    3. ':
' → logprob: -8.764447212219238
    4. '):' → logprob: -9.889447212219238
    5. '():
' → logprob: -9.889447212219238
    6. ' :' → logprob: -10.639447212219238
    7. '   ' → logprob: -13.764447212219238
    8. ' ():' → logprob: -14.264447212219238
    9. '):
' → logprob: -15.264447212219238
    10. '()' → logprob: -15.639447212219238

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1875571544806007e-05
    2. 'con' → logprob: -12.250011444091797
    3. '   ' → logprob: -13.250011444091797
    4. 'output' → logprob: -14.000011444091797
    5. 'counter' → logprob: -14.250011444091797
    6. '```' → logprob: -14.250011444091797
    7. ' result' → logprob: -14.500011444091797
    8. ' output' → logprob: -14.625011444091797
    9. ' counter' → logprob: -15.000011444091797
    10. 'count' → logprob: -15.125011444091797

Token 435: ' counter' (ID: 9446)
  Prédit: ' counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.3613065779209137
    2. 'counter' (adapté à ' counter') → logprob: -1.2363065481185913
    3. '       ' → logprob: -4.861306667327881
    4. 'count' → logprob: -5.986306667327881
    5. 'con' → logprob: -6.986306667327881
    6. ' count' → logprob: -7.486306667327881
    7. ' result' → logprob: -7.611306667327881
    8. '   ' → logprob: -8.361306190490723
    9. 'result' → logprob: -8.861306190490723
    10. ' ways' → logprob: -9.611306190490723

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024780353996902704
    2. '=' → logprob: -6.002478122711182
    3. '        ' → logprob: -14.127477645874023
    4. '   ' → logprob: -14.377477645874023
    5. '    ' → logprob: -14.877477645874023
    6. ' ' → logprob: -15.377477645874023
    7. ' =
' → logprob: -15.627477645874023
    8. '       ' → logprob: -15.627477645874023
    9. '           ' → logprob: -17.752477645874023
    10. '```' → logprob: -17.752477645874023

Token 437: ' Sum' (ID: 34138)
  Prédit: 'Sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.011050417087972164
    2. ' Sum' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.0110502243042
    4. ' sum' → logprob: -15.8860502243042
    5. 'Summ' → logprob: -16.136051177978516
    6. ' ' → logprob: -16.886051177978516
    7. 'sum' → logprob: -17.011051177978516
    8. '.Sum' → logprob: -17.636051177978516
    9. '    ' → logprob: -17.761051177978516
    10. '_sum' → logprob: -17.761051177978516

Token 438: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: 0.0
    2. ' Of' → logprob: -18.375
    3. '(Of' → logprob: -19.75
    4. 'of' → logprob: -20.125
    5. '_of' → logprob: -21.75
    6. ' of' → logprob: -22.125
    7. 'O' → logprob: -22.25
    8. '   ' → logprob: -23.125
    9. 'Con' → logprob: -23.625
    10. '.Of' → logprob: -24.125

Token 439: 'Con' (ID: 909)
  Prédit: 'Con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Con' → logprob: -4.008129963040119e-06
    2. 'con' → logprob: -13.500003814697266
    3. '_con' → logprob: -13.500003814697266
    4. 'Of' → logprob: -14.125003814697266
    5. ' Con' → logprob: -16.125003814697266
    6. '-Con' → logprob: -16.250003814697266
    7. '.Con' → logprob: -17.125003814697266
    8. 'Sum' → logprob: -17.250003814697266
    9. 'С' → logprob: -17.375003814697266
    10. 'C' → logprob: -17.750003814697266

Token 440: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.01721850037574768
    2. 'ecut' → logprob: -4.142218589782715
    3. 'ec' → logprob: -6.892218589782715
    4. 'es' → logprob: -9.892218589782715
    5. 's' → logprob: -10.392218589782715
    6. 'e' → logprob: -10.517218589782715
    7. 'se' → logprob: -11.017218589782715
    8. 'cut' → logprob: -11.392218589782715
    9. 't' → logprob: -11.642218589782715
    10. 'sec' → logprob: -12.642218589782715

Token 441: 'Inte' (ID: 113498)
  Prédit: 'Inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Inte' → logprob: -1.306760805164231e-05
    2. 'Ints' → logprob: -11.37501335144043
    3. 'inte' → logprob: -14.37501335144043
    4. 'Int' → logprob: -14.75001335144043
    5. 'Of' → logprob: -15.12501335144043
    6. 'Con' → logprob: -16.50001335144043
    7. 'Integer' → logprob: -16.62501335144043
    8. ' Inte' → logprob: -17.25001335144043
    9. 'In' → logprob: -17.50001335144043
    10. 'I' → logprob: -19.25001335144043

Token 442: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -8.2994620242971e-06
    2. 'ers' → logprob: -12.000008583068848
    3. 'gr' → logprob: -13.750008583068848
    4. 'ger' → logprob: -14.375008583068848
    5. 'g' → logprob: -14.875008583068848
    6. 'rs' → logprob: -17.25000762939453
    7. 'als' → logprob: -18.50000762939453
    8. 'gres' → logprob: -19.50000762939453
    9. 'ters' → logprob: -19.50000762939453
    10. 'ans' → logprob: -19.62500762939453

Token 443: '.Con' (ID: 29129)
  Prédit: '.Con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Con' → logprob: -0.0022919215261936188
    2. 'Con' → logprob: -6.127292156219482
    3. '.' → logprob: -9.627291679382324
    4. '   ' → logprob: -10.627291679382324
    5. '.Counter' → logprob: -11.627291679382324
    6. ' .' → logprob: -12.252291679382324
    7. '.Concurrent' → logprob: -13.877291679382324
    8. '().' → logprob: -14.752291679382324
    9. ' ' → logprob: -15.252291679382324
    10. '(' → logprob: -15.377291679382324

Token 444: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -8.77627644513268e-06
    2. 's' → logprob: -12.375008583068848
    3. 'ecut' → logprob: -13.000008583068848
    4. 'se' → logprob: -13.875008583068848
    5. 'secut' → logprob: -13.875008583068848
    6. 'sec' → logprob: -15.125008583068848
    7. 'sect' → logprob: -16.625009536743164
    8. 'cut' → logprob: -16.625009536743164
    9. 't' → logprob: -18.125009536743164
    10. 'ce' → logprob: -19.000009536743164

Token 445: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -6.392202976712724e-06
    2. 'sum' → logprob: -12.250006675720215
    3. '_sum' → logprob: -13.750006675720215
    4. 'S' → logprob: -15.625006675720215
    5. ' sum' → logprob: -16.2500057220459
    6. ' Sum' → logprob: -17.0000057220459
    7. 'Summ' → logprob: -17.2500057220459
    8. 'SUM' → logprob: -18.1250057220459
    9. '   ' → logprob: -18.1250057220459
    10. 's' → logprob: -18.2500057220459

Token 446: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -1.5048530030981055e-06
    2. 'ounter' → logprob: -13.875001907348633
    3. 'counter' → logprob: -15.500001907348633
    4. 'Count' → logprob: -15.500001907348633
    5. '       ' → logprob: -16.625001907348633
    6. '_counter' → logprob: -17.625001907348633
    7. ' Counter' → logprob: -17.750001907348633
    8. 'Coun' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.875001907348633
    10. '.Counter' → logprob: -18.875001907348633

Token 447: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.875000953674316
    3. '       ' → logprob: -15.250000953674316
    4. '(
' → logprob: -16.250001907348633
    5. 'n' → logprob: -17.250001907348633
    6. ' (' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '        
' → logprob: -19.750001907348633
    9. ')(' → logprob: -19.875001907348633
    10. '           ' → logprob: -20.000001907348633

Token 448: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4816272258758545
    2. ')' → logprob: -0.9816272258758545
    3. '       ' → logprob: -5.106627464294434
    4. ').' → logprob: -6.731627464294434
    5. '   ' → logprob: -9.231627464294434
    6. '()
' → logprob: -9.606627464294434
    7. ')
' → logprob: -9.981627464294434
    8. '())
' → logprob: -10.481627464294434
    9. '           ' → logprob: -11.481627464294434
    10. '()' → logprob: -11.606627464294434

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06950660794973373
    2. 'count' → logprob: -3.3195066452026367
    3. 'result' → logprob: -3.6945066452026367
    4. ' result' → logprob: -5.319506645202637
    5. ' count' → logprob: -6.819506645202637
    6. 'results' → logprob: -9.944506645202637
    7. '   ' → logprob: -10.194506645202637
    8. 'counter' → logprob: -11.569506645202637
    9. ' results' → logprob: -11.819506645202637
    10. '```' → logprob: -12.194506645202637

Token 450: ' ways' (ID: 6984)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04794750362634659
    2. 'count' → logprob: -3.547947406768799
    3. ' result' → logprob: -4.297947406768799
    4. '       ' → logprob: -5.672947406768799
    5. 'ways' (adapté à ' ways') → logprob: -7.547947406768799
    6. ' count' → logprob: -8.547947883605957
    7. 'output' → logprob: -8.922947883605957
    8. 'results' → logprob: -9.672947883605957
    9. ' ways' → logprob: -10.047947883605957
    10. 'res' → logprob: -10.422947883605957

Token 451: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014473860152065754
    2. '=' → logprob: -4.264473915100098
    3. '       ' → logprob: -8.764473915100098
    4. '.count' → logprob: -9.889473915100098
    5. '.' → logprob: -10.139473915100098
    6. '   ' → logprob: -11.139473915100098
    7. '_count' → logprob: -11.139473915100098
    8. '=count' → logprob: -11.764473915100098
    9. ')' → logprob: -11.889473915100098
    10. '           ' → logprob: -12.139473915100098

Token 452: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.01815006136894226
    2. ' counter' → logprob: -4.0181498527526855
    3. 'count' → logprob: -16.393150329589844
    4. '       ' → logprob: -17.018150329589844
    5. '	counter' → logprob: -17.393150329589844
    6. 'Counter' → logprob: -19.143150329589844
    7. '(counter' → logprob: -19.268150329589844
    8. '   ' → logprob: -19.643150329589844
    9. '.counter' → logprob: -20.143150329589844
    10. '[counter' → logprob: -20.143150329589844

Token 453: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -1.5570885807392187e-05
    2. '.' → logprob: -11.625015258789062
    3. 'count' → logprob: -12.000015258789062
    4. ' .' → logprob: -15.375015258789062
    5. '=count' → logprob: -15.875015258789062
    6. ' =' → logprob: -17.000015258789062
    7. '	count' → logprob: -17.750015258789062
    8. '_count' → logprob: -18.000015258789062
    9. ',count' → logprob: -18.125015258789062
    10. '   ' → logprob: -18.625015258789062

Token 454: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 's' → logprob: -17.25
    3. '()' → logprob: -19.625
    4. '_
' → logprob: -20.125
    5. '_way' → logprob: -20.125
    6. '__' → logprob: -20.5
    7. '"_' → logprob: -20.625
    8. '_methods' → logprob: -20.625
    9. '```' → logprob: -20.875
    10. 'Ways' → logprob: -20.875

Token 455: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00975927896797657
    2. '_' → logprob: -4.634759426116943
    3. '```' → logprob: -14.009758949279785
    4. 'way' → logprob: -14.509758949279785
    5. 'ays' → logprob: -15.009758949279785
    6. 's' → logprob: -15.259758949279785
    7. '-' → logprob: -15.384758949279785
    8. 'w' → logprob: -15.509758949279785
    9. 'ows' → logprob: -15.884758949279785
    10. 'count' → logprob: -16.0097599029541

Token 456: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002479886752553284
    2. '<|end|>' → logprob: -8.750247955322266
    3. '        
' → logprob: -9.875247955322266
    4. '
' → logprob: -11.500247955322266
    5. 'output' → logprob: -11.750247955322266
    6. '   ' → logprob: -12.125247955322266
    7. '<|end|>' → logprob: -12.250247955322266
    8. '(output' → logprob: -12.875247955322266
    9. '           ' → logprob: -13.875247955322266
    10. ',' → logprob: -14.000247955322266

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.1054253011243418e-05
    2. 'output' → logprob: -11.500020980834961
    3. '   ' → logprob: -12.000020980834961
    4. '        
' → logprob: -13.000020980834961
    5. '<|end|>' → logprob: -13.250020980834961
    6. '```' → logprob: -15.125020980834961
    7. ' output' → logprob: -15.625020980834961
    8. '           ' → logprob: -16.87502098083496
    9. '      ' → logprob: -17.12502098083496
    10. '$output' → logprob: -17.25002098083496

Token 458: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.20162852108478546
    2. ' output' → logprob: -1.701628565788269
    3. '       ' → logprob: -8.451628684997559
    4. '(output' → logprob: -14.201628684997559
    5. '	output' → logprob: -14.826628684997559
    6. '   ' → logprob: -15.201628684997559
    7. '        
' → logprob: -16.451627731323242
    8. '_output' → logprob: -16.451627731323242
    9. '$output' → logprob: -16.701627731323242
    10. '.output' → logprob: -16.826627731323242

Token 459: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.1472419600977446e-06
    2. '_handle' → logprob: -14.250000953674316
    3. '_hand' → logprob: -15.375000953674316
    4. '_' → logprob: -16.625001907348633
    5. '_writer' → logprob: -16.875001907348633
    6. '_Handler' → logprob: -17.000001907348633
    7. '_handlers' → logprob: -17.125001907348633
    8. '_helper' → logprob: -17.375001907348633
    9. '_controller' → logprob: -18.000001907348633
    10. '_HANDLER' → logprob: -18.125001907348633

Token 460: '.collect' (ID: 48094)
  Prédit: '.collect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.collect' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.875
    3. '.col' → logprob: -15.875
    4. '.collection' → logprob: -17.625
    5. 'collect' → logprob: -19.0
    6. ' .' → logprob: -19.0
    7. '.coll' → logprob: -19.25
    8. '.consume' → logprob: -19.75
    9. '.append' → logprob: -20.0
    10. '.concatenate' → logprob: -20.375

Token 461: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.625000953674316
    3. '_res' → logprob: -15.250000953674316
    4. 'result' → logprob: -15.500000953674316
    5. '_results' → logprob: -16.000001907348633
    6. '(result' → logprob: -16.750001907348633
    7. 's' → logprob: -18.000001907348633
    8. ' _' → logprob: -18.375001907348633
    9. '_Result' → logprob: -18.375001907348633
    10. '_r' → logprob: -18.500001907348633

Token 462: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -17.625
    3. '(
' → logprob: -19.0
    4. '((' → logprob: -19.0
    5. 'ways' → logprob: -19.25
    6. '(w' → logprob: -19.875
    7. '('' → logprob: -22.125
    8. '(`' → logprob: -23.125
    9. '(

' → logprob: -23.75
    10. '```' → logprob: -23.875

Token 463: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -6.392202976712724e-06
    2. ' ways' → logprob: -12.500006675720215
    3. 'way' → logprob: -12.875006675720215
    4. '(' → logprob: -17.0000057220459
    5. 'WAYS' → logprob: -18.5000057220459
    6. '   ' → logprob: -19.0000057220459
    7. 'Ways' → logprob: -20.3750057220459
    8. '       ' → logprob: -20.5000057220459
    9. '```' → logprob: -21.0000057220459
    10. 'w' → logprob: -21.5000057220459

Token 464: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6240949034690857
    2. ')
' → logprob: -0.8740949034690857
    3. '   ' → logprob: -3.2490949630737305
    4. '
' → logprob: -4.8740949630737305
    5. '()
' → logprob: -8.62409496307373
    6. '    
' → logprob: -8.99909496307373
    7. '()' → logprob: -9.24909496307373
    8. '<|end|>' → logprob: -9.62409496307373
    9. '       ' → logprob: -10.99909496307373
    10. ' ' → logprob: -11.24909496307373

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7596808671951294
    2. 'output' → logprob: -0.7596808671951294
    3. ' output' → logprob: -2.75968074798584
    4. '
' → logprob: -6.88468074798584
    5. '	output' → logprob: -11.13468074798584
    6. '    
' → logprob: -12.00968074798584
    7. '(output' → logprob: -12.38468074798584
    8. '_output' → logprob: -13.00968074798584
    9. ' ' → logprob: -13.13468074798584
    10. '  ' → logprob: -13.63468074798584

Token 466: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.0016209072200581431
    2. '   ' → logprob: -7.001620769500732
    3. ' output' → logprob: -7.251620769500732
    4. '	output' → logprob: -17.50162124633789
    5. ' ' → logprob: -18.25162124633789
    6. '(output' → logprob: -19.00162124633789
    7. '  ' → logprob: -19.37662124633789
    8. '
' → logprob: -19.87662124633789
    9. '    
' → logprob: -20.62662124633789
    10. '_output' → logprob: -20.62662124633789

Token 467: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -3.531315314830863e-06
    2. '_hand' → logprob: -13.125003814697266
    3. '_handle' → logprob: -14.250003814697266
    4. '_' → logprob: -14.375003814697266
    5. '_Handler' → logprob: -16.375003814697266
    6. '_controller' → logprob: -17.250003814697266
    7. '__' → logprob: -17.750003814697266
    8. 'Handler' → logprob: -17.875003814697266
    9. '_output' → logprob: -18.125003814697266
    10. '_writer' → logprob: -18.125003814697266

Token 468: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -7.226628895296017e-06
    2. '.' → logprob: -12.000007629394531
    3. 'output' → logprob: -14.250007629394531
    4. '._' → logprob: -16.12500762939453
    5. '_output' → logprob: -16.50000762939453
    6. ' .' → logprob: -17.12500762939453
    7. '.print' → logprob: -17.62500762939453
    8. '_.' → logprob: -18.12500762939453
    9. '.out' → logprob: -18.25000762939453
    10. '(output' → logprob: -18.75000762939453

Token 469: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.750005722045898
    3. '_handler' → logprob: -14.000005722045898
    4. '()' → logprob: -14.375005722045898
    5. '_result' → logprob: -15.375005722045898
    6. '```' → logprob: -15.625005722045898
    7. ' _' → logprob: -16.3750057220459
    8. '(_' → logprob: -17.0000057220459
    9. '_RESULTS' → logprob: -17.2500057220459
    10. '\' → logprob: -17.3750057220459

Token 470: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7953992486000061
    2. '()' → logprob: -1.0453991889953613
    3. '()
' → logprob: -1.7953991889953613
    4. '<|end|>' → logprob: -3.9203991889953613
    5. '(
' → logprob: -5.545399188995361
    6. 'if' → logprob: -5.545399188995361
    7. '()

' → logprob: -6.295399188995361
    8. '```' → logprob: -7.920399188995361
    9. '

' → logprob: -8.04539966583252
    10. '(' → logprob: -8.04539966583252

Token 471: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.1008713702030946e-06
    2. ' if' → logprob: -13.375001907348633
    3. '```' → logprob: -14.875001907348633
    4. '#' → logprob: -16.375001907348633
    5. 'main' → logprob: -16.625001907348633
    6. '
' → logprob: -18.125001907348633
    7. '#if' → logprob: -18.375001907348633
    8. '\' → logprob: -20.250001907348633
    9. '	if' → logprob: -21.000001907348633
    10. 'for' → logprob: -21.000001907348633

Token 472: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009920296259224415
    2. '__' → logprob: -4.634920120239258
    3. '_' → logprob: -9.134920120239258
    4. ' ' → logprob: -10.759920120239258
    5. '_name' → logprob: -11.009920120239258
    6. ' _' → logprob: -11.259920120239258
    7. ' ' → logprob: -13.634920120239258
    8. '___' → logprob: -13.884920120239258
    9. '_main' → logprob: -14.259920120239258
    10. ' ' → logprob: -14.509920120239258

Token 473: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08472457528114319
    2. ' ==' → logprob: -2.7097246646881104
    3. '==' → logprob: -4.959724426269531
    4. ' __' → logprob: -5.334724426269531
    5. '.__' → logprob: -6.584724426269531
    6. 'name' → logprob: -7.334724426269531
    7. '_' → logprob: -8.459724426269531
    8. '__.__' → logprob: -8.584724426269531
    9. '=="' → logprob: -9.459724426269531
    10. '[' → logprob: -9.959724426269531

Token 474: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.9153885558771435e-06
    2. '__.__' → logprob: -12.125005722045898
    3. '____' → logprob: -15.750005722045898
    4. '__
' → logprob: -16.3750057220459
    5. '___' → logprob: -17.1250057220459
    6. '__.' → logprob: -17.3750057220459
    7. '__["' → logprob: -18.1250057220459
    8. '"' → logprob: -18.2500057220459
    9. '==' → logprob: -18.6250057220459
    10. '__[' → logprob: -18.6250057220459

Token 475: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001127955736592412
    2. '==' → logprob: -7.00112771987915
    3. ' ==' → logprob: -9.001128196716309
    4. '=="' → logprob: -9.376128196716309
    5. '__.__' → logprob: -12.626128196716309
    6. '___' → logprob: -13.001128196716309
    7. '_' → logprob: -13.626128196716309
    8. '=='' → logprob: -14.501128196716309
    9. '____' → logprob: -15.001128196716309
    10. '__.' → logprob: -16.001127243041992

Token 476: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006733487825840712
    2. ''' → logprob: -5.006733417510986
    3. ' "__' → logprob: -11.256733894348145
    4. '__' → logprob: -12.256733894348145
    5. '"user' → logprob: -16.381732940673828
    6. ' '__' → logprob: -16.631732940673828
    7. '"name' → logprob: -16.631732940673828
    8. '"class' → logprob: -17.006732940673828
    9. ''"' → logprob: -17.631732940673828
    10. '("__' → logprob: -18.256732940673828

Token 477: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.896309739408025e-07
    2. '__' → logprob: -14.125000953674316
    3. ' main' → logprob: -16.875
    4. 'name' → logprob: -17.375
    5. 'built' → logprob: -18.125
    6. '_main' → logprob: -19.125
    7. '-main' → logprob: -20.0
    8. 'python' → logprob: -20.125
    9. 'builtin' → logprob: -21.0
    10. 'mp' → logprob: -21.125

Token 478: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6933621168136597
    2. '__":
' → logprob: -0.6933621168136597
    3. '__':
' → logprob: -8.94336223602295
    4. '__.' → logprob: -9.81836223602295
    5. '__:' → logprob: -11.31836223602295
    6. '__.__' → logprob: -11.81836223602295
    7. '__["' → logprob: -12.56836223602295
    8. '_' → logprob: -13.06836223602295
    9. '__
' → logprob: -13.44336223602295
    10. '__",' → logprob: -13.81836223602295

Token 479: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03503620997071266
    2. '__' → logprob: -4.035036087036133
    3. ''' → logprob: -4.410036087036133
    4. 'main' → logprob: -5.410036087036133
    5. '   ' → logprob: -9.660036087036133
    6. ' "__' → logprob: -10.035036087036133
    7. ' main' → logprob: -12.410036087036133
    8. '____' → logprob: -13.660036087036133
    9. '_main' → logprob: -13.785036087036133
    10. '"name' → logprob: -14.285036087036133

Token 480: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.1472419600977446e-06
    2. ' main' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.000001907348633
    4. '	main' → logprob: -20.000001907348633
    5. '.main' → logprob: -25.250001907348633
    6. '_main' → logprob: -25.500001907348633
    7. 'import' → logprob: -26.125001907348633
    8. '(main' → logprob: -26.250001907348633
    9. ' ' → logprob: -27.000001907348633
    10. 'Main' → logprob: -27.625001907348633

Token 481: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 479
Tokens correctement prédits (1ère position, stricte): 221
Tokens correctement prédits (1ère position, avec adaptation): 254
Tokens correctement prédits (top 10): 393
Précision stricte (1ère position): 46.14%
Précision adaptée (1ère position): 53.03%
Précision (top 10): 82.05%
================================================================================
