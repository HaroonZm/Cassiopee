================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x,y = map(int,input().split())
n = max(abs(x), abs(y))
s = (2*n-1)**2 if n>0 else 0
D = 8*n if n>0 else 1
if n == 0:
    k = 0
elif x > n:
    k = s + (n - y)
elif y > n:
    k = s + (3*n + x)
elif x < -n:
    k = s + (5*n + y)
else:
    k = s + (7*n - x)
print((k % 3) + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ',y' (ID: 16103)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20221242308616638
    2. '0' → logprob: -1.7022124528884888
    3. '10' → logprob: -8.3272123336792
    4. 'x' → logprob: -8.8272123336792
    5. '1' → logprob: -9.2022123336792
    6. ' x' → logprob: -9.4522123336792
    7. ' (' → logprob: -9.4522123336792
    8. 'y' → logprob: -10.5772123336792
    9. 'input' → logprob: -10.8272123336792
    10. ' map' → logprob: -11.2022123336792

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014981062151491642
    2. '(lambda' → logprob: -4.264981269836426
    3. '```' → logprob: -8.264981269836426
    4. '(int' → logprob: -8.764981269836426
    5. '(str' → logprob: -9.764981269836426
    6. '<|end|>' → logprob: -10.139981269836426
    7. '(user' → logprob: -10.389981269836426
    8. ')' → logprob: -10.389981269836426
    9. '(x' → logprob: -10.514981269836426
    10. '(func' → logprob: -10.514981269836426

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04245081543922424
    2. '(' → logprob: -3.9174509048461914
    3. ')' → logprob: -3.9174509048461914
    4. '(user' → logprob: -7.917450904846191
    5. '(x' → logprob: -8.042450904846191
    6. '(raw' → logprob: -8.292450904846191
    7. 'input' → logprob: -8.667450904846191
    8. '('' → logprob: -9.417450904846191
    9. '<|end|>' → logprob: -10.042450904846191
    10. '(str' → logprob: -10.292450904846191

Token 6: '().' (ID: 1454)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7778180241584778
    2. '(' → logprob: -0.9028180241584778
    3. '())' → logprob: -2.777817964553833
    4. '()' → logprob: -3.402817964553833
    5. '(()' → logprob: -4.027818202972412
    6. ')' → logprob: -5.277818202972412
    7. '("("' → logprob: -5.277818202972412
    8. '(""))' → logprob: -5.402818202972412
    9. '(`' → logprob: -6.652818202972412
    10. '("' → logprob: -6.902818202972412

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012213163427077234
    2. 'strip' → logprob: -9.2501220703125
    3. ' split' → logprob: -10.7501220703125
    4. 'rstrip' → logprob: -12.6251220703125
    5. ')' → logprob: -14.1251220703125
    6. '(split' → logprob: -14.6251220703125
    7. 'spl' → logprob: -16.5001220703125
    8. 'replace' → logprob: -17.3751220703125
    9. '_split' → logprob: -17.7501220703125
    10. 'startswith' → logprob: -18.2501220703125

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10350112617015839
    2. '())' → logprob: -2.353501081466675
    3. '))' → logprob: -6.228501319885254
    4. '()' → logprob: -7.228501319885254
    5. '`)' → logprob: -7.728501319885254
    6. '(' → logprob: -9.603501319885254
    7. '()))' → logprob: -10.603501319885254
    8. ')`' → logprob: -11.103501319885254
    9. '')' → logprob: -11.728501319885254
    10. ' )' → logprob: -11.978501319885254

Token 9: 'n' (ID: 77)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02898070029914379
    2. '*' → logprob: -4.028980731964111
    3. '+
' → logprob: -5.403980731964111
    4. '#' → logprob: -6.403980731964111
    5. '\n' → logprob: -6.403980731964111
    6. '
' → logprob: -7.278980731964111
    7. ',' → logprob: -8.153980255126953
    8. 'print' → logprob: -8.278980255126953
    9. '**' → logprob: -8.403980255126953
    10. 'x' → logprob: -8.403980255126953

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2028934955596924
    2. '+' → logprob: -1.4528934955596924
    3. ' =' → logprob: -1.8278934955596924
    4. '_' → logprob: -2.3278934955596924
    5. 'ext' → logprob: -2.7028934955596924
    6. '-' → logprob: -3.4528934955596924
    7. '**' → logprob: -3.7028934955596924
    8. '%' → logprob: -3.7028934955596924
    9. '.' → logprob: -4.077893257141113
    10. ',' → logprob: -4.827893257141113

Token 11: ' max' (ID: 2999)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6448634266853333
    2. ' int' → logprob: -0.7698634266853333
    3. ' x' → logprob: -4.769863605499268
    4. 'x' → logprob: -6.769863605499268
    5. ' ' → logprob: -7.019863605499268
    6. '0' → logprob: -7.894863605499268
    7. ' map' → logprob: -8.14486312866211
    8. ' abs' → logprob: -8.39486312866211
    9. 'map' → logprob: -8.64486312866211
    10. '10' → logprob: -9.14486312866211

Token 12: '(abs' (ID: 71957)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1436622589826584
    2. '(x' → logprob: -2.018662214279175
    3. '((' → logprob: -7.893662452697754
    4. '(n' → logprob: -8.268662452697754
    5. '(y' → logprob: -10.018662452697754
    6. '(+' → logprob: -10.143662452697754
    7. '(a' → logprob: -10.268662452697754
    8. '()' → logprob: -10.768662452697754
    9. ' (' → logprob: -10.893662452697754
    10. '(
' → logprob: -11.143662452697754

Token 13: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006631145952269435
    2. 'x' → logprob: -7.7506632804870605
    3. '(' → logprob: -8.375662803649902
    4. '(y' → logprob: -13.500662803649902
    5. ' x' → logprob: -16.00066375732422
    6. ')x' → logprob: -16.00066375732422
    7. ')' → logprob: -16.25066375732422
    8. ' (' → logprob: -16.37566375732422
    9. '(
' → logprob: -16.75066375732422
    10. '((' → logprob: -17.25066375732422

Token 14: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.019087553024291992
    2. ' -' → logprob: -4.519087791442871
    3. '-' → logprob: -5.769087791442871
    4. '-y' → logprob: -5.894087791442871
    5. ' ),' → logprob: -7.019087791442871
    6. ',' → logprob: -7.644087791442871
    7. ')' → logprob: -7.894087791442871
    8. '-x' → logprob: -8.769087791442871
    9. ',y' → logprob: -9.269087791442871
    10. ' ' → logprob: -10.269087791442871

Token 15: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01417420245707035
    2. ' abs' → logprob: -4.264173984527588
    3. '(abs' → logprob: -11.764174461364746
    4. 'y' → logprob: -12.889174461364746
    5. '.abs' → logprob: -15.139174461364746
    6. ' y' → logprob: -17.13917350769043
    7. '_abs' → logprob: -17.76417350769043
    8. '   ' → logprob: -17.88917350769043
    9. ' ' → logprob: -18.38917350769043
    10. ' ' → logprob: -19.01417350769043

Token 16: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -8.065608562901616e-05
    2. '(' → logprob: -10.000081062316895
    3. '(x' → logprob: -10.875081062316895
    4. 'y' → logprob: -11.125081062316895
    5. ')' → logprob: -14.375081062316895
    6. ')y' → logprob: -15.500081062316895
    7. ' (' → logprob: -15.750081062316895
    8. ')(' → logprob: -16.000080108642578
    9. '[y' → logprob: -16.375080108642578
    10. '	y' → logprob: -16.750080108642578

Token 17: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07915569841861725
    2. ')' → logprob: -2.579155683517456
    3. ')))' → logprob: -8.454155921936035
    4. '),' → logprob: -10.079155921936035
    5. '))
' → logprob: -12.829155921936035
    6. ')+' → logprob: -13.579155921936035
    7. ''))' → logprob: -14.079155921936035
    8. '()))' → logprob: -14.079155921936035
    9. ')**' → logprob: -14.454155921936035
    10. ' ))' → logprob: -14.579155921936035

Token 18: 's' (ID: 82)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7002988457679749
    2. 'if' → logprob: -0.9502988457679749
    3. '\' → logprob: -2.82529878616333
    4. 'print' → logprob: -4.57529878616333
    5. '\n' → logprob: -4.57529878616333
    6. ':' → logprob: -4.70029878616333
    7. '```' → logprob: -4.95029878616333
    8. '+' → logprob: -5.20029878616333
    9. '**' → logprob: -5.82529878616333
    10. '*' → logprob: -6.07529878616333

Token 19: ' =' (ID: 314)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.8356030583381653
    2. ' =' → logprob: -1.2106029987335205
    3. '=' → logprob: -1.8356029987335205
    4. 'um' → logprob: -2.8356029987335205
    5. 'x' → logprob: -5.0856032371521
    6. 'tring' → logprob: -5.2106032371521
    7. '='' → logprob: -5.3356032371521
    8. '=n' → logprob: -5.5856032371521
    9. '*n' → logprob: -5.9606032371521
    10. 'trin' → logprob: -5.9606032371521

Token 20: ' (' (ID: 350)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.2079452276229858
    2. '''' → logprob: -1.4579452276229858
    3. '""' → logprob: -2.0829453468322754
    4. '"' → logprob: -2.3329453468322754
    5. ''' → logprob: -2.8329453468322754
    6. '2' → logprob: -3.4579453468322754
    7. '(str' → logprob: -3.5829453468322754
    8. 'n' → logprob: -3.9579453468322754
    9. 'x' → logprob: -4.082945346832275
    10. '(' → logprob: -4.457945346832275

Token 21: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006314462516456842
    2. '(' → logprob: -5.256314277648926
    3. 'n' → logprob: -7.756314277648926
    4. '4' → logprob: -7.881314277648926
    5. '(n' → logprob: -9.381314277648926
    6. '1' → logprob: -9.506314277648926
    7. '8' → logprob: -9.881314277648926
    8. ' ' → logprob: -11.256314277648926
    9. 'max' → logprob: -11.256314277648926
    10. '9' → logprob: -11.756314277648926

Token 22: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.010648652911186218
    2. '*' → logprob: -4.885648727416992
    3. 'n' → logprob: -5.885648727416992
    4. ' *' → logprob: -8.385648727416992
    5. '*(' → logprob: -11.260648727416992
    6. '**' → logprob: -11.885648727416992
    7. '*s' → logprob: -12.010648727416992
    8. ' ' → logprob: -13.885648727416992
    9. ' n' → logprob: -14.260648727416992
    10. '	n' → logprob: -14.885648727416992

Token 23: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00045902872807346284
    2. ' +' → logprob: -8.125458717346191
    3. '-' → logprob: -8.750458717346191
    4. ')**' → logprob: -14.000458717346191
    5. '+
' → logprob: -14.125458717346191
    6. ')' → logprob: -15.000458717346191
    7. '+)' → logprob: -15.125458717346191
    8. '1' → logprob: -15.125458717346191
    9. '```' → logprob: -15.125458717346191
    10. '+-' → logprob: -15.250458717346191

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031362153589725494
    2. '+' → logprob: -3.5313620567321777
    3. '-' → logprob: -6.906362056732178
    4. ' +' → logprob: -7.656362056732178
    5. ')' → logprob: -10.156362533569336
    6. '   ' → logprob: -10.531362533569336
    7. ' ' → logprob: -10.656362533569336
    8. ')**' → logprob: -10.656362533569336
    9. '```' → logprob: -12.406362533569336
    10. ' -' → logprob: -12.531362533569336

Token 25: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.005987335927784443
    2. ')' → logprob: -5.130987167358398
    3. ')*' → logprob: -9.880987167358398
    4. ')*(' → logprob: -12.255987167358398
    5. ' )' → logprob: -14.130987167358398
    6. '   ' → logprob: -14.255987167358398
    7. ' ' → logprob: -14.630987167358398
    8. '**' → logprob: -14.755987167358398
    9. '）' → logprob: -16.1309871673584
    10. '+' → logprob: -16.1309871673584

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -16.000003814697266
    4. '**' → logprob: -16.125003814697266
    5. '^' → logprob: -17.125003814697266
    6. '²' → logprob: -17.187503814697266
    7. '   ' → logprob: -17.875003814697266
    8. '1' → logprob: -17.937503814697266
    9. ' ' → logprob: -18.062503814697266
    10. '۲' → logprob: -18.687503814697266

Token 27: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10432890802621841
    2. ' +' → logprob: -2.3543288707733154
    3. ' ' → logprob: -5.7293291091918945
    4. '<|end|>' → logprob: -7.2293291091918945
    5. '  ' → logprob: -10.354329109191895
    6. '<|end|>' → logprob: -10.854329109191895
    7. ' +
' → logprob: -11.354329109191895
    8. ')' → logprob: -11.979329109191895
    9. '0' → logprob: -12.229329109191895
    10. '+
' → logprob: -12.229329109191895

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.437875896692276
    2. ' abs' → logprob: -1.8128758668899536
    3. ' x' → logprob: -2.062875986099243
    4. 'n' → logprob: -3.812875986099243
    5. 'x' → logprob: -4.437875747680664
    6. 'abs' → logprob: -4.687875747680664
    7. ' y' → logprob: -5.062875747680664
    8. ' not' → logprob: -5.062875747680664
    9. ' max' → logprob: -5.687875747680664
    10. '(abs' → logprob: -6.687875747680664

Token 29: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.075716495513916
    2. '>' → logprob: -1.325716495513916
    3. '==' → logprob: -1.450716495513916
    4. ' ==' → logprob: -2.200716495513916
    5. ' <' → logprob: -4.325716495513916
    6. ' else' → logprob: -4.700716495513916
    7. 'else' → logprob: -5.200716495513916
    8. '<' → logprob: -5.325716495513916
    9. ' !=' → logprob: -5.450716495513916
    10. '<|end|>' → logprob: -5.825716495513916

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004685137886554003
    2. ' ' → logprob: -5.379684925079346
    3. '=' → logprob: -10.129685401916504
    4. '1' → logprob: -11.129685401916504
    5. '>' → logprob: -12.504685401916504
    6. '<|end|>' → logprob: -13.379685401916504
    7. 'x' → logprob: -13.692185401916504
    8. 's' → logprob: -13.692185401916504
    9. '  ' → logprob: -15.254685401916504
    10. ' x' → logprob: -15.692185401916504

Token 31: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.43876510858535767
    2. 'else' → logprob: -1.063765048980713
    3. '+' → logprob: -4.688765048980713
    4. ' +' → logprob: -7.563765048980713
    5. ' ' → logprob: -9.313765525817871
    6. '-' → logprob: -9.313765525817871
    7. '	else' → logprob: -10.438765525817871
    8. 's' → logprob: -10.563765525817871
    9. '0' → logprob: -11.938765525817871
    10. '<|end|>' → logprob: -12.063765525817871

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008107886649668217
    2. ' ' → logprob: -5.008107662200928
    3. '1' → logprob: -6.633107662200928
    4. 'x' → logprob: -10.258108139038086
    5. '"' → logprob: -10.633108139038086
    6. ' x' → logprob: -12.258108139038086
    7. ''' → logprob: -12.633108139038086
    8. '`' → logprob: -13.258108139038086
    9. '-' → logprob: -13.633108139038086
    10. '  ' → logprob: -14.008108139038086

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010115616023540497
    2. '1' → logprob: -4.885115623474121
    3. 'x' → logprob: -6.385115623474121
    4. ' ' → logprob: -7.135115623474121
    5. ' x' → logprob: -11.010115623474121
    6. '"x' → logprob: -13.510115623474121
    7. 'y' → logprob: -14.135115623474121
    8. '-' → logprob: -14.385115623474121
    9. ''x' → logprob: -14.385115623474121
    10. '"' → logprob: -14.510115623474121

Token 34: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03214557468891144
    2. '+
' → logprob: -4.2821455001831055
    3. ' +' → logprob: -4.5321455001831055
    4. '<|end|>' → logprob: -5.9071455001831055
    5. ' +
' → logprob: -6.5321455001831055
    6. ' ' → logprob: -6.7821455001831055
    7. '
' → logprob: -7.6571455001831055
    8. '*' → logprob: -7.6571455001831055
    9. '#' → logprob: -8.782145500183105
    10. '0' → logprob: -9.657145500183105

Token 35: 'D' (ID: 35)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0707674026489258
    2. ' if' → logprob: -1.3207674026489258
    3. '+' → logprob: -1.6957674026489258
    4. ' +' → logprob: -2.320767402648926
    5. 'print' → logprob: -2.820767402648926
    6. ' ' → logprob: -4.445767402648926
    7. 'd' → logprob: -5.445767402648926
    8. ' +
' → logprob: -5.445767402648926
    9. ' print' → logprob: -5.945767402648926
    10. '+
' → logprob: -6.070767402648926

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6351567506790161
    2. ' =' → logprob: -0.7601567506790161
    3. 'x' → logprob: -7.510156631469727
    4. 'ef' → logprob: -8.010156631469727
    5. 'ir' → logprob: -8.635156631469727
    6. '=max' → logprob: -9.010156631469727
    7. '=(' → logprob: -9.260156631469727
    8. '=int' → logprob: -9.260156631469727
    9. 'irections' → logprob: -9.260156631469727
    10. ' +=' → logprob: -9.385156631469727

Token 37: ' ' (ID: 220)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -1.0807855129241943
    2. 'abs' → logprob: -1.5807855129241943
    3. '2' → logprob: -2.0807855129241943
    4. ' ' → logprob: -2.2057855129241943
    5. '[' → logprob: -3.3307855129241943
    6. ' (' → logprob: -3.4557855129241943
    7. '{' → logprob: -3.5807855129241943
    8. ' [' → logprob: -4.080785751342773
    9. '(abs' → logprob: -4.330785751342773
    10. '[(' → logprob: -4.705785751342773

Token 38: '8' (ID: 23)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.667414665222168
    2. '{' → logprob: -1.417414665222168
    3. 'max' → logprob: -3.167414665222168
    4. 'y' → logprob: -3.292414665222168
    5. '{x' → logprob: -3.542414665222168
    6. '2' → logprob: -3.917414665222168
    7. 'x' → logprob: -3.917414665222168
    8. '[' → logprob: -4.417414665222168
    9. 'n' → logprob: -4.542414665222168
    10. '1' → logprob: -4.542414665222168

Token 39: '*n' (ID: 58470)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43510106205940247
    2. 'if' → logprob: -1.43510103225708
    3. 'd' → logprob: -4.06010103225708
    4. 's' → logprob: -4.31010103225708
    5. 'x' → logprob: -4.81010103225708
    6. ' i' → logprob: -4.81010103225708
    7. ' directions' → logprob: -4.81010103225708
    8. ' ' → logprob: -5.06010103225708
    9. 'i' → logprob: -5.18510103225708
    10. 'r' → logprob: -5.68510103225708

Token 41: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132637143135071
    2. 'n' → logprob: -1.3132636547088623
    3. 'x' → logprob: -14.688263893127441
    4. ' x' → logprob: -15.063263893127441
    5. '(n' → logprob: -15.313263893127441
    6. ' ' → logprob: -15.438263893127441
    7. '	n' → logprob: -15.563263893127441
    8. '<|end|>' → logprob: -16.313262939453125
    9. ')n' → logprob: -16.313262939453125
    10. '_n' → logprob: -16.438262939453125

Token 42: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22591888904571533
    2. ' >' → logprob: -1.6009188890457153
    3. 'else' → logprob: -8.600918769836426
    4. ' else' → logprob: -8.850918769836426
    5. '<|end|>' → logprob: -8.850918769836426
    6. '!=' → logprob: -12.350918769836426
    7. '<|end|>' → logprob: -12.725918769836426
    8. '">' → logprob: -12.725918769836426
    9. ' !=' → logprob: -12.975918769836426
    10. '```' → logprob: -12.975918769836426

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002202474744990468
    2. ' ' → logprob: -6.12720251083374
    3. '1' → logprob: -11.752202033996582
    4. '=' → logprob: -12.627202033996582
    5. '>' → logprob: -12.627202033996582
    6. 's' → logprob: -14.877202033996582
    7. 'else' → logprob: -15.252202033996582
    8. '-' → logprob: -15.252202033996582
    9. '```' → logprob: -15.252202033996582
    10. '<|end|>' → logprob: -15.314702033996582

Token 44: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2820586562156677
    2. 'else' → logprob: -1.4070587158203125
    3. '<|end|>' → logprob: -8.407058715820312
    4. ' ' → logprob: -8.532058715820312
    5. '-' → logprob: -8.782058715820312
    6. 's' → logprob: -9.782058715820312
    7. '+' → logprob: -10.032058715820312
    8. ' ' → logprob: -10.157058715820312
    9. ' -' → logprob: -10.282058715820312
    10. '0' → logprob: -10.532058715820312

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004119242075830698
    2. ' ' → logprob: -6.254119396209717
    3. '1' → logprob: -6.379119396209717
    4. '4' → logprob: -7.629119396209717
    5. '۰' → logprob: -13.754118919372559
    6. '   ' → logprob: -14.066618919372559
    7. '-' → logprob: -14.316618919372559
    8. '  ' → logprob: -14.379118919372559
    9. ' ' → logprob: -14.879118919372559
    10. '```' → logprob: -15.504118919372559

Token 46: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12857502698898315
    2. '1' → logprob: -2.128575086593628
    3. '4' → logprob: -6.503574848175049
    4. ' ' → logprob: -9.128575325012207
    5. '   ' → logprob: -10.753575325012207
    6. '```' → logprob: -12.691075325012207
    7. '  ' → logprob: -12.878575325012207
    8. '...' → logprob: -13.941075325012207
    9. '``' → logprob: -13.941075325012207
    10. ' ' → logprob: -14.128575325012207

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06189226731657982
    2. ' if' → logprob: -3.68689227104187
    3. 'for' → logprob: -4.436892032623291
    4. '```' → logprob: -5.186892032623291
    5. 'direction' → logprob: -5.686892032623291
    6. '+' → logprob: -6.561892032623291
    7. 'z' → logprob: -6.686892032623291
    8. 'print' → logprob: -6.811892032623291
    9. '*' → logprob: -7.061892032623291
    10. 'd' → logprob: -7.186892032623291

Token 49: ' n' (ID: 297)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7763625979423523
    2. ' x' → logprob: -0.7763625979423523
    3. ' abs' → logprob: -2.776362657546997
    4. 'x' → logprob: -5.026362419128418
    5. ' ' → logprob: -5.151362419128418
    6. 'y' → logprob: -6.401362419128418
    7. ' (' → logprob: -6.526362419128418
    8. 'abs' → logprob: -7.151362419128418
    9. '  ' → logprob: -8.151362419128418
    10. '   ' → logprob: -8.526362419128418

Token 50: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6931476593017578
    2. ' ==' → logprob: -1.1931476593017578
    3. '>' → logprob: -1.9431476593017578
    4. '==' → logprob: -2.943147659301758
    5. ':' → logprob: -7.818147659301758
    6. ' !=' → logprob: -8.818147659301758
    7. ' ' → logprob: -9.818147659301758
    8. ' <=' → logprob: -10.318147659301758
    9. '!=' → logprob: -10.568147659301758
    10. ' <' → logprob: -11.068147659301758

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10025595128536224
    2. ' ' → logprob: -2.3502559661865234
    3. '1' → logprob: -10.225255966186523
    4. 'x' → logprob: -12.787755966186523
    5. ' x' → logprob: -13.537755966186523
    6. ' y' → logprob: -13.600255966186523
    7. 's' → logprob: -13.725255966186523
    8. '  ' → logprob: -13.912755966186523
    9. 'y' → logprob: -14.100255966186523
    10. '-' → logprob: -14.225255966186523

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05515250563621521
    2. ' ' → logprob: -2.930152416229248
    3. 'y' → logprob: -9.055152893066406
    4. 'x' → logprob: -9.305152893066406
    5. ' y' → logprob: -10.305152893066406
    6. ' x' → logprob: -11.055152893066406
    7. '1' → logprob: -12.055152893066406
    8. '  ' → logprob: -13.555152893066406
    9. 's' → logprob: -13.680152893066406
    10. '-' → logprob: -14.617652893066406

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004156399052590132
    2. ':
' → logprob: -5.504156589508057
    3. ':return' → logprob: -10.254156112670898
    4. ' :' → logprob: -10.504156112670898
    5. ':
' → logprob: -12.379156112670898
    6. ',' → logprob: -12.629156112670898
    7. ' and' → logprob: -13.004156112670898
    8. ' :
' → logprob: -14.004156112670898
    9. ':s' → logprob: -14.254156112670898
    10. ':

' → logprob: -14.504156112670898

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.766546368598938
    2. 'print' → logprob: -1.016546368598938
    3. ' print' → logprob: -1.766546368598938
    4. '
' → logprob: -7.266546249389648
    5. ' ' → logprob: -7.266546249389648
    6. '	print' → logprob: -7.891546249389648
    7. ':' → logprob: -8.266546249389648
    8. '```' → logprob: -9.016546249389648
    9. '  ' → logprob: -9.391546249389648
    10. ':
' → logprob: -9.641546249389648

Token 55: ' k' (ID: 372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004690476227551699
    2. ' print' → logprob: -5.379690647125244
    3. '   ' → logprob: -9.754690170288086
    4. 's' → logprob: -12.004690170288086
    5. 'pr' → logprob: -13.129690170288086
    6. 'prin' → logprob: -13.379690170288086
    7. '```' → logprob: -14.254690170288086
    8. 'p' → logprob: -15.254690170288086
    9. ' ' → logprob: -15.254690170288086
    10. '
' → logprob: -15.504690170288086

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08946205675601959
    2. '=' → logprob: -2.4644620418548584
    3. '=k' → logprob: -7.8394622802734375
    4. '=int' → logprob: -10.464462280273438
    5. '=i' → logprob: -10.464462280273438
    6. 'ey' → logprob: -11.339462280273438
    7. '=y' → logprob: -11.839462280273438
    8. '=s' → logprob: -11.964462280273438
    9. ' ' → logprob: -12.089462280273438
    10. ',' → logprob: -12.089462280273438

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49863383173942566
    2. ' ' → logprob: -0.998633861541748
    3. '1' → logprob: -3.748633861541748
    4. 'x' → logprob: -8.12363338470459
    5. 's' → logprob: -8.62363338470459
    6. ' x' → logprob: -8.99863338470459
    7. ' s' → logprob: -9.62363338470459
    8. ' (' → logprob: -11.24863338470459
    9. '(x' → logprob: -12.31113338470459
    10. '4' → logprob: -12.93613338470459

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022857090458273888
    2. '1' → logprob: -4.022857189178467
    3. 'x' → logprob: -5.772857189178467
    4. ' ' → logprob: -6.772857189178467
    5. 's' → logprob: -8.022856712341309
    6. '(x' → logprob: -9.897856712341309
    7. ' x' → logprob: -11.772856712341309
    8. 'y' → logprob: -11.960356712341309
    9. '(' → logprob: -12.210356712341309
    10. '4' → logprob: -12.272856712341309

Token 59: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1436314880847931
    2. '<|end|>' → logprob: -3.0186314582824707
    3. ' elif' → logprob: -3.1436314582824707
    4. 'else' → logprob: -3.5186314582824707
    5. ' else' → logprob: -4.643631458282471
    6. '
' → logprob: -7.018631458282471
    7. '<|end|>' → logprob: -7.268631458282471
    8. '\n' → logprob: -8.643631935119629
    9. '#elif' → logprob: -9.018631935119629
    10. 'x' → logprob: -9.393631935119629

Token 60: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.014838251285254955
    2. 'else' → logprob: -4.514838218688965
    3. ' elif' → logprob: -5.889838218688965
    4. '<|end|>' → logprob: -7.514838218688965
    5. ' else' → logprob: -8.264838218688965
    6. 'if' → logprob: -10.514838218688965
    7. '```' → logprob: -10.514838218688965
    8. '
' → logprob: -10.764838218688965
    9. 'el' → logprob: -10.889838218688965
    10. 'n' → logprob: -11.264838218688965

Token 61: ' x' (ID: 1215)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.12945882976055145
    2. ' x' → logprob: -2.2544589042663574
    3. 'y' → logprob: -5.004458904266357
    4. ' abs' → logprob: -5.504458904266357
    5. 'x' → logprob: -5.754458904266357
    6. ' ' → logprob: -6.754458904266357
    7. ' -' → logprob: -7.254458904266357
    8. ' (' → logprob: -8.7544584274292
    9. 'abs' → logprob: -9.2544584274292
    10. '   ' → logprob: -9.5669584274292

Token 62: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6751385927200317
    2. '==' → logprob: -1.1751385927200317
    3. ' >' → logprob: -2.175138473510742
    4. '>' → logprob: -3.175138473510742
    5. '<' → logprob: -4.550138473510742
    6. ' <' → logprob: -4.800138473510742
    7. ' >=' → logprob: -6.050138473510742
    8. '>=' → logprob: -6.300138473510742
    9. ' <=' → logprob: -6.675138473510742
    10. '<=' → logprob: -7.300138473510742

Token 63: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5463264584541321
    2. '0' → logprob: -1.0463263988494873
    3. 'y' → logprob: -3.5463263988494873
    4. '=y' → logprob: -4.296326637268066
    5. '-' → logprob: -5.046326637268066
    6. ' ' → logprob: -5.421326637268066
    7. '=-' → logprob: -5.546326637268066
    8. '=n' → logprob: -5.546326637268066
    9. '-n' → logprob: -5.671326637268066
    10. ' y' → logprob: -6.421326637268066

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03344535827636719
    2. ' and' → logprob: -4.158445358276367
    3. '-' → logprob: -4.533445358276367
    4. ' or' → logprob: -5.533445358276367
    5. ' :' → logprob: -7.158445358276367
    6. '<|end|>' → logprob: -7.283445358276367
    7. ' -' → logprob: -7.783445358276367
    8. 'and' → logprob: -8.533445358276367
    9. ' ' → logprob: -8.658445358276367
    10. '):' → logprob: -9.658445358276367

Token 65: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' k' (ID: 372)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.50686514377594
    2. ' ' → logprob: -1.63186514377594
    3. '<|end|>' → logprob: -1.63186514377594
    4. ' k' → logprob: -2.0068650245666504
    5. 'k' (adapté à ' k') → logprob: -2.1318650245666504
    6. 's' → logprob: -3.6318650245666504
    7. ' n' → logprob: -3.7568650245666504
    8. ' s' → logprob: -3.7568650245666504
    9. ' y' → logprob: -4.00686502456665
    10. 'n' → logprob: -4.75686502456665

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049504928290843964
    2. '=' → logprob: -3.0495049953460693
    3. ' ' → logprob: -7.54950475692749
    4. ' +=' → logprob: -9.174505233764648
    5. '<|end|>' → logprob: -9.424505233764648
    6. ' -=' → logprob: -9.924505233764648
    7. '-' → logprob: -10.299505233764648
    8. ' ==' → logprob: -10.799505233764648
    9. 's' → logprob: -11.299505233764648
    10. '+=' → logprob: -11.424505233764648

Token 68: ' s' (ID: 265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0154472589492798
    2. 'D' → logprob: -1.6404472589492798
    3. '4' → logprob: -2.0154471397399902
    4. ' D' → logprob: -2.5154471397399902
    5. ' ' → logprob: -2.6404471397399902
    6. '7' → logprob: -3.1404471397399902
    7. 's' → logprob: -3.8904471397399902
    8. '(' → logprob: -4.14044713973999
    9. '3' → logprob: -4.51544713973999
    10. '2' → logprob: -4.51544713973999

Token 69: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28422045707702637
    2. ' +' → logprob: -1.4092204570770264
    3. '<|end|>' → logprob: -7.2842206954956055
    4. '+(' → logprob: -7.4092206954956055
    5. '+D' → logprob: -7.5342206954956055
    6. '+n' → logprob: -8.409220695495605
    7. '+k' → logprob: -8.659220695495605
    8. '+s' → logprob: -9.159220695495605
    9. '-' → logprob: -9.284220695495605
    10. '+x' → logprob: -9.409220695495605

Token 70: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9068443775177002
    2. ' y' → logprob: -1.2818443775177002
    3. '(y' → logprob: -2.0318443775177
    4. 'x' → logprob: -2.2818443775177
    5. '(x' → logprob: -3.9068443775177
    6. ' x' → logprob: -4.156844139099121
    7. '(' → logprob: -4.656844139099121
    8. '0' → logprob: -4.781844139099121
    9. ' (' → logprob: -5.031844139099121
    10. '4' → logprob: -5.156844139099121

Token 71: 'n' (ID: 77)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.686524510383606
    2. 'x' → logprob: -1.186524510383606
    3. ' y' → logprob: -2.5615243911743164
    4. 'D' → logprob: -3.6865243911743164
    5. ' x' → logprob: -4.186524391174316
    6. '4' → logprob: -4.561524391174316
    7. '(y' → logprob: -4.561524391174316
    8. '7' → logprob: -4.686524391174316
    9. '(x' → logprob: -4.686524391174316
    10. '(' → logprob: -4.686524391174316

Token 72: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2820031642913818
    2. ' -' → logprob: -1.4070031642913818
    3. '-' → logprob: -1.7820031642913818
    4. ' +' → logprob: -2.032003164291382
    5. '*' → logprob: -2.532003164291382
    6. ')' → logprob: -2.907003164291382
    7. '+y' → logprob: -4.282003402709961
    8. ' *' → logprob: -4.907003402709961
    9. '-y' → logprob: -5.282003402709961
    10. ')+(' → logprob: -5.407003402709961

Token 73: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09883687645196915
    2. '1' → logprob: -3.098836898803711
    3. '(y' → logprob: -3.598836898803711
    4. ' y' → logprob: -4.098836898803711
    5. '(' → logprob: -5.973836898803711
    6. '(-' → logprob: -7.473836898803711
    7. 'x' → logprob: -7.723836898803711
    8. ' (' → logprob: -7.973836898803711
    9. '(x' → logprob: -8.911336898803711
    10. '(n' → logprob: -9.036336898803711

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015496811829507351
    2. ' )' → logprob: -5.140496730804443
    3. '<|end|>' → logprob: -5.140496730804443
    4. '+' → logprob: -6.265496730804443
    5. ' +' → logprob: -6.640496730804443
    6. ')*' → logprob: -8.765497207641602
    7. '<|end|>' → logprob: -9.265497207641602
    8. ')+' → logprob: -9.640497207641602
    9. ')
' → logprob: -9.765497207641602
    10. ' ' → logprob: -11.140497207641602

Token 75: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.06131536886096001
    2. ' elif' → logprob: -3.0613152980804443
    3. '<|end|>' → logprob: -4.436315536499023
    4. '+' → logprob: -8.436315536499023
    5. 'else' → logprob: -8.561315536499023
    6. '<|end|>' → logprob: -9.686315536499023
    7. ' else' → logprob: -9.811315536499023
    8. '#elif' → logprob: -9.936315536499023
    9. ' ' → logprob: -10.061315536499023
    10. '*' → logprob: -10.061315536499023

Token 76: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.21661165356636047
    2. 'x' → logprob: -2.091611623764038
    3. ' y' → logprob: -2.716611623764038
    4. 'y' → logprob: -5.966611862182617
    5. ' ' → logprob: -6.966611862182617
    6. '<|end|>' → logprob: -7.841611862182617
    7. ' abs' → logprob: -8.654111862182617
    8. ' (' → logprob: -8.716611862182617
    9. ' -' → logprob: -8.716611862182617
    10. 'abs' → logprob: -9.091611862182617

Token 77: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2608675956726074
    2. '>' → logprob: -1.7608675956726074
    3. ' ==' → logprob: -3.3858675956726074
    4. '==' → logprob: -3.8858675956726074
    5. ' <' → logprob: -6.260867595672607
    6. '<' → logprob: -7.385867595672607
    7. '<|end|>' → logprob: -7.385867595672607
    8. ' ' → logprob: -9.260868072509766
    9. '<|end|>' → logprob: -10.260868072509766
    10. '   ' → logprob: -11.885868072509766

Token 78: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.851327657699585
    2. ' -' → logprob: -1.351327657699585
    3. '-n' → logprob: -1.726327657699585
    4. ' n' → logprob: -2.351327657699585
    5. '-' → logprob: -3.351327657699585
    6. '(-' → logprob: -5.976327896118164
    7. ' ' → logprob: -7.601327896118164
    8. '  ' → logprob: -7.726327896118164
    9. 'x' → logprob: -7.851327896118164
    10. '-x' → logprob: -8.101327896118164

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018233763054013252
    2. '-' → logprob: -4.893233776092529
    3. '   ' → logprob: -5.018233776092529
    4. '+' → logprob: -6.268233776092529
    5. ' -' → logprob: -7.018233776092529
    6. ':
' → logprob: -7.643233776092529
    7. ' +' → logprob: -8.518233299255371
    8. ' :' → logprob: -9.018233299255371
    9. ' and' → logprob: -9.143233299255371
    10. '):' → logprob: -9.893233299255371

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.158511996269226
    2. 's' → logprob: -1.408511996269226
    3. '2' → logprob: -1.658511996269226
    4. 'k' → logprob: -2.6585121154785156
    5. 'D' → logprob: -3.1585121154785156
    6. ' ' → logprob: -3.7835121154785156
    7. '1' → logprob: -3.7835121154785156
    8. '4' → logprob: -3.9085121154785156
    9. '(' → logprob: -4.158512115478516
    10. '3' → logprob: -4.908512115478516

Token 81: ' k' (ID: 372)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3255031406879425
    2. 's' → logprob: -2.82550311088562
    3. '(' → logprob: -2.95050311088562
    4. ' D' → logprob: -2.95050311088562
    5. '4' → logprob: -3.57550311088562
    6. '2' → logprob: -3.57550311088562
    7. '3' → logprob: -4.200503349304199
    8. ' (' → logprob: -4.825503349304199
    9. ' ' → logprob: -4.950503349304199
    10. ' s' → logprob: -5.325503349304199

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327322125434875
    2. '=' → logprob: -1.3132731914520264
    3. ' ' → logprob: -12.188273429870605
    4. 's' → logprob: -13.188273429870605
    5. ',' → logprob: -13.813273429870605
    6. '   ' → logprob: -14.313273429870605
    7. ':' → logprob: -15.188273429870605
    8. ')' → logprob: -15.313273429870605
    9. ' +=' → logprob: -15.313273429870605
    10. '<|end|>' → logprob: -15.313273429870605

Token 83: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04749596491456032
    2. ' s' → logprob: -3.6724960803985596
    3. '3' → logprob: -4.6724958419799805
    4. '2' → logprob: -5.0474958419799805
    5. '(s' → logprob: -6.0474958419799805
    6. '(' → logprob: -7.1724958419799805
    7. ' ' → logprob: -7.2974958419799805
    8. ' (' → logprob: -7.9224958419799805
    9. '1' → logprob: -8.17249584197998
    10. '  ' → logprob: -8.92249584197998

Token 84: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05532307177782059
    2. '+' → logprob: -2.9303231239318848
    3. ' -' → logprob: -8.930322647094727
    4. ' elif' → logprob: -9.055322647094727
    5. '<|end|>' → logprob: -9.680322647094727
    6. ' ' → logprob: -10.305322647094727
    7. 'elif' → logprob: -10.680322647094727
    8. ' else' → logprob: -10.805322647094727
    9. ' plus' → logprob: -11.367822647094727
    10. '-' → logprob: -11.492822647094727

Token 85: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5383487939834595
    2. '3' → logprob: -1.7883487939834595
    3. 'D' → logprob: -1.9133487939834595
    4. '2' → logprob: -2.78834867477417
    5. ' (' → logprob: -4.28834867477417
    6. ' ' → logprob: -4.66334867477417
    7. ' D' → logprob: -4.66334867477417
    8. '7' → logprob: -5.91334867477417
    9. '4' → logprob: -6.41334867477417
    10. '(D' → logprob: -6.41334867477417

Token 86: '3' (ID: 18)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7895058989524841
    2. '3' → logprob: -1.039505958557129
    3. '(' → logprob: -2.289505958557129
    4. '2' → logprob: -2.914505958557129
    5. '7' → logprob: -4.539505958557129
    6. 'n' → logprob: -5.039505958557129
    7. '6' → logprob: -5.289505958557129
    8. '4' → logprob: -5.414505958557129
    9. ' D' → logprob: -5.914505958557129
    10. ' ' → logprob: -6.039505958557129

Token 87: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.02093246392905712
    2. '*' → logprob: -4.270932674407959
    3. ' *' → logprob: -5.020932674407959
    4. 'n' → logprob: -9.3959321975708
    5. '*(' → logprob: -10.8959321975708
    6. ' ' → logprob: -11.3959321975708
    7. '*d' → logprob: -12.1459321975708
    8. '   ' → logprob: -12.1459321975708
    9. ')' → logprob: -12.6459321975708
    10. ' n' → logprob: -12.6459321975708

Token 88: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5220173597335815
    2. ' +' → logprob: -1.1470173597335815
    3. ')' → logprob: -3.272017478942871
    4. '-' → logprob: -3.647017478942871
    5. '+' → logprob: -3.772017478942871
    6. ' ' → logprob: -6.647017478942871
    7. ' )' → logprob: -8.022017478942871
    8. ')+' → logprob: -9.647017478942871
    9. ')-(' → logprob: -9.647017478942871
    10. '   ' → logprob: -9.772017478942871

Token 89: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3688553273677826
    2. 'x' → logprob: -1.868855357170105
    3. ' (' → logprob: -2.4938552379608154
    4. '(n' → logprob: -3.4938552379608154
    5. ' x' → logprob: -3.8688552379608154
    6. '(' → logprob: -4.1188554763793945
    7. 'n' → logprob: -6.4938554763793945
    8. '1' → logprob: -7.6188554763793945
    9. ' ' → logprob: -7.8688554763793945
    10. ' n' → logprob: -7.8688554763793945

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08188382536172867
    2. ' -' → logprob: -2.8318839073181152
    3. ' )' → logprob: -4.331883907318115
    4. ' +' → logprob: -5.331883907318115
    5. '-' → logprob: -6.831883907318115
    6. '-n' → logprob: -8.331883430480957
    7. ' ' → logprob: -9.206883430480957
    8. '+' → logprob: -9.206883430480957
    9. ')
' → logprob: -9.706883430480957
    10. '+n' → logprob: -10.331883430480957

Token 91: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.016860356554389
    2. '<|end|>' → logprob: -4.391860485076904
    3. 'else' → logprob: -5.891860485076904
    4. ' elif' → logprob: -6.516860485076904
    5. ' else' → logprob: -10.391860008239746
    6. '#elif' → logprob: -11.016860008239746
    7. '<|end|>' → logprob: -11.141860008239746
    8. ' ' → logprob: -12.016860008239746
    9. 'elseif' → logprob: -12.016860008239746
    10. ')' → logprob: -12.141860008239746

Token 92: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2323867827653885
    2. ' y' → logprob: -2.107386827468872
    3. 'x' → logprob: -2.607386827468872
    4. ' -' → logprob: -5.232386589050293
    5. 'y' → logprob: -5.732386589050293
    6. ' ' → logprob: -6.732386589050293
    7. '-' → logprob: -7.107386589050293
    8. ' abs' → logprob: -8.482386589050293
    9. '-x' → logprob: -8.607386589050293
    10. '   ' → logprob: -8.607386589050293

Token 93: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25360819697380066
    2. '<' → logprob: -1.503608226776123
    3. ' >' → logprob: -7.128608226776123
    4. ' ==' → logprob: -7.753608226776123
    5. '==' → logprob: -8.628607749938965
    6. '>' → logprob: -9.003607749938965
    7. ' >=' → logprob: -10.253607749938965
    8. ' <=' → logprob: -10.378607749938965
    9. ' ' → logprob: -10.628607749938965
    10. '<=' → logprob: -11.378607749938965

Token 94: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5426819324493408
    2. '-n' → logprob: -0.9176819324493408
    3. '-' → logprob: -4.042681694030762
    4. '(-' → logprob: -7.792681694030762
    5. 'n' → logprob: -8.042681694030762
    6. ' n' → logprob: -8.167681694030762
    7. '-x' → logprob: -8.792681694030762
    8. ' ' → logprob: -9.417681694030762
    9. ' (-' → logprob: -9.417681694030762
    10. '=' → logprob: -9.667681694030762

Token 95: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011995165841653943
    2. ' n' → logprob: -6.751199722290039
    3. '(n' → logprob: -11.001199722290039
    4. '(' → logprob: -12.126199722290039
    5. '1' → logprob: -13.126199722290039
    6. '<|end|>' → logprob: -13.126199722290039
    7. ' (' → logprob: -14.001199722290039
    8. 's' → logprob: -14.126199722290039
    9. ' ' → logprob: -14.751199722290039
    10. '	n' → logprob: -15.001199722290039

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051753077656030655
    2. ':
' → logprob: -3.176753044128418
    3. '   ' → logprob: -4.926753044128418
    4. ' :' → logprob: -7.676753044128418
    5. ' :
' → logprob: -8.801753044128418
    6. 'k' → logprob: -8.926753044128418
    7. ':

' → logprob: -9.051753044128418
    8. 's' → logprob: -9.301753044128418
    9. ' and' → logprob: -9.426753044128418
    10. '<|end|>' → logprob: -9.551753044128418

Token 97: '   ' (ID: 271)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3616626560688019
    2. 'k' → logprob: -1.2366626262664795
    3. '   ' → logprob: -4.361662864685059
    4. ' ' → logprob: -8.486662864685059
    5. '  ' → logprob: -9.486662864685059
    6. ' s' → logprob: -10.111662864685059
    7. 's' → logprob: -10.736662864685059
    8. '	k' → logprob: -11.486662864685059
    9. '    ' → logprob: -12.861662864685059
    10. '    
' → logprob: -13.361662864685059

Token 98: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.42893776297569275
    2. ' k' → logprob: -1.0539377927780151
    3. '   ' → logprob: -9.053937911987305
    4. ' ' → logprob: -10.053937911987305
    5. '  ' → logprob: -10.428937911987305
    6. 's' → logprob: -10.928937911987305
    7. ' s' → logprob: -11.553937911987305
    8. '```' → logprob: -12.428937911987305
    9. '	k' → logprob: -12.928937911987305
    10. '7' → logprob: -13.991437911987305

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326305270195007
    2. ' =' → logprob: -0.7576305270195007
    3. 's' → logprob: -10.882630348205566
    4. '<|end|>' → logprob: -12.632630348205566
    5. '```' → logprob: -13.257630348205566
    6. ' ' → logprob: -13.257630348205566
    7. 'k' → logprob: -13.382630348205566
    8. '=k' → logprob: -14.132630348205566
    9. '`' → logprob: -14.257630348205566
    10. ')' → logprob: -14.632630348205566

Token 100: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10144488513469696
    2. 's' → logprob: -2.351444959640503
    3. ' (' → logprob: -7.351444721221924
    4. '(' → logprob: -8.351445198059082
    5. '(s' → logprob: -8.476445198059082
    6. ' ' → logprob: -9.226445198059082
    7. '   ' → logprob: -12.351445198059082
    8. '3' → logprob: -12.413945198059082
    9. ' D' → logprob: -12.538945198059082
    10. '  ' → logprob: -12.601445198059082

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.026424305513501167
    2. '+' → logprob: -3.6514244079589844
    3. ' -' → logprob: -9.651424407958984
    4. ' +(' → logprob: -10.901424407958984
    5. '+(' → logprob: -11.526424407958984
    6. ' ' → logprob: -11.526424407958984
    7. '-' → logprob: -12.026424407958984
    8. ' plus' → logprob: -13.026424407958984
    9. ' +
' → logprob: -13.151424407958984
    10. '```' → logprob: -13.651424407958984

Token 102: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02022266387939453
    2. ' (' → logprob: -4.6452226638793945
    3. '5' → logprob: -4.8952226638793945
    4. '4' → logprob: -6.3952226638793945
    5. ' ' → logprob: -7.8952226638793945
    6. '(D' → logprob: -8.020222663879395
    7. '2' → logprob: -8.270222663879395
    8. 'D' → logprob: -9.020222663879395
    9. '6' → logprob: -9.895222663879395
    10. '3' → logprob: -10.270222663879395

Token 103: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0511726513504982
    2. '(' → logprob: -3.0511727333068848
    3. ' ' → logprob: -6.301172733306885
    4. ' (' → logprob: -8.551172256469727
    5. '7' → logprob: -8.676172256469727
    6. 'D' → logprob: -8.926172256469727
    7. '6' → logprob: -9.801172256469727
    8. '   ' → logprob: -9.801172256469727
    9. '4' → logprob: -9.926172256469727
    10. '(D' → logprob: -10.051172256469727

Token 104: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -3.8219583075260743e-05
    2. '*' → logprob: -11.000038146972656
    3. ' *' → logprob: -11.125038146972656
    4. 'n' → logprob: -12.000038146972656
    5. '*(' → logprob: -15.125038146972656
    6. '*y' → logprob: -17.125038146972656
    7. ' n' → logprob: -17.250038146972656
    8. '	n' → logprob: -17.375038146972656
    9. '*np' → logprob: -17.500038146972656
    10. '
' → logprob: -17.625038146972656

Token 105: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.15383583307266235
    2. ' -' → logprob: -2.1538357734680176
    3. '+' → logprob: -3.7788357734680176
    4. '-' → logprob: -5.653835773468018
    5. ' ' → logprob: -9.153836250305176
    6. '+(' → logprob: -10.528836250305176
    7. ' +(' → logprob: -10.528836250305176
    8. '+y' → logprob: -10.903836250305176
    9. ' -(' → logprob: -12.153836250305176
    10. ')' → logprob: -12.528836250305176

Token 106: ' y' (ID: 342)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.939764678478241
    2. '(-' → logprob: -1.0647647380828857
    3. 'y' → logprob: -2.1897647380828857
    4. '(' → logprob: -2.9397647380828857
    5. '-y' → logprob: -3.0647647380828857
    6. ' y' → logprob: -3.9397647380828857
    7. ' -' → logprob: -4.064764499664307
    8. '-' → logprob: -5.189764499664307
    9. '(n' → logprob: -5.689764499664307
    10. '-n' → logprob: -5.939764499664307

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762627720832825
    2. ')
' → logprob: -0.8262627720832825
    3. ' )
' → logprob: -8.576262474060059
    4. ')

' → logprob: -9.701262474060059
    5. ' )' → logprob: -10.576262474060059
    6. ')
' → logprob: -10.576262474060059
    7. 'elif' → logprob: -12.076262474060059
    8. '   ' → logprob: -12.326262474060059
    9. 'else' → logprob: -12.326262474060059
    10. ')\
' → logprob: -13.701262474060059

Token 108: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.18025870621204376
    2. 'elif' → logprob: -1.8052587509155273
    3. ' else' → logprob: -7.680258750915527
    4. ' elif' → logprob: -10.055258750915527
    5. '<|end|>' → logprob: -11.930258750915527
    6. 'elseif' → logprob: -15.055258750915527
    7. '_else' → logprob: -15.055258750915527
    8. '#elif' → logprob: -15.055258750915527
    9. '	elif' → logprob: -15.055258750915527
    10. '...' → logprob: -15.680258750915527

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024939661845564842
    2. ':
' → logprob: -4.02493953704834
    3. '   ' → logprob: -5.39993953704834
    4. '{' → logprob: -7.02493953704834
    5. ' :' → logprob: -7.52493953704834
    6. ' =' → logprob: -8.64993953704834
    7. '=' → logprob: -9.02493953704834
    8. '  ' → logprob: -9.02493953704834
    9. ' :
' → logprob: -9.27493953704834
    10. ' k' → logprob: -9.64993953704834

Token 110: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007171963807195425
    2. ' k' → logprob: -7.2507171630859375
    3. '   ' → logprob: -12.500717163085938
    4. 's' → logprob: -13.375717163085938
    5. '	k' → logprob: -14.250717163085938
    6. ' ' → logprob: -14.500717163085938
    7. '  ' → logprob: -15.125717163085938
    8. '{k' → logprob: -15.500717163085938
    9. '```' → logprob: -15.750717163085938
    10. '0' → logprob: -16.375717163085938

Token 111: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.018184944987297058
    2. ' k' → logprob: -4.018185138702393
    3. '   ' → logprob: -10.643184661865234
    4. ' ' → logprob: -12.643184661865234
    5. '	k' → logprob: -13.518184661865234
    6. '{k' → logprob: -13.643184661865234
    7. 's' → logprob: -13.768184661865234
    8. '0' → logprob: -13.893184661865234
    9. '```' → logprob: -14.643184661865234
    10. '  ' → logprob: -14.768184661865234

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409987449645996
    2. '=' → logprob: -0.97409987449646
    3. ' ' → logprob: -11.099100112915039
    4. 'k' → logprob: -12.724100112915039
    5. 's' → logprob: -13.599100112915039
    6. '=k' → logprob: -13.724100112915039
    7. '   ' → logprob: -14.599100112915039
    8. '  ' → logprob: -15.224100112915039
    9. ' k' → logprob: -15.724100112915039
    10. ':' → logprob: -15.849100112915039

Token 113: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20150426030158997
    2. ' s' → logprob: -1.7015042304992676
    3. ' ' → logprob: -10.951504707336426
    4. '  ' → logprob: -11.201504707336426
    5. '   ' → logprob: -11.201504707336426
    6. '7' → logprob: -11.576504707336426
    7. '6' → logprob: -11.701504707336426
    8. '(' → logprob: -11.951504707336426
    9. '(s' → logprob: -12.201504707336426
    10. '4' → logprob: -12.889004707336426

Token 114: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12696506083011627
    2. '+' → logprob: -2.126965045928955
    3. '+(' → logprob: -11.001965522766113
    4. ' ' → logprob: -11.376965522766113
    5. ' +(' → logprob: -13.001965522766113
    6. '`' → logprob: -14.001965522766113
    7. '+
' → logprob: -14.376965522766113
    8. '0' → logprob: -14.501965522766113
    9. '```' → logprob: -14.501965522766113
    10. '+k' → logprob: -14.626965522766113

Token 115: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00498172827064991
    2. '7' → logprob: -5.504981517791748
    3. ' (' → logprob: -7.129981517791748
    4. '(n' → logprob: -9.504981994628906
    5. ' ' → logprob: -11.504981994628906
    6. '   ' → logprob: -12.129981994628906
    7. '(-' → logprob: -12.379981994628906
    8. '((' → logprob: -13.129981994628906
    9. '(D' → logprob: -13.379981994628906
    10. 'n' → logprob: -13.629981994628906

Token 116: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.008736181072890759
    2. '(' → logprob: -4.8837361335754395
    3. ' ' → logprob: -7.1337361335754395
    4. '   ' → logprob: -8.258736610412598
    5. 'n' → logprob: -10.383736610412598
    6. ' (' → logprob: -10.883736610412598
    7. '  ' → logprob: -11.633736610412598
    8. '     ' → logprob: -12.758736610412598
    9. '(n' → logprob: -13.008736610412598
    10. '    ' → logprob: -13.133736610412598

Token 117: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -1.688212614681106e-05
    2. '*' → logprob: -11.250017166137695
    3. ' *' → logprob: -12.750017166137695
    4. 'n' → logprob: -14.750017166137695
    5. '*(' → logprob: -15.125017166137695
    6. '*x' → logprob: -15.875017166137695
    7. '*y' → logprob: -17.250017166137695
    8. '**' → logprob: -18.125017166137695
    9. '*np' → logprob: -18.125017166137695
    10. '*-' → logprob: -18.375017166137695

Token 118: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008226837031543255
    2. '-' → logprob: -4.8832268714904785
    3. ' +' → logprob: -7.6332268714904785
    4. '+' → logprob: -9.63322639465332
    5. ' ' → logprob: -10.00822639465332
    6. '-x' → logprob: -11.25822639465332
    7. '-n' → logprob: -12.50822639465332
    8. ')' → logprob: -13.00822639465332
    9. '   ' → logprob: -13.25822639465332
    10. '-k' → logprob: -13.50822639465332

Token 119: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001931970240548253
    2. ' x' → logprob: -6.251932144165039
    3. '	x' → logprob: -13.751932144165039
    4. ')x' → logprob: -14.501932144165039
    5. '1' → logprob: -14.626932144165039
    6. ')' → logprob: -14.876932144165039
    7. '(x' → logprob: -15.251932144165039
    8. '_x' → logprob: -15.376932144165039
    9. '<|end|>' → logprob: -16.12693214416504
    10. '"x' → logprob: -16.37693214416504

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ' )' → logprob: -11.375019073486328
    3. ')
' → logprob: -11.875019073486328
    4. '+' → logprob: -15.750019073486328
    5. ')

' → logprob: -16.375019073486328
    6. ')}' → logprob: -16.625019073486328
    7. '}' → logprob: -16.625019073486328
    8. ')#' → logprob: -16.625019073486328
    9. '))' → logprob: -16.750019073486328
    10. ')+' → logprob: -17.375019073486328

Token 121: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18922072649002075
    2. '<|end|>' → logprob: -2.564220666885376
    3. '
' → logprob: -2.689220666885376
    4. '\n' → logprob: -4.564220905303955
    5. ' print' → logprob: -5.189220905303955
    6. '#' → logprob: -5.564220905303955
    7. '+' → logprob: -6.064220905303955
    8. ')' → logprob: -6.939220905303955
    9. ' ' → logprob: -7.189220905303955
    10. 'n' → logprob: -7.814220905303955

Token 122: '((' (ID: 2054)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.04859350249171257
    2. '(' → logprob: -3.048593521118164
    3. '('' → logprob: -12.673593521118164
    4. '((' → logprob: -13.423593521118164
    5. '(
' → logprob: -14.548593521118164
    6. '(x' → logprob: -14.923593521118164
    7. '("("' → logprob: -15.673593521118164
    8. '(f' → logprob: -15.923593521118164
    9. '()' → logprob: -15.923593521118164
    10. '(K' → logprob: -16.423593521118164

Token 123: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.003321007825434208
    2. ' k' → logprob: -5.753321170806885
    3. '7' → logprob: -10.503320693969727
    4. 'x' → logprob: -10.628320693969727
    5. ' ' → logprob: -11.128320693969727
    6. '(k' → logprob: -11.253320693969727
    7. 'n' → logprob: -11.378320693969727
    8. '1' → logprob: -11.753320693969727
    9. ')' → logprob: -12.128320693969727
    10. 'int' → logprob: -12.253320693969727

Token 124: ' %' (ID: 1851)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6511075496673584
    2. ')' → logprob: -0.7761075496673584
    3. ')+' → logprob: -4.6511077880859375
    4. '+' → logprob: -5.4011077880859375
    5. ')%' → logprob: -6.5261077880859375
    6. ' )' → logprob: -6.5261077880859375
    7. ' ))' → logprob: -6.9011077880859375
    8. ' +' → logprob: -9.026107788085938
    9. ')))' → logprob: -9.526107788085938
    10. '%' → logprob: -10.151107788085938

Token 125: ' ' (ID: 220)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.05625633895397186
    2. ' D' → logprob: -2.9312562942504883
    3. '(D' → logprob: -7.681256294250488
    4. '(' → logprob: -7.806256294250488
    5. ' ' → logprob: -8.306256294250488
    6. ' (' → logprob: -8.431256294250488
    7. ')' → logprob: -11.556256294250488
    8. '   ' → logprob: -11.806256294250488
    9. '	D' → logprob: -12.431256294250488
    10. '
' → logprob: -12.681256294250488

Token 126: '3' (ID: 18)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0002637199067976326
    2. ' D' → logprob: -9.000264167785645
    3. '(D' → logprob: -9.500264167785645
    4. '(' → logprob: -9.875264167785645
    5. ' ' → logprob: -12.500264167785645
    6. ' (' → logprob: -12.875264167785645
    7. '   ' → logprob: -13.375264167785645
    8. ')' → logprob: -13.750264167785645
    9. '
' → logprob: -14.000264167785645
    10. '	D' → logprob: -14.500264167785645

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2553245723247528
    2. '))' → logprob: -1.5053246021270752
    3. ')+' → logprob: -6.505324363708496
    4. ' )' → logprob: -6.755324363708496
    5. ')))' → logprob: -8.130324363708496
    6. ' ))' → logprob: -8.380324363708496
    7. ')%' → logprob: -10.005324363708496
    8. ')*' → logprob: -10.380324363708496
    9. '+' → logprob: -10.630324363708496
    10. ',' → logprob: -10.755324363708496

Token 128: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005037044174969196
    2. '+' → logprob: -8.375503540039062
    3. '**' → logprob: -9.125503540039062
    4. '%' → logprob: -9.750503540039062
    5. ' )' → logprob: -10.750503540039062
    6. '))' → logprob: -11.125503540039062
    7. '```' → logprob: -11.250503540039062
    8. '*' → logprob: -11.625503540039062
    9. ')**' → logprob: -11.750503540039062
    10. ')%' → logprob: -11.875503540039062

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036032749339938164
    2. ' ' → logprob: -5.628603458404541
    3. ' ' → logprob: -12.878602981567383
    4. ')' → logprob: -15.378602981567383
    5. '```' → logprob: -16.253602981567383
    6. '  ' → logprob: -16.378602981567383
    7. ' )' → logprob: -16.753602981567383
    8. '2' → logprob: -17.503602981567383
    9. '
' → logprob: -17.878602981567383
    10. '   ' → logprob: -18.128602981567383

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001035191467963159
    2. ' ' → logprob: -6.876035213470459
    3. ')' → logprob: -14.3760347366333
    4. ' ' → logprob: -14.3760347366333
    5. '```' → logprob: -15.1260347366333
    6. '2' → logprob: -15.2510347366333
    7. '(' → logprob: -15.7510347366333
    8. ' )' → logprob: -16.501035690307617
    9. '  ' → logprob: -16.501035690307617
    10. '
' → logprob: -16.751035690307617

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -14.750000953674316
    4. ')`' → logprob: -15.500000953674316
    5. '))' → logprob: -15.625000953674316
    6. ')#' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. '`)' → logprob: -17.750001907348633
    9. '）' → logprob: -18.750001907348633
    10. ')**' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 129
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 105
Précision stricte (1ère position): 40.31%
Précision adaptée (1ère position): 41.86%
Précision (top 10): 81.40%
================================================================================
