================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
M=int(input())
targets=list(map(int,input().split()))
scores=[0]*N
for i in range(M):
    guesses=list(map(int,input().split()))
    target=targets[i]-1
    X=0
    for j in range(N):
        if guesses[j]-1==target:
            scores[j]+=1
        else:
            X+=1
    scores[target]+=X
for s in scores:
    print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4663958251476288
    2. ')' → logprob: -1.0913958549499512
    3. '()' → logprob: -3.841395854949951
    4. '())' → logprob: -4.466395854949951
    5. '(
' → logprob: -7.341395854949951
    6. '```' → logprob: -7.591395854949951
    7. '')' → logprob: -7.841395854949951
    8. '")' → logprob: -7.841395854949951
    9. '`)' → logprob: -7.966395854949951
    10. '<|end|>' → logprob: -8.466395378112793

Token 4: 'M' (ID: 44)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5715791583061218
    2. 's' → logprob: -1.9465792179107666
    3. '#' → logprob: -3.1965792179107666
    4. '\n' → logprob: -3.1965792179107666
    5. 'if' → logprob: -3.5715792179107666
    6. 'i' → logprob: -3.6965792179107666
    7. 'a' → logprob: -3.6965792179107666
    8. '*' → logprob: -3.9465792179107666
    9. ''' → logprob: -4.1965789794921875
    10. '`' → logprob: -4.3215789794921875

Token 5: '=int' (ID: 37431)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7300918698310852
    2. '+' → logprob: -1.3550918102264404
    3. '=' → logprob: -2.2300918102264404
    4. '*' → logprob: -2.8550918102264404
    5. ')' → logprob: -2.9800918102264404
    6. ' =' → logprob: -4.4800920486450195
    7. ' ' → logprob: -4.6050920486450195
    8. '.' → logprob: -4.6050920486450195
    9. ']' → logprob: -5.8550920486450195
    10. ',' → logprob: -6.3550920486450195

Token 6: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012558862566947937
    2. '(' → logprob: -4.387558937072754
    3. ' (' → logprob: -10.262558937072754
    4. '()' → logprob: -12.387558937072754
    5. 'input' → logprob: -12.387558937072754
    6. '('' → logprob: -13.637558937072754
    7. '(
' → logprob: -13.637558937072754
    8. '=input' → logprob: -13.887558937072754
    9. ' input' → logprob: -14.262558937072754
    10. '<input' → logprob: -15.012558937072754

Token 7: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2555999755859375
    2. '()' → logprob: -1.5055999755859375
    3. ')' → logprob: -5.6305999755859375
    4. ' ())' → logprob: -10.755599975585938
    5. '(' → logprob: -10.880599975585938
    6. '();)' → logprob: -12.005599975585938
    7. '()))' → logprob: -12.130599975585938
    8. '()`' → logprob: -12.130599975585938
    9. '`)' → logprob: -12.380599975585938
    10. '()
' → logprob: -12.505599975585938

Token 8: 'targets' (ID: 99558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34084975719451904
    2. 'matrix' → logprob: -2.2158498764038086
    3. 'result' → logprob: -3.0908498764038086
    4. 'if' → logprob: -3.0908498764038086
    5. 'dp' → logprob: -3.5908498764038086
    6. 'sum' → logprob: -3.9658498764038086
    7. 'graph' → logprob: -4.590849876403809
    8. 's' → logprob: -4.715849876403809
    9. 'A' → logprob: -5.590849876403809
    10. 'print' → logprob: -5.840849876403809

Token 9: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28852978348731995
    2. ' =' → logprob: -1.5385297536849976
    3. '_' → logprob: -3.788529872894287
    4. '[' → logprob: -5.288529872894287
    5. '=[]' → logprob: -5.538529872894287
    6. '.' → logprob: -6.288529872894287
    7. 's' → logprob: -6.788529872894287
    8. '[:]' → logprob: -7.538529872894287
    9. '_=' → logprob: -8.788529396057129
    10. '=[' → logprob: -9.038529396057129

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001185703556984663
    2. '(range' → logprob: -8.001185417175293
    3. '(target' → logprob: -8.626185417175293
    4. '((' → logprob: -9.251185417175293
    5. '(input' → logprob: -9.501185417175293
    6. '[(' → logprob: -9.751185417175293
    7. '(user' → logprob: -9.751185417175293
    8. '()' → logprob: -9.876185417175293
    9. '<|end|>' → logprob: -9.876185417175293
    10. '[' → logprob: -10.126185417175293

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20968684554100037
    2. '(' → logprob: -1.7096868753433228
    3. '(lambda' → logprob: -5.584686756134033
    4. '(str' → logprob: -6.334686756134033
    5. ')' → logprob: -7.084686756134033
    6. '(input' → logprob: -7.334686756134033
    7. 'int' → logprob: -7.334686756134033
    8. '(list' → logprob: -8.834687232971191
    9. '(
' → logprob: -8.959687232971191
    10. '[int' → logprob: -9.334687232971191

Token 12: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08640022575855255
    2. '(' → logprob: -2.836400270462036
    3. ',input' → logprob: -4.336400032043457
    4. '))' → logprob: -5.586400032043457
    5. ',' → logprob: -5.836400032043457
    6. ')' → logprob: -6.086400032043457
    7. '(int' → logprob: -8.211400032043457
    8. '(range' → logprob: -8.336400032043457
    9. '(inputs' → logprob: -8.586400032043457
    10. '(eval' → logprob: -8.711400032043457

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7607647776603699
    2. '())' → logprob: -1.0107648372650146
    3. '()))' → logprob: -2.2607648372650146
    4. '().' → logprob: -3.0107648372650146
    5. '(' → logprob: -4.8857645988464355
    6. ')' → logprob: -5.5107645988464355
    7. '))' → logprob: -7.2607645988464355
    8. '(input' → logprob: -7.5107645988464355
    9. '()));' → logprob: -7.7607645988464355
    10. '(()' → logprob: -8.635765075683594

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00034023032640106976
    2. 'strip' → logprob: -8.000340461730957
    3. 'rstrip' → logprob: -12.875340461730957
    4. ' split' → logprob: -13.500340461730957
    5. '(split' → logprob: -14.500340461730957
    6. ')' → logprob: -15.750340461730957
    7. 'spl' → logprob: -15.750340461730957
    8. 's' → logprob: -18.25033950805664
    9. 'replace' → logprob: -18.37533950805664
    10. '.split' → logprob: -18.87533950805664

Token 15: '()))
' (ID: 24521)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6315472722053528
    2. '()))' → logprob: -1.006547212600708
    3. '())' → logprob: -3.256547212600708
    4. '))' → logprob: -3.381547212600708
    5. '('' → logprob: -4.256547451019287
    6. ')' → logprob: -5.006547451019287
    7. '()' → logprob: -5.381547451019287
    8. '(','' → logprob: -6.506547451019287
    9. '())))' → logprob: -6.506547451019287
    10. ')))' → logprob: -7.506547451019287

Token 16: 'scores' (ID: 109945)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.907461404800415
    2. 't' → logprob: -1.532461404800415
    3. 'dp' → logprob: -2.157461404800415
    4. 'result' → logprob: -3.157461404800415
    5. '#' → logprob: -3.407461404800415
    6. 'count' → logprob: -3.657461404800415
    7. 'targets' → logprob: -3.657461404800415
    8. 'sum' → logprob: -3.782461404800415
    9. 's' → logprob: -3.907461404800415
    10. ')' → logprob: -4.282461166381836

Token 17: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20788457989692688
    2. '=' → logprob: -1.7078845500946045
    3. '.' → logprob: -6.332884788513184
    4. ' =' → logprob: -6.332884788513184
    5. '=[]' → logprob: -7.207884788513184
    6. '[]' → logprob: -7.957884788513184
    7. '.append' → logprob: -7.957884788513184
    8. '[:]' → logprob: -8.207884788513184
    9. '=[' → logprob: -8.457884788513184
    10. ')' → logprob: -8.582884788513184

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004299540014471859
    2. '[' → logprob: -8.6254301071167
    3. ' ' → logprob: -9.2504301071167
    4. 'int' → logprob: -9.6254301071167
    5. ']' → logprob: -10.5004301071167
    6. '[]' → logprob: -10.7504301071167
    7. '[int' → logprob: -11.1254301071167
    8. ' [' → logprob: -12.1254301071167
    9. '100' → logprob: -12.1254301071167
    10. '1' → logprob: -13.0004301071167

Token 19: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13671275973320007
    2. ']*' → logprob: -2.1367127895355225
    3. ')]' → logprob: -5.261712551116943
    4. ',' → logprob: -5.636712551116943
    5. ' for' → logprob: -7.636712551116943
    6. ']*(' → logprob: -8.261713027954102
    7. ')' → logprob: -9.136713027954102
    8. ' ]' → logprob: -9.636713027954102
    9. ']+' → logprob: -10.636713027954102
    10. 'for' → logprob: -11.011713027954102

Token 20: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.21893537044525146
    2. 'M' → logprob: -2.593935489654541
    3. '(N' → logprob: -2.593935489654541
    4. '(M' → logprob: -3.468935489654541
    5. '(' → logprob: -4.343935489654541
    6. '100' → logprob: -6.343935489654541
    7. '101' → logprob: -7.718935489654541
    8. ' (' → logprob: -8.968935012817383
    9. ' N' → logprob: -8.968935012817383
    10. '10' → logprob: -10.343935012817383

Token 21: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04996306076645851
    2. ' for' → logprob: -3.4249629974365234
    3. '
' → logprob: -4.299962997436523
    4. '<|end|>' → logprob: -6.924962997436523
    5. '\n' → logprob: -7.674962997436523
    6. '```' → logprob: -7.924962997436523
    7. '' → logprob: -8.174962997436523
    8. ' 
' → logprob: -8.174962997436523
    9. '[' → logprob: -9.799962997436523
    10. '
' → logprob: -10.174962997436523

Token 22: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030574018135666847
    2. ' for' → logprob: -3.530574083328247
    3. '
' → logprob: -7.905573844909668
    4. '<|end|>' → logprob: -8.530573844909668
    5. '\n' → logprob: -8.780573844909668
    6. '```' → logprob: -10.405573844909668
    7. '' → logprob: -10.780573844909668
    8. ' 
' → logprob: -11.780573844909668
    9. 'i' → logprob: -11.780573844909668
    10. '[' → logprob: -12.030573844909668

Token 23: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.025573953986167908
    2. '_' → logprob: -4.27557373046875
    3. 'i' → logprob: -4.77557373046875
    4. ' _' → logprob: -5.90057373046875
    5. ' ' → logprob: -9.27557373046875
    6. '_i' → logprob: -10.27557373046875
    7. ' ' → logprob: -10.65057373046875
    8. ' I' → logprob: -12.40057373046875
    9. '	i' → logprob: -12.52557373046875
    10. ' range' → logprob: -12.77557373046875

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25334933400154114
    2. 'in' → logprob: -1.5033493041992188
    3. ' ' → logprob: -6.753349304199219
    4. 'n' → logprob: -9.378349304199219
    5. '  ' → logprob: -9.628349304199219
    6. 'range' → logprob: -10.503349304199219
    7. '	in' → logprob: -10.628349304199219
    8. 's' → logprob: -11.878349304199219
    9. '```' → logprob: -11.878349304199219
    10. '_' → logprob: -12.253349304199219

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.020546209067106247
    2. 'range' → logprob: -3.8955461978912354
    3. ' ' → logprob: -12.770545959472656
    4. '	range' → logprob: -14.645545959472656
    5. '(range' → logprob: -15.145545959472656
    6. ' xrange' → logprob: -15.895545959472656
    7. '  ' → logprob: -16.145545959472656
    8. '_range' → logprob: -16.395545959472656
    9. ' targets' → logprob: -16.520545959472656
    10. ' ran' → logprob: -16.520545959472656

Token 26: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010896661318838596
    2. '(N' → logprob: -4.885896682739258
    3. '(M' → logprob: -5.760896682739258
    4. ' (' → logprob: -9.260896682739258
    5. '(len' → logprob: -10.510896682739258
    6. '(i' → logprob: -12.635896682739258
    7. '(n' → logprob: -13.010896682739258
    8. '(space' → logprob: -13.510896682739258
    9. '(range' → logprob: -13.510896682739258
    10. '(s' → logprob: -13.760896682739258

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07217028737068176
    2. ')' → logprob: -2.8221702575683594
    3. ' ):' → logprob: -4.697170257568359
    4. ' )' → logprob: -7.322170257568359
    5. ':' → logprob: -8.82217025756836
    6. '+' → logprob: -9.07217025756836
    7. '):
' → logprob: -9.44717025756836
    8. ',' → logprob: -11.57217025756836
    9. ' ' → logprob: -12.19717025756836
    10. ' :' → logprob: -13.82217025756836

Token 28: '   ' (ID: 271)
  Prédit: ' scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.9194490313529968
    2. ' targets' → logprob: -1.4194490909576416
    3. '   ' → logprob: -1.9194490909576416
    4. '<|end|>' → logprob: -3.0444490909576416
    5. ' ' → logprob: -3.4194490909576416
    6. ' s' → logprob: -3.5444490909576416
    7. ' 
' → logprob: -4.0444488525390625
    8. '    ' → logprob: -4.2944488525390625
    9. ' inputs' → logprob: -4.7944488525390625
    10. 'scores' → logprob: -4.9194488525390625

Token 29: ' guesses' (ID: 134802)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.4238331317901611
    2. ' t' → logprob: -1.6738331317901611
    3. 'targets' → logprob: -1.9238331317901611
    4. 'target' → logprob: -2.048833131790161
    5. ' target' → logprob: -3.173833131790161
    6. ' targets' → logprob: -3.298833131790161
    7. 'x' → logprob: -3.673833131790161
    8. 'idx' → logprob: -3.923833131790161
    9. ' x' → logprob: -4.173832893371582
    10. ' idx' → logprob: -4.298832893371582

Token 30: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3321296274662018
    2. ' =' → logprob: -1.3321295976638794
    3. '[' → logprob: -4.83212947845459
    4. ',' → logprob: -6.08212947845459
    5. '[i' → logprob: -6.20712947845459
    6. '_' → logprob: -6.20712947845459
    7. '=input' → logprob: -6.70712947845459
    8. '.append' → logprob: -7.58212947845459
    9. '=[]' → logprob: -7.70712947845459
    10. ')' → logprob: -7.83212947845459

Token 31: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001441303757019341
    2. '(' → logprob: -6.876441478729248
    3. '(int' → logprob: -8.00144100189209
    4. '(input' → logprob: -9.62644100189209
    5. ' (' → logprob: -13.50144100189209
    6. 'map' → logprob: -13.62644100189209
    7. '(eval' → logprob: -14.37644100189209
    8. ',map' → logprob: -14.50144100189209
    9. '(
' → logprob: -14.62644100189209
    10. '()' → logprob: -14.87644100189209

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00048310417332686484
    2. 'int' → logprob: -8.000483512878418
    3. '<int' → logprob: -9.875483512878418
    4. '[int' → logprob: -10.375483512878418
    5. '=int' → logprob: -10.500483512878418
    6. '(' → logprob: -11.250483512878418
    7. '```' → logprob: -11.750483512878418
    8. ']int' → logprob: -12.000483512878418
    9. ',int' → logprob: -12.500483512878418
    10. '(lambda' → logprob: -13.500483512878418

Token 33: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.029867583885788918
    2. ',input' → logprob: -3.529867649078369
    3. '=input' → logprob: -9.904867172241211
    4. '(' → logprob: -10.654867172241211
    5. 'input' → logprob: -10.779867172241211
    6. ',' → logprob: -11.279867172241211
    7. ' (' → logprob: -12.904867172241211
    8. ')' → logprob: -13.029867172241211
    9. '<input' → logprob: -13.404867172241211
    10. ' input' → logprob: -13.654867172241211

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.65707261255011e-06
    2. '()' → logprob: -11.750008583068848
    3. ' ().' → logprob: -14.875008583068848
    4. '.' → logprob: -15.125008583068848
    5. '(' → logprob: -16.500009536743164
    6. '()-' → logprob: -16.875009536743164
    7. '(.' → logprob: -18.125009536743164
    8. ' .' → logprob: -18.125009536743164
    9. '.readline' → logprob: -18.625009536743164
    10. '()
' → logprob: -18.875009536743164

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8074162653647363e-05
    2. ' split' → logprob: -11.250018119812012
    3. 'strip' → logprob: -12.625018119812012
    4. '(split' → logprob: -13.500018119812012
    5. 'rstrip' → logprob: -16.250017166137695
    6. 's' → logprob: -16.375017166137695
    7. 'spl' → logprob: -16.500017166137695
    8. 'plit' → logprob: -18.250017166137695
    9. ' ' → logprob: -18.250017166137695
    10. ')' → logprob: -19.500017166137695

Token 36: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0396772101521492
    2. '()' → logprob: -4.039677143096924
    3. '))' → logprob: -4.539677143096924
    4. '())' → logprob: -4.664677143096924
    5. '(' → logprob: -7.414677143096924
    6. ')' → logprob: -8.164677619934082
    7. '()))
' → logprob: -8.414677619934082
    8. '())))' → logprob: -10.539677619934082
    9. '()));' → logprob: -10.789677619934082
    10. '()))

' → logprob: -11.664677619934082

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20318959653377533
    2. '<|end|>' → logprob: -2.5781896114349365
    3. ' for' → logprob: -2.8281896114349365
    4. ' ' → logprob: -4.078189373016357
    5. 'for' → logprob: -4.203189373016357
    6. '
' → logprob: -4.703189373016357
    7. '    
' → logprob: -6.328189373016357
    8. '  ' → logprob: -6.953189373016357
    9. '    ' → logprob: -6.953189373016357
    10. '       ' → logprob: -7.453189373016357

Token 38: ' target' (ID: 3783)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.244924396276474
    2. ' for' → logprob: -1.6199244260787964
    3. '   ' → logprob: -4.494924545288086
    4. 'if' → logprob: -5.619924545288086
    5. ' ' → logprob: -5.744924545288086
    6. ' if' → logprob: -7.244924545288086
    7. '    ' → logprob: -8.869924545288086
    8. '[' → logprob: -9.119924545288086
    9. '  ' → logprob: -9.869924545288086
    10. '	for' → logprob: -9.869924545288086

Token 39: '=' (ID: 28)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5879690051078796
    2. '[' → logprob: -1.4629690647125244
    3. '[i' → logprob: -1.8379690647125244
    4. '==' → logprob: -4.337968826293945
    5. '[s' → logprob: -4.337968826293945
    6. ')' → logprob: -4.462968826293945
    7. ' ==' → logprob: -4.837968826293945
    8. '[]' → logprob: -6.587968826293945
    9. ']' → logprob: -6.587968826293945
    10. ' [' → logprob: -7.337968826293945

Token 40: 'targets' (ID: 99558)
  Prédit: 'targets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'targets' → logprob: -0.006012341007590294
    2. ' targets' → logprob: -5.131012439727783
    3. 'gu' → logprob: -10.256011962890625
    4. 'target' → logprob: -10.381011962890625
    5. 'scores' → logprob: -12.006011962890625
    6. '.targets' → logprob: -12.881011962890625
    7. '   ' → logprob: -13.006011962890625
    8. '_targets' → logprob: -13.131011962890625
    9. 't' → logprob: -13.631011962890625
    10. 'i' → logprob: -14.131011962890625

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008701320737600327
    2. '[' → logprob: -4.758701324462891
    3. ' [' → logprob: -10.13370132446289
    4. '[I' → logprob: -11.63370132446289
    5. '```' → logprob: -12.13370132446289
    6. '[j' → logprob: -12.25870132446289
    7. '[
' → logprob: -13.00870132446289
    8. '[s' → logprob: -13.38370132446289
    9. '\[' → logprob: -13.38370132446289
    10. '[index' → logprob: -13.75870132446289

Token 42: ']-' (ID: 27107)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07807301729917526
    2. ')' → logprob: -3.328073024749756
    3. '])
' → logprob: -3.578073024749756
    4. ']' → logprob: -5.203073024749756
    5. ')
' → logprob: -5.703073024749756
    6. ' ])' → logprob: -7.203073024749756
    7. '-' → logprob: -7.703073024749756
    8. '[i' → logprob: -8.203072547912598
    9. ')])' → logprob: -8.203072547912598
    10. ' )' → logprob: -8.578072547912598

Token 43: '1' (ID: 16)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gu' → logprob: -0.37592461705207825
    2. '1' → logprob: -1.2509245872497559
    3. ' guesses' → logprob: -3.750924587249756
    4. 'scores' → logprob: -6.625924587249756
    5. 'guess' → logprob: -6.750924587249756
    6. ' ' → logprob: -7.250924587249756
    7. 'g' → logprob: -9.375925064086914
    8. '   ' → logprob: -9.750925064086914
    9. '-gu' → logprob: -10.063425064086914
    10. ' scores' → logprob: -10.375925064086914

Token 44: '
' (ID: 198)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.1930197924375534
    2. '<|end|>' → logprob: -2.9430198669433594
    3. ' scores' → logprob: -3.6930198669433594
    4. ' ' → logprob: -3.9430198669433594
    5. 's' → logprob: -4.193019866943359
    6. '   ' → logprob: -4.318019866943359
    7. 'tokens' → logprob: -4.443019866943359
    8. ')' → logprob: -4.693019866943359
    9. '
' → logprob: -5.193019866943359
    10. '```' → logprob: -5.443019866943359

Token 45: '   ' (ID: 271)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.9690747261047363
    2. '<|end|>' → logprob: -1.4690747261047363
    3. ' ' → logprob: -1.9690747261047363
    4. '   ' → logprob: -2.2190747261047363
    5. ' scores' → logprob: -3.3440747261047363
    6. ')' → logprob: -4.219074726104736
    7. '
' → logprob: -4.594074726104736
    8. '    ' → logprob: -4.844074726104736
    9. 's' → logprob: -4.844074726104736
    10. '(scores' → logprob: -4.969074726104736

Token 46: ' X' (ID: 2127)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.03872121497988701
    2. 'if' → logprob: -4.163721084594727
    3. 'for' → logprob: -5.163721084594727
    4. ' scores' → logprob: -5.663721084594727
    5. 'gu' → logprob: -5.913721084594727
    6. 'score' → logprob: -6.038721084594727
    7. ' if' → logprob: -6.163721084594727
    8. 'guess' → logprob: -6.288721084594727
    9. ' for' → logprob: -6.788721084594727
    10. '   ' → logprob: -6.788721084594727

Token 47: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7186630964279175
    2. ' =' → logprob: -2.218663215637207
    3. '_scores' → logprob: -2.343663215637207
    4. 'scores' → logprob: -2.343663215637207
    5. 's' → logprob: -2.718663215637207
    6. '[' → logprob: -2.843663215637207
    7. '-' → logprob: -3.843663215637207
    8. '[i' → logprob: -5.093663215637207
    9. 'o' → logprob: -5.468663215637207
    10. '_' → logprob: -5.593663215637207

Token 48: '0' (ID: 15)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gu' → logprob: -0.013572745956480503
    2. ' guesses' → logprob: -4.763572692871094
    3. 'scores' → logprob: -5.638572692871094
    4. 'targets' → logprob: -8.263572692871094
    5. 'guess' → logprob: -8.388572692871094
    6. 'abs' → logprob: -8.513572692871094
    7. 'len' → logprob: -8.763572692871094
    8. 'int' → logprob: -8.763572692871094
    9. '0' → logprob: -9.513572692871094
    10. '   ' → logprob: -9.763572692871094

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016417784616351128
    2. ' for' → logprob: -4.266417980194092
    3. '   ' → logprob: -6.391417980194092
    4. '	for' → logprob: -8.516417503356934
    5. ' ' → logprob: -9.141417503356934
    6. '    ' → logprob: -9.141417503356934
    7. 'if' → logprob: -10.266417503356934
    8. '\t' → logprob: -11.016417503356934
    9. '<|end|>' → logprob: -11.266417503356934
    10. 'ind' → logprob: -11.391417503356934

Token 52: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04387533292174339
    2. 'j' → logprob: -3.168875217437744
    3. ' range' → logprob: -7.918875217437744
    4. ' ' → logprob: -8.043875694274902
    5. 'range' → logprob: -8.793875694274902
    6. '	j' → logprob: -12.043875694274902
    7. ' _' → logprob: -12.418875694274902
    8. ' guess' → logprob: -12.668875694274902
    9. ' ' → logprob: -12.668875694274902
    10. '  ' → logprob: -12.793875694274902

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1428874284029007
    2. 'in' → logprob: -2.0178873538970947
    3. ' ' → logprob: -8.892887115478516
    4. '<|end|>' → logprob: -10.767887115478516
    5. 'range' → logprob: -11.142887115478516
    6. '    ' → logprob: -11.392887115478516
    7. '	in' → logprob: -11.642887115478516
    8. ' range' → logprob: -12.017887115478516
    9. '   ' → logprob: -12.767887115478516
    10. ',' → logprob: -12.892887115478516

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693158745765686
    2. 'range' → logprob: -0.693158745765686
    3. ' guesses' → logprob: -12.568159103393555
    4. ' ' → logprob: -13.193159103393555
    5. '(range' → logprob: -13.443159103393555
    6. '	range' → logprob: -13.943159103393555
    7. 'gu' → logprob: -14.193159103393555
    8. ' xrange' → logprob: -14.693159103393555
    9. 'scores' → logprob: -14.818159103393555
    10. '   ' → logprob: -15.068159103393555

Token 55: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04440068453550339
    2. '(' → logprob: -3.669400691986084
    3. '(len' → logprob: -4.419400691986084
    4. '(M' → logprob: -5.669400691986084
    5. ' (' → logprob: -6.544400691986084
    6. 'N' → logprob: -7.919400691986084
    7. '(n' → logprob: -8.669400215148926
    8. '(s' → logprob: -9.294400215148926
    9. '(X' → logprob: -9.419400215148926
    10. 'len' → logprob: -10.044400215148926

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008870658464729786
    2. '):
' → logprob: -5.383870601654053
    3. ')' → logprob: -5.758870601654053
    4. ':' → logprob: -8.133871078491211
    5. '   ' → logprob: -8.133871078491211
    6. ' ):' → logprob: -8.133871078491211
    7. '+' → logprob: -9.008871078491211
    8. 'if' → logprob: -11.133871078491211
    9. ' )' → logprob: -11.383871078491211
    10. ' ' → logprob: -11.383871078491211

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1962814331054688
    2. '<|end|>' → logprob: -1.1962814331054688
    3. '   ' → logprob: -1.8212814331054688
    4. ' ' → logprob: -1.9462814331054688
    5. '    ' → logprob: -2.9462814331054688
    6. ' if' → logprob: -3.8212814331054688
    7. 'if' → logprob: -5.571281433105469
    8. ':' → logprob: -5.821281433105469
    9. '  ' → logprob: -6.321281433105469
    10. '        ' → logprob: -6.946281433105469

Token 58: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' guesses' (ID: 134802)
  Prédit: ' guesses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' guesses' → logprob: -0.03378032147884369
    2. 'gu' → logprob: -4.033780097961426
    3. ' scores' → logprob: -5.158780097961426
    4. ' j' → logprob: -5.783780097961426
    5. 'j' → logprob: -6.158780097961426
    6. ' targets' → logprob: -6.408780097961426
    7. ' ' → logprob: -7.033780097961426
    8. ' abs' → logprob: -7.408780097961426
    9. 'scores' → logprob: -7.658780097961426
    10. ' guess' → logprob: -8.408780097961426

Token 60: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001552665780764073
    2. '[' → logprob: -8.875155448913574
    3. '```' → logprob: -12.250155448913574
    4. '[i' → logprob: -12.750155448913574
    5. ' [' → logprob: -13.000155448913574
    6. '[J' → logprob: -14.000155448913574
    7. 'j' → logprob: -14.125155448913574
    8. '[
' → logprob: -15.125155448913574
    9. '\[' → logprob: -15.250155448913574
    10. '   ' → logprob: -15.500155448913574

Token 61: ']-' (ID: 27107)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15660390257835388
    2. ' ==' → logprob: -2.1566038131713867
    3. ']==' → logprob: -4.656603813171387
    4. ')' → logprob: -5.281603813171387
    5. ')==' → logprob: -5.656603813171387
    6. '>' → logprob: -5.781603813171387
    7. '[' → logprob: -6.031603813171387
    8. '!=' → logprob: -6.031603813171387
    9. ']' → logprob: -6.656603813171387
    10. '=' → logprob: -7.656603813171387

Token 62: '1' (ID: 16)
  Prédit: 'targets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'targets' → logprob: -0.021600352600216866
    2. ' targets' → logprob: -4.521600246429443
    3. 'scores' → logprob: -5.146600246429443
    4. '1' → logprob: -5.771600246429443
    5. 'target' → logprob: -6.646600246429443
    6. ' scores' → logprob: -9.646600723266602
    7. 'tar' → logprob: -10.396600723266602
    8. '=' → logprob: -10.771600723266602
    9. ' ' → logprob: -10.896600723266602
    10. '0' → logprob: -11.021600723266602

Token 63: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01871076039969921
    2. ' ==' → logprob: -4.018710613250732
    3. ')==' → logprob: -8.51871109008789
    4. ']==' → logprob: -9.14371109008789
    5. '!=' → logprob: -9.39371109008789
    6. '=' → logprob: -9.39371109008789
    7. ')' → logprob: -10.64371109008789
    8. '==
' → logprob: -11.39371109008789
    9. '==(' → logprob: -11.51871109008789
    10. '>' → logprob: -12.14371109008789

Token 64: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.4025396704673767
    2. 'targets' → logprob: -1.1525397300720215
    3. ' target' → logprob: -4.7775397300720215
    4. ' targets' → logprob: -5.0275397300720215
    5. '   ' → logprob: -8.027539253234863
    6. 'scores' → logprob: -9.277539253234863
    7. '	target' → logprob: -9.902539253234863
    8. 'j' → logprob: -11.027539253234863
    9. 'tar' → logprob: -11.152539253234863
    10. '(target' → logprob: -11.402539253234863

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017531297635287046
    2. ':
' → logprob: -6.876753330230713
    3. ' and' → logprob: -8.501752853393555
    4. '):' → logprob: -9.126752853393555
    5. 'and' → logprob: -9.251752853393555
    6. ':X' → logprob: -9.376752853393555
    7. ' :' → logprob: -9.751752853393555
    8. 'X' → logprob: -9.876752853393555
    9. '   ' → logprob: -10.126752853393555
    10. ')' → logprob: -10.876752853393555

Token 66: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46004486083984375
    2. '   ' → logprob: -2.3350448608398438
    3. 'X' → logprob: -2.4600448608398438
    4. ':' → logprob: -2.5850448608398438
    5. ' X' → logprob: -2.8350448608398438
    6. '           ' → logprob: -3.4600448608398438
    7. ' ' → logprob: -5.085044860839844
    8. ':
' → logprob: -5.835044860839844
    9. '	X' → logprob: -5.960044860839844
    10. '    ' → logprob: -6.710044860839844

Token 67: ' scores' (ID: 18923)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.03920276463031769
    2. ' X' → logprob: -3.5392026901245117
    3. 'scores' (adapté à ' scores') → logprob: -5.414202690124512
    4. '   ' → logprob: -5.914202690124512
    5. ' scores' → logprob: -6.914202690124512
    6. ' ' → logprob: -7.664202690124512
    7. '           ' → logprob: -8.289202690124512
    8. '       ' → logprob: -9.039202690124512
    9. '               ' → logprob: -9.164202690124512
    10. '  ' → logprob: -9.664202690124512

Token 68: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0028476715087890625
    2. '[' → logprob: -5.877847671508789
    3. '[i' → logprob: -10.377847671508789
    4. '[++' → logprob: -12.752847671508789
    5. '[J' → logprob: -14.002847671508789
    6. '+=' → logprob: -14.127847671508789
    7. '+' → logprob: -14.127847671508789
    8. '[js' → logprob: -14.252847671508789
    9. '++' → logprob: -14.252847671508789
    10. '```' → logprob: -14.502847671508789

Token 69: ']+=' (ID: 123635)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023366138339042664
    2. '+' → logprob: -4.5233659744262695
    3. ']+=' → logprob: -4.5233659744262695
    4. ' +=' → logprob: -7.6483659744262695
    5. ']' → logprob: -7.6483659744262695
    6. ')' → logprob: -8.14836597442627
    7. '++' → logprob: -10.27336597442627
    8. ')+' → logprob: -10.89836597442627
    9. '=' → logprob: -10.89836597442627
    10. '[' → logprob: -11.02336597442627

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.035081565380096436
    2. '10' → logprob: -4.160081386566162
    3. 'X' → logprob: -5.035081386566162
    4. '100' → logprob: -5.535081386566162
    5. '3' → logprob: -5.660081386566162
    6. '2' → logprob: -6.035081386566162
    7. '5' → logprob: -6.535081386566162
    8. '4' → logprob: -7.660081386566162
    9. ' ' → logprob: -8.78508186340332
    10. '50' → logprob: -9.53508186340332

Token 71: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8451348543167114
    2. ' if' → logprob: -1.7201348543167114
    3. '           ' → logprob: -1.8451348543167114
    4. 'if' → logprob: -1.8451348543167114
    5. ':
' → logprob: -3.095134735107422
    6. '   ' → logprob: -4.345134735107422
    7. '       ' → logprob: -5.095134735107422
    8. 's' → logprob: -6.095134735107422
    9. '<|end|>' → logprob: -6.470134735107422
    10. ' ' → logprob: -6.720134735107422

Token 75: '           ' (ID: 352)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.31674036383628845
    2. 'if' → logprob: -2.3167402744293213
    3. 'X' → logprob: -2.5667402744293213
    4. '   ' → logprob: -2.9417402744293213
    5. '           ' → logprob: -3.8167402744293213
    6. ' if' → logprob: -4.8167405128479
    7. ' scores' → logprob: -5.0667405128479
    8. ' X' → logprob: -6.3167405128479
    9. '       ' → logprob: -6.3167405128479
    10. '0' → logprob: -7.3167405128479

Token 76: ' X' (ID: 2127)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.04340105876326561
    2. '           ' → logprob: -4.54340124130249
    3. 'if' → logprob: -4.66840124130249
    4. '   ' → logprob: -4.66840124130249
    5. 'X' (adapté à ' X') → logprob: -5.04340124130249
    6. ' scores' → logprob: -5.79340124130249
    7. '       ' → logprob: -7.41840124130249
    8. 'pass' → logprob: -7.41840124130249
    9. 'break' → logprob: -7.54340124130249
    10. 'score' → logprob: -7.79340124130249

Token 77: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011754266917705536
    2. '=' → logprob: -5.011754035949707
    3. ' +=' → logprob: -5.511754035949707
    4. '+' → logprob: -7.636754035949707
    5. '-=' → logprob: -7.761754035949707
    6. '+=(' → logprob: -10.511754035949707
    7. '+='' → logprob: -11.886754035949707
    8. '-' → logprob: -11.886754035949707
    9. ' =' → logprob: -12.136754035949707
    10. ']+=' → logprob: -12.261754035949707

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00268504093401134
    2. 'abs' → logprob: -6.252685070037842
    3. 'scores' → logprob: -8.252684593200684
    4. 'gu' → logprob: -8.752684593200684
    5. ' ' → logprob: -9.127684593200684
    6. '0' → logprob: -9.252684593200684
    7. 'int' → logprob: -10.002684593200684
    8. 'N' → logprob: -11.377684593200684
    9. '2' → logprob: -11.502684593200684
    10. 'max' → logprob: -11.627684593200684

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7073807120323181
    2. '<|end|>' → logprob: -1.207380771636963
    3. '
' → logprob: -2.832380771636963
    4. ' ' → logprob: -3.207380771636963
    5. 'if' → logprob: -3.707380771636963
    6. ' if' → logprob: -3.707380771636963
    7. '       ' → logprob: -4.082380771636963
    8. '```' → logprob: -4.207380771636963
    9. '\n' → logprob: -4.957380771636963
    10. '    ' → logprob: -5.332380771636963

Token 80: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' scores' (ID: 18923)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5521817803382874
    2. '<|end|>' → logprob: -1.8021817207336426
    3. 'print' → logprob: -2.4271817207336426
    4. ' if' → logprob: -3.3021817207336426
    5. '   ' → logprob: -3.5521817207336426
    6. 'scores' (adapté à ' scores') → logprob: -3.5521817207336426
    7. 'for' → logprob: -3.6771817207336426
    8. '```' → logprob: -4.427181720733643
    9. '0' → logprob: -4.677181720733643
    10. 'X' → logprob: -4.927181720733643

Token 82: '[target' (ID: 123448)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ']+=' (ID: 123635)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12406033277511597
    2. '-=' → logprob: -2.6240603923797607
    3. ']+=' → logprob: -3.6240603923797607
    4. '-' → logprob: -4.499060153961182
    5. '+=(' → logprob: -6.374060153961182
    6. ')+' → logprob: -6.374060153961182
    7. ')' → logprob: -6.999060153961182
    8. ' +=' → logprob: -7.124060153961182
    9. ')-' → logprob: -7.749060153961182
    10. '+' → logprob: -8.62406063079834

Token 84: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.003286678809672594
    2. 'N' → logprob: -6.503286838531494
    3. 'M' → logprob: -6.878286838531494
    4. '1' → logprob: -8.253286361694336
    5. '(X' → logprob: -9.128286361694336
    6. '-X' → logprob: -9.128286361694336
    7. '(' → logprob: -9.503286361694336
    8. 'max' → logprob: -10.253286361694336
    9. ' X' → logprob: -10.253286361694336
    10. 'scores' → logprob: -10.253286361694336

Token 85: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12106341123580933
    2. '<|end|>' → logprob: -2.246063470840454
    3. '```' → logprob: -5.746063232421875
    4. '#' → logprob: -6.871063232421875
    5. 'for' → logprob: -6.871063232421875
    6. '
' → logprob: -6.871063232421875
    7. ')' → logprob: -7.746063232421875
    8. ' print' → logprob: -7.871063232421875
    9. '[' → logprob: -8.496063232421875
    10. ' ' → logprob: -8.621063232421875

Token 87: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15987510979175568
    2. ' j' → logprob: -2.5348751544952393
    3. 'i' → logprob: -2.9098751544952393
    4. 'j' → logprob: -4.65987491607666
    5. ' score' → logprob: -6.40987491607666
    6. ' ' → logprob: -6.78487491607666
    7. 'score' → logprob: -7.28487491607666
    8. ' _' → logprob: -7.65987491607666
    9. ' s' → logprob: -8.28487491607666
    10. '_' → logprob: -8.65987491607666

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01627763733267784
    2. 'in' → logprob: -4.14127779006958
    3. 'cores' → logprob: -9.266277313232422
    4. 'core' → logprob: -9.766277313232422
    5. ' ' → logprob: -10.516277313232422
    6. 's' → logprob: -10.891277313232422
    7. '	in' → logprob: -11.266277313232422
    8. ' ' → logprob: -11.516277313232422
    9. 'c' → logprob: -12.141277313232422
    10. 'n' → logprob: -12.141277313232422

Token 89: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.0006122402846813202
    2. ' scores' → logprob: -8.000612258911133
    3. 's' → logprob: -8.500612258911133
    4. '(scores' → logprob: -9.625612258911133
    5. 'score' → logprob: -12.250612258911133
    6. 'range' → logprob: -13.000612258911133
    7. 'cores' → logprob: -15.625612258911133
    8. ' ' → logprob: -16.500612258911133
    9. '_scores' → logprob: -17.625612258911133
    10. ' range' → logprob: -17.625612258911133

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08425931632518768
    2. 'print' → logprob: -2.584259271621704
    3. ':
' → logprob: -5.459259510040283
    4. ' print' → logprob: -6.959259510040283
    5. '.print' → logprob: -10.084259033203125
    6. '   ' → logprob: -10.459259033203125
    7. '	print' → logprob: -10.709259033203125
    8. '_print' → logprob: -11.584259033203125
    9. '(print' → logprob: -11.709259033203125
    10. ':
' → logprob: -12.084259033203125

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37147417664527893
    2. 'print' → logprob: -1.7464741468429565
    3. ' print' → logprob: -1.9964741468429565
    4. '	print' → logprob: -9.621474266052246
    5. '```' → logprob: -12.621474266052246
    6. '
' → logprob: -12.746474266052246
    7. '<|end|>' → logprob: -12.996474266052246
    8. ' ' → logprob: -13.371474266052246
    9. '.print' → logprob: -13.621474266052246
    10. '       ' → logprob: -13.871474266052246

Token 92: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00016206118743866682
    2. ' print' → logprob: -8.750162124633789
    3. '   ' → logprob: -12.875162124633789
    4. '```' → logprob: -14.500162124633789
    5. '	print' → logprob: -14.875162124633789
    6. '
' → logprob: -15.875162124633789
    7. '    
' → logprob: -17.75016212463379
    8. 'pr' → logprob: -17.87516212463379
    9. '``' → logprob: -18.25016212463379
    10. '.print' → logprob: -18.87516212463379

Token 93: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.001355594489723444
    2. '(' → logprob: -6.6263556480407715
    3. 's' → logprob: -10.626355171203613
    4. ' (' → logprob: -13.251355171203613
    5. '(f' → logprob: -13.501355171203613
    6. '(scores' → logprob: -14.251355171203613
    7. '(score' → logprob: -14.376355171203613
    8. '()' → logprob: -14.626355171203613
    9. '('' → logprob: -15.251355171203613
    10. '((' → logprob: -16.25135612487793

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.875000953674316
    3. ')`' → logprob: -15.875000953674316
    4. '))' → logprob: -16.0
    5. ' )' → logprob: -16.0
    6. '())' → logprob: -16.625
    7. '()' → logprob: -16.875
    8. ')}' → logprob: -18.375
    9. ')")' → logprob: -19.0
    10. '}' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 38.04%
Précision adaptée (1ère position): 40.22%
Précision (top 10): 72.83%
================================================================================
