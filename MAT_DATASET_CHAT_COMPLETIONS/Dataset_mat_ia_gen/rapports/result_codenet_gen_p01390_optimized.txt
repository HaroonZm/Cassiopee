================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

used = set()

def out(word):
    print(f"?{word}")
    sys.stdout.flush()
    used.add(word)

def err():
    print("!OUT")
    sys.stdout.flush()
    exit()

def main():
    # start with 'a'
    first = "a"
    out(first)
    prev = first
    while True:
        ai = input().strip()
        if ai in used:
            err()
        if not (1 <= len(ai) <= 2) or not ai.islower():
            err()
        if ai[0] != prev[-1]:
            err()
        used.add(ai)
        # Now respond with a word starting with ai[-1] not used yet
        # because AI words length max 2, we use 1 length words for simplicity
        start_char = ai[-1]
        # try single letter from start_char to 'z'
        found = False
        for c in range(ord(start_char), ord('z')+1):
            w = chr(c)
            if w not in used:
                out(w)
                prev = w
                found = True
                break
        if not found:
            # no new word found (should not happen within limits), call error (won't happen)
            err()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'used' (ID: 4943)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12063832581043243
    2. 'import' → logprob: -3.370638370513916
    3. '\n' → logprob: -3.495638370513916
    4. '' → logprob: -4.245638370513916
    5. '<|end|>' → logprob: -4.620638370513916
    6. '#' → logprob: -5.120638370513916
    7. 'print' → logprob: -5.120638370513916
    8. '\' → logprob: -6.495638370513916
    9. ',' → logprob: -6.495638370513916
    10. ';' → logprob: -6.620638370513916

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.664371848164592e-05
    2. ' .' → logprob: -12.750016212463379
    3. '```' → logprob: -12.875016212463379
    4. '.import' → logprob: -13.500016212463379
    5. 'import' → logprob: -13.500016212463379
    6. '.`' → logprob: -13.875016212463379
    7. ',' → logprob: -14.000016212463379
    8. '=' → logprob: -14.250016212463379
    9. '.​' → logprob: -14.250016212463379
    10. '."""' → logprob: -14.500016212463379

Token 5: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.435167133808136
    2. ' set' → logprob: -1.0601670742034912
    3. '{}' → logprob: -5.56016731262207
    4. ' ' → logprob: -6.68516731262207
    5. ' {}' → logprob: -6.81016731262207
    6. ' []' → logprob: -9.43516731262207
    7. '0' → logprob: -10.31016731262207
    8. '{' → logprob: -10.56016731262207
    9. ' {' → logprob: -10.56016731262207
    10. '=set' → logprob: -10.68516731262207

Token 6: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007660295814275742
    2. '()' → logprob: -7.500765800476074
    3. '(
' → logprob: -9.875765800476074
    4. '.' → logprob: -10.250765800476074
    5. ')' → logprob: -10.625765800476074
    6. '((' → logprob: -10.750765800476074
    7. '('' → logprob: -11.250765800476074
    8. '```' → logprob: -11.250765800476074
    9. '(

' → logprob: -11.375765800476074
    10. '(`' → logprob: -12.000765800476074

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1697511374950409
    2. '_' → logprob: -3.1697511672973633
    3. 'for' → logprob: -3.6697511672973633
    4. ',' → logprob: -3.7947511672973633
    5. '(' → logprob: -4.169751167297363
    6. 'f' → logprob: -4.419751167297363
    7. '=' → logprob: -4.919751167297363
    8. 'a' → logprob: -5.294751167297363
    9. 'w' → logprob: -5.419751167297363
    10. 'def' → logprob: -5.544751167297363

Token 8: ' out' (ID: 842)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7594858407974243
    2. ' main' → logprob: -1.7594858407974243
    3. ' space' → logprob: -2.1344857215881348
    4. ' add' → logprob: -2.2594857215881348
    5. ' process' → logprob: -2.7594857215881348
    6. ' check' → logprob: -3.7594857215881348
    7. ' calculate' → logprob: -4.134485721588135
    8. ' read' → logprob: -5.009485721588135
    9. ' find' → logprob: -5.634485721588135
    10. ' _' → logprob: -6.134485721588135

Token 9: '(word' (ID: 35459)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.0009870808571577072
    2. 'line' → logprob: -7.7509870529174805
    3. 'puts' → logprob: -8.50098705291748
    4. '_put' → logprob: -9.12598705291748
    5. 'ut' → logprob: -9.37598705291748
    6. '():' → logprob: -10.25098705291748
    7. 'pt' → logprob: -10.50098705291748
    8. 'pute' → logprob: -10.50098705291748
    9. ' put' → logprob: -11.12598705291748
    10. '```' → logprob: -11.25098705291748

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005979039240628481
    2. ')' → logprob: -5.130979061126709
    3. ':' → logprob: -10.50597858428955
    4. '):
' → logprob: -11.25597858428955
    5. ' ):' → logprob: -12.13097858428955
    6. ',' → logprob: -13.13097858428955
    7. '   ' → logprob: -14.63097858428955
    8. '():' → logprob: -15.00597858428955
    9. '=' → logprob: -15.50597858428955
    10. '}:' → logprob: -15.75597858428955

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024267932400107384
    2. 'print' → logprob: -4.39926815032959
    3. ' print' → logprob: -5.27426815032959
    4. ')' → logprob: -5.52426815032959
    5. '    
' → logprob: -7.02426815032959
    6. '```' → logprob: -7.77426815032959
    7. ':' → logprob: -8.64926815032959
    8. '(' → logprob: -8.77426815032959
    9. '()' → logprob: -9.14926815032959
    10. ' ' → logprob: -9.14926815032959

Token 12: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2504402995109558
    2. ' print' → logprob: -1.6254403591156006
    3. '   ' → logprob: -3.7504403591156006
    4. '```' → logprob: -7.6254401206970215
    5. ' for' → logprob: -8.50044059753418
    6. ' used' → logprob: -8.87544059753418
    7. ' if' → logprob: -9.62544059753418
    8. ' sys' → logprob: -9.75044059753418
    9. 'sys' → logprob: -10.00044059753418
    10. 'for' → logprob: -10.25044059753418

Token 13: '(f' (ID: 1526)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.06222771480679512
    2. '(' → logprob: -2.812227725982666
    3. '(f' → logprob: -8.562227249145508
    4. '('' → logprob: -10.062227249145508
    5. '()' → logprob: -11.187227249145508
    6. 'word' → logprob: -12.312227249145508
    7. '("("' → logprob: -13.187227249145508
    8. '((' → logprob: -13.437227249145508
    9. '("' → logprob: -14.187227249145508
    10. ' (' → logprob: -14.437227249145508

Token 14: '"?' (ID: 69029)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.11686617881059647
    2. '{' → logprob: -2.366866111755371
    3. ''{' → logprob: -4.116866111755371
    4. '"' → logprob: -8.491866111755371
    5. 'word' → logprob: -12.616866111755371
    6. '{})' → logprob: -12.991866111755371
    7. '("{' → logprob: -13.116866111755371
    8. '{text' → logprob: -13.241866111755371
    9. '">{' → logprob: -13.366866111755371
    10. ''' → logprob: -13.366866111755371

Token 15: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -2.868328920158092e-05
    2. 'word' → logprob: -10.875028610229492
    3. '{return' → logprob: -12.875028610229492
    4. ' {' → logprob: -13.375028610229492
    5. '"{' → logprob: -13.625028610229492
    6. '[word' → logprob: -14.000028610229492
    7. 'Word' → logprob: -14.625028610229492
    8. ''{' → logprob: -14.625028610229492
    9. '```' → logprob: -15.000028610229492
    10. '{text' → logprob: -15.000028610229492

Token 16: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.00013810492237098515
    2. '{' → logprob: -9.375138282775879
    3. ' word' → logprob: -9.875138282775879
    4. '}' → logprob: -14.125138282775879
    5. '(word' → logprob: -15.125138282775879
    6. '[word' → logprob: -15.125138282775879
    7. '_word' → logprob: -15.875138282775879
    8. '	word' → logprob: -16.000137329101562
    9. 'w' → logprob: -16.500137329101562
    10. '}{' → logprob: -16.625137329101562

Token 17: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.05707624927163124
    2. '}' → logprob: -3.1820762157440186
    3. '}?' → logprob: -4.307076454162598
    4. ' }' → logprob: -8.557076454162598
    5. '?' → logprob: -8.682076454162598
    6. '}!' → logprob: -10.057076454162598
    7. '}"' → logprob: -11.182076454162598
    8. '}')' → logprob: -11.432076454162598
    9. '}:' → logprob: -11.682076454162598
    10. '}>' → logprob: -11.807076454162598

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6532149314880371
    2. '
' → logprob: -1.153214931488037
    3. '\n' → logprob: -2.778214931488037
    4. '    
' → logprob: -3.278214931488037
    5. ' ' → logprob: -4.903214931488037
    6. '  
' → logprob: -5.028214931488037
    7. 'out' → logprob: -5.153214931488037
    8. 's' → logprob: -5.278214931488037
    9. 'sys' → logprob: -5.403214931488037
    10. '?' → logprob: -5.528214931488037

Token 19: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3995029628276825
    2. 'sys' (adapté à ' sys') → logprob: -1.7745029926300049
    3. 'response' → logprob: -3.274502992630005
    4. '
' → logprob: -3.399502992630005
    5. 'input' → logprob: -3.774502992630005
    6. '\n' → logprob: -4.274502754211426
    7. '    
' → logprob: -4.649502754211426
    8. 'answer' → logprob: -4.899502754211426
    9. 's' → logprob: -5.274502754211426
    10. 'word' → logprob: -5.274502754211426

Token 20: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.012930556200444698
    2. '.stdin' → logprob: -5.012930393218994
    3. '.exit' → logprob: -6.012930393218994
    4. '.' → logprob: -6.137930393218994
    5. '.flush' → logprob: -6.762930393218994
    6. '.stderr' → logprob: -8.262930870056152
    7. ' .' → logprob: -8.887930870056152
    8. '.out' → logprob: -10.387930870056152
    9. '.argv' → logprob: -13.012930870056152
    10. 'stdout' → logprob: -13.137930870056152

Token 21: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.00408932426944375
    2. '.' → logprob: -5.50408935546875
    3. '.write' → logprob: -13.00408935546875
    4. ' .' → logprob: -13.00408935546875
    5. '.readline' → logprob: -13.00408935546875
    6. 'flush' → logprob: -13.12908935546875
    7. '.stdout' → logprob: -13.87908935546875
    8. '.Flush' → logprob: -14.50408935546875
    9. ' flush' → logprob: -15.37908935546875
    10. '_flush' → logprob: -16.25408935546875

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007833030540496111
    2. '(' → logprob: -7.250783443450928
    3. '()
' → logprob: -10.00078296661377
    4. '()

' → logprob: -12.12578296661377
    5. ' ()' → logprob: -12.37578296661377
    6. '())' → logprob: -12.87578296661377
    7. '`()' → logprob: -12.87578296661377
    8. '()`' → logprob: -13.12578296661377
    9. '()\' → logprob: -13.25078296661377
    10. '(
' → logprob: -13.37578296661377

Token 23: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4735015630722046
    2. 'word' → logprob: -2.348501682281494
    3. 'w' → logprob: -2.598501682281494
    4. '   ' → logprob: -2.723501682281494
    5. 'r' → logprob: -3.473501682281494
    6. 'response' → logprob: -3.848501682281494
    7. '
' → logprob: -4.473501682281494
    8. 'answer' → logprob: -4.723501682281494
    9. 's' → logprob: -4.848501682281494
    10. 'n' → logprob: -4.848501682281494

Token 24: ' used' (ID: 2061)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0940655991435051
    2. 'response' → logprob: -3.3440656661987305
    3. '_' → logprob: -4.5940656661987305
    4. 'return' → logprob: -4.7190656661987305
    5. '   ' → logprob: -4.8440656661987305
    6. ' response' → logprob: -5.0940656661987305
    7. 'w' → logprob: -5.3440656661987305
    8. ' r' → logprob: -5.4690656661987305
    9. ' return' → logprob: -6.2190656661987305
    10. 'answer' → logprob: -6.5940656661987305

Token 25: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.18038442730903625
    2. '.' → logprob: -1.8053843975067139
    3. '.update' → logprob: -7.805384635925293
    4. ' .' → logprob: -9.055384635925293
    5. 'add' → logprob: -10.805384635925293
    6. '.setdefault' → logprob: -11.055384635925293
    7. '.remove' → logprob: -11.180384635925293
    8. '.readline' → logprob: -11.805384635925293
    9. '.append' → logprob: -11.930384635925293
    10. '<|end|>' → logprob: -11.930384635925293

Token 26: '(word' (ID: 35459)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5762713551521301
    2. '(word' → logprob: -0.8262713551521301
    3. '((' → logprob: -8.451271057128906
    4. '('' → logprob: -9.951271057128906
    5. '(f' → logprob: -10.451271057128906
    6. '("("' → logprob: -10.701271057128906
    7. '(
' → logprob: -12.326271057128906
    8. '(user' → logprob: -12.951271057128906
    9. ' (' → logprob: -13.201271057128906
    10. '(words' → logprob: -13.451271057128906

Token 27: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ')
' → logprob: -13.125003814697266
    3. '))' → logprob: -14.000003814697266
    4. ' )' → logprob: -14.750003814697266
    5. '   ' → logprob: -15.750003814697266
    6. '')' → logprob: -16.125003814697266
    7. '")' → logprob: -16.375003814697266
    8. '}' → logprob: -16.500003814697266
    9. ')))' → logprob: -16.500003814697266
    10. '`)' → logprob: -16.625003814697266

Token 28: 'def' (ID: 1314)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8890717625617981
    2. 'def' → logprob: -2.0140717029571533
    3. 'n' → logprob: -2.1390717029571533
    4. 'word' → logprob: -2.2640717029571533
    5. '_' → logprob: -2.8890717029571533
    6. '?' → logprob: -3.1390717029571533
    7. '
' → logprob: -3.3890717029571533
    8. '\n' → logprob: -3.6390717029571533
    9. '    
' → logprob: -4.264071941375732
    10. 'a' → logprob: -4.389071941375732

Token 29: ' err' (ID: 2962)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7156461477279663
    2. ' guess' → logprob: -0.9656461477279663
    3. ' check' → logprob: -2.715646266937256
    4. ' solve' → logprob: -3.215646266937256
    5. ' play' → logprob: -5.215646266937256
    6. ' search' → logprob: -5.840646266937256
    7. ' input' → logprob: -5.965646266937256
    8. ' find' → logprob: -6.215646266937256
    9. ' test' → logprob: -6.465646266937256
    10. 'solve' → logprob: -6.590646266937256

Token 30: '():
' (ID: 8595)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6122245788574219
    2. '(' → logprob: -1.3622245788574219
    3. '(word' → logprob: -1.7372245788574219
    4. '(or' → logprob: -3.737224578857422
    5. '(ord' → logprob: -7.487224578857422
    6. '("("' → logprob: -7.987224578857422
    7. '(error' → logprob: -8.612224578857422
    8. '(message' → logprob: -9.487224578857422
    9. 'ort' → logprob: -9.737224578857422
    10. ' (' → logprob: -9.862224578857422

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006609689444303513
    2. '()' → logprob: -8.50066089630127
    3. ')' → logprob: -9.50066089630127
    4. '(' → logprob: -9.62566089630127
    5. ' ' → logprob: -10.00066089630127
    6. 'print' → logprob: -10.25066089630127
    7. '    
' → logprob: -10.50066089630127
    8. '    ' → logprob: -10.62566089630127
    9. ' return' → logprob: -10.87566089630127
    10. '       ' → logprob: -11.12566089630127

Token 32: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.164054736495018
    2. ' print' → logprob: -2.6640546321868896
    3. '   ' → logprob: -3.9140546321868896
    4. 'line' → logprob: -3.9140546321868896
    5. 'return' → logprob: -5.039054870605469
    6. ' line' → logprob: -5.414054870605469
    7. 'pass' → logprob: -5.539054870605469
    8. 'word' → logprob: -5.789054870605469
    9. 'response' → logprob: -5.789054870605469
    10. 's' → logprob: -6.164054870605469

Token 33: '("' (ID: 568)
  Prédit: '("?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("?' → logprob: -0.44446831941604614
    2. '(' → logprob: -2.0694682598114014
    3. '(f' → logprob: -2.3194682598114014
    4. '(-' → logprob: -3.1944682598114014
    5. '("' → logprob: -3.1944682598114014
    6. '()' → logprob: -3.4444682598114014
    7. '("")' → logprob: -5.4444684982299805
    8. '('?' → logprob: -5.8194684982299805
    9. '('' → logprob: -5.9444684982299805
    10. '("("' → logprob: -6.1944684982299805

Token 34: '!' (ID: 0)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -0.10399872064590454
    2. '-' → logprob: -3.1039986610412598
    3. '!")' → logprob: -4.47899866104126
    4. '!' → logprob: -5.10399866104126
    5. '")' → logprob: -5.10399866104126
    6. '???' → logprob: -5.22899866104126
    7. '?")
' → logprob: -5.47899866104126
    8. '??' → logprob: -5.72899866104126
    9. 'ERROR' → logprob: -5.85399866104126
    10. 'Wrong' → logprob: -6.60399866104126

Token 35: 'OUT' (ID: 5858)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.26334208250045776
    2. '?' → logprob: -1.5133421421051025
    3. '")
' → logprob: -5.888341903686523
    4. 'error' → logprob: -5.888341903686523
    5. '?")
' → logprob: -6.888341903686523
    6. 'ERROR' → logprob: -7.513341903686523
    7. ')' → logprob: -7.513341903686523
    8. 'err' → logprob: -7.763341903686523
    9. '!")' → logprob: -8.013341903686523
    10. '"' → logprob: -8.138341903686523

Token 36: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.29255440831184387
    2. '_OF' → logprob: -2.5425543785095215
    3. 'PUT' → logprob: -2.6675543785095215
    4. 'OF' → logprob: -2.9175543785095215
    5. 'put' → logprob: -4.7925543785095215
    6. 'of' → logprob: -5.0425543785095215
    7. '_' → logprob: -5.2925543785095215
    8. '?' → logprob: -6.0425543785095215
    9. '_ERROR' → logprob: -6.4175543785095215
    10. 'O' → logprob: -6.4175543785095215

Token 37: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5989980101585388
    2. 'sys' (adapté à ' sys') → logprob: -0.8489980101585388
    3. '<|end|>' → logprob: -4.723998069763184
    4. '	sys' → logprob: -5.848998069763184
    5. ' sys' → logprob: -5.973998069763184
    6. '\n' → logprob: -6.223998069763184
    7. '
' → logprob: -6.348998069763184
    8. '```' → logprob: -6.473998069763184
    9. '<|end|>' → logprob: -6.848998069763184
    10. ')' → logprob: -7.348998069763184

Token 39: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.0008084330474957824
    2. '.' → logprob: -7.625808238983154
    3. '.stderr' → logprob: -8.750808715820312
    4. '.stdin' → logprob: -9.000808715820312
    5. 'stdout' → logprob: -10.750808715820312
    6. '.exit' → logprob: -11.750808715820312
    7. '.std' → logprob: -12.250808715820312
    8. '.argv' → logprob: -13.250808715820312
    9. '._' → logprob: -14.125808715820312
    10. '.output' → logprob: -14.750808715820312

Token 40: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.00012511172099038959
    2. 'flush' → logprob: -9.00012493133545
    3. '.' → logprob: -14.00012493133545
    4. '_flush' → logprob: -14.25012493133545
    5. '.write' → logprob: -16.625125885009766
    6. '.Flush' → logprob: -17.125125885009766
    7. ' flush' → logprob: -17.375125885009766
    8. '.readline' → logprob: -18.500125885009766
    9. '.fl' → logprob: -18.500125885009766
    10. '```' → logprob: -18.625125885009766

Token 41: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016659092216286808
    2. '()
' → logprob: -8.875166893005371
    3. '())' → logprob: -11.500166893005371
    4. '(' → logprob: -12.000166893005371
    5. '()

' → logprob: -12.875166893005371
    6. '()\' → logprob: -12.875166893005371
    7. ')' → logprob: -13.375166893005371
    8. '()`' → logprob: -13.500166893005371
    9. '`()' → logprob: -14.500166893005371
    10. ' ()' → logprob: -14.875166893005371

Token 42: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7654646635055542
    2. '\n' → logprob: -1.5154646635055542
    3. '?' → logprob: -2.5154647827148438
    4. 'n' → logprob: -3.2654647827148438
    5. '
' → logprob: -3.5154647827148438
    6. '\' → logprob: -3.5154647827148438
    7. 'if' → logprob: -3.6404647827148438
    8. '<|end|>' → logprob: -3.7654647827148438
    9. '    
' → logprob: -4.015464782714844
    10. 'for' → logprob: -4.515464782714844

Token 43: ' exit' (ID: 10654)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2312147617340088
    2. '    
' → logprob: -1.6062147617340088
    3. 'word' → logprob: -1.7312147617340088
    4. 'n' → logprob: -2.981214761734009
    5. 'w' → logprob: -3.356214761734009
    6. '\n' → logprob: -3.356214761734009
    7. '   ' → logprob: -3.356214761734009
    8. 'try' → logprob: -3.481214761734009
    9. 'while' → logprob: -3.606214761734009
    10. 'a' → logprob: -4.73121452331543

Token 44: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16025082767009735
    2. '(' → logprob: -1.9102507829666138
    3. '()(' → logprob: -12.160250663757324
    4. '()\' → logprob: -12.285250663757324
    5. ' ()' → logprob: -12.535250663757324
    6. '();' → logprob: -12.660250663757324
    7. '()
' → logprob: -12.910250663757324
    8. '()?' → logprob: -13.410250663757324
    9. '()]' → logprob: -13.535250663757324
    10. '()`' → logprob: -14.535250663757324

Token 45: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7541808485984802
    2. 'n' → logprob: -1.504180908203125
    3. 'w' → logprob: -2.629180908203125
    4. 'word' → logprob: -2.754180908203125
    5. '\n' → logprob: -2.754180908203125
    6. 'a' → logprob: -3.754180908203125
    7. '
' → logprob: -4.004180908203125
    8. '_' → logprob: -4.629180908203125
    9. 'for' → logprob: -4.629180908203125
    10. '\' → logprob: -4.629180908203125

Token 46: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.329466313123703
    2. ' solve' → logprob: -1.4544663429260254
    3. ' guess' → logprob: -4.329466342926025
    4. ' check' → logprob: -4.329466342926025
    5. 'solve' → logprob: -5.329466342926025
    6. ' find' → logprob: -5.579466342926025
    7. ' solution' → logprob: -5.829466342926025
    8. ' search' → logprob: -6.454466342926025
    9. 'main' → logprob: -6.579466342926025
    10. ' play' → logprob: -6.829466342926025

Token 47: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004309076175559312
    2. '()' → logprob: -8.250431060791016
    3. '(' → logprob: -8.750431060791016
    4. '():
' → logprob: -11.875431060791016
    5. ' ():' → logprob: -13.125431060791016
    6. '_' → logprob: -13.625431060791016
    7. '(:' → logprob: -15.250431060791016
    8. ':' → logprob: -15.500431060791016
    9. '()(' → logprob: -16.000431060791016
    10. '().' → logprob: -16.500431060791016

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059277284890413284
    2. ' n' → logprob: -4.559277057647705
    3. ' while' → logprob: -4.684277057647705
    4. ' word' → logprob: -5.059277057647705
    5. ' indentation' → logprob: -5.309277057647705
    6. ' pass' → logprob: -5.434277057647705
    7. ' for' → logprob: -6.059277057647705
    8. ' import' → logprob: -6.059277057647705
    9. ' ind' → logprob: -6.184277057647705
    10. ' line' → logprob: -6.309277057647705

Token 49: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5366933345794678
    2. 'n' → logprob: -1.0366933345794678
    3. ' word' → logprob: -4.661693572998047
    4. ' import' → logprob: -4.786693572998047
    5. 'import' → logprob: -4.786693572998047
    6. '   ' → logprob: -4.786693572998047
    7. ' for' → logprob: -6.161693572998047
    8. 'word' → logprob: -6.286693572998047
    9. 'for' → logprob: -6.411693572998047
    10. 's' → logprob: -6.411693572998047

Token 50: ' start' (ID: 1604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.771429181098938
    2. ' n' → logprob: -1.646429181098938
    3. ' word' → logprob: -2.0214290618896484
    4. ' import' → logprob: -2.7714290618896484
    5. ' for' → logprob: -3.7714290618896484
    6. ' try' → logprob: -4.021429061889648
    7. ' words' → logprob: -4.146429061889648
    8. ' while' → logprob: -4.271429061889648
    9. ' input' → logprob: -4.271429061889648
    10. 'import' → logprob: -4.396429061889648

Token 51: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15846693515777588
    2. '    ' → logprob: -3.0334668159484863
    3. '    
' → logprob: -3.5334668159484863
    4. ' word' → logprob: -4.158466815948486
    5. '<|end|>' → logprob: -4.408466815948486
    6. ' readline' → logprob: -4.783466815948486
    7. 'word' → logprob: -5.658466815948486
    8. ' 
' → logprob: -5.783466815948486
    9. '```' → logprob: -6.283466815948486
    10. ' words' → logprob: -6.283466815948486

Token 52: ' '' (ID: 461)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0452568531036377
    2. ' word' → logprob: -2.0452568531036377
    3. 'a' → logprob: -2.4202568531036377
    4. ' ' → logprob: -2.5452568531036377
    5. ' the' → logprob: -2.7952568531036377
    6. 'word' → logprob: -2.9202568531036377
    7. '   ' → logprob: -3.2952568531036377
    8. ' used' → logprob: -3.5452568531036377
    9. ' n' → logprob: -3.5452568531036377
    10. '"' → logprob: -3.9202568531036377

Token 53: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05505436286330223
    2. ''' → logprob: -3.5550544261932373
    3. 'A' → logprob: -5.555054187774658
    4. '?' → logprob: -5.555054187774658
    5. ' a' → logprob: -5.555054187774658
    6. ' '' → logprob: -6.680054187774658
    7. 's' → logprob: -6.680054187774658
    8. '"' → logprob: -7.055054187774658
    9. 'abc' → logprob: -7.305054187774658
    10. 'h' → logprob: -7.430054187774658

Token 54: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.034264255315065384
    2. '')' → logprob: -3.534264326095581
    3. 'a' → logprob: -6.034264087677002
    4. 'z' → logprob: -7.284264087677002
    5. 'b' → logprob: -8.40926456451416
    6. ''
' → logprob: -8.65926456451416
    7. ''a' → logprob: -8.78426456451416
    8. ''z' → logprob: -8.90926456451416
    9. 'bc' → logprob: -8.90926456451416
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -8.90926456451416

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026024846360087395
    2. '    
' → logprob: -4.65102481842041
    3. '<|end|>' → logprob: -5.15102481842041
    4. 'a' → logprob: -5.27602481842041
    5. '```' → logprob: -7.40102481842041
    6. '    ' → logprob: -7.40102481842041
    7. ',' → logprob: -7.65102481842041
    8. '<|end|>' → logprob: -7.65102481842041
    9. '  ' → logprob: -8.15102481842041
    10. ' a' → logprob: -8.15102481842041

Token 56: ' first' (ID: 1577)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.24281489849090576
    2. ' word' → logprob: -1.9928148984909058
    3. '   ' → logprob: -2.8678150177001953
    4. 'current' → logprob: -4.867815017700195
    5. 'out' → logprob: -5.367815017700195
    6. 'a' → logprob: -5.992815017700195
    7. ' current' → logprob: -6.117815017700195
    8. 'cur' → logprob: -6.617815017700195
    9. 'c' → logprob: -7.367815017700195
    10. ' out' → logprob: -7.492815017700195

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06618092209100723
    2. '_word' → logprob: -3.191180944442749
    3. '=' → logprob: -4.31618070602417
    4. '_' → logprob: -5.06618070602417
    5. '_letter' → logprob: -6.69118070602417
    6. '_char' → logprob: -6.94118070602417
    7. 'word' → logprob: -8.066181182861328
    8. ' ' → logprob: -9.316181182861328
    9. 'char' → logprob: -9.316181182861328
    10. '   ' → logprob: -9.316181182861328

Token 58: ' "' (ID: 392)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.01621067337691784
    2. ' '' → logprob: -4.391210556030273
    3. ''' → logprob: -6.141210556030273
    4. '"a' → logprob: -7.141210556030273
    5. '"' → logprob: -8.016210556030273
    6. 'a' → logprob: -8.141210556030273
    7. ' "' → logprob: -10.266210556030273
    8. ' a' → logprob: -10.391210556030273
    9. ' ' → logprob: -11.016210556030273
    10. '`' → logprob: -11.266210556030273

Token 59: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.870950215263292e-05
    2. ''a' → logprob: -10.125048637390137
    3. ' a' → logprob: -12.750048637390137
    4. ''' → logprob: -13.375048637390137
    5. '"a' → logprob: -13.500048637390137
    6. 'а' → logprob: -14.125048637390137
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -14.375048637390137
    8. '"' → logprob: -14.500048637390137
    9. 'b' → logprob: -15.875048637390137
    10. '```' → logprob: -16.000049591064453

Token 60: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00033510822686366737
    2. 'a' → logprob: -8.250334739685059
    3. '")' → logprob: -10.875334739685059
    4. '"
' → logprob: -11.000334739685059
    5. '"`' → logprob: -11.500334739685059
    6. ' "' → logprob: -11.875334739685059
    7. ''"' → logprob: -12.250334739685059
    8. 'b' → logprob: -12.375334739685059
    9. '"a' → logprob: -12.375334739685059
    10. ')"' → logprob: -13.000334739685059

Token 61: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.2926078736782074
    2. 'used' → logprob: -2.6676077842712402
    3. ' out' → logprob: -3.0426077842712402
    4. ' used' → logprob: -3.4176077842712402
    5. 'if' → logprob: -3.6676077842712402
    6. '   ' → logprob: -4.16760778427124
    7. 'for' → logprob: -4.29260778427124
    8. '
' → logprob: -4.29260778427124
    9. ' if' → logprob: -4.91760778427124
    10. 'while' → logprob: -5.04260778427124

Token 63: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.2524047791957855
    2. '(' → logprob: -1.502404808998108
    3. '(f' → logprob: -8.127405166625977
    4. '('' → logprob: -9.377405166625977
    5. '("("' → logprob: -9.877405166625977
    6. ' (' → logprob: -10.752405166625977
    7. '(word' → logprob: -12.502405166625977
    8. '(parent' → logprob: -12.877405166625977
    9. '(
' → logprob: -13.127405166625977
    10. '(fi' → logprob: -13.377405166625977

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1782583391759545e-05
    2. ')
' → logprob: -11.500031471252441
    3. ' )' → logprob: -11.750031471252441
    4. '")' → logprob: -11.875031471252441
    5. ')")' → logprob: -12.625031471252441
    6. ')`' → logprob: -13.750031471252441
    7. '))' → logprob: -13.875031471252441
    8. '   ' → logprob: -15.000031471252441
    9. '')' → logprob: -15.500031471252441
    10. ')
' → logprob: -15.625031471252441

Token 65: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' prev' (ID: 10258)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.7370489835739136
    2. '
' → logprob: -1.7370489835739136
    3. '   ' → logprob: -1.8620489835739136
    4. '    
' → logprob: -2.612049102783203
    5. 'w' → logprob: -2.737049102783203
    6. 'n' → logprob: -2.737049102783203
    7. '\n' → logprob: -3.362049102783203
    8. ' 
' → logprob: -3.737049102783203
    9. '\' → logprob: -3.862049102783203
    10. '_' → logprob: -3.862049102783203

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13185667991638184
    2. '=' → logprob: -2.131856679916382
    3. '_' → logprob: -5.756856918334961
    4. '_word' → logprob: -6.631856918334961
    5. ' ' → logprob: -9.256856918334961
    6. '_char' → logprob: -9.506856918334961
    7. '   ' → logprob: -9.756856918334961
    8. '_=' → logprob: -9.881856918334961
    9. 'word' → logprob: -11.381856918334961
    10. '_token' → logprob: -11.506856918334961

Token 68: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.01252813171595335
    2. ' first' → logprob: -4.387527942657471
    3. '"' → logprob: -11.637528419494629
    4. 'a' → logprob: -12.887528419494629
    5. '   ' → logprob: -13.012528419494629
    6. '[first' → logprob: -13.762528419494629
    7. '	first' → logprob: -14.262528419494629
    8. 'prev' → logprob: -14.387528419494629
    9. '(first' → logprob: -14.512528419494629
    10. ' ' → logprob: -14.887528419494629

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22242452204227448
    2. '   ' → logprob: -1.9724245071411133
    3. '    
' → logprob: -3.5974245071411133
    4. '<|end|>' → logprob: -3.9724245071411133
    5. '  
' → logprob: -5.972424507141113
    6. ' for' → logprob: -6.347424507141113
    7. ' while' → logprob: -6.347424507141113
    8. 'while' → logprob: -6.597424507141113
    9. ' 
' → logprob: -6.722424507141113
    10. '   
' → logprob: -6.722424507141113

Token 70: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7140141129493713
    2. '   ' → logprob: -1.2140140533447266
    3. '<|end|>' → logprob: -1.7140140533447266
    4. '    
' → logprob: -3.8390140533447266
    5. '<|end|>' → logprob: -5.714014053344727
    6. '  
' → logprob: -6.214014053344727
    7. ' for' → logprob: -6.839014053344727
    8. ' 
' → logprob: -6.964014053344727
    9. '\n' → logprob: -7.089014053344727
    10. '   
' → logprob: -7.589014053344727

Token 71: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.555729866027832
    2. 'for' → logprob: -1.930729866027832
    3. ' for' → logprob: -2.055729866027832
    4. 'while' (adapté à ' while') → logprob: -3.305729866027832
    5. ' while' → logprob: -3.430729866027832
    6. '<|end|>' → logprob: -4.055729866027832
    7. '
' → logprob: -4.305729866027832
    8. 'a' → logprob: -4.555729866027832
    9. '    
' → logprob: -4.930729866027832
    10. 'n' → logprob: -5.055729866027832

Token 72: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.07545910775661469
    2. 'True' → logprob: -2.7004590034484863
    3. ' prev' → logprob: -6.200459003448486
    4. ' len' → logprob: -6.325459003448486
    5. 'prev' → logprob: -7.075459003448486
    6. 'len' → logprob: -7.450459003448486
    7. '(True' → logprob: -8.825459480285645
    8. ' not' → logprob: -9.700459480285645
    9. ' ' → logprob: -10.825459480285645
    10. ' used' → logprob: -11.325459480285645

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013743992894887924
    2. ':
' → logprob: -7.876374244689941
    3. '   ' → logprob: -8.251374244689941
    4. '<|end|>' → logprob: -8.251374244689941
    5. '):' → logprob: -8.376374244689941
    6. '       ' → logprob: -9.751374244689941
    7. ',' → logprob: -9.876374244689941
    8. ' :' → logprob: -10.501374244689941
    9. '<|end|>' → logprob: -10.501374244689941
    10. '():' → logprob: -10.751374244689941

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45941072702407837
    2. '   ' → logprob: -1.0844106674194336
    3. '    ' → logprob: -4.209410667419434
    4. '    
' → logprob: -5.209410667419434
    5. ' try' → logprob: -5.959410667419434
    6. '        
' → logprob: -6.834410667419434
    7. '<|end|>' → logprob: -6.959410667419434
    8. ' 
' → logprob: -7.209410667419434
    9. '_' → logprob: -7.334410667419434
    10. '   
' → logprob: -7.459410667419434

Token 75: ' ai' (ID: 8440)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.035845160484314
    2. ' nxt' → logprob: -1.660845160484314
    3. ' next' → logprob: -1.910845160484314
    4. 'c' → logprob: -1.910845160484314
    5. ' try' → logprob: -3.1608452796936035
    6. 'next' → logprob: -3.2858452796936035
    7. 'n' → logprob: -3.7858452796936035
    8. ' for' → logprob: -4.1608452796936035
    9. 'for' → logprob: -4.7858452796936035
    10. 'try' → logprob: -5.0358452796936035

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5558027029037476
    2. '=' → logprob: -1.6808027029037476
    3. '_char' → logprob: -1.9308027029037476
    4. 'r' → logprob: -3.180802822113037
    5. '_letter' → logprob: -4.055802822113037
    6. 'char' → logprob: -4.555802822113037
    7. '_input' → logprob: -5.180802822113037
    8. '_' → logprob: -6.180802822113037
    9. '_next' → logprob: -6.180802822113037
    10. '   ' → logprob: -6.305802822113037

Token 77: ' input' (ID: 3422)
  Prédit: ' ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -1.1974252462387085
    2. ' input' → logprob: -1.5724252462387085
    3. 'chr' → logprob: -1.5724252462387085
    4. ' chr' → logprob: -2.197425365447998
    5. 'input' → logprob: -2.697425365447998
    6. ' prev' → logprob: -3.447425365447998
    7. 'prev' → logprob: -3.947425365447998
    8. ''' → logprob: -4.447425365447998
    9. 'ord' → logprob: -4.572425365447998
    10. ' sys' → logprob: -5.072425365447998

Token 78: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0043335105292499065
    2. '().' → logprob: -5.50433349609375
    3. '("")' → logprob: -9.50433349609375
    4. '())' → logprob: -10.00433349609375
    5. '()`' → logprob: -10.25433349609375
    6. '()>' → logprob: -10.50433349609375
    7. '(' → logprob: -11.37933349609375
    8. '()
' → logprob: -11.62933349609375
    9. '("' → logprob: -11.75433349609375
    10. '()"' → logprob: -11.87933349609375

Token 79: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0004330532974563539
    2. 'rstrip' → logprob: -7.750432968139648
    3. 'startswith' → logprob: -13.875432968139648
    4. 'split' → logprob: -14.875432968139648
    5. 'str' → logprob: -15.500432968139648
    6. ' strip' → logprob: -15.625432968139648
    7. 'lower' → logprob: -15.625432968139648
    8. 'read' → logprob: -15.625432968139648
    9. 'decode' → logprob: -16.62543296813965
    10. 'stripe' → logprob: -17.25043296813965

Token 80: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001058295019902289
    2. '()
' → logprob: -7.126058101654053
    3. '(' → logprob: -8.376058578491211
    4. '())' → logprob: -11.626058578491211
    5. '()

' → logprob: -13.126058578491211
    6. '('' → logprob: -13.376058578491211
    7. '()>' → logprob: -13.501058578491211
    8. ')' → logprob: -13.501058578491211
    9. '()
' → logprob: -13.751058578491211
    10. '()]' → logprob: -14.001058578491211

Token 81: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014273387379944324
    2. ' if' → logprob: -4.264273166656494
    3. '       ' → logprob: -9.514273643493652
    4. '#' → logprob: -10.889273643493652
    5. 'for' → logprob: -11.514273643493652
    6. 'i' → logprob: -13.764273643493652
    7. '
' → logprob: -13.889273643493652
    8. '<|end|>' → logprob: -13.889273643493652
    9. 'If' → logprob: -14.014273643493652
    10. ' ' → logprob: -14.139273643493652

Token 83: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.1077064648270607
    2. ' not' → logprob: -2.3577065467834473
    3. ' ' → logprob: -5.107706546783447
    4. 'ai' → logprob: -6.857706546783447
    5. 'not' → logprob: -8.607706069946289
    6. '  ' → logprob: -9.607706069946289
    7. '(ai' → logprob: -10.232706069946289
    8. ' ' → logprob: -10.857706069946289
    9. ' len' → logprob: -11.357706069946289
    10. '   ' → logprob: -11.857706069946289

Token 84: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04891378432512283
    2. '==' → logprob: -3.0489137172698975
    3. ' in' → logprob: -9.048913955688477
    4. ' not' → logprob: -9.173913955688477
    5. ' ' → logprob: -10.548913955688477
    6. '.startswith' → logprob: -10.548913955688477
    7. ' !=' → logprob: -10.673913955688477
    8. ' <' → logprob: -12.173913955688477
    9. '=="' → logprob: -12.548913955688477
    10. '=' → logprob: -12.798913955688477

Token 85: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.22542841732501984
    2. 'used' → logprob: -1.6004284620285034
    3. ' ' → logprob: -11.725428581237793
    4. '   ' → logprob: -12.350428581237793
    5. '  ' → logprob: -13.850428581237793
    6. '.used' → logprob: -13.975428581237793
    7. '{"' → logprob: -14.975428581237793
    8. '{' → logprob: -15.975428581237793
    9. ' usado' → logprob: -16.100427627563477
    10. '_used' → logprob: -16.100427627563477

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007704111281782389
    2. ':
' → logprob: -5.382704257965088
    3. ' or' → logprob: -5.882704257965088
    4. '):' → logprob: -9.25770378112793
    5. '       ' → logprob: -9.50770378112793
    6. ' :' → logprob: -9.88270378112793
    7. ':return' → logprob: -10.63270378112793
    8. '   ' → logprob: -10.75770378112793
    9. '):
' → logprob: -12.38270378112793
    10. ' and' → logprob: -12.63270378112793

Token 87: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022641856223344803
    2. '       ' → logprob: -4.522641658782959
    3. ' or' → logprob: -5.522641658782959
    4. ':' → logprob: -5.522641658782959
    5. ':
' → logprob: -5.897641658782959
    6. '<|end|>' → logprob: -8.147642135620117
    7. ' and' → logprob: -9.272642135620117
    8. '            
' → logprob: -9.897642135620117
    9. '<|end|>' → logprob: -10.022642135620117
    10. '          ' → logprob: -10.147642135620117

Token 88: ' err' (ID: 2962)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2734118700027466
    2. 'err' (adapté à ' err') → logprob: -2.023411750793457
    3. '               ' → logprob: -3.273411750793457
    4. ' err' → logprob: -3.398411750793457
    5. '
' → logprob: -3.648411750793457
    6. '       ' → logprob: -6.023411750793457
    7. 'break' → logprob: -6.148411750793457
    8. ' break' → logprob: -6.523411750793457
    9. '            
' → logprob: -6.648411750793457
    10. ' ' → logprob: -7.523411750793457

Token 89: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002651503309607506
    2. '()
' → logprob: -8.250265121459961
    3. '()

' → logprob: -13.750265121459961
    4. '()`' → logprob: -13.750265121459961
    5. '()
' → logprob: -14.125265121459961
    6. '())' → logprob: -14.500265121459961
    7. '()]' → logprob: -15.625265121459961
    8. ' ()' → logprob: -15.625265121459961
    9. '()\' → logprob: -16.75026512145996
    10. '();' → logprob: -17.50026512145996

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02364605851471424
    2. '<|end|>' → logprob: -4.148645877838135
    3. '        
' → logprob: -5.273645877838135
    4. '
' → logprob: -6.148645877838135
    5. '<|end|>' → logprob: -9.148646354675293
    6. '        ' → logprob: -9.523646354675293
    7. '```' → logprob: -10.773646354675293
    8. '      ' → logprob: -10.898646354675293
    9. '        
        
' → logprob: -11.773646354675293
    10. '        

' → logprob: -11.773646354675293

Token 91: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014765199273824692
    2. ' if' → logprob: -5.26476526260376
    3. 'if' (adapté à ' if') → logprob: -6.01476526260376
    4. '
' → logprob: -6.13976526260376
    5. '<|end|>' → logprob: -6.63976526260376
    6. 'prev' → logprob: -7.13976526260376
    7. ' used' → logprob: -7.26476526260376
    8. '        
' → logprob: -7.51476526260376
    9. '   ' → logprob: -8.014764785766602
    10. ' prev' → logprob: -8.764764785766602

Token 92: ' not' (ID: 625)
  Prédit: ' ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.3911432921886444
    2. ' len' → logprob: -2.016143321990967
    3. 'ai' → logprob: -2.141143321990967
    4. 'len' → logprob: -3.016143321990967
    5. ' prev' → logprob: -4.766143321990967
    6. ' ord' → logprob: -5.266143321990967
    7. 'prev' → logprob: -5.516143321990967
    8. ' not' → logprob: -5.641143321990967
    9. 'ord' → logprob: -6.391143321990967
    10. ' ' → logprob: -7.766143321990967

Token 93: ' (' (ID: 350)
  Prédit: ' ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.025700027123093605
    2. 'ai' → logprob: -3.775700092315674
    3. '(ai' → logprob: -7.400700092315674
    4. ' prev' → logprob: -7.900700092315674
    5. 'len' → logprob: -8.275699615478516
    6. ' len' → logprob: -8.275699615478516
    7. 'prev' → logprob: -8.650699615478516
    8. ' any' → logprob: -8.775699615478516
    9. ''' → logprob: -8.900699615478516
    10. ' all' → logprob: -9.400699615478516

Token 94: '1' (ID: 16)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.21729326248168945
    2. 'ai' → logprob: -2.7172932624816895
    3. ''ai' → logprob: -2.7172932624816895
    4. 'len' → logprob: -3.7172932624816895
    5. ''' → logprob: -4.3422932624816895
    6. ' '' → logprob: -4.5922932624816895
    7. ' ai' → logprob: -5.3422932624816895
    8. 'a' → logprob: -5.4672932624816895
    9. '('' → logprob: -6.7172932624816895
    10. '(ai' → logprob: -6.9672932624816895

Token 95: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.17985527217388153
    2. '<=' → logprob: -1.804855227470398
    3. 'len' → logprob: -10.179855346679688
    4. '0' → logprob: -10.429855346679688
    5. 'le' → logprob: -11.679855346679688
    6. '<len' → logprob: -12.054855346679688
    7. '1' → logprob: -12.929855346679688
    8. '#' → logprob: -12.929855346679688
    9. ' ' → logprob: -12.929855346679688
    10. '   ' → logprob: -13.179855346679688

Token 96: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.18053431808948517
    2. ' len' → logprob: -1.8055343627929688
    3. 'ord' → logprob: -8.055534362792969
    4. ' ord' → logprob: -8.180534362792969
    5. 'int' → logprob: -8.930534362792969
    6. ' ai' → logprob: -10.930534362792969
    7. ' int' → logprob: -10.930534362792969
    8. 'ai' → logprob: -11.555534362792969
    9. '(len' → logprob: -12.680534362792969
    10. ' ' → logprob: -12.805534362792969

Token 97: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: -2.3795937522663735e-05
    2. 'ai' → logprob: -10.75002384185791
    3. '(' → logprob: -13.87502384185791
    4. ' ai' → logprob: -14.25002384185791
    5. '(a' → logprob: -15.12502384185791
    6. '_ai' → logprob: -16.000022888183594
    7. '.ai' → logprob: -16.375022888183594
    8. ' (' → logprob: -16.500022888183594
    9. '(i' → logprob: -17.125022888183594
    10. '
' → logprob: -17.625022888183594

Token 98: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5238395929336548
    2. '<=' → logprob: -0.8988395929336548
    3. ' and' → logprob: -8.023839950561523
    4. 'and' → logprob: -8.273839950561523
    5. ')' → logprob: -9.273839950561523
    6. ')<=' → logprob: -11.398839950561523
    7. '<|end|>' → logprob: -12.648839950561523
    8. ' ' → logprob: -12.773839950561523
    9. '<|end|>' → logprob: -12.898839950561523
    10. '()' → logprob: -13.023839950561523

Token 99: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.22769279778003693
    2. ' <=' → logprob: -1.6026928424835205
    3. ' and' → logprob: -6.602692604064941
    4. 'and' → logprob: -7.227692604064941
    5. ')' → logprob: -9.602692604064941
    6. '<|end|>' → logprob: -9.977692604064941
    7. ')<=' → logprob: -10.602692604064941
    8. '<|end|>' → logprob: -11.727692604064941
    9. '[' → logprob: -11.852692604064941
    10. '1' → logprob: -11.977692604064941

Token 100: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7751983404159546
    2. '100' → logprob: -1.5251983404159546
    3. '20' → logprob: -1.9001983404159546
    4. '3' → logprob: -3.275198459625244
    5. '26' → logprob: -3.275198459625244
    6. '5' → logprob: -3.775198459625244
    7. '50' → logprob: -3.900198459625244
    8. ' ' → logprob: -3.900198459625244
    9. '2' → logprob: -5.025198459625244
    10. '200' → logprob: -5.025198459625244

Token 101: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8774580955505371
    2. '3' → logprob: -1.377458095550537
    3. '100' → logprob: -2.252458095550537
    4. '20' → logprob: -2.627458095550537
    5. '26' → logprob: -3.127458095550537
    6. '5' → logprob: -3.252458095550537
    7. '50' → logprob: -4.002458095550537
    8. '2' → logprob: -4.252458095550537
    9. '200' → logprob: -5.127458095550537
    10. '300' → logprob: -5.127458095550537

Token 102: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07562247663736343
    2. '):
' → logprob: -3.45062255859375
    3. ')' → logprob: -3.70062255859375
    4. '):' → logprob: -4.57562255859375
    5. 'and' → logprob: -5.32562255859375
    6. ' ):
' → logprob: -7.82562255859375
    7. ' )' → logprob: -8.20062255859375
    8. '           ' → logprob: -8.70062255859375
    9. '       ' → logprob: -8.82562255859375
    10. ' ):' → logprob: -9.82562255859375

Token 103: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18479281663894653
    2. ' or' → logprob: -2.3097927570343018
    3. ' and' → logprob: -2.9347927570343018
    4. ':
' → logprob: -4.309792995452881
    5. '       ' → logprob: -6.559792995452881
    6. '           ' → logprob: -6.684792995452881
    7. 'and' → logprob: -8.809792518615723
    8. '   ' → logprob: -11.684792518615723
    9. ':return' → logprob: -11.934792518615723
    10. ' :' → logprob: -12.059792518615723

Token 104: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14068390429019928
    2. 'not' → logprob: -2.765683889389038
    3. ' any' → logprob: -3.265683889389038
    4. 'any' → logprob: -3.765683889389038
    5. ' ai' → logprob: -6.015684127807617
    6. 'ai' → logprob: -6.140684127807617
    7. '(ai' → logprob: -6.890684127807617
    8. '(not' → logprob: -7.140684127807617
    9. '(any' → logprob: -8.890684127807617
    10. 'len' → logprob: -9.140684127807617

Token 105: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.2700347900390625
    2. 'ai' → logprob: -2.1450347900390625
    3. ' all' → logprob: -2.3950347900390625
    4. 'all' → logprob: -4.1450347900390625
    5. '(ai' → logprob: -4.5200347900390625
    6. '('' → logprob: -7.5200347900390625
    7. ' (' → logprob: -7.6450347900390625
    8. '(' → logprob: -8.145034790039062
    9. '(all' → logprob: -8.645034790039062
    10. ' ('' → logprob: -10.145034790039062

Token 106: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00910989660769701
    2. '[' → logprob: -4.884109973907471
    3. '.' → logprob: -6.634109973907471
    4. '[-' → logprob: -10.009109497070312
    5. 'is' → logprob: -10.134109497070312
    6. '[i' → logprob: -10.259109497070312
    7. '.replace' → logprob: -10.634109497070312
    8. ' .' → logprob: -11.634109497070312
    9. '.startswith' → logprob: -12.009109497070312
    10. '.ai' → logprob: -12.384109497070312

Token 107: 'lower' (ID: 30330)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.007099550683051348
    2. 'lower' → logprob: -5.007099628448486
    3. 'ascii' → logprob: -7.882099628448486
    4. 'al' → logprob: -12.132099151611328
    5. 'print' → logprob: -14.757099151611328
    6. ' alpha' → logprob: -15.632099151611328
    7. 'alphabet' → logprob: -15.757099151611328
    8. '_alpha' → logprob: -16.257099151611328
    9. '.alpha' → logprob: -16.257099151611328
    10. '-alpha' → logprob: -16.382099151611328

Token 108: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0015041481237858534
    2. '()' → logprob: -6.501503944396973
    3. ' ():' → logprob: -13.876503944396973
    4. '():
' → logprob: -14.626503944396973
    5. '().' → logprob: -16.50150489807129
    6. 'case' → logprob: -16.75150489807129
    7. '():

' → logprob: -17.00150489807129
    8. ':' → logprob: -17.12650489807129
    9. '(),' → logprob: -17.50150489807129
    10. '(' → logprob: -17.75150489807129

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00032151900813914835
    2. '       ' → logprob: -8.375321388244629
    3. ':' → logprob: -10.875321388244629
    4. '               ' → logprob: -11.000321388244629
    5. '            
' → logprob: -11.125321388244629
    6. ':
' → logprob: -11.625321388244629
    7. '
' → logprob: -11.750321388244629
    8. ',' → logprob: -12.375321388244629
    9. '          ' → logprob: -12.500321388244629
    10. ' continue' → logprob: -12.750321388244629

Token 110: ' err' (ID: 2962)
  Prédit: ' err'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' err' → logprob: -0.31489789485931396
    2. 'err' (adapté à ' err') → logprob: -1.564897894859314
    3. '           ' → logprob: -2.8148980140686035
    4. '       ' → logprob: -7.3148980140686035
    5. ' ' → logprob: -8.689897537231445
    6. '   ' → logprob: -8.689897537231445
    7. '               ' → logprob: -10.564897537231445
    8. '          ' → logprob: -11.064897537231445
    9. '  ' → logprob: -11.439897537231445
    10. '.err' → logprob: -11.689897537231445

Token 111: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009149204124696553
    2. '()
' → logprob: -7.000915050506592
    3. '())' → logprob: -13.500914573669434
    4. '()
' → logprob: -14.000914573669434
    5. '()`' → logprob: -14.875914573669434
    6. '()

' → logprob: -15.000914573669434
    7. '()]' → logprob: -16.00091552734375
    8. '();' → logprob: -16.12591552734375
    9. ' ()' → logprob: -16.75091552734375
    10. '()>' → logprob: -17.37591552734375

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040219054790213704
    2. '<|end|>' → logprob: -8.125402450561523
    3. 'if' → logprob: -10.250402450561523
    4. '        
' → logprob: -11.250402450561523
    5. '```' → logprob: -11.250402450561523
    6. '   ' → logprob: -11.625402450561523
    7. 'next' → logprob: -11.750402450561523
    8. ' if' → logprob: -12.375402450561523
    9. '<|end|>' → logprob: -12.625402450561523
    10. '
' → logprob: -12.750402450561523

Token 113: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10140030086040497
    2. 'next' → logprob: -2.851400375366211
    3. '       ' → logprob: -3.976400375366211
    4. ' if' → logprob: -4.851400375366211
    5. 'last' → logprob: -5.351400375366211
    6. '#' → logprob: -5.976400375366211
    7. 'new' → logprob: -6.476400375366211
    8. ' next' → logprob: -6.601400375366211
    9. 'for' → logprob: -8.101400375366211
    10. 'n' → logprob: -8.226400375366211

Token 114: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.2841137945652008
    2. ' len' → logprob: -2.034113883972168
    3. ' prev' → logprob: -2.409113883972168
    4. ' not' → logprob: -4.784113883972168
    5. 'ai' → logprob: -4.784113883972168
    6. 'len' → logprob: -5.284113883972168
    7. 'prev' → logprob: -5.534113883972168
    8. ' ' → logprob: -8.284113883972168
    9. '(ai' → logprob: -8.284113883972168
    10. ' (' → logprob: -9.159113883972168

Token 115: '[' (ID: 58)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4319376051425934
    2. '.startswith' → logprob: -1.431937575340271
    3. '==' → logprob: -2.5569376945495605
    4. '[' → logprob: -4.6819376945495605
    5. ' <=' → logprob: -4.6819376945495605
    6. ' !=' → logprob: -4.8069376945495605
    7. ' ' → logprob: -6.3069376945495605
    8. ' >' → logprob: -6.4319376945495605
    9. ' <' → logprob: -6.9319376945495605
    10. '!=' → logprob: -7.1819376945495605

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10728432238101959
    2. '-' → logprob: -2.3572843074798584
    3. ' ' → logprob: -5.9822845458984375
    4. ':' → logprob: -6.2322845458984375
    5. '==' → logprob: -7.6072845458984375
    6. ' -' → logprob: -7.6072845458984375
    7. '1' → logprob: -7.9822845458984375
    8. ' ==' → logprob: -8.232284545898438
    9. '[' → logprob: -8.857284545898438
    10. 'len' → logprob: -8.857284545898438

Token 117: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4385088086128235
    2. '==' → logprob: -1.0635087490081787
    3. ' !=' → logprob: -4.813508987426758
    4. '!=' → logprob: -6.438508987426758
    5. ')' → logprob: -11.188508987426758
    6. ' ' → logprob: -11.813508987426758
    7. ')==' → logprob: -12.063508987426758
    8. '=' → logprob: -12.438508987426758
    9. '==
' → logprob: -13.063508987426758
    10. ']==' → logprob: -13.188508987426758

Token 118: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7297379374504089
    2. ' ==' → logprob: -0.8547379374504089
    3. ' !=' → logprob: -2.8547379970550537
    4. '!=' → logprob: -3.3547379970550537
    5. ' ' → logprob: -10.354738235473633
    6. '=' → logprob: -11.354738235473633
    7. '[' → logprob: -11.479738235473633
    8. '==
' → logprob: -11.604738235473633
    9. ' in' → logprob: -13.104738235473633
    10. ')' → logprob: -13.354738235473633

Token 119: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.00043102685594931245
    2. ' prev' → logprob: -7.750431060791016
    3. '	prev' → logprob: -15.875431060791016
    4. '   ' → logprob: -16.875431060791016
    5. '
' → logprob: -17.750431060791016
    6. '(prev' → logprob: -19.375431060791016
    7. 'p' → logprob: -19.500431060791016
    8. 'pre' → logprob: -19.500431060791016
    9. 'previous' → logprob: -19.750431060791016
    10. ' ' → logprob: -20.000431060791016

Token 120: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0008771585416980088
    2. '[' → logprob: -7.125877380371094
    3. '   ' → logprob: -10.500877380371094
    4. '       ' → logprob: -11.375877380371094
    5. ' [-' → logprob: -11.375877380371094
    6. '```' → logprob: -12.000877380371094
    7. '`' → logprob: -12.875877380371094
    8. '1' → logprob: -13.000877380371094
    9. '           ' → logprob: -13.250877380371094
    10. '][-' → logprob: -13.500877380371094

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.951771421066951e-05
    2. ' ' → logprob: -10.500029563903809
    3. '   ' → logprob: -14.250029563903809
    4. '2' → logprob: -15.500029563903809
    5. '  ' → logprob: -15.687529563903809
    6. 'last' → logprob: -15.937529563903809
    7. '+' → logprob: -16.375028610229492
    8. '```' → logprob: -16.625028610229492
    9. '
' → logprob: -17.062528610229492
    10. 'len' → logprob: -17.062528610229492

Token 122: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05779074877500534
    2. '):
' → logprob: -3.432790756225586
    3. ':' → logprob: -3.807790756225586
    4. '           ' → logprob: -7.557790756225586
    5. ']:
' → logprob: -7.932790756225586
    6. '       ' → logprob: -8.182790756225586
    7. '):' → logprob: -8.807790756225586
    8. ' or' → logprob: -8.932790756225586
    9. '():
' → logprob: -9.307790756225586
    10. ' :
' → logprob: -10.682790756225586

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00773805845528841
    2. 'err' → logprob: -5.13273811340332
    3. '       ' → logprob: -6.75773811340332
    4. ' err' → logprob: -7.88273811340332
    5. '   ' → logprob: -9.75773811340332
    6. '            
' → logprob: -10.00773811340332
    7. '          ' → logprob: -10.38273811340332
    8. '
' → logprob: -10.38273811340332
    9. 'out' → logprob: -10.63273811340332
    10. '               ' → logprob: -10.75773811340332

Token 124: ' err' (ID: 2962)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' (adapté à ' err') → logprob: -0.13866326212882996
    2. '           ' → logprob: -2.5136632919311523
    3. '       ' → logprob: -3.5136632919311523
    4. ' err' → logprob: -4.013663291931152
    5. '   ' → logprob: -7.763663291931152
    6. ' ' → logprob: -9.638663291931152
    7. 'out' → logprob: -10.388663291931152
    8. '               ' → logprob: -10.638663291931152
    9. '	err' → logprob: -11.013663291931152
    10. '          ' → logprob: -11.138663291931152

Token 125: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.088138227118179e-05
    2. '()
' → logprob: -9.625070571899414
    3. '())' → logprob: -13.375070571899414
    4. '()`' → logprob: -13.750070571899414
    5. '(' → logprob: -14.375070571899414
    6. '()

' → logprob: -14.750070571899414
    7. '()]' → logprob: -14.750070571899414
    8. ')' → logprob: -15.625070571899414
    9. '():' → logprob: -16.125070571899414
    10. '();' → logprob: -16.125070571899414

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033040955662727356
    2. 'out' → logprob: -3.908041000366211
    3. 'prev' → logprob: -5.033041000366211
    4. 'if' → logprob: -5.783041000366211
    5. ' out' → logprob: -6.783041000366211
    6. '
' → logprob: -7.033041000366211
    7. ' if' → logprob: -8.408041000366211
    8. '   ' → logprob: -8.533041000366211
    9. ' prev' → logprob: -9.283041000366211
    10. '```' → logprob: -9.408041000366211

Token 127: ' used' (ID: 2061)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.07412896305322647
    2. 'if' → logprob: -3.1991288661956787
    3. 'prev' → logprob: -3.8241288661956787
    4. 'next' → logprob: -5.449129104614258
    5. 'used' (adapté à ' used') → logprob: -6.199129104614258
    6. '   ' → logprob: -7.324129104614258
    7. ' out' → logprob: -7.449129104614258
    8. 'for' → logprob: -7.574129104614258
    9. '       ' → logprob: -8.574129104614258
    10. 'last' → logprob: -8.949129104614258

Token 128: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00133595522493124
    2. '.' → logprob: -6.626336097717285
    3. '.update' → logprob: -12.501336097717285
    4. '.setdefault' → logprob: -13.251336097717285
    5. ' .' → logprob: -13.376336097717285
    6. '.append' → logprob: -14.001336097717285
    7. ').' → logprob: -14.626336097717285
    8. '.remove' → logprob: -14.876336097717285
    9. 'add' → logprob: -15.251336097717285
    10. '().' → logprob: -15.251336097717285

Token 129: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: 0.0
    2. '(' → logprob: -17.25
    3. '(a' → logprob: -18.125
    4. '(ui' → logprob: -21.75
    5. 'ai' → logprob: -21.875
    6. '(prev' → logprob: -22.0
    7. '(si' → logprob: -22.5
    8. '(an' → logprob: -22.5
    9. '(i' → logprob: -22.625
    10. '((' → logprob: -22.875

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04305513948202133
    2. ')
' → logprob: -3.1680550575256348
    3. '       ' → logprob: -10.668055534362793
    4. ')
' → logprob: -11.418055534362793
    5. '[' → logprob: -11.918055534362793
    6. '
' → logprob: -12.418055534362793
    7. ')

' → logprob: -12.918055534362793
    8. '())' → logprob: -13.418055534362793
    9. '   ' → logprob: -13.543055534362793
    10. ' )' → logprob: -13.793055534362793

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11864528805017471
    2. '
' → logprob: -2.868645191192627
    3. 'prev' → logprob: -3.368645191192627
    4. 'if' → logprob: -4.118645191192627
    5. '        
' → logprob: -6.743645191192627
    6. '```' → logprob: -6.993645191192627
    7. ' if' → logprob: -7.118645191192627
    8. '
' → logprob: -7.993645191192627
    9. '<|end|>' → logprob: -7.993645191192627
    10. ' prev' → logprob: -7.993645191192627

Token 132: ' #' (ID: 1069)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0005237233126536012
    2. 'if' → logprob: -7.750523567199707
    3. ' prev' → logprob: -9.500523567199707
    4. '       ' → logprob: -11.750523567199707
    5. '   ' → logprob: -12.125523567199707
    6. '	prev' → logprob: -13.000523567199707
    7. 'print' → logprob: -14.250523567199707
    8. 'first' → logprob: -14.500523567199707
    9. 'out' → logprob: -14.875523567199707
    10. '
' → logprob: -15.250523567199707

Token 133: ' Now' (ID: 6549)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.09076087176799774
    2. 'if' → logprob: -2.4657609462738037
    3. '#' → logprob: -7.715760707855225
    4. 'out' → logprob: -7.965760707855225
    5. ' prev' → logprob: -8.090761184692383
    6. '   ' → logprob: -8.090761184692383
    7. 'first' → logprob: -8.715761184692383
    8. 'last' → logprob: -9.840761184692383
    9. 'prefix' → logprob: -10.465761184692383
    10. ' if' → logprob: -10.465761184692383

Token 134: ' respond' (ID: 9570)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0813470259308815
    2. 'prev' → logprob: -3.0813469886779785
    3. 'if' → logprob: -3.7063469886779785
    4. ' if' → logprob: -5.3313469886779785
    5. ' prev' → logprob: -6.0813469886779785
    6. '   ' → logprob: -8.206347465515137
    7. '	prev' → logprob: -9.831347465515137
    8. '
' → logprob: -9.956347465515137
    9. '```' → logprob: -10.581347465515137
    10. '#' → logprob: -10.581347465515137

Token 135: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2886512577533722
    2. 'next' → logprob: -2.28865122795105
    3. 'with' → logprob: -2.28865122795105
    4. ' with' → logprob: -3.66365122795105
    5. 'last' → logprob: -4.538651466369629
    6. ' next' → logprob: -5.788651466369629
    7. 'prev' → logprob: -6.038651466369629
    8. 'if' → logprob: -6.288651466369629
    9. '```' → logprob: -7.538651466369629
    10. ' last' → logprob: -8.163651466369629

Token 136: ' a' (ID: 261)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.009074455127120018
    2. ' ai' → logprob: -4.759074687957764
    3. 'prev' → logprob: -8.759074211120605
    4. 'out' → logprob: -9.009074211120605
    5. '(ai' → logprob: -9.759074211120605
    6. 'next' → logprob: -9.759074211120605
    7. 'a' → logprob: -10.259074211120605
    8. ' next' → logprob: -12.259074211120605
    9. ' out' → logprob: -12.509074211120605
    10. '   ' → logprob: -12.759074211120605

Token 137: ' word' (ID: 2195)
  Prédit: ' ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.6561759114265442
    2. 'ai' → logprob: -2.6561758518218994
    3. ' prev' → logprob: -2.6561758518218994
    4. 'prev' → logprob: -2.6561758518218994
    5. 'a' → logprob: -2.9061758518218994
    6. ' next' → logprob: -3.0311758518218994
    7. 'next' → logprob: -3.2811758518218994
    8. ' for' → logprob: -3.7811758518218994
    9. 'for' → logprob: -4.5311760902404785
    10. '"' → logprob: -4.5311760902404785

Token 138: ' starting' (ID: 8601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14208707213401794
    2. ' that' → logprob: -2.517086982727051
    3. ' next' → logprob: -3.767086982727051
    4. '<|end|>' → logprob: -4.892086982727051
    5. 'next' → logprob: -5.017086982727051
    6. ' =' → logprob: -5.892086982727051
    7. 'that' → logprob: -6.517086982727051
    8. '<|end|>' → logprob: -7.392086982727051
    9. ' word' → logprob: -7.517086982727051
    10. '{' → logprob: -7.517086982727051

Token 139: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.01426058541983366
    2. ' with' → logprob: -4.264260768890381
    3. 'ai' → logprob: -9.639260292053223
    4. 'from' → logprob: -11.514260292053223
    5. ' ai' → logprob: -11.764260292053223
    6. ' ' → logprob: -12.389260292053223
    7. '       ' → logprob: -12.764260292053223
    8. '   ' → logprob: -13.139260292053223
    9. '#' → logprob: -13.514260292053223
    10. '           ' → logprob: -14.264260292053223

Token 140: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.023251304402947426
    2. ' ai' → logprob: -3.7732512950897217
    3. '   ' → logprob: -13.2732515335083
    4. 'a' → logprob: -13.3982515335083
    5. '(ai' → logprob: -13.8982515335083
    6. '.ai' → logprob: -14.3982515335083
    7. '_ai' → logprob: -14.3982515335083
    8. '
' → logprob: -15.7732515335083
    9. ' ' → logprob: -16.148250579833984
    10. '       ' → logprob: -16.773250579833984

Token 141: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3416081666946411
    2. '[' → logprob: -1.4666081666946411
    3. ' =' → logprob: -3.2166080474853516
    4. '=' → logprob: -4.966608047485352
    5. ''s' → logprob: -5.091608047485352
    6. '_' → logprob: -6.841608047485352
    7. ' ' → logprob: -7.091608047485352
    8. 's' → logprob: -7.716608047485352
    9. 'import' → logprob: -8.341608047485352
    10. '_ai' → logprob: -8.466608047485352

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.375005722045898
    3. '
' → logprob: -14.500005722045898
    4. ']' → logprob: -14.750005722045898
    5. '2' → logprob: -15.250005722045898
    6. '

' → logprob: -16.0625057220459
    7. '0' → logprob: -16.4375057220459
    8. '[' → logprob: -17.0625057220459
    9. '-' → logprob: -17.3125057220459
    10. '   ' → logprob: -17.3750057220459

Token 143: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03194573521614075
    2. '   ' → logprob: -4.781945705413818
    3. '       ' → logprob: -4.906945705413818
    4. '<|end|>' → logprob: -5.531945705413818
    5. ')
' → logprob: -5.781945705413818
    6. ',' → logprob: -6.531945705413818
    7. '
' → logprob: -7.031945705413818
    8. ']' → logprob: -7.156945705413818
    9. '):
' → logprob: -7.156945705413818
    10. ' )' → logprob: -7.156945705413818

Token 144: ' not' (ID: 625)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19254328310489655
    2. '<|end|>' → logprob: -1.8175432682037354
    3. ' ' → logprob: -5.1925435066223145
    4. '        ' → logprob: -6.1925435066223145
    5. '<|end|>' → logprob: -6.4425435066223145
    6. '        
' → logprob: -6.8175435066223145
    7. '   ' → logprob: -7.9425435066223145
    8. '
' → logprob: -8.317543029785156
    9. '      ' → logprob: -8.317543029785156
    10. ',' → logprob: -8.692543029785156

Token 145: ' used' (ID: 2061)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16041706502437592
    2. ' in' → logprob: -1.910417079925537
    3. 'used' → logprob: -8.785416603088379
    4. ' used' → logprob: -10.910416603088379
    5. '
' → logprob: -11.285416603088379
    6. 'already' → logprob: -13.535416603088379
    7. '=' → logprob: -13.660416603088379
    8. 'equal' → logprob: -14.160416603088379
    9. '_used' → logprob: -14.410416603088379
    10. '_in' → logprob: -14.660416603088379

Token 146: ' yet' (ID: 5073)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022688481956720352
    2. '<|end|>' → logprob: -4.397688388824463
    3. ',' → logprob: -5.647688388824463
    4. '        
' → logprob: -6.397688388824463
    5. '<|end|>' → logprob: -7.022688388824463
    6. '_' → logprob: -7.147688388824463
    7. '   ' → logprob: -7.772688388824463
    8. '  
' → logprob: -8.272688865661621
    9. 'def' → logprob: -8.647688865661621
    10. '	' → logprob: -8.647688865661621

Token 147: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03784133493900299
    2. ' for' → logprob: -4.787841320037842
    3. 'import' → logprob: -4.912841320037842
    4. 'for' → logprob: -5.162841320037842
    5. '   ' → logprob: -5.662841320037842
    6. '<|end|>' → logprob: -5.912841320037842
    7. 'next' → logprob: -6.037841320037842
    8. ' next' → logprob: -6.287841320037842
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -6.662841320037842
    10. '
' → logprob: -6.912841320037842

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021892787888646126
    2. '<|end|>' → logprob: -4.89689302444458
    3. '
' → logprob: -5.02189302444458
    4. '        
' → logprob: -6.77189302444458
    5. '```' → logprob: -7.27189302444458
    6. '  
' → logprob: -7.39689302444458
    7. 'next' → logprob: -7.39689302444458
    8. '   ' → logprob: -7.39689302444458
    9. '<|end|>' → logprob: -7.89689302444458
    10. ' for' → logprob: -8.021892547607422

Token 149: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4428683817386627
    2. 'found' → logprob: -1.4428683519363403
    3. 'next' → logprob: -2.31786847114563
    4. 'import' → logprob: -4.067868232727051
    5. 'from' → logprob: -6.442868232727051
    6. 'start' → logprob: -6.817868232727051
    7. '#' (adapté à ' #') → logprob: -6.942868232727051
    8. 'c' → logprob: -7.567868232727051
    9. 'possible' → logprob: -7.817868232727051
    10. 'last' → logprob: -8.31786823272705

Token 150: ' because' (ID: 2236)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13199374079704285
    2. 'found' → logprob: -2.8819937705993652
    3. 'import' → logprob: -3.1319937705993652
    4. ' for' → logprob: -4.631993770599365
    5. '       ' → logprob: -5.256993770599365
    6. 'next' → logprob: -5.381993770599365
    7. 'from' → logprob: -6.006993770599365
    8. ' found' → logprob: -6.881993770599365
    9. 'possible' → logprob: -8.256993293762207
    10. ' next' → logprob: -8.881993293762207

Token 151: ' AI' (ID: 20837)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.356241375207901
    2. 'found' → logprob: -1.9812413454055786
    3. ' for' → logprob: -2.231241464614868
    4. 'for' → logprob: -3.606241464614868
    5. ' possible' → logprob: -4.606241226196289
    6. ' last' → logprob: -6.106241226196289
    7. ' prev' → logprob: -6.231241226196289
    8. '#' → logprob: -6.356241226196289
    9. ' letters' → logprob: -6.481241226196289
    10. ' next' → logprob: -6.481241226196289

Token 152: ' words' (ID: 6391)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3831619024276733
    2. '<|end|>' → logprob: -2.008162021636963
    3. 'import' → logprob: -2.133162021636963
    4. '       ' → logprob: -2.383162021636963
    5. '<|end|>' → logprob: -2.758162021636963
    6. ' for' → logprob: -3.008162021636963
    7. 'next' → logprob: -3.383162021636963
    8. 'def' → logprob: -3.758162021636963
    9. 'last' → logprob: -3.883162021636963
    10. 's' → logprob: -4.008162021636963

Token 153: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10439001023769379
    2. '<|end|>' → logprob: -2.7293899059295654
    3. 'import' → logprob: -4.6043901443481445
    4. '<|end|>' → logprob: -5.1043901443481445
    5. ',' → logprob: -5.8543901443481445
    6. ' =' → logprob: -6.1043901443481445
    7. ' for' → logprob: -6.7293901443481445
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -6.7293901443481445
    9. ' are' → logprob: -6.9793901443481445
    10. '   ' → logprob: -7.2293901443481445

Token 154: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2307085990905762
    2. '==' → logprob: -1.6057085990905762
    3. '<=' → logprob: -1.9807085990905762
    4. ' =' → logprob: -2.855708599090576
    5. ' <=' → logprob: -3.105708599090576
    6. ' is' → logprob: -3.105708599090576
    7. '       ' → logprob: -3.230708599090576
    8. ' ==' → logprob: -3.355708599090576
    9. '   ' → logprob: -3.480708599090576
    10. '>' → logprob: -3.855708599090576

Token 155: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22861599922180176
    2. '2' → logprob: -1.7286159992218018
    3. ' =' → logprob: -4.353615760803223
    4. ' is' → logprob: -5.103615760803223
    5. ' ' → logprob: -5.478615760803223
    6. 'is' → logprob: -6.353615760803223
    7. '1' → logprob: -7.103615760803223
    8. 's' → logprob: -7.978615760803223
    9. 'def' → logprob: -8.728615760803223
    10. '```' → logprob: -9.728615760803223

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2747891843318939
    2. '=' → logprob: -1.5247892141342163
    3. 'is' → logprob: -4.524789333343506
    4. '1' → logprob: -5.774789333343506
    5. ' is' → logprob: -5.899789333343506
    6. ' ' → logprob: -6.024789333343506
    7. 's' → logprob: -6.649789333343506
    8. ' =' → logprob: -7.024789333343506
    9. '```' → logprob: -8.149788856506348
    10. 'to' → logprob: -8.274788856506348

Token 157: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023868298158049583
    2. '        
' → logprob: -5.148868083953857
    3. 'for' → logprob: -5.648868083953857
    4. 'next' → logprob: -6.023868083953857
    5. '<|end|>' → logprob: -6.023868083953857
    6. 'found' → logprob: -6.273868083953857
    7. ' for' → logprob: -6.273868083953857
    8. '
' → logprob: -7.023868083953857
    9. ',' → logprob: -7.273868083953857
    10. 'import' → logprob: -7.523868083953857

Token 158: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5778756737709045
    2. 'found' → logprob: -1.5778756141662598
    3. 'import' → logprob: -2.0778756141662598
    4. '#' → logprob: -2.8278756141662598
    5. ' for' → logprob: -4.32787561416626
    6. ' found' → logprob: -4.45287561416626
    7. 'next' → logprob: -4.57787561416626
    8. 'possible' → logprob: -5.95287561416626
    9. 'from' → logprob: -6.32787561416626
    10. 'letters' → logprob: -6.82787561416626

Token 159: ' use' (ID: 1199)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8253024816513062
    2. 'for' → logprob: -0.8253024816513062
    3. '       ' → logprob: -3.3253026008605957
    4. ' can' → logprob: -3.5753026008605957
    5. 'import' → logprob: -4.075302600860596
    6. '   ' → logprob: -4.325302600860596
    7. '<|end|>' → logprob: -4.575302600860596
    8. ' have' → logprob: -5.825302600860596
    9. '<|end|>' → logprob: -6.450302600860596
    10. ' continue' → logprob: -6.825302600860596

Token 160: ' ' (ID: 220)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.329893559217453
    2. 'chr' → logprob: -1.7048935890197754
    3. ' chr' → logprob: -4.079893589019775
    4. ''a' → logprob: -4.079893589019775
    5. ' ai' → logprob: -4.079893589019775
    6. 'for' → logprob: -4.704893589019775
    7. '"' → logprob: -4.829893589019775
    8. ''' → logprob: -5.204893589019775
    9. ' two' → logprob: -5.204893589019775
    10. 'a' → logprob: -6.204893589019775

Token 161: '1' (ID: 16)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.05066249519586563
    2. 'a' → logprob: -4.425662517547607
    3. ' ai' → logprob: -5.175662517547607
    4. 'chr' → logprob: -5.175662517547607
    5. 'first' → logprob: -5.300662517547607
    6. ''a' → logprob: -5.425662517547607
    7. '"' → logprob: -5.425662517547607
    8. 'for' → logprob: -5.800662517547607
    9. 'prev' → logprob: -6.425662517547607
    10. 'next' → logprob: -6.425662517547607

Token 162: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21528753638267517
    2. ' for' → logprob: -2.340287446975708
    3. 'for' → logprob: -2.840287446975708
    4. 'import' → logprob: -4.340287685394287
    5. ' found' → logprob: -5.340287685394287
    6. 'found' → logprob: -5.340287685394287
    7. '        
' → logprob: -5.715287685394287
    8. ' next' → logprob: -5.840287685394287
    9. 'next' → logprob: -6.090287685394287
    10. '
' → logprob: -6.590287685394287

Token 163: ' words' (ID: 6391)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9065730571746826
    2. '       ' → logprob: -1.1565730571746826
    3. ' for' → logprob: -1.7815730571746826
    4. 'import' → logprob: -3.2815730571746826
    5. 'found' → logprob: -3.4065730571746826
    6. ' found' → logprob: -4.906573295593262
    7. 'letters' → logprob: -4.906573295593262
    8. 'next' → logprob: -5.281573295593262
    9. 'possible' → logprob: -5.531573295593262
    10. '        
' → logprob: -6.156573295593262

Token 164: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05459347367286682
    2. ' for' → logprob: -3.304593563079834
    3. 'for' → logprob: -4.679593563079834
    4. '        
' → logprob: -6.054593563079834
    5. ' found' → logprob: -7.179593563079834
    6. 'import' → logprob: -7.179593563079834
    7. ' next' → logprob: -7.429593563079834
    8. 'found' → logprob: -7.804593563079834
    9. '   ' → logprob: -8.179593086242676
    10. ',' → logprob: -8.429593086242676

Token 165: ' simplicity' (ID: 57516)
  Prédit: 'response'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'response' → logprob: -0.9318938851356506
    2. 'out' → logprob: -1.6818938255310059
    3. '_' → logprob: -2.181893825531006
    4. 'the' → logprob: -2.306893825531006
    5. 'next' → logprob: -3.306893825531006
    6. 'i' → logprob: -4.056893825531006
    7. 'c' → logprob: -4.056893825531006
    8. 'human' → logprob: -4.181893825531006
    9. 'answer' → logprob: -4.556893825531006
    10. 'reply' → logprob: -4.556893825531006

Token 166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09950705617666245
    2. 'next' → logprob: -3.2245070934295654
    3. ' next' → logprob: -3.3495070934295654
    4. ' for' → logprob: -5.224506855010986
    5. '   ' → logprob: -5.724506855010986
    6. '        
' → logprob: -5.724506855010986
    7. 'for' → logprob: -6.224506855010986
    8. ' last' → logprob: -7.224506855010986
    9. 'last' → logprob: -7.599506855010986
    10. ' word' → logprob: -7.599506855010986

Token 167: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3059081435203552
    2. 'import' → logprob: -2.180908203125
    3. ' for' → logprob: -2.430908203125
    4. 'next' → logprob: -3.180908203125
    5. ' next' → logprob: -4.930908203125
    6. '   ' → logprob: -5.180908203125
    7. 'from' → logprob: -5.305908203125
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -6.805908203125
    9. 'last' → logprob: -7.555908203125
    10. ' import' → logprob: -7.930908203125

Token 168: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21185855567455292
    2. 'next' → logprob: -2.0868585109710693
    3. 'import' → logprob: -3.0868585109710693
    4. 'found' → logprob: -5.211858749389648
    5. ' for' → logprob: -5.336858749389648
    6. 'from' → logprob: -5.586858749389648
    7. ' next' → logprob: -6.086858749389648
    8. 'last' → logprob: -6.461858749389648
    9. '   ' → logprob: -7.336858749389648
    10. 'candidate' → logprob: -7.586858749389648

Token 169: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.47419869899749756
    2. ' =' → logprob: -1.2241986989974976
    3. '_letter' → logprob: -3.099198818206787
    4. '=' → logprob: -3.974198818206787
    5. '_' → logprob: -4.724198818206787
    6. 'char' → logprob: -5.474198818206787
    7. 'ing' → logprob: -6.224198818206787
    8. '   ' → logprob: -7.099198818206787
    9. 'with' → logprob: -7.224198818206787
    10. '_with' → logprob: -7.349198818206787

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868723213672638
    2. '=' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.386872291564941
    4. 's' → logprob: -15.636872291564941
    5. ',' → logprob: -15.761872291564941
    6. '=

' → logprob: -15.761872291564941
    7. '_' → logprob: -16.261873245239258
    8. ' =
' → logprob: -16.386873245239258
    9. ')' → logprob: -16.761873245239258
    10. '=
' → logprob: -18.011873245239258

Token 171: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.47409430146217346
    2. ' ai' → logprob: -0.9740942716598511
    3. '(ai' → logprob: -12.22409439086914
    4. 'a' → logprob: -12.47409439086914
    5. '_ai' → logprob: -12.84909439086914
    6. 'oi' → logprob: -13.22409439086914
    7. '   ' → logprob: -13.59909439086914
    8. '.ai' → logprob: -13.84909439086914
    9. 'ui' → logprob: -14.59909439086914
    10. '-ai' → logprob: -15.22409439086914

Token 172: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00046045915223658085
    2. '[' → logprob: -7.750460624694824
    3. '=' → logprob: -10.875460624694824
    4. ' =' → logprob: -12.000460624694824
    5. ' [-' → logprob: -13.250460624694824
    6. '-' → logprob: -14.750460624694824
    7. '
' → logprob: -15.000460624694824
    8. '+' → logprob: -15.375460624694824
    9. '=-' → logprob: -15.375460624694824
    10. '   ' → logprob: -15.375460624694824

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.62501049041748
    3. ']' → logprob: -14.43751049041748
    4. '   ' → logprob: -15.62501049041748
    5. ')' → logprob: -16.000011444091797
    6. '```' → logprob: -16.500011444091797
    7. '  ' → logprob: -16.687511444091797
    8. 'len' → logprob: -16.750011444091797
    9. '
' → logprob: -16.875011444091797
    10. '(' → logprob: -17.062511444091797

Token 174: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22786478698253632
    2. ')
' → logprob: -1.8528647422790527
    3. '   ' → logprob: -4.102864742279053
    4. '")' → logprob: -4.477864742279053
    5. 'a' → logprob: -5.102864742279053
    6. '
' → logprob: -5.352864742279053
    7. '"' → logprob: -6.477864742279053
    8. '"a' → logprob: -6.852864742279053
    9. '')' → logprob: -7.227864742279053
    10. ' )' → logprob: -7.352864742279053

Token 175: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11698061227798462
    2. ' for' → logprob: -2.49198055267334
    3. 'next' → logprob: -4.49198055267334
    4. 'import' → logprob: -5.11698055267334
    5. '       ' → logprob: -5.49198055267334
    6. 'found' → logprob: -5.74198055267334
    7. 'if' → logprob: -6.99198055267334
    8. ' next' → logprob: -7.24198055267334
    9. 'c' → logprob: -7.86698055267334
    10. 'from' → logprob: -8.24198055267334

Token 176: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42410460114479065
    2. 'found' → logprob: -1.1741045713424683
    3. 'next' → logprob: -3.549104690551758
    4. 'candidate' → logprob: -6.424104690551758
    5. ' found' → logprob: -6.549104690551758
    6. 'import' → logprob: -6.549104690551758
    7. ' for' → logprob: -7.174104690551758
    8. 'while' → logprob: -7.299104690551758
    9. 'c' → logprob: -7.299104690551758
    10. 'if' → logprob: -7.674104690551758

Token 177: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29740461707115173
    2. 'found' → logprob: -1.6724046468734741
    3. 'next' → logprob: -3.2974045276641846
    4. 'candidate' → logprob: -4.297404766082764
    5. 'if' → logprob: -4.797404766082764
    6. 'word' → logprob: -5.422404766082764
    7. 'while' → logprob: -5.422404766082764
    8. 'response' → logprob: -7.047404766082764
    9. '#' → logprob: -8.172404289245605
    10. 'possible' → logprob: -8.922404289245605

Token 178: ' single' (ID: 4590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9349542856216431
    2. ':
' → logprob: -1.684954285621643
    3. '           ' → logprob: -1.934954285621643
    4. 'chars' → logprob: -2.3099541664123535
    5. 'char' → logprob: -3.6849541664123535
    6. 'chr' → logprob: -3.6849541664123535
    7. ' for' → logprob: -3.9349541664123535
    8. 'for' → logprob: -4.1849541664123535
    9. ' all' → logprob: -4.4349541664123535
    10. ' c' → logprob: -4.5599541664123535

Token 179: ' letter' (ID: 10263)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.4863223731517792
    2. '_char' → logprob: -1.1113224029541016
    3. 'letter' → logprob: -4.111322402954102
    4. '_letter' → logprob: -4.361322402954102
    5. 't' → logprob: -4.861322402954102
    6. 'etter' → logprob: -5.611322402954102
    7. '=' → logprob: -5.861322402954102
    8. 'ton' → logprob: -6.361322402954102
    9. 'for' → logprob: -6.611322402954102
    10. ' =' → logprob: -6.611322402954102

Token 180: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31986650824546814
    2. ' for' → logprob: -1.6948665380477905
    3. 'c' → logprob: -3.694866418838501
    4. ' =' → logprob: -3.944866418838501
    5. '=' → logprob: -4.56986665725708
    6. 'word' → logprob: -4.56986665725708
    7. 'chr' → logprob: -5.69486665725708
    8. 'ch' → logprob: -5.81986665725708
    9. 's' → logprob: -5.81986665725708
    10. '       ' → logprob: -6.06986665725708

Token 181: ' start' (ID: 1604)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.06439489871263504
    2. ' '' → logprob: -4.064394950866699
    3. 'a' → logprob: -4.564394950866699
    4. ''' → logprob: -4.564394950866699
    5. ' ord' → logprob: -4.564394950866699
    6. ' a' → logprob: -5.189394950866699
    7. 'ord' → logprob: -6.064394950866699
    8. ''z' → logprob: -6.064394950866699
    9. 'chr' → logprob: -7.189394950866699
    10. 'start' → logprob: -7.564394950866699

Token 182: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.12216027081012726
    2. ' =' → logprob: -2.9971601963043213
    3. '=' → logprob: -4.2471604347229
    4. 'char' → logprob: -4.6221604347229
    5. 'for' → logprob: -4.8721604347229
    6. '_c' → logprob: -5.1221604347229
    7. '       ' → logprob: -5.1221604347229
    8. 'a' → logprob: -5.6221604347229
    9. '_chr' → logprob: -5.6221604347229
    10. '   ' → logprob: -5.7471604347229

Token 183: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7277518510818481
    2. '       ' → logprob: -0.9777518510818481
    3. 'for' → logprob: -2.8527517318725586
    4. ' to' → logprob: -3.4777517318725586
    5. '<|end|>' → logprob: -4.477751731872559
    6. ' =' → logprob: -4.602751731872559
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.227751731872559
    8. '   ' → logprob: -5.352751731872559
    9. 'a' → logprob: -5.727751731872559
    10. ':' → logprob: -5.727751731872559

Token 184: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.014867969788610935
    2. 'z' → logprob: -4.264867782592773
    3. ' z' → logprob: -8.014867782592773
    4. ''' → logprob: -8.389867782592773
    5. ' '' → logprob: -9.764867782592773
    6. '"' → logprob: -9.889867782592773
    7. '‘z' → logprob: -11.389867782592773
    8. ''y' → logprob: -11.514867782592773
    9. ''s' → logprob: -12.014867782592773
    10. ' ' → logprob: -12.764867782592773

Token 185: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.000692420348059386
    2. ' z' → logprob: -7.750692367553711
    3. ''z' → logprob: -8.250692367553711
    4. ''' → logprob: -14.875692367553711
    5. '	z' → logprob: -15.750692367553711
    6. '{' → logprob: -17.12569236755371
    7. 'zz' → logprob: -17.75069236755371
    8. '-z' → logprob: -17.87569236755371
    9. '‘z' → logprob: -17.87569236755371
    10. '"' → logprob: -18.25069236755371

Token 186: ''
' (ID: 2207)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40183761715888977
    2. 'for' → logprob: -1.4018375873565674
    3. ':' → logprob: -3.2768375873565674
    4. '
' → logprob: -4.6518378257751465
    5. ':
' → logprob: -4.7768378257751465
    6. '       ' → logprob: -4.7768378257751465
    7. ',' → logprob: -5.4018378257751465
    8. '   ' → logprob: -5.4018378257751465
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.6518378257751465
    10. ')' → logprob: -5.9018378257751465

Token 187: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.027362311258912086
    2. 'for' → logprob: -4.02736234664917
    3. '       ' → logprob: -5.15236234664917
    4. '<|end|>' → logprob: -6.65236234664917
    5. ' ' → logprob: -7.40236234664917
    6. '   ' → logprob: -7.65236234664917
    7. ' 
' → logprob: -8.527361869812012
    8. ':' → logprob: -9.027361869812012
    9. '	for' → logprob: -9.652361869812012
    10. '    
' → logprob: -9.652361869812012

Token 188: ' found' (ID: 2491)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.525667130947113
    2. ' for' → logprob: -0.900667130947113
    3. 'found' (adapté à ' found') → logprob: -6.650667190551758
    4. ' found' → logprob: -7.025667190551758
    5. 'import' → logprob: -8.150667190551758
    6. 'from' → logprob: -11.025667190551758
    7. '       ' → logprob: -11.150667190551758
    8. ' import' → logprob: -11.775667190551758
    9. '   ' → logprob: -11.900667190551758
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -13.150667190551758

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12795215845108032
    2. '=' → logprob: -2.1279520988464355
    3. '_' → logprob: -7.2529520988464355
    4. ':' → logprob: -8.127952575683594
    5. '_=' → logprob: -11.502952575683594
    6. '=False' → logprob: -12.377952575683594
    7. '_found' → logprob: -13.627952575683594
    8. '_char' → logprob: -13.877952575683594
    9. '=True' → logprob: -14.127952575683594
    10. ' ' → logprob: -14.377952575683594

Token 190: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. 'None' → logprob: -18.625911712646484
    4. '=False' → logprob: -20.375911712646484
    5. '(False' → logprob: -21.125911712646484
    6. '   ' → logprob: -22.375911712646484
    7. 'false' → logprob: -22.625911712646484
    8. 'F' → logprob: -22.750911712646484
    9. 'True' → logprob: -23.125911712646484
    10. '.False' → logprob: -24.125911712646484

Token 191: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03163833171129227
    2. '       ' → logprob: -3.6566383838653564
    3. 'for' → logprob: -5.281638145446777
    4. '<|end|>' → logprob: -9.406638145446777
    5. '	for' → logprob: -9.656638145446777
    6. ' ' → logprob: -10.906638145446777
    7. '   ' → logprob: -11.281638145446777
    8. '        
' → logprob: -11.781638145446777
    9. ' in' → logprob: -11.781638145446777
    10. ' 
' → logprob: -12.156638145446777

Token 192: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13200753927230835
    2. 'for' → logprob: -2.757007598876953
    3. '<|end|>' → logprob: -3.757007598876953
    4. ' 
' → logprob: -4.007007598876953
    5. '       ' → logprob: -5.007007598876953
    6. ' ' → logprob: -5.507007598876953
    7. '
' → logprob: -5.757007598876953
    8. '  
' → logprob: -6.507007598876953
    9. '    
' → logprob: -7.132007598876953
    10. '        
' → logprob: -7.507007598876953

Token 193: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02633548341691494
    2. 'for' (adapté à ' for') → logprob: -3.6513354778289795
    3. '	for' → logprob: -11.026335716247559
    4. ' ' → logprob: -11.901335716247559
    5. '   ' → logprob: -12.526335716247559
    6. '<|end|>' → logprob: -13.151335716247559
    7. '       ' → logprob: -13.526335716247559
    8. ' f' → logprob: -13.901335716247559
    9. ' from' → logprob: -14.026335716247559
    10. ' 
' → logprob: -14.776335716247559

Token 194: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009711120277643204
    2. 'ch' → logprob: -5.009711265563965
    3. ' c' → logprob: -6.009711265563965
    4. 'char' → logprob: -7.884711265563965
    5. 'i' → logprob: -9.259711265563965
    6. '   ' → logprob: -10.884711265563965
    7. 'ord' → logprob: -10.884711265563965
    8. 'chr' → logprob: -11.884711265563965
    9. 'code' → logprob: -12.009711265563965
    10. ' ch' → logprob: -12.259711265563965

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011139190755784512
    2. 'in' → logprob: -4.511139392852783
    3. 'range' → logprob: -10.011138916015625
    4. ' ' → logprob: -10.386138916015625
    5. ' range' → logprob: -12.886138916015625
    6. 'import' → logprob: -13.136138916015625
    7. 'from' → logprob: -13.636138916015625
    8. 'r' → logprob: -13.636138916015625
    9. '  ' → logprob: -13.761138916015625
    10. 's' → logprob: -14.136138916015625

Token 196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28134939074516296
    2. ' range' → logprob: -1.4063494205474854
    3. '(range' → logprob: -8.906349182128906
    4. '"' → logprob: -11.281349182128906
    5. '   ' → logprob: -11.406349182128906
    6. ' ' → logprob: -11.656349182128906
    7. 'chr' → logprob: -11.781349182128906
    8. 'map' → logprob: -11.781349182128906
    9. '	range' → logprob: -12.531349182128906
    10. 'rang' → logprob: -12.906349182128906

Token 197: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.000726252153981477
    2. 'ord' → logprob: -7.250726222991943
    3. '(' → logprob: -11.125726699829102
    4. ' ord' → logprob: -14.125726699829102
    5. ' (' → logprob: -14.625726699829102
    6. '(start' → logprob: -16.0007266998291
    7. '97' → logprob: -16.5007266998291
    8. '   ' → logprob: -16.6257266998291
    9. '(o' → logprob: -17.1257266998291
    10. '_ord' → logprob: -18.1257266998291

Token 198: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00013405199570115656
    2. 'start' → logprob: -9.500134468078613
    3. '('' → logprob: -10.375134468078613
    4. '(' → logprob: -11.000134468078613
    5. ' (' → logprob: -11.750134468078613
    6. ',start' → logprob: -13.750134468078613
    7. '=start' → logprob: -14.250134468078613
    8. '(ord' → logprob: -14.250134468078613
    9. ' start' → logprob: -14.750134468078613
    10. ')' → logprob: -16.000133514404297

Token 199: '_char' (ID: 23398)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.02720896154642105
    2. 'start' → logprob: -3.6522090435028076
    3. '=start' → logprob: -7.9022088050842285
    4. 'c' → logprob: -8.402209281921387
    5. 'f' → logprob: -9.527209281921387
    6. 'a' → logprob: -9.777209281921387
    7. '[start' → logprob: -10.277209281921387
    8. '_char' → logprob: -10.277209281921387
    9. ',start' → logprob: -11.277209281921387
    10. 'e' → logprob: -11.402209281921387

Token 200: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08107597380876541
    2. '),' → logprob: -2.58107590675354
    3. ' ,' → logprob: -6.206076145172119
    4. ' ),' → logprob: -9.581075668334961
    5. '(ord' → logprob: -10.331075668334961
    6. 'ord' → logprob: -10.456075668334961
    7. '),(' → logprob: -11.956075668334961
    8. '},' → logprob: -11.956075668334961
    9. '   ' → logprob: -12.081075668334961
    10. ',),' → logprob: -12.456075668334961

Token 201: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.01153238769620657
    2. '123' → logprob: -4.886532306671143
    3. ' ord' → logprob: -5.636532306671143
    4. '(ord' → logprob: -8.0115327835083
    5. ' ' → logprob: -11.6365327835083
    6. '122' → logprob: -12.2615327835083
    7. '   ' → logprob: -12.5115327835083
    8. 'ords' → logprob: -13.3865327835083
    9. 'z' → logprob: -14.2615327835083
    10. 'ordinal' → logprob: -15.0115327835083

Token 202: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.451116051815916e-05
    2. '("' → logprob: -10.750024795532227
    3. '(' → logprob: -13.250024795532227
    4. 'a' → logprob: -15.000024795532227
    5. ' ('' → logprob: -15.375024795532227
    6. ''' → logprob: -15.625024795532227
    7. 'z' → logprob: -15.875024795532227
    8. ''a' → logprob: -16.000024795532227
    9. ''z' → logprob: -16.125024795532227
    10. '(('' → logprob: -17.000024795532227

Token 203: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.000158842682139948
    2. ''z' → logprob: -8.75015926361084
    3. '{' → logprob: -16.000158309936523
    4. ''' → logprob: -16.125158309936523
    5. '{'' → logprob: -17.625158309936523
    6. '('' → logprob: -17.625158309936523
    7. ' z' → logprob: -18.250158309936523
    8. '	z' → logprob: -18.500158309936523
    9. '‘z' → logprob: -19.000158309936523
    10. 'za' → logprob: -19.250158309936523

Token 204: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004859665408730507
    2. ')+' → logprob: -5.754859447479248
    3. ')' → logprob: -7.004859447479248
    4. '")+' → logprob: -7.254859447479248
    5. ''+' → logprob: -10.879859924316406
    6. 'a' → logprob: -10.879859924316406
    7. '")' → logprob: -11.254859924316406
    8. 'z' → logprob: -11.754859924316406
    9. ''' → logprob: -13.254859924316406
    10. '+' → logprob: -13.754859924316406

Token 205: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043283142149448395
    2. ' +' → logprob: -3.168283224105835
    3. ')+' → logprob: -8.293283462524414
    4. ')' → logprob: -10.543283462524414
    5. '):
' → logprob: -13.043283462524414
    6. '()+' → logprob: -13.668283462524414
    7. '   ' → logprob: -14.168283462524414
    8. '+
' → logprob: -14.293283462524414
    9. '):' → logprob: -14.668283462524414
    10. '+)' → logprob: -14.793283462524414

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015229015843942761
    2. ' ' → logprob: -8.875152587890625
    3. ')' → logprob: -12.125152587890625
    4. '   ' → logprob: -12.750152587890625
    5. '):
' → logprob: -13.125152587890625
    6. '```' → logprob: -14.125152587890625
    7. '(' → logprob: -15.000152587890625
    8. '
' → logprob: -16.000152587890625
    9. '``' → logprob: -16.000152587890625
    10. '),' → logprob: -16.125152587890625

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31336715817451477
    2. '):
' → logprob: -1.3133671283721924
    3. '):
' → logprob: -9.563366889953613
    4. ':' → logprob: -11.438366889953613
    5. ' ):' → logprob: -11.563366889953613
    6. ' ):
' → logprob: -12.063366889953613
    7. '   ' → logprob: -12.688366889953613
    8. ')' → logprob: -12.813366889953613
    9. '):

' → logprob: -13.313366889953613
    10. '       ' → logprob: -14.438366889953613

Token 208: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4091266691684723
    2. '           ' → logprob: -1.65912663936615
    3. ':' → logprob: -2.4091267585754395
    4. ' :' → logprob: -4.1591267585754395
    5. ' if' → logprob: -4.2841267585754395
    6. '   ' → logprob: -4.7841267585754395
    7. ':
' → logprob: -5.5341267585754395
    8. '):' → logprob: -6.2841267585754395
    9. '<|end|>' → logprob: -6.4091267585754395
    10. '):
' → logprob: -6.5341267585754395

Token 209: ' w' (ID: 286)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.218641996383667
    2. '           ' → logprob: -1.343641996383667
    3. ' if' → logprob: -2.093641996383667
    4. ' char' → logprob: -2.843641996383667
    5. ' word' → logprob: -2.968641996383667
    6. ' 
' → logprob: -3.093641996383667
    7. 'token' → logprob: -3.718641996383667
    8. ' w' → logprob: -4.218642234802246
    9. '       ' → logprob: -4.218642234802246
    10. ' s' → logprob: -4.218642234802246

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2759484648704529
    2. ' =' → logprob: -1.9009485244750977
    3. 'ord' → logprob: -2.4009485244750977
    4. 'ords' → logprob: -6.900948524475098
    5. '   ' → logprob: -10.775948524475098
    6. 'd' → logprob: -10.775948524475098
    7. 'word' → logprob: -12.150948524475098
    8. 'a' → logprob: -12.525948524475098
    9. '_ord' → logprob: -12.650948524475098
    10. '```' → logprob: -13.025948524475098

Token 211: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.011050770990550518
    2. ' chr' → logprob: -4.511050701141357
    3. '(chr' → logprob: -12.761051177978516
    4. 'char' → logprob: -16.886051177978516
    5. '_chr' → logprob: -17.136051177978516
    6. ' ' → logprob: -17.386051177978516
    7. '   ' → logprob: -18.261051177978516
    8. 'Chr' → logprob: -18.386051177978516
    9. 'ch' → logprob: -18.636051177978516
    10. '  ' → logprob: -19.136051177978516

Token 212: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.4378848391061183e-05
    2. 'c' → logprob: -11.750014305114746
    3. '(' → logprob: -12.000014305114746
    4. ' (' → logprob: -15.125014305114746
    5. '©' → logprob: -17.125015258789062
    6. '(
' → logprob: -17.625015258789062
    7. ')c' → logprob: -18.250015258789062
    8. '	c' → logprob: -19.375015258789062
    9. '```' → logprob: -19.375015258789062
    10. '   ' → logprob: -19.500015258789062

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001453686272725463
    2. ' )' → logprob: -7.126453876495361
    3. ')
' → logprob: -7.376453876495361
    4. '))' → logprob: -11.876453399658203
    5. ')
' → logprob: -12.626453399658203
    6. '")' → logprob: -13.001453399658203
    7. ')

' → logprob: -13.501453399658203
    8. ' )
' → logprob: -13.751453399658203
    9. '   ' → logprob: -13.876453399658203
    10. ')+' → logprob: -14.001453399658203

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020647337660193443
    2. '<|end|>' → logprob: -6.3770647048950195
    3. ' if' → logprob: -8.87706470489502
    4. '<|end|>' → logprob: -9.75206470489502
    5. 'if' → logprob: -10.00206470489502
    6. '
' → logprob: -10.50206470489502
    7. '       ' → logprob: -10.87706470489502
    8. '            
' → logprob: -11.00206470489502
    9. '          ' → logprob: -11.25206470489502
    10. '	       ' → logprob: -11.50206470489502

Token 215: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5559535622596741
    2. 'if' (adapté à ' if') → logprob: -1.4309535026550293
    3. ' if' → logprob: -1.6809535026550293
    4. '<|end|>' → logprob: -6.930953502655029
    5. '<|end|>' → logprob: -10.055953979492188
    6. '          ' → logprob: -10.180953979492188
    7. ' ' → logprob: -10.805953979492188
    8. ')' → logprob: -11.180953979492188
    9. '       ' → logprob: -11.180953979492188
    10. '   ' → logprob: -11.430953979492188

Token 216: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0336780920624733
    2. ' w' → logprob: -3.4086780548095703
    3. 'len' → logprob: -11.03367805480957
    4. ' ' → logprob: -12.28367805480957
    5. 'not' → logprob: -12.40867805480957
    6. '   ' → logprob: -13.65867805480957
    7. '	w' → logprob: -14.09617805480957
    8. 'c' → logprob: -14.22117805480957
    9. ' not' → logprob: -14.28367805480957
    10. '(w' → logprob: -14.47117805480957

Token 217: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02631574124097824
    2. 'not' → logprob: -3.651315689086914
    3. ')' → logprob: -11.151315689086914
    4. '	not' → logprob: -14.401315689086914
    5. 'and' → logprob: -16.526315689086914
    6. '(not' → logprob: -16.776315689086914
    7. ' )' → logprob: -17.151315689086914
    8. ']' → logprob: -17.151315689086914
    9. ' ' → logprob: -17.151315689086914
    10. '   ' → logprob: -17.276315689086914

Token 218: ' in' (ID: 306)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6353031396865845
    2. ' used' → logprob: -0.8853031396865845
    3. ' in' → logprob: -2.885303020477295
    4. 'in' → logprob: -6.385303020477295
    5. '_used' → logprob: -9.885303497314453
    6. '.used' → logprob: -10.760303497314453
    7. ' ' → logprob: -11.260303497314453
    8. ')' → logprob: -12.135303497314453
    9. '   ' → logprob: -12.385303497314453
    10. 'ed' → logprob: -12.510303497314453

Token 219: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0004882152716163546
    2. ' used' → logprob: -7.62548828125
    3. '   ' → logprob: -16.50048828125
    4. '.used' → logprob: -16.62548828125
    5. 'use' → logprob: -18.75048828125
    6. ' ' → logprob: -19.00048828125
    7. '_used' → logprob: -19.12548828125
    8. '
' → logprob: -19.25048828125
    9. 'Used' → logprob: -19.50048828125
    10. 'user' → logprob: -19.62548828125

Token 220: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3433806300163269
    2. ':' → logprob: -1.3433806896209717
    3. ' and' → logprob: -3.5933806896209717
    4. '           ' → logprob: -7.093380451202393
    5. '):
' → logprob: -7.093380451202393
    6. '               ' → logprob: -8.46838092803955
    7. 'and' → logprob: -9.21838092803955
    8. '):' → logprob: -9.46838092803955
    9. ':

' → logprob: -10.84338092803955
    10. ')' → logprob: -10.96838092803955

Token 221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03933744132518768
    2. '           ' → logprob: -3.414337396621704
    3. ':
' → logprob: -5.789337635040283
    4. ':' → logprob: -6.539337635040283
    5. '<|end|>' → logprob: -8.164337158203125
    6. ' out' → logprob: -8.914337158203125
    7. '       ' → logprob: -9.039337158203125
    8. ' and' → logprob: -9.164337158203125
    9. '):
' → logprob: -9.164337158203125
    10. '              ' → logprob: -9.789337158203125

Token 222: ' out' (ID: 842)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11674962192773819
    2. ' out' → logprob: -2.3667495250701904
    3. 'out' (adapté à ' out') → logprob: -4.2417497634887695
    4. '
' → logprob: -7.2417497634887695
    5. '                   ' → logprob: -7.2417497634887695
    6. '           ' → logprob: -8.11674976348877
    7. '                
' → logprob: -9.49174976348877
    8. '   ' → logprob: -10.36674976348877
    9. '```' → logprob: -10.36674976348877
    10. '       ' → logprob: -10.99174976348877

Token 223: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.125017166137695
    3. ' (' → logprob: -13.125017166137695
    4. '(f' → logprob: -15.125017166137695
    5. 'w' → logprob: -15.500017166137695
    6. '(word' → logprob: -16.000017166137695
    7. '('' → logprob: -17.625017166137695
    8. '((' → logprob: -18.000017166137695
    9. '("("' → logprob: -18.375017166137695
    10. '(
' → logprob: -19.000017166137695

Token 224: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7283693552017212
    2. ')' → logprob: -1.3533693552017212
    3. ')
' → logprob: -1.3533693552017212
    4. ')return' → logprob: -8.85336971282959
    5. '           ' → logprob: -9.22836971282959
    6. '<|end|>' → logprob: -9.60336971282959
    7. '                   ' → logprob: -9.85336971282959
    8. '
' → logprob: -10.22836971282959
    9. '<|end|>' → logprob: -10.22836971282959
    10. ')
' → logprob: -10.35336971282959

Token 225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.590104698669165e-05
    2. '           ' → logprob: -10.000085830688477
    3. '<|end|>' → logprob: -11.500085830688477
    4. '              ' → logprob: -11.750085830688477
    5. '                   ' → logprob: -12.125085830688477
    6. '                
' → logprob: -12.250085830688477
    7. '                ' → logprob: -12.625085830688477
    8. '       ' → logprob: -12.750085830688477
    9. 'found' → logprob: -13.250085830688477
    10. '             ' → logprob: -13.625085830688477

Token 226: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.030698295682668686
    2. 'found' → logprob: -4.155698299407959
    3. ' prev' → logprob: -4.780698299407959
    4. '               ' → logprob: -5.155698299407959
    5. ' found' → logprob: -9.0306978225708
    6. '       ' → logprob: -9.0306978225708
    7. '           ' → logprob: -9.4056978225708
    8. '   ' → logprob: -9.7806978225708
    9. '	prev' → logprob: -11.2806978225708
    10. 'used' → logprob: -12.4056978225708

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '=w' → logprob: -17.686967849731445
    4. 'w' → logprob: -18.061967849731445
    5. '＝' → logprob: -18.436967849731445
    6. '.=' → logprob: -18.936967849731445
    7. ' ' → logprob: -20.061967849731445
    8. ',' → logprob: -20.686967849731445
    9. '=}' → logprob: -21.061967849731445
    10. '=

' → logprob: -21.186967849731445

Token 228: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002614550176076591
    2. ' w' → logprob: -8.250261306762695
    3. '	w' → logprob: -16.750261306762695
    4. 'out' → logprob: -18.000261306762695
    5. '(w' → logprob: -18.125261306762695
    6. '=w' → logprob: -18.750261306762695
    7. ''w' → logprob: -19.125261306762695
    8. '   ' → logprob: -19.125261306762695
    9. 'word' → logprob: -19.250261306762695
    10. '_w' → logprob: -19.375261306762695

Token 229: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.3795937522663735e-05
    2. '                   ' → logprob: -12.25002384185791
    3. '           ' → logprob: -12.50002384185791
    4. '              ' → logprob: -12.62502384185791
    5. '                
' → logprob: -12.75002384185791
    6. 'break' → logprob: -13.00002384185791
    7. '<|end|>' → logprob: -13.25002384185791
    8. '                ' → logprob: -13.62502384185791
    9. '
' → logprob: -14.37502384185791
    10. 'found' → logprob: -14.62502384185791

Token 230: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4855663721391466e-05
    2. '                
' → logprob: -12.625015258789062
    3. '              ' → logprob: -12.625015258789062
    4. '                   ' → logprob: -13.750015258789062
    5. '                ' → logprob: -13.750015258789062
    6. 'break' → logprob: -13.750015258789062
    7. 'return' → logprob: -14.000015258789062
    8. '<|end|>' → logprob: -14.000015258789062
    9. '           ' → logprob: -14.250015258789062
    10. '			' → logprob: -14.625015258789062

Token 231: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.42015543580055237
    2. '               ' → logprob: -1.17015540599823
    3. ' found' → logprob: -3.4201555252075195
    4. '	found' → logprob: -11.04515552520752
    5. '           ' → logprob: -12.42015552520752
    6. 'break' → logprob: -12.92015552520752
    7. '       ' → logprob: -13.29515552520752
    8. '              ' → logprob: -13.67015552520752
    9. '(found' → logprob: -13.92015552520752
    10. '   ' → logprob: -14.04515552520752

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4801735281944275
    2. '=' → logprob: -0.9801735281944275
    3. '=True' → logprob: -5.105173587799072
    4. '=true' → logprob: -12.105173110961914
    5. '=False' → logprob: -12.605173110961914
    6. ' ' → logprob: -13.230173110961914
    7. 'True' → logprob: -14.855173110961914
    8. ' True' → logprob: -15.105173110961914
    9. '(True' → logprob: -15.355173110961914
    10. 's' → logprob: -15.730173110961914

Token 233: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002613358374219388
    2. ' True' → logprob: -8.250261306762695
    3. '=True' → logprob: -17.375261306762695
    4. '(True' → logprob: -18.125261306762695
    5. '   ' → logprob: -18.875261306762695
    6. 'true' → logprob: -19.625261306762695
    7. '
' → logprob: -20.875261306762695
    8. '           ' → logprob: -21.000261306762695
    9. '               ' → logprob: -21.500261306762695
    10. '       ' → logprob: -22.125261306762695

Token 234: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.438573680294212e-06
    2. '       ' → logprob: -13.250005722045898
    3. '           ' → logprob: -13.375005722045898
    4. '		       ' → logprob: -14.375005722045898
    5. '			' → logprob: -15.000005722045898
    6. '   ' → logprob: -15.000005722045898
    7. '	           ' → logprob: -15.500005722045898
    8. '                   ' → logprob: -15.625005722045898
    9. '<|end|>' → logprob: -15.875005722045898
    10. '                
' → logprob: -16.0000057220459

Token 235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.107425062713446e-06
    2. '       ' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.750006675720215
    4. '           ' → logprob: -14.250006675720215
    5. '			' → logprob: -15.750006675720215
    6. '                   ' → logprob: -16.12500762939453
    7. '		       ' → logprob: -16.25000762939453
    8. '```' → logprob: -17.00000762939453
    9. 'break' → logprob: -17.25000762939453
    10. '	           ' → logprob: -17.50000762939453

Token 236: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009454108658246696
    2. 'break' (adapté à ' break') → logprob: -7.000945568084717
    3. ' break' → logprob: -10.375945091247559
    4. '   ' → logprob: -14.250945091247559
    5. '	break' → logprob: -14.250945091247559
    6. '			' → logprob: -14.250945091247559
    7. '                   ' → logprob: -14.875945091247559
    8. '           ' → logprob: -15.000945091247559
    9. '       ' → logprob: -16.250946044921875
    10. '	           ' → logprob: -16.625946044921875

Token 237: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004846538067795336
    2. 'if' → logprob: -8.625484466552734
    3. '   ' → logprob: -8.875484466552734
    4. ' if' → logprob: -9.500484466552734
    5. '
' → logprob: -10.125484466552734
    6. '<|end|>' → logprob: -10.625484466552734
    7. 'If' → logprob: -11.750484466552734
    8. '        
' → logprob: -12.625484466552734
    9. '    
' → logprob: -13.375484466552734
    10. '```' → logprob: -13.500484466552734

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006341627449728549
    2. ' if' → logprob: -7.62563419342041
    3. 'if' → logprob: -9.12563419342041
    4. '   ' → logprob: -10.62563419342041
    5. 'If' → logprob: -12.37563419342041
    6. '<|end|>' → logprob: -13.12563419342041
    7. '```' → logprob: -13.37563419342041
    8. 'else' → logprob: -14.25063419342041
    9. '
' → logprob: -14.37563419342041
    10. '           ' → logprob: -14.50063419342041

Token 239: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007523577660322189
    2. '   ' → logprob: -5.757523536682129
    3. ' if' → logprob: -5.757523536682129
    4. 'if' (adapté à ' if') → logprob: -6.757523536682129
    5. '      ' → logprob: -13.007523536682129
    6. '     ' → logprob: -13.132523536682129
    7. ' ' → logprob: -13.132523536682129
    8. '    ' → logprob: -13.382523536682129
    9. 'If' → logprob: -13.632523536682129
    10. '           ' → logprob: -13.632523536682129

Token 240: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5759557485580444
    2. ' not' → logprob: -0.8259557485580444
    3. 'found' → logprob: -11.575955390930176
    4. ' found' → logprob: -13.200955390930176
    5. '   ' → logprob: -13.450955390930176
    6. '!' → logprob: -13.450955390930176
    7. '	not' → logprob: -13.575955390930176
    8. 'used' → logprob: -14.825955390930176
    9. '(not' → logprob: -15.450955390930176
    10. ' ' → logprob: -16.075956344604492

Token 241: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.47407862544059753
    2. ' found' → logprob: -0.9740786552429199
    3. ' used' → logprob: -14.349078178405762
    4. 'used' → logprob: -14.974078178405762
    5. '	found' → logprob: -15.099078178405762
    6. '(found' → logprob: -15.224078178405762
    7. ' ' → logprob: -16.599079132080078
    8. '_found' → logprob: -16.724079132080078
    9. 'Found' → logprob: -17.599079132080078
    10. ' ' → logprob: -18.474079132080078

Token 242: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6370489001274109
    2. ':' → logprob: -0.7620489001274109
    3. '():
' → logprob: -5.512048721313477
    4. '():' → logprob: -8.387048721313477
    5. '):
' → logprob: -10.012048721313477
    6. '           ' → logprob: -10.262048721313477
    7. '       ' → logprob: -10.387048721313477
    8. '):' → logprob: -10.637048721313477
    9. ':

' → logprob: -11.637048721313477
    10. '   ' → logprob: -11.762048721313477

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.508795976638794
    2. 'err' → logprob: -1.133795976638794
    3. '       ' → logprob: -2.758795976638794
    4. '   ' → logprob: -4.633795738220215
    5. ' err' → logprob: -5.633795738220215
    6. '               ' → logprob: -9.508795738220215
    7. ' ' → logprob: -10.133795738220215
    8. '          ' → logprob: -10.383795738220215
    9. '```' → logprob: -10.508795738220215
    10. 'break' → logprob: -10.758795738220215

Token 244: ' #' (ID: 1069)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' → logprob: -0.005346651654690504
    2. 'break' → logprob: -5.630346775054932
    3. 'out' → logprob: -6.880346775054932
    4. 'exit' → logprob: -8.005346298217773
    5. 'return' → logprob: -8.880346298217773
    6. 'print' → logprob: -8.880346298217773
    7. '#' (adapté à ' #') → logprob: -9.755346298217773
    8. 'sys' → logprob: -10.880346298217773
    9. '   ' → logprob: -11.880346298217773
    10. ' err' → logprob: -12.130346298217773

Token 245: ' no' (ID: 860)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'err' → logprob: -0.005735740065574646
    2. ' err' → logprob: -5.880735874176025
    3. '           ' → logprob: -7.130735874176025
    4. '       ' → logprob: -7.255735874176025
    5. 'out' → logprob: -7.505735874176025
    6. '#' → logprob: -7.880735874176025
    7. '   ' → logprob: -8.380735397338867
    8. 'break' → logprob: -9.505735397338867
    9. 'for' → logprob: -10.255735397338867
    10. '               ' → logprob: -10.255735397338867

Token 246: ' new' (ID: 620)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.839539110660553
    2. ' more' → logprob: -1.5895390510559082
    3. 'out' → logprob: -2.714539051055908
    4. 'err' → logprob: -3.214539051055908
    5. ' out' → logprob: -3.214539051055908
    6. 'more' → logprob: -3.464539051055908
    7. 'used' → logprob: -4.089539051055908
    8. ' used' → logprob: -4.089539051055908
    9. ' valid' → logprob: -4.214539051055908
    10. 'available' → logprob: -4.214539051055908

Token 247: ' word' (ID: 2195)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.2533968687057495
    2. 'word' → logprob: -1.6283968687057495
    3. ' words' → logprob: -3.878396987915039
    4. 'valid' → logprob: -6.253396987915039
    5. ' word' → logprob: -6.628396987915039
    6. 'used' → logprob: -7.128396987915039
    7. ' valid' → logprob: -7.253396987915039
    8. 'letters' → logprob: -7.378396987915039
    9. 'available' → logprob: -8.128396987915039
    10. 'single' → logprob: -8.378396987915039

Token 248: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03390190005302429
    2. '       ' → logprob: -5.033901691436768
    3. '()' → logprob: -5.033901691436768
    4. '               ' → logprob: -5.658901691436768
    5. '()
' → logprob: -5.783901691436768
    6. 'out' → logprob: -6.033901691436768
    7. ' =' → logprob: -6.158901691436768
    8. '=' → logprob: -6.533901691436768
    9. ':
' → logprob: -6.783901691436768
    10. 'available' → logprob: -6.783901691436768

Token 249: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01140641886740923
    2. '               ' → logprob: -5.261406421661377
    3. '       ' → logprob: -5.386406421661377
    4. ',' → logprob: -7.386406421661377
    5. '   ' → logprob: -8.261405944824219
    6. 'err' → logprob: -8.886405944824219
    7. ':
' → logprob: -9.136405944824219
    8. '()' → logprob: -9.511405944824219
    9. ' out' → logprob: -10.011405944824219
    10. '():
' → logprob: -10.386405944824219

Token 250: 'should' (ID: 10618)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8637428283691406
    2. ')
' → logprob: -0.8637428283691406
    3. '           ' → logprob: -2.2387428283691406
    4. '),' → logprob: -3.4887428283691406
    5. ' )
' → logprob: -4.988742828369141
    6. ',' → logprob: -5.738742828369141
    7. '
' → logprob: -5.988742828369141
    8. ' )' → logprob: -6.113742828369141
    9. '               ' → logprob: -7.363742828369141
    10. ' out' → logprob: -7.488742828369141

Token 251: ' not' (ID: 625)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16254886984825134
    2. ' be' → logprob: -3.537548780441284
    3. 'not' → logprob: -3.537548780441284
    4. 'out' → logprob: -3.787548780441284
    5. ' not' → logprob: -4.037549018859863
    6. ')' → logprob: -4.287549018859863
    7. 'be' → logprob: -4.537549018859863
    8. '               ' → logprob: -4.662549018859863
    9. ' out' → logprob: -5.162549018859863
    10. 'err' → logprob: -5.912549018859863

Token 252: ' happen' (ID: 5659)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.22081848978996277
    2. ' happen' → logprob: -2.345818519592285
    3. 'occur' → logprob: -2.720818519592285
    4. ')' → logprob: -3.720818519592285
    5. 'be' → logprob: -4.845818519592285
    6. ' be' → logprob: -6.595818519592285
    7. ' occur' → logprob: -6.720818519592285
    8. ')
' → logprob: -7.970818519592285
    9. '```' → logprob: -8.470818519592285
    10. '   ' → logprob: -8.720818519592285

Token 253: ' within' (ID: 3518)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6906022429466248
    2. ')
' → logprob: -0.9406022429466248
    3. ')' → logprob: -2.3156023025512695
    4. '),' → logprob: -5.1906023025512695
    5. ',' → logprob: -6.1906023025512695
    6. '       ' → logprob: -7.0656023025512695
    7. ' in' → logprob: -8.19060230255127
    8. '               ' → logprob: -9.06560230255127
    9. ' here' → logprob: -9.19060230255127
    10. ' because' → logprob: -9.19060230255127

Token 254: ' limits' (ID: 22406)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9373375773429871
    2. 'problem' → logprob: -1.6873376369476318
    3. 'constraints' → logprob: -1.6873376369476318
    4. 'this' → logprob: -2.312337636947632
    5. 'given' → logprob: -3.062337636947632
    6. ' constraints' → logprob: -4.187337398529053
    7. 'a' → logprob: -4.437337398529053
    8. ' given' → logprob: -4.562337398529053
    9. 'alphabet' → logprob: -4.812337398529053
    10. ' the' → logprob: -4.937337398529053

Token 255: '),' (ID: 936)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7392364144325256
    2. ')' → logprob: -1.2392363548278809
    3. ')
' → logprob: -1.4892363548278809
    4. '       ' → logprob: -5.114236354827881
    5. '               ' → logprob: -7.739236354827881
    6. '),' → logprob: -7.739236354827881
    7. ',' → logprob: -8.739236831665039
    8. '   ' → logprob: -9.239236831665039
    9. '```' → logprob: -10.114236831665039
    10. '):
' → logprob: -10.364236831665039

Token 256: ' call' (ID: 2421)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'err' → logprob: -0.05161361023783684
    2. ' err' → logprob: -3.1766135692596436
    3. '           ' → logprob: -5.551613807678223
    4. '   ' → logprob: -6.176613807678223
    5. 'break' → logprob: -6.926613807678223
    6. '       ' → logprob: -7.676613807678223
    7. 'out' → logprob: -7.801613807678223
    8. '               ' → logprob: -7.926613807678223
    9. ' break' → logprob: -9.301613807678223
    10. ' out' → logprob: -9.426613807678223

Token 257: ' error' (ID: 2915)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'err' → logprob: -5.455048449221067e-05
    2. ' err' → logprob: -10.250054359436035
    3. '
' → logprob: -11.375054359436035
    4. '(err' → logprob: -12.000054359436035
    5. '   ' → logprob: -13.625054359436035
    6. '	err' → logprob: -16.75005531311035
    7. '           ' → logprob: -17.00005531311035
    8. 'error' → logprob: -17.25005531311035
    9. '       ' → logprob: -17.37505531311035
    10. '
' → logprob: -17.50005531311035

Token 258: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03679497912526131
    2. '()
' → logprob: -3.411794900894165
    3. '           ' → logprob: -5.786795139312744
    4. '();' → logprob: -11.036794662475586
    5. '()\' → logprob: -11.411794662475586
    6. '(),' → logprob: -11.536794662475586
    7. '()
' → logprob: -11.911794662475586
    8. '()

' → logprob: -12.036794662475586
    9. '():
' → logprob: -12.161794662475586
    10. '               ' → logprob: -12.536794662475586

Token 259: 'won' (ID: 36391)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027126003056764603
    2. 'err' → logprob: -3.9021260738372803
    3. ')
' → logprob: -5.527125835418701
    4. '()' → logprob: -6.152125835418701
    5. '())' → logprob: -8.15212631225586
    6. '()
' → logprob: -9.52712631225586
    7. ' err' → logprob: -10.77712631225586
    8. ' )' → logprob: -11.02712631225586
    9. '())
' → logprob: -11.52712631225586
    10. '))' → logprob: -11.65212631225586

Token 260: ''t' (ID: 1507)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23444078862667084
    2. 'd' → logprob: -2.359440803527832
    3. 'def' → logprob: -3.234440803527832
    4. '())' → logprob: -3.484440803527832
    5. '()' → logprob: -4.734440803527832
    6. 't' → logprob: -5.109440803527832
    7. '!' → logprob: -5.234440803527832
    8. '')' → logprob: -5.484440803527832
    9. '   ' → logprob: -5.734440803527832
    10. ')
' → logprob: -6.484440803527832

Token 261: ' happen' (ID: 5659)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -1.237067461013794
    2. 'exit' → logprob: -1.237067461013794
    3. ')' → logprob: -1.487067461013794
    4. 'print' → logprob: -2.237067461013794
    5. 'continue' → logprob: -2.862067461013794
    6. 'return' → logprob: -5.487067222595215
    7. 'terminate' → logprob: -5.737067222595215
    8. 'break' → logprob: -5.737067222595215
    9. 'err' → logprob: -5.987067222595215
    10. 'output' → logprob: -6.112067222595215

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024362405762076378
    2. '()' → logprob: -4.649362564086914
    3. '           ' → logprob: -4.774362564086914
    4. ')
' → logprob: -6.149362564086914
    5. '())' → logprob: -6.399362564086914
    6. '       ' → logprob: -6.524362564086914
    7. '               ' → logprob: -8.024362564086914
    8. '   ' → logprob: -8.024362564086914
    9. '()
' → logprob: -9.774362564086914
    10. '())
' → logprob: -10.274362564086914

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010463688522577286
    2. '       ' → logprob: -5.385463714599609
    3. 'err' → logprob: -5.510463714599609
    4. '   ' → logprob: -6.635463714599609
    5. '               ' → logprob: -8.01046371459961
    6. ' err' → logprob: -9.01046371459961
    7. '          ' → logprob: -12.38546371459961
    8. '(err' → logprob: -12.88546371459961
    9. ' ' → logprob: -13.51046371459961
    10. '```' → logprob: -13.76046371459961

Token 264: ' err' (ID: 2962)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' (adapté à ' err') → logprob: -0.0007509016431868076
    2. ' err' → logprob: -7.62575101852417
    3. '           ' → logprob: -8.250750541687012
    4. '       ' → logprob: -14.500750541687012
    5. '               ' → logprob: -15.000750541687012
    6. '(err' → logprob: -15.250750541687012
    7. '   ' → logprob: -15.500750541687012
    8. '
' → logprob: -16.125751495361328
    9. '.err' → logprob: -16.125751495361328
    10. '```' → logprob: -16.250751495361328

Token 265: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.579495235811919e-05
    2. '()
' → logprob: -9.50009536743164
    3. '())' → logprob: -11.00009536743164
    4. '()]' → logprob: -13.50009536743164
    5. '()`' → logprob: -13.75009536743164
    6. '()

' → logprob: -14.37509536743164
    7. ' ()' → logprob: -15.25009536743164
    8. '()\' → logprob: -15.62509536743164
    9. '()}' → logprob: -15.62509536743164
    10. '()
' → logprob: -16.00009536743164

Token 266: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5852512717247009
    2. 'if' → logprob: -1.2102513313293457
    3. '<|end|>' → logprob: -2.5852513313293457
    4. '```' → logprob: -3.0852513313293457
    5. '#' → logprob: -4.960251331329346
    6. ')' → logprob: -5.460251331329346
    7. '<|end|>' → logprob: -6.085251331329346
    8. 'out' → logprob: -6.210251331329346
    9. '
' → logprob: -6.460251331329346
    10. '(main' → logprob: -6.960251331329346

Token 267: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011050059460103512
    2. '__' → logprob: -4.511050224304199
    3. ' ' → logprob: -13.5110502243042
    4. 'name' → logprob: -15.1360502243042
    5. ' ' → logprob: -15.5110502243042
    6. '_name' → logprob: -15.6360502243042
    7. ' name' → logprob: -15.7610502243042
    8. '_' → logprob: -16.636049270629883
    9. '___' → logprob: -17.511049270629883
    10. '/__' → logprob: -17.886049270629883

Token 268: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.043930668383836746
    2. '==' → logprob: -3.418930768966675
    3. ' ==' → logprob: -4.668930530548096
    4. 'name' → logprob: -7.668930530548096
    5. ' __' → logprob: -9.293931007385254
    6. '.__' → logprob: -9.293931007385254
    7. '=="' → logprob: -9.543931007385254
    8. '__.__' → logprob: -9.668931007385254
    9. '__.' → logprob: -10.918931007385254
    10. 'main' → logprob: -11.168931007385254

Token 269: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001222508290084079
    2. '==' → logprob: -9.1251220703125
    3. '__.__' → logprob: -12.3751220703125
    4. ' ==' → logprob: -12.6251220703125
    5. '=="' → logprob: -12.8751220703125
    6. '"' → logprob: -13.8751220703125
    7. '__.' → logprob: -14.3751220703125
    8. '___' → logprob: -14.3751220703125
    9. '____' → logprob: -15.1251220703125
    10. '__["' → logprob: -15.3751220703125

Token 270: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21844622492790222
    2. '==' → logprob: -1.7184462547302246
    3. '__' → logprob: -4.593446254730225
    4. '=="' → logprob: -5.093446254730225
    5. '=='' → logprob: -7.468446254730225
    6. '"' → logprob: -11.343445777893066
    7. ' =="' → logprob: -11.593445777893066
    8. '===' → logprob: -12.218445777893066
    9. '<|end|>' → logprob: -12.343445777893066
    10. '=' → logprob: -12.343445777893066

Token 271: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0019391077803447843
    2. ''' → logprob: -6.251939296722412
    3. ' "__' → logprob: -11.626938819885254
    4. '__' → logprob: -13.626938819885254
    5. '"user' → logprob: -15.751938819885254
    6. ''"' → logprob: -16.25193977355957
    7. '"name' → logprob: -17.12693977355957
    8. ' '__' → logprob: -17.37693977355957
    9. '"'' → logprob: -17.50193977355957
    10. '"class' → logprob: -18.00193977355957

Token 272: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.633853652398102e-05
    2. 'name' → logprob: -10.750056266784668
    3. '"' → logprob: -11.000056266784668
    4. ''' → logprob: -11.125056266784668
    5. '__' → logprob: -12.750056266784668
    6. ' main' → logprob: -15.375056266784668
    7. 'built' → logprob: -16.250057220458984
    8. '_main' → logprob: -16.500057220458984
    9. ''name' → logprob: -17.000057220458984
    10. '(main' → logprob: -17.250057220458984

Token 273: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12794776260852814
    2. '__' → logprob: -2.1279478073120117
    3. '__.' → logprob: -7.627947807312012
    4. '__':
' → logprob: -7.752947807312012
    5. '__.__' → logprob: -9.502947807312012
    6. '__["' → logprob: -11.002947807312012
    7. '__:' → logprob: -11.877947807312012
    8. '__",' → logprob: -13.877947807312012
    9. '__("' → logprob: -14.127947807312012
    10. '"' → logprob: -14.127947807312012

Token 274: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.007000227924436331
    2. '   ' → logprob: -5.13200044631958
    3. ' main' → logprob: -7.13200044631958
    4. '	main' → logprob: -8.506999969482422
    5. '_main' → logprob: -10.381999969482422
    6. '    
' → logprob: -10.506999969482422
    7. '__' → logprob: -12.756999969482422
    8. ' ' → logprob: -13.381999969482422
    9. '<|end|>' → logprob: -13.631999969482422
    10. '  ' → logprob: -13.881999969482422

Token 275: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -7.941850526549388e-06
    2. ' main' → logprob: -11.750007629394531
    3. '	main' → logprob: -19.00000762939453
    4. '   ' → logprob: -21.87500762939453
    5. '.main' → logprob: -23.37500762939453
    6. '(main' → logprob: -23.75000762939453
    7. '_main' → logprob: -24.12500762939453
    8. 'try' → logprob: -25.12500762939453
    9. '```' → logprob: -25.37500762939453
    10. 'Main' → logprob: -25.50000762939453

Token 276: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 84
Tokens correctement prédits (1ère position, avec adaptation): 94
Tokens correctement prédits (top 10): 197
Précision stricte (1ère position): 30.66%
Précision adaptée (1ère position): 34.31%
Précision (top 10): 71.90%
================================================================================
